; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a/[inter]libavfilter--vf_blend.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a/[inter]libavfilter--vf_blend.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVFilterPad = type { i8*, i32, %struct.AVFrame* (%struct.AVFilterLink*, i32, i32)*, %struct.AVFrame* (%struct.AVFilterLink*, i32)*, i32 (%struct.AVFilterLink*, %struct.AVFrame*)*, i32 (%struct.AVFilterLink*)*, i32 (%struct.AVFilterLink*)*, i32 (%struct.AVFilterLink*)*, i32, i32 }
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVRational = type { i32, i32 }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVFilterLink = type { %struct.AVFilterContext*, %struct.AVFilterPad*, %struct.AVFilterContext*, %struct.AVFilterPad*, i32, i32, i32, %struct.AVRational, i64, i32, i32, %struct.AVRational, %struct.AVFilterFormats*, %struct.AVFilterFormats*, %struct.AVFilterFormats*, %struct.AVFilterFormats*, %struct.AVFilterChannelLayouts*, %struct.AVFilterChannelLayouts*, i32, i32, %struct.AVFilterGraph*, i64, i64, i32, %struct.AVRational, %struct.AVFrame*, i32, i32, i32, i32, i32, i64, i64, i8*, i32, %struct.AVBufferRef*, [61440 x i8] }
%struct.AVFilterContext = type { %struct.AVClass*, %struct.AVFilter*, i8*, %struct.AVFilterPad*, %struct.AVFilterLink**, i32, %struct.AVFilterPad*, %struct.AVFilterLink**, i32, i8*, %struct.AVFilterGraph*, i32, %struct.AVFilterInternal*, %struct.AVFilterCommand*, i8*, i8*, double*, i32, %struct.AVBufferRef*, i32, i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVFilter = type { i8*, i8*, %struct.AVFilterPad*, %struct.AVFilterPad*, %struct.AVClass*, i32, i32 (%struct.AVFilterContext*)*, i32 (%struct.AVFilterContext*)*, i32 (%struct.AVFilterContext*, %struct.AVDictionary**)*, void (%struct.AVFilterContext*)*, i32 (%struct.AVFilterContext*)*, i32, i32, %struct.AVFilter*, i32 (%struct.AVFilterContext*, i8*, i8*, i8*, i32, i32)*, i32 (%struct.AVFilterContext*, i8*)*, i32 (%struct.AVFilterContext*)* }
%struct.AVFilterInternal = type { i32 (%struct.AVFilterContext*, i32 (%struct.AVFilterContext*, i8*, i32, i32)*, i8*, i32*, i32)* }
%struct.AVFilterCommand = type { double, i8*, i8*, i32, %struct.AVFilterCommand* }
%struct.AVFilterFormats = type { i32, i32*, i32, %struct.AVFilterFormats*** }
%struct.AVFilterChannelLayouts = type { i64*, i32, i8, i8, i32, %struct.AVFilterChannelLayouts*** }
%struct.AVFilterGraph = type { %struct.AVClass*, %struct.AVFilterContext**, i32, i8*, i8*, i32, i32, %struct.AVFilterGraphInternal*, i8*, i32 (%struct.AVFilterContext*, i32 (%struct.AVFilterContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i8*, %struct.AVFilterLink**, i32, i32 }
%struct.AVFilterGraphInternal = type { i8*, i32 (%struct.AVFilterContext*, i32 (%struct.AVFilterContext*, i8*, i32, i32)*, i8*, i32*, i32)*, %struct.FFFrameQueueGlobal }
%struct.FFFrameQueueGlobal = type { i8 }
%struct.FilterParams = type { i32, double, %struct.AVExpr*, i8*, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* }
%struct.AVExpr = type opaque
%struct.BlendContext = type { %struct.AVClass*, %struct.FFFrameSync, i32, i32, i32, i8*, i32, double, i32, [4 x %struct.FilterParams], i32, %struct.AVFrame* }
%struct.FFFrameSync = type { %struct.AVClass*, %struct.AVFilterContext*, i32, %struct.AVRational, i64, i32 (%struct.FFFrameSync*)*, i8*, i32, i32, i8, i8, %struct.FFFrameSyncIn*, i32, i32, i32 }
%struct.FFFrameSyncIn = type { i32, i32, %struct.AVRational, %struct.AVFrame*, %struct.AVFrame*, i64, i64, i8, i8, i32 }
%struct.AVPixFmtDescriptor = type { i8*, i8, i8, i8, i64, [4 x %struct.AVComponentDescriptor], i8* }
%struct.AVComponentDescriptor = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ThreadData = type { %struct.AVFrame*, %struct.AVFrame*, %struct.AVFrame*, %struct.AVFilterLink*, i32, i32, i32, %struct.FilterParams* }

@.str = private unnamed_addr constant [6 x i8] c"blend\00", align 1
@.str.1 = private unnamed_addr constant [40 x i8] c"Blend two video frames into each other.\00", align 1
@blend_inputs = internal constant [3 x %struct.AVFilterPad] [%struct.AVFilterPad { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i32 0, i32 0), i32 0, %struct.AVFrame* (%struct.AVFilterLink*, i32, i32)* null, %struct.AVFrame* (%struct.AVFilterLink*, i32)* null, i32 (%struct.AVFilterLink*, %struct.AVFrame*)* null, i32 (%struct.AVFilterLink*)* null, i32 (%struct.AVFilterLink*)* null, i32 (%struct.AVFilterLink*)* null, i32 0, i32 0 }, %struct.AVFilterPad { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i32 0, i32 0), i32 0, %struct.AVFrame* (%struct.AVFilterLink*, i32, i32)* null, %struct.AVFrame* (%struct.AVFilterLink*, i32)* null, i32 (%struct.AVFilterLink*, %struct.AVFrame*)* null, i32 (%struct.AVFilterLink*)* null, i32 (%struct.AVFilterLink*)* null, i32 (%struct.AVFilterLink*)* null, i32 0, i32 0 }, %struct.AVFilterPad zeroinitializer], align 16
@blend_outputs = internal constant [2 x %struct.AVFilterPad] [%struct.AVFilterPad { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i32 0, i32 0), i32 0, %struct.AVFrame* (%struct.AVFilterLink*, i32, i32)* null, %struct.AVFrame* (%struct.AVFilterLink*, i32)* null, i32 (%struct.AVFilterLink*, %struct.AVFrame*)* null, i32 (%struct.AVFilterLink*)* null, i32 (%struct.AVFilterLink*)* null, i32 (%struct.AVFilterLink*)* @config_output, i32 0, i32 0 }, %struct.AVFilterPad zeroinitializer], align 16
@blend_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* getelementptr inbounds ([51 x %struct.AVOption], [51 x %struct.AVOption]* bitcast (<{ %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption }>* @blend_options to [51 x %struct.AVOption]*), i32 0, i32 0), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* @blend_child_next, %struct.AVClass* (%struct.AVClass*)* @blend_child_class_next, i32 7, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@ff_vf_blend = global %struct.AVFilter { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i32 0, i32 0), %struct.AVFilterPad* getelementptr inbounds ([3 x %struct.AVFilterPad], [3 x %struct.AVFilterPad]* @blend_inputs, i32 0, i32 0), %struct.AVFilterPad* getelementptr inbounds ([2 x %struct.AVFilterPad], [2 x %struct.AVFilterPad]* @blend_outputs, i32 0, i32 0), %struct.AVClass* @blend_class, i32 131076, i32 (%struct.AVFilterContext*)* @blend_framesync_preinit, i32 (%struct.AVFilterContext*)* @init, i32 (%struct.AVFilterContext*, %struct.AVDictionary**)* null, void (%struct.AVFilterContext*)* @uninit, i32 (%struct.AVFilterContext*)* @query_formats, i32 328, i32 0, %struct.AVFilter* null, i32 (%struct.AVFilterContext*, i8*, i8*, i8*, i32, i32)* null, i32 (%struct.AVFilterContext*, i8*)* null, i32 (%struct.AVFilterContext*)* @activate }, align 8
@.str.2 = private unnamed_addr constant [7 x i8] c"tblend\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"Blend successive frames.\00", align 1
@tblend_inputs = internal constant [2 x %struct.AVFilterPad] [%struct.AVFilterPad { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i32 0, i32 0), i32 0, %struct.AVFrame* (%struct.AVFilterLink*, i32, i32)* null, %struct.AVFrame* (%struct.AVFilterLink*, i32)* null, i32 (%struct.AVFilterLink*, %struct.AVFrame*)* @tblend_filter_frame, i32 (%struct.AVFilterLink*)* null, i32 (%struct.AVFilterLink*)* null, i32 (%struct.AVFilterLink*)* null, i32 0, i32 0 }, %struct.AVFilterPad zeroinitializer], align 16
@tblend_outputs = internal constant [2 x %struct.AVFilterPad] [%struct.AVFilterPad { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i32 0, i32 0), i32 0, %struct.AVFrame* (%struct.AVFilterLink*, i32, i32)* null, %struct.AVFrame* (%struct.AVFilterLink*, i32)* null, i32 (%struct.AVFilterLink*, %struct.AVFrame*)* null, i32 (%struct.AVFilterLink*)* null, i32 (%struct.AVFilterLink*)* null, i32 (%struct.AVFilterLink*)* @config_output, i32 0, i32 0 }, %struct.AVFilterPad zeroinitializer], align 16
@tblend_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* getelementptr inbounds ([51 x %struct.AVOption], [51 x %struct.AVOption]* bitcast (<{ %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption }>* @tblend_options to [51 x %struct.AVOption]*), i32 0, i32 0), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 7, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@ff_vf_tblend = global %struct.AVFilter { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i32 0, i32 0), %struct.AVFilterPad* getelementptr inbounds ([2 x %struct.AVFilterPad], [2 x %struct.AVFilterPad]* @tblend_inputs, i32 0, i32 0), %struct.AVFilterPad* getelementptr inbounds ([2 x %struct.AVFilterPad], [2 x %struct.AVFilterPad]* @tblend_outputs, i32 0, i32 0), %struct.AVClass* @tblend_class, i32 131076, i32 (%struct.AVFilterContext*)* null, i32 (%struct.AVFilterContext*)* @init, i32 (%struct.AVFilterContext*, %struct.AVDictionary**)* null, void (%struct.AVFilterContext*)* @uninit, i32 (%struct.AVFilterContext*)* @query_formats, i32 328, i32 0, %struct.AVFilter* null, i32 (%struct.AVFilterContext*, i8*, i8*, i8*, i32, i32)* null, i32 (%struct.AVFilterContext*, i8*)* null, i32 (%struct.AVFilterContext*)* null }, align 8
@.str.4 = private unnamed_addr constant [4 x i8] c"top\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"bottom\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.7 = private unnamed_addr constant [37 x i8] c"inputs must be of same pixel format\0A\00", align 1
@.str.8 = private unnamed_addr constant [121 x i8] c"First input link %s parameters (size %dx%d) do not match the corresponding second input link %s parameters (size %dx%d)\0A\00", align 1
@var_names = internal constant [13 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i32 0, i32 0), i8* null], align 16
@.str.9 = private unnamed_addr constant [2 x i8] c"X\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"Y\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"W\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"H\00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c"SW\00", align 1
@.str.14 = private unnamed_addr constant [3 x i8] c"SH\00", align 1
@.str.15 = private unnamed_addr constant [2 x i8] c"T\00", align 1
@.str.16 = private unnamed_addr constant [2 x i8] c"N\00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] c"A\00", align 1
@.str.18 = private unnamed_addr constant [2 x i8] c"B\00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"TOP\00", align 1
@.str.20 = private unnamed_addr constant [7 x i8] c"BOTTOM\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"c0_mode\00", align 1
@.str.22 = private unnamed_addr constant [28 x i8] c"set component #0 blend mode\00", align 1
@.str.23 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@.str.24 = private unnamed_addr constant [8 x i8] c"c1_mode\00", align 1
@.str.25 = private unnamed_addr constant [28 x i8] c"set component #1 blend mode\00", align 1
@.str.26 = private unnamed_addr constant [8 x i8] c"c2_mode\00", align 1
@.str.27 = private unnamed_addr constant [28 x i8] c"set component #2 blend mode\00", align 1
@.str.28 = private unnamed_addr constant [8 x i8] c"c3_mode\00", align 1
@.str.29 = private unnamed_addr constant [28 x i8] c"set component #3 blend mode\00", align 1
@.str.30 = private unnamed_addr constant [9 x i8] c"all_mode\00", align 1
@.str.31 = private unnamed_addr constant [34 x i8] c"set blend mode for all components\00", align 1
@.str.32 = private unnamed_addr constant [9 x i8] c"addition\00", align 1
@.str.33 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.34 = private unnamed_addr constant [12 x i8] c"addition128\00", align 1
@.str.35 = private unnamed_addr constant [11 x i8] c"grainmerge\00", align 1
@.str.36 = private unnamed_addr constant [4 x i8] c"and\00", align 1
@.str.37 = private unnamed_addr constant [8 x i8] c"average\00", align 1
@.str.38 = private unnamed_addr constant [5 x i8] c"burn\00", align 1
@.str.39 = private unnamed_addr constant [7 x i8] c"darken\00", align 1
@.str.40 = private unnamed_addr constant [11 x i8] c"difference\00", align 1
@.str.41 = private unnamed_addr constant [14 x i8] c"difference128\00", align 1
@.str.42 = private unnamed_addr constant [13 x i8] c"grainextract\00", align 1
@.str.43 = private unnamed_addr constant [7 x i8] c"divide\00", align 1
@.str.44 = private unnamed_addr constant [6 x i8] c"dodge\00", align 1
@.str.45 = private unnamed_addr constant [10 x i8] c"exclusion\00", align 1
@.str.46 = private unnamed_addr constant [10 x i8] c"extremity\00", align 1
@.str.47 = private unnamed_addr constant [7 x i8] c"freeze\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"glow\00", align 1
@.str.49 = private unnamed_addr constant [10 x i8] c"hardlight\00", align 1
@.str.50 = private unnamed_addr constant [8 x i8] c"hardmix\00", align 1
@.str.51 = private unnamed_addr constant [5 x i8] c"heat\00", align 1
@.str.52 = private unnamed_addr constant [8 x i8] c"lighten\00", align 1
@.str.53 = private unnamed_addr constant [12 x i8] c"linearlight\00", align 1
@.str.54 = private unnamed_addr constant [9 x i8] c"multiply\00", align 1
@.str.55 = private unnamed_addr constant [12 x i8] c"multiply128\00", align 1
@.str.56 = private unnamed_addr constant [9 x i8] c"negation\00", align 1
@.str.57 = private unnamed_addr constant [7 x i8] c"normal\00", align 1
@.str.58 = private unnamed_addr constant [3 x i8] c"or\00", align 1
@.str.59 = private unnamed_addr constant [8 x i8] c"overlay\00", align 1
@.str.60 = private unnamed_addr constant [8 x i8] c"phoenix\00", align 1
@.str.61 = private unnamed_addr constant [9 x i8] c"pinlight\00", align 1
@.str.62 = private unnamed_addr constant [8 x i8] c"reflect\00", align 1
@.str.63 = private unnamed_addr constant [7 x i8] c"screen\00", align 1
@.str.64 = private unnamed_addr constant [10 x i8] c"softlight\00", align 1
@.str.65 = private unnamed_addr constant [9 x i8] c"subtract\00", align 1
@.str.66 = private unnamed_addr constant [11 x i8] c"vividlight\00", align 1
@.str.67 = private unnamed_addr constant [4 x i8] c"xor\00", align 1
@.str.68 = private unnamed_addr constant [8 x i8] c"c0_expr\00", align 1
@.str.69 = private unnamed_addr constant [34 x i8] c"set color component #0 expression\00", align 1
@.str.70 = private unnamed_addr constant [8 x i8] c"c1_expr\00", align 1
@.str.71 = private unnamed_addr constant [34 x i8] c"set color component #1 expression\00", align 1
@.str.72 = private unnamed_addr constant [8 x i8] c"c2_expr\00", align 1
@.str.73 = private unnamed_addr constant [34 x i8] c"set color component #2 expression\00", align 1
@.str.74 = private unnamed_addr constant [8 x i8] c"c3_expr\00", align 1
@.str.75 = private unnamed_addr constant [34 x i8] c"set color component #3 expression\00", align 1
@.str.76 = private unnamed_addr constant [9 x i8] c"all_expr\00", align 1
@.str.77 = private unnamed_addr constant [40 x i8] c"set expression for all color components\00", align 1
@.str.78 = private unnamed_addr constant [11 x i8] c"c0_opacity\00", align 1
@.str.79 = private unnamed_addr constant [31 x i8] c"set color component #0 opacity\00", align 1
@.str.80 = private unnamed_addr constant [11 x i8] c"c1_opacity\00", align 1
@.str.81 = private unnamed_addr constant [31 x i8] c"set color component #1 opacity\00", align 1
@.str.82 = private unnamed_addr constant [11 x i8] c"c2_opacity\00", align 1
@.str.83 = private unnamed_addr constant [31 x i8] c"set color component #2 opacity\00", align 1
@.str.84 = private unnamed_addr constant [11 x i8] c"c3_opacity\00", align 1
@.str.85 = private unnamed_addr constant [31 x i8] c"set color component #3 opacity\00", align 1
@.str.86 = private unnamed_addr constant [12 x i8] c"all_opacity\00", align 1
@.str.87 = private unnamed_addr constant [37 x i8] c"set opacity for all color components\00", align 1
@blend_options = internal constant <{ %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption }> <{ %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.22, i32 0, i32 0), i32 152, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 3.200000e+01, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.25, i32 0, i32 0), i32 192, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 3.200000e+01, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.27, i32 0, i32 0), i32 232, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 3.200000e+01, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.29, i32 0, i32 0), i32 272, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 3.200000e+01, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.31, i32 0, i32 0), i32 128, i32 1, %union.anon { i64 -1 }, double -1.000000e+00, double 3.200000e+01, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 28 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 28 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 3 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 4 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 5 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 6 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 7 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 7 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 8 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 9 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 10 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 32 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 31 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 27 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 11 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 25 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 30 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 12 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 26 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 13 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 29 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 14 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 15 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 16 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 17 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 18 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 19 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 20 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 21 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 22 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.66, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 23 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 24 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.69, i32 0, i32 0), i32 176, i32 5, { i8* } zeroinitializer, double -1.280000e+02, double 1.270000e+02, i32 65552, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.71, i32 0, i32 0), i32 216, i32 5, { i8* } zeroinitializer, double -1.280000e+02, double 1.270000e+02, i32 65552, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.72, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.73, i32 0, i32 0), i32 256, i32 5, { i8* } zeroinitializer, double -1.280000e+02, double 1.270000e+02, i32 65552, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.75, i32 0, i32 0), i32 296, i32 5, { i8* } zeroinitializer, double -1.280000e+02, double 1.270000e+02, i32 65552, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.77, i32 0, i32 0), i32 120, i32 5, { i8* } zeroinitializer, double -1.280000e+02, double 1.270000e+02, i32 65552, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.78, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.79, i32 0, i32 0), i32 160, i32 3, { double } { double 1.000000e+00 }, double 0.000000e+00, double 1.000000e+00, i32 65552, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.81, i32 0, i32 0), i32 200, i32 3, { double } { double 1.000000e+00 }, double 0.000000e+00, double 1.000000e+00, i32 65552, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.83, i32 0, i32 0), i32 240, i32 3, { double } { double 1.000000e+00 }, double 0.000000e+00, double 1.000000e+00, i32 65552, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.85, i32 0, i32 0), i32 280, i32 3, { double } { double 1.000000e+00 }, double 0.000000e+00, double 1.000000e+00, i32 65552, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.87, i32 0, i32 0), i32 136, i32 3, { double } { double 1.000000e+00 }, double 0.000000e+00, double 1.000000e+00, i32 65552, i8* null }, %struct.AVOption zeroinitializer }>, align 16
@query_formats.pix_fmts = internal constant [44 x i32] [i32 81, i32 80, i32 33, i32 14, i32 32, i32 13, i32 12, i32 140, i32 5, i32 31, i32 4, i32 0, i32 7, i32 6, i32 73, i32 113, i32 8, i32 64, i32 66, i32 70, i32 154, i32 89, i32 91, i32 93, i32 77, i32 166, i32 171, i32 125, i32 129, i32 133, i32 156, i32 137, i32 164, i32 169, i32 47, i32 49, i32 51, i32 95, i32 97, i32 99, i32 79, i32 115, i32 30, i32 -1], align 16
@tblend_options = internal constant <{ %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption }> <{ %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.22, i32 0, i32 0), i32 152, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 3.200000e+01, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.25, i32 0, i32 0), i32 192, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 3.200000e+01, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.27, i32 0, i32 0), i32 232, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 3.200000e+01, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.29, i32 0, i32 0), i32 272, i32 1, %union.anon zeroinitializer, double 0.000000e+00, double 3.200000e+01, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.31, i32 0, i32 0), i32 128, i32 1, %union.anon { i64 -1 }, double -1.000000e+00, double 3.200000e+01, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 1 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 28 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 28 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 2 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 3 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 4 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 5 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 6 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 7 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 7 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 8 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 9 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 10 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 32 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 31 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 27 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 11 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 25 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 30 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 12 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 26 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 13 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 29 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 14 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 15 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 16 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 17 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 18 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 19 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 20 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 21 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 22 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.66, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 23 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, %struct.AVOption { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 10, %union.anon { i64 24 }, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0) }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.69, i32 0, i32 0), i32 176, i32 5, { i8* } zeroinitializer, double -1.280000e+02, double 1.270000e+02, i32 65552, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.71, i32 0, i32 0), i32 216, i32 5, { i8* } zeroinitializer, double -1.280000e+02, double 1.270000e+02, i32 65552, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.72, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.73, i32 0, i32 0), i32 256, i32 5, { i8* } zeroinitializer, double -1.280000e+02, double 1.270000e+02, i32 65552, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.75, i32 0, i32 0), i32 296, i32 5, { i8* } zeroinitializer, double -1.280000e+02, double 1.270000e+02, i32 65552, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.77, i32 0, i32 0), i32 120, i32 5, { i8* } zeroinitializer, double -1.280000e+02, double 1.270000e+02, i32 65552, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.78, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.79, i32 0, i32 0), i32 160, i32 3, { double } { double 1.000000e+00 }, double 0.000000e+00, double 1.000000e+00, i32 65552, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.81, i32 0, i32 0), i32 200, i32 3, { double } { double 1.000000e+00 }, double 0.000000e+00, double 1.000000e+00, i32 65552, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.83, i32 0, i32 0), i32 240, i32 3, { double } { double 1.000000e+00 }, double 0.000000e+00, double 1.000000e+00, i32 65552, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.85, i32 0, i32 0), i32 280, i32 3, { double } { double 1.000000e+00 }, double 0.000000e+00, double 1.000000e+00, i32 65552, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.87, i32 0, i32 0), i32 136, i32 3, { double } { double 1.000000e+00 }, double 0.000000e+00, double 1.000000e+00, i32 65552, i8* null }, %struct.AVOption zeroinitializer }>, align 16

; Function Attrs: nounwind uwtable
define void @ff_blend_init(%struct.FilterParams* %param, i32 %depth) #0 !dbg !881 {
entry:
  %param.addr = alloca %struct.FilterParams*, align 8
  %depth.addr = alloca i32, align 4
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !904, metadata !905), !dbg !906
  store i32 %depth, i32* %depth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %depth.addr, metadata !907, metadata !905), !dbg !908
  %0 = load i32, i32* %depth.addr, align 4, !dbg !909
  switch i32 %0, label %sw.epilog303 [
    i32 8, label %sw.bb
    i32 10, label %sw.bb69
    i32 12, label %sw.bb147
    i32 16, label %sw.bb225
  ], !dbg !910

sw.bb:                                            ; preds = %entry
  %1 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !911
  %mode = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %1, i32 0, i32 0, !dbg !913
  %2 = load i32, i32* %mode, align 8, !dbg !913
  switch i32 %2, label %sw.epilog [
    i32 1, label %sw.bb1
    i32 28, label %sw.bb2
    i32 2, label %sw.bb4
    i32 3, label %sw.bb6
    i32 4, label %sw.bb8
    i32 5, label %sw.bb10
    i32 6, label %sw.bb12
    i32 7, label %sw.bb14
    i32 8, label %sw.bb16
    i32 9, label %sw.bb18
    i32 10, label %sw.bb20
    i32 32, label %sw.bb22
    i32 31, label %sw.bb24
    i32 27, label %sw.bb26
    i32 11, label %sw.bb28
    i32 25, label %sw.bb30
    i32 30, label %sw.bb32
    i32 12, label %sw.bb34
    i32 26, label %sw.bb36
    i32 13, label %sw.bb38
    i32 29, label %sw.bb40
    i32 14, label %sw.bb42
    i32 0, label %sw.bb44
    i32 15, label %sw.bb49
    i32 16, label %sw.bb51
    i32 17, label %sw.bb53
    i32 18, label %sw.bb55
    i32 19, label %sw.bb57
    i32 20, label %sw.bb59
    i32 21, label %sw.bb61
    i32 22, label %sw.bb63
    i32 23, label %sw.bb65
    i32 24, label %sw.bb67
  ], !dbg !914

sw.bb1:                                           ; preds = %sw.bb
  %3 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !915
  %blend = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %3, i32 0, i32 4, !dbg !917
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_addition_8bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend, align 8, !dbg !918
  br label %sw.epilog, !dbg !919

sw.bb2:                                           ; preds = %sw.bb
  %4 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !920
  %blend3 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %4, i32 0, i32 4, !dbg !921
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_grainmerge_8bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend3, align 8, !dbg !922
  br label %sw.epilog, !dbg !923

sw.bb4:                                           ; preds = %sw.bb
  %5 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !924
  %blend5 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %5, i32 0, i32 4, !dbg !925
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_and_8bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend5, align 8, !dbg !926
  br label %sw.epilog, !dbg !927

sw.bb6:                                           ; preds = %sw.bb
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !928
  %blend7 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 4, !dbg !929
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_average_8bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend7, align 8, !dbg !930
  br label %sw.epilog, !dbg !931

sw.bb8:                                           ; preds = %sw.bb
  %7 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !932
  %blend9 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %7, i32 0, i32 4, !dbg !933
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_burn_8bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend9, align 8, !dbg !934
  br label %sw.epilog, !dbg !935

sw.bb10:                                          ; preds = %sw.bb
  %8 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !936
  %blend11 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %8, i32 0, i32 4, !dbg !937
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_darken_8bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend11, align 8, !dbg !938
  br label %sw.epilog, !dbg !939

sw.bb12:                                          ; preds = %sw.bb
  %9 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !940
  %blend13 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %9, i32 0, i32 4, !dbg !941
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_difference_8bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend13, align 8, !dbg !942
  br label %sw.epilog, !dbg !943

sw.bb14:                                          ; preds = %sw.bb
  %10 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !944
  %blend15 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %10, i32 0, i32 4, !dbg !945
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_grainextract_8bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend15, align 8, !dbg !946
  br label %sw.epilog, !dbg !947

sw.bb16:                                          ; preds = %sw.bb
  %11 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !948
  %blend17 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %11, i32 0, i32 4, !dbg !949
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_divide_8bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend17, align 8, !dbg !950
  br label %sw.epilog, !dbg !951

sw.bb18:                                          ; preds = %sw.bb
  %12 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !952
  %blend19 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %12, i32 0, i32 4, !dbg !953
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_dodge_8bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend19, align 8, !dbg !954
  br label %sw.epilog, !dbg !955

sw.bb20:                                          ; preds = %sw.bb
  %13 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !956
  %blend21 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %13, i32 0, i32 4, !dbg !957
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_exclusion_8bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend21, align 8, !dbg !958
  br label %sw.epilog, !dbg !959

sw.bb22:                                          ; preds = %sw.bb
  %14 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !960
  %blend23 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %14, i32 0, i32 4, !dbg !961
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_extremity_8bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend23, align 8, !dbg !962
  br label %sw.epilog, !dbg !963

sw.bb24:                                          ; preds = %sw.bb
  %15 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !964
  %blend25 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %15, i32 0, i32 4, !dbg !965
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_freeze_8bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend25, align 8, !dbg !966
  br label %sw.epilog, !dbg !967

sw.bb26:                                          ; preds = %sw.bb
  %16 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !968
  %blend27 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %16, i32 0, i32 4, !dbg !969
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_glow_8bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend27, align 8, !dbg !970
  br label %sw.epilog, !dbg !971

sw.bb28:                                          ; preds = %sw.bb
  %17 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !972
  %blend29 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %17, i32 0, i32 4, !dbg !973
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_hardlight_8bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend29, align 8, !dbg !974
  br label %sw.epilog, !dbg !975

sw.bb30:                                          ; preds = %sw.bb
  %18 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !976
  %blend31 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %18, i32 0, i32 4, !dbg !977
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_hardmix_8bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend31, align 8, !dbg !978
  br label %sw.epilog, !dbg !979

sw.bb32:                                          ; preds = %sw.bb
  %19 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !980
  %blend33 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %19, i32 0, i32 4, !dbg !981
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_heat_8bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend33, align 8, !dbg !982
  br label %sw.epilog, !dbg !983

sw.bb34:                                          ; preds = %sw.bb
  %20 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !984
  %blend35 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %20, i32 0, i32 4, !dbg !985
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_lighten_8bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend35, align 8, !dbg !986
  br label %sw.epilog, !dbg !987

sw.bb36:                                          ; preds = %sw.bb
  %21 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !988
  %blend37 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %21, i32 0, i32 4, !dbg !989
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_linearlight_8bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend37, align 8, !dbg !990
  br label %sw.epilog, !dbg !991

sw.bb38:                                          ; preds = %sw.bb
  %22 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !992
  %blend39 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %22, i32 0, i32 4, !dbg !993
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_multiply_8bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend39, align 8, !dbg !994
  br label %sw.epilog, !dbg !995

sw.bb40:                                          ; preds = %sw.bb
  %23 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !996
  %blend41 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %23, i32 0, i32 4, !dbg !997
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_multiply128_8bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend41, align 8, !dbg !998
  br label %sw.epilog, !dbg !999

sw.bb42:                                          ; preds = %sw.bb
  %24 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1000
  %blend43 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %24, i32 0, i32 4, !dbg !1001
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_negation_8bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend43, align 8, !dbg !1002
  br label %sw.epilog, !dbg !1003

sw.bb44:                                          ; preds = %sw.bb
  %25 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1004
  %opacity = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %25, i32 0, i32 1, !dbg !1005
  %26 = load double, double* %opacity, align 8, !dbg !1005
  %cmp = fcmp oeq double %26, 1.000000e+00, !dbg !1006
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !1004

cond.true:                                        ; preds = %sw.bb44
  br label %cond.end, !dbg !1007

cond.false:                                       ; preds = %sw.bb44
  %27 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1009
  %opacity45 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %27, i32 0, i32 1, !dbg !1010
  %28 = load double, double* %opacity45, align 8, !dbg !1010
  %cmp46 = fcmp oeq double %28, 0.000000e+00, !dbg !1011
  %cond = select i1 %cmp46, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_copybottom_8, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_normal_8bit, !dbg !1009
  br label %cond.end, !dbg !1012

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond47 = phi void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* [ @blend_copytop_8, %cond.true ], [ %cond, %cond.false ], !dbg !1014
  %29 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1016
  %blend48 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %29, i32 0, i32 4, !dbg !1017
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* %cond47, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend48, align 8, !dbg !1018
  br label %sw.epilog, !dbg !1019

sw.bb49:                                          ; preds = %sw.bb
  %30 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1020
  %blend50 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %30, i32 0, i32 4, !dbg !1021
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_or_8bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend50, align 8, !dbg !1022
  br label %sw.epilog, !dbg !1023

sw.bb51:                                          ; preds = %sw.bb
  %31 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1024
  %blend52 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %31, i32 0, i32 4, !dbg !1025
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_overlay_8bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend52, align 8, !dbg !1026
  br label %sw.epilog, !dbg !1027

sw.bb53:                                          ; preds = %sw.bb
  %32 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1028
  %blend54 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %32, i32 0, i32 4, !dbg !1029
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_phoenix_8bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend54, align 8, !dbg !1030
  br label %sw.epilog, !dbg !1031

sw.bb55:                                          ; preds = %sw.bb
  %33 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1032
  %blend56 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %33, i32 0, i32 4, !dbg !1033
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_pinlight_8bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend56, align 8, !dbg !1034
  br label %sw.epilog, !dbg !1035

sw.bb57:                                          ; preds = %sw.bb
  %34 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1036
  %blend58 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %34, i32 0, i32 4, !dbg !1037
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_reflect_8bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend58, align 8, !dbg !1038
  br label %sw.epilog, !dbg !1039

sw.bb59:                                          ; preds = %sw.bb
  %35 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1040
  %blend60 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %35, i32 0, i32 4, !dbg !1041
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_screen_8bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend60, align 8, !dbg !1042
  br label %sw.epilog, !dbg !1043

sw.bb61:                                          ; preds = %sw.bb
  %36 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1044
  %blend62 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %36, i32 0, i32 4, !dbg !1045
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_softlight_8bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend62, align 8, !dbg !1046
  br label %sw.epilog, !dbg !1047

sw.bb63:                                          ; preds = %sw.bb
  %37 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1048
  %blend64 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %37, i32 0, i32 4, !dbg !1049
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_subtract_8bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend64, align 8, !dbg !1050
  br label %sw.epilog, !dbg !1051

sw.bb65:                                          ; preds = %sw.bb
  %38 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1052
  %blend66 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %38, i32 0, i32 4, !dbg !1053
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_vividlight_8bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend66, align 8, !dbg !1054
  br label %sw.epilog, !dbg !1055

sw.bb67:                                          ; preds = %sw.bb
  %39 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1056
  %blend68 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %39, i32 0, i32 4, !dbg !1057
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_xor_8bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend68, align 8, !dbg !1058
  br label %sw.epilog, !dbg !1059

sw.epilog:                                        ; preds = %sw.bb, %sw.bb67, %sw.bb65, %sw.bb63, %sw.bb61, %sw.bb59, %sw.bb57, %sw.bb55, %sw.bb53, %sw.bb51, %sw.bb49, %cond.end, %sw.bb42, %sw.bb40, %sw.bb38, %sw.bb36, %sw.bb34, %sw.bb32, %sw.bb30, %sw.bb28, %sw.bb26, %sw.bb24, %sw.bb22, %sw.bb20, %sw.bb18, %sw.bb16, %sw.bb14, %sw.bb12, %sw.bb10, %sw.bb8, %sw.bb6, %sw.bb4, %sw.bb2, %sw.bb1
  br label %sw.epilog303, !dbg !1060

sw.bb69:                                          ; preds = %entry
  %40 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1061
  %mode70 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %40, i32 0, i32 0, !dbg !1062
  %41 = load i32, i32* %mode70, align 8, !dbg !1062
  switch i32 %41, label %sw.epilog146 [
    i32 1, label %sw.bb71
    i32 28, label %sw.bb73
    i32 2, label %sw.bb75
    i32 3, label %sw.bb77
    i32 4, label %sw.bb79
    i32 5, label %sw.bb81
    i32 6, label %sw.bb83
    i32 7, label %sw.bb85
    i32 8, label %sw.bb87
    i32 9, label %sw.bb89
    i32 10, label %sw.bb91
    i32 32, label %sw.bb93
    i32 31, label %sw.bb95
    i32 27, label %sw.bb97
    i32 11, label %sw.bb99
    i32 25, label %sw.bb101
    i32 30, label %sw.bb103
    i32 12, label %sw.bb105
    i32 26, label %sw.bb107
    i32 13, label %sw.bb109
    i32 29, label %sw.bb111
    i32 14, label %sw.bb113
    i32 0, label %sw.bb115
    i32 15, label %sw.bb126
    i32 16, label %sw.bb128
    i32 17, label %sw.bb130
    i32 18, label %sw.bb132
    i32 19, label %sw.bb134
    i32 20, label %sw.bb136
    i32 21, label %sw.bb138
    i32 22, label %sw.bb140
    i32 23, label %sw.bb142
    i32 24, label %sw.bb144
  ], !dbg !1063

sw.bb71:                                          ; preds = %sw.bb69
  %42 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1064
  %blend72 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %42, i32 0, i32 4, !dbg !1066
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_addition_10bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend72, align 8, !dbg !1067
  br label %sw.epilog146, !dbg !1068

sw.bb73:                                          ; preds = %sw.bb69
  %43 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1069
  %blend74 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %43, i32 0, i32 4, !dbg !1070
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_grainmerge_10bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend74, align 8, !dbg !1071
  br label %sw.epilog146, !dbg !1072

sw.bb75:                                          ; preds = %sw.bb69
  %44 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1073
  %blend76 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %44, i32 0, i32 4, !dbg !1074
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_and_10bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend76, align 8, !dbg !1075
  br label %sw.epilog146, !dbg !1076

sw.bb77:                                          ; preds = %sw.bb69
  %45 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1077
  %blend78 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %45, i32 0, i32 4, !dbg !1078
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_average_10bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend78, align 8, !dbg !1079
  br label %sw.epilog146, !dbg !1080

sw.bb79:                                          ; preds = %sw.bb69
  %46 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1081
  %blend80 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %46, i32 0, i32 4, !dbg !1082
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_burn_10bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend80, align 8, !dbg !1083
  br label %sw.epilog146, !dbg !1084

sw.bb81:                                          ; preds = %sw.bb69
  %47 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1085
  %blend82 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %47, i32 0, i32 4, !dbg !1086
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_darken_10bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend82, align 8, !dbg !1087
  br label %sw.epilog146, !dbg !1088

sw.bb83:                                          ; preds = %sw.bb69
  %48 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1089
  %blend84 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %48, i32 0, i32 4, !dbg !1090
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_difference_10bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend84, align 8, !dbg !1091
  br label %sw.epilog146, !dbg !1092

sw.bb85:                                          ; preds = %sw.bb69
  %49 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1093
  %blend86 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %49, i32 0, i32 4, !dbg !1094
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_grainextract_10bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend86, align 8, !dbg !1095
  br label %sw.epilog146, !dbg !1096

sw.bb87:                                          ; preds = %sw.bb69
  %50 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1097
  %blend88 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %50, i32 0, i32 4, !dbg !1098
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_divide_10bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend88, align 8, !dbg !1099
  br label %sw.epilog146, !dbg !1100

sw.bb89:                                          ; preds = %sw.bb69
  %51 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1101
  %blend90 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %51, i32 0, i32 4, !dbg !1102
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_dodge_10bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend90, align 8, !dbg !1103
  br label %sw.epilog146, !dbg !1104

sw.bb91:                                          ; preds = %sw.bb69
  %52 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1105
  %blend92 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %52, i32 0, i32 4, !dbg !1106
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_exclusion_10bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend92, align 8, !dbg !1107
  br label %sw.epilog146, !dbg !1108

sw.bb93:                                          ; preds = %sw.bb69
  %53 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1109
  %blend94 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %53, i32 0, i32 4, !dbg !1110
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_extremity_10bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend94, align 8, !dbg !1111
  br label %sw.epilog146, !dbg !1112

sw.bb95:                                          ; preds = %sw.bb69
  %54 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1113
  %blend96 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %54, i32 0, i32 4, !dbg !1114
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_freeze_10bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend96, align 8, !dbg !1115
  br label %sw.epilog146, !dbg !1116

sw.bb97:                                          ; preds = %sw.bb69
  %55 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1117
  %blend98 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %55, i32 0, i32 4, !dbg !1118
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_glow_10bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend98, align 8, !dbg !1119
  br label %sw.epilog146, !dbg !1120

sw.bb99:                                          ; preds = %sw.bb69
  %56 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1121
  %blend100 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %56, i32 0, i32 4, !dbg !1122
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_hardlight_10bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend100, align 8, !dbg !1123
  br label %sw.epilog146, !dbg !1124

sw.bb101:                                         ; preds = %sw.bb69
  %57 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1125
  %blend102 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %57, i32 0, i32 4, !dbg !1126
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_hardmix_10bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend102, align 8, !dbg !1127
  br label %sw.epilog146, !dbg !1128

sw.bb103:                                         ; preds = %sw.bb69
  %58 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1129
  %blend104 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %58, i32 0, i32 4, !dbg !1130
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_heat_10bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend104, align 8, !dbg !1131
  br label %sw.epilog146, !dbg !1132

sw.bb105:                                         ; preds = %sw.bb69
  %59 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1133
  %blend106 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %59, i32 0, i32 4, !dbg !1134
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_lighten_10bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend106, align 8, !dbg !1135
  br label %sw.epilog146, !dbg !1136

sw.bb107:                                         ; preds = %sw.bb69
  %60 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1137
  %blend108 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %60, i32 0, i32 4, !dbg !1138
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_linearlight_10bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend108, align 8, !dbg !1139
  br label %sw.epilog146, !dbg !1140

sw.bb109:                                         ; preds = %sw.bb69
  %61 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1141
  %blend110 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %61, i32 0, i32 4, !dbg !1142
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_multiply_10bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend110, align 8, !dbg !1143
  br label %sw.epilog146, !dbg !1144

sw.bb111:                                         ; preds = %sw.bb69
  %62 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1145
  %blend112 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %62, i32 0, i32 4, !dbg !1146
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_multiply128_10bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend112, align 8, !dbg !1147
  br label %sw.epilog146, !dbg !1148

sw.bb113:                                         ; preds = %sw.bb69
  %63 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1149
  %blend114 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %63, i32 0, i32 4, !dbg !1150
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_negation_10bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend114, align 8, !dbg !1151
  br label %sw.epilog146, !dbg !1152

sw.bb115:                                         ; preds = %sw.bb69
  %64 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1153
  %opacity116 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %64, i32 0, i32 1, !dbg !1154
  %65 = load double, double* %opacity116, align 8, !dbg !1154
  %cmp117 = fcmp oeq double %65, 1.000000e+00, !dbg !1155
  br i1 %cmp117, label %cond.true118, label %cond.false119, !dbg !1153

cond.true118:                                     ; preds = %sw.bb115
  br label %cond.end123, !dbg !1156

cond.false119:                                    ; preds = %sw.bb115
  %66 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1158
  %opacity120 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %66, i32 0, i32 1, !dbg !1159
  %67 = load double, double* %opacity120, align 8, !dbg !1159
  %cmp121 = fcmp oeq double %67, 0.000000e+00, !dbg !1160
  %cond122 = select i1 %cmp121, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_copybottom_16, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_normal_16bit, !dbg !1158
  br label %cond.end123, !dbg !1161

cond.end123:                                      ; preds = %cond.false119, %cond.true118
  %cond124 = phi void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* [ @blend_copytop_16, %cond.true118 ], [ %cond122, %cond.false119 ], !dbg !1163
  %68 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1165
  %blend125 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %68, i32 0, i32 4, !dbg !1166
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* %cond124, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend125, align 8, !dbg !1167
  br label %sw.epilog146, !dbg !1168

sw.bb126:                                         ; preds = %sw.bb69
  %69 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1169
  %blend127 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %69, i32 0, i32 4, !dbg !1170
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_or_10bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend127, align 8, !dbg !1171
  br label %sw.epilog146, !dbg !1172

sw.bb128:                                         ; preds = %sw.bb69
  %70 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1173
  %blend129 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %70, i32 0, i32 4, !dbg !1174
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_overlay_10bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend129, align 8, !dbg !1175
  br label %sw.epilog146, !dbg !1176

sw.bb130:                                         ; preds = %sw.bb69
  %71 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1177
  %blend131 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %71, i32 0, i32 4, !dbg !1178
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_phoenix_10bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend131, align 8, !dbg !1179
  br label %sw.epilog146, !dbg !1180

sw.bb132:                                         ; preds = %sw.bb69
  %72 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1181
  %blend133 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %72, i32 0, i32 4, !dbg !1182
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_pinlight_10bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend133, align 8, !dbg !1183
  br label %sw.epilog146, !dbg !1184

sw.bb134:                                         ; preds = %sw.bb69
  %73 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1185
  %blend135 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %73, i32 0, i32 4, !dbg !1186
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_reflect_10bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend135, align 8, !dbg !1187
  br label %sw.epilog146, !dbg !1188

sw.bb136:                                         ; preds = %sw.bb69
  %74 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1189
  %blend137 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %74, i32 0, i32 4, !dbg !1190
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_screen_10bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend137, align 8, !dbg !1191
  br label %sw.epilog146, !dbg !1192

sw.bb138:                                         ; preds = %sw.bb69
  %75 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1193
  %blend139 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %75, i32 0, i32 4, !dbg !1194
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_softlight_10bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend139, align 8, !dbg !1195
  br label %sw.epilog146, !dbg !1196

sw.bb140:                                         ; preds = %sw.bb69
  %76 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1197
  %blend141 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %76, i32 0, i32 4, !dbg !1198
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_subtract_10bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend141, align 8, !dbg !1199
  br label %sw.epilog146, !dbg !1200

sw.bb142:                                         ; preds = %sw.bb69
  %77 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1201
  %blend143 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %77, i32 0, i32 4, !dbg !1202
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_vividlight_10bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend143, align 8, !dbg !1203
  br label %sw.epilog146, !dbg !1204

sw.bb144:                                         ; preds = %sw.bb69
  %78 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1205
  %blend145 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %78, i32 0, i32 4, !dbg !1206
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_xor_10bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend145, align 8, !dbg !1207
  br label %sw.epilog146, !dbg !1208

sw.epilog146:                                     ; preds = %sw.bb69, %sw.bb144, %sw.bb142, %sw.bb140, %sw.bb138, %sw.bb136, %sw.bb134, %sw.bb132, %sw.bb130, %sw.bb128, %sw.bb126, %cond.end123, %sw.bb113, %sw.bb111, %sw.bb109, %sw.bb107, %sw.bb105, %sw.bb103, %sw.bb101, %sw.bb99, %sw.bb97, %sw.bb95, %sw.bb93, %sw.bb91, %sw.bb89, %sw.bb87, %sw.bb85, %sw.bb83, %sw.bb81, %sw.bb79, %sw.bb77, %sw.bb75, %sw.bb73, %sw.bb71
  br label %sw.epilog303, !dbg !1209

sw.bb147:                                         ; preds = %entry
  %79 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1210
  %mode148 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %79, i32 0, i32 0, !dbg !1211
  %80 = load i32, i32* %mode148, align 8, !dbg !1211
  switch i32 %80, label %sw.epilog224 [
    i32 1, label %sw.bb149
    i32 28, label %sw.bb151
    i32 2, label %sw.bb153
    i32 3, label %sw.bb155
    i32 4, label %sw.bb157
    i32 5, label %sw.bb159
    i32 6, label %sw.bb161
    i32 7, label %sw.bb163
    i32 8, label %sw.bb165
    i32 9, label %sw.bb167
    i32 10, label %sw.bb169
    i32 32, label %sw.bb171
    i32 31, label %sw.bb173
    i32 27, label %sw.bb175
    i32 11, label %sw.bb177
    i32 25, label %sw.bb179
    i32 30, label %sw.bb181
    i32 12, label %sw.bb183
    i32 26, label %sw.bb185
    i32 13, label %sw.bb187
    i32 29, label %sw.bb189
    i32 14, label %sw.bb191
    i32 0, label %sw.bb193
    i32 15, label %sw.bb204
    i32 16, label %sw.bb206
    i32 17, label %sw.bb208
    i32 18, label %sw.bb210
    i32 19, label %sw.bb212
    i32 20, label %sw.bb214
    i32 21, label %sw.bb216
    i32 22, label %sw.bb218
    i32 23, label %sw.bb220
    i32 24, label %sw.bb222
  ], !dbg !1212

sw.bb149:                                         ; preds = %sw.bb147
  %81 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1213
  %blend150 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %81, i32 0, i32 4, !dbg !1215
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_addition_12bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend150, align 8, !dbg !1216
  br label %sw.epilog224, !dbg !1217

sw.bb151:                                         ; preds = %sw.bb147
  %82 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1218
  %blend152 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %82, i32 0, i32 4, !dbg !1219
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_grainmerge_12bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend152, align 8, !dbg !1220
  br label %sw.epilog224, !dbg !1221

sw.bb153:                                         ; preds = %sw.bb147
  %83 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1222
  %blend154 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %83, i32 0, i32 4, !dbg !1223
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_and_12bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend154, align 8, !dbg !1224
  br label %sw.epilog224, !dbg !1225

sw.bb155:                                         ; preds = %sw.bb147
  %84 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1226
  %blend156 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %84, i32 0, i32 4, !dbg !1227
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_average_12bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend156, align 8, !dbg !1228
  br label %sw.epilog224, !dbg !1229

sw.bb157:                                         ; preds = %sw.bb147
  %85 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1230
  %blend158 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %85, i32 0, i32 4, !dbg !1231
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_burn_12bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend158, align 8, !dbg !1232
  br label %sw.epilog224, !dbg !1233

sw.bb159:                                         ; preds = %sw.bb147
  %86 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1234
  %blend160 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %86, i32 0, i32 4, !dbg !1235
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_darken_12bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend160, align 8, !dbg !1236
  br label %sw.epilog224, !dbg !1237

sw.bb161:                                         ; preds = %sw.bb147
  %87 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1238
  %blend162 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %87, i32 0, i32 4, !dbg !1239
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_difference_12bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend162, align 8, !dbg !1240
  br label %sw.epilog224, !dbg !1241

sw.bb163:                                         ; preds = %sw.bb147
  %88 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1242
  %blend164 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %88, i32 0, i32 4, !dbg !1243
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_grainextract_12bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend164, align 8, !dbg !1244
  br label %sw.epilog224, !dbg !1245

sw.bb165:                                         ; preds = %sw.bb147
  %89 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1246
  %blend166 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %89, i32 0, i32 4, !dbg !1247
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_divide_12bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend166, align 8, !dbg !1248
  br label %sw.epilog224, !dbg !1249

sw.bb167:                                         ; preds = %sw.bb147
  %90 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1250
  %blend168 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %90, i32 0, i32 4, !dbg !1251
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_dodge_12bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend168, align 8, !dbg !1252
  br label %sw.epilog224, !dbg !1253

sw.bb169:                                         ; preds = %sw.bb147
  %91 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1254
  %blend170 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %91, i32 0, i32 4, !dbg !1255
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_exclusion_12bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend170, align 8, !dbg !1256
  br label %sw.epilog224, !dbg !1257

sw.bb171:                                         ; preds = %sw.bb147
  %92 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1258
  %blend172 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %92, i32 0, i32 4, !dbg !1259
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_extremity_12bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend172, align 8, !dbg !1260
  br label %sw.epilog224, !dbg !1261

sw.bb173:                                         ; preds = %sw.bb147
  %93 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1262
  %blend174 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %93, i32 0, i32 4, !dbg !1263
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_freeze_12bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend174, align 8, !dbg !1264
  br label %sw.epilog224, !dbg !1265

sw.bb175:                                         ; preds = %sw.bb147
  %94 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1266
  %blend176 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %94, i32 0, i32 4, !dbg !1267
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_glow_12bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend176, align 8, !dbg !1268
  br label %sw.epilog224, !dbg !1269

sw.bb177:                                         ; preds = %sw.bb147
  %95 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1270
  %blend178 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %95, i32 0, i32 4, !dbg !1271
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_hardlight_12bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend178, align 8, !dbg !1272
  br label %sw.epilog224, !dbg !1273

sw.bb179:                                         ; preds = %sw.bb147
  %96 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1274
  %blend180 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %96, i32 0, i32 4, !dbg !1275
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_hardmix_12bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend180, align 8, !dbg !1276
  br label %sw.epilog224, !dbg !1277

sw.bb181:                                         ; preds = %sw.bb147
  %97 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1278
  %blend182 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %97, i32 0, i32 4, !dbg !1279
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_heat_12bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend182, align 8, !dbg !1280
  br label %sw.epilog224, !dbg !1281

sw.bb183:                                         ; preds = %sw.bb147
  %98 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1282
  %blend184 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %98, i32 0, i32 4, !dbg !1283
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_lighten_12bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend184, align 8, !dbg !1284
  br label %sw.epilog224, !dbg !1285

sw.bb185:                                         ; preds = %sw.bb147
  %99 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1286
  %blend186 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %99, i32 0, i32 4, !dbg !1287
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_linearlight_12bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend186, align 8, !dbg !1288
  br label %sw.epilog224, !dbg !1289

sw.bb187:                                         ; preds = %sw.bb147
  %100 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1290
  %blend188 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %100, i32 0, i32 4, !dbg !1291
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_multiply_12bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend188, align 8, !dbg !1292
  br label %sw.epilog224, !dbg !1293

sw.bb189:                                         ; preds = %sw.bb147
  %101 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1294
  %blend190 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %101, i32 0, i32 4, !dbg !1295
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_multiply128_12bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend190, align 8, !dbg !1296
  br label %sw.epilog224, !dbg !1297

sw.bb191:                                         ; preds = %sw.bb147
  %102 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1298
  %blend192 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %102, i32 0, i32 4, !dbg !1299
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_negation_12bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend192, align 8, !dbg !1300
  br label %sw.epilog224, !dbg !1301

sw.bb193:                                         ; preds = %sw.bb147
  %103 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1302
  %opacity194 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %103, i32 0, i32 1, !dbg !1303
  %104 = load double, double* %opacity194, align 8, !dbg !1303
  %cmp195 = fcmp oeq double %104, 1.000000e+00, !dbg !1304
  br i1 %cmp195, label %cond.true196, label %cond.false197, !dbg !1302

cond.true196:                                     ; preds = %sw.bb193
  br label %cond.end201, !dbg !1305

cond.false197:                                    ; preds = %sw.bb193
  %105 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1307
  %opacity198 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %105, i32 0, i32 1, !dbg !1308
  %106 = load double, double* %opacity198, align 8, !dbg !1308
  %cmp199 = fcmp oeq double %106, 0.000000e+00, !dbg !1309
  %cond200 = select i1 %cmp199, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_copybottom_16, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_normal_16bit, !dbg !1307
  br label %cond.end201, !dbg !1310

cond.end201:                                      ; preds = %cond.false197, %cond.true196
  %cond202 = phi void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* [ @blend_copytop_16, %cond.true196 ], [ %cond200, %cond.false197 ], !dbg !1312
  %107 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1314
  %blend203 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %107, i32 0, i32 4, !dbg !1315
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* %cond202, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend203, align 8, !dbg !1316
  br label %sw.epilog224, !dbg !1317

sw.bb204:                                         ; preds = %sw.bb147
  %108 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1318
  %blend205 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %108, i32 0, i32 4, !dbg !1319
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_or_12bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend205, align 8, !dbg !1320
  br label %sw.epilog224, !dbg !1321

sw.bb206:                                         ; preds = %sw.bb147
  %109 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1322
  %blend207 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %109, i32 0, i32 4, !dbg !1323
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_overlay_12bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend207, align 8, !dbg !1324
  br label %sw.epilog224, !dbg !1325

sw.bb208:                                         ; preds = %sw.bb147
  %110 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1326
  %blend209 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %110, i32 0, i32 4, !dbg !1327
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_phoenix_12bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend209, align 8, !dbg !1328
  br label %sw.epilog224, !dbg !1329

sw.bb210:                                         ; preds = %sw.bb147
  %111 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1330
  %blend211 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %111, i32 0, i32 4, !dbg !1331
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_pinlight_12bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend211, align 8, !dbg !1332
  br label %sw.epilog224, !dbg !1333

sw.bb212:                                         ; preds = %sw.bb147
  %112 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1334
  %blend213 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %112, i32 0, i32 4, !dbg !1335
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_reflect_12bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend213, align 8, !dbg !1336
  br label %sw.epilog224, !dbg !1337

sw.bb214:                                         ; preds = %sw.bb147
  %113 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1338
  %blend215 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %113, i32 0, i32 4, !dbg !1339
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_screen_12bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend215, align 8, !dbg !1340
  br label %sw.epilog224, !dbg !1341

sw.bb216:                                         ; preds = %sw.bb147
  %114 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1342
  %blend217 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %114, i32 0, i32 4, !dbg !1343
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_softlight_12bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend217, align 8, !dbg !1344
  br label %sw.epilog224, !dbg !1345

sw.bb218:                                         ; preds = %sw.bb147
  %115 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1346
  %blend219 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %115, i32 0, i32 4, !dbg !1347
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_subtract_12bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend219, align 8, !dbg !1348
  br label %sw.epilog224, !dbg !1349

sw.bb220:                                         ; preds = %sw.bb147
  %116 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1350
  %blend221 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %116, i32 0, i32 4, !dbg !1351
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_vividlight_12bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend221, align 8, !dbg !1352
  br label %sw.epilog224, !dbg !1353

sw.bb222:                                         ; preds = %sw.bb147
  %117 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1354
  %blend223 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %117, i32 0, i32 4, !dbg !1355
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_xor_12bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend223, align 8, !dbg !1356
  br label %sw.epilog224, !dbg !1357

sw.epilog224:                                     ; preds = %sw.bb147, %sw.bb222, %sw.bb220, %sw.bb218, %sw.bb216, %sw.bb214, %sw.bb212, %sw.bb210, %sw.bb208, %sw.bb206, %sw.bb204, %cond.end201, %sw.bb191, %sw.bb189, %sw.bb187, %sw.bb185, %sw.bb183, %sw.bb181, %sw.bb179, %sw.bb177, %sw.bb175, %sw.bb173, %sw.bb171, %sw.bb169, %sw.bb167, %sw.bb165, %sw.bb163, %sw.bb161, %sw.bb159, %sw.bb157, %sw.bb155, %sw.bb153, %sw.bb151, %sw.bb149
  br label %sw.epilog303, !dbg !1358

sw.bb225:                                         ; preds = %entry
  %118 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1359
  %mode226 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %118, i32 0, i32 0, !dbg !1360
  %119 = load i32, i32* %mode226, align 8, !dbg !1360
  switch i32 %119, label %sw.epilog302 [
    i32 1, label %sw.bb227
    i32 28, label %sw.bb229
    i32 2, label %sw.bb231
    i32 3, label %sw.bb233
    i32 4, label %sw.bb235
    i32 5, label %sw.bb237
    i32 6, label %sw.bb239
    i32 7, label %sw.bb241
    i32 8, label %sw.bb243
    i32 9, label %sw.bb245
    i32 10, label %sw.bb247
    i32 32, label %sw.bb249
    i32 31, label %sw.bb251
    i32 27, label %sw.bb253
    i32 11, label %sw.bb255
    i32 25, label %sw.bb257
    i32 30, label %sw.bb259
    i32 12, label %sw.bb261
    i32 26, label %sw.bb263
    i32 13, label %sw.bb265
    i32 29, label %sw.bb267
    i32 14, label %sw.bb269
    i32 0, label %sw.bb271
    i32 15, label %sw.bb282
    i32 16, label %sw.bb284
    i32 17, label %sw.bb286
    i32 18, label %sw.bb288
    i32 19, label %sw.bb290
    i32 20, label %sw.bb292
    i32 21, label %sw.bb294
    i32 22, label %sw.bb296
    i32 23, label %sw.bb298
    i32 24, label %sw.bb300
  ], !dbg !1361

sw.bb227:                                         ; preds = %sw.bb225
  %120 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1362
  %blend228 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %120, i32 0, i32 4, !dbg !1364
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_addition_16bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend228, align 8, !dbg !1365
  br label %sw.epilog302, !dbg !1366

sw.bb229:                                         ; preds = %sw.bb225
  %121 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1367
  %blend230 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %121, i32 0, i32 4, !dbg !1368
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_grainmerge_16bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend230, align 8, !dbg !1369
  br label %sw.epilog302, !dbg !1370

sw.bb231:                                         ; preds = %sw.bb225
  %122 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1371
  %blend232 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %122, i32 0, i32 4, !dbg !1372
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_and_16bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend232, align 8, !dbg !1373
  br label %sw.epilog302, !dbg !1374

sw.bb233:                                         ; preds = %sw.bb225
  %123 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1375
  %blend234 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %123, i32 0, i32 4, !dbg !1376
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_average_16bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend234, align 8, !dbg !1377
  br label %sw.epilog302, !dbg !1378

sw.bb235:                                         ; preds = %sw.bb225
  %124 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1379
  %blend236 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %124, i32 0, i32 4, !dbg !1380
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_burn_16bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend236, align 8, !dbg !1381
  br label %sw.epilog302, !dbg !1382

sw.bb237:                                         ; preds = %sw.bb225
  %125 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1383
  %blend238 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %125, i32 0, i32 4, !dbg !1384
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_darken_16bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend238, align 8, !dbg !1385
  br label %sw.epilog302, !dbg !1386

sw.bb239:                                         ; preds = %sw.bb225
  %126 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1387
  %blend240 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %126, i32 0, i32 4, !dbg !1388
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_difference_16bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend240, align 8, !dbg !1389
  br label %sw.epilog302, !dbg !1390

sw.bb241:                                         ; preds = %sw.bb225
  %127 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1391
  %blend242 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %127, i32 0, i32 4, !dbg !1392
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_grainextract_16bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend242, align 8, !dbg !1393
  br label %sw.epilog302, !dbg !1394

sw.bb243:                                         ; preds = %sw.bb225
  %128 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1395
  %blend244 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %128, i32 0, i32 4, !dbg !1396
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_divide_16bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend244, align 8, !dbg !1397
  br label %sw.epilog302, !dbg !1398

sw.bb245:                                         ; preds = %sw.bb225
  %129 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1399
  %blend246 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %129, i32 0, i32 4, !dbg !1400
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_dodge_16bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend246, align 8, !dbg !1401
  br label %sw.epilog302, !dbg !1402

sw.bb247:                                         ; preds = %sw.bb225
  %130 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1403
  %blend248 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %130, i32 0, i32 4, !dbg !1404
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_exclusion_16bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend248, align 8, !dbg !1405
  br label %sw.epilog302, !dbg !1406

sw.bb249:                                         ; preds = %sw.bb225
  %131 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1407
  %blend250 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %131, i32 0, i32 4, !dbg !1408
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_extremity_16bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend250, align 8, !dbg !1409
  br label %sw.epilog302, !dbg !1410

sw.bb251:                                         ; preds = %sw.bb225
  %132 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1411
  %blend252 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %132, i32 0, i32 4, !dbg !1412
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_freeze_16bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend252, align 8, !dbg !1413
  br label %sw.epilog302, !dbg !1414

sw.bb253:                                         ; preds = %sw.bb225
  %133 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1415
  %blend254 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %133, i32 0, i32 4, !dbg !1416
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_glow_16bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend254, align 8, !dbg !1417
  br label %sw.epilog302, !dbg !1418

sw.bb255:                                         ; preds = %sw.bb225
  %134 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1419
  %blend256 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %134, i32 0, i32 4, !dbg !1420
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_hardlight_16bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend256, align 8, !dbg !1421
  br label %sw.epilog302, !dbg !1422

sw.bb257:                                         ; preds = %sw.bb225
  %135 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1423
  %blend258 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %135, i32 0, i32 4, !dbg !1424
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_hardmix_16bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend258, align 8, !dbg !1425
  br label %sw.epilog302, !dbg !1426

sw.bb259:                                         ; preds = %sw.bb225
  %136 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1427
  %blend260 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %136, i32 0, i32 4, !dbg !1428
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_heat_16bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend260, align 8, !dbg !1429
  br label %sw.epilog302, !dbg !1430

sw.bb261:                                         ; preds = %sw.bb225
  %137 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1431
  %blend262 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %137, i32 0, i32 4, !dbg !1432
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_lighten_16bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend262, align 8, !dbg !1433
  br label %sw.epilog302, !dbg !1434

sw.bb263:                                         ; preds = %sw.bb225
  %138 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1435
  %blend264 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %138, i32 0, i32 4, !dbg !1436
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_linearlight_16bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend264, align 8, !dbg !1437
  br label %sw.epilog302, !dbg !1438

sw.bb265:                                         ; preds = %sw.bb225
  %139 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1439
  %blend266 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %139, i32 0, i32 4, !dbg !1440
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_multiply_16bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend266, align 8, !dbg !1441
  br label %sw.epilog302, !dbg !1442

sw.bb267:                                         ; preds = %sw.bb225
  %140 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1443
  %blend268 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %140, i32 0, i32 4, !dbg !1444
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_multiply128_16bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend268, align 8, !dbg !1445
  br label %sw.epilog302, !dbg !1446

sw.bb269:                                         ; preds = %sw.bb225
  %141 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1447
  %blend270 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %141, i32 0, i32 4, !dbg !1448
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_negation_16bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend270, align 8, !dbg !1449
  br label %sw.epilog302, !dbg !1450

sw.bb271:                                         ; preds = %sw.bb225
  %142 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1451
  %opacity272 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %142, i32 0, i32 1, !dbg !1452
  %143 = load double, double* %opacity272, align 8, !dbg !1452
  %cmp273 = fcmp oeq double %143, 1.000000e+00, !dbg !1453
  br i1 %cmp273, label %cond.true274, label %cond.false275, !dbg !1451

cond.true274:                                     ; preds = %sw.bb271
  br label %cond.end279, !dbg !1454

cond.false275:                                    ; preds = %sw.bb271
  %144 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1456
  %opacity276 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %144, i32 0, i32 1, !dbg !1457
  %145 = load double, double* %opacity276, align 8, !dbg !1457
  %cmp277 = fcmp oeq double %145, 0.000000e+00, !dbg !1458
  %cond278 = select i1 %cmp277, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_copybottom_16, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_normal_16bit, !dbg !1456
  br label %cond.end279, !dbg !1459

cond.end279:                                      ; preds = %cond.false275, %cond.true274
  %cond280 = phi void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* [ @blend_copytop_16, %cond.true274 ], [ %cond278, %cond.false275 ], !dbg !1461
  %146 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1463
  %blend281 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %146, i32 0, i32 4, !dbg !1464
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* %cond280, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend281, align 8, !dbg !1465
  br label %sw.epilog302, !dbg !1466

sw.bb282:                                         ; preds = %sw.bb225
  %147 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1467
  %blend283 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %147, i32 0, i32 4, !dbg !1468
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_or_16bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend283, align 8, !dbg !1469
  br label %sw.epilog302, !dbg !1470

sw.bb284:                                         ; preds = %sw.bb225
  %148 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1471
  %blend285 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %148, i32 0, i32 4, !dbg !1472
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_overlay_16bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend285, align 8, !dbg !1473
  br label %sw.epilog302, !dbg !1474

sw.bb286:                                         ; preds = %sw.bb225
  %149 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1475
  %blend287 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %149, i32 0, i32 4, !dbg !1476
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_phoenix_16bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend287, align 8, !dbg !1477
  br label %sw.epilog302, !dbg !1478

sw.bb288:                                         ; preds = %sw.bb225
  %150 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1479
  %blend289 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %150, i32 0, i32 4, !dbg !1480
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_pinlight_16bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend289, align 8, !dbg !1481
  br label %sw.epilog302, !dbg !1482

sw.bb290:                                         ; preds = %sw.bb225
  %151 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1483
  %blend291 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %151, i32 0, i32 4, !dbg !1484
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_reflect_16bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend291, align 8, !dbg !1485
  br label %sw.epilog302, !dbg !1486

sw.bb292:                                         ; preds = %sw.bb225
  %152 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1487
  %blend293 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %152, i32 0, i32 4, !dbg !1488
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_screen_16bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend293, align 8, !dbg !1489
  br label %sw.epilog302, !dbg !1490

sw.bb294:                                         ; preds = %sw.bb225
  %153 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1491
  %blend295 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %153, i32 0, i32 4, !dbg !1492
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_softlight_16bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend295, align 8, !dbg !1493
  br label %sw.epilog302, !dbg !1494

sw.bb296:                                         ; preds = %sw.bb225
  %154 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1495
  %blend297 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %154, i32 0, i32 4, !dbg !1496
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_subtract_16bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend297, align 8, !dbg !1497
  br label %sw.epilog302, !dbg !1498

sw.bb298:                                         ; preds = %sw.bb225
  %155 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1499
  %blend299 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %155, i32 0, i32 4, !dbg !1500
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_vividlight_16bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend299, align 8, !dbg !1501
  br label %sw.epilog302, !dbg !1502

sw.bb300:                                         ; preds = %sw.bb225
  %156 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1503
  %blend301 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %156, i32 0, i32 4, !dbg !1504
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_xor_16bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend301, align 8, !dbg !1505
  br label %sw.epilog302, !dbg !1506

sw.epilog302:                                     ; preds = %sw.bb225, %sw.bb300, %sw.bb298, %sw.bb296, %sw.bb294, %sw.bb292, %sw.bb290, %sw.bb288, %sw.bb286, %sw.bb284, %sw.bb282, %cond.end279, %sw.bb269, %sw.bb267, %sw.bb265, %sw.bb263, %sw.bb261, %sw.bb259, %sw.bb257, %sw.bb255, %sw.bb253, %sw.bb251, %sw.bb249, %sw.bb247, %sw.bb245, %sw.bb243, %sw.bb241, %sw.bb239, %sw.bb237, %sw.bb235, %sw.bb233, %sw.bb231, %sw.bb229, %sw.bb227
  br label %sw.epilog303, !dbg !1507

sw.epilog303:                                     ; preds = %entry, %sw.epilog302, %sw.epilog224, %sw.epilog146, %sw.epilog
  %157 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1508
  %opacity304 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %157, i32 0, i32 1, !dbg !1510
  %158 = load double, double* %opacity304, align 8, !dbg !1510
  %cmp305 = fcmp oeq double %158, 0.000000e+00, !dbg !1511
  br i1 %cmp305, label %land.lhs.true, label %if.end, !dbg !1512

land.lhs.true:                                    ; preds = %sw.epilog303
  %159 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1513
  %mode306 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %159, i32 0, i32 0, !dbg !1515
  %160 = load i32, i32* %mode306, align 8, !dbg !1515
  %cmp307 = icmp ne i32 %160, 0, !dbg !1516
  br i1 %cmp307, label %if.then, label %if.end, !dbg !1517

if.then:                                          ; preds = %land.lhs.true
  %161 = load i32, i32* %depth.addr, align 4, !dbg !1518
  %cmp308 = icmp sgt i32 %161, 8, !dbg !1520
  %cond309 = select i1 %cmp308, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_copytop_16, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_copytop_8, !dbg !1518
  %162 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1521
  %blend310 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %162, i32 0, i32 4, !dbg !1522
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* %cond309, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend310, align 8, !dbg !1523
  br label %if.end, !dbg !1524

if.end:                                           ; preds = %if.then, %land.lhs.true, %sw.epilog303
  %163 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1525
  %164 = load i32, i32* %depth.addr, align 4, !dbg !1527
  call void @ff_blend_init_x86(%struct.FilterParams* %163, i32 %164), !dbg !1528
  ret void, !dbg !1529
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind uwtable
define internal void @blend_addition_8bit(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !1530 {
entry:
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !1533, metadata !905), !dbg !1534
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !1535, metadata !905), !dbg !1536
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !1537, metadata !905), !dbg !1538
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !1539, metadata !905), !dbg !1540
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !1541, metadata !905), !dbg !1542
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !1543, metadata !905), !dbg !1544
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !1545, metadata !905), !dbg !1546
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !1547, metadata !905), !dbg !1548
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !1549, metadata !905), !dbg !1550
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !1551, metadata !905), !dbg !1552
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !1553, metadata !905), !dbg !1554
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !1555, metadata !905), !dbg !1556
  %0 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1557
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %0, i32 0, i32 1, !dbg !1558
  %1 = load double, double* %opacity1, align 8, !dbg !1558
  store double %1, double* %opacity, align 8, !dbg !1556
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1559, metadata !905), !dbg !1560
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1561, metadata !905), !dbg !1562
  store i32 0, i32* %i, align 4, !dbg !1563
  br label %for.cond, !dbg !1565

for.cond:                                         ; preds = %for.inc35, %entry
  %2 = load i32, i32* %i, align 4, !dbg !1566
  %conv = sext i32 %2 to i64, !dbg !1566
  %3 = load i64, i64* %height.addr, align 8, !dbg !1569
  %cmp = icmp slt i64 %conv, %3, !dbg !1570
  br i1 %cmp, label %for.body, label %for.end37, !dbg !1571

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !1572
  br label %for.cond3, !dbg !1576

for.cond3:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !1577
  %conv4 = sext i32 %4 to i64, !dbg !1577
  %5 = load i64, i64* %width.addr, align 8, !dbg !1580
  %cmp5 = icmp slt i64 %conv4, %5, !dbg !1581
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !1582

for.body7:                                        ; preds = %for.cond3
  %6 = load i32, i32* %j, align 4, !dbg !1583
  %idxprom = sext i32 %6 to i64, !dbg !1586
  %7 = load i8*, i8** %top.addr, align 8, !dbg !1586
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !1586
  %8 = load i8, i8* %arrayidx, align 1, !dbg !1586
  %conv8 = zext i8 %8 to i32, !dbg !1586
  %conv9 = sitofp i32 %conv8 to double, !dbg !1586
  %9 = load i32, i32* %j, align 4, !dbg !1587
  %idxprom10 = sext i32 %9 to i64, !dbg !1588
  %10 = load i8*, i8** %top.addr, align 8, !dbg !1588
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 %idxprom10, !dbg !1588
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !1588
  %conv12 = zext i8 %11 to i32, !dbg !1588
  %12 = load i32, i32* %j, align 4, !dbg !1589
  %idxprom13 = sext i32 %12 to i64, !dbg !1590
  %13 = load i8*, i8** %bottom.addr, align 8, !dbg !1590
  %arrayidx14 = getelementptr inbounds i8, i8* %13, i64 %idxprom13, !dbg !1590
  %14 = load i8, i8* %arrayidx14, align 1, !dbg !1590
  %conv15 = zext i8 %14 to i32, !dbg !1590
  %add = add nsw i32 %conv12, %conv15, !dbg !1591
  %cmp16 = icmp sgt i32 255, %add, !dbg !1592
  br i1 %cmp16, label %cond.true, label %cond.false, !dbg !1593

cond.true:                                        ; preds = %for.body7
  %15 = load i32, i32* %j, align 4, !dbg !1594
  %idxprom18 = sext i32 %15 to i64, !dbg !1596
  %16 = load i8*, i8** %top.addr, align 8, !dbg !1596
  %arrayidx19 = getelementptr inbounds i8, i8* %16, i64 %idxprom18, !dbg !1596
  %17 = load i8, i8* %arrayidx19, align 1, !dbg !1596
  %conv20 = zext i8 %17 to i32, !dbg !1596
  %18 = load i32, i32* %j, align 4, !dbg !1597
  %idxprom21 = sext i32 %18 to i64, !dbg !1598
  %19 = load i8*, i8** %bottom.addr, align 8, !dbg !1598
  %arrayidx22 = getelementptr inbounds i8, i8* %19, i64 %idxprom21, !dbg !1598
  %20 = load i8, i8* %arrayidx22, align 1, !dbg !1598
  %conv23 = zext i8 %20 to i32, !dbg !1598
  %add24 = add nsw i32 %conv20, %conv23, !dbg !1599
  br label %cond.end, !dbg !1600

cond.false:                                       ; preds = %for.body7
  br label %cond.end, !dbg !1601

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add24, %cond.true ], [ 255, %cond.false ], !dbg !1603
  %21 = load i32, i32* %j, align 4, !dbg !1605
  %idxprom25 = sext i32 %21 to i64, !dbg !1606
  %22 = load i8*, i8** %top.addr, align 8, !dbg !1606
  %arrayidx26 = getelementptr inbounds i8, i8* %22, i64 %idxprom25, !dbg !1606
  %23 = load i8, i8* %arrayidx26, align 1, !dbg !1606
  %conv27 = zext i8 %23 to i32, !dbg !1606
  %sub = sub nsw i32 %cond, %conv27, !dbg !1607
  %conv28 = sitofp i32 %sub to double, !dbg !1608
  %24 = load double, double* %opacity, align 8, !dbg !1609
  %mul = fmul double %conv28, %24, !dbg !1610
  %add29 = fadd double %conv9, %mul, !dbg !1611
  %conv30 = fptoui double %add29 to i8, !dbg !1612
  %25 = load i32, i32* %j, align 4, !dbg !1613
  %idxprom31 = sext i32 %25 to i64, !dbg !1614
  %26 = load i8*, i8** %dst.addr, align 8, !dbg !1614
  %arrayidx32 = getelementptr inbounds i8, i8* %26, i64 %idxprom31, !dbg !1614
  store i8 %conv30, i8* %arrayidx32, align 1, !dbg !1615
  br label %for.inc, !dbg !1616

for.inc:                                          ; preds = %cond.end
  %27 = load i32, i32* %j, align 4, !dbg !1617
  %inc = add nsw i32 %27, 1, !dbg !1617
  store i32 %inc, i32* %j, align 4, !dbg !1617
  br label %for.cond3, !dbg !1619, !llvm.loop !1620

for.end:                                          ; preds = %for.cond3
  %28 = load i64, i64* %dst_linesize.addr, align 8, !dbg !1622
  %29 = load i8*, i8** %dst.addr, align 8, !dbg !1624
  %add.ptr = getelementptr inbounds i8, i8* %29, i64 %28, !dbg !1624
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !1624
  %30 = load i64, i64* %top_linesize.addr, align 8, !dbg !1625
  %31 = load i8*, i8** %top.addr, align 8, !dbg !1626
  %add.ptr33 = getelementptr inbounds i8, i8* %31, i64 %30, !dbg !1626
  store i8* %add.ptr33, i8** %top.addr, align 8, !dbg !1626
  %32 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !1627
  %33 = load i8*, i8** %bottom.addr, align 8, !dbg !1628
  %add.ptr34 = getelementptr inbounds i8, i8* %33, i64 %32, !dbg !1628
  store i8* %add.ptr34, i8** %bottom.addr, align 8, !dbg !1628
  br label %for.inc35, !dbg !1629

for.inc35:                                        ; preds = %for.end
  %34 = load i32, i32* %i, align 4, !dbg !1630
  %inc36 = add nsw i32 %34, 1, !dbg !1630
  store i32 %inc36, i32* %i, align 4, !dbg !1630
  br label %for.cond, !dbg !1632, !llvm.loop !1633

for.end37:                                        ; preds = %for.cond
  ret void, !dbg !1635
}

; Function Attrs: nounwind uwtable
define internal void @blend_grainmerge_8bit(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !1637 {
entry:
  %retval.i = alloca i8, align 1
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !1638, metadata !905), !dbg !1643
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !1652, metadata !905), !dbg !1653
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !1654, metadata !905), !dbg !1655
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !1656, metadata !905), !dbg !1657
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !1658, metadata !905), !dbg !1659
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !1660, metadata !905), !dbg !1661
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !1662, metadata !905), !dbg !1663
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !1664, metadata !905), !dbg !1665
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !1666, metadata !905), !dbg !1667
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !1668, metadata !905), !dbg !1669
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !1670, metadata !905), !dbg !1671
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !1672, metadata !905), !dbg !1673
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !1674, metadata !905), !dbg !1675
  %0 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1676
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %0, i32 0, i32 1, !dbg !1677
  %1 = load double, double* %opacity1, align 8, !dbg !1677
  store double %1, double* %opacity, align 8, !dbg !1675
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1678, metadata !905), !dbg !1679
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1680, metadata !905), !dbg !1681
  store i32 0, i32* %i, align 4, !dbg !1682
  br label %for.cond, !dbg !1683

for.cond:                                         ; preds = %for.inc28, %entry
  %2 = load i32, i32* %i, align 4, !dbg !1684
  %conv = sext i32 %2 to i64, !dbg !1684
  %3 = load i64, i64* %height.addr, align 8, !dbg !1686
  %cmp = icmp slt i64 %conv, %3, !dbg !1687
  br i1 %cmp, label %for.body, label %for.end30, !dbg !1688

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !1689
  br label %for.cond3, !dbg !1691

for.cond3:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !1692
  %conv4 = sext i32 %4 to i64, !dbg !1692
  %5 = load i64, i64* %width.addr, align 8, !dbg !1694
  %cmp5 = icmp slt i64 %conv4, %5, !dbg !1695
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !1696

for.body7:                                        ; preds = %for.cond3
  %6 = load i32, i32* %j, align 4, !dbg !1697
  %idxprom = sext i32 %6 to i64, !dbg !1698
  %7 = load i8*, i8** %top.addr, align 8, !dbg !1698
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !1698
  %8 = load i8, i8* %arrayidx, align 1, !dbg !1698
  %conv8 = zext i8 %8 to i32, !dbg !1698
  %conv9 = sitofp i32 %conv8 to double, !dbg !1698
  %9 = load i32, i32* %j, align 4, !dbg !1699
  %idxprom10 = sext i32 %9 to i64, !dbg !1700
  %10 = load i8*, i8** %top.addr, align 8, !dbg !1700
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 %idxprom10, !dbg !1700
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !1700
  %conv12 = zext i8 %11 to i32, !dbg !1700
  %12 = load i32, i32* %j, align 4, !dbg !1701
  %idxprom13 = sext i32 %12 to i64, !dbg !1702
  %13 = load i8*, i8** %bottom.addr, align 8, !dbg !1702
  %arrayidx14 = getelementptr inbounds i8, i8* %13, i64 %idxprom13, !dbg !1702
  %14 = load i8, i8* %arrayidx14, align 1, !dbg !1702
  %conv15 = zext i8 %14 to i32, !dbg !1702
  %add = add nsw i32 %conv12, %conv15, !dbg !1703
  %sub = sub nsw i32 %add, 128, !dbg !1704
  store i32 %sub, i32* %a.addr.i, align 4, !dbg !1705
  %15 = load i32, i32* %a.addr.i, align 4, !dbg !1706
  %and.i = and i32 %15, -256, !dbg !1708
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !1708
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !1709

if.then.i:                                        ; preds = %for.body7
  %16 = load i32, i32* %a.addr.i, align 4, !dbg !1710
  %neg.i = xor i32 %16, -1, !dbg !1712
  %shr.i = ashr i32 %neg.i, 31, !dbg !1713
  %conv.i = trunc i32 %shr.i to i8, !dbg !1714
  store i8 %conv.i, i8* %retval.i, align 1, !dbg !1715
  br label %av_clip_uint8_c.exit, !dbg !1715

if.else.i:                                        ; preds = %for.body7
  %17 = load i32, i32* %a.addr.i, align 4, !dbg !1716
  %conv1.i = trunc i32 %17 to i8, !dbg !1716
  store i8 %conv1.i, i8* %retval.i, align 1, !dbg !1717
  br label %av_clip_uint8_c.exit, !dbg !1717

av_clip_uint8_c.exit:                             ; preds = %if.then.i, %if.else.i
  %18 = load i8, i8* %retval.i, align 1, !dbg !1718
  %conv16 = zext i8 %18 to i32, !dbg !1719
  %19 = load i32, i32* %j, align 4, !dbg !1720
  %idxprom17 = sext i32 %19 to i64, !dbg !1721
  %20 = load i8*, i8** %top.addr, align 8, !dbg !1721
  %arrayidx18 = getelementptr inbounds i8, i8* %20, i64 %idxprom17, !dbg !1721
  %21 = load i8, i8* %arrayidx18, align 1, !dbg !1721
  %conv19 = zext i8 %21 to i32, !dbg !1721
  %sub20 = sub nsw i32 %conv16, %conv19, !dbg !1722
  %conv21 = sitofp i32 %sub20 to double, !dbg !1723
  %22 = load double, double* %opacity, align 8, !dbg !1724
  %mul = fmul double %conv21, %22, !dbg !1725
  %add22 = fadd double %conv9, %mul, !dbg !1726
  %conv23 = fptoui double %add22 to i8, !dbg !1698
  %23 = load i32, i32* %j, align 4, !dbg !1727
  %idxprom24 = sext i32 %23 to i64, !dbg !1728
  %24 = load i8*, i8** %dst.addr, align 8, !dbg !1728
  %arrayidx25 = getelementptr inbounds i8, i8* %24, i64 %idxprom24, !dbg !1728
  store i8 %conv23, i8* %arrayidx25, align 1, !dbg !1729
  br label %for.inc, !dbg !1730

for.inc:                                          ; preds = %av_clip_uint8_c.exit
  %25 = load i32, i32* %j, align 4, !dbg !1731
  %inc = add nsw i32 %25, 1, !dbg !1731
  store i32 %inc, i32* %j, align 4, !dbg !1731
  br label %for.cond3, !dbg !1733, !llvm.loop !1734

for.end:                                          ; preds = %for.cond3
  %26 = load i64, i64* %dst_linesize.addr, align 8, !dbg !1736
  %27 = load i8*, i8** %dst.addr, align 8, !dbg !1738
  %add.ptr = getelementptr inbounds i8, i8* %27, i64 %26, !dbg !1738
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !1738
  %28 = load i64, i64* %top_linesize.addr, align 8, !dbg !1739
  %29 = load i8*, i8** %top.addr, align 8, !dbg !1740
  %add.ptr26 = getelementptr inbounds i8, i8* %29, i64 %28, !dbg !1740
  store i8* %add.ptr26, i8** %top.addr, align 8, !dbg !1740
  %30 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !1741
  %31 = load i8*, i8** %bottom.addr, align 8, !dbg !1742
  %add.ptr27 = getelementptr inbounds i8, i8* %31, i64 %30, !dbg !1742
  store i8* %add.ptr27, i8** %bottom.addr, align 8, !dbg !1742
  br label %for.inc28, !dbg !1743

for.inc28:                                        ; preds = %for.end
  %32 = load i32, i32* %i, align 4, !dbg !1744
  %inc29 = add nsw i32 %32, 1, !dbg !1744
  store i32 %inc29, i32* %i, align 4, !dbg !1744
  br label %for.cond, !dbg !1746, !llvm.loop !1747

for.end30:                                        ; preds = %for.cond
  ret void, !dbg !1749
}

; Function Attrs: nounwind uwtable
define internal void @blend_and_8bit(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !1751 {
entry:
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !1752, metadata !905), !dbg !1753
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !1754, metadata !905), !dbg !1755
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !1756, metadata !905), !dbg !1757
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !1758, metadata !905), !dbg !1759
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !1760, metadata !905), !dbg !1761
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !1762, metadata !905), !dbg !1763
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !1764, metadata !905), !dbg !1765
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !1766, metadata !905), !dbg !1767
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !1768, metadata !905), !dbg !1769
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !1770, metadata !905), !dbg !1771
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !1772, metadata !905), !dbg !1773
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !1774, metadata !905), !dbg !1775
  %0 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1776
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %0, i32 0, i32 1, !dbg !1777
  %1 = load double, double* %opacity1, align 8, !dbg !1777
  store double %1, double* %opacity, align 8, !dbg !1775
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1778, metadata !905), !dbg !1779
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1780, metadata !905), !dbg !1781
  store i32 0, i32* %i, align 4, !dbg !1782
  br label %for.cond, !dbg !1784

for.cond:                                         ; preds = %for.inc25, %entry
  %2 = load i32, i32* %i, align 4, !dbg !1785
  %conv = sext i32 %2 to i64, !dbg !1785
  %3 = load i64, i64* %height.addr, align 8, !dbg !1788
  %cmp = icmp slt i64 %conv, %3, !dbg !1789
  br i1 %cmp, label %for.body, label %for.end27, !dbg !1790

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !1791
  br label %for.cond3, !dbg !1795

for.cond3:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !1796
  %conv4 = sext i32 %4 to i64, !dbg !1796
  %5 = load i64, i64* %width.addr, align 8, !dbg !1799
  %cmp5 = icmp slt i64 %conv4, %5, !dbg !1800
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !1801

for.body7:                                        ; preds = %for.cond3
  %6 = load i32, i32* %j, align 4, !dbg !1802
  %idxprom = sext i32 %6 to i64, !dbg !1805
  %7 = load i8*, i8** %top.addr, align 8, !dbg !1805
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !1805
  %8 = load i8, i8* %arrayidx, align 1, !dbg !1805
  %conv8 = zext i8 %8 to i32, !dbg !1805
  %conv9 = sitofp i32 %conv8 to double, !dbg !1805
  %9 = load i32, i32* %j, align 4, !dbg !1806
  %idxprom10 = sext i32 %9 to i64, !dbg !1807
  %10 = load i8*, i8** %top.addr, align 8, !dbg !1807
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 %idxprom10, !dbg !1807
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !1807
  %conv12 = zext i8 %11 to i32, !dbg !1807
  %12 = load i32, i32* %j, align 4, !dbg !1808
  %idxprom13 = sext i32 %12 to i64, !dbg !1809
  %13 = load i8*, i8** %bottom.addr, align 8, !dbg !1809
  %arrayidx14 = getelementptr inbounds i8, i8* %13, i64 %idxprom13, !dbg !1809
  %14 = load i8, i8* %arrayidx14, align 1, !dbg !1809
  %conv15 = zext i8 %14 to i32, !dbg !1809
  %and = and i32 %conv12, %conv15, !dbg !1810
  %15 = load i32, i32* %j, align 4, !dbg !1811
  %idxprom16 = sext i32 %15 to i64, !dbg !1812
  %16 = load i8*, i8** %top.addr, align 8, !dbg !1812
  %arrayidx17 = getelementptr inbounds i8, i8* %16, i64 %idxprom16, !dbg !1812
  %17 = load i8, i8* %arrayidx17, align 1, !dbg !1812
  %conv18 = zext i8 %17 to i32, !dbg !1812
  %sub = sub nsw i32 %and, %conv18, !dbg !1813
  %conv19 = sitofp i32 %sub to double, !dbg !1814
  %18 = load double, double* %opacity, align 8, !dbg !1815
  %mul = fmul double %conv19, %18, !dbg !1816
  %add = fadd double %conv9, %mul, !dbg !1817
  %conv20 = fptoui double %add to i8, !dbg !1805
  %19 = load i32, i32* %j, align 4, !dbg !1818
  %idxprom21 = sext i32 %19 to i64, !dbg !1819
  %20 = load i8*, i8** %dst.addr, align 8, !dbg !1819
  %arrayidx22 = getelementptr inbounds i8, i8* %20, i64 %idxprom21, !dbg !1819
  store i8 %conv20, i8* %arrayidx22, align 1, !dbg !1820
  br label %for.inc, !dbg !1821

for.inc:                                          ; preds = %for.body7
  %21 = load i32, i32* %j, align 4, !dbg !1822
  %inc = add nsw i32 %21, 1, !dbg !1822
  store i32 %inc, i32* %j, align 4, !dbg !1822
  br label %for.cond3, !dbg !1824, !llvm.loop !1825

for.end:                                          ; preds = %for.cond3
  %22 = load i64, i64* %dst_linesize.addr, align 8, !dbg !1827
  %23 = load i8*, i8** %dst.addr, align 8, !dbg !1829
  %add.ptr = getelementptr inbounds i8, i8* %23, i64 %22, !dbg !1829
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !1829
  %24 = load i64, i64* %top_linesize.addr, align 8, !dbg !1830
  %25 = load i8*, i8** %top.addr, align 8, !dbg !1831
  %add.ptr23 = getelementptr inbounds i8, i8* %25, i64 %24, !dbg !1831
  store i8* %add.ptr23, i8** %top.addr, align 8, !dbg !1831
  %26 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !1832
  %27 = load i8*, i8** %bottom.addr, align 8, !dbg !1833
  %add.ptr24 = getelementptr inbounds i8, i8* %27, i64 %26, !dbg !1833
  store i8* %add.ptr24, i8** %bottom.addr, align 8, !dbg !1833
  br label %for.inc25, !dbg !1834

for.inc25:                                        ; preds = %for.end
  %28 = load i32, i32* %i, align 4, !dbg !1835
  %inc26 = add nsw i32 %28, 1, !dbg !1835
  store i32 %inc26, i32* %i, align 4, !dbg !1835
  br label %for.cond, !dbg !1837, !llvm.loop !1838

for.end27:                                        ; preds = %for.cond
  ret void, !dbg !1840
}

; Function Attrs: nounwind uwtable
define internal void @blend_average_8bit(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !1842 {
entry:
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !1843, metadata !905), !dbg !1844
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !1845, metadata !905), !dbg !1846
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !1847, metadata !905), !dbg !1848
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !1849, metadata !905), !dbg !1850
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !1851, metadata !905), !dbg !1852
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !1853, metadata !905), !dbg !1854
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !1855, metadata !905), !dbg !1856
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !1857, metadata !905), !dbg !1858
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !1859, metadata !905), !dbg !1860
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !1861, metadata !905), !dbg !1862
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !1863, metadata !905), !dbg !1864
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !1865, metadata !905), !dbg !1866
  %0 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1867
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %0, i32 0, i32 1, !dbg !1868
  %1 = load double, double* %opacity1, align 8, !dbg !1868
  store double %1, double* %opacity, align 8, !dbg !1866
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1869, metadata !905), !dbg !1870
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1871, metadata !905), !dbg !1872
  store i32 0, i32* %i, align 4, !dbg !1873
  br label %for.cond, !dbg !1875

for.cond:                                         ; preds = %for.inc26, %entry
  %2 = load i32, i32* %i, align 4, !dbg !1876
  %conv = sext i32 %2 to i64, !dbg !1876
  %3 = load i64, i64* %height.addr, align 8, !dbg !1879
  %cmp = icmp slt i64 %conv, %3, !dbg !1880
  br i1 %cmp, label %for.body, label %for.end28, !dbg !1881

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !1882
  br label %for.cond3, !dbg !1886

for.cond3:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !1887
  %conv4 = sext i32 %4 to i64, !dbg !1887
  %5 = load i64, i64* %width.addr, align 8, !dbg !1890
  %cmp5 = icmp slt i64 %conv4, %5, !dbg !1891
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !1892

for.body7:                                        ; preds = %for.cond3
  %6 = load i32, i32* %j, align 4, !dbg !1893
  %idxprom = sext i32 %6 to i64, !dbg !1896
  %7 = load i8*, i8** %top.addr, align 8, !dbg !1896
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !1896
  %8 = load i8, i8* %arrayidx, align 1, !dbg !1896
  %conv8 = zext i8 %8 to i32, !dbg !1896
  %conv9 = sitofp i32 %conv8 to double, !dbg !1896
  %9 = load i32, i32* %j, align 4, !dbg !1897
  %idxprom10 = sext i32 %9 to i64, !dbg !1898
  %10 = load i8*, i8** %top.addr, align 8, !dbg !1898
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 %idxprom10, !dbg !1898
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !1898
  %conv12 = zext i8 %11 to i32, !dbg !1898
  %12 = load i32, i32* %j, align 4, !dbg !1899
  %idxprom13 = sext i32 %12 to i64, !dbg !1900
  %13 = load i8*, i8** %bottom.addr, align 8, !dbg !1900
  %arrayidx14 = getelementptr inbounds i8, i8* %13, i64 %idxprom13, !dbg !1900
  %14 = load i8, i8* %arrayidx14, align 1, !dbg !1900
  %conv15 = zext i8 %14 to i32, !dbg !1900
  %add = add nsw i32 %conv12, %conv15, !dbg !1901
  %div = sdiv i32 %add, 2, !dbg !1902
  %15 = load i32, i32* %j, align 4, !dbg !1903
  %idxprom16 = sext i32 %15 to i64, !dbg !1904
  %16 = load i8*, i8** %top.addr, align 8, !dbg !1904
  %arrayidx17 = getelementptr inbounds i8, i8* %16, i64 %idxprom16, !dbg !1904
  %17 = load i8, i8* %arrayidx17, align 1, !dbg !1904
  %conv18 = zext i8 %17 to i32, !dbg !1904
  %sub = sub nsw i32 %div, %conv18, !dbg !1905
  %conv19 = sitofp i32 %sub to double, !dbg !1906
  %18 = load double, double* %opacity, align 8, !dbg !1907
  %mul = fmul double %conv19, %18, !dbg !1908
  %add20 = fadd double %conv9, %mul, !dbg !1909
  %conv21 = fptoui double %add20 to i8, !dbg !1896
  %19 = load i32, i32* %j, align 4, !dbg !1910
  %idxprom22 = sext i32 %19 to i64, !dbg !1911
  %20 = load i8*, i8** %dst.addr, align 8, !dbg !1911
  %arrayidx23 = getelementptr inbounds i8, i8* %20, i64 %idxprom22, !dbg !1911
  store i8 %conv21, i8* %arrayidx23, align 1, !dbg !1912
  br label %for.inc, !dbg !1913

for.inc:                                          ; preds = %for.body7
  %21 = load i32, i32* %j, align 4, !dbg !1914
  %inc = add nsw i32 %21, 1, !dbg !1914
  store i32 %inc, i32* %j, align 4, !dbg !1914
  br label %for.cond3, !dbg !1916, !llvm.loop !1917

for.end:                                          ; preds = %for.cond3
  %22 = load i64, i64* %dst_linesize.addr, align 8, !dbg !1919
  %23 = load i8*, i8** %dst.addr, align 8, !dbg !1921
  %add.ptr = getelementptr inbounds i8, i8* %23, i64 %22, !dbg !1921
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !1921
  %24 = load i64, i64* %top_linesize.addr, align 8, !dbg !1922
  %25 = load i8*, i8** %top.addr, align 8, !dbg !1923
  %add.ptr24 = getelementptr inbounds i8, i8* %25, i64 %24, !dbg !1923
  store i8* %add.ptr24, i8** %top.addr, align 8, !dbg !1923
  %26 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !1924
  %27 = load i8*, i8** %bottom.addr, align 8, !dbg !1925
  %add.ptr25 = getelementptr inbounds i8, i8* %27, i64 %26, !dbg !1925
  store i8* %add.ptr25, i8** %bottom.addr, align 8, !dbg !1925
  br label %for.inc26, !dbg !1926

for.inc26:                                        ; preds = %for.end
  %28 = load i32, i32* %i, align 4, !dbg !1927
  %inc27 = add nsw i32 %28, 1, !dbg !1927
  store i32 %inc27, i32* %i, align 4, !dbg !1927
  br label %for.cond, !dbg !1929, !llvm.loop !1930

for.end28:                                        ; preds = %for.cond
  ret void, !dbg !1932
}

; Function Attrs: nounwind uwtable
define internal void @blend_burn_8bit(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !1934 {
entry:
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !1935, metadata !905), !dbg !1936
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !1937, metadata !905), !dbg !1938
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !1939, metadata !905), !dbg !1940
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !1941, metadata !905), !dbg !1942
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !1943, metadata !905), !dbg !1944
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !1945, metadata !905), !dbg !1946
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !1947, metadata !905), !dbg !1948
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !1949, metadata !905), !dbg !1950
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !1951, metadata !905), !dbg !1952
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !1953, metadata !905), !dbg !1954
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !1955, metadata !905), !dbg !1956
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !1957, metadata !905), !dbg !1958
  %0 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !1959
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %0, i32 0, i32 1, !dbg !1960
  %1 = load double, double* %opacity1, align 8, !dbg !1960
  store double %1, double* %opacity, align 8, !dbg !1958
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1961, metadata !905), !dbg !1962
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1963, metadata !905), !dbg !1964
  store i32 0, i32* %i, align 4, !dbg !1965
  br label %for.cond, !dbg !1967

for.cond:                                         ; preds = %for.inc51, %entry
  %2 = load i32, i32* %i, align 4, !dbg !1968
  %conv = sext i32 %2 to i64, !dbg !1968
  %3 = load i64, i64* %height.addr, align 8, !dbg !1971
  %cmp = icmp slt i64 %conv, %3, !dbg !1972
  br i1 %cmp, label %for.body, label %for.end53, !dbg !1973

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !1974
  br label %for.cond3, !dbg !1978

for.cond3:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !1979
  %conv4 = sext i32 %4 to i64, !dbg !1979
  %5 = load i64, i64* %width.addr, align 8, !dbg !1982
  %cmp5 = icmp slt i64 %conv4, %5, !dbg !1983
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !1984

for.body7:                                        ; preds = %for.cond3
  %6 = load i32, i32* %j, align 4, !dbg !1985
  %idxprom = sext i32 %6 to i64, !dbg !1988
  %7 = load i8*, i8** %top.addr, align 8, !dbg !1988
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !1988
  %8 = load i8, i8* %arrayidx, align 1, !dbg !1988
  %conv8 = zext i8 %8 to i32, !dbg !1988
  %conv9 = sitofp i32 %conv8 to double, !dbg !1988
  %9 = load i32, i32* %j, align 4, !dbg !1989
  %idxprom10 = sext i32 %9 to i64, !dbg !1990
  %10 = load i8*, i8** %top.addr, align 8, !dbg !1990
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 %idxprom10, !dbg !1990
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !1990
  %conv12 = zext i8 %11 to i32, !dbg !1991
  %cmp13 = icmp eq i32 %conv12, 0, !dbg !1992
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !1993

cond.true:                                        ; preds = %for.body7
  %12 = load i32, i32* %j, align 4, !dbg !1994
  %idxprom15 = sext i32 %12 to i64, !dbg !1996
  %13 = load i8*, i8** %top.addr, align 8, !dbg !1996
  %arrayidx16 = getelementptr inbounds i8, i8* %13, i64 %idxprom15, !dbg !1996
  %14 = load i8, i8* %arrayidx16, align 1, !dbg !1996
  %conv17 = zext i8 %14 to i32, !dbg !1997
  br label %cond.end39, !dbg !1998

cond.false:                                       ; preds = %for.body7
  %15 = load i32, i32* %j, align 4, !dbg !1999
  %idxprom18 = sext i32 %15 to i64, !dbg !2001
  %16 = load i8*, i8** %bottom.addr, align 8, !dbg !2001
  %arrayidx19 = getelementptr inbounds i8, i8* %16, i64 %idxprom18, !dbg !2001
  %17 = load i8, i8* %arrayidx19, align 1, !dbg !2001
  %conv20 = zext i8 %17 to i32, !dbg !2002
  %sub = sub nsw i32 255, %conv20, !dbg !2003
  %shl = shl i32 %sub, 8, !dbg !2004
  %18 = load i32, i32* %j, align 4, !dbg !2005
  %idxprom21 = sext i32 %18 to i64, !dbg !2006
  %19 = load i8*, i8** %top.addr, align 8, !dbg !2006
  %arrayidx22 = getelementptr inbounds i8, i8* %19, i64 %idxprom21, !dbg !2006
  %20 = load i8, i8* %arrayidx22, align 1, !dbg !2006
  %conv23 = zext i8 %20 to i32, !dbg !2007
  %div = sdiv i32 %shl, %conv23, !dbg !2008
  %sub24 = sub nsw i32 255, %div, !dbg !2009
  %cmp25 = icmp sgt i32 0, %sub24, !dbg !2010
  br i1 %cmp25, label %cond.true27, label %cond.false28, !dbg !2011

cond.true27:                                      ; preds = %cond.false
  br label %cond.end, !dbg !2012

cond.false28:                                     ; preds = %cond.false
  %21 = load i32, i32* %j, align 4, !dbg !2014
  %idxprom29 = sext i32 %21 to i64, !dbg !2016
  %22 = load i8*, i8** %bottom.addr, align 8, !dbg !2016
  %arrayidx30 = getelementptr inbounds i8, i8* %22, i64 %idxprom29, !dbg !2016
  %23 = load i8, i8* %arrayidx30, align 1, !dbg !2016
  %conv31 = zext i8 %23 to i32, !dbg !2017
  %sub32 = sub nsw i32 255, %conv31, !dbg !2018
  %shl33 = shl i32 %sub32, 8, !dbg !2019
  %24 = load i32, i32* %j, align 4, !dbg !2020
  %idxprom34 = sext i32 %24 to i64, !dbg !2021
  %25 = load i8*, i8** %top.addr, align 8, !dbg !2021
  %arrayidx35 = getelementptr inbounds i8, i8* %25, i64 %idxprom34, !dbg !2021
  %26 = load i8, i8* %arrayidx35, align 1, !dbg !2021
  %conv36 = zext i8 %26 to i32, !dbg !2022
  %div37 = sdiv i32 %shl33, %conv36, !dbg !2023
  %sub38 = sub nsw i32 255, %div37, !dbg !2024
  br label %cond.end, !dbg !2025

cond.end:                                         ; preds = %cond.false28, %cond.true27
  %cond = phi i32 [ 0, %cond.true27 ], [ %sub38, %cond.false28 ], !dbg !2026
  br label %cond.end39, !dbg !2028

cond.end39:                                       ; preds = %cond.end, %cond.true
  %cond40 = phi i32 [ %conv17, %cond.true ], [ %cond, %cond.end ], !dbg !2029
  %27 = load i32, i32* %j, align 4, !dbg !2031
  %idxprom41 = sext i32 %27 to i64, !dbg !2032
  %28 = load i8*, i8** %top.addr, align 8, !dbg !2032
  %arrayidx42 = getelementptr inbounds i8, i8* %28, i64 %idxprom41, !dbg !2032
  %29 = load i8, i8* %arrayidx42, align 1, !dbg !2032
  %conv43 = zext i8 %29 to i32, !dbg !2032
  %sub44 = sub nsw i32 %cond40, %conv43, !dbg !2033
  %conv45 = sitofp i32 %sub44 to double, !dbg !2034
  %30 = load double, double* %opacity, align 8, !dbg !2035
  %mul = fmul double %conv45, %30, !dbg !2036
  %add = fadd double %conv9, %mul, !dbg !2037
  %conv46 = fptoui double %add to i8, !dbg !2038
  %31 = load i32, i32* %j, align 4, !dbg !2039
  %idxprom47 = sext i32 %31 to i64, !dbg !2040
  %32 = load i8*, i8** %dst.addr, align 8, !dbg !2040
  %arrayidx48 = getelementptr inbounds i8, i8* %32, i64 %idxprom47, !dbg !2040
  store i8 %conv46, i8* %arrayidx48, align 1, !dbg !2041
  br label %for.inc, !dbg !2042

for.inc:                                          ; preds = %cond.end39
  %33 = load i32, i32* %j, align 4, !dbg !2043
  %inc = add nsw i32 %33, 1, !dbg !2043
  store i32 %inc, i32* %j, align 4, !dbg !2043
  br label %for.cond3, !dbg !2045, !llvm.loop !2046

for.end:                                          ; preds = %for.cond3
  %34 = load i64, i64* %dst_linesize.addr, align 8, !dbg !2048
  %35 = load i8*, i8** %dst.addr, align 8, !dbg !2050
  %add.ptr = getelementptr inbounds i8, i8* %35, i64 %34, !dbg !2050
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !2050
  %36 = load i64, i64* %top_linesize.addr, align 8, !dbg !2051
  %37 = load i8*, i8** %top.addr, align 8, !dbg !2052
  %add.ptr49 = getelementptr inbounds i8, i8* %37, i64 %36, !dbg !2052
  store i8* %add.ptr49, i8** %top.addr, align 8, !dbg !2052
  %38 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !2053
  %39 = load i8*, i8** %bottom.addr, align 8, !dbg !2054
  %add.ptr50 = getelementptr inbounds i8, i8* %39, i64 %38, !dbg !2054
  store i8* %add.ptr50, i8** %bottom.addr, align 8, !dbg !2054
  br label %for.inc51, !dbg !2055

for.inc51:                                        ; preds = %for.end
  %40 = load i32, i32* %i, align 4, !dbg !2056
  %inc52 = add nsw i32 %40, 1, !dbg !2056
  store i32 %inc52, i32* %i, align 4, !dbg !2056
  br label %for.cond, !dbg !2058, !llvm.loop !2059

for.end53:                                        ; preds = %for.cond
  ret void, !dbg !2061
}

; Function Attrs: nounwind uwtable
define internal void @blend_darken_8bit(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !2063 {
entry:
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !2064, metadata !905), !dbg !2065
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !2066, metadata !905), !dbg !2067
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !2068, metadata !905), !dbg !2069
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !2070, metadata !905), !dbg !2071
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !2072, metadata !905), !dbg !2073
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !2074, metadata !905), !dbg !2075
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !2076, metadata !905), !dbg !2077
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !2078, metadata !905), !dbg !2079
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !2080, metadata !905), !dbg !2081
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !2082, metadata !905), !dbg !2083
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !2084, metadata !905), !dbg !2085
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !2086, metadata !905), !dbg !2087
  %0 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !2088
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %0, i32 0, i32 1, !dbg !2089
  %1 = load double, double* %opacity1, align 8, !dbg !2089
  store double %1, double* %opacity, align 8, !dbg !2087
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2090, metadata !905), !dbg !2091
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2092, metadata !905), !dbg !2093
  store i32 0, i32* %i, align 4, !dbg !2094
  br label %for.cond, !dbg !2096

for.cond:                                         ; preds = %for.inc33, %entry
  %2 = load i32, i32* %i, align 4, !dbg !2097
  %conv = sext i32 %2 to i64, !dbg !2097
  %3 = load i64, i64* %height.addr, align 8, !dbg !2100
  %cmp = icmp slt i64 %conv, %3, !dbg !2101
  br i1 %cmp, label %for.body, label %for.end35, !dbg !2102

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !2103
  br label %for.cond3, !dbg !2107

for.cond3:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !2108
  %conv4 = sext i32 %4 to i64, !dbg !2108
  %5 = load i64, i64* %width.addr, align 8, !dbg !2111
  %cmp5 = icmp slt i64 %conv4, %5, !dbg !2112
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !2113

for.body7:                                        ; preds = %for.cond3
  %6 = load i32, i32* %j, align 4, !dbg !2114
  %idxprom = sext i32 %6 to i64, !dbg !2117
  %7 = load i8*, i8** %top.addr, align 8, !dbg !2117
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !2117
  %8 = load i8, i8* %arrayidx, align 1, !dbg !2117
  %conv8 = zext i8 %8 to i32, !dbg !2117
  %conv9 = sitofp i32 %conv8 to double, !dbg !2117
  %9 = load i32, i32* %j, align 4, !dbg !2118
  %idxprom10 = sext i32 %9 to i64, !dbg !2119
  %10 = load i8*, i8** %top.addr, align 8, !dbg !2119
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 %idxprom10, !dbg !2119
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !2119
  %conv12 = zext i8 %11 to i32, !dbg !2120
  %12 = load i32, i32* %j, align 4, !dbg !2121
  %idxprom13 = sext i32 %12 to i64, !dbg !2122
  %13 = load i8*, i8** %bottom.addr, align 8, !dbg !2122
  %arrayidx14 = getelementptr inbounds i8, i8* %13, i64 %idxprom13, !dbg !2122
  %14 = load i8, i8* %arrayidx14, align 1, !dbg !2122
  %conv15 = zext i8 %14 to i32, !dbg !2123
  %cmp16 = icmp sgt i32 %conv12, %conv15, !dbg !2124
  br i1 %cmp16, label %cond.true, label %cond.false, !dbg !2120

cond.true:                                        ; preds = %for.body7
  %15 = load i32, i32* %j, align 4, !dbg !2125
  %idxprom18 = sext i32 %15 to i64, !dbg !2127
  %16 = load i8*, i8** %bottom.addr, align 8, !dbg !2127
  %arrayidx19 = getelementptr inbounds i8, i8* %16, i64 %idxprom18, !dbg !2127
  %17 = load i8, i8* %arrayidx19, align 1, !dbg !2127
  %conv20 = zext i8 %17 to i32, !dbg !2128
  br label %cond.end, !dbg !2129

cond.false:                                       ; preds = %for.body7
  %18 = load i32, i32* %j, align 4, !dbg !2130
  %idxprom21 = sext i32 %18 to i64, !dbg !2132
  %19 = load i8*, i8** %top.addr, align 8, !dbg !2132
  %arrayidx22 = getelementptr inbounds i8, i8* %19, i64 %idxprom21, !dbg !2132
  %20 = load i8, i8* %arrayidx22, align 1, !dbg !2132
  %conv23 = zext i8 %20 to i32, !dbg !2133
  br label %cond.end, !dbg !2134

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv20, %cond.true ], [ %conv23, %cond.false ], !dbg !2135
  %21 = load i32, i32* %j, align 4, !dbg !2137
  %idxprom24 = sext i32 %21 to i64, !dbg !2138
  %22 = load i8*, i8** %top.addr, align 8, !dbg !2138
  %arrayidx25 = getelementptr inbounds i8, i8* %22, i64 %idxprom24, !dbg !2138
  %23 = load i8, i8* %arrayidx25, align 1, !dbg !2138
  %conv26 = zext i8 %23 to i32, !dbg !2138
  %sub = sub nsw i32 %cond, %conv26, !dbg !2139
  %conv27 = sitofp i32 %sub to double, !dbg !2140
  %24 = load double, double* %opacity, align 8, !dbg !2141
  %mul = fmul double %conv27, %24, !dbg !2142
  %add = fadd double %conv9, %mul, !dbg !2143
  %conv28 = fptoui double %add to i8, !dbg !2144
  %25 = load i32, i32* %j, align 4, !dbg !2145
  %idxprom29 = sext i32 %25 to i64, !dbg !2146
  %26 = load i8*, i8** %dst.addr, align 8, !dbg !2146
  %arrayidx30 = getelementptr inbounds i8, i8* %26, i64 %idxprom29, !dbg !2146
  store i8 %conv28, i8* %arrayidx30, align 1, !dbg !2147
  br label %for.inc, !dbg !2148

for.inc:                                          ; preds = %cond.end
  %27 = load i32, i32* %j, align 4, !dbg !2149
  %inc = add nsw i32 %27, 1, !dbg !2149
  store i32 %inc, i32* %j, align 4, !dbg !2149
  br label %for.cond3, !dbg !2151, !llvm.loop !2152

for.end:                                          ; preds = %for.cond3
  %28 = load i64, i64* %dst_linesize.addr, align 8, !dbg !2154
  %29 = load i8*, i8** %dst.addr, align 8, !dbg !2156
  %add.ptr = getelementptr inbounds i8, i8* %29, i64 %28, !dbg !2156
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !2156
  %30 = load i64, i64* %top_linesize.addr, align 8, !dbg !2157
  %31 = load i8*, i8** %top.addr, align 8, !dbg !2158
  %add.ptr31 = getelementptr inbounds i8, i8* %31, i64 %30, !dbg !2158
  store i8* %add.ptr31, i8** %top.addr, align 8, !dbg !2158
  %32 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !2159
  %33 = load i8*, i8** %bottom.addr, align 8, !dbg !2160
  %add.ptr32 = getelementptr inbounds i8, i8* %33, i64 %32, !dbg !2160
  store i8* %add.ptr32, i8** %bottom.addr, align 8, !dbg !2160
  br label %for.inc33, !dbg !2161

for.inc33:                                        ; preds = %for.end
  %34 = load i32, i32* %i, align 4, !dbg !2162
  %inc34 = add nsw i32 %34, 1, !dbg !2162
  store i32 %inc34, i32* %i, align 4, !dbg !2162
  br label %for.cond, !dbg !2164, !llvm.loop !2165

for.end35:                                        ; preds = %for.cond
  ret void, !dbg !2167
}

; Function Attrs: nounwind uwtable
define internal void @blend_difference_8bit(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !2169 {
entry:
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !2170, metadata !905), !dbg !2171
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !2172, metadata !905), !dbg !2173
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !2174, metadata !905), !dbg !2175
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !2176, metadata !905), !dbg !2177
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !2178, metadata !905), !dbg !2179
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !2180, metadata !905), !dbg !2181
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !2182, metadata !905), !dbg !2183
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !2184, metadata !905), !dbg !2185
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !2186, metadata !905), !dbg !2187
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !2188, metadata !905), !dbg !2189
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !2190, metadata !905), !dbg !2191
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !2192, metadata !905), !dbg !2193
  %0 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !2194
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %0, i32 0, i32 1, !dbg !2195
  %1 = load double, double* %opacity1, align 8, !dbg !2195
  store double %1, double* %opacity, align 8, !dbg !2193
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2196, metadata !905), !dbg !2197
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2198, metadata !905), !dbg !2199
  store i32 0, i32* %i, align 4, !dbg !2200
  br label %for.cond, !dbg !2202

for.cond:                                         ; preds = %for.inc43, %entry
  %2 = load i32, i32* %i, align 4, !dbg !2203
  %conv = sext i32 %2 to i64, !dbg !2203
  %3 = load i64, i64* %height.addr, align 8, !dbg !2206
  %cmp = icmp slt i64 %conv, %3, !dbg !2207
  br i1 %cmp, label %for.body, label %for.end45, !dbg !2208

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !2209
  br label %for.cond3, !dbg !2213

for.cond3:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !2214
  %conv4 = sext i32 %4 to i64, !dbg !2214
  %5 = load i64, i64* %width.addr, align 8, !dbg !2217
  %cmp5 = icmp slt i64 %conv4, %5, !dbg !2218
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !2219

for.body7:                                        ; preds = %for.cond3
  %6 = load i32, i32* %j, align 4, !dbg !2220
  %idxprom = sext i32 %6 to i64, !dbg !2223
  %7 = load i8*, i8** %top.addr, align 8, !dbg !2223
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !2223
  %8 = load i8, i8* %arrayidx, align 1, !dbg !2223
  %conv8 = zext i8 %8 to i32, !dbg !2223
  %conv9 = sitofp i32 %conv8 to double, !dbg !2223
  %9 = load i32, i32* %j, align 4, !dbg !2224
  %idxprom10 = sext i32 %9 to i64, !dbg !2225
  %10 = load i8*, i8** %top.addr, align 8, !dbg !2225
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 %idxprom10, !dbg !2225
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !2225
  %conv12 = zext i8 %11 to i32, !dbg !2225
  %12 = load i32, i32* %j, align 4, !dbg !2226
  %idxprom13 = sext i32 %12 to i64, !dbg !2227
  %13 = load i8*, i8** %bottom.addr, align 8, !dbg !2227
  %arrayidx14 = getelementptr inbounds i8, i8* %13, i64 %idxprom13, !dbg !2227
  %14 = load i8, i8* %arrayidx14, align 1, !dbg !2227
  %conv15 = zext i8 %14 to i32, !dbg !2227
  %sub = sub nsw i32 %conv12, %conv15, !dbg !2228
  %cmp16 = icmp sge i32 %sub, 0, !dbg !2229
  br i1 %cmp16, label %cond.true, label %cond.false, !dbg !2230

cond.true:                                        ; preds = %for.body7
  %15 = load i32, i32* %j, align 4, !dbg !2231
  %idxprom18 = sext i32 %15 to i64, !dbg !2233
  %16 = load i8*, i8** %top.addr, align 8, !dbg !2233
  %arrayidx19 = getelementptr inbounds i8, i8* %16, i64 %idxprom18, !dbg !2233
  %17 = load i8, i8* %arrayidx19, align 1, !dbg !2233
  %conv20 = zext i8 %17 to i32, !dbg !2233
  %18 = load i32, i32* %j, align 4, !dbg !2234
  %idxprom21 = sext i32 %18 to i64, !dbg !2235
  %19 = load i8*, i8** %bottom.addr, align 8, !dbg !2235
  %arrayidx22 = getelementptr inbounds i8, i8* %19, i64 %idxprom21, !dbg !2235
  %20 = load i8, i8* %arrayidx22, align 1, !dbg !2235
  %conv23 = zext i8 %20 to i32, !dbg !2235
  %sub24 = sub nsw i32 %conv20, %conv23, !dbg !2236
  br label %cond.end, !dbg !2237

cond.false:                                       ; preds = %for.body7
  %21 = load i32, i32* %j, align 4, !dbg !2238
  %idxprom25 = sext i32 %21 to i64, !dbg !2240
  %22 = load i8*, i8** %top.addr, align 8, !dbg !2240
  %arrayidx26 = getelementptr inbounds i8, i8* %22, i64 %idxprom25, !dbg !2240
  %23 = load i8, i8* %arrayidx26, align 1, !dbg !2240
  %conv27 = zext i8 %23 to i32, !dbg !2240
  %24 = load i32, i32* %j, align 4, !dbg !2241
  %idxprom28 = sext i32 %24 to i64, !dbg !2242
  %25 = load i8*, i8** %bottom.addr, align 8, !dbg !2242
  %arrayidx29 = getelementptr inbounds i8, i8* %25, i64 %idxprom28, !dbg !2242
  %26 = load i8, i8* %arrayidx29, align 1, !dbg !2242
  %conv30 = zext i8 %26 to i32, !dbg !2242
  %sub31 = sub nsw i32 %conv27, %conv30, !dbg !2243
  %sub32 = sub nsw i32 0, %sub31, !dbg !2244
  br label %cond.end, !dbg !2245

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub24, %cond.true ], [ %sub32, %cond.false ], !dbg !2246
  %27 = load i32, i32* %j, align 4, !dbg !2248
  %idxprom33 = sext i32 %27 to i64, !dbg !2249
  %28 = load i8*, i8** %top.addr, align 8, !dbg !2249
  %arrayidx34 = getelementptr inbounds i8, i8* %28, i64 %idxprom33, !dbg !2249
  %29 = load i8, i8* %arrayidx34, align 1, !dbg !2249
  %conv35 = zext i8 %29 to i32, !dbg !2249
  %sub36 = sub nsw i32 %cond, %conv35, !dbg !2250
  %conv37 = sitofp i32 %sub36 to double, !dbg !2251
  %30 = load double, double* %opacity, align 8, !dbg !2252
  %mul = fmul double %conv37, %30, !dbg !2253
  %add = fadd double %conv9, %mul, !dbg !2254
  %conv38 = fptoui double %add to i8, !dbg !2255
  %31 = load i32, i32* %j, align 4, !dbg !2256
  %idxprom39 = sext i32 %31 to i64, !dbg !2257
  %32 = load i8*, i8** %dst.addr, align 8, !dbg !2257
  %arrayidx40 = getelementptr inbounds i8, i8* %32, i64 %idxprom39, !dbg !2257
  store i8 %conv38, i8* %arrayidx40, align 1, !dbg !2258
  br label %for.inc, !dbg !2259

for.inc:                                          ; preds = %cond.end
  %33 = load i32, i32* %j, align 4, !dbg !2260
  %inc = add nsw i32 %33, 1, !dbg !2260
  store i32 %inc, i32* %j, align 4, !dbg !2260
  br label %for.cond3, !dbg !2262, !llvm.loop !2263

for.end:                                          ; preds = %for.cond3
  %34 = load i64, i64* %dst_linesize.addr, align 8, !dbg !2265
  %35 = load i8*, i8** %dst.addr, align 8, !dbg !2267
  %add.ptr = getelementptr inbounds i8, i8* %35, i64 %34, !dbg !2267
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !2267
  %36 = load i64, i64* %top_linesize.addr, align 8, !dbg !2268
  %37 = load i8*, i8** %top.addr, align 8, !dbg !2269
  %add.ptr41 = getelementptr inbounds i8, i8* %37, i64 %36, !dbg !2269
  store i8* %add.ptr41, i8** %top.addr, align 8, !dbg !2269
  %38 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !2270
  %39 = load i8*, i8** %bottom.addr, align 8, !dbg !2271
  %add.ptr42 = getelementptr inbounds i8, i8* %39, i64 %38, !dbg !2271
  store i8* %add.ptr42, i8** %bottom.addr, align 8, !dbg !2271
  br label %for.inc43, !dbg !2272

for.inc43:                                        ; preds = %for.end
  %40 = load i32, i32* %i, align 4, !dbg !2273
  %inc44 = add nsw i32 %40, 1, !dbg !2273
  store i32 %inc44, i32* %i, align 4, !dbg !2273
  br label %for.cond, !dbg !2275, !llvm.loop !2276

for.end45:                                        ; preds = %for.cond
  ret void, !dbg !2278
}

; Function Attrs: nounwind uwtable
define internal void @blend_grainextract_8bit(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !2280 {
entry:
  %retval.i = alloca i8, align 1
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !1638, metadata !905), !dbg !2281
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !2290, metadata !905), !dbg !2291
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !2292, metadata !905), !dbg !2293
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !2294, metadata !905), !dbg !2295
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !2296, metadata !905), !dbg !2297
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !2298, metadata !905), !dbg !2299
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !2300, metadata !905), !dbg !2301
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !2302, metadata !905), !dbg !2303
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !2304, metadata !905), !dbg !2305
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !2306, metadata !905), !dbg !2307
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !2308, metadata !905), !dbg !2309
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !2310, metadata !905), !dbg !2311
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !2312, metadata !905), !dbg !2313
  %0 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !2314
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %0, i32 0, i32 1, !dbg !2315
  %1 = load double, double* %opacity1, align 8, !dbg !2315
  store double %1, double* %opacity, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2316, metadata !905), !dbg !2317
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2318, metadata !905), !dbg !2319
  store i32 0, i32* %i, align 4, !dbg !2320
  br label %for.cond, !dbg !2321

for.cond:                                         ; preds = %for.inc28, %entry
  %2 = load i32, i32* %i, align 4, !dbg !2322
  %conv = sext i32 %2 to i64, !dbg !2322
  %3 = load i64, i64* %height.addr, align 8, !dbg !2324
  %cmp = icmp slt i64 %conv, %3, !dbg !2325
  br i1 %cmp, label %for.body, label %for.end30, !dbg !2326

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !2327
  br label %for.cond3, !dbg !2329

for.cond3:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !2330
  %conv4 = sext i32 %4 to i64, !dbg !2330
  %5 = load i64, i64* %width.addr, align 8, !dbg !2332
  %cmp5 = icmp slt i64 %conv4, %5, !dbg !2333
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !2334

for.body7:                                        ; preds = %for.cond3
  %6 = load i32, i32* %j, align 4, !dbg !2335
  %idxprom = sext i32 %6 to i64, !dbg !2336
  %7 = load i8*, i8** %top.addr, align 8, !dbg !2336
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !2336
  %8 = load i8, i8* %arrayidx, align 1, !dbg !2336
  %conv8 = zext i8 %8 to i32, !dbg !2336
  %conv9 = sitofp i32 %conv8 to double, !dbg !2336
  %9 = load i32, i32* %j, align 4, !dbg !2337
  %idxprom10 = sext i32 %9 to i64, !dbg !2338
  %10 = load i8*, i8** %top.addr, align 8, !dbg !2338
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 %idxprom10, !dbg !2338
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !2338
  %conv12 = zext i8 %11 to i32, !dbg !2338
  %add = add nsw i32 128, %conv12, !dbg !2339
  %12 = load i32, i32* %j, align 4, !dbg !2340
  %idxprom13 = sext i32 %12 to i64, !dbg !2341
  %13 = load i8*, i8** %bottom.addr, align 8, !dbg !2341
  %arrayidx14 = getelementptr inbounds i8, i8* %13, i64 %idxprom13, !dbg !2341
  %14 = load i8, i8* %arrayidx14, align 1, !dbg !2341
  %conv15 = zext i8 %14 to i32, !dbg !2341
  %sub = sub nsw i32 %add, %conv15, !dbg !2342
  store i32 %sub, i32* %a.addr.i, align 4, !dbg !2343
  %15 = load i32, i32* %a.addr.i, align 4, !dbg !2344
  %and.i = and i32 %15, -256, !dbg !2345
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !2345
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !2346

if.then.i:                                        ; preds = %for.body7
  %16 = load i32, i32* %a.addr.i, align 4, !dbg !2347
  %neg.i = xor i32 %16, -1, !dbg !2348
  %shr.i = ashr i32 %neg.i, 31, !dbg !2349
  %conv.i = trunc i32 %shr.i to i8, !dbg !2350
  store i8 %conv.i, i8* %retval.i, align 1, !dbg !2351
  br label %av_clip_uint8_c.exit, !dbg !2351

if.else.i:                                        ; preds = %for.body7
  %17 = load i32, i32* %a.addr.i, align 4, !dbg !2352
  %conv1.i = trunc i32 %17 to i8, !dbg !2352
  store i8 %conv1.i, i8* %retval.i, align 1, !dbg !2353
  br label %av_clip_uint8_c.exit, !dbg !2353

av_clip_uint8_c.exit:                             ; preds = %if.then.i, %if.else.i
  %18 = load i8, i8* %retval.i, align 1, !dbg !2354
  %conv16 = zext i8 %18 to i32, !dbg !2355
  %19 = load i32, i32* %j, align 4, !dbg !2356
  %idxprom17 = sext i32 %19 to i64, !dbg !2357
  %20 = load i8*, i8** %top.addr, align 8, !dbg !2357
  %arrayidx18 = getelementptr inbounds i8, i8* %20, i64 %idxprom17, !dbg !2357
  %21 = load i8, i8* %arrayidx18, align 1, !dbg !2357
  %conv19 = zext i8 %21 to i32, !dbg !2357
  %sub20 = sub nsw i32 %conv16, %conv19, !dbg !2358
  %conv21 = sitofp i32 %sub20 to double, !dbg !2359
  %22 = load double, double* %opacity, align 8, !dbg !2360
  %mul = fmul double %conv21, %22, !dbg !2361
  %add22 = fadd double %conv9, %mul, !dbg !2362
  %conv23 = fptoui double %add22 to i8, !dbg !2336
  %23 = load i32, i32* %j, align 4, !dbg !2363
  %idxprom24 = sext i32 %23 to i64, !dbg !2364
  %24 = load i8*, i8** %dst.addr, align 8, !dbg !2364
  %arrayidx25 = getelementptr inbounds i8, i8* %24, i64 %idxprom24, !dbg !2364
  store i8 %conv23, i8* %arrayidx25, align 1, !dbg !2365
  br label %for.inc, !dbg !2366

for.inc:                                          ; preds = %av_clip_uint8_c.exit
  %25 = load i32, i32* %j, align 4, !dbg !2367
  %inc = add nsw i32 %25, 1, !dbg !2367
  store i32 %inc, i32* %j, align 4, !dbg !2367
  br label %for.cond3, !dbg !2369, !llvm.loop !2370

for.end:                                          ; preds = %for.cond3
  %26 = load i64, i64* %dst_linesize.addr, align 8, !dbg !2372
  %27 = load i8*, i8** %dst.addr, align 8, !dbg !2374
  %add.ptr = getelementptr inbounds i8, i8* %27, i64 %26, !dbg !2374
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !2374
  %28 = load i64, i64* %top_linesize.addr, align 8, !dbg !2375
  %29 = load i8*, i8** %top.addr, align 8, !dbg !2376
  %add.ptr26 = getelementptr inbounds i8, i8* %29, i64 %28, !dbg !2376
  store i8* %add.ptr26, i8** %top.addr, align 8, !dbg !2376
  %30 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !2377
  %31 = load i8*, i8** %bottom.addr, align 8, !dbg !2378
  %add.ptr27 = getelementptr inbounds i8, i8* %31, i64 %30, !dbg !2378
  store i8* %add.ptr27, i8** %bottom.addr, align 8, !dbg !2378
  br label %for.inc28, !dbg !2379

for.inc28:                                        ; preds = %for.end
  %32 = load i32, i32* %i, align 4, !dbg !2380
  %inc29 = add nsw i32 %32, 1, !dbg !2380
  store i32 %inc29, i32* %i, align 4, !dbg !2380
  br label %for.cond, !dbg !2382, !llvm.loop !2383

for.end30:                                        ; preds = %for.cond
  ret void, !dbg !2385
}

; Function Attrs: nounwind uwtable
define internal void @blend_divide_8bit(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !2387 {
entry:
  %retval.i = alloca i8, align 1
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !1638, metadata !905), !dbg !2388
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !2397, metadata !905), !dbg !2398
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !2399, metadata !905), !dbg !2400
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !2401, metadata !905), !dbg !2402
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !2403, metadata !905), !dbg !2404
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !2405, metadata !905), !dbg !2406
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !2407, metadata !905), !dbg !2408
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !2409, metadata !905), !dbg !2410
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !2411, metadata !905), !dbg !2412
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !2413, metadata !905), !dbg !2414
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !2415, metadata !905), !dbg !2416
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !2417, metadata !905), !dbg !2418
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !2419, metadata !905), !dbg !2420
  %0 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !2421
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %0, i32 0, i32 1, !dbg !2422
  %1 = load double, double* %opacity1, align 8, !dbg !2422
  store double %1, double* %opacity, align 8, !dbg !2420
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2423, metadata !905), !dbg !2424
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2425, metadata !905), !dbg !2426
  store i32 0, i32* %i, align 4, !dbg !2427
  br label %for.cond, !dbg !2428

for.cond:                                         ; preds = %for.inc32, %entry
  %2 = load i32, i32* %i, align 4, !dbg !2429
  %conv = sext i32 %2 to i64, !dbg !2429
  %3 = load i64, i64* %height.addr, align 8, !dbg !2431
  %cmp = icmp slt i64 %conv, %3, !dbg !2432
  br i1 %cmp, label %for.body, label %for.end34, !dbg !2433

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !2434
  br label %for.cond3, !dbg !2436

for.cond3:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !2437
  %conv4 = sext i32 %4 to i64, !dbg !2437
  %5 = load i64, i64* %width.addr, align 8, !dbg !2439
  %cmp5 = icmp slt i64 %conv4, %5, !dbg !2440
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !2441

for.body7:                                        ; preds = %for.cond3
  %6 = load i32, i32* %j, align 4, !dbg !2442
  %idxprom = sext i32 %6 to i64, !dbg !2444
  %7 = load i8*, i8** %top.addr, align 8, !dbg !2444
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !2444
  %8 = load i8, i8* %arrayidx, align 1, !dbg !2444
  %conv8 = zext i8 %8 to i32, !dbg !2444
  %conv9 = sitofp i32 %conv8 to double, !dbg !2444
  %9 = load i32, i32* %j, align 4, !dbg !2445
  %idxprom10 = sext i32 %9 to i64, !dbg !2446
  %10 = load i8*, i8** %bottom.addr, align 8, !dbg !2446
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 %idxprom10, !dbg !2446
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !2446
  %conv12 = zext i8 %11 to i32, !dbg !2446
  %cmp13 = icmp eq i32 %conv12, 0, !dbg !2447
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !2446

cond.true:                                        ; preds = %for.body7
  br label %cond.end, !dbg !2448

cond.false:                                       ; preds = %for.body7
  %12 = load i32, i32* %j, align 4, !dbg !2450
  %idxprom15 = sext i32 %12 to i64, !dbg !2452
  %13 = load i8*, i8** %top.addr, align 8, !dbg !2452
  %arrayidx16 = getelementptr inbounds i8, i8* %13, i64 %idxprom15, !dbg !2452
  %14 = load i8, i8* %arrayidx16, align 1, !dbg !2452
  %conv17 = zext i8 %14 to i32, !dbg !2452
  %mul = mul nsw i32 255, %conv17, !dbg !2453
  %15 = load i32, i32* %j, align 4, !dbg !2454
  %idxprom18 = sext i32 %15 to i64, !dbg !2455
  %16 = load i8*, i8** %bottom.addr, align 8, !dbg !2455
  %arrayidx19 = getelementptr inbounds i8, i8* %16, i64 %idxprom18, !dbg !2455
  %17 = load i8, i8* %arrayidx19, align 1, !dbg !2455
  %conv20 = zext i8 %17 to i32, !dbg !2455
  %div = sdiv i32 %mul, %conv20, !dbg !2456
  br label %cond.end, !dbg !2457

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 255, %cond.true ], [ %div, %cond.false ], !dbg !2458
  store i32 %cond, i32* %a.addr.i, align 4, !dbg !2459
  %18 = load i32, i32* %a.addr.i, align 4, !dbg !2460
  %and.i = and i32 %18, -256, !dbg !2461
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !2461
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !2462

if.then.i:                                        ; preds = %cond.end
  %19 = load i32, i32* %a.addr.i, align 4, !dbg !2463
  %neg.i = xor i32 %19, -1, !dbg !2464
  %shr.i = ashr i32 %neg.i, 31, !dbg !2465
  %conv.i = trunc i32 %shr.i to i8, !dbg !2466
  store i8 %conv.i, i8* %retval.i, align 1, !dbg !2467
  br label %av_clip_uint8_c.exit, !dbg !2467

if.else.i:                                        ; preds = %cond.end
  %20 = load i32, i32* %a.addr.i, align 4, !dbg !2468
  %conv1.i = trunc i32 %20 to i8, !dbg !2468
  store i8 %conv1.i, i8* %retval.i, align 1, !dbg !2469
  br label %av_clip_uint8_c.exit, !dbg !2469

av_clip_uint8_c.exit:                             ; preds = %if.then.i, %if.else.i
  %21 = load i8, i8* %retval.i, align 1, !dbg !2470
  %conv21 = zext i8 %21 to i32, !dbg !2471
  %22 = load i32, i32* %j, align 4, !dbg !2472
  %idxprom22 = sext i32 %22 to i64, !dbg !2473
  %23 = load i8*, i8** %top.addr, align 8, !dbg !2473
  %arrayidx23 = getelementptr inbounds i8, i8* %23, i64 %idxprom22, !dbg !2473
  %24 = load i8, i8* %arrayidx23, align 1, !dbg !2473
  %conv24 = zext i8 %24 to i32, !dbg !2473
  %sub = sub nsw i32 %conv21, %conv24, !dbg !2474
  %conv25 = sitofp i32 %sub to double, !dbg !2475
  %25 = load double, double* %opacity, align 8, !dbg !2476
  %mul26 = fmul double %conv25, %25, !dbg !2477
  %add = fadd double %conv9, %mul26, !dbg !2478
  %conv27 = fptoui double %add to i8, !dbg !2479
  %26 = load i32, i32* %j, align 4, !dbg !2480
  %idxprom28 = sext i32 %26 to i64, !dbg !2481
  %27 = load i8*, i8** %dst.addr, align 8, !dbg !2481
  %arrayidx29 = getelementptr inbounds i8, i8* %27, i64 %idxprom28, !dbg !2481
  store i8 %conv27, i8* %arrayidx29, align 1, !dbg !2482
  br label %for.inc, !dbg !2483

for.inc:                                          ; preds = %av_clip_uint8_c.exit
  %28 = load i32, i32* %j, align 4, !dbg !2484
  %inc = add nsw i32 %28, 1, !dbg !2484
  store i32 %inc, i32* %j, align 4, !dbg !2484
  br label %for.cond3, !dbg !2486, !llvm.loop !2487

for.end:                                          ; preds = %for.cond3
  %29 = load i64, i64* %dst_linesize.addr, align 8, !dbg !2489
  %30 = load i8*, i8** %dst.addr, align 8, !dbg !2491
  %add.ptr = getelementptr inbounds i8, i8* %30, i64 %29, !dbg !2491
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !2491
  %31 = load i64, i64* %top_linesize.addr, align 8, !dbg !2492
  %32 = load i8*, i8** %top.addr, align 8, !dbg !2493
  %add.ptr30 = getelementptr inbounds i8, i8* %32, i64 %31, !dbg !2493
  store i8* %add.ptr30, i8** %top.addr, align 8, !dbg !2493
  %33 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !2494
  %34 = load i8*, i8** %bottom.addr, align 8, !dbg !2495
  %add.ptr31 = getelementptr inbounds i8, i8* %34, i64 %33, !dbg !2495
  store i8* %add.ptr31, i8** %bottom.addr, align 8, !dbg !2495
  br label %for.inc32, !dbg !2496

for.inc32:                                        ; preds = %for.end
  %35 = load i32, i32* %i, align 4, !dbg !2497
  %inc33 = add nsw i32 %35, 1, !dbg !2497
  store i32 %inc33, i32* %i, align 4, !dbg !2497
  br label %for.cond, !dbg !2499, !llvm.loop !2500

for.end34:                                        ; preds = %for.cond
  ret void, !dbg !2502
}

; Function Attrs: nounwind uwtable
define internal void @blend_dodge_8bit(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !2504 {
entry:
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !2505, metadata !905), !dbg !2506
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !2507, metadata !905), !dbg !2508
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !2509, metadata !905), !dbg !2510
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !2511, metadata !905), !dbg !2512
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !2513, metadata !905), !dbg !2514
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !2515, metadata !905), !dbg !2516
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !2517, metadata !905), !dbg !2518
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !2519, metadata !905), !dbg !2520
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !2521, metadata !905), !dbg !2522
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !2523, metadata !905), !dbg !2524
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !2525, metadata !905), !dbg !2526
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !2527, metadata !905), !dbg !2528
  %0 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !2529
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %0, i32 0, i32 1, !dbg !2530
  %1 = load double, double* %opacity1, align 8, !dbg !2530
  store double %1, double* %opacity, align 8, !dbg !2528
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2531, metadata !905), !dbg !2532
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2533, metadata !905), !dbg !2534
  store i32 0, i32* %i, align 4, !dbg !2535
  br label %for.cond, !dbg !2537

for.cond:                                         ; preds = %for.inc49, %entry
  %2 = load i32, i32* %i, align 4, !dbg !2538
  %conv = sext i32 %2 to i64, !dbg !2538
  %3 = load i64, i64* %height.addr, align 8, !dbg !2541
  %cmp = icmp slt i64 %conv, %3, !dbg !2542
  br i1 %cmp, label %for.body, label %for.end51, !dbg !2543

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !2544
  br label %for.cond3, !dbg !2548

for.cond3:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !2549
  %conv4 = sext i32 %4 to i64, !dbg !2549
  %5 = load i64, i64* %width.addr, align 8, !dbg !2552
  %cmp5 = icmp slt i64 %conv4, %5, !dbg !2553
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !2554

for.body7:                                        ; preds = %for.cond3
  %6 = load i32, i32* %j, align 4, !dbg !2555
  %idxprom = sext i32 %6 to i64, !dbg !2558
  %7 = load i8*, i8** %top.addr, align 8, !dbg !2558
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !2558
  %8 = load i8, i8* %arrayidx, align 1, !dbg !2558
  %conv8 = zext i8 %8 to i32, !dbg !2558
  %conv9 = sitofp i32 %conv8 to double, !dbg !2558
  %9 = load i32, i32* %j, align 4, !dbg !2559
  %idxprom10 = sext i32 %9 to i64, !dbg !2560
  %10 = load i8*, i8** %top.addr, align 8, !dbg !2560
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 %idxprom10, !dbg !2560
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !2560
  %conv12 = zext i8 %11 to i32, !dbg !2561
  %cmp13 = icmp eq i32 %conv12, 255, !dbg !2562
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !2563

cond.true:                                        ; preds = %for.body7
  %12 = load i32, i32* %j, align 4, !dbg !2564
  %idxprom15 = sext i32 %12 to i64, !dbg !2566
  %13 = load i8*, i8** %top.addr, align 8, !dbg !2566
  %arrayidx16 = getelementptr inbounds i8, i8* %13, i64 %idxprom15, !dbg !2566
  %14 = load i8, i8* %arrayidx16, align 1, !dbg !2566
  %conv17 = zext i8 %14 to i32, !dbg !2567
  br label %cond.end37, !dbg !2568

cond.false:                                       ; preds = %for.body7
  %15 = load i32, i32* %j, align 4, !dbg !2569
  %idxprom18 = sext i32 %15 to i64, !dbg !2571
  %16 = load i8*, i8** %bottom.addr, align 8, !dbg !2571
  %arrayidx19 = getelementptr inbounds i8, i8* %16, i64 %idxprom18, !dbg !2571
  %17 = load i8, i8* %arrayidx19, align 1, !dbg !2571
  %conv20 = zext i8 %17 to i32, !dbg !2572
  %shl = shl i32 %conv20, 8, !dbg !2573
  %18 = load i32, i32* %j, align 4, !dbg !2574
  %idxprom21 = sext i32 %18 to i64, !dbg !2575
  %19 = load i8*, i8** %top.addr, align 8, !dbg !2575
  %arrayidx22 = getelementptr inbounds i8, i8* %19, i64 %idxprom21, !dbg !2575
  %20 = load i8, i8* %arrayidx22, align 1, !dbg !2575
  %conv23 = zext i8 %20 to i32, !dbg !2576
  %sub = sub nsw i32 255, %conv23, !dbg !2577
  %div = sdiv i32 %shl, %sub, !dbg !2578
  %cmp24 = icmp sgt i32 255, %div, !dbg !2579
  br i1 %cmp24, label %cond.true26, label %cond.false36, !dbg !2580

cond.true26:                                      ; preds = %cond.false
  %21 = load i32, i32* %j, align 4, !dbg !2581
  %idxprom27 = sext i32 %21 to i64, !dbg !2583
  %22 = load i8*, i8** %bottom.addr, align 8, !dbg !2583
  %arrayidx28 = getelementptr inbounds i8, i8* %22, i64 %idxprom27, !dbg !2583
  %23 = load i8, i8* %arrayidx28, align 1, !dbg !2583
  %conv29 = zext i8 %23 to i32, !dbg !2584
  %shl30 = shl i32 %conv29, 8, !dbg !2585
  %24 = load i32, i32* %j, align 4, !dbg !2586
  %idxprom31 = sext i32 %24 to i64, !dbg !2587
  %25 = load i8*, i8** %top.addr, align 8, !dbg !2587
  %arrayidx32 = getelementptr inbounds i8, i8* %25, i64 %idxprom31, !dbg !2587
  %26 = load i8, i8* %arrayidx32, align 1, !dbg !2587
  %conv33 = zext i8 %26 to i32, !dbg !2588
  %sub34 = sub nsw i32 255, %conv33, !dbg !2589
  %div35 = sdiv i32 %shl30, %sub34, !dbg !2590
  br label %cond.end, !dbg !2591

cond.false36:                                     ; preds = %cond.false
  br label %cond.end, !dbg !2592

cond.end:                                         ; preds = %cond.false36, %cond.true26
  %cond = phi i32 [ %div35, %cond.true26 ], [ 255, %cond.false36 ], !dbg !2594
  br label %cond.end37, !dbg !2596

cond.end37:                                       ; preds = %cond.end, %cond.true
  %cond38 = phi i32 [ %conv17, %cond.true ], [ %cond, %cond.end ], !dbg !2597
  %27 = load i32, i32* %j, align 4, !dbg !2599
  %idxprom39 = sext i32 %27 to i64, !dbg !2600
  %28 = load i8*, i8** %top.addr, align 8, !dbg !2600
  %arrayidx40 = getelementptr inbounds i8, i8* %28, i64 %idxprom39, !dbg !2600
  %29 = load i8, i8* %arrayidx40, align 1, !dbg !2600
  %conv41 = zext i8 %29 to i32, !dbg !2600
  %sub42 = sub nsw i32 %cond38, %conv41, !dbg !2601
  %conv43 = sitofp i32 %sub42 to double, !dbg !2602
  %30 = load double, double* %opacity, align 8, !dbg !2603
  %mul = fmul double %conv43, %30, !dbg !2604
  %add = fadd double %conv9, %mul, !dbg !2605
  %conv44 = fptoui double %add to i8, !dbg !2606
  %31 = load i32, i32* %j, align 4, !dbg !2607
  %idxprom45 = sext i32 %31 to i64, !dbg !2608
  %32 = load i8*, i8** %dst.addr, align 8, !dbg !2608
  %arrayidx46 = getelementptr inbounds i8, i8* %32, i64 %idxprom45, !dbg !2608
  store i8 %conv44, i8* %arrayidx46, align 1, !dbg !2609
  br label %for.inc, !dbg !2610

for.inc:                                          ; preds = %cond.end37
  %33 = load i32, i32* %j, align 4, !dbg !2611
  %inc = add nsw i32 %33, 1, !dbg !2611
  store i32 %inc, i32* %j, align 4, !dbg !2611
  br label %for.cond3, !dbg !2613, !llvm.loop !2614

for.end:                                          ; preds = %for.cond3
  %34 = load i64, i64* %dst_linesize.addr, align 8, !dbg !2616
  %35 = load i8*, i8** %dst.addr, align 8, !dbg !2618
  %add.ptr = getelementptr inbounds i8, i8* %35, i64 %34, !dbg !2618
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !2618
  %36 = load i64, i64* %top_linesize.addr, align 8, !dbg !2619
  %37 = load i8*, i8** %top.addr, align 8, !dbg !2620
  %add.ptr47 = getelementptr inbounds i8, i8* %37, i64 %36, !dbg !2620
  store i8* %add.ptr47, i8** %top.addr, align 8, !dbg !2620
  %38 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !2621
  %39 = load i8*, i8** %bottom.addr, align 8, !dbg !2622
  %add.ptr48 = getelementptr inbounds i8, i8* %39, i64 %38, !dbg !2622
  store i8* %add.ptr48, i8** %bottom.addr, align 8, !dbg !2622
  br label %for.inc49, !dbg !2623

for.inc49:                                        ; preds = %for.end
  %40 = load i32, i32* %i, align 4, !dbg !2624
  %inc50 = add nsw i32 %40, 1, !dbg !2624
  store i32 %inc50, i32* %i, align 4, !dbg !2624
  br label %for.cond, !dbg !2626, !llvm.loop !2627

for.end51:                                        ; preds = %for.cond
  ret void, !dbg !2629
}

; Function Attrs: nounwind uwtable
define internal void @blend_exclusion_8bit(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !2631 {
entry:
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !2632, metadata !905), !dbg !2633
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !2634, metadata !905), !dbg !2635
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !2636, metadata !905), !dbg !2637
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !2638, metadata !905), !dbg !2639
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !2640, metadata !905), !dbg !2641
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !2642, metadata !905), !dbg !2643
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !2644, metadata !905), !dbg !2645
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !2646, metadata !905), !dbg !2647
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !2648, metadata !905), !dbg !2649
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !2650, metadata !905), !dbg !2651
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !2652, metadata !905), !dbg !2653
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !2654, metadata !905), !dbg !2655
  %0 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !2656
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %0, i32 0, i32 1, !dbg !2657
  %1 = load double, double* %opacity1, align 8, !dbg !2657
  store double %1, double* %opacity, align 8, !dbg !2655
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2658, metadata !905), !dbg !2659
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2660, metadata !905), !dbg !2661
  store i32 0, i32* %i, align 4, !dbg !2662
  br label %for.cond, !dbg !2664

for.cond:                                         ; preds = %for.inc35, %entry
  %2 = load i32, i32* %i, align 4, !dbg !2665
  %conv = sext i32 %2 to i64, !dbg !2665
  %3 = load i64, i64* %height.addr, align 8, !dbg !2668
  %cmp = icmp slt i64 %conv, %3, !dbg !2669
  br i1 %cmp, label %for.body, label %for.end37, !dbg !2670

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !2671
  br label %for.cond3, !dbg !2675

for.cond3:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !2676
  %conv4 = sext i32 %4 to i64, !dbg !2676
  %5 = load i64, i64* %width.addr, align 8, !dbg !2679
  %cmp5 = icmp slt i64 %conv4, %5, !dbg !2680
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !2681

for.body7:                                        ; preds = %for.cond3
  %6 = load i32, i32* %j, align 4, !dbg !2682
  %idxprom = sext i32 %6 to i64, !dbg !2685
  %7 = load i8*, i8** %top.addr, align 8, !dbg !2685
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !2685
  %8 = load i8, i8* %arrayidx, align 1, !dbg !2685
  %conv8 = zext i8 %8 to i32, !dbg !2685
  %conv9 = sitofp i32 %conv8 to double, !dbg !2685
  %9 = load i32, i32* %j, align 4, !dbg !2686
  %idxprom10 = sext i32 %9 to i64, !dbg !2687
  %10 = load i8*, i8** %top.addr, align 8, !dbg !2687
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 %idxprom10, !dbg !2687
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !2687
  %conv12 = zext i8 %11 to i32, !dbg !2687
  %12 = load i32, i32* %j, align 4, !dbg !2688
  %idxprom13 = sext i32 %12 to i64, !dbg !2689
  %13 = load i8*, i8** %bottom.addr, align 8, !dbg !2689
  %arrayidx14 = getelementptr inbounds i8, i8* %13, i64 %idxprom13, !dbg !2689
  %14 = load i8, i8* %arrayidx14, align 1, !dbg !2689
  %conv15 = zext i8 %14 to i32, !dbg !2689
  %add = add nsw i32 %conv12, %conv15, !dbg !2690
  %15 = load i32, i32* %j, align 4, !dbg !2691
  %idxprom16 = sext i32 %15 to i64, !dbg !2692
  %16 = load i8*, i8** %top.addr, align 8, !dbg !2692
  %arrayidx17 = getelementptr inbounds i8, i8* %16, i64 %idxprom16, !dbg !2692
  %17 = load i8, i8* %arrayidx17, align 1, !dbg !2692
  %conv18 = zext i8 %17 to i32, !dbg !2692
  %mul = mul nsw i32 2, %conv18, !dbg !2693
  %18 = load i32, i32* %j, align 4, !dbg !2694
  %idxprom19 = sext i32 %18 to i64, !dbg !2695
  %19 = load i8*, i8** %bottom.addr, align 8, !dbg !2695
  %arrayidx20 = getelementptr inbounds i8, i8* %19, i64 %idxprom19, !dbg !2695
  %20 = load i8, i8* %arrayidx20, align 1, !dbg !2695
  %conv21 = zext i8 %20 to i32, !dbg !2695
  %mul22 = mul nsw i32 %mul, %conv21, !dbg !2696
  %div = sdiv i32 %mul22, 255, !dbg !2697
  %sub = sub nsw i32 %add, %div, !dbg !2698
  %21 = load i32, i32* %j, align 4, !dbg !2699
  %idxprom23 = sext i32 %21 to i64, !dbg !2700
  %22 = load i8*, i8** %top.addr, align 8, !dbg !2700
  %arrayidx24 = getelementptr inbounds i8, i8* %22, i64 %idxprom23, !dbg !2700
  %23 = load i8, i8* %arrayidx24, align 1, !dbg !2700
  %conv25 = zext i8 %23 to i32, !dbg !2700
  %sub26 = sub nsw i32 %sub, %conv25, !dbg !2701
  %conv27 = sitofp i32 %sub26 to double, !dbg !2702
  %24 = load double, double* %opacity, align 8, !dbg !2703
  %mul28 = fmul double %conv27, %24, !dbg !2704
  %add29 = fadd double %conv9, %mul28, !dbg !2705
  %conv30 = fptoui double %add29 to i8, !dbg !2685
  %25 = load i32, i32* %j, align 4, !dbg !2706
  %idxprom31 = sext i32 %25 to i64, !dbg !2707
  %26 = load i8*, i8** %dst.addr, align 8, !dbg !2707
  %arrayidx32 = getelementptr inbounds i8, i8* %26, i64 %idxprom31, !dbg !2707
  store i8 %conv30, i8* %arrayidx32, align 1, !dbg !2708
  br label %for.inc, !dbg !2709

for.inc:                                          ; preds = %for.body7
  %27 = load i32, i32* %j, align 4, !dbg !2710
  %inc = add nsw i32 %27, 1, !dbg !2710
  store i32 %inc, i32* %j, align 4, !dbg !2710
  br label %for.cond3, !dbg !2712, !llvm.loop !2713

for.end:                                          ; preds = %for.cond3
  %28 = load i64, i64* %dst_linesize.addr, align 8, !dbg !2715
  %29 = load i8*, i8** %dst.addr, align 8, !dbg !2717
  %add.ptr = getelementptr inbounds i8, i8* %29, i64 %28, !dbg !2717
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !2717
  %30 = load i64, i64* %top_linesize.addr, align 8, !dbg !2718
  %31 = load i8*, i8** %top.addr, align 8, !dbg !2719
  %add.ptr33 = getelementptr inbounds i8, i8* %31, i64 %30, !dbg !2719
  store i8* %add.ptr33, i8** %top.addr, align 8, !dbg !2719
  %32 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !2720
  %33 = load i8*, i8** %bottom.addr, align 8, !dbg !2721
  %add.ptr34 = getelementptr inbounds i8, i8* %33, i64 %32, !dbg !2721
  store i8* %add.ptr34, i8** %bottom.addr, align 8, !dbg !2721
  br label %for.inc35, !dbg !2722

for.inc35:                                        ; preds = %for.end
  %34 = load i32, i32* %i, align 4, !dbg !2723
  %inc36 = add nsw i32 %34, 1, !dbg !2723
  store i32 %inc36, i32* %i, align 4, !dbg !2723
  br label %for.cond, !dbg !2725, !llvm.loop !2726

for.end37:                                        ; preds = %for.cond
  ret void, !dbg !2728
}

; Function Attrs: nounwind uwtable
define internal void @blend_extremity_8bit(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !2730 {
entry:
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !2731, metadata !905), !dbg !2732
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !2733, metadata !905), !dbg !2734
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !2735, metadata !905), !dbg !2736
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !2737, metadata !905), !dbg !2738
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !2739, metadata !905), !dbg !2740
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !2741, metadata !905), !dbg !2742
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !2743, metadata !905), !dbg !2744
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !2745, metadata !905), !dbg !2746
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !2747, metadata !905), !dbg !2748
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !2749, metadata !905), !dbg !2750
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !2751, metadata !905), !dbg !2752
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !2753, metadata !905), !dbg !2754
  %0 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !2755
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %0, i32 0, i32 1, !dbg !2756
  %1 = load double, double* %opacity1, align 8, !dbg !2756
  store double %1, double* %opacity, align 8, !dbg !2754
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2757, metadata !905), !dbg !2758
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2759, metadata !905), !dbg !2760
  store i32 0, i32* %i, align 4, !dbg !2761
  br label %for.cond, !dbg !2763

for.cond:                                         ; preds = %for.inc46, %entry
  %2 = load i32, i32* %i, align 4, !dbg !2764
  %conv = sext i32 %2 to i64, !dbg !2764
  %3 = load i64, i64* %height.addr, align 8, !dbg !2767
  %cmp = icmp slt i64 %conv, %3, !dbg !2768
  br i1 %cmp, label %for.body, label %for.end48, !dbg !2769

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !2770
  br label %for.cond3, !dbg !2774

for.cond3:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !2775
  %conv4 = sext i32 %4 to i64, !dbg !2775
  %5 = load i64, i64* %width.addr, align 8, !dbg !2778
  %cmp5 = icmp slt i64 %conv4, %5, !dbg !2779
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !2780

for.body7:                                        ; preds = %for.cond3
  %6 = load i32, i32* %j, align 4, !dbg !2781
  %idxprom = sext i32 %6 to i64, !dbg !2784
  %7 = load i8*, i8** %top.addr, align 8, !dbg !2784
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !2784
  %8 = load i8, i8* %arrayidx, align 1, !dbg !2784
  %conv8 = zext i8 %8 to i32, !dbg !2784
  %conv9 = sitofp i32 %conv8 to double, !dbg !2784
  %9 = load i32, i32* %j, align 4, !dbg !2785
  %idxprom10 = sext i32 %9 to i64, !dbg !2786
  %10 = load i8*, i8** %top.addr, align 8, !dbg !2786
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 %idxprom10, !dbg !2786
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !2786
  %conv12 = zext i8 %11 to i32, !dbg !2786
  %sub = sub nsw i32 255, %conv12, !dbg !2787
  %12 = load i32, i32* %j, align 4, !dbg !2788
  %idxprom13 = sext i32 %12 to i64, !dbg !2789
  %13 = load i8*, i8** %bottom.addr, align 8, !dbg !2789
  %arrayidx14 = getelementptr inbounds i8, i8* %13, i64 %idxprom13, !dbg !2789
  %14 = load i8, i8* %arrayidx14, align 1, !dbg !2789
  %conv15 = zext i8 %14 to i32, !dbg !2789
  %sub16 = sub nsw i32 %sub, %conv15, !dbg !2790
  %cmp17 = icmp sge i32 %sub16, 0, !dbg !2791
  br i1 %cmp17, label %cond.true, label %cond.false, !dbg !2792

cond.true:                                        ; preds = %for.body7
  %15 = load i32, i32* %j, align 4, !dbg !2793
  %idxprom19 = sext i32 %15 to i64, !dbg !2795
  %16 = load i8*, i8** %top.addr, align 8, !dbg !2795
  %arrayidx20 = getelementptr inbounds i8, i8* %16, i64 %idxprom19, !dbg !2795
  %17 = load i8, i8* %arrayidx20, align 1, !dbg !2795
  %conv21 = zext i8 %17 to i32, !dbg !2795
  %sub22 = sub nsw i32 255, %conv21, !dbg !2796
  %18 = load i32, i32* %j, align 4, !dbg !2797
  %idxprom23 = sext i32 %18 to i64, !dbg !2798
  %19 = load i8*, i8** %bottom.addr, align 8, !dbg !2798
  %arrayidx24 = getelementptr inbounds i8, i8* %19, i64 %idxprom23, !dbg !2798
  %20 = load i8, i8* %arrayidx24, align 1, !dbg !2798
  %conv25 = zext i8 %20 to i32, !dbg !2798
  %sub26 = sub nsw i32 %sub22, %conv25, !dbg !2799
  br label %cond.end, !dbg !2800

cond.false:                                       ; preds = %for.body7
  %21 = load i32, i32* %j, align 4, !dbg !2801
  %idxprom27 = sext i32 %21 to i64, !dbg !2803
  %22 = load i8*, i8** %top.addr, align 8, !dbg !2803
  %arrayidx28 = getelementptr inbounds i8, i8* %22, i64 %idxprom27, !dbg !2803
  %23 = load i8, i8* %arrayidx28, align 1, !dbg !2803
  %conv29 = zext i8 %23 to i32, !dbg !2803
  %sub30 = sub nsw i32 255, %conv29, !dbg !2804
  %24 = load i32, i32* %j, align 4, !dbg !2805
  %idxprom31 = sext i32 %24 to i64, !dbg !2806
  %25 = load i8*, i8** %bottom.addr, align 8, !dbg !2806
  %arrayidx32 = getelementptr inbounds i8, i8* %25, i64 %idxprom31, !dbg !2806
  %26 = load i8, i8* %arrayidx32, align 1, !dbg !2806
  %conv33 = zext i8 %26 to i32, !dbg !2806
  %sub34 = sub nsw i32 %sub30, %conv33, !dbg !2807
  %sub35 = sub nsw i32 0, %sub34, !dbg !2808
  br label %cond.end, !dbg !2809

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub26, %cond.true ], [ %sub35, %cond.false ], !dbg !2810
  %27 = load i32, i32* %j, align 4, !dbg !2812
  %idxprom36 = sext i32 %27 to i64, !dbg !2813
  %28 = load i8*, i8** %top.addr, align 8, !dbg !2813
  %arrayidx37 = getelementptr inbounds i8, i8* %28, i64 %idxprom36, !dbg !2813
  %29 = load i8, i8* %arrayidx37, align 1, !dbg !2813
  %conv38 = zext i8 %29 to i32, !dbg !2813
  %sub39 = sub nsw i32 %cond, %conv38, !dbg !2814
  %conv40 = sitofp i32 %sub39 to double, !dbg !2815
  %30 = load double, double* %opacity, align 8, !dbg !2816
  %mul = fmul double %conv40, %30, !dbg !2817
  %add = fadd double %conv9, %mul, !dbg !2818
  %conv41 = fptoui double %add to i8, !dbg !2819
  %31 = load i32, i32* %j, align 4, !dbg !2820
  %idxprom42 = sext i32 %31 to i64, !dbg !2821
  %32 = load i8*, i8** %dst.addr, align 8, !dbg !2821
  %arrayidx43 = getelementptr inbounds i8, i8* %32, i64 %idxprom42, !dbg !2821
  store i8 %conv41, i8* %arrayidx43, align 1, !dbg !2822
  br label %for.inc, !dbg !2823

for.inc:                                          ; preds = %cond.end
  %33 = load i32, i32* %j, align 4, !dbg !2824
  %inc = add nsw i32 %33, 1, !dbg !2824
  store i32 %inc, i32* %j, align 4, !dbg !2824
  br label %for.cond3, !dbg !2826, !llvm.loop !2827

for.end:                                          ; preds = %for.cond3
  %34 = load i64, i64* %dst_linesize.addr, align 8, !dbg !2829
  %35 = load i8*, i8** %dst.addr, align 8, !dbg !2831
  %add.ptr = getelementptr inbounds i8, i8* %35, i64 %34, !dbg !2831
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !2831
  %36 = load i64, i64* %top_linesize.addr, align 8, !dbg !2832
  %37 = load i8*, i8** %top.addr, align 8, !dbg !2833
  %add.ptr44 = getelementptr inbounds i8, i8* %37, i64 %36, !dbg !2833
  store i8* %add.ptr44, i8** %top.addr, align 8, !dbg !2833
  %38 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !2834
  %39 = load i8*, i8** %bottom.addr, align 8, !dbg !2835
  %add.ptr45 = getelementptr inbounds i8, i8* %39, i64 %38, !dbg !2835
  store i8* %add.ptr45, i8** %bottom.addr, align 8, !dbg !2835
  br label %for.inc46, !dbg !2836

for.inc46:                                        ; preds = %for.end
  %40 = load i32, i32* %i, align 4, !dbg !2837
  %inc47 = add nsw i32 %40, 1, !dbg !2837
  store i32 %inc47, i32* %i, align 4, !dbg !2837
  br label %for.cond, !dbg !2839, !llvm.loop !2840

for.end48:                                        ; preds = %for.cond
  ret void, !dbg !2842
}

; Function Attrs: nounwind uwtable
define internal void @blend_freeze_8bit(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !2844 {
entry:
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !2845, metadata !905), !dbg !2846
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !2847, metadata !905), !dbg !2848
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !2849, metadata !905), !dbg !2850
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !2851, metadata !905), !dbg !2852
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !2853, metadata !905), !dbg !2854
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !2855, metadata !905), !dbg !2856
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !2857, metadata !905), !dbg !2858
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !2859, metadata !905), !dbg !2860
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !2861, metadata !905), !dbg !2862
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !2863, metadata !905), !dbg !2864
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !2865, metadata !905), !dbg !2866
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !2867, metadata !905), !dbg !2868
  %0 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !2869
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %0, i32 0, i32 1, !dbg !2870
  %1 = load double, double* %opacity1, align 8, !dbg !2870
  store double %1, double* %opacity, align 8, !dbg !2868
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2871, metadata !905), !dbg !2872
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2873, metadata !905), !dbg !2874
  store i32 0, i32* %i, align 4, !dbg !2875
  br label %for.cond, !dbg !2877

for.cond:                                         ; preds = %for.inc56, %entry
  %2 = load i32, i32* %i, align 4, !dbg !2878
  %conv = sext i32 %2 to i64, !dbg !2878
  %3 = load i64, i64* %height.addr, align 8, !dbg !2881
  %cmp = icmp slt i64 %conv, %3, !dbg !2882
  br i1 %cmp, label %for.body, label %for.end58, !dbg !2883

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !2884
  br label %for.cond3, !dbg !2888

for.cond3:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !2889
  %conv4 = sext i32 %4 to i64, !dbg !2889
  %5 = load i64, i64* %width.addr, align 8, !dbg !2892
  %cmp5 = icmp slt i64 %conv4, %5, !dbg !2893
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !2894

for.body7:                                        ; preds = %for.cond3
  %6 = load i32, i32* %j, align 4, !dbg !2895
  %idxprom = sext i32 %6 to i64, !dbg !2898
  %7 = load i8*, i8** %top.addr, align 8, !dbg !2898
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !2898
  %8 = load i8, i8* %arrayidx, align 1, !dbg !2898
  %conv8 = zext i8 %8 to i32, !dbg !2898
  %conv9 = sitofp i32 %conv8 to double, !dbg !2898
  %9 = load i32, i32* %j, align 4, !dbg !2899
  %idxprom10 = sext i32 %9 to i64, !dbg !2900
  %10 = load i8*, i8** %bottom.addr, align 8, !dbg !2900
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 %idxprom10, !dbg !2900
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !2900
  %conv12 = zext i8 %11 to i32, !dbg !2900
  %cmp13 = icmp eq i32 %conv12, 0, !dbg !2901
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !2902

cond.true:                                        ; preds = %for.body7
  br label %cond.end43, !dbg !2903

cond.false:                                       ; preds = %for.body7
  %12 = load i32, i32* %j, align 4, !dbg !2905
  %idxprom15 = sext i32 %12 to i64, !dbg !2907
  %13 = load i8*, i8** %top.addr, align 8, !dbg !2907
  %arrayidx16 = getelementptr inbounds i8, i8* %13, i64 %idxprom15, !dbg !2907
  %14 = load i8, i8* %arrayidx16, align 1, !dbg !2907
  %conv17 = zext i8 %14 to i32, !dbg !2907
  %sub = sub nsw i32 255, %conv17, !dbg !2908
  %15 = load i32, i32* %j, align 4, !dbg !2909
  %idxprom18 = sext i32 %15 to i64, !dbg !2910
  %16 = load i8*, i8** %top.addr, align 8, !dbg !2910
  %arrayidx19 = getelementptr inbounds i8, i8* %16, i64 %idxprom18, !dbg !2910
  %17 = load i8, i8* %arrayidx19, align 1, !dbg !2910
  %conv20 = zext i8 %17 to i32, !dbg !2910
  %sub21 = sub nsw i32 255, %conv20, !dbg !2911
  %mul = mul nsw i32 %sub, %sub21, !dbg !2912
  %18 = load i32, i32* %j, align 4, !dbg !2913
  %idxprom22 = sext i32 %18 to i64, !dbg !2914
  %19 = load i8*, i8** %bottom.addr, align 8, !dbg !2914
  %arrayidx23 = getelementptr inbounds i8, i8* %19, i64 %idxprom22, !dbg !2914
  %20 = load i8, i8* %arrayidx23, align 1, !dbg !2914
  %conv24 = zext i8 %20 to i32, !dbg !2914
  %div = sdiv i32 %mul, %conv24, !dbg !2915
  %cmp25 = icmp sgt i32 %div, 255, !dbg !2916
  br i1 %cmp25, label %cond.true27, label %cond.false28, !dbg !2917

cond.true27:                                      ; preds = %cond.false
  br label %cond.end, !dbg !2918

cond.false28:                                     ; preds = %cond.false
  %21 = load i32, i32* %j, align 4, !dbg !2920
  %idxprom29 = sext i32 %21 to i64, !dbg !2922
  %22 = load i8*, i8** %top.addr, align 8, !dbg !2922
  %arrayidx30 = getelementptr inbounds i8, i8* %22, i64 %idxprom29, !dbg !2922
  %23 = load i8, i8* %arrayidx30, align 1, !dbg !2922
  %conv31 = zext i8 %23 to i32, !dbg !2922
  %sub32 = sub nsw i32 255, %conv31, !dbg !2923
  %24 = load i32, i32* %j, align 4, !dbg !2924
  %idxprom33 = sext i32 %24 to i64, !dbg !2925
  %25 = load i8*, i8** %top.addr, align 8, !dbg !2925
  %arrayidx34 = getelementptr inbounds i8, i8* %25, i64 %idxprom33, !dbg !2925
  %26 = load i8, i8* %arrayidx34, align 1, !dbg !2925
  %conv35 = zext i8 %26 to i32, !dbg !2925
  %sub36 = sub nsw i32 255, %conv35, !dbg !2926
  %mul37 = mul nsw i32 %sub32, %sub36, !dbg !2927
  %27 = load i32, i32* %j, align 4, !dbg !2928
  %idxprom38 = sext i32 %27 to i64, !dbg !2929
  %28 = load i8*, i8** %bottom.addr, align 8, !dbg !2929
  %arrayidx39 = getelementptr inbounds i8, i8* %28, i64 %idxprom38, !dbg !2929
  %29 = load i8, i8* %arrayidx39, align 1, !dbg !2929
  %conv40 = zext i8 %29 to i32, !dbg !2929
  %div41 = sdiv i32 %mul37, %conv40, !dbg !2930
  br label %cond.end, !dbg !2931

cond.end:                                         ; preds = %cond.false28, %cond.true27
  %cond = phi i32 [ 255, %cond.true27 ], [ %div41, %cond.false28 ], !dbg !2932
  %sub42 = sub nsw i32 255, %cond, !dbg !2934
  br label %cond.end43, !dbg !2935

cond.end43:                                       ; preds = %cond.end, %cond.true
  %cond44 = phi i32 [ 0, %cond.true ], [ %sub42, %cond.end ], !dbg !2936
  %30 = load i32, i32* %j, align 4, !dbg !2938
  %idxprom45 = sext i32 %30 to i64, !dbg !2939
  %31 = load i8*, i8** %top.addr, align 8, !dbg !2939
  %arrayidx46 = getelementptr inbounds i8, i8* %31, i64 %idxprom45, !dbg !2939
  %32 = load i8, i8* %arrayidx46, align 1, !dbg !2939
  %conv47 = zext i8 %32 to i32, !dbg !2939
  %sub48 = sub nsw i32 %cond44, %conv47, !dbg !2940
  %conv49 = sitofp i32 %sub48 to double, !dbg !2941
  %33 = load double, double* %opacity, align 8, !dbg !2942
  %mul50 = fmul double %conv49, %33, !dbg !2943
  %add = fadd double %conv9, %mul50, !dbg !2944
  %conv51 = fptoui double %add to i8, !dbg !2945
  %34 = load i32, i32* %j, align 4, !dbg !2946
  %idxprom52 = sext i32 %34 to i64, !dbg !2947
  %35 = load i8*, i8** %dst.addr, align 8, !dbg !2947
  %arrayidx53 = getelementptr inbounds i8, i8* %35, i64 %idxprom52, !dbg !2947
  store i8 %conv51, i8* %arrayidx53, align 1, !dbg !2948
  br label %for.inc, !dbg !2949

for.inc:                                          ; preds = %cond.end43
  %36 = load i32, i32* %j, align 4, !dbg !2950
  %inc = add nsw i32 %36, 1, !dbg !2950
  store i32 %inc, i32* %j, align 4, !dbg !2950
  br label %for.cond3, !dbg !2952, !llvm.loop !2953

for.end:                                          ; preds = %for.cond3
  %37 = load i64, i64* %dst_linesize.addr, align 8, !dbg !2955
  %38 = load i8*, i8** %dst.addr, align 8, !dbg !2957
  %add.ptr = getelementptr inbounds i8, i8* %38, i64 %37, !dbg !2957
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !2957
  %39 = load i64, i64* %top_linesize.addr, align 8, !dbg !2958
  %40 = load i8*, i8** %top.addr, align 8, !dbg !2959
  %add.ptr54 = getelementptr inbounds i8, i8* %40, i64 %39, !dbg !2959
  store i8* %add.ptr54, i8** %top.addr, align 8, !dbg !2959
  %41 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !2960
  %42 = load i8*, i8** %bottom.addr, align 8, !dbg !2961
  %add.ptr55 = getelementptr inbounds i8, i8* %42, i64 %41, !dbg !2961
  store i8* %add.ptr55, i8** %bottom.addr, align 8, !dbg !2961
  br label %for.inc56, !dbg !2962

for.inc56:                                        ; preds = %for.end
  %43 = load i32, i32* %i, align 4, !dbg !2963
  %inc57 = add nsw i32 %43, 1, !dbg !2963
  store i32 %inc57, i32* %i, align 4, !dbg !2963
  br label %for.cond, !dbg !2965, !llvm.loop !2966

for.end58:                                        ; preds = %for.cond
  ret void, !dbg !2968
}

; Function Attrs: nounwind uwtable
define internal void @blend_glow_8bit(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !2970 {
entry:
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !2971, metadata !905), !dbg !2972
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !2973, metadata !905), !dbg !2974
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !2975, metadata !905), !dbg !2976
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !2977, metadata !905), !dbg !2978
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !2979, metadata !905), !dbg !2980
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !2981, metadata !905), !dbg !2982
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !2983, metadata !905), !dbg !2984
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !2985, metadata !905), !dbg !2986
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !2987, metadata !905), !dbg !2988
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !2989, metadata !905), !dbg !2990
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !2991, metadata !905), !dbg !2992
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !2993, metadata !905), !dbg !2994
  %0 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !2995
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %0, i32 0, i32 1, !dbg !2996
  %1 = load double, double* %opacity1, align 8, !dbg !2996
  store double %1, double* %opacity, align 8, !dbg !2994
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2997, metadata !905), !dbg !2998
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2999, metadata !905), !dbg !3000
  store i32 0, i32* %i, align 4, !dbg !3001
  br label %for.cond, !dbg !3003

for.cond:                                         ; preds = %for.inc56, %entry
  %2 = load i32, i32* %i, align 4, !dbg !3004
  %conv = sext i32 %2 to i64, !dbg !3004
  %3 = load i64, i64* %height.addr, align 8, !dbg !3007
  %cmp = icmp slt i64 %conv, %3, !dbg !3008
  br i1 %cmp, label %for.body, label %for.end58, !dbg !3009

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !3010
  br label %for.cond3, !dbg !3014

for.cond3:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !3015
  %conv4 = sext i32 %4 to i64, !dbg !3015
  %5 = load i64, i64* %width.addr, align 8, !dbg !3018
  %cmp5 = icmp slt i64 %conv4, %5, !dbg !3019
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !3020

for.body7:                                        ; preds = %for.cond3
  %6 = load i32, i32* %j, align 4, !dbg !3021
  %idxprom = sext i32 %6 to i64, !dbg !3024
  %7 = load i8*, i8** %top.addr, align 8, !dbg !3024
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !3024
  %8 = load i8, i8* %arrayidx, align 1, !dbg !3024
  %conv8 = zext i8 %8 to i32, !dbg !3024
  %conv9 = sitofp i32 %conv8 to double, !dbg !3024
  %9 = load i32, i32* %j, align 4, !dbg !3025
  %idxprom10 = sext i32 %9 to i64, !dbg !3026
  %10 = load i8*, i8** %top.addr, align 8, !dbg !3026
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 %idxprom10, !dbg !3026
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !3026
  %conv12 = zext i8 %11 to i32, !dbg !3026
  %cmp13 = icmp eq i32 %conv12, 255, !dbg !3027
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !3028

cond.true:                                        ; preds = %for.body7
  %12 = load i32, i32* %j, align 4, !dbg !3029
  %idxprom15 = sext i32 %12 to i64, !dbg !3031
  %13 = load i8*, i8** %top.addr, align 8, !dbg !3031
  %arrayidx16 = getelementptr inbounds i8, i8* %13, i64 %idxprom15, !dbg !3031
  %14 = load i8, i8* %arrayidx16, align 1, !dbg !3031
  %conv17 = zext i8 %14 to i32, !dbg !3031
  br label %cond.end43, !dbg !3032

cond.false:                                       ; preds = %for.body7
  %15 = load i32, i32* %j, align 4, !dbg !3033
  %idxprom18 = sext i32 %15 to i64, !dbg !3035
  %16 = load i8*, i8** %bottom.addr, align 8, !dbg !3035
  %arrayidx19 = getelementptr inbounds i8, i8* %16, i64 %idxprom18, !dbg !3035
  %17 = load i8, i8* %arrayidx19, align 1, !dbg !3035
  %conv20 = zext i8 %17 to i32, !dbg !3035
  %18 = load i32, i32* %j, align 4, !dbg !3036
  %idxprom21 = sext i32 %18 to i64, !dbg !3037
  %19 = load i8*, i8** %bottom.addr, align 8, !dbg !3037
  %arrayidx22 = getelementptr inbounds i8, i8* %19, i64 %idxprom21, !dbg !3037
  %20 = load i8, i8* %arrayidx22, align 1, !dbg !3037
  %conv23 = zext i8 %20 to i32, !dbg !3037
  %mul = mul nsw i32 %conv20, %conv23, !dbg !3038
  %21 = load i32, i32* %j, align 4, !dbg !3039
  %idxprom24 = sext i32 %21 to i64, !dbg !3040
  %22 = load i8*, i8** %top.addr, align 8, !dbg !3040
  %arrayidx25 = getelementptr inbounds i8, i8* %22, i64 %idxprom24, !dbg !3040
  %23 = load i8, i8* %arrayidx25, align 1, !dbg !3040
  %conv26 = zext i8 %23 to i32, !dbg !3040
  %sub = sub nsw i32 255, %conv26, !dbg !3041
  %div = sdiv i32 %mul, %sub, !dbg !3042
  %cmp27 = icmp sgt i32 255, %div, !dbg !3043
  br i1 %cmp27, label %cond.true29, label %cond.false42, !dbg !3044

cond.true29:                                      ; preds = %cond.false
  %24 = load i32, i32* %j, align 4, !dbg !3045
  %idxprom30 = sext i32 %24 to i64, !dbg !3047
  %25 = load i8*, i8** %bottom.addr, align 8, !dbg !3047
  %arrayidx31 = getelementptr inbounds i8, i8* %25, i64 %idxprom30, !dbg !3047
  %26 = load i8, i8* %arrayidx31, align 1, !dbg !3047
  %conv32 = zext i8 %26 to i32, !dbg !3047
  %27 = load i32, i32* %j, align 4, !dbg !3048
  %idxprom33 = sext i32 %27 to i64, !dbg !3049
  %28 = load i8*, i8** %bottom.addr, align 8, !dbg !3049
  %arrayidx34 = getelementptr inbounds i8, i8* %28, i64 %idxprom33, !dbg !3049
  %29 = load i8, i8* %arrayidx34, align 1, !dbg !3049
  %conv35 = zext i8 %29 to i32, !dbg !3049
  %mul36 = mul nsw i32 %conv32, %conv35, !dbg !3050
  %30 = load i32, i32* %j, align 4, !dbg !3051
  %idxprom37 = sext i32 %30 to i64, !dbg !3052
  %31 = load i8*, i8** %top.addr, align 8, !dbg !3052
  %arrayidx38 = getelementptr inbounds i8, i8* %31, i64 %idxprom37, !dbg !3052
  %32 = load i8, i8* %arrayidx38, align 1, !dbg !3052
  %conv39 = zext i8 %32 to i32, !dbg !3052
  %sub40 = sub nsw i32 255, %conv39, !dbg !3053
  %div41 = sdiv i32 %mul36, %sub40, !dbg !3054
  br label %cond.end, !dbg !3055

cond.false42:                                     ; preds = %cond.false
  br label %cond.end, !dbg !3056

cond.end:                                         ; preds = %cond.false42, %cond.true29
  %cond = phi i32 [ %div41, %cond.true29 ], [ 255, %cond.false42 ], !dbg !3058
  br label %cond.end43, !dbg !3060

cond.end43:                                       ; preds = %cond.end, %cond.true
  %cond44 = phi i32 [ %conv17, %cond.true ], [ %cond, %cond.end ], !dbg !3061
  %33 = load i32, i32* %j, align 4, !dbg !3063
  %idxprom45 = sext i32 %33 to i64, !dbg !3064
  %34 = load i8*, i8** %top.addr, align 8, !dbg !3064
  %arrayidx46 = getelementptr inbounds i8, i8* %34, i64 %idxprom45, !dbg !3064
  %35 = load i8, i8* %arrayidx46, align 1, !dbg !3064
  %conv47 = zext i8 %35 to i32, !dbg !3064
  %sub48 = sub nsw i32 %cond44, %conv47, !dbg !3065
  %conv49 = sitofp i32 %sub48 to double, !dbg !3066
  %36 = load double, double* %opacity, align 8, !dbg !3067
  %mul50 = fmul double %conv49, %36, !dbg !3068
  %add = fadd double %conv9, %mul50, !dbg !3069
  %conv51 = fptoui double %add to i8, !dbg !3070
  %37 = load i32, i32* %j, align 4, !dbg !3071
  %idxprom52 = sext i32 %37 to i64, !dbg !3072
  %38 = load i8*, i8** %dst.addr, align 8, !dbg !3072
  %arrayidx53 = getelementptr inbounds i8, i8* %38, i64 %idxprom52, !dbg !3072
  store i8 %conv51, i8* %arrayidx53, align 1, !dbg !3073
  br label %for.inc, !dbg !3074

for.inc:                                          ; preds = %cond.end43
  %39 = load i32, i32* %j, align 4, !dbg !3075
  %inc = add nsw i32 %39, 1, !dbg !3075
  store i32 %inc, i32* %j, align 4, !dbg !3075
  br label %for.cond3, !dbg !3077, !llvm.loop !3078

for.end:                                          ; preds = %for.cond3
  %40 = load i64, i64* %dst_linesize.addr, align 8, !dbg !3080
  %41 = load i8*, i8** %dst.addr, align 8, !dbg !3082
  %add.ptr = getelementptr inbounds i8, i8* %41, i64 %40, !dbg !3082
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !3082
  %42 = load i64, i64* %top_linesize.addr, align 8, !dbg !3083
  %43 = load i8*, i8** %top.addr, align 8, !dbg !3084
  %add.ptr54 = getelementptr inbounds i8, i8* %43, i64 %42, !dbg !3084
  store i8* %add.ptr54, i8** %top.addr, align 8, !dbg !3084
  %44 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !3085
  %45 = load i8*, i8** %bottom.addr, align 8, !dbg !3086
  %add.ptr55 = getelementptr inbounds i8, i8* %45, i64 %44, !dbg !3086
  store i8* %add.ptr55, i8** %bottom.addr, align 8, !dbg !3086
  br label %for.inc56, !dbg !3087

for.inc56:                                        ; preds = %for.end
  %46 = load i32, i32* %i, align 4, !dbg !3088
  %inc57 = add nsw i32 %46, 1, !dbg !3088
  store i32 %inc57, i32* %i, align 4, !dbg !3088
  br label %for.cond, !dbg !3090, !llvm.loop !3091

for.end58:                                        ; preds = %for.cond
  ret void, !dbg !3093
}

; Function Attrs: nounwind uwtable
define internal void @blend_hardlight_8bit(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !3095 {
entry:
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !3096, metadata !905), !dbg !3097
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !3098, metadata !905), !dbg !3099
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !3100, metadata !905), !dbg !3101
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !3102, metadata !905), !dbg !3103
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !3104, metadata !905), !dbg !3105
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !3106, metadata !905), !dbg !3107
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !3108, metadata !905), !dbg !3109
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !3110, metadata !905), !dbg !3111
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !3112, metadata !905), !dbg !3113
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !3114, metadata !905), !dbg !3115
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !3116, metadata !905), !dbg !3117
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !3118, metadata !905), !dbg !3119
  %0 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !3120
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %0, i32 0, i32 1, !dbg !3121
  %1 = load double, double* %opacity1, align 8, !dbg !3121
  store double %1, double* %opacity, align 8, !dbg !3119
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3122, metadata !905), !dbg !3123
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3124, metadata !905), !dbg !3125
  store i32 0, i32* %i, align 4, !dbg !3126
  br label %for.cond, !dbg !3128

for.cond:                                         ; preds = %for.inc44, %entry
  %2 = load i32, i32* %i, align 4, !dbg !3129
  %conv = sext i32 %2 to i64, !dbg !3129
  %3 = load i64, i64* %height.addr, align 8, !dbg !3132
  %cmp = icmp slt i64 %conv, %3, !dbg !3133
  br i1 %cmp, label %for.body, label %for.end46, !dbg !3134

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !3135
  br label %for.cond3, !dbg !3139

for.cond3:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !3140
  %conv4 = sext i32 %4 to i64, !dbg !3140
  %5 = load i64, i64* %width.addr, align 8, !dbg !3143
  %cmp5 = icmp slt i64 %conv4, %5, !dbg !3144
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !3145

for.body7:                                        ; preds = %for.cond3
  %6 = load i32, i32* %j, align 4, !dbg !3146
  %idxprom = sext i32 %6 to i64, !dbg !3149
  %7 = load i8*, i8** %top.addr, align 8, !dbg !3149
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !3149
  %8 = load i8, i8* %arrayidx, align 1, !dbg !3149
  %conv8 = zext i8 %8 to i32, !dbg !3149
  %conv9 = sitofp i32 %conv8 to double, !dbg !3149
  %9 = load i32, i32* %j, align 4, !dbg !3150
  %idxprom10 = sext i32 %9 to i64, !dbg !3151
  %10 = load i8*, i8** %bottom.addr, align 8, !dbg !3151
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 %idxprom10, !dbg !3151
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !3151
  %conv12 = zext i8 %11 to i32, !dbg !3151
  %cmp13 = icmp slt i32 %conv12, 128, !dbg !3152
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !3153

cond.true:                                        ; preds = %for.body7
  %12 = load i32, i32* %j, align 4, !dbg !3154
  %idxprom15 = sext i32 %12 to i64, !dbg !3156
  %13 = load i8*, i8** %bottom.addr, align 8, !dbg !3156
  %arrayidx16 = getelementptr inbounds i8, i8* %13, i64 %idxprom15, !dbg !3156
  %14 = load i8, i8* %arrayidx16, align 1, !dbg !3156
  %conv17 = zext i8 %14 to i32, !dbg !3157
  %15 = load i32, i32* %j, align 4, !dbg !3158
  %idxprom18 = sext i32 %15 to i64, !dbg !3159
  %16 = load i8*, i8** %top.addr, align 8, !dbg !3159
  %arrayidx19 = getelementptr inbounds i8, i8* %16, i64 %idxprom18, !dbg !3159
  %17 = load i8, i8* %arrayidx19, align 1, !dbg !3159
  %conv20 = zext i8 %17 to i32, !dbg !3160
  %mul = mul nsw i32 %conv17, %conv20, !dbg !3161
  %div = sdiv i32 %mul, 255, !dbg !3162
  %mul21 = mul nsw i32 2, %div, !dbg !3163
  br label %cond.end, !dbg !3164

cond.false:                                       ; preds = %for.body7
  %18 = load i32, i32* %j, align 4, !dbg !3165
  %idxprom22 = sext i32 %18 to i64, !dbg !3167
  %19 = load i8*, i8** %bottom.addr, align 8, !dbg !3167
  %arrayidx23 = getelementptr inbounds i8, i8* %19, i64 %idxprom22, !dbg !3167
  %20 = load i8, i8* %arrayidx23, align 1, !dbg !3167
  %conv24 = zext i8 %20 to i32, !dbg !3168
  %sub = sub nsw i32 255, %conv24, !dbg !3169
  %21 = load i32, i32* %j, align 4, !dbg !3170
  %idxprom25 = sext i32 %21 to i64, !dbg !3171
  %22 = load i8*, i8** %top.addr, align 8, !dbg !3171
  %arrayidx26 = getelementptr inbounds i8, i8* %22, i64 %idxprom25, !dbg !3171
  %23 = load i8, i8* %arrayidx26, align 1, !dbg !3171
  %conv27 = zext i8 %23 to i32, !dbg !3172
  %sub28 = sub nsw i32 255, %conv27, !dbg !3173
  %mul29 = mul nsw i32 %sub, %sub28, !dbg !3174
  %div30 = sdiv i32 %mul29, 255, !dbg !3175
  %mul31 = mul nsw i32 2, %div30, !dbg !3176
  %sub32 = sub nsw i32 255, %mul31, !dbg !3177
  br label %cond.end, !dbg !3178

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %mul21, %cond.true ], [ %sub32, %cond.false ], !dbg !3179
  %24 = load i32, i32* %j, align 4, !dbg !3181
  %idxprom33 = sext i32 %24 to i64, !dbg !3182
  %25 = load i8*, i8** %top.addr, align 8, !dbg !3182
  %arrayidx34 = getelementptr inbounds i8, i8* %25, i64 %idxprom33, !dbg !3182
  %26 = load i8, i8* %arrayidx34, align 1, !dbg !3182
  %conv35 = zext i8 %26 to i32, !dbg !3182
  %sub36 = sub nsw i32 %cond, %conv35, !dbg !3183
  %conv37 = sitofp i32 %sub36 to double, !dbg !3184
  %27 = load double, double* %opacity, align 8, !dbg !3185
  %mul38 = fmul double %conv37, %27, !dbg !3186
  %add = fadd double %conv9, %mul38, !dbg !3187
  %conv39 = fptoui double %add to i8, !dbg !3188
  %28 = load i32, i32* %j, align 4, !dbg !3189
  %idxprom40 = sext i32 %28 to i64, !dbg !3190
  %29 = load i8*, i8** %dst.addr, align 8, !dbg !3190
  %arrayidx41 = getelementptr inbounds i8, i8* %29, i64 %idxprom40, !dbg !3190
  store i8 %conv39, i8* %arrayidx41, align 1, !dbg !3191
  br label %for.inc, !dbg !3192

for.inc:                                          ; preds = %cond.end
  %30 = load i32, i32* %j, align 4, !dbg !3193
  %inc = add nsw i32 %30, 1, !dbg !3193
  store i32 %inc, i32* %j, align 4, !dbg !3193
  br label %for.cond3, !dbg !3195, !llvm.loop !3196

for.end:                                          ; preds = %for.cond3
  %31 = load i64, i64* %dst_linesize.addr, align 8, !dbg !3198
  %32 = load i8*, i8** %dst.addr, align 8, !dbg !3200
  %add.ptr = getelementptr inbounds i8, i8* %32, i64 %31, !dbg !3200
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !3200
  %33 = load i64, i64* %top_linesize.addr, align 8, !dbg !3201
  %34 = load i8*, i8** %top.addr, align 8, !dbg !3202
  %add.ptr42 = getelementptr inbounds i8, i8* %34, i64 %33, !dbg !3202
  store i8* %add.ptr42, i8** %top.addr, align 8, !dbg !3202
  %35 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !3203
  %36 = load i8*, i8** %bottom.addr, align 8, !dbg !3204
  %add.ptr43 = getelementptr inbounds i8, i8* %36, i64 %35, !dbg !3204
  store i8* %add.ptr43, i8** %bottom.addr, align 8, !dbg !3204
  br label %for.inc44, !dbg !3205

for.inc44:                                        ; preds = %for.end
  %37 = load i32, i32* %i, align 4, !dbg !3206
  %inc45 = add nsw i32 %37, 1, !dbg !3206
  store i32 %inc45, i32* %i, align 4, !dbg !3206
  br label %for.cond, !dbg !3208, !llvm.loop !3209

for.end46:                                        ; preds = %for.cond
  ret void, !dbg !3211
}

; Function Attrs: nounwind uwtable
define internal void @blend_hardmix_8bit(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !3213 {
entry:
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !3214, metadata !905), !dbg !3215
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !3216, metadata !905), !dbg !3217
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !3218, metadata !905), !dbg !3219
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !3220, metadata !905), !dbg !3221
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !3222, metadata !905), !dbg !3223
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !3224, metadata !905), !dbg !3225
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !3226, metadata !905), !dbg !3227
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !3228, metadata !905), !dbg !3229
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !3230, metadata !905), !dbg !3231
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !3232, metadata !905), !dbg !3233
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !3234, metadata !905), !dbg !3235
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !3236, metadata !905), !dbg !3237
  %0 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !3238
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %0, i32 0, i32 1, !dbg !3239
  %1 = load double, double* %opacity1, align 8, !dbg !3239
  store double %1, double* %opacity, align 8, !dbg !3237
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3240, metadata !905), !dbg !3241
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3242, metadata !905), !dbg !3243
  store i32 0, i32* %i, align 4, !dbg !3244
  br label %for.cond, !dbg !3246

for.cond:                                         ; preds = %for.inc28, %entry
  %2 = load i32, i32* %i, align 4, !dbg !3247
  %conv = sext i32 %2 to i64, !dbg !3247
  %3 = load i64, i64* %height.addr, align 8, !dbg !3250
  %cmp = icmp slt i64 %conv, %3, !dbg !3251
  br i1 %cmp, label %for.body, label %for.end30, !dbg !3252

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !3253
  br label %for.cond3, !dbg !3257

for.cond3:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !3258
  %conv4 = sext i32 %4 to i64, !dbg !3258
  %5 = load i64, i64* %width.addr, align 8, !dbg !3261
  %cmp5 = icmp slt i64 %conv4, %5, !dbg !3262
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !3263

for.body7:                                        ; preds = %for.cond3
  %6 = load i32, i32* %j, align 4, !dbg !3264
  %idxprom = sext i32 %6 to i64, !dbg !3267
  %7 = load i8*, i8** %top.addr, align 8, !dbg !3267
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !3267
  %8 = load i8, i8* %arrayidx, align 1, !dbg !3267
  %conv8 = zext i8 %8 to i32, !dbg !3267
  %conv9 = sitofp i32 %conv8 to double, !dbg !3267
  %9 = load i32, i32* %j, align 4, !dbg !3268
  %idxprom10 = sext i32 %9 to i64, !dbg !3269
  %10 = load i8*, i8** %top.addr, align 8, !dbg !3269
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 %idxprom10, !dbg !3269
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !3269
  %conv12 = zext i8 %11 to i32, !dbg !3269
  %12 = load i32, i32* %j, align 4, !dbg !3270
  %idxprom13 = sext i32 %12 to i64, !dbg !3271
  %13 = load i8*, i8** %bottom.addr, align 8, !dbg !3271
  %arrayidx14 = getelementptr inbounds i8, i8* %13, i64 %idxprom13, !dbg !3271
  %14 = load i8, i8* %arrayidx14, align 1, !dbg !3271
  %conv15 = zext i8 %14 to i32, !dbg !3271
  %sub = sub nsw i32 255, %conv15, !dbg !3272
  %cmp16 = icmp slt i32 %conv12, %sub, !dbg !3273
  %cond = select i1 %cmp16, i32 0, i32 255, !dbg !3274
  %15 = load i32, i32* %j, align 4, !dbg !3275
  %idxprom18 = sext i32 %15 to i64, !dbg !3276
  %16 = load i8*, i8** %top.addr, align 8, !dbg !3276
  %arrayidx19 = getelementptr inbounds i8, i8* %16, i64 %idxprom18, !dbg !3276
  %17 = load i8, i8* %arrayidx19, align 1, !dbg !3276
  %conv20 = zext i8 %17 to i32, !dbg !3276
  %sub21 = sub nsw i32 %cond, %conv20, !dbg !3277
  %conv22 = sitofp i32 %sub21 to double, !dbg !3278
  %18 = load double, double* %opacity, align 8, !dbg !3279
  %mul = fmul double %conv22, %18, !dbg !3280
  %add = fadd double %conv9, %mul, !dbg !3281
  %conv23 = fptoui double %add to i8, !dbg !3267
  %19 = load i32, i32* %j, align 4, !dbg !3282
  %idxprom24 = sext i32 %19 to i64, !dbg !3283
  %20 = load i8*, i8** %dst.addr, align 8, !dbg !3283
  %arrayidx25 = getelementptr inbounds i8, i8* %20, i64 %idxprom24, !dbg !3283
  store i8 %conv23, i8* %arrayidx25, align 1, !dbg !3284
  br label %for.inc, !dbg !3285

for.inc:                                          ; preds = %for.body7
  %21 = load i32, i32* %j, align 4, !dbg !3286
  %inc = add nsw i32 %21, 1, !dbg !3286
  store i32 %inc, i32* %j, align 4, !dbg !3286
  br label %for.cond3, !dbg !3288, !llvm.loop !3289

for.end:                                          ; preds = %for.cond3
  %22 = load i64, i64* %dst_linesize.addr, align 8, !dbg !3291
  %23 = load i8*, i8** %dst.addr, align 8, !dbg !3293
  %add.ptr = getelementptr inbounds i8, i8* %23, i64 %22, !dbg !3293
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !3293
  %24 = load i64, i64* %top_linesize.addr, align 8, !dbg !3294
  %25 = load i8*, i8** %top.addr, align 8, !dbg !3295
  %add.ptr26 = getelementptr inbounds i8, i8* %25, i64 %24, !dbg !3295
  store i8* %add.ptr26, i8** %top.addr, align 8, !dbg !3295
  %26 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !3296
  %27 = load i8*, i8** %bottom.addr, align 8, !dbg !3297
  %add.ptr27 = getelementptr inbounds i8, i8* %27, i64 %26, !dbg !3297
  store i8* %add.ptr27, i8** %bottom.addr, align 8, !dbg !3297
  br label %for.inc28, !dbg !3298

for.inc28:                                        ; preds = %for.end
  %28 = load i32, i32* %i, align 4, !dbg !3299
  %inc29 = add nsw i32 %28, 1, !dbg !3299
  store i32 %inc29, i32* %i, align 4, !dbg !3299
  br label %for.cond, !dbg !3301, !llvm.loop !3302

for.end30:                                        ; preds = %for.cond
  ret void, !dbg !3304
}

; Function Attrs: nounwind uwtable
define internal void @blend_heat_8bit(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !3306 {
entry:
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !3307, metadata !905), !dbg !3308
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !3309, metadata !905), !dbg !3310
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !3311, metadata !905), !dbg !3312
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !3313, metadata !905), !dbg !3314
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !3315, metadata !905), !dbg !3316
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !3317, metadata !905), !dbg !3318
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !3319, metadata !905), !dbg !3320
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !3321, metadata !905), !dbg !3322
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !3323, metadata !905), !dbg !3324
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !3325, metadata !905), !dbg !3326
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !3327, metadata !905), !dbg !3328
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !3329, metadata !905), !dbg !3330
  %0 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !3331
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %0, i32 0, i32 1, !dbg !3332
  %1 = load double, double* %opacity1, align 8, !dbg !3332
  store double %1, double* %opacity, align 8, !dbg !3330
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3333, metadata !905), !dbg !3334
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3335, metadata !905), !dbg !3336
  store i32 0, i32* %i, align 4, !dbg !3337
  br label %for.cond, !dbg !3339

for.cond:                                         ; preds = %for.inc56, %entry
  %2 = load i32, i32* %i, align 4, !dbg !3340
  %conv = sext i32 %2 to i64, !dbg !3340
  %3 = load i64, i64* %height.addr, align 8, !dbg !3343
  %cmp = icmp slt i64 %conv, %3, !dbg !3344
  br i1 %cmp, label %for.body, label %for.end58, !dbg !3345

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !3346
  br label %for.cond3, !dbg !3350

for.cond3:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !3351
  %conv4 = sext i32 %4 to i64, !dbg !3351
  %5 = load i64, i64* %width.addr, align 8, !dbg !3354
  %cmp5 = icmp slt i64 %conv4, %5, !dbg !3355
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !3356

for.body7:                                        ; preds = %for.cond3
  %6 = load i32, i32* %j, align 4, !dbg !3357
  %idxprom = sext i32 %6 to i64, !dbg !3360
  %7 = load i8*, i8** %top.addr, align 8, !dbg !3360
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !3360
  %8 = load i8, i8* %arrayidx, align 1, !dbg !3360
  %conv8 = zext i8 %8 to i32, !dbg !3360
  %conv9 = sitofp i32 %conv8 to double, !dbg !3360
  %9 = load i32, i32* %j, align 4, !dbg !3361
  %idxprom10 = sext i32 %9 to i64, !dbg !3362
  %10 = load i8*, i8** %top.addr, align 8, !dbg !3362
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 %idxprom10, !dbg !3362
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !3362
  %conv12 = zext i8 %11 to i32, !dbg !3362
  %cmp13 = icmp eq i32 %conv12, 0, !dbg !3363
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !3364

cond.true:                                        ; preds = %for.body7
  br label %cond.end43, !dbg !3365

cond.false:                                       ; preds = %for.body7
  %12 = load i32, i32* %j, align 4, !dbg !3367
  %idxprom15 = sext i32 %12 to i64, !dbg !3369
  %13 = load i8*, i8** %bottom.addr, align 8, !dbg !3369
  %arrayidx16 = getelementptr inbounds i8, i8* %13, i64 %idxprom15, !dbg !3369
  %14 = load i8, i8* %arrayidx16, align 1, !dbg !3369
  %conv17 = zext i8 %14 to i32, !dbg !3369
  %sub = sub nsw i32 255, %conv17, !dbg !3370
  %15 = load i32, i32* %j, align 4, !dbg !3371
  %idxprom18 = sext i32 %15 to i64, !dbg !3372
  %16 = load i8*, i8** %bottom.addr, align 8, !dbg !3372
  %arrayidx19 = getelementptr inbounds i8, i8* %16, i64 %idxprom18, !dbg !3372
  %17 = load i8, i8* %arrayidx19, align 1, !dbg !3372
  %conv20 = zext i8 %17 to i32, !dbg !3372
  %sub21 = sub nsw i32 255, %conv20, !dbg !3373
  %mul = mul nsw i32 %sub, %sub21, !dbg !3374
  %18 = load i32, i32* %j, align 4, !dbg !3375
  %idxprom22 = sext i32 %18 to i64, !dbg !3376
  %19 = load i8*, i8** %top.addr, align 8, !dbg !3376
  %arrayidx23 = getelementptr inbounds i8, i8* %19, i64 %idxprom22, !dbg !3376
  %20 = load i8, i8* %arrayidx23, align 1, !dbg !3376
  %conv24 = zext i8 %20 to i32, !dbg !3376
  %div = sdiv i32 %mul, %conv24, !dbg !3377
  %cmp25 = icmp sgt i32 %div, 255, !dbg !3378
  br i1 %cmp25, label %cond.true27, label %cond.false28, !dbg !3379

cond.true27:                                      ; preds = %cond.false
  br label %cond.end, !dbg !3380

cond.false28:                                     ; preds = %cond.false
  %21 = load i32, i32* %j, align 4, !dbg !3382
  %idxprom29 = sext i32 %21 to i64, !dbg !3384
  %22 = load i8*, i8** %bottom.addr, align 8, !dbg !3384
  %arrayidx30 = getelementptr inbounds i8, i8* %22, i64 %idxprom29, !dbg !3384
  %23 = load i8, i8* %arrayidx30, align 1, !dbg !3384
  %conv31 = zext i8 %23 to i32, !dbg !3384
  %sub32 = sub nsw i32 255, %conv31, !dbg !3385
  %24 = load i32, i32* %j, align 4, !dbg !3386
  %idxprom33 = sext i32 %24 to i64, !dbg !3387
  %25 = load i8*, i8** %bottom.addr, align 8, !dbg !3387
  %arrayidx34 = getelementptr inbounds i8, i8* %25, i64 %idxprom33, !dbg !3387
  %26 = load i8, i8* %arrayidx34, align 1, !dbg !3387
  %conv35 = zext i8 %26 to i32, !dbg !3387
  %sub36 = sub nsw i32 255, %conv35, !dbg !3388
  %mul37 = mul nsw i32 %sub32, %sub36, !dbg !3389
  %27 = load i32, i32* %j, align 4, !dbg !3390
  %idxprom38 = sext i32 %27 to i64, !dbg !3391
  %28 = load i8*, i8** %top.addr, align 8, !dbg !3391
  %arrayidx39 = getelementptr inbounds i8, i8* %28, i64 %idxprom38, !dbg !3391
  %29 = load i8, i8* %arrayidx39, align 1, !dbg !3391
  %conv40 = zext i8 %29 to i32, !dbg !3391
  %div41 = sdiv i32 %mul37, %conv40, !dbg !3392
  br label %cond.end, !dbg !3393

cond.end:                                         ; preds = %cond.false28, %cond.true27
  %cond = phi i32 [ 255, %cond.true27 ], [ %div41, %cond.false28 ], !dbg !3394
  %sub42 = sub nsw i32 255, %cond, !dbg !3396
  br label %cond.end43, !dbg !3397

cond.end43:                                       ; preds = %cond.end, %cond.true
  %cond44 = phi i32 [ 0, %cond.true ], [ %sub42, %cond.end ], !dbg !3398
  %30 = load i32, i32* %j, align 4, !dbg !3400
  %idxprom45 = sext i32 %30 to i64, !dbg !3401
  %31 = load i8*, i8** %top.addr, align 8, !dbg !3401
  %arrayidx46 = getelementptr inbounds i8, i8* %31, i64 %idxprom45, !dbg !3401
  %32 = load i8, i8* %arrayidx46, align 1, !dbg !3401
  %conv47 = zext i8 %32 to i32, !dbg !3401
  %sub48 = sub nsw i32 %cond44, %conv47, !dbg !3402
  %conv49 = sitofp i32 %sub48 to double, !dbg !3403
  %33 = load double, double* %opacity, align 8, !dbg !3404
  %mul50 = fmul double %conv49, %33, !dbg !3405
  %add = fadd double %conv9, %mul50, !dbg !3406
  %conv51 = fptoui double %add to i8, !dbg !3407
  %34 = load i32, i32* %j, align 4, !dbg !3408
  %idxprom52 = sext i32 %34 to i64, !dbg !3409
  %35 = load i8*, i8** %dst.addr, align 8, !dbg !3409
  %arrayidx53 = getelementptr inbounds i8, i8* %35, i64 %idxprom52, !dbg !3409
  store i8 %conv51, i8* %arrayidx53, align 1, !dbg !3410
  br label %for.inc, !dbg !3411

for.inc:                                          ; preds = %cond.end43
  %36 = load i32, i32* %j, align 4, !dbg !3412
  %inc = add nsw i32 %36, 1, !dbg !3412
  store i32 %inc, i32* %j, align 4, !dbg !3412
  br label %for.cond3, !dbg !3414, !llvm.loop !3415

for.end:                                          ; preds = %for.cond3
  %37 = load i64, i64* %dst_linesize.addr, align 8, !dbg !3417
  %38 = load i8*, i8** %dst.addr, align 8, !dbg !3419
  %add.ptr = getelementptr inbounds i8, i8* %38, i64 %37, !dbg !3419
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !3419
  %39 = load i64, i64* %top_linesize.addr, align 8, !dbg !3420
  %40 = load i8*, i8** %top.addr, align 8, !dbg !3421
  %add.ptr54 = getelementptr inbounds i8, i8* %40, i64 %39, !dbg !3421
  store i8* %add.ptr54, i8** %top.addr, align 8, !dbg !3421
  %41 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !3422
  %42 = load i8*, i8** %bottom.addr, align 8, !dbg !3423
  %add.ptr55 = getelementptr inbounds i8, i8* %42, i64 %41, !dbg !3423
  store i8* %add.ptr55, i8** %bottom.addr, align 8, !dbg !3423
  br label %for.inc56, !dbg !3424

for.inc56:                                        ; preds = %for.end
  %43 = load i32, i32* %i, align 4, !dbg !3425
  %inc57 = add nsw i32 %43, 1, !dbg !3425
  store i32 %inc57, i32* %i, align 4, !dbg !3425
  br label %for.cond, !dbg !3427, !llvm.loop !3428

for.end58:                                        ; preds = %for.cond
  ret void, !dbg !3430
}

; Function Attrs: nounwind uwtable
define internal void @blend_lighten_8bit(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !3432 {
entry:
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !3433, metadata !905), !dbg !3434
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !3435, metadata !905), !dbg !3436
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !3437, metadata !905), !dbg !3438
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !3439, metadata !905), !dbg !3440
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !3441, metadata !905), !dbg !3442
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !3443, metadata !905), !dbg !3444
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !3445, metadata !905), !dbg !3446
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !3447, metadata !905), !dbg !3448
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !3449, metadata !905), !dbg !3450
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !3451, metadata !905), !dbg !3452
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !3453, metadata !905), !dbg !3454
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !3455, metadata !905), !dbg !3456
  %0 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !3457
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %0, i32 0, i32 1, !dbg !3458
  %1 = load double, double* %opacity1, align 8, !dbg !3458
  store double %1, double* %opacity, align 8, !dbg !3456
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3459, metadata !905), !dbg !3460
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3461, metadata !905), !dbg !3462
  store i32 0, i32* %i, align 4, !dbg !3463
  br label %for.cond, !dbg !3465

for.cond:                                         ; preds = %for.inc33, %entry
  %2 = load i32, i32* %i, align 4, !dbg !3466
  %conv = sext i32 %2 to i64, !dbg !3466
  %3 = load i64, i64* %height.addr, align 8, !dbg !3469
  %cmp = icmp slt i64 %conv, %3, !dbg !3470
  br i1 %cmp, label %for.body, label %for.end35, !dbg !3471

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !3472
  br label %for.cond3, !dbg !3476

for.cond3:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !3477
  %conv4 = sext i32 %4 to i64, !dbg !3477
  %5 = load i64, i64* %width.addr, align 8, !dbg !3480
  %cmp5 = icmp slt i64 %conv4, %5, !dbg !3481
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !3482

for.body7:                                        ; preds = %for.cond3
  %6 = load i32, i32* %j, align 4, !dbg !3483
  %idxprom = sext i32 %6 to i64, !dbg !3486
  %7 = load i8*, i8** %top.addr, align 8, !dbg !3486
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !3486
  %8 = load i8, i8* %arrayidx, align 1, !dbg !3486
  %conv8 = zext i8 %8 to i32, !dbg !3486
  %conv9 = sitofp i32 %conv8 to double, !dbg !3486
  %9 = load i32, i32* %j, align 4, !dbg !3487
  %idxprom10 = sext i32 %9 to i64, !dbg !3488
  %10 = load i8*, i8** %top.addr, align 8, !dbg !3488
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 %idxprom10, !dbg !3488
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !3488
  %conv12 = zext i8 %11 to i32, !dbg !3489
  %12 = load i32, i32* %j, align 4, !dbg !3490
  %idxprom13 = sext i32 %12 to i64, !dbg !3491
  %13 = load i8*, i8** %bottom.addr, align 8, !dbg !3491
  %arrayidx14 = getelementptr inbounds i8, i8* %13, i64 %idxprom13, !dbg !3491
  %14 = load i8, i8* %arrayidx14, align 1, !dbg !3491
  %conv15 = zext i8 %14 to i32, !dbg !3492
  %cmp16 = icmp sgt i32 %conv12, %conv15, !dbg !3493
  br i1 %cmp16, label %cond.true, label %cond.false, !dbg !3489

cond.true:                                        ; preds = %for.body7
  %15 = load i32, i32* %j, align 4, !dbg !3494
  %idxprom18 = sext i32 %15 to i64, !dbg !3496
  %16 = load i8*, i8** %top.addr, align 8, !dbg !3496
  %arrayidx19 = getelementptr inbounds i8, i8* %16, i64 %idxprom18, !dbg !3496
  %17 = load i8, i8* %arrayidx19, align 1, !dbg !3496
  %conv20 = zext i8 %17 to i32, !dbg !3497
  br label %cond.end, !dbg !3498

cond.false:                                       ; preds = %for.body7
  %18 = load i32, i32* %j, align 4, !dbg !3499
  %idxprom21 = sext i32 %18 to i64, !dbg !3501
  %19 = load i8*, i8** %bottom.addr, align 8, !dbg !3501
  %arrayidx22 = getelementptr inbounds i8, i8* %19, i64 %idxprom21, !dbg !3501
  %20 = load i8, i8* %arrayidx22, align 1, !dbg !3501
  %conv23 = zext i8 %20 to i32, !dbg !3502
  br label %cond.end, !dbg !3503

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv20, %cond.true ], [ %conv23, %cond.false ], !dbg !3504
  %21 = load i32, i32* %j, align 4, !dbg !3506
  %idxprom24 = sext i32 %21 to i64, !dbg !3507
  %22 = load i8*, i8** %top.addr, align 8, !dbg !3507
  %arrayidx25 = getelementptr inbounds i8, i8* %22, i64 %idxprom24, !dbg !3507
  %23 = load i8, i8* %arrayidx25, align 1, !dbg !3507
  %conv26 = zext i8 %23 to i32, !dbg !3507
  %sub = sub nsw i32 %cond, %conv26, !dbg !3508
  %conv27 = sitofp i32 %sub to double, !dbg !3509
  %24 = load double, double* %opacity, align 8, !dbg !3510
  %mul = fmul double %conv27, %24, !dbg !3511
  %add = fadd double %conv9, %mul, !dbg !3512
  %conv28 = fptoui double %add to i8, !dbg !3513
  %25 = load i32, i32* %j, align 4, !dbg !3514
  %idxprom29 = sext i32 %25 to i64, !dbg !3515
  %26 = load i8*, i8** %dst.addr, align 8, !dbg !3515
  %arrayidx30 = getelementptr inbounds i8, i8* %26, i64 %idxprom29, !dbg !3515
  store i8 %conv28, i8* %arrayidx30, align 1, !dbg !3516
  br label %for.inc, !dbg !3517

for.inc:                                          ; preds = %cond.end
  %27 = load i32, i32* %j, align 4, !dbg !3518
  %inc = add nsw i32 %27, 1, !dbg !3518
  store i32 %inc, i32* %j, align 4, !dbg !3518
  br label %for.cond3, !dbg !3520, !llvm.loop !3521

for.end:                                          ; preds = %for.cond3
  %28 = load i64, i64* %dst_linesize.addr, align 8, !dbg !3523
  %29 = load i8*, i8** %dst.addr, align 8, !dbg !3525
  %add.ptr = getelementptr inbounds i8, i8* %29, i64 %28, !dbg !3525
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !3525
  %30 = load i64, i64* %top_linesize.addr, align 8, !dbg !3526
  %31 = load i8*, i8** %top.addr, align 8, !dbg !3527
  %add.ptr31 = getelementptr inbounds i8, i8* %31, i64 %30, !dbg !3527
  store i8* %add.ptr31, i8** %top.addr, align 8, !dbg !3527
  %32 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !3528
  %33 = load i8*, i8** %bottom.addr, align 8, !dbg !3529
  %add.ptr32 = getelementptr inbounds i8, i8* %33, i64 %32, !dbg !3529
  store i8* %add.ptr32, i8** %bottom.addr, align 8, !dbg !3529
  br label %for.inc33, !dbg !3530

for.inc33:                                        ; preds = %for.end
  %34 = load i32, i32* %i, align 4, !dbg !3531
  %inc34 = add nsw i32 %34, 1, !dbg !3531
  store i32 %inc34, i32* %i, align 4, !dbg !3531
  br label %for.cond, !dbg !3533, !llvm.loop !3534

for.end35:                                        ; preds = %for.cond
  ret void, !dbg !3536
}

; Function Attrs: nounwind uwtable
define internal void @blend_linearlight_8bit(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !3538 {
entry:
  %retval.i = alloca i8, align 1
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !1638, metadata !905), !dbg !3539
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !3548, metadata !905), !dbg !3549
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !3550, metadata !905), !dbg !3551
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !3552, metadata !905), !dbg !3553
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !3554, metadata !905), !dbg !3555
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !3556, metadata !905), !dbg !3557
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !3558, metadata !905), !dbg !3559
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !3560, metadata !905), !dbg !3561
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !3562, metadata !905), !dbg !3563
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !3564, metadata !905), !dbg !3565
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !3566, metadata !905), !dbg !3567
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !3568, metadata !905), !dbg !3569
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !3570, metadata !905), !dbg !3571
  %0 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !3572
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %0, i32 0, i32 1, !dbg !3573
  %1 = load double, double* %opacity1, align 8, !dbg !3573
  store double %1, double* %opacity, align 8, !dbg !3571
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3574, metadata !905), !dbg !3575
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3576, metadata !905), !dbg !3577
  store i32 0, i32* %i, align 4, !dbg !3578
  br label %for.cond, !dbg !3579

for.cond:                                         ; preds = %for.inc43, %entry
  %2 = load i32, i32* %i, align 4, !dbg !3580
  %conv = sext i32 %2 to i64, !dbg !3580
  %3 = load i64, i64* %height.addr, align 8, !dbg !3582
  %cmp = icmp slt i64 %conv, %3, !dbg !3583
  br i1 %cmp, label %for.body, label %for.end45, !dbg !3584

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !3585
  br label %for.cond3, !dbg !3587

for.cond3:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !3588
  %conv4 = sext i32 %4 to i64, !dbg !3588
  %5 = load i64, i64* %width.addr, align 8, !dbg !3590
  %cmp5 = icmp slt i64 %conv4, %5, !dbg !3591
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !3592

for.body7:                                        ; preds = %for.cond3
  %6 = load i32, i32* %j, align 4, !dbg !3593
  %idxprom = sext i32 %6 to i64, !dbg !3595
  %7 = load i8*, i8** %top.addr, align 8, !dbg !3595
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !3595
  %8 = load i8, i8* %arrayidx, align 1, !dbg !3595
  %conv8 = zext i8 %8 to i32, !dbg !3595
  %conv9 = sitofp i32 %conv8 to double, !dbg !3595
  %9 = load i32, i32* %j, align 4, !dbg !3596
  %idxprom10 = sext i32 %9 to i64, !dbg !3597
  %10 = load i8*, i8** %bottom.addr, align 8, !dbg !3597
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 %idxprom10, !dbg !3597
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !3597
  %conv12 = zext i8 %11 to i32, !dbg !3597
  %cmp13 = icmp slt i32 %conv12, 128, !dbg !3598
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !3599

cond.true:                                        ; preds = %for.body7
  %12 = load i32, i32* %j, align 4, !dbg !3600
  %idxprom15 = sext i32 %12 to i64, !dbg !3602
  %13 = load i8*, i8** %bottom.addr, align 8, !dbg !3602
  %arrayidx16 = getelementptr inbounds i8, i8* %13, i64 %idxprom15, !dbg !3602
  %14 = load i8, i8* %arrayidx16, align 1, !dbg !3602
  %conv17 = zext i8 %14 to i32, !dbg !3602
  %15 = load i32, i32* %j, align 4, !dbg !3603
  %idxprom18 = sext i32 %15 to i64, !dbg !3604
  %16 = load i8*, i8** %top.addr, align 8, !dbg !3604
  %arrayidx19 = getelementptr inbounds i8, i8* %16, i64 %idxprom18, !dbg !3604
  %17 = load i8, i8* %arrayidx19, align 1, !dbg !3604
  %conv20 = zext i8 %17 to i32, !dbg !3604
  %mul = mul nsw i32 2, %conv20, !dbg !3605
  %add = add nsw i32 %conv17, %mul, !dbg !3606
  %sub = sub nsw i32 %add, 255, !dbg !3607
  br label %cond.end, !dbg !3608

cond.false:                                       ; preds = %for.body7
  %18 = load i32, i32* %j, align 4, !dbg !3609
  %idxprom21 = sext i32 %18 to i64, !dbg !3611
  %19 = load i8*, i8** %bottom.addr, align 8, !dbg !3611
  %arrayidx22 = getelementptr inbounds i8, i8* %19, i64 %idxprom21, !dbg !3611
  %20 = load i8, i8* %arrayidx22, align 1, !dbg !3611
  %conv23 = zext i8 %20 to i32, !dbg !3611
  %21 = load i32, i32* %j, align 4, !dbg !3612
  %idxprom24 = sext i32 %21 to i64, !dbg !3613
  %22 = load i8*, i8** %top.addr, align 8, !dbg !3613
  %arrayidx25 = getelementptr inbounds i8, i8* %22, i64 %idxprom24, !dbg !3613
  %23 = load i8, i8* %arrayidx25, align 1, !dbg !3613
  %conv26 = zext i8 %23 to i32, !dbg !3613
  %sub27 = sub nsw i32 %conv26, 128, !dbg !3614
  %mul28 = mul nsw i32 2, %sub27, !dbg !3615
  %add29 = add nsw i32 %conv23, %mul28, !dbg !3616
  br label %cond.end, !dbg !3617

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %add29, %cond.false ], !dbg !3618
  store i32 %cond, i32* %a.addr.i, align 4, !dbg !3619
  %24 = load i32, i32* %a.addr.i, align 4, !dbg !3620
  %and.i = and i32 %24, -256, !dbg !3621
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !3621
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !3622

if.then.i:                                        ; preds = %cond.end
  %25 = load i32, i32* %a.addr.i, align 4, !dbg !3623
  %neg.i = xor i32 %25, -1, !dbg !3624
  %shr.i = ashr i32 %neg.i, 31, !dbg !3625
  %conv.i = trunc i32 %shr.i to i8, !dbg !3626
  store i8 %conv.i, i8* %retval.i, align 1, !dbg !3627
  br label %av_clip_uint8_c.exit, !dbg !3627

if.else.i:                                        ; preds = %cond.end
  %26 = load i32, i32* %a.addr.i, align 4, !dbg !3628
  %conv1.i = trunc i32 %26 to i8, !dbg !3628
  store i8 %conv1.i, i8* %retval.i, align 1, !dbg !3629
  br label %av_clip_uint8_c.exit, !dbg !3629

av_clip_uint8_c.exit:                             ; preds = %if.then.i, %if.else.i
  %27 = load i8, i8* %retval.i, align 1, !dbg !3630
  %conv30 = zext i8 %27 to i32, !dbg !3631
  %28 = load i32, i32* %j, align 4, !dbg !3632
  %idxprom31 = sext i32 %28 to i64, !dbg !3633
  %29 = load i8*, i8** %top.addr, align 8, !dbg !3633
  %arrayidx32 = getelementptr inbounds i8, i8* %29, i64 %idxprom31, !dbg !3633
  %30 = load i8, i8* %arrayidx32, align 1, !dbg !3633
  %conv33 = zext i8 %30 to i32, !dbg !3633
  %sub34 = sub nsw i32 %conv30, %conv33, !dbg !3634
  %conv35 = sitofp i32 %sub34 to double, !dbg !3635
  %31 = load double, double* %opacity, align 8, !dbg !3636
  %mul36 = fmul double %conv35, %31, !dbg !3637
  %add37 = fadd double %conv9, %mul36, !dbg !3638
  %conv38 = fptoui double %add37 to i8, !dbg !3639
  %32 = load i32, i32* %j, align 4, !dbg !3640
  %idxprom39 = sext i32 %32 to i64, !dbg !3641
  %33 = load i8*, i8** %dst.addr, align 8, !dbg !3641
  %arrayidx40 = getelementptr inbounds i8, i8* %33, i64 %idxprom39, !dbg !3641
  store i8 %conv38, i8* %arrayidx40, align 1, !dbg !3642
  br label %for.inc, !dbg !3643

for.inc:                                          ; preds = %av_clip_uint8_c.exit
  %34 = load i32, i32* %j, align 4, !dbg !3644
  %inc = add nsw i32 %34, 1, !dbg !3644
  store i32 %inc, i32* %j, align 4, !dbg !3644
  br label %for.cond3, !dbg !3646, !llvm.loop !3647

for.end:                                          ; preds = %for.cond3
  %35 = load i64, i64* %dst_linesize.addr, align 8, !dbg !3649
  %36 = load i8*, i8** %dst.addr, align 8, !dbg !3651
  %add.ptr = getelementptr inbounds i8, i8* %36, i64 %35, !dbg !3651
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !3651
  %37 = load i64, i64* %top_linesize.addr, align 8, !dbg !3652
  %38 = load i8*, i8** %top.addr, align 8, !dbg !3653
  %add.ptr41 = getelementptr inbounds i8, i8* %38, i64 %37, !dbg !3653
  store i8* %add.ptr41, i8** %top.addr, align 8, !dbg !3653
  %39 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !3654
  %40 = load i8*, i8** %bottom.addr, align 8, !dbg !3655
  %add.ptr42 = getelementptr inbounds i8, i8* %40, i64 %39, !dbg !3655
  store i8* %add.ptr42, i8** %bottom.addr, align 8, !dbg !3655
  br label %for.inc43, !dbg !3656

for.inc43:                                        ; preds = %for.end
  %41 = load i32, i32* %i, align 4, !dbg !3657
  %inc44 = add nsw i32 %41, 1, !dbg !3657
  store i32 %inc44, i32* %i, align 4, !dbg !3657
  br label %for.cond, !dbg !3659, !llvm.loop !3660

for.end45:                                        ; preds = %for.cond
  ret void, !dbg !3662
}

; Function Attrs: nounwind uwtable
define internal void @blend_multiply_8bit(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !3664 {
entry:
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !3665, metadata !905), !dbg !3666
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !3667, metadata !905), !dbg !3668
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !3669, metadata !905), !dbg !3670
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !3671, metadata !905), !dbg !3672
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !3673, metadata !905), !dbg !3674
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !3675, metadata !905), !dbg !3676
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !3677, metadata !905), !dbg !3678
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !3679, metadata !905), !dbg !3680
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !3681, metadata !905), !dbg !3682
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !3683, metadata !905), !dbg !3684
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !3685, metadata !905), !dbg !3686
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !3687, metadata !905), !dbg !3688
  %0 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !3689
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %0, i32 0, i32 1, !dbg !3690
  %1 = load double, double* %opacity1, align 8, !dbg !3690
  store double %1, double* %opacity, align 8, !dbg !3688
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3691, metadata !905), !dbg !3692
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3693, metadata !905), !dbg !3694
  store i32 0, i32* %i, align 4, !dbg !3695
  br label %for.cond, !dbg !3697

for.cond:                                         ; preds = %for.inc27, %entry
  %2 = load i32, i32* %i, align 4, !dbg !3698
  %conv = sext i32 %2 to i64, !dbg !3698
  %3 = load i64, i64* %height.addr, align 8, !dbg !3701
  %cmp = icmp slt i64 %conv, %3, !dbg !3702
  br i1 %cmp, label %for.body, label %for.end29, !dbg !3703

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !3704
  br label %for.cond3, !dbg !3708

for.cond3:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !3709
  %conv4 = sext i32 %4 to i64, !dbg !3709
  %5 = load i64, i64* %width.addr, align 8, !dbg !3712
  %cmp5 = icmp slt i64 %conv4, %5, !dbg !3713
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !3714

for.body7:                                        ; preds = %for.cond3
  %6 = load i32, i32* %j, align 4, !dbg !3715
  %idxprom = sext i32 %6 to i64, !dbg !3718
  %7 = load i8*, i8** %top.addr, align 8, !dbg !3718
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !3718
  %8 = load i8, i8* %arrayidx, align 1, !dbg !3718
  %conv8 = zext i8 %8 to i32, !dbg !3718
  %conv9 = sitofp i32 %conv8 to double, !dbg !3718
  %9 = load i32, i32* %j, align 4, !dbg !3719
  %idxprom10 = sext i32 %9 to i64, !dbg !3720
  %10 = load i8*, i8** %top.addr, align 8, !dbg !3720
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 %idxprom10, !dbg !3720
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !3720
  %conv12 = zext i8 %11 to i32, !dbg !3721
  %12 = load i32, i32* %j, align 4, !dbg !3722
  %idxprom13 = sext i32 %12 to i64, !dbg !3723
  %13 = load i8*, i8** %bottom.addr, align 8, !dbg !3723
  %arrayidx14 = getelementptr inbounds i8, i8* %13, i64 %idxprom13, !dbg !3723
  %14 = load i8, i8* %arrayidx14, align 1, !dbg !3723
  %conv15 = zext i8 %14 to i32, !dbg !3724
  %mul = mul nsw i32 %conv12, %conv15, !dbg !3725
  %div = sdiv i32 %mul, 255, !dbg !3726
  %mul16 = mul nsw i32 1, %div, !dbg !3727
  %15 = load i32, i32* %j, align 4, !dbg !3728
  %idxprom17 = sext i32 %15 to i64, !dbg !3729
  %16 = load i8*, i8** %top.addr, align 8, !dbg !3729
  %arrayidx18 = getelementptr inbounds i8, i8* %16, i64 %idxprom17, !dbg !3729
  %17 = load i8, i8* %arrayidx18, align 1, !dbg !3729
  %conv19 = zext i8 %17 to i32, !dbg !3729
  %sub = sub nsw i32 %mul16, %conv19, !dbg !3730
  %conv20 = sitofp i32 %sub to double, !dbg !3731
  %18 = load double, double* %opacity, align 8, !dbg !3732
  %mul21 = fmul double %conv20, %18, !dbg !3733
  %add = fadd double %conv9, %mul21, !dbg !3734
  %conv22 = fptoui double %add to i8, !dbg !3718
  %19 = load i32, i32* %j, align 4, !dbg !3735
  %idxprom23 = sext i32 %19 to i64, !dbg !3736
  %20 = load i8*, i8** %dst.addr, align 8, !dbg !3736
  %arrayidx24 = getelementptr inbounds i8, i8* %20, i64 %idxprom23, !dbg !3736
  store i8 %conv22, i8* %arrayidx24, align 1, !dbg !3737
  br label %for.inc, !dbg !3738

for.inc:                                          ; preds = %for.body7
  %21 = load i32, i32* %j, align 4, !dbg !3739
  %inc = add nsw i32 %21, 1, !dbg !3739
  store i32 %inc, i32* %j, align 4, !dbg !3739
  br label %for.cond3, !dbg !3741, !llvm.loop !3742

for.end:                                          ; preds = %for.cond3
  %22 = load i64, i64* %dst_linesize.addr, align 8, !dbg !3744
  %23 = load i8*, i8** %dst.addr, align 8, !dbg !3746
  %add.ptr = getelementptr inbounds i8, i8* %23, i64 %22, !dbg !3746
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !3746
  %24 = load i64, i64* %top_linesize.addr, align 8, !dbg !3747
  %25 = load i8*, i8** %top.addr, align 8, !dbg !3748
  %add.ptr25 = getelementptr inbounds i8, i8* %25, i64 %24, !dbg !3748
  store i8* %add.ptr25, i8** %top.addr, align 8, !dbg !3748
  %26 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !3749
  %27 = load i8*, i8** %bottom.addr, align 8, !dbg !3750
  %add.ptr26 = getelementptr inbounds i8, i8* %27, i64 %26, !dbg !3750
  store i8* %add.ptr26, i8** %bottom.addr, align 8, !dbg !3750
  br label %for.inc27, !dbg !3751

for.inc27:                                        ; preds = %for.end
  %28 = load i32, i32* %i, align 4, !dbg !3752
  %inc28 = add nsw i32 %28, 1, !dbg !3752
  store i32 %inc28, i32* %i, align 4, !dbg !3752
  br label %for.cond, !dbg !3754, !llvm.loop !3755

for.end29:                                        ; preds = %for.cond
  ret void, !dbg !3757
}

; Function Attrs: nounwind uwtable
define internal void @blend_multiply128_8bit(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !3759 {
entry:
  %retval.i = alloca i8, align 1
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !1638, metadata !905), !dbg !3760
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !3769, metadata !905), !dbg !3770
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !3771, metadata !905), !dbg !3772
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !3773, metadata !905), !dbg !3774
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !3775, metadata !905), !dbg !3776
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !3777, metadata !905), !dbg !3778
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !3779, metadata !905), !dbg !3780
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !3781, metadata !905), !dbg !3782
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !3783, metadata !905), !dbg !3784
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !3785, metadata !905), !dbg !3786
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !3787, metadata !905), !dbg !3788
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !3789, metadata !905), !dbg !3790
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !3791, metadata !905), !dbg !3792
  %0 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !3793
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %0, i32 0, i32 1, !dbg !3794
  %1 = load double, double* %opacity1, align 8, !dbg !3794
  store double %1, double* %opacity, align 8, !dbg !3792
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3795, metadata !905), !dbg !3796
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3797, metadata !905), !dbg !3798
  store i32 0, i32* %i, align 4, !dbg !3799
  br label %for.cond, !dbg !3800

for.cond:                                         ; preds = %for.inc31, %entry
  %2 = load i32, i32* %i, align 4, !dbg !3801
  %conv = sext i32 %2 to i64, !dbg !3801
  %3 = load i64, i64* %height.addr, align 8, !dbg !3803
  %cmp = icmp slt i64 %conv, %3, !dbg !3804
  br i1 %cmp, label %for.body, label %for.end33, !dbg !3805

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !3806
  br label %for.cond3, !dbg !3808

for.cond3:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !3809
  %conv4 = sext i32 %4 to i64, !dbg !3809
  %5 = load i64, i64* %width.addr, align 8, !dbg !3811
  %cmp5 = icmp slt i64 %conv4, %5, !dbg !3812
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !3813

for.body7:                                        ; preds = %for.cond3
  %6 = load i32, i32* %j, align 4, !dbg !3814
  %idxprom = sext i32 %6 to i64, !dbg !3815
  %7 = load i8*, i8** %top.addr, align 8, !dbg !3815
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !3815
  %8 = load i8, i8* %arrayidx, align 1, !dbg !3815
  %conv8 = zext i8 %8 to i32, !dbg !3815
  %conv9 = sitofp i32 %conv8 to double, !dbg !3815
  %9 = load i32, i32* %j, align 4, !dbg !3816
  %idxprom10 = sext i32 %9 to i64, !dbg !3817
  %10 = load i8*, i8** %top.addr, align 8, !dbg !3817
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 %idxprom10, !dbg !3817
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !3817
  %conv12 = zext i8 %11 to i32, !dbg !3817
  %sub = sub nsw i32 %conv12, 128, !dbg !3818
  %12 = load i32, i32* %j, align 4, !dbg !3819
  %idxprom13 = sext i32 %12 to i64, !dbg !3820
  %13 = load i8*, i8** %bottom.addr, align 8, !dbg !3820
  %arrayidx14 = getelementptr inbounds i8, i8* %13, i64 %idxprom13, !dbg !3820
  %14 = load i8, i8* %arrayidx14, align 1, !dbg !3820
  %conv15 = zext i8 %14 to i32, !dbg !3820
  %mul = mul nsw i32 %sub, %conv15, !dbg !3821
  %conv16 = sitofp i32 %mul to double, !dbg !3822
  %div = fdiv double %conv16, 3.200000e+01, !dbg !3823
  %add = fadd double %div, 1.280000e+02, !dbg !3824
  %conv17 = fptosi double %add to i32, !dbg !3822
  store i32 %conv17, i32* %a.addr.i, align 4, !dbg !3825
  %15 = load i32, i32* %a.addr.i, align 4, !dbg !3826
  %and.i = and i32 %15, -256, !dbg !3827
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !3827
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !3828

if.then.i:                                        ; preds = %for.body7
  %16 = load i32, i32* %a.addr.i, align 4, !dbg !3829
  %neg.i = xor i32 %16, -1, !dbg !3830
  %shr.i = ashr i32 %neg.i, 31, !dbg !3831
  %conv.i = trunc i32 %shr.i to i8, !dbg !3832
  store i8 %conv.i, i8* %retval.i, align 1, !dbg !3833
  br label %av_clip_uint8_c.exit, !dbg !3833

if.else.i:                                        ; preds = %for.body7
  %17 = load i32, i32* %a.addr.i, align 4, !dbg !3834
  %conv1.i = trunc i32 %17 to i8, !dbg !3834
  store i8 %conv1.i, i8* %retval.i, align 1, !dbg !3835
  br label %av_clip_uint8_c.exit, !dbg !3835

av_clip_uint8_c.exit:                             ; preds = %if.then.i, %if.else.i
  %18 = load i8, i8* %retval.i, align 1, !dbg !3836
  %conv18 = zext i8 %18 to i32, !dbg !3837
  %19 = load i32, i32* %j, align 4, !dbg !3838
  %idxprom19 = sext i32 %19 to i64, !dbg !3839
  %20 = load i8*, i8** %top.addr, align 8, !dbg !3839
  %arrayidx20 = getelementptr inbounds i8, i8* %20, i64 %idxprom19, !dbg !3839
  %21 = load i8, i8* %arrayidx20, align 1, !dbg !3839
  %conv21 = zext i8 %21 to i32, !dbg !3839
  %sub22 = sub nsw i32 %conv18, %conv21, !dbg !3840
  %conv23 = sitofp i32 %sub22 to double, !dbg !3841
  %22 = load double, double* %opacity, align 8, !dbg !3842
  %mul24 = fmul double %conv23, %22, !dbg !3843
  %add25 = fadd double %conv9, %mul24, !dbg !3844
  %conv26 = fptoui double %add25 to i8, !dbg !3815
  %23 = load i32, i32* %j, align 4, !dbg !3845
  %idxprom27 = sext i32 %23 to i64, !dbg !3846
  %24 = load i8*, i8** %dst.addr, align 8, !dbg !3846
  %arrayidx28 = getelementptr inbounds i8, i8* %24, i64 %idxprom27, !dbg !3846
  store i8 %conv26, i8* %arrayidx28, align 1, !dbg !3847
  br label %for.inc, !dbg !3848

for.inc:                                          ; preds = %av_clip_uint8_c.exit
  %25 = load i32, i32* %j, align 4, !dbg !3849
  %inc = add nsw i32 %25, 1, !dbg !3849
  store i32 %inc, i32* %j, align 4, !dbg !3849
  br label %for.cond3, !dbg !3851, !llvm.loop !3852

for.end:                                          ; preds = %for.cond3
  %26 = load i64, i64* %dst_linesize.addr, align 8, !dbg !3854
  %27 = load i8*, i8** %dst.addr, align 8, !dbg !3856
  %add.ptr = getelementptr inbounds i8, i8* %27, i64 %26, !dbg !3856
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !3856
  %28 = load i64, i64* %top_linesize.addr, align 8, !dbg !3857
  %29 = load i8*, i8** %top.addr, align 8, !dbg !3858
  %add.ptr29 = getelementptr inbounds i8, i8* %29, i64 %28, !dbg !3858
  store i8* %add.ptr29, i8** %top.addr, align 8, !dbg !3858
  %30 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !3859
  %31 = load i8*, i8** %bottom.addr, align 8, !dbg !3860
  %add.ptr30 = getelementptr inbounds i8, i8* %31, i64 %30, !dbg !3860
  store i8* %add.ptr30, i8** %bottom.addr, align 8, !dbg !3860
  br label %for.inc31, !dbg !3861

for.inc31:                                        ; preds = %for.end
  %32 = load i32, i32* %i, align 4, !dbg !3862
  %inc32 = add nsw i32 %32, 1, !dbg !3862
  store i32 %inc32, i32* %i, align 4, !dbg !3862
  br label %for.cond, !dbg !3864, !llvm.loop !3865

for.end33:                                        ; preds = %for.cond
  ret void, !dbg !3867
}

; Function Attrs: nounwind uwtable
define internal void @blend_negation_8bit(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !3869 {
entry:
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !3870, metadata !905), !dbg !3871
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !3872, metadata !905), !dbg !3873
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !3874, metadata !905), !dbg !3875
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !3876, metadata !905), !dbg !3877
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !3878, metadata !905), !dbg !3879
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !3880, metadata !905), !dbg !3881
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !3882, metadata !905), !dbg !3883
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !3884, metadata !905), !dbg !3885
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !3886, metadata !905), !dbg !3887
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !3888, metadata !905), !dbg !3889
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !3890, metadata !905), !dbg !3891
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !3892, metadata !905), !dbg !3893
  %0 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !3894
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %0, i32 0, i32 1, !dbg !3895
  %1 = load double, double* %opacity1, align 8, !dbg !3895
  store double %1, double* %opacity, align 8, !dbg !3893
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3896, metadata !905), !dbg !3897
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3898, metadata !905), !dbg !3899
  store i32 0, i32* %i, align 4, !dbg !3900
  br label %for.cond, !dbg !3902

for.cond:                                         ; preds = %for.inc47, %entry
  %2 = load i32, i32* %i, align 4, !dbg !3903
  %conv = sext i32 %2 to i64, !dbg !3903
  %3 = load i64, i64* %height.addr, align 8, !dbg !3906
  %cmp = icmp slt i64 %conv, %3, !dbg !3907
  br i1 %cmp, label %for.body, label %for.end49, !dbg !3908

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !3909
  br label %for.cond3, !dbg !3913

for.cond3:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !3914
  %conv4 = sext i32 %4 to i64, !dbg !3914
  %5 = load i64, i64* %width.addr, align 8, !dbg !3917
  %cmp5 = icmp slt i64 %conv4, %5, !dbg !3918
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !3919

for.body7:                                        ; preds = %for.cond3
  %6 = load i32, i32* %j, align 4, !dbg !3920
  %idxprom = sext i32 %6 to i64, !dbg !3923
  %7 = load i8*, i8** %top.addr, align 8, !dbg !3923
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !3923
  %8 = load i8, i8* %arrayidx, align 1, !dbg !3923
  %conv8 = zext i8 %8 to i32, !dbg !3923
  %conv9 = sitofp i32 %conv8 to double, !dbg !3923
  %9 = load i32, i32* %j, align 4, !dbg !3924
  %idxprom10 = sext i32 %9 to i64, !dbg !3925
  %10 = load i8*, i8** %top.addr, align 8, !dbg !3925
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 %idxprom10, !dbg !3925
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !3925
  %conv12 = zext i8 %11 to i32, !dbg !3925
  %sub = sub nsw i32 255, %conv12, !dbg !3926
  %12 = load i32, i32* %j, align 4, !dbg !3927
  %idxprom13 = sext i32 %12 to i64, !dbg !3928
  %13 = load i8*, i8** %bottom.addr, align 8, !dbg !3928
  %arrayidx14 = getelementptr inbounds i8, i8* %13, i64 %idxprom13, !dbg !3928
  %14 = load i8, i8* %arrayidx14, align 1, !dbg !3928
  %conv15 = zext i8 %14 to i32, !dbg !3928
  %sub16 = sub nsw i32 %sub, %conv15, !dbg !3929
  %cmp17 = icmp sge i32 %sub16, 0, !dbg !3930
  br i1 %cmp17, label %cond.true, label %cond.false, !dbg !3931

cond.true:                                        ; preds = %for.body7
  %15 = load i32, i32* %j, align 4, !dbg !3932
  %idxprom19 = sext i32 %15 to i64, !dbg !3934
  %16 = load i8*, i8** %top.addr, align 8, !dbg !3934
  %arrayidx20 = getelementptr inbounds i8, i8* %16, i64 %idxprom19, !dbg !3934
  %17 = load i8, i8* %arrayidx20, align 1, !dbg !3934
  %conv21 = zext i8 %17 to i32, !dbg !3934
  %sub22 = sub nsw i32 255, %conv21, !dbg !3935
  %18 = load i32, i32* %j, align 4, !dbg !3936
  %idxprom23 = sext i32 %18 to i64, !dbg !3937
  %19 = load i8*, i8** %bottom.addr, align 8, !dbg !3937
  %arrayidx24 = getelementptr inbounds i8, i8* %19, i64 %idxprom23, !dbg !3937
  %20 = load i8, i8* %arrayidx24, align 1, !dbg !3937
  %conv25 = zext i8 %20 to i32, !dbg !3937
  %sub26 = sub nsw i32 %sub22, %conv25, !dbg !3938
  br label %cond.end, !dbg !3939

cond.false:                                       ; preds = %for.body7
  %21 = load i32, i32* %j, align 4, !dbg !3940
  %idxprom27 = sext i32 %21 to i64, !dbg !3942
  %22 = load i8*, i8** %top.addr, align 8, !dbg !3942
  %arrayidx28 = getelementptr inbounds i8, i8* %22, i64 %idxprom27, !dbg !3942
  %23 = load i8, i8* %arrayidx28, align 1, !dbg !3942
  %conv29 = zext i8 %23 to i32, !dbg !3942
  %sub30 = sub nsw i32 255, %conv29, !dbg !3943
  %24 = load i32, i32* %j, align 4, !dbg !3944
  %idxprom31 = sext i32 %24 to i64, !dbg !3945
  %25 = load i8*, i8** %bottom.addr, align 8, !dbg !3945
  %arrayidx32 = getelementptr inbounds i8, i8* %25, i64 %idxprom31, !dbg !3945
  %26 = load i8, i8* %arrayidx32, align 1, !dbg !3945
  %conv33 = zext i8 %26 to i32, !dbg !3945
  %sub34 = sub nsw i32 %sub30, %conv33, !dbg !3946
  %sub35 = sub nsw i32 0, %sub34, !dbg !3947
  br label %cond.end, !dbg !3948

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub26, %cond.true ], [ %sub35, %cond.false ], !dbg !3949
  %sub36 = sub nsw i32 255, %cond, !dbg !3951
  %27 = load i32, i32* %j, align 4, !dbg !3952
  %idxprom37 = sext i32 %27 to i64, !dbg !3953
  %28 = load i8*, i8** %top.addr, align 8, !dbg !3953
  %arrayidx38 = getelementptr inbounds i8, i8* %28, i64 %idxprom37, !dbg !3953
  %29 = load i8, i8* %arrayidx38, align 1, !dbg !3953
  %conv39 = zext i8 %29 to i32, !dbg !3953
  %sub40 = sub nsw i32 %sub36, %conv39, !dbg !3954
  %conv41 = sitofp i32 %sub40 to double, !dbg !3955
  %30 = load double, double* %opacity, align 8, !dbg !3956
  %mul = fmul double %conv41, %30, !dbg !3957
  %add = fadd double %conv9, %mul, !dbg !3958
  %conv42 = fptoui double %add to i8, !dbg !3959
  %31 = load i32, i32* %j, align 4, !dbg !3960
  %idxprom43 = sext i32 %31 to i64, !dbg !3961
  %32 = load i8*, i8** %dst.addr, align 8, !dbg !3961
  %arrayidx44 = getelementptr inbounds i8, i8* %32, i64 %idxprom43, !dbg !3961
  store i8 %conv42, i8* %arrayidx44, align 1, !dbg !3962
  br label %for.inc, !dbg !3963

for.inc:                                          ; preds = %cond.end
  %33 = load i32, i32* %j, align 4, !dbg !3964
  %inc = add nsw i32 %33, 1, !dbg !3964
  store i32 %inc, i32* %j, align 4, !dbg !3964
  br label %for.cond3, !dbg !3966, !llvm.loop !3967

for.end:                                          ; preds = %for.cond3
  %34 = load i64, i64* %dst_linesize.addr, align 8, !dbg !3969
  %35 = load i8*, i8** %dst.addr, align 8, !dbg !3971
  %add.ptr = getelementptr inbounds i8, i8* %35, i64 %34, !dbg !3971
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !3971
  %36 = load i64, i64* %top_linesize.addr, align 8, !dbg !3972
  %37 = load i8*, i8** %top.addr, align 8, !dbg !3973
  %add.ptr45 = getelementptr inbounds i8, i8* %37, i64 %36, !dbg !3973
  store i8* %add.ptr45, i8** %top.addr, align 8, !dbg !3973
  %38 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !3974
  %39 = load i8*, i8** %bottom.addr, align 8, !dbg !3975
  %add.ptr46 = getelementptr inbounds i8, i8* %39, i64 %38, !dbg !3975
  store i8* %add.ptr46, i8** %bottom.addr, align 8, !dbg !3975
  br label %for.inc47, !dbg !3976

for.inc47:                                        ; preds = %for.end
  %40 = load i32, i32* %i, align 4, !dbg !3977
  %inc48 = add nsw i32 %40, 1, !dbg !3977
  store i32 %inc48, i32* %i, align 4, !dbg !3977
  br label %for.cond, !dbg !3979, !llvm.loop !3980

for.end49:                                        ; preds = %for.cond
  ret void, !dbg !3982
}

; Function Attrs: nounwind uwtable
define internal void @blend_copytop_8(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !3984 {
entry:
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !3985, metadata !905), !dbg !3986
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !3987, metadata !905), !dbg !3988
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !3989, metadata !905), !dbg !3990
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !3991, metadata !905), !dbg !3992
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !3993, metadata !905), !dbg !3994
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !3995, metadata !905), !dbg !3996
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !3997, metadata !905), !dbg !3998
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !3999, metadata !905), !dbg !4000
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !4001, metadata !905), !dbg !4002
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !4003, metadata !905), !dbg !4004
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !4005, metadata !905), !dbg !4006
  %0 = load i8*, i8** %dst.addr, align 8, !dbg !4007
  %1 = load i64, i64* %dst_linesize.addr, align 8, !dbg !4008
  %conv = trunc i64 %1 to i32, !dbg !4008
  %2 = load i8*, i8** %top.addr, align 8, !dbg !4009
  %3 = load i64, i64* %top_linesize.addr, align 8, !dbg !4010
  %conv1 = trunc i64 %3 to i32, !dbg !4010
  %4 = load i64, i64* %width.addr, align 8, !dbg !4011
  %mul = mul nsw i64 %4, 8, !dbg !4012
  %div = sdiv i64 %mul, 8, !dbg !4013
  %conv2 = trunc i64 %div to i32, !dbg !4011
  %5 = load i64, i64* %height.addr, align 8, !dbg !4014
  %conv3 = trunc i64 %5 to i32, !dbg !4014
  call void @av_image_copy_plane(i8* %0, i32 %conv, i8* %2, i32 %conv1, i32 %conv2, i32 %conv3), !dbg !4015
  ret void, !dbg !4016
}

; Function Attrs: nounwind uwtable
define internal void @blend_copybottom_8(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !4017 {
entry:
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !4018, metadata !905), !dbg !4019
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !4020, metadata !905), !dbg !4021
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !4022, metadata !905), !dbg !4023
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !4024, metadata !905), !dbg !4025
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !4026, metadata !905), !dbg !4027
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !4028, metadata !905), !dbg !4029
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !4030, metadata !905), !dbg !4031
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !4032, metadata !905), !dbg !4033
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !4034, metadata !905), !dbg !4035
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !4036, metadata !905), !dbg !4037
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !4038, metadata !905), !dbg !4039
  %0 = load i8*, i8** %dst.addr, align 8, !dbg !4040
  %1 = load i64, i64* %dst_linesize.addr, align 8, !dbg !4041
  %conv = trunc i64 %1 to i32, !dbg !4041
  %2 = load i8*, i8** %bottom.addr, align 8, !dbg !4042
  %3 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !4043
  %conv1 = trunc i64 %3 to i32, !dbg !4043
  %4 = load i64, i64* %width.addr, align 8, !dbg !4044
  %mul = mul nsw i64 %4, 8, !dbg !4045
  %div = sdiv i64 %mul, 8, !dbg !4046
  %conv2 = trunc i64 %div to i32, !dbg !4044
  %5 = load i64, i64* %height.addr, align 8, !dbg !4047
  %conv3 = trunc i64 %5 to i32, !dbg !4047
  call void @av_image_copy_plane(i8* %0, i32 %conv, i8* %2, i32 %conv1, i32 %conv2, i32 %conv3), !dbg !4048
  ret void, !dbg !4049
}

; Function Attrs: nounwind uwtable
define internal void @blend_normal_8bit(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !4050 {
entry:
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !4051, metadata !905), !dbg !4052
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !4053, metadata !905), !dbg !4054
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !4055, metadata !905), !dbg !4056
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !4057, metadata !905), !dbg !4058
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !4059, metadata !905), !dbg !4060
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !4061, metadata !905), !dbg !4062
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !4063, metadata !905), !dbg !4064
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !4065, metadata !905), !dbg !4066
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !4067, metadata !905), !dbg !4068
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !4069, metadata !905), !dbg !4070
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !4071, metadata !905), !dbg !4072
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !4073, metadata !905), !dbg !4075
  %0 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !4076
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %0, i32 0, i32 1, !dbg !4077
  %1 = load double, double* %opacity1, align 8, !dbg !4077
  store double %1, double* %opacity, align 8, !dbg !4075
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4078, metadata !905), !dbg !4079
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4080, metadata !905), !dbg !4081
  store i32 0, i32* %i, align 4, !dbg !4082
  br label %for.cond, !dbg !4084

for.cond:                                         ; preds = %for.inc20, %entry
  %2 = load i32, i32* %i, align 4, !dbg !4085
  %conv = sext i32 %2 to i64, !dbg !4085
  %3 = load i64, i64* %height.addr, align 8, !dbg !4088
  %cmp = icmp slt i64 %conv, %3, !dbg !4089
  br i1 %cmp, label %for.body, label %for.end22, !dbg !4090

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !4091
  br label %for.cond3, !dbg !4094

for.cond3:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !4095
  %conv4 = sext i32 %4 to i64, !dbg !4095
  %5 = load i64, i64* %width.addr, align 8, !dbg !4098
  %cmp5 = icmp slt i64 %conv4, %5, !dbg !4099
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !4100

for.body7:                                        ; preds = %for.cond3
  %6 = load i32, i32* %j, align 4, !dbg !4101
  %idxprom = sext i32 %6 to i64, !dbg !4103
  %7 = load i8*, i8** %top.addr, align 8, !dbg !4103
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !4103
  %8 = load i8, i8* %arrayidx, align 1, !dbg !4103
  %conv8 = zext i8 %8 to i32, !dbg !4103
  %conv9 = sitofp i32 %conv8 to double, !dbg !4103
  %9 = load double, double* %opacity, align 8, !dbg !4104
  %mul = fmul double %conv9, %9, !dbg !4105
  %10 = load i32, i32* %j, align 4, !dbg !4106
  %idxprom10 = sext i32 %10 to i64, !dbg !4107
  %11 = load i8*, i8** %bottom.addr, align 8, !dbg !4107
  %arrayidx11 = getelementptr inbounds i8, i8* %11, i64 %idxprom10, !dbg !4107
  %12 = load i8, i8* %arrayidx11, align 1, !dbg !4107
  %conv12 = zext i8 %12 to i32, !dbg !4107
  %conv13 = sitofp i32 %conv12 to double, !dbg !4107
  %13 = load double, double* %opacity, align 8, !dbg !4108
  %sub = fsub double 1.000000e+00, %13, !dbg !4109
  %mul14 = fmul double %conv13, %sub, !dbg !4110
  %add = fadd double %mul, %mul14, !dbg !4111
  %conv15 = fptoui double %add to i8, !dbg !4103
  %14 = load i32, i32* %j, align 4, !dbg !4112
  %idxprom16 = sext i32 %14 to i64, !dbg !4113
  %15 = load i8*, i8** %dst.addr, align 8, !dbg !4113
  %arrayidx17 = getelementptr inbounds i8, i8* %15, i64 %idxprom16, !dbg !4113
  store i8 %conv15, i8* %arrayidx17, align 1, !dbg !4114
  br label %for.inc, !dbg !4115

for.inc:                                          ; preds = %for.body7
  %16 = load i32, i32* %j, align 4, !dbg !4116
  %inc = add nsw i32 %16, 1, !dbg !4116
  store i32 %inc, i32* %j, align 4, !dbg !4116
  br label %for.cond3, !dbg !4118, !llvm.loop !4119

for.end:                                          ; preds = %for.cond3
  %17 = load i64, i64* %dst_linesize.addr, align 8, !dbg !4121
  %18 = load i8*, i8** %dst.addr, align 8, !dbg !4122
  %add.ptr = getelementptr inbounds i8, i8* %18, i64 %17, !dbg !4122
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !4122
  %19 = load i64, i64* %top_linesize.addr, align 8, !dbg !4123
  %20 = load i8*, i8** %top.addr, align 8, !dbg !4124
  %add.ptr18 = getelementptr inbounds i8, i8* %20, i64 %19, !dbg !4124
  store i8* %add.ptr18, i8** %top.addr, align 8, !dbg !4124
  %21 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !4125
  %22 = load i8*, i8** %bottom.addr, align 8, !dbg !4126
  %add.ptr19 = getelementptr inbounds i8, i8* %22, i64 %21, !dbg !4126
  store i8* %add.ptr19, i8** %bottom.addr, align 8, !dbg !4126
  br label %for.inc20, !dbg !4127

for.inc20:                                        ; preds = %for.end
  %23 = load i32, i32* %i, align 4, !dbg !4128
  %inc21 = add nsw i32 %23, 1, !dbg !4128
  store i32 %inc21, i32* %i, align 4, !dbg !4128
  br label %for.cond, !dbg !4130, !llvm.loop !4131

for.end22:                                        ; preds = %for.cond
  ret void, !dbg !4133
}

; Function Attrs: nounwind uwtable
define internal void @blend_or_8bit(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !4134 {
entry:
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !4135, metadata !905), !dbg !4136
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !4137, metadata !905), !dbg !4138
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !4139, metadata !905), !dbg !4140
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !4141, metadata !905), !dbg !4142
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !4143, metadata !905), !dbg !4144
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !4145, metadata !905), !dbg !4146
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !4147, metadata !905), !dbg !4148
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !4149, metadata !905), !dbg !4150
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !4151, metadata !905), !dbg !4152
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !4153, metadata !905), !dbg !4154
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !4155, metadata !905), !dbg !4156
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !4157, metadata !905), !dbg !4158
  %0 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !4159
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %0, i32 0, i32 1, !dbg !4160
  %1 = load double, double* %opacity1, align 8, !dbg !4160
  store double %1, double* %opacity, align 8, !dbg !4158
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4161, metadata !905), !dbg !4162
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4163, metadata !905), !dbg !4164
  store i32 0, i32* %i, align 4, !dbg !4165
  br label %for.cond, !dbg !4167

for.cond:                                         ; preds = %for.inc25, %entry
  %2 = load i32, i32* %i, align 4, !dbg !4168
  %conv = sext i32 %2 to i64, !dbg !4168
  %3 = load i64, i64* %height.addr, align 8, !dbg !4171
  %cmp = icmp slt i64 %conv, %3, !dbg !4172
  br i1 %cmp, label %for.body, label %for.end27, !dbg !4173

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !4174
  br label %for.cond3, !dbg !4178

for.cond3:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !4179
  %conv4 = sext i32 %4 to i64, !dbg !4179
  %5 = load i64, i64* %width.addr, align 8, !dbg !4182
  %cmp5 = icmp slt i64 %conv4, %5, !dbg !4183
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !4184

for.body7:                                        ; preds = %for.cond3
  %6 = load i32, i32* %j, align 4, !dbg !4185
  %idxprom = sext i32 %6 to i64, !dbg !4188
  %7 = load i8*, i8** %top.addr, align 8, !dbg !4188
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !4188
  %8 = load i8, i8* %arrayidx, align 1, !dbg !4188
  %conv8 = zext i8 %8 to i32, !dbg !4188
  %conv9 = sitofp i32 %conv8 to double, !dbg !4188
  %9 = load i32, i32* %j, align 4, !dbg !4189
  %idxprom10 = sext i32 %9 to i64, !dbg !4190
  %10 = load i8*, i8** %top.addr, align 8, !dbg !4190
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 %idxprom10, !dbg !4190
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !4190
  %conv12 = zext i8 %11 to i32, !dbg !4190
  %12 = load i32, i32* %j, align 4, !dbg !4191
  %idxprom13 = sext i32 %12 to i64, !dbg !4192
  %13 = load i8*, i8** %bottom.addr, align 8, !dbg !4192
  %arrayidx14 = getelementptr inbounds i8, i8* %13, i64 %idxprom13, !dbg !4192
  %14 = load i8, i8* %arrayidx14, align 1, !dbg !4192
  %conv15 = zext i8 %14 to i32, !dbg !4192
  %or = or i32 %conv12, %conv15, !dbg !4193
  %15 = load i32, i32* %j, align 4, !dbg !4194
  %idxprom16 = sext i32 %15 to i64, !dbg !4195
  %16 = load i8*, i8** %top.addr, align 8, !dbg !4195
  %arrayidx17 = getelementptr inbounds i8, i8* %16, i64 %idxprom16, !dbg !4195
  %17 = load i8, i8* %arrayidx17, align 1, !dbg !4195
  %conv18 = zext i8 %17 to i32, !dbg !4195
  %sub = sub nsw i32 %or, %conv18, !dbg !4196
  %conv19 = sitofp i32 %sub to double, !dbg !4197
  %18 = load double, double* %opacity, align 8, !dbg !4198
  %mul = fmul double %conv19, %18, !dbg !4199
  %add = fadd double %conv9, %mul, !dbg !4200
  %conv20 = fptoui double %add to i8, !dbg !4188
  %19 = load i32, i32* %j, align 4, !dbg !4201
  %idxprom21 = sext i32 %19 to i64, !dbg !4202
  %20 = load i8*, i8** %dst.addr, align 8, !dbg !4202
  %arrayidx22 = getelementptr inbounds i8, i8* %20, i64 %idxprom21, !dbg !4202
  store i8 %conv20, i8* %arrayidx22, align 1, !dbg !4203
  br label %for.inc, !dbg !4204

for.inc:                                          ; preds = %for.body7
  %21 = load i32, i32* %j, align 4, !dbg !4205
  %inc = add nsw i32 %21, 1, !dbg !4205
  store i32 %inc, i32* %j, align 4, !dbg !4205
  br label %for.cond3, !dbg !4207, !llvm.loop !4208

for.end:                                          ; preds = %for.cond3
  %22 = load i64, i64* %dst_linesize.addr, align 8, !dbg !4210
  %23 = load i8*, i8** %dst.addr, align 8, !dbg !4212
  %add.ptr = getelementptr inbounds i8, i8* %23, i64 %22, !dbg !4212
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !4212
  %24 = load i64, i64* %top_linesize.addr, align 8, !dbg !4213
  %25 = load i8*, i8** %top.addr, align 8, !dbg !4214
  %add.ptr23 = getelementptr inbounds i8, i8* %25, i64 %24, !dbg !4214
  store i8* %add.ptr23, i8** %top.addr, align 8, !dbg !4214
  %26 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !4215
  %27 = load i8*, i8** %bottom.addr, align 8, !dbg !4216
  %add.ptr24 = getelementptr inbounds i8, i8* %27, i64 %26, !dbg !4216
  store i8* %add.ptr24, i8** %bottom.addr, align 8, !dbg !4216
  br label %for.inc25, !dbg !4217

for.inc25:                                        ; preds = %for.end
  %28 = load i32, i32* %i, align 4, !dbg !4218
  %inc26 = add nsw i32 %28, 1, !dbg !4218
  store i32 %inc26, i32* %i, align 4, !dbg !4218
  br label %for.cond, !dbg !4220, !llvm.loop !4221

for.end27:                                        ; preds = %for.cond
  ret void, !dbg !4223
}

; Function Attrs: nounwind uwtable
define internal void @blend_overlay_8bit(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !4225 {
entry:
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !4226, metadata !905), !dbg !4227
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !4228, metadata !905), !dbg !4229
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !4230, metadata !905), !dbg !4231
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !4232, metadata !905), !dbg !4233
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !4234, metadata !905), !dbg !4235
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !4236, metadata !905), !dbg !4237
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !4238, metadata !905), !dbg !4239
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !4240, metadata !905), !dbg !4241
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !4242, metadata !905), !dbg !4243
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !4244, metadata !905), !dbg !4245
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !4246, metadata !905), !dbg !4247
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !4248, metadata !905), !dbg !4249
  %0 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !4250
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %0, i32 0, i32 1, !dbg !4251
  %1 = load double, double* %opacity1, align 8, !dbg !4251
  store double %1, double* %opacity, align 8, !dbg !4249
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4252, metadata !905), !dbg !4253
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4254, metadata !905), !dbg !4255
  store i32 0, i32* %i, align 4, !dbg !4256
  br label %for.cond, !dbg !4258

for.cond:                                         ; preds = %for.inc44, %entry
  %2 = load i32, i32* %i, align 4, !dbg !4259
  %conv = sext i32 %2 to i64, !dbg !4259
  %3 = load i64, i64* %height.addr, align 8, !dbg !4262
  %cmp = icmp slt i64 %conv, %3, !dbg !4263
  br i1 %cmp, label %for.body, label %for.end46, !dbg !4264

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !4265
  br label %for.cond3, !dbg !4269

for.cond3:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !4270
  %conv4 = sext i32 %4 to i64, !dbg !4270
  %5 = load i64, i64* %width.addr, align 8, !dbg !4273
  %cmp5 = icmp slt i64 %conv4, %5, !dbg !4274
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !4275

for.body7:                                        ; preds = %for.cond3
  %6 = load i32, i32* %j, align 4, !dbg !4276
  %idxprom = sext i32 %6 to i64, !dbg !4279
  %7 = load i8*, i8** %top.addr, align 8, !dbg !4279
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !4279
  %8 = load i8, i8* %arrayidx, align 1, !dbg !4279
  %conv8 = zext i8 %8 to i32, !dbg !4279
  %conv9 = sitofp i32 %conv8 to double, !dbg !4279
  %9 = load i32, i32* %j, align 4, !dbg !4280
  %idxprom10 = sext i32 %9 to i64, !dbg !4281
  %10 = load i8*, i8** %top.addr, align 8, !dbg !4281
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 %idxprom10, !dbg !4281
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !4281
  %conv12 = zext i8 %11 to i32, !dbg !4281
  %cmp13 = icmp slt i32 %conv12, 128, !dbg !4282
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !4283

cond.true:                                        ; preds = %for.body7
  %12 = load i32, i32* %j, align 4, !dbg !4284
  %idxprom15 = sext i32 %12 to i64, !dbg !4286
  %13 = load i8*, i8** %top.addr, align 8, !dbg !4286
  %arrayidx16 = getelementptr inbounds i8, i8* %13, i64 %idxprom15, !dbg !4286
  %14 = load i8, i8* %arrayidx16, align 1, !dbg !4286
  %conv17 = zext i8 %14 to i32, !dbg !4287
  %15 = load i32, i32* %j, align 4, !dbg !4288
  %idxprom18 = sext i32 %15 to i64, !dbg !4289
  %16 = load i8*, i8** %bottom.addr, align 8, !dbg !4289
  %arrayidx19 = getelementptr inbounds i8, i8* %16, i64 %idxprom18, !dbg !4289
  %17 = load i8, i8* %arrayidx19, align 1, !dbg !4289
  %conv20 = zext i8 %17 to i32, !dbg !4290
  %mul = mul nsw i32 %conv17, %conv20, !dbg !4291
  %div = sdiv i32 %mul, 255, !dbg !4292
  %mul21 = mul nsw i32 2, %div, !dbg !4293
  br label %cond.end, !dbg !4294

cond.false:                                       ; preds = %for.body7
  %18 = load i32, i32* %j, align 4, !dbg !4295
  %idxprom22 = sext i32 %18 to i64, !dbg !4297
  %19 = load i8*, i8** %top.addr, align 8, !dbg !4297
  %arrayidx23 = getelementptr inbounds i8, i8* %19, i64 %idxprom22, !dbg !4297
  %20 = load i8, i8* %arrayidx23, align 1, !dbg !4297
  %conv24 = zext i8 %20 to i32, !dbg !4298
  %sub = sub nsw i32 255, %conv24, !dbg !4299
  %21 = load i32, i32* %j, align 4, !dbg !4300
  %idxprom25 = sext i32 %21 to i64, !dbg !4301
  %22 = load i8*, i8** %bottom.addr, align 8, !dbg !4301
  %arrayidx26 = getelementptr inbounds i8, i8* %22, i64 %idxprom25, !dbg !4301
  %23 = load i8, i8* %arrayidx26, align 1, !dbg !4301
  %conv27 = zext i8 %23 to i32, !dbg !4302
  %sub28 = sub nsw i32 255, %conv27, !dbg !4303
  %mul29 = mul nsw i32 %sub, %sub28, !dbg !4304
  %div30 = sdiv i32 %mul29, 255, !dbg !4305
  %mul31 = mul nsw i32 2, %div30, !dbg !4306
  %sub32 = sub nsw i32 255, %mul31, !dbg !4307
  br label %cond.end, !dbg !4308

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %mul21, %cond.true ], [ %sub32, %cond.false ], !dbg !4309
  %24 = load i32, i32* %j, align 4, !dbg !4311
  %idxprom33 = sext i32 %24 to i64, !dbg !4312
  %25 = load i8*, i8** %top.addr, align 8, !dbg !4312
  %arrayidx34 = getelementptr inbounds i8, i8* %25, i64 %idxprom33, !dbg !4312
  %26 = load i8, i8* %arrayidx34, align 1, !dbg !4312
  %conv35 = zext i8 %26 to i32, !dbg !4312
  %sub36 = sub nsw i32 %cond, %conv35, !dbg !4313
  %conv37 = sitofp i32 %sub36 to double, !dbg !4314
  %27 = load double, double* %opacity, align 8, !dbg !4315
  %mul38 = fmul double %conv37, %27, !dbg !4316
  %add = fadd double %conv9, %mul38, !dbg !4317
  %conv39 = fptoui double %add to i8, !dbg !4318
  %28 = load i32, i32* %j, align 4, !dbg !4319
  %idxprom40 = sext i32 %28 to i64, !dbg !4320
  %29 = load i8*, i8** %dst.addr, align 8, !dbg !4320
  %arrayidx41 = getelementptr inbounds i8, i8* %29, i64 %idxprom40, !dbg !4320
  store i8 %conv39, i8* %arrayidx41, align 1, !dbg !4321
  br label %for.inc, !dbg !4322

for.inc:                                          ; preds = %cond.end
  %30 = load i32, i32* %j, align 4, !dbg !4323
  %inc = add nsw i32 %30, 1, !dbg !4323
  store i32 %inc, i32* %j, align 4, !dbg !4323
  br label %for.cond3, !dbg !4325, !llvm.loop !4326

for.end:                                          ; preds = %for.cond3
  %31 = load i64, i64* %dst_linesize.addr, align 8, !dbg !4328
  %32 = load i8*, i8** %dst.addr, align 8, !dbg !4330
  %add.ptr = getelementptr inbounds i8, i8* %32, i64 %31, !dbg !4330
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !4330
  %33 = load i64, i64* %top_linesize.addr, align 8, !dbg !4331
  %34 = load i8*, i8** %top.addr, align 8, !dbg !4332
  %add.ptr42 = getelementptr inbounds i8, i8* %34, i64 %33, !dbg !4332
  store i8* %add.ptr42, i8** %top.addr, align 8, !dbg !4332
  %35 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !4333
  %36 = load i8*, i8** %bottom.addr, align 8, !dbg !4334
  %add.ptr43 = getelementptr inbounds i8, i8* %36, i64 %35, !dbg !4334
  store i8* %add.ptr43, i8** %bottom.addr, align 8, !dbg !4334
  br label %for.inc44, !dbg !4335

for.inc44:                                        ; preds = %for.end
  %37 = load i32, i32* %i, align 4, !dbg !4336
  %inc45 = add nsw i32 %37, 1, !dbg !4336
  store i32 %inc45, i32* %i, align 4, !dbg !4336
  br label %for.cond, !dbg !4338, !llvm.loop !4339

for.end46:                                        ; preds = %for.cond
  ret void, !dbg !4341
}

; Function Attrs: nounwind uwtable
define internal void @blend_phoenix_8bit(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !4343 {
entry:
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !4344, metadata !905), !dbg !4345
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !4346, metadata !905), !dbg !4347
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !4348, metadata !905), !dbg !4349
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !4350, metadata !905), !dbg !4351
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !4352, metadata !905), !dbg !4353
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !4354, metadata !905), !dbg !4355
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !4356, metadata !905), !dbg !4357
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !4358, metadata !905), !dbg !4359
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !4360, metadata !905), !dbg !4361
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !4362, metadata !905), !dbg !4363
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !4364, metadata !905), !dbg !4365
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !4366, metadata !905), !dbg !4367
  %0 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !4368
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %0, i32 0, i32 1, !dbg !4369
  %1 = load double, double* %opacity1, align 8, !dbg !4369
  store double %1, double* %opacity, align 8, !dbg !4367
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4370, metadata !905), !dbg !4371
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4372, metadata !905), !dbg !4373
  store i32 0, i32* %i, align 4, !dbg !4374
  br label %for.cond, !dbg !4376

for.cond:                                         ; preds = %for.inc53, %entry
  %2 = load i32, i32* %i, align 4, !dbg !4377
  %conv = sext i32 %2 to i64, !dbg !4377
  %3 = load i64, i64* %height.addr, align 8, !dbg !4380
  %cmp = icmp slt i64 %conv, %3, !dbg !4381
  br i1 %cmp, label %for.body, label %for.end55, !dbg !4382

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !4383
  br label %for.cond3, !dbg !4387

for.cond3:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !4388
  %conv4 = sext i32 %4 to i64, !dbg !4388
  %5 = load i64, i64* %width.addr, align 8, !dbg !4391
  %cmp5 = icmp slt i64 %conv4, %5, !dbg !4392
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !4393

for.body7:                                        ; preds = %for.cond3
  %6 = load i32, i32* %j, align 4, !dbg !4394
  %idxprom = sext i32 %6 to i64, !dbg !4397
  %7 = load i8*, i8** %top.addr, align 8, !dbg !4397
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !4397
  %8 = load i8, i8* %arrayidx, align 1, !dbg !4397
  %conv8 = zext i8 %8 to i32, !dbg !4397
  %conv9 = sitofp i32 %conv8 to double, !dbg !4397
  %9 = load i32, i32* %j, align 4, !dbg !4398
  %idxprom10 = sext i32 %9 to i64, !dbg !4399
  %10 = load i8*, i8** %top.addr, align 8, !dbg !4399
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 %idxprom10, !dbg !4399
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !4399
  %conv12 = zext i8 %11 to i32, !dbg !4400
  %12 = load i32, i32* %j, align 4, !dbg !4401
  %idxprom13 = sext i32 %12 to i64, !dbg !4402
  %13 = load i8*, i8** %bottom.addr, align 8, !dbg !4402
  %arrayidx14 = getelementptr inbounds i8, i8* %13, i64 %idxprom13, !dbg !4402
  %14 = load i8, i8* %arrayidx14, align 1, !dbg !4402
  %conv15 = zext i8 %14 to i32, !dbg !4403
  %cmp16 = icmp sgt i32 %conv12, %conv15, !dbg !4404
  br i1 %cmp16, label %cond.true, label %cond.false, !dbg !4400

cond.true:                                        ; preds = %for.body7
  %15 = load i32, i32* %j, align 4, !dbg !4405
  %idxprom18 = sext i32 %15 to i64, !dbg !4407
  %16 = load i8*, i8** %bottom.addr, align 8, !dbg !4407
  %arrayidx19 = getelementptr inbounds i8, i8* %16, i64 %idxprom18, !dbg !4407
  %17 = load i8, i8* %arrayidx19, align 1, !dbg !4407
  %conv20 = zext i8 %17 to i32, !dbg !4408
  br label %cond.end, !dbg !4409

cond.false:                                       ; preds = %for.body7
  %18 = load i32, i32* %j, align 4, !dbg !4410
  %idxprom21 = sext i32 %18 to i64, !dbg !4412
  %19 = load i8*, i8** %top.addr, align 8, !dbg !4412
  %arrayidx22 = getelementptr inbounds i8, i8* %19, i64 %idxprom21, !dbg !4412
  %20 = load i8, i8* %arrayidx22, align 1, !dbg !4412
  %conv23 = zext i8 %20 to i32, !dbg !4413
  br label %cond.end, !dbg !4414

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv20, %cond.true ], [ %conv23, %cond.false ], !dbg !4415
  %21 = load i32, i32* %j, align 4, !dbg !4417
  %idxprom24 = sext i32 %21 to i64, !dbg !4418
  %22 = load i8*, i8** %top.addr, align 8, !dbg !4418
  %arrayidx25 = getelementptr inbounds i8, i8* %22, i64 %idxprom24, !dbg !4418
  %23 = load i8, i8* %arrayidx25, align 1, !dbg !4418
  %conv26 = zext i8 %23 to i32, !dbg !4419
  %24 = load i32, i32* %j, align 4, !dbg !4420
  %idxprom27 = sext i32 %24 to i64, !dbg !4421
  %25 = load i8*, i8** %bottom.addr, align 8, !dbg !4421
  %arrayidx28 = getelementptr inbounds i8, i8* %25, i64 %idxprom27, !dbg !4421
  %26 = load i8, i8* %arrayidx28, align 1, !dbg !4421
  %conv29 = zext i8 %26 to i32, !dbg !4422
  %cmp30 = icmp sgt i32 %conv26, %conv29, !dbg !4423
  br i1 %cmp30, label %cond.true32, label %cond.false36, !dbg !4419

cond.true32:                                      ; preds = %cond.end
  %27 = load i32, i32* %j, align 4, !dbg !4424
  %idxprom33 = sext i32 %27 to i64, !dbg !4426
  %28 = load i8*, i8** %top.addr, align 8, !dbg !4426
  %arrayidx34 = getelementptr inbounds i8, i8* %28, i64 %idxprom33, !dbg !4426
  %29 = load i8, i8* %arrayidx34, align 1, !dbg !4426
  %conv35 = zext i8 %29 to i32, !dbg !4427
  br label %cond.end40, !dbg !4428

cond.false36:                                     ; preds = %cond.end
  %30 = load i32, i32* %j, align 4, !dbg !4429
  %idxprom37 = sext i32 %30 to i64, !dbg !4431
  %31 = load i8*, i8** %bottom.addr, align 8, !dbg !4431
  %arrayidx38 = getelementptr inbounds i8, i8* %31, i64 %idxprom37, !dbg !4431
  %32 = load i8, i8* %arrayidx38, align 1, !dbg !4431
  %conv39 = zext i8 %32 to i32, !dbg !4432
  br label %cond.end40, !dbg !4433

cond.end40:                                       ; preds = %cond.false36, %cond.true32
  %cond41 = phi i32 [ %conv35, %cond.true32 ], [ %conv39, %cond.false36 ], !dbg !4434
  %sub = sub nsw i32 %cond, %cond41, !dbg !4436
  %add = add nsw i32 %sub, 255, !dbg !4437
  %33 = load i32, i32* %j, align 4, !dbg !4438
  %idxprom42 = sext i32 %33 to i64, !dbg !4439
  %34 = load i8*, i8** %top.addr, align 8, !dbg !4439
  %arrayidx43 = getelementptr inbounds i8, i8* %34, i64 %idxprom42, !dbg !4439
  %35 = load i8, i8* %arrayidx43, align 1, !dbg !4439
  %conv44 = zext i8 %35 to i32, !dbg !4439
  %sub45 = sub nsw i32 %add, %conv44, !dbg !4440
  %conv46 = sitofp i32 %sub45 to double, !dbg !4441
  %36 = load double, double* %opacity, align 8, !dbg !4442
  %mul = fmul double %conv46, %36, !dbg !4443
  %add47 = fadd double %conv9, %mul, !dbg !4444
  %conv48 = fptoui double %add47 to i8, !dbg !4445
  %37 = load i32, i32* %j, align 4, !dbg !4446
  %idxprom49 = sext i32 %37 to i64, !dbg !4447
  %38 = load i8*, i8** %dst.addr, align 8, !dbg !4447
  %arrayidx50 = getelementptr inbounds i8, i8* %38, i64 %idxprom49, !dbg !4447
  store i8 %conv48, i8* %arrayidx50, align 1, !dbg !4448
  br label %for.inc, !dbg !4449

for.inc:                                          ; preds = %cond.end40
  %39 = load i32, i32* %j, align 4, !dbg !4450
  %inc = add nsw i32 %39, 1, !dbg !4450
  store i32 %inc, i32* %j, align 4, !dbg !4450
  br label %for.cond3, !dbg !4452, !llvm.loop !4453

for.end:                                          ; preds = %for.cond3
  %40 = load i64, i64* %dst_linesize.addr, align 8, !dbg !4455
  %41 = load i8*, i8** %dst.addr, align 8, !dbg !4457
  %add.ptr = getelementptr inbounds i8, i8* %41, i64 %40, !dbg !4457
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !4457
  %42 = load i64, i64* %top_linesize.addr, align 8, !dbg !4458
  %43 = load i8*, i8** %top.addr, align 8, !dbg !4459
  %add.ptr51 = getelementptr inbounds i8, i8* %43, i64 %42, !dbg !4459
  store i8* %add.ptr51, i8** %top.addr, align 8, !dbg !4459
  %44 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !4460
  %45 = load i8*, i8** %bottom.addr, align 8, !dbg !4461
  %add.ptr52 = getelementptr inbounds i8, i8* %45, i64 %44, !dbg !4461
  store i8* %add.ptr52, i8** %bottom.addr, align 8, !dbg !4461
  br label %for.inc53, !dbg !4462

for.inc53:                                        ; preds = %for.end
  %46 = load i32, i32* %i, align 4, !dbg !4463
  %inc54 = add nsw i32 %46, 1, !dbg !4463
  store i32 %inc54, i32* %i, align 4, !dbg !4463
  br label %for.cond, !dbg !4465, !llvm.loop !4466

for.end55:                                        ; preds = %for.cond
  ret void, !dbg !4468
}

; Function Attrs: nounwind uwtable
define internal void @blend_pinlight_8bit(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !4470 {
entry:
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !4471, metadata !905), !dbg !4472
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !4473, metadata !905), !dbg !4474
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !4475, metadata !905), !dbg !4476
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !4477, metadata !905), !dbg !4478
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !4479, metadata !905), !dbg !4480
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !4481, metadata !905), !dbg !4482
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !4483, metadata !905), !dbg !4484
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !4485, metadata !905), !dbg !4486
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !4487, metadata !905), !dbg !4488
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !4489, metadata !905), !dbg !4490
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !4491, metadata !905), !dbg !4492
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !4493, metadata !905), !dbg !4494
  %0 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !4495
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %0, i32 0, i32 1, !dbg !4496
  %1 = load double, double* %opacity1, align 8, !dbg !4496
  store double %1, double* %opacity, align 8, !dbg !4494
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4497, metadata !905), !dbg !4498
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4499, metadata !905), !dbg !4500
  store i32 0, i32* %i, align 4, !dbg !4501
  br label %for.cond, !dbg !4503

for.cond:                                         ; preds = %for.inc66, %entry
  %2 = load i32, i32* %i, align 4, !dbg !4504
  %conv = sext i32 %2 to i64, !dbg !4504
  %3 = load i64, i64* %height.addr, align 8, !dbg !4507
  %cmp = icmp slt i64 %conv, %3, !dbg !4508
  br i1 %cmp, label %for.body, label %for.end68, !dbg !4509

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !4510
  br label %for.cond3, !dbg !4514

for.cond3:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !4515
  %conv4 = sext i32 %4 to i64, !dbg !4515
  %5 = load i64, i64* %width.addr, align 8, !dbg !4518
  %cmp5 = icmp slt i64 %conv4, %5, !dbg !4519
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !4520

for.body7:                                        ; preds = %for.cond3
  %6 = load i32, i32* %j, align 4, !dbg !4521
  %idxprom = sext i32 %6 to i64, !dbg !4524
  %7 = load i8*, i8** %top.addr, align 8, !dbg !4524
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !4524
  %8 = load i8, i8* %arrayidx, align 1, !dbg !4524
  %conv8 = zext i8 %8 to i32, !dbg !4524
  %conv9 = sitofp i32 %conv8 to double, !dbg !4524
  %9 = load i32, i32* %j, align 4, !dbg !4525
  %idxprom10 = sext i32 %9 to i64, !dbg !4526
  %10 = load i8*, i8** %bottom.addr, align 8, !dbg !4526
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 %idxprom10, !dbg !4526
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !4526
  %conv12 = zext i8 %11 to i32, !dbg !4526
  %cmp13 = icmp slt i32 %conv12, 128, !dbg !4527
  br i1 %cmp13, label %cond.true, label %cond.false31, !dbg !4528

cond.true:                                        ; preds = %for.body7
  %12 = load i32, i32* %j, align 4, !dbg !4529
  %idxprom15 = sext i32 %12 to i64, !dbg !4531
  %13 = load i8*, i8** %top.addr, align 8, !dbg !4531
  %arrayidx16 = getelementptr inbounds i8, i8* %13, i64 %idxprom15, !dbg !4531
  %14 = load i8, i8* %arrayidx16, align 1, !dbg !4531
  %conv17 = zext i8 %14 to i32, !dbg !4532
  %15 = load i32, i32* %j, align 4, !dbg !4533
  %idxprom18 = sext i32 %15 to i64, !dbg !4534
  %16 = load i8*, i8** %bottom.addr, align 8, !dbg !4534
  %arrayidx19 = getelementptr inbounds i8, i8* %16, i64 %idxprom18, !dbg !4534
  %17 = load i8, i8* %arrayidx19, align 1, !dbg !4534
  %conv20 = zext i8 %17 to i32, !dbg !4534
  %mul = mul nsw i32 2, %conv20, !dbg !4535
  %cmp21 = icmp sgt i32 %conv17, %mul, !dbg !4536
  br i1 %cmp21, label %cond.true23, label %cond.false, !dbg !4532

cond.true23:                                      ; preds = %cond.true
  %18 = load i32, i32* %j, align 4, !dbg !4537
  %idxprom24 = sext i32 %18 to i64, !dbg !4539
  %19 = load i8*, i8** %bottom.addr, align 8, !dbg !4539
  %arrayidx25 = getelementptr inbounds i8, i8* %19, i64 %idxprom24, !dbg !4539
  %20 = load i8, i8* %arrayidx25, align 1, !dbg !4539
  %conv26 = zext i8 %20 to i32, !dbg !4539
  %mul27 = mul nsw i32 2, %conv26, !dbg !4540
  br label %cond.end, !dbg !4541

cond.false:                                       ; preds = %cond.true
  %21 = load i32, i32* %j, align 4, !dbg !4542
  %idxprom28 = sext i32 %21 to i64, !dbg !4544
  %22 = load i8*, i8** %top.addr, align 8, !dbg !4544
  %arrayidx29 = getelementptr inbounds i8, i8* %22, i64 %idxprom28, !dbg !4544
  %23 = load i8, i8* %arrayidx29, align 1, !dbg !4544
  %conv30 = zext i8 %23 to i32, !dbg !4545
  br label %cond.end, !dbg !4546

cond.end:                                         ; preds = %cond.false, %cond.true23
  %cond = phi i32 [ %mul27, %cond.true23 ], [ %conv30, %cond.false ], !dbg !4547
  br label %cond.end53, !dbg !4549

cond.false31:                                     ; preds = %for.body7
  %24 = load i32, i32* %j, align 4, !dbg !4550
  %idxprom32 = sext i32 %24 to i64, !dbg !4552
  %25 = load i8*, i8** %top.addr, align 8, !dbg !4552
  %arrayidx33 = getelementptr inbounds i8, i8* %25, i64 %idxprom32, !dbg !4552
  %26 = load i8, i8* %arrayidx33, align 1, !dbg !4552
  %conv34 = zext i8 %26 to i32, !dbg !4553
  %27 = load i32, i32* %j, align 4, !dbg !4554
  %idxprom35 = sext i32 %27 to i64, !dbg !4555
  %28 = load i8*, i8** %bottom.addr, align 8, !dbg !4555
  %arrayidx36 = getelementptr inbounds i8, i8* %28, i64 %idxprom35, !dbg !4555
  %29 = load i8, i8* %arrayidx36, align 1, !dbg !4555
  %conv37 = zext i8 %29 to i32, !dbg !4555
  %sub = sub nsw i32 %conv37, 128, !dbg !4556
  %mul38 = mul nsw i32 2, %sub, !dbg !4557
  %cmp39 = icmp sgt i32 %conv34, %mul38, !dbg !4558
  br i1 %cmp39, label %cond.true41, label %cond.false45, !dbg !4553

cond.true41:                                      ; preds = %cond.false31
  %30 = load i32, i32* %j, align 4, !dbg !4559
  %idxprom42 = sext i32 %30 to i64, !dbg !4561
  %31 = load i8*, i8** %top.addr, align 8, !dbg !4561
  %arrayidx43 = getelementptr inbounds i8, i8* %31, i64 %idxprom42, !dbg !4561
  %32 = load i8, i8* %arrayidx43, align 1, !dbg !4561
  %conv44 = zext i8 %32 to i32, !dbg !4562
  br label %cond.end51, !dbg !4563

cond.false45:                                     ; preds = %cond.false31
  %33 = load i32, i32* %j, align 4, !dbg !4564
  %idxprom46 = sext i32 %33 to i64, !dbg !4566
  %34 = load i8*, i8** %bottom.addr, align 8, !dbg !4566
  %arrayidx47 = getelementptr inbounds i8, i8* %34, i64 %idxprom46, !dbg !4566
  %35 = load i8, i8* %arrayidx47, align 1, !dbg !4566
  %conv48 = zext i8 %35 to i32, !dbg !4566
  %sub49 = sub nsw i32 %conv48, 128, !dbg !4567
  %mul50 = mul nsw i32 2, %sub49, !dbg !4568
  br label %cond.end51, !dbg !4569

cond.end51:                                       ; preds = %cond.false45, %cond.true41
  %cond52 = phi i32 [ %conv44, %cond.true41 ], [ %mul50, %cond.false45 ], !dbg !4570
  br label %cond.end53, !dbg !4572

cond.end53:                                       ; preds = %cond.end51, %cond.end
  %cond54 = phi i32 [ %cond, %cond.end ], [ %cond52, %cond.end51 ], !dbg !4573
  %36 = load i32, i32* %j, align 4, !dbg !4575
  %idxprom55 = sext i32 %36 to i64, !dbg !4576
  %37 = load i8*, i8** %top.addr, align 8, !dbg !4576
  %arrayidx56 = getelementptr inbounds i8, i8* %37, i64 %idxprom55, !dbg !4576
  %38 = load i8, i8* %arrayidx56, align 1, !dbg !4576
  %conv57 = zext i8 %38 to i32, !dbg !4576
  %sub58 = sub nsw i32 %cond54, %conv57, !dbg !4577
  %conv59 = sitofp i32 %sub58 to double, !dbg !4578
  %39 = load double, double* %opacity, align 8, !dbg !4579
  %mul60 = fmul double %conv59, %39, !dbg !4580
  %add = fadd double %conv9, %mul60, !dbg !4581
  %conv61 = fptoui double %add to i8, !dbg !4582
  %40 = load i32, i32* %j, align 4, !dbg !4583
  %idxprom62 = sext i32 %40 to i64, !dbg !4584
  %41 = load i8*, i8** %dst.addr, align 8, !dbg !4584
  %arrayidx63 = getelementptr inbounds i8, i8* %41, i64 %idxprom62, !dbg !4584
  store i8 %conv61, i8* %arrayidx63, align 1, !dbg !4585
  br label %for.inc, !dbg !4586

for.inc:                                          ; preds = %cond.end53
  %42 = load i32, i32* %j, align 4, !dbg !4587
  %inc = add nsw i32 %42, 1, !dbg !4587
  store i32 %inc, i32* %j, align 4, !dbg !4587
  br label %for.cond3, !dbg !4589, !llvm.loop !4590

for.end:                                          ; preds = %for.cond3
  %43 = load i64, i64* %dst_linesize.addr, align 8, !dbg !4592
  %44 = load i8*, i8** %dst.addr, align 8, !dbg !4594
  %add.ptr = getelementptr inbounds i8, i8* %44, i64 %43, !dbg !4594
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !4594
  %45 = load i64, i64* %top_linesize.addr, align 8, !dbg !4595
  %46 = load i8*, i8** %top.addr, align 8, !dbg !4596
  %add.ptr64 = getelementptr inbounds i8, i8* %46, i64 %45, !dbg !4596
  store i8* %add.ptr64, i8** %top.addr, align 8, !dbg !4596
  %47 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !4597
  %48 = load i8*, i8** %bottom.addr, align 8, !dbg !4598
  %add.ptr65 = getelementptr inbounds i8, i8* %48, i64 %47, !dbg !4598
  store i8* %add.ptr65, i8** %bottom.addr, align 8, !dbg !4598
  br label %for.inc66, !dbg !4599

for.inc66:                                        ; preds = %for.end
  %49 = load i32, i32* %i, align 4, !dbg !4600
  %inc67 = add nsw i32 %49, 1, !dbg !4600
  store i32 %inc67, i32* %i, align 4, !dbg !4600
  br label %for.cond, !dbg !4602, !llvm.loop !4603

for.end68:                                        ; preds = %for.cond
  ret void, !dbg !4605
}

; Function Attrs: nounwind uwtable
define internal void @blend_reflect_8bit(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !4607 {
entry:
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !4608, metadata !905), !dbg !4609
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !4610, metadata !905), !dbg !4611
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !4612, metadata !905), !dbg !4613
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !4614, metadata !905), !dbg !4615
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !4616, metadata !905), !dbg !4617
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !4618, metadata !905), !dbg !4619
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !4620, metadata !905), !dbg !4621
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !4622, metadata !905), !dbg !4623
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !4624, metadata !905), !dbg !4625
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !4626, metadata !905), !dbg !4627
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !4628, metadata !905), !dbg !4629
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !4630, metadata !905), !dbg !4631
  %0 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !4632
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %0, i32 0, i32 1, !dbg !4633
  %1 = load double, double* %opacity1, align 8, !dbg !4633
  store double %1, double* %opacity, align 8, !dbg !4631
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4634, metadata !905), !dbg !4635
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4636, metadata !905), !dbg !4637
  store i32 0, i32* %i, align 4, !dbg !4638
  br label %for.cond, !dbg !4640

for.cond:                                         ; preds = %for.inc56, %entry
  %2 = load i32, i32* %i, align 4, !dbg !4641
  %conv = sext i32 %2 to i64, !dbg !4641
  %3 = load i64, i64* %height.addr, align 8, !dbg !4644
  %cmp = icmp slt i64 %conv, %3, !dbg !4645
  br i1 %cmp, label %for.body, label %for.end58, !dbg !4646

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !4647
  br label %for.cond3, !dbg !4651

for.cond3:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !4652
  %conv4 = sext i32 %4 to i64, !dbg !4652
  %5 = load i64, i64* %width.addr, align 8, !dbg !4655
  %cmp5 = icmp slt i64 %conv4, %5, !dbg !4656
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !4657

for.body7:                                        ; preds = %for.cond3
  %6 = load i32, i32* %j, align 4, !dbg !4658
  %idxprom = sext i32 %6 to i64, !dbg !4661
  %7 = load i8*, i8** %top.addr, align 8, !dbg !4661
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !4661
  %8 = load i8, i8* %arrayidx, align 1, !dbg !4661
  %conv8 = zext i8 %8 to i32, !dbg !4661
  %conv9 = sitofp i32 %conv8 to double, !dbg !4661
  %9 = load i32, i32* %j, align 4, !dbg !4662
  %idxprom10 = sext i32 %9 to i64, !dbg !4663
  %10 = load i8*, i8** %bottom.addr, align 8, !dbg !4663
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 %idxprom10, !dbg !4663
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !4663
  %conv12 = zext i8 %11 to i32, !dbg !4663
  %cmp13 = icmp eq i32 %conv12, 255, !dbg !4664
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !4665

cond.true:                                        ; preds = %for.body7
  %12 = load i32, i32* %j, align 4, !dbg !4666
  %idxprom15 = sext i32 %12 to i64, !dbg !4668
  %13 = load i8*, i8** %bottom.addr, align 8, !dbg !4668
  %arrayidx16 = getelementptr inbounds i8, i8* %13, i64 %idxprom15, !dbg !4668
  %14 = load i8, i8* %arrayidx16, align 1, !dbg !4668
  %conv17 = zext i8 %14 to i32, !dbg !4668
  br label %cond.end43, !dbg !4669

cond.false:                                       ; preds = %for.body7
  %15 = load i32, i32* %j, align 4, !dbg !4670
  %idxprom18 = sext i32 %15 to i64, !dbg !4672
  %16 = load i8*, i8** %top.addr, align 8, !dbg !4672
  %arrayidx19 = getelementptr inbounds i8, i8* %16, i64 %idxprom18, !dbg !4672
  %17 = load i8, i8* %arrayidx19, align 1, !dbg !4672
  %conv20 = zext i8 %17 to i32, !dbg !4672
  %18 = load i32, i32* %j, align 4, !dbg !4673
  %idxprom21 = sext i32 %18 to i64, !dbg !4674
  %19 = load i8*, i8** %top.addr, align 8, !dbg !4674
  %arrayidx22 = getelementptr inbounds i8, i8* %19, i64 %idxprom21, !dbg !4674
  %20 = load i8, i8* %arrayidx22, align 1, !dbg !4674
  %conv23 = zext i8 %20 to i32, !dbg !4674
  %mul = mul nsw i32 %conv20, %conv23, !dbg !4675
  %21 = load i32, i32* %j, align 4, !dbg !4676
  %idxprom24 = sext i32 %21 to i64, !dbg !4677
  %22 = load i8*, i8** %bottom.addr, align 8, !dbg !4677
  %arrayidx25 = getelementptr inbounds i8, i8* %22, i64 %idxprom24, !dbg !4677
  %23 = load i8, i8* %arrayidx25, align 1, !dbg !4677
  %conv26 = zext i8 %23 to i32, !dbg !4677
  %sub = sub nsw i32 255, %conv26, !dbg !4678
  %div = sdiv i32 %mul, %sub, !dbg !4679
  %cmp27 = icmp sgt i32 255, %div, !dbg !4680
  br i1 %cmp27, label %cond.true29, label %cond.false42, !dbg !4681

cond.true29:                                      ; preds = %cond.false
  %24 = load i32, i32* %j, align 4, !dbg !4682
  %idxprom30 = sext i32 %24 to i64, !dbg !4684
  %25 = load i8*, i8** %top.addr, align 8, !dbg !4684
  %arrayidx31 = getelementptr inbounds i8, i8* %25, i64 %idxprom30, !dbg !4684
  %26 = load i8, i8* %arrayidx31, align 1, !dbg !4684
  %conv32 = zext i8 %26 to i32, !dbg !4684
  %27 = load i32, i32* %j, align 4, !dbg !4685
  %idxprom33 = sext i32 %27 to i64, !dbg !4686
  %28 = load i8*, i8** %top.addr, align 8, !dbg !4686
  %arrayidx34 = getelementptr inbounds i8, i8* %28, i64 %idxprom33, !dbg !4686
  %29 = load i8, i8* %arrayidx34, align 1, !dbg !4686
  %conv35 = zext i8 %29 to i32, !dbg !4686
  %mul36 = mul nsw i32 %conv32, %conv35, !dbg !4687
  %30 = load i32, i32* %j, align 4, !dbg !4688
  %idxprom37 = sext i32 %30 to i64, !dbg !4689
  %31 = load i8*, i8** %bottom.addr, align 8, !dbg !4689
  %arrayidx38 = getelementptr inbounds i8, i8* %31, i64 %idxprom37, !dbg !4689
  %32 = load i8, i8* %arrayidx38, align 1, !dbg !4689
  %conv39 = zext i8 %32 to i32, !dbg !4689
  %sub40 = sub nsw i32 255, %conv39, !dbg !4690
  %div41 = sdiv i32 %mul36, %sub40, !dbg !4691
  br label %cond.end, !dbg !4692

cond.false42:                                     ; preds = %cond.false
  br label %cond.end, !dbg !4693

cond.end:                                         ; preds = %cond.false42, %cond.true29
  %cond = phi i32 [ %div41, %cond.true29 ], [ 255, %cond.false42 ], !dbg !4695
  br label %cond.end43, !dbg !4697

cond.end43:                                       ; preds = %cond.end, %cond.true
  %cond44 = phi i32 [ %conv17, %cond.true ], [ %cond, %cond.end ], !dbg !4698
  %33 = load i32, i32* %j, align 4, !dbg !4700
  %idxprom45 = sext i32 %33 to i64, !dbg !4701
  %34 = load i8*, i8** %top.addr, align 8, !dbg !4701
  %arrayidx46 = getelementptr inbounds i8, i8* %34, i64 %idxprom45, !dbg !4701
  %35 = load i8, i8* %arrayidx46, align 1, !dbg !4701
  %conv47 = zext i8 %35 to i32, !dbg !4701
  %sub48 = sub nsw i32 %cond44, %conv47, !dbg !4702
  %conv49 = sitofp i32 %sub48 to double, !dbg !4703
  %36 = load double, double* %opacity, align 8, !dbg !4704
  %mul50 = fmul double %conv49, %36, !dbg !4705
  %add = fadd double %conv9, %mul50, !dbg !4706
  %conv51 = fptoui double %add to i8, !dbg !4707
  %37 = load i32, i32* %j, align 4, !dbg !4708
  %idxprom52 = sext i32 %37 to i64, !dbg !4709
  %38 = load i8*, i8** %dst.addr, align 8, !dbg !4709
  %arrayidx53 = getelementptr inbounds i8, i8* %38, i64 %idxprom52, !dbg !4709
  store i8 %conv51, i8* %arrayidx53, align 1, !dbg !4710
  br label %for.inc, !dbg !4711

for.inc:                                          ; preds = %cond.end43
  %39 = load i32, i32* %j, align 4, !dbg !4712
  %inc = add nsw i32 %39, 1, !dbg !4712
  store i32 %inc, i32* %j, align 4, !dbg !4712
  br label %for.cond3, !dbg !4714, !llvm.loop !4715

for.end:                                          ; preds = %for.cond3
  %40 = load i64, i64* %dst_linesize.addr, align 8, !dbg !4717
  %41 = load i8*, i8** %dst.addr, align 8, !dbg !4719
  %add.ptr = getelementptr inbounds i8, i8* %41, i64 %40, !dbg !4719
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !4719
  %42 = load i64, i64* %top_linesize.addr, align 8, !dbg !4720
  %43 = load i8*, i8** %top.addr, align 8, !dbg !4721
  %add.ptr54 = getelementptr inbounds i8, i8* %43, i64 %42, !dbg !4721
  store i8* %add.ptr54, i8** %top.addr, align 8, !dbg !4721
  %44 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !4722
  %45 = load i8*, i8** %bottom.addr, align 8, !dbg !4723
  %add.ptr55 = getelementptr inbounds i8, i8* %45, i64 %44, !dbg !4723
  store i8* %add.ptr55, i8** %bottom.addr, align 8, !dbg !4723
  br label %for.inc56, !dbg !4724

for.inc56:                                        ; preds = %for.end
  %46 = load i32, i32* %i, align 4, !dbg !4725
  %inc57 = add nsw i32 %46, 1, !dbg !4725
  store i32 %inc57, i32* %i, align 4, !dbg !4725
  br label %for.cond, !dbg !4727, !llvm.loop !4728

for.end58:                                        ; preds = %for.cond
  ret void, !dbg !4730
}

; Function Attrs: nounwind uwtable
define internal void @blend_screen_8bit(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !4732 {
entry:
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !4733, metadata !905), !dbg !4734
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !4735, metadata !905), !dbg !4736
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !4737, metadata !905), !dbg !4738
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !4739, metadata !905), !dbg !4740
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !4741, metadata !905), !dbg !4742
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !4743, metadata !905), !dbg !4744
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !4745, metadata !905), !dbg !4746
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !4747, metadata !905), !dbg !4748
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !4749, metadata !905), !dbg !4750
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !4751, metadata !905), !dbg !4752
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !4753, metadata !905), !dbg !4754
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !4755, metadata !905), !dbg !4756
  %0 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !4757
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %0, i32 0, i32 1, !dbg !4758
  %1 = load double, double* %opacity1, align 8, !dbg !4758
  store double %1, double* %opacity, align 8, !dbg !4756
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4759, metadata !905), !dbg !4760
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4761, metadata !905), !dbg !4762
  store i32 0, i32* %i, align 4, !dbg !4763
  br label %for.cond, !dbg !4765

for.cond:                                         ; preds = %for.inc30, %entry
  %2 = load i32, i32* %i, align 4, !dbg !4766
  %conv = sext i32 %2 to i64, !dbg !4766
  %3 = load i64, i64* %height.addr, align 8, !dbg !4769
  %cmp = icmp slt i64 %conv, %3, !dbg !4770
  br i1 %cmp, label %for.body, label %for.end32, !dbg !4771

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !4772
  br label %for.cond3, !dbg !4776

for.cond3:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !4777
  %conv4 = sext i32 %4 to i64, !dbg !4777
  %5 = load i64, i64* %width.addr, align 8, !dbg !4780
  %cmp5 = icmp slt i64 %conv4, %5, !dbg !4781
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !4782

for.body7:                                        ; preds = %for.cond3
  %6 = load i32, i32* %j, align 4, !dbg !4783
  %idxprom = sext i32 %6 to i64, !dbg !4786
  %7 = load i8*, i8** %top.addr, align 8, !dbg !4786
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !4786
  %8 = load i8, i8* %arrayidx, align 1, !dbg !4786
  %conv8 = zext i8 %8 to i32, !dbg !4786
  %conv9 = sitofp i32 %conv8 to double, !dbg !4786
  %9 = load i32, i32* %j, align 4, !dbg !4787
  %idxprom10 = sext i32 %9 to i64, !dbg !4788
  %10 = load i8*, i8** %top.addr, align 8, !dbg !4788
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 %idxprom10, !dbg !4788
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !4788
  %conv12 = zext i8 %11 to i32, !dbg !4789
  %sub = sub nsw i32 255, %conv12, !dbg !4790
  %12 = load i32, i32* %j, align 4, !dbg !4791
  %idxprom13 = sext i32 %12 to i64, !dbg !4792
  %13 = load i8*, i8** %bottom.addr, align 8, !dbg !4792
  %arrayidx14 = getelementptr inbounds i8, i8* %13, i64 %idxprom13, !dbg !4792
  %14 = load i8, i8* %arrayidx14, align 1, !dbg !4792
  %conv15 = zext i8 %14 to i32, !dbg !4793
  %sub16 = sub nsw i32 255, %conv15, !dbg !4794
  %mul = mul nsw i32 %sub, %sub16, !dbg !4795
  %div = sdiv i32 %mul, 255, !dbg !4796
  %mul17 = mul nsw i32 1, %div, !dbg !4797
  %sub18 = sub nsw i32 255, %mul17, !dbg !4798
  %15 = load i32, i32* %j, align 4, !dbg !4799
  %idxprom19 = sext i32 %15 to i64, !dbg !4800
  %16 = load i8*, i8** %top.addr, align 8, !dbg !4800
  %arrayidx20 = getelementptr inbounds i8, i8* %16, i64 %idxprom19, !dbg !4800
  %17 = load i8, i8* %arrayidx20, align 1, !dbg !4800
  %conv21 = zext i8 %17 to i32, !dbg !4800
  %sub22 = sub nsw i32 %sub18, %conv21, !dbg !4801
  %conv23 = sitofp i32 %sub22 to double, !dbg !4802
  %18 = load double, double* %opacity, align 8, !dbg !4803
  %mul24 = fmul double %conv23, %18, !dbg !4804
  %add = fadd double %conv9, %mul24, !dbg !4805
  %conv25 = fptoui double %add to i8, !dbg !4786
  %19 = load i32, i32* %j, align 4, !dbg !4806
  %idxprom26 = sext i32 %19 to i64, !dbg !4807
  %20 = load i8*, i8** %dst.addr, align 8, !dbg !4807
  %arrayidx27 = getelementptr inbounds i8, i8* %20, i64 %idxprom26, !dbg !4807
  store i8 %conv25, i8* %arrayidx27, align 1, !dbg !4808
  br label %for.inc, !dbg !4809

for.inc:                                          ; preds = %for.body7
  %21 = load i32, i32* %j, align 4, !dbg !4810
  %inc = add nsw i32 %21, 1, !dbg !4810
  store i32 %inc, i32* %j, align 4, !dbg !4810
  br label %for.cond3, !dbg !4812, !llvm.loop !4813

for.end:                                          ; preds = %for.cond3
  %22 = load i64, i64* %dst_linesize.addr, align 8, !dbg !4815
  %23 = load i8*, i8** %dst.addr, align 8, !dbg !4817
  %add.ptr = getelementptr inbounds i8, i8* %23, i64 %22, !dbg !4817
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !4817
  %24 = load i64, i64* %top_linesize.addr, align 8, !dbg !4818
  %25 = load i8*, i8** %top.addr, align 8, !dbg !4819
  %add.ptr28 = getelementptr inbounds i8, i8* %25, i64 %24, !dbg !4819
  store i8* %add.ptr28, i8** %top.addr, align 8, !dbg !4819
  %26 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !4820
  %27 = load i8*, i8** %bottom.addr, align 8, !dbg !4821
  %add.ptr29 = getelementptr inbounds i8, i8* %27, i64 %26, !dbg !4821
  store i8* %add.ptr29, i8** %bottom.addr, align 8, !dbg !4821
  br label %for.inc30, !dbg !4822

for.inc30:                                        ; preds = %for.end
  %28 = load i32, i32* %i, align 4, !dbg !4823
  %inc31 = add nsw i32 %28, 1, !dbg !4823
  store i32 %inc31, i32* %i, align 4, !dbg !4823
  br label %for.cond, !dbg !4825, !llvm.loop !4826

for.end32:                                        ; preds = %for.cond
  ret void, !dbg !4828
}

; Function Attrs: nounwind uwtable
define internal void @blend_softlight_8bit(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !4830 {
entry:
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !4831, metadata !905), !dbg !4832
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !4833, metadata !905), !dbg !4834
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !4835, metadata !905), !dbg !4836
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !4837, metadata !905), !dbg !4838
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !4839, metadata !905), !dbg !4840
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !4841, metadata !905), !dbg !4842
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !4843, metadata !905), !dbg !4844
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !4845, metadata !905), !dbg !4846
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !4847, metadata !905), !dbg !4848
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !4849, metadata !905), !dbg !4850
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !4851, metadata !905), !dbg !4852
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !4853, metadata !905), !dbg !4854
  %0 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !4855
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %0, i32 0, i32 1, !dbg !4856
  %1 = load double, double* %opacity1, align 8, !dbg !4856
  store double %1, double* %opacity, align 8, !dbg !4854
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4857, metadata !905), !dbg !4858
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4859, metadata !905), !dbg !4860
  store i32 0, i32* %i, align 4, !dbg !4861
  br label %for.cond, !dbg !4863

for.cond:                                         ; preds = %for.inc73, %entry
  %2 = load i32, i32* %i, align 4, !dbg !4864
  %conv = sext i32 %2 to i64, !dbg !4864
  %3 = load i64, i64* %height.addr, align 8, !dbg !4867
  %cmp = icmp slt i64 %conv, %3, !dbg !4868
  br i1 %cmp, label %for.body, label %for.end75, !dbg !4869

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !4870
  br label %for.cond3, !dbg !4874

for.cond3:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !4875
  %conv4 = sext i32 %4 to i64, !dbg !4875
  %5 = load i64, i64* %width.addr, align 8, !dbg !4878
  %cmp5 = icmp slt i64 %conv4, %5, !dbg !4879
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !4880

for.body7:                                        ; preds = %for.cond3
  %6 = load i32, i32* %j, align 4, !dbg !4881
  %idxprom = sext i32 %6 to i64, !dbg !4884
  %7 = load i8*, i8** %top.addr, align 8, !dbg !4884
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !4884
  %8 = load i8, i8* %arrayidx, align 1, !dbg !4884
  %conv8 = zext i8 %8 to i32, !dbg !4884
  %conv9 = sitofp i32 %conv8 to double, !dbg !4884
  %9 = load i32, i32* %j, align 4, !dbg !4885
  %idxprom10 = sext i32 %9 to i64, !dbg !4886
  %10 = load i8*, i8** %top.addr, align 8, !dbg !4886
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 %idxprom10, !dbg !4886
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !4886
  %conv12 = zext i8 %11 to i32, !dbg !4886
  %cmp13 = icmp sgt i32 %conv12, 127, !dbg !4887
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !4888

cond.true:                                        ; preds = %for.body7
  %12 = load i32, i32* %j, align 4, !dbg !4889
  %idxprom15 = sext i32 %12 to i64, !dbg !4891
  %13 = load i8*, i8** %bottom.addr, align 8, !dbg !4891
  %arrayidx16 = getelementptr inbounds i8, i8* %13, i64 %idxprom15, !dbg !4891
  %14 = load i8, i8* %arrayidx16, align 1, !dbg !4891
  %conv17 = zext i8 %14 to i32, !dbg !4891
  %conv18 = sitofp i32 %conv17 to double, !dbg !4891
  %15 = load i32, i32* %j, align 4, !dbg !4892
  %idxprom19 = sext i32 %15 to i64, !dbg !4893
  %16 = load i8*, i8** %bottom.addr, align 8, !dbg !4893
  %arrayidx20 = getelementptr inbounds i8, i8* %16, i64 %idxprom19, !dbg !4893
  %17 = load i8, i8* %arrayidx20, align 1, !dbg !4893
  %conv21 = zext i8 %17 to i32, !dbg !4893
  %sub = sub nsw i32 255, %conv21, !dbg !4894
  %conv22 = sitofp i32 %sub to double, !dbg !4895
  %18 = load i32, i32* %j, align 4, !dbg !4896
  %idxprom23 = sext i32 %18 to i64, !dbg !4897
  %19 = load i8*, i8** %top.addr, align 8, !dbg !4897
  %arrayidx24 = getelementptr inbounds i8, i8* %19, i64 %idxprom23, !dbg !4897
  %20 = load i8, i8* %arrayidx24, align 1, !dbg !4897
  %conv25 = zext i8 %20 to i32, !dbg !4897
  %conv26 = sitofp i32 %conv25 to double, !dbg !4897
  %sub27 = fsub double %conv26, 1.275000e+02, !dbg !4898
  %mul = fmul double %conv22, %sub27, !dbg !4899
  %div = fdiv double %mul, 1.275000e+02, !dbg !4900
  %21 = load i32, i32* %j, align 4, !dbg !4901
  %idxprom28 = sext i32 %21 to i64, !dbg !4902
  %22 = load i8*, i8** %bottom.addr, align 8, !dbg !4902
  %arrayidx29 = getelementptr inbounds i8, i8* %22, i64 %idxprom28, !dbg !4902
  %23 = load i8, i8* %arrayidx29, align 1, !dbg !4902
  %conv30 = zext i8 %23 to i32, !dbg !4902
  %conv31 = sitofp i32 %conv30 to double, !dbg !4902
  %sub32 = fsub double %conv31, 1.275000e+02, !dbg !4903
  %call = call double @fabs(double %sub32) #1, !dbg !4904
  %div33 = fdiv double %call, 2.550000e+02, !dbg !4905
  %sub34 = fsub double 5.000000e-01, %div33, !dbg !4906
  %mul35 = fmul double %div, %sub34, !dbg !4907
  %add = fadd double %conv18, %mul35, !dbg !4908
  br label %cond.end, !dbg !4909

cond.false:                                       ; preds = %for.body7
  %24 = load i32, i32* %j, align 4, !dbg !4910
  %idxprom36 = sext i32 %24 to i64, !dbg !4912
  %25 = load i8*, i8** %bottom.addr, align 8, !dbg !4912
  %arrayidx37 = getelementptr inbounds i8, i8* %25, i64 %idxprom36, !dbg !4912
  %26 = load i8, i8* %arrayidx37, align 1, !dbg !4912
  %conv38 = zext i8 %26 to i32, !dbg !4912
  %conv39 = sitofp i32 %conv38 to double, !dbg !4912
  %27 = load i32, i32* %j, align 4, !dbg !4913
  %idxprom40 = sext i32 %27 to i64, !dbg !4914
  %28 = load i8*, i8** %bottom.addr, align 8, !dbg !4914
  %arrayidx41 = getelementptr inbounds i8, i8* %28, i64 %idxprom40, !dbg !4914
  %29 = load i8, i8* %arrayidx41, align 1, !dbg !4914
  %conv42 = zext i8 %29 to i32, !dbg !4914
  %conv43 = sitofp i32 %conv42 to double, !dbg !4914
  %30 = load i32, i32* %j, align 4, !dbg !4915
  %idxprom44 = sext i32 %30 to i64, !dbg !4916
  %31 = load i8*, i8** %top.addr, align 8, !dbg !4916
  %arrayidx45 = getelementptr inbounds i8, i8* %31, i64 %idxprom44, !dbg !4916
  %32 = load i8, i8* %arrayidx45, align 1, !dbg !4916
  %conv46 = zext i8 %32 to i32, !dbg !4916
  %conv47 = sitofp i32 %conv46 to double, !dbg !4916
  %sub48 = fsub double 1.275000e+02, %conv47, !dbg !4917
  %div49 = fdiv double %sub48, 1.275000e+02, !dbg !4918
  %mul50 = fmul double %conv43, %div49, !dbg !4919
  %33 = load i32, i32* %j, align 4, !dbg !4920
  %idxprom51 = sext i32 %33 to i64, !dbg !4921
  %34 = load i8*, i8** %bottom.addr, align 8, !dbg !4921
  %arrayidx52 = getelementptr inbounds i8, i8* %34, i64 %idxprom51, !dbg !4921
  %35 = load i8, i8* %arrayidx52, align 1, !dbg !4921
  %conv53 = zext i8 %35 to i32, !dbg !4921
  %conv54 = sitofp i32 %conv53 to double, !dbg !4921
  %sub55 = fsub double %conv54, 1.275000e+02, !dbg !4922
  %call56 = call double @fabs(double %sub55) #1, !dbg !4923
  %div57 = fdiv double %call56, 2.550000e+02, !dbg !4924
  %sub58 = fsub double 5.000000e-01, %div57, !dbg !4925
  %mul59 = fmul double %mul50, %sub58, !dbg !4926
  %sub60 = fsub double %conv39, %mul59, !dbg !4927
  br label %cond.end, !dbg !4928

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %add, %cond.true ], [ %sub60, %cond.false ], !dbg !4929
  %36 = load i32, i32* %j, align 4, !dbg !4931
  %idxprom61 = sext i32 %36 to i64, !dbg !4932
  %37 = load i8*, i8** %top.addr, align 8, !dbg !4932
  %arrayidx62 = getelementptr inbounds i8, i8* %37, i64 %idxprom61, !dbg !4932
  %38 = load i8, i8* %arrayidx62, align 1, !dbg !4932
  %conv63 = zext i8 %38 to i32, !dbg !4932
  %conv64 = sitofp i32 %conv63 to double, !dbg !4932
  %sub65 = fsub double %cond, %conv64, !dbg !4933
  %39 = load double, double* %opacity, align 8, !dbg !4934
  %mul66 = fmul double %sub65, %39, !dbg !4935
  %add67 = fadd double %conv9, %mul66, !dbg !4936
  %conv68 = fptoui double %add67 to i8, !dbg !4937
  %40 = load i32, i32* %j, align 4, !dbg !4938
  %idxprom69 = sext i32 %40 to i64, !dbg !4939
  %41 = load i8*, i8** %dst.addr, align 8, !dbg !4939
  %arrayidx70 = getelementptr inbounds i8, i8* %41, i64 %idxprom69, !dbg !4939
  store i8 %conv68, i8* %arrayidx70, align 1, !dbg !4940
  br label %for.inc, !dbg !4941

for.inc:                                          ; preds = %cond.end
  %42 = load i32, i32* %j, align 4, !dbg !4942
  %inc = add nsw i32 %42, 1, !dbg !4942
  store i32 %inc, i32* %j, align 4, !dbg !4942
  br label %for.cond3, !dbg !4944, !llvm.loop !4945

for.end:                                          ; preds = %for.cond3
  %43 = load i64, i64* %dst_linesize.addr, align 8, !dbg !4947
  %44 = load i8*, i8** %dst.addr, align 8, !dbg !4949
  %add.ptr = getelementptr inbounds i8, i8* %44, i64 %43, !dbg !4949
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !4949
  %45 = load i64, i64* %top_linesize.addr, align 8, !dbg !4950
  %46 = load i8*, i8** %top.addr, align 8, !dbg !4951
  %add.ptr71 = getelementptr inbounds i8, i8* %46, i64 %45, !dbg !4951
  store i8* %add.ptr71, i8** %top.addr, align 8, !dbg !4951
  %47 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !4952
  %48 = load i8*, i8** %bottom.addr, align 8, !dbg !4953
  %add.ptr72 = getelementptr inbounds i8, i8* %48, i64 %47, !dbg !4953
  store i8* %add.ptr72, i8** %bottom.addr, align 8, !dbg !4953
  br label %for.inc73, !dbg !4954

for.inc73:                                        ; preds = %for.end
  %49 = load i32, i32* %i, align 4, !dbg !4955
  %inc74 = add nsw i32 %49, 1, !dbg !4955
  store i32 %inc74, i32* %i, align 4, !dbg !4955
  br label %for.cond, !dbg !4957, !llvm.loop !4958

for.end75:                                        ; preds = %for.cond
  ret void, !dbg !4960
}

; Function Attrs: nounwind uwtable
define internal void @blend_subtract_8bit(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !4962 {
entry:
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !4963, metadata !905), !dbg !4964
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !4965, metadata !905), !dbg !4966
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !4967, metadata !905), !dbg !4968
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !4969, metadata !905), !dbg !4970
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !4971, metadata !905), !dbg !4972
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !4973, metadata !905), !dbg !4974
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !4975, metadata !905), !dbg !4976
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !4977, metadata !905), !dbg !4978
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !4979, metadata !905), !dbg !4980
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !4981, metadata !905), !dbg !4982
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !4983, metadata !905), !dbg !4984
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !4985, metadata !905), !dbg !4986
  %0 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !4987
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %0, i32 0, i32 1, !dbg !4988
  %1 = load double, double* %opacity1, align 8, !dbg !4988
  store double %1, double* %opacity, align 8, !dbg !4986
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4989, metadata !905), !dbg !4990
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4991, metadata !905), !dbg !4992
  store i32 0, i32* %i, align 4, !dbg !4993
  br label %for.cond, !dbg !4995

for.cond:                                         ; preds = %for.inc35, %entry
  %2 = load i32, i32* %i, align 4, !dbg !4996
  %conv = sext i32 %2 to i64, !dbg !4996
  %3 = load i64, i64* %height.addr, align 8, !dbg !4999
  %cmp = icmp slt i64 %conv, %3, !dbg !5000
  br i1 %cmp, label %for.body, label %for.end37, !dbg !5001

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !5002
  br label %for.cond3, !dbg !5006

for.cond3:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !5007
  %conv4 = sext i32 %4 to i64, !dbg !5007
  %5 = load i64, i64* %width.addr, align 8, !dbg !5010
  %cmp5 = icmp slt i64 %conv4, %5, !dbg !5011
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !5012

for.body7:                                        ; preds = %for.cond3
  %6 = load i32, i32* %j, align 4, !dbg !5013
  %idxprom = sext i32 %6 to i64, !dbg !5016
  %7 = load i8*, i8** %top.addr, align 8, !dbg !5016
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !5016
  %8 = load i8, i8* %arrayidx, align 1, !dbg !5016
  %conv8 = zext i8 %8 to i32, !dbg !5016
  %conv9 = sitofp i32 %conv8 to double, !dbg !5016
  %9 = load i32, i32* %j, align 4, !dbg !5017
  %idxprom10 = sext i32 %9 to i64, !dbg !5018
  %10 = load i8*, i8** %top.addr, align 8, !dbg !5018
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 %idxprom10, !dbg !5018
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !5018
  %conv12 = zext i8 %11 to i32, !dbg !5018
  %12 = load i32, i32* %j, align 4, !dbg !5019
  %idxprom13 = sext i32 %12 to i64, !dbg !5020
  %13 = load i8*, i8** %bottom.addr, align 8, !dbg !5020
  %arrayidx14 = getelementptr inbounds i8, i8* %13, i64 %idxprom13, !dbg !5020
  %14 = load i8, i8* %arrayidx14, align 1, !dbg !5020
  %conv15 = zext i8 %14 to i32, !dbg !5020
  %sub = sub nsw i32 %conv12, %conv15, !dbg !5021
  %cmp16 = icmp sgt i32 0, %sub, !dbg !5022
  br i1 %cmp16, label %cond.true, label %cond.false, !dbg !5023

cond.true:                                        ; preds = %for.body7
  br label %cond.end, !dbg !5024

cond.false:                                       ; preds = %for.body7
  %15 = load i32, i32* %j, align 4, !dbg !5026
  %idxprom18 = sext i32 %15 to i64, !dbg !5028
  %16 = load i8*, i8** %top.addr, align 8, !dbg !5028
  %arrayidx19 = getelementptr inbounds i8, i8* %16, i64 %idxprom18, !dbg !5028
  %17 = load i8, i8* %arrayidx19, align 1, !dbg !5028
  %conv20 = zext i8 %17 to i32, !dbg !5028
  %18 = load i32, i32* %j, align 4, !dbg !5029
  %idxprom21 = sext i32 %18 to i64, !dbg !5030
  %19 = load i8*, i8** %bottom.addr, align 8, !dbg !5030
  %arrayidx22 = getelementptr inbounds i8, i8* %19, i64 %idxprom21, !dbg !5030
  %20 = load i8, i8* %arrayidx22, align 1, !dbg !5030
  %conv23 = zext i8 %20 to i32, !dbg !5030
  %sub24 = sub nsw i32 %conv20, %conv23, !dbg !5031
  br label %cond.end, !dbg !5032

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %sub24, %cond.false ], !dbg !5033
  %21 = load i32, i32* %j, align 4, !dbg !5035
  %idxprom25 = sext i32 %21 to i64, !dbg !5036
  %22 = load i8*, i8** %top.addr, align 8, !dbg !5036
  %arrayidx26 = getelementptr inbounds i8, i8* %22, i64 %idxprom25, !dbg !5036
  %23 = load i8, i8* %arrayidx26, align 1, !dbg !5036
  %conv27 = zext i8 %23 to i32, !dbg !5036
  %sub28 = sub nsw i32 %cond, %conv27, !dbg !5037
  %conv29 = sitofp i32 %sub28 to double, !dbg !5038
  %24 = load double, double* %opacity, align 8, !dbg !5039
  %mul = fmul double %conv29, %24, !dbg !5040
  %add = fadd double %conv9, %mul, !dbg !5041
  %conv30 = fptoui double %add to i8, !dbg !5042
  %25 = load i32, i32* %j, align 4, !dbg !5043
  %idxprom31 = sext i32 %25 to i64, !dbg !5044
  %26 = load i8*, i8** %dst.addr, align 8, !dbg !5044
  %arrayidx32 = getelementptr inbounds i8, i8* %26, i64 %idxprom31, !dbg !5044
  store i8 %conv30, i8* %arrayidx32, align 1, !dbg !5045
  br label %for.inc, !dbg !5046

for.inc:                                          ; preds = %cond.end
  %27 = load i32, i32* %j, align 4, !dbg !5047
  %inc = add nsw i32 %27, 1, !dbg !5047
  store i32 %inc, i32* %j, align 4, !dbg !5047
  br label %for.cond3, !dbg !5049, !llvm.loop !5050

for.end:                                          ; preds = %for.cond3
  %28 = load i64, i64* %dst_linesize.addr, align 8, !dbg !5052
  %29 = load i8*, i8** %dst.addr, align 8, !dbg !5054
  %add.ptr = getelementptr inbounds i8, i8* %29, i64 %28, !dbg !5054
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !5054
  %30 = load i64, i64* %top_linesize.addr, align 8, !dbg !5055
  %31 = load i8*, i8** %top.addr, align 8, !dbg !5056
  %add.ptr33 = getelementptr inbounds i8, i8* %31, i64 %30, !dbg !5056
  store i8* %add.ptr33, i8** %top.addr, align 8, !dbg !5056
  %32 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !5057
  %33 = load i8*, i8** %bottom.addr, align 8, !dbg !5058
  %add.ptr34 = getelementptr inbounds i8, i8* %33, i64 %32, !dbg !5058
  store i8* %add.ptr34, i8** %bottom.addr, align 8, !dbg !5058
  br label %for.inc35, !dbg !5059

for.inc35:                                        ; preds = %for.end
  %34 = load i32, i32* %i, align 4, !dbg !5060
  %inc36 = add nsw i32 %34, 1, !dbg !5060
  store i32 %inc36, i32* %i, align 4, !dbg !5060
  br label %for.cond, !dbg !5062, !llvm.loop !5063

for.end37:                                        ; preds = %for.cond
  ret void, !dbg !5065
}

; Function Attrs: nounwind uwtable
define internal void @blend_vividlight_8bit(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !5067 {
entry:
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !5068, metadata !905), !dbg !5069
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !5070, metadata !905), !dbg !5071
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !5072, metadata !905), !dbg !5073
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !5074, metadata !905), !dbg !5075
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !5076, metadata !905), !dbg !5077
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !5078, metadata !905), !dbg !5079
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !5080, metadata !905), !dbg !5081
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !5082, metadata !905), !dbg !5083
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !5084, metadata !905), !dbg !5085
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !5086, metadata !905), !dbg !5087
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !5088, metadata !905), !dbg !5089
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !5090, metadata !905), !dbg !5091
  %0 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !5092
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %0, i32 0, i32 1, !dbg !5093
  %1 = load double, double* %opacity1, align 8, !dbg !5093
  store double %1, double* %opacity, align 8, !dbg !5091
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5094, metadata !905), !dbg !5095
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5096, metadata !905), !dbg !5097
  store i32 0, i32* %i, align 4, !dbg !5098
  br label %for.cond, !dbg !5100

for.cond:                                         ; preds = %for.inc108, %entry
  %2 = load i32, i32* %i, align 4, !dbg !5101
  %conv = sext i32 %2 to i64, !dbg !5101
  %3 = load i64, i64* %height.addr, align 8, !dbg !5104
  %cmp = icmp slt i64 %conv, %3, !dbg !5105
  br i1 %cmp, label %for.body, label %for.end110, !dbg !5106

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !5107
  br label %for.cond3, !dbg !5111

for.cond3:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !5112
  %conv4 = sext i32 %4 to i64, !dbg !5112
  %5 = load i64, i64* %width.addr, align 8, !dbg !5115
  %cmp5 = icmp slt i64 %conv4, %5, !dbg !5116
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !5117

for.body7:                                        ; preds = %for.cond3
  %6 = load i32, i32* %j, align 4, !dbg !5118
  %idxprom = sext i32 %6 to i64, !dbg !5121
  %7 = load i8*, i8** %top.addr, align 8, !dbg !5121
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !5121
  %8 = load i8, i8* %arrayidx, align 1, !dbg !5121
  %conv8 = zext i8 %8 to i32, !dbg !5121
  %conv9 = sitofp i32 %conv8 to double, !dbg !5121
  %9 = load i32, i32* %j, align 4, !dbg !5122
  %idxprom10 = sext i32 %9 to i64, !dbg !5123
  %10 = load i8*, i8** %top.addr, align 8, !dbg !5123
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 %idxprom10, !dbg !5123
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !5123
  %conv12 = zext i8 %11 to i32, !dbg !5123
  %cmp13 = icmp slt i32 %conv12, 128, !dbg !5124
  br i1 %cmp13, label %cond.true, label %cond.false50, !dbg !5125

cond.true:                                        ; preds = %for.body7
  %12 = load i32, i32* %j, align 4, !dbg !5126
  %idxprom15 = sext i32 %12 to i64, !dbg !5128
  %13 = load i8*, i8** %top.addr, align 8, !dbg !5128
  %arrayidx16 = getelementptr inbounds i8, i8* %13, i64 %idxprom15, !dbg !5128
  %14 = load i8, i8* %arrayidx16, align 1, !dbg !5128
  %conv17 = zext i8 %14 to i32, !dbg !5128
  %mul = mul nsw i32 2, %conv17, !dbg !5129
  %cmp18 = icmp eq i32 %mul, 0, !dbg !5130
  br i1 %cmp18, label %cond.true20, label %cond.false, !dbg !5131

cond.true20:                                      ; preds = %cond.true
  %15 = load i32, i32* %j, align 4, !dbg !5132
  %idxprom21 = sext i32 %15 to i64, !dbg !5134
  %16 = load i8*, i8** %top.addr, align 8, !dbg !5134
  %arrayidx22 = getelementptr inbounds i8, i8* %16, i64 %idxprom21, !dbg !5134
  %17 = load i8, i8* %arrayidx22, align 1, !dbg !5134
  %conv23 = zext i8 %17 to i32, !dbg !5134
  %mul24 = mul nsw i32 2, %conv23, !dbg !5135
  br label %cond.end48, !dbg !5136

cond.false:                                       ; preds = %cond.true
  %18 = load i32, i32* %j, align 4, !dbg !5137
  %idxprom25 = sext i32 %18 to i64, !dbg !5139
  %19 = load i8*, i8** %bottom.addr, align 8, !dbg !5139
  %arrayidx26 = getelementptr inbounds i8, i8* %19, i64 %idxprom25, !dbg !5139
  %20 = load i8, i8* %arrayidx26, align 1, !dbg !5139
  %conv27 = zext i8 %20 to i32, !dbg !5140
  %sub = sub nsw i32 255, %conv27, !dbg !5141
  %shl = shl i32 %sub, 8, !dbg !5142
  %21 = load i32, i32* %j, align 4, !dbg !5143
  %idxprom28 = sext i32 %21 to i64, !dbg !5144
  %22 = load i8*, i8** %top.addr, align 8, !dbg !5144
  %arrayidx29 = getelementptr inbounds i8, i8* %22, i64 %idxprom28, !dbg !5144
  %23 = load i8, i8* %arrayidx29, align 1, !dbg !5144
  %conv30 = zext i8 %23 to i32, !dbg !5144
  %mul31 = mul nsw i32 2, %conv30, !dbg !5145
  %div = sdiv i32 %shl, %mul31, !dbg !5146
  %sub32 = sub nsw i32 255, %div, !dbg !5147
  %cmp33 = icmp sgt i32 0, %sub32, !dbg !5148
  br i1 %cmp33, label %cond.true35, label %cond.false36, !dbg !5149

cond.true35:                                      ; preds = %cond.false
  br label %cond.end, !dbg !5150

cond.false36:                                     ; preds = %cond.false
  %24 = load i32, i32* %j, align 4, !dbg !5152
  %idxprom37 = sext i32 %24 to i64, !dbg !5154
  %25 = load i8*, i8** %bottom.addr, align 8, !dbg !5154
  %arrayidx38 = getelementptr inbounds i8, i8* %25, i64 %idxprom37, !dbg !5154
  %26 = load i8, i8* %arrayidx38, align 1, !dbg !5154
  %conv39 = zext i8 %26 to i32, !dbg !5155
  %sub40 = sub nsw i32 255, %conv39, !dbg !5156
  %shl41 = shl i32 %sub40, 8, !dbg !5157
  %27 = load i32, i32* %j, align 4, !dbg !5158
  %idxprom42 = sext i32 %27 to i64, !dbg !5159
  %28 = load i8*, i8** %top.addr, align 8, !dbg !5159
  %arrayidx43 = getelementptr inbounds i8, i8* %28, i64 %idxprom42, !dbg !5159
  %29 = load i8, i8* %arrayidx43, align 1, !dbg !5159
  %conv44 = zext i8 %29 to i32, !dbg !5159
  %mul45 = mul nsw i32 2, %conv44, !dbg !5160
  %div46 = sdiv i32 %shl41, %mul45, !dbg !5161
  %sub47 = sub nsw i32 255, %div46, !dbg !5162
  br label %cond.end, !dbg !5163

cond.end:                                         ; preds = %cond.false36, %cond.true35
  %cond = phi i32 [ 0, %cond.true35 ], [ %sub47, %cond.false36 ], !dbg !5164
  br label %cond.end48, !dbg !5166

cond.end48:                                       ; preds = %cond.end, %cond.true20
  %cond49 = phi i32 [ %mul24, %cond.true20 ], [ %cond, %cond.end ], !dbg !5167
  br label %cond.end95, !dbg !5169

cond.false50:                                     ; preds = %for.body7
  %30 = load i32, i32* %j, align 4, !dbg !5170
  %idxprom51 = sext i32 %30 to i64, !dbg !5172
  %31 = load i8*, i8** %top.addr, align 8, !dbg !5172
  %arrayidx52 = getelementptr inbounds i8, i8* %31, i64 %idxprom51, !dbg !5172
  %32 = load i8, i8* %arrayidx52, align 1, !dbg !5172
  %conv53 = zext i8 %32 to i32, !dbg !5172
  %sub54 = sub nsw i32 %conv53, 128, !dbg !5173
  %mul55 = mul nsw i32 2, %sub54, !dbg !5174
  %cmp56 = icmp eq i32 %mul55, 255, !dbg !5175
  br i1 %cmp56, label %cond.true58, label %cond.false64, !dbg !5176

cond.true58:                                      ; preds = %cond.false50
  %33 = load i32, i32* %j, align 4, !dbg !5177
  %idxprom59 = sext i32 %33 to i64, !dbg !5179
  %34 = load i8*, i8** %top.addr, align 8, !dbg !5179
  %arrayidx60 = getelementptr inbounds i8, i8* %34, i64 %idxprom59, !dbg !5179
  %35 = load i8, i8* %arrayidx60, align 1, !dbg !5179
  %conv61 = zext i8 %35 to i32, !dbg !5179
  %sub62 = sub nsw i32 %conv61, 128, !dbg !5180
  %mul63 = mul nsw i32 2, %sub62, !dbg !5181
  br label %cond.end93, !dbg !5182

cond.false64:                                     ; preds = %cond.false50
  %36 = load i32, i32* %j, align 4, !dbg !5183
  %idxprom65 = sext i32 %36 to i64, !dbg !5185
  %37 = load i8*, i8** %bottom.addr, align 8, !dbg !5185
  %arrayidx66 = getelementptr inbounds i8, i8* %37, i64 %idxprom65, !dbg !5185
  %38 = load i8, i8* %arrayidx66, align 1, !dbg !5185
  %conv67 = zext i8 %38 to i32, !dbg !5186
  %shl68 = shl i32 %conv67, 8, !dbg !5187
  %39 = load i32, i32* %j, align 4, !dbg !5188
  %idxprom69 = sext i32 %39 to i64, !dbg !5189
  %40 = load i8*, i8** %top.addr, align 8, !dbg !5189
  %arrayidx70 = getelementptr inbounds i8, i8* %40, i64 %idxprom69, !dbg !5189
  %41 = load i8, i8* %arrayidx70, align 1, !dbg !5189
  %conv71 = zext i8 %41 to i32, !dbg !5189
  %sub72 = sub nsw i32 %conv71, 128, !dbg !5190
  %mul73 = mul nsw i32 2, %sub72, !dbg !5191
  %sub74 = sub nsw i32 255, %mul73, !dbg !5192
  %div75 = sdiv i32 %shl68, %sub74, !dbg !5193
  %cmp76 = icmp sgt i32 255, %div75, !dbg !5194
  br i1 %cmp76, label %cond.true78, label %cond.false90, !dbg !5195

cond.true78:                                      ; preds = %cond.false64
  %42 = load i32, i32* %j, align 4, !dbg !5196
  %idxprom79 = sext i32 %42 to i64, !dbg !5198
  %43 = load i8*, i8** %bottom.addr, align 8, !dbg !5198
  %arrayidx80 = getelementptr inbounds i8, i8* %43, i64 %idxprom79, !dbg !5198
  %44 = load i8, i8* %arrayidx80, align 1, !dbg !5198
  %conv81 = zext i8 %44 to i32, !dbg !5199
  %shl82 = shl i32 %conv81, 8, !dbg !5200
  %45 = load i32, i32* %j, align 4, !dbg !5201
  %idxprom83 = sext i32 %45 to i64, !dbg !5202
  %46 = load i8*, i8** %top.addr, align 8, !dbg !5202
  %arrayidx84 = getelementptr inbounds i8, i8* %46, i64 %idxprom83, !dbg !5202
  %47 = load i8, i8* %arrayidx84, align 1, !dbg !5202
  %conv85 = zext i8 %47 to i32, !dbg !5202
  %sub86 = sub nsw i32 %conv85, 128, !dbg !5203
  %mul87 = mul nsw i32 2, %sub86, !dbg !5204
  %sub88 = sub nsw i32 255, %mul87, !dbg !5205
  %div89 = sdiv i32 %shl82, %sub88, !dbg !5206
  br label %cond.end91, !dbg !5207

cond.false90:                                     ; preds = %cond.false64
  br label %cond.end91, !dbg !5208

cond.end91:                                       ; preds = %cond.false90, %cond.true78
  %cond92 = phi i32 [ %div89, %cond.true78 ], [ 255, %cond.false90 ], !dbg !5210
  br label %cond.end93, !dbg !5212

cond.end93:                                       ; preds = %cond.end91, %cond.true58
  %cond94 = phi i32 [ %mul63, %cond.true58 ], [ %cond92, %cond.end91 ], !dbg !5213
  br label %cond.end95, !dbg !5215

cond.end95:                                       ; preds = %cond.end93, %cond.end48
  %cond96 = phi i32 [ %cond49, %cond.end48 ], [ %cond94, %cond.end93 ], !dbg !5216
  %48 = load i32, i32* %j, align 4, !dbg !5218
  %idxprom97 = sext i32 %48 to i64, !dbg !5219
  %49 = load i8*, i8** %top.addr, align 8, !dbg !5219
  %arrayidx98 = getelementptr inbounds i8, i8* %49, i64 %idxprom97, !dbg !5219
  %50 = load i8, i8* %arrayidx98, align 1, !dbg !5219
  %conv99 = zext i8 %50 to i32, !dbg !5219
  %sub100 = sub nsw i32 %cond96, %conv99, !dbg !5220
  %conv101 = sitofp i32 %sub100 to double, !dbg !5221
  %51 = load double, double* %opacity, align 8, !dbg !5222
  %mul102 = fmul double %conv101, %51, !dbg !5223
  %add = fadd double %conv9, %mul102, !dbg !5224
  %conv103 = fptoui double %add to i8, !dbg !5225
  %52 = load i32, i32* %j, align 4, !dbg !5226
  %idxprom104 = sext i32 %52 to i64, !dbg !5227
  %53 = load i8*, i8** %dst.addr, align 8, !dbg !5227
  %arrayidx105 = getelementptr inbounds i8, i8* %53, i64 %idxprom104, !dbg !5227
  store i8 %conv103, i8* %arrayidx105, align 1, !dbg !5228
  br label %for.inc, !dbg !5229

for.inc:                                          ; preds = %cond.end95
  %54 = load i32, i32* %j, align 4, !dbg !5230
  %inc = add nsw i32 %54, 1, !dbg !5230
  store i32 %inc, i32* %j, align 4, !dbg !5230
  br label %for.cond3, !dbg !5232, !llvm.loop !5233

for.end:                                          ; preds = %for.cond3
  %55 = load i64, i64* %dst_linesize.addr, align 8, !dbg !5235
  %56 = load i8*, i8** %dst.addr, align 8, !dbg !5237
  %add.ptr = getelementptr inbounds i8, i8* %56, i64 %55, !dbg !5237
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !5237
  %57 = load i64, i64* %top_linesize.addr, align 8, !dbg !5238
  %58 = load i8*, i8** %top.addr, align 8, !dbg !5239
  %add.ptr106 = getelementptr inbounds i8, i8* %58, i64 %57, !dbg !5239
  store i8* %add.ptr106, i8** %top.addr, align 8, !dbg !5239
  %59 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !5240
  %60 = load i8*, i8** %bottom.addr, align 8, !dbg !5241
  %add.ptr107 = getelementptr inbounds i8, i8* %60, i64 %59, !dbg !5241
  store i8* %add.ptr107, i8** %bottom.addr, align 8, !dbg !5241
  br label %for.inc108, !dbg !5242

for.inc108:                                       ; preds = %for.end
  %61 = load i32, i32* %i, align 4, !dbg !5243
  %inc109 = add nsw i32 %61, 1, !dbg !5243
  store i32 %inc109, i32* %i, align 4, !dbg !5243
  br label %for.cond, !dbg !5245, !llvm.loop !5246

for.end110:                                       ; preds = %for.cond
  ret void, !dbg !5248
}

; Function Attrs: nounwind uwtable
define internal void @blend_xor_8bit(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !5250 {
entry:
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !5251, metadata !905), !dbg !5252
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !5253, metadata !905), !dbg !5254
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !5255, metadata !905), !dbg !5256
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !5257, metadata !905), !dbg !5258
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !5259, metadata !905), !dbg !5260
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !5261, metadata !905), !dbg !5262
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !5263, metadata !905), !dbg !5264
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !5265, metadata !905), !dbg !5266
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !5267, metadata !905), !dbg !5268
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !5269, metadata !905), !dbg !5270
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !5271, metadata !905), !dbg !5272
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !5273, metadata !905), !dbg !5274
  %0 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !5275
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %0, i32 0, i32 1, !dbg !5276
  %1 = load double, double* %opacity1, align 8, !dbg !5276
  store double %1, double* %opacity, align 8, !dbg !5274
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5277, metadata !905), !dbg !5278
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5279, metadata !905), !dbg !5280
  store i32 0, i32* %i, align 4, !dbg !5281
  br label %for.cond, !dbg !5283

for.cond:                                         ; preds = %for.inc25, %entry
  %2 = load i32, i32* %i, align 4, !dbg !5284
  %conv = sext i32 %2 to i64, !dbg !5284
  %3 = load i64, i64* %height.addr, align 8, !dbg !5287
  %cmp = icmp slt i64 %conv, %3, !dbg !5288
  br i1 %cmp, label %for.body, label %for.end27, !dbg !5289

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !5290
  br label %for.cond3, !dbg !5294

for.cond3:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %j, align 4, !dbg !5295
  %conv4 = sext i32 %4 to i64, !dbg !5295
  %5 = load i64, i64* %width.addr, align 8, !dbg !5298
  %cmp5 = icmp slt i64 %conv4, %5, !dbg !5299
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !5300

for.body7:                                        ; preds = %for.cond3
  %6 = load i32, i32* %j, align 4, !dbg !5301
  %idxprom = sext i32 %6 to i64, !dbg !5304
  %7 = load i8*, i8** %top.addr, align 8, !dbg !5304
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !5304
  %8 = load i8, i8* %arrayidx, align 1, !dbg !5304
  %conv8 = zext i8 %8 to i32, !dbg !5304
  %conv9 = sitofp i32 %conv8 to double, !dbg !5304
  %9 = load i32, i32* %j, align 4, !dbg !5305
  %idxprom10 = sext i32 %9 to i64, !dbg !5306
  %10 = load i8*, i8** %top.addr, align 8, !dbg !5306
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 %idxprom10, !dbg !5306
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !5306
  %conv12 = zext i8 %11 to i32, !dbg !5306
  %12 = load i32, i32* %j, align 4, !dbg !5307
  %idxprom13 = sext i32 %12 to i64, !dbg !5308
  %13 = load i8*, i8** %bottom.addr, align 8, !dbg !5308
  %arrayidx14 = getelementptr inbounds i8, i8* %13, i64 %idxprom13, !dbg !5308
  %14 = load i8, i8* %arrayidx14, align 1, !dbg !5308
  %conv15 = zext i8 %14 to i32, !dbg !5308
  %xor = xor i32 %conv12, %conv15, !dbg !5309
  %15 = load i32, i32* %j, align 4, !dbg !5310
  %idxprom16 = sext i32 %15 to i64, !dbg !5311
  %16 = load i8*, i8** %top.addr, align 8, !dbg !5311
  %arrayidx17 = getelementptr inbounds i8, i8* %16, i64 %idxprom16, !dbg !5311
  %17 = load i8, i8* %arrayidx17, align 1, !dbg !5311
  %conv18 = zext i8 %17 to i32, !dbg !5311
  %sub = sub nsw i32 %xor, %conv18, !dbg !5312
  %conv19 = sitofp i32 %sub to double, !dbg !5313
  %18 = load double, double* %opacity, align 8, !dbg !5314
  %mul = fmul double %conv19, %18, !dbg !5315
  %add = fadd double %conv9, %mul, !dbg !5316
  %conv20 = fptoui double %add to i8, !dbg !5304
  %19 = load i32, i32* %j, align 4, !dbg !5317
  %idxprom21 = sext i32 %19 to i64, !dbg !5318
  %20 = load i8*, i8** %dst.addr, align 8, !dbg !5318
  %arrayidx22 = getelementptr inbounds i8, i8* %20, i64 %idxprom21, !dbg !5318
  store i8 %conv20, i8* %arrayidx22, align 1, !dbg !5319
  br label %for.inc, !dbg !5320

for.inc:                                          ; preds = %for.body7
  %21 = load i32, i32* %j, align 4, !dbg !5321
  %inc = add nsw i32 %21, 1, !dbg !5321
  store i32 %inc, i32* %j, align 4, !dbg !5321
  br label %for.cond3, !dbg !5323, !llvm.loop !5324

for.end:                                          ; preds = %for.cond3
  %22 = load i64, i64* %dst_linesize.addr, align 8, !dbg !5326
  %23 = load i8*, i8** %dst.addr, align 8, !dbg !5328
  %add.ptr = getelementptr inbounds i8, i8* %23, i64 %22, !dbg !5328
  store i8* %add.ptr, i8** %dst.addr, align 8, !dbg !5328
  %24 = load i64, i64* %top_linesize.addr, align 8, !dbg !5329
  %25 = load i8*, i8** %top.addr, align 8, !dbg !5330
  %add.ptr23 = getelementptr inbounds i8, i8* %25, i64 %24, !dbg !5330
  store i8* %add.ptr23, i8** %top.addr, align 8, !dbg !5330
  %26 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !5331
  %27 = load i8*, i8** %bottom.addr, align 8, !dbg !5332
  %add.ptr24 = getelementptr inbounds i8, i8* %27, i64 %26, !dbg !5332
  store i8* %add.ptr24, i8** %bottom.addr, align 8, !dbg !5332
  br label %for.inc25, !dbg !5333

for.inc25:                                        ; preds = %for.end
  %28 = load i32, i32* %i, align 4, !dbg !5334
  %inc26 = add nsw i32 %28, 1, !dbg !5334
  store i32 %inc26, i32* %i, align 4, !dbg !5334
  br label %for.cond, !dbg !5336, !llvm.loop !5337

for.end27:                                        ; preds = %for.cond
  ret void, !dbg !5339
}

; Function Attrs: nounwind uwtable
define internal void @blend_addition_10bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !5341 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !5342, metadata !905), !dbg !5343
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !5344, metadata !905), !dbg !5345
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !5346, metadata !905), !dbg !5347
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !5348, metadata !905), !dbg !5349
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !5350, metadata !905), !dbg !5351
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !5352, metadata !905), !dbg !5353
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !5354, metadata !905), !dbg !5355
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !5356, metadata !905), !dbg !5357
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !5358, metadata !905), !dbg !5359
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !5360, metadata !905), !dbg !5361
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !5362, metadata !905), !dbg !5363
  call void @llvm.dbg.declare(metadata i16** %top, metadata !5364, metadata !905), !dbg !5365
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !5366
  %1 = bitcast i8* %0 to i16*, !dbg !5367
  store i16* %1, i16** %top, align 8, !dbg !5365
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !5368, metadata !905), !dbg !5369
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !5370
  %3 = bitcast i8* %2 to i16*, !dbg !5371
  store i16* %3, i16** %bottom, align 8, !dbg !5369
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !5372, metadata !905), !dbg !5373
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !5374
  %5 = bitcast i8* %4 to i16*, !dbg !5375
  store i16* %5, i16** %dst, align 8, !dbg !5373
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !5376, metadata !905), !dbg !5377
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !5378
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !5379
  %7 = load double, double* %opacity1, align 8, !dbg !5379
  store double %7, double* %opacity, align 8, !dbg !5377
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5380, metadata !905), !dbg !5381
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5382, metadata !905), !dbg !5383
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !5384
  %div = sdiv i64 %8, 2, !dbg !5384
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !5384
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !5385
  %div2 = sdiv i64 %9, 2, !dbg !5385
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !5385
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !5386
  %div3 = sdiv i64 %10, 2, !dbg !5386
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !5386
  store i32 0, i32* %i, align 4, !dbg !5387
  br label %for.cond, !dbg !5389

for.cond:                                         ; preds = %for.inc37, %entry
  %11 = load i32, i32* %i, align 4, !dbg !5390
  %conv = sext i32 %11 to i64, !dbg !5390
  %12 = load i64, i64* %height.addr, align 8, !dbg !5393
  %cmp = icmp slt i64 %conv, %12, !dbg !5394
  br i1 %cmp, label %for.body, label %for.end39, !dbg !5395

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !5396
  br label %for.cond5, !dbg !5400

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !5401
  %conv6 = sext i32 %13 to i64, !dbg !5401
  %14 = load i64, i64* %width.addr, align 8, !dbg !5404
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !5405
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !5406

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !5407
  %idxprom = sext i32 %15 to i64, !dbg !5410
  %16 = load i16*, i16** %top, align 8, !dbg !5410
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !5410
  %17 = load i16, i16* %arrayidx, align 2, !dbg !5410
  %conv10 = zext i16 %17 to i32, !dbg !5410
  %conv11 = sitofp i32 %conv10 to double, !dbg !5410
  %18 = load i32, i32* %j, align 4, !dbg !5411
  %idxprom12 = sext i32 %18 to i64, !dbg !5412
  %19 = load i16*, i16** %top, align 8, !dbg !5412
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !5412
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !5412
  %conv14 = zext i16 %20 to i32, !dbg !5412
  %21 = load i32, i32* %j, align 4, !dbg !5413
  %idxprom15 = sext i32 %21 to i64, !dbg !5414
  %22 = load i16*, i16** %bottom, align 8, !dbg !5414
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !5414
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !5414
  %conv17 = zext i16 %23 to i32, !dbg !5414
  %add = add nsw i32 %conv14, %conv17, !dbg !5415
  %cmp18 = icmp sgt i32 1023, %add, !dbg !5416
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !5417

cond.true:                                        ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !5418
  %idxprom20 = sext i32 %24 to i64, !dbg !5420
  %25 = load i16*, i16** %top, align 8, !dbg !5420
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !5420
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !5420
  %conv22 = zext i16 %26 to i32, !dbg !5420
  %27 = load i32, i32* %j, align 4, !dbg !5421
  %idxprom23 = sext i32 %27 to i64, !dbg !5422
  %28 = load i16*, i16** %bottom, align 8, !dbg !5422
  %arrayidx24 = getelementptr inbounds i16, i16* %28, i64 %idxprom23, !dbg !5422
  %29 = load i16, i16* %arrayidx24, align 2, !dbg !5422
  %conv25 = zext i16 %29 to i32, !dbg !5422
  %add26 = add nsw i32 %conv22, %conv25, !dbg !5423
  br label %cond.end, !dbg !5424

cond.false:                                       ; preds = %for.body9
  br label %cond.end, !dbg !5425

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add26, %cond.true ], [ 1023, %cond.false ], !dbg !5427
  %30 = load i32, i32* %j, align 4, !dbg !5429
  %idxprom27 = sext i32 %30 to i64, !dbg !5430
  %31 = load i16*, i16** %top, align 8, !dbg !5430
  %arrayidx28 = getelementptr inbounds i16, i16* %31, i64 %idxprom27, !dbg !5430
  %32 = load i16, i16* %arrayidx28, align 2, !dbg !5430
  %conv29 = zext i16 %32 to i32, !dbg !5430
  %sub = sub nsw i32 %cond, %conv29, !dbg !5431
  %conv30 = sitofp i32 %sub to double, !dbg !5432
  %33 = load double, double* %opacity, align 8, !dbg !5433
  %mul = fmul double %conv30, %33, !dbg !5434
  %add31 = fadd double %conv11, %mul, !dbg !5435
  %conv32 = fptoui double %add31 to i16, !dbg !5436
  %34 = load i32, i32* %j, align 4, !dbg !5437
  %idxprom33 = sext i32 %34 to i64, !dbg !5438
  %35 = load i16*, i16** %dst, align 8, !dbg !5438
  %arrayidx34 = getelementptr inbounds i16, i16* %35, i64 %idxprom33, !dbg !5438
  store i16 %conv32, i16* %arrayidx34, align 2, !dbg !5439
  br label %for.inc, !dbg !5440

for.inc:                                          ; preds = %cond.end
  %36 = load i32, i32* %j, align 4, !dbg !5441
  %inc = add nsw i32 %36, 1, !dbg !5441
  store i32 %inc, i32* %j, align 4, !dbg !5441
  br label %for.cond5, !dbg !5443, !llvm.loop !5444

for.end:                                          ; preds = %for.cond5
  %37 = load i64, i64* %dst_linesize.addr, align 8, !dbg !5446
  %38 = load i16*, i16** %dst, align 8, !dbg !5448
  %add.ptr = getelementptr inbounds i16, i16* %38, i64 %37, !dbg !5448
  store i16* %add.ptr, i16** %dst, align 8, !dbg !5448
  %39 = load i64, i64* %top_linesize.addr, align 8, !dbg !5449
  %40 = load i16*, i16** %top, align 8, !dbg !5450
  %add.ptr35 = getelementptr inbounds i16, i16* %40, i64 %39, !dbg !5450
  store i16* %add.ptr35, i16** %top, align 8, !dbg !5450
  %41 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !5451
  %42 = load i16*, i16** %bottom, align 8, !dbg !5452
  %add.ptr36 = getelementptr inbounds i16, i16* %42, i64 %41, !dbg !5452
  store i16* %add.ptr36, i16** %bottom, align 8, !dbg !5452
  br label %for.inc37, !dbg !5453

for.inc37:                                        ; preds = %for.end
  %43 = load i32, i32* %i, align 4, !dbg !5454
  %inc38 = add nsw i32 %43, 1, !dbg !5454
  store i32 %inc38, i32* %i, align 4, !dbg !5454
  br label %for.cond, !dbg !5456, !llvm.loop !5457

for.end39:                                        ; preds = %for.cond
  ret void, !dbg !5459
}

; Function Attrs: nounwind uwtable
define internal void @blend_grainmerge_10bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !5461 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !5462, metadata !905), !dbg !5466
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !5475, metadata !905), !dbg !5476
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !5477, metadata !905), !dbg !5478
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !5479, metadata !905), !dbg !5480
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !5481, metadata !905), !dbg !5482
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !5483, metadata !905), !dbg !5484
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !5485, metadata !905), !dbg !5486
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !5487, metadata !905), !dbg !5488
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !5489, metadata !905), !dbg !5490
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !5491, metadata !905), !dbg !5492
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !5493, metadata !905), !dbg !5494
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !5495, metadata !905), !dbg !5496
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !5497, metadata !905), !dbg !5498
  call void @llvm.dbg.declare(metadata i16** %top, metadata !5499, metadata !905), !dbg !5500
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !5501
  %1 = bitcast i8* %0 to i16*, !dbg !5502
  store i16* %1, i16** %top, align 8, !dbg !5500
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !5503, metadata !905), !dbg !5504
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !5505
  %3 = bitcast i8* %2 to i16*, !dbg !5506
  store i16* %3, i16** %bottom, align 8, !dbg !5504
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !5507, metadata !905), !dbg !5508
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !5509
  %5 = bitcast i8* %4 to i16*, !dbg !5510
  store i16* %5, i16** %dst, align 8, !dbg !5508
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !5511, metadata !905), !dbg !5512
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !5513
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !5514
  %7 = load double, double* %opacity1, align 8, !dbg !5514
  store double %7, double* %opacity, align 8, !dbg !5512
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5515, metadata !905), !dbg !5516
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5517, metadata !905), !dbg !5518
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !5519
  %div = sdiv i64 %8, 2, !dbg !5519
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !5519
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !5520
  %div2 = sdiv i64 %9, 2, !dbg !5520
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !5520
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !5521
  %div3 = sdiv i64 %10, 2, !dbg !5521
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !5521
  store i32 0, i32* %i, align 4, !dbg !5522
  br label %for.cond, !dbg !5523

for.cond:                                         ; preds = %for.inc29, %entry
  %11 = load i32, i32* %i, align 4, !dbg !5524
  %conv = sext i32 %11 to i64, !dbg !5524
  %12 = load i64, i64* %height.addr, align 8, !dbg !5526
  %cmp = icmp slt i64 %conv, %12, !dbg !5527
  br i1 %cmp, label %for.body, label %for.end31, !dbg !5528

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !5529
  br label %for.cond5, !dbg !5531

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !5532
  %conv6 = sext i32 %13 to i64, !dbg !5532
  %14 = load i64, i64* %width.addr, align 8, !dbg !5534
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !5535
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !5536

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !5537
  %idxprom = sext i32 %15 to i64, !dbg !5538
  %16 = load i16*, i16** %top, align 8, !dbg !5538
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !5538
  %17 = load i16, i16* %arrayidx, align 2, !dbg !5538
  %conv10 = zext i16 %17 to i32, !dbg !5538
  %conv11 = sitofp i32 %conv10 to double, !dbg !5538
  %18 = load i32, i32* %j, align 4, !dbg !5539
  %idxprom12 = sext i32 %18 to i64, !dbg !5540
  %19 = load i16*, i16** %top, align 8, !dbg !5540
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !5540
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !5540
  %conv14 = zext i16 %20 to i32, !dbg !5540
  %21 = load i32, i32* %j, align 4, !dbg !5541
  %idxprom15 = sext i32 %21 to i64, !dbg !5542
  %22 = load i16*, i16** %bottom, align 8, !dbg !5542
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !5542
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !5542
  %conv17 = zext i16 %23 to i32, !dbg !5542
  %add = add nsw i32 %conv14, %conv17, !dbg !5543
  %sub = sub nsw i32 %add, 512, !dbg !5544
  store i32 %sub, i32* %a.addr.i, align 4, !dbg !5545
  store i32 10, i32* %p.addr.i, align 4, !dbg !5545
  %24 = load i32, i32* %a.addr.i, align 4, !dbg !5546
  %25 = load i32, i32* %p.addr.i, align 4, !dbg !5548
  %shl.i = shl i32 1, %25, !dbg !5549
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !5550
  %neg.i = xor i32 %sub.i, -1, !dbg !5551
  %and.i = and i32 %24, %neg.i, !dbg !5552
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !5552
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !5553

if.then.i:                                        ; preds = %for.body9
  %26 = load i32, i32* %a.addr.i, align 4, !dbg !5554
  %neg1.i = xor i32 %26, -1, !dbg !5556
  %shr.i = ashr i32 %neg1.i, 31, !dbg !5557
  %27 = load i32, i32* %p.addr.i, align 4, !dbg !5558
  %shl2.i = shl i32 1, %27, !dbg !5559
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !5560
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !5561
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !5562
  br label %av_clip_uintp2_c.exit, !dbg !5562

if.else.i:                                        ; preds = %for.body9
  %28 = load i32, i32* %a.addr.i, align 4, !dbg !5563
  store i32 %28, i32* %retval.i, align 4, !dbg !5564
  br label %av_clip_uintp2_c.exit, !dbg !5564

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %29 = load i32, i32* %retval.i, align 4, !dbg !5565
  %30 = load i32, i32* %j, align 4, !dbg !5566
  %idxprom18 = sext i32 %30 to i64, !dbg !5567
  %31 = load i16*, i16** %top, align 8, !dbg !5567
  %arrayidx19 = getelementptr inbounds i16, i16* %31, i64 %idxprom18, !dbg !5567
  %32 = load i16, i16* %arrayidx19, align 2, !dbg !5567
  %conv20 = zext i16 %32 to i32, !dbg !5567
  %sub21 = sub nsw i32 %29, %conv20, !dbg !5568
  %conv22 = sitofp i32 %sub21 to double, !dbg !5569
  %33 = load double, double* %opacity, align 8, !dbg !5570
  %mul = fmul double %conv22, %33, !dbg !5571
  %add23 = fadd double %conv11, %mul, !dbg !5572
  %conv24 = fptoui double %add23 to i16, !dbg !5538
  %34 = load i32, i32* %j, align 4, !dbg !5573
  %idxprom25 = sext i32 %34 to i64, !dbg !5574
  %35 = load i16*, i16** %dst, align 8, !dbg !5574
  %arrayidx26 = getelementptr inbounds i16, i16* %35, i64 %idxprom25, !dbg !5574
  store i16 %conv24, i16* %arrayidx26, align 2, !dbg !5575
  br label %for.inc, !dbg !5576

for.inc:                                          ; preds = %av_clip_uintp2_c.exit
  %36 = load i32, i32* %j, align 4, !dbg !5577
  %inc = add nsw i32 %36, 1, !dbg !5577
  store i32 %inc, i32* %j, align 4, !dbg !5577
  br label %for.cond5, !dbg !5579, !llvm.loop !5580

for.end:                                          ; preds = %for.cond5
  %37 = load i64, i64* %dst_linesize.addr, align 8, !dbg !5582
  %38 = load i16*, i16** %dst, align 8, !dbg !5584
  %add.ptr = getelementptr inbounds i16, i16* %38, i64 %37, !dbg !5584
  store i16* %add.ptr, i16** %dst, align 8, !dbg !5584
  %39 = load i64, i64* %top_linesize.addr, align 8, !dbg !5585
  %40 = load i16*, i16** %top, align 8, !dbg !5586
  %add.ptr27 = getelementptr inbounds i16, i16* %40, i64 %39, !dbg !5586
  store i16* %add.ptr27, i16** %top, align 8, !dbg !5586
  %41 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !5587
  %42 = load i16*, i16** %bottom, align 8, !dbg !5588
  %add.ptr28 = getelementptr inbounds i16, i16* %42, i64 %41, !dbg !5588
  store i16* %add.ptr28, i16** %bottom, align 8, !dbg !5588
  br label %for.inc29, !dbg !5589

for.inc29:                                        ; preds = %for.end
  %43 = load i32, i32* %i, align 4, !dbg !5590
  %inc30 = add nsw i32 %43, 1, !dbg !5590
  store i32 %inc30, i32* %i, align 4, !dbg !5590
  br label %for.cond, !dbg !5592, !llvm.loop !5593

for.end31:                                        ; preds = %for.cond
  ret void, !dbg !5595
}

; Function Attrs: nounwind uwtable
define internal void @blend_and_10bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !5597 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !5598, metadata !905), !dbg !5599
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !5600, metadata !905), !dbg !5601
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !5602, metadata !905), !dbg !5603
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !5604, metadata !905), !dbg !5605
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !5606, metadata !905), !dbg !5607
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !5608, metadata !905), !dbg !5609
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !5610, metadata !905), !dbg !5611
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !5612, metadata !905), !dbg !5613
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !5614, metadata !905), !dbg !5615
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !5616, metadata !905), !dbg !5617
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !5618, metadata !905), !dbg !5619
  call void @llvm.dbg.declare(metadata i16** %top, metadata !5620, metadata !905), !dbg !5621
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !5622
  %1 = bitcast i8* %0 to i16*, !dbg !5623
  store i16* %1, i16** %top, align 8, !dbg !5621
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !5624, metadata !905), !dbg !5625
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !5626
  %3 = bitcast i8* %2 to i16*, !dbg !5627
  store i16* %3, i16** %bottom, align 8, !dbg !5625
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !5628, metadata !905), !dbg !5629
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !5630
  %5 = bitcast i8* %4 to i16*, !dbg !5631
  store i16* %5, i16** %dst, align 8, !dbg !5629
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !5632, metadata !905), !dbg !5633
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !5634
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !5635
  %7 = load double, double* %opacity1, align 8, !dbg !5635
  store double %7, double* %opacity, align 8, !dbg !5633
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5636, metadata !905), !dbg !5637
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5638, metadata !905), !dbg !5639
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !5640
  %div = sdiv i64 %8, 2, !dbg !5640
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !5640
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !5641
  %div2 = sdiv i64 %9, 2, !dbg !5641
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !5641
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !5642
  %div3 = sdiv i64 %10, 2, !dbg !5642
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !5642
  store i32 0, i32* %i, align 4, !dbg !5643
  br label %for.cond, !dbg !5645

for.cond:                                         ; preds = %for.inc27, %entry
  %11 = load i32, i32* %i, align 4, !dbg !5646
  %conv = sext i32 %11 to i64, !dbg !5646
  %12 = load i64, i64* %height.addr, align 8, !dbg !5649
  %cmp = icmp slt i64 %conv, %12, !dbg !5650
  br i1 %cmp, label %for.body, label %for.end29, !dbg !5651

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !5652
  br label %for.cond5, !dbg !5656

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !5657
  %conv6 = sext i32 %13 to i64, !dbg !5657
  %14 = load i64, i64* %width.addr, align 8, !dbg !5660
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !5661
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !5662

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !5663
  %idxprom = sext i32 %15 to i64, !dbg !5666
  %16 = load i16*, i16** %top, align 8, !dbg !5666
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !5666
  %17 = load i16, i16* %arrayidx, align 2, !dbg !5666
  %conv10 = zext i16 %17 to i32, !dbg !5666
  %conv11 = sitofp i32 %conv10 to double, !dbg !5666
  %18 = load i32, i32* %j, align 4, !dbg !5667
  %idxprom12 = sext i32 %18 to i64, !dbg !5668
  %19 = load i16*, i16** %top, align 8, !dbg !5668
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !5668
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !5668
  %conv14 = zext i16 %20 to i32, !dbg !5668
  %21 = load i32, i32* %j, align 4, !dbg !5669
  %idxprom15 = sext i32 %21 to i64, !dbg !5670
  %22 = load i16*, i16** %bottom, align 8, !dbg !5670
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !5670
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !5670
  %conv17 = zext i16 %23 to i32, !dbg !5670
  %and = and i32 %conv14, %conv17, !dbg !5671
  %24 = load i32, i32* %j, align 4, !dbg !5672
  %idxprom18 = sext i32 %24 to i64, !dbg !5673
  %25 = load i16*, i16** %top, align 8, !dbg !5673
  %arrayidx19 = getelementptr inbounds i16, i16* %25, i64 %idxprom18, !dbg !5673
  %26 = load i16, i16* %arrayidx19, align 2, !dbg !5673
  %conv20 = zext i16 %26 to i32, !dbg !5673
  %sub = sub nsw i32 %and, %conv20, !dbg !5674
  %conv21 = sitofp i32 %sub to double, !dbg !5675
  %27 = load double, double* %opacity, align 8, !dbg !5676
  %mul = fmul double %conv21, %27, !dbg !5677
  %add = fadd double %conv11, %mul, !dbg !5678
  %conv22 = fptoui double %add to i16, !dbg !5666
  %28 = load i32, i32* %j, align 4, !dbg !5679
  %idxprom23 = sext i32 %28 to i64, !dbg !5680
  %29 = load i16*, i16** %dst, align 8, !dbg !5680
  %arrayidx24 = getelementptr inbounds i16, i16* %29, i64 %idxprom23, !dbg !5680
  store i16 %conv22, i16* %arrayidx24, align 2, !dbg !5681
  br label %for.inc, !dbg !5682

for.inc:                                          ; preds = %for.body9
  %30 = load i32, i32* %j, align 4, !dbg !5683
  %inc = add nsw i32 %30, 1, !dbg !5683
  store i32 %inc, i32* %j, align 4, !dbg !5683
  br label %for.cond5, !dbg !5685, !llvm.loop !5686

for.end:                                          ; preds = %for.cond5
  %31 = load i64, i64* %dst_linesize.addr, align 8, !dbg !5688
  %32 = load i16*, i16** %dst, align 8, !dbg !5690
  %add.ptr = getelementptr inbounds i16, i16* %32, i64 %31, !dbg !5690
  store i16* %add.ptr, i16** %dst, align 8, !dbg !5690
  %33 = load i64, i64* %top_linesize.addr, align 8, !dbg !5691
  %34 = load i16*, i16** %top, align 8, !dbg !5692
  %add.ptr25 = getelementptr inbounds i16, i16* %34, i64 %33, !dbg !5692
  store i16* %add.ptr25, i16** %top, align 8, !dbg !5692
  %35 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !5693
  %36 = load i16*, i16** %bottom, align 8, !dbg !5694
  %add.ptr26 = getelementptr inbounds i16, i16* %36, i64 %35, !dbg !5694
  store i16* %add.ptr26, i16** %bottom, align 8, !dbg !5694
  br label %for.inc27, !dbg !5695

for.inc27:                                        ; preds = %for.end
  %37 = load i32, i32* %i, align 4, !dbg !5696
  %inc28 = add nsw i32 %37, 1, !dbg !5696
  store i32 %inc28, i32* %i, align 4, !dbg !5696
  br label %for.cond, !dbg !5698, !llvm.loop !5699

for.end29:                                        ; preds = %for.cond
  ret void, !dbg !5701
}

; Function Attrs: nounwind uwtable
define internal void @blend_average_10bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !5703 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !5704, metadata !905), !dbg !5705
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !5706, metadata !905), !dbg !5707
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !5708, metadata !905), !dbg !5709
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !5710, metadata !905), !dbg !5711
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !5712, metadata !905), !dbg !5713
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !5714, metadata !905), !dbg !5715
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !5716, metadata !905), !dbg !5717
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !5718, metadata !905), !dbg !5719
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !5720, metadata !905), !dbg !5721
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !5722, metadata !905), !dbg !5723
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !5724, metadata !905), !dbg !5725
  call void @llvm.dbg.declare(metadata i16** %top, metadata !5726, metadata !905), !dbg !5727
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !5728
  %1 = bitcast i8* %0 to i16*, !dbg !5729
  store i16* %1, i16** %top, align 8, !dbg !5727
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !5730, metadata !905), !dbg !5731
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !5732
  %3 = bitcast i8* %2 to i16*, !dbg !5733
  store i16* %3, i16** %bottom, align 8, !dbg !5731
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !5734, metadata !905), !dbg !5735
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !5736
  %5 = bitcast i8* %4 to i16*, !dbg !5737
  store i16* %5, i16** %dst, align 8, !dbg !5735
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !5738, metadata !905), !dbg !5739
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !5740
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !5741
  %7 = load double, double* %opacity1, align 8, !dbg !5741
  store double %7, double* %opacity, align 8, !dbg !5739
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5742, metadata !905), !dbg !5743
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5744, metadata !905), !dbg !5745
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !5746
  %div = sdiv i64 %8, 2, !dbg !5746
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !5746
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !5747
  %div2 = sdiv i64 %9, 2, !dbg !5747
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !5747
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !5748
  %div3 = sdiv i64 %10, 2, !dbg !5748
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !5748
  store i32 0, i32* %i, align 4, !dbg !5749
  br label %for.cond, !dbg !5751

for.cond:                                         ; preds = %for.inc29, %entry
  %11 = load i32, i32* %i, align 4, !dbg !5752
  %conv = sext i32 %11 to i64, !dbg !5752
  %12 = load i64, i64* %height.addr, align 8, !dbg !5755
  %cmp = icmp slt i64 %conv, %12, !dbg !5756
  br i1 %cmp, label %for.body, label %for.end31, !dbg !5757

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !5758
  br label %for.cond5, !dbg !5762

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !5763
  %conv6 = sext i32 %13 to i64, !dbg !5763
  %14 = load i64, i64* %width.addr, align 8, !dbg !5766
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !5767
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !5768

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !5769
  %idxprom = sext i32 %15 to i64, !dbg !5772
  %16 = load i16*, i16** %top, align 8, !dbg !5772
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !5772
  %17 = load i16, i16* %arrayidx, align 2, !dbg !5772
  %conv10 = zext i16 %17 to i32, !dbg !5772
  %conv11 = sitofp i32 %conv10 to double, !dbg !5772
  %18 = load i32, i32* %j, align 4, !dbg !5773
  %idxprom12 = sext i32 %18 to i64, !dbg !5774
  %19 = load i16*, i16** %top, align 8, !dbg !5774
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !5774
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !5774
  %conv14 = zext i16 %20 to i32, !dbg !5774
  %21 = load i32, i32* %j, align 4, !dbg !5775
  %idxprom15 = sext i32 %21 to i64, !dbg !5776
  %22 = load i16*, i16** %bottom, align 8, !dbg !5776
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !5776
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !5776
  %conv17 = zext i16 %23 to i32, !dbg !5776
  %add = add nsw i32 %conv14, %conv17, !dbg !5777
  %div18 = sdiv i32 %add, 2, !dbg !5778
  %24 = load i32, i32* %j, align 4, !dbg !5779
  %idxprom19 = sext i32 %24 to i64, !dbg !5780
  %25 = load i16*, i16** %top, align 8, !dbg !5780
  %arrayidx20 = getelementptr inbounds i16, i16* %25, i64 %idxprom19, !dbg !5780
  %26 = load i16, i16* %arrayidx20, align 2, !dbg !5780
  %conv21 = zext i16 %26 to i32, !dbg !5780
  %sub = sub nsw i32 %div18, %conv21, !dbg !5781
  %conv22 = sitofp i32 %sub to double, !dbg !5782
  %27 = load double, double* %opacity, align 8, !dbg !5783
  %mul = fmul double %conv22, %27, !dbg !5784
  %add23 = fadd double %conv11, %mul, !dbg !5785
  %conv24 = fptoui double %add23 to i16, !dbg !5772
  %28 = load i32, i32* %j, align 4, !dbg !5786
  %idxprom25 = sext i32 %28 to i64, !dbg !5787
  %29 = load i16*, i16** %dst, align 8, !dbg !5787
  %arrayidx26 = getelementptr inbounds i16, i16* %29, i64 %idxprom25, !dbg !5787
  store i16 %conv24, i16* %arrayidx26, align 2, !dbg !5788
  br label %for.inc, !dbg !5789

for.inc:                                          ; preds = %for.body9
  %30 = load i32, i32* %j, align 4, !dbg !5790
  %inc = add nsw i32 %30, 1, !dbg !5790
  store i32 %inc, i32* %j, align 4, !dbg !5790
  br label %for.cond5, !dbg !5792, !llvm.loop !5793

for.end:                                          ; preds = %for.cond5
  %31 = load i64, i64* %dst_linesize.addr, align 8, !dbg !5795
  %32 = load i16*, i16** %dst, align 8, !dbg !5797
  %add.ptr = getelementptr inbounds i16, i16* %32, i64 %31, !dbg !5797
  store i16* %add.ptr, i16** %dst, align 8, !dbg !5797
  %33 = load i64, i64* %top_linesize.addr, align 8, !dbg !5798
  %34 = load i16*, i16** %top, align 8, !dbg !5799
  %add.ptr27 = getelementptr inbounds i16, i16* %34, i64 %33, !dbg !5799
  store i16* %add.ptr27, i16** %top, align 8, !dbg !5799
  %35 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !5800
  %36 = load i16*, i16** %bottom, align 8, !dbg !5801
  %add.ptr28 = getelementptr inbounds i16, i16* %36, i64 %35, !dbg !5801
  store i16* %add.ptr28, i16** %bottom, align 8, !dbg !5801
  br label %for.inc29, !dbg !5802

for.inc29:                                        ; preds = %for.end
  %37 = load i32, i32* %i, align 4, !dbg !5803
  %inc30 = add nsw i32 %37, 1, !dbg !5803
  store i32 %inc30, i32* %i, align 4, !dbg !5803
  br label %for.cond, !dbg !5805, !llvm.loop !5806

for.end31:                                        ; preds = %for.cond
  ret void, !dbg !5808
}

; Function Attrs: nounwind uwtable
define internal void @blend_burn_10bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !5810 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !5811, metadata !905), !dbg !5812
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !5813, metadata !905), !dbg !5814
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !5815, metadata !905), !dbg !5816
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !5817, metadata !905), !dbg !5818
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !5819, metadata !905), !dbg !5820
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !5821, metadata !905), !dbg !5822
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !5823, metadata !905), !dbg !5824
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !5825, metadata !905), !dbg !5826
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !5827, metadata !905), !dbg !5828
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !5829, metadata !905), !dbg !5830
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !5831, metadata !905), !dbg !5832
  call void @llvm.dbg.declare(metadata i16** %top, metadata !5833, metadata !905), !dbg !5834
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !5835
  %1 = bitcast i8* %0 to i16*, !dbg !5836
  store i16* %1, i16** %top, align 8, !dbg !5834
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !5837, metadata !905), !dbg !5838
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !5839
  %3 = bitcast i8* %2 to i16*, !dbg !5840
  store i16* %3, i16** %bottom, align 8, !dbg !5838
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !5841, metadata !905), !dbg !5842
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !5843
  %5 = bitcast i8* %4 to i16*, !dbg !5844
  store i16* %5, i16** %dst, align 8, !dbg !5842
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !5845, metadata !905), !dbg !5846
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !5847
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !5848
  %7 = load double, double* %opacity1, align 8, !dbg !5848
  store double %7, double* %opacity, align 8, !dbg !5846
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5849, metadata !905), !dbg !5850
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5851, metadata !905), !dbg !5852
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !5853
  %div = sdiv i64 %8, 2, !dbg !5853
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !5853
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !5854
  %div2 = sdiv i64 %9, 2, !dbg !5854
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !5854
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !5855
  %div3 = sdiv i64 %10, 2, !dbg !5855
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !5855
  store i32 0, i32* %i, align 4, !dbg !5856
  br label %for.cond, !dbg !5858

for.cond:                                         ; preds = %for.inc54, %entry
  %11 = load i32, i32* %i, align 4, !dbg !5859
  %conv = sext i32 %11 to i64, !dbg !5859
  %12 = load i64, i64* %height.addr, align 8, !dbg !5862
  %cmp = icmp slt i64 %conv, %12, !dbg !5863
  br i1 %cmp, label %for.body, label %for.end56, !dbg !5864

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !5865
  br label %for.cond5, !dbg !5869

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !5870
  %conv6 = sext i32 %13 to i64, !dbg !5870
  %14 = load i64, i64* %width.addr, align 8, !dbg !5873
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !5874
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !5875

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !5876
  %idxprom = sext i32 %15 to i64, !dbg !5879
  %16 = load i16*, i16** %top, align 8, !dbg !5879
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !5879
  %17 = load i16, i16* %arrayidx, align 2, !dbg !5879
  %conv10 = zext i16 %17 to i32, !dbg !5879
  %conv11 = sitofp i32 %conv10 to double, !dbg !5879
  %18 = load i32, i32* %j, align 4, !dbg !5880
  %idxprom12 = sext i32 %18 to i64, !dbg !5881
  %19 = load i16*, i16** %top, align 8, !dbg !5881
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !5881
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !5881
  %conv14 = zext i16 %20 to i32, !dbg !5882
  %cmp15 = icmp eq i32 %conv14, 0, !dbg !5883
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !5884

cond.true:                                        ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !5885
  %idxprom17 = sext i32 %21 to i64, !dbg !5887
  %22 = load i16*, i16** %top, align 8, !dbg !5887
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !5887
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !5887
  %conv19 = zext i16 %23 to i32, !dbg !5888
  br label %cond.end42, !dbg !5889

cond.false:                                       ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !5890
  %idxprom20 = sext i32 %24 to i64, !dbg !5892
  %25 = load i16*, i16** %bottom, align 8, !dbg !5892
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !5892
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !5892
  %conv22 = zext i16 %26 to i32, !dbg !5893
  %sub = sub nsw i32 1023, %conv22, !dbg !5894
  %shl = shl i32 %sub, 10, !dbg !5895
  %27 = load i32, i32* %j, align 4, !dbg !5896
  %idxprom23 = sext i32 %27 to i64, !dbg !5897
  %28 = load i16*, i16** %top, align 8, !dbg !5897
  %arrayidx24 = getelementptr inbounds i16, i16* %28, i64 %idxprom23, !dbg !5897
  %29 = load i16, i16* %arrayidx24, align 2, !dbg !5897
  %conv25 = zext i16 %29 to i32, !dbg !5898
  %div26 = sdiv i32 %shl, %conv25, !dbg !5899
  %sub27 = sub nsw i32 1023, %div26, !dbg !5900
  %cmp28 = icmp sgt i32 0, %sub27, !dbg !5901
  br i1 %cmp28, label %cond.true30, label %cond.false31, !dbg !5902

cond.true30:                                      ; preds = %cond.false
  br label %cond.end, !dbg !5903

cond.false31:                                     ; preds = %cond.false
  %30 = load i32, i32* %j, align 4, !dbg !5905
  %idxprom32 = sext i32 %30 to i64, !dbg !5907
  %31 = load i16*, i16** %bottom, align 8, !dbg !5907
  %arrayidx33 = getelementptr inbounds i16, i16* %31, i64 %idxprom32, !dbg !5907
  %32 = load i16, i16* %arrayidx33, align 2, !dbg !5907
  %conv34 = zext i16 %32 to i32, !dbg !5908
  %sub35 = sub nsw i32 1023, %conv34, !dbg !5909
  %shl36 = shl i32 %sub35, 10, !dbg !5910
  %33 = load i32, i32* %j, align 4, !dbg !5911
  %idxprom37 = sext i32 %33 to i64, !dbg !5912
  %34 = load i16*, i16** %top, align 8, !dbg !5912
  %arrayidx38 = getelementptr inbounds i16, i16* %34, i64 %idxprom37, !dbg !5912
  %35 = load i16, i16* %arrayidx38, align 2, !dbg !5912
  %conv39 = zext i16 %35 to i32, !dbg !5913
  %div40 = sdiv i32 %shl36, %conv39, !dbg !5914
  %sub41 = sub nsw i32 1023, %div40, !dbg !5915
  br label %cond.end, !dbg !5916

cond.end:                                         ; preds = %cond.false31, %cond.true30
  %cond = phi i32 [ 0, %cond.true30 ], [ %sub41, %cond.false31 ], !dbg !5917
  br label %cond.end42, !dbg !5919

cond.end42:                                       ; preds = %cond.end, %cond.true
  %cond43 = phi i32 [ %conv19, %cond.true ], [ %cond, %cond.end ], !dbg !5920
  %36 = load i32, i32* %j, align 4, !dbg !5922
  %idxprom44 = sext i32 %36 to i64, !dbg !5923
  %37 = load i16*, i16** %top, align 8, !dbg !5923
  %arrayidx45 = getelementptr inbounds i16, i16* %37, i64 %idxprom44, !dbg !5923
  %38 = load i16, i16* %arrayidx45, align 2, !dbg !5923
  %conv46 = zext i16 %38 to i32, !dbg !5923
  %sub47 = sub nsw i32 %cond43, %conv46, !dbg !5924
  %conv48 = sitofp i32 %sub47 to double, !dbg !5925
  %39 = load double, double* %opacity, align 8, !dbg !5926
  %mul = fmul double %conv48, %39, !dbg !5927
  %add = fadd double %conv11, %mul, !dbg !5928
  %conv49 = fptoui double %add to i16, !dbg !5929
  %40 = load i32, i32* %j, align 4, !dbg !5930
  %idxprom50 = sext i32 %40 to i64, !dbg !5931
  %41 = load i16*, i16** %dst, align 8, !dbg !5931
  %arrayidx51 = getelementptr inbounds i16, i16* %41, i64 %idxprom50, !dbg !5931
  store i16 %conv49, i16* %arrayidx51, align 2, !dbg !5932
  br label %for.inc, !dbg !5933

for.inc:                                          ; preds = %cond.end42
  %42 = load i32, i32* %j, align 4, !dbg !5934
  %inc = add nsw i32 %42, 1, !dbg !5934
  store i32 %inc, i32* %j, align 4, !dbg !5934
  br label %for.cond5, !dbg !5936, !llvm.loop !5937

for.end:                                          ; preds = %for.cond5
  %43 = load i64, i64* %dst_linesize.addr, align 8, !dbg !5939
  %44 = load i16*, i16** %dst, align 8, !dbg !5941
  %add.ptr = getelementptr inbounds i16, i16* %44, i64 %43, !dbg !5941
  store i16* %add.ptr, i16** %dst, align 8, !dbg !5941
  %45 = load i64, i64* %top_linesize.addr, align 8, !dbg !5942
  %46 = load i16*, i16** %top, align 8, !dbg !5943
  %add.ptr52 = getelementptr inbounds i16, i16* %46, i64 %45, !dbg !5943
  store i16* %add.ptr52, i16** %top, align 8, !dbg !5943
  %47 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !5944
  %48 = load i16*, i16** %bottom, align 8, !dbg !5945
  %add.ptr53 = getelementptr inbounds i16, i16* %48, i64 %47, !dbg !5945
  store i16* %add.ptr53, i16** %bottom, align 8, !dbg !5945
  br label %for.inc54, !dbg !5946

for.inc54:                                        ; preds = %for.end
  %49 = load i32, i32* %i, align 4, !dbg !5947
  %inc55 = add nsw i32 %49, 1, !dbg !5947
  store i32 %inc55, i32* %i, align 4, !dbg !5947
  br label %for.cond, !dbg !5949, !llvm.loop !5950

for.end56:                                        ; preds = %for.cond
  ret void, !dbg !5952
}

; Function Attrs: nounwind uwtable
define internal void @blend_darken_10bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !5954 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !5955, metadata !905), !dbg !5956
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !5957, metadata !905), !dbg !5958
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !5959, metadata !905), !dbg !5960
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !5961, metadata !905), !dbg !5962
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !5963, metadata !905), !dbg !5964
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !5965, metadata !905), !dbg !5966
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !5967, metadata !905), !dbg !5968
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !5969, metadata !905), !dbg !5970
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !5971, metadata !905), !dbg !5972
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !5973, metadata !905), !dbg !5974
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !5975, metadata !905), !dbg !5976
  call void @llvm.dbg.declare(metadata i16** %top, metadata !5977, metadata !905), !dbg !5978
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !5979
  %1 = bitcast i8* %0 to i16*, !dbg !5980
  store i16* %1, i16** %top, align 8, !dbg !5978
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !5981, metadata !905), !dbg !5982
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !5983
  %3 = bitcast i8* %2 to i16*, !dbg !5984
  store i16* %3, i16** %bottom, align 8, !dbg !5982
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !5985, metadata !905), !dbg !5986
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !5987
  %5 = bitcast i8* %4 to i16*, !dbg !5988
  store i16* %5, i16** %dst, align 8, !dbg !5986
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !5989, metadata !905), !dbg !5990
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !5991
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !5992
  %7 = load double, double* %opacity1, align 8, !dbg !5992
  store double %7, double* %opacity, align 8, !dbg !5990
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5993, metadata !905), !dbg !5994
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5995, metadata !905), !dbg !5996
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !5997
  %div = sdiv i64 %8, 2, !dbg !5997
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !5997
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !5998
  %div2 = sdiv i64 %9, 2, !dbg !5998
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !5998
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !5999
  %div3 = sdiv i64 %10, 2, !dbg !5999
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !5999
  store i32 0, i32* %i, align 4, !dbg !6000
  br label %for.cond, !dbg !6002

for.cond:                                         ; preds = %for.inc35, %entry
  %11 = load i32, i32* %i, align 4, !dbg !6003
  %conv = sext i32 %11 to i64, !dbg !6003
  %12 = load i64, i64* %height.addr, align 8, !dbg !6006
  %cmp = icmp slt i64 %conv, %12, !dbg !6007
  br i1 %cmp, label %for.body, label %for.end37, !dbg !6008

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !6009
  br label %for.cond5, !dbg !6013

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !6014
  %conv6 = sext i32 %13 to i64, !dbg !6014
  %14 = load i64, i64* %width.addr, align 8, !dbg !6017
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !6018
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !6019

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !6020
  %idxprom = sext i32 %15 to i64, !dbg !6023
  %16 = load i16*, i16** %top, align 8, !dbg !6023
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !6023
  %17 = load i16, i16* %arrayidx, align 2, !dbg !6023
  %conv10 = zext i16 %17 to i32, !dbg !6023
  %conv11 = sitofp i32 %conv10 to double, !dbg !6023
  %18 = load i32, i32* %j, align 4, !dbg !6024
  %idxprom12 = sext i32 %18 to i64, !dbg !6025
  %19 = load i16*, i16** %top, align 8, !dbg !6025
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !6025
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !6025
  %conv14 = zext i16 %20 to i32, !dbg !6026
  %21 = load i32, i32* %j, align 4, !dbg !6027
  %idxprom15 = sext i32 %21 to i64, !dbg !6028
  %22 = load i16*, i16** %bottom, align 8, !dbg !6028
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !6028
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !6028
  %conv17 = zext i16 %23 to i32, !dbg !6029
  %cmp18 = icmp sgt i32 %conv14, %conv17, !dbg !6030
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !6026

cond.true:                                        ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !6031
  %idxprom20 = sext i32 %24 to i64, !dbg !6033
  %25 = load i16*, i16** %bottom, align 8, !dbg !6033
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !6033
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !6033
  %conv22 = zext i16 %26 to i32, !dbg !6034
  br label %cond.end, !dbg !6035

cond.false:                                       ; preds = %for.body9
  %27 = load i32, i32* %j, align 4, !dbg !6036
  %idxprom23 = sext i32 %27 to i64, !dbg !6038
  %28 = load i16*, i16** %top, align 8, !dbg !6038
  %arrayidx24 = getelementptr inbounds i16, i16* %28, i64 %idxprom23, !dbg !6038
  %29 = load i16, i16* %arrayidx24, align 2, !dbg !6038
  %conv25 = zext i16 %29 to i32, !dbg !6039
  br label %cond.end, !dbg !6040

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv22, %cond.true ], [ %conv25, %cond.false ], !dbg !6041
  %30 = load i32, i32* %j, align 4, !dbg !6043
  %idxprom26 = sext i32 %30 to i64, !dbg !6044
  %31 = load i16*, i16** %top, align 8, !dbg !6044
  %arrayidx27 = getelementptr inbounds i16, i16* %31, i64 %idxprom26, !dbg !6044
  %32 = load i16, i16* %arrayidx27, align 2, !dbg !6044
  %conv28 = zext i16 %32 to i32, !dbg !6044
  %sub = sub nsw i32 %cond, %conv28, !dbg !6045
  %conv29 = sitofp i32 %sub to double, !dbg !6046
  %33 = load double, double* %opacity, align 8, !dbg !6047
  %mul = fmul double %conv29, %33, !dbg !6048
  %add = fadd double %conv11, %mul, !dbg !6049
  %conv30 = fptoui double %add to i16, !dbg !6050
  %34 = load i32, i32* %j, align 4, !dbg !6051
  %idxprom31 = sext i32 %34 to i64, !dbg !6052
  %35 = load i16*, i16** %dst, align 8, !dbg !6052
  %arrayidx32 = getelementptr inbounds i16, i16* %35, i64 %idxprom31, !dbg !6052
  store i16 %conv30, i16* %arrayidx32, align 2, !dbg !6053
  br label %for.inc, !dbg !6054

for.inc:                                          ; preds = %cond.end
  %36 = load i32, i32* %j, align 4, !dbg !6055
  %inc = add nsw i32 %36, 1, !dbg !6055
  store i32 %inc, i32* %j, align 4, !dbg !6055
  br label %for.cond5, !dbg !6057, !llvm.loop !6058

for.end:                                          ; preds = %for.cond5
  %37 = load i64, i64* %dst_linesize.addr, align 8, !dbg !6060
  %38 = load i16*, i16** %dst, align 8, !dbg !6062
  %add.ptr = getelementptr inbounds i16, i16* %38, i64 %37, !dbg !6062
  store i16* %add.ptr, i16** %dst, align 8, !dbg !6062
  %39 = load i64, i64* %top_linesize.addr, align 8, !dbg !6063
  %40 = load i16*, i16** %top, align 8, !dbg !6064
  %add.ptr33 = getelementptr inbounds i16, i16* %40, i64 %39, !dbg !6064
  store i16* %add.ptr33, i16** %top, align 8, !dbg !6064
  %41 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !6065
  %42 = load i16*, i16** %bottom, align 8, !dbg !6066
  %add.ptr34 = getelementptr inbounds i16, i16* %42, i64 %41, !dbg !6066
  store i16* %add.ptr34, i16** %bottom, align 8, !dbg !6066
  br label %for.inc35, !dbg !6067

for.inc35:                                        ; preds = %for.end
  %43 = load i32, i32* %i, align 4, !dbg !6068
  %inc36 = add nsw i32 %43, 1, !dbg !6068
  store i32 %inc36, i32* %i, align 4, !dbg !6068
  br label %for.cond, !dbg !6070, !llvm.loop !6071

for.end37:                                        ; preds = %for.cond
  ret void, !dbg !6073
}

; Function Attrs: nounwind uwtable
define internal void @blend_difference_10bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !6075 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !6076, metadata !905), !dbg !6077
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !6078, metadata !905), !dbg !6079
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !6080, metadata !905), !dbg !6081
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !6082, metadata !905), !dbg !6083
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !6084, metadata !905), !dbg !6085
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !6086, metadata !905), !dbg !6087
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !6088, metadata !905), !dbg !6089
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !6090, metadata !905), !dbg !6091
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !6092, metadata !905), !dbg !6093
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !6094, metadata !905), !dbg !6095
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !6096, metadata !905), !dbg !6097
  call void @llvm.dbg.declare(metadata i16** %top, metadata !6098, metadata !905), !dbg !6099
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !6100
  %1 = bitcast i8* %0 to i16*, !dbg !6101
  store i16* %1, i16** %top, align 8, !dbg !6099
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !6102, metadata !905), !dbg !6103
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !6104
  %3 = bitcast i8* %2 to i16*, !dbg !6105
  store i16* %3, i16** %bottom, align 8, !dbg !6103
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !6106, metadata !905), !dbg !6107
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !6108
  %5 = bitcast i8* %4 to i16*, !dbg !6109
  store i16* %5, i16** %dst, align 8, !dbg !6107
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !6110, metadata !905), !dbg !6111
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !6112
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !6113
  %7 = load double, double* %opacity1, align 8, !dbg !6113
  store double %7, double* %opacity, align 8, !dbg !6111
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6114, metadata !905), !dbg !6115
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6116, metadata !905), !dbg !6117
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !6118
  %div = sdiv i64 %8, 2, !dbg !6118
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !6118
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !6119
  %div2 = sdiv i64 %9, 2, !dbg !6119
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !6119
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !6120
  %div3 = sdiv i64 %10, 2, !dbg !6120
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !6120
  store i32 0, i32* %i, align 4, !dbg !6121
  br label %for.cond, !dbg !6123

for.cond:                                         ; preds = %for.inc45, %entry
  %11 = load i32, i32* %i, align 4, !dbg !6124
  %conv = sext i32 %11 to i64, !dbg !6124
  %12 = load i64, i64* %height.addr, align 8, !dbg !6127
  %cmp = icmp slt i64 %conv, %12, !dbg !6128
  br i1 %cmp, label %for.body, label %for.end47, !dbg !6129

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !6130
  br label %for.cond5, !dbg !6134

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !6135
  %conv6 = sext i32 %13 to i64, !dbg !6135
  %14 = load i64, i64* %width.addr, align 8, !dbg !6138
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !6139
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !6140

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !6141
  %idxprom = sext i32 %15 to i64, !dbg !6144
  %16 = load i16*, i16** %top, align 8, !dbg !6144
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !6144
  %17 = load i16, i16* %arrayidx, align 2, !dbg !6144
  %conv10 = zext i16 %17 to i32, !dbg !6144
  %conv11 = sitofp i32 %conv10 to double, !dbg !6144
  %18 = load i32, i32* %j, align 4, !dbg !6145
  %idxprom12 = sext i32 %18 to i64, !dbg !6146
  %19 = load i16*, i16** %top, align 8, !dbg !6146
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !6146
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !6146
  %conv14 = zext i16 %20 to i32, !dbg !6146
  %21 = load i32, i32* %j, align 4, !dbg !6147
  %idxprom15 = sext i32 %21 to i64, !dbg !6148
  %22 = load i16*, i16** %bottom, align 8, !dbg !6148
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !6148
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !6148
  %conv17 = zext i16 %23 to i32, !dbg !6148
  %sub = sub nsw i32 %conv14, %conv17, !dbg !6149
  %cmp18 = icmp sge i32 %sub, 0, !dbg !6150
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !6151

cond.true:                                        ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !6152
  %idxprom20 = sext i32 %24 to i64, !dbg !6154
  %25 = load i16*, i16** %top, align 8, !dbg !6154
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !6154
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !6154
  %conv22 = zext i16 %26 to i32, !dbg !6154
  %27 = load i32, i32* %j, align 4, !dbg !6155
  %idxprom23 = sext i32 %27 to i64, !dbg !6156
  %28 = load i16*, i16** %bottom, align 8, !dbg !6156
  %arrayidx24 = getelementptr inbounds i16, i16* %28, i64 %idxprom23, !dbg !6156
  %29 = load i16, i16* %arrayidx24, align 2, !dbg !6156
  %conv25 = zext i16 %29 to i32, !dbg !6156
  %sub26 = sub nsw i32 %conv22, %conv25, !dbg !6157
  br label %cond.end, !dbg !6158

cond.false:                                       ; preds = %for.body9
  %30 = load i32, i32* %j, align 4, !dbg !6159
  %idxprom27 = sext i32 %30 to i64, !dbg !6161
  %31 = load i16*, i16** %top, align 8, !dbg !6161
  %arrayidx28 = getelementptr inbounds i16, i16* %31, i64 %idxprom27, !dbg !6161
  %32 = load i16, i16* %arrayidx28, align 2, !dbg !6161
  %conv29 = zext i16 %32 to i32, !dbg !6161
  %33 = load i32, i32* %j, align 4, !dbg !6162
  %idxprom30 = sext i32 %33 to i64, !dbg !6163
  %34 = load i16*, i16** %bottom, align 8, !dbg !6163
  %arrayidx31 = getelementptr inbounds i16, i16* %34, i64 %idxprom30, !dbg !6163
  %35 = load i16, i16* %arrayidx31, align 2, !dbg !6163
  %conv32 = zext i16 %35 to i32, !dbg !6163
  %sub33 = sub nsw i32 %conv29, %conv32, !dbg !6164
  %sub34 = sub nsw i32 0, %sub33, !dbg !6165
  br label %cond.end, !dbg !6166

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub26, %cond.true ], [ %sub34, %cond.false ], !dbg !6167
  %36 = load i32, i32* %j, align 4, !dbg !6169
  %idxprom35 = sext i32 %36 to i64, !dbg !6170
  %37 = load i16*, i16** %top, align 8, !dbg !6170
  %arrayidx36 = getelementptr inbounds i16, i16* %37, i64 %idxprom35, !dbg !6170
  %38 = load i16, i16* %arrayidx36, align 2, !dbg !6170
  %conv37 = zext i16 %38 to i32, !dbg !6170
  %sub38 = sub nsw i32 %cond, %conv37, !dbg !6171
  %conv39 = sitofp i32 %sub38 to double, !dbg !6172
  %39 = load double, double* %opacity, align 8, !dbg !6173
  %mul = fmul double %conv39, %39, !dbg !6174
  %add = fadd double %conv11, %mul, !dbg !6175
  %conv40 = fptoui double %add to i16, !dbg !6176
  %40 = load i32, i32* %j, align 4, !dbg !6177
  %idxprom41 = sext i32 %40 to i64, !dbg !6178
  %41 = load i16*, i16** %dst, align 8, !dbg !6178
  %arrayidx42 = getelementptr inbounds i16, i16* %41, i64 %idxprom41, !dbg !6178
  store i16 %conv40, i16* %arrayidx42, align 2, !dbg !6179
  br label %for.inc, !dbg !6180

for.inc:                                          ; preds = %cond.end
  %42 = load i32, i32* %j, align 4, !dbg !6181
  %inc = add nsw i32 %42, 1, !dbg !6181
  store i32 %inc, i32* %j, align 4, !dbg !6181
  br label %for.cond5, !dbg !6183, !llvm.loop !6184

for.end:                                          ; preds = %for.cond5
  %43 = load i64, i64* %dst_linesize.addr, align 8, !dbg !6186
  %44 = load i16*, i16** %dst, align 8, !dbg !6188
  %add.ptr = getelementptr inbounds i16, i16* %44, i64 %43, !dbg !6188
  store i16* %add.ptr, i16** %dst, align 8, !dbg !6188
  %45 = load i64, i64* %top_linesize.addr, align 8, !dbg !6189
  %46 = load i16*, i16** %top, align 8, !dbg !6190
  %add.ptr43 = getelementptr inbounds i16, i16* %46, i64 %45, !dbg !6190
  store i16* %add.ptr43, i16** %top, align 8, !dbg !6190
  %47 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !6191
  %48 = load i16*, i16** %bottom, align 8, !dbg !6192
  %add.ptr44 = getelementptr inbounds i16, i16* %48, i64 %47, !dbg !6192
  store i16* %add.ptr44, i16** %bottom, align 8, !dbg !6192
  br label %for.inc45, !dbg !6193

for.inc45:                                        ; preds = %for.end
  %49 = load i32, i32* %i, align 4, !dbg !6194
  %inc46 = add nsw i32 %49, 1, !dbg !6194
  store i32 %inc46, i32* %i, align 4, !dbg !6194
  br label %for.cond, !dbg !6196, !llvm.loop !6197

for.end47:                                        ; preds = %for.cond
  ret void, !dbg !6199
}

; Function Attrs: nounwind uwtable
define internal void @blend_grainextract_10bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !6201 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !5462, metadata !905), !dbg !6202
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !5475, metadata !905), !dbg !6211
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !6212, metadata !905), !dbg !6213
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !6214, metadata !905), !dbg !6215
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !6216, metadata !905), !dbg !6217
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !6218, metadata !905), !dbg !6219
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !6220, metadata !905), !dbg !6221
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !6222, metadata !905), !dbg !6223
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !6224, metadata !905), !dbg !6225
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !6226, metadata !905), !dbg !6227
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !6228, metadata !905), !dbg !6229
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !6230, metadata !905), !dbg !6231
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !6232, metadata !905), !dbg !6233
  call void @llvm.dbg.declare(metadata i16** %top, metadata !6234, metadata !905), !dbg !6235
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !6236
  %1 = bitcast i8* %0 to i16*, !dbg !6237
  store i16* %1, i16** %top, align 8, !dbg !6235
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !6238, metadata !905), !dbg !6239
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !6240
  %3 = bitcast i8* %2 to i16*, !dbg !6241
  store i16* %3, i16** %bottom, align 8, !dbg !6239
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !6242, metadata !905), !dbg !6243
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !6244
  %5 = bitcast i8* %4 to i16*, !dbg !6245
  store i16* %5, i16** %dst, align 8, !dbg !6243
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !6246, metadata !905), !dbg !6247
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !6248
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !6249
  %7 = load double, double* %opacity1, align 8, !dbg !6249
  store double %7, double* %opacity, align 8, !dbg !6247
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6250, metadata !905), !dbg !6251
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6252, metadata !905), !dbg !6253
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !6254
  %div = sdiv i64 %8, 2, !dbg !6254
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !6254
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !6255
  %div2 = sdiv i64 %9, 2, !dbg !6255
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !6255
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !6256
  %div3 = sdiv i64 %10, 2, !dbg !6256
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !6256
  store i32 0, i32* %i, align 4, !dbg !6257
  br label %for.cond, !dbg !6258

for.cond:                                         ; preds = %for.inc29, %entry
  %11 = load i32, i32* %i, align 4, !dbg !6259
  %conv = sext i32 %11 to i64, !dbg !6259
  %12 = load i64, i64* %height.addr, align 8, !dbg !6261
  %cmp = icmp slt i64 %conv, %12, !dbg !6262
  br i1 %cmp, label %for.body, label %for.end31, !dbg !6263

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !6264
  br label %for.cond5, !dbg !6266

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !6267
  %conv6 = sext i32 %13 to i64, !dbg !6267
  %14 = load i64, i64* %width.addr, align 8, !dbg !6269
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !6270
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !6271

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !6272
  %idxprom = sext i32 %15 to i64, !dbg !6273
  %16 = load i16*, i16** %top, align 8, !dbg !6273
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !6273
  %17 = load i16, i16* %arrayidx, align 2, !dbg !6273
  %conv10 = zext i16 %17 to i32, !dbg !6273
  %conv11 = sitofp i32 %conv10 to double, !dbg !6273
  %18 = load i32, i32* %j, align 4, !dbg !6274
  %idxprom12 = sext i32 %18 to i64, !dbg !6275
  %19 = load i16*, i16** %top, align 8, !dbg !6275
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !6275
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !6275
  %conv14 = zext i16 %20 to i32, !dbg !6275
  %add = add nsw i32 512, %conv14, !dbg !6276
  %21 = load i32, i32* %j, align 4, !dbg !6277
  %idxprom15 = sext i32 %21 to i64, !dbg !6278
  %22 = load i16*, i16** %bottom, align 8, !dbg !6278
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !6278
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !6278
  %conv17 = zext i16 %23 to i32, !dbg !6278
  %sub = sub nsw i32 %add, %conv17, !dbg !6279
  store i32 %sub, i32* %a.addr.i, align 4, !dbg !6280
  store i32 10, i32* %p.addr.i, align 4, !dbg !6280
  %24 = load i32, i32* %a.addr.i, align 4, !dbg !6281
  %25 = load i32, i32* %p.addr.i, align 4, !dbg !6282
  %shl.i = shl i32 1, %25, !dbg !6283
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !6284
  %neg.i = xor i32 %sub.i, -1, !dbg !6285
  %and.i = and i32 %24, %neg.i, !dbg !6286
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !6286
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !6287

if.then.i:                                        ; preds = %for.body9
  %26 = load i32, i32* %a.addr.i, align 4, !dbg !6288
  %neg1.i = xor i32 %26, -1, !dbg !6289
  %shr.i = ashr i32 %neg1.i, 31, !dbg !6290
  %27 = load i32, i32* %p.addr.i, align 4, !dbg !6291
  %shl2.i = shl i32 1, %27, !dbg !6292
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !6293
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !6294
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !6295
  br label %av_clip_uintp2_c.exit, !dbg !6295

if.else.i:                                        ; preds = %for.body9
  %28 = load i32, i32* %a.addr.i, align 4, !dbg !6296
  store i32 %28, i32* %retval.i, align 4, !dbg !6297
  br label %av_clip_uintp2_c.exit, !dbg !6297

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %29 = load i32, i32* %retval.i, align 4, !dbg !6298
  %30 = load i32, i32* %j, align 4, !dbg !6299
  %idxprom18 = sext i32 %30 to i64, !dbg !6300
  %31 = load i16*, i16** %top, align 8, !dbg !6300
  %arrayidx19 = getelementptr inbounds i16, i16* %31, i64 %idxprom18, !dbg !6300
  %32 = load i16, i16* %arrayidx19, align 2, !dbg !6300
  %conv20 = zext i16 %32 to i32, !dbg !6300
  %sub21 = sub nsw i32 %29, %conv20, !dbg !6301
  %conv22 = sitofp i32 %sub21 to double, !dbg !6302
  %33 = load double, double* %opacity, align 8, !dbg !6303
  %mul = fmul double %conv22, %33, !dbg !6304
  %add23 = fadd double %conv11, %mul, !dbg !6305
  %conv24 = fptoui double %add23 to i16, !dbg !6273
  %34 = load i32, i32* %j, align 4, !dbg !6306
  %idxprom25 = sext i32 %34 to i64, !dbg !6307
  %35 = load i16*, i16** %dst, align 8, !dbg !6307
  %arrayidx26 = getelementptr inbounds i16, i16* %35, i64 %idxprom25, !dbg !6307
  store i16 %conv24, i16* %arrayidx26, align 2, !dbg !6308
  br label %for.inc, !dbg !6309

for.inc:                                          ; preds = %av_clip_uintp2_c.exit
  %36 = load i32, i32* %j, align 4, !dbg !6310
  %inc = add nsw i32 %36, 1, !dbg !6310
  store i32 %inc, i32* %j, align 4, !dbg !6310
  br label %for.cond5, !dbg !6312, !llvm.loop !6313

for.end:                                          ; preds = %for.cond5
  %37 = load i64, i64* %dst_linesize.addr, align 8, !dbg !6315
  %38 = load i16*, i16** %dst, align 8, !dbg !6317
  %add.ptr = getelementptr inbounds i16, i16* %38, i64 %37, !dbg !6317
  store i16* %add.ptr, i16** %dst, align 8, !dbg !6317
  %39 = load i64, i64* %top_linesize.addr, align 8, !dbg !6318
  %40 = load i16*, i16** %top, align 8, !dbg !6319
  %add.ptr27 = getelementptr inbounds i16, i16* %40, i64 %39, !dbg !6319
  store i16* %add.ptr27, i16** %top, align 8, !dbg !6319
  %41 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !6320
  %42 = load i16*, i16** %bottom, align 8, !dbg !6321
  %add.ptr28 = getelementptr inbounds i16, i16* %42, i64 %41, !dbg !6321
  store i16* %add.ptr28, i16** %bottom, align 8, !dbg !6321
  br label %for.inc29, !dbg !6322

for.inc29:                                        ; preds = %for.end
  %43 = load i32, i32* %i, align 4, !dbg !6323
  %inc30 = add nsw i32 %43, 1, !dbg !6323
  store i32 %inc30, i32* %i, align 4, !dbg !6323
  br label %for.cond, !dbg !6325, !llvm.loop !6326

for.end31:                                        ; preds = %for.cond
  ret void, !dbg !6328
}

; Function Attrs: nounwind uwtable
define internal void @blend_divide_10bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !6330 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !5462, metadata !905), !dbg !6331
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !5475, metadata !905), !dbg !6340
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !6341, metadata !905), !dbg !6342
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !6343, metadata !905), !dbg !6344
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !6345, metadata !905), !dbg !6346
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !6347, metadata !905), !dbg !6348
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !6349, metadata !905), !dbg !6350
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !6351, metadata !905), !dbg !6352
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !6353, metadata !905), !dbg !6354
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !6355, metadata !905), !dbg !6356
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !6357, metadata !905), !dbg !6358
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !6359, metadata !905), !dbg !6360
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !6361, metadata !905), !dbg !6362
  call void @llvm.dbg.declare(metadata i16** %top, metadata !6363, metadata !905), !dbg !6364
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !6365
  %1 = bitcast i8* %0 to i16*, !dbg !6366
  store i16* %1, i16** %top, align 8, !dbg !6364
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !6367, metadata !905), !dbg !6368
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !6369
  %3 = bitcast i8* %2 to i16*, !dbg !6370
  store i16* %3, i16** %bottom, align 8, !dbg !6368
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !6371, metadata !905), !dbg !6372
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !6373
  %5 = bitcast i8* %4 to i16*, !dbg !6374
  store i16* %5, i16** %dst, align 8, !dbg !6372
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !6375, metadata !905), !dbg !6376
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !6377
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !6378
  %7 = load double, double* %opacity1, align 8, !dbg !6378
  store double %7, double* %opacity, align 8, !dbg !6376
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6379, metadata !905), !dbg !6380
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6381, metadata !905), !dbg !6382
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !6383
  %div = sdiv i64 %8, 2, !dbg !6383
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !6383
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !6384
  %div2 = sdiv i64 %9, 2, !dbg !6384
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !6384
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !6385
  %div3 = sdiv i64 %10, 2, !dbg !6385
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !6385
  store i32 0, i32* %i, align 4, !dbg !6386
  br label %for.cond, !dbg !6387

for.cond:                                         ; preds = %for.inc34, %entry
  %11 = load i32, i32* %i, align 4, !dbg !6388
  %conv = sext i32 %11 to i64, !dbg !6388
  %12 = load i64, i64* %height.addr, align 8, !dbg !6390
  %cmp = icmp slt i64 %conv, %12, !dbg !6391
  br i1 %cmp, label %for.body, label %for.end36, !dbg !6392

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !6393
  br label %for.cond5, !dbg !6395

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !6396
  %conv6 = sext i32 %13 to i64, !dbg !6396
  %14 = load i64, i64* %width.addr, align 8, !dbg !6398
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !6399
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !6400

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !6401
  %idxprom = sext i32 %15 to i64, !dbg !6403
  %16 = load i16*, i16** %top, align 8, !dbg !6403
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !6403
  %17 = load i16, i16* %arrayidx, align 2, !dbg !6403
  %conv10 = zext i16 %17 to i32, !dbg !6403
  %conv11 = sitofp i32 %conv10 to double, !dbg !6403
  %18 = load i32, i32* %j, align 4, !dbg !6404
  %idxprom12 = sext i32 %18 to i64, !dbg !6405
  %19 = load i16*, i16** %bottom, align 8, !dbg !6405
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !6405
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !6405
  %conv14 = zext i16 %20 to i32, !dbg !6405
  %cmp15 = icmp eq i32 %conv14, 0, !dbg !6406
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !6405

cond.true:                                        ; preds = %for.body9
  br label %cond.end, !dbg !6407

cond.false:                                       ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !6409
  %idxprom17 = sext i32 %21 to i64, !dbg !6411
  %22 = load i16*, i16** %top, align 8, !dbg !6411
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !6411
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !6411
  %conv19 = zext i16 %23 to i32, !dbg !6411
  %mul = mul nsw i32 1023, %conv19, !dbg !6412
  %24 = load i32, i32* %j, align 4, !dbg !6413
  %idxprom20 = sext i32 %24 to i64, !dbg !6414
  %25 = load i16*, i16** %bottom, align 8, !dbg !6414
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !6414
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !6414
  %conv22 = zext i16 %26 to i32, !dbg !6414
  %div23 = sdiv i32 %mul, %conv22, !dbg !6415
  br label %cond.end, !dbg !6416

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1023, %cond.true ], [ %div23, %cond.false ], !dbg !6417
  store i32 %cond, i32* %a.addr.i, align 4, !dbg !6418
  store i32 10, i32* %p.addr.i, align 4, !dbg !6418
  %27 = load i32, i32* %a.addr.i, align 4, !dbg !6419
  %28 = load i32, i32* %p.addr.i, align 4, !dbg !6420
  %shl.i = shl i32 1, %28, !dbg !6421
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !6422
  %neg.i = xor i32 %sub.i, -1, !dbg !6423
  %and.i = and i32 %27, %neg.i, !dbg !6424
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !6424
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !6425

if.then.i:                                        ; preds = %cond.end
  %29 = load i32, i32* %a.addr.i, align 4, !dbg !6426
  %neg1.i = xor i32 %29, -1, !dbg !6427
  %shr.i = ashr i32 %neg1.i, 31, !dbg !6428
  %30 = load i32, i32* %p.addr.i, align 4, !dbg !6429
  %shl2.i = shl i32 1, %30, !dbg !6430
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !6431
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !6432
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !6433
  br label %av_clip_uintp2_c.exit, !dbg !6433

if.else.i:                                        ; preds = %cond.end
  %31 = load i32, i32* %a.addr.i, align 4, !dbg !6434
  store i32 %31, i32* %retval.i, align 4, !dbg !6435
  br label %av_clip_uintp2_c.exit, !dbg !6435

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %32 = load i32, i32* %retval.i, align 4, !dbg !6436
  %33 = load i32, i32* %j, align 4, !dbg !6437
  %idxprom24 = sext i32 %33 to i64, !dbg !6438
  %34 = load i16*, i16** %top, align 8, !dbg !6438
  %arrayidx25 = getelementptr inbounds i16, i16* %34, i64 %idxprom24, !dbg !6438
  %35 = load i16, i16* %arrayidx25, align 2, !dbg !6438
  %conv26 = zext i16 %35 to i32, !dbg !6438
  %sub = sub nsw i32 %32, %conv26, !dbg !6439
  %conv27 = sitofp i32 %sub to double, !dbg !6440
  %36 = load double, double* %opacity, align 8, !dbg !6441
  %mul28 = fmul double %conv27, %36, !dbg !6442
  %add = fadd double %conv11, %mul28, !dbg !6443
  %conv29 = fptoui double %add to i16, !dbg !6444
  %37 = load i32, i32* %j, align 4, !dbg !6445
  %idxprom30 = sext i32 %37 to i64, !dbg !6446
  %38 = load i16*, i16** %dst, align 8, !dbg !6446
  %arrayidx31 = getelementptr inbounds i16, i16* %38, i64 %idxprom30, !dbg !6446
  store i16 %conv29, i16* %arrayidx31, align 2, !dbg !6447
  br label %for.inc, !dbg !6448

for.inc:                                          ; preds = %av_clip_uintp2_c.exit
  %39 = load i32, i32* %j, align 4, !dbg !6449
  %inc = add nsw i32 %39, 1, !dbg !6449
  store i32 %inc, i32* %j, align 4, !dbg !6449
  br label %for.cond5, !dbg !6451, !llvm.loop !6452

for.end:                                          ; preds = %for.cond5
  %40 = load i64, i64* %dst_linesize.addr, align 8, !dbg !6454
  %41 = load i16*, i16** %dst, align 8, !dbg !6456
  %add.ptr = getelementptr inbounds i16, i16* %41, i64 %40, !dbg !6456
  store i16* %add.ptr, i16** %dst, align 8, !dbg !6456
  %42 = load i64, i64* %top_linesize.addr, align 8, !dbg !6457
  %43 = load i16*, i16** %top, align 8, !dbg !6458
  %add.ptr32 = getelementptr inbounds i16, i16* %43, i64 %42, !dbg !6458
  store i16* %add.ptr32, i16** %top, align 8, !dbg !6458
  %44 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !6459
  %45 = load i16*, i16** %bottom, align 8, !dbg !6460
  %add.ptr33 = getelementptr inbounds i16, i16* %45, i64 %44, !dbg !6460
  store i16* %add.ptr33, i16** %bottom, align 8, !dbg !6460
  br label %for.inc34, !dbg !6461

for.inc34:                                        ; preds = %for.end
  %46 = load i32, i32* %i, align 4, !dbg !6462
  %inc35 = add nsw i32 %46, 1, !dbg !6462
  store i32 %inc35, i32* %i, align 4, !dbg !6462
  br label %for.cond, !dbg !6464, !llvm.loop !6465

for.end36:                                        ; preds = %for.cond
  ret void, !dbg !6467
}

; Function Attrs: nounwind uwtable
define internal void @blend_dodge_10bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !6469 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !6470, metadata !905), !dbg !6471
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !6472, metadata !905), !dbg !6473
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !6474, metadata !905), !dbg !6475
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !6476, metadata !905), !dbg !6477
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !6478, metadata !905), !dbg !6479
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !6480, metadata !905), !dbg !6481
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !6482, metadata !905), !dbg !6483
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !6484, metadata !905), !dbg !6485
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !6486, metadata !905), !dbg !6487
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !6488, metadata !905), !dbg !6489
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !6490, metadata !905), !dbg !6491
  call void @llvm.dbg.declare(metadata i16** %top, metadata !6492, metadata !905), !dbg !6493
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !6494
  %1 = bitcast i8* %0 to i16*, !dbg !6495
  store i16* %1, i16** %top, align 8, !dbg !6493
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !6496, metadata !905), !dbg !6497
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !6498
  %3 = bitcast i8* %2 to i16*, !dbg !6499
  store i16* %3, i16** %bottom, align 8, !dbg !6497
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !6500, metadata !905), !dbg !6501
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !6502
  %5 = bitcast i8* %4 to i16*, !dbg !6503
  store i16* %5, i16** %dst, align 8, !dbg !6501
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !6504, metadata !905), !dbg !6505
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !6506
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !6507
  %7 = load double, double* %opacity1, align 8, !dbg !6507
  store double %7, double* %opacity, align 8, !dbg !6505
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6508, metadata !905), !dbg !6509
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6510, metadata !905), !dbg !6511
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !6512
  %div = sdiv i64 %8, 2, !dbg !6512
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !6512
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !6513
  %div2 = sdiv i64 %9, 2, !dbg !6513
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !6513
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !6514
  %div3 = sdiv i64 %10, 2, !dbg !6514
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !6514
  store i32 0, i32* %i, align 4, !dbg !6515
  br label %for.cond, !dbg !6517

for.cond:                                         ; preds = %for.inc52, %entry
  %11 = load i32, i32* %i, align 4, !dbg !6518
  %conv = sext i32 %11 to i64, !dbg !6518
  %12 = load i64, i64* %height.addr, align 8, !dbg !6521
  %cmp = icmp slt i64 %conv, %12, !dbg !6522
  br i1 %cmp, label %for.body, label %for.end54, !dbg !6523

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !6524
  br label %for.cond5, !dbg !6528

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !6529
  %conv6 = sext i32 %13 to i64, !dbg !6529
  %14 = load i64, i64* %width.addr, align 8, !dbg !6532
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !6533
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !6534

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !6535
  %idxprom = sext i32 %15 to i64, !dbg !6538
  %16 = load i16*, i16** %top, align 8, !dbg !6538
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !6538
  %17 = load i16, i16* %arrayidx, align 2, !dbg !6538
  %conv10 = zext i16 %17 to i32, !dbg !6538
  %conv11 = sitofp i32 %conv10 to double, !dbg !6538
  %18 = load i32, i32* %j, align 4, !dbg !6539
  %idxprom12 = sext i32 %18 to i64, !dbg !6540
  %19 = load i16*, i16** %top, align 8, !dbg !6540
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !6540
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !6540
  %conv14 = zext i16 %20 to i32, !dbg !6541
  %cmp15 = icmp eq i32 %conv14, 1023, !dbg !6542
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !6543

cond.true:                                        ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !6544
  %idxprom17 = sext i32 %21 to i64, !dbg !6546
  %22 = load i16*, i16** %top, align 8, !dbg !6546
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !6546
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !6546
  %conv19 = zext i16 %23 to i32, !dbg !6547
  br label %cond.end40, !dbg !6548

cond.false:                                       ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !6549
  %idxprom20 = sext i32 %24 to i64, !dbg !6551
  %25 = load i16*, i16** %bottom, align 8, !dbg !6551
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !6551
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !6551
  %conv22 = zext i16 %26 to i32, !dbg !6552
  %shl = shl i32 %conv22, 10, !dbg !6553
  %27 = load i32, i32* %j, align 4, !dbg !6554
  %idxprom23 = sext i32 %27 to i64, !dbg !6555
  %28 = load i16*, i16** %top, align 8, !dbg !6555
  %arrayidx24 = getelementptr inbounds i16, i16* %28, i64 %idxprom23, !dbg !6555
  %29 = load i16, i16* %arrayidx24, align 2, !dbg !6555
  %conv25 = zext i16 %29 to i32, !dbg !6556
  %sub = sub nsw i32 1023, %conv25, !dbg !6557
  %div26 = sdiv i32 %shl, %sub, !dbg !6558
  %cmp27 = icmp sgt i32 1023, %div26, !dbg !6559
  br i1 %cmp27, label %cond.true29, label %cond.false39, !dbg !6560

cond.true29:                                      ; preds = %cond.false
  %30 = load i32, i32* %j, align 4, !dbg !6561
  %idxprom30 = sext i32 %30 to i64, !dbg !6563
  %31 = load i16*, i16** %bottom, align 8, !dbg !6563
  %arrayidx31 = getelementptr inbounds i16, i16* %31, i64 %idxprom30, !dbg !6563
  %32 = load i16, i16* %arrayidx31, align 2, !dbg !6563
  %conv32 = zext i16 %32 to i32, !dbg !6564
  %shl33 = shl i32 %conv32, 10, !dbg !6565
  %33 = load i32, i32* %j, align 4, !dbg !6566
  %idxprom34 = sext i32 %33 to i64, !dbg !6567
  %34 = load i16*, i16** %top, align 8, !dbg !6567
  %arrayidx35 = getelementptr inbounds i16, i16* %34, i64 %idxprom34, !dbg !6567
  %35 = load i16, i16* %arrayidx35, align 2, !dbg !6567
  %conv36 = zext i16 %35 to i32, !dbg !6568
  %sub37 = sub nsw i32 1023, %conv36, !dbg !6569
  %div38 = sdiv i32 %shl33, %sub37, !dbg !6570
  br label %cond.end, !dbg !6571

cond.false39:                                     ; preds = %cond.false
  br label %cond.end, !dbg !6572

cond.end:                                         ; preds = %cond.false39, %cond.true29
  %cond = phi i32 [ %div38, %cond.true29 ], [ 1023, %cond.false39 ], !dbg !6574
  br label %cond.end40, !dbg !6576

cond.end40:                                       ; preds = %cond.end, %cond.true
  %cond41 = phi i32 [ %conv19, %cond.true ], [ %cond, %cond.end ], !dbg !6577
  %36 = load i32, i32* %j, align 4, !dbg !6579
  %idxprom42 = sext i32 %36 to i64, !dbg !6580
  %37 = load i16*, i16** %top, align 8, !dbg !6580
  %arrayidx43 = getelementptr inbounds i16, i16* %37, i64 %idxprom42, !dbg !6580
  %38 = load i16, i16* %arrayidx43, align 2, !dbg !6580
  %conv44 = zext i16 %38 to i32, !dbg !6580
  %sub45 = sub nsw i32 %cond41, %conv44, !dbg !6581
  %conv46 = sitofp i32 %sub45 to double, !dbg !6582
  %39 = load double, double* %opacity, align 8, !dbg !6583
  %mul = fmul double %conv46, %39, !dbg !6584
  %add = fadd double %conv11, %mul, !dbg !6585
  %conv47 = fptoui double %add to i16, !dbg !6586
  %40 = load i32, i32* %j, align 4, !dbg !6587
  %idxprom48 = sext i32 %40 to i64, !dbg !6588
  %41 = load i16*, i16** %dst, align 8, !dbg !6588
  %arrayidx49 = getelementptr inbounds i16, i16* %41, i64 %idxprom48, !dbg !6588
  store i16 %conv47, i16* %arrayidx49, align 2, !dbg !6589
  br label %for.inc, !dbg !6590

for.inc:                                          ; preds = %cond.end40
  %42 = load i32, i32* %j, align 4, !dbg !6591
  %inc = add nsw i32 %42, 1, !dbg !6591
  store i32 %inc, i32* %j, align 4, !dbg !6591
  br label %for.cond5, !dbg !6593, !llvm.loop !6594

for.end:                                          ; preds = %for.cond5
  %43 = load i64, i64* %dst_linesize.addr, align 8, !dbg !6596
  %44 = load i16*, i16** %dst, align 8, !dbg !6598
  %add.ptr = getelementptr inbounds i16, i16* %44, i64 %43, !dbg !6598
  store i16* %add.ptr, i16** %dst, align 8, !dbg !6598
  %45 = load i64, i64* %top_linesize.addr, align 8, !dbg !6599
  %46 = load i16*, i16** %top, align 8, !dbg !6600
  %add.ptr50 = getelementptr inbounds i16, i16* %46, i64 %45, !dbg !6600
  store i16* %add.ptr50, i16** %top, align 8, !dbg !6600
  %47 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !6601
  %48 = load i16*, i16** %bottom, align 8, !dbg !6602
  %add.ptr51 = getelementptr inbounds i16, i16* %48, i64 %47, !dbg !6602
  store i16* %add.ptr51, i16** %bottom, align 8, !dbg !6602
  br label %for.inc52, !dbg !6603

for.inc52:                                        ; preds = %for.end
  %49 = load i32, i32* %i, align 4, !dbg !6604
  %inc53 = add nsw i32 %49, 1, !dbg !6604
  store i32 %inc53, i32* %i, align 4, !dbg !6604
  br label %for.cond, !dbg !6606, !llvm.loop !6607

for.end54:                                        ; preds = %for.cond
  ret void, !dbg !6609
}

; Function Attrs: nounwind uwtable
define internal void @blend_exclusion_10bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !6611 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !6612, metadata !905), !dbg !6613
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !6614, metadata !905), !dbg !6615
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !6616, metadata !905), !dbg !6617
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !6618, metadata !905), !dbg !6619
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !6620, metadata !905), !dbg !6621
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !6622, metadata !905), !dbg !6623
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !6624, metadata !905), !dbg !6625
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !6626, metadata !905), !dbg !6627
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !6628, metadata !905), !dbg !6629
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !6630, metadata !905), !dbg !6631
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !6632, metadata !905), !dbg !6633
  call void @llvm.dbg.declare(metadata i16** %top, metadata !6634, metadata !905), !dbg !6635
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !6636
  %1 = bitcast i8* %0 to i16*, !dbg !6637
  store i16* %1, i16** %top, align 8, !dbg !6635
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !6638, metadata !905), !dbg !6639
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !6640
  %3 = bitcast i8* %2 to i16*, !dbg !6641
  store i16* %3, i16** %bottom, align 8, !dbg !6639
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !6642, metadata !905), !dbg !6643
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !6644
  %5 = bitcast i8* %4 to i16*, !dbg !6645
  store i16* %5, i16** %dst, align 8, !dbg !6643
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !6646, metadata !905), !dbg !6647
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !6648
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !6649
  %7 = load double, double* %opacity1, align 8, !dbg !6649
  store double %7, double* %opacity, align 8, !dbg !6647
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6650, metadata !905), !dbg !6651
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6652, metadata !905), !dbg !6653
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !6654
  %div = sdiv i64 %8, 2, !dbg !6654
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !6654
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !6655
  %div2 = sdiv i64 %9, 2, !dbg !6655
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !6655
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !6656
  %div3 = sdiv i64 %10, 2, !dbg !6656
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !6656
  store i32 0, i32* %i, align 4, !dbg !6657
  br label %for.cond, !dbg !6659

for.cond:                                         ; preds = %for.inc38, %entry
  %11 = load i32, i32* %i, align 4, !dbg !6660
  %conv = sext i32 %11 to i64, !dbg !6660
  %12 = load i64, i64* %height.addr, align 8, !dbg !6663
  %cmp = icmp slt i64 %conv, %12, !dbg !6664
  br i1 %cmp, label %for.body, label %for.end40, !dbg !6665

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !6666
  br label %for.cond5, !dbg !6670

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !6671
  %conv6 = sext i32 %13 to i64, !dbg !6671
  %14 = load i64, i64* %width.addr, align 8, !dbg !6674
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !6675
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !6676

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !6677
  %idxprom = sext i32 %15 to i64, !dbg !6680
  %16 = load i16*, i16** %top, align 8, !dbg !6680
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !6680
  %17 = load i16, i16* %arrayidx, align 2, !dbg !6680
  %conv10 = zext i16 %17 to i32, !dbg !6680
  %conv11 = sitofp i32 %conv10 to double, !dbg !6680
  %18 = load i32, i32* %j, align 4, !dbg !6681
  %idxprom12 = sext i32 %18 to i64, !dbg !6682
  %19 = load i16*, i16** %top, align 8, !dbg !6682
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !6682
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !6682
  %conv14 = zext i16 %20 to i32, !dbg !6682
  %21 = load i32, i32* %j, align 4, !dbg !6683
  %idxprom15 = sext i32 %21 to i64, !dbg !6684
  %22 = load i16*, i16** %bottom, align 8, !dbg !6684
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !6684
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !6684
  %conv17 = zext i16 %23 to i32, !dbg !6684
  %add = add nsw i32 %conv14, %conv17, !dbg !6685
  %24 = load i32, i32* %j, align 4, !dbg !6686
  %idxprom18 = sext i32 %24 to i64, !dbg !6687
  %25 = load i16*, i16** %top, align 8, !dbg !6687
  %arrayidx19 = getelementptr inbounds i16, i16* %25, i64 %idxprom18, !dbg !6687
  %26 = load i16, i16* %arrayidx19, align 2, !dbg !6687
  %conv20 = zext i16 %26 to i32, !dbg !6687
  %mul = mul nsw i32 2, %conv20, !dbg !6688
  %27 = load i32, i32* %j, align 4, !dbg !6689
  %idxprom21 = sext i32 %27 to i64, !dbg !6690
  %28 = load i16*, i16** %bottom, align 8, !dbg !6690
  %arrayidx22 = getelementptr inbounds i16, i16* %28, i64 %idxprom21, !dbg !6690
  %29 = load i16, i16* %arrayidx22, align 2, !dbg !6690
  %conv23 = zext i16 %29 to i32, !dbg !6690
  %mul24 = mul nsw i32 %mul, %conv23, !dbg !6691
  %div25 = sdiv i32 %mul24, 1023, !dbg !6692
  %sub = sub nsw i32 %add, %div25, !dbg !6693
  %30 = load i32, i32* %j, align 4, !dbg !6694
  %idxprom26 = sext i32 %30 to i64, !dbg !6695
  %31 = load i16*, i16** %top, align 8, !dbg !6695
  %arrayidx27 = getelementptr inbounds i16, i16* %31, i64 %idxprom26, !dbg !6695
  %32 = load i16, i16* %arrayidx27, align 2, !dbg !6695
  %conv28 = zext i16 %32 to i32, !dbg !6695
  %sub29 = sub nsw i32 %sub, %conv28, !dbg !6696
  %conv30 = sitofp i32 %sub29 to double, !dbg !6697
  %33 = load double, double* %opacity, align 8, !dbg !6698
  %mul31 = fmul double %conv30, %33, !dbg !6699
  %add32 = fadd double %conv11, %mul31, !dbg !6700
  %conv33 = fptoui double %add32 to i16, !dbg !6680
  %34 = load i32, i32* %j, align 4, !dbg !6701
  %idxprom34 = sext i32 %34 to i64, !dbg !6702
  %35 = load i16*, i16** %dst, align 8, !dbg !6702
  %arrayidx35 = getelementptr inbounds i16, i16* %35, i64 %idxprom34, !dbg !6702
  store i16 %conv33, i16* %arrayidx35, align 2, !dbg !6703
  br label %for.inc, !dbg !6704

for.inc:                                          ; preds = %for.body9
  %36 = load i32, i32* %j, align 4, !dbg !6705
  %inc = add nsw i32 %36, 1, !dbg !6705
  store i32 %inc, i32* %j, align 4, !dbg !6705
  br label %for.cond5, !dbg !6707, !llvm.loop !6708

for.end:                                          ; preds = %for.cond5
  %37 = load i64, i64* %dst_linesize.addr, align 8, !dbg !6710
  %38 = load i16*, i16** %dst, align 8, !dbg !6712
  %add.ptr = getelementptr inbounds i16, i16* %38, i64 %37, !dbg !6712
  store i16* %add.ptr, i16** %dst, align 8, !dbg !6712
  %39 = load i64, i64* %top_linesize.addr, align 8, !dbg !6713
  %40 = load i16*, i16** %top, align 8, !dbg !6714
  %add.ptr36 = getelementptr inbounds i16, i16* %40, i64 %39, !dbg !6714
  store i16* %add.ptr36, i16** %top, align 8, !dbg !6714
  %41 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !6715
  %42 = load i16*, i16** %bottom, align 8, !dbg !6716
  %add.ptr37 = getelementptr inbounds i16, i16* %42, i64 %41, !dbg !6716
  store i16* %add.ptr37, i16** %bottom, align 8, !dbg !6716
  br label %for.inc38, !dbg !6717

for.inc38:                                        ; preds = %for.end
  %43 = load i32, i32* %i, align 4, !dbg !6718
  %inc39 = add nsw i32 %43, 1, !dbg !6718
  store i32 %inc39, i32* %i, align 4, !dbg !6718
  br label %for.cond, !dbg !6720, !llvm.loop !6721

for.end40:                                        ; preds = %for.cond
  ret void, !dbg !6723
}

; Function Attrs: nounwind uwtable
define internal void @blend_extremity_10bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !6725 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !6726, metadata !905), !dbg !6727
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !6728, metadata !905), !dbg !6729
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !6730, metadata !905), !dbg !6731
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !6732, metadata !905), !dbg !6733
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !6734, metadata !905), !dbg !6735
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !6736, metadata !905), !dbg !6737
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !6738, metadata !905), !dbg !6739
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !6740, metadata !905), !dbg !6741
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !6742, metadata !905), !dbg !6743
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !6744, metadata !905), !dbg !6745
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !6746, metadata !905), !dbg !6747
  call void @llvm.dbg.declare(metadata i16** %top, metadata !6748, metadata !905), !dbg !6749
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !6750
  %1 = bitcast i8* %0 to i16*, !dbg !6751
  store i16* %1, i16** %top, align 8, !dbg !6749
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !6752, metadata !905), !dbg !6753
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !6754
  %3 = bitcast i8* %2 to i16*, !dbg !6755
  store i16* %3, i16** %bottom, align 8, !dbg !6753
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !6756, metadata !905), !dbg !6757
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !6758
  %5 = bitcast i8* %4 to i16*, !dbg !6759
  store i16* %5, i16** %dst, align 8, !dbg !6757
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !6760, metadata !905), !dbg !6761
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !6762
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !6763
  %7 = load double, double* %opacity1, align 8, !dbg !6763
  store double %7, double* %opacity, align 8, !dbg !6761
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6764, metadata !905), !dbg !6765
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6766, metadata !905), !dbg !6767
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !6768
  %div = sdiv i64 %8, 2, !dbg !6768
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !6768
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !6769
  %div2 = sdiv i64 %9, 2, !dbg !6769
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !6769
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !6770
  %div3 = sdiv i64 %10, 2, !dbg !6770
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !6770
  store i32 0, i32* %i, align 4, !dbg !6771
  br label %for.cond, !dbg !6773

for.cond:                                         ; preds = %for.inc48, %entry
  %11 = load i32, i32* %i, align 4, !dbg !6774
  %conv = sext i32 %11 to i64, !dbg !6774
  %12 = load i64, i64* %height.addr, align 8, !dbg !6777
  %cmp = icmp slt i64 %conv, %12, !dbg !6778
  br i1 %cmp, label %for.body, label %for.end50, !dbg !6779

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !6780
  br label %for.cond5, !dbg !6784

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !6785
  %conv6 = sext i32 %13 to i64, !dbg !6785
  %14 = load i64, i64* %width.addr, align 8, !dbg !6788
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !6789
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !6790

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !6791
  %idxprom = sext i32 %15 to i64, !dbg !6794
  %16 = load i16*, i16** %top, align 8, !dbg !6794
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !6794
  %17 = load i16, i16* %arrayidx, align 2, !dbg !6794
  %conv10 = zext i16 %17 to i32, !dbg !6794
  %conv11 = sitofp i32 %conv10 to double, !dbg !6794
  %18 = load i32, i32* %j, align 4, !dbg !6795
  %idxprom12 = sext i32 %18 to i64, !dbg !6796
  %19 = load i16*, i16** %top, align 8, !dbg !6796
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !6796
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !6796
  %conv14 = zext i16 %20 to i32, !dbg !6796
  %sub = sub nsw i32 1023, %conv14, !dbg !6797
  %21 = load i32, i32* %j, align 4, !dbg !6798
  %idxprom15 = sext i32 %21 to i64, !dbg !6799
  %22 = load i16*, i16** %bottom, align 8, !dbg !6799
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !6799
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !6799
  %conv17 = zext i16 %23 to i32, !dbg !6799
  %sub18 = sub nsw i32 %sub, %conv17, !dbg !6800
  %cmp19 = icmp sge i32 %sub18, 0, !dbg !6801
  br i1 %cmp19, label %cond.true, label %cond.false, !dbg !6802

cond.true:                                        ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !6803
  %idxprom21 = sext i32 %24 to i64, !dbg !6805
  %25 = load i16*, i16** %top, align 8, !dbg !6805
  %arrayidx22 = getelementptr inbounds i16, i16* %25, i64 %idxprom21, !dbg !6805
  %26 = load i16, i16* %arrayidx22, align 2, !dbg !6805
  %conv23 = zext i16 %26 to i32, !dbg !6805
  %sub24 = sub nsw i32 1023, %conv23, !dbg !6806
  %27 = load i32, i32* %j, align 4, !dbg !6807
  %idxprom25 = sext i32 %27 to i64, !dbg !6808
  %28 = load i16*, i16** %bottom, align 8, !dbg !6808
  %arrayidx26 = getelementptr inbounds i16, i16* %28, i64 %idxprom25, !dbg !6808
  %29 = load i16, i16* %arrayidx26, align 2, !dbg !6808
  %conv27 = zext i16 %29 to i32, !dbg !6808
  %sub28 = sub nsw i32 %sub24, %conv27, !dbg !6809
  br label %cond.end, !dbg !6810

cond.false:                                       ; preds = %for.body9
  %30 = load i32, i32* %j, align 4, !dbg !6811
  %idxprom29 = sext i32 %30 to i64, !dbg !6813
  %31 = load i16*, i16** %top, align 8, !dbg !6813
  %arrayidx30 = getelementptr inbounds i16, i16* %31, i64 %idxprom29, !dbg !6813
  %32 = load i16, i16* %arrayidx30, align 2, !dbg !6813
  %conv31 = zext i16 %32 to i32, !dbg !6813
  %sub32 = sub nsw i32 1023, %conv31, !dbg !6814
  %33 = load i32, i32* %j, align 4, !dbg !6815
  %idxprom33 = sext i32 %33 to i64, !dbg !6816
  %34 = load i16*, i16** %bottom, align 8, !dbg !6816
  %arrayidx34 = getelementptr inbounds i16, i16* %34, i64 %idxprom33, !dbg !6816
  %35 = load i16, i16* %arrayidx34, align 2, !dbg !6816
  %conv35 = zext i16 %35 to i32, !dbg !6816
  %sub36 = sub nsw i32 %sub32, %conv35, !dbg !6817
  %sub37 = sub nsw i32 0, %sub36, !dbg !6818
  br label %cond.end, !dbg !6819

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub28, %cond.true ], [ %sub37, %cond.false ], !dbg !6820
  %36 = load i32, i32* %j, align 4, !dbg !6822
  %idxprom38 = sext i32 %36 to i64, !dbg !6823
  %37 = load i16*, i16** %top, align 8, !dbg !6823
  %arrayidx39 = getelementptr inbounds i16, i16* %37, i64 %idxprom38, !dbg !6823
  %38 = load i16, i16* %arrayidx39, align 2, !dbg !6823
  %conv40 = zext i16 %38 to i32, !dbg !6823
  %sub41 = sub nsw i32 %cond, %conv40, !dbg !6824
  %conv42 = sitofp i32 %sub41 to double, !dbg !6825
  %39 = load double, double* %opacity, align 8, !dbg !6826
  %mul = fmul double %conv42, %39, !dbg !6827
  %add = fadd double %conv11, %mul, !dbg !6828
  %conv43 = fptoui double %add to i16, !dbg !6829
  %40 = load i32, i32* %j, align 4, !dbg !6830
  %idxprom44 = sext i32 %40 to i64, !dbg !6831
  %41 = load i16*, i16** %dst, align 8, !dbg !6831
  %arrayidx45 = getelementptr inbounds i16, i16* %41, i64 %idxprom44, !dbg !6831
  store i16 %conv43, i16* %arrayidx45, align 2, !dbg !6832
  br label %for.inc, !dbg !6833

for.inc:                                          ; preds = %cond.end
  %42 = load i32, i32* %j, align 4, !dbg !6834
  %inc = add nsw i32 %42, 1, !dbg !6834
  store i32 %inc, i32* %j, align 4, !dbg !6834
  br label %for.cond5, !dbg !6836, !llvm.loop !6837

for.end:                                          ; preds = %for.cond5
  %43 = load i64, i64* %dst_linesize.addr, align 8, !dbg !6839
  %44 = load i16*, i16** %dst, align 8, !dbg !6841
  %add.ptr = getelementptr inbounds i16, i16* %44, i64 %43, !dbg !6841
  store i16* %add.ptr, i16** %dst, align 8, !dbg !6841
  %45 = load i64, i64* %top_linesize.addr, align 8, !dbg !6842
  %46 = load i16*, i16** %top, align 8, !dbg !6843
  %add.ptr46 = getelementptr inbounds i16, i16* %46, i64 %45, !dbg !6843
  store i16* %add.ptr46, i16** %top, align 8, !dbg !6843
  %47 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !6844
  %48 = load i16*, i16** %bottom, align 8, !dbg !6845
  %add.ptr47 = getelementptr inbounds i16, i16* %48, i64 %47, !dbg !6845
  store i16* %add.ptr47, i16** %bottom, align 8, !dbg !6845
  br label %for.inc48, !dbg !6846

for.inc48:                                        ; preds = %for.end
  %49 = load i32, i32* %i, align 4, !dbg !6847
  %inc49 = add nsw i32 %49, 1, !dbg !6847
  store i32 %inc49, i32* %i, align 4, !dbg !6847
  br label %for.cond, !dbg !6849, !llvm.loop !6850

for.end50:                                        ; preds = %for.cond
  ret void, !dbg !6852
}

; Function Attrs: nounwind uwtable
define internal void @blend_freeze_10bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !6854 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !6855, metadata !905), !dbg !6856
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !6857, metadata !905), !dbg !6858
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !6859, metadata !905), !dbg !6860
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !6861, metadata !905), !dbg !6862
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !6863, metadata !905), !dbg !6864
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !6865, metadata !905), !dbg !6866
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !6867, metadata !905), !dbg !6868
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !6869, metadata !905), !dbg !6870
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !6871, metadata !905), !dbg !6872
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !6873, metadata !905), !dbg !6874
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !6875, metadata !905), !dbg !6876
  call void @llvm.dbg.declare(metadata i16** %top, metadata !6877, metadata !905), !dbg !6878
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !6879
  %1 = bitcast i8* %0 to i16*, !dbg !6880
  store i16* %1, i16** %top, align 8, !dbg !6878
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !6881, metadata !905), !dbg !6882
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !6883
  %3 = bitcast i8* %2 to i16*, !dbg !6884
  store i16* %3, i16** %bottom, align 8, !dbg !6882
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !6885, metadata !905), !dbg !6886
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !6887
  %5 = bitcast i8* %4 to i16*, !dbg !6888
  store i16* %5, i16** %dst, align 8, !dbg !6886
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !6889, metadata !905), !dbg !6890
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !6891
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !6892
  %7 = load double, double* %opacity1, align 8, !dbg !6892
  store double %7, double* %opacity, align 8, !dbg !6890
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6893, metadata !905), !dbg !6894
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6895, metadata !905), !dbg !6896
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !6897
  %div = sdiv i64 %8, 2, !dbg !6897
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !6897
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !6898
  %div2 = sdiv i64 %9, 2, !dbg !6898
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !6898
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !6899
  %div3 = sdiv i64 %10, 2, !dbg !6899
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !6899
  store i32 0, i32* %i, align 4, !dbg !6900
  br label %for.cond, !dbg !6902

for.cond:                                         ; preds = %for.inc59, %entry
  %11 = load i32, i32* %i, align 4, !dbg !6903
  %conv = sext i32 %11 to i64, !dbg !6903
  %12 = load i64, i64* %height.addr, align 8, !dbg !6906
  %cmp = icmp slt i64 %conv, %12, !dbg !6907
  br i1 %cmp, label %for.body, label %for.end61, !dbg !6908

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !6909
  br label %for.cond5, !dbg !6913

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !6914
  %conv6 = sext i32 %13 to i64, !dbg !6914
  %14 = load i64, i64* %width.addr, align 8, !dbg !6917
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !6918
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !6919

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !6920
  %idxprom = sext i32 %15 to i64, !dbg !6923
  %16 = load i16*, i16** %top, align 8, !dbg !6923
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !6923
  %17 = load i16, i16* %arrayidx, align 2, !dbg !6923
  %conv10 = zext i16 %17 to i32, !dbg !6923
  %conv11 = sitofp i32 %conv10 to double, !dbg !6923
  %18 = load i32, i32* %j, align 4, !dbg !6924
  %idxprom12 = sext i32 %18 to i64, !dbg !6925
  %19 = load i16*, i16** %bottom, align 8, !dbg !6925
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !6925
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !6925
  %conv14 = zext i16 %20 to i32, !dbg !6925
  %cmp15 = icmp eq i32 %conv14, 0, !dbg !6926
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !6927

cond.true:                                        ; preds = %for.body9
  br label %cond.end46, !dbg !6928

cond.false:                                       ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !6930
  %idxprom17 = sext i32 %21 to i64, !dbg !6932
  %22 = load i16*, i16** %top, align 8, !dbg !6932
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !6932
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !6932
  %conv19 = zext i16 %23 to i32, !dbg !6932
  %sub = sub nsw i32 1023, %conv19, !dbg !6933
  %24 = load i32, i32* %j, align 4, !dbg !6934
  %idxprom20 = sext i32 %24 to i64, !dbg !6935
  %25 = load i16*, i16** %top, align 8, !dbg !6935
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !6935
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !6935
  %conv22 = zext i16 %26 to i32, !dbg !6935
  %sub23 = sub nsw i32 1023, %conv22, !dbg !6936
  %mul = mul nsw i32 %sub, %sub23, !dbg !6937
  %27 = load i32, i32* %j, align 4, !dbg !6938
  %idxprom24 = sext i32 %27 to i64, !dbg !6939
  %28 = load i16*, i16** %bottom, align 8, !dbg !6939
  %arrayidx25 = getelementptr inbounds i16, i16* %28, i64 %idxprom24, !dbg !6939
  %29 = load i16, i16* %arrayidx25, align 2, !dbg !6939
  %conv26 = zext i16 %29 to i32, !dbg !6939
  %div27 = sdiv i32 %mul, %conv26, !dbg !6940
  %cmp28 = icmp sgt i32 %div27, 1023, !dbg !6941
  br i1 %cmp28, label %cond.true30, label %cond.false31, !dbg !6942

cond.true30:                                      ; preds = %cond.false
  br label %cond.end, !dbg !6943

cond.false31:                                     ; preds = %cond.false
  %30 = load i32, i32* %j, align 4, !dbg !6945
  %idxprom32 = sext i32 %30 to i64, !dbg !6947
  %31 = load i16*, i16** %top, align 8, !dbg !6947
  %arrayidx33 = getelementptr inbounds i16, i16* %31, i64 %idxprom32, !dbg !6947
  %32 = load i16, i16* %arrayidx33, align 2, !dbg !6947
  %conv34 = zext i16 %32 to i32, !dbg !6947
  %sub35 = sub nsw i32 1023, %conv34, !dbg !6948
  %33 = load i32, i32* %j, align 4, !dbg !6949
  %idxprom36 = sext i32 %33 to i64, !dbg !6950
  %34 = load i16*, i16** %top, align 8, !dbg !6950
  %arrayidx37 = getelementptr inbounds i16, i16* %34, i64 %idxprom36, !dbg !6950
  %35 = load i16, i16* %arrayidx37, align 2, !dbg !6950
  %conv38 = zext i16 %35 to i32, !dbg !6950
  %sub39 = sub nsw i32 1023, %conv38, !dbg !6951
  %mul40 = mul nsw i32 %sub35, %sub39, !dbg !6952
  %36 = load i32, i32* %j, align 4, !dbg !6953
  %idxprom41 = sext i32 %36 to i64, !dbg !6954
  %37 = load i16*, i16** %bottom, align 8, !dbg !6954
  %arrayidx42 = getelementptr inbounds i16, i16* %37, i64 %idxprom41, !dbg !6954
  %38 = load i16, i16* %arrayidx42, align 2, !dbg !6954
  %conv43 = zext i16 %38 to i32, !dbg !6954
  %div44 = sdiv i32 %mul40, %conv43, !dbg !6955
  br label %cond.end, !dbg !6956

cond.end:                                         ; preds = %cond.false31, %cond.true30
  %cond = phi i32 [ 1023, %cond.true30 ], [ %div44, %cond.false31 ], !dbg !6957
  %sub45 = sub nsw i32 1023, %cond, !dbg !6959
  br label %cond.end46, !dbg !6960

cond.end46:                                       ; preds = %cond.end, %cond.true
  %cond47 = phi i32 [ 0, %cond.true ], [ %sub45, %cond.end ], !dbg !6961
  %39 = load i32, i32* %j, align 4, !dbg !6963
  %idxprom48 = sext i32 %39 to i64, !dbg !6964
  %40 = load i16*, i16** %top, align 8, !dbg !6964
  %arrayidx49 = getelementptr inbounds i16, i16* %40, i64 %idxprom48, !dbg !6964
  %41 = load i16, i16* %arrayidx49, align 2, !dbg !6964
  %conv50 = zext i16 %41 to i32, !dbg !6964
  %sub51 = sub nsw i32 %cond47, %conv50, !dbg !6965
  %conv52 = sitofp i32 %sub51 to double, !dbg !6966
  %42 = load double, double* %opacity, align 8, !dbg !6967
  %mul53 = fmul double %conv52, %42, !dbg !6968
  %add = fadd double %conv11, %mul53, !dbg !6969
  %conv54 = fptoui double %add to i16, !dbg !6970
  %43 = load i32, i32* %j, align 4, !dbg !6971
  %idxprom55 = sext i32 %43 to i64, !dbg !6972
  %44 = load i16*, i16** %dst, align 8, !dbg !6972
  %arrayidx56 = getelementptr inbounds i16, i16* %44, i64 %idxprom55, !dbg !6972
  store i16 %conv54, i16* %arrayidx56, align 2, !dbg !6973
  br label %for.inc, !dbg !6974

for.inc:                                          ; preds = %cond.end46
  %45 = load i32, i32* %j, align 4, !dbg !6975
  %inc = add nsw i32 %45, 1, !dbg !6975
  store i32 %inc, i32* %j, align 4, !dbg !6975
  br label %for.cond5, !dbg !6977, !llvm.loop !6978

for.end:                                          ; preds = %for.cond5
  %46 = load i64, i64* %dst_linesize.addr, align 8, !dbg !6980
  %47 = load i16*, i16** %dst, align 8, !dbg !6982
  %add.ptr = getelementptr inbounds i16, i16* %47, i64 %46, !dbg !6982
  store i16* %add.ptr, i16** %dst, align 8, !dbg !6982
  %48 = load i64, i64* %top_linesize.addr, align 8, !dbg !6983
  %49 = load i16*, i16** %top, align 8, !dbg !6984
  %add.ptr57 = getelementptr inbounds i16, i16* %49, i64 %48, !dbg !6984
  store i16* %add.ptr57, i16** %top, align 8, !dbg !6984
  %50 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !6985
  %51 = load i16*, i16** %bottom, align 8, !dbg !6986
  %add.ptr58 = getelementptr inbounds i16, i16* %51, i64 %50, !dbg !6986
  store i16* %add.ptr58, i16** %bottom, align 8, !dbg !6986
  br label %for.inc59, !dbg !6987

for.inc59:                                        ; preds = %for.end
  %52 = load i32, i32* %i, align 4, !dbg !6988
  %inc60 = add nsw i32 %52, 1, !dbg !6988
  store i32 %inc60, i32* %i, align 4, !dbg !6988
  br label %for.cond, !dbg !6990, !llvm.loop !6991

for.end61:                                        ; preds = %for.cond
  ret void, !dbg !6993
}

; Function Attrs: nounwind uwtable
define internal void @blend_glow_10bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !6995 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !6996, metadata !905), !dbg !6997
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !6998, metadata !905), !dbg !6999
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !7000, metadata !905), !dbg !7001
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !7002, metadata !905), !dbg !7003
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !7004, metadata !905), !dbg !7005
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !7006, metadata !905), !dbg !7007
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !7008, metadata !905), !dbg !7009
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !7010, metadata !905), !dbg !7011
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !7012, metadata !905), !dbg !7013
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !7014, metadata !905), !dbg !7015
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !7016, metadata !905), !dbg !7017
  call void @llvm.dbg.declare(metadata i16** %top, metadata !7018, metadata !905), !dbg !7019
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !7020
  %1 = bitcast i8* %0 to i16*, !dbg !7021
  store i16* %1, i16** %top, align 8, !dbg !7019
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !7022, metadata !905), !dbg !7023
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !7024
  %3 = bitcast i8* %2 to i16*, !dbg !7025
  store i16* %3, i16** %bottom, align 8, !dbg !7023
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !7026, metadata !905), !dbg !7027
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !7028
  %5 = bitcast i8* %4 to i16*, !dbg !7029
  store i16* %5, i16** %dst, align 8, !dbg !7027
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !7030, metadata !905), !dbg !7031
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !7032
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !7033
  %7 = load double, double* %opacity1, align 8, !dbg !7033
  store double %7, double* %opacity, align 8, !dbg !7031
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7034, metadata !905), !dbg !7035
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7036, metadata !905), !dbg !7037
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !7038
  %div = sdiv i64 %8, 2, !dbg !7038
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !7038
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !7039
  %div2 = sdiv i64 %9, 2, !dbg !7039
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !7039
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !7040
  %div3 = sdiv i64 %10, 2, !dbg !7040
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !7040
  store i32 0, i32* %i, align 4, !dbg !7041
  br label %for.cond, !dbg !7043

for.cond:                                         ; preds = %for.inc59, %entry
  %11 = load i32, i32* %i, align 4, !dbg !7044
  %conv = sext i32 %11 to i64, !dbg !7044
  %12 = load i64, i64* %height.addr, align 8, !dbg !7047
  %cmp = icmp slt i64 %conv, %12, !dbg !7048
  br i1 %cmp, label %for.body, label %for.end61, !dbg !7049

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !7050
  br label %for.cond5, !dbg !7054

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !7055
  %conv6 = sext i32 %13 to i64, !dbg !7055
  %14 = load i64, i64* %width.addr, align 8, !dbg !7058
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !7059
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !7060

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !7061
  %idxprom = sext i32 %15 to i64, !dbg !7064
  %16 = load i16*, i16** %top, align 8, !dbg !7064
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !7064
  %17 = load i16, i16* %arrayidx, align 2, !dbg !7064
  %conv10 = zext i16 %17 to i32, !dbg !7064
  %conv11 = sitofp i32 %conv10 to double, !dbg !7064
  %18 = load i32, i32* %j, align 4, !dbg !7065
  %idxprom12 = sext i32 %18 to i64, !dbg !7066
  %19 = load i16*, i16** %top, align 8, !dbg !7066
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !7066
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !7066
  %conv14 = zext i16 %20 to i32, !dbg !7066
  %cmp15 = icmp eq i32 %conv14, 1023, !dbg !7067
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !7068

cond.true:                                        ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !7069
  %idxprom17 = sext i32 %21 to i64, !dbg !7071
  %22 = load i16*, i16** %top, align 8, !dbg !7071
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !7071
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !7071
  %conv19 = zext i16 %23 to i32, !dbg !7071
  br label %cond.end46, !dbg !7072

cond.false:                                       ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !7073
  %idxprom20 = sext i32 %24 to i64, !dbg !7075
  %25 = load i16*, i16** %bottom, align 8, !dbg !7075
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !7075
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !7075
  %conv22 = zext i16 %26 to i32, !dbg !7075
  %27 = load i32, i32* %j, align 4, !dbg !7076
  %idxprom23 = sext i32 %27 to i64, !dbg !7077
  %28 = load i16*, i16** %bottom, align 8, !dbg !7077
  %arrayidx24 = getelementptr inbounds i16, i16* %28, i64 %idxprom23, !dbg !7077
  %29 = load i16, i16* %arrayidx24, align 2, !dbg !7077
  %conv25 = zext i16 %29 to i32, !dbg !7077
  %mul = mul nsw i32 %conv22, %conv25, !dbg !7078
  %30 = load i32, i32* %j, align 4, !dbg !7079
  %idxprom26 = sext i32 %30 to i64, !dbg !7080
  %31 = load i16*, i16** %top, align 8, !dbg !7080
  %arrayidx27 = getelementptr inbounds i16, i16* %31, i64 %idxprom26, !dbg !7080
  %32 = load i16, i16* %arrayidx27, align 2, !dbg !7080
  %conv28 = zext i16 %32 to i32, !dbg !7080
  %sub = sub nsw i32 1023, %conv28, !dbg !7081
  %div29 = sdiv i32 %mul, %sub, !dbg !7082
  %cmp30 = icmp sgt i32 1023, %div29, !dbg !7083
  br i1 %cmp30, label %cond.true32, label %cond.false45, !dbg !7084

cond.true32:                                      ; preds = %cond.false
  %33 = load i32, i32* %j, align 4, !dbg !7085
  %idxprom33 = sext i32 %33 to i64, !dbg !7087
  %34 = load i16*, i16** %bottom, align 8, !dbg !7087
  %arrayidx34 = getelementptr inbounds i16, i16* %34, i64 %idxprom33, !dbg !7087
  %35 = load i16, i16* %arrayidx34, align 2, !dbg !7087
  %conv35 = zext i16 %35 to i32, !dbg !7087
  %36 = load i32, i32* %j, align 4, !dbg !7088
  %idxprom36 = sext i32 %36 to i64, !dbg !7089
  %37 = load i16*, i16** %bottom, align 8, !dbg !7089
  %arrayidx37 = getelementptr inbounds i16, i16* %37, i64 %idxprom36, !dbg !7089
  %38 = load i16, i16* %arrayidx37, align 2, !dbg !7089
  %conv38 = zext i16 %38 to i32, !dbg !7089
  %mul39 = mul nsw i32 %conv35, %conv38, !dbg !7090
  %39 = load i32, i32* %j, align 4, !dbg !7091
  %idxprom40 = sext i32 %39 to i64, !dbg !7092
  %40 = load i16*, i16** %top, align 8, !dbg !7092
  %arrayidx41 = getelementptr inbounds i16, i16* %40, i64 %idxprom40, !dbg !7092
  %41 = load i16, i16* %arrayidx41, align 2, !dbg !7092
  %conv42 = zext i16 %41 to i32, !dbg !7092
  %sub43 = sub nsw i32 1023, %conv42, !dbg !7093
  %div44 = sdiv i32 %mul39, %sub43, !dbg !7094
  br label %cond.end, !dbg !7095

cond.false45:                                     ; preds = %cond.false
  br label %cond.end, !dbg !7096

cond.end:                                         ; preds = %cond.false45, %cond.true32
  %cond = phi i32 [ %div44, %cond.true32 ], [ 1023, %cond.false45 ], !dbg !7098
  br label %cond.end46, !dbg !7100

cond.end46:                                       ; preds = %cond.end, %cond.true
  %cond47 = phi i32 [ %conv19, %cond.true ], [ %cond, %cond.end ], !dbg !7101
  %42 = load i32, i32* %j, align 4, !dbg !7103
  %idxprom48 = sext i32 %42 to i64, !dbg !7104
  %43 = load i16*, i16** %top, align 8, !dbg !7104
  %arrayidx49 = getelementptr inbounds i16, i16* %43, i64 %idxprom48, !dbg !7104
  %44 = load i16, i16* %arrayidx49, align 2, !dbg !7104
  %conv50 = zext i16 %44 to i32, !dbg !7104
  %sub51 = sub nsw i32 %cond47, %conv50, !dbg !7105
  %conv52 = sitofp i32 %sub51 to double, !dbg !7106
  %45 = load double, double* %opacity, align 8, !dbg !7107
  %mul53 = fmul double %conv52, %45, !dbg !7108
  %add = fadd double %conv11, %mul53, !dbg !7109
  %conv54 = fptoui double %add to i16, !dbg !7110
  %46 = load i32, i32* %j, align 4, !dbg !7111
  %idxprom55 = sext i32 %46 to i64, !dbg !7112
  %47 = load i16*, i16** %dst, align 8, !dbg !7112
  %arrayidx56 = getelementptr inbounds i16, i16* %47, i64 %idxprom55, !dbg !7112
  store i16 %conv54, i16* %arrayidx56, align 2, !dbg !7113
  br label %for.inc, !dbg !7114

for.inc:                                          ; preds = %cond.end46
  %48 = load i32, i32* %j, align 4, !dbg !7115
  %inc = add nsw i32 %48, 1, !dbg !7115
  store i32 %inc, i32* %j, align 4, !dbg !7115
  br label %for.cond5, !dbg !7117, !llvm.loop !7118

for.end:                                          ; preds = %for.cond5
  %49 = load i64, i64* %dst_linesize.addr, align 8, !dbg !7120
  %50 = load i16*, i16** %dst, align 8, !dbg !7122
  %add.ptr = getelementptr inbounds i16, i16* %50, i64 %49, !dbg !7122
  store i16* %add.ptr, i16** %dst, align 8, !dbg !7122
  %51 = load i64, i64* %top_linesize.addr, align 8, !dbg !7123
  %52 = load i16*, i16** %top, align 8, !dbg !7124
  %add.ptr57 = getelementptr inbounds i16, i16* %52, i64 %51, !dbg !7124
  store i16* %add.ptr57, i16** %top, align 8, !dbg !7124
  %53 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !7125
  %54 = load i16*, i16** %bottom, align 8, !dbg !7126
  %add.ptr58 = getelementptr inbounds i16, i16* %54, i64 %53, !dbg !7126
  store i16* %add.ptr58, i16** %bottom, align 8, !dbg !7126
  br label %for.inc59, !dbg !7127

for.inc59:                                        ; preds = %for.end
  %55 = load i32, i32* %i, align 4, !dbg !7128
  %inc60 = add nsw i32 %55, 1, !dbg !7128
  store i32 %inc60, i32* %i, align 4, !dbg !7128
  br label %for.cond, !dbg !7130, !llvm.loop !7131

for.end61:                                        ; preds = %for.cond
  ret void, !dbg !7133
}

; Function Attrs: nounwind uwtable
define internal void @blend_hardlight_10bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !7135 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !7136, metadata !905), !dbg !7137
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !7138, metadata !905), !dbg !7139
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !7140, metadata !905), !dbg !7141
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !7142, metadata !905), !dbg !7143
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !7144, metadata !905), !dbg !7145
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !7146, metadata !905), !dbg !7147
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !7148, metadata !905), !dbg !7149
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !7150, metadata !905), !dbg !7151
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !7152, metadata !905), !dbg !7153
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !7154, metadata !905), !dbg !7155
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !7156, metadata !905), !dbg !7157
  call void @llvm.dbg.declare(metadata i16** %top, metadata !7158, metadata !905), !dbg !7159
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !7160
  %1 = bitcast i8* %0 to i16*, !dbg !7161
  store i16* %1, i16** %top, align 8, !dbg !7159
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !7162, metadata !905), !dbg !7163
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !7164
  %3 = bitcast i8* %2 to i16*, !dbg !7165
  store i16* %3, i16** %bottom, align 8, !dbg !7163
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !7166, metadata !905), !dbg !7167
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !7168
  %5 = bitcast i8* %4 to i16*, !dbg !7169
  store i16* %5, i16** %dst, align 8, !dbg !7167
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !7170, metadata !905), !dbg !7171
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !7172
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !7173
  %7 = load double, double* %opacity1, align 8, !dbg !7173
  store double %7, double* %opacity, align 8, !dbg !7171
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7174, metadata !905), !dbg !7175
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7176, metadata !905), !dbg !7177
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !7178
  %div = sdiv i64 %8, 2, !dbg !7178
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !7178
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !7179
  %div2 = sdiv i64 %9, 2, !dbg !7179
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !7179
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !7180
  %div3 = sdiv i64 %10, 2, !dbg !7180
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !7180
  store i32 0, i32* %i, align 4, !dbg !7181
  br label %for.cond, !dbg !7183

for.cond:                                         ; preds = %for.inc47, %entry
  %11 = load i32, i32* %i, align 4, !dbg !7184
  %conv = sext i32 %11 to i64, !dbg !7184
  %12 = load i64, i64* %height.addr, align 8, !dbg !7187
  %cmp = icmp slt i64 %conv, %12, !dbg !7188
  br i1 %cmp, label %for.body, label %for.end49, !dbg !7189

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !7190
  br label %for.cond5, !dbg !7194

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !7195
  %conv6 = sext i32 %13 to i64, !dbg !7195
  %14 = load i64, i64* %width.addr, align 8, !dbg !7198
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !7199
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !7200

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !7201
  %idxprom = sext i32 %15 to i64, !dbg !7204
  %16 = load i16*, i16** %top, align 8, !dbg !7204
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !7204
  %17 = load i16, i16* %arrayidx, align 2, !dbg !7204
  %conv10 = zext i16 %17 to i32, !dbg !7204
  %conv11 = sitofp i32 %conv10 to double, !dbg !7204
  %18 = load i32, i32* %j, align 4, !dbg !7205
  %idxprom12 = sext i32 %18 to i64, !dbg !7206
  %19 = load i16*, i16** %bottom, align 8, !dbg !7206
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !7206
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !7206
  %conv14 = zext i16 %20 to i32, !dbg !7206
  %cmp15 = icmp slt i32 %conv14, 512, !dbg !7207
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !7208

cond.true:                                        ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !7209
  %idxprom17 = sext i32 %21 to i64, !dbg !7211
  %22 = load i16*, i16** %bottom, align 8, !dbg !7211
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !7211
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !7211
  %conv19 = zext i16 %23 to i32, !dbg !7212
  %24 = load i32, i32* %j, align 4, !dbg !7213
  %idxprom20 = sext i32 %24 to i64, !dbg !7214
  %25 = load i16*, i16** %top, align 8, !dbg !7214
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !7214
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !7214
  %conv22 = zext i16 %26 to i32, !dbg !7215
  %mul = mul nsw i32 %conv19, %conv22, !dbg !7216
  %div23 = sdiv i32 %mul, 1023, !dbg !7217
  %mul24 = mul nsw i32 2, %div23, !dbg !7218
  br label %cond.end, !dbg !7219

cond.false:                                       ; preds = %for.body9
  %27 = load i32, i32* %j, align 4, !dbg !7220
  %idxprom25 = sext i32 %27 to i64, !dbg !7222
  %28 = load i16*, i16** %bottom, align 8, !dbg !7222
  %arrayidx26 = getelementptr inbounds i16, i16* %28, i64 %idxprom25, !dbg !7222
  %29 = load i16, i16* %arrayidx26, align 2, !dbg !7222
  %conv27 = zext i16 %29 to i32, !dbg !7223
  %sub = sub nsw i32 1023, %conv27, !dbg !7224
  %30 = load i32, i32* %j, align 4, !dbg !7225
  %idxprom28 = sext i32 %30 to i64, !dbg !7226
  %31 = load i16*, i16** %top, align 8, !dbg !7226
  %arrayidx29 = getelementptr inbounds i16, i16* %31, i64 %idxprom28, !dbg !7226
  %32 = load i16, i16* %arrayidx29, align 2, !dbg !7226
  %conv30 = zext i16 %32 to i32, !dbg !7227
  %sub31 = sub nsw i32 1023, %conv30, !dbg !7228
  %mul32 = mul nsw i32 %sub, %sub31, !dbg !7229
  %div33 = sdiv i32 %mul32, 1023, !dbg !7230
  %mul34 = mul nsw i32 2, %div33, !dbg !7231
  %sub35 = sub nsw i32 1023, %mul34, !dbg !7232
  br label %cond.end, !dbg !7233

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %mul24, %cond.true ], [ %sub35, %cond.false ], !dbg !7234
  %33 = load i32, i32* %j, align 4, !dbg !7236
  %idxprom36 = sext i32 %33 to i64, !dbg !7237
  %34 = load i16*, i16** %top, align 8, !dbg !7237
  %arrayidx37 = getelementptr inbounds i16, i16* %34, i64 %idxprom36, !dbg !7237
  %35 = load i16, i16* %arrayidx37, align 2, !dbg !7237
  %conv38 = zext i16 %35 to i32, !dbg !7237
  %sub39 = sub nsw i32 %cond, %conv38, !dbg !7238
  %conv40 = sitofp i32 %sub39 to double, !dbg !7239
  %36 = load double, double* %opacity, align 8, !dbg !7240
  %mul41 = fmul double %conv40, %36, !dbg !7241
  %add = fadd double %conv11, %mul41, !dbg !7242
  %conv42 = fptoui double %add to i16, !dbg !7243
  %37 = load i32, i32* %j, align 4, !dbg !7244
  %idxprom43 = sext i32 %37 to i64, !dbg !7245
  %38 = load i16*, i16** %dst, align 8, !dbg !7245
  %arrayidx44 = getelementptr inbounds i16, i16* %38, i64 %idxprom43, !dbg !7245
  store i16 %conv42, i16* %arrayidx44, align 2, !dbg !7246
  br label %for.inc, !dbg !7247

for.inc:                                          ; preds = %cond.end
  %39 = load i32, i32* %j, align 4, !dbg !7248
  %inc = add nsw i32 %39, 1, !dbg !7248
  store i32 %inc, i32* %j, align 4, !dbg !7248
  br label %for.cond5, !dbg !7250, !llvm.loop !7251

for.end:                                          ; preds = %for.cond5
  %40 = load i64, i64* %dst_linesize.addr, align 8, !dbg !7253
  %41 = load i16*, i16** %dst, align 8, !dbg !7255
  %add.ptr = getelementptr inbounds i16, i16* %41, i64 %40, !dbg !7255
  store i16* %add.ptr, i16** %dst, align 8, !dbg !7255
  %42 = load i64, i64* %top_linesize.addr, align 8, !dbg !7256
  %43 = load i16*, i16** %top, align 8, !dbg !7257
  %add.ptr45 = getelementptr inbounds i16, i16* %43, i64 %42, !dbg !7257
  store i16* %add.ptr45, i16** %top, align 8, !dbg !7257
  %44 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !7258
  %45 = load i16*, i16** %bottom, align 8, !dbg !7259
  %add.ptr46 = getelementptr inbounds i16, i16* %45, i64 %44, !dbg !7259
  store i16* %add.ptr46, i16** %bottom, align 8, !dbg !7259
  br label %for.inc47, !dbg !7260

for.inc47:                                        ; preds = %for.end
  %46 = load i32, i32* %i, align 4, !dbg !7261
  %inc48 = add nsw i32 %46, 1, !dbg !7261
  store i32 %inc48, i32* %i, align 4, !dbg !7261
  br label %for.cond, !dbg !7263, !llvm.loop !7264

for.end49:                                        ; preds = %for.cond
  ret void, !dbg !7266
}

; Function Attrs: nounwind uwtable
define internal void @blend_hardmix_10bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !7268 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !7269, metadata !905), !dbg !7270
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !7271, metadata !905), !dbg !7272
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !7273, metadata !905), !dbg !7274
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !7275, metadata !905), !dbg !7276
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !7277, metadata !905), !dbg !7278
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !7279, metadata !905), !dbg !7280
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !7281, metadata !905), !dbg !7282
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !7283, metadata !905), !dbg !7284
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !7285, metadata !905), !dbg !7286
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !7287, metadata !905), !dbg !7288
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !7289, metadata !905), !dbg !7290
  call void @llvm.dbg.declare(metadata i16** %top, metadata !7291, metadata !905), !dbg !7292
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !7293
  %1 = bitcast i8* %0 to i16*, !dbg !7294
  store i16* %1, i16** %top, align 8, !dbg !7292
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !7295, metadata !905), !dbg !7296
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !7297
  %3 = bitcast i8* %2 to i16*, !dbg !7298
  store i16* %3, i16** %bottom, align 8, !dbg !7296
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !7299, metadata !905), !dbg !7300
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !7301
  %5 = bitcast i8* %4 to i16*, !dbg !7302
  store i16* %5, i16** %dst, align 8, !dbg !7300
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !7303, metadata !905), !dbg !7304
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !7305
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !7306
  %7 = load double, double* %opacity1, align 8, !dbg !7306
  store double %7, double* %opacity, align 8, !dbg !7304
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7307, metadata !905), !dbg !7308
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7309, metadata !905), !dbg !7310
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !7311
  %div = sdiv i64 %8, 2, !dbg !7311
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !7311
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !7312
  %div2 = sdiv i64 %9, 2, !dbg !7312
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !7312
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !7313
  %div3 = sdiv i64 %10, 2, !dbg !7313
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !7313
  store i32 0, i32* %i, align 4, !dbg !7314
  br label %for.cond, !dbg !7316

for.cond:                                         ; preds = %for.inc30, %entry
  %11 = load i32, i32* %i, align 4, !dbg !7317
  %conv = sext i32 %11 to i64, !dbg !7317
  %12 = load i64, i64* %height.addr, align 8, !dbg !7320
  %cmp = icmp slt i64 %conv, %12, !dbg !7321
  br i1 %cmp, label %for.body, label %for.end32, !dbg !7322

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !7323
  br label %for.cond5, !dbg !7327

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !7328
  %conv6 = sext i32 %13 to i64, !dbg !7328
  %14 = load i64, i64* %width.addr, align 8, !dbg !7331
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !7332
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !7333

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !7334
  %idxprom = sext i32 %15 to i64, !dbg !7337
  %16 = load i16*, i16** %top, align 8, !dbg !7337
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !7337
  %17 = load i16, i16* %arrayidx, align 2, !dbg !7337
  %conv10 = zext i16 %17 to i32, !dbg !7337
  %conv11 = sitofp i32 %conv10 to double, !dbg !7337
  %18 = load i32, i32* %j, align 4, !dbg !7338
  %idxprom12 = sext i32 %18 to i64, !dbg !7339
  %19 = load i16*, i16** %top, align 8, !dbg !7339
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !7339
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !7339
  %conv14 = zext i16 %20 to i32, !dbg !7339
  %21 = load i32, i32* %j, align 4, !dbg !7340
  %idxprom15 = sext i32 %21 to i64, !dbg !7341
  %22 = load i16*, i16** %bottom, align 8, !dbg !7341
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !7341
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !7341
  %conv17 = zext i16 %23 to i32, !dbg !7341
  %sub = sub nsw i32 1023, %conv17, !dbg !7342
  %cmp18 = icmp slt i32 %conv14, %sub, !dbg !7343
  %cond = select i1 %cmp18, i32 0, i32 1023, !dbg !7344
  %24 = load i32, i32* %j, align 4, !dbg !7345
  %idxprom20 = sext i32 %24 to i64, !dbg !7346
  %25 = load i16*, i16** %top, align 8, !dbg !7346
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !7346
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !7346
  %conv22 = zext i16 %26 to i32, !dbg !7346
  %sub23 = sub nsw i32 %cond, %conv22, !dbg !7347
  %conv24 = sitofp i32 %sub23 to double, !dbg !7348
  %27 = load double, double* %opacity, align 8, !dbg !7349
  %mul = fmul double %conv24, %27, !dbg !7350
  %add = fadd double %conv11, %mul, !dbg !7351
  %conv25 = fptoui double %add to i16, !dbg !7337
  %28 = load i32, i32* %j, align 4, !dbg !7352
  %idxprom26 = sext i32 %28 to i64, !dbg !7353
  %29 = load i16*, i16** %dst, align 8, !dbg !7353
  %arrayidx27 = getelementptr inbounds i16, i16* %29, i64 %idxprom26, !dbg !7353
  store i16 %conv25, i16* %arrayidx27, align 2, !dbg !7354
  br label %for.inc, !dbg !7355

for.inc:                                          ; preds = %for.body9
  %30 = load i32, i32* %j, align 4, !dbg !7356
  %inc = add nsw i32 %30, 1, !dbg !7356
  store i32 %inc, i32* %j, align 4, !dbg !7356
  br label %for.cond5, !dbg !7358, !llvm.loop !7359

for.end:                                          ; preds = %for.cond5
  %31 = load i64, i64* %dst_linesize.addr, align 8, !dbg !7361
  %32 = load i16*, i16** %dst, align 8, !dbg !7363
  %add.ptr = getelementptr inbounds i16, i16* %32, i64 %31, !dbg !7363
  store i16* %add.ptr, i16** %dst, align 8, !dbg !7363
  %33 = load i64, i64* %top_linesize.addr, align 8, !dbg !7364
  %34 = load i16*, i16** %top, align 8, !dbg !7365
  %add.ptr28 = getelementptr inbounds i16, i16* %34, i64 %33, !dbg !7365
  store i16* %add.ptr28, i16** %top, align 8, !dbg !7365
  %35 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !7366
  %36 = load i16*, i16** %bottom, align 8, !dbg !7367
  %add.ptr29 = getelementptr inbounds i16, i16* %36, i64 %35, !dbg !7367
  store i16* %add.ptr29, i16** %bottom, align 8, !dbg !7367
  br label %for.inc30, !dbg !7368

for.inc30:                                        ; preds = %for.end
  %37 = load i32, i32* %i, align 4, !dbg !7369
  %inc31 = add nsw i32 %37, 1, !dbg !7369
  store i32 %inc31, i32* %i, align 4, !dbg !7369
  br label %for.cond, !dbg !7371, !llvm.loop !7372

for.end32:                                        ; preds = %for.cond
  ret void, !dbg !7374
}

; Function Attrs: nounwind uwtable
define internal void @blend_heat_10bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !7376 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !7377, metadata !905), !dbg !7378
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !7379, metadata !905), !dbg !7380
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !7381, metadata !905), !dbg !7382
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !7383, metadata !905), !dbg !7384
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !7385, metadata !905), !dbg !7386
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !7387, metadata !905), !dbg !7388
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !7389, metadata !905), !dbg !7390
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !7391, metadata !905), !dbg !7392
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !7393, metadata !905), !dbg !7394
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !7395, metadata !905), !dbg !7396
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !7397, metadata !905), !dbg !7398
  call void @llvm.dbg.declare(metadata i16** %top, metadata !7399, metadata !905), !dbg !7400
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !7401
  %1 = bitcast i8* %0 to i16*, !dbg !7402
  store i16* %1, i16** %top, align 8, !dbg !7400
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !7403, metadata !905), !dbg !7404
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !7405
  %3 = bitcast i8* %2 to i16*, !dbg !7406
  store i16* %3, i16** %bottom, align 8, !dbg !7404
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !7407, metadata !905), !dbg !7408
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !7409
  %5 = bitcast i8* %4 to i16*, !dbg !7410
  store i16* %5, i16** %dst, align 8, !dbg !7408
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !7411, metadata !905), !dbg !7412
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !7413
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !7414
  %7 = load double, double* %opacity1, align 8, !dbg !7414
  store double %7, double* %opacity, align 8, !dbg !7412
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7415, metadata !905), !dbg !7416
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7417, metadata !905), !dbg !7418
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !7419
  %div = sdiv i64 %8, 2, !dbg !7419
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !7419
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !7420
  %div2 = sdiv i64 %9, 2, !dbg !7420
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !7420
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !7421
  %div3 = sdiv i64 %10, 2, !dbg !7421
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !7421
  store i32 0, i32* %i, align 4, !dbg !7422
  br label %for.cond, !dbg !7424

for.cond:                                         ; preds = %for.inc59, %entry
  %11 = load i32, i32* %i, align 4, !dbg !7425
  %conv = sext i32 %11 to i64, !dbg !7425
  %12 = load i64, i64* %height.addr, align 8, !dbg !7428
  %cmp = icmp slt i64 %conv, %12, !dbg !7429
  br i1 %cmp, label %for.body, label %for.end61, !dbg !7430

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !7431
  br label %for.cond5, !dbg !7435

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !7436
  %conv6 = sext i32 %13 to i64, !dbg !7436
  %14 = load i64, i64* %width.addr, align 8, !dbg !7439
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !7440
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !7441

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !7442
  %idxprom = sext i32 %15 to i64, !dbg !7445
  %16 = load i16*, i16** %top, align 8, !dbg !7445
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !7445
  %17 = load i16, i16* %arrayidx, align 2, !dbg !7445
  %conv10 = zext i16 %17 to i32, !dbg !7445
  %conv11 = sitofp i32 %conv10 to double, !dbg !7445
  %18 = load i32, i32* %j, align 4, !dbg !7446
  %idxprom12 = sext i32 %18 to i64, !dbg !7447
  %19 = load i16*, i16** %top, align 8, !dbg !7447
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !7447
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !7447
  %conv14 = zext i16 %20 to i32, !dbg !7447
  %cmp15 = icmp eq i32 %conv14, 0, !dbg !7448
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !7449

cond.true:                                        ; preds = %for.body9
  br label %cond.end46, !dbg !7450

cond.false:                                       ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !7452
  %idxprom17 = sext i32 %21 to i64, !dbg !7454
  %22 = load i16*, i16** %bottom, align 8, !dbg !7454
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !7454
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !7454
  %conv19 = zext i16 %23 to i32, !dbg !7454
  %sub = sub nsw i32 1023, %conv19, !dbg !7455
  %24 = load i32, i32* %j, align 4, !dbg !7456
  %idxprom20 = sext i32 %24 to i64, !dbg !7457
  %25 = load i16*, i16** %bottom, align 8, !dbg !7457
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !7457
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !7457
  %conv22 = zext i16 %26 to i32, !dbg !7457
  %sub23 = sub nsw i32 1023, %conv22, !dbg !7458
  %mul = mul nsw i32 %sub, %sub23, !dbg !7459
  %27 = load i32, i32* %j, align 4, !dbg !7460
  %idxprom24 = sext i32 %27 to i64, !dbg !7461
  %28 = load i16*, i16** %top, align 8, !dbg !7461
  %arrayidx25 = getelementptr inbounds i16, i16* %28, i64 %idxprom24, !dbg !7461
  %29 = load i16, i16* %arrayidx25, align 2, !dbg !7461
  %conv26 = zext i16 %29 to i32, !dbg !7461
  %div27 = sdiv i32 %mul, %conv26, !dbg !7462
  %cmp28 = icmp sgt i32 %div27, 1023, !dbg !7463
  br i1 %cmp28, label %cond.true30, label %cond.false31, !dbg !7464

cond.true30:                                      ; preds = %cond.false
  br label %cond.end, !dbg !7465

cond.false31:                                     ; preds = %cond.false
  %30 = load i32, i32* %j, align 4, !dbg !7467
  %idxprom32 = sext i32 %30 to i64, !dbg !7469
  %31 = load i16*, i16** %bottom, align 8, !dbg !7469
  %arrayidx33 = getelementptr inbounds i16, i16* %31, i64 %idxprom32, !dbg !7469
  %32 = load i16, i16* %arrayidx33, align 2, !dbg !7469
  %conv34 = zext i16 %32 to i32, !dbg !7469
  %sub35 = sub nsw i32 1023, %conv34, !dbg !7470
  %33 = load i32, i32* %j, align 4, !dbg !7471
  %idxprom36 = sext i32 %33 to i64, !dbg !7472
  %34 = load i16*, i16** %bottom, align 8, !dbg !7472
  %arrayidx37 = getelementptr inbounds i16, i16* %34, i64 %idxprom36, !dbg !7472
  %35 = load i16, i16* %arrayidx37, align 2, !dbg !7472
  %conv38 = zext i16 %35 to i32, !dbg !7472
  %sub39 = sub nsw i32 1023, %conv38, !dbg !7473
  %mul40 = mul nsw i32 %sub35, %sub39, !dbg !7474
  %36 = load i32, i32* %j, align 4, !dbg !7475
  %idxprom41 = sext i32 %36 to i64, !dbg !7476
  %37 = load i16*, i16** %top, align 8, !dbg !7476
  %arrayidx42 = getelementptr inbounds i16, i16* %37, i64 %idxprom41, !dbg !7476
  %38 = load i16, i16* %arrayidx42, align 2, !dbg !7476
  %conv43 = zext i16 %38 to i32, !dbg !7476
  %div44 = sdiv i32 %mul40, %conv43, !dbg !7477
  br label %cond.end, !dbg !7478

cond.end:                                         ; preds = %cond.false31, %cond.true30
  %cond = phi i32 [ 1023, %cond.true30 ], [ %div44, %cond.false31 ], !dbg !7479
  %sub45 = sub nsw i32 1023, %cond, !dbg !7481
  br label %cond.end46, !dbg !7482

cond.end46:                                       ; preds = %cond.end, %cond.true
  %cond47 = phi i32 [ 0, %cond.true ], [ %sub45, %cond.end ], !dbg !7483
  %39 = load i32, i32* %j, align 4, !dbg !7485
  %idxprom48 = sext i32 %39 to i64, !dbg !7486
  %40 = load i16*, i16** %top, align 8, !dbg !7486
  %arrayidx49 = getelementptr inbounds i16, i16* %40, i64 %idxprom48, !dbg !7486
  %41 = load i16, i16* %arrayidx49, align 2, !dbg !7486
  %conv50 = zext i16 %41 to i32, !dbg !7486
  %sub51 = sub nsw i32 %cond47, %conv50, !dbg !7487
  %conv52 = sitofp i32 %sub51 to double, !dbg !7488
  %42 = load double, double* %opacity, align 8, !dbg !7489
  %mul53 = fmul double %conv52, %42, !dbg !7490
  %add = fadd double %conv11, %mul53, !dbg !7491
  %conv54 = fptoui double %add to i16, !dbg !7492
  %43 = load i32, i32* %j, align 4, !dbg !7493
  %idxprom55 = sext i32 %43 to i64, !dbg !7494
  %44 = load i16*, i16** %dst, align 8, !dbg !7494
  %arrayidx56 = getelementptr inbounds i16, i16* %44, i64 %idxprom55, !dbg !7494
  store i16 %conv54, i16* %arrayidx56, align 2, !dbg !7495
  br label %for.inc, !dbg !7496

for.inc:                                          ; preds = %cond.end46
  %45 = load i32, i32* %j, align 4, !dbg !7497
  %inc = add nsw i32 %45, 1, !dbg !7497
  store i32 %inc, i32* %j, align 4, !dbg !7497
  br label %for.cond5, !dbg !7499, !llvm.loop !7500

for.end:                                          ; preds = %for.cond5
  %46 = load i64, i64* %dst_linesize.addr, align 8, !dbg !7502
  %47 = load i16*, i16** %dst, align 8, !dbg !7504
  %add.ptr = getelementptr inbounds i16, i16* %47, i64 %46, !dbg !7504
  store i16* %add.ptr, i16** %dst, align 8, !dbg !7504
  %48 = load i64, i64* %top_linesize.addr, align 8, !dbg !7505
  %49 = load i16*, i16** %top, align 8, !dbg !7506
  %add.ptr57 = getelementptr inbounds i16, i16* %49, i64 %48, !dbg !7506
  store i16* %add.ptr57, i16** %top, align 8, !dbg !7506
  %50 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !7507
  %51 = load i16*, i16** %bottom, align 8, !dbg !7508
  %add.ptr58 = getelementptr inbounds i16, i16* %51, i64 %50, !dbg !7508
  store i16* %add.ptr58, i16** %bottom, align 8, !dbg !7508
  br label %for.inc59, !dbg !7509

for.inc59:                                        ; preds = %for.end
  %52 = load i32, i32* %i, align 4, !dbg !7510
  %inc60 = add nsw i32 %52, 1, !dbg !7510
  store i32 %inc60, i32* %i, align 4, !dbg !7510
  br label %for.cond, !dbg !7512, !llvm.loop !7513

for.end61:                                        ; preds = %for.cond
  ret void, !dbg !7515
}

; Function Attrs: nounwind uwtable
define internal void @blend_lighten_10bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !7517 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !7518, metadata !905), !dbg !7519
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !7520, metadata !905), !dbg !7521
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !7522, metadata !905), !dbg !7523
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !7524, metadata !905), !dbg !7525
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !7526, metadata !905), !dbg !7527
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !7528, metadata !905), !dbg !7529
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !7530, metadata !905), !dbg !7531
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !7532, metadata !905), !dbg !7533
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !7534, metadata !905), !dbg !7535
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !7536, metadata !905), !dbg !7537
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !7538, metadata !905), !dbg !7539
  call void @llvm.dbg.declare(metadata i16** %top, metadata !7540, metadata !905), !dbg !7541
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !7542
  %1 = bitcast i8* %0 to i16*, !dbg !7543
  store i16* %1, i16** %top, align 8, !dbg !7541
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !7544, metadata !905), !dbg !7545
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !7546
  %3 = bitcast i8* %2 to i16*, !dbg !7547
  store i16* %3, i16** %bottom, align 8, !dbg !7545
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !7548, metadata !905), !dbg !7549
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !7550
  %5 = bitcast i8* %4 to i16*, !dbg !7551
  store i16* %5, i16** %dst, align 8, !dbg !7549
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !7552, metadata !905), !dbg !7553
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !7554
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !7555
  %7 = load double, double* %opacity1, align 8, !dbg !7555
  store double %7, double* %opacity, align 8, !dbg !7553
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7556, metadata !905), !dbg !7557
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7558, metadata !905), !dbg !7559
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !7560
  %div = sdiv i64 %8, 2, !dbg !7560
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !7560
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !7561
  %div2 = sdiv i64 %9, 2, !dbg !7561
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !7561
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !7562
  %div3 = sdiv i64 %10, 2, !dbg !7562
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !7562
  store i32 0, i32* %i, align 4, !dbg !7563
  br label %for.cond, !dbg !7565

for.cond:                                         ; preds = %for.inc35, %entry
  %11 = load i32, i32* %i, align 4, !dbg !7566
  %conv = sext i32 %11 to i64, !dbg !7566
  %12 = load i64, i64* %height.addr, align 8, !dbg !7569
  %cmp = icmp slt i64 %conv, %12, !dbg !7570
  br i1 %cmp, label %for.body, label %for.end37, !dbg !7571

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !7572
  br label %for.cond5, !dbg !7576

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !7577
  %conv6 = sext i32 %13 to i64, !dbg !7577
  %14 = load i64, i64* %width.addr, align 8, !dbg !7580
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !7581
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !7582

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !7583
  %idxprom = sext i32 %15 to i64, !dbg !7586
  %16 = load i16*, i16** %top, align 8, !dbg !7586
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !7586
  %17 = load i16, i16* %arrayidx, align 2, !dbg !7586
  %conv10 = zext i16 %17 to i32, !dbg !7586
  %conv11 = sitofp i32 %conv10 to double, !dbg !7586
  %18 = load i32, i32* %j, align 4, !dbg !7587
  %idxprom12 = sext i32 %18 to i64, !dbg !7588
  %19 = load i16*, i16** %top, align 8, !dbg !7588
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !7588
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !7588
  %conv14 = zext i16 %20 to i32, !dbg !7589
  %21 = load i32, i32* %j, align 4, !dbg !7590
  %idxprom15 = sext i32 %21 to i64, !dbg !7591
  %22 = load i16*, i16** %bottom, align 8, !dbg !7591
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !7591
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !7591
  %conv17 = zext i16 %23 to i32, !dbg !7592
  %cmp18 = icmp sgt i32 %conv14, %conv17, !dbg !7593
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !7589

cond.true:                                        ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !7594
  %idxprom20 = sext i32 %24 to i64, !dbg !7596
  %25 = load i16*, i16** %top, align 8, !dbg !7596
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !7596
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !7596
  %conv22 = zext i16 %26 to i32, !dbg !7597
  br label %cond.end, !dbg !7598

cond.false:                                       ; preds = %for.body9
  %27 = load i32, i32* %j, align 4, !dbg !7599
  %idxprom23 = sext i32 %27 to i64, !dbg !7601
  %28 = load i16*, i16** %bottom, align 8, !dbg !7601
  %arrayidx24 = getelementptr inbounds i16, i16* %28, i64 %idxprom23, !dbg !7601
  %29 = load i16, i16* %arrayidx24, align 2, !dbg !7601
  %conv25 = zext i16 %29 to i32, !dbg !7602
  br label %cond.end, !dbg !7603

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv22, %cond.true ], [ %conv25, %cond.false ], !dbg !7604
  %30 = load i32, i32* %j, align 4, !dbg !7606
  %idxprom26 = sext i32 %30 to i64, !dbg !7607
  %31 = load i16*, i16** %top, align 8, !dbg !7607
  %arrayidx27 = getelementptr inbounds i16, i16* %31, i64 %idxprom26, !dbg !7607
  %32 = load i16, i16* %arrayidx27, align 2, !dbg !7607
  %conv28 = zext i16 %32 to i32, !dbg !7607
  %sub = sub nsw i32 %cond, %conv28, !dbg !7608
  %conv29 = sitofp i32 %sub to double, !dbg !7609
  %33 = load double, double* %opacity, align 8, !dbg !7610
  %mul = fmul double %conv29, %33, !dbg !7611
  %add = fadd double %conv11, %mul, !dbg !7612
  %conv30 = fptoui double %add to i16, !dbg !7613
  %34 = load i32, i32* %j, align 4, !dbg !7614
  %idxprom31 = sext i32 %34 to i64, !dbg !7615
  %35 = load i16*, i16** %dst, align 8, !dbg !7615
  %arrayidx32 = getelementptr inbounds i16, i16* %35, i64 %idxprom31, !dbg !7615
  store i16 %conv30, i16* %arrayidx32, align 2, !dbg !7616
  br label %for.inc, !dbg !7617

for.inc:                                          ; preds = %cond.end
  %36 = load i32, i32* %j, align 4, !dbg !7618
  %inc = add nsw i32 %36, 1, !dbg !7618
  store i32 %inc, i32* %j, align 4, !dbg !7618
  br label %for.cond5, !dbg !7620, !llvm.loop !7621

for.end:                                          ; preds = %for.cond5
  %37 = load i64, i64* %dst_linesize.addr, align 8, !dbg !7623
  %38 = load i16*, i16** %dst, align 8, !dbg !7625
  %add.ptr = getelementptr inbounds i16, i16* %38, i64 %37, !dbg !7625
  store i16* %add.ptr, i16** %dst, align 8, !dbg !7625
  %39 = load i64, i64* %top_linesize.addr, align 8, !dbg !7626
  %40 = load i16*, i16** %top, align 8, !dbg !7627
  %add.ptr33 = getelementptr inbounds i16, i16* %40, i64 %39, !dbg !7627
  store i16* %add.ptr33, i16** %top, align 8, !dbg !7627
  %41 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !7628
  %42 = load i16*, i16** %bottom, align 8, !dbg !7629
  %add.ptr34 = getelementptr inbounds i16, i16* %42, i64 %41, !dbg !7629
  store i16* %add.ptr34, i16** %bottom, align 8, !dbg !7629
  br label %for.inc35, !dbg !7630

for.inc35:                                        ; preds = %for.end
  %43 = load i32, i32* %i, align 4, !dbg !7631
  %inc36 = add nsw i32 %43, 1, !dbg !7631
  store i32 %inc36, i32* %i, align 4, !dbg !7631
  br label %for.cond, !dbg !7633, !llvm.loop !7634

for.end37:                                        ; preds = %for.cond
  ret void, !dbg !7636
}

; Function Attrs: nounwind uwtable
define internal void @blend_linearlight_10bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !7638 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !5462, metadata !905), !dbg !7639
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !5475, metadata !905), !dbg !7648
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !7649, metadata !905), !dbg !7650
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !7651, metadata !905), !dbg !7652
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !7653, metadata !905), !dbg !7654
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !7655, metadata !905), !dbg !7656
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !7657, metadata !905), !dbg !7658
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !7659, metadata !905), !dbg !7660
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !7661, metadata !905), !dbg !7662
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !7663, metadata !905), !dbg !7664
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !7665, metadata !905), !dbg !7666
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !7667, metadata !905), !dbg !7668
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !7669, metadata !905), !dbg !7670
  call void @llvm.dbg.declare(metadata i16** %top, metadata !7671, metadata !905), !dbg !7672
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !7673
  %1 = bitcast i8* %0 to i16*, !dbg !7674
  store i16* %1, i16** %top, align 8, !dbg !7672
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !7675, metadata !905), !dbg !7676
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !7677
  %3 = bitcast i8* %2 to i16*, !dbg !7678
  store i16* %3, i16** %bottom, align 8, !dbg !7676
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !7679, metadata !905), !dbg !7680
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !7681
  %5 = bitcast i8* %4 to i16*, !dbg !7682
  store i16* %5, i16** %dst, align 8, !dbg !7680
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !7683, metadata !905), !dbg !7684
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !7685
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !7686
  %7 = load double, double* %opacity1, align 8, !dbg !7686
  store double %7, double* %opacity, align 8, !dbg !7684
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7687, metadata !905), !dbg !7688
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7689, metadata !905), !dbg !7690
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !7691
  %div = sdiv i64 %8, 2, !dbg !7691
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !7691
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !7692
  %div2 = sdiv i64 %9, 2, !dbg !7692
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !7692
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !7693
  %div3 = sdiv i64 %10, 2, !dbg !7693
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !7693
  store i32 0, i32* %i, align 4, !dbg !7694
  br label %for.cond, !dbg !7695

for.cond:                                         ; preds = %for.inc44, %entry
  %11 = load i32, i32* %i, align 4, !dbg !7696
  %conv = sext i32 %11 to i64, !dbg !7696
  %12 = load i64, i64* %height.addr, align 8, !dbg !7698
  %cmp = icmp slt i64 %conv, %12, !dbg !7699
  br i1 %cmp, label %for.body, label %for.end46, !dbg !7700

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !7701
  br label %for.cond5, !dbg !7703

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !7704
  %conv6 = sext i32 %13 to i64, !dbg !7704
  %14 = load i64, i64* %width.addr, align 8, !dbg !7706
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !7707
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !7708

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !7709
  %idxprom = sext i32 %15 to i64, !dbg !7711
  %16 = load i16*, i16** %top, align 8, !dbg !7711
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !7711
  %17 = load i16, i16* %arrayidx, align 2, !dbg !7711
  %conv10 = zext i16 %17 to i32, !dbg !7711
  %conv11 = sitofp i32 %conv10 to double, !dbg !7711
  %18 = load i32, i32* %j, align 4, !dbg !7712
  %idxprom12 = sext i32 %18 to i64, !dbg !7713
  %19 = load i16*, i16** %bottom, align 8, !dbg !7713
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !7713
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !7713
  %conv14 = zext i16 %20 to i32, !dbg !7713
  %cmp15 = icmp slt i32 %conv14, 512, !dbg !7714
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !7715

cond.true:                                        ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !7716
  %idxprom17 = sext i32 %21 to i64, !dbg !7718
  %22 = load i16*, i16** %bottom, align 8, !dbg !7718
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !7718
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !7718
  %conv19 = zext i16 %23 to i32, !dbg !7718
  %24 = load i32, i32* %j, align 4, !dbg !7719
  %idxprom20 = sext i32 %24 to i64, !dbg !7720
  %25 = load i16*, i16** %top, align 8, !dbg !7720
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !7720
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !7720
  %conv22 = zext i16 %26 to i32, !dbg !7720
  %mul = mul nsw i32 2, %conv22, !dbg !7721
  %add = add nsw i32 %conv19, %mul, !dbg !7722
  %sub = sub nsw i32 %add, 1023, !dbg !7723
  br label %cond.end, !dbg !7724

cond.false:                                       ; preds = %for.body9
  %27 = load i32, i32* %j, align 4, !dbg !7725
  %idxprom23 = sext i32 %27 to i64, !dbg !7727
  %28 = load i16*, i16** %bottom, align 8, !dbg !7727
  %arrayidx24 = getelementptr inbounds i16, i16* %28, i64 %idxprom23, !dbg !7727
  %29 = load i16, i16* %arrayidx24, align 2, !dbg !7727
  %conv25 = zext i16 %29 to i32, !dbg !7727
  %30 = load i32, i32* %j, align 4, !dbg !7728
  %idxprom26 = sext i32 %30 to i64, !dbg !7729
  %31 = load i16*, i16** %top, align 8, !dbg !7729
  %arrayidx27 = getelementptr inbounds i16, i16* %31, i64 %idxprom26, !dbg !7729
  %32 = load i16, i16* %arrayidx27, align 2, !dbg !7729
  %conv28 = zext i16 %32 to i32, !dbg !7729
  %sub29 = sub nsw i32 %conv28, 512, !dbg !7730
  %mul30 = mul nsw i32 2, %sub29, !dbg !7731
  %add31 = add nsw i32 %conv25, %mul30, !dbg !7732
  br label %cond.end, !dbg !7733

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %add31, %cond.false ], !dbg !7734
  store i32 %cond, i32* %a.addr.i, align 4, !dbg !7735
  store i32 10, i32* %p.addr.i, align 4, !dbg !7735
  %33 = load i32, i32* %a.addr.i, align 4, !dbg !7736
  %34 = load i32, i32* %p.addr.i, align 4, !dbg !7737
  %shl.i = shl i32 1, %34, !dbg !7738
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !7739
  %neg.i = xor i32 %sub.i, -1, !dbg !7740
  %and.i = and i32 %33, %neg.i, !dbg !7741
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !7741
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !7742

if.then.i:                                        ; preds = %cond.end
  %35 = load i32, i32* %a.addr.i, align 4, !dbg !7743
  %neg1.i = xor i32 %35, -1, !dbg !7744
  %shr.i = ashr i32 %neg1.i, 31, !dbg !7745
  %36 = load i32, i32* %p.addr.i, align 4, !dbg !7746
  %shl2.i = shl i32 1, %36, !dbg !7747
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !7748
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !7749
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !7750
  br label %av_clip_uintp2_c.exit, !dbg !7750

if.else.i:                                        ; preds = %cond.end
  %37 = load i32, i32* %a.addr.i, align 4, !dbg !7751
  store i32 %37, i32* %retval.i, align 4, !dbg !7752
  br label %av_clip_uintp2_c.exit, !dbg !7752

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %38 = load i32, i32* %retval.i, align 4, !dbg !7753
  %39 = load i32, i32* %j, align 4, !dbg !7754
  %idxprom32 = sext i32 %39 to i64, !dbg !7755
  %40 = load i16*, i16** %top, align 8, !dbg !7755
  %arrayidx33 = getelementptr inbounds i16, i16* %40, i64 %idxprom32, !dbg !7755
  %41 = load i16, i16* %arrayidx33, align 2, !dbg !7755
  %conv34 = zext i16 %41 to i32, !dbg !7755
  %sub35 = sub nsw i32 %38, %conv34, !dbg !7756
  %conv36 = sitofp i32 %sub35 to double, !dbg !7757
  %42 = load double, double* %opacity, align 8, !dbg !7758
  %mul37 = fmul double %conv36, %42, !dbg !7759
  %add38 = fadd double %conv11, %mul37, !dbg !7760
  %conv39 = fptoui double %add38 to i16, !dbg !7761
  %43 = load i32, i32* %j, align 4, !dbg !7762
  %idxprom40 = sext i32 %43 to i64, !dbg !7763
  %44 = load i16*, i16** %dst, align 8, !dbg !7763
  %arrayidx41 = getelementptr inbounds i16, i16* %44, i64 %idxprom40, !dbg !7763
  store i16 %conv39, i16* %arrayidx41, align 2, !dbg !7764
  br label %for.inc, !dbg !7765

for.inc:                                          ; preds = %av_clip_uintp2_c.exit
  %45 = load i32, i32* %j, align 4, !dbg !7766
  %inc = add nsw i32 %45, 1, !dbg !7766
  store i32 %inc, i32* %j, align 4, !dbg !7766
  br label %for.cond5, !dbg !7768, !llvm.loop !7769

for.end:                                          ; preds = %for.cond5
  %46 = load i64, i64* %dst_linesize.addr, align 8, !dbg !7771
  %47 = load i16*, i16** %dst, align 8, !dbg !7773
  %add.ptr = getelementptr inbounds i16, i16* %47, i64 %46, !dbg !7773
  store i16* %add.ptr, i16** %dst, align 8, !dbg !7773
  %48 = load i64, i64* %top_linesize.addr, align 8, !dbg !7774
  %49 = load i16*, i16** %top, align 8, !dbg !7775
  %add.ptr42 = getelementptr inbounds i16, i16* %49, i64 %48, !dbg !7775
  store i16* %add.ptr42, i16** %top, align 8, !dbg !7775
  %50 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !7776
  %51 = load i16*, i16** %bottom, align 8, !dbg !7777
  %add.ptr43 = getelementptr inbounds i16, i16* %51, i64 %50, !dbg !7777
  store i16* %add.ptr43, i16** %bottom, align 8, !dbg !7777
  br label %for.inc44, !dbg !7778

for.inc44:                                        ; preds = %for.end
  %52 = load i32, i32* %i, align 4, !dbg !7779
  %inc45 = add nsw i32 %52, 1, !dbg !7779
  store i32 %inc45, i32* %i, align 4, !dbg !7779
  br label %for.cond, !dbg !7781, !llvm.loop !7782

for.end46:                                        ; preds = %for.cond
  ret void, !dbg !7784
}

; Function Attrs: nounwind uwtable
define internal void @blend_multiply_10bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !7786 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !7787, metadata !905), !dbg !7788
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !7789, metadata !905), !dbg !7790
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !7791, metadata !905), !dbg !7792
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !7793, metadata !905), !dbg !7794
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !7795, metadata !905), !dbg !7796
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !7797, metadata !905), !dbg !7798
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !7799, metadata !905), !dbg !7800
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !7801, metadata !905), !dbg !7802
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !7803, metadata !905), !dbg !7804
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !7805, metadata !905), !dbg !7806
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !7807, metadata !905), !dbg !7808
  call void @llvm.dbg.declare(metadata i16** %top, metadata !7809, metadata !905), !dbg !7810
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !7811
  %1 = bitcast i8* %0 to i16*, !dbg !7812
  store i16* %1, i16** %top, align 8, !dbg !7810
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !7813, metadata !905), !dbg !7814
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !7815
  %3 = bitcast i8* %2 to i16*, !dbg !7816
  store i16* %3, i16** %bottom, align 8, !dbg !7814
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !7817, metadata !905), !dbg !7818
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !7819
  %5 = bitcast i8* %4 to i16*, !dbg !7820
  store i16* %5, i16** %dst, align 8, !dbg !7818
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !7821, metadata !905), !dbg !7822
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !7823
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !7824
  %7 = load double, double* %opacity1, align 8, !dbg !7824
  store double %7, double* %opacity, align 8, !dbg !7822
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7825, metadata !905), !dbg !7826
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7827, metadata !905), !dbg !7828
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !7829
  %div = sdiv i64 %8, 2, !dbg !7829
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !7829
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !7830
  %div2 = sdiv i64 %9, 2, !dbg !7830
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !7830
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !7831
  %div3 = sdiv i64 %10, 2, !dbg !7831
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !7831
  store i32 0, i32* %i, align 4, !dbg !7832
  br label %for.cond, !dbg !7834

for.cond:                                         ; preds = %for.inc30, %entry
  %11 = load i32, i32* %i, align 4, !dbg !7835
  %conv = sext i32 %11 to i64, !dbg !7835
  %12 = load i64, i64* %height.addr, align 8, !dbg !7838
  %cmp = icmp slt i64 %conv, %12, !dbg !7839
  br i1 %cmp, label %for.body, label %for.end32, !dbg !7840

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !7841
  br label %for.cond5, !dbg !7845

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !7846
  %conv6 = sext i32 %13 to i64, !dbg !7846
  %14 = load i64, i64* %width.addr, align 8, !dbg !7849
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !7850
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !7851

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !7852
  %idxprom = sext i32 %15 to i64, !dbg !7855
  %16 = load i16*, i16** %top, align 8, !dbg !7855
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !7855
  %17 = load i16, i16* %arrayidx, align 2, !dbg !7855
  %conv10 = zext i16 %17 to i32, !dbg !7855
  %conv11 = sitofp i32 %conv10 to double, !dbg !7855
  %18 = load i32, i32* %j, align 4, !dbg !7856
  %idxprom12 = sext i32 %18 to i64, !dbg !7857
  %19 = load i16*, i16** %top, align 8, !dbg !7857
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !7857
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !7857
  %conv14 = zext i16 %20 to i32, !dbg !7858
  %21 = load i32, i32* %j, align 4, !dbg !7859
  %idxprom15 = sext i32 %21 to i64, !dbg !7860
  %22 = load i16*, i16** %bottom, align 8, !dbg !7860
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !7860
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !7860
  %conv17 = zext i16 %23 to i32, !dbg !7861
  %mul = mul nsw i32 %conv14, %conv17, !dbg !7862
  %div18 = sdiv i32 %mul, 1023, !dbg !7863
  %mul19 = mul nsw i32 1, %div18, !dbg !7864
  %24 = load i32, i32* %j, align 4, !dbg !7865
  %idxprom20 = sext i32 %24 to i64, !dbg !7866
  %25 = load i16*, i16** %top, align 8, !dbg !7866
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !7866
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !7866
  %conv22 = zext i16 %26 to i32, !dbg !7866
  %sub = sub nsw i32 %mul19, %conv22, !dbg !7867
  %conv23 = sitofp i32 %sub to double, !dbg !7868
  %27 = load double, double* %opacity, align 8, !dbg !7869
  %mul24 = fmul double %conv23, %27, !dbg !7870
  %add = fadd double %conv11, %mul24, !dbg !7871
  %conv25 = fptoui double %add to i16, !dbg !7855
  %28 = load i32, i32* %j, align 4, !dbg !7872
  %idxprom26 = sext i32 %28 to i64, !dbg !7873
  %29 = load i16*, i16** %dst, align 8, !dbg !7873
  %arrayidx27 = getelementptr inbounds i16, i16* %29, i64 %idxprom26, !dbg !7873
  store i16 %conv25, i16* %arrayidx27, align 2, !dbg !7874
  br label %for.inc, !dbg !7875

for.inc:                                          ; preds = %for.body9
  %30 = load i32, i32* %j, align 4, !dbg !7876
  %inc = add nsw i32 %30, 1, !dbg !7876
  store i32 %inc, i32* %j, align 4, !dbg !7876
  br label %for.cond5, !dbg !7878, !llvm.loop !7879

for.end:                                          ; preds = %for.cond5
  %31 = load i64, i64* %dst_linesize.addr, align 8, !dbg !7881
  %32 = load i16*, i16** %dst, align 8, !dbg !7883
  %add.ptr = getelementptr inbounds i16, i16* %32, i64 %31, !dbg !7883
  store i16* %add.ptr, i16** %dst, align 8, !dbg !7883
  %33 = load i64, i64* %top_linesize.addr, align 8, !dbg !7884
  %34 = load i16*, i16** %top, align 8, !dbg !7885
  %add.ptr28 = getelementptr inbounds i16, i16* %34, i64 %33, !dbg !7885
  store i16* %add.ptr28, i16** %top, align 8, !dbg !7885
  %35 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !7886
  %36 = load i16*, i16** %bottom, align 8, !dbg !7887
  %add.ptr29 = getelementptr inbounds i16, i16* %36, i64 %35, !dbg !7887
  store i16* %add.ptr29, i16** %bottom, align 8, !dbg !7887
  br label %for.inc30, !dbg !7888

for.inc30:                                        ; preds = %for.end
  %37 = load i32, i32* %i, align 4, !dbg !7889
  %inc31 = add nsw i32 %37, 1, !dbg !7889
  store i32 %inc31, i32* %i, align 4, !dbg !7889
  br label %for.cond, !dbg !7891, !llvm.loop !7892

for.end32:                                        ; preds = %for.cond
  ret void, !dbg !7894
}

; Function Attrs: nounwind uwtable
define internal void @blend_multiply128_10bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !7896 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !5462, metadata !905), !dbg !7897
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !5475, metadata !905), !dbg !7906
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !7907, metadata !905), !dbg !7908
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !7909, metadata !905), !dbg !7910
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !7911, metadata !905), !dbg !7912
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !7913, metadata !905), !dbg !7914
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !7915, metadata !905), !dbg !7916
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !7917, metadata !905), !dbg !7918
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !7919, metadata !905), !dbg !7920
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !7921, metadata !905), !dbg !7922
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !7923, metadata !905), !dbg !7924
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !7925, metadata !905), !dbg !7926
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !7927, metadata !905), !dbg !7928
  call void @llvm.dbg.declare(metadata i16** %top, metadata !7929, metadata !905), !dbg !7930
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !7931
  %1 = bitcast i8* %0 to i16*, !dbg !7932
  store i16* %1, i16** %top, align 8, !dbg !7930
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !7933, metadata !905), !dbg !7934
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !7935
  %3 = bitcast i8* %2 to i16*, !dbg !7936
  store i16* %3, i16** %bottom, align 8, !dbg !7934
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !7937, metadata !905), !dbg !7938
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !7939
  %5 = bitcast i8* %4 to i16*, !dbg !7940
  store i16* %5, i16** %dst, align 8, !dbg !7938
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !7941, metadata !905), !dbg !7942
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !7943
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !7944
  %7 = load double, double* %opacity1, align 8, !dbg !7944
  store double %7, double* %opacity, align 8, !dbg !7942
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7945, metadata !905), !dbg !7946
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7947, metadata !905), !dbg !7948
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !7949
  %div = sdiv i64 %8, 2, !dbg !7949
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !7949
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !7950
  %div2 = sdiv i64 %9, 2, !dbg !7950
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !7950
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !7951
  %div3 = sdiv i64 %10, 2, !dbg !7951
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !7951
  store i32 0, i32* %i, align 4, !dbg !7952
  br label %for.cond, !dbg !7953

for.cond:                                         ; preds = %for.inc33, %entry
  %11 = load i32, i32* %i, align 4, !dbg !7954
  %conv = sext i32 %11 to i64, !dbg !7954
  %12 = load i64, i64* %height.addr, align 8, !dbg !7956
  %cmp = icmp slt i64 %conv, %12, !dbg !7957
  br i1 %cmp, label %for.body, label %for.end35, !dbg !7958

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !7959
  br label %for.cond5, !dbg !7961

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !7962
  %conv6 = sext i32 %13 to i64, !dbg !7962
  %14 = load i64, i64* %width.addr, align 8, !dbg !7964
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !7965
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !7966

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !7967
  %idxprom = sext i32 %15 to i64, !dbg !7968
  %16 = load i16*, i16** %top, align 8, !dbg !7968
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !7968
  %17 = load i16, i16* %arrayidx, align 2, !dbg !7968
  %conv10 = zext i16 %17 to i32, !dbg !7968
  %conv11 = sitofp i32 %conv10 to double, !dbg !7968
  %18 = load i32, i32* %j, align 4, !dbg !7969
  %idxprom12 = sext i32 %18 to i64, !dbg !7970
  %19 = load i16*, i16** %top, align 8, !dbg !7970
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !7970
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !7970
  %conv14 = zext i16 %20 to i32, !dbg !7970
  %sub = sub nsw i32 %conv14, 512, !dbg !7971
  %21 = load i32, i32* %j, align 4, !dbg !7972
  %idxprom15 = sext i32 %21 to i64, !dbg !7973
  %22 = load i16*, i16** %bottom, align 8, !dbg !7973
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !7973
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !7973
  %conv17 = zext i16 %23 to i32, !dbg !7973
  %mul = mul nsw i32 %sub, %conv17, !dbg !7974
  %conv18 = sitofp i32 %mul to double, !dbg !7975
  %div19 = fdiv double %conv18, 1.280000e+02, !dbg !7976
  %add = fadd double %div19, 5.120000e+02, !dbg !7977
  %conv20 = fptosi double %add to i32, !dbg !7975
  store i32 %conv20, i32* %a.addr.i, align 4, !dbg !7978
  store i32 10, i32* %p.addr.i, align 4, !dbg !7978
  %24 = load i32, i32* %a.addr.i, align 4, !dbg !7979
  %25 = load i32, i32* %p.addr.i, align 4, !dbg !7980
  %shl.i = shl i32 1, %25, !dbg !7981
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !7982
  %neg.i = xor i32 %sub.i, -1, !dbg !7983
  %and.i = and i32 %24, %neg.i, !dbg !7984
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !7984
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !7985

if.then.i:                                        ; preds = %for.body9
  %26 = load i32, i32* %a.addr.i, align 4, !dbg !7986
  %neg1.i = xor i32 %26, -1, !dbg !7987
  %shr.i = ashr i32 %neg1.i, 31, !dbg !7988
  %27 = load i32, i32* %p.addr.i, align 4, !dbg !7989
  %shl2.i = shl i32 1, %27, !dbg !7990
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !7991
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !7992
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !7993
  br label %av_clip_uintp2_c.exit, !dbg !7993

if.else.i:                                        ; preds = %for.body9
  %28 = load i32, i32* %a.addr.i, align 4, !dbg !7994
  store i32 %28, i32* %retval.i, align 4, !dbg !7995
  br label %av_clip_uintp2_c.exit, !dbg !7995

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %29 = load i32, i32* %retval.i, align 4, !dbg !7996
  %30 = load i32, i32* %j, align 4, !dbg !7997
  %idxprom21 = sext i32 %30 to i64, !dbg !7998
  %31 = load i16*, i16** %top, align 8, !dbg !7998
  %arrayidx22 = getelementptr inbounds i16, i16* %31, i64 %idxprom21, !dbg !7998
  %32 = load i16, i16* %arrayidx22, align 2, !dbg !7998
  %conv23 = zext i16 %32 to i32, !dbg !7998
  %sub24 = sub nsw i32 %29, %conv23, !dbg !7999
  %conv25 = sitofp i32 %sub24 to double, !dbg !8000
  %33 = load double, double* %opacity, align 8, !dbg !8001
  %mul26 = fmul double %conv25, %33, !dbg !8002
  %add27 = fadd double %conv11, %mul26, !dbg !8003
  %conv28 = fptoui double %add27 to i16, !dbg !7968
  %34 = load i32, i32* %j, align 4, !dbg !8004
  %idxprom29 = sext i32 %34 to i64, !dbg !8005
  %35 = load i16*, i16** %dst, align 8, !dbg !8005
  %arrayidx30 = getelementptr inbounds i16, i16* %35, i64 %idxprom29, !dbg !8005
  store i16 %conv28, i16* %arrayidx30, align 2, !dbg !8006
  br label %for.inc, !dbg !8007

for.inc:                                          ; preds = %av_clip_uintp2_c.exit
  %36 = load i32, i32* %j, align 4, !dbg !8008
  %inc = add nsw i32 %36, 1, !dbg !8008
  store i32 %inc, i32* %j, align 4, !dbg !8008
  br label %for.cond5, !dbg !8010, !llvm.loop !8011

for.end:                                          ; preds = %for.cond5
  %37 = load i64, i64* %dst_linesize.addr, align 8, !dbg !8013
  %38 = load i16*, i16** %dst, align 8, !dbg !8015
  %add.ptr = getelementptr inbounds i16, i16* %38, i64 %37, !dbg !8015
  store i16* %add.ptr, i16** %dst, align 8, !dbg !8015
  %39 = load i64, i64* %top_linesize.addr, align 8, !dbg !8016
  %40 = load i16*, i16** %top, align 8, !dbg !8017
  %add.ptr31 = getelementptr inbounds i16, i16* %40, i64 %39, !dbg !8017
  store i16* %add.ptr31, i16** %top, align 8, !dbg !8017
  %41 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !8018
  %42 = load i16*, i16** %bottom, align 8, !dbg !8019
  %add.ptr32 = getelementptr inbounds i16, i16* %42, i64 %41, !dbg !8019
  store i16* %add.ptr32, i16** %bottom, align 8, !dbg !8019
  br label %for.inc33, !dbg !8020

for.inc33:                                        ; preds = %for.end
  %43 = load i32, i32* %i, align 4, !dbg !8021
  %inc34 = add nsw i32 %43, 1, !dbg !8021
  store i32 %inc34, i32* %i, align 4, !dbg !8021
  br label %for.cond, !dbg !8023, !llvm.loop !8024

for.end35:                                        ; preds = %for.cond
  ret void, !dbg !8026
}

; Function Attrs: nounwind uwtable
define internal void @blend_negation_10bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !8028 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !8029, metadata !905), !dbg !8030
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !8031, metadata !905), !dbg !8032
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !8033, metadata !905), !dbg !8034
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !8035, metadata !905), !dbg !8036
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !8037, metadata !905), !dbg !8038
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !8039, metadata !905), !dbg !8040
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !8041, metadata !905), !dbg !8042
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !8043, metadata !905), !dbg !8044
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !8045, metadata !905), !dbg !8046
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !8047, metadata !905), !dbg !8048
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !8049, metadata !905), !dbg !8050
  call void @llvm.dbg.declare(metadata i16** %top, metadata !8051, metadata !905), !dbg !8052
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !8053
  %1 = bitcast i8* %0 to i16*, !dbg !8054
  store i16* %1, i16** %top, align 8, !dbg !8052
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !8055, metadata !905), !dbg !8056
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !8057
  %3 = bitcast i8* %2 to i16*, !dbg !8058
  store i16* %3, i16** %bottom, align 8, !dbg !8056
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !8059, metadata !905), !dbg !8060
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !8061
  %5 = bitcast i8* %4 to i16*, !dbg !8062
  store i16* %5, i16** %dst, align 8, !dbg !8060
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !8063, metadata !905), !dbg !8064
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !8065
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !8066
  %7 = load double, double* %opacity1, align 8, !dbg !8066
  store double %7, double* %opacity, align 8, !dbg !8064
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8067, metadata !905), !dbg !8068
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8069, metadata !905), !dbg !8070
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !8071
  %div = sdiv i64 %8, 2, !dbg !8071
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !8071
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !8072
  %div2 = sdiv i64 %9, 2, !dbg !8072
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !8072
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !8073
  %div3 = sdiv i64 %10, 2, !dbg !8073
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !8073
  store i32 0, i32* %i, align 4, !dbg !8074
  br label %for.cond, !dbg !8076

for.cond:                                         ; preds = %for.inc49, %entry
  %11 = load i32, i32* %i, align 4, !dbg !8077
  %conv = sext i32 %11 to i64, !dbg !8077
  %12 = load i64, i64* %height.addr, align 8, !dbg !8080
  %cmp = icmp slt i64 %conv, %12, !dbg !8081
  br i1 %cmp, label %for.body, label %for.end51, !dbg !8082

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !8083
  br label %for.cond5, !dbg !8087

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !8088
  %conv6 = sext i32 %13 to i64, !dbg !8088
  %14 = load i64, i64* %width.addr, align 8, !dbg !8091
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !8092
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !8093

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !8094
  %idxprom = sext i32 %15 to i64, !dbg !8097
  %16 = load i16*, i16** %top, align 8, !dbg !8097
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !8097
  %17 = load i16, i16* %arrayidx, align 2, !dbg !8097
  %conv10 = zext i16 %17 to i32, !dbg !8097
  %conv11 = sitofp i32 %conv10 to double, !dbg !8097
  %18 = load i32, i32* %j, align 4, !dbg !8098
  %idxprom12 = sext i32 %18 to i64, !dbg !8099
  %19 = load i16*, i16** %top, align 8, !dbg !8099
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !8099
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !8099
  %conv14 = zext i16 %20 to i32, !dbg !8099
  %sub = sub nsw i32 1023, %conv14, !dbg !8100
  %21 = load i32, i32* %j, align 4, !dbg !8101
  %idxprom15 = sext i32 %21 to i64, !dbg !8102
  %22 = load i16*, i16** %bottom, align 8, !dbg !8102
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !8102
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !8102
  %conv17 = zext i16 %23 to i32, !dbg !8102
  %sub18 = sub nsw i32 %sub, %conv17, !dbg !8103
  %cmp19 = icmp sge i32 %sub18, 0, !dbg !8104
  br i1 %cmp19, label %cond.true, label %cond.false, !dbg !8105

cond.true:                                        ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !8106
  %idxprom21 = sext i32 %24 to i64, !dbg !8108
  %25 = load i16*, i16** %top, align 8, !dbg !8108
  %arrayidx22 = getelementptr inbounds i16, i16* %25, i64 %idxprom21, !dbg !8108
  %26 = load i16, i16* %arrayidx22, align 2, !dbg !8108
  %conv23 = zext i16 %26 to i32, !dbg !8108
  %sub24 = sub nsw i32 1023, %conv23, !dbg !8109
  %27 = load i32, i32* %j, align 4, !dbg !8110
  %idxprom25 = sext i32 %27 to i64, !dbg !8111
  %28 = load i16*, i16** %bottom, align 8, !dbg !8111
  %arrayidx26 = getelementptr inbounds i16, i16* %28, i64 %idxprom25, !dbg !8111
  %29 = load i16, i16* %arrayidx26, align 2, !dbg !8111
  %conv27 = zext i16 %29 to i32, !dbg !8111
  %sub28 = sub nsw i32 %sub24, %conv27, !dbg !8112
  br label %cond.end, !dbg !8113

cond.false:                                       ; preds = %for.body9
  %30 = load i32, i32* %j, align 4, !dbg !8114
  %idxprom29 = sext i32 %30 to i64, !dbg !8116
  %31 = load i16*, i16** %top, align 8, !dbg !8116
  %arrayidx30 = getelementptr inbounds i16, i16* %31, i64 %idxprom29, !dbg !8116
  %32 = load i16, i16* %arrayidx30, align 2, !dbg !8116
  %conv31 = zext i16 %32 to i32, !dbg !8116
  %sub32 = sub nsw i32 1023, %conv31, !dbg !8117
  %33 = load i32, i32* %j, align 4, !dbg !8118
  %idxprom33 = sext i32 %33 to i64, !dbg !8119
  %34 = load i16*, i16** %bottom, align 8, !dbg !8119
  %arrayidx34 = getelementptr inbounds i16, i16* %34, i64 %idxprom33, !dbg !8119
  %35 = load i16, i16* %arrayidx34, align 2, !dbg !8119
  %conv35 = zext i16 %35 to i32, !dbg !8119
  %sub36 = sub nsw i32 %sub32, %conv35, !dbg !8120
  %sub37 = sub nsw i32 0, %sub36, !dbg !8121
  br label %cond.end, !dbg !8122

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub28, %cond.true ], [ %sub37, %cond.false ], !dbg !8123
  %sub38 = sub nsw i32 1023, %cond, !dbg !8125
  %36 = load i32, i32* %j, align 4, !dbg !8126
  %idxprom39 = sext i32 %36 to i64, !dbg !8127
  %37 = load i16*, i16** %top, align 8, !dbg !8127
  %arrayidx40 = getelementptr inbounds i16, i16* %37, i64 %idxprom39, !dbg !8127
  %38 = load i16, i16* %arrayidx40, align 2, !dbg !8127
  %conv41 = zext i16 %38 to i32, !dbg !8127
  %sub42 = sub nsw i32 %sub38, %conv41, !dbg !8128
  %conv43 = sitofp i32 %sub42 to double, !dbg !8129
  %39 = load double, double* %opacity, align 8, !dbg !8130
  %mul = fmul double %conv43, %39, !dbg !8131
  %add = fadd double %conv11, %mul, !dbg !8132
  %conv44 = fptoui double %add to i16, !dbg !8133
  %40 = load i32, i32* %j, align 4, !dbg !8134
  %idxprom45 = sext i32 %40 to i64, !dbg !8135
  %41 = load i16*, i16** %dst, align 8, !dbg !8135
  %arrayidx46 = getelementptr inbounds i16, i16* %41, i64 %idxprom45, !dbg !8135
  store i16 %conv44, i16* %arrayidx46, align 2, !dbg !8136
  br label %for.inc, !dbg !8137

for.inc:                                          ; preds = %cond.end
  %42 = load i32, i32* %j, align 4, !dbg !8138
  %inc = add nsw i32 %42, 1, !dbg !8138
  store i32 %inc, i32* %j, align 4, !dbg !8138
  br label %for.cond5, !dbg !8140, !llvm.loop !8141

for.end:                                          ; preds = %for.cond5
  %43 = load i64, i64* %dst_linesize.addr, align 8, !dbg !8143
  %44 = load i16*, i16** %dst, align 8, !dbg !8145
  %add.ptr = getelementptr inbounds i16, i16* %44, i64 %43, !dbg !8145
  store i16* %add.ptr, i16** %dst, align 8, !dbg !8145
  %45 = load i64, i64* %top_linesize.addr, align 8, !dbg !8146
  %46 = load i16*, i16** %top, align 8, !dbg !8147
  %add.ptr47 = getelementptr inbounds i16, i16* %46, i64 %45, !dbg !8147
  store i16* %add.ptr47, i16** %top, align 8, !dbg !8147
  %47 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !8148
  %48 = load i16*, i16** %bottom, align 8, !dbg !8149
  %add.ptr48 = getelementptr inbounds i16, i16* %48, i64 %47, !dbg !8149
  store i16* %add.ptr48, i16** %bottom, align 8, !dbg !8149
  br label %for.inc49, !dbg !8150

for.inc49:                                        ; preds = %for.end
  %49 = load i32, i32* %i, align 4, !dbg !8151
  %inc50 = add nsw i32 %49, 1, !dbg !8151
  store i32 %inc50, i32* %i, align 4, !dbg !8151
  br label %for.cond, !dbg !8153, !llvm.loop !8154

for.end51:                                        ; preds = %for.cond
  ret void, !dbg !8156
}

; Function Attrs: nounwind uwtable
define internal void @blend_copytop_16(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !8158 {
entry:
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !8159, metadata !905), !dbg !8160
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !8161, metadata !905), !dbg !8162
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !8163, metadata !905), !dbg !8164
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !8165, metadata !905), !dbg !8166
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !8167, metadata !905), !dbg !8168
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !8169, metadata !905), !dbg !8170
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !8171, metadata !905), !dbg !8172
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !8173, metadata !905), !dbg !8174
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !8175, metadata !905), !dbg !8176
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !8177, metadata !905), !dbg !8178
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !8179, metadata !905), !dbg !8180
  %0 = load i8*, i8** %dst.addr, align 8, !dbg !8181
  %1 = load i64, i64* %dst_linesize.addr, align 8, !dbg !8182
  %conv = trunc i64 %1 to i32, !dbg !8182
  %2 = load i8*, i8** %top.addr, align 8, !dbg !8183
  %3 = load i64, i64* %top_linesize.addr, align 8, !dbg !8184
  %conv1 = trunc i64 %3 to i32, !dbg !8184
  %4 = load i64, i64* %width.addr, align 8, !dbg !8185
  %mul = mul nsw i64 %4, 16, !dbg !8186
  %div = sdiv i64 %mul, 8, !dbg !8187
  %conv2 = trunc i64 %div to i32, !dbg !8185
  %5 = load i64, i64* %height.addr, align 8, !dbg !8188
  %conv3 = trunc i64 %5 to i32, !dbg !8188
  call void @av_image_copy_plane(i8* %0, i32 %conv, i8* %2, i32 %conv1, i32 %conv2, i32 %conv3), !dbg !8189
  ret void, !dbg !8190
}

; Function Attrs: nounwind uwtable
define internal void @blend_copybottom_16(i8* %top, i64 %top_linesize, i8* %bottom, i64 %bottom_linesize, i8* %dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !8191 {
entry:
  %top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  store i8* %top, i8** %top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %top.addr, metadata !8192, metadata !905), !dbg !8193
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !8194, metadata !905), !dbg !8195
  store i8* %bottom, i8** %bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bottom.addr, metadata !8196, metadata !905), !dbg !8197
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !8198, metadata !905), !dbg !8199
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !8200, metadata !905), !dbg !8201
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !8202, metadata !905), !dbg !8203
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !8204, metadata !905), !dbg !8205
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !8206, metadata !905), !dbg !8207
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !8208, metadata !905), !dbg !8209
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !8210, metadata !905), !dbg !8211
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !8212, metadata !905), !dbg !8213
  %0 = load i8*, i8** %dst.addr, align 8, !dbg !8214
  %1 = load i64, i64* %dst_linesize.addr, align 8, !dbg !8215
  %conv = trunc i64 %1 to i32, !dbg !8215
  %2 = load i8*, i8** %bottom.addr, align 8, !dbg !8216
  %3 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !8217
  %conv1 = trunc i64 %3 to i32, !dbg !8217
  %4 = load i64, i64* %width.addr, align 8, !dbg !8218
  %mul = mul nsw i64 %4, 16, !dbg !8219
  %div = sdiv i64 %mul, 8, !dbg !8220
  %conv2 = trunc i64 %div to i32, !dbg !8218
  %5 = load i64, i64* %height.addr, align 8, !dbg !8221
  %conv3 = trunc i64 %5 to i32, !dbg !8221
  call void @av_image_copy_plane(i8* %0, i32 %conv, i8* %2, i32 %conv1, i32 %conv2, i32 %conv3), !dbg !8222
  ret void, !dbg !8223
}

; Function Attrs: nounwind uwtable
define internal void @blend_normal_16bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !8224 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !8225, metadata !905), !dbg !8226
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !8227, metadata !905), !dbg !8228
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !8229, metadata !905), !dbg !8230
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !8231, metadata !905), !dbg !8232
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !8233, metadata !905), !dbg !8234
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !8235, metadata !905), !dbg !8236
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !8237, metadata !905), !dbg !8238
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !8239, metadata !905), !dbg !8240
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !8241, metadata !905), !dbg !8242
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !8243, metadata !905), !dbg !8244
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !8245, metadata !905), !dbg !8246
  call void @llvm.dbg.declare(metadata i16** %top, metadata !8247, metadata !905), !dbg !8248
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !8249
  %1 = bitcast i8* %0 to i16*, !dbg !8250
  store i16* %1, i16** %top, align 8, !dbg !8248
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !8251, metadata !905), !dbg !8252
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !8253
  %3 = bitcast i8* %2 to i16*, !dbg !8254
  store i16* %3, i16** %bottom, align 8, !dbg !8252
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !8255, metadata !905), !dbg !8256
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !8257
  %5 = bitcast i8* %4 to i16*, !dbg !8258
  store i16* %5, i16** %dst, align 8, !dbg !8256
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !8259, metadata !905), !dbg !8260
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !8261
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !8262
  %7 = load double, double* %opacity1, align 8, !dbg !8262
  store double %7, double* %opacity, align 8, !dbg !8260
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8263, metadata !905), !dbg !8264
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8265, metadata !905), !dbg !8266
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !8267
  %div = sdiv i64 %8, 2, !dbg !8267
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !8267
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !8268
  %div2 = sdiv i64 %9, 2, !dbg !8268
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !8268
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !8269
  %div3 = sdiv i64 %10, 2, !dbg !8269
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !8269
  store i32 0, i32* %i, align 4, !dbg !8270
  br label %for.cond, !dbg !8272

for.cond:                                         ; preds = %for.inc22, %entry
  %11 = load i32, i32* %i, align 4, !dbg !8273
  %conv = sext i32 %11 to i64, !dbg !8273
  %12 = load i64, i64* %height.addr, align 8, !dbg !8276
  %cmp = icmp slt i64 %conv, %12, !dbg !8277
  br i1 %cmp, label %for.body, label %for.end24, !dbg !8278

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !8279
  br label %for.cond5, !dbg !8282

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !8283
  %conv6 = sext i32 %13 to i64, !dbg !8283
  %14 = load i64, i64* %width.addr, align 8, !dbg !8286
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !8287
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !8288

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !8289
  %idxprom = sext i32 %15 to i64, !dbg !8291
  %16 = load i16*, i16** %top, align 8, !dbg !8291
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !8291
  %17 = load i16, i16* %arrayidx, align 2, !dbg !8291
  %conv10 = zext i16 %17 to i32, !dbg !8291
  %conv11 = sitofp i32 %conv10 to double, !dbg !8291
  %18 = load double, double* %opacity, align 8, !dbg !8292
  %mul = fmul double %conv11, %18, !dbg !8293
  %19 = load i32, i32* %j, align 4, !dbg !8294
  %idxprom12 = sext i32 %19 to i64, !dbg !8295
  %20 = load i16*, i16** %bottom, align 8, !dbg !8295
  %arrayidx13 = getelementptr inbounds i16, i16* %20, i64 %idxprom12, !dbg !8295
  %21 = load i16, i16* %arrayidx13, align 2, !dbg !8295
  %conv14 = zext i16 %21 to i32, !dbg !8295
  %conv15 = sitofp i32 %conv14 to double, !dbg !8295
  %22 = load double, double* %opacity, align 8, !dbg !8296
  %sub = fsub double 1.000000e+00, %22, !dbg !8297
  %mul16 = fmul double %conv15, %sub, !dbg !8298
  %add = fadd double %mul, %mul16, !dbg !8299
  %conv17 = fptoui double %add to i16, !dbg !8291
  %23 = load i32, i32* %j, align 4, !dbg !8300
  %idxprom18 = sext i32 %23 to i64, !dbg !8301
  %24 = load i16*, i16** %dst, align 8, !dbg !8301
  %arrayidx19 = getelementptr inbounds i16, i16* %24, i64 %idxprom18, !dbg !8301
  store i16 %conv17, i16* %arrayidx19, align 2, !dbg !8302
  br label %for.inc, !dbg !8303

for.inc:                                          ; preds = %for.body9
  %25 = load i32, i32* %j, align 4, !dbg !8304
  %inc = add nsw i32 %25, 1, !dbg !8304
  store i32 %inc, i32* %j, align 4, !dbg !8304
  br label %for.cond5, !dbg !8306, !llvm.loop !8307

for.end:                                          ; preds = %for.cond5
  %26 = load i64, i64* %dst_linesize.addr, align 8, !dbg !8309
  %27 = load i16*, i16** %dst, align 8, !dbg !8310
  %add.ptr = getelementptr inbounds i16, i16* %27, i64 %26, !dbg !8310
  store i16* %add.ptr, i16** %dst, align 8, !dbg !8310
  %28 = load i64, i64* %top_linesize.addr, align 8, !dbg !8311
  %29 = load i16*, i16** %top, align 8, !dbg !8312
  %add.ptr20 = getelementptr inbounds i16, i16* %29, i64 %28, !dbg !8312
  store i16* %add.ptr20, i16** %top, align 8, !dbg !8312
  %30 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !8313
  %31 = load i16*, i16** %bottom, align 8, !dbg !8314
  %add.ptr21 = getelementptr inbounds i16, i16* %31, i64 %30, !dbg !8314
  store i16* %add.ptr21, i16** %bottom, align 8, !dbg !8314
  br label %for.inc22, !dbg !8315

for.inc22:                                        ; preds = %for.end
  %32 = load i32, i32* %i, align 4, !dbg !8316
  %inc23 = add nsw i32 %32, 1, !dbg !8316
  store i32 %inc23, i32* %i, align 4, !dbg !8316
  br label %for.cond, !dbg !8318, !llvm.loop !8319

for.end24:                                        ; preds = %for.cond
  ret void, !dbg !8321
}

; Function Attrs: nounwind uwtable
define internal void @blend_or_10bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !8322 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !8323, metadata !905), !dbg !8324
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !8325, metadata !905), !dbg !8326
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !8327, metadata !905), !dbg !8328
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !8329, metadata !905), !dbg !8330
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !8331, metadata !905), !dbg !8332
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !8333, metadata !905), !dbg !8334
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !8335, metadata !905), !dbg !8336
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !8337, metadata !905), !dbg !8338
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !8339, metadata !905), !dbg !8340
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !8341, metadata !905), !dbg !8342
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !8343, metadata !905), !dbg !8344
  call void @llvm.dbg.declare(metadata i16** %top, metadata !8345, metadata !905), !dbg !8346
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !8347
  %1 = bitcast i8* %0 to i16*, !dbg !8348
  store i16* %1, i16** %top, align 8, !dbg !8346
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !8349, metadata !905), !dbg !8350
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !8351
  %3 = bitcast i8* %2 to i16*, !dbg !8352
  store i16* %3, i16** %bottom, align 8, !dbg !8350
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !8353, metadata !905), !dbg !8354
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !8355
  %5 = bitcast i8* %4 to i16*, !dbg !8356
  store i16* %5, i16** %dst, align 8, !dbg !8354
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !8357, metadata !905), !dbg !8358
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !8359
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !8360
  %7 = load double, double* %opacity1, align 8, !dbg !8360
  store double %7, double* %opacity, align 8, !dbg !8358
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8361, metadata !905), !dbg !8362
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8363, metadata !905), !dbg !8364
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !8365
  %div = sdiv i64 %8, 2, !dbg !8365
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !8365
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !8366
  %div2 = sdiv i64 %9, 2, !dbg !8366
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !8366
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !8367
  %div3 = sdiv i64 %10, 2, !dbg !8367
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !8367
  store i32 0, i32* %i, align 4, !dbg !8368
  br label %for.cond, !dbg !8370

for.cond:                                         ; preds = %for.inc27, %entry
  %11 = load i32, i32* %i, align 4, !dbg !8371
  %conv = sext i32 %11 to i64, !dbg !8371
  %12 = load i64, i64* %height.addr, align 8, !dbg !8374
  %cmp = icmp slt i64 %conv, %12, !dbg !8375
  br i1 %cmp, label %for.body, label %for.end29, !dbg !8376

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !8377
  br label %for.cond5, !dbg !8381

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !8382
  %conv6 = sext i32 %13 to i64, !dbg !8382
  %14 = load i64, i64* %width.addr, align 8, !dbg !8385
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !8386
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !8387

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !8388
  %idxprom = sext i32 %15 to i64, !dbg !8391
  %16 = load i16*, i16** %top, align 8, !dbg !8391
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !8391
  %17 = load i16, i16* %arrayidx, align 2, !dbg !8391
  %conv10 = zext i16 %17 to i32, !dbg !8391
  %conv11 = sitofp i32 %conv10 to double, !dbg !8391
  %18 = load i32, i32* %j, align 4, !dbg !8392
  %idxprom12 = sext i32 %18 to i64, !dbg !8393
  %19 = load i16*, i16** %top, align 8, !dbg !8393
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !8393
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !8393
  %conv14 = zext i16 %20 to i32, !dbg !8393
  %21 = load i32, i32* %j, align 4, !dbg !8394
  %idxprom15 = sext i32 %21 to i64, !dbg !8395
  %22 = load i16*, i16** %bottom, align 8, !dbg !8395
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !8395
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !8395
  %conv17 = zext i16 %23 to i32, !dbg !8395
  %or = or i32 %conv14, %conv17, !dbg !8396
  %24 = load i32, i32* %j, align 4, !dbg !8397
  %idxprom18 = sext i32 %24 to i64, !dbg !8398
  %25 = load i16*, i16** %top, align 8, !dbg !8398
  %arrayidx19 = getelementptr inbounds i16, i16* %25, i64 %idxprom18, !dbg !8398
  %26 = load i16, i16* %arrayidx19, align 2, !dbg !8398
  %conv20 = zext i16 %26 to i32, !dbg !8398
  %sub = sub nsw i32 %or, %conv20, !dbg !8399
  %conv21 = sitofp i32 %sub to double, !dbg !8400
  %27 = load double, double* %opacity, align 8, !dbg !8401
  %mul = fmul double %conv21, %27, !dbg !8402
  %add = fadd double %conv11, %mul, !dbg !8403
  %conv22 = fptoui double %add to i16, !dbg !8391
  %28 = load i32, i32* %j, align 4, !dbg !8404
  %idxprom23 = sext i32 %28 to i64, !dbg !8405
  %29 = load i16*, i16** %dst, align 8, !dbg !8405
  %arrayidx24 = getelementptr inbounds i16, i16* %29, i64 %idxprom23, !dbg !8405
  store i16 %conv22, i16* %arrayidx24, align 2, !dbg !8406
  br label %for.inc, !dbg !8407

for.inc:                                          ; preds = %for.body9
  %30 = load i32, i32* %j, align 4, !dbg !8408
  %inc = add nsw i32 %30, 1, !dbg !8408
  store i32 %inc, i32* %j, align 4, !dbg !8408
  br label %for.cond5, !dbg !8410, !llvm.loop !8411

for.end:                                          ; preds = %for.cond5
  %31 = load i64, i64* %dst_linesize.addr, align 8, !dbg !8413
  %32 = load i16*, i16** %dst, align 8, !dbg !8415
  %add.ptr = getelementptr inbounds i16, i16* %32, i64 %31, !dbg !8415
  store i16* %add.ptr, i16** %dst, align 8, !dbg !8415
  %33 = load i64, i64* %top_linesize.addr, align 8, !dbg !8416
  %34 = load i16*, i16** %top, align 8, !dbg !8417
  %add.ptr25 = getelementptr inbounds i16, i16* %34, i64 %33, !dbg !8417
  store i16* %add.ptr25, i16** %top, align 8, !dbg !8417
  %35 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !8418
  %36 = load i16*, i16** %bottom, align 8, !dbg !8419
  %add.ptr26 = getelementptr inbounds i16, i16* %36, i64 %35, !dbg !8419
  store i16* %add.ptr26, i16** %bottom, align 8, !dbg !8419
  br label %for.inc27, !dbg !8420

for.inc27:                                        ; preds = %for.end
  %37 = load i32, i32* %i, align 4, !dbg !8421
  %inc28 = add nsw i32 %37, 1, !dbg !8421
  store i32 %inc28, i32* %i, align 4, !dbg !8421
  br label %for.cond, !dbg !8423, !llvm.loop !8424

for.end29:                                        ; preds = %for.cond
  ret void, !dbg !8426
}

; Function Attrs: nounwind uwtable
define internal void @blend_overlay_10bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !8428 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !8429, metadata !905), !dbg !8430
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !8431, metadata !905), !dbg !8432
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !8433, metadata !905), !dbg !8434
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !8435, metadata !905), !dbg !8436
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !8437, metadata !905), !dbg !8438
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !8439, metadata !905), !dbg !8440
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !8441, metadata !905), !dbg !8442
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !8443, metadata !905), !dbg !8444
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !8445, metadata !905), !dbg !8446
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !8447, metadata !905), !dbg !8448
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !8449, metadata !905), !dbg !8450
  call void @llvm.dbg.declare(metadata i16** %top, metadata !8451, metadata !905), !dbg !8452
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !8453
  %1 = bitcast i8* %0 to i16*, !dbg !8454
  store i16* %1, i16** %top, align 8, !dbg !8452
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !8455, metadata !905), !dbg !8456
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !8457
  %3 = bitcast i8* %2 to i16*, !dbg !8458
  store i16* %3, i16** %bottom, align 8, !dbg !8456
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !8459, metadata !905), !dbg !8460
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !8461
  %5 = bitcast i8* %4 to i16*, !dbg !8462
  store i16* %5, i16** %dst, align 8, !dbg !8460
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !8463, metadata !905), !dbg !8464
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !8465
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !8466
  %7 = load double, double* %opacity1, align 8, !dbg !8466
  store double %7, double* %opacity, align 8, !dbg !8464
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8467, metadata !905), !dbg !8468
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8469, metadata !905), !dbg !8470
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !8471
  %div = sdiv i64 %8, 2, !dbg !8471
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !8471
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !8472
  %div2 = sdiv i64 %9, 2, !dbg !8472
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !8472
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !8473
  %div3 = sdiv i64 %10, 2, !dbg !8473
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !8473
  store i32 0, i32* %i, align 4, !dbg !8474
  br label %for.cond, !dbg !8476

for.cond:                                         ; preds = %for.inc47, %entry
  %11 = load i32, i32* %i, align 4, !dbg !8477
  %conv = sext i32 %11 to i64, !dbg !8477
  %12 = load i64, i64* %height.addr, align 8, !dbg !8480
  %cmp = icmp slt i64 %conv, %12, !dbg !8481
  br i1 %cmp, label %for.body, label %for.end49, !dbg !8482

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !8483
  br label %for.cond5, !dbg !8487

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !8488
  %conv6 = sext i32 %13 to i64, !dbg !8488
  %14 = load i64, i64* %width.addr, align 8, !dbg !8491
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !8492
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !8493

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !8494
  %idxprom = sext i32 %15 to i64, !dbg !8497
  %16 = load i16*, i16** %top, align 8, !dbg !8497
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !8497
  %17 = load i16, i16* %arrayidx, align 2, !dbg !8497
  %conv10 = zext i16 %17 to i32, !dbg !8497
  %conv11 = sitofp i32 %conv10 to double, !dbg !8497
  %18 = load i32, i32* %j, align 4, !dbg !8498
  %idxprom12 = sext i32 %18 to i64, !dbg !8499
  %19 = load i16*, i16** %top, align 8, !dbg !8499
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !8499
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !8499
  %conv14 = zext i16 %20 to i32, !dbg !8499
  %cmp15 = icmp slt i32 %conv14, 512, !dbg !8500
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !8501

cond.true:                                        ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !8502
  %idxprom17 = sext i32 %21 to i64, !dbg !8504
  %22 = load i16*, i16** %top, align 8, !dbg !8504
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !8504
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !8504
  %conv19 = zext i16 %23 to i32, !dbg !8505
  %24 = load i32, i32* %j, align 4, !dbg !8506
  %idxprom20 = sext i32 %24 to i64, !dbg !8507
  %25 = load i16*, i16** %bottom, align 8, !dbg !8507
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !8507
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !8507
  %conv22 = zext i16 %26 to i32, !dbg !8508
  %mul = mul nsw i32 %conv19, %conv22, !dbg !8509
  %div23 = sdiv i32 %mul, 1023, !dbg !8510
  %mul24 = mul nsw i32 2, %div23, !dbg !8511
  br label %cond.end, !dbg !8512

cond.false:                                       ; preds = %for.body9
  %27 = load i32, i32* %j, align 4, !dbg !8513
  %idxprom25 = sext i32 %27 to i64, !dbg !8515
  %28 = load i16*, i16** %top, align 8, !dbg !8515
  %arrayidx26 = getelementptr inbounds i16, i16* %28, i64 %idxprom25, !dbg !8515
  %29 = load i16, i16* %arrayidx26, align 2, !dbg !8515
  %conv27 = zext i16 %29 to i32, !dbg !8516
  %sub = sub nsw i32 1023, %conv27, !dbg !8517
  %30 = load i32, i32* %j, align 4, !dbg !8518
  %idxprom28 = sext i32 %30 to i64, !dbg !8519
  %31 = load i16*, i16** %bottom, align 8, !dbg !8519
  %arrayidx29 = getelementptr inbounds i16, i16* %31, i64 %idxprom28, !dbg !8519
  %32 = load i16, i16* %arrayidx29, align 2, !dbg !8519
  %conv30 = zext i16 %32 to i32, !dbg !8520
  %sub31 = sub nsw i32 1023, %conv30, !dbg !8521
  %mul32 = mul nsw i32 %sub, %sub31, !dbg !8522
  %div33 = sdiv i32 %mul32, 1023, !dbg !8523
  %mul34 = mul nsw i32 2, %div33, !dbg !8524
  %sub35 = sub nsw i32 1023, %mul34, !dbg !8525
  br label %cond.end, !dbg !8526

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %mul24, %cond.true ], [ %sub35, %cond.false ], !dbg !8527
  %33 = load i32, i32* %j, align 4, !dbg !8529
  %idxprom36 = sext i32 %33 to i64, !dbg !8530
  %34 = load i16*, i16** %top, align 8, !dbg !8530
  %arrayidx37 = getelementptr inbounds i16, i16* %34, i64 %idxprom36, !dbg !8530
  %35 = load i16, i16* %arrayidx37, align 2, !dbg !8530
  %conv38 = zext i16 %35 to i32, !dbg !8530
  %sub39 = sub nsw i32 %cond, %conv38, !dbg !8531
  %conv40 = sitofp i32 %sub39 to double, !dbg !8532
  %36 = load double, double* %opacity, align 8, !dbg !8533
  %mul41 = fmul double %conv40, %36, !dbg !8534
  %add = fadd double %conv11, %mul41, !dbg !8535
  %conv42 = fptoui double %add to i16, !dbg !8536
  %37 = load i32, i32* %j, align 4, !dbg !8537
  %idxprom43 = sext i32 %37 to i64, !dbg !8538
  %38 = load i16*, i16** %dst, align 8, !dbg !8538
  %arrayidx44 = getelementptr inbounds i16, i16* %38, i64 %idxprom43, !dbg !8538
  store i16 %conv42, i16* %arrayidx44, align 2, !dbg !8539
  br label %for.inc, !dbg !8540

for.inc:                                          ; preds = %cond.end
  %39 = load i32, i32* %j, align 4, !dbg !8541
  %inc = add nsw i32 %39, 1, !dbg !8541
  store i32 %inc, i32* %j, align 4, !dbg !8541
  br label %for.cond5, !dbg !8543, !llvm.loop !8544

for.end:                                          ; preds = %for.cond5
  %40 = load i64, i64* %dst_linesize.addr, align 8, !dbg !8546
  %41 = load i16*, i16** %dst, align 8, !dbg !8548
  %add.ptr = getelementptr inbounds i16, i16* %41, i64 %40, !dbg !8548
  store i16* %add.ptr, i16** %dst, align 8, !dbg !8548
  %42 = load i64, i64* %top_linesize.addr, align 8, !dbg !8549
  %43 = load i16*, i16** %top, align 8, !dbg !8550
  %add.ptr45 = getelementptr inbounds i16, i16* %43, i64 %42, !dbg !8550
  store i16* %add.ptr45, i16** %top, align 8, !dbg !8550
  %44 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !8551
  %45 = load i16*, i16** %bottom, align 8, !dbg !8552
  %add.ptr46 = getelementptr inbounds i16, i16* %45, i64 %44, !dbg !8552
  store i16* %add.ptr46, i16** %bottom, align 8, !dbg !8552
  br label %for.inc47, !dbg !8553

for.inc47:                                        ; preds = %for.end
  %46 = load i32, i32* %i, align 4, !dbg !8554
  %inc48 = add nsw i32 %46, 1, !dbg !8554
  store i32 %inc48, i32* %i, align 4, !dbg !8554
  br label %for.cond, !dbg !8556, !llvm.loop !8557

for.end49:                                        ; preds = %for.cond
  ret void, !dbg !8559
}

; Function Attrs: nounwind uwtable
define internal void @blend_phoenix_10bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !8561 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !8562, metadata !905), !dbg !8563
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !8564, metadata !905), !dbg !8565
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !8566, metadata !905), !dbg !8567
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !8568, metadata !905), !dbg !8569
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !8570, metadata !905), !dbg !8571
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !8572, metadata !905), !dbg !8573
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !8574, metadata !905), !dbg !8575
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !8576, metadata !905), !dbg !8577
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !8578, metadata !905), !dbg !8579
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !8580, metadata !905), !dbg !8581
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !8582, metadata !905), !dbg !8583
  call void @llvm.dbg.declare(metadata i16** %top, metadata !8584, metadata !905), !dbg !8585
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !8586
  %1 = bitcast i8* %0 to i16*, !dbg !8587
  store i16* %1, i16** %top, align 8, !dbg !8585
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !8588, metadata !905), !dbg !8589
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !8590
  %3 = bitcast i8* %2 to i16*, !dbg !8591
  store i16* %3, i16** %bottom, align 8, !dbg !8589
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !8592, metadata !905), !dbg !8593
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !8594
  %5 = bitcast i8* %4 to i16*, !dbg !8595
  store i16* %5, i16** %dst, align 8, !dbg !8593
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !8596, metadata !905), !dbg !8597
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !8598
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !8599
  %7 = load double, double* %opacity1, align 8, !dbg !8599
  store double %7, double* %opacity, align 8, !dbg !8597
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8600, metadata !905), !dbg !8601
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8602, metadata !905), !dbg !8603
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !8604
  %div = sdiv i64 %8, 2, !dbg !8604
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !8604
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !8605
  %div2 = sdiv i64 %9, 2, !dbg !8605
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !8605
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !8606
  %div3 = sdiv i64 %10, 2, !dbg !8606
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !8606
  store i32 0, i32* %i, align 4, !dbg !8607
  br label %for.cond, !dbg !8609

for.cond:                                         ; preds = %for.inc55, %entry
  %11 = load i32, i32* %i, align 4, !dbg !8610
  %conv = sext i32 %11 to i64, !dbg !8610
  %12 = load i64, i64* %height.addr, align 8, !dbg !8613
  %cmp = icmp slt i64 %conv, %12, !dbg !8614
  br i1 %cmp, label %for.body, label %for.end57, !dbg !8615

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !8616
  br label %for.cond5, !dbg !8620

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !8621
  %conv6 = sext i32 %13 to i64, !dbg !8621
  %14 = load i64, i64* %width.addr, align 8, !dbg !8624
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !8625
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !8626

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !8627
  %idxprom = sext i32 %15 to i64, !dbg !8630
  %16 = load i16*, i16** %top, align 8, !dbg !8630
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !8630
  %17 = load i16, i16* %arrayidx, align 2, !dbg !8630
  %conv10 = zext i16 %17 to i32, !dbg !8630
  %conv11 = sitofp i32 %conv10 to double, !dbg !8630
  %18 = load i32, i32* %j, align 4, !dbg !8631
  %idxprom12 = sext i32 %18 to i64, !dbg !8632
  %19 = load i16*, i16** %top, align 8, !dbg !8632
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !8632
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !8632
  %conv14 = zext i16 %20 to i32, !dbg !8633
  %21 = load i32, i32* %j, align 4, !dbg !8634
  %idxprom15 = sext i32 %21 to i64, !dbg !8635
  %22 = load i16*, i16** %bottom, align 8, !dbg !8635
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !8635
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !8635
  %conv17 = zext i16 %23 to i32, !dbg !8636
  %cmp18 = icmp sgt i32 %conv14, %conv17, !dbg !8637
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !8633

cond.true:                                        ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !8638
  %idxprom20 = sext i32 %24 to i64, !dbg !8640
  %25 = load i16*, i16** %bottom, align 8, !dbg !8640
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !8640
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !8640
  %conv22 = zext i16 %26 to i32, !dbg !8641
  br label %cond.end, !dbg !8642

cond.false:                                       ; preds = %for.body9
  %27 = load i32, i32* %j, align 4, !dbg !8643
  %idxprom23 = sext i32 %27 to i64, !dbg !8645
  %28 = load i16*, i16** %top, align 8, !dbg !8645
  %arrayidx24 = getelementptr inbounds i16, i16* %28, i64 %idxprom23, !dbg !8645
  %29 = load i16, i16* %arrayidx24, align 2, !dbg !8645
  %conv25 = zext i16 %29 to i32, !dbg !8646
  br label %cond.end, !dbg !8647

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv22, %cond.true ], [ %conv25, %cond.false ], !dbg !8648
  %30 = load i32, i32* %j, align 4, !dbg !8650
  %idxprom26 = sext i32 %30 to i64, !dbg !8651
  %31 = load i16*, i16** %top, align 8, !dbg !8651
  %arrayidx27 = getelementptr inbounds i16, i16* %31, i64 %idxprom26, !dbg !8651
  %32 = load i16, i16* %arrayidx27, align 2, !dbg !8651
  %conv28 = zext i16 %32 to i32, !dbg !8652
  %33 = load i32, i32* %j, align 4, !dbg !8653
  %idxprom29 = sext i32 %33 to i64, !dbg !8654
  %34 = load i16*, i16** %bottom, align 8, !dbg !8654
  %arrayidx30 = getelementptr inbounds i16, i16* %34, i64 %idxprom29, !dbg !8654
  %35 = load i16, i16* %arrayidx30, align 2, !dbg !8654
  %conv31 = zext i16 %35 to i32, !dbg !8655
  %cmp32 = icmp sgt i32 %conv28, %conv31, !dbg !8656
  br i1 %cmp32, label %cond.true34, label %cond.false38, !dbg !8652

cond.true34:                                      ; preds = %cond.end
  %36 = load i32, i32* %j, align 4, !dbg !8657
  %idxprom35 = sext i32 %36 to i64, !dbg !8659
  %37 = load i16*, i16** %top, align 8, !dbg !8659
  %arrayidx36 = getelementptr inbounds i16, i16* %37, i64 %idxprom35, !dbg !8659
  %38 = load i16, i16* %arrayidx36, align 2, !dbg !8659
  %conv37 = zext i16 %38 to i32, !dbg !8660
  br label %cond.end42, !dbg !8661

cond.false38:                                     ; preds = %cond.end
  %39 = load i32, i32* %j, align 4, !dbg !8662
  %idxprom39 = sext i32 %39 to i64, !dbg !8664
  %40 = load i16*, i16** %bottom, align 8, !dbg !8664
  %arrayidx40 = getelementptr inbounds i16, i16* %40, i64 %idxprom39, !dbg !8664
  %41 = load i16, i16* %arrayidx40, align 2, !dbg !8664
  %conv41 = zext i16 %41 to i32, !dbg !8665
  br label %cond.end42, !dbg !8666

cond.end42:                                       ; preds = %cond.false38, %cond.true34
  %cond43 = phi i32 [ %conv37, %cond.true34 ], [ %conv41, %cond.false38 ], !dbg !8667
  %sub = sub nsw i32 %cond, %cond43, !dbg !8669
  %add = add nsw i32 %sub, 1023, !dbg !8670
  %42 = load i32, i32* %j, align 4, !dbg !8671
  %idxprom44 = sext i32 %42 to i64, !dbg !8672
  %43 = load i16*, i16** %top, align 8, !dbg !8672
  %arrayidx45 = getelementptr inbounds i16, i16* %43, i64 %idxprom44, !dbg !8672
  %44 = load i16, i16* %arrayidx45, align 2, !dbg !8672
  %conv46 = zext i16 %44 to i32, !dbg !8672
  %sub47 = sub nsw i32 %add, %conv46, !dbg !8673
  %conv48 = sitofp i32 %sub47 to double, !dbg !8674
  %45 = load double, double* %opacity, align 8, !dbg !8675
  %mul = fmul double %conv48, %45, !dbg !8676
  %add49 = fadd double %conv11, %mul, !dbg !8677
  %conv50 = fptoui double %add49 to i16, !dbg !8678
  %46 = load i32, i32* %j, align 4, !dbg !8679
  %idxprom51 = sext i32 %46 to i64, !dbg !8680
  %47 = load i16*, i16** %dst, align 8, !dbg !8680
  %arrayidx52 = getelementptr inbounds i16, i16* %47, i64 %idxprom51, !dbg !8680
  store i16 %conv50, i16* %arrayidx52, align 2, !dbg !8681
  br label %for.inc, !dbg !8682

for.inc:                                          ; preds = %cond.end42
  %48 = load i32, i32* %j, align 4, !dbg !8683
  %inc = add nsw i32 %48, 1, !dbg !8683
  store i32 %inc, i32* %j, align 4, !dbg !8683
  br label %for.cond5, !dbg !8685, !llvm.loop !8686

for.end:                                          ; preds = %for.cond5
  %49 = load i64, i64* %dst_linesize.addr, align 8, !dbg !8688
  %50 = load i16*, i16** %dst, align 8, !dbg !8690
  %add.ptr = getelementptr inbounds i16, i16* %50, i64 %49, !dbg !8690
  store i16* %add.ptr, i16** %dst, align 8, !dbg !8690
  %51 = load i64, i64* %top_linesize.addr, align 8, !dbg !8691
  %52 = load i16*, i16** %top, align 8, !dbg !8692
  %add.ptr53 = getelementptr inbounds i16, i16* %52, i64 %51, !dbg !8692
  store i16* %add.ptr53, i16** %top, align 8, !dbg !8692
  %53 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !8693
  %54 = load i16*, i16** %bottom, align 8, !dbg !8694
  %add.ptr54 = getelementptr inbounds i16, i16* %54, i64 %53, !dbg !8694
  store i16* %add.ptr54, i16** %bottom, align 8, !dbg !8694
  br label %for.inc55, !dbg !8695

for.inc55:                                        ; preds = %for.end
  %55 = load i32, i32* %i, align 4, !dbg !8696
  %inc56 = add nsw i32 %55, 1, !dbg !8696
  store i32 %inc56, i32* %i, align 4, !dbg !8696
  br label %for.cond, !dbg !8698, !llvm.loop !8699

for.end57:                                        ; preds = %for.cond
  ret void, !dbg !8701
}

; Function Attrs: nounwind uwtable
define internal void @blend_pinlight_10bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !8703 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !8704, metadata !905), !dbg !8705
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !8706, metadata !905), !dbg !8707
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !8708, metadata !905), !dbg !8709
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !8710, metadata !905), !dbg !8711
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !8712, metadata !905), !dbg !8713
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !8714, metadata !905), !dbg !8715
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !8716, metadata !905), !dbg !8717
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !8718, metadata !905), !dbg !8719
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !8720, metadata !905), !dbg !8721
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !8722, metadata !905), !dbg !8723
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !8724, metadata !905), !dbg !8725
  call void @llvm.dbg.declare(metadata i16** %top, metadata !8726, metadata !905), !dbg !8727
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !8728
  %1 = bitcast i8* %0 to i16*, !dbg !8729
  store i16* %1, i16** %top, align 8, !dbg !8727
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !8730, metadata !905), !dbg !8731
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !8732
  %3 = bitcast i8* %2 to i16*, !dbg !8733
  store i16* %3, i16** %bottom, align 8, !dbg !8731
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !8734, metadata !905), !dbg !8735
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !8736
  %5 = bitcast i8* %4 to i16*, !dbg !8737
  store i16* %5, i16** %dst, align 8, !dbg !8735
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !8738, metadata !905), !dbg !8739
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !8740
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !8741
  %7 = load double, double* %opacity1, align 8, !dbg !8741
  store double %7, double* %opacity, align 8, !dbg !8739
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8742, metadata !905), !dbg !8743
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8744, metadata !905), !dbg !8745
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !8746
  %div = sdiv i64 %8, 2, !dbg !8746
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !8746
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !8747
  %div2 = sdiv i64 %9, 2, !dbg !8747
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !8747
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !8748
  %div3 = sdiv i64 %10, 2, !dbg !8748
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !8748
  store i32 0, i32* %i, align 4, !dbg !8749
  br label %for.cond, !dbg !8751

for.cond:                                         ; preds = %for.inc68, %entry
  %11 = load i32, i32* %i, align 4, !dbg !8752
  %conv = sext i32 %11 to i64, !dbg !8752
  %12 = load i64, i64* %height.addr, align 8, !dbg !8755
  %cmp = icmp slt i64 %conv, %12, !dbg !8756
  br i1 %cmp, label %for.body, label %for.end70, !dbg !8757

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !8758
  br label %for.cond5, !dbg !8762

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !8763
  %conv6 = sext i32 %13 to i64, !dbg !8763
  %14 = load i64, i64* %width.addr, align 8, !dbg !8766
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !8767
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !8768

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !8769
  %idxprom = sext i32 %15 to i64, !dbg !8772
  %16 = load i16*, i16** %top, align 8, !dbg !8772
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !8772
  %17 = load i16, i16* %arrayidx, align 2, !dbg !8772
  %conv10 = zext i16 %17 to i32, !dbg !8772
  %conv11 = sitofp i32 %conv10 to double, !dbg !8772
  %18 = load i32, i32* %j, align 4, !dbg !8773
  %idxprom12 = sext i32 %18 to i64, !dbg !8774
  %19 = load i16*, i16** %bottom, align 8, !dbg !8774
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !8774
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !8774
  %conv14 = zext i16 %20 to i32, !dbg !8774
  %cmp15 = icmp slt i32 %conv14, 512, !dbg !8775
  br i1 %cmp15, label %cond.true, label %cond.false33, !dbg !8776

cond.true:                                        ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !8777
  %idxprom17 = sext i32 %21 to i64, !dbg !8779
  %22 = load i16*, i16** %top, align 8, !dbg !8779
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !8779
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !8779
  %conv19 = zext i16 %23 to i32, !dbg !8780
  %24 = load i32, i32* %j, align 4, !dbg !8781
  %idxprom20 = sext i32 %24 to i64, !dbg !8782
  %25 = load i16*, i16** %bottom, align 8, !dbg !8782
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !8782
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !8782
  %conv22 = zext i16 %26 to i32, !dbg !8782
  %mul = mul nsw i32 2, %conv22, !dbg !8783
  %cmp23 = icmp sgt i32 %conv19, %mul, !dbg !8784
  br i1 %cmp23, label %cond.true25, label %cond.false, !dbg !8780

cond.true25:                                      ; preds = %cond.true
  %27 = load i32, i32* %j, align 4, !dbg !8785
  %idxprom26 = sext i32 %27 to i64, !dbg !8787
  %28 = load i16*, i16** %bottom, align 8, !dbg !8787
  %arrayidx27 = getelementptr inbounds i16, i16* %28, i64 %idxprom26, !dbg !8787
  %29 = load i16, i16* %arrayidx27, align 2, !dbg !8787
  %conv28 = zext i16 %29 to i32, !dbg !8787
  %mul29 = mul nsw i32 2, %conv28, !dbg !8788
  br label %cond.end, !dbg !8789

cond.false:                                       ; preds = %cond.true
  %30 = load i32, i32* %j, align 4, !dbg !8790
  %idxprom30 = sext i32 %30 to i64, !dbg !8792
  %31 = load i16*, i16** %top, align 8, !dbg !8792
  %arrayidx31 = getelementptr inbounds i16, i16* %31, i64 %idxprom30, !dbg !8792
  %32 = load i16, i16* %arrayidx31, align 2, !dbg !8792
  %conv32 = zext i16 %32 to i32, !dbg !8793
  br label %cond.end, !dbg !8794

cond.end:                                         ; preds = %cond.false, %cond.true25
  %cond = phi i32 [ %mul29, %cond.true25 ], [ %conv32, %cond.false ], !dbg !8795
  br label %cond.end55, !dbg !8797

cond.false33:                                     ; preds = %for.body9
  %33 = load i32, i32* %j, align 4, !dbg !8798
  %idxprom34 = sext i32 %33 to i64, !dbg !8800
  %34 = load i16*, i16** %top, align 8, !dbg !8800
  %arrayidx35 = getelementptr inbounds i16, i16* %34, i64 %idxprom34, !dbg !8800
  %35 = load i16, i16* %arrayidx35, align 2, !dbg !8800
  %conv36 = zext i16 %35 to i32, !dbg !8801
  %36 = load i32, i32* %j, align 4, !dbg !8802
  %idxprom37 = sext i32 %36 to i64, !dbg !8803
  %37 = load i16*, i16** %bottom, align 8, !dbg !8803
  %arrayidx38 = getelementptr inbounds i16, i16* %37, i64 %idxprom37, !dbg !8803
  %38 = load i16, i16* %arrayidx38, align 2, !dbg !8803
  %conv39 = zext i16 %38 to i32, !dbg !8803
  %sub = sub nsw i32 %conv39, 512, !dbg !8804
  %mul40 = mul nsw i32 2, %sub, !dbg !8805
  %cmp41 = icmp sgt i32 %conv36, %mul40, !dbg !8806
  br i1 %cmp41, label %cond.true43, label %cond.false47, !dbg !8801

cond.true43:                                      ; preds = %cond.false33
  %39 = load i32, i32* %j, align 4, !dbg !8807
  %idxprom44 = sext i32 %39 to i64, !dbg !8809
  %40 = load i16*, i16** %top, align 8, !dbg !8809
  %arrayidx45 = getelementptr inbounds i16, i16* %40, i64 %idxprom44, !dbg !8809
  %41 = load i16, i16* %arrayidx45, align 2, !dbg !8809
  %conv46 = zext i16 %41 to i32, !dbg !8810
  br label %cond.end53, !dbg !8811

cond.false47:                                     ; preds = %cond.false33
  %42 = load i32, i32* %j, align 4, !dbg !8812
  %idxprom48 = sext i32 %42 to i64, !dbg !8814
  %43 = load i16*, i16** %bottom, align 8, !dbg !8814
  %arrayidx49 = getelementptr inbounds i16, i16* %43, i64 %idxprom48, !dbg !8814
  %44 = load i16, i16* %arrayidx49, align 2, !dbg !8814
  %conv50 = zext i16 %44 to i32, !dbg !8814
  %sub51 = sub nsw i32 %conv50, 512, !dbg !8815
  %mul52 = mul nsw i32 2, %sub51, !dbg !8816
  br label %cond.end53, !dbg !8817

cond.end53:                                       ; preds = %cond.false47, %cond.true43
  %cond54 = phi i32 [ %conv46, %cond.true43 ], [ %mul52, %cond.false47 ], !dbg !8818
  br label %cond.end55, !dbg !8820

cond.end55:                                       ; preds = %cond.end53, %cond.end
  %cond56 = phi i32 [ %cond, %cond.end ], [ %cond54, %cond.end53 ], !dbg !8821
  %45 = load i32, i32* %j, align 4, !dbg !8823
  %idxprom57 = sext i32 %45 to i64, !dbg !8824
  %46 = load i16*, i16** %top, align 8, !dbg !8824
  %arrayidx58 = getelementptr inbounds i16, i16* %46, i64 %idxprom57, !dbg !8824
  %47 = load i16, i16* %arrayidx58, align 2, !dbg !8824
  %conv59 = zext i16 %47 to i32, !dbg !8824
  %sub60 = sub nsw i32 %cond56, %conv59, !dbg !8825
  %conv61 = sitofp i32 %sub60 to double, !dbg !8826
  %48 = load double, double* %opacity, align 8, !dbg !8827
  %mul62 = fmul double %conv61, %48, !dbg !8828
  %add = fadd double %conv11, %mul62, !dbg !8829
  %conv63 = fptoui double %add to i16, !dbg !8830
  %49 = load i32, i32* %j, align 4, !dbg !8831
  %idxprom64 = sext i32 %49 to i64, !dbg !8832
  %50 = load i16*, i16** %dst, align 8, !dbg !8832
  %arrayidx65 = getelementptr inbounds i16, i16* %50, i64 %idxprom64, !dbg !8832
  store i16 %conv63, i16* %arrayidx65, align 2, !dbg !8833
  br label %for.inc, !dbg !8834

for.inc:                                          ; preds = %cond.end55
  %51 = load i32, i32* %j, align 4, !dbg !8835
  %inc = add nsw i32 %51, 1, !dbg !8835
  store i32 %inc, i32* %j, align 4, !dbg !8835
  br label %for.cond5, !dbg !8837, !llvm.loop !8838

for.end:                                          ; preds = %for.cond5
  %52 = load i64, i64* %dst_linesize.addr, align 8, !dbg !8840
  %53 = load i16*, i16** %dst, align 8, !dbg !8842
  %add.ptr = getelementptr inbounds i16, i16* %53, i64 %52, !dbg !8842
  store i16* %add.ptr, i16** %dst, align 8, !dbg !8842
  %54 = load i64, i64* %top_linesize.addr, align 8, !dbg !8843
  %55 = load i16*, i16** %top, align 8, !dbg !8844
  %add.ptr66 = getelementptr inbounds i16, i16* %55, i64 %54, !dbg !8844
  store i16* %add.ptr66, i16** %top, align 8, !dbg !8844
  %56 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !8845
  %57 = load i16*, i16** %bottom, align 8, !dbg !8846
  %add.ptr67 = getelementptr inbounds i16, i16* %57, i64 %56, !dbg !8846
  store i16* %add.ptr67, i16** %bottom, align 8, !dbg !8846
  br label %for.inc68, !dbg !8847

for.inc68:                                        ; preds = %for.end
  %58 = load i32, i32* %i, align 4, !dbg !8848
  %inc69 = add nsw i32 %58, 1, !dbg !8848
  store i32 %inc69, i32* %i, align 4, !dbg !8848
  br label %for.cond, !dbg !8850, !llvm.loop !8851

for.end70:                                        ; preds = %for.cond
  ret void, !dbg !8853
}

; Function Attrs: nounwind uwtable
define internal void @blend_reflect_10bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !8855 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !8856, metadata !905), !dbg !8857
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !8858, metadata !905), !dbg !8859
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !8860, metadata !905), !dbg !8861
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !8862, metadata !905), !dbg !8863
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !8864, metadata !905), !dbg !8865
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !8866, metadata !905), !dbg !8867
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !8868, metadata !905), !dbg !8869
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !8870, metadata !905), !dbg !8871
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !8872, metadata !905), !dbg !8873
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !8874, metadata !905), !dbg !8875
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !8876, metadata !905), !dbg !8877
  call void @llvm.dbg.declare(metadata i16** %top, metadata !8878, metadata !905), !dbg !8879
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !8880
  %1 = bitcast i8* %0 to i16*, !dbg !8881
  store i16* %1, i16** %top, align 8, !dbg !8879
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !8882, metadata !905), !dbg !8883
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !8884
  %3 = bitcast i8* %2 to i16*, !dbg !8885
  store i16* %3, i16** %bottom, align 8, !dbg !8883
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !8886, metadata !905), !dbg !8887
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !8888
  %5 = bitcast i8* %4 to i16*, !dbg !8889
  store i16* %5, i16** %dst, align 8, !dbg !8887
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !8890, metadata !905), !dbg !8891
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !8892
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !8893
  %7 = load double, double* %opacity1, align 8, !dbg !8893
  store double %7, double* %opacity, align 8, !dbg !8891
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8894, metadata !905), !dbg !8895
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8896, metadata !905), !dbg !8897
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !8898
  %div = sdiv i64 %8, 2, !dbg !8898
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !8898
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !8899
  %div2 = sdiv i64 %9, 2, !dbg !8899
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !8899
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !8900
  %div3 = sdiv i64 %10, 2, !dbg !8900
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !8900
  store i32 0, i32* %i, align 4, !dbg !8901
  br label %for.cond, !dbg !8903

for.cond:                                         ; preds = %for.inc59, %entry
  %11 = load i32, i32* %i, align 4, !dbg !8904
  %conv = sext i32 %11 to i64, !dbg !8904
  %12 = load i64, i64* %height.addr, align 8, !dbg !8907
  %cmp = icmp slt i64 %conv, %12, !dbg !8908
  br i1 %cmp, label %for.body, label %for.end61, !dbg !8909

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !8910
  br label %for.cond5, !dbg !8914

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !8915
  %conv6 = sext i32 %13 to i64, !dbg !8915
  %14 = load i64, i64* %width.addr, align 8, !dbg !8918
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !8919
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !8920

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !8921
  %idxprom = sext i32 %15 to i64, !dbg !8924
  %16 = load i16*, i16** %top, align 8, !dbg !8924
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !8924
  %17 = load i16, i16* %arrayidx, align 2, !dbg !8924
  %conv10 = zext i16 %17 to i32, !dbg !8924
  %conv11 = sitofp i32 %conv10 to double, !dbg !8924
  %18 = load i32, i32* %j, align 4, !dbg !8925
  %idxprom12 = sext i32 %18 to i64, !dbg !8926
  %19 = load i16*, i16** %bottom, align 8, !dbg !8926
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !8926
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !8926
  %conv14 = zext i16 %20 to i32, !dbg !8926
  %cmp15 = icmp eq i32 %conv14, 1023, !dbg !8927
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !8928

cond.true:                                        ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !8929
  %idxprom17 = sext i32 %21 to i64, !dbg !8931
  %22 = load i16*, i16** %bottom, align 8, !dbg !8931
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !8931
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !8931
  %conv19 = zext i16 %23 to i32, !dbg !8931
  br label %cond.end46, !dbg !8932

cond.false:                                       ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !8933
  %idxprom20 = sext i32 %24 to i64, !dbg !8935
  %25 = load i16*, i16** %top, align 8, !dbg !8935
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !8935
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !8935
  %conv22 = zext i16 %26 to i32, !dbg !8935
  %27 = load i32, i32* %j, align 4, !dbg !8936
  %idxprom23 = sext i32 %27 to i64, !dbg !8937
  %28 = load i16*, i16** %top, align 8, !dbg !8937
  %arrayidx24 = getelementptr inbounds i16, i16* %28, i64 %idxprom23, !dbg !8937
  %29 = load i16, i16* %arrayidx24, align 2, !dbg !8937
  %conv25 = zext i16 %29 to i32, !dbg !8937
  %mul = mul nsw i32 %conv22, %conv25, !dbg !8938
  %30 = load i32, i32* %j, align 4, !dbg !8939
  %idxprom26 = sext i32 %30 to i64, !dbg !8940
  %31 = load i16*, i16** %bottom, align 8, !dbg !8940
  %arrayidx27 = getelementptr inbounds i16, i16* %31, i64 %idxprom26, !dbg !8940
  %32 = load i16, i16* %arrayidx27, align 2, !dbg !8940
  %conv28 = zext i16 %32 to i32, !dbg !8940
  %sub = sub nsw i32 1023, %conv28, !dbg !8941
  %div29 = sdiv i32 %mul, %sub, !dbg !8942
  %cmp30 = icmp sgt i32 1023, %div29, !dbg !8943
  br i1 %cmp30, label %cond.true32, label %cond.false45, !dbg !8944

cond.true32:                                      ; preds = %cond.false
  %33 = load i32, i32* %j, align 4, !dbg !8945
  %idxprom33 = sext i32 %33 to i64, !dbg !8947
  %34 = load i16*, i16** %top, align 8, !dbg !8947
  %arrayidx34 = getelementptr inbounds i16, i16* %34, i64 %idxprom33, !dbg !8947
  %35 = load i16, i16* %arrayidx34, align 2, !dbg !8947
  %conv35 = zext i16 %35 to i32, !dbg !8947
  %36 = load i32, i32* %j, align 4, !dbg !8948
  %idxprom36 = sext i32 %36 to i64, !dbg !8949
  %37 = load i16*, i16** %top, align 8, !dbg !8949
  %arrayidx37 = getelementptr inbounds i16, i16* %37, i64 %idxprom36, !dbg !8949
  %38 = load i16, i16* %arrayidx37, align 2, !dbg !8949
  %conv38 = zext i16 %38 to i32, !dbg !8949
  %mul39 = mul nsw i32 %conv35, %conv38, !dbg !8950
  %39 = load i32, i32* %j, align 4, !dbg !8951
  %idxprom40 = sext i32 %39 to i64, !dbg !8952
  %40 = load i16*, i16** %bottom, align 8, !dbg !8952
  %arrayidx41 = getelementptr inbounds i16, i16* %40, i64 %idxprom40, !dbg !8952
  %41 = load i16, i16* %arrayidx41, align 2, !dbg !8952
  %conv42 = zext i16 %41 to i32, !dbg !8952
  %sub43 = sub nsw i32 1023, %conv42, !dbg !8953
  %div44 = sdiv i32 %mul39, %sub43, !dbg !8954
  br label %cond.end, !dbg !8955

cond.false45:                                     ; preds = %cond.false
  br label %cond.end, !dbg !8956

cond.end:                                         ; preds = %cond.false45, %cond.true32
  %cond = phi i32 [ %div44, %cond.true32 ], [ 1023, %cond.false45 ], !dbg !8958
  br label %cond.end46, !dbg !8960

cond.end46:                                       ; preds = %cond.end, %cond.true
  %cond47 = phi i32 [ %conv19, %cond.true ], [ %cond, %cond.end ], !dbg !8961
  %42 = load i32, i32* %j, align 4, !dbg !8963
  %idxprom48 = sext i32 %42 to i64, !dbg !8964
  %43 = load i16*, i16** %top, align 8, !dbg !8964
  %arrayidx49 = getelementptr inbounds i16, i16* %43, i64 %idxprom48, !dbg !8964
  %44 = load i16, i16* %arrayidx49, align 2, !dbg !8964
  %conv50 = zext i16 %44 to i32, !dbg !8964
  %sub51 = sub nsw i32 %cond47, %conv50, !dbg !8965
  %conv52 = sitofp i32 %sub51 to double, !dbg !8966
  %45 = load double, double* %opacity, align 8, !dbg !8967
  %mul53 = fmul double %conv52, %45, !dbg !8968
  %add = fadd double %conv11, %mul53, !dbg !8969
  %conv54 = fptoui double %add to i16, !dbg !8970
  %46 = load i32, i32* %j, align 4, !dbg !8971
  %idxprom55 = sext i32 %46 to i64, !dbg !8972
  %47 = load i16*, i16** %dst, align 8, !dbg !8972
  %arrayidx56 = getelementptr inbounds i16, i16* %47, i64 %idxprom55, !dbg !8972
  store i16 %conv54, i16* %arrayidx56, align 2, !dbg !8973
  br label %for.inc, !dbg !8974

for.inc:                                          ; preds = %cond.end46
  %48 = load i32, i32* %j, align 4, !dbg !8975
  %inc = add nsw i32 %48, 1, !dbg !8975
  store i32 %inc, i32* %j, align 4, !dbg !8975
  br label %for.cond5, !dbg !8977, !llvm.loop !8978

for.end:                                          ; preds = %for.cond5
  %49 = load i64, i64* %dst_linesize.addr, align 8, !dbg !8980
  %50 = load i16*, i16** %dst, align 8, !dbg !8982
  %add.ptr = getelementptr inbounds i16, i16* %50, i64 %49, !dbg !8982
  store i16* %add.ptr, i16** %dst, align 8, !dbg !8982
  %51 = load i64, i64* %top_linesize.addr, align 8, !dbg !8983
  %52 = load i16*, i16** %top, align 8, !dbg !8984
  %add.ptr57 = getelementptr inbounds i16, i16* %52, i64 %51, !dbg !8984
  store i16* %add.ptr57, i16** %top, align 8, !dbg !8984
  %53 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !8985
  %54 = load i16*, i16** %bottom, align 8, !dbg !8986
  %add.ptr58 = getelementptr inbounds i16, i16* %54, i64 %53, !dbg !8986
  store i16* %add.ptr58, i16** %bottom, align 8, !dbg !8986
  br label %for.inc59, !dbg !8987

for.inc59:                                        ; preds = %for.end
  %55 = load i32, i32* %i, align 4, !dbg !8988
  %inc60 = add nsw i32 %55, 1, !dbg !8988
  store i32 %inc60, i32* %i, align 4, !dbg !8988
  br label %for.cond, !dbg !8990, !llvm.loop !8991

for.end61:                                        ; preds = %for.cond
  ret void, !dbg !8993
}

; Function Attrs: nounwind uwtable
define internal void @blend_screen_10bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !8995 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !8996, metadata !905), !dbg !8997
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !8998, metadata !905), !dbg !8999
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !9000, metadata !905), !dbg !9001
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !9002, metadata !905), !dbg !9003
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !9004, metadata !905), !dbg !9005
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !9006, metadata !905), !dbg !9007
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !9008, metadata !905), !dbg !9009
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !9010, metadata !905), !dbg !9011
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !9012, metadata !905), !dbg !9013
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !9014, metadata !905), !dbg !9015
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !9016, metadata !905), !dbg !9017
  call void @llvm.dbg.declare(metadata i16** %top, metadata !9018, metadata !905), !dbg !9019
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !9020
  %1 = bitcast i8* %0 to i16*, !dbg !9021
  store i16* %1, i16** %top, align 8, !dbg !9019
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !9022, metadata !905), !dbg !9023
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !9024
  %3 = bitcast i8* %2 to i16*, !dbg !9025
  store i16* %3, i16** %bottom, align 8, !dbg !9023
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !9026, metadata !905), !dbg !9027
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !9028
  %5 = bitcast i8* %4 to i16*, !dbg !9029
  store i16* %5, i16** %dst, align 8, !dbg !9027
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !9030, metadata !905), !dbg !9031
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !9032
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !9033
  %7 = load double, double* %opacity1, align 8, !dbg !9033
  store double %7, double* %opacity, align 8, !dbg !9031
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9034, metadata !905), !dbg !9035
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9036, metadata !905), !dbg !9037
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !9038
  %div = sdiv i64 %8, 2, !dbg !9038
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !9038
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !9039
  %div2 = sdiv i64 %9, 2, !dbg !9039
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !9039
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !9040
  %div3 = sdiv i64 %10, 2, !dbg !9040
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !9040
  store i32 0, i32* %i, align 4, !dbg !9041
  br label %for.cond, !dbg !9043

for.cond:                                         ; preds = %for.inc33, %entry
  %11 = load i32, i32* %i, align 4, !dbg !9044
  %conv = sext i32 %11 to i64, !dbg !9044
  %12 = load i64, i64* %height.addr, align 8, !dbg !9047
  %cmp = icmp slt i64 %conv, %12, !dbg !9048
  br i1 %cmp, label %for.body, label %for.end35, !dbg !9049

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !9050
  br label %for.cond5, !dbg !9054

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !9055
  %conv6 = sext i32 %13 to i64, !dbg !9055
  %14 = load i64, i64* %width.addr, align 8, !dbg !9058
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !9059
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !9060

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !9061
  %idxprom = sext i32 %15 to i64, !dbg !9064
  %16 = load i16*, i16** %top, align 8, !dbg !9064
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !9064
  %17 = load i16, i16* %arrayidx, align 2, !dbg !9064
  %conv10 = zext i16 %17 to i32, !dbg !9064
  %conv11 = sitofp i32 %conv10 to double, !dbg !9064
  %18 = load i32, i32* %j, align 4, !dbg !9065
  %idxprom12 = sext i32 %18 to i64, !dbg !9066
  %19 = load i16*, i16** %top, align 8, !dbg !9066
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !9066
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !9066
  %conv14 = zext i16 %20 to i32, !dbg !9067
  %sub = sub nsw i32 1023, %conv14, !dbg !9068
  %21 = load i32, i32* %j, align 4, !dbg !9069
  %idxprom15 = sext i32 %21 to i64, !dbg !9070
  %22 = load i16*, i16** %bottom, align 8, !dbg !9070
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !9070
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !9070
  %conv17 = zext i16 %23 to i32, !dbg !9071
  %sub18 = sub nsw i32 1023, %conv17, !dbg !9072
  %mul = mul nsw i32 %sub, %sub18, !dbg !9073
  %div19 = sdiv i32 %mul, 1023, !dbg !9074
  %mul20 = mul nsw i32 1, %div19, !dbg !9075
  %sub21 = sub nsw i32 1023, %mul20, !dbg !9076
  %24 = load i32, i32* %j, align 4, !dbg !9077
  %idxprom22 = sext i32 %24 to i64, !dbg !9078
  %25 = load i16*, i16** %top, align 8, !dbg !9078
  %arrayidx23 = getelementptr inbounds i16, i16* %25, i64 %idxprom22, !dbg !9078
  %26 = load i16, i16* %arrayidx23, align 2, !dbg !9078
  %conv24 = zext i16 %26 to i32, !dbg !9078
  %sub25 = sub nsw i32 %sub21, %conv24, !dbg !9079
  %conv26 = sitofp i32 %sub25 to double, !dbg !9080
  %27 = load double, double* %opacity, align 8, !dbg !9081
  %mul27 = fmul double %conv26, %27, !dbg !9082
  %add = fadd double %conv11, %mul27, !dbg !9083
  %conv28 = fptoui double %add to i16, !dbg !9064
  %28 = load i32, i32* %j, align 4, !dbg !9084
  %idxprom29 = sext i32 %28 to i64, !dbg !9085
  %29 = load i16*, i16** %dst, align 8, !dbg !9085
  %arrayidx30 = getelementptr inbounds i16, i16* %29, i64 %idxprom29, !dbg !9085
  store i16 %conv28, i16* %arrayidx30, align 2, !dbg !9086
  br label %for.inc, !dbg !9087

for.inc:                                          ; preds = %for.body9
  %30 = load i32, i32* %j, align 4, !dbg !9088
  %inc = add nsw i32 %30, 1, !dbg !9088
  store i32 %inc, i32* %j, align 4, !dbg !9088
  br label %for.cond5, !dbg !9090, !llvm.loop !9091

for.end:                                          ; preds = %for.cond5
  %31 = load i64, i64* %dst_linesize.addr, align 8, !dbg !9093
  %32 = load i16*, i16** %dst, align 8, !dbg !9095
  %add.ptr = getelementptr inbounds i16, i16* %32, i64 %31, !dbg !9095
  store i16* %add.ptr, i16** %dst, align 8, !dbg !9095
  %33 = load i64, i64* %top_linesize.addr, align 8, !dbg !9096
  %34 = load i16*, i16** %top, align 8, !dbg !9097
  %add.ptr31 = getelementptr inbounds i16, i16* %34, i64 %33, !dbg !9097
  store i16* %add.ptr31, i16** %top, align 8, !dbg !9097
  %35 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !9098
  %36 = load i16*, i16** %bottom, align 8, !dbg !9099
  %add.ptr32 = getelementptr inbounds i16, i16* %36, i64 %35, !dbg !9099
  store i16* %add.ptr32, i16** %bottom, align 8, !dbg !9099
  br label %for.inc33, !dbg !9100

for.inc33:                                        ; preds = %for.end
  %37 = load i32, i32* %i, align 4, !dbg !9101
  %inc34 = add nsw i32 %37, 1, !dbg !9101
  store i32 %inc34, i32* %i, align 4, !dbg !9101
  br label %for.cond, !dbg !9103, !llvm.loop !9104

for.end35:                                        ; preds = %for.cond
  ret void, !dbg !9106
}

; Function Attrs: nounwind uwtable
define internal void @blend_softlight_10bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !9108 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !9109, metadata !905), !dbg !9110
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !9111, metadata !905), !dbg !9112
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !9113, metadata !905), !dbg !9114
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !9115, metadata !905), !dbg !9116
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !9117, metadata !905), !dbg !9118
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !9119, metadata !905), !dbg !9120
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !9121, metadata !905), !dbg !9122
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !9123, metadata !905), !dbg !9124
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !9125, metadata !905), !dbg !9126
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !9127, metadata !905), !dbg !9128
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !9129, metadata !905), !dbg !9130
  call void @llvm.dbg.declare(metadata i16** %top, metadata !9131, metadata !905), !dbg !9132
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !9133
  %1 = bitcast i8* %0 to i16*, !dbg !9134
  store i16* %1, i16** %top, align 8, !dbg !9132
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !9135, metadata !905), !dbg !9136
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !9137
  %3 = bitcast i8* %2 to i16*, !dbg !9138
  store i16* %3, i16** %bottom, align 8, !dbg !9136
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !9139, metadata !905), !dbg !9140
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !9141
  %5 = bitcast i8* %4 to i16*, !dbg !9142
  store i16* %5, i16** %dst, align 8, !dbg !9140
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !9143, metadata !905), !dbg !9144
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !9145
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !9146
  %7 = load double, double* %opacity1, align 8, !dbg !9146
  store double %7, double* %opacity, align 8, !dbg !9144
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9147, metadata !905), !dbg !9148
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9149, metadata !905), !dbg !9150
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !9151
  %div = sdiv i64 %8, 2, !dbg !9151
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !9151
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !9152
  %div2 = sdiv i64 %9, 2, !dbg !9152
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !9152
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !9153
  %div3 = sdiv i64 %10, 2, !dbg !9153
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !9153
  store i32 0, i32* %i, align 4, !dbg !9154
  br label %for.cond, !dbg !9156

for.cond:                                         ; preds = %for.inc76, %entry
  %11 = load i32, i32* %i, align 4, !dbg !9157
  %conv = sext i32 %11 to i64, !dbg !9157
  %12 = load i64, i64* %height.addr, align 8, !dbg !9160
  %cmp = icmp slt i64 %conv, %12, !dbg !9161
  br i1 %cmp, label %for.body, label %for.end78, !dbg !9162

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !9163
  br label %for.cond5, !dbg !9167

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !9168
  %conv6 = sext i32 %13 to i64, !dbg !9168
  %14 = load i64, i64* %width.addr, align 8, !dbg !9171
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !9172
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !9173

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !9174
  %idxprom = sext i32 %15 to i64, !dbg !9177
  %16 = load i16*, i16** %top, align 8, !dbg !9177
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !9177
  %17 = load i16, i16* %arrayidx, align 2, !dbg !9177
  %conv10 = zext i16 %17 to i32, !dbg !9177
  %conv11 = sitofp i32 %conv10 to double, !dbg !9177
  %18 = load i32, i32* %j, align 4, !dbg !9178
  %idxprom12 = sext i32 %18 to i64, !dbg !9179
  %19 = load i16*, i16** %top, align 8, !dbg !9179
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !9179
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !9179
  %conv14 = zext i16 %20 to i32, !dbg !9179
  %cmp15 = icmp sgt i32 %conv14, 511, !dbg !9180
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !9181

cond.true:                                        ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !9182
  %idxprom17 = sext i32 %21 to i64, !dbg !9184
  %22 = load i16*, i16** %bottom, align 8, !dbg !9184
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !9184
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !9184
  %conv19 = zext i16 %23 to i32, !dbg !9184
  %conv20 = sitofp i32 %conv19 to double, !dbg !9184
  %24 = load i32, i32* %j, align 4, !dbg !9185
  %idxprom21 = sext i32 %24 to i64, !dbg !9186
  %25 = load i16*, i16** %bottom, align 8, !dbg !9186
  %arrayidx22 = getelementptr inbounds i16, i16* %25, i64 %idxprom21, !dbg !9186
  %26 = load i16, i16* %arrayidx22, align 2, !dbg !9186
  %conv23 = zext i16 %26 to i32, !dbg !9186
  %sub = sub nsw i32 1023, %conv23, !dbg !9187
  %conv24 = sitofp i32 %sub to double, !dbg !9188
  %27 = load i32, i32* %j, align 4, !dbg !9189
  %idxprom25 = sext i32 %27 to i64, !dbg !9190
  %28 = load i16*, i16** %top, align 8, !dbg !9190
  %arrayidx26 = getelementptr inbounds i16, i16* %28, i64 %idxprom25, !dbg !9190
  %29 = load i16, i16* %arrayidx26, align 2, !dbg !9190
  %conv27 = zext i16 %29 to i32, !dbg !9190
  %conv28 = sitofp i32 %conv27 to double, !dbg !9190
  %sub29 = fsub double %conv28, 5.115000e+02, !dbg !9191
  %mul = fmul double %conv24, %sub29, !dbg !9192
  %div30 = fdiv double %mul, 5.115000e+02, !dbg !9193
  %30 = load i32, i32* %j, align 4, !dbg !9194
  %idxprom31 = sext i32 %30 to i64, !dbg !9195
  %31 = load i16*, i16** %bottom, align 8, !dbg !9195
  %arrayidx32 = getelementptr inbounds i16, i16* %31, i64 %idxprom31, !dbg !9195
  %32 = load i16, i16* %arrayidx32, align 2, !dbg !9195
  %conv33 = zext i16 %32 to i32, !dbg !9195
  %conv34 = sitofp i32 %conv33 to double, !dbg !9195
  %sub35 = fsub double %conv34, 5.115000e+02, !dbg !9196
  %call = call double @fabs(double %sub35) #1, !dbg !9197
  %div36 = fdiv double %call, 1.023000e+03, !dbg !9198
  %sub37 = fsub double 5.000000e-01, %div36, !dbg !9199
  %mul38 = fmul double %div30, %sub37, !dbg !9200
  %add = fadd double %conv20, %mul38, !dbg !9201
  br label %cond.end, !dbg !9202

cond.false:                                       ; preds = %for.body9
  %33 = load i32, i32* %j, align 4, !dbg !9203
  %idxprom39 = sext i32 %33 to i64, !dbg !9205
  %34 = load i16*, i16** %bottom, align 8, !dbg !9205
  %arrayidx40 = getelementptr inbounds i16, i16* %34, i64 %idxprom39, !dbg !9205
  %35 = load i16, i16* %arrayidx40, align 2, !dbg !9205
  %conv41 = zext i16 %35 to i32, !dbg !9205
  %conv42 = sitofp i32 %conv41 to double, !dbg !9205
  %36 = load i32, i32* %j, align 4, !dbg !9206
  %idxprom43 = sext i32 %36 to i64, !dbg !9207
  %37 = load i16*, i16** %bottom, align 8, !dbg !9207
  %arrayidx44 = getelementptr inbounds i16, i16* %37, i64 %idxprom43, !dbg !9207
  %38 = load i16, i16* %arrayidx44, align 2, !dbg !9207
  %conv45 = zext i16 %38 to i32, !dbg !9207
  %conv46 = sitofp i32 %conv45 to double, !dbg !9207
  %39 = load i32, i32* %j, align 4, !dbg !9208
  %idxprom47 = sext i32 %39 to i64, !dbg !9209
  %40 = load i16*, i16** %top, align 8, !dbg !9209
  %arrayidx48 = getelementptr inbounds i16, i16* %40, i64 %idxprom47, !dbg !9209
  %41 = load i16, i16* %arrayidx48, align 2, !dbg !9209
  %conv49 = zext i16 %41 to i32, !dbg !9209
  %conv50 = sitofp i32 %conv49 to double, !dbg !9209
  %sub51 = fsub double 5.115000e+02, %conv50, !dbg !9210
  %div52 = fdiv double %sub51, 5.115000e+02, !dbg !9211
  %mul53 = fmul double %conv46, %div52, !dbg !9212
  %42 = load i32, i32* %j, align 4, !dbg !9213
  %idxprom54 = sext i32 %42 to i64, !dbg !9214
  %43 = load i16*, i16** %bottom, align 8, !dbg !9214
  %arrayidx55 = getelementptr inbounds i16, i16* %43, i64 %idxprom54, !dbg !9214
  %44 = load i16, i16* %arrayidx55, align 2, !dbg !9214
  %conv56 = zext i16 %44 to i32, !dbg !9214
  %conv57 = sitofp i32 %conv56 to double, !dbg !9214
  %sub58 = fsub double %conv57, 5.115000e+02, !dbg !9215
  %call59 = call double @fabs(double %sub58) #1, !dbg !9216
  %div60 = fdiv double %call59, 1.023000e+03, !dbg !9217
  %sub61 = fsub double 5.000000e-01, %div60, !dbg !9218
  %mul62 = fmul double %mul53, %sub61, !dbg !9219
  %sub63 = fsub double %conv42, %mul62, !dbg !9220
  br label %cond.end, !dbg !9221

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %add, %cond.true ], [ %sub63, %cond.false ], !dbg !9222
  %45 = load i32, i32* %j, align 4, !dbg !9224
  %idxprom64 = sext i32 %45 to i64, !dbg !9225
  %46 = load i16*, i16** %top, align 8, !dbg !9225
  %arrayidx65 = getelementptr inbounds i16, i16* %46, i64 %idxprom64, !dbg !9225
  %47 = load i16, i16* %arrayidx65, align 2, !dbg !9225
  %conv66 = zext i16 %47 to i32, !dbg !9225
  %conv67 = sitofp i32 %conv66 to double, !dbg !9225
  %sub68 = fsub double %cond, %conv67, !dbg !9226
  %48 = load double, double* %opacity, align 8, !dbg !9227
  %mul69 = fmul double %sub68, %48, !dbg !9228
  %add70 = fadd double %conv11, %mul69, !dbg !9229
  %conv71 = fptoui double %add70 to i16, !dbg !9230
  %49 = load i32, i32* %j, align 4, !dbg !9231
  %idxprom72 = sext i32 %49 to i64, !dbg !9232
  %50 = load i16*, i16** %dst, align 8, !dbg !9232
  %arrayidx73 = getelementptr inbounds i16, i16* %50, i64 %idxprom72, !dbg !9232
  store i16 %conv71, i16* %arrayidx73, align 2, !dbg !9233
  br label %for.inc, !dbg !9234

for.inc:                                          ; preds = %cond.end
  %51 = load i32, i32* %j, align 4, !dbg !9235
  %inc = add nsw i32 %51, 1, !dbg !9235
  store i32 %inc, i32* %j, align 4, !dbg !9235
  br label %for.cond5, !dbg !9237, !llvm.loop !9238

for.end:                                          ; preds = %for.cond5
  %52 = load i64, i64* %dst_linesize.addr, align 8, !dbg !9240
  %53 = load i16*, i16** %dst, align 8, !dbg !9242
  %add.ptr = getelementptr inbounds i16, i16* %53, i64 %52, !dbg !9242
  store i16* %add.ptr, i16** %dst, align 8, !dbg !9242
  %54 = load i64, i64* %top_linesize.addr, align 8, !dbg !9243
  %55 = load i16*, i16** %top, align 8, !dbg !9244
  %add.ptr74 = getelementptr inbounds i16, i16* %55, i64 %54, !dbg !9244
  store i16* %add.ptr74, i16** %top, align 8, !dbg !9244
  %56 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !9245
  %57 = load i16*, i16** %bottom, align 8, !dbg !9246
  %add.ptr75 = getelementptr inbounds i16, i16* %57, i64 %56, !dbg !9246
  store i16* %add.ptr75, i16** %bottom, align 8, !dbg !9246
  br label %for.inc76, !dbg !9247

for.inc76:                                        ; preds = %for.end
  %58 = load i32, i32* %i, align 4, !dbg !9248
  %inc77 = add nsw i32 %58, 1, !dbg !9248
  store i32 %inc77, i32* %i, align 4, !dbg !9248
  br label %for.cond, !dbg !9250, !llvm.loop !9251

for.end78:                                        ; preds = %for.cond
  ret void, !dbg !9253
}

; Function Attrs: nounwind uwtable
define internal void @blend_subtract_10bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !9255 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !9256, metadata !905), !dbg !9257
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !9258, metadata !905), !dbg !9259
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !9260, metadata !905), !dbg !9261
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !9262, metadata !905), !dbg !9263
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !9264, metadata !905), !dbg !9265
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !9266, metadata !905), !dbg !9267
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !9268, metadata !905), !dbg !9269
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !9270, metadata !905), !dbg !9271
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !9272, metadata !905), !dbg !9273
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !9274, metadata !905), !dbg !9275
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !9276, metadata !905), !dbg !9277
  call void @llvm.dbg.declare(metadata i16** %top, metadata !9278, metadata !905), !dbg !9279
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !9280
  %1 = bitcast i8* %0 to i16*, !dbg !9281
  store i16* %1, i16** %top, align 8, !dbg !9279
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !9282, metadata !905), !dbg !9283
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !9284
  %3 = bitcast i8* %2 to i16*, !dbg !9285
  store i16* %3, i16** %bottom, align 8, !dbg !9283
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !9286, metadata !905), !dbg !9287
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !9288
  %5 = bitcast i8* %4 to i16*, !dbg !9289
  store i16* %5, i16** %dst, align 8, !dbg !9287
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !9290, metadata !905), !dbg !9291
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !9292
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !9293
  %7 = load double, double* %opacity1, align 8, !dbg !9293
  store double %7, double* %opacity, align 8, !dbg !9291
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9294, metadata !905), !dbg !9295
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9296, metadata !905), !dbg !9297
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !9298
  %div = sdiv i64 %8, 2, !dbg !9298
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !9298
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !9299
  %div2 = sdiv i64 %9, 2, !dbg !9299
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !9299
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !9300
  %div3 = sdiv i64 %10, 2, !dbg !9300
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !9300
  store i32 0, i32* %i, align 4, !dbg !9301
  br label %for.cond, !dbg !9303

for.cond:                                         ; preds = %for.inc37, %entry
  %11 = load i32, i32* %i, align 4, !dbg !9304
  %conv = sext i32 %11 to i64, !dbg !9304
  %12 = load i64, i64* %height.addr, align 8, !dbg !9307
  %cmp = icmp slt i64 %conv, %12, !dbg !9308
  br i1 %cmp, label %for.body, label %for.end39, !dbg !9309

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !9310
  br label %for.cond5, !dbg !9314

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !9315
  %conv6 = sext i32 %13 to i64, !dbg !9315
  %14 = load i64, i64* %width.addr, align 8, !dbg !9318
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !9319
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !9320

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !9321
  %idxprom = sext i32 %15 to i64, !dbg !9324
  %16 = load i16*, i16** %top, align 8, !dbg !9324
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !9324
  %17 = load i16, i16* %arrayidx, align 2, !dbg !9324
  %conv10 = zext i16 %17 to i32, !dbg !9324
  %conv11 = sitofp i32 %conv10 to double, !dbg !9324
  %18 = load i32, i32* %j, align 4, !dbg !9325
  %idxprom12 = sext i32 %18 to i64, !dbg !9326
  %19 = load i16*, i16** %top, align 8, !dbg !9326
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !9326
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !9326
  %conv14 = zext i16 %20 to i32, !dbg !9326
  %21 = load i32, i32* %j, align 4, !dbg !9327
  %idxprom15 = sext i32 %21 to i64, !dbg !9328
  %22 = load i16*, i16** %bottom, align 8, !dbg !9328
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !9328
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !9328
  %conv17 = zext i16 %23 to i32, !dbg !9328
  %sub = sub nsw i32 %conv14, %conv17, !dbg !9329
  %cmp18 = icmp sgt i32 0, %sub, !dbg !9330
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !9331

cond.true:                                        ; preds = %for.body9
  br label %cond.end, !dbg !9332

cond.false:                                       ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !9334
  %idxprom20 = sext i32 %24 to i64, !dbg !9336
  %25 = load i16*, i16** %top, align 8, !dbg !9336
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !9336
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !9336
  %conv22 = zext i16 %26 to i32, !dbg !9336
  %27 = load i32, i32* %j, align 4, !dbg !9337
  %idxprom23 = sext i32 %27 to i64, !dbg !9338
  %28 = load i16*, i16** %bottom, align 8, !dbg !9338
  %arrayidx24 = getelementptr inbounds i16, i16* %28, i64 %idxprom23, !dbg !9338
  %29 = load i16, i16* %arrayidx24, align 2, !dbg !9338
  %conv25 = zext i16 %29 to i32, !dbg !9338
  %sub26 = sub nsw i32 %conv22, %conv25, !dbg !9339
  br label %cond.end, !dbg !9340

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %sub26, %cond.false ], !dbg !9341
  %30 = load i32, i32* %j, align 4, !dbg !9343
  %idxprom27 = sext i32 %30 to i64, !dbg !9344
  %31 = load i16*, i16** %top, align 8, !dbg !9344
  %arrayidx28 = getelementptr inbounds i16, i16* %31, i64 %idxprom27, !dbg !9344
  %32 = load i16, i16* %arrayidx28, align 2, !dbg !9344
  %conv29 = zext i16 %32 to i32, !dbg !9344
  %sub30 = sub nsw i32 %cond, %conv29, !dbg !9345
  %conv31 = sitofp i32 %sub30 to double, !dbg !9346
  %33 = load double, double* %opacity, align 8, !dbg !9347
  %mul = fmul double %conv31, %33, !dbg !9348
  %add = fadd double %conv11, %mul, !dbg !9349
  %conv32 = fptoui double %add to i16, !dbg !9350
  %34 = load i32, i32* %j, align 4, !dbg !9351
  %idxprom33 = sext i32 %34 to i64, !dbg !9352
  %35 = load i16*, i16** %dst, align 8, !dbg !9352
  %arrayidx34 = getelementptr inbounds i16, i16* %35, i64 %idxprom33, !dbg !9352
  store i16 %conv32, i16* %arrayidx34, align 2, !dbg !9353
  br label %for.inc, !dbg !9354

for.inc:                                          ; preds = %cond.end
  %36 = load i32, i32* %j, align 4, !dbg !9355
  %inc = add nsw i32 %36, 1, !dbg !9355
  store i32 %inc, i32* %j, align 4, !dbg !9355
  br label %for.cond5, !dbg !9357, !llvm.loop !9358

for.end:                                          ; preds = %for.cond5
  %37 = load i64, i64* %dst_linesize.addr, align 8, !dbg !9360
  %38 = load i16*, i16** %dst, align 8, !dbg !9362
  %add.ptr = getelementptr inbounds i16, i16* %38, i64 %37, !dbg !9362
  store i16* %add.ptr, i16** %dst, align 8, !dbg !9362
  %39 = load i64, i64* %top_linesize.addr, align 8, !dbg !9363
  %40 = load i16*, i16** %top, align 8, !dbg !9364
  %add.ptr35 = getelementptr inbounds i16, i16* %40, i64 %39, !dbg !9364
  store i16* %add.ptr35, i16** %top, align 8, !dbg !9364
  %41 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !9365
  %42 = load i16*, i16** %bottom, align 8, !dbg !9366
  %add.ptr36 = getelementptr inbounds i16, i16* %42, i64 %41, !dbg !9366
  store i16* %add.ptr36, i16** %bottom, align 8, !dbg !9366
  br label %for.inc37, !dbg !9367

for.inc37:                                        ; preds = %for.end
  %43 = load i32, i32* %i, align 4, !dbg !9368
  %inc38 = add nsw i32 %43, 1, !dbg !9368
  store i32 %inc38, i32* %i, align 4, !dbg !9368
  br label %for.cond, !dbg !9370, !llvm.loop !9371

for.end39:                                        ; preds = %for.cond
  ret void, !dbg !9373
}

; Function Attrs: nounwind uwtable
define internal void @blend_vividlight_10bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !9375 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !9376, metadata !905), !dbg !9377
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !9378, metadata !905), !dbg !9379
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !9380, metadata !905), !dbg !9381
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !9382, metadata !905), !dbg !9383
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !9384, metadata !905), !dbg !9385
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !9386, metadata !905), !dbg !9387
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !9388, metadata !905), !dbg !9389
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !9390, metadata !905), !dbg !9391
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !9392, metadata !905), !dbg !9393
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !9394, metadata !905), !dbg !9395
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !9396, metadata !905), !dbg !9397
  call void @llvm.dbg.declare(metadata i16** %top, metadata !9398, metadata !905), !dbg !9399
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !9400
  %1 = bitcast i8* %0 to i16*, !dbg !9401
  store i16* %1, i16** %top, align 8, !dbg !9399
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !9402, metadata !905), !dbg !9403
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !9404
  %3 = bitcast i8* %2 to i16*, !dbg !9405
  store i16* %3, i16** %bottom, align 8, !dbg !9403
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !9406, metadata !905), !dbg !9407
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !9408
  %5 = bitcast i8* %4 to i16*, !dbg !9409
  store i16* %5, i16** %dst, align 8, !dbg !9407
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !9410, metadata !905), !dbg !9411
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !9412
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !9413
  %7 = load double, double* %opacity1, align 8, !dbg !9413
  store double %7, double* %opacity, align 8, !dbg !9411
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9414, metadata !905), !dbg !9415
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9416, metadata !905), !dbg !9417
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !9418
  %div = sdiv i64 %8, 2, !dbg !9418
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !9418
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !9419
  %div2 = sdiv i64 %9, 2, !dbg !9419
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !9419
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !9420
  %div3 = sdiv i64 %10, 2, !dbg !9420
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !9420
  store i32 0, i32* %i, align 4, !dbg !9421
  br label %for.cond, !dbg !9423

for.cond:                                         ; preds = %for.inc111, %entry
  %11 = load i32, i32* %i, align 4, !dbg !9424
  %conv = sext i32 %11 to i64, !dbg !9424
  %12 = load i64, i64* %height.addr, align 8, !dbg !9427
  %cmp = icmp slt i64 %conv, %12, !dbg !9428
  br i1 %cmp, label %for.body, label %for.end113, !dbg !9429

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !9430
  br label %for.cond5, !dbg !9434

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !9435
  %conv6 = sext i32 %13 to i64, !dbg !9435
  %14 = load i64, i64* %width.addr, align 8, !dbg !9438
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !9439
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !9440

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !9441
  %idxprom = sext i32 %15 to i64, !dbg !9444
  %16 = load i16*, i16** %top, align 8, !dbg !9444
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !9444
  %17 = load i16, i16* %arrayidx, align 2, !dbg !9444
  %conv10 = zext i16 %17 to i32, !dbg !9444
  %conv11 = sitofp i32 %conv10 to double, !dbg !9444
  %18 = load i32, i32* %j, align 4, !dbg !9445
  %idxprom12 = sext i32 %18 to i64, !dbg !9446
  %19 = load i16*, i16** %top, align 8, !dbg !9446
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !9446
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !9446
  %conv14 = zext i16 %20 to i32, !dbg !9446
  %cmp15 = icmp slt i32 %conv14, 512, !dbg !9447
  br i1 %cmp15, label %cond.true, label %cond.false53, !dbg !9448

cond.true:                                        ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !9449
  %idxprom17 = sext i32 %21 to i64, !dbg !9451
  %22 = load i16*, i16** %top, align 8, !dbg !9451
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !9451
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !9451
  %conv19 = zext i16 %23 to i32, !dbg !9451
  %mul = mul nsw i32 2, %conv19, !dbg !9452
  %cmp20 = icmp eq i32 %mul, 0, !dbg !9453
  br i1 %cmp20, label %cond.true22, label %cond.false, !dbg !9454

cond.true22:                                      ; preds = %cond.true
  %24 = load i32, i32* %j, align 4, !dbg !9455
  %idxprom23 = sext i32 %24 to i64, !dbg !9457
  %25 = load i16*, i16** %top, align 8, !dbg !9457
  %arrayidx24 = getelementptr inbounds i16, i16* %25, i64 %idxprom23, !dbg !9457
  %26 = load i16, i16* %arrayidx24, align 2, !dbg !9457
  %conv25 = zext i16 %26 to i32, !dbg !9457
  %mul26 = mul nsw i32 2, %conv25, !dbg !9458
  br label %cond.end51, !dbg !9459

cond.false:                                       ; preds = %cond.true
  %27 = load i32, i32* %j, align 4, !dbg !9460
  %idxprom27 = sext i32 %27 to i64, !dbg !9462
  %28 = load i16*, i16** %bottom, align 8, !dbg !9462
  %arrayidx28 = getelementptr inbounds i16, i16* %28, i64 %idxprom27, !dbg !9462
  %29 = load i16, i16* %arrayidx28, align 2, !dbg !9462
  %conv29 = zext i16 %29 to i32, !dbg !9463
  %sub = sub nsw i32 1023, %conv29, !dbg !9464
  %shl = shl i32 %sub, 10, !dbg !9465
  %30 = load i32, i32* %j, align 4, !dbg !9466
  %idxprom30 = sext i32 %30 to i64, !dbg !9467
  %31 = load i16*, i16** %top, align 8, !dbg !9467
  %arrayidx31 = getelementptr inbounds i16, i16* %31, i64 %idxprom30, !dbg !9467
  %32 = load i16, i16* %arrayidx31, align 2, !dbg !9467
  %conv32 = zext i16 %32 to i32, !dbg !9467
  %mul33 = mul nsw i32 2, %conv32, !dbg !9468
  %div34 = sdiv i32 %shl, %mul33, !dbg !9469
  %sub35 = sub nsw i32 1023, %div34, !dbg !9470
  %cmp36 = icmp sgt i32 0, %sub35, !dbg !9471
  br i1 %cmp36, label %cond.true38, label %cond.false39, !dbg !9472

cond.true38:                                      ; preds = %cond.false
  br label %cond.end, !dbg !9473

cond.false39:                                     ; preds = %cond.false
  %33 = load i32, i32* %j, align 4, !dbg !9475
  %idxprom40 = sext i32 %33 to i64, !dbg !9477
  %34 = load i16*, i16** %bottom, align 8, !dbg !9477
  %arrayidx41 = getelementptr inbounds i16, i16* %34, i64 %idxprom40, !dbg !9477
  %35 = load i16, i16* %arrayidx41, align 2, !dbg !9477
  %conv42 = zext i16 %35 to i32, !dbg !9478
  %sub43 = sub nsw i32 1023, %conv42, !dbg !9479
  %shl44 = shl i32 %sub43, 10, !dbg !9480
  %36 = load i32, i32* %j, align 4, !dbg !9481
  %idxprom45 = sext i32 %36 to i64, !dbg !9482
  %37 = load i16*, i16** %top, align 8, !dbg !9482
  %arrayidx46 = getelementptr inbounds i16, i16* %37, i64 %idxprom45, !dbg !9482
  %38 = load i16, i16* %arrayidx46, align 2, !dbg !9482
  %conv47 = zext i16 %38 to i32, !dbg !9482
  %mul48 = mul nsw i32 2, %conv47, !dbg !9483
  %div49 = sdiv i32 %shl44, %mul48, !dbg !9484
  %sub50 = sub nsw i32 1023, %div49, !dbg !9485
  br label %cond.end, !dbg !9486

cond.end:                                         ; preds = %cond.false39, %cond.true38
  %cond = phi i32 [ 0, %cond.true38 ], [ %sub50, %cond.false39 ], !dbg !9487
  br label %cond.end51, !dbg !9489

cond.end51:                                       ; preds = %cond.end, %cond.true22
  %cond52 = phi i32 [ %mul26, %cond.true22 ], [ %cond, %cond.end ], !dbg !9490
  br label %cond.end98, !dbg !9492

cond.false53:                                     ; preds = %for.body9
  %39 = load i32, i32* %j, align 4, !dbg !9493
  %idxprom54 = sext i32 %39 to i64, !dbg !9495
  %40 = load i16*, i16** %top, align 8, !dbg !9495
  %arrayidx55 = getelementptr inbounds i16, i16* %40, i64 %idxprom54, !dbg !9495
  %41 = load i16, i16* %arrayidx55, align 2, !dbg !9495
  %conv56 = zext i16 %41 to i32, !dbg !9495
  %sub57 = sub nsw i32 %conv56, 512, !dbg !9496
  %mul58 = mul nsw i32 2, %sub57, !dbg !9497
  %cmp59 = icmp eq i32 %mul58, 1023, !dbg !9498
  br i1 %cmp59, label %cond.true61, label %cond.false67, !dbg !9499

cond.true61:                                      ; preds = %cond.false53
  %42 = load i32, i32* %j, align 4, !dbg !9500
  %idxprom62 = sext i32 %42 to i64, !dbg !9502
  %43 = load i16*, i16** %top, align 8, !dbg !9502
  %arrayidx63 = getelementptr inbounds i16, i16* %43, i64 %idxprom62, !dbg !9502
  %44 = load i16, i16* %arrayidx63, align 2, !dbg !9502
  %conv64 = zext i16 %44 to i32, !dbg !9502
  %sub65 = sub nsw i32 %conv64, 512, !dbg !9503
  %mul66 = mul nsw i32 2, %sub65, !dbg !9504
  br label %cond.end96, !dbg !9505

cond.false67:                                     ; preds = %cond.false53
  %45 = load i32, i32* %j, align 4, !dbg !9506
  %idxprom68 = sext i32 %45 to i64, !dbg !9508
  %46 = load i16*, i16** %bottom, align 8, !dbg !9508
  %arrayidx69 = getelementptr inbounds i16, i16* %46, i64 %idxprom68, !dbg !9508
  %47 = load i16, i16* %arrayidx69, align 2, !dbg !9508
  %conv70 = zext i16 %47 to i32, !dbg !9509
  %shl71 = shl i32 %conv70, 10, !dbg !9510
  %48 = load i32, i32* %j, align 4, !dbg !9511
  %idxprom72 = sext i32 %48 to i64, !dbg !9512
  %49 = load i16*, i16** %top, align 8, !dbg !9512
  %arrayidx73 = getelementptr inbounds i16, i16* %49, i64 %idxprom72, !dbg !9512
  %50 = load i16, i16* %arrayidx73, align 2, !dbg !9512
  %conv74 = zext i16 %50 to i32, !dbg !9512
  %sub75 = sub nsw i32 %conv74, 512, !dbg !9513
  %mul76 = mul nsw i32 2, %sub75, !dbg !9514
  %sub77 = sub nsw i32 1023, %mul76, !dbg !9515
  %div78 = sdiv i32 %shl71, %sub77, !dbg !9516
  %cmp79 = icmp sgt i32 1023, %div78, !dbg !9517
  br i1 %cmp79, label %cond.true81, label %cond.false93, !dbg !9518

cond.true81:                                      ; preds = %cond.false67
  %51 = load i32, i32* %j, align 4, !dbg !9519
  %idxprom82 = sext i32 %51 to i64, !dbg !9521
  %52 = load i16*, i16** %bottom, align 8, !dbg !9521
  %arrayidx83 = getelementptr inbounds i16, i16* %52, i64 %idxprom82, !dbg !9521
  %53 = load i16, i16* %arrayidx83, align 2, !dbg !9521
  %conv84 = zext i16 %53 to i32, !dbg !9522
  %shl85 = shl i32 %conv84, 10, !dbg !9523
  %54 = load i32, i32* %j, align 4, !dbg !9524
  %idxprom86 = sext i32 %54 to i64, !dbg !9525
  %55 = load i16*, i16** %top, align 8, !dbg !9525
  %arrayidx87 = getelementptr inbounds i16, i16* %55, i64 %idxprom86, !dbg !9525
  %56 = load i16, i16* %arrayidx87, align 2, !dbg !9525
  %conv88 = zext i16 %56 to i32, !dbg !9525
  %sub89 = sub nsw i32 %conv88, 512, !dbg !9526
  %mul90 = mul nsw i32 2, %sub89, !dbg !9527
  %sub91 = sub nsw i32 1023, %mul90, !dbg !9528
  %div92 = sdiv i32 %shl85, %sub91, !dbg !9529
  br label %cond.end94, !dbg !9530

cond.false93:                                     ; preds = %cond.false67
  br label %cond.end94, !dbg !9531

cond.end94:                                       ; preds = %cond.false93, %cond.true81
  %cond95 = phi i32 [ %div92, %cond.true81 ], [ 1023, %cond.false93 ], !dbg !9533
  br label %cond.end96, !dbg !9535

cond.end96:                                       ; preds = %cond.end94, %cond.true61
  %cond97 = phi i32 [ %mul66, %cond.true61 ], [ %cond95, %cond.end94 ], !dbg !9536
  br label %cond.end98, !dbg !9538

cond.end98:                                       ; preds = %cond.end96, %cond.end51
  %cond99 = phi i32 [ %cond52, %cond.end51 ], [ %cond97, %cond.end96 ], !dbg !9539
  %57 = load i32, i32* %j, align 4, !dbg !9541
  %idxprom100 = sext i32 %57 to i64, !dbg !9542
  %58 = load i16*, i16** %top, align 8, !dbg !9542
  %arrayidx101 = getelementptr inbounds i16, i16* %58, i64 %idxprom100, !dbg !9542
  %59 = load i16, i16* %arrayidx101, align 2, !dbg !9542
  %conv102 = zext i16 %59 to i32, !dbg !9542
  %sub103 = sub nsw i32 %cond99, %conv102, !dbg !9543
  %conv104 = sitofp i32 %sub103 to double, !dbg !9544
  %60 = load double, double* %opacity, align 8, !dbg !9545
  %mul105 = fmul double %conv104, %60, !dbg !9546
  %add = fadd double %conv11, %mul105, !dbg !9547
  %conv106 = fptoui double %add to i16, !dbg !9548
  %61 = load i32, i32* %j, align 4, !dbg !9549
  %idxprom107 = sext i32 %61 to i64, !dbg !9550
  %62 = load i16*, i16** %dst, align 8, !dbg !9550
  %arrayidx108 = getelementptr inbounds i16, i16* %62, i64 %idxprom107, !dbg !9550
  store i16 %conv106, i16* %arrayidx108, align 2, !dbg !9551
  br label %for.inc, !dbg !9552

for.inc:                                          ; preds = %cond.end98
  %63 = load i32, i32* %j, align 4, !dbg !9553
  %inc = add nsw i32 %63, 1, !dbg !9553
  store i32 %inc, i32* %j, align 4, !dbg !9553
  br label %for.cond5, !dbg !9555, !llvm.loop !9556

for.end:                                          ; preds = %for.cond5
  %64 = load i64, i64* %dst_linesize.addr, align 8, !dbg !9558
  %65 = load i16*, i16** %dst, align 8, !dbg !9560
  %add.ptr = getelementptr inbounds i16, i16* %65, i64 %64, !dbg !9560
  store i16* %add.ptr, i16** %dst, align 8, !dbg !9560
  %66 = load i64, i64* %top_linesize.addr, align 8, !dbg !9561
  %67 = load i16*, i16** %top, align 8, !dbg !9562
  %add.ptr109 = getelementptr inbounds i16, i16* %67, i64 %66, !dbg !9562
  store i16* %add.ptr109, i16** %top, align 8, !dbg !9562
  %68 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !9563
  %69 = load i16*, i16** %bottom, align 8, !dbg !9564
  %add.ptr110 = getelementptr inbounds i16, i16* %69, i64 %68, !dbg !9564
  store i16* %add.ptr110, i16** %bottom, align 8, !dbg !9564
  br label %for.inc111, !dbg !9565

for.inc111:                                       ; preds = %for.end
  %70 = load i32, i32* %i, align 4, !dbg !9566
  %inc112 = add nsw i32 %70, 1, !dbg !9566
  store i32 %inc112, i32* %i, align 4, !dbg !9566
  br label %for.cond, !dbg !9568, !llvm.loop !9569

for.end113:                                       ; preds = %for.cond
  ret void, !dbg !9571
}

; Function Attrs: nounwind uwtable
define internal void @blend_xor_10bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !9573 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !9574, metadata !905), !dbg !9575
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !9576, metadata !905), !dbg !9577
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !9578, metadata !905), !dbg !9579
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !9580, metadata !905), !dbg !9581
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !9582, metadata !905), !dbg !9583
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !9584, metadata !905), !dbg !9585
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !9586, metadata !905), !dbg !9587
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !9588, metadata !905), !dbg !9589
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !9590, metadata !905), !dbg !9591
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !9592, metadata !905), !dbg !9593
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !9594, metadata !905), !dbg !9595
  call void @llvm.dbg.declare(metadata i16** %top, metadata !9596, metadata !905), !dbg !9597
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !9598
  %1 = bitcast i8* %0 to i16*, !dbg !9599
  store i16* %1, i16** %top, align 8, !dbg !9597
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !9600, metadata !905), !dbg !9601
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !9602
  %3 = bitcast i8* %2 to i16*, !dbg !9603
  store i16* %3, i16** %bottom, align 8, !dbg !9601
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !9604, metadata !905), !dbg !9605
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !9606
  %5 = bitcast i8* %4 to i16*, !dbg !9607
  store i16* %5, i16** %dst, align 8, !dbg !9605
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !9608, metadata !905), !dbg !9609
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !9610
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !9611
  %7 = load double, double* %opacity1, align 8, !dbg !9611
  store double %7, double* %opacity, align 8, !dbg !9609
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9612, metadata !905), !dbg !9613
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9614, metadata !905), !dbg !9615
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !9616
  %div = sdiv i64 %8, 2, !dbg !9616
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !9616
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !9617
  %div2 = sdiv i64 %9, 2, !dbg !9617
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !9617
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !9618
  %div3 = sdiv i64 %10, 2, !dbg !9618
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !9618
  store i32 0, i32* %i, align 4, !dbg !9619
  br label %for.cond, !dbg !9621

for.cond:                                         ; preds = %for.inc27, %entry
  %11 = load i32, i32* %i, align 4, !dbg !9622
  %conv = sext i32 %11 to i64, !dbg !9622
  %12 = load i64, i64* %height.addr, align 8, !dbg !9625
  %cmp = icmp slt i64 %conv, %12, !dbg !9626
  br i1 %cmp, label %for.body, label %for.end29, !dbg !9627

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !9628
  br label %for.cond5, !dbg !9632

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !9633
  %conv6 = sext i32 %13 to i64, !dbg !9633
  %14 = load i64, i64* %width.addr, align 8, !dbg !9636
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !9637
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !9638

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !9639
  %idxprom = sext i32 %15 to i64, !dbg !9642
  %16 = load i16*, i16** %top, align 8, !dbg !9642
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !9642
  %17 = load i16, i16* %arrayidx, align 2, !dbg !9642
  %conv10 = zext i16 %17 to i32, !dbg !9642
  %conv11 = sitofp i32 %conv10 to double, !dbg !9642
  %18 = load i32, i32* %j, align 4, !dbg !9643
  %idxprom12 = sext i32 %18 to i64, !dbg !9644
  %19 = load i16*, i16** %top, align 8, !dbg !9644
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !9644
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !9644
  %conv14 = zext i16 %20 to i32, !dbg !9644
  %21 = load i32, i32* %j, align 4, !dbg !9645
  %idxprom15 = sext i32 %21 to i64, !dbg !9646
  %22 = load i16*, i16** %bottom, align 8, !dbg !9646
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !9646
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !9646
  %conv17 = zext i16 %23 to i32, !dbg !9646
  %xor = xor i32 %conv14, %conv17, !dbg !9647
  %24 = load i32, i32* %j, align 4, !dbg !9648
  %idxprom18 = sext i32 %24 to i64, !dbg !9649
  %25 = load i16*, i16** %top, align 8, !dbg !9649
  %arrayidx19 = getelementptr inbounds i16, i16* %25, i64 %idxprom18, !dbg !9649
  %26 = load i16, i16* %arrayidx19, align 2, !dbg !9649
  %conv20 = zext i16 %26 to i32, !dbg !9649
  %sub = sub nsw i32 %xor, %conv20, !dbg !9650
  %conv21 = sitofp i32 %sub to double, !dbg !9651
  %27 = load double, double* %opacity, align 8, !dbg !9652
  %mul = fmul double %conv21, %27, !dbg !9653
  %add = fadd double %conv11, %mul, !dbg !9654
  %conv22 = fptoui double %add to i16, !dbg !9642
  %28 = load i32, i32* %j, align 4, !dbg !9655
  %idxprom23 = sext i32 %28 to i64, !dbg !9656
  %29 = load i16*, i16** %dst, align 8, !dbg !9656
  %arrayidx24 = getelementptr inbounds i16, i16* %29, i64 %idxprom23, !dbg !9656
  store i16 %conv22, i16* %arrayidx24, align 2, !dbg !9657
  br label %for.inc, !dbg !9658

for.inc:                                          ; preds = %for.body9
  %30 = load i32, i32* %j, align 4, !dbg !9659
  %inc = add nsw i32 %30, 1, !dbg !9659
  store i32 %inc, i32* %j, align 4, !dbg !9659
  br label %for.cond5, !dbg !9661, !llvm.loop !9662

for.end:                                          ; preds = %for.cond5
  %31 = load i64, i64* %dst_linesize.addr, align 8, !dbg !9664
  %32 = load i16*, i16** %dst, align 8, !dbg !9666
  %add.ptr = getelementptr inbounds i16, i16* %32, i64 %31, !dbg !9666
  store i16* %add.ptr, i16** %dst, align 8, !dbg !9666
  %33 = load i64, i64* %top_linesize.addr, align 8, !dbg !9667
  %34 = load i16*, i16** %top, align 8, !dbg !9668
  %add.ptr25 = getelementptr inbounds i16, i16* %34, i64 %33, !dbg !9668
  store i16* %add.ptr25, i16** %top, align 8, !dbg !9668
  %35 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !9669
  %36 = load i16*, i16** %bottom, align 8, !dbg !9670
  %add.ptr26 = getelementptr inbounds i16, i16* %36, i64 %35, !dbg !9670
  store i16* %add.ptr26, i16** %bottom, align 8, !dbg !9670
  br label %for.inc27, !dbg !9671

for.inc27:                                        ; preds = %for.end
  %37 = load i32, i32* %i, align 4, !dbg !9672
  %inc28 = add nsw i32 %37, 1, !dbg !9672
  store i32 %inc28, i32* %i, align 4, !dbg !9672
  br label %for.cond, !dbg !9674, !llvm.loop !9675

for.end29:                                        ; preds = %for.cond
  ret void, !dbg !9677
}

; Function Attrs: nounwind uwtable
define internal void @blend_addition_12bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !9679 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !9680, metadata !905), !dbg !9681
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !9682, metadata !905), !dbg !9683
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !9684, metadata !905), !dbg !9685
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !9686, metadata !905), !dbg !9687
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !9688, metadata !905), !dbg !9689
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !9690, metadata !905), !dbg !9691
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !9692, metadata !905), !dbg !9693
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !9694, metadata !905), !dbg !9695
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !9696, metadata !905), !dbg !9697
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !9698, metadata !905), !dbg !9699
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !9700, metadata !905), !dbg !9701
  call void @llvm.dbg.declare(metadata i16** %top, metadata !9702, metadata !905), !dbg !9703
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !9704
  %1 = bitcast i8* %0 to i16*, !dbg !9705
  store i16* %1, i16** %top, align 8, !dbg !9703
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !9706, metadata !905), !dbg !9707
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !9708
  %3 = bitcast i8* %2 to i16*, !dbg !9709
  store i16* %3, i16** %bottom, align 8, !dbg !9707
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !9710, metadata !905), !dbg !9711
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !9712
  %5 = bitcast i8* %4 to i16*, !dbg !9713
  store i16* %5, i16** %dst, align 8, !dbg !9711
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !9714, metadata !905), !dbg !9715
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !9716
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !9717
  %7 = load double, double* %opacity1, align 8, !dbg !9717
  store double %7, double* %opacity, align 8, !dbg !9715
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9718, metadata !905), !dbg !9719
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9720, metadata !905), !dbg !9721
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !9722
  %div = sdiv i64 %8, 2, !dbg !9722
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !9722
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !9723
  %div2 = sdiv i64 %9, 2, !dbg !9723
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !9723
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !9724
  %div3 = sdiv i64 %10, 2, !dbg !9724
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !9724
  store i32 0, i32* %i, align 4, !dbg !9725
  br label %for.cond, !dbg !9727

for.cond:                                         ; preds = %for.inc37, %entry
  %11 = load i32, i32* %i, align 4, !dbg !9728
  %conv = sext i32 %11 to i64, !dbg !9728
  %12 = load i64, i64* %height.addr, align 8, !dbg !9731
  %cmp = icmp slt i64 %conv, %12, !dbg !9732
  br i1 %cmp, label %for.body, label %for.end39, !dbg !9733

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !9734
  br label %for.cond5, !dbg !9738

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !9739
  %conv6 = sext i32 %13 to i64, !dbg !9739
  %14 = load i64, i64* %width.addr, align 8, !dbg !9742
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !9743
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !9744

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !9745
  %idxprom = sext i32 %15 to i64, !dbg !9748
  %16 = load i16*, i16** %top, align 8, !dbg !9748
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !9748
  %17 = load i16, i16* %arrayidx, align 2, !dbg !9748
  %conv10 = zext i16 %17 to i32, !dbg !9748
  %conv11 = sitofp i32 %conv10 to double, !dbg !9748
  %18 = load i32, i32* %j, align 4, !dbg !9749
  %idxprom12 = sext i32 %18 to i64, !dbg !9750
  %19 = load i16*, i16** %top, align 8, !dbg !9750
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !9750
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !9750
  %conv14 = zext i16 %20 to i32, !dbg !9750
  %21 = load i32, i32* %j, align 4, !dbg !9751
  %idxprom15 = sext i32 %21 to i64, !dbg !9752
  %22 = load i16*, i16** %bottom, align 8, !dbg !9752
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !9752
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !9752
  %conv17 = zext i16 %23 to i32, !dbg !9752
  %add = add nsw i32 %conv14, %conv17, !dbg !9753
  %cmp18 = icmp sgt i32 4095, %add, !dbg !9754
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !9755

cond.true:                                        ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !9756
  %idxprom20 = sext i32 %24 to i64, !dbg !9758
  %25 = load i16*, i16** %top, align 8, !dbg !9758
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !9758
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !9758
  %conv22 = zext i16 %26 to i32, !dbg !9758
  %27 = load i32, i32* %j, align 4, !dbg !9759
  %idxprom23 = sext i32 %27 to i64, !dbg !9760
  %28 = load i16*, i16** %bottom, align 8, !dbg !9760
  %arrayidx24 = getelementptr inbounds i16, i16* %28, i64 %idxprom23, !dbg !9760
  %29 = load i16, i16* %arrayidx24, align 2, !dbg !9760
  %conv25 = zext i16 %29 to i32, !dbg !9760
  %add26 = add nsw i32 %conv22, %conv25, !dbg !9761
  br label %cond.end, !dbg !9762

cond.false:                                       ; preds = %for.body9
  br label %cond.end, !dbg !9763

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add26, %cond.true ], [ 4095, %cond.false ], !dbg !9765
  %30 = load i32, i32* %j, align 4, !dbg !9767
  %idxprom27 = sext i32 %30 to i64, !dbg !9768
  %31 = load i16*, i16** %top, align 8, !dbg !9768
  %arrayidx28 = getelementptr inbounds i16, i16* %31, i64 %idxprom27, !dbg !9768
  %32 = load i16, i16* %arrayidx28, align 2, !dbg !9768
  %conv29 = zext i16 %32 to i32, !dbg !9768
  %sub = sub nsw i32 %cond, %conv29, !dbg !9769
  %conv30 = sitofp i32 %sub to double, !dbg !9770
  %33 = load double, double* %opacity, align 8, !dbg !9771
  %mul = fmul double %conv30, %33, !dbg !9772
  %add31 = fadd double %conv11, %mul, !dbg !9773
  %conv32 = fptoui double %add31 to i16, !dbg !9774
  %34 = load i32, i32* %j, align 4, !dbg !9775
  %idxprom33 = sext i32 %34 to i64, !dbg !9776
  %35 = load i16*, i16** %dst, align 8, !dbg !9776
  %arrayidx34 = getelementptr inbounds i16, i16* %35, i64 %idxprom33, !dbg !9776
  store i16 %conv32, i16* %arrayidx34, align 2, !dbg !9777
  br label %for.inc, !dbg !9778

for.inc:                                          ; preds = %cond.end
  %36 = load i32, i32* %j, align 4, !dbg !9779
  %inc = add nsw i32 %36, 1, !dbg !9779
  store i32 %inc, i32* %j, align 4, !dbg !9779
  br label %for.cond5, !dbg !9781, !llvm.loop !9782

for.end:                                          ; preds = %for.cond5
  %37 = load i64, i64* %dst_linesize.addr, align 8, !dbg !9784
  %38 = load i16*, i16** %dst, align 8, !dbg !9786
  %add.ptr = getelementptr inbounds i16, i16* %38, i64 %37, !dbg !9786
  store i16* %add.ptr, i16** %dst, align 8, !dbg !9786
  %39 = load i64, i64* %top_linesize.addr, align 8, !dbg !9787
  %40 = load i16*, i16** %top, align 8, !dbg !9788
  %add.ptr35 = getelementptr inbounds i16, i16* %40, i64 %39, !dbg !9788
  store i16* %add.ptr35, i16** %top, align 8, !dbg !9788
  %41 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !9789
  %42 = load i16*, i16** %bottom, align 8, !dbg !9790
  %add.ptr36 = getelementptr inbounds i16, i16* %42, i64 %41, !dbg !9790
  store i16* %add.ptr36, i16** %bottom, align 8, !dbg !9790
  br label %for.inc37, !dbg !9791

for.inc37:                                        ; preds = %for.end
  %43 = load i32, i32* %i, align 4, !dbg !9792
  %inc38 = add nsw i32 %43, 1, !dbg !9792
  store i32 %inc38, i32* %i, align 4, !dbg !9792
  br label %for.cond, !dbg !9794, !llvm.loop !9795

for.end39:                                        ; preds = %for.cond
  ret void, !dbg !9797
}

; Function Attrs: nounwind uwtable
define internal void @blend_grainmerge_12bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !9799 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !5462, metadata !905), !dbg !9800
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !5475, metadata !905), !dbg !9809
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !9810, metadata !905), !dbg !9811
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !9812, metadata !905), !dbg !9813
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !9814, metadata !905), !dbg !9815
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !9816, metadata !905), !dbg !9817
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !9818, metadata !905), !dbg !9819
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !9820, metadata !905), !dbg !9821
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !9822, metadata !905), !dbg !9823
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !9824, metadata !905), !dbg !9825
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !9826, metadata !905), !dbg !9827
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !9828, metadata !905), !dbg !9829
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !9830, metadata !905), !dbg !9831
  call void @llvm.dbg.declare(metadata i16** %top, metadata !9832, metadata !905), !dbg !9833
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !9834
  %1 = bitcast i8* %0 to i16*, !dbg !9835
  store i16* %1, i16** %top, align 8, !dbg !9833
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !9836, metadata !905), !dbg !9837
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !9838
  %3 = bitcast i8* %2 to i16*, !dbg !9839
  store i16* %3, i16** %bottom, align 8, !dbg !9837
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !9840, metadata !905), !dbg !9841
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !9842
  %5 = bitcast i8* %4 to i16*, !dbg !9843
  store i16* %5, i16** %dst, align 8, !dbg !9841
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !9844, metadata !905), !dbg !9845
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !9846
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !9847
  %7 = load double, double* %opacity1, align 8, !dbg !9847
  store double %7, double* %opacity, align 8, !dbg !9845
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9848, metadata !905), !dbg !9849
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9850, metadata !905), !dbg !9851
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !9852
  %div = sdiv i64 %8, 2, !dbg !9852
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !9852
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !9853
  %div2 = sdiv i64 %9, 2, !dbg !9853
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !9853
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !9854
  %div3 = sdiv i64 %10, 2, !dbg !9854
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !9854
  store i32 0, i32* %i, align 4, !dbg !9855
  br label %for.cond, !dbg !9856

for.cond:                                         ; preds = %for.inc29, %entry
  %11 = load i32, i32* %i, align 4, !dbg !9857
  %conv = sext i32 %11 to i64, !dbg !9857
  %12 = load i64, i64* %height.addr, align 8, !dbg !9859
  %cmp = icmp slt i64 %conv, %12, !dbg !9860
  br i1 %cmp, label %for.body, label %for.end31, !dbg !9861

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !9862
  br label %for.cond5, !dbg !9864

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !9865
  %conv6 = sext i32 %13 to i64, !dbg !9865
  %14 = load i64, i64* %width.addr, align 8, !dbg !9867
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !9868
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !9869

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !9870
  %idxprom = sext i32 %15 to i64, !dbg !9871
  %16 = load i16*, i16** %top, align 8, !dbg !9871
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !9871
  %17 = load i16, i16* %arrayidx, align 2, !dbg !9871
  %conv10 = zext i16 %17 to i32, !dbg !9871
  %conv11 = sitofp i32 %conv10 to double, !dbg !9871
  %18 = load i32, i32* %j, align 4, !dbg !9872
  %idxprom12 = sext i32 %18 to i64, !dbg !9873
  %19 = load i16*, i16** %top, align 8, !dbg !9873
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !9873
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !9873
  %conv14 = zext i16 %20 to i32, !dbg !9873
  %21 = load i32, i32* %j, align 4, !dbg !9874
  %idxprom15 = sext i32 %21 to i64, !dbg !9875
  %22 = load i16*, i16** %bottom, align 8, !dbg !9875
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !9875
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !9875
  %conv17 = zext i16 %23 to i32, !dbg !9875
  %add = add nsw i32 %conv14, %conv17, !dbg !9876
  %sub = sub nsw i32 %add, 2048, !dbg !9877
  store i32 %sub, i32* %a.addr.i, align 4, !dbg !9878
  store i32 12, i32* %p.addr.i, align 4, !dbg !9878
  %24 = load i32, i32* %a.addr.i, align 4, !dbg !9879
  %25 = load i32, i32* %p.addr.i, align 4, !dbg !9880
  %shl.i = shl i32 1, %25, !dbg !9881
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !9882
  %neg.i = xor i32 %sub.i, -1, !dbg !9883
  %and.i = and i32 %24, %neg.i, !dbg !9884
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !9884
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !9885

if.then.i:                                        ; preds = %for.body9
  %26 = load i32, i32* %a.addr.i, align 4, !dbg !9886
  %neg1.i = xor i32 %26, -1, !dbg !9887
  %shr.i = ashr i32 %neg1.i, 31, !dbg !9888
  %27 = load i32, i32* %p.addr.i, align 4, !dbg !9889
  %shl2.i = shl i32 1, %27, !dbg !9890
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !9891
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !9892
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !9893
  br label %av_clip_uintp2_c.exit, !dbg !9893

if.else.i:                                        ; preds = %for.body9
  %28 = load i32, i32* %a.addr.i, align 4, !dbg !9894
  store i32 %28, i32* %retval.i, align 4, !dbg !9895
  br label %av_clip_uintp2_c.exit, !dbg !9895

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %29 = load i32, i32* %retval.i, align 4, !dbg !9896
  %30 = load i32, i32* %j, align 4, !dbg !9897
  %idxprom18 = sext i32 %30 to i64, !dbg !9898
  %31 = load i16*, i16** %top, align 8, !dbg !9898
  %arrayidx19 = getelementptr inbounds i16, i16* %31, i64 %idxprom18, !dbg !9898
  %32 = load i16, i16* %arrayidx19, align 2, !dbg !9898
  %conv20 = zext i16 %32 to i32, !dbg !9898
  %sub21 = sub nsw i32 %29, %conv20, !dbg !9899
  %conv22 = sitofp i32 %sub21 to double, !dbg !9900
  %33 = load double, double* %opacity, align 8, !dbg !9901
  %mul = fmul double %conv22, %33, !dbg !9902
  %add23 = fadd double %conv11, %mul, !dbg !9903
  %conv24 = fptoui double %add23 to i16, !dbg !9871
  %34 = load i32, i32* %j, align 4, !dbg !9904
  %idxprom25 = sext i32 %34 to i64, !dbg !9905
  %35 = load i16*, i16** %dst, align 8, !dbg !9905
  %arrayidx26 = getelementptr inbounds i16, i16* %35, i64 %idxprom25, !dbg !9905
  store i16 %conv24, i16* %arrayidx26, align 2, !dbg !9906
  br label %for.inc, !dbg !9907

for.inc:                                          ; preds = %av_clip_uintp2_c.exit
  %36 = load i32, i32* %j, align 4, !dbg !9908
  %inc = add nsw i32 %36, 1, !dbg !9908
  store i32 %inc, i32* %j, align 4, !dbg !9908
  br label %for.cond5, !dbg !9910, !llvm.loop !9911

for.end:                                          ; preds = %for.cond5
  %37 = load i64, i64* %dst_linesize.addr, align 8, !dbg !9913
  %38 = load i16*, i16** %dst, align 8, !dbg !9915
  %add.ptr = getelementptr inbounds i16, i16* %38, i64 %37, !dbg !9915
  store i16* %add.ptr, i16** %dst, align 8, !dbg !9915
  %39 = load i64, i64* %top_linesize.addr, align 8, !dbg !9916
  %40 = load i16*, i16** %top, align 8, !dbg !9917
  %add.ptr27 = getelementptr inbounds i16, i16* %40, i64 %39, !dbg !9917
  store i16* %add.ptr27, i16** %top, align 8, !dbg !9917
  %41 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !9918
  %42 = load i16*, i16** %bottom, align 8, !dbg !9919
  %add.ptr28 = getelementptr inbounds i16, i16* %42, i64 %41, !dbg !9919
  store i16* %add.ptr28, i16** %bottom, align 8, !dbg !9919
  br label %for.inc29, !dbg !9920

for.inc29:                                        ; preds = %for.end
  %43 = load i32, i32* %i, align 4, !dbg !9921
  %inc30 = add nsw i32 %43, 1, !dbg !9921
  store i32 %inc30, i32* %i, align 4, !dbg !9921
  br label %for.cond, !dbg !9923, !llvm.loop !9924

for.end31:                                        ; preds = %for.cond
  ret void, !dbg !9926
}

; Function Attrs: nounwind uwtable
define internal void @blend_and_12bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !9928 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !9929, metadata !905), !dbg !9930
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !9931, metadata !905), !dbg !9932
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !9933, metadata !905), !dbg !9934
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !9935, metadata !905), !dbg !9936
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !9937, metadata !905), !dbg !9938
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !9939, metadata !905), !dbg !9940
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !9941, metadata !905), !dbg !9942
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !9943, metadata !905), !dbg !9944
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !9945, metadata !905), !dbg !9946
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !9947, metadata !905), !dbg !9948
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !9949, metadata !905), !dbg !9950
  call void @llvm.dbg.declare(metadata i16** %top, metadata !9951, metadata !905), !dbg !9952
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !9953
  %1 = bitcast i8* %0 to i16*, !dbg !9954
  store i16* %1, i16** %top, align 8, !dbg !9952
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !9955, metadata !905), !dbg !9956
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !9957
  %3 = bitcast i8* %2 to i16*, !dbg !9958
  store i16* %3, i16** %bottom, align 8, !dbg !9956
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !9959, metadata !905), !dbg !9960
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !9961
  %5 = bitcast i8* %4 to i16*, !dbg !9962
  store i16* %5, i16** %dst, align 8, !dbg !9960
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !9963, metadata !905), !dbg !9964
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !9965
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !9966
  %7 = load double, double* %opacity1, align 8, !dbg !9966
  store double %7, double* %opacity, align 8, !dbg !9964
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9967, metadata !905), !dbg !9968
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9969, metadata !905), !dbg !9970
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !9971
  %div = sdiv i64 %8, 2, !dbg !9971
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !9971
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !9972
  %div2 = sdiv i64 %9, 2, !dbg !9972
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !9972
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !9973
  %div3 = sdiv i64 %10, 2, !dbg !9973
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !9973
  store i32 0, i32* %i, align 4, !dbg !9974
  br label %for.cond, !dbg !9976

for.cond:                                         ; preds = %for.inc27, %entry
  %11 = load i32, i32* %i, align 4, !dbg !9977
  %conv = sext i32 %11 to i64, !dbg !9977
  %12 = load i64, i64* %height.addr, align 8, !dbg !9980
  %cmp = icmp slt i64 %conv, %12, !dbg !9981
  br i1 %cmp, label %for.body, label %for.end29, !dbg !9982

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !9983
  br label %for.cond5, !dbg !9987

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !9988
  %conv6 = sext i32 %13 to i64, !dbg !9988
  %14 = load i64, i64* %width.addr, align 8, !dbg !9991
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !9992
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !9993

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !9994
  %idxprom = sext i32 %15 to i64, !dbg !9997
  %16 = load i16*, i16** %top, align 8, !dbg !9997
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !9997
  %17 = load i16, i16* %arrayidx, align 2, !dbg !9997
  %conv10 = zext i16 %17 to i32, !dbg !9997
  %conv11 = sitofp i32 %conv10 to double, !dbg !9997
  %18 = load i32, i32* %j, align 4, !dbg !9998
  %idxprom12 = sext i32 %18 to i64, !dbg !9999
  %19 = load i16*, i16** %top, align 8, !dbg !9999
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !9999
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !9999
  %conv14 = zext i16 %20 to i32, !dbg !9999
  %21 = load i32, i32* %j, align 4, !dbg !10000
  %idxprom15 = sext i32 %21 to i64, !dbg !10001
  %22 = load i16*, i16** %bottom, align 8, !dbg !10001
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !10001
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !10001
  %conv17 = zext i16 %23 to i32, !dbg !10001
  %and = and i32 %conv14, %conv17, !dbg !10002
  %24 = load i32, i32* %j, align 4, !dbg !10003
  %idxprom18 = sext i32 %24 to i64, !dbg !10004
  %25 = load i16*, i16** %top, align 8, !dbg !10004
  %arrayidx19 = getelementptr inbounds i16, i16* %25, i64 %idxprom18, !dbg !10004
  %26 = load i16, i16* %arrayidx19, align 2, !dbg !10004
  %conv20 = zext i16 %26 to i32, !dbg !10004
  %sub = sub nsw i32 %and, %conv20, !dbg !10005
  %conv21 = sitofp i32 %sub to double, !dbg !10006
  %27 = load double, double* %opacity, align 8, !dbg !10007
  %mul = fmul double %conv21, %27, !dbg !10008
  %add = fadd double %conv11, %mul, !dbg !10009
  %conv22 = fptoui double %add to i16, !dbg !9997
  %28 = load i32, i32* %j, align 4, !dbg !10010
  %idxprom23 = sext i32 %28 to i64, !dbg !10011
  %29 = load i16*, i16** %dst, align 8, !dbg !10011
  %arrayidx24 = getelementptr inbounds i16, i16* %29, i64 %idxprom23, !dbg !10011
  store i16 %conv22, i16* %arrayidx24, align 2, !dbg !10012
  br label %for.inc, !dbg !10013

for.inc:                                          ; preds = %for.body9
  %30 = load i32, i32* %j, align 4, !dbg !10014
  %inc = add nsw i32 %30, 1, !dbg !10014
  store i32 %inc, i32* %j, align 4, !dbg !10014
  br label %for.cond5, !dbg !10016, !llvm.loop !10017

for.end:                                          ; preds = %for.cond5
  %31 = load i64, i64* %dst_linesize.addr, align 8, !dbg !10019
  %32 = load i16*, i16** %dst, align 8, !dbg !10021
  %add.ptr = getelementptr inbounds i16, i16* %32, i64 %31, !dbg !10021
  store i16* %add.ptr, i16** %dst, align 8, !dbg !10021
  %33 = load i64, i64* %top_linesize.addr, align 8, !dbg !10022
  %34 = load i16*, i16** %top, align 8, !dbg !10023
  %add.ptr25 = getelementptr inbounds i16, i16* %34, i64 %33, !dbg !10023
  store i16* %add.ptr25, i16** %top, align 8, !dbg !10023
  %35 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !10024
  %36 = load i16*, i16** %bottom, align 8, !dbg !10025
  %add.ptr26 = getelementptr inbounds i16, i16* %36, i64 %35, !dbg !10025
  store i16* %add.ptr26, i16** %bottom, align 8, !dbg !10025
  br label %for.inc27, !dbg !10026

for.inc27:                                        ; preds = %for.end
  %37 = load i32, i32* %i, align 4, !dbg !10027
  %inc28 = add nsw i32 %37, 1, !dbg !10027
  store i32 %inc28, i32* %i, align 4, !dbg !10027
  br label %for.cond, !dbg !10029, !llvm.loop !10030

for.end29:                                        ; preds = %for.cond
  ret void, !dbg !10032
}

; Function Attrs: nounwind uwtable
define internal void @blend_average_12bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !10034 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !10035, metadata !905), !dbg !10036
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !10037, metadata !905), !dbg !10038
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !10039, metadata !905), !dbg !10040
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !10041, metadata !905), !dbg !10042
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !10043, metadata !905), !dbg !10044
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !10045, metadata !905), !dbg !10046
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !10047, metadata !905), !dbg !10048
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !10049, metadata !905), !dbg !10050
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !10051, metadata !905), !dbg !10052
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !10053, metadata !905), !dbg !10054
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !10055, metadata !905), !dbg !10056
  call void @llvm.dbg.declare(metadata i16** %top, metadata !10057, metadata !905), !dbg !10058
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !10059
  %1 = bitcast i8* %0 to i16*, !dbg !10060
  store i16* %1, i16** %top, align 8, !dbg !10058
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !10061, metadata !905), !dbg !10062
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !10063
  %3 = bitcast i8* %2 to i16*, !dbg !10064
  store i16* %3, i16** %bottom, align 8, !dbg !10062
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !10065, metadata !905), !dbg !10066
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !10067
  %5 = bitcast i8* %4 to i16*, !dbg !10068
  store i16* %5, i16** %dst, align 8, !dbg !10066
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !10069, metadata !905), !dbg !10070
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !10071
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !10072
  %7 = load double, double* %opacity1, align 8, !dbg !10072
  store double %7, double* %opacity, align 8, !dbg !10070
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10073, metadata !905), !dbg !10074
  call void @llvm.dbg.declare(metadata i32* %j, metadata !10075, metadata !905), !dbg !10076
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !10077
  %div = sdiv i64 %8, 2, !dbg !10077
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !10077
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !10078
  %div2 = sdiv i64 %9, 2, !dbg !10078
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !10078
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !10079
  %div3 = sdiv i64 %10, 2, !dbg !10079
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !10079
  store i32 0, i32* %i, align 4, !dbg !10080
  br label %for.cond, !dbg !10082

for.cond:                                         ; preds = %for.inc29, %entry
  %11 = load i32, i32* %i, align 4, !dbg !10083
  %conv = sext i32 %11 to i64, !dbg !10083
  %12 = load i64, i64* %height.addr, align 8, !dbg !10086
  %cmp = icmp slt i64 %conv, %12, !dbg !10087
  br i1 %cmp, label %for.body, label %for.end31, !dbg !10088

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !10089
  br label %for.cond5, !dbg !10093

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !10094
  %conv6 = sext i32 %13 to i64, !dbg !10094
  %14 = load i64, i64* %width.addr, align 8, !dbg !10097
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !10098
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !10099

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !10100
  %idxprom = sext i32 %15 to i64, !dbg !10103
  %16 = load i16*, i16** %top, align 8, !dbg !10103
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !10103
  %17 = load i16, i16* %arrayidx, align 2, !dbg !10103
  %conv10 = zext i16 %17 to i32, !dbg !10103
  %conv11 = sitofp i32 %conv10 to double, !dbg !10103
  %18 = load i32, i32* %j, align 4, !dbg !10104
  %idxprom12 = sext i32 %18 to i64, !dbg !10105
  %19 = load i16*, i16** %top, align 8, !dbg !10105
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !10105
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !10105
  %conv14 = zext i16 %20 to i32, !dbg !10105
  %21 = load i32, i32* %j, align 4, !dbg !10106
  %idxprom15 = sext i32 %21 to i64, !dbg !10107
  %22 = load i16*, i16** %bottom, align 8, !dbg !10107
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !10107
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !10107
  %conv17 = zext i16 %23 to i32, !dbg !10107
  %add = add nsw i32 %conv14, %conv17, !dbg !10108
  %div18 = sdiv i32 %add, 2, !dbg !10109
  %24 = load i32, i32* %j, align 4, !dbg !10110
  %idxprom19 = sext i32 %24 to i64, !dbg !10111
  %25 = load i16*, i16** %top, align 8, !dbg !10111
  %arrayidx20 = getelementptr inbounds i16, i16* %25, i64 %idxprom19, !dbg !10111
  %26 = load i16, i16* %arrayidx20, align 2, !dbg !10111
  %conv21 = zext i16 %26 to i32, !dbg !10111
  %sub = sub nsw i32 %div18, %conv21, !dbg !10112
  %conv22 = sitofp i32 %sub to double, !dbg !10113
  %27 = load double, double* %opacity, align 8, !dbg !10114
  %mul = fmul double %conv22, %27, !dbg !10115
  %add23 = fadd double %conv11, %mul, !dbg !10116
  %conv24 = fptoui double %add23 to i16, !dbg !10103
  %28 = load i32, i32* %j, align 4, !dbg !10117
  %idxprom25 = sext i32 %28 to i64, !dbg !10118
  %29 = load i16*, i16** %dst, align 8, !dbg !10118
  %arrayidx26 = getelementptr inbounds i16, i16* %29, i64 %idxprom25, !dbg !10118
  store i16 %conv24, i16* %arrayidx26, align 2, !dbg !10119
  br label %for.inc, !dbg !10120

for.inc:                                          ; preds = %for.body9
  %30 = load i32, i32* %j, align 4, !dbg !10121
  %inc = add nsw i32 %30, 1, !dbg !10121
  store i32 %inc, i32* %j, align 4, !dbg !10121
  br label %for.cond5, !dbg !10123, !llvm.loop !10124

for.end:                                          ; preds = %for.cond5
  %31 = load i64, i64* %dst_linesize.addr, align 8, !dbg !10126
  %32 = load i16*, i16** %dst, align 8, !dbg !10128
  %add.ptr = getelementptr inbounds i16, i16* %32, i64 %31, !dbg !10128
  store i16* %add.ptr, i16** %dst, align 8, !dbg !10128
  %33 = load i64, i64* %top_linesize.addr, align 8, !dbg !10129
  %34 = load i16*, i16** %top, align 8, !dbg !10130
  %add.ptr27 = getelementptr inbounds i16, i16* %34, i64 %33, !dbg !10130
  store i16* %add.ptr27, i16** %top, align 8, !dbg !10130
  %35 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !10131
  %36 = load i16*, i16** %bottom, align 8, !dbg !10132
  %add.ptr28 = getelementptr inbounds i16, i16* %36, i64 %35, !dbg !10132
  store i16* %add.ptr28, i16** %bottom, align 8, !dbg !10132
  br label %for.inc29, !dbg !10133

for.inc29:                                        ; preds = %for.end
  %37 = load i32, i32* %i, align 4, !dbg !10134
  %inc30 = add nsw i32 %37, 1, !dbg !10134
  store i32 %inc30, i32* %i, align 4, !dbg !10134
  br label %for.cond, !dbg !10136, !llvm.loop !10137

for.end31:                                        ; preds = %for.cond
  ret void, !dbg !10139
}

; Function Attrs: nounwind uwtable
define internal void @blend_burn_12bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !10141 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !10142, metadata !905), !dbg !10143
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !10144, metadata !905), !dbg !10145
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !10146, metadata !905), !dbg !10147
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !10148, metadata !905), !dbg !10149
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !10150, metadata !905), !dbg !10151
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !10152, metadata !905), !dbg !10153
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !10154, metadata !905), !dbg !10155
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !10156, metadata !905), !dbg !10157
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !10158, metadata !905), !dbg !10159
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !10160, metadata !905), !dbg !10161
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !10162, metadata !905), !dbg !10163
  call void @llvm.dbg.declare(metadata i16** %top, metadata !10164, metadata !905), !dbg !10165
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !10166
  %1 = bitcast i8* %0 to i16*, !dbg !10167
  store i16* %1, i16** %top, align 8, !dbg !10165
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !10168, metadata !905), !dbg !10169
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !10170
  %3 = bitcast i8* %2 to i16*, !dbg !10171
  store i16* %3, i16** %bottom, align 8, !dbg !10169
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !10172, metadata !905), !dbg !10173
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !10174
  %5 = bitcast i8* %4 to i16*, !dbg !10175
  store i16* %5, i16** %dst, align 8, !dbg !10173
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !10176, metadata !905), !dbg !10177
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !10178
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !10179
  %7 = load double, double* %opacity1, align 8, !dbg !10179
  store double %7, double* %opacity, align 8, !dbg !10177
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10180, metadata !905), !dbg !10181
  call void @llvm.dbg.declare(metadata i32* %j, metadata !10182, metadata !905), !dbg !10183
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !10184
  %div = sdiv i64 %8, 2, !dbg !10184
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !10184
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !10185
  %div2 = sdiv i64 %9, 2, !dbg !10185
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !10185
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !10186
  %div3 = sdiv i64 %10, 2, !dbg !10186
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !10186
  store i32 0, i32* %i, align 4, !dbg !10187
  br label %for.cond, !dbg !10189

for.cond:                                         ; preds = %for.inc54, %entry
  %11 = load i32, i32* %i, align 4, !dbg !10190
  %conv = sext i32 %11 to i64, !dbg !10190
  %12 = load i64, i64* %height.addr, align 8, !dbg !10193
  %cmp = icmp slt i64 %conv, %12, !dbg !10194
  br i1 %cmp, label %for.body, label %for.end56, !dbg !10195

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !10196
  br label %for.cond5, !dbg !10200

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !10201
  %conv6 = sext i32 %13 to i64, !dbg !10201
  %14 = load i64, i64* %width.addr, align 8, !dbg !10204
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !10205
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !10206

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !10207
  %idxprom = sext i32 %15 to i64, !dbg !10210
  %16 = load i16*, i16** %top, align 8, !dbg !10210
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !10210
  %17 = load i16, i16* %arrayidx, align 2, !dbg !10210
  %conv10 = zext i16 %17 to i32, !dbg !10210
  %conv11 = sitofp i32 %conv10 to double, !dbg !10210
  %18 = load i32, i32* %j, align 4, !dbg !10211
  %idxprom12 = sext i32 %18 to i64, !dbg !10212
  %19 = load i16*, i16** %top, align 8, !dbg !10212
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !10212
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !10212
  %conv14 = zext i16 %20 to i32, !dbg !10213
  %cmp15 = icmp eq i32 %conv14, 0, !dbg !10214
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !10215

cond.true:                                        ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !10216
  %idxprom17 = sext i32 %21 to i64, !dbg !10218
  %22 = load i16*, i16** %top, align 8, !dbg !10218
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !10218
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !10218
  %conv19 = zext i16 %23 to i32, !dbg !10219
  br label %cond.end42, !dbg !10220

cond.false:                                       ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !10221
  %idxprom20 = sext i32 %24 to i64, !dbg !10223
  %25 = load i16*, i16** %bottom, align 8, !dbg !10223
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !10223
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !10223
  %conv22 = zext i16 %26 to i32, !dbg !10224
  %sub = sub nsw i32 4095, %conv22, !dbg !10225
  %shl = shl i32 %sub, 12, !dbg !10226
  %27 = load i32, i32* %j, align 4, !dbg !10227
  %idxprom23 = sext i32 %27 to i64, !dbg !10228
  %28 = load i16*, i16** %top, align 8, !dbg !10228
  %arrayidx24 = getelementptr inbounds i16, i16* %28, i64 %idxprom23, !dbg !10228
  %29 = load i16, i16* %arrayidx24, align 2, !dbg !10228
  %conv25 = zext i16 %29 to i32, !dbg !10229
  %div26 = sdiv i32 %shl, %conv25, !dbg !10230
  %sub27 = sub nsw i32 4095, %div26, !dbg !10231
  %cmp28 = icmp sgt i32 0, %sub27, !dbg !10232
  br i1 %cmp28, label %cond.true30, label %cond.false31, !dbg !10233

cond.true30:                                      ; preds = %cond.false
  br label %cond.end, !dbg !10234

cond.false31:                                     ; preds = %cond.false
  %30 = load i32, i32* %j, align 4, !dbg !10236
  %idxprom32 = sext i32 %30 to i64, !dbg !10238
  %31 = load i16*, i16** %bottom, align 8, !dbg !10238
  %arrayidx33 = getelementptr inbounds i16, i16* %31, i64 %idxprom32, !dbg !10238
  %32 = load i16, i16* %arrayidx33, align 2, !dbg !10238
  %conv34 = zext i16 %32 to i32, !dbg !10239
  %sub35 = sub nsw i32 4095, %conv34, !dbg !10240
  %shl36 = shl i32 %sub35, 12, !dbg !10241
  %33 = load i32, i32* %j, align 4, !dbg !10242
  %idxprom37 = sext i32 %33 to i64, !dbg !10243
  %34 = load i16*, i16** %top, align 8, !dbg !10243
  %arrayidx38 = getelementptr inbounds i16, i16* %34, i64 %idxprom37, !dbg !10243
  %35 = load i16, i16* %arrayidx38, align 2, !dbg !10243
  %conv39 = zext i16 %35 to i32, !dbg !10244
  %div40 = sdiv i32 %shl36, %conv39, !dbg !10245
  %sub41 = sub nsw i32 4095, %div40, !dbg !10246
  br label %cond.end, !dbg !10247

cond.end:                                         ; preds = %cond.false31, %cond.true30
  %cond = phi i32 [ 0, %cond.true30 ], [ %sub41, %cond.false31 ], !dbg !10248
  br label %cond.end42, !dbg !10250

cond.end42:                                       ; preds = %cond.end, %cond.true
  %cond43 = phi i32 [ %conv19, %cond.true ], [ %cond, %cond.end ], !dbg !10251
  %36 = load i32, i32* %j, align 4, !dbg !10253
  %idxprom44 = sext i32 %36 to i64, !dbg !10254
  %37 = load i16*, i16** %top, align 8, !dbg !10254
  %arrayidx45 = getelementptr inbounds i16, i16* %37, i64 %idxprom44, !dbg !10254
  %38 = load i16, i16* %arrayidx45, align 2, !dbg !10254
  %conv46 = zext i16 %38 to i32, !dbg !10254
  %sub47 = sub nsw i32 %cond43, %conv46, !dbg !10255
  %conv48 = sitofp i32 %sub47 to double, !dbg !10256
  %39 = load double, double* %opacity, align 8, !dbg !10257
  %mul = fmul double %conv48, %39, !dbg !10258
  %add = fadd double %conv11, %mul, !dbg !10259
  %conv49 = fptoui double %add to i16, !dbg !10260
  %40 = load i32, i32* %j, align 4, !dbg !10261
  %idxprom50 = sext i32 %40 to i64, !dbg !10262
  %41 = load i16*, i16** %dst, align 8, !dbg !10262
  %arrayidx51 = getelementptr inbounds i16, i16* %41, i64 %idxprom50, !dbg !10262
  store i16 %conv49, i16* %arrayidx51, align 2, !dbg !10263
  br label %for.inc, !dbg !10264

for.inc:                                          ; preds = %cond.end42
  %42 = load i32, i32* %j, align 4, !dbg !10265
  %inc = add nsw i32 %42, 1, !dbg !10265
  store i32 %inc, i32* %j, align 4, !dbg !10265
  br label %for.cond5, !dbg !10267, !llvm.loop !10268

for.end:                                          ; preds = %for.cond5
  %43 = load i64, i64* %dst_linesize.addr, align 8, !dbg !10270
  %44 = load i16*, i16** %dst, align 8, !dbg !10272
  %add.ptr = getelementptr inbounds i16, i16* %44, i64 %43, !dbg !10272
  store i16* %add.ptr, i16** %dst, align 8, !dbg !10272
  %45 = load i64, i64* %top_linesize.addr, align 8, !dbg !10273
  %46 = load i16*, i16** %top, align 8, !dbg !10274
  %add.ptr52 = getelementptr inbounds i16, i16* %46, i64 %45, !dbg !10274
  store i16* %add.ptr52, i16** %top, align 8, !dbg !10274
  %47 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !10275
  %48 = load i16*, i16** %bottom, align 8, !dbg !10276
  %add.ptr53 = getelementptr inbounds i16, i16* %48, i64 %47, !dbg !10276
  store i16* %add.ptr53, i16** %bottom, align 8, !dbg !10276
  br label %for.inc54, !dbg !10277

for.inc54:                                        ; preds = %for.end
  %49 = load i32, i32* %i, align 4, !dbg !10278
  %inc55 = add nsw i32 %49, 1, !dbg !10278
  store i32 %inc55, i32* %i, align 4, !dbg !10278
  br label %for.cond, !dbg !10280, !llvm.loop !10281

for.end56:                                        ; preds = %for.cond
  ret void, !dbg !10283
}

; Function Attrs: nounwind uwtable
define internal void @blend_darken_12bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !10285 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !10286, metadata !905), !dbg !10287
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !10288, metadata !905), !dbg !10289
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !10290, metadata !905), !dbg !10291
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !10292, metadata !905), !dbg !10293
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !10294, metadata !905), !dbg !10295
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !10296, metadata !905), !dbg !10297
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !10298, metadata !905), !dbg !10299
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !10300, metadata !905), !dbg !10301
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !10302, metadata !905), !dbg !10303
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !10304, metadata !905), !dbg !10305
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !10306, metadata !905), !dbg !10307
  call void @llvm.dbg.declare(metadata i16** %top, metadata !10308, metadata !905), !dbg !10309
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !10310
  %1 = bitcast i8* %0 to i16*, !dbg !10311
  store i16* %1, i16** %top, align 8, !dbg !10309
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !10312, metadata !905), !dbg !10313
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !10314
  %3 = bitcast i8* %2 to i16*, !dbg !10315
  store i16* %3, i16** %bottom, align 8, !dbg !10313
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !10316, metadata !905), !dbg !10317
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !10318
  %5 = bitcast i8* %4 to i16*, !dbg !10319
  store i16* %5, i16** %dst, align 8, !dbg !10317
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !10320, metadata !905), !dbg !10321
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !10322
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !10323
  %7 = load double, double* %opacity1, align 8, !dbg !10323
  store double %7, double* %opacity, align 8, !dbg !10321
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10324, metadata !905), !dbg !10325
  call void @llvm.dbg.declare(metadata i32* %j, metadata !10326, metadata !905), !dbg !10327
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !10328
  %div = sdiv i64 %8, 2, !dbg !10328
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !10328
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !10329
  %div2 = sdiv i64 %9, 2, !dbg !10329
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !10329
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !10330
  %div3 = sdiv i64 %10, 2, !dbg !10330
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !10330
  store i32 0, i32* %i, align 4, !dbg !10331
  br label %for.cond, !dbg !10333

for.cond:                                         ; preds = %for.inc35, %entry
  %11 = load i32, i32* %i, align 4, !dbg !10334
  %conv = sext i32 %11 to i64, !dbg !10334
  %12 = load i64, i64* %height.addr, align 8, !dbg !10337
  %cmp = icmp slt i64 %conv, %12, !dbg !10338
  br i1 %cmp, label %for.body, label %for.end37, !dbg !10339

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !10340
  br label %for.cond5, !dbg !10344

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !10345
  %conv6 = sext i32 %13 to i64, !dbg !10345
  %14 = load i64, i64* %width.addr, align 8, !dbg !10348
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !10349
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !10350

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !10351
  %idxprom = sext i32 %15 to i64, !dbg !10354
  %16 = load i16*, i16** %top, align 8, !dbg !10354
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !10354
  %17 = load i16, i16* %arrayidx, align 2, !dbg !10354
  %conv10 = zext i16 %17 to i32, !dbg !10354
  %conv11 = sitofp i32 %conv10 to double, !dbg !10354
  %18 = load i32, i32* %j, align 4, !dbg !10355
  %idxprom12 = sext i32 %18 to i64, !dbg !10356
  %19 = load i16*, i16** %top, align 8, !dbg !10356
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !10356
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !10356
  %conv14 = zext i16 %20 to i32, !dbg !10357
  %21 = load i32, i32* %j, align 4, !dbg !10358
  %idxprom15 = sext i32 %21 to i64, !dbg !10359
  %22 = load i16*, i16** %bottom, align 8, !dbg !10359
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !10359
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !10359
  %conv17 = zext i16 %23 to i32, !dbg !10360
  %cmp18 = icmp sgt i32 %conv14, %conv17, !dbg !10361
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !10357

cond.true:                                        ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !10362
  %idxprom20 = sext i32 %24 to i64, !dbg !10364
  %25 = load i16*, i16** %bottom, align 8, !dbg !10364
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !10364
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !10364
  %conv22 = zext i16 %26 to i32, !dbg !10365
  br label %cond.end, !dbg !10366

cond.false:                                       ; preds = %for.body9
  %27 = load i32, i32* %j, align 4, !dbg !10367
  %idxprom23 = sext i32 %27 to i64, !dbg !10369
  %28 = load i16*, i16** %top, align 8, !dbg !10369
  %arrayidx24 = getelementptr inbounds i16, i16* %28, i64 %idxprom23, !dbg !10369
  %29 = load i16, i16* %arrayidx24, align 2, !dbg !10369
  %conv25 = zext i16 %29 to i32, !dbg !10370
  br label %cond.end, !dbg !10371

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv22, %cond.true ], [ %conv25, %cond.false ], !dbg !10372
  %30 = load i32, i32* %j, align 4, !dbg !10374
  %idxprom26 = sext i32 %30 to i64, !dbg !10375
  %31 = load i16*, i16** %top, align 8, !dbg !10375
  %arrayidx27 = getelementptr inbounds i16, i16* %31, i64 %idxprom26, !dbg !10375
  %32 = load i16, i16* %arrayidx27, align 2, !dbg !10375
  %conv28 = zext i16 %32 to i32, !dbg !10375
  %sub = sub nsw i32 %cond, %conv28, !dbg !10376
  %conv29 = sitofp i32 %sub to double, !dbg !10377
  %33 = load double, double* %opacity, align 8, !dbg !10378
  %mul = fmul double %conv29, %33, !dbg !10379
  %add = fadd double %conv11, %mul, !dbg !10380
  %conv30 = fptoui double %add to i16, !dbg !10381
  %34 = load i32, i32* %j, align 4, !dbg !10382
  %idxprom31 = sext i32 %34 to i64, !dbg !10383
  %35 = load i16*, i16** %dst, align 8, !dbg !10383
  %arrayidx32 = getelementptr inbounds i16, i16* %35, i64 %idxprom31, !dbg !10383
  store i16 %conv30, i16* %arrayidx32, align 2, !dbg !10384
  br label %for.inc, !dbg !10385

for.inc:                                          ; preds = %cond.end
  %36 = load i32, i32* %j, align 4, !dbg !10386
  %inc = add nsw i32 %36, 1, !dbg !10386
  store i32 %inc, i32* %j, align 4, !dbg !10386
  br label %for.cond5, !dbg !10388, !llvm.loop !10389

for.end:                                          ; preds = %for.cond5
  %37 = load i64, i64* %dst_linesize.addr, align 8, !dbg !10391
  %38 = load i16*, i16** %dst, align 8, !dbg !10393
  %add.ptr = getelementptr inbounds i16, i16* %38, i64 %37, !dbg !10393
  store i16* %add.ptr, i16** %dst, align 8, !dbg !10393
  %39 = load i64, i64* %top_linesize.addr, align 8, !dbg !10394
  %40 = load i16*, i16** %top, align 8, !dbg !10395
  %add.ptr33 = getelementptr inbounds i16, i16* %40, i64 %39, !dbg !10395
  store i16* %add.ptr33, i16** %top, align 8, !dbg !10395
  %41 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !10396
  %42 = load i16*, i16** %bottom, align 8, !dbg !10397
  %add.ptr34 = getelementptr inbounds i16, i16* %42, i64 %41, !dbg !10397
  store i16* %add.ptr34, i16** %bottom, align 8, !dbg !10397
  br label %for.inc35, !dbg !10398

for.inc35:                                        ; preds = %for.end
  %43 = load i32, i32* %i, align 4, !dbg !10399
  %inc36 = add nsw i32 %43, 1, !dbg !10399
  store i32 %inc36, i32* %i, align 4, !dbg !10399
  br label %for.cond, !dbg !10401, !llvm.loop !10402

for.end37:                                        ; preds = %for.cond
  ret void, !dbg !10404
}

; Function Attrs: nounwind uwtable
define internal void @blend_difference_12bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !10406 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !10407, metadata !905), !dbg !10408
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !10409, metadata !905), !dbg !10410
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !10411, metadata !905), !dbg !10412
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !10413, metadata !905), !dbg !10414
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !10415, metadata !905), !dbg !10416
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !10417, metadata !905), !dbg !10418
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !10419, metadata !905), !dbg !10420
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !10421, metadata !905), !dbg !10422
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !10423, metadata !905), !dbg !10424
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !10425, metadata !905), !dbg !10426
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !10427, metadata !905), !dbg !10428
  call void @llvm.dbg.declare(metadata i16** %top, metadata !10429, metadata !905), !dbg !10430
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !10431
  %1 = bitcast i8* %0 to i16*, !dbg !10432
  store i16* %1, i16** %top, align 8, !dbg !10430
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !10433, metadata !905), !dbg !10434
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !10435
  %3 = bitcast i8* %2 to i16*, !dbg !10436
  store i16* %3, i16** %bottom, align 8, !dbg !10434
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !10437, metadata !905), !dbg !10438
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !10439
  %5 = bitcast i8* %4 to i16*, !dbg !10440
  store i16* %5, i16** %dst, align 8, !dbg !10438
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !10441, metadata !905), !dbg !10442
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !10443
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !10444
  %7 = load double, double* %opacity1, align 8, !dbg !10444
  store double %7, double* %opacity, align 8, !dbg !10442
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10445, metadata !905), !dbg !10446
  call void @llvm.dbg.declare(metadata i32* %j, metadata !10447, metadata !905), !dbg !10448
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !10449
  %div = sdiv i64 %8, 2, !dbg !10449
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !10449
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !10450
  %div2 = sdiv i64 %9, 2, !dbg !10450
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !10450
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !10451
  %div3 = sdiv i64 %10, 2, !dbg !10451
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !10451
  store i32 0, i32* %i, align 4, !dbg !10452
  br label %for.cond, !dbg !10454

for.cond:                                         ; preds = %for.inc45, %entry
  %11 = load i32, i32* %i, align 4, !dbg !10455
  %conv = sext i32 %11 to i64, !dbg !10455
  %12 = load i64, i64* %height.addr, align 8, !dbg !10458
  %cmp = icmp slt i64 %conv, %12, !dbg !10459
  br i1 %cmp, label %for.body, label %for.end47, !dbg !10460

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !10461
  br label %for.cond5, !dbg !10465

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !10466
  %conv6 = sext i32 %13 to i64, !dbg !10466
  %14 = load i64, i64* %width.addr, align 8, !dbg !10469
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !10470
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !10471

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !10472
  %idxprom = sext i32 %15 to i64, !dbg !10475
  %16 = load i16*, i16** %top, align 8, !dbg !10475
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !10475
  %17 = load i16, i16* %arrayidx, align 2, !dbg !10475
  %conv10 = zext i16 %17 to i32, !dbg !10475
  %conv11 = sitofp i32 %conv10 to double, !dbg !10475
  %18 = load i32, i32* %j, align 4, !dbg !10476
  %idxprom12 = sext i32 %18 to i64, !dbg !10477
  %19 = load i16*, i16** %top, align 8, !dbg !10477
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !10477
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !10477
  %conv14 = zext i16 %20 to i32, !dbg !10477
  %21 = load i32, i32* %j, align 4, !dbg !10478
  %idxprom15 = sext i32 %21 to i64, !dbg !10479
  %22 = load i16*, i16** %bottom, align 8, !dbg !10479
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !10479
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !10479
  %conv17 = zext i16 %23 to i32, !dbg !10479
  %sub = sub nsw i32 %conv14, %conv17, !dbg !10480
  %cmp18 = icmp sge i32 %sub, 0, !dbg !10481
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !10482

cond.true:                                        ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !10483
  %idxprom20 = sext i32 %24 to i64, !dbg !10485
  %25 = load i16*, i16** %top, align 8, !dbg !10485
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !10485
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !10485
  %conv22 = zext i16 %26 to i32, !dbg !10485
  %27 = load i32, i32* %j, align 4, !dbg !10486
  %idxprom23 = sext i32 %27 to i64, !dbg !10487
  %28 = load i16*, i16** %bottom, align 8, !dbg !10487
  %arrayidx24 = getelementptr inbounds i16, i16* %28, i64 %idxprom23, !dbg !10487
  %29 = load i16, i16* %arrayidx24, align 2, !dbg !10487
  %conv25 = zext i16 %29 to i32, !dbg !10487
  %sub26 = sub nsw i32 %conv22, %conv25, !dbg !10488
  br label %cond.end, !dbg !10489

cond.false:                                       ; preds = %for.body9
  %30 = load i32, i32* %j, align 4, !dbg !10490
  %idxprom27 = sext i32 %30 to i64, !dbg !10492
  %31 = load i16*, i16** %top, align 8, !dbg !10492
  %arrayidx28 = getelementptr inbounds i16, i16* %31, i64 %idxprom27, !dbg !10492
  %32 = load i16, i16* %arrayidx28, align 2, !dbg !10492
  %conv29 = zext i16 %32 to i32, !dbg !10492
  %33 = load i32, i32* %j, align 4, !dbg !10493
  %idxprom30 = sext i32 %33 to i64, !dbg !10494
  %34 = load i16*, i16** %bottom, align 8, !dbg !10494
  %arrayidx31 = getelementptr inbounds i16, i16* %34, i64 %idxprom30, !dbg !10494
  %35 = load i16, i16* %arrayidx31, align 2, !dbg !10494
  %conv32 = zext i16 %35 to i32, !dbg !10494
  %sub33 = sub nsw i32 %conv29, %conv32, !dbg !10495
  %sub34 = sub nsw i32 0, %sub33, !dbg !10496
  br label %cond.end, !dbg !10497

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub26, %cond.true ], [ %sub34, %cond.false ], !dbg !10498
  %36 = load i32, i32* %j, align 4, !dbg !10500
  %idxprom35 = sext i32 %36 to i64, !dbg !10501
  %37 = load i16*, i16** %top, align 8, !dbg !10501
  %arrayidx36 = getelementptr inbounds i16, i16* %37, i64 %idxprom35, !dbg !10501
  %38 = load i16, i16* %arrayidx36, align 2, !dbg !10501
  %conv37 = zext i16 %38 to i32, !dbg !10501
  %sub38 = sub nsw i32 %cond, %conv37, !dbg !10502
  %conv39 = sitofp i32 %sub38 to double, !dbg !10503
  %39 = load double, double* %opacity, align 8, !dbg !10504
  %mul = fmul double %conv39, %39, !dbg !10505
  %add = fadd double %conv11, %mul, !dbg !10506
  %conv40 = fptoui double %add to i16, !dbg !10507
  %40 = load i32, i32* %j, align 4, !dbg !10508
  %idxprom41 = sext i32 %40 to i64, !dbg !10509
  %41 = load i16*, i16** %dst, align 8, !dbg !10509
  %arrayidx42 = getelementptr inbounds i16, i16* %41, i64 %idxprom41, !dbg !10509
  store i16 %conv40, i16* %arrayidx42, align 2, !dbg !10510
  br label %for.inc, !dbg !10511

for.inc:                                          ; preds = %cond.end
  %42 = load i32, i32* %j, align 4, !dbg !10512
  %inc = add nsw i32 %42, 1, !dbg !10512
  store i32 %inc, i32* %j, align 4, !dbg !10512
  br label %for.cond5, !dbg !10514, !llvm.loop !10515

for.end:                                          ; preds = %for.cond5
  %43 = load i64, i64* %dst_linesize.addr, align 8, !dbg !10517
  %44 = load i16*, i16** %dst, align 8, !dbg !10519
  %add.ptr = getelementptr inbounds i16, i16* %44, i64 %43, !dbg !10519
  store i16* %add.ptr, i16** %dst, align 8, !dbg !10519
  %45 = load i64, i64* %top_linesize.addr, align 8, !dbg !10520
  %46 = load i16*, i16** %top, align 8, !dbg !10521
  %add.ptr43 = getelementptr inbounds i16, i16* %46, i64 %45, !dbg !10521
  store i16* %add.ptr43, i16** %top, align 8, !dbg !10521
  %47 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !10522
  %48 = load i16*, i16** %bottom, align 8, !dbg !10523
  %add.ptr44 = getelementptr inbounds i16, i16* %48, i64 %47, !dbg !10523
  store i16* %add.ptr44, i16** %bottom, align 8, !dbg !10523
  br label %for.inc45, !dbg !10524

for.inc45:                                        ; preds = %for.end
  %49 = load i32, i32* %i, align 4, !dbg !10525
  %inc46 = add nsw i32 %49, 1, !dbg !10525
  store i32 %inc46, i32* %i, align 4, !dbg !10525
  br label %for.cond, !dbg !10527, !llvm.loop !10528

for.end47:                                        ; preds = %for.cond
  ret void, !dbg !10530
}

; Function Attrs: nounwind uwtable
define internal void @blend_grainextract_12bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !10532 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !5462, metadata !905), !dbg !10533
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !5475, metadata !905), !dbg !10542
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !10543, metadata !905), !dbg !10544
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !10545, metadata !905), !dbg !10546
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !10547, metadata !905), !dbg !10548
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !10549, metadata !905), !dbg !10550
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !10551, metadata !905), !dbg !10552
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !10553, metadata !905), !dbg !10554
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !10555, metadata !905), !dbg !10556
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !10557, metadata !905), !dbg !10558
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !10559, metadata !905), !dbg !10560
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !10561, metadata !905), !dbg !10562
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !10563, metadata !905), !dbg !10564
  call void @llvm.dbg.declare(metadata i16** %top, metadata !10565, metadata !905), !dbg !10566
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !10567
  %1 = bitcast i8* %0 to i16*, !dbg !10568
  store i16* %1, i16** %top, align 8, !dbg !10566
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !10569, metadata !905), !dbg !10570
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !10571
  %3 = bitcast i8* %2 to i16*, !dbg !10572
  store i16* %3, i16** %bottom, align 8, !dbg !10570
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !10573, metadata !905), !dbg !10574
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !10575
  %5 = bitcast i8* %4 to i16*, !dbg !10576
  store i16* %5, i16** %dst, align 8, !dbg !10574
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !10577, metadata !905), !dbg !10578
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !10579
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !10580
  %7 = load double, double* %opacity1, align 8, !dbg !10580
  store double %7, double* %opacity, align 8, !dbg !10578
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10581, metadata !905), !dbg !10582
  call void @llvm.dbg.declare(metadata i32* %j, metadata !10583, metadata !905), !dbg !10584
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !10585
  %div = sdiv i64 %8, 2, !dbg !10585
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !10585
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !10586
  %div2 = sdiv i64 %9, 2, !dbg !10586
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !10586
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !10587
  %div3 = sdiv i64 %10, 2, !dbg !10587
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !10587
  store i32 0, i32* %i, align 4, !dbg !10588
  br label %for.cond, !dbg !10589

for.cond:                                         ; preds = %for.inc29, %entry
  %11 = load i32, i32* %i, align 4, !dbg !10590
  %conv = sext i32 %11 to i64, !dbg !10590
  %12 = load i64, i64* %height.addr, align 8, !dbg !10592
  %cmp = icmp slt i64 %conv, %12, !dbg !10593
  br i1 %cmp, label %for.body, label %for.end31, !dbg !10594

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !10595
  br label %for.cond5, !dbg !10597

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !10598
  %conv6 = sext i32 %13 to i64, !dbg !10598
  %14 = load i64, i64* %width.addr, align 8, !dbg !10600
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !10601
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !10602

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !10603
  %idxprom = sext i32 %15 to i64, !dbg !10604
  %16 = load i16*, i16** %top, align 8, !dbg !10604
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !10604
  %17 = load i16, i16* %arrayidx, align 2, !dbg !10604
  %conv10 = zext i16 %17 to i32, !dbg !10604
  %conv11 = sitofp i32 %conv10 to double, !dbg !10604
  %18 = load i32, i32* %j, align 4, !dbg !10605
  %idxprom12 = sext i32 %18 to i64, !dbg !10606
  %19 = load i16*, i16** %top, align 8, !dbg !10606
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !10606
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !10606
  %conv14 = zext i16 %20 to i32, !dbg !10606
  %add = add nsw i32 2048, %conv14, !dbg !10607
  %21 = load i32, i32* %j, align 4, !dbg !10608
  %idxprom15 = sext i32 %21 to i64, !dbg !10609
  %22 = load i16*, i16** %bottom, align 8, !dbg !10609
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !10609
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !10609
  %conv17 = zext i16 %23 to i32, !dbg !10609
  %sub = sub nsw i32 %add, %conv17, !dbg !10610
  store i32 %sub, i32* %a.addr.i, align 4, !dbg !10611
  store i32 12, i32* %p.addr.i, align 4, !dbg !10611
  %24 = load i32, i32* %a.addr.i, align 4, !dbg !10612
  %25 = load i32, i32* %p.addr.i, align 4, !dbg !10613
  %shl.i = shl i32 1, %25, !dbg !10614
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !10615
  %neg.i = xor i32 %sub.i, -1, !dbg !10616
  %and.i = and i32 %24, %neg.i, !dbg !10617
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !10617
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !10618

if.then.i:                                        ; preds = %for.body9
  %26 = load i32, i32* %a.addr.i, align 4, !dbg !10619
  %neg1.i = xor i32 %26, -1, !dbg !10620
  %shr.i = ashr i32 %neg1.i, 31, !dbg !10621
  %27 = load i32, i32* %p.addr.i, align 4, !dbg !10622
  %shl2.i = shl i32 1, %27, !dbg !10623
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !10624
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !10625
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !10626
  br label %av_clip_uintp2_c.exit, !dbg !10626

if.else.i:                                        ; preds = %for.body9
  %28 = load i32, i32* %a.addr.i, align 4, !dbg !10627
  store i32 %28, i32* %retval.i, align 4, !dbg !10628
  br label %av_clip_uintp2_c.exit, !dbg !10628

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %29 = load i32, i32* %retval.i, align 4, !dbg !10629
  %30 = load i32, i32* %j, align 4, !dbg !10630
  %idxprom18 = sext i32 %30 to i64, !dbg !10631
  %31 = load i16*, i16** %top, align 8, !dbg !10631
  %arrayidx19 = getelementptr inbounds i16, i16* %31, i64 %idxprom18, !dbg !10631
  %32 = load i16, i16* %arrayidx19, align 2, !dbg !10631
  %conv20 = zext i16 %32 to i32, !dbg !10631
  %sub21 = sub nsw i32 %29, %conv20, !dbg !10632
  %conv22 = sitofp i32 %sub21 to double, !dbg !10633
  %33 = load double, double* %opacity, align 8, !dbg !10634
  %mul = fmul double %conv22, %33, !dbg !10635
  %add23 = fadd double %conv11, %mul, !dbg !10636
  %conv24 = fptoui double %add23 to i16, !dbg !10604
  %34 = load i32, i32* %j, align 4, !dbg !10637
  %idxprom25 = sext i32 %34 to i64, !dbg !10638
  %35 = load i16*, i16** %dst, align 8, !dbg !10638
  %arrayidx26 = getelementptr inbounds i16, i16* %35, i64 %idxprom25, !dbg !10638
  store i16 %conv24, i16* %arrayidx26, align 2, !dbg !10639
  br label %for.inc, !dbg !10640

for.inc:                                          ; preds = %av_clip_uintp2_c.exit
  %36 = load i32, i32* %j, align 4, !dbg !10641
  %inc = add nsw i32 %36, 1, !dbg !10641
  store i32 %inc, i32* %j, align 4, !dbg !10641
  br label %for.cond5, !dbg !10643, !llvm.loop !10644

for.end:                                          ; preds = %for.cond5
  %37 = load i64, i64* %dst_linesize.addr, align 8, !dbg !10646
  %38 = load i16*, i16** %dst, align 8, !dbg !10648
  %add.ptr = getelementptr inbounds i16, i16* %38, i64 %37, !dbg !10648
  store i16* %add.ptr, i16** %dst, align 8, !dbg !10648
  %39 = load i64, i64* %top_linesize.addr, align 8, !dbg !10649
  %40 = load i16*, i16** %top, align 8, !dbg !10650
  %add.ptr27 = getelementptr inbounds i16, i16* %40, i64 %39, !dbg !10650
  store i16* %add.ptr27, i16** %top, align 8, !dbg !10650
  %41 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !10651
  %42 = load i16*, i16** %bottom, align 8, !dbg !10652
  %add.ptr28 = getelementptr inbounds i16, i16* %42, i64 %41, !dbg !10652
  store i16* %add.ptr28, i16** %bottom, align 8, !dbg !10652
  br label %for.inc29, !dbg !10653

for.inc29:                                        ; preds = %for.end
  %43 = load i32, i32* %i, align 4, !dbg !10654
  %inc30 = add nsw i32 %43, 1, !dbg !10654
  store i32 %inc30, i32* %i, align 4, !dbg !10654
  br label %for.cond, !dbg !10656, !llvm.loop !10657

for.end31:                                        ; preds = %for.cond
  ret void, !dbg !10659
}

; Function Attrs: nounwind uwtable
define internal void @blend_divide_12bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !10661 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !5462, metadata !905), !dbg !10662
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !5475, metadata !905), !dbg !10671
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !10672, metadata !905), !dbg !10673
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !10674, metadata !905), !dbg !10675
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !10676, metadata !905), !dbg !10677
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !10678, metadata !905), !dbg !10679
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !10680, metadata !905), !dbg !10681
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !10682, metadata !905), !dbg !10683
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !10684, metadata !905), !dbg !10685
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !10686, metadata !905), !dbg !10687
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !10688, metadata !905), !dbg !10689
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !10690, metadata !905), !dbg !10691
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !10692, metadata !905), !dbg !10693
  call void @llvm.dbg.declare(metadata i16** %top, metadata !10694, metadata !905), !dbg !10695
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !10696
  %1 = bitcast i8* %0 to i16*, !dbg !10697
  store i16* %1, i16** %top, align 8, !dbg !10695
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !10698, metadata !905), !dbg !10699
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !10700
  %3 = bitcast i8* %2 to i16*, !dbg !10701
  store i16* %3, i16** %bottom, align 8, !dbg !10699
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !10702, metadata !905), !dbg !10703
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !10704
  %5 = bitcast i8* %4 to i16*, !dbg !10705
  store i16* %5, i16** %dst, align 8, !dbg !10703
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !10706, metadata !905), !dbg !10707
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !10708
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !10709
  %7 = load double, double* %opacity1, align 8, !dbg !10709
  store double %7, double* %opacity, align 8, !dbg !10707
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10710, metadata !905), !dbg !10711
  call void @llvm.dbg.declare(metadata i32* %j, metadata !10712, metadata !905), !dbg !10713
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !10714
  %div = sdiv i64 %8, 2, !dbg !10714
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !10714
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !10715
  %div2 = sdiv i64 %9, 2, !dbg !10715
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !10715
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !10716
  %div3 = sdiv i64 %10, 2, !dbg !10716
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !10716
  store i32 0, i32* %i, align 4, !dbg !10717
  br label %for.cond, !dbg !10718

for.cond:                                         ; preds = %for.inc34, %entry
  %11 = load i32, i32* %i, align 4, !dbg !10719
  %conv = sext i32 %11 to i64, !dbg !10719
  %12 = load i64, i64* %height.addr, align 8, !dbg !10721
  %cmp = icmp slt i64 %conv, %12, !dbg !10722
  br i1 %cmp, label %for.body, label %for.end36, !dbg !10723

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !10724
  br label %for.cond5, !dbg !10726

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !10727
  %conv6 = sext i32 %13 to i64, !dbg !10727
  %14 = load i64, i64* %width.addr, align 8, !dbg !10729
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !10730
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !10731

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !10732
  %idxprom = sext i32 %15 to i64, !dbg !10734
  %16 = load i16*, i16** %top, align 8, !dbg !10734
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !10734
  %17 = load i16, i16* %arrayidx, align 2, !dbg !10734
  %conv10 = zext i16 %17 to i32, !dbg !10734
  %conv11 = sitofp i32 %conv10 to double, !dbg !10734
  %18 = load i32, i32* %j, align 4, !dbg !10735
  %idxprom12 = sext i32 %18 to i64, !dbg !10736
  %19 = load i16*, i16** %bottom, align 8, !dbg !10736
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !10736
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !10736
  %conv14 = zext i16 %20 to i32, !dbg !10736
  %cmp15 = icmp eq i32 %conv14, 0, !dbg !10737
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !10736

cond.true:                                        ; preds = %for.body9
  br label %cond.end, !dbg !10738

cond.false:                                       ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !10740
  %idxprom17 = sext i32 %21 to i64, !dbg !10742
  %22 = load i16*, i16** %top, align 8, !dbg !10742
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !10742
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !10742
  %conv19 = zext i16 %23 to i32, !dbg !10742
  %mul = mul nsw i32 4095, %conv19, !dbg !10743
  %24 = load i32, i32* %j, align 4, !dbg !10744
  %idxprom20 = sext i32 %24 to i64, !dbg !10745
  %25 = load i16*, i16** %bottom, align 8, !dbg !10745
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !10745
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !10745
  %conv22 = zext i16 %26 to i32, !dbg !10745
  %div23 = sdiv i32 %mul, %conv22, !dbg !10746
  br label %cond.end, !dbg !10747

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 4095, %cond.true ], [ %div23, %cond.false ], !dbg !10748
  store i32 %cond, i32* %a.addr.i, align 4, !dbg !10749
  store i32 12, i32* %p.addr.i, align 4, !dbg !10749
  %27 = load i32, i32* %a.addr.i, align 4, !dbg !10750
  %28 = load i32, i32* %p.addr.i, align 4, !dbg !10751
  %shl.i = shl i32 1, %28, !dbg !10752
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !10753
  %neg.i = xor i32 %sub.i, -1, !dbg !10754
  %and.i = and i32 %27, %neg.i, !dbg !10755
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !10755
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !10756

if.then.i:                                        ; preds = %cond.end
  %29 = load i32, i32* %a.addr.i, align 4, !dbg !10757
  %neg1.i = xor i32 %29, -1, !dbg !10758
  %shr.i = ashr i32 %neg1.i, 31, !dbg !10759
  %30 = load i32, i32* %p.addr.i, align 4, !dbg !10760
  %shl2.i = shl i32 1, %30, !dbg !10761
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !10762
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !10763
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !10764
  br label %av_clip_uintp2_c.exit, !dbg !10764

if.else.i:                                        ; preds = %cond.end
  %31 = load i32, i32* %a.addr.i, align 4, !dbg !10765
  store i32 %31, i32* %retval.i, align 4, !dbg !10766
  br label %av_clip_uintp2_c.exit, !dbg !10766

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %32 = load i32, i32* %retval.i, align 4, !dbg !10767
  %33 = load i32, i32* %j, align 4, !dbg !10768
  %idxprom24 = sext i32 %33 to i64, !dbg !10769
  %34 = load i16*, i16** %top, align 8, !dbg !10769
  %arrayidx25 = getelementptr inbounds i16, i16* %34, i64 %idxprom24, !dbg !10769
  %35 = load i16, i16* %arrayidx25, align 2, !dbg !10769
  %conv26 = zext i16 %35 to i32, !dbg !10769
  %sub = sub nsw i32 %32, %conv26, !dbg !10770
  %conv27 = sitofp i32 %sub to double, !dbg !10771
  %36 = load double, double* %opacity, align 8, !dbg !10772
  %mul28 = fmul double %conv27, %36, !dbg !10773
  %add = fadd double %conv11, %mul28, !dbg !10774
  %conv29 = fptoui double %add to i16, !dbg !10775
  %37 = load i32, i32* %j, align 4, !dbg !10776
  %idxprom30 = sext i32 %37 to i64, !dbg !10777
  %38 = load i16*, i16** %dst, align 8, !dbg !10777
  %arrayidx31 = getelementptr inbounds i16, i16* %38, i64 %idxprom30, !dbg !10777
  store i16 %conv29, i16* %arrayidx31, align 2, !dbg !10778
  br label %for.inc, !dbg !10779

for.inc:                                          ; preds = %av_clip_uintp2_c.exit
  %39 = load i32, i32* %j, align 4, !dbg !10780
  %inc = add nsw i32 %39, 1, !dbg !10780
  store i32 %inc, i32* %j, align 4, !dbg !10780
  br label %for.cond5, !dbg !10782, !llvm.loop !10783

for.end:                                          ; preds = %for.cond5
  %40 = load i64, i64* %dst_linesize.addr, align 8, !dbg !10785
  %41 = load i16*, i16** %dst, align 8, !dbg !10787
  %add.ptr = getelementptr inbounds i16, i16* %41, i64 %40, !dbg !10787
  store i16* %add.ptr, i16** %dst, align 8, !dbg !10787
  %42 = load i64, i64* %top_linesize.addr, align 8, !dbg !10788
  %43 = load i16*, i16** %top, align 8, !dbg !10789
  %add.ptr32 = getelementptr inbounds i16, i16* %43, i64 %42, !dbg !10789
  store i16* %add.ptr32, i16** %top, align 8, !dbg !10789
  %44 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !10790
  %45 = load i16*, i16** %bottom, align 8, !dbg !10791
  %add.ptr33 = getelementptr inbounds i16, i16* %45, i64 %44, !dbg !10791
  store i16* %add.ptr33, i16** %bottom, align 8, !dbg !10791
  br label %for.inc34, !dbg !10792

for.inc34:                                        ; preds = %for.end
  %46 = load i32, i32* %i, align 4, !dbg !10793
  %inc35 = add nsw i32 %46, 1, !dbg !10793
  store i32 %inc35, i32* %i, align 4, !dbg !10793
  br label %for.cond, !dbg !10795, !llvm.loop !10796

for.end36:                                        ; preds = %for.cond
  ret void, !dbg !10798
}

; Function Attrs: nounwind uwtable
define internal void @blend_dodge_12bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !10800 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !10801, metadata !905), !dbg !10802
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !10803, metadata !905), !dbg !10804
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !10805, metadata !905), !dbg !10806
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !10807, metadata !905), !dbg !10808
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !10809, metadata !905), !dbg !10810
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !10811, metadata !905), !dbg !10812
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !10813, metadata !905), !dbg !10814
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !10815, metadata !905), !dbg !10816
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !10817, metadata !905), !dbg !10818
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !10819, metadata !905), !dbg !10820
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !10821, metadata !905), !dbg !10822
  call void @llvm.dbg.declare(metadata i16** %top, metadata !10823, metadata !905), !dbg !10824
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !10825
  %1 = bitcast i8* %0 to i16*, !dbg !10826
  store i16* %1, i16** %top, align 8, !dbg !10824
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !10827, metadata !905), !dbg !10828
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !10829
  %3 = bitcast i8* %2 to i16*, !dbg !10830
  store i16* %3, i16** %bottom, align 8, !dbg !10828
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !10831, metadata !905), !dbg !10832
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !10833
  %5 = bitcast i8* %4 to i16*, !dbg !10834
  store i16* %5, i16** %dst, align 8, !dbg !10832
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !10835, metadata !905), !dbg !10836
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !10837
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !10838
  %7 = load double, double* %opacity1, align 8, !dbg !10838
  store double %7, double* %opacity, align 8, !dbg !10836
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10839, metadata !905), !dbg !10840
  call void @llvm.dbg.declare(metadata i32* %j, metadata !10841, metadata !905), !dbg !10842
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !10843
  %div = sdiv i64 %8, 2, !dbg !10843
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !10843
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !10844
  %div2 = sdiv i64 %9, 2, !dbg !10844
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !10844
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !10845
  %div3 = sdiv i64 %10, 2, !dbg !10845
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !10845
  store i32 0, i32* %i, align 4, !dbg !10846
  br label %for.cond, !dbg !10848

for.cond:                                         ; preds = %for.inc52, %entry
  %11 = load i32, i32* %i, align 4, !dbg !10849
  %conv = sext i32 %11 to i64, !dbg !10849
  %12 = load i64, i64* %height.addr, align 8, !dbg !10852
  %cmp = icmp slt i64 %conv, %12, !dbg !10853
  br i1 %cmp, label %for.body, label %for.end54, !dbg !10854

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !10855
  br label %for.cond5, !dbg !10859

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !10860
  %conv6 = sext i32 %13 to i64, !dbg !10860
  %14 = load i64, i64* %width.addr, align 8, !dbg !10863
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !10864
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !10865

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !10866
  %idxprom = sext i32 %15 to i64, !dbg !10869
  %16 = load i16*, i16** %top, align 8, !dbg !10869
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !10869
  %17 = load i16, i16* %arrayidx, align 2, !dbg !10869
  %conv10 = zext i16 %17 to i32, !dbg !10869
  %conv11 = sitofp i32 %conv10 to double, !dbg !10869
  %18 = load i32, i32* %j, align 4, !dbg !10870
  %idxprom12 = sext i32 %18 to i64, !dbg !10871
  %19 = load i16*, i16** %top, align 8, !dbg !10871
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !10871
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !10871
  %conv14 = zext i16 %20 to i32, !dbg !10872
  %cmp15 = icmp eq i32 %conv14, 4095, !dbg !10873
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !10874

cond.true:                                        ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !10875
  %idxprom17 = sext i32 %21 to i64, !dbg !10877
  %22 = load i16*, i16** %top, align 8, !dbg !10877
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !10877
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !10877
  %conv19 = zext i16 %23 to i32, !dbg !10878
  br label %cond.end40, !dbg !10879

cond.false:                                       ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !10880
  %idxprom20 = sext i32 %24 to i64, !dbg !10882
  %25 = load i16*, i16** %bottom, align 8, !dbg !10882
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !10882
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !10882
  %conv22 = zext i16 %26 to i32, !dbg !10883
  %shl = shl i32 %conv22, 12, !dbg !10884
  %27 = load i32, i32* %j, align 4, !dbg !10885
  %idxprom23 = sext i32 %27 to i64, !dbg !10886
  %28 = load i16*, i16** %top, align 8, !dbg !10886
  %arrayidx24 = getelementptr inbounds i16, i16* %28, i64 %idxprom23, !dbg !10886
  %29 = load i16, i16* %arrayidx24, align 2, !dbg !10886
  %conv25 = zext i16 %29 to i32, !dbg !10887
  %sub = sub nsw i32 4095, %conv25, !dbg !10888
  %div26 = sdiv i32 %shl, %sub, !dbg !10889
  %cmp27 = icmp sgt i32 4095, %div26, !dbg !10890
  br i1 %cmp27, label %cond.true29, label %cond.false39, !dbg !10891

cond.true29:                                      ; preds = %cond.false
  %30 = load i32, i32* %j, align 4, !dbg !10892
  %idxprom30 = sext i32 %30 to i64, !dbg !10894
  %31 = load i16*, i16** %bottom, align 8, !dbg !10894
  %arrayidx31 = getelementptr inbounds i16, i16* %31, i64 %idxprom30, !dbg !10894
  %32 = load i16, i16* %arrayidx31, align 2, !dbg !10894
  %conv32 = zext i16 %32 to i32, !dbg !10895
  %shl33 = shl i32 %conv32, 12, !dbg !10896
  %33 = load i32, i32* %j, align 4, !dbg !10897
  %idxprom34 = sext i32 %33 to i64, !dbg !10898
  %34 = load i16*, i16** %top, align 8, !dbg !10898
  %arrayidx35 = getelementptr inbounds i16, i16* %34, i64 %idxprom34, !dbg !10898
  %35 = load i16, i16* %arrayidx35, align 2, !dbg !10898
  %conv36 = zext i16 %35 to i32, !dbg !10899
  %sub37 = sub nsw i32 4095, %conv36, !dbg !10900
  %div38 = sdiv i32 %shl33, %sub37, !dbg !10901
  br label %cond.end, !dbg !10902

cond.false39:                                     ; preds = %cond.false
  br label %cond.end, !dbg !10903

cond.end:                                         ; preds = %cond.false39, %cond.true29
  %cond = phi i32 [ %div38, %cond.true29 ], [ 4095, %cond.false39 ], !dbg !10905
  br label %cond.end40, !dbg !10907

cond.end40:                                       ; preds = %cond.end, %cond.true
  %cond41 = phi i32 [ %conv19, %cond.true ], [ %cond, %cond.end ], !dbg !10908
  %36 = load i32, i32* %j, align 4, !dbg !10910
  %idxprom42 = sext i32 %36 to i64, !dbg !10911
  %37 = load i16*, i16** %top, align 8, !dbg !10911
  %arrayidx43 = getelementptr inbounds i16, i16* %37, i64 %idxprom42, !dbg !10911
  %38 = load i16, i16* %arrayidx43, align 2, !dbg !10911
  %conv44 = zext i16 %38 to i32, !dbg !10911
  %sub45 = sub nsw i32 %cond41, %conv44, !dbg !10912
  %conv46 = sitofp i32 %sub45 to double, !dbg !10913
  %39 = load double, double* %opacity, align 8, !dbg !10914
  %mul = fmul double %conv46, %39, !dbg !10915
  %add = fadd double %conv11, %mul, !dbg !10916
  %conv47 = fptoui double %add to i16, !dbg !10917
  %40 = load i32, i32* %j, align 4, !dbg !10918
  %idxprom48 = sext i32 %40 to i64, !dbg !10919
  %41 = load i16*, i16** %dst, align 8, !dbg !10919
  %arrayidx49 = getelementptr inbounds i16, i16* %41, i64 %idxprom48, !dbg !10919
  store i16 %conv47, i16* %arrayidx49, align 2, !dbg !10920
  br label %for.inc, !dbg !10921

for.inc:                                          ; preds = %cond.end40
  %42 = load i32, i32* %j, align 4, !dbg !10922
  %inc = add nsw i32 %42, 1, !dbg !10922
  store i32 %inc, i32* %j, align 4, !dbg !10922
  br label %for.cond5, !dbg !10924, !llvm.loop !10925

for.end:                                          ; preds = %for.cond5
  %43 = load i64, i64* %dst_linesize.addr, align 8, !dbg !10927
  %44 = load i16*, i16** %dst, align 8, !dbg !10929
  %add.ptr = getelementptr inbounds i16, i16* %44, i64 %43, !dbg !10929
  store i16* %add.ptr, i16** %dst, align 8, !dbg !10929
  %45 = load i64, i64* %top_linesize.addr, align 8, !dbg !10930
  %46 = load i16*, i16** %top, align 8, !dbg !10931
  %add.ptr50 = getelementptr inbounds i16, i16* %46, i64 %45, !dbg !10931
  store i16* %add.ptr50, i16** %top, align 8, !dbg !10931
  %47 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !10932
  %48 = load i16*, i16** %bottom, align 8, !dbg !10933
  %add.ptr51 = getelementptr inbounds i16, i16* %48, i64 %47, !dbg !10933
  store i16* %add.ptr51, i16** %bottom, align 8, !dbg !10933
  br label %for.inc52, !dbg !10934

for.inc52:                                        ; preds = %for.end
  %49 = load i32, i32* %i, align 4, !dbg !10935
  %inc53 = add nsw i32 %49, 1, !dbg !10935
  store i32 %inc53, i32* %i, align 4, !dbg !10935
  br label %for.cond, !dbg !10937, !llvm.loop !10938

for.end54:                                        ; preds = %for.cond
  ret void, !dbg !10940
}

; Function Attrs: nounwind uwtable
define internal void @blend_exclusion_12bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !10942 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !10943, metadata !905), !dbg !10944
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !10945, metadata !905), !dbg !10946
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !10947, metadata !905), !dbg !10948
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !10949, metadata !905), !dbg !10950
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !10951, metadata !905), !dbg !10952
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !10953, metadata !905), !dbg !10954
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !10955, metadata !905), !dbg !10956
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !10957, metadata !905), !dbg !10958
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !10959, metadata !905), !dbg !10960
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !10961, metadata !905), !dbg !10962
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !10963, metadata !905), !dbg !10964
  call void @llvm.dbg.declare(metadata i16** %top, metadata !10965, metadata !905), !dbg !10966
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !10967
  %1 = bitcast i8* %0 to i16*, !dbg !10968
  store i16* %1, i16** %top, align 8, !dbg !10966
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !10969, metadata !905), !dbg !10970
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !10971
  %3 = bitcast i8* %2 to i16*, !dbg !10972
  store i16* %3, i16** %bottom, align 8, !dbg !10970
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !10973, metadata !905), !dbg !10974
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !10975
  %5 = bitcast i8* %4 to i16*, !dbg !10976
  store i16* %5, i16** %dst, align 8, !dbg !10974
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !10977, metadata !905), !dbg !10978
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !10979
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !10980
  %7 = load double, double* %opacity1, align 8, !dbg !10980
  store double %7, double* %opacity, align 8, !dbg !10978
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10981, metadata !905), !dbg !10982
  call void @llvm.dbg.declare(metadata i32* %j, metadata !10983, metadata !905), !dbg !10984
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !10985
  %div = sdiv i64 %8, 2, !dbg !10985
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !10985
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !10986
  %div2 = sdiv i64 %9, 2, !dbg !10986
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !10986
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !10987
  %div3 = sdiv i64 %10, 2, !dbg !10987
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !10987
  store i32 0, i32* %i, align 4, !dbg !10988
  br label %for.cond, !dbg !10990

for.cond:                                         ; preds = %for.inc38, %entry
  %11 = load i32, i32* %i, align 4, !dbg !10991
  %conv = sext i32 %11 to i64, !dbg !10991
  %12 = load i64, i64* %height.addr, align 8, !dbg !10994
  %cmp = icmp slt i64 %conv, %12, !dbg !10995
  br i1 %cmp, label %for.body, label %for.end40, !dbg !10996

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !10997
  br label %for.cond5, !dbg !11001

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !11002
  %conv6 = sext i32 %13 to i64, !dbg !11002
  %14 = load i64, i64* %width.addr, align 8, !dbg !11005
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !11006
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !11007

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !11008
  %idxprom = sext i32 %15 to i64, !dbg !11011
  %16 = load i16*, i16** %top, align 8, !dbg !11011
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !11011
  %17 = load i16, i16* %arrayidx, align 2, !dbg !11011
  %conv10 = zext i16 %17 to i32, !dbg !11011
  %conv11 = sitofp i32 %conv10 to double, !dbg !11011
  %18 = load i32, i32* %j, align 4, !dbg !11012
  %idxprom12 = sext i32 %18 to i64, !dbg !11013
  %19 = load i16*, i16** %top, align 8, !dbg !11013
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !11013
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !11013
  %conv14 = zext i16 %20 to i32, !dbg !11013
  %21 = load i32, i32* %j, align 4, !dbg !11014
  %idxprom15 = sext i32 %21 to i64, !dbg !11015
  %22 = load i16*, i16** %bottom, align 8, !dbg !11015
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !11015
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !11015
  %conv17 = zext i16 %23 to i32, !dbg !11015
  %add = add nsw i32 %conv14, %conv17, !dbg !11016
  %24 = load i32, i32* %j, align 4, !dbg !11017
  %idxprom18 = sext i32 %24 to i64, !dbg !11018
  %25 = load i16*, i16** %top, align 8, !dbg !11018
  %arrayidx19 = getelementptr inbounds i16, i16* %25, i64 %idxprom18, !dbg !11018
  %26 = load i16, i16* %arrayidx19, align 2, !dbg !11018
  %conv20 = zext i16 %26 to i32, !dbg !11018
  %mul = mul nsw i32 2, %conv20, !dbg !11019
  %27 = load i32, i32* %j, align 4, !dbg !11020
  %idxprom21 = sext i32 %27 to i64, !dbg !11021
  %28 = load i16*, i16** %bottom, align 8, !dbg !11021
  %arrayidx22 = getelementptr inbounds i16, i16* %28, i64 %idxprom21, !dbg !11021
  %29 = load i16, i16* %arrayidx22, align 2, !dbg !11021
  %conv23 = zext i16 %29 to i32, !dbg !11021
  %mul24 = mul nsw i32 %mul, %conv23, !dbg !11022
  %div25 = sdiv i32 %mul24, 4095, !dbg !11023
  %sub = sub nsw i32 %add, %div25, !dbg !11024
  %30 = load i32, i32* %j, align 4, !dbg !11025
  %idxprom26 = sext i32 %30 to i64, !dbg !11026
  %31 = load i16*, i16** %top, align 8, !dbg !11026
  %arrayidx27 = getelementptr inbounds i16, i16* %31, i64 %idxprom26, !dbg !11026
  %32 = load i16, i16* %arrayidx27, align 2, !dbg !11026
  %conv28 = zext i16 %32 to i32, !dbg !11026
  %sub29 = sub nsw i32 %sub, %conv28, !dbg !11027
  %conv30 = sitofp i32 %sub29 to double, !dbg !11028
  %33 = load double, double* %opacity, align 8, !dbg !11029
  %mul31 = fmul double %conv30, %33, !dbg !11030
  %add32 = fadd double %conv11, %mul31, !dbg !11031
  %conv33 = fptoui double %add32 to i16, !dbg !11011
  %34 = load i32, i32* %j, align 4, !dbg !11032
  %idxprom34 = sext i32 %34 to i64, !dbg !11033
  %35 = load i16*, i16** %dst, align 8, !dbg !11033
  %arrayidx35 = getelementptr inbounds i16, i16* %35, i64 %idxprom34, !dbg !11033
  store i16 %conv33, i16* %arrayidx35, align 2, !dbg !11034
  br label %for.inc, !dbg !11035

for.inc:                                          ; preds = %for.body9
  %36 = load i32, i32* %j, align 4, !dbg !11036
  %inc = add nsw i32 %36, 1, !dbg !11036
  store i32 %inc, i32* %j, align 4, !dbg !11036
  br label %for.cond5, !dbg !11038, !llvm.loop !11039

for.end:                                          ; preds = %for.cond5
  %37 = load i64, i64* %dst_linesize.addr, align 8, !dbg !11041
  %38 = load i16*, i16** %dst, align 8, !dbg !11043
  %add.ptr = getelementptr inbounds i16, i16* %38, i64 %37, !dbg !11043
  store i16* %add.ptr, i16** %dst, align 8, !dbg !11043
  %39 = load i64, i64* %top_linesize.addr, align 8, !dbg !11044
  %40 = load i16*, i16** %top, align 8, !dbg !11045
  %add.ptr36 = getelementptr inbounds i16, i16* %40, i64 %39, !dbg !11045
  store i16* %add.ptr36, i16** %top, align 8, !dbg !11045
  %41 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !11046
  %42 = load i16*, i16** %bottom, align 8, !dbg !11047
  %add.ptr37 = getelementptr inbounds i16, i16* %42, i64 %41, !dbg !11047
  store i16* %add.ptr37, i16** %bottom, align 8, !dbg !11047
  br label %for.inc38, !dbg !11048

for.inc38:                                        ; preds = %for.end
  %43 = load i32, i32* %i, align 4, !dbg !11049
  %inc39 = add nsw i32 %43, 1, !dbg !11049
  store i32 %inc39, i32* %i, align 4, !dbg !11049
  br label %for.cond, !dbg !11051, !llvm.loop !11052

for.end40:                                        ; preds = %for.cond
  ret void, !dbg !11054
}

; Function Attrs: nounwind uwtable
define internal void @blend_extremity_12bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !11056 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !11057, metadata !905), !dbg !11058
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !11059, metadata !905), !dbg !11060
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !11061, metadata !905), !dbg !11062
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !11063, metadata !905), !dbg !11064
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !11065, metadata !905), !dbg !11066
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !11067, metadata !905), !dbg !11068
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !11069, metadata !905), !dbg !11070
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !11071, metadata !905), !dbg !11072
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !11073, metadata !905), !dbg !11074
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !11075, metadata !905), !dbg !11076
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !11077, metadata !905), !dbg !11078
  call void @llvm.dbg.declare(metadata i16** %top, metadata !11079, metadata !905), !dbg !11080
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !11081
  %1 = bitcast i8* %0 to i16*, !dbg !11082
  store i16* %1, i16** %top, align 8, !dbg !11080
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !11083, metadata !905), !dbg !11084
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !11085
  %3 = bitcast i8* %2 to i16*, !dbg !11086
  store i16* %3, i16** %bottom, align 8, !dbg !11084
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !11087, metadata !905), !dbg !11088
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !11089
  %5 = bitcast i8* %4 to i16*, !dbg !11090
  store i16* %5, i16** %dst, align 8, !dbg !11088
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !11091, metadata !905), !dbg !11092
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !11093
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !11094
  %7 = load double, double* %opacity1, align 8, !dbg !11094
  store double %7, double* %opacity, align 8, !dbg !11092
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11095, metadata !905), !dbg !11096
  call void @llvm.dbg.declare(metadata i32* %j, metadata !11097, metadata !905), !dbg !11098
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !11099
  %div = sdiv i64 %8, 2, !dbg !11099
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !11099
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !11100
  %div2 = sdiv i64 %9, 2, !dbg !11100
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !11100
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !11101
  %div3 = sdiv i64 %10, 2, !dbg !11101
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !11101
  store i32 0, i32* %i, align 4, !dbg !11102
  br label %for.cond, !dbg !11104

for.cond:                                         ; preds = %for.inc48, %entry
  %11 = load i32, i32* %i, align 4, !dbg !11105
  %conv = sext i32 %11 to i64, !dbg !11105
  %12 = load i64, i64* %height.addr, align 8, !dbg !11108
  %cmp = icmp slt i64 %conv, %12, !dbg !11109
  br i1 %cmp, label %for.body, label %for.end50, !dbg !11110

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !11111
  br label %for.cond5, !dbg !11115

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !11116
  %conv6 = sext i32 %13 to i64, !dbg !11116
  %14 = load i64, i64* %width.addr, align 8, !dbg !11119
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !11120
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !11121

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !11122
  %idxprom = sext i32 %15 to i64, !dbg !11125
  %16 = load i16*, i16** %top, align 8, !dbg !11125
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !11125
  %17 = load i16, i16* %arrayidx, align 2, !dbg !11125
  %conv10 = zext i16 %17 to i32, !dbg !11125
  %conv11 = sitofp i32 %conv10 to double, !dbg !11125
  %18 = load i32, i32* %j, align 4, !dbg !11126
  %idxprom12 = sext i32 %18 to i64, !dbg !11127
  %19 = load i16*, i16** %top, align 8, !dbg !11127
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !11127
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !11127
  %conv14 = zext i16 %20 to i32, !dbg !11127
  %sub = sub nsw i32 4095, %conv14, !dbg !11128
  %21 = load i32, i32* %j, align 4, !dbg !11129
  %idxprom15 = sext i32 %21 to i64, !dbg !11130
  %22 = load i16*, i16** %bottom, align 8, !dbg !11130
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !11130
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !11130
  %conv17 = zext i16 %23 to i32, !dbg !11130
  %sub18 = sub nsw i32 %sub, %conv17, !dbg !11131
  %cmp19 = icmp sge i32 %sub18, 0, !dbg !11132
  br i1 %cmp19, label %cond.true, label %cond.false, !dbg !11133

cond.true:                                        ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !11134
  %idxprom21 = sext i32 %24 to i64, !dbg !11136
  %25 = load i16*, i16** %top, align 8, !dbg !11136
  %arrayidx22 = getelementptr inbounds i16, i16* %25, i64 %idxprom21, !dbg !11136
  %26 = load i16, i16* %arrayidx22, align 2, !dbg !11136
  %conv23 = zext i16 %26 to i32, !dbg !11136
  %sub24 = sub nsw i32 4095, %conv23, !dbg !11137
  %27 = load i32, i32* %j, align 4, !dbg !11138
  %idxprom25 = sext i32 %27 to i64, !dbg !11139
  %28 = load i16*, i16** %bottom, align 8, !dbg !11139
  %arrayidx26 = getelementptr inbounds i16, i16* %28, i64 %idxprom25, !dbg !11139
  %29 = load i16, i16* %arrayidx26, align 2, !dbg !11139
  %conv27 = zext i16 %29 to i32, !dbg !11139
  %sub28 = sub nsw i32 %sub24, %conv27, !dbg !11140
  br label %cond.end, !dbg !11141

cond.false:                                       ; preds = %for.body9
  %30 = load i32, i32* %j, align 4, !dbg !11142
  %idxprom29 = sext i32 %30 to i64, !dbg !11144
  %31 = load i16*, i16** %top, align 8, !dbg !11144
  %arrayidx30 = getelementptr inbounds i16, i16* %31, i64 %idxprom29, !dbg !11144
  %32 = load i16, i16* %arrayidx30, align 2, !dbg !11144
  %conv31 = zext i16 %32 to i32, !dbg !11144
  %sub32 = sub nsw i32 4095, %conv31, !dbg !11145
  %33 = load i32, i32* %j, align 4, !dbg !11146
  %idxprom33 = sext i32 %33 to i64, !dbg !11147
  %34 = load i16*, i16** %bottom, align 8, !dbg !11147
  %arrayidx34 = getelementptr inbounds i16, i16* %34, i64 %idxprom33, !dbg !11147
  %35 = load i16, i16* %arrayidx34, align 2, !dbg !11147
  %conv35 = zext i16 %35 to i32, !dbg !11147
  %sub36 = sub nsw i32 %sub32, %conv35, !dbg !11148
  %sub37 = sub nsw i32 0, %sub36, !dbg !11149
  br label %cond.end, !dbg !11150

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub28, %cond.true ], [ %sub37, %cond.false ], !dbg !11151
  %36 = load i32, i32* %j, align 4, !dbg !11153
  %idxprom38 = sext i32 %36 to i64, !dbg !11154
  %37 = load i16*, i16** %top, align 8, !dbg !11154
  %arrayidx39 = getelementptr inbounds i16, i16* %37, i64 %idxprom38, !dbg !11154
  %38 = load i16, i16* %arrayidx39, align 2, !dbg !11154
  %conv40 = zext i16 %38 to i32, !dbg !11154
  %sub41 = sub nsw i32 %cond, %conv40, !dbg !11155
  %conv42 = sitofp i32 %sub41 to double, !dbg !11156
  %39 = load double, double* %opacity, align 8, !dbg !11157
  %mul = fmul double %conv42, %39, !dbg !11158
  %add = fadd double %conv11, %mul, !dbg !11159
  %conv43 = fptoui double %add to i16, !dbg !11160
  %40 = load i32, i32* %j, align 4, !dbg !11161
  %idxprom44 = sext i32 %40 to i64, !dbg !11162
  %41 = load i16*, i16** %dst, align 8, !dbg !11162
  %arrayidx45 = getelementptr inbounds i16, i16* %41, i64 %idxprom44, !dbg !11162
  store i16 %conv43, i16* %arrayidx45, align 2, !dbg !11163
  br label %for.inc, !dbg !11164

for.inc:                                          ; preds = %cond.end
  %42 = load i32, i32* %j, align 4, !dbg !11165
  %inc = add nsw i32 %42, 1, !dbg !11165
  store i32 %inc, i32* %j, align 4, !dbg !11165
  br label %for.cond5, !dbg !11167, !llvm.loop !11168

for.end:                                          ; preds = %for.cond5
  %43 = load i64, i64* %dst_linesize.addr, align 8, !dbg !11170
  %44 = load i16*, i16** %dst, align 8, !dbg !11172
  %add.ptr = getelementptr inbounds i16, i16* %44, i64 %43, !dbg !11172
  store i16* %add.ptr, i16** %dst, align 8, !dbg !11172
  %45 = load i64, i64* %top_linesize.addr, align 8, !dbg !11173
  %46 = load i16*, i16** %top, align 8, !dbg !11174
  %add.ptr46 = getelementptr inbounds i16, i16* %46, i64 %45, !dbg !11174
  store i16* %add.ptr46, i16** %top, align 8, !dbg !11174
  %47 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !11175
  %48 = load i16*, i16** %bottom, align 8, !dbg !11176
  %add.ptr47 = getelementptr inbounds i16, i16* %48, i64 %47, !dbg !11176
  store i16* %add.ptr47, i16** %bottom, align 8, !dbg !11176
  br label %for.inc48, !dbg !11177

for.inc48:                                        ; preds = %for.end
  %49 = load i32, i32* %i, align 4, !dbg !11178
  %inc49 = add nsw i32 %49, 1, !dbg !11178
  store i32 %inc49, i32* %i, align 4, !dbg !11178
  br label %for.cond, !dbg !11180, !llvm.loop !11181

for.end50:                                        ; preds = %for.cond
  ret void, !dbg !11183
}

; Function Attrs: nounwind uwtable
define internal void @blend_freeze_12bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !11185 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !11186, metadata !905), !dbg !11187
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !11188, metadata !905), !dbg !11189
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !11190, metadata !905), !dbg !11191
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !11192, metadata !905), !dbg !11193
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !11194, metadata !905), !dbg !11195
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !11196, metadata !905), !dbg !11197
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !11198, metadata !905), !dbg !11199
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !11200, metadata !905), !dbg !11201
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !11202, metadata !905), !dbg !11203
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !11204, metadata !905), !dbg !11205
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !11206, metadata !905), !dbg !11207
  call void @llvm.dbg.declare(metadata i16** %top, metadata !11208, metadata !905), !dbg !11209
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !11210
  %1 = bitcast i8* %0 to i16*, !dbg !11211
  store i16* %1, i16** %top, align 8, !dbg !11209
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !11212, metadata !905), !dbg !11213
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !11214
  %3 = bitcast i8* %2 to i16*, !dbg !11215
  store i16* %3, i16** %bottom, align 8, !dbg !11213
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !11216, metadata !905), !dbg !11217
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !11218
  %5 = bitcast i8* %4 to i16*, !dbg !11219
  store i16* %5, i16** %dst, align 8, !dbg !11217
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !11220, metadata !905), !dbg !11221
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !11222
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !11223
  %7 = load double, double* %opacity1, align 8, !dbg !11223
  store double %7, double* %opacity, align 8, !dbg !11221
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11224, metadata !905), !dbg !11225
  call void @llvm.dbg.declare(metadata i32* %j, metadata !11226, metadata !905), !dbg !11227
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !11228
  %div = sdiv i64 %8, 2, !dbg !11228
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !11228
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !11229
  %div2 = sdiv i64 %9, 2, !dbg !11229
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !11229
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !11230
  %div3 = sdiv i64 %10, 2, !dbg !11230
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !11230
  store i32 0, i32* %i, align 4, !dbg !11231
  br label %for.cond, !dbg !11233

for.cond:                                         ; preds = %for.inc59, %entry
  %11 = load i32, i32* %i, align 4, !dbg !11234
  %conv = sext i32 %11 to i64, !dbg !11234
  %12 = load i64, i64* %height.addr, align 8, !dbg !11237
  %cmp = icmp slt i64 %conv, %12, !dbg !11238
  br i1 %cmp, label %for.body, label %for.end61, !dbg !11239

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !11240
  br label %for.cond5, !dbg !11244

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !11245
  %conv6 = sext i32 %13 to i64, !dbg !11245
  %14 = load i64, i64* %width.addr, align 8, !dbg !11248
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !11249
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !11250

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !11251
  %idxprom = sext i32 %15 to i64, !dbg !11254
  %16 = load i16*, i16** %top, align 8, !dbg !11254
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !11254
  %17 = load i16, i16* %arrayidx, align 2, !dbg !11254
  %conv10 = zext i16 %17 to i32, !dbg !11254
  %conv11 = sitofp i32 %conv10 to double, !dbg !11254
  %18 = load i32, i32* %j, align 4, !dbg !11255
  %idxprom12 = sext i32 %18 to i64, !dbg !11256
  %19 = load i16*, i16** %bottom, align 8, !dbg !11256
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !11256
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !11256
  %conv14 = zext i16 %20 to i32, !dbg !11256
  %cmp15 = icmp eq i32 %conv14, 0, !dbg !11257
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !11258

cond.true:                                        ; preds = %for.body9
  br label %cond.end46, !dbg !11259

cond.false:                                       ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !11261
  %idxprom17 = sext i32 %21 to i64, !dbg !11263
  %22 = load i16*, i16** %top, align 8, !dbg !11263
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !11263
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !11263
  %conv19 = zext i16 %23 to i32, !dbg !11263
  %sub = sub nsw i32 4095, %conv19, !dbg !11264
  %24 = load i32, i32* %j, align 4, !dbg !11265
  %idxprom20 = sext i32 %24 to i64, !dbg !11266
  %25 = load i16*, i16** %top, align 8, !dbg !11266
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !11266
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !11266
  %conv22 = zext i16 %26 to i32, !dbg !11266
  %sub23 = sub nsw i32 4095, %conv22, !dbg !11267
  %mul = mul nsw i32 %sub, %sub23, !dbg !11268
  %27 = load i32, i32* %j, align 4, !dbg !11269
  %idxprom24 = sext i32 %27 to i64, !dbg !11270
  %28 = load i16*, i16** %bottom, align 8, !dbg !11270
  %arrayidx25 = getelementptr inbounds i16, i16* %28, i64 %idxprom24, !dbg !11270
  %29 = load i16, i16* %arrayidx25, align 2, !dbg !11270
  %conv26 = zext i16 %29 to i32, !dbg !11270
  %div27 = sdiv i32 %mul, %conv26, !dbg !11271
  %cmp28 = icmp sgt i32 %div27, 4095, !dbg !11272
  br i1 %cmp28, label %cond.true30, label %cond.false31, !dbg !11273

cond.true30:                                      ; preds = %cond.false
  br label %cond.end, !dbg !11274

cond.false31:                                     ; preds = %cond.false
  %30 = load i32, i32* %j, align 4, !dbg !11276
  %idxprom32 = sext i32 %30 to i64, !dbg !11278
  %31 = load i16*, i16** %top, align 8, !dbg !11278
  %arrayidx33 = getelementptr inbounds i16, i16* %31, i64 %idxprom32, !dbg !11278
  %32 = load i16, i16* %arrayidx33, align 2, !dbg !11278
  %conv34 = zext i16 %32 to i32, !dbg !11278
  %sub35 = sub nsw i32 4095, %conv34, !dbg !11279
  %33 = load i32, i32* %j, align 4, !dbg !11280
  %idxprom36 = sext i32 %33 to i64, !dbg !11281
  %34 = load i16*, i16** %top, align 8, !dbg !11281
  %arrayidx37 = getelementptr inbounds i16, i16* %34, i64 %idxprom36, !dbg !11281
  %35 = load i16, i16* %arrayidx37, align 2, !dbg !11281
  %conv38 = zext i16 %35 to i32, !dbg !11281
  %sub39 = sub nsw i32 4095, %conv38, !dbg !11282
  %mul40 = mul nsw i32 %sub35, %sub39, !dbg !11283
  %36 = load i32, i32* %j, align 4, !dbg !11284
  %idxprom41 = sext i32 %36 to i64, !dbg !11285
  %37 = load i16*, i16** %bottom, align 8, !dbg !11285
  %arrayidx42 = getelementptr inbounds i16, i16* %37, i64 %idxprom41, !dbg !11285
  %38 = load i16, i16* %arrayidx42, align 2, !dbg !11285
  %conv43 = zext i16 %38 to i32, !dbg !11285
  %div44 = sdiv i32 %mul40, %conv43, !dbg !11286
  br label %cond.end, !dbg !11287

cond.end:                                         ; preds = %cond.false31, %cond.true30
  %cond = phi i32 [ 4095, %cond.true30 ], [ %div44, %cond.false31 ], !dbg !11288
  %sub45 = sub nsw i32 4095, %cond, !dbg !11290
  br label %cond.end46, !dbg !11291

cond.end46:                                       ; preds = %cond.end, %cond.true
  %cond47 = phi i32 [ 0, %cond.true ], [ %sub45, %cond.end ], !dbg !11292
  %39 = load i32, i32* %j, align 4, !dbg !11294
  %idxprom48 = sext i32 %39 to i64, !dbg !11295
  %40 = load i16*, i16** %top, align 8, !dbg !11295
  %arrayidx49 = getelementptr inbounds i16, i16* %40, i64 %idxprom48, !dbg !11295
  %41 = load i16, i16* %arrayidx49, align 2, !dbg !11295
  %conv50 = zext i16 %41 to i32, !dbg !11295
  %sub51 = sub nsw i32 %cond47, %conv50, !dbg !11296
  %conv52 = sitofp i32 %sub51 to double, !dbg !11297
  %42 = load double, double* %opacity, align 8, !dbg !11298
  %mul53 = fmul double %conv52, %42, !dbg !11299
  %add = fadd double %conv11, %mul53, !dbg !11300
  %conv54 = fptoui double %add to i16, !dbg !11301
  %43 = load i32, i32* %j, align 4, !dbg !11302
  %idxprom55 = sext i32 %43 to i64, !dbg !11303
  %44 = load i16*, i16** %dst, align 8, !dbg !11303
  %arrayidx56 = getelementptr inbounds i16, i16* %44, i64 %idxprom55, !dbg !11303
  store i16 %conv54, i16* %arrayidx56, align 2, !dbg !11304
  br label %for.inc, !dbg !11305

for.inc:                                          ; preds = %cond.end46
  %45 = load i32, i32* %j, align 4, !dbg !11306
  %inc = add nsw i32 %45, 1, !dbg !11306
  store i32 %inc, i32* %j, align 4, !dbg !11306
  br label %for.cond5, !dbg !11308, !llvm.loop !11309

for.end:                                          ; preds = %for.cond5
  %46 = load i64, i64* %dst_linesize.addr, align 8, !dbg !11311
  %47 = load i16*, i16** %dst, align 8, !dbg !11313
  %add.ptr = getelementptr inbounds i16, i16* %47, i64 %46, !dbg !11313
  store i16* %add.ptr, i16** %dst, align 8, !dbg !11313
  %48 = load i64, i64* %top_linesize.addr, align 8, !dbg !11314
  %49 = load i16*, i16** %top, align 8, !dbg !11315
  %add.ptr57 = getelementptr inbounds i16, i16* %49, i64 %48, !dbg !11315
  store i16* %add.ptr57, i16** %top, align 8, !dbg !11315
  %50 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !11316
  %51 = load i16*, i16** %bottom, align 8, !dbg !11317
  %add.ptr58 = getelementptr inbounds i16, i16* %51, i64 %50, !dbg !11317
  store i16* %add.ptr58, i16** %bottom, align 8, !dbg !11317
  br label %for.inc59, !dbg !11318

for.inc59:                                        ; preds = %for.end
  %52 = load i32, i32* %i, align 4, !dbg !11319
  %inc60 = add nsw i32 %52, 1, !dbg !11319
  store i32 %inc60, i32* %i, align 4, !dbg !11319
  br label %for.cond, !dbg !11321, !llvm.loop !11322

for.end61:                                        ; preds = %for.cond
  ret void, !dbg !11324
}

; Function Attrs: nounwind uwtable
define internal void @blend_glow_12bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !11326 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !11327, metadata !905), !dbg !11328
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !11329, metadata !905), !dbg !11330
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !11331, metadata !905), !dbg !11332
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !11333, metadata !905), !dbg !11334
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !11335, metadata !905), !dbg !11336
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !11337, metadata !905), !dbg !11338
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !11339, metadata !905), !dbg !11340
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !11341, metadata !905), !dbg !11342
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !11343, metadata !905), !dbg !11344
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !11345, metadata !905), !dbg !11346
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !11347, metadata !905), !dbg !11348
  call void @llvm.dbg.declare(metadata i16** %top, metadata !11349, metadata !905), !dbg !11350
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !11351
  %1 = bitcast i8* %0 to i16*, !dbg !11352
  store i16* %1, i16** %top, align 8, !dbg !11350
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !11353, metadata !905), !dbg !11354
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !11355
  %3 = bitcast i8* %2 to i16*, !dbg !11356
  store i16* %3, i16** %bottom, align 8, !dbg !11354
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !11357, metadata !905), !dbg !11358
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !11359
  %5 = bitcast i8* %4 to i16*, !dbg !11360
  store i16* %5, i16** %dst, align 8, !dbg !11358
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !11361, metadata !905), !dbg !11362
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !11363
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !11364
  %7 = load double, double* %opacity1, align 8, !dbg !11364
  store double %7, double* %opacity, align 8, !dbg !11362
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11365, metadata !905), !dbg !11366
  call void @llvm.dbg.declare(metadata i32* %j, metadata !11367, metadata !905), !dbg !11368
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !11369
  %div = sdiv i64 %8, 2, !dbg !11369
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !11369
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !11370
  %div2 = sdiv i64 %9, 2, !dbg !11370
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !11370
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !11371
  %div3 = sdiv i64 %10, 2, !dbg !11371
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !11371
  store i32 0, i32* %i, align 4, !dbg !11372
  br label %for.cond, !dbg !11374

for.cond:                                         ; preds = %for.inc59, %entry
  %11 = load i32, i32* %i, align 4, !dbg !11375
  %conv = sext i32 %11 to i64, !dbg !11375
  %12 = load i64, i64* %height.addr, align 8, !dbg !11378
  %cmp = icmp slt i64 %conv, %12, !dbg !11379
  br i1 %cmp, label %for.body, label %for.end61, !dbg !11380

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !11381
  br label %for.cond5, !dbg !11385

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !11386
  %conv6 = sext i32 %13 to i64, !dbg !11386
  %14 = load i64, i64* %width.addr, align 8, !dbg !11389
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !11390
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !11391

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !11392
  %idxprom = sext i32 %15 to i64, !dbg !11395
  %16 = load i16*, i16** %top, align 8, !dbg !11395
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !11395
  %17 = load i16, i16* %arrayidx, align 2, !dbg !11395
  %conv10 = zext i16 %17 to i32, !dbg !11395
  %conv11 = sitofp i32 %conv10 to double, !dbg !11395
  %18 = load i32, i32* %j, align 4, !dbg !11396
  %idxprom12 = sext i32 %18 to i64, !dbg !11397
  %19 = load i16*, i16** %top, align 8, !dbg !11397
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !11397
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !11397
  %conv14 = zext i16 %20 to i32, !dbg !11397
  %cmp15 = icmp eq i32 %conv14, 4095, !dbg !11398
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !11399

cond.true:                                        ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !11400
  %idxprom17 = sext i32 %21 to i64, !dbg !11402
  %22 = load i16*, i16** %top, align 8, !dbg !11402
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !11402
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !11402
  %conv19 = zext i16 %23 to i32, !dbg !11402
  br label %cond.end46, !dbg !11403

cond.false:                                       ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !11404
  %idxprom20 = sext i32 %24 to i64, !dbg !11406
  %25 = load i16*, i16** %bottom, align 8, !dbg !11406
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !11406
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !11406
  %conv22 = zext i16 %26 to i32, !dbg !11406
  %27 = load i32, i32* %j, align 4, !dbg !11407
  %idxprom23 = sext i32 %27 to i64, !dbg !11408
  %28 = load i16*, i16** %bottom, align 8, !dbg !11408
  %arrayidx24 = getelementptr inbounds i16, i16* %28, i64 %idxprom23, !dbg !11408
  %29 = load i16, i16* %arrayidx24, align 2, !dbg !11408
  %conv25 = zext i16 %29 to i32, !dbg !11408
  %mul = mul nsw i32 %conv22, %conv25, !dbg !11409
  %30 = load i32, i32* %j, align 4, !dbg !11410
  %idxprom26 = sext i32 %30 to i64, !dbg !11411
  %31 = load i16*, i16** %top, align 8, !dbg !11411
  %arrayidx27 = getelementptr inbounds i16, i16* %31, i64 %idxprom26, !dbg !11411
  %32 = load i16, i16* %arrayidx27, align 2, !dbg !11411
  %conv28 = zext i16 %32 to i32, !dbg !11411
  %sub = sub nsw i32 4095, %conv28, !dbg !11412
  %div29 = sdiv i32 %mul, %sub, !dbg !11413
  %cmp30 = icmp sgt i32 4095, %div29, !dbg !11414
  br i1 %cmp30, label %cond.true32, label %cond.false45, !dbg !11415

cond.true32:                                      ; preds = %cond.false
  %33 = load i32, i32* %j, align 4, !dbg !11416
  %idxprom33 = sext i32 %33 to i64, !dbg !11418
  %34 = load i16*, i16** %bottom, align 8, !dbg !11418
  %arrayidx34 = getelementptr inbounds i16, i16* %34, i64 %idxprom33, !dbg !11418
  %35 = load i16, i16* %arrayidx34, align 2, !dbg !11418
  %conv35 = zext i16 %35 to i32, !dbg !11418
  %36 = load i32, i32* %j, align 4, !dbg !11419
  %idxprom36 = sext i32 %36 to i64, !dbg !11420
  %37 = load i16*, i16** %bottom, align 8, !dbg !11420
  %arrayidx37 = getelementptr inbounds i16, i16* %37, i64 %idxprom36, !dbg !11420
  %38 = load i16, i16* %arrayidx37, align 2, !dbg !11420
  %conv38 = zext i16 %38 to i32, !dbg !11420
  %mul39 = mul nsw i32 %conv35, %conv38, !dbg !11421
  %39 = load i32, i32* %j, align 4, !dbg !11422
  %idxprom40 = sext i32 %39 to i64, !dbg !11423
  %40 = load i16*, i16** %top, align 8, !dbg !11423
  %arrayidx41 = getelementptr inbounds i16, i16* %40, i64 %idxprom40, !dbg !11423
  %41 = load i16, i16* %arrayidx41, align 2, !dbg !11423
  %conv42 = zext i16 %41 to i32, !dbg !11423
  %sub43 = sub nsw i32 4095, %conv42, !dbg !11424
  %div44 = sdiv i32 %mul39, %sub43, !dbg !11425
  br label %cond.end, !dbg !11426

cond.false45:                                     ; preds = %cond.false
  br label %cond.end, !dbg !11427

cond.end:                                         ; preds = %cond.false45, %cond.true32
  %cond = phi i32 [ %div44, %cond.true32 ], [ 4095, %cond.false45 ], !dbg !11429
  br label %cond.end46, !dbg !11431

cond.end46:                                       ; preds = %cond.end, %cond.true
  %cond47 = phi i32 [ %conv19, %cond.true ], [ %cond, %cond.end ], !dbg !11432
  %42 = load i32, i32* %j, align 4, !dbg !11434
  %idxprom48 = sext i32 %42 to i64, !dbg !11435
  %43 = load i16*, i16** %top, align 8, !dbg !11435
  %arrayidx49 = getelementptr inbounds i16, i16* %43, i64 %idxprom48, !dbg !11435
  %44 = load i16, i16* %arrayidx49, align 2, !dbg !11435
  %conv50 = zext i16 %44 to i32, !dbg !11435
  %sub51 = sub nsw i32 %cond47, %conv50, !dbg !11436
  %conv52 = sitofp i32 %sub51 to double, !dbg !11437
  %45 = load double, double* %opacity, align 8, !dbg !11438
  %mul53 = fmul double %conv52, %45, !dbg !11439
  %add = fadd double %conv11, %mul53, !dbg !11440
  %conv54 = fptoui double %add to i16, !dbg !11441
  %46 = load i32, i32* %j, align 4, !dbg !11442
  %idxprom55 = sext i32 %46 to i64, !dbg !11443
  %47 = load i16*, i16** %dst, align 8, !dbg !11443
  %arrayidx56 = getelementptr inbounds i16, i16* %47, i64 %idxprom55, !dbg !11443
  store i16 %conv54, i16* %arrayidx56, align 2, !dbg !11444
  br label %for.inc, !dbg !11445

for.inc:                                          ; preds = %cond.end46
  %48 = load i32, i32* %j, align 4, !dbg !11446
  %inc = add nsw i32 %48, 1, !dbg !11446
  store i32 %inc, i32* %j, align 4, !dbg !11446
  br label %for.cond5, !dbg !11448, !llvm.loop !11449

for.end:                                          ; preds = %for.cond5
  %49 = load i64, i64* %dst_linesize.addr, align 8, !dbg !11451
  %50 = load i16*, i16** %dst, align 8, !dbg !11453
  %add.ptr = getelementptr inbounds i16, i16* %50, i64 %49, !dbg !11453
  store i16* %add.ptr, i16** %dst, align 8, !dbg !11453
  %51 = load i64, i64* %top_linesize.addr, align 8, !dbg !11454
  %52 = load i16*, i16** %top, align 8, !dbg !11455
  %add.ptr57 = getelementptr inbounds i16, i16* %52, i64 %51, !dbg !11455
  store i16* %add.ptr57, i16** %top, align 8, !dbg !11455
  %53 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !11456
  %54 = load i16*, i16** %bottom, align 8, !dbg !11457
  %add.ptr58 = getelementptr inbounds i16, i16* %54, i64 %53, !dbg !11457
  store i16* %add.ptr58, i16** %bottom, align 8, !dbg !11457
  br label %for.inc59, !dbg !11458

for.inc59:                                        ; preds = %for.end
  %55 = load i32, i32* %i, align 4, !dbg !11459
  %inc60 = add nsw i32 %55, 1, !dbg !11459
  store i32 %inc60, i32* %i, align 4, !dbg !11459
  br label %for.cond, !dbg !11461, !llvm.loop !11462

for.end61:                                        ; preds = %for.cond
  ret void, !dbg !11464
}

; Function Attrs: nounwind uwtable
define internal void @blend_hardlight_12bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !11466 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !11467, metadata !905), !dbg !11468
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !11469, metadata !905), !dbg !11470
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !11471, metadata !905), !dbg !11472
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !11473, metadata !905), !dbg !11474
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !11475, metadata !905), !dbg !11476
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !11477, metadata !905), !dbg !11478
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !11479, metadata !905), !dbg !11480
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !11481, metadata !905), !dbg !11482
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !11483, metadata !905), !dbg !11484
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !11485, metadata !905), !dbg !11486
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !11487, metadata !905), !dbg !11488
  call void @llvm.dbg.declare(metadata i16** %top, metadata !11489, metadata !905), !dbg !11490
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !11491
  %1 = bitcast i8* %0 to i16*, !dbg !11492
  store i16* %1, i16** %top, align 8, !dbg !11490
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !11493, metadata !905), !dbg !11494
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !11495
  %3 = bitcast i8* %2 to i16*, !dbg !11496
  store i16* %3, i16** %bottom, align 8, !dbg !11494
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !11497, metadata !905), !dbg !11498
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !11499
  %5 = bitcast i8* %4 to i16*, !dbg !11500
  store i16* %5, i16** %dst, align 8, !dbg !11498
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !11501, metadata !905), !dbg !11502
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !11503
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !11504
  %7 = load double, double* %opacity1, align 8, !dbg !11504
  store double %7, double* %opacity, align 8, !dbg !11502
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11505, metadata !905), !dbg !11506
  call void @llvm.dbg.declare(metadata i32* %j, metadata !11507, metadata !905), !dbg !11508
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !11509
  %div = sdiv i64 %8, 2, !dbg !11509
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !11509
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !11510
  %div2 = sdiv i64 %9, 2, !dbg !11510
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !11510
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !11511
  %div3 = sdiv i64 %10, 2, !dbg !11511
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !11511
  store i32 0, i32* %i, align 4, !dbg !11512
  br label %for.cond, !dbg !11514

for.cond:                                         ; preds = %for.inc47, %entry
  %11 = load i32, i32* %i, align 4, !dbg !11515
  %conv = sext i32 %11 to i64, !dbg !11515
  %12 = load i64, i64* %height.addr, align 8, !dbg !11518
  %cmp = icmp slt i64 %conv, %12, !dbg !11519
  br i1 %cmp, label %for.body, label %for.end49, !dbg !11520

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !11521
  br label %for.cond5, !dbg !11525

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !11526
  %conv6 = sext i32 %13 to i64, !dbg !11526
  %14 = load i64, i64* %width.addr, align 8, !dbg !11529
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !11530
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !11531

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !11532
  %idxprom = sext i32 %15 to i64, !dbg !11535
  %16 = load i16*, i16** %top, align 8, !dbg !11535
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !11535
  %17 = load i16, i16* %arrayidx, align 2, !dbg !11535
  %conv10 = zext i16 %17 to i32, !dbg !11535
  %conv11 = sitofp i32 %conv10 to double, !dbg !11535
  %18 = load i32, i32* %j, align 4, !dbg !11536
  %idxprom12 = sext i32 %18 to i64, !dbg !11537
  %19 = load i16*, i16** %bottom, align 8, !dbg !11537
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !11537
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !11537
  %conv14 = zext i16 %20 to i32, !dbg !11537
  %cmp15 = icmp slt i32 %conv14, 2048, !dbg !11538
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !11539

cond.true:                                        ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !11540
  %idxprom17 = sext i32 %21 to i64, !dbg !11542
  %22 = load i16*, i16** %bottom, align 8, !dbg !11542
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !11542
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !11542
  %conv19 = zext i16 %23 to i32, !dbg !11543
  %24 = load i32, i32* %j, align 4, !dbg !11544
  %idxprom20 = sext i32 %24 to i64, !dbg !11545
  %25 = load i16*, i16** %top, align 8, !dbg !11545
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !11545
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !11545
  %conv22 = zext i16 %26 to i32, !dbg !11546
  %mul = mul nsw i32 %conv19, %conv22, !dbg !11547
  %div23 = sdiv i32 %mul, 4095, !dbg !11548
  %mul24 = mul nsw i32 2, %div23, !dbg !11549
  br label %cond.end, !dbg !11550

cond.false:                                       ; preds = %for.body9
  %27 = load i32, i32* %j, align 4, !dbg !11551
  %idxprom25 = sext i32 %27 to i64, !dbg !11553
  %28 = load i16*, i16** %bottom, align 8, !dbg !11553
  %arrayidx26 = getelementptr inbounds i16, i16* %28, i64 %idxprom25, !dbg !11553
  %29 = load i16, i16* %arrayidx26, align 2, !dbg !11553
  %conv27 = zext i16 %29 to i32, !dbg !11554
  %sub = sub nsw i32 4095, %conv27, !dbg !11555
  %30 = load i32, i32* %j, align 4, !dbg !11556
  %idxprom28 = sext i32 %30 to i64, !dbg !11557
  %31 = load i16*, i16** %top, align 8, !dbg !11557
  %arrayidx29 = getelementptr inbounds i16, i16* %31, i64 %idxprom28, !dbg !11557
  %32 = load i16, i16* %arrayidx29, align 2, !dbg !11557
  %conv30 = zext i16 %32 to i32, !dbg !11558
  %sub31 = sub nsw i32 4095, %conv30, !dbg !11559
  %mul32 = mul nsw i32 %sub, %sub31, !dbg !11560
  %div33 = sdiv i32 %mul32, 4095, !dbg !11561
  %mul34 = mul nsw i32 2, %div33, !dbg !11562
  %sub35 = sub nsw i32 4095, %mul34, !dbg !11563
  br label %cond.end, !dbg !11564

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %mul24, %cond.true ], [ %sub35, %cond.false ], !dbg !11565
  %33 = load i32, i32* %j, align 4, !dbg !11567
  %idxprom36 = sext i32 %33 to i64, !dbg !11568
  %34 = load i16*, i16** %top, align 8, !dbg !11568
  %arrayidx37 = getelementptr inbounds i16, i16* %34, i64 %idxprom36, !dbg !11568
  %35 = load i16, i16* %arrayidx37, align 2, !dbg !11568
  %conv38 = zext i16 %35 to i32, !dbg !11568
  %sub39 = sub nsw i32 %cond, %conv38, !dbg !11569
  %conv40 = sitofp i32 %sub39 to double, !dbg !11570
  %36 = load double, double* %opacity, align 8, !dbg !11571
  %mul41 = fmul double %conv40, %36, !dbg !11572
  %add = fadd double %conv11, %mul41, !dbg !11573
  %conv42 = fptoui double %add to i16, !dbg !11574
  %37 = load i32, i32* %j, align 4, !dbg !11575
  %idxprom43 = sext i32 %37 to i64, !dbg !11576
  %38 = load i16*, i16** %dst, align 8, !dbg !11576
  %arrayidx44 = getelementptr inbounds i16, i16* %38, i64 %idxprom43, !dbg !11576
  store i16 %conv42, i16* %arrayidx44, align 2, !dbg !11577
  br label %for.inc, !dbg !11578

for.inc:                                          ; preds = %cond.end
  %39 = load i32, i32* %j, align 4, !dbg !11579
  %inc = add nsw i32 %39, 1, !dbg !11579
  store i32 %inc, i32* %j, align 4, !dbg !11579
  br label %for.cond5, !dbg !11581, !llvm.loop !11582

for.end:                                          ; preds = %for.cond5
  %40 = load i64, i64* %dst_linesize.addr, align 8, !dbg !11584
  %41 = load i16*, i16** %dst, align 8, !dbg !11586
  %add.ptr = getelementptr inbounds i16, i16* %41, i64 %40, !dbg !11586
  store i16* %add.ptr, i16** %dst, align 8, !dbg !11586
  %42 = load i64, i64* %top_linesize.addr, align 8, !dbg !11587
  %43 = load i16*, i16** %top, align 8, !dbg !11588
  %add.ptr45 = getelementptr inbounds i16, i16* %43, i64 %42, !dbg !11588
  store i16* %add.ptr45, i16** %top, align 8, !dbg !11588
  %44 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !11589
  %45 = load i16*, i16** %bottom, align 8, !dbg !11590
  %add.ptr46 = getelementptr inbounds i16, i16* %45, i64 %44, !dbg !11590
  store i16* %add.ptr46, i16** %bottom, align 8, !dbg !11590
  br label %for.inc47, !dbg !11591

for.inc47:                                        ; preds = %for.end
  %46 = load i32, i32* %i, align 4, !dbg !11592
  %inc48 = add nsw i32 %46, 1, !dbg !11592
  store i32 %inc48, i32* %i, align 4, !dbg !11592
  br label %for.cond, !dbg !11594, !llvm.loop !11595

for.end49:                                        ; preds = %for.cond
  ret void, !dbg !11597
}

; Function Attrs: nounwind uwtable
define internal void @blend_hardmix_12bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !11599 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !11600, metadata !905), !dbg !11601
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !11602, metadata !905), !dbg !11603
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !11604, metadata !905), !dbg !11605
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !11606, metadata !905), !dbg !11607
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !11608, metadata !905), !dbg !11609
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !11610, metadata !905), !dbg !11611
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !11612, metadata !905), !dbg !11613
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !11614, metadata !905), !dbg !11615
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !11616, metadata !905), !dbg !11617
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !11618, metadata !905), !dbg !11619
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !11620, metadata !905), !dbg !11621
  call void @llvm.dbg.declare(metadata i16** %top, metadata !11622, metadata !905), !dbg !11623
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !11624
  %1 = bitcast i8* %0 to i16*, !dbg !11625
  store i16* %1, i16** %top, align 8, !dbg !11623
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !11626, metadata !905), !dbg !11627
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !11628
  %3 = bitcast i8* %2 to i16*, !dbg !11629
  store i16* %3, i16** %bottom, align 8, !dbg !11627
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !11630, metadata !905), !dbg !11631
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !11632
  %5 = bitcast i8* %4 to i16*, !dbg !11633
  store i16* %5, i16** %dst, align 8, !dbg !11631
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !11634, metadata !905), !dbg !11635
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !11636
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !11637
  %7 = load double, double* %opacity1, align 8, !dbg !11637
  store double %7, double* %opacity, align 8, !dbg !11635
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11638, metadata !905), !dbg !11639
  call void @llvm.dbg.declare(metadata i32* %j, metadata !11640, metadata !905), !dbg !11641
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !11642
  %div = sdiv i64 %8, 2, !dbg !11642
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !11642
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !11643
  %div2 = sdiv i64 %9, 2, !dbg !11643
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !11643
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !11644
  %div3 = sdiv i64 %10, 2, !dbg !11644
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !11644
  store i32 0, i32* %i, align 4, !dbg !11645
  br label %for.cond, !dbg !11647

for.cond:                                         ; preds = %for.inc30, %entry
  %11 = load i32, i32* %i, align 4, !dbg !11648
  %conv = sext i32 %11 to i64, !dbg !11648
  %12 = load i64, i64* %height.addr, align 8, !dbg !11651
  %cmp = icmp slt i64 %conv, %12, !dbg !11652
  br i1 %cmp, label %for.body, label %for.end32, !dbg !11653

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !11654
  br label %for.cond5, !dbg !11658

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !11659
  %conv6 = sext i32 %13 to i64, !dbg !11659
  %14 = load i64, i64* %width.addr, align 8, !dbg !11662
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !11663
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !11664

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !11665
  %idxprom = sext i32 %15 to i64, !dbg !11668
  %16 = load i16*, i16** %top, align 8, !dbg !11668
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !11668
  %17 = load i16, i16* %arrayidx, align 2, !dbg !11668
  %conv10 = zext i16 %17 to i32, !dbg !11668
  %conv11 = sitofp i32 %conv10 to double, !dbg !11668
  %18 = load i32, i32* %j, align 4, !dbg !11669
  %idxprom12 = sext i32 %18 to i64, !dbg !11670
  %19 = load i16*, i16** %top, align 8, !dbg !11670
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !11670
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !11670
  %conv14 = zext i16 %20 to i32, !dbg !11670
  %21 = load i32, i32* %j, align 4, !dbg !11671
  %idxprom15 = sext i32 %21 to i64, !dbg !11672
  %22 = load i16*, i16** %bottom, align 8, !dbg !11672
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !11672
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !11672
  %conv17 = zext i16 %23 to i32, !dbg !11672
  %sub = sub nsw i32 4095, %conv17, !dbg !11673
  %cmp18 = icmp slt i32 %conv14, %sub, !dbg !11674
  %cond = select i1 %cmp18, i32 0, i32 4095, !dbg !11675
  %24 = load i32, i32* %j, align 4, !dbg !11676
  %idxprom20 = sext i32 %24 to i64, !dbg !11677
  %25 = load i16*, i16** %top, align 8, !dbg !11677
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !11677
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !11677
  %conv22 = zext i16 %26 to i32, !dbg !11677
  %sub23 = sub nsw i32 %cond, %conv22, !dbg !11678
  %conv24 = sitofp i32 %sub23 to double, !dbg !11679
  %27 = load double, double* %opacity, align 8, !dbg !11680
  %mul = fmul double %conv24, %27, !dbg !11681
  %add = fadd double %conv11, %mul, !dbg !11682
  %conv25 = fptoui double %add to i16, !dbg !11668
  %28 = load i32, i32* %j, align 4, !dbg !11683
  %idxprom26 = sext i32 %28 to i64, !dbg !11684
  %29 = load i16*, i16** %dst, align 8, !dbg !11684
  %arrayidx27 = getelementptr inbounds i16, i16* %29, i64 %idxprom26, !dbg !11684
  store i16 %conv25, i16* %arrayidx27, align 2, !dbg !11685
  br label %for.inc, !dbg !11686

for.inc:                                          ; preds = %for.body9
  %30 = load i32, i32* %j, align 4, !dbg !11687
  %inc = add nsw i32 %30, 1, !dbg !11687
  store i32 %inc, i32* %j, align 4, !dbg !11687
  br label %for.cond5, !dbg !11689, !llvm.loop !11690

for.end:                                          ; preds = %for.cond5
  %31 = load i64, i64* %dst_linesize.addr, align 8, !dbg !11692
  %32 = load i16*, i16** %dst, align 8, !dbg !11694
  %add.ptr = getelementptr inbounds i16, i16* %32, i64 %31, !dbg !11694
  store i16* %add.ptr, i16** %dst, align 8, !dbg !11694
  %33 = load i64, i64* %top_linesize.addr, align 8, !dbg !11695
  %34 = load i16*, i16** %top, align 8, !dbg !11696
  %add.ptr28 = getelementptr inbounds i16, i16* %34, i64 %33, !dbg !11696
  store i16* %add.ptr28, i16** %top, align 8, !dbg !11696
  %35 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !11697
  %36 = load i16*, i16** %bottom, align 8, !dbg !11698
  %add.ptr29 = getelementptr inbounds i16, i16* %36, i64 %35, !dbg !11698
  store i16* %add.ptr29, i16** %bottom, align 8, !dbg !11698
  br label %for.inc30, !dbg !11699

for.inc30:                                        ; preds = %for.end
  %37 = load i32, i32* %i, align 4, !dbg !11700
  %inc31 = add nsw i32 %37, 1, !dbg !11700
  store i32 %inc31, i32* %i, align 4, !dbg !11700
  br label %for.cond, !dbg !11702, !llvm.loop !11703

for.end32:                                        ; preds = %for.cond
  ret void, !dbg !11705
}

; Function Attrs: nounwind uwtable
define internal void @blend_heat_12bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !11707 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !11708, metadata !905), !dbg !11709
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !11710, metadata !905), !dbg !11711
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !11712, metadata !905), !dbg !11713
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !11714, metadata !905), !dbg !11715
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !11716, metadata !905), !dbg !11717
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !11718, metadata !905), !dbg !11719
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !11720, metadata !905), !dbg !11721
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !11722, metadata !905), !dbg !11723
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !11724, metadata !905), !dbg !11725
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !11726, metadata !905), !dbg !11727
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !11728, metadata !905), !dbg !11729
  call void @llvm.dbg.declare(metadata i16** %top, metadata !11730, metadata !905), !dbg !11731
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !11732
  %1 = bitcast i8* %0 to i16*, !dbg !11733
  store i16* %1, i16** %top, align 8, !dbg !11731
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !11734, metadata !905), !dbg !11735
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !11736
  %3 = bitcast i8* %2 to i16*, !dbg !11737
  store i16* %3, i16** %bottom, align 8, !dbg !11735
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !11738, metadata !905), !dbg !11739
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !11740
  %5 = bitcast i8* %4 to i16*, !dbg !11741
  store i16* %5, i16** %dst, align 8, !dbg !11739
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !11742, metadata !905), !dbg !11743
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !11744
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !11745
  %7 = load double, double* %opacity1, align 8, !dbg !11745
  store double %7, double* %opacity, align 8, !dbg !11743
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11746, metadata !905), !dbg !11747
  call void @llvm.dbg.declare(metadata i32* %j, metadata !11748, metadata !905), !dbg !11749
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !11750
  %div = sdiv i64 %8, 2, !dbg !11750
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !11750
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !11751
  %div2 = sdiv i64 %9, 2, !dbg !11751
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !11751
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !11752
  %div3 = sdiv i64 %10, 2, !dbg !11752
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !11752
  store i32 0, i32* %i, align 4, !dbg !11753
  br label %for.cond, !dbg !11755

for.cond:                                         ; preds = %for.inc59, %entry
  %11 = load i32, i32* %i, align 4, !dbg !11756
  %conv = sext i32 %11 to i64, !dbg !11756
  %12 = load i64, i64* %height.addr, align 8, !dbg !11759
  %cmp = icmp slt i64 %conv, %12, !dbg !11760
  br i1 %cmp, label %for.body, label %for.end61, !dbg !11761

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !11762
  br label %for.cond5, !dbg !11766

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !11767
  %conv6 = sext i32 %13 to i64, !dbg !11767
  %14 = load i64, i64* %width.addr, align 8, !dbg !11770
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !11771
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !11772

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !11773
  %idxprom = sext i32 %15 to i64, !dbg !11776
  %16 = load i16*, i16** %top, align 8, !dbg !11776
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !11776
  %17 = load i16, i16* %arrayidx, align 2, !dbg !11776
  %conv10 = zext i16 %17 to i32, !dbg !11776
  %conv11 = sitofp i32 %conv10 to double, !dbg !11776
  %18 = load i32, i32* %j, align 4, !dbg !11777
  %idxprom12 = sext i32 %18 to i64, !dbg !11778
  %19 = load i16*, i16** %top, align 8, !dbg !11778
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !11778
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !11778
  %conv14 = zext i16 %20 to i32, !dbg !11778
  %cmp15 = icmp eq i32 %conv14, 0, !dbg !11779
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !11780

cond.true:                                        ; preds = %for.body9
  br label %cond.end46, !dbg !11781

cond.false:                                       ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !11783
  %idxprom17 = sext i32 %21 to i64, !dbg !11785
  %22 = load i16*, i16** %bottom, align 8, !dbg !11785
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !11785
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !11785
  %conv19 = zext i16 %23 to i32, !dbg !11785
  %sub = sub nsw i32 4095, %conv19, !dbg !11786
  %24 = load i32, i32* %j, align 4, !dbg !11787
  %idxprom20 = sext i32 %24 to i64, !dbg !11788
  %25 = load i16*, i16** %bottom, align 8, !dbg !11788
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !11788
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !11788
  %conv22 = zext i16 %26 to i32, !dbg !11788
  %sub23 = sub nsw i32 4095, %conv22, !dbg !11789
  %mul = mul nsw i32 %sub, %sub23, !dbg !11790
  %27 = load i32, i32* %j, align 4, !dbg !11791
  %idxprom24 = sext i32 %27 to i64, !dbg !11792
  %28 = load i16*, i16** %top, align 8, !dbg !11792
  %arrayidx25 = getelementptr inbounds i16, i16* %28, i64 %idxprom24, !dbg !11792
  %29 = load i16, i16* %arrayidx25, align 2, !dbg !11792
  %conv26 = zext i16 %29 to i32, !dbg !11792
  %div27 = sdiv i32 %mul, %conv26, !dbg !11793
  %cmp28 = icmp sgt i32 %div27, 4095, !dbg !11794
  br i1 %cmp28, label %cond.true30, label %cond.false31, !dbg !11795

cond.true30:                                      ; preds = %cond.false
  br label %cond.end, !dbg !11796

cond.false31:                                     ; preds = %cond.false
  %30 = load i32, i32* %j, align 4, !dbg !11798
  %idxprom32 = sext i32 %30 to i64, !dbg !11800
  %31 = load i16*, i16** %bottom, align 8, !dbg !11800
  %arrayidx33 = getelementptr inbounds i16, i16* %31, i64 %idxprom32, !dbg !11800
  %32 = load i16, i16* %arrayidx33, align 2, !dbg !11800
  %conv34 = zext i16 %32 to i32, !dbg !11800
  %sub35 = sub nsw i32 4095, %conv34, !dbg !11801
  %33 = load i32, i32* %j, align 4, !dbg !11802
  %idxprom36 = sext i32 %33 to i64, !dbg !11803
  %34 = load i16*, i16** %bottom, align 8, !dbg !11803
  %arrayidx37 = getelementptr inbounds i16, i16* %34, i64 %idxprom36, !dbg !11803
  %35 = load i16, i16* %arrayidx37, align 2, !dbg !11803
  %conv38 = zext i16 %35 to i32, !dbg !11803
  %sub39 = sub nsw i32 4095, %conv38, !dbg !11804
  %mul40 = mul nsw i32 %sub35, %sub39, !dbg !11805
  %36 = load i32, i32* %j, align 4, !dbg !11806
  %idxprom41 = sext i32 %36 to i64, !dbg !11807
  %37 = load i16*, i16** %top, align 8, !dbg !11807
  %arrayidx42 = getelementptr inbounds i16, i16* %37, i64 %idxprom41, !dbg !11807
  %38 = load i16, i16* %arrayidx42, align 2, !dbg !11807
  %conv43 = zext i16 %38 to i32, !dbg !11807
  %div44 = sdiv i32 %mul40, %conv43, !dbg !11808
  br label %cond.end, !dbg !11809

cond.end:                                         ; preds = %cond.false31, %cond.true30
  %cond = phi i32 [ 4095, %cond.true30 ], [ %div44, %cond.false31 ], !dbg !11810
  %sub45 = sub nsw i32 4095, %cond, !dbg !11812
  br label %cond.end46, !dbg !11813

cond.end46:                                       ; preds = %cond.end, %cond.true
  %cond47 = phi i32 [ 0, %cond.true ], [ %sub45, %cond.end ], !dbg !11814
  %39 = load i32, i32* %j, align 4, !dbg !11816
  %idxprom48 = sext i32 %39 to i64, !dbg !11817
  %40 = load i16*, i16** %top, align 8, !dbg !11817
  %arrayidx49 = getelementptr inbounds i16, i16* %40, i64 %idxprom48, !dbg !11817
  %41 = load i16, i16* %arrayidx49, align 2, !dbg !11817
  %conv50 = zext i16 %41 to i32, !dbg !11817
  %sub51 = sub nsw i32 %cond47, %conv50, !dbg !11818
  %conv52 = sitofp i32 %sub51 to double, !dbg !11819
  %42 = load double, double* %opacity, align 8, !dbg !11820
  %mul53 = fmul double %conv52, %42, !dbg !11821
  %add = fadd double %conv11, %mul53, !dbg !11822
  %conv54 = fptoui double %add to i16, !dbg !11823
  %43 = load i32, i32* %j, align 4, !dbg !11824
  %idxprom55 = sext i32 %43 to i64, !dbg !11825
  %44 = load i16*, i16** %dst, align 8, !dbg !11825
  %arrayidx56 = getelementptr inbounds i16, i16* %44, i64 %idxprom55, !dbg !11825
  store i16 %conv54, i16* %arrayidx56, align 2, !dbg !11826
  br label %for.inc, !dbg !11827

for.inc:                                          ; preds = %cond.end46
  %45 = load i32, i32* %j, align 4, !dbg !11828
  %inc = add nsw i32 %45, 1, !dbg !11828
  store i32 %inc, i32* %j, align 4, !dbg !11828
  br label %for.cond5, !dbg !11830, !llvm.loop !11831

for.end:                                          ; preds = %for.cond5
  %46 = load i64, i64* %dst_linesize.addr, align 8, !dbg !11833
  %47 = load i16*, i16** %dst, align 8, !dbg !11835
  %add.ptr = getelementptr inbounds i16, i16* %47, i64 %46, !dbg !11835
  store i16* %add.ptr, i16** %dst, align 8, !dbg !11835
  %48 = load i64, i64* %top_linesize.addr, align 8, !dbg !11836
  %49 = load i16*, i16** %top, align 8, !dbg !11837
  %add.ptr57 = getelementptr inbounds i16, i16* %49, i64 %48, !dbg !11837
  store i16* %add.ptr57, i16** %top, align 8, !dbg !11837
  %50 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !11838
  %51 = load i16*, i16** %bottom, align 8, !dbg !11839
  %add.ptr58 = getelementptr inbounds i16, i16* %51, i64 %50, !dbg !11839
  store i16* %add.ptr58, i16** %bottom, align 8, !dbg !11839
  br label %for.inc59, !dbg !11840

for.inc59:                                        ; preds = %for.end
  %52 = load i32, i32* %i, align 4, !dbg !11841
  %inc60 = add nsw i32 %52, 1, !dbg !11841
  store i32 %inc60, i32* %i, align 4, !dbg !11841
  br label %for.cond, !dbg !11843, !llvm.loop !11844

for.end61:                                        ; preds = %for.cond
  ret void, !dbg !11846
}

; Function Attrs: nounwind uwtable
define internal void @blend_lighten_12bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !11848 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !11849, metadata !905), !dbg !11850
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !11851, metadata !905), !dbg !11852
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !11853, metadata !905), !dbg !11854
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !11855, metadata !905), !dbg !11856
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !11857, metadata !905), !dbg !11858
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !11859, metadata !905), !dbg !11860
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !11861, metadata !905), !dbg !11862
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !11863, metadata !905), !dbg !11864
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !11865, metadata !905), !dbg !11866
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !11867, metadata !905), !dbg !11868
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !11869, metadata !905), !dbg !11870
  call void @llvm.dbg.declare(metadata i16** %top, metadata !11871, metadata !905), !dbg !11872
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !11873
  %1 = bitcast i8* %0 to i16*, !dbg !11874
  store i16* %1, i16** %top, align 8, !dbg !11872
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !11875, metadata !905), !dbg !11876
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !11877
  %3 = bitcast i8* %2 to i16*, !dbg !11878
  store i16* %3, i16** %bottom, align 8, !dbg !11876
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !11879, metadata !905), !dbg !11880
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !11881
  %5 = bitcast i8* %4 to i16*, !dbg !11882
  store i16* %5, i16** %dst, align 8, !dbg !11880
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !11883, metadata !905), !dbg !11884
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !11885
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !11886
  %7 = load double, double* %opacity1, align 8, !dbg !11886
  store double %7, double* %opacity, align 8, !dbg !11884
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11887, metadata !905), !dbg !11888
  call void @llvm.dbg.declare(metadata i32* %j, metadata !11889, metadata !905), !dbg !11890
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !11891
  %div = sdiv i64 %8, 2, !dbg !11891
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !11891
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !11892
  %div2 = sdiv i64 %9, 2, !dbg !11892
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !11892
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !11893
  %div3 = sdiv i64 %10, 2, !dbg !11893
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !11893
  store i32 0, i32* %i, align 4, !dbg !11894
  br label %for.cond, !dbg !11896

for.cond:                                         ; preds = %for.inc35, %entry
  %11 = load i32, i32* %i, align 4, !dbg !11897
  %conv = sext i32 %11 to i64, !dbg !11897
  %12 = load i64, i64* %height.addr, align 8, !dbg !11900
  %cmp = icmp slt i64 %conv, %12, !dbg !11901
  br i1 %cmp, label %for.body, label %for.end37, !dbg !11902

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !11903
  br label %for.cond5, !dbg !11907

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !11908
  %conv6 = sext i32 %13 to i64, !dbg !11908
  %14 = load i64, i64* %width.addr, align 8, !dbg !11911
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !11912
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !11913

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !11914
  %idxprom = sext i32 %15 to i64, !dbg !11917
  %16 = load i16*, i16** %top, align 8, !dbg !11917
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !11917
  %17 = load i16, i16* %arrayidx, align 2, !dbg !11917
  %conv10 = zext i16 %17 to i32, !dbg !11917
  %conv11 = sitofp i32 %conv10 to double, !dbg !11917
  %18 = load i32, i32* %j, align 4, !dbg !11918
  %idxprom12 = sext i32 %18 to i64, !dbg !11919
  %19 = load i16*, i16** %top, align 8, !dbg !11919
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !11919
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !11919
  %conv14 = zext i16 %20 to i32, !dbg !11920
  %21 = load i32, i32* %j, align 4, !dbg !11921
  %idxprom15 = sext i32 %21 to i64, !dbg !11922
  %22 = load i16*, i16** %bottom, align 8, !dbg !11922
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !11922
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !11922
  %conv17 = zext i16 %23 to i32, !dbg !11923
  %cmp18 = icmp sgt i32 %conv14, %conv17, !dbg !11924
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !11920

cond.true:                                        ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !11925
  %idxprom20 = sext i32 %24 to i64, !dbg !11927
  %25 = load i16*, i16** %top, align 8, !dbg !11927
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !11927
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !11927
  %conv22 = zext i16 %26 to i32, !dbg !11928
  br label %cond.end, !dbg !11929

cond.false:                                       ; preds = %for.body9
  %27 = load i32, i32* %j, align 4, !dbg !11930
  %idxprom23 = sext i32 %27 to i64, !dbg !11932
  %28 = load i16*, i16** %bottom, align 8, !dbg !11932
  %arrayidx24 = getelementptr inbounds i16, i16* %28, i64 %idxprom23, !dbg !11932
  %29 = load i16, i16* %arrayidx24, align 2, !dbg !11932
  %conv25 = zext i16 %29 to i32, !dbg !11933
  br label %cond.end, !dbg !11934

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv22, %cond.true ], [ %conv25, %cond.false ], !dbg !11935
  %30 = load i32, i32* %j, align 4, !dbg !11937
  %idxprom26 = sext i32 %30 to i64, !dbg !11938
  %31 = load i16*, i16** %top, align 8, !dbg !11938
  %arrayidx27 = getelementptr inbounds i16, i16* %31, i64 %idxprom26, !dbg !11938
  %32 = load i16, i16* %arrayidx27, align 2, !dbg !11938
  %conv28 = zext i16 %32 to i32, !dbg !11938
  %sub = sub nsw i32 %cond, %conv28, !dbg !11939
  %conv29 = sitofp i32 %sub to double, !dbg !11940
  %33 = load double, double* %opacity, align 8, !dbg !11941
  %mul = fmul double %conv29, %33, !dbg !11942
  %add = fadd double %conv11, %mul, !dbg !11943
  %conv30 = fptoui double %add to i16, !dbg !11944
  %34 = load i32, i32* %j, align 4, !dbg !11945
  %idxprom31 = sext i32 %34 to i64, !dbg !11946
  %35 = load i16*, i16** %dst, align 8, !dbg !11946
  %arrayidx32 = getelementptr inbounds i16, i16* %35, i64 %idxprom31, !dbg !11946
  store i16 %conv30, i16* %arrayidx32, align 2, !dbg !11947
  br label %for.inc, !dbg !11948

for.inc:                                          ; preds = %cond.end
  %36 = load i32, i32* %j, align 4, !dbg !11949
  %inc = add nsw i32 %36, 1, !dbg !11949
  store i32 %inc, i32* %j, align 4, !dbg !11949
  br label %for.cond5, !dbg !11951, !llvm.loop !11952

for.end:                                          ; preds = %for.cond5
  %37 = load i64, i64* %dst_linesize.addr, align 8, !dbg !11954
  %38 = load i16*, i16** %dst, align 8, !dbg !11956
  %add.ptr = getelementptr inbounds i16, i16* %38, i64 %37, !dbg !11956
  store i16* %add.ptr, i16** %dst, align 8, !dbg !11956
  %39 = load i64, i64* %top_linesize.addr, align 8, !dbg !11957
  %40 = load i16*, i16** %top, align 8, !dbg !11958
  %add.ptr33 = getelementptr inbounds i16, i16* %40, i64 %39, !dbg !11958
  store i16* %add.ptr33, i16** %top, align 8, !dbg !11958
  %41 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !11959
  %42 = load i16*, i16** %bottom, align 8, !dbg !11960
  %add.ptr34 = getelementptr inbounds i16, i16* %42, i64 %41, !dbg !11960
  store i16* %add.ptr34, i16** %bottom, align 8, !dbg !11960
  br label %for.inc35, !dbg !11961

for.inc35:                                        ; preds = %for.end
  %43 = load i32, i32* %i, align 4, !dbg !11962
  %inc36 = add nsw i32 %43, 1, !dbg !11962
  store i32 %inc36, i32* %i, align 4, !dbg !11962
  br label %for.cond, !dbg !11964, !llvm.loop !11965

for.end37:                                        ; preds = %for.cond
  ret void, !dbg !11967
}

; Function Attrs: nounwind uwtable
define internal void @blend_linearlight_12bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !11969 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !5462, metadata !905), !dbg !11970
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !5475, metadata !905), !dbg !11979
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !11980, metadata !905), !dbg !11981
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !11982, metadata !905), !dbg !11983
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !11984, metadata !905), !dbg !11985
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !11986, metadata !905), !dbg !11987
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !11988, metadata !905), !dbg !11989
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !11990, metadata !905), !dbg !11991
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !11992, metadata !905), !dbg !11993
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !11994, metadata !905), !dbg !11995
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !11996, metadata !905), !dbg !11997
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !11998, metadata !905), !dbg !11999
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !12000, metadata !905), !dbg !12001
  call void @llvm.dbg.declare(metadata i16** %top, metadata !12002, metadata !905), !dbg !12003
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !12004
  %1 = bitcast i8* %0 to i16*, !dbg !12005
  store i16* %1, i16** %top, align 8, !dbg !12003
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !12006, metadata !905), !dbg !12007
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !12008
  %3 = bitcast i8* %2 to i16*, !dbg !12009
  store i16* %3, i16** %bottom, align 8, !dbg !12007
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !12010, metadata !905), !dbg !12011
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !12012
  %5 = bitcast i8* %4 to i16*, !dbg !12013
  store i16* %5, i16** %dst, align 8, !dbg !12011
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !12014, metadata !905), !dbg !12015
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !12016
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !12017
  %7 = load double, double* %opacity1, align 8, !dbg !12017
  store double %7, double* %opacity, align 8, !dbg !12015
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12018, metadata !905), !dbg !12019
  call void @llvm.dbg.declare(metadata i32* %j, metadata !12020, metadata !905), !dbg !12021
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !12022
  %div = sdiv i64 %8, 2, !dbg !12022
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !12022
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !12023
  %div2 = sdiv i64 %9, 2, !dbg !12023
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !12023
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !12024
  %div3 = sdiv i64 %10, 2, !dbg !12024
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !12024
  store i32 0, i32* %i, align 4, !dbg !12025
  br label %for.cond, !dbg !12026

for.cond:                                         ; preds = %for.inc44, %entry
  %11 = load i32, i32* %i, align 4, !dbg !12027
  %conv = sext i32 %11 to i64, !dbg !12027
  %12 = load i64, i64* %height.addr, align 8, !dbg !12029
  %cmp = icmp slt i64 %conv, %12, !dbg !12030
  br i1 %cmp, label %for.body, label %for.end46, !dbg !12031

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !12032
  br label %for.cond5, !dbg !12034

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !12035
  %conv6 = sext i32 %13 to i64, !dbg !12035
  %14 = load i64, i64* %width.addr, align 8, !dbg !12037
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !12038
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !12039

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !12040
  %idxprom = sext i32 %15 to i64, !dbg !12042
  %16 = load i16*, i16** %top, align 8, !dbg !12042
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !12042
  %17 = load i16, i16* %arrayidx, align 2, !dbg !12042
  %conv10 = zext i16 %17 to i32, !dbg !12042
  %conv11 = sitofp i32 %conv10 to double, !dbg !12042
  %18 = load i32, i32* %j, align 4, !dbg !12043
  %idxprom12 = sext i32 %18 to i64, !dbg !12044
  %19 = load i16*, i16** %bottom, align 8, !dbg !12044
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !12044
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !12044
  %conv14 = zext i16 %20 to i32, !dbg !12044
  %cmp15 = icmp slt i32 %conv14, 2048, !dbg !12045
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !12046

cond.true:                                        ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !12047
  %idxprom17 = sext i32 %21 to i64, !dbg !12049
  %22 = load i16*, i16** %bottom, align 8, !dbg !12049
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !12049
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !12049
  %conv19 = zext i16 %23 to i32, !dbg !12049
  %24 = load i32, i32* %j, align 4, !dbg !12050
  %idxprom20 = sext i32 %24 to i64, !dbg !12051
  %25 = load i16*, i16** %top, align 8, !dbg !12051
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !12051
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !12051
  %conv22 = zext i16 %26 to i32, !dbg !12051
  %mul = mul nsw i32 2, %conv22, !dbg !12052
  %add = add nsw i32 %conv19, %mul, !dbg !12053
  %sub = sub nsw i32 %add, 4095, !dbg !12054
  br label %cond.end, !dbg !12055

cond.false:                                       ; preds = %for.body9
  %27 = load i32, i32* %j, align 4, !dbg !12056
  %idxprom23 = sext i32 %27 to i64, !dbg !12058
  %28 = load i16*, i16** %bottom, align 8, !dbg !12058
  %arrayidx24 = getelementptr inbounds i16, i16* %28, i64 %idxprom23, !dbg !12058
  %29 = load i16, i16* %arrayidx24, align 2, !dbg !12058
  %conv25 = zext i16 %29 to i32, !dbg !12058
  %30 = load i32, i32* %j, align 4, !dbg !12059
  %idxprom26 = sext i32 %30 to i64, !dbg !12060
  %31 = load i16*, i16** %top, align 8, !dbg !12060
  %arrayidx27 = getelementptr inbounds i16, i16* %31, i64 %idxprom26, !dbg !12060
  %32 = load i16, i16* %arrayidx27, align 2, !dbg !12060
  %conv28 = zext i16 %32 to i32, !dbg !12060
  %sub29 = sub nsw i32 %conv28, 2048, !dbg !12061
  %mul30 = mul nsw i32 2, %sub29, !dbg !12062
  %add31 = add nsw i32 %conv25, %mul30, !dbg !12063
  br label %cond.end, !dbg !12064

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %add31, %cond.false ], !dbg !12065
  store i32 %cond, i32* %a.addr.i, align 4, !dbg !12066
  store i32 12, i32* %p.addr.i, align 4, !dbg !12066
  %33 = load i32, i32* %a.addr.i, align 4, !dbg !12067
  %34 = load i32, i32* %p.addr.i, align 4, !dbg !12068
  %shl.i = shl i32 1, %34, !dbg !12069
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !12070
  %neg.i = xor i32 %sub.i, -1, !dbg !12071
  %and.i = and i32 %33, %neg.i, !dbg !12072
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !12072
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !12073

if.then.i:                                        ; preds = %cond.end
  %35 = load i32, i32* %a.addr.i, align 4, !dbg !12074
  %neg1.i = xor i32 %35, -1, !dbg !12075
  %shr.i = ashr i32 %neg1.i, 31, !dbg !12076
  %36 = load i32, i32* %p.addr.i, align 4, !dbg !12077
  %shl2.i = shl i32 1, %36, !dbg !12078
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !12079
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !12080
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !12081
  br label %av_clip_uintp2_c.exit, !dbg !12081

if.else.i:                                        ; preds = %cond.end
  %37 = load i32, i32* %a.addr.i, align 4, !dbg !12082
  store i32 %37, i32* %retval.i, align 4, !dbg !12083
  br label %av_clip_uintp2_c.exit, !dbg !12083

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %38 = load i32, i32* %retval.i, align 4, !dbg !12084
  %39 = load i32, i32* %j, align 4, !dbg !12085
  %idxprom32 = sext i32 %39 to i64, !dbg !12086
  %40 = load i16*, i16** %top, align 8, !dbg !12086
  %arrayidx33 = getelementptr inbounds i16, i16* %40, i64 %idxprom32, !dbg !12086
  %41 = load i16, i16* %arrayidx33, align 2, !dbg !12086
  %conv34 = zext i16 %41 to i32, !dbg !12086
  %sub35 = sub nsw i32 %38, %conv34, !dbg !12087
  %conv36 = sitofp i32 %sub35 to double, !dbg !12088
  %42 = load double, double* %opacity, align 8, !dbg !12089
  %mul37 = fmul double %conv36, %42, !dbg !12090
  %add38 = fadd double %conv11, %mul37, !dbg !12091
  %conv39 = fptoui double %add38 to i16, !dbg !12092
  %43 = load i32, i32* %j, align 4, !dbg !12093
  %idxprom40 = sext i32 %43 to i64, !dbg !12094
  %44 = load i16*, i16** %dst, align 8, !dbg !12094
  %arrayidx41 = getelementptr inbounds i16, i16* %44, i64 %idxprom40, !dbg !12094
  store i16 %conv39, i16* %arrayidx41, align 2, !dbg !12095
  br label %for.inc, !dbg !12096

for.inc:                                          ; preds = %av_clip_uintp2_c.exit
  %45 = load i32, i32* %j, align 4, !dbg !12097
  %inc = add nsw i32 %45, 1, !dbg !12097
  store i32 %inc, i32* %j, align 4, !dbg !12097
  br label %for.cond5, !dbg !12099, !llvm.loop !12100

for.end:                                          ; preds = %for.cond5
  %46 = load i64, i64* %dst_linesize.addr, align 8, !dbg !12102
  %47 = load i16*, i16** %dst, align 8, !dbg !12104
  %add.ptr = getelementptr inbounds i16, i16* %47, i64 %46, !dbg !12104
  store i16* %add.ptr, i16** %dst, align 8, !dbg !12104
  %48 = load i64, i64* %top_linesize.addr, align 8, !dbg !12105
  %49 = load i16*, i16** %top, align 8, !dbg !12106
  %add.ptr42 = getelementptr inbounds i16, i16* %49, i64 %48, !dbg !12106
  store i16* %add.ptr42, i16** %top, align 8, !dbg !12106
  %50 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !12107
  %51 = load i16*, i16** %bottom, align 8, !dbg !12108
  %add.ptr43 = getelementptr inbounds i16, i16* %51, i64 %50, !dbg !12108
  store i16* %add.ptr43, i16** %bottom, align 8, !dbg !12108
  br label %for.inc44, !dbg !12109

for.inc44:                                        ; preds = %for.end
  %52 = load i32, i32* %i, align 4, !dbg !12110
  %inc45 = add nsw i32 %52, 1, !dbg !12110
  store i32 %inc45, i32* %i, align 4, !dbg !12110
  br label %for.cond, !dbg !12112, !llvm.loop !12113

for.end46:                                        ; preds = %for.cond
  ret void, !dbg !12115
}

; Function Attrs: nounwind uwtable
define internal void @blend_multiply_12bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !12117 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !12118, metadata !905), !dbg !12119
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !12120, metadata !905), !dbg !12121
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !12122, metadata !905), !dbg !12123
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !12124, metadata !905), !dbg !12125
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !12126, metadata !905), !dbg !12127
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !12128, metadata !905), !dbg !12129
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !12130, metadata !905), !dbg !12131
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !12132, metadata !905), !dbg !12133
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !12134, metadata !905), !dbg !12135
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !12136, metadata !905), !dbg !12137
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !12138, metadata !905), !dbg !12139
  call void @llvm.dbg.declare(metadata i16** %top, metadata !12140, metadata !905), !dbg !12141
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !12142
  %1 = bitcast i8* %0 to i16*, !dbg !12143
  store i16* %1, i16** %top, align 8, !dbg !12141
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !12144, metadata !905), !dbg !12145
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !12146
  %3 = bitcast i8* %2 to i16*, !dbg !12147
  store i16* %3, i16** %bottom, align 8, !dbg !12145
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !12148, metadata !905), !dbg !12149
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !12150
  %5 = bitcast i8* %4 to i16*, !dbg !12151
  store i16* %5, i16** %dst, align 8, !dbg !12149
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !12152, metadata !905), !dbg !12153
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !12154
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !12155
  %7 = load double, double* %opacity1, align 8, !dbg !12155
  store double %7, double* %opacity, align 8, !dbg !12153
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12156, metadata !905), !dbg !12157
  call void @llvm.dbg.declare(metadata i32* %j, metadata !12158, metadata !905), !dbg !12159
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !12160
  %div = sdiv i64 %8, 2, !dbg !12160
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !12160
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !12161
  %div2 = sdiv i64 %9, 2, !dbg !12161
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !12161
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !12162
  %div3 = sdiv i64 %10, 2, !dbg !12162
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !12162
  store i32 0, i32* %i, align 4, !dbg !12163
  br label %for.cond, !dbg !12165

for.cond:                                         ; preds = %for.inc30, %entry
  %11 = load i32, i32* %i, align 4, !dbg !12166
  %conv = sext i32 %11 to i64, !dbg !12166
  %12 = load i64, i64* %height.addr, align 8, !dbg !12169
  %cmp = icmp slt i64 %conv, %12, !dbg !12170
  br i1 %cmp, label %for.body, label %for.end32, !dbg !12171

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !12172
  br label %for.cond5, !dbg !12176

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !12177
  %conv6 = sext i32 %13 to i64, !dbg !12177
  %14 = load i64, i64* %width.addr, align 8, !dbg !12180
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !12181
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !12182

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !12183
  %idxprom = sext i32 %15 to i64, !dbg !12186
  %16 = load i16*, i16** %top, align 8, !dbg !12186
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !12186
  %17 = load i16, i16* %arrayidx, align 2, !dbg !12186
  %conv10 = zext i16 %17 to i32, !dbg !12186
  %conv11 = sitofp i32 %conv10 to double, !dbg !12186
  %18 = load i32, i32* %j, align 4, !dbg !12187
  %idxprom12 = sext i32 %18 to i64, !dbg !12188
  %19 = load i16*, i16** %top, align 8, !dbg !12188
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !12188
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !12188
  %conv14 = zext i16 %20 to i32, !dbg !12189
  %21 = load i32, i32* %j, align 4, !dbg !12190
  %idxprom15 = sext i32 %21 to i64, !dbg !12191
  %22 = load i16*, i16** %bottom, align 8, !dbg !12191
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !12191
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !12191
  %conv17 = zext i16 %23 to i32, !dbg !12192
  %mul = mul nsw i32 %conv14, %conv17, !dbg !12193
  %div18 = sdiv i32 %mul, 4095, !dbg !12194
  %mul19 = mul nsw i32 1, %div18, !dbg !12195
  %24 = load i32, i32* %j, align 4, !dbg !12196
  %idxprom20 = sext i32 %24 to i64, !dbg !12197
  %25 = load i16*, i16** %top, align 8, !dbg !12197
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !12197
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !12197
  %conv22 = zext i16 %26 to i32, !dbg !12197
  %sub = sub nsw i32 %mul19, %conv22, !dbg !12198
  %conv23 = sitofp i32 %sub to double, !dbg !12199
  %27 = load double, double* %opacity, align 8, !dbg !12200
  %mul24 = fmul double %conv23, %27, !dbg !12201
  %add = fadd double %conv11, %mul24, !dbg !12202
  %conv25 = fptoui double %add to i16, !dbg !12186
  %28 = load i32, i32* %j, align 4, !dbg !12203
  %idxprom26 = sext i32 %28 to i64, !dbg !12204
  %29 = load i16*, i16** %dst, align 8, !dbg !12204
  %arrayidx27 = getelementptr inbounds i16, i16* %29, i64 %idxprom26, !dbg !12204
  store i16 %conv25, i16* %arrayidx27, align 2, !dbg !12205
  br label %for.inc, !dbg !12206

for.inc:                                          ; preds = %for.body9
  %30 = load i32, i32* %j, align 4, !dbg !12207
  %inc = add nsw i32 %30, 1, !dbg !12207
  store i32 %inc, i32* %j, align 4, !dbg !12207
  br label %for.cond5, !dbg !12209, !llvm.loop !12210

for.end:                                          ; preds = %for.cond5
  %31 = load i64, i64* %dst_linesize.addr, align 8, !dbg !12212
  %32 = load i16*, i16** %dst, align 8, !dbg !12214
  %add.ptr = getelementptr inbounds i16, i16* %32, i64 %31, !dbg !12214
  store i16* %add.ptr, i16** %dst, align 8, !dbg !12214
  %33 = load i64, i64* %top_linesize.addr, align 8, !dbg !12215
  %34 = load i16*, i16** %top, align 8, !dbg !12216
  %add.ptr28 = getelementptr inbounds i16, i16* %34, i64 %33, !dbg !12216
  store i16* %add.ptr28, i16** %top, align 8, !dbg !12216
  %35 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !12217
  %36 = load i16*, i16** %bottom, align 8, !dbg !12218
  %add.ptr29 = getelementptr inbounds i16, i16* %36, i64 %35, !dbg !12218
  store i16* %add.ptr29, i16** %bottom, align 8, !dbg !12218
  br label %for.inc30, !dbg !12219

for.inc30:                                        ; preds = %for.end
  %37 = load i32, i32* %i, align 4, !dbg !12220
  %inc31 = add nsw i32 %37, 1, !dbg !12220
  store i32 %inc31, i32* %i, align 4, !dbg !12220
  br label %for.cond, !dbg !12222, !llvm.loop !12223

for.end32:                                        ; preds = %for.cond
  ret void, !dbg !12225
}

; Function Attrs: nounwind uwtable
define internal void @blend_multiply128_12bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !12227 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !5462, metadata !905), !dbg !12228
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !5475, metadata !905), !dbg !12237
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !12238, metadata !905), !dbg !12239
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !12240, metadata !905), !dbg !12241
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !12242, metadata !905), !dbg !12243
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !12244, metadata !905), !dbg !12245
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !12246, metadata !905), !dbg !12247
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !12248, metadata !905), !dbg !12249
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !12250, metadata !905), !dbg !12251
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !12252, metadata !905), !dbg !12253
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !12254, metadata !905), !dbg !12255
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !12256, metadata !905), !dbg !12257
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !12258, metadata !905), !dbg !12259
  call void @llvm.dbg.declare(metadata i16** %top, metadata !12260, metadata !905), !dbg !12261
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !12262
  %1 = bitcast i8* %0 to i16*, !dbg !12263
  store i16* %1, i16** %top, align 8, !dbg !12261
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !12264, metadata !905), !dbg !12265
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !12266
  %3 = bitcast i8* %2 to i16*, !dbg !12267
  store i16* %3, i16** %bottom, align 8, !dbg !12265
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !12268, metadata !905), !dbg !12269
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !12270
  %5 = bitcast i8* %4 to i16*, !dbg !12271
  store i16* %5, i16** %dst, align 8, !dbg !12269
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !12272, metadata !905), !dbg !12273
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !12274
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !12275
  %7 = load double, double* %opacity1, align 8, !dbg !12275
  store double %7, double* %opacity, align 8, !dbg !12273
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12276, metadata !905), !dbg !12277
  call void @llvm.dbg.declare(metadata i32* %j, metadata !12278, metadata !905), !dbg !12279
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !12280
  %div = sdiv i64 %8, 2, !dbg !12280
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !12280
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !12281
  %div2 = sdiv i64 %9, 2, !dbg !12281
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !12281
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !12282
  %div3 = sdiv i64 %10, 2, !dbg !12282
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !12282
  store i32 0, i32* %i, align 4, !dbg !12283
  br label %for.cond, !dbg !12284

for.cond:                                         ; preds = %for.inc33, %entry
  %11 = load i32, i32* %i, align 4, !dbg !12285
  %conv = sext i32 %11 to i64, !dbg !12285
  %12 = load i64, i64* %height.addr, align 8, !dbg !12287
  %cmp = icmp slt i64 %conv, %12, !dbg !12288
  br i1 %cmp, label %for.body, label %for.end35, !dbg !12289

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !12290
  br label %for.cond5, !dbg !12292

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !12293
  %conv6 = sext i32 %13 to i64, !dbg !12293
  %14 = load i64, i64* %width.addr, align 8, !dbg !12295
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !12296
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !12297

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !12298
  %idxprom = sext i32 %15 to i64, !dbg !12299
  %16 = load i16*, i16** %top, align 8, !dbg !12299
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !12299
  %17 = load i16, i16* %arrayidx, align 2, !dbg !12299
  %conv10 = zext i16 %17 to i32, !dbg !12299
  %conv11 = sitofp i32 %conv10 to double, !dbg !12299
  %18 = load i32, i32* %j, align 4, !dbg !12300
  %idxprom12 = sext i32 %18 to i64, !dbg !12301
  %19 = load i16*, i16** %top, align 8, !dbg !12301
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !12301
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !12301
  %conv14 = zext i16 %20 to i32, !dbg !12301
  %sub = sub nsw i32 %conv14, 2048, !dbg !12302
  %21 = load i32, i32* %j, align 4, !dbg !12303
  %idxprom15 = sext i32 %21 to i64, !dbg !12304
  %22 = load i16*, i16** %bottom, align 8, !dbg !12304
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !12304
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !12304
  %conv17 = zext i16 %23 to i32, !dbg !12304
  %mul = mul nsw i32 %sub, %conv17, !dbg !12305
  %conv18 = sitofp i32 %mul to double, !dbg !12306
  %div19 = fdiv double %conv18, 5.120000e+02, !dbg !12307
  %add = fadd double %div19, 2.048000e+03, !dbg !12308
  %conv20 = fptosi double %add to i32, !dbg !12306
  store i32 %conv20, i32* %a.addr.i, align 4, !dbg !12309
  store i32 12, i32* %p.addr.i, align 4, !dbg !12309
  %24 = load i32, i32* %a.addr.i, align 4, !dbg !12310
  %25 = load i32, i32* %p.addr.i, align 4, !dbg !12311
  %shl.i = shl i32 1, %25, !dbg !12312
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !12313
  %neg.i = xor i32 %sub.i, -1, !dbg !12314
  %and.i = and i32 %24, %neg.i, !dbg !12315
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !12315
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !12316

if.then.i:                                        ; preds = %for.body9
  %26 = load i32, i32* %a.addr.i, align 4, !dbg !12317
  %neg1.i = xor i32 %26, -1, !dbg !12318
  %shr.i = ashr i32 %neg1.i, 31, !dbg !12319
  %27 = load i32, i32* %p.addr.i, align 4, !dbg !12320
  %shl2.i = shl i32 1, %27, !dbg !12321
  %sub3.i = sub nsw i32 %shl2.i, 1, !dbg !12322
  %and4.i = and i32 %shr.i, %sub3.i, !dbg !12323
  store i32 %and4.i, i32* %retval.i, align 4, !dbg !12324
  br label %av_clip_uintp2_c.exit, !dbg !12324

if.else.i:                                        ; preds = %for.body9
  %28 = load i32, i32* %a.addr.i, align 4, !dbg !12325
  store i32 %28, i32* %retval.i, align 4, !dbg !12326
  br label %av_clip_uintp2_c.exit, !dbg !12326

av_clip_uintp2_c.exit:                            ; preds = %if.then.i, %if.else.i
  %29 = load i32, i32* %retval.i, align 4, !dbg !12327
  %30 = load i32, i32* %j, align 4, !dbg !12328
  %idxprom21 = sext i32 %30 to i64, !dbg !12329
  %31 = load i16*, i16** %top, align 8, !dbg !12329
  %arrayidx22 = getelementptr inbounds i16, i16* %31, i64 %idxprom21, !dbg !12329
  %32 = load i16, i16* %arrayidx22, align 2, !dbg !12329
  %conv23 = zext i16 %32 to i32, !dbg !12329
  %sub24 = sub nsw i32 %29, %conv23, !dbg !12330
  %conv25 = sitofp i32 %sub24 to double, !dbg !12331
  %33 = load double, double* %opacity, align 8, !dbg !12332
  %mul26 = fmul double %conv25, %33, !dbg !12333
  %add27 = fadd double %conv11, %mul26, !dbg !12334
  %conv28 = fptoui double %add27 to i16, !dbg !12299
  %34 = load i32, i32* %j, align 4, !dbg !12335
  %idxprom29 = sext i32 %34 to i64, !dbg !12336
  %35 = load i16*, i16** %dst, align 8, !dbg !12336
  %arrayidx30 = getelementptr inbounds i16, i16* %35, i64 %idxprom29, !dbg !12336
  store i16 %conv28, i16* %arrayidx30, align 2, !dbg !12337
  br label %for.inc, !dbg !12338

for.inc:                                          ; preds = %av_clip_uintp2_c.exit
  %36 = load i32, i32* %j, align 4, !dbg !12339
  %inc = add nsw i32 %36, 1, !dbg !12339
  store i32 %inc, i32* %j, align 4, !dbg !12339
  br label %for.cond5, !dbg !12341, !llvm.loop !12342

for.end:                                          ; preds = %for.cond5
  %37 = load i64, i64* %dst_linesize.addr, align 8, !dbg !12344
  %38 = load i16*, i16** %dst, align 8, !dbg !12346
  %add.ptr = getelementptr inbounds i16, i16* %38, i64 %37, !dbg !12346
  store i16* %add.ptr, i16** %dst, align 8, !dbg !12346
  %39 = load i64, i64* %top_linesize.addr, align 8, !dbg !12347
  %40 = load i16*, i16** %top, align 8, !dbg !12348
  %add.ptr31 = getelementptr inbounds i16, i16* %40, i64 %39, !dbg !12348
  store i16* %add.ptr31, i16** %top, align 8, !dbg !12348
  %41 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !12349
  %42 = load i16*, i16** %bottom, align 8, !dbg !12350
  %add.ptr32 = getelementptr inbounds i16, i16* %42, i64 %41, !dbg !12350
  store i16* %add.ptr32, i16** %bottom, align 8, !dbg !12350
  br label %for.inc33, !dbg !12351

for.inc33:                                        ; preds = %for.end
  %43 = load i32, i32* %i, align 4, !dbg !12352
  %inc34 = add nsw i32 %43, 1, !dbg !12352
  store i32 %inc34, i32* %i, align 4, !dbg !12352
  br label %for.cond, !dbg !12354, !llvm.loop !12355

for.end35:                                        ; preds = %for.cond
  ret void, !dbg !12357
}

; Function Attrs: nounwind uwtable
define internal void @blend_negation_12bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !12359 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !12360, metadata !905), !dbg !12361
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !12362, metadata !905), !dbg !12363
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !12364, metadata !905), !dbg !12365
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !12366, metadata !905), !dbg !12367
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !12368, metadata !905), !dbg !12369
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !12370, metadata !905), !dbg !12371
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !12372, metadata !905), !dbg !12373
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !12374, metadata !905), !dbg !12375
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !12376, metadata !905), !dbg !12377
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !12378, metadata !905), !dbg !12379
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !12380, metadata !905), !dbg !12381
  call void @llvm.dbg.declare(metadata i16** %top, metadata !12382, metadata !905), !dbg !12383
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !12384
  %1 = bitcast i8* %0 to i16*, !dbg !12385
  store i16* %1, i16** %top, align 8, !dbg !12383
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !12386, metadata !905), !dbg !12387
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !12388
  %3 = bitcast i8* %2 to i16*, !dbg !12389
  store i16* %3, i16** %bottom, align 8, !dbg !12387
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !12390, metadata !905), !dbg !12391
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !12392
  %5 = bitcast i8* %4 to i16*, !dbg !12393
  store i16* %5, i16** %dst, align 8, !dbg !12391
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !12394, metadata !905), !dbg !12395
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !12396
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !12397
  %7 = load double, double* %opacity1, align 8, !dbg !12397
  store double %7, double* %opacity, align 8, !dbg !12395
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12398, metadata !905), !dbg !12399
  call void @llvm.dbg.declare(metadata i32* %j, metadata !12400, metadata !905), !dbg !12401
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !12402
  %div = sdiv i64 %8, 2, !dbg !12402
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !12402
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !12403
  %div2 = sdiv i64 %9, 2, !dbg !12403
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !12403
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !12404
  %div3 = sdiv i64 %10, 2, !dbg !12404
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !12404
  store i32 0, i32* %i, align 4, !dbg !12405
  br label %for.cond, !dbg !12407

for.cond:                                         ; preds = %for.inc49, %entry
  %11 = load i32, i32* %i, align 4, !dbg !12408
  %conv = sext i32 %11 to i64, !dbg !12408
  %12 = load i64, i64* %height.addr, align 8, !dbg !12411
  %cmp = icmp slt i64 %conv, %12, !dbg !12412
  br i1 %cmp, label %for.body, label %for.end51, !dbg !12413

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !12414
  br label %for.cond5, !dbg !12418

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !12419
  %conv6 = sext i32 %13 to i64, !dbg !12419
  %14 = load i64, i64* %width.addr, align 8, !dbg !12422
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !12423
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !12424

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !12425
  %idxprom = sext i32 %15 to i64, !dbg !12428
  %16 = load i16*, i16** %top, align 8, !dbg !12428
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !12428
  %17 = load i16, i16* %arrayidx, align 2, !dbg !12428
  %conv10 = zext i16 %17 to i32, !dbg !12428
  %conv11 = sitofp i32 %conv10 to double, !dbg !12428
  %18 = load i32, i32* %j, align 4, !dbg !12429
  %idxprom12 = sext i32 %18 to i64, !dbg !12430
  %19 = load i16*, i16** %top, align 8, !dbg !12430
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !12430
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !12430
  %conv14 = zext i16 %20 to i32, !dbg !12430
  %sub = sub nsw i32 4095, %conv14, !dbg !12431
  %21 = load i32, i32* %j, align 4, !dbg !12432
  %idxprom15 = sext i32 %21 to i64, !dbg !12433
  %22 = load i16*, i16** %bottom, align 8, !dbg !12433
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !12433
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !12433
  %conv17 = zext i16 %23 to i32, !dbg !12433
  %sub18 = sub nsw i32 %sub, %conv17, !dbg !12434
  %cmp19 = icmp sge i32 %sub18, 0, !dbg !12435
  br i1 %cmp19, label %cond.true, label %cond.false, !dbg !12436

cond.true:                                        ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !12437
  %idxprom21 = sext i32 %24 to i64, !dbg !12439
  %25 = load i16*, i16** %top, align 8, !dbg !12439
  %arrayidx22 = getelementptr inbounds i16, i16* %25, i64 %idxprom21, !dbg !12439
  %26 = load i16, i16* %arrayidx22, align 2, !dbg !12439
  %conv23 = zext i16 %26 to i32, !dbg !12439
  %sub24 = sub nsw i32 4095, %conv23, !dbg !12440
  %27 = load i32, i32* %j, align 4, !dbg !12441
  %idxprom25 = sext i32 %27 to i64, !dbg !12442
  %28 = load i16*, i16** %bottom, align 8, !dbg !12442
  %arrayidx26 = getelementptr inbounds i16, i16* %28, i64 %idxprom25, !dbg !12442
  %29 = load i16, i16* %arrayidx26, align 2, !dbg !12442
  %conv27 = zext i16 %29 to i32, !dbg !12442
  %sub28 = sub nsw i32 %sub24, %conv27, !dbg !12443
  br label %cond.end, !dbg !12444

cond.false:                                       ; preds = %for.body9
  %30 = load i32, i32* %j, align 4, !dbg !12445
  %idxprom29 = sext i32 %30 to i64, !dbg !12447
  %31 = load i16*, i16** %top, align 8, !dbg !12447
  %arrayidx30 = getelementptr inbounds i16, i16* %31, i64 %idxprom29, !dbg !12447
  %32 = load i16, i16* %arrayidx30, align 2, !dbg !12447
  %conv31 = zext i16 %32 to i32, !dbg !12447
  %sub32 = sub nsw i32 4095, %conv31, !dbg !12448
  %33 = load i32, i32* %j, align 4, !dbg !12449
  %idxprom33 = sext i32 %33 to i64, !dbg !12450
  %34 = load i16*, i16** %bottom, align 8, !dbg !12450
  %arrayidx34 = getelementptr inbounds i16, i16* %34, i64 %idxprom33, !dbg !12450
  %35 = load i16, i16* %arrayidx34, align 2, !dbg !12450
  %conv35 = zext i16 %35 to i32, !dbg !12450
  %sub36 = sub nsw i32 %sub32, %conv35, !dbg !12451
  %sub37 = sub nsw i32 0, %sub36, !dbg !12452
  br label %cond.end, !dbg !12453

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub28, %cond.true ], [ %sub37, %cond.false ], !dbg !12454
  %sub38 = sub nsw i32 4095, %cond, !dbg !12456
  %36 = load i32, i32* %j, align 4, !dbg !12457
  %idxprom39 = sext i32 %36 to i64, !dbg !12458
  %37 = load i16*, i16** %top, align 8, !dbg !12458
  %arrayidx40 = getelementptr inbounds i16, i16* %37, i64 %idxprom39, !dbg !12458
  %38 = load i16, i16* %arrayidx40, align 2, !dbg !12458
  %conv41 = zext i16 %38 to i32, !dbg !12458
  %sub42 = sub nsw i32 %sub38, %conv41, !dbg !12459
  %conv43 = sitofp i32 %sub42 to double, !dbg !12460
  %39 = load double, double* %opacity, align 8, !dbg !12461
  %mul = fmul double %conv43, %39, !dbg !12462
  %add = fadd double %conv11, %mul, !dbg !12463
  %conv44 = fptoui double %add to i16, !dbg !12464
  %40 = load i32, i32* %j, align 4, !dbg !12465
  %idxprom45 = sext i32 %40 to i64, !dbg !12466
  %41 = load i16*, i16** %dst, align 8, !dbg !12466
  %arrayidx46 = getelementptr inbounds i16, i16* %41, i64 %idxprom45, !dbg !12466
  store i16 %conv44, i16* %arrayidx46, align 2, !dbg !12467
  br label %for.inc, !dbg !12468

for.inc:                                          ; preds = %cond.end
  %42 = load i32, i32* %j, align 4, !dbg !12469
  %inc = add nsw i32 %42, 1, !dbg !12469
  store i32 %inc, i32* %j, align 4, !dbg !12469
  br label %for.cond5, !dbg !12471, !llvm.loop !12472

for.end:                                          ; preds = %for.cond5
  %43 = load i64, i64* %dst_linesize.addr, align 8, !dbg !12474
  %44 = load i16*, i16** %dst, align 8, !dbg !12476
  %add.ptr = getelementptr inbounds i16, i16* %44, i64 %43, !dbg !12476
  store i16* %add.ptr, i16** %dst, align 8, !dbg !12476
  %45 = load i64, i64* %top_linesize.addr, align 8, !dbg !12477
  %46 = load i16*, i16** %top, align 8, !dbg !12478
  %add.ptr47 = getelementptr inbounds i16, i16* %46, i64 %45, !dbg !12478
  store i16* %add.ptr47, i16** %top, align 8, !dbg !12478
  %47 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !12479
  %48 = load i16*, i16** %bottom, align 8, !dbg !12480
  %add.ptr48 = getelementptr inbounds i16, i16* %48, i64 %47, !dbg !12480
  store i16* %add.ptr48, i16** %bottom, align 8, !dbg !12480
  br label %for.inc49, !dbg !12481

for.inc49:                                        ; preds = %for.end
  %49 = load i32, i32* %i, align 4, !dbg !12482
  %inc50 = add nsw i32 %49, 1, !dbg !12482
  store i32 %inc50, i32* %i, align 4, !dbg !12482
  br label %for.cond, !dbg !12484, !llvm.loop !12485

for.end51:                                        ; preds = %for.cond
  ret void, !dbg !12487
}

; Function Attrs: nounwind uwtable
define internal void @blend_or_12bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !12489 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !12490, metadata !905), !dbg !12491
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !12492, metadata !905), !dbg !12493
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !12494, metadata !905), !dbg !12495
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !12496, metadata !905), !dbg !12497
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !12498, metadata !905), !dbg !12499
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !12500, metadata !905), !dbg !12501
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !12502, metadata !905), !dbg !12503
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !12504, metadata !905), !dbg !12505
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !12506, metadata !905), !dbg !12507
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !12508, metadata !905), !dbg !12509
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !12510, metadata !905), !dbg !12511
  call void @llvm.dbg.declare(metadata i16** %top, metadata !12512, metadata !905), !dbg !12513
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !12514
  %1 = bitcast i8* %0 to i16*, !dbg !12515
  store i16* %1, i16** %top, align 8, !dbg !12513
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !12516, metadata !905), !dbg !12517
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !12518
  %3 = bitcast i8* %2 to i16*, !dbg !12519
  store i16* %3, i16** %bottom, align 8, !dbg !12517
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !12520, metadata !905), !dbg !12521
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !12522
  %5 = bitcast i8* %4 to i16*, !dbg !12523
  store i16* %5, i16** %dst, align 8, !dbg !12521
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !12524, metadata !905), !dbg !12525
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !12526
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !12527
  %7 = load double, double* %opacity1, align 8, !dbg !12527
  store double %7, double* %opacity, align 8, !dbg !12525
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12528, metadata !905), !dbg !12529
  call void @llvm.dbg.declare(metadata i32* %j, metadata !12530, metadata !905), !dbg !12531
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !12532
  %div = sdiv i64 %8, 2, !dbg !12532
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !12532
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !12533
  %div2 = sdiv i64 %9, 2, !dbg !12533
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !12533
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !12534
  %div3 = sdiv i64 %10, 2, !dbg !12534
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !12534
  store i32 0, i32* %i, align 4, !dbg !12535
  br label %for.cond, !dbg !12537

for.cond:                                         ; preds = %for.inc27, %entry
  %11 = load i32, i32* %i, align 4, !dbg !12538
  %conv = sext i32 %11 to i64, !dbg !12538
  %12 = load i64, i64* %height.addr, align 8, !dbg !12541
  %cmp = icmp slt i64 %conv, %12, !dbg !12542
  br i1 %cmp, label %for.body, label %for.end29, !dbg !12543

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !12544
  br label %for.cond5, !dbg !12548

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !12549
  %conv6 = sext i32 %13 to i64, !dbg !12549
  %14 = load i64, i64* %width.addr, align 8, !dbg !12552
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !12553
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !12554

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !12555
  %idxprom = sext i32 %15 to i64, !dbg !12558
  %16 = load i16*, i16** %top, align 8, !dbg !12558
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !12558
  %17 = load i16, i16* %arrayidx, align 2, !dbg !12558
  %conv10 = zext i16 %17 to i32, !dbg !12558
  %conv11 = sitofp i32 %conv10 to double, !dbg !12558
  %18 = load i32, i32* %j, align 4, !dbg !12559
  %idxprom12 = sext i32 %18 to i64, !dbg !12560
  %19 = load i16*, i16** %top, align 8, !dbg !12560
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !12560
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !12560
  %conv14 = zext i16 %20 to i32, !dbg !12560
  %21 = load i32, i32* %j, align 4, !dbg !12561
  %idxprom15 = sext i32 %21 to i64, !dbg !12562
  %22 = load i16*, i16** %bottom, align 8, !dbg !12562
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !12562
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !12562
  %conv17 = zext i16 %23 to i32, !dbg !12562
  %or = or i32 %conv14, %conv17, !dbg !12563
  %24 = load i32, i32* %j, align 4, !dbg !12564
  %idxprom18 = sext i32 %24 to i64, !dbg !12565
  %25 = load i16*, i16** %top, align 8, !dbg !12565
  %arrayidx19 = getelementptr inbounds i16, i16* %25, i64 %idxprom18, !dbg !12565
  %26 = load i16, i16* %arrayidx19, align 2, !dbg !12565
  %conv20 = zext i16 %26 to i32, !dbg !12565
  %sub = sub nsw i32 %or, %conv20, !dbg !12566
  %conv21 = sitofp i32 %sub to double, !dbg !12567
  %27 = load double, double* %opacity, align 8, !dbg !12568
  %mul = fmul double %conv21, %27, !dbg !12569
  %add = fadd double %conv11, %mul, !dbg !12570
  %conv22 = fptoui double %add to i16, !dbg !12558
  %28 = load i32, i32* %j, align 4, !dbg !12571
  %idxprom23 = sext i32 %28 to i64, !dbg !12572
  %29 = load i16*, i16** %dst, align 8, !dbg !12572
  %arrayidx24 = getelementptr inbounds i16, i16* %29, i64 %idxprom23, !dbg !12572
  store i16 %conv22, i16* %arrayidx24, align 2, !dbg !12573
  br label %for.inc, !dbg !12574

for.inc:                                          ; preds = %for.body9
  %30 = load i32, i32* %j, align 4, !dbg !12575
  %inc = add nsw i32 %30, 1, !dbg !12575
  store i32 %inc, i32* %j, align 4, !dbg !12575
  br label %for.cond5, !dbg !12577, !llvm.loop !12578

for.end:                                          ; preds = %for.cond5
  %31 = load i64, i64* %dst_linesize.addr, align 8, !dbg !12580
  %32 = load i16*, i16** %dst, align 8, !dbg !12582
  %add.ptr = getelementptr inbounds i16, i16* %32, i64 %31, !dbg !12582
  store i16* %add.ptr, i16** %dst, align 8, !dbg !12582
  %33 = load i64, i64* %top_linesize.addr, align 8, !dbg !12583
  %34 = load i16*, i16** %top, align 8, !dbg !12584
  %add.ptr25 = getelementptr inbounds i16, i16* %34, i64 %33, !dbg !12584
  store i16* %add.ptr25, i16** %top, align 8, !dbg !12584
  %35 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !12585
  %36 = load i16*, i16** %bottom, align 8, !dbg !12586
  %add.ptr26 = getelementptr inbounds i16, i16* %36, i64 %35, !dbg !12586
  store i16* %add.ptr26, i16** %bottom, align 8, !dbg !12586
  br label %for.inc27, !dbg !12587

for.inc27:                                        ; preds = %for.end
  %37 = load i32, i32* %i, align 4, !dbg !12588
  %inc28 = add nsw i32 %37, 1, !dbg !12588
  store i32 %inc28, i32* %i, align 4, !dbg !12588
  br label %for.cond, !dbg !12590, !llvm.loop !12591

for.end29:                                        ; preds = %for.cond
  ret void, !dbg !12593
}

; Function Attrs: nounwind uwtable
define internal void @blend_overlay_12bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !12595 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !12596, metadata !905), !dbg !12597
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !12598, metadata !905), !dbg !12599
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !12600, metadata !905), !dbg !12601
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !12602, metadata !905), !dbg !12603
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !12604, metadata !905), !dbg !12605
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !12606, metadata !905), !dbg !12607
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !12608, metadata !905), !dbg !12609
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !12610, metadata !905), !dbg !12611
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !12612, metadata !905), !dbg !12613
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !12614, metadata !905), !dbg !12615
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !12616, metadata !905), !dbg !12617
  call void @llvm.dbg.declare(metadata i16** %top, metadata !12618, metadata !905), !dbg !12619
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !12620
  %1 = bitcast i8* %0 to i16*, !dbg !12621
  store i16* %1, i16** %top, align 8, !dbg !12619
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !12622, metadata !905), !dbg !12623
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !12624
  %3 = bitcast i8* %2 to i16*, !dbg !12625
  store i16* %3, i16** %bottom, align 8, !dbg !12623
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !12626, metadata !905), !dbg !12627
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !12628
  %5 = bitcast i8* %4 to i16*, !dbg !12629
  store i16* %5, i16** %dst, align 8, !dbg !12627
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !12630, metadata !905), !dbg !12631
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !12632
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !12633
  %7 = load double, double* %opacity1, align 8, !dbg !12633
  store double %7, double* %opacity, align 8, !dbg !12631
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12634, metadata !905), !dbg !12635
  call void @llvm.dbg.declare(metadata i32* %j, metadata !12636, metadata !905), !dbg !12637
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !12638
  %div = sdiv i64 %8, 2, !dbg !12638
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !12638
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !12639
  %div2 = sdiv i64 %9, 2, !dbg !12639
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !12639
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !12640
  %div3 = sdiv i64 %10, 2, !dbg !12640
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !12640
  store i32 0, i32* %i, align 4, !dbg !12641
  br label %for.cond, !dbg !12643

for.cond:                                         ; preds = %for.inc47, %entry
  %11 = load i32, i32* %i, align 4, !dbg !12644
  %conv = sext i32 %11 to i64, !dbg !12644
  %12 = load i64, i64* %height.addr, align 8, !dbg !12647
  %cmp = icmp slt i64 %conv, %12, !dbg !12648
  br i1 %cmp, label %for.body, label %for.end49, !dbg !12649

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !12650
  br label %for.cond5, !dbg !12654

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !12655
  %conv6 = sext i32 %13 to i64, !dbg !12655
  %14 = load i64, i64* %width.addr, align 8, !dbg !12658
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !12659
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !12660

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !12661
  %idxprom = sext i32 %15 to i64, !dbg !12664
  %16 = load i16*, i16** %top, align 8, !dbg !12664
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !12664
  %17 = load i16, i16* %arrayidx, align 2, !dbg !12664
  %conv10 = zext i16 %17 to i32, !dbg !12664
  %conv11 = sitofp i32 %conv10 to double, !dbg !12664
  %18 = load i32, i32* %j, align 4, !dbg !12665
  %idxprom12 = sext i32 %18 to i64, !dbg !12666
  %19 = load i16*, i16** %top, align 8, !dbg !12666
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !12666
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !12666
  %conv14 = zext i16 %20 to i32, !dbg !12666
  %cmp15 = icmp slt i32 %conv14, 2048, !dbg !12667
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !12668

cond.true:                                        ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !12669
  %idxprom17 = sext i32 %21 to i64, !dbg !12671
  %22 = load i16*, i16** %top, align 8, !dbg !12671
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !12671
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !12671
  %conv19 = zext i16 %23 to i32, !dbg !12672
  %24 = load i32, i32* %j, align 4, !dbg !12673
  %idxprom20 = sext i32 %24 to i64, !dbg !12674
  %25 = load i16*, i16** %bottom, align 8, !dbg !12674
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !12674
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !12674
  %conv22 = zext i16 %26 to i32, !dbg !12675
  %mul = mul nsw i32 %conv19, %conv22, !dbg !12676
  %div23 = sdiv i32 %mul, 4095, !dbg !12677
  %mul24 = mul nsw i32 2, %div23, !dbg !12678
  br label %cond.end, !dbg !12679

cond.false:                                       ; preds = %for.body9
  %27 = load i32, i32* %j, align 4, !dbg !12680
  %idxprom25 = sext i32 %27 to i64, !dbg !12682
  %28 = load i16*, i16** %top, align 8, !dbg !12682
  %arrayidx26 = getelementptr inbounds i16, i16* %28, i64 %idxprom25, !dbg !12682
  %29 = load i16, i16* %arrayidx26, align 2, !dbg !12682
  %conv27 = zext i16 %29 to i32, !dbg !12683
  %sub = sub nsw i32 4095, %conv27, !dbg !12684
  %30 = load i32, i32* %j, align 4, !dbg !12685
  %idxprom28 = sext i32 %30 to i64, !dbg !12686
  %31 = load i16*, i16** %bottom, align 8, !dbg !12686
  %arrayidx29 = getelementptr inbounds i16, i16* %31, i64 %idxprom28, !dbg !12686
  %32 = load i16, i16* %arrayidx29, align 2, !dbg !12686
  %conv30 = zext i16 %32 to i32, !dbg !12687
  %sub31 = sub nsw i32 4095, %conv30, !dbg !12688
  %mul32 = mul nsw i32 %sub, %sub31, !dbg !12689
  %div33 = sdiv i32 %mul32, 4095, !dbg !12690
  %mul34 = mul nsw i32 2, %div33, !dbg !12691
  %sub35 = sub nsw i32 4095, %mul34, !dbg !12692
  br label %cond.end, !dbg !12693

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %mul24, %cond.true ], [ %sub35, %cond.false ], !dbg !12694
  %33 = load i32, i32* %j, align 4, !dbg !12696
  %idxprom36 = sext i32 %33 to i64, !dbg !12697
  %34 = load i16*, i16** %top, align 8, !dbg !12697
  %arrayidx37 = getelementptr inbounds i16, i16* %34, i64 %idxprom36, !dbg !12697
  %35 = load i16, i16* %arrayidx37, align 2, !dbg !12697
  %conv38 = zext i16 %35 to i32, !dbg !12697
  %sub39 = sub nsw i32 %cond, %conv38, !dbg !12698
  %conv40 = sitofp i32 %sub39 to double, !dbg !12699
  %36 = load double, double* %opacity, align 8, !dbg !12700
  %mul41 = fmul double %conv40, %36, !dbg !12701
  %add = fadd double %conv11, %mul41, !dbg !12702
  %conv42 = fptoui double %add to i16, !dbg !12703
  %37 = load i32, i32* %j, align 4, !dbg !12704
  %idxprom43 = sext i32 %37 to i64, !dbg !12705
  %38 = load i16*, i16** %dst, align 8, !dbg !12705
  %arrayidx44 = getelementptr inbounds i16, i16* %38, i64 %idxprom43, !dbg !12705
  store i16 %conv42, i16* %arrayidx44, align 2, !dbg !12706
  br label %for.inc, !dbg !12707

for.inc:                                          ; preds = %cond.end
  %39 = load i32, i32* %j, align 4, !dbg !12708
  %inc = add nsw i32 %39, 1, !dbg !12708
  store i32 %inc, i32* %j, align 4, !dbg !12708
  br label %for.cond5, !dbg !12710, !llvm.loop !12711

for.end:                                          ; preds = %for.cond5
  %40 = load i64, i64* %dst_linesize.addr, align 8, !dbg !12713
  %41 = load i16*, i16** %dst, align 8, !dbg !12715
  %add.ptr = getelementptr inbounds i16, i16* %41, i64 %40, !dbg !12715
  store i16* %add.ptr, i16** %dst, align 8, !dbg !12715
  %42 = load i64, i64* %top_linesize.addr, align 8, !dbg !12716
  %43 = load i16*, i16** %top, align 8, !dbg !12717
  %add.ptr45 = getelementptr inbounds i16, i16* %43, i64 %42, !dbg !12717
  store i16* %add.ptr45, i16** %top, align 8, !dbg !12717
  %44 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !12718
  %45 = load i16*, i16** %bottom, align 8, !dbg !12719
  %add.ptr46 = getelementptr inbounds i16, i16* %45, i64 %44, !dbg !12719
  store i16* %add.ptr46, i16** %bottom, align 8, !dbg !12719
  br label %for.inc47, !dbg !12720

for.inc47:                                        ; preds = %for.end
  %46 = load i32, i32* %i, align 4, !dbg !12721
  %inc48 = add nsw i32 %46, 1, !dbg !12721
  store i32 %inc48, i32* %i, align 4, !dbg !12721
  br label %for.cond, !dbg !12723, !llvm.loop !12724

for.end49:                                        ; preds = %for.cond
  ret void, !dbg !12726
}

; Function Attrs: nounwind uwtable
define internal void @blend_phoenix_12bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !12728 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !12729, metadata !905), !dbg !12730
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !12731, metadata !905), !dbg !12732
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !12733, metadata !905), !dbg !12734
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !12735, metadata !905), !dbg !12736
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !12737, metadata !905), !dbg !12738
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !12739, metadata !905), !dbg !12740
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !12741, metadata !905), !dbg !12742
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !12743, metadata !905), !dbg !12744
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !12745, metadata !905), !dbg !12746
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !12747, metadata !905), !dbg !12748
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !12749, metadata !905), !dbg !12750
  call void @llvm.dbg.declare(metadata i16** %top, metadata !12751, metadata !905), !dbg !12752
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !12753
  %1 = bitcast i8* %0 to i16*, !dbg !12754
  store i16* %1, i16** %top, align 8, !dbg !12752
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !12755, metadata !905), !dbg !12756
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !12757
  %3 = bitcast i8* %2 to i16*, !dbg !12758
  store i16* %3, i16** %bottom, align 8, !dbg !12756
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !12759, metadata !905), !dbg !12760
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !12761
  %5 = bitcast i8* %4 to i16*, !dbg !12762
  store i16* %5, i16** %dst, align 8, !dbg !12760
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !12763, metadata !905), !dbg !12764
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !12765
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !12766
  %7 = load double, double* %opacity1, align 8, !dbg !12766
  store double %7, double* %opacity, align 8, !dbg !12764
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12767, metadata !905), !dbg !12768
  call void @llvm.dbg.declare(metadata i32* %j, metadata !12769, metadata !905), !dbg !12770
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !12771
  %div = sdiv i64 %8, 2, !dbg !12771
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !12771
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !12772
  %div2 = sdiv i64 %9, 2, !dbg !12772
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !12772
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !12773
  %div3 = sdiv i64 %10, 2, !dbg !12773
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !12773
  store i32 0, i32* %i, align 4, !dbg !12774
  br label %for.cond, !dbg !12776

for.cond:                                         ; preds = %for.inc55, %entry
  %11 = load i32, i32* %i, align 4, !dbg !12777
  %conv = sext i32 %11 to i64, !dbg !12777
  %12 = load i64, i64* %height.addr, align 8, !dbg !12780
  %cmp = icmp slt i64 %conv, %12, !dbg !12781
  br i1 %cmp, label %for.body, label %for.end57, !dbg !12782

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !12783
  br label %for.cond5, !dbg !12787

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !12788
  %conv6 = sext i32 %13 to i64, !dbg !12788
  %14 = load i64, i64* %width.addr, align 8, !dbg !12791
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !12792
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !12793

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !12794
  %idxprom = sext i32 %15 to i64, !dbg !12797
  %16 = load i16*, i16** %top, align 8, !dbg !12797
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !12797
  %17 = load i16, i16* %arrayidx, align 2, !dbg !12797
  %conv10 = zext i16 %17 to i32, !dbg !12797
  %conv11 = sitofp i32 %conv10 to double, !dbg !12797
  %18 = load i32, i32* %j, align 4, !dbg !12798
  %idxprom12 = sext i32 %18 to i64, !dbg !12799
  %19 = load i16*, i16** %top, align 8, !dbg !12799
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !12799
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !12799
  %conv14 = zext i16 %20 to i32, !dbg !12800
  %21 = load i32, i32* %j, align 4, !dbg !12801
  %idxprom15 = sext i32 %21 to i64, !dbg !12802
  %22 = load i16*, i16** %bottom, align 8, !dbg !12802
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !12802
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !12802
  %conv17 = zext i16 %23 to i32, !dbg !12803
  %cmp18 = icmp sgt i32 %conv14, %conv17, !dbg !12804
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !12800

cond.true:                                        ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !12805
  %idxprom20 = sext i32 %24 to i64, !dbg !12807
  %25 = load i16*, i16** %bottom, align 8, !dbg !12807
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !12807
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !12807
  %conv22 = zext i16 %26 to i32, !dbg !12808
  br label %cond.end, !dbg !12809

cond.false:                                       ; preds = %for.body9
  %27 = load i32, i32* %j, align 4, !dbg !12810
  %idxprom23 = sext i32 %27 to i64, !dbg !12812
  %28 = load i16*, i16** %top, align 8, !dbg !12812
  %arrayidx24 = getelementptr inbounds i16, i16* %28, i64 %idxprom23, !dbg !12812
  %29 = load i16, i16* %arrayidx24, align 2, !dbg !12812
  %conv25 = zext i16 %29 to i32, !dbg !12813
  br label %cond.end, !dbg !12814

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv22, %cond.true ], [ %conv25, %cond.false ], !dbg !12815
  %30 = load i32, i32* %j, align 4, !dbg !12817
  %idxprom26 = sext i32 %30 to i64, !dbg !12818
  %31 = load i16*, i16** %top, align 8, !dbg !12818
  %arrayidx27 = getelementptr inbounds i16, i16* %31, i64 %idxprom26, !dbg !12818
  %32 = load i16, i16* %arrayidx27, align 2, !dbg !12818
  %conv28 = zext i16 %32 to i32, !dbg !12819
  %33 = load i32, i32* %j, align 4, !dbg !12820
  %idxprom29 = sext i32 %33 to i64, !dbg !12821
  %34 = load i16*, i16** %bottom, align 8, !dbg !12821
  %arrayidx30 = getelementptr inbounds i16, i16* %34, i64 %idxprom29, !dbg !12821
  %35 = load i16, i16* %arrayidx30, align 2, !dbg !12821
  %conv31 = zext i16 %35 to i32, !dbg !12822
  %cmp32 = icmp sgt i32 %conv28, %conv31, !dbg !12823
  br i1 %cmp32, label %cond.true34, label %cond.false38, !dbg !12819

cond.true34:                                      ; preds = %cond.end
  %36 = load i32, i32* %j, align 4, !dbg !12824
  %idxprom35 = sext i32 %36 to i64, !dbg !12826
  %37 = load i16*, i16** %top, align 8, !dbg !12826
  %arrayidx36 = getelementptr inbounds i16, i16* %37, i64 %idxprom35, !dbg !12826
  %38 = load i16, i16* %arrayidx36, align 2, !dbg !12826
  %conv37 = zext i16 %38 to i32, !dbg !12827
  br label %cond.end42, !dbg !12828

cond.false38:                                     ; preds = %cond.end
  %39 = load i32, i32* %j, align 4, !dbg !12829
  %idxprom39 = sext i32 %39 to i64, !dbg !12831
  %40 = load i16*, i16** %bottom, align 8, !dbg !12831
  %arrayidx40 = getelementptr inbounds i16, i16* %40, i64 %idxprom39, !dbg !12831
  %41 = load i16, i16* %arrayidx40, align 2, !dbg !12831
  %conv41 = zext i16 %41 to i32, !dbg !12832
  br label %cond.end42, !dbg !12833

cond.end42:                                       ; preds = %cond.false38, %cond.true34
  %cond43 = phi i32 [ %conv37, %cond.true34 ], [ %conv41, %cond.false38 ], !dbg !12834
  %sub = sub nsw i32 %cond, %cond43, !dbg !12836
  %add = add nsw i32 %sub, 4095, !dbg !12837
  %42 = load i32, i32* %j, align 4, !dbg !12838
  %idxprom44 = sext i32 %42 to i64, !dbg !12839
  %43 = load i16*, i16** %top, align 8, !dbg !12839
  %arrayidx45 = getelementptr inbounds i16, i16* %43, i64 %idxprom44, !dbg !12839
  %44 = load i16, i16* %arrayidx45, align 2, !dbg !12839
  %conv46 = zext i16 %44 to i32, !dbg !12839
  %sub47 = sub nsw i32 %add, %conv46, !dbg !12840
  %conv48 = sitofp i32 %sub47 to double, !dbg !12841
  %45 = load double, double* %opacity, align 8, !dbg !12842
  %mul = fmul double %conv48, %45, !dbg !12843
  %add49 = fadd double %conv11, %mul, !dbg !12844
  %conv50 = fptoui double %add49 to i16, !dbg !12845
  %46 = load i32, i32* %j, align 4, !dbg !12846
  %idxprom51 = sext i32 %46 to i64, !dbg !12847
  %47 = load i16*, i16** %dst, align 8, !dbg !12847
  %arrayidx52 = getelementptr inbounds i16, i16* %47, i64 %idxprom51, !dbg !12847
  store i16 %conv50, i16* %arrayidx52, align 2, !dbg !12848
  br label %for.inc, !dbg !12849

for.inc:                                          ; preds = %cond.end42
  %48 = load i32, i32* %j, align 4, !dbg !12850
  %inc = add nsw i32 %48, 1, !dbg !12850
  store i32 %inc, i32* %j, align 4, !dbg !12850
  br label %for.cond5, !dbg !12852, !llvm.loop !12853

for.end:                                          ; preds = %for.cond5
  %49 = load i64, i64* %dst_linesize.addr, align 8, !dbg !12855
  %50 = load i16*, i16** %dst, align 8, !dbg !12857
  %add.ptr = getelementptr inbounds i16, i16* %50, i64 %49, !dbg !12857
  store i16* %add.ptr, i16** %dst, align 8, !dbg !12857
  %51 = load i64, i64* %top_linesize.addr, align 8, !dbg !12858
  %52 = load i16*, i16** %top, align 8, !dbg !12859
  %add.ptr53 = getelementptr inbounds i16, i16* %52, i64 %51, !dbg !12859
  store i16* %add.ptr53, i16** %top, align 8, !dbg !12859
  %53 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !12860
  %54 = load i16*, i16** %bottom, align 8, !dbg !12861
  %add.ptr54 = getelementptr inbounds i16, i16* %54, i64 %53, !dbg !12861
  store i16* %add.ptr54, i16** %bottom, align 8, !dbg !12861
  br label %for.inc55, !dbg !12862

for.inc55:                                        ; preds = %for.end
  %55 = load i32, i32* %i, align 4, !dbg !12863
  %inc56 = add nsw i32 %55, 1, !dbg !12863
  store i32 %inc56, i32* %i, align 4, !dbg !12863
  br label %for.cond, !dbg !12865, !llvm.loop !12866

for.end57:                                        ; preds = %for.cond
  ret void, !dbg !12868
}

; Function Attrs: nounwind uwtable
define internal void @blend_pinlight_12bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !12870 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !12871, metadata !905), !dbg !12872
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !12873, metadata !905), !dbg !12874
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !12875, metadata !905), !dbg !12876
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !12877, metadata !905), !dbg !12878
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !12879, metadata !905), !dbg !12880
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !12881, metadata !905), !dbg !12882
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !12883, metadata !905), !dbg !12884
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !12885, metadata !905), !dbg !12886
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !12887, metadata !905), !dbg !12888
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !12889, metadata !905), !dbg !12890
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !12891, metadata !905), !dbg !12892
  call void @llvm.dbg.declare(metadata i16** %top, metadata !12893, metadata !905), !dbg !12894
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !12895
  %1 = bitcast i8* %0 to i16*, !dbg !12896
  store i16* %1, i16** %top, align 8, !dbg !12894
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !12897, metadata !905), !dbg !12898
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !12899
  %3 = bitcast i8* %2 to i16*, !dbg !12900
  store i16* %3, i16** %bottom, align 8, !dbg !12898
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !12901, metadata !905), !dbg !12902
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !12903
  %5 = bitcast i8* %4 to i16*, !dbg !12904
  store i16* %5, i16** %dst, align 8, !dbg !12902
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !12905, metadata !905), !dbg !12906
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !12907
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !12908
  %7 = load double, double* %opacity1, align 8, !dbg !12908
  store double %7, double* %opacity, align 8, !dbg !12906
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12909, metadata !905), !dbg !12910
  call void @llvm.dbg.declare(metadata i32* %j, metadata !12911, metadata !905), !dbg !12912
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !12913
  %div = sdiv i64 %8, 2, !dbg !12913
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !12913
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !12914
  %div2 = sdiv i64 %9, 2, !dbg !12914
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !12914
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !12915
  %div3 = sdiv i64 %10, 2, !dbg !12915
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !12915
  store i32 0, i32* %i, align 4, !dbg !12916
  br label %for.cond, !dbg !12918

for.cond:                                         ; preds = %for.inc68, %entry
  %11 = load i32, i32* %i, align 4, !dbg !12919
  %conv = sext i32 %11 to i64, !dbg !12919
  %12 = load i64, i64* %height.addr, align 8, !dbg !12922
  %cmp = icmp slt i64 %conv, %12, !dbg !12923
  br i1 %cmp, label %for.body, label %for.end70, !dbg !12924

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !12925
  br label %for.cond5, !dbg !12929

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !12930
  %conv6 = sext i32 %13 to i64, !dbg !12930
  %14 = load i64, i64* %width.addr, align 8, !dbg !12933
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !12934
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !12935

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !12936
  %idxprom = sext i32 %15 to i64, !dbg !12939
  %16 = load i16*, i16** %top, align 8, !dbg !12939
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !12939
  %17 = load i16, i16* %arrayidx, align 2, !dbg !12939
  %conv10 = zext i16 %17 to i32, !dbg !12939
  %conv11 = sitofp i32 %conv10 to double, !dbg !12939
  %18 = load i32, i32* %j, align 4, !dbg !12940
  %idxprom12 = sext i32 %18 to i64, !dbg !12941
  %19 = load i16*, i16** %bottom, align 8, !dbg !12941
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !12941
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !12941
  %conv14 = zext i16 %20 to i32, !dbg !12941
  %cmp15 = icmp slt i32 %conv14, 2048, !dbg !12942
  br i1 %cmp15, label %cond.true, label %cond.false33, !dbg !12943

cond.true:                                        ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !12944
  %idxprom17 = sext i32 %21 to i64, !dbg !12946
  %22 = load i16*, i16** %top, align 8, !dbg !12946
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !12946
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !12946
  %conv19 = zext i16 %23 to i32, !dbg !12947
  %24 = load i32, i32* %j, align 4, !dbg !12948
  %idxprom20 = sext i32 %24 to i64, !dbg !12949
  %25 = load i16*, i16** %bottom, align 8, !dbg !12949
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !12949
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !12949
  %conv22 = zext i16 %26 to i32, !dbg !12949
  %mul = mul nsw i32 2, %conv22, !dbg !12950
  %cmp23 = icmp sgt i32 %conv19, %mul, !dbg !12951
  br i1 %cmp23, label %cond.true25, label %cond.false, !dbg !12947

cond.true25:                                      ; preds = %cond.true
  %27 = load i32, i32* %j, align 4, !dbg !12952
  %idxprom26 = sext i32 %27 to i64, !dbg !12954
  %28 = load i16*, i16** %bottom, align 8, !dbg !12954
  %arrayidx27 = getelementptr inbounds i16, i16* %28, i64 %idxprom26, !dbg !12954
  %29 = load i16, i16* %arrayidx27, align 2, !dbg !12954
  %conv28 = zext i16 %29 to i32, !dbg !12954
  %mul29 = mul nsw i32 2, %conv28, !dbg !12955
  br label %cond.end, !dbg !12956

cond.false:                                       ; preds = %cond.true
  %30 = load i32, i32* %j, align 4, !dbg !12957
  %idxprom30 = sext i32 %30 to i64, !dbg !12959
  %31 = load i16*, i16** %top, align 8, !dbg !12959
  %arrayidx31 = getelementptr inbounds i16, i16* %31, i64 %idxprom30, !dbg !12959
  %32 = load i16, i16* %arrayidx31, align 2, !dbg !12959
  %conv32 = zext i16 %32 to i32, !dbg !12960
  br label %cond.end, !dbg !12961

cond.end:                                         ; preds = %cond.false, %cond.true25
  %cond = phi i32 [ %mul29, %cond.true25 ], [ %conv32, %cond.false ], !dbg !12962
  br label %cond.end55, !dbg !12964

cond.false33:                                     ; preds = %for.body9
  %33 = load i32, i32* %j, align 4, !dbg !12965
  %idxprom34 = sext i32 %33 to i64, !dbg !12967
  %34 = load i16*, i16** %top, align 8, !dbg !12967
  %arrayidx35 = getelementptr inbounds i16, i16* %34, i64 %idxprom34, !dbg !12967
  %35 = load i16, i16* %arrayidx35, align 2, !dbg !12967
  %conv36 = zext i16 %35 to i32, !dbg !12968
  %36 = load i32, i32* %j, align 4, !dbg !12969
  %idxprom37 = sext i32 %36 to i64, !dbg !12970
  %37 = load i16*, i16** %bottom, align 8, !dbg !12970
  %arrayidx38 = getelementptr inbounds i16, i16* %37, i64 %idxprom37, !dbg !12970
  %38 = load i16, i16* %arrayidx38, align 2, !dbg !12970
  %conv39 = zext i16 %38 to i32, !dbg !12970
  %sub = sub nsw i32 %conv39, 2048, !dbg !12971
  %mul40 = mul nsw i32 2, %sub, !dbg !12972
  %cmp41 = icmp sgt i32 %conv36, %mul40, !dbg !12973
  br i1 %cmp41, label %cond.true43, label %cond.false47, !dbg !12968

cond.true43:                                      ; preds = %cond.false33
  %39 = load i32, i32* %j, align 4, !dbg !12974
  %idxprom44 = sext i32 %39 to i64, !dbg !12976
  %40 = load i16*, i16** %top, align 8, !dbg !12976
  %arrayidx45 = getelementptr inbounds i16, i16* %40, i64 %idxprom44, !dbg !12976
  %41 = load i16, i16* %arrayidx45, align 2, !dbg !12976
  %conv46 = zext i16 %41 to i32, !dbg !12977
  br label %cond.end53, !dbg !12978

cond.false47:                                     ; preds = %cond.false33
  %42 = load i32, i32* %j, align 4, !dbg !12979
  %idxprom48 = sext i32 %42 to i64, !dbg !12981
  %43 = load i16*, i16** %bottom, align 8, !dbg !12981
  %arrayidx49 = getelementptr inbounds i16, i16* %43, i64 %idxprom48, !dbg !12981
  %44 = load i16, i16* %arrayidx49, align 2, !dbg !12981
  %conv50 = zext i16 %44 to i32, !dbg !12981
  %sub51 = sub nsw i32 %conv50, 2048, !dbg !12982
  %mul52 = mul nsw i32 2, %sub51, !dbg !12983
  br label %cond.end53, !dbg !12984

cond.end53:                                       ; preds = %cond.false47, %cond.true43
  %cond54 = phi i32 [ %conv46, %cond.true43 ], [ %mul52, %cond.false47 ], !dbg !12985
  br label %cond.end55, !dbg !12987

cond.end55:                                       ; preds = %cond.end53, %cond.end
  %cond56 = phi i32 [ %cond, %cond.end ], [ %cond54, %cond.end53 ], !dbg !12988
  %45 = load i32, i32* %j, align 4, !dbg !12990
  %idxprom57 = sext i32 %45 to i64, !dbg !12991
  %46 = load i16*, i16** %top, align 8, !dbg !12991
  %arrayidx58 = getelementptr inbounds i16, i16* %46, i64 %idxprom57, !dbg !12991
  %47 = load i16, i16* %arrayidx58, align 2, !dbg !12991
  %conv59 = zext i16 %47 to i32, !dbg !12991
  %sub60 = sub nsw i32 %cond56, %conv59, !dbg !12992
  %conv61 = sitofp i32 %sub60 to double, !dbg !12993
  %48 = load double, double* %opacity, align 8, !dbg !12994
  %mul62 = fmul double %conv61, %48, !dbg !12995
  %add = fadd double %conv11, %mul62, !dbg !12996
  %conv63 = fptoui double %add to i16, !dbg !12997
  %49 = load i32, i32* %j, align 4, !dbg !12998
  %idxprom64 = sext i32 %49 to i64, !dbg !12999
  %50 = load i16*, i16** %dst, align 8, !dbg !12999
  %arrayidx65 = getelementptr inbounds i16, i16* %50, i64 %idxprom64, !dbg !12999
  store i16 %conv63, i16* %arrayidx65, align 2, !dbg !13000
  br label %for.inc, !dbg !13001

for.inc:                                          ; preds = %cond.end55
  %51 = load i32, i32* %j, align 4, !dbg !13002
  %inc = add nsw i32 %51, 1, !dbg !13002
  store i32 %inc, i32* %j, align 4, !dbg !13002
  br label %for.cond5, !dbg !13004, !llvm.loop !13005

for.end:                                          ; preds = %for.cond5
  %52 = load i64, i64* %dst_linesize.addr, align 8, !dbg !13007
  %53 = load i16*, i16** %dst, align 8, !dbg !13009
  %add.ptr = getelementptr inbounds i16, i16* %53, i64 %52, !dbg !13009
  store i16* %add.ptr, i16** %dst, align 8, !dbg !13009
  %54 = load i64, i64* %top_linesize.addr, align 8, !dbg !13010
  %55 = load i16*, i16** %top, align 8, !dbg !13011
  %add.ptr66 = getelementptr inbounds i16, i16* %55, i64 %54, !dbg !13011
  store i16* %add.ptr66, i16** %top, align 8, !dbg !13011
  %56 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !13012
  %57 = load i16*, i16** %bottom, align 8, !dbg !13013
  %add.ptr67 = getelementptr inbounds i16, i16* %57, i64 %56, !dbg !13013
  store i16* %add.ptr67, i16** %bottom, align 8, !dbg !13013
  br label %for.inc68, !dbg !13014

for.inc68:                                        ; preds = %for.end
  %58 = load i32, i32* %i, align 4, !dbg !13015
  %inc69 = add nsw i32 %58, 1, !dbg !13015
  store i32 %inc69, i32* %i, align 4, !dbg !13015
  br label %for.cond, !dbg !13017, !llvm.loop !13018

for.end70:                                        ; preds = %for.cond
  ret void, !dbg !13020
}

; Function Attrs: nounwind uwtable
define internal void @blend_reflect_12bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !13022 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !13023, metadata !905), !dbg !13024
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !13025, metadata !905), !dbg !13026
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !13027, metadata !905), !dbg !13028
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !13029, metadata !905), !dbg !13030
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !13031, metadata !905), !dbg !13032
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !13033, metadata !905), !dbg !13034
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !13035, metadata !905), !dbg !13036
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !13037, metadata !905), !dbg !13038
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !13039, metadata !905), !dbg !13040
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !13041, metadata !905), !dbg !13042
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !13043, metadata !905), !dbg !13044
  call void @llvm.dbg.declare(metadata i16** %top, metadata !13045, metadata !905), !dbg !13046
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !13047
  %1 = bitcast i8* %0 to i16*, !dbg !13048
  store i16* %1, i16** %top, align 8, !dbg !13046
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !13049, metadata !905), !dbg !13050
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !13051
  %3 = bitcast i8* %2 to i16*, !dbg !13052
  store i16* %3, i16** %bottom, align 8, !dbg !13050
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !13053, metadata !905), !dbg !13054
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !13055
  %5 = bitcast i8* %4 to i16*, !dbg !13056
  store i16* %5, i16** %dst, align 8, !dbg !13054
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !13057, metadata !905), !dbg !13058
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !13059
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !13060
  %7 = load double, double* %opacity1, align 8, !dbg !13060
  store double %7, double* %opacity, align 8, !dbg !13058
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13061, metadata !905), !dbg !13062
  call void @llvm.dbg.declare(metadata i32* %j, metadata !13063, metadata !905), !dbg !13064
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !13065
  %div = sdiv i64 %8, 2, !dbg !13065
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !13065
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !13066
  %div2 = sdiv i64 %9, 2, !dbg !13066
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !13066
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !13067
  %div3 = sdiv i64 %10, 2, !dbg !13067
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !13067
  store i32 0, i32* %i, align 4, !dbg !13068
  br label %for.cond, !dbg !13070

for.cond:                                         ; preds = %for.inc59, %entry
  %11 = load i32, i32* %i, align 4, !dbg !13071
  %conv = sext i32 %11 to i64, !dbg !13071
  %12 = load i64, i64* %height.addr, align 8, !dbg !13074
  %cmp = icmp slt i64 %conv, %12, !dbg !13075
  br i1 %cmp, label %for.body, label %for.end61, !dbg !13076

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !13077
  br label %for.cond5, !dbg !13081

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !13082
  %conv6 = sext i32 %13 to i64, !dbg !13082
  %14 = load i64, i64* %width.addr, align 8, !dbg !13085
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !13086
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !13087

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !13088
  %idxprom = sext i32 %15 to i64, !dbg !13091
  %16 = load i16*, i16** %top, align 8, !dbg !13091
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !13091
  %17 = load i16, i16* %arrayidx, align 2, !dbg !13091
  %conv10 = zext i16 %17 to i32, !dbg !13091
  %conv11 = sitofp i32 %conv10 to double, !dbg !13091
  %18 = load i32, i32* %j, align 4, !dbg !13092
  %idxprom12 = sext i32 %18 to i64, !dbg !13093
  %19 = load i16*, i16** %bottom, align 8, !dbg !13093
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !13093
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !13093
  %conv14 = zext i16 %20 to i32, !dbg !13093
  %cmp15 = icmp eq i32 %conv14, 4095, !dbg !13094
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !13095

cond.true:                                        ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !13096
  %idxprom17 = sext i32 %21 to i64, !dbg !13098
  %22 = load i16*, i16** %bottom, align 8, !dbg !13098
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !13098
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !13098
  %conv19 = zext i16 %23 to i32, !dbg !13098
  br label %cond.end46, !dbg !13099

cond.false:                                       ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !13100
  %idxprom20 = sext i32 %24 to i64, !dbg !13102
  %25 = load i16*, i16** %top, align 8, !dbg !13102
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !13102
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !13102
  %conv22 = zext i16 %26 to i32, !dbg !13102
  %27 = load i32, i32* %j, align 4, !dbg !13103
  %idxprom23 = sext i32 %27 to i64, !dbg !13104
  %28 = load i16*, i16** %top, align 8, !dbg !13104
  %arrayidx24 = getelementptr inbounds i16, i16* %28, i64 %idxprom23, !dbg !13104
  %29 = load i16, i16* %arrayidx24, align 2, !dbg !13104
  %conv25 = zext i16 %29 to i32, !dbg !13104
  %mul = mul nsw i32 %conv22, %conv25, !dbg !13105
  %30 = load i32, i32* %j, align 4, !dbg !13106
  %idxprom26 = sext i32 %30 to i64, !dbg !13107
  %31 = load i16*, i16** %bottom, align 8, !dbg !13107
  %arrayidx27 = getelementptr inbounds i16, i16* %31, i64 %idxprom26, !dbg !13107
  %32 = load i16, i16* %arrayidx27, align 2, !dbg !13107
  %conv28 = zext i16 %32 to i32, !dbg !13107
  %sub = sub nsw i32 4095, %conv28, !dbg !13108
  %div29 = sdiv i32 %mul, %sub, !dbg !13109
  %cmp30 = icmp sgt i32 4095, %div29, !dbg !13110
  br i1 %cmp30, label %cond.true32, label %cond.false45, !dbg !13111

cond.true32:                                      ; preds = %cond.false
  %33 = load i32, i32* %j, align 4, !dbg !13112
  %idxprom33 = sext i32 %33 to i64, !dbg !13114
  %34 = load i16*, i16** %top, align 8, !dbg !13114
  %arrayidx34 = getelementptr inbounds i16, i16* %34, i64 %idxprom33, !dbg !13114
  %35 = load i16, i16* %arrayidx34, align 2, !dbg !13114
  %conv35 = zext i16 %35 to i32, !dbg !13114
  %36 = load i32, i32* %j, align 4, !dbg !13115
  %idxprom36 = sext i32 %36 to i64, !dbg !13116
  %37 = load i16*, i16** %top, align 8, !dbg !13116
  %arrayidx37 = getelementptr inbounds i16, i16* %37, i64 %idxprom36, !dbg !13116
  %38 = load i16, i16* %arrayidx37, align 2, !dbg !13116
  %conv38 = zext i16 %38 to i32, !dbg !13116
  %mul39 = mul nsw i32 %conv35, %conv38, !dbg !13117
  %39 = load i32, i32* %j, align 4, !dbg !13118
  %idxprom40 = sext i32 %39 to i64, !dbg !13119
  %40 = load i16*, i16** %bottom, align 8, !dbg !13119
  %arrayidx41 = getelementptr inbounds i16, i16* %40, i64 %idxprom40, !dbg !13119
  %41 = load i16, i16* %arrayidx41, align 2, !dbg !13119
  %conv42 = zext i16 %41 to i32, !dbg !13119
  %sub43 = sub nsw i32 4095, %conv42, !dbg !13120
  %div44 = sdiv i32 %mul39, %sub43, !dbg !13121
  br label %cond.end, !dbg !13122

cond.false45:                                     ; preds = %cond.false
  br label %cond.end, !dbg !13123

cond.end:                                         ; preds = %cond.false45, %cond.true32
  %cond = phi i32 [ %div44, %cond.true32 ], [ 4095, %cond.false45 ], !dbg !13125
  br label %cond.end46, !dbg !13127

cond.end46:                                       ; preds = %cond.end, %cond.true
  %cond47 = phi i32 [ %conv19, %cond.true ], [ %cond, %cond.end ], !dbg !13128
  %42 = load i32, i32* %j, align 4, !dbg !13130
  %idxprom48 = sext i32 %42 to i64, !dbg !13131
  %43 = load i16*, i16** %top, align 8, !dbg !13131
  %arrayidx49 = getelementptr inbounds i16, i16* %43, i64 %idxprom48, !dbg !13131
  %44 = load i16, i16* %arrayidx49, align 2, !dbg !13131
  %conv50 = zext i16 %44 to i32, !dbg !13131
  %sub51 = sub nsw i32 %cond47, %conv50, !dbg !13132
  %conv52 = sitofp i32 %sub51 to double, !dbg !13133
  %45 = load double, double* %opacity, align 8, !dbg !13134
  %mul53 = fmul double %conv52, %45, !dbg !13135
  %add = fadd double %conv11, %mul53, !dbg !13136
  %conv54 = fptoui double %add to i16, !dbg !13137
  %46 = load i32, i32* %j, align 4, !dbg !13138
  %idxprom55 = sext i32 %46 to i64, !dbg !13139
  %47 = load i16*, i16** %dst, align 8, !dbg !13139
  %arrayidx56 = getelementptr inbounds i16, i16* %47, i64 %idxprom55, !dbg !13139
  store i16 %conv54, i16* %arrayidx56, align 2, !dbg !13140
  br label %for.inc, !dbg !13141

for.inc:                                          ; preds = %cond.end46
  %48 = load i32, i32* %j, align 4, !dbg !13142
  %inc = add nsw i32 %48, 1, !dbg !13142
  store i32 %inc, i32* %j, align 4, !dbg !13142
  br label %for.cond5, !dbg !13144, !llvm.loop !13145

for.end:                                          ; preds = %for.cond5
  %49 = load i64, i64* %dst_linesize.addr, align 8, !dbg !13147
  %50 = load i16*, i16** %dst, align 8, !dbg !13149
  %add.ptr = getelementptr inbounds i16, i16* %50, i64 %49, !dbg !13149
  store i16* %add.ptr, i16** %dst, align 8, !dbg !13149
  %51 = load i64, i64* %top_linesize.addr, align 8, !dbg !13150
  %52 = load i16*, i16** %top, align 8, !dbg !13151
  %add.ptr57 = getelementptr inbounds i16, i16* %52, i64 %51, !dbg !13151
  store i16* %add.ptr57, i16** %top, align 8, !dbg !13151
  %53 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !13152
  %54 = load i16*, i16** %bottom, align 8, !dbg !13153
  %add.ptr58 = getelementptr inbounds i16, i16* %54, i64 %53, !dbg !13153
  store i16* %add.ptr58, i16** %bottom, align 8, !dbg !13153
  br label %for.inc59, !dbg !13154

for.inc59:                                        ; preds = %for.end
  %55 = load i32, i32* %i, align 4, !dbg !13155
  %inc60 = add nsw i32 %55, 1, !dbg !13155
  store i32 %inc60, i32* %i, align 4, !dbg !13155
  br label %for.cond, !dbg !13157, !llvm.loop !13158

for.end61:                                        ; preds = %for.cond
  ret void, !dbg !13160
}

; Function Attrs: nounwind uwtable
define internal void @blend_screen_12bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !13162 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !13163, metadata !905), !dbg !13164
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !13165, metadata !905), !dbg !13166
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !13167, metadata !905), !dbg !13168
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !13169, metadata !905), !dbg !13170
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !13171, metadata !905), !dbg !13172
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !13173, metadata !905), !dbg !13174
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !13175, metadata !905), !dbg !13176
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !13177, metadata !905), !dbg !13178
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !13179, metadata !905), !dbg !13180
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !13181, metadata !905), !dbg !13182
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !13183, metadata !905), !dbg !13184
  call void @llvm.dbg.declare(metadata i16** %top, metadata !13185, metadata !905), !dbg !13186
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !13187
  %1 = bitcast i8* %0 to i16*, !dbg !13188
  store i16* %1, i16** %top, align 8, !dbg !13186
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !13189, metadata !905), !dbg !13190
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !13191
  %3 = bitcast i8* %2 to i16*, !dbg !13192
  store i16* %3, i16** %bottom, align 8, !dbg !13190
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !13193, metadata !905), !dbg !13194
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !13195
  %5 = bitcast i8* %4 to i16*, !dbg !13196
  store i16* %5, i16** %dst, align 8, !dbg !13194
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !13197, metadata !905), !dbg !13198
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !13199
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !13200
  %7 = load double, double* %opacity1, align 8, !dbg !13200
  store double %7, double* %opacity, align 8, !dbg !13198
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13201, metadata !905), !dbg !13202
  call void @llvm.dbg.declare(metadata i32* %j, metadata !13203, metadata !905), !dbg !13204
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !13205
  %div = sdiv i64 %8, 2, !dbg !13205
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !13205
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !13206
  %div2 = sdiv i64 %9, 2, !dbg !13206
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !13206
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !13207
  %div3 = sdiv i64 %10, 2, !dbg !13207
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !13207
  store i32 0, i32* %i, align 4, !dbg !13208
  br label %for.cond, !dbg !13210

for.cond:                                         ; preds = %for.inc33, %entry
  %11 = load i32, i32* %i, align 4, !dbg !13211
  %conv = sext i32 %11 to i64, !dbg !13211
  %12 = load i64, i64* %height.addr, align 8, !dbg !13214
  %cmp = icmp slt i64 %conv, %12, !dbg !13215
  br i1 %cmp, label %for.body, label %for.end35, !dbg !13216

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !13217
  br label %for.cond5, !dbg !13221

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !13222
  %conv6 = sext i32 %13 to i64, !dbg !13222
  %14 = load i64, i64* %width.addr, align 8, !dbg !13225
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !13226
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !13227

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !13228
  %idxprom = sext i32 %15 to i64, !dbg !13231
  %16 = load i16*, i16** %top, align 8, !dbg !13231
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !13231
  %17 = load i16, i16* %arrayidx, align 2, !dbg !13231
  %conv10 = zext i16 %17 to i32, !dbg !13231
  %conv11 = sitofp i32 %conv10 to double, !dbg !13231
  %18 = load i32, i32* %j, align 4, !dbg !13232
  %idxprom12 = sext i32 %18 to i64, !dbg !13233
  %19 = load i16*, i16** %top, align 8, !dbg !13233
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !13233
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !13233
  %conv14 = zext i16 %20 to i32, !dbg !13234
  %sub = sub nsw i32 4095, %conv14, !dbg !13235
  %21 = load i32, i32* %j, align 4, !dbg !13236
  %idxprom15 = sext i32 %21 to i64, !dbg !13237
  %22 = load i16*, i16** %bottom, align 8, !dbg !13237
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !13237
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !13237
  %conv17 = zext i16 %23 to i32, !dbg !13238
  %sub18 = sub nsw i32 4095, %conv17, !dbg !13239
  %mul = mul nsw i32 %sub, %sub18, !dbg !13240
  %div19 = sdiv i32 %mul, 4095, !dbg !13241
  %mul20 = mul nsw i32 1, %div19, !dbg !13242
  %sub21 = sub nsw i32 4095, %mul20, !dbg !13243
  %24 = load i32, i32* %j, align 4, !dbg !13244
  %idxprom22 = sext i32 %24 to i64, !dbg !13245
  %25 = load i16*, i16** %top, align 8, !dbg !13245
  %arrayidx23 = getelementptr inbounds i16, i16* %25, i64 %idxprom22, !dbg !13245
  %26 = load i16, i16* %arrayidx23, align 2, !dbg !13245
  %conv24 = zext i16 %26 to i32, !dbg !13245
  %sub25 = sub nsw i32 %sub21, %conv24, !dbg !13246
  %conv26 = sitofp i32 %sub25 to double, !dbg !13247
  %27 = load double, double* %opacity, align 8, !dbg !13248
  %mul27 = fmul double %conv26, %27, !dbg !13249
  %add = fadd double %conv11, %mul27, !dbg !13250
  %conv28 = fptoui double %add to i16, !dbg !13231
  %28 = load i32, i32* %j, align 4, !dbg !13251
  %idxprom29 = sext i32 %28 to i64, !dbg !13252
  %29 = load i16*, i16** %dst, align 8, !dbg !13252
  %arrayidx30 = getelementptr inbounds i16, i16* %29, i64 %idxprom29, !dbg !13252
  store i16 %conv28, i16* %arrayidx30, align 2, !dbg !13253
  br label %for.inc, !dbg !13254

for.inc:                                          ; preds = %for.body9
  %30 = load i32, i32* %j, align 4, !dbg !13255
  %inc = add nsw i32 %30, 1, !dbg !13255
  store i32 %inc, i32* %j, align 4, !dbg !13255
  br label %for.cond5, !dbg !13257, !llvm.loop !13258

for.end:                                          ; preds = %for.cond5
  %31 = load i64, i64* %dst_linesize.addr, align 8, !dbg !13260
  %32 = load i16*, i16** %dst, align 8, !dbg !13262
  %add.ptr = getelementptr inbounds i16, i16* %32, i64 %31, !dbg !13262
  store i16* %add.ptr, i16** %dst, align 8, !dbg !13262
  %33 = load i64, i64* %top_linesize.addr, align 8, !dbg !13263
  %34 = load i16*, i16** %top, align 8, !dbg !13264
  %add.ptr31 = getelementptr inbounds i16, i16* %34, i64 %33, !dbg !13264
  store i16* %add.ptr31, i16** %top, align 8, !dbg !13264
  %35 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !13265
  %36 = load i16*, i16** %bottom, align 8, !dbg !13266
  %add.ptr32 = getelementptr inbounds i16, i16* %36, i64 %35, !dbg !13266
  store i16* %add.ptr32, i16** %bottom, align 8, !dbg !13266
  br label %for.inc33, !dbg !13267

for.inc33:                                        ; preds = %for.end
  %37 = load i32, i32* %i, align 4, !dbg !13268
  %inc34 = add nsw i32 %37, 1, !dbg !13268
  store i32 %inc34, i32* %i, align 4, !dbg !13268
  br label %for.cond, !dbg !13270, !llvm.loop !13271

for.end35:                                        ; preds = %for.cond
  ret void, !dbg !13273
}

; Function Attrs: nounwind uwtable
define internal void @blend_softlight_12bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !13275 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !13276, metadata !905), !dbg !13277
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !13278, metadata !905), !dbg !13279
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !13280, metadata !905), !dbg !13281
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !13282, metadata !905), !dbg !13283
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !13284, metadata !905), !dbg !13285
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !13286, metadata !905), !dbg !13287
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !13288, metadata !905), !dbg !13289
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !13290, metadata !905), !dbg !13291
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !13292, metadata !905), !dbg !13293
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !13294, metadata !905), !dbg !13295
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !13296, metadata !905), !dbg !13297
  call void @llvm.dbg.declare(metadata i16** %top, metadata !13298, metadata !905), !dbg !13299
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !13300
  %1 = bitcast i8* %0 to i16*, !dbg !13301
  store i16* %1, i16** %top, align 8, !dbg !13299
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !13302, metadata !905), !dbg !13303
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !13304
  %3 = bitcast i8* %2 to i16*, !dbg !13305
  store i16* %3, i16** %bottom, align 8, !dbg !13303
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !13306, metadata !905), !dbg !13307
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !13308
  %5 = bitcast i8* %4 to i16*, !dbg !13309
  store i16* %5, i16** %dst, align 8, !dbg !13307
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !13310, metadata !905), !dbg !13311
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !13312
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !13313
  %7 = load double, double* %opacity1, align 8, !dbg !13313
  store double %7, double* %opacity, align 8, !dbg !13311
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13314, metadata !905), !dbg !13315
  call void @llvm.dbg.declare(metadata i32* %j, metadata !13316, metadata !905), !dbg !13317
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !13318
  %div = sdiv i64 %8, 2, !dbg !13318
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !13318
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !13319
  %div2 = sdiv i64 %9, 2, !dbg !13319
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !13319
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !13320
  %div3 = sdiv i64 %10, 2, !dbg !13320
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !13320
  store i32 0, i32* %i, align 4, !dbg !13321
  br label %for.cond, !dbg !13323

for.cond:                                         ; preds = %for.inc76, %entry
  %11 = load i32, i32* %i, align 4, !dbg !13324
  %conv = sext i32 %11 to i64, !dbg !13324
  %12 = load i64, i64* %height.addr, align 8, !dbg !13327
  %cmp = icmp slt i64 %conv, %12, !dbg !13328
  br i1 %cmp, label %for.body, label %for.end78, !dbg !13329

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !13330
  br label %for.cond5, !dbg !13334

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !13335
  %conv6 = sext i32 %13 to i64, !dbg !13335
  %14 = load i64, i64* %width.addr, align 8, !dbg !13338
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !13339
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !13340

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !13341
  %idxprom = sext i32 %15 to i64, !dbg !13344
  %16 = load i16*, i16** %top, align 8, !dbg !13344
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !13344
  %17 = load i16, i16* %arrayidx, align 2, !dbg !13344
  %conv10 = zext i16 %17 to i32, !dbg !13344
  %conv11 = sitofp i32 %conv10 to double, !dbg !13344
  %18 = load i32, i32* %j, align 4, !dbg !13345
  %idxprom12 = sext i32 %18 to i64, !dbg !13346
  %19 = load i16*, i16** %top, align 8, !dbg !13346
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !13346
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !13346
  %conv14 = zext i16 %20 to i32, !dbg !13346
  %cmp15 = icmp sgt i32 %conv14, 2047, !dbg !13347
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !13348

cond.true:                                        ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !13349
  %idxprom17 = sext i32 %21 to i64, !dbg !13351
  %22 = load i16*, i16** %bottom, align 8, !dbg !13351
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !13351
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !13351
  %conv19 = zext i16 %23 to i32, !dbg !13351
  %conv20 = sitofp i32 %conv19 to double, !dbg !13351
  %24 = load i32, i32* %j, align 4, !dbg !13352
  %idxprom21 = sext i32 %24 to i64, !dbg !13353
  %25 = load i16*, i16** %bottom, align 8, !dbg !13353
  %arrayidx22 = getelementptr inbounds i16, i16* %25, i64 %idxprom21, !dbg !13353
  %26 = load i16, i16* %arrayidx22, align 2, !dbg !13353
  %conv23 = zext i16 %26 to i32, !dbg !13353
  %sub = sub nsw i32 4095, %conv23, !dbg !13354
  %conv24 = sitofp i32 %sub to double, !dbg !13355
  %27 = load i32, i32* %j, align 4, !dbg !13356
  %idxprom25 = sext i32 %27 to i64, !dbg !13357
  %28 = load i16*, i16** %top, align 8, !dbg !13357
  %arrayidx26 = getelementptr inbounds i16, i16* %28, i64 %idxprom25, !dbg !13357
  %29 = load i16, i16* %arrayidx26, align 2, !dbg !13357
  %conv27 = zext i16 %29 to i32, !dbg !13357
  %conv28 = sitofp i32 %conv27 to double, !dbg !13357
  %sub29 = fsub double %conv28, 2.047500e+03, !dbg !13358
  %mul = fmul double %conv24, %sub29, !dbg !13359
  %div30 = fdiv double %mul, 2.047500e+03, !dbg !13360
  %30 = load i32, i32* %j, align 4, !dbg !13361
  %idxprom31 = sext i32 %30 to i64, !dbg !13362
  %31 = load i16*, i16** %bottom, align 8, !dbg !13362
  %arrayidx32 = getelementptr inbounds i16, i16* %31, i64 %idxprom31, !dbg !13362
  %32 = load i16, i16* %arrayidx32, align 2, !dbg !13362
  %conv33 = zext i16 %32 to i32, !dbg !13362
  %conv34 = sitofp i32 %conv33 to double, !dbg !13362
  %sub35 = fsub double %conv34, 2.047500e+03, !dbg !13363
  %call = call double @fabs(double %sub35) #1, !dbg !13364
  %div36 = fdiv double %call, 4.095000e+03, !dbg !13365
  %sub37 = fsub double 5.000000e-01, %div36, !dbg !13366
  %mul38 = fmul double %div30, %sub37, !dbg !13367
  %add = fadd double %conv20, %mul38, !dbg !13368
  br label %cond.end, !dbg !13369

cond.false:                                       ; preds = %for.body9
  %33 = load i32, i32* %j, align 4, !dbg !13370
  %idxprom39 = sext i32 %33 to i64, !dbg !13372
  %34 = load i16*, i16** %bottom, align 8, !dbg !13372
  %arrayidx40 = getelementptr inbounds i16, i16* %34, i64 %idxprom39, !dbg !13372
  %35 = load i16, i16* %arrayidx40, align 2, !dbg !13372
  %conv41 = zext i16 %35 to i32, !dbg !13372
  %conv42 = sitofp i32 %conv41 to double, !dbg !13372
  %36 = load i32, i32* %j, align 4, !dbg !13373
  %idxprom43 = sext i32 %36 to i64, !dbg !13374
  %37 = load i16*, i16** %bottom, align 8, !dbg !13374
  %arrayidx44 = getelementptr inbounds i16, i16* %37, i64 %idxprom43, !dbg !13374
  %38 = load i16, i16* %arrayidx44, align 2, !dbg !13374
  %conv45 = zext i16 %38 to i32, !dbg !13374
  %conv46 = sitofp i32 %conv45 to double, !dbg !13374
  %39 = load i32, i32* %j, align 4, !dbg !13375
  %idxprom47 = sext i32 %39 to i64, !dbg !13376
  %40 = load i16*, i16** %top, align 8, !dbg !13376
  %arrayidx48 = getelementptr inbounds i16, i16* %40, i64 %idxprom47, !dbg !13376
  %41 = load i16, i16* %arrayidx48, align 2, !dbg !13376
  %conv49 = zext i16 %41 to i32, !dbg !13376
  %conv50 = sitofp i32 %conv49 to double, !dbg !13376
  %sub51 = fsub double 2.047500e+03, %conv50, !dbg !13377
  %div52 = fdiv double %sub51, 2.047500e+03, !dbg !13378
  %mul53 = fmul double %conv46, %div52, !dbg !13379
  %42 = load i32, i32* %j, align 4, !dbg !13380
  %idxprom54 = sext i32 %42 to i64, !dbg !13381
  %43 = load i16*, i16** %bottom, align 8, !dbg !13381
  %arrayidx55 = getelementptr inbounds i16, i16* %43, i64 %idxprom54, !dbg !13381
  %44 = load i16, i16* %arrayidx55, align 2, !dbg !13381
  %conv56 = zext i16 %44 to i32, !dbg !13381
  %conv57 = sitofp i32 %conv56 to double, !dbg !13381
  %sub58 = fsub double %conv57, 2.047500e+03, !dbg !13382
  %call59 = call double @fabs(double %sub58) #1, !dbg !13383
  %div60 = fdiv double %call59, 4.095000e+03, !dbg !13384
  %sub61 = fsub double 5.000000e-01, %div60, !dbg !13385
  %mul62 = fmul double %mul53, %sub61, !dbg !13386
  %sub63 = fsub double %conv42, %mul62, !dbg !13387
  br label %cond.end, !dbg !13388

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %add, %cond.true ], [ %sub63, %cond.false ], !dbg !13389
  %45 = load i32, i32* %j, align 4, !dbg !13391
  %idxprom64 = sext i32 %45 to i64, !dbg !13392
  %46 = load i16*, i16** %top, align 8, !dbg !13392
  %arrayidx65 = getelementptr inbounds i16, i16* %46, i64 %idxprom64, !dbg !13392
  %47 = load i16, i16* %arrayidx65, align 2, !dbg !13392
  %conv66 = zext i16 %47 to i32, !dbg !13392
  %conv67 = sitofp i32 %conv66 to double, !dbg !13392
  %sub68 = fsub double %cond, %conv67, !dbg !13393
  %48 = load double, double* %opacity, align 8, !dbg !13394
  %mul69 = fmul double %sub68, %48, !dbg !13395
  %add70 = fadd double %conv11, %mul69, !dbg !13396
  %conv71 = fptoui double %add70 to i16, !dbg !13397
  %49 = load i32, i32* %j, align 4, !dbg !13398
  %idxprom72 = sext i32 %49 to i64, !dbg !13399
  %50 = load i16*, i16** %dst, align 8, !dbg !13399
  %arrayidx73 = getelementptr inbounds i16, i16* %50, i64 %idxprom72, !dbg !13399
  store i16 %conv71, i16* %arrayidx73, align 2, !dbg !13400
  br label %for.inc, !dbg !13401

for.inc:                                          ; preds = %cond.end
  %51 = load i32, i32* %j, align 4, !dbg !13402
  %inc = add nsw i32 %51, 1, !dbg !13402
  store i32 %inc, i32* %j, align 4, !dbg !13402
  br label %for.cond5, !dbg !13404, !llvm.loop !13405

for.end:                                          ; preds = %for.cond5
  %52 = load i64, i64* %dst_linesize.addr, align 8, !dbg !13407
  %53 = load i16*, i16** %dst, align 8, !dbg !13409
  %add.ptr = getelementptr inbounds i16, i16* %53, i64 %52, !dbg !13409
  store i16* %add.ptr, i16** %dst, align 8, !dbg !13409
  %54 = load i64, i64* %top_linesize.addr, align 8, !dbg !13410
  %55 = load i16*, i16** %top, align 8, !dbg !13411
  %add.ptr74 = getelementptr inbounds i16, i16* %55, i64 %54, !dbg !13411
  store i16* %add.ptr74, i16** %top, align 8, !dbg !13411
  %56 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !13412
  %57 = load i16*, i16** %bottom, align 8, !dbg !13413
  %add.ptr75 = getelementptr inbounds i16, i16* %57, i64 %56, !dbg !13413
  store i16* %add.ptr75, i16** %bottom, align 8, !dbg !13413
  br label %for.inc76, !dbg !13414

for.inc76:                                        ; preds = %for.end
  %58 = load i32, i32* %i, align 4, !dbg !13415
  %inc77 = add nsw i32 %58, 1, !dbg !13415
  store i32 %inc77, i32* %i, align 4, !dbg !13415
  br label %for.cond, !dbg !13417, !llvm.loop !13418

for.end78:                                        ; preds = %for.cond
  ret void, !dbg !13420
}

; Function Attrs: nounwind uwtable
define internal void @blend_subtract_12bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !13422 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !13423, metadata !905), !dbg !13424
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !13425, metadata !905), !dbg !13426
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !13427, metadata !905), !dbg !13428
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !13429, metadata !905), !dbg !13430
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !13431, metadata !905), !dbg !13432
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !13433, metadata !905), !dbg !13434
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !13435, metadata !905), !dbg !13436
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !13437, metadata !905), !dbg !13438
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !13439, metadata !905), !dbg !13440
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !13441, metadata !905), !dbg !13442
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !13443, metadata !905), !dbg !13444
  call void @llvm.dbg.declare(metadata i16** %top, metadata !13445, metadata !905), !dbg !13446
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !13447
  %1 = bitcast i8* %0 to i16*, !dbg !13448
  store i16* %1, i16** %top, align 8, !dbg !13446
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !13449, metadata !905), !dbg !13450
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !13451
  %3 = bitcast i8* %2 to i16*, !dbg !13452
  store i16* %3, i16** %bottom, align 8, !dbg !13450
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !13453, metadata !905), !dbg !13454
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !13455
  %5 = bitcast i8* %4 to i16*, !dbg !13456
  store i16* %5, i16** %dst, align 8, !dbg !13454
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !13457, metadata !905), !dbg !13458
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !13459
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !13460
  %7 = load double, double* %opacity1, align 8, !dbg !13460
  store double %7, double* %opacity, align 8, !dbg !13458
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13461, metadata !905), !dbg !13462
  call void @llvm.dbg.declare(metadata i32* %j, metadata !13463, metadata !905), !dbg !13464
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !13465
  %div = sdiv i64 %8, 2, !dbg !13465
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !13465
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !13466
  %div2 = sdiv i64 %9, 2, !dbg !13466
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !13466
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !13467
  %div3 = sdiv i64 %10, 2, !dbg !13467
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !13467
  store i32 0, i32* %i, align 4, !dbg !13468
  br label %for.cond, !dbg !13470

for.cond:                                         ; preds = %for.inc37, %entry
  %11 = load i32, i32* %i, align 4, !dbg !13471
  %conv = sext i32 %11 to i64, !dbg !13471
  %12 = load i64, i64* %height.addr, align 8, !dbg !13474
  %cmp = icmp slt i64 %conv, %12, !dbg !13475
  br i1 %cmp, label %for.body, label %for.end39, !dbg !13476

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !13477
  br label %for.cond5, !dbg !13481

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !13482
  %conv6 = sext i32 %13 to i64, !dbg !13482
  %14 = load i64, i64* %width.addr, align 8, !dbg !13485
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !13486
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !13487

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !13488
  %idxprom = sext i32 %15 to i64, !dbg !13491
  %16 = load i16*, i16** %top, align 8, !dbg !13491
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !13491
  %17 = load i16, i16* %arrayidx, align 2, !dbg !13491
  %conv10 = zext i16 %17 to i32, !dbg !13491
  %conv11 = sitofp i32 %conv10 to double, !dbg !13491
  %18 = load i32, i32* %j, align 4, !dbg !13492
  %idxprom12 = sext i32 %18 to i64, !dbg !13493
  %19 = load i16*, i16** %top, align 8, !dbg !13493
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !13493
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !13493
  %conv14 = zext i16 %20 to i32, !dbg !13493
  %21 = load i32, i32* %j, align 4, !dbg !13494
  %idxprom15 = sext i32 %21 to i64, !dbg !13495
  %22 = load i16*, i16** %bottom, align 8, !dbg !13495
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !13495
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !13495
  %conv17 = zext i16 %23 to i32, !dbg !13495
  %sub = sub nsw i32 %conv14, %conv17, !dbg !13496
  %cmp18 = icmp sgt i32 0, %sub, !dbg !13497
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !13498

cond.true:                                        ; preds = %for.body9
  br label %cond.end, !dbg !13499

cond.false:                                       ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !13501
  %idxprom20 = sext i32 %24 to i64, !dbg !13503
  %25 = load i16*, i16** %top, align 8, !dbg !13503
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !13503
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !13503
  %conv22 = zext i16 %26 to i32, !dbg !13503
  %27 = load i32, i32* %j, align 4, !dbg !13504
  %idxprom23 = sext i32 %27 to i64, !dbg !13505
  %28 = load i16*, i16** %bottom, align 8, !dbg !13505
  %arrayidx24 = getelementptr inbounds i16, i16* %28, i64 %idxprom23, !dbg !13505
  %29 = load i16, i16* %arrayidx24, align 2, !dbg !13505
  %conv25 = zext i16 %29 to i32, !dbg !13505
  %sub26 = sub nsw i32 %conv22, %conv25, !dbg !13506
  br label %cond.end, !dbg !13507

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %sub26, %cond.false ], !dbg !13508
  %30 = load i32, i32* %j, align 4, !dbg !13510
  %idxprom27 = sext i32 %30 to i64, !dbg !13511
  %31 = load i16*, i16** %top, align 8, !dbg !13511
  %arrayidx28 = getelementptr inbounds i16, i16* %31, i64 %idxprom27, !dbg !13511
  %32 = load i16, i16* %arrayidx28, align 2, !dbg !13511
  %conv29 = zext i16 %32 to i32, !dbg !13511
  %sub30 = sub nsw i32 %cond, %conv29, !dbg !13512
  %conv31 = sitofp i32 %sub30 to double, !dbg !13513
  %33 = load double, double* %opacity, align 8, !dbg !13514
  %mul = fmul double %conv31, %33, !dbg !13515
  %add = fadd double %conv11, %mul, !dbg !13516
  %conv32 = fptoui double %add to i16, !dbg !13517
  %34 = load i32, i32* %j, align 4, !dbg !13518
  %idxprom33 = sext i32 %34 to i64, !dbg !13519
  %35 = load i16*, i16** %dst, align 8, !dbg !13519
  %arrayidx34 = getelementptr inbounds i16, i16* %35, i64 %idxprom33, !dbg !13519
  store i16 %conv32, i16* %arrayidx34, align 2, !dbg !13520
  br label %for.inc, !dbg !13521

for.inc:                                          ; preds = %cond.end
  %36 = load i32, i32* %j, align 4, !dbg !13522
  %inc = add nsw i32 %36, 1, !dbg !13522
  store i32 %inc, i32* %j, align 4, !dbg !13522
  br label %for.cond5, !dbg !13524, !llvm.loop !13525

for.end:                                          ; preds = %for.cond5
  %37 = load i64, i64* %dst_linesize.addr, align 8, !dbg !13527
  %38 = load i16*, i16** %dst, align 8, !dbg !13529
  %add.ptr = getelementptr inbounds i16, i16* %38, i64 %37, !dbg !13529
  store i16* %add.ptr, i16** %dst, align 8, !dbg !13529
  %39 = load i64, i64* %top_linesize.addr, align 8, !dbg !13530
  %40 = load i16*, i16** %top, align 8, !dbg !13531
  %add.ptr35 = getelementptr inbounds i16, i16* %40, i64 %39, !dbg !13531
  store i16* %add.ptr35, i16** %top, align 8, !dbg !13531
  %41 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !13532
  %42 = load i16*, i16** %bottom, align 8, !dbg !13533
  %add.ptr36 = getelementptr inbounds i16, i16* %42, i64 %41, !dbg !13533
  store i16* %add.ptr36, i16** %bottom, align 8, !dbg !13533
  br label %for.inc37, !dbg !13534

for.inc37:                                        ; preds = %for.end
  %43 = load i32, i32* %i, align 4, !dbg !13535
  %inc38 = add nsw i32 %43, 1, !dbg !13535
  store i32 %inc38, i32* %i, align 4, !dbg !13535
  br label %for.cond, !dbg !13537, !llvm.loop !13538

for.end39:                                        ; preds = %for.cond
  ret void, !dbg !13540
}

; Function Attrs: nounwind uwtable
define internal void @blend_vividlight_12bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !13542 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !13543, metadata !905), !dbg !13544
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !13545, metadata !905), !dbg !13546
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !13547, metadata !905), !dbg !13548
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !13549, metadata !905), !dbg !13550
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !13551, metadata !905), !dbg !13552
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !13553, metadata !905), !dbg !13554
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !13555, metadata !905), !dbg !13556
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !13557, metadata !905), !dbg !13558
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !13559, metadata !905), !dbg !13560
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !13561, metadata !905), !dbg !13562
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !13563, metadata !905), !dbg !13564
  call void @llvm.dbg.declare(metadata i16** %top, metadata !13565, metadata !905), !dbg !13566
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !13567
  %1 = bitcast i8* %0 to i16*, !dbg !13568
  store i16* %1, i16** %top, align 8, !dbg !13566
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !13569, metadata !905), !dbg !13570
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !13571
  %3 = bitcast i8* %2 to i16*, !dbg !13572
  store i16* %3, i16** %bottom, align 8, !dbg !13570
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !13573, metadata !905), !dbg !13574
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !13575
  %5 = bitcast i8* %4 to i16*, !dbg !13576
  store i16* %5, i16** %dst, align 8, !dbg !13574
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !13577, metadata !905), !dbg !13578
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !13579
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !13580
  %7 = load double, double* %opacity1, align 8, !dbg !13580
  store double %7, double* %opacity, align 8, !dbg !13578
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13581, metadata !905), !dbg !13582
  call void @llvm.dbg.declare(metadata i32* %j, metadata !13583, metadata !905), !dbg !13584
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !13585
  %div = sdiv i64 %8, 2, !dbg !13585
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !13585
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !13586
  %div2 = sdiv i64 %9, 2, !dbg !13586
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !13586
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !13587
  %div3 = sdiv i64 %10, 2, !dbg !13587
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !13587
  store i32 0, i32* %i, align 4, !dbg !13588
  br label %for.cond, !dbg !13590

for.cond:                                         ; preds = %for.inc111, %entry
  %11 = load i32, i32* %i, align 4, !dbg !13591
  %conv = sext i32 %11 to i64, !dbg !13591
  %12 = load i64, i64* %height.addr, align 8, !dbg !13594
  %cmp = icmp slt i64 %conv, %12, !dbg !13595
  br i1 %cmp, label %for.body, label %for.end113, !dbg !13596

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !13597
  br label %for.cond5, !dbg !13601

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !13602
  %conv6 = sext i32 %13 to i64, !dbg !13602
  %14 = load i64, i64* %width.addr, align 8, !dbg !13605
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !13606
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !13607

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !13608
  %idxprom = sext i32 %15 to i64, !dbg !13611
  %16 = load i16*, i16** %top, align 8, !dbg !13611
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !13611
  %17 = load i16, i16* %arrayidx, align 2, !dbg !13611
  %conv10 = zext i16 %17 to i32, !dbg !13611
  %conv11 = sitofp i32 %conv10 to double, !dbg !13611
  %18 = load i32, i32* %j, align 4, !dbg !13612
  %idxprom12 = sext i32 %18 to i64, !dbg !13613
  %19 = load i16*, i16** %top, align 8, !dbg !13613
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !13613
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !13613
  %conv14 = zext i16 %20 to i32, !dbg !13613
  %cmp15 = icmp slt i32 %conv14, 2048, !dbg !13614
  br i1 %cmp15, label %cond.true, label %cond.false53, !dbg !13615

cond.true:                                        ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !13616
  %idxprom17 = sext i32 %21 to i64, !dbg !13618
  %22 = load i16*, i16** %top, align 8, !dbg !13618
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !13618
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !13618
  %conv19 = zext i16 %23 to i32, !dbg !13618
  %mul = mul nsw i32 2, %conv19, !dbg !13619
  %cmp20 = icmp eq i32 %mul, 0, !dbg !13620
  br i1 %cmp20, label %cond.true22, label %cond.false, !dbg !13621

cond.true22:                                      ; preds = %cond.true
  %24 = load i32, i32* %j, align 4, !dbg !13622
  %idxprom23 = sext i32 %24 to i64, !dbg !13624
  %25 = load i16*, i16** %top, align 8, !dbg !13624
  %arrayidx24 = getelementptr inbounds i16, i16* %25, i64 %idxprom23, !dbg !13624
  %26 = load i16, i16* %arrayidx24, align 2, !dbg !13624
  %conv25 = zext i16 %26 to i32, !dbg !13624
  %mul26 = mul nsw i32 2, %conv25, !dbg !13625
  br label %cond.end51, !dbg !13626

cond.false:                                       ; preds = %cond.true
  %27 = load i32, i32* %j, align 4, !dbg !13627
  %idxprom27 = sext i32 %27 to i64, !dbg !13629
  %28 = load i16*, i16** %bottom, align 8, !dbg !13629
  %arrayidx28 = getelementptr inbounds i16, i16* %28, i64 %idxprom27, !dbg !13629
  %29 = load i16, i16* %arrayidx28, align 2, !dbg !13629
  %conv29 = zext i16 %29 to i32, !dbg !13630
  %sub = sub nsw i32 4095, %conv29, !dbg !13631
  %shl = shl i32 %sub, 12, !dbg !13632
  %30 = load i32, i32* %j, align 4, !dbg !13633
  %idxprom30 = sext i32 %30 to i64, !dbg !13634
  %31 = load i16*, i16** %top, align 8, !dbg !13634
  %arrayidx31 = getelementptr inbounds i16, i16* %31, i64 %idxprom30, !dbg !13634
  %32 = load i16, i16* %arrayidx31, align 2, !dbg !13634
  %conv32 = zext i16 %32 to i32, !dbg !13634
  %mul33 = mul nsw i32 2, %conv32, !dbg !13635
  %div34 = sdiv i32 %shl, %mul33, !dbg !13636
  %sub35 = sub nsw i32 4095, %div34, !dbg !13637
  %cmp36 = icmp sgt i32 0, %sub35, !dbg !13638
  br i1 %cmp36, label %cond.true38, label %cond.false39, !dbg !13639

cond.true38:                                      ; preds = %cond.false
  br label %cond.end, !dbg !13640

cond.false39:                                     ; preds = %cond.false
  %33 = load i32, i32* %j, align 4, !dbg !13642
  %idxprom40 = sext i32 %33 to i64, !dbg !13644
  %34 = load i16*, i16** %bottom, align 8, !dbg !13644
  %arrayidx41 = getelementptr inbounds i16, i16* %34, i64 %idxprom40, !dbg !13644
  %35 = load i16, i16* %arrayidx41, align 2, !dbg !13644
  %conv42 = zext i16 %35 to i32, !dbg !13645
  %sub43 = sub nsw i32 4095, %conv42, !dbg !13646
  %shl44 = shl i32 %sub43, 12, !dbg !13647
  %36 = load i32, i32* %j, align 4, !dbg !13648
  %idxprom45 = sext i32 %36 to i64, !dbg !13649
  %37 = load i16*, i16** %top, align 8, !dbg !13649
  %arrayidx46 = getelementptr inbounds i16, i16* %37, i64 %idxprom45, !dbg !13649
  %38 = load i16, i16* %arrayidx46, align 2, !dbg !13649
  %conv47 = zext i16 %38 to i32, !dbg !13649
  %mul48 = mul nsw i32 2, %conv47, !dbg !13650
  %div49 = sdiv i32 %shl44, %mul48, !dbg !13651
  %sub50 = sub nsw i32 4095, %div49, !dbg !13652
  br label %cond.end, !dbg !13653

cond.end:                                         ; preds = %cond.false39, %cond.true38
  %cond = phi i32 [ 0, %cond.true38 ], [ %sub50, %cond.false39 ], !dbg !13654
  br label %cond.end51, !dbg !13656

cond.end51:                                       ; preds = %cond.end, %cond.true22
  %cond52 = phi i32 [ %mul26, %cond.true22 ], [ %cond, %cond.end ], !dbg !13657
  br label %cond.end98, !dbg !13659

cond.false53:                                     ; preds = %for.body9
  %39 = load i32, i32* %j, align 4, !dbg !13660
  %idxprom54 = sext i32 %39 to i64, !dbg !13662
  %40 = load i16*, i16** %top, align 8, !dbg !13662
  %arrayidx55 = getelementptr inbounds i16, i16* %40, i64 %idxprom54, !dbg !13662
  %41 = load i16, i16* %arrayidx55, align 2, !dbg !13662
  %conv56 = zext i16 %41 to i32, !dbg !13662
  %sub57 = sub nsw i32 %conv56, 2048, !dbg !13663
  %mul58 = mul nsw i32 2, %sub57, !dbg !13664
  %cmp59 = icmp eq i32 %mul58, 4095, !dbg !13665
  br i1 %cmp59, label %cond.true61, label %cond.false67, !dbg !13666

cond.true61:                                      ; preds = %cond.false53
  %42 = load i32, i32* %j, align 4, !dbg !13667
  %idxprom62 = sext i32 %42 to i64, !dbg !13669
  %43 = load i16*, i16** %top, align 8, !dbg !13669
  %arrayidx63 = getelementptr inbounds i16, i16* %43, i64 %idxprom62, !dbg !13669
  %44 = load i16, i16* %arrayidx63, align 2, !dbg !13669
  %conv64 = zext i16 %44 to i32, !dbg !13669
  %sub65 = sub nsw i32 %conv64, 2048, !dbg !13670
  %mul66 = mul nsw i32 2, %sub65, !dbg !13671
  br label %cond.end96, !dbg !13672

cond.false67:                                     ; preds = %cond.false53
  %45 = load i32, i32* %j, align 4, !dbg !13673
  %idxprom68 = sext i32 %45 to i64, !dbg !13675
  %46 = load i16*, i16** %bottom, align 8, !dbg !13675
  %arrayidx69 = getelementptr inbounds i16, i16* %46, i64 %idxprom68, !dbg !13675
  %47 = load i16, i16* %arrayidx69, align 2, !dbg !13675
  %conv70 = zext i16 %47 to i32, !dbg !13676
  %shl71 = shl i32 %conv70, 12, !dbg !13677
  %48 = load i32, i32* %j, align 4, !dbg !13678
  %idxprom72 = sext i32 %48 to i64, !dbg !13679
  %49 = load i16*, i16** %top, align 8, !dbg !13679
  %arrayidx73 = getelementptr inbounds i16, i16* %49, i64 %idxprom72, !dbg !13679
  %50 = load i16, i16* %arrayidx73, align 2, !dbg !13679
  %conv74 = zext i16 %50 to i32, !dbg !13679
  %sub75 = sub nsw i32 %conv74, 2048, !dbg !13680
  %mul76 = mul nsw i32 2, %sub75, !dbg !13681
  %sub77 = sub nsw i32 4095, %mul76, !dbg !13682
  %div78 = sdiv i32 %shl71, %sub77, !dbg !13683
  %cmp79 = icmp sgt i32 4095, %div78, !dbg !13684
  br i1 %cmp79, label %cond.true81, label %cond.false93, !dbg !13685

cond.true81:                                      ; preds = %cond.false67
  %51 = load i32, i32* %j, align 4, !dbg !13686
  %idxprom82 = sext i32 %51 to i64, !dbg !13688
  %52 = load i16*, i16** %bottom, align 8, !dbg !13688
  %arrayidx83 = getelementptr inbounds i16, i16* %52, i64 %idxprom82, !dbg !13688
  %53 = load i16, i16* %arrayidx83, align 2, !dbg !13688
  %conv84 = zext i16 %53 to i32, !dbg !13689
  %shl85 = shl i32 %conv84, 12, !dbg !13690
  %54 = load i32, i32* %j, align 4, !dbg !13691
  %idxprom86 = sext i32 %54 to i64, !dbg !13692
  %55 = load i16*, i16** %top, align 8, !dbg !13692
  %arrayidx87 = getelementptr inbounds i16, i16* %55, i64 %idxprom86, !dbg !13692
  %56 = load i16, i16* %arrayidx87, align 2, !dbg !13692
  %conv88 = zext i16 %56 to i32, !dbg !13692
  %sub89 = sub nsw i32 %conv88, 2048, !dbg !13693
  %mul90 = mul nsw i32 2, %sub89, !dbg !13694
  %sub91 = sub nsw i32 4095, %mul90, !dbg !13695
  %div92 = sdiv i32 %shl85, %sub91, !dbg !13696
  br label %cond.end94, !dbg !13697

cond.false93:                                     ; preds = %cond.false67
  br label %cond.end94, !dbg !13698

cond.end94:                                       ; preds = %cond.false93, %cond.true81
  %cond95 = phi i32 [ %div92, %cond.true81 ], [ 4095, %cond.false93 ], !dbg !13700
  br label %cond.end96, !dbg !13702

cond.end96:                                       ; preds = %cond.end94, %cond.true61
  %cond97 = phi i32 [ %mul66, %cond.true61 ], [ %cond95, %cond.end94 ], !dbg !13703
  br label %cond.end98, !dbg !13705

cond.end98:                                       ; preds = %cond.end96, %cond.end51
  %cond99 = phi i32 [ %cond52, %cond.end51 ], [ %cond97, %cond.end96 ], !dbg !13706
  %57 = load i32, i32* %j, align 4, !dbg !13708
  %idxprom100 = sext i32 %57 to i64, !dbg !13709
  %58 = load i16*, i16** %top, align 8, !dbg !13709
  %arrayidx101 = getelementptr inbounds i16, i16* %58, i64 %idxprom100, !dbg !13709
  %59 = load i16, i16* %arrayidx101, align 2, !dbg !13709
  %conv102 = zext i16 %59 to i32, !dbg !13709
  %sub103 = sub nsw i32 %cond99, %conv102, !dbg !13710
  %conv104 = sitofp i32 %sub103 to double, !dbg !13711
  %60 = load double, double* %opacity, align 8, !dbg !13712
  %mul105 = fmul double %conv104, %60, !dbg !13713
  %add = fadd double %conv11, %mul105, !dbg !13714
  %conv106 = fptoui double %add to i16, !dbg !13715
  %61 = load i32, i32* %j, align 4, !dbg !13716
  %idxprom107 = sext i32 %61 to i64, !dbg !13717
  %62 = load i16*, i16** %dst, align 8, !dbg !13717
  %arrayidx108 = getelementptr inbounds i16, i16* %62, i64 %idxprom107, !dbg !13717
  store i16 %conv106, i16* %arrayidx108, align 2, !dbg !13718
  br label %for.inc, !dbg !13719

for.inc:                                          ; preds = %cond.end98
  %63 = load i32, i32* %j, align 4, !dbg !13720
  %inc = add nsw i32 %63, 1, !dbg !13720
  store i32 %inc, i32* %j, align 4, !dbg !13720
  br label %for.cond5, !dbg !13722, !llvm.loop !13723

for.end:                                          ; preds = %for.cond5
  %64 = load i64, i64* %dst_linesize.addr, align 8, !dbg !13725
  %65 = load i16*, i16** %dst, align 8, !dbg !13727
  %add.ptr = getelementptr inbounds i16, i16* %65, i64 %64, !dbg !13727
  store i16* %add.ptr, i16** %dst, align 8, !dbg !13727
  %66 = load i64, i64* %top_linesize.addr, align 8, !dbg !13728
  %67 = load i16*, i16** %top, align 8, !dbg !13729
  %add.ptr109 = getelementptr inbounds i16, i16* %67, i64 %66, !dbg !13729
  store i16* %add.ptr109, i16** %top, align 8, !dbg !13729
  %68 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !13730
  %69 = load i16*, i16** %bottom, align 8, !dbg !13731
  %add.ptr110 = getelementptr inbounds i16, i16* %69, i64 %68, !dbg !13731
  store i16* %add.ptr110, i16** %bottom, align 8, !dbg !13731
  br label %for.inc111, !dbg !13732

for.inc111:                                       ; preds = %for.end
  %70 = load i32, i32* %i, align 4, !dbg !13733
  %inc112 = add nsw i32 %70, 1, !dbg !13733
  store i32 %inc112, i32* %i, align 4, !dbg !13733
  br label %for.cond, !dbg !13735, !llvm.loop !13736

for.end113:                                       ; preds = %for.cond
  ret void, !dbg !13738
}

; Function Attrs: nounwind uwtable
define internal void @blend_xor_12bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !13740 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !13741, metadata !905), !dbg !13742
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !13743, metadata !905), !dbg !13744
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !13745, metadata !905), !dbg !13746
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !13747, metadata !905), !dbg !13748
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !13749, metadata !905), !dbg !13750
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !13751, metadata !905), !dbg !13752
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !13753, metadata !905), !dbg !13754
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !13755, metadata !905), !dbg !13756
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !13757, metadata !905), !dbg !13758
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !13759, metadata !905), !dbg !13760
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !13761, metadata !905), !dbg !13762
  call void @llvm.dbg.declare(metadata i16** %top, metadata !13763, metadata !905), !dbg !13764
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !13765
  %1 = bitcast i8* %0 to i16*, !dbg !13766
  store i16* %1, i16** %top, align 8, !dbg !13764
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !13767, metadata !905), !dbg !13768
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !13769
  %3 = bitcast i8* %2 to i16*, !dbg !13770
  store i16* %3, i16** %bottom, align 8, !dbg !13768
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !13771, metadata !905), !dbg !13772
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !13773
  %5 = bitcast i8* %4 to i16*, !dbg !13774
  store i16* %5, i16** %dst, align 8, !dbg !13772
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !13775, metadata !905), !dbg !13776
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !13777
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !13778
  %7 = load double, double* %opacity1, align 8, !dbg !13778
  store double %7, double* %opacity, align 8, !dbg !13776
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13779, metadata !905), !dbg !13780
  call void @llvm.dbg.declare(metadata i32* %j, metadata !13781, metadata !905), !dbg !13782
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !13783
  %div = sdiv i64 %8, 2, !dbg !13783
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !13783
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !13784
  %div2 = sdiv i64 %9, 2, !dbg !13784
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !13784
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !13785
  %div3 = sdiv i64 %10, 2, !dbg !13785
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !13785
  store i32 0, i32* %i, align 4, !dbg !13786
  br label %for.cond, !dbg !13788

for.cond:                                         ; preds = %for.inc27, %entry
  %11 = load i32, i32* %i, align 4, !dbg !13789
  %conv = sext i32 %11 to i64, !dbg !13789
  %12 = load i64, i64* %height.addr, align 8, !dbg !13792
  %cmp = icmp slt i64 %conv, %12, !dbg !13793
  br i1 %cmp, label %for.body, label %for.end29, !dbg !13794

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !13795
  br label %for.cond5, !dbg !13799

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !13800
  %conv6 = sext i32 %13 to i64, !dbg !13800
  %14 = load i64, i64* %width.addr, align 8, !dbg !13803
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !13804
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !13805

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !13806
  %idxprom = sext i32 %15 to i64, !dbg !13809
  %16 = load i16*, i16** %top, align 8, !dbg !13809
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !13809
  %17 = load i16, i16* %arrayidx, align 2, !dbg !13809
  %conv10 = zext i16 %17 to i32, !dbg !13809
  %conv11 = sitofp i32 %conv10 to double, !dbg !13809
  %18 = load i32, i32* %j, align 4, !dbg !13810
  %idxprom12 = sext i32 %18 to i64, !dbg !13811
  %19 = load i16*, i16** %top, align 8, !dbg !13811
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !13811
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !13811
  %conv14 = zext i16 %20 to i32, !dbg !13811
  %21 = load i32, i32* %j, align 4, !dbg !13812
  %idxprom15 = sext i32 %21 to i64, !dbg !13813
  %22 = load i16*, i16** %bottom, align 8, !dbg !13813
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !13813
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !13813
  %conv17 = zext i16 %23 to i32, !dbg !13813
  %xor = xor i32 %conv14, %conv17, !dbg !13814
  %24 = load i32, i32* %j, align 4, !dbg !13815
  %idxprom18 = sext i32 %24 to i64, !dbg !13816
  %25 = load i16*, i16** %top, align 8, !dbg !13816
  %arrayidx19 = getelementptr inbounds i16, i16* %25, i64 %idxprom18, !dbg !13816
  %26 = load i16, i16* %arrayidx19, align 2, !dbg !13816
  %conv20 = zext i16 %26 to i32, !dbg !13816
  %sub = sub nsw i32 %xor, %conv20, !dbg !13817
  %conv21 = sitofp i32 %sub to double, !dbg !13818
  %27 = load double, double* %opacity, align 8, !dbg !13819
  %mul = fmul double %conv21, %27, !dbg !13820
  %add = fadd double %conv11, %mul, !dbg !13821
  %conv22 = fptoui double %add to i16, !dbg !13809
  %28 = load i32, i32* %j, align 4, !dbg !13822
  %idxprom23 = sext i32 %28 to i64, !dbg !13823
  %29 = load i16*, i16** %dst, align 8, !dbg !13823
  %arrayidx24 = getelementptr inbounds i16, i16* %29, i64 %idxprom23, !dbg !13823
  store i16 %conv22, i16* %arrayidx24, align 2, !dbg !13824
  br label %for.inc, !dbg !13825

for.inc:                                          ; preds = %for.body9
  %30 = load i32, i32* %j, align 4, !dbg !13826
  %inc = add nsw i32 %30, 1, !dbg !13826
  store i32 %inc, i32* %j, align 4, !dbg !13826
  br label %for.cond5, !dbg !13828, !llvm.loop !13829

for.end:                                          ; preds = %for.cond5
  %31 = load i64, i64* %dst_linesize.addr, align 8, !dbg !13831
  %32 = load i16*, i16** %dst, align 8, !dbg !13833
  %add.ptr = getelementptr inbounds i16, i16* %32, i64 %31, !dbg !13833
  store i16* %add.ptr, i16** %dst, align 8, !dbg !13833
  %33 = load i64, i64* %top_linesize.addr, align 8, !dbg !13834
  %34 = load i16*, i16** %top, align 8, !dbg !13835
  %add.ptr25 = getelementptr inbounds i16, i16* %34, i64 %33, !dbg !13835
  store i16* %add.ptr25, i16** %top, align 8, !dbg !13835
  %35 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !13836
  %36 = load i16*, i16** %bottom, align 8, !dbg !13837
  %add.ptr26 = getelementptr inbounds i16, i16* %36, i64 %35, !dbg !13837
  store i16* %add.ptr26, i16** %bottom, align 8, !dbg !13837
  br label %for.inc27, !dbg !13838

for.inc27:                                        ; preds = %for.end
  %37 = load i32, i32* %i, align 4, !dbg !13839
  %inc28 = add nsw i32 %37, 1, !dbg !13839
  store i32 %inc28, i32* %i, align 4, !dbg !13839
  br label %for.cond, !dbg !13841, !llvm.loop !13842

for.end29:                                        ; preds = %for.cond
  ret void, !dbg !13844
}

; Function Attrs: nounwind uwtable
define internal void @blend_addition_16bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !13846 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !13847, metadata !905), !dbg !13848
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !13849, metadata !905), !dbg !13850
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !13851, metadata !905), !dbg !13852
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !13853, metadata !905), !dbg !13854
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !13855, metadata !905), !dbg !13856
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !13857, metadata !905), !dbg !13858
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !13859, metadata !905), !dbg !13860
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !13861, metadata !905), !dbg !13862
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !13863, metadata !905), !dbg !13864
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !13865, metadata !905), !dbg !13866
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !13867, metadata !905), !dbg !13868
  call void @llvm.dbg.declare(metadata i16** %top, metadata !13869, metadata !905), !dbg !13870
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !13871
  %1 = bitcast i8* %0 to i16*, !dbg !13872
  store i16* %1, i16** %top, align 8, !dbg !13870
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !13873, metadata !905), !dbg !13874
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !13875
  %3 = bitcast i8* %2 to i16*, !dbg !13876
  store i16* %3, i16** %bottom, align 8, !dbg !13874
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !13877, metadata !905), !dbg !13878
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !13879
  %5 = bitcast i8* %4 to i16*, !dbg !13880
  store i16* %5, i16** %dst, align 8, !dbg !13878
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !13881, metadata !905), !dbg !13882
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !13883
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !13884
  %7 = load double, double* %opacity1, align 8, !dbg !13884
  store double %7, double* %opacity, align 8, !dbg !13882
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13885, metadata !905), !dbg !13886
  call void @llvm.dbg.declare(metadata i32* %j, metadata !13887, metadata !905), !dbg !13888
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !13889
  %div = sdiv i64 %8, 2, !dbg !13889
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !13889
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !13890
  %div2 = sdiv i64 %9, 2, !dbg !13890
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !13890
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !13891
  %div3 = sdiv i64 %10, 2, !dbg !13891
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !13891
  store i32 0, i32* %i, align 4, !dbg !13892
  br label %for.cond, !dbg !13894

for.cond:                                         ; preds = %for.inc37, %entry
  %11 = load i32, i32* %i, align 4, !dbg !13895
  %conv = sext i32 %11 to i64, !dbg !13895
  %12 = load i64, i64* %height.addr, align 8, !dbg !13898
  %cmp = icmp slt i64 %conv, %12, !dbg !13899
  br i1 %cmp, label %for.body, label %for.end39, !dbg !13900

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !13901
  br label %for.cond5, !dbg !13905

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !13906
  %conv6 = sext i32 %13 to i64, !dbg !13906
  %14 = load i64, i64* %width.addr, align 8, !dbg !13909
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !13910
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !13911

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !13912
  %idxprom = sext i32 %15 to i64, !dbg !13915
  %16 = load i16*, i16** %top, align 8, !dbg !13915
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !13915
  %17 = load i16, i16* %arrayidx, align 2, !dbg !13915
  %conv10 = zext i16 %17 to i32, !dbg !13915
  %conv11 = sitofp i32 %conv10 to double, !dbg !13915
  %18 = load i32, i32* %j, align 4, !dbg !13916
  %idxprom12 = sext i32 %18 to i64, !dbg !13917
  %19 = load i16*, i16** %top, align 8, !dbg !13917
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !13917
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !13917
  %conv14 = zext i16 %20 to i32, !dbg !13917
  %21 = load i32, i32* %j, align 4, !dbg !13918
  %idxprom15 = sext i32 %21 to i64, !dbg !13919
  %22 = load i16*, i16** %bottom, align 8, !dbg !13919
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !13919
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !13919
  %conv17 = zext i16 %23 to i32, !dbg !13919
  %add = add nsw i32 %conv14, %conv17, !dbg !13920
  %cmp18 = icmp sgt i32 65535, %add, !dbg !13921
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !13922

cond.true:                                        ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !13923
  %idxprom20 = sext i32 %24 to i64, !dbg !13925
  %25 = load i16*, i16** %top, align 8, !dbg !13925
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !13925
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !13925
  %conv22 = zext i16 %26 to i32, !dbg !13925
  %27 = load i32, i32* %j, align 4, !dbg !13926
  %idxprom23 = sext i32 %27 to i64, !dbg !13927
  %28 = load i16*, i16** %bottom, align 8, !dbg !13927
  %arrayidx24 = getelementptr inbounds i16, i16* %28, i64 %idxprom23, !dbg !13927
  %29 = load i16, i16* %arrayidx24, align 2, !dbg !13927
  %conv25 = zext i16 %29 to i32, !dbg !13927
  %add26 = add nsw i32 %conv22, %conv25, !dbg !13928
  br label %cond.end, !dbg !13929

cond.false:                                       ; preds = %for.body9
  br label %cond.end, !dbg !13930

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add26, %cond.true ], [ 65535, %cond.false ], !dbg !13932
  %30 = load i32, i32* %j, align 4, !dbg !13934
  %idxprom27 = sext i32 %30 to i64, !dbg !13935
  %31 = load i16*, i16** %top, align 8, !dbg !13935
  %arrayidx28 = getelementptr inbounds i16, i16* %31, i64 %idxprom27, !dbg !13935
  %32 = load i16, i16* %arrayidx28, align 2, !dbg !13935
  %conv29 = zext i16 %32 to i32, !dbg !13935
  %sub = sub nsw i32 %cond, %conv29, !dbg !13936
  %conv30 = sitofp i32 %sub to double, !dbg !13937
  %33 = load double, double* %opacity, align 8, !dbg !13938
  %mul = fmul double %conv30, %33, !dbg !13939
  %add31 = fadd double %conv11, %mul, !dbg !13940
  %conv32 = fptoui double %add31 to i16, !dbg !13941
  %34 = load i32, i32* %j, align 4, !dbg !13942
  %idxprom33 = sext i32 %34 to i64, !dbg !13943
  %35 = load i16*, i16** %dst, align 8, !dbg !13943
  %arrayidx34 = getelementptr inbounds i16, i16* %35, i64 %idxprom33, !dbg !13943
  store i16 %conv32, i16* %arrayidx34, align 2, !dbg !13944
  br label %for.inc, !dbg !13945

for.inc:                                          ; preds = %cond.end
  %36 = load i32, i32* %j, align 4, !dbg !13946
  %inc = add nsw i32 %36, 1, !dbg !13946
  store i32 %inc, i32* %j, align 4, !dbg !13946
  br label %for.cond5, !dbg !13948, !llvm.loop !13949

for.end:                                          ; preds = %for.cond5
  %37 = load i64, i64* %dst_linesize.addr, align 8, !dbg !13951
  %38 = load i16*, i16** %dst, align 8, !dbg !13953
  %add.ptr = getelementptr inbounds i16, i16* %38, i64 %37, !dbg !13953
  store i16* %add.ptr, i16** %dst, align 8, !dbg !13953
  %39 = load i64, i64* %top_linesize.addr, align 8, !dbg !13954
  %40 = load i16*, i16** %top, align 8, !dbg !13955
  %add.ptr35 = getelementptr inbounds i16, i16* %40, i64 %39, !dbg !13955
  store i16* %add.ptr35, i16** %top, align 8, !dbg !13955
  %41 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !13956
  %42 = load i16*, i16** %bottom, align 8, !dbg !13957
  %add.ptr36 = getelementptr inbounds i16, i16* %42, i64 %41, !dbg !13957
  store i16* %add.ptr36, i16** %bottom, align 8, !dbg !13957
  br label %for.inc37, !dbg !13958

for.inc37:                                        ; preds = %for.end
  %43 = load i32, i32* %i, align 4, !dbg !13959
  %inc38 = add nsw i32 %43, 1, !dbg !13959
  store i32 %inc38, i32* %i, align 4, !dbg !13959
  br label %for.cond, !dbg !13961, !llvm.loop !13962

for.end39:                                        ; preds = %for.cond
  ret void, !dbg !13964
}

; Function Attrs: nounwind uwtable
define internal void @blend_grainmerge_16bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !13966 {
entry:
  %retval.i = alloca i16, align 2
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !13967, metadata !905), !dbg !13971
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !13980, metadata !905), !dbg !13981
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !13982, metadata !905), !dbg !13983
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !13984, metadata !905), !dbg !13985
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !13986, metadata !905), !dbg !13987
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !13988, metadata !905), !dbg !13989
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !13990, metadata !905), !dbg !13991
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !13992, metadata !905), !dbg !13993
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !13994, metadata !905), !dbg !13995
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !13996, metadata !905), !dbg !13997
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !13998, metadata !905), !dbg !13999
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !14000, metadata !905), !dbg !14001
  call void @llvm.dbg.declare(metadata i16** %top, metadata !14002, metadata !905), !dbg !14003
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !14004
  %1 = bitcast i8* %0 to i16*, !dbg !14005
  store i16* %1, i16** %top, align 8, !dbg !14003
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !14006, metadata !905), !dbg !14007
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !14008
  %3 = bitcast i8* %2 to i16*, !dbg !14009
  store i16* %3, i16** %bottom, align 8, !dbg !14007
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !14010, metadata !905), !dbg !14011
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !14012
  %5 = bitcast i8* %4 to i16*, !dbg !14013
  store i16* %5, i16** %dst, align 8, !dbg !14011
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !14014, metadata !905), !dbg !14015
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !14016
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !14017
  %7 = load double, double* %opacity1, align 8, !dbg !14017
  store double %7, double* %opacity, align 8, !dbg !14015
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14018, metadata !905), !dbg !14019
  call void @llvm.dbg.declare(metadata i32* %j, metadata !14020, metadata !905), !dbg !14021
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !14022
  %div = sdiv i64 %8, 2, !dbg !14022
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !14022
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !14023
  %div2 = sdiv i64 %9, 2, !dbg !14023
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !14023
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !14024
  %div3 = sdiv i64 %10, 2, !dbg !14024
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !14024
  store i32 0, i32* %i, align 4, !dbg !14025
  br label %for.cond, !dbg !14026

for.cond:                                         ; preds = %for.inc30, %entry
  %11 = load i32, i32* %i, align 4, !dbg !14027
  %conv = sext i32 %11 to i64, !dbg !14027
  %12 = load i64, i64* %height.addr, align 8, !dbg !14029
  %cmp = icmp slt i64 %conv, %12, !dbg !14030
  br i1 %cmp, label %for.body, label %for.end32, !dbg !14031

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !14032
  br label %for.cond5, !dbg !14034

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !14035
  %conv6 = sext i32 %13 to i64, !dbg !14035
  %14 = load i64, i64* %width.addr, align 8, !dbg !14037
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !14038
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !14039

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !14040
  %idxprom = sext i32 %15 to i64, !dbg !14041
  %16 = load i16*, i16** %top, align 8, !dbg !14041
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !14041
  %17 = load i16, i16* %arrayidx, align 2, !dbg !14041
  %conv10 = zext i16 %17 to i32, !dbg !14041
  %conv11 = sitofp i32 %conv10 to double, !dbg !14041
  %18 = load i32, i32* %j, align 4, !dbg !14042
  %idxprom12 = sext i32 %18 to i64, !dbg !14043
  %19 = load i16*, i16** %top, align 8, !dbg !14043
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !14043
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !14043
  %conv14 = zext i16 %20 to i32, !dbg !14043
  %21 = load i32, i32* %j, align 4, !dbg !14044
  %idxprom15 = sext i32 %21 to i64, !dbg !14045
  %22 = load i16*, i16** %bottom, align 8, !dbg !14045
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !14045
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !14045
  %conv17 = zext i16 %23 to i32, !dbg !14045
  %add = add nsw i32 %conv14, %conv17, !dbg !14046
  %sub = sub nsw i32 %add, 32768, !dbg !14047
  store i32 %sub, i32* %a.addr.i, align 4, !dbg !14048
  %24 = load i32, i32* %a.addr.i, align 4, !dbg !14049
  %and.i = and i32 %24, -65536, !dbg !14051
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !14051
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !14052

if.then.i:                                        ; preds = %for.body9
  %25 = load i32, i32* %a.addr.i, align 4, !dbg !14053
  %neg.i = xor i32 %25, -1, !dbg !14055
  %shr.i = ashr i32 %neg.i, 31, !dbg !14056
  %conv.i = trunc i32 %shr.i to i16, !dbg !14057
  store i16 %conv.i, i16* %retval.i, align 2, !dbg !14058
  br label %av_clip_uint16_c.exit, !dbg !14058

if.else.i:                                        ; preds = %for.body9
  %26 = load i32, i32* %a.addr.i, align 4, !dbg !14059
  %conv1.i = trunc i32 %26 to i16, !dbg !14059
  store i16 %conv1.i, i16* %retval.i, align 2, !dbg !14060
  br label %av_clip_uint16_c.exit, !dbg !14060

av_clip_uint16_c.exit:                            ; preds = %if.then.i, %if.else.i
  %27 = load i16, i16* %retval.i, align 2, !dbg !14061
  %conv18 = zext i16 %27 to i32, !dbg !14062
  %28 = load i32, i32* %j, align 4, !dbg !14063
  %idxprom19 = sext i32 %28 to i64, !dbg !14064
  %29 = load i16*, i16** %top, align 8, !dbg !14064
  %arrayidx20 = getelementptr inbounds i16, i16* %29, i64 %idxprom19, !dbg !14064
  %30 = load i16, i16* %arrayidx20, align 2, !dbg !14064
  %conv21 = zext i16 %30 to i32, !dbg !14064
  %sub22 = sub nsw i32 %conv18, %conv21, !dbg !14065
  %conv23 = sitofp i32 %sub22 to double, !dbg !14066
  %31 = load double, double* %opacity, align 8, !dbg !14067
  %mul = fmul double %conv23, %31, !dbg !14068
  %add24 = fadd double %conv11, %mul, !dbg !14069
  %conv25 = fptoui double %add24 to i16, !dbg !14041
  %32 = load i32, i32* %j, align 4, !dbg !14070
  %idxprom26 = sext i32 %32 to i64, !dbg !14071
  %33 = load i16*, i16** %dst, align 8, !dbg !14071
  %arrayidx27 = getelementptr inbounds i16, i16* %33, i64 %idxprom26, !dbg !14071
  store i16 %conv25, i16* %arrayidx27, align 2, !dbg !14072
  br label %for.inc, !dbg !14073

for.inc:                                          ; preds = %av_clip_uint16_c.exit
  %34 = load i32, i32* %j, align 4, !dbg !14074
  %inc = add nsw i32 %34, 1, !dbg !14074
  store i32 %inc, i32* %j, align 4, !dbg !14074
  br label %for.cond5, !dbg !14076, !llvm.loop !14077

for.end:                                          ; preds = %for.cond5
  %35 = load i64, i64* %dst_linesize.addr, align 8, !dbg !14079
  %36 = load i16*, i16** %dst, align 8, !dbg !14081
  %add.ptr = getelementptr inbounds i16, i16* %36, i64 %35, !dbg !14081
  store i16* %add.ptr, i16** %dst, align 8, !dbg !14081
  %37 = load i64, i64* %top_linesize.addr, align 8, !dbg !14082
  %38 = load i16*, i16** %top, align 8, !dbg !14083
  %add.ptr28 = getelementptr inbounds i16, i16* %38, i64 %37, !dbg !14083
  store i16* %add.ptr28, i16** %top, align 8, !dbg !14083
  %39 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !14084
  %40 = load i16*, i16** %bottom, align 8, !dbg !14085
  %add.ptr29 = getelementptr inbounds i16, i16* %40, i64 %39, !dbg !14085
  store i16* %add.ptr29, i16** %bottom, align 8, !dbg !14085
  br label %for.inc30, !dbg !14086

for.inc30:                                        ; preds = %for.end
  %41 = load i32, i32* %i, align 4, !dbg !14087
  %inc31 = add nsw i32 %41, 1, !dbg !14087
  store i32 %inc31, i32* %i, align 4, !dbg !14087
  br label %for.cond, !dbg !14089, !llvm.loop !14090

for.end32:                                        ; preds = %for.cond
  ret void, !dbg !14092
}

; Function Attrs: nounwind uwtable
define internal void @blend_and_16bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !14094 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !14095, metadata !905), !dbg !14096
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !14097, metadata !905), !dbg !14098
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !14099, metadata !905), !dbg !14100
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !14101, metadata !905), !dbg !14102
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !14103, metadata !905), !dbg !14104
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !14105, metadata !905), !dbg !14106
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !14107, metadata !905), !dbg !14108
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !14109, metadata !905), !dbg !14110
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !14111, metadata !905), !dbg !14112
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !14113, metadata !905), !dbg !14114
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !14115, metadata !905), !dbg !14116
  call void @llvm.dbg.declare(metadata i16** %top, metadata !14117, metadata !905), !dbg !14118
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !14119
  %1 = bitcast i8* %0 to i16*, !dbg !14120
  store i16* %1, i16** %top, align 8, !dbg !14118
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !14121, metadata !905), !dbg !14122
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !14123
  %3 = bitcast i8* %2 to i16*, !dbg !14124
  store i16* %3, i16** %bottom, align 8, !dbg !14122
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !14125, metadata !905), !dbg !14126
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !14127
  %5 = bitcast i8* %4 to i16*, !dbg !14128
  store i16* %5, i16** %dst, align 8, !dbg !14126
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !14129, metadata !905), !dbg !14130
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !14131
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !14132
  %7 = load double, double* %opacity1, align 8, !dbg !14132
  store double %7, double* %opacity, align 8, !dbg !14130
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14133, metadata !905), !dbg !14134
  call void @llvm.dbg.declare(metadata i32* %j, metadata !14135, metadata !905), !dbg !14136
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !14137
  %div = sdiv i64 %8, 2, !dbg !14137
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !14137
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !14138
  %div2 = sdiv i64 %9, 2, !dbg !14138
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !14138
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !14139
  %div3 = sdiv i64 %10, 2, !dbg !14139
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !14139
  store i32 0, i32* %i, align 4, !dbg !14140
  br label %for.cond, !dbg !14142

for.cond:                                         ; preds = %for.inc27, %entry
  %11 = load i32, i32* %i, align 4, !dbg !14143
  %conv = sext i32 %11 to i64, !dbg !14143
  %12 = load i64, i64* %height.addr, align 8, !dbg !14146
  %cmp = icmp slt i64 %conv, %12, !dbg !14147
  br i1 %cmp, label %for.body, label %for.end29, !dbg !14148

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !14149
  br label %for.cond5, !dbg !14153

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !14154
  %conv6 = sext i32 %13 to i64, !dbg !14154
  %14 = load i64, i64* %width.addr, align 8, !dbg !14157
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !14158
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !14159

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !14160
  %idxprom = sext i32 %15 to i64, !dbg !14163
  %16 = load i16*, i16** %top, align 8, !dbg !14163
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !14163
  %17 = load i16, i16* %arrayidx, align 2, !dbg !14163
  %conv10 = zext i16 %17 to i32, !dbg !14163
  %conv11 = sitofp i32 %conv10 to double, !dbg !14163
  %18 = load i32, i32* %j, align 4, !dbg !14164
  %idxprom12 = sext i32 %18 to i64, !dbg !14165
  %19 = load i16*, i16** %top, align 8, !dbg !14165
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !14165
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !14165
  %conv14 = zext i16 %20 to i32, !dbg !14165
  %21 = load i32, i32* %j, align 4, !dbg !14166
  %idxprom15 = sext i32 %21 to i64, !dbg !14167
  %22 = load i16*, i16** %bottom, align 8, !dbg !14167
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !14167
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !14167
  %conv17 = zext i16 %23 to i32, !dbg !14167
  %and = and i32 %conv14, %conv17, !dbg !14168
  %24 = load i32, i32* %j, align 4, !dbg !14169
  %idxprom18 = sext i32 %24 to i64, !dbg !14170
  %25 = load i16*, i16** %top, align 8, !dbg !14170
  %arrayidx19 = getelementptr inbounds i16, i16* %25, i64 %idxprom18, !dbg !14170
  %26 = load i16, i16* %arrayidx19, align 2, !dbg !14170
  %conv20 = zext i16 %26 to i32, !dbg !14170
  %sub = sub nsw i32 %and, %conv20, !dbg !14171
  %conv21 = sitofp i32 %sub to double, !dbg !14172
  %27 = load double, double* %opacity, align 8, !dbg !14173
  %mul = fmul double %conv21, %27, !dbg !14174
  %add = fadd double %conv11, %mul, !dbg !14175
  %conv22 = fptoui double %add to i16, !dbg !14163
  %28 = load i32, i32* %j, align 4, !dbg !14176
  %idxprom23 = sext i32 %28 to i64, !dbg !14177
  %29 = load i16*, i16** %dst, align 8, !dbg !14177
  %arrayidx24 = getelementptr inbounds i16, i16* %29, i64 %idxprom23, !dbg !14177
  store i16 %conv22, i16* %arrayidx24, align 2, !dbg !14178
  br label %for.inc, !dbg !14179

for.inc:                                          ; preds = %for.body9
  %30 = load i32, i32* %j, align 4, !dbg !14180
  %inc = add nsw i32 %30, 1, !dbg !14180
  store i32 %inc, i32* %j, align 4, !dbg !14180
  br label %for.cond5, !dbg !14182, !llvm.loop !14183

for.end:                                          ; preds = %for.cond5
  %31 = load i64, i64* %dst_linesize.addr, align 8, !dbg !14185
  %32 = load i16*, i16** %dst, align 8, !dbg !14187
  %add.ptr = getelementptr inbounds i16, i16* %32, i64 %31, !dbg !14187
  store i16* %add.ptr, i16** %dst, align 8, !dbg !14187
  %33 = load i64, i64* %top_linesize.addr, align 8, !dbg !14188
  %34 = load i16*, i16** %top, align 8, !dbg !14189
  %add.ptr25 = getelementptr inbounds i16, i16* %34, i64 %33, !dbg !14189
  store i16* %add.ptr25, i16** %top, align 8, !dbg !14189
  %35 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !14190
  %36 = load i16*, i16** %bottom, align 8, !dbg !14191
  %add.ptr26 = getelementptr inbounds i16, i16* %36, i64 %35, !dbg !14191
  store i16* %add.ptr26, i16** %bottom, align 8, !dbg !14191
  br label %for.inc27, !dbg !14192

for.inc27:                                        ; preds = %for.end
  %37 = load i32, i32* %i, align 4, !dbg !14193
  %inc28 = add nsw i32 %37, 1, !dbg !14193
  store i32 %inc28, i32* %i, align 4, !dbg !14193
  br label %for.cond, !dbg !14195, !llvm.loop !14196

for.end29:                                        ; preds = %for.cond
  ret void, !dbg !14198
}

; Function Attrs: nounwind uwtable
define internal void @blend_average_16bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !14200 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !14201, metadata !905), !dbg !14202
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !14203, metadata !905), !dbg !14204
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !14205, metadata !905), !dbg !14206
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !14207, metadata !905), !dbg !14208
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !14209, metadata !905), !dbg !14210
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !14211, metadata !905), !dbg !14212
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !14213, metadata !905), !dbg !14214
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !14215, metadata !905), !dbg !14216
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !14217, metadata !905), !dbg !14218
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !14219, metadata !905), !dbg !14220
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !14221, metadata !905), !dbg !14222
  call void @llvm.dbg.declare(metadata i16** %top, metadata !14223, metadata !905), !dbg !14224
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !14225
  %1 = bitcast i8* %0 to i16*, !dbg !14226
  store i16* %1, i16** %top, align 8, !dbg !14224
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !14227, metadata !905), !dbg !14228
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !14229
  %3 = bitcast i8* %2 to i16*, !dbg !14230
  store i16* %3, i16** %bottom, align 8, !dbg !14228
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !14231, metadata !905), !dbg !14232
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !14233
  %5 = bitcast i8* %4 to i16*, !dbg !14234
  store i16* %5, i16** %dst, align 8, !dbg !14232
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !14235, metadata !905), !dbg !14236
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !14237
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !14238
  %7 = load double, double* %opacity1, align 8, !dbg !14238
  store double %7, double* %opacity, align 8, !dbg !14236
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14239, metadata !905), !dbg !14240
  call void @llvm.dbg.declare(metadata i32* %j, metadata !14241, metadata !905), !dbg !14242
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !14243
  %div = sdiv i64 %8, 2, !dbg !14243
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !14243
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !14244
  %div2 = sdiv i64 %9, 2, !dbg !14244
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !14244
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !14245
  %div3 = sdiv i64 %10, 2, !dbg !14245
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !14245
  store i32 0, i32* %i, align 4, !dbg !14246
  br label %for.cond, !dbg !14248

for.cond:                                         ; preds = %for.inc29, %entry
  %11 = load i32, i32* %i, align 4, !dbg !14249
  %conv = sext i32 %11 to i64, !dbg !14249
  %12 = load i64, i64* %height.addr, align 8, !dbg !14252
  %cmp = icmp slt i64 %conv, %12, !dbg !14253
  br i1 %cmp, label %for.body, label %for.end31, !dbg !14254

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !14255
  br label %for.cond5, !dbg !14259

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !14260
  %conv6 = sext i32 %13 to i64, !dbg !14260
  %14 = load i64, i64* %width.addr, align 8, !dbg !14263
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !14264
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !14265

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !14266
  %idxprom = sext i32 %15 to i64, !dbg !14269
  %16 = load i16*, i16** %top, align 8, !dbg !14269
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !14269
  %17 = load i16, i16* %arrayidx, align 2, !dbg !14269
  %conv10 = zext i16 %17 to i32, !dbg !14269
  %conv11 = sitofp i32 %conv10 to double, !dbg !14269
  %18 = load i32, i32* %j, align 4, !dbg !14270
  %idxprom12 = sext i32 %18 to i64, !dbg !14271
  %19 = load i16*, i16** %top, align 8, !dbg !14271
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !14271
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !14271
  %conv14 = zext i16 %20 to i32, !dbg !14271
  %21 = load i32, i32* %j, align 4, !dbg !14272
  %idxprom15 = sext i32 %21 to i64, !dbg !14273
  %22 = load i16*, i16** %bottom, align 8, !dbg !14273
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !14273
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !14273
  %conv17 = zext i16 %23 to i32, !dbg !14273
  %add = add nsw i32 %conv14, %conv17, !dbg !14274
  %div18 = sdiv i32 %add, 2, !dbg !14275
  %24 = load i32, i32* %j, align 4, !dbg !14276
  %idxprom19 = sext i32 %24 to i64, !dbg !14277
  %25 = load i16*, i16** %top, align 8, !dbg !14277
  %arrayidx20 = getelementptr inbounds i16, i16* %25, i64 %idxprom19, !dbg !14277
  %26 = load i16, i16* %arrayidx20, align 2, !dbg !14277
  %conv21 = zext i16 %26 to i32, !dbg !14277
  %sub = sub nsw i32 %div18, %conv21, !dbg !14278
  %conv22 = sitofp i32 %sub to double, !dbg !14279
  %27 = load double, double* %opacity, align 8, !dbg !14280
  %mul = fmul double %conv22, %27, !dbg !14281
  %add23 = fadd double %conv11, %mul, !dbg !14282
  %conv24 = fptoui double %add23 to i16, !dbg !14269
  %28 = load i32, i32* %j, align 4, !dbg !14283
  %idxprom25 = sext i32 %28 to i64, !dbg !14284
  %29 = load i16*, i16** %dst, align 8, !dbg !14284
  %arrayidx26 = getelementptr inbounds i16, i16* %29, i64 %idxprom25, !dbg !14284
  store i16 %conv24, i16* %arrayidx26, align 2, !dbg !14285
  br label %for.inc, !dbg !14286

for.inc:                                          ; preds = %for.body9
  %30 = load i32, i32* %j, align 4, !dbg !14287
  %inc = add nsw i32 %30, 1, !dbg !14287
  store i32 %inc, i32* %j, align 4, !dbg !14287
  br label %for.cond5, !dbg !14289, !llvm.loop !14290

for.end:                                          ; preds = %for.cond5
  %31 = load i64, i64* %dst_linesize.addr, align 8, !dbg !14292
  %32 = load i16*, i16** %dst, align 8, !dbg !14294
  %add.ptr = getelementptr inbounds i16, i16* %32, i64 %31, !dbg !14294
  store i16* %add.ptr, i16** %dst, align 8, !dbg !14294
  %33 = load i64, i64* %top_linesize.addr, align 8, !dbg !14295
  %34 = load i16*, i16** %top, align 8, !dbg !14296
  %add.ptr27 = getelementptr inbounds i16, i16* %34, i64 %33, !dbg !14296
  store i16* %add.ptr27, i16** %top, align 8, !dbg !14296
  %35 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !14297
  %36 = load i16*, i16** %bottom, align 8, !dbg !14298
  %add.ptr28 = getelementptr inbounds i16, i16* %36, i64 %35, !dbg !14298
  store i16* %add.ptr28, i16** %bottom, align 8, !dbg !14298
  br label %for.inc29, !dbg !14299

for.inc29:                                        ; preds = %for.end
  %37 = load i32, i32* %i, align 4, !dbg !14300
  %inc30 = add nsw i32 %37, 1, !dbg !14300
  store i32 %inc30, i32* %i, align 4, !dbg !14300
  br label %for.cond, !dbg !14302, !llvm.loop !14303

for.end31:                                        ; preds = %for.cond
  ret void, !dbg !14305
}

; Function Attrs: nounwind uwtable
define internal void @blend_burn_16bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !14307 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !14308, metadata !905), !dbg !14309
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !14310, metadata !905), !dbg !14311
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !14312, metadata !905), !dbg !14313
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !14314, metadata !905), !dbg !14315
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !14316, metadata !905), !dbg !14317
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !14318, metadata !905), !dbg !14319
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !14320, metadata !905), !dbg !14321
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !14322, metadata !905), !dbg !14323
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !14324, metadata !905), !dbg !14325
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !14326, metadata !905), !dbg !14327
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !14328, metadata !905), !dbg !14329
  call void @llvm.dbg.declare(metadata i16** %top, metadata !14330, metadata !905), !dbg !14331
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !14332
  %1 = bitcast i8* %0 to i16*, !dbg !14333
  store i16* %1, i16** %top, align 8, !dbg !14331
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !14334, metadata !905), !dbg !14335
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !14336
  %3 = bitcast i8* %2 to i16*, !dbg !14337
  store i16* %3, i16** %bottom, align 8, !dbg !14335
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !14338, metadata !905), !dbg !14339
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !14340
  %5 = bitcast i8* %4 to i16*, !dbg !14341
  store i16* %5, i16** %dst, align 8, !dbg !14339
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !14342, metadata !905), !dbg !14343
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !14344
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !14345
  %7 = load double, double* %opacity1, align 8, !dbg !14345
  store double %7, double* %opacity, align 8, !dbg !14343
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14346, metadata !905), !dbg !14347
  call void @llvm.dbg.declare(metadata i32* %j, metadata !14348, metadata !905), !dbg !14349
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !14350
  %div = sdiv i64 %8, 2, !dbg !14350
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !14350
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !14351
  %div2 = sdiv i64 %9, 2, !dbg !14351
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !14351
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !14352
  %div3 = sdiv i64 %10, 2, !dbg !14352
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !14352
  store i32 0, i32* %i, align 4, !dbg !14353
  br label %for.cond, !dbg !14355

for.cond:                                         ; preds = %for.inc54, %entry
  %11 = load i32, i32* %i, align 4, !dbg !14356
  %conv = sext i32 %11 to i64, !dbg !14356
  %12 = load i64, i64* %height.addr, align 8, !dbg !14359
  %cmp = icmp slt i64 %conv, %12, !dbg !14360
  br i1 %cmp, label %for.body, label %for.end56, !dbg !14361

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !14362
  br label %for.cond5, !dbg !14366

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !14367
  %conv6 = sext i32 %13 to i64, !dbg !14367
  %14 = load i64, i64* %width.addr, align 8, !dbg !14370
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !14371
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !14372

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !14373
  %idxprom = sext i32 %15 to i64, !dbg !14376
  %16 = load i16*, i16** %top, align 8, !dbg !14376
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !14376
  %17 = load i16, i16* %arrayidx, align 2, !dbg !14376
  %conv10 = zext i16 %17 to i32, !dbg !14376
  %conv11 = sitofp i32 %conv10 to double, !dbg !14376
  %18 = load i32, i32* %j, align 4, !dbg !14377
  %idxprom12 = sext i32 %18 to i64, !dbg !14378
  %19 = load i16*, i16** %top, align 8, !dbg !14378
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !14378
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !14378
  %conv14 = zext i16 %20 to i32, !dbg !14379
  %cmp15 = icmp eq i32 %conv14, 0, !dbg !14380
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !14381

cond.true:                                        ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !14382
  %idxprom17 = sext i32 %21 to i64, !dbg !14384
  %22 = load i16*, i16** %top, align 8, !dbg !14384
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !14384
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !14384
  %conv19 = zext i16 %23 to i32, !dbg !14385
  br label %cond.end42, !dbg !14386

cond.false:                                       ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !14387
  %idxprom20 = sext i32 %24 to i64, !dbg !14389
  %25 = load i16*, i16** %bottom, align 8, !dbg !14389
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !14389
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !14389
  %conv22 = zext i16 %26 to i32, !dbg !14390
  %sub = sub nsw i32 65535, %conv22, !dbg !14391
  %shl = shl i32 %sub, 16, !dbg !14392
  %27 = load i32, i32* %j, align 4, !dbg !14393
  %idxprom23 = sext i32 %27 to i64, !dbg !14394
  %28 = load i16*, i16** %top, align 8, !dbg !14394
  %arrayidx24 = getelementptr inbounds i16, i16* %28, i64 %idxprom23, !dbg !14394
  %29 = load i16, i16* %arrayidx24, align 2, !dbg !14394
  %conv25 = zext i16 %29 to i32, !dbg !14395
  %div26 = sdiv i32 %shl, %conv25, !dbg !14396
  %sub27 = sub nsw i32 65535, %div26, !dbg !14397
  %cmp28 = icmp sgt i32 0, %sub27, !dbg !14398
  br i1 %cmp28, label %cond.true30, label %cond.false31, !dbg !14399

cond.true30:                                      ; preds = %cond.false
  br label %cond.end, !dbg !14400

cond.false31:                                     ; preds = %cond.false
  %30 = load i32, i32* %j, align 4, !dbg !14402
  %idxprom32 = sext i32 %30 to i64, !dbg !14404
  %31 = load i16*, i16** %bottom, align 8, !dbg !14404
  %arrayidx33 = getelementptr inbounds i16, i16* %31, i64 %idxprom32, !dbg !14404
  %32 = load i16, i16* %arrayidx33, align 2, !dbg !14404
  %conv34 = zext i16 %32 to i32, !dbg !14405
  %sub35 = sub nsw i32 65535, %conv34, !dbg !14406
  %shl36 = shl i32 %sub35, 16, !dbg !14407
  %33 = load i32, i32* %j, align 4, !dbg !14408
  %idxprom37 = sext i32 %33 to i64, !dbg !14409
  %34 = load i16*, i16** %top, align 8, !dbg !14409
  %arrayidx38 = getelementptr inbounds i16, i16* %34, i64 %idxprom37, !dbg !14409
  %35 = load i16, i16* %arrayidx38, align 2, !dbg !14409
  %conv39 = zext i16 %35 to i32, !dbg !14410
  %div40 = sdiv i32 %shl36, %conv39, !dbg !14411
  %sub41 = sub nsw i32 65535, %div40, !dbg !14412
  br label %cond.end, !dbg !14413

cond.end:                                         ; preds = %cond.false31, %cond.true30
  %cond = phi i32 [ 0, %cond.true30 ], [ %sub41, %cond.false31 ], !dbg !14414
  br label %cond.end42, !dbg !14416

cond.end42:                                       ; preds = %cond.end, %cond.true
  %cond43 = phi i32 [ %conv19, %cond.true ], [ %cond, %cond.end ], !dbg !14417
  %36 = load i32, i32* %j, align 4, !dbg !14419
  %idxprom44 = sext i32 %36 to i64, !dbg !14420
  %37 = load i16*, i16** %top, align 8, !dbg !14420
  %arrayidx45 = getelementptr inbounds i16, i16* %37, i64 %idxprom44, !dbg !14420
  %38 = load i16, i16* %arrayidx45, align 2, !dbg !14420
  %conv46 = zext i16 %38 to i32, !dbg !14420
  %sub47 = sub nsw i32 %cond43, %conv46, !dbg !14421
  %conv48 = sitofp i32 %sub47 to double, !dbg !14422
  %39 = load double, double* %opacity, align 8, !dbg !14423
  %mul = fmul double %conv48, %39, !dbg !14424
  %add = fadd double %conv11, %mul, !dbg !14425
  %conv49 = fptoui double %add to i16, !dbg !14426
  %40 = load i32, i32* %j, align 4, !dbg !14427
  %idxprom50 = sext i32 %40 to i64, !dbg !14428
  %41 = load i16*, i16** %dst, align 8, !dbg !14428
  %arrayidx51 = getelementptr inbounds i16, i16* %41, i64 %idxprom50, !dbg !14428
  store i16 %conv49, i16* %arrayidx51, align 2, !dbg !14429
  br label %for.inc, !dbg !14430

for.inc:                                          ; preds = %cond.end42
  %42 = load i32, i32* %j, align 4, !dbg !14431
  %inc = add nsw i32 %42, 1, !dbg !14431
  store i32 %inc, i32* %j, align 4, !dbg !14431
  br label %for.cond5, !dbg !14433, !llvm.loop !14434

for.end:                                          ; preds = %for.cond5
  %43 = load i64, i64* %dst_linesize.addr, align 8, !dbg !14436
  %44 = load i16*, i16** %dst, align 8, !dbg !14438
  %add.ptr = getelementptr inbounds i16, i16* %44, i64 %43, !dbg !14438
  store i16* %add.ptr, i16** %dst, align 8, !dbg !14438
  %45 = load i64, i64* %top_linesize.addr, align 8, !dbg !14439
  %46 = load i16*, i16** %top, align 8, !dbg !14440
  %add.ptr52 = getelementptr inbounds i16, i16* %46, i64 %45, !dbg !14440
  store i16* %add.ptr52, i16** %top, align 8, !dbg !14440
  %47 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !14441
  %48 = load i16*, i16** %bottom, align 8, !dbg !14442
  %add.ptr53 = getelementptr inbounds i16, i16* %48, i64 %47, !dbg !14442
  store i16* %add.ptr53, i16** %bottom, align 8, !dbg !14442
  br label %for.inc54, !dbg !14443

for.inc54:                                        ; preds = %for.end
  %49 = load i32, i32* %i, align 4, !dbg !14444
  %inc55 = add nsw i32 %49, 1, !dbg !14444
  store i32 %inc55, i32* %i, align 4, !dbg !14444
  br label %for.cond, !dbg !14446, !llvm.loop !14447

for.end56:                                        ; preds = %for.cond
  ret void, !dbg !14449
}

; Function Attrs: nounwind uwtable
define internal void @blend_darken_16bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !14451 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !14452, metadata !905), !dbg !14453
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !14454, metadata !905), !dbg !14455
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !14456, metadata !905), !dbg !14457
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !14458, metadata !905), !dbg !14459
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !14460, metadata !905), !dbg !14461
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !14462, metadata !905), !dbg !14463
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !14464, metadata !905), !dbg !14465
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !14466, metadata !905), !dbg !14467
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !14468, metadata !905), !dbg !14469
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !14470, metadata !905), !dbg !14471
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !14472, metadata !905), !dbg !14473
  call void @llvm.dbg.declare(metadata i16** %top, metadata !14474, metadata !905), !dbg !14475
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !14476
  %1 = bitcast i8* %0 to i16*, !dbg !14477
  store i16* %1, i16** %top, align 8, !dbg !14475
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !14478, metadata !905), !dbg !14479
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !14480
  %3 = bitcast i8* %2 to i16*, !dbg !14481
  store i16* %3, i16** %bottom, align 8, !dbg !14479
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !14482, metadata !905), !dbg !14483
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !14484
  %5 = bitcast i8* %4 to i16*, !dbg !14485
  store i16* %5, i16** %dst, align 8, !dbg !14483
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !14486, metadata !905), !dbg !14487
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !14488
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !14489
  %7 = load double, double* %opacity1, align 8, !dbg !14489
  store double %7, double* %opacity, align 8, !dbg !14487
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14490, metadata !905), !dbg !14491
  call void @llvm.dbg.declare(metadata i32* %j, metadata !14492, metadata !905), !dbg !14493
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !14494
  %div = sdiv i64 %8, 2, !dbg !14494
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !14494
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !14495
  %div2 = sdiv i64 %9, 2, !dbg !14495
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !14495
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !14496
  %div3 = sdiv i64 %10, 2, !dbg !14496
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !14496
  store i32 0, i32* %i, align 4, !dbg !14497
  br label %for.cond, !dbg !14499

for.cond:                                         ; preds = %for.inc35, %entry
  %11 = load i32, i32* %i, align 4, !dbg !14500
  %conv = sext i32 %11 to i64, !dbg !14500
  %12 = load i64, i64* %height.addr, align 8, !dbg !14503
  %cmp = icmp slt i64 %conv, %12, !dbg !14504
  br i1 %cmp, label %for.body, label %for.end37, !dbg !14505

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !14506
  br label %for.cond5, !dbg !14510

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !14511
  %conv6 = sext i32 %13 to i64, !dbg !14511
  %14 = load i64, i64* %width.addr, align 8, !dbg !14514
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !14515
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !14516

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !14517
  %idxprom = sext i32 %15 to i64, !dbg !14520
  %16 = load i16*, i16** %top, align 8, !dbg !14520
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !14520
  %17 = load i16, i16* %arrayidx, align 2, !dbg !14520
  %conv10 = zext i16 %17 to i32, !dbg !14520
  %conv11 = sitofp i32 %conv10 to double, !dbg !14520
  %18 = load i32, i32* %j, align 4, !dbg !14521
  %idxprom12 = sext i32 %18 to i64, !dbg !14522
  %19 = load i16*, i16** %top, align 8, !dbg !14522
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !14522
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !14522
  %conv14 = zext i16 %20 to i32, !dbg !14523
  %21 = load i32, i32* %j, align 4, !dbg !14524
  %idxprom15 = sext i32 %21 to i64, !dbg !14525
  %22 = load i16*, i16** %bottom, align 8, !dbg !14525
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !14525
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !14525
  %conv17 = zext i16 %23 to i32, !dbg !14526
  %cmp18 = icmp sgt i32 %conv14, %conv17, !dbg !14527
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !14523

cond.true:                                        ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !14528
  %idxprom20 = sext i32 %24 to i64, !dbg !14530
  %25 = load i16*, i16** %bottom, align 8, !dbg !14530
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !14530
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !14530
  %conv22 = zext i16 %26 to i32, !dbg !14531
  br label %cond.end, !dbg !14532

cond.false:                                       ; preds = %for.body9
  %27 = load i32, i32* %j, align 4, !dbg !14533
  %idxprom23 = sext i32 %27 to i64, !dbg !14535
  %28 = load i16*, i16** %top, align 8, !dbg !14535
  %arrayidx24 = getelementptr inbounds i16, i16* %28, i64 %idxprom23, !dbg !14535
  %29 = load i16, i16* %arrayidx24, align 2, !dbg !14535
  %conv25 = zext i16 %29 to i32, !dbg !14536
  br label %cond.end, !dbg !14537

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv22, %cond.true ], [ %conv25, %cond.false ], !dbg !14538
  %30 = load i32, i32* %j, align 4, !dbg !14540
  %idxprom26 = sext i32 %30 to i64, !dbg !14541
  %31 = load i16*, i16** %top, align 8, !dbg !14541
  %arrayidx27 = getelementptr inbounds i16, i16* %31, i64 %idxprom26, !dbg !14541
  %32 = load i16, i16* %arrayidx27, align 2, !dbg !14541
  %conv28 = zext i16 %32 to i32, !dbg !14541
  %sub = sub nsw i32 %cond, %conv28, !dbg !14542
  %conv29 = sitofp i32 %sub to double, !dbg !14543
  %33 = load double, double* %opacity, align 8, !dbg !14544
  %mul = fmul double %conv29, %33, !dbg !14545
  %add = fadd double %conv11, %mul, !dbg !14546
  %conv30 = fptoui double %add to i16, !dbg !14547
  %34 = load i32, i32* %j, align 4, !dbg !14548
  %idxprom31 = sext i32 %34 to i64, !dbg !14549
  %35 = load i16*, i16** %dst, align 8, !dbg !14549
  %arrayidx32 = getelementptr inbounds i16, i16* %35, i64 %idxprom31, !dbg !14549
  store i16 %conv30, i16* %arrayidx32, align 2, !dbg !14550
  br label %for.inc, !dbg !14551

for.inc:                                          ; preds = %cond.end
  %36 = load i32, i32* %j, align 4, !dbg !14552
  %inc = add nsw i32 %36, 1, !dbg !14552
  store i32 %inc, i32* %j, align 4, !dbg !14552
  br label %for.cond5, !dbg !14554, !llvm.loop !14555

for.end:                                          ; preds = %for.cond5
  %37 = load i64, i64* %dst_linesize.addr, align 8, !dbg !14557
  %38 = load i16*, i16** %dst, align 8, !dbg !14559
  %add.ptr = getelementptr inbounds i16, i16* %38, i64 %37, !dbg !14559
  store i16* %add.ptr, i16** %dst, align 8, !dbg !14559
  %39 = load i64, i64* %top_linesize.addr, align 8, !dbg !14560
  %40 = load i16*, i16** %top, align 8, !dbg !14561
  %add.ptr33 = getelementptr inbounds i16, i16* %40, i64 %39, !dbg !14561
  store i16* %add.ptr33, i16** %top, align 8, !dbg !14561
  %41 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !14562
  %42 = load i16*, i16** %bottom, align 8, !dbg !14563
  %add.ptr34 = getelementptr inbounds i16, i16* %42, i64 %41, !dbg !14563
  store i16* %add.ptr34, i16** %bottom, align 8, !dbg !14563
  br label %for.inc35, !dbg !14564

for.inc35:                                        ; preds = %for.end
  %43 = load i32, i32* %i, align 4, !dbg !14565
  %inc36 = add nsw i32 %43, 1, !dbg !14565
  store i32 %inc36, i32* %i, align 4, !dbg !14565
  br label %for.cond, !dbg !14567, !llvm.loop !14568

for.end37:                                        ; preds = %for.cond
  ret void, !dbg !14570
}

; Function Attrs: nounwind uwtable
define internal void @blend_difference_16bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !14572 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !14573, metadata !905), !dbg !14574
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !14575, metadata !905), !dbg !14576
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !14577, metadata !905), !dbg !14578
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !14579, metadata !905), !dbg !14580
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !14581, metadata !905), !dbg !14582
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !14583, metadata !905), !dbg !14584
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !14585, metadata !905), !dbg !14586
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !14587, metadata !905), !dbg !14588
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !14589, metadata !905), !dbg !14590
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !14591, metadata !905), !dbg !14592
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !14593, metadata !905), !dbg !14594
  call void @llvm.dbg.declare(metadata i16** %top, metadata !14595, metadata !905), !dbg !14596
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !14597
  %1 = bitcast i8* %0 to i16*, !dbg !14598
  store i16* %1, i16** %top, align 8, !dbg !14596
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !14599, metadata !905), !dbg !14600
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !14601
  %3 = bitcast i8* %2 to i16*, !dbg !14602
  store i16* %3, i16** %bottom, align 8, !dbg !14600
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !14603, metadata !905), !dbg !14604
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !14605
  %5 = bitcast i8* %4 to i16*, !dbg !14606
  store i16* %5, i16** %dst, align 8, !dbg !14604
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !14607, metadata !905), !dbg !14608
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !14609
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !14610
  %7 = load double, double* %opacity1, align 8, !dbg !14610
  store double %7, double* %opacity, align 8, !dbg !14608
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14611, metadata !905), !dbg !14612
  call void @llvm.dbg.declare(metadata i32* %j, metadata !14613, metadata !905), !dbg !14614
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !14615
  %div = sdiv i64 %8, 2, !dbg !14615
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !14615
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !14616
  %div2 = sdiv i64 %9, 2, !dbg !14616
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !14616
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !14617
  %div3 = sdiv i64 %10, 2, !dbg !14617
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !14617
  store i32 0, i32* %i, align 4, !dbg !14618
  br label %for.cond, !dbg !14620

for.cond:                                         ; preds = %for.inc45, %entry
  %11 = load i32, i32* %i, align 4, !dbg !14621
  %conv = sext i32 %11 to i64, !dbg !14621
  %12 = load i64, i64* %height.addr, align 8, !dbg !14624
  %cmp = icmp slt i64 %conv, %12, !dbg !14625
  br i1 %cmp, label %for.body, label %for.end47, !dbg !14626

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !14627
  br label %for.cond5, !dbg !14631

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !14632
  %conv6 = sext i32 %13 to i64, !dbg !14632
  %14 = load i64, i64* %width.addr, align 8, !dbg !14635
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !14636
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !14637

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !14638
  %idxprom = sext i32 %15 to i64, !dbg !14641
  %16 = load i16*, i16** %top, align 8, !dbg !14641
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !14641
  %17 = load i16, i16* %arrayidx, align 2, !dbg !14641
  %conv10 = zext i16 %17 to i32, !dbg !14641
  %conv11 = sitofp i32 %conv10 to double, !dbg !14641
  %18 = load i32, i32* %j, align 4, !dbg !14642
  %idxprom12 = sext i32 %18 to i64, !dbg !14643
  %19 = load i16*, i16** %top, align 8, !dbg !14643
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !14643
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !14643
  %conv14 = zext i16 %20 to i32, !dbg !14643
  %21 = load i32, i32* %j, align 4, !dbg !14644
  %idxprom15 = sext i32 %21 to i64, !dbg !14645
  %22 = load i16*, i16** %bottom, align 8, !dbg !14645
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !14645
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !14645
  %conv17 = zext i16 %23 to i32, !dbg !14645
  %sub = sub nsw i32 %conv14, %conv17, !dbg !14646
  %cmp18 = icmp sge i32 %sub, 0, !dbg !14647
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !14648

cond.true:                                        ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !14649
  %idxprom20 = sext i32 %24 to i64, !dbg !14651
  %25 = load i16*, i16** %top, align 8, !dbg !14651
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !14651
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !14651
  %conv22 = zext i16 %26 to i32, !dbg !14651
  %27 = load i32, i32* %j, align 4, !dbg !14652
  %idxprom23 = sext i32 %27 to i64, !dbg !14653
  %28 = load i16*, i16** %bottom, align 8, !dbg !14653
  %arrayidx24 = getelementptr inbounds i16, i16* %28, i64 %idxprom23, !dbg !14653
  %29 = load i16, i16* %arrayidx24, align 2, !dbg !14653
  %conv25 = zext i16 %29 to i32, !dbg !14653
  %sub26 = sub nsw i32 %conv22, %conv25, !dbg !14654
  br label %cond.end, !dbg !14655

cond.false:                                       ; preds = %for.body9
  %30 = load i32, i32* %j, align 4, !dbg !14656
  %idxprom27 = sext i32 %30 to i64, !dbg !14658
  %31 = load i16*, i16** %top, align 8, !dbg !14658
  %arrayidx28 = getelementptr inbounds i16, i16* %31, i64 %idxprom27, !dbg !14658
  %32 = load i16, i16* %arrayidx28, align 2, !dbg !14658
  %conv29 = zext i16 %32 to i32, !dbg !14658
  %33 = load i32, i32* %j, align 4, !dbg !14659
  %idxprom30 = sext i32 %33 to i64, !dbg !14660
  %34 = load i16*, i16** %bottom, align 8, !dbg !14660
  %arrayidx31 = getelementptr inbounds i16, i16* %34, i64 %idxprom30, !dbg !14660
  %35 = load i16, i16* %arrayidx31, align 2, !dbg !14660
  %conv32 = zext i16 %35 to i32, !dbg !14660
  %sub33 = sub nsw i32 %conv29, %conv32, !dbg !14661
  %sub34 = sub nsw i32 0, %sub33, !dbg !14662
  br label %cond.end, !dbg !14663

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub26, %cond.true ], [ %sub34, %cond.false ], !dbg !14664
  %36 = load i32, i32* %j, align 4, !dbg !14666
  %idxprom35 = sext i32 %36 to i64, !dbg !14667
  %37 = load i16*, i16** %top, align 8, !dbg !14667
  %arrayidx36 = getelementptr inbounds i16, i16* %37, i64 %idxprom35, !dbg !14667
  %38 = load i16, i16* %arrayidx36, align 2, !dbg !14667
  %conv37 = zext i16 %38 to i32, !dbg !14667
  %sub38 = sub nsw i32 %cond, %conv37, !dbg !14668
  %conv39 = sitofp i32 %sub38 to double, !dbg !14669
  %39 = load double, double* %opacity, align 8, !dbg !14670
  %mul = fmul double %conv39, %39, !dbg !14671
  %add = fadd double %conv11, %mul, !dbg !14672
  %conv40 = fptoui double %add to i16, !dbg !14673
  %40 = load i32, i32* %j, align 4, !dbg !14674
  %idxprom41 = sext i32 %40 to i64, !dbg !14675
  %41 = load i16*, i16** %dst, align 8, !dbg !14675
  %arrayidx42 = getelementptr inbounds i16, i16* %41, i64 %idxprom41, !dbg !14675
  store i16 %conv40, i16* %arrayidx42, align 2, !dbg !14676
  br label %for.inc, !dbg !14677

for.inc:                                          ; preds = %cond.end
  %42 = load i32, i32* %j, align 4, !dbg !14678
  %inc = add nsw i32 %42, 1, !dbg !14678
  store i32 %inc, i32* %j, align 4, !dbg !14678
  br label %for.cond5, !dbg !14680, !llvm.loop !14681

for.end:                                          ; preds = %for.cond5
  %43 = load i64, i64* %dst_linesize.addr, align 8, !dbg !14683
  %44 = load i16*, i16** %dst, align 8, !dbg !14685
  %add.ptr = getelementptr inbounds i16, i16* %44, i64 %43, !dbg !14685
  store i16* %add.ptr, i16** %dst, align 8, !dbg !14685
  %45 = load i64, i64* %top_linesize.addr, align 8, !dbg !14686
  %46 = load i16*, i16** %top, align 8, !dbg !14687
  %add.ptr43 = getelementptr inbounds i16, i16* %46, i64 %45, !dbg !14687
  store i16* %add.ptr43, i16** %top, align 8, !dbg !14687
  %47 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !14688
  %48 = load i16*, i16** %bottom, align 8, !dbg !14689
  %add.ptr44 = getelementptr inbounds i16, i16* %48, i64 %47, !dbg !14689
  store i16* %add.ptr44, i16** %bottom, align 8, !dbg !14689
  br label %for.inc45, !dbg !14690

for.inc45:                                        ; preds = %for.end
  %49 = load i32, i32* %i, align 4, !dbg !14691
  %inc46 = add nsw i32 %49, 1, !dbg !14691
  store i32 %inc46, i32* %i, align 4, !dbg !14691
  br label %for.cond, !dbg !14693, !llvm.loop !14694

for.end47:                                        ; preds = %for.cond
  ret void, !dbg !14696
}

; Function Attrs: nounwind uwtable
define internal void @blend_grainextract_16bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !14698 {
entry:
  %retval.i = alloca i16, align 2
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !13967, metadata !905), !dbg !14699
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !14708, metadata !905), !dbg !14709
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !14710, metadata !905), !dbg !14711
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !14712, metadata !905), !dbg !14713
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !14714, metadata !905), !dbg !14715
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !14716, metadata !905), !dbg !14717
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !14718, metadata !905), !dbg !14719
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !14720, metadata !905), !dbg !14721
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !14722, metadata !905), !dbg !14723
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !14724, metadata !905), !dbg !14725
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !14726, metadata !905), !dbg !14727
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !14728, metadata !905), !dbg !14729
  call void @llvm.dbg.declare(metadata i16** %top, metadata !14730, metadata !905), !dbg !14731
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !14732
  %1 = bitcast i8* %0 to i16*, !dbg !14733
  store i16* %1, i16** %top, align 8, !dbg !14731
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !14734, metadata !905), !dbg !14735
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !14736
  %3 = bitcast i8* %2 to i16*, !dbg !14737
  store i16* %3, i16** %bottom, align 8, !dbg !14735
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !14738, metadata !905), !dbg !14739
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !14740
  %5 = bitcast i8* %4 to i16*, !dbg !14741
  store i16* %5, i16** %dst, align 8, !dbg !14739
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !14742, metadata !905), !dbg !14743
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !14744
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !14745
  %7 = load double, double* %opacity1, align 8, !dbg !14745
  store double %7, double* %opacity, align 8, !dbg !14743
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14746, metadata !905), !dbg !14747
  call void @llvm.dbg.declare(metadata i32* %j, metadata !14748, metadata !905), !dbg !14749
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !14750
  %div = sdiv i64 %8, 2, !dbg !14750
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !14750
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !14751
  %div2 = sdiv i64 %9, 2, !dbg !14751
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !14751
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !14752
  %div3 = sdiv i64 %10, 2, !dbg !14752
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !14752
  store i32 0, i32* %i, align 4, !dbg !14753
  br label %for.cond, !dbg !14754

for.cond:                                         ; preds = %for.inc30, %entry
  %11 = load i32, i32* %i, align 4, !dbg !14755
  %conv = sext i32 %11 to i64, !dbg !14755
  %12 = load i64, i64* %height.addr, align 8, !dbg !14757
  %cmp = icmp slt i64 %conv, %12, !dbg !14758
  br i1 %cmp, label %for.body, label %for.end32, !dbg !14759

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !14760
  br label %for.cond5, !dbg !14762

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !14763
  %conv6 = sext i32 %13 to i64, !dbg !14763
  %14 = load i64, i64* %width.addr, align 8, !dbg !14765
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !14766
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !14767

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !14768
  %idxprom = sext i32 %15 to i64, !dbg !14769
  %16 = load i16*, i16** %top, align 8, !dbg !14769
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !14769
  %17 = load i16, i16* %arrayidx, align 2, !dbg !14769
  %conv10 = zext i16 %17 to i32, !dbg !14769
  %conv11 = sitofp i32 %conv10 to double, !dbg !14769
  %18 = load i32, i32* %j, align 4, !dbg !14770
  %idxprom12 = sext i32 %18 to i64, !dbg !14771
  %19 = load i16*, i16** %top, align 8, !dbg !14771
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !14771
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !14771
  %conv14 = zext i16 %20 to i32, !dbg !14771
  %add = add nsw i32 32768, %conv14, !dbg !14772
  %21 = load i32, i32* %j, align 4, !dbg !14773
  %idxprom15 = sext i32 %21 to i64, !dbg !14774
  %22 = load i16*, i16** %bottom, align 8, !dbg !14774
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !14774
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !14774
  %conv17 = zext i16 %23 to i32, !dbg !14774
  %sub = sub nsw i32 %add, %conv17, !dbg !14775
  store i32 %sub, i32* %a.addr.i, align 4, !dbg !14776
  %24 = load i32, i32* %a.addr.i, align 4, !dbg !14777
  %and.i = and i32 %24, -65536, !dbg !14778
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !14778
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !14779

if.then.i:                                        ; preds = %for.body9
  %25 = load i32, i32* %a.addr.i, align 4, !dbg !14780
  %neg.i = xor i32 %25, -1, !dbg !14781
  %shr.i = ashr i32 %neg.i, 31, !dbg !14782
  %conv.i = trunc i32 %shr.i to i16, !dbg !14783
  store i16 %conv.i, i16* %retval.i, align 2, !dbg !14784
  br label %av_clip_uint16_c.exit, !dbg !14784

if.else.i:                                        ; preds = %for.body9
  %26 = load i32, i32* %a.addr.i, align 4, !dbg !14785
  %conv1.i = trunc i32 %26 to i16, !dbg !14785
  store i16 %conv1.i, i16* %retval.i, align 2, !dbg !14786
  br label %av_clip_uint16_c.exit, !dbg !14786

av_clip_uint16_c.exit:                            ; preds = %if.then.i, %if.else.i
  %27 = load i16, i16* %retval.i, align 2, !dbg !14787
  %conv18 = zext i16 %27 to i32, !dbg !14788
  %28 = load i32, i32* %j, align 4, !dbg !14789
  %idxprom19 = sext i32 %28 to i64, !dbg !14790
  %29 = load i16*, i16** %top, align 8, !dbg !14790
  %arrayidx20 = getelementptr inbounds i16, i16* %29, i64 %idxprom19, !dbg !14790
  %30 = load i16, i16* %arrayidx20, align 2, !dbg !14790
  %conv21 = zext i16 %30 to i32, !dbg !14790
  %sub22 = sub nsw i32 %conv18, %conv21, !dbg !14791
  %conv23 = sitofp i32 %sub22 to double, !dbg !14792
  %31 = load double, double* %opacity, align 8, !dbg !14793
  %mul = fmul double %conv23, %31, !dbg !14794
  %add24 = fadd double %conv11, %mul, !dbg !14795
  %conv25 = fptoui double %add24 to i16, !dbg !14769
  %32 = load i32, i32* %j, align 4, !dbg !14796
  %idxprom26 = sext i32 %32 to i64, !dbg !14797
  %33 = load i16*, i16** %dst, align 8, !dbg !14797
  %arrayidx27 = getelementptr inbounds i16, i16* %33, i64 %idxprom26, !dbg !14797
  store i16 %conv25, i16* %arrayidx27, align 2, !dbg !14798
  br label %for.inc, !dbg !14799

for.inc:                                          ; preds = %av_clip_uint16_c.exit
  %34 = load i32, i32* %j, align 4, !dbg !14800
  %inc = add nsw i32 %34, 1, !dbg !14800
  store i32 %inc, i32* %j, align 4, !dbg !14800
  br label %for.cond5, !dbg !14802, !llvm.loop !14803

for.end:                                          ; preds = %for.cond5
  %35 = load i64, i64* %dst_linesize.addr, align 8, !dbg !14805
  %36 = load i16*, i16** %dst, align 8, !dbg !14807
  %add.ptr = getelementptr inbounds i16, i16* %36, i64 %35, !dbg !14807
  store i16* %add.ptr, i16** %dst, align 8, !dbg !14807
  %37 = load i64, i64* %top_linesize.addr, align 8, !dbg !14808
  %38 = load i16*, i16** %top, align 8, !dbg !14809
  %add.ptr28 = getelementptr inbounds i16, i16* %38, i64 %37, !dbg !14809
  store i16* %add.ptr28, i16** %top, align 8, !dbg !14809
  %39 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !14810
  %40 = load i16*, i16** %bottom, align 8, !dbg !14811
  %add.ptr29 = getelementptr inbounds i16, i16* %40, i64 %39, !dbg !14811
  store i16* %add.ptr29, i16** %bottom, align 8, !dbg !14811
  br label %for.inc30, !dbg !14812

for.inc30:                                        ; preds = %for.end
  %41 = load i32, i32* %i, align 4, !dbg !14813
  %inc31 = add nsw i32 %41, 1, !dbg !14813
  store i32 %inc31, i32* %i, align 4, !dbg !14813
  br label %for.cond, !dbg !14815, !llvm.loop !14816

for.end32:                                        ; preds = %for.cond
  ret void, !dbg !14818
}

; Function Attrs: nounwind uwtable
define internal void @blend_divide_16bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !14820 {
entry:
  %retval.i = alloca i16, align 2
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !13967, metadata !905), !dbg !14821
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !14830, metadata !905), !dbg !14831
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !14832, metadata !905), !dbg !14833
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !14834, metadata !905), !dbg !14835
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !14836, metadata !905), !dbg !14837
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !14838, metadata !905), !dbg !14839
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !14840, metadata !905), !dbg !14841
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !14842, metadata !905), !dbg !14843
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !14844, metadata !905), !dbg !14845
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !14846, metadata !905), !dbg !14847
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !14848, metadata !905), !dbg !14849
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !14850, metadata !905), !dbg !14851
  call void @llvm.dbg.declare(metadata i16** %top, metadata !14852, metadata !905), !dbg !14853
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !14854
  %1 = bitcast i8* %0 to i16*, !dbg !14855
  store i16* %1, i16** %top, align 8, !dbg !14853
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !14856, metadata !905), !dbg !14857
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !14858
  %3 = bitcast i8* %2 to i16*, !dbg !14859
  store i16* %3, i16** %bottom, align 8, !dbg !14857
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !14860, metadata !905), !dbg !14861
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !14862
  %5 = bitcast i8* %4 to i16*, !dbg !14863
  store i16* %5, i16** %dst, align 8, !dbg !14861
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !14864, metadata !905), !dbg !14865
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !14866
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !14867
  %7 = load double, double* %opacity1, align 8, !dbg !14867
  store double %7, double* %opacity, align 8, !dbg !14865
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14868, metadata !905), !dbg !14869
  call void @llvm.dbg.declare(metadata i32* %j, metadata !14870, metadata !905), !dbg !14871
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !14872
  %div = sdiv i64 %8, 2, !dbg !14872
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !14872
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !14873
  %div2 = sdiv i64 %9, 2, !dbg !14873
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !14873
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !14874
  %div3 = sdiv i64 %10, 2, !dbg !14874
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !14874
  store i32 0, i32* %i, align 4, !dbg !14875
  br label %for.cond, !dbg !14876

for.cond:                                         ; preds = %for.inc35, %entry
  %11 = load i32, i32* %i, align 4, !dbg !14877
  %conv = sext i32 %11 to i64, !dbg !14877
  %12 = load i64, i64* %height.addr, align 8, !dbg !14879
  %cmp = icmp slt i64 %conv, %12, !dbg !14880
  br i1 %cmp, label %for.body, label %for.end37, !dbg !14881

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !14882
  br label %for.cond5, !dbg !14884

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !14885
  %conv6 = sext i32 %13 to i64, !dbg !14885
  %14 = load i64, i64* %width.addr, align 8, !dbg !14887
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !14888
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !14889

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !14890
  %idxprom = sext i32 %15 to i64, !dbg !14892
  %16 = load i16*, i16** %top, align 8, !dbg !14892
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !14892
  %17 = load i16, i16* %arrayidx, align 2, !dbg !14892
  %conv10 = zext i16 %17 to i32, !dbg !14892
  %conv11 = sitofp i32 %conv10 to double, !dbg !14892
  %18 = load i32, i32* %j, align 4, !dbg !14893
  %idxprom12 = sext i32 %18 to i64, !dbg !14894
  %19 = load i16*, i16** %bottom, align 8, !dbg !14894
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !14894
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !14894
  %conv14 = zext i16 %20 to i32, !dbg !14894
  %cmp15 = icmp eq i32 %conv14, 0, !dbg !14895
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !14894

cond.true:                                        ; preds = %for.body9
  br label %cond.end, !dbg !14896

cond.false:                                       ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !14898
  %idxprom17 = sext i32 %21 to i64, !dbg !14900
  %22 = load i16*, i16** %top, align 8, !dbg !14900
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !14900
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !14900
  %conv19 = zext i16 %23 to i32, !dbg !14900
  %mul = mul nsw i32 65535, %conv19, !dbg !14901
  %24 = load i32, i32* %j, align 4, !dbg !14902
  %idxprom20 = sext i32 %24 to i64, !dbg !14903
  %25 = load i16*, i16** %bottom, align 8, !dbg !14903
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !14903
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !14903
  %conv22 = zext i16 %26 to i32, !dbg !14903
  %div23 = sdiv i32 %mul, %conv22, !dbg !14904
  br label %cond.end, !dbg !14905

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 65535, %cond.true ], [ %div23, %cond.false ], !dbg !14906
  store i32 %cond, i32* %a.addr.i, align 4, !dbg !14907
  %27 = load i32, i32* %a.addr.i, align 4, !dbg !14908
  %and.i = and i32 %27, -65536, !dbg !14909
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !14909
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !14910

if.then.i:                                        ; preds = %cond.end
  %28 = load i32, i32* %a.addr.i, align 4, !dbg !14911
  %neg.i = xor i32 %28, -1, !dbg !14912
  %shr.i = ashr i32 %neg.i, 31, !dbg !14913
  %conv.i = trunc i32 %shr.i to i16, !dbg !14914
  store i16 %conv.i, i16* %retval.i, align 2, !dbg !14915
  br label %av_clip_uint16_c.exit, !dbg !14915

if.else.i:                                        ; preds = %cond.end
  %29 = load i32, i32* %a.addr.i, align 4, !dbg !14916
  %conv1.i = trunc i32 %29 to i16, !dbg !14916
  store i16 %conv1.i, i16* %retval.i, align 2, !dbg !14917
  br label %av_clip_uint16_c.exit, !dbg !14917

av_clip_uint16_c.exit:                            ; preds = %if.then.i, %if.else.i
  %30 = load i16, i16* %retval.i, align 2, !dbg !14918
  %conv24 = zext i16 %30 to i32, !dbg !14919
  %31 = load i32, i32* %j, align 4, !dbg !14920
  %idxprom25 = sext i32 %31 to i64, !dbg !14921
  %32 = load i16*, i16** %top, align 8, !dbg !14921
  %arrayidx26 = getelementptr inbounds i16, i16* %32, i64 %idxprom25, !dbg !14921
  %33 = load i16, i16* %arrayidx26, align 2, !dbg !14921
  %conv27 = zext i16 %33 to i32, !dbg !14921
  %sub = sub nsw i32 %conv24, %conv27, !dbg !14922
  %conv28 = sitofp i32 %sub to double, !dbg !14923
  %34 = load double, double* %opacity, align 8, !dbg !14924
  %mul29 = fmul double %conv28, %34, !dbg !14925
  %add = fadd double %conv11, %mul29, !dbg !14926
  %conv30 = fptoui double %add to i16, !dbg !14927
  %35 = load i32, i32* %j, align 4, !dbg !14928
  %idxprom31 = sext i32 %35 to i64, !dbg !14929
  %36 = load i16*, i16** %dst, align 8, !dbg !14929
  %arrayidx32 = getelementptr inbounds i16, i16* %36, i64 %idxprom31, !dbg !14929
  store i16 %conv30, i16* %arrayidx32, align 2, !dbg !14930
  br label %for.inc, !dbg !14931

for.inc:                                          ; preds = %av_clip_uint16_c.exit
  %37 = load i32, i32* %j, align 4, !dbg !14932
  %inc = add nsw i32 %37, 1, !dbg !14932
  store i32 %inc, i32* %j, align 4, !dbg !14932
  br label %for.cond5, !dbg !14934, !llvm.loop !14935

for.end:                                          ; preds = %for.cond5
  %38 = load i64, i64* %dst_linesize.addr, align 8, !dbg !14937
  %39 = load i16*, i16** %dst, align 8, !dbg !14939
  %add.ptr = getelementptr inbounds i16, i16* %39, i64 %38, !dbg !14939
  store i16* %add.ptr, i16** %dst, align 8, !dbg !14939
  %40 = load i64, i64* %top_linesize.addr, align 8, !dbg !14940
  %41 = load i16*, i16** %top, align 8, !dbg !14941
  %add.ptr33 = getelementptr inbounds i16, i16* %41, i64 %40, !dbg !14941
  store i16* %add.ptr33, i16** %top, align 8, !dbg !14941
  %42 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !14942
  %43 = load i16*, i16** %bottom, align 8, !dbg !14943
  %add.ptr34 = getelementptr inbounds i16, i16* %43, i64 %42, !dbg !14943
  store i16* %add.ptr34, i16** %bottom, align 8, !dbg !14943
  br label %for.inc35, !dbg !14944

for.inc35:                                        ; preds = %for.end
  %44 = load i32, i32* %i, align 4, !dbg !14945
  %inc36 = add nsw i32 %44, 1, !dbg !14945
  store i32 %inc36, i32* %i, align 4, !dbg !14945
  br label %for.cond, !dbg !14947, !llvm.loop !14948

for.end37:                                        ; preds = %for.cond
  ret void, !dbg !14950
}

; Function Attrs: nounwind uwtable
define internal void @blend_dodge_16bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !14952 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !14953, metadata !905), !dbg !14954
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !14955, metadata !905), !dbg !14956
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !14957, metadata !905), !dbg !14958
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !14959, metadata !905), !dbg !14960
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !14961, metadata !905), !dbg !14962
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !14963, metadata !905), !dbg !14964
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !14965, metadata !905), !dbg !14966
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !14967, metadata !905), !dbg !14968
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !14969, metadata !905), !dbg !14970
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !14971, metadata !905), !dbg !14972
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !14973, metadata !905), !dbg !14974
  call void @llvm.dbg.declare(metadata i16** %top, metadata !14975, metadata !905), !dbg !14976
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !14977
  %1 = bitcast i8* %0 to i16*, !dbg !14978
  store i16* %1, i16** %top, align 8, !dbg !14976
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !14979, metadata !905), !dbg !14980
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !14981
  %3 = bitcast i8* %2 to i16*, !dbg !14982
  store i16* %3, i16** %bottom, align 8, !dbg !14980
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !14983, metadata !905), !dbg !14984
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !14985
  %5 = bitcast i8* %4 to i16*, !dbg !14986
  store i16* %5, i16** %dst, align 8, !dbg !14984
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !14987, metadata !905), !dbg !14988
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !14989
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !14990
  %7 = load double, double* %opacity1, align 8, !dbg !14990
  store double %7, double* %opacity, align 8, !dbg !14988
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14991, metadata !905), !dbg !14992
  call void @llvm.dbg.declare(metadata i32* %j, metadata !14993, metadata !905), !dbg !14994
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !14995
  %div = sdiv i64 %8, 2, !dbg !14995
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !14995
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !14996
  %div2 = sdiv i64 %9, 2, !dbg !14996
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !14996
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !14997
  %div3 = sdiv i64 %10, 2, !dbg !14997
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !14997
  store i32 0, i32* %i, align 4, !dbg !14998
  br label %for.cond, !dbg !15000

for.cond:                                         ; preds = %for.inc52, %entry
  %11 = load i32, i32* %i, align 4, !dbg !15001
  %conv = sext i32 %11 to i64, !dbg !15001
  %12 = load i64, i64* %height.addr, align 8, !dbg !15004
  %cmp = icmp slt i64 %conv, %12, !dbg !15005
  br i1 %cmp, label %for.body, label %for.end54, !dbg !15006

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !15007
  br label %for.cond5, !dbg !15011

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !15012
  %conv6 = sext i32 %13 to i64, !dbg !15012
  %14 = load i64, i64* %width.addr, align 8, !dbg !15015
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !15016
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !15017

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !15018
  %idxprom = sext i32 %15 to i64, !dbg !15021
  %16 = load i16*, i16** %top, align 8, !dbg !15021
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !15021
  %17 = load i16, i16* %arrayidx, align 2, !dbg !15021
  %conv10 = zext i16 %17 to i32, !dbg !15021
  %conv11 = sitofp i32 %conv10 to double, !dbg !15021
  %18 = load i32, i32* %j, align 4, !dbg !15022
  %idxprom12 = sext i32 %18 to i64, !dbg !15023
  %19 = load i16*, i16** %top, align 8, !dbg !15023
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !15023
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !15023
  %conv14 = zext i16 %20 to i32, !dbg !15024
  %cmp15 = icmp eq i32 %conv14, 65535, !dbg !15025
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !15026

cond.true:                                        ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !15027
  %idxprom17 = sext i32 %21 to i64, !dbg !15029
  %22 = load i16*, i16** %top, align 8, !dbg !15029
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !15029
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !15029
  %conv19 = zext i16 %23 to i32, !dbg !15030
  br label %cond.end40, !dbg !15031

cond.false:                                       ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !15032
  %idxprom20 = sext i32 %24 to i64, !dbg !15034
  %25 = load i16*, i16** %bottom, align 8, !dbg !15034
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !15034
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !15034
  %conv22 = zext i16 %26 to i32, !dbg !15035
  %shl = shl i32 %conv22, 16, !dbg !15036
  %27 = load i32, i32* %j, align 4, !dbg !15037
  %idxprom23 = sext i32 %27 to i64, !dbg !15038
  %28 = load i16*, i16** %top, align 8, !dbg !15038
  %arrayidx24 = getelementptr inbounds i16, i16* %28, i64 %idxprom23, !dbg !15038
  %29 = load i16, i16* %arrayidx24, align 2, !dbg !15038
  %conv25 = zext i16 %29 to i32, !dbg !15039
  %sub = sub nsw i32 65535, %conv25, !dbg !15040
  %div26 = sdiv i32 %shl, %sub, !dbg !15041
  %cmp27 = icmp sgt i32 65535, %div26, !dbg !15042
  br i1 %cmp27, label %cond.true29, label %cond.false39, !dbg !15043

cond.true29:                                      ; preds = %cond.false
  %30 = load i32, i32* %j, align 4, !dbg !15044
  %idxprom30 = sext i32 %30 to i64, !dbg !15046
  %31 = load i16*, i16** %bottom, align 8, !dbg !15046
  %arrayidx31 = getelementptr inbounds i16, i16* %31, i64 %idxprom30, !dbg !15046
  %32 = load i16, i16* %arrayidx31, align 2, !dbg !15046
  %conv32 = zext i16 %32 to i32, !dbg !15047
  %shl33 = shl i32 %conv32, 16, !dbg !15048
  %33 = load i32, i32* %j, align 4, !dbg !15049
  %idxprom34 = sext i32 %33 to i64, !dbg !15050
  %34 = load i16*, i16** %top, align 8, !dbg !15050
  %arrayidx35 = getelementptr inbounds i16, i16* %34, i64 %idxprom34, !dbg !15050
  %35 = load i16, i16* %arrayidx35, align 2, !dbg !15050
  %conv36 = zext i16 %35 to i32, !dbg !15051
  %sub37 = sub nsw i32 65535, %conv36, !dbg !15052
  %div38 = sdiv i32 %shl33, %sub37, !dbg !15053
  br label %cond.end, !dbg !15054

cond.false39:                                     ; preds = %cond.false
  br label %cond.end, !dbg !15055

cond.end:                                         ; preds = %cond.false39, %cond.true29
  %cond = phi i32 [ %div38, %cond.true29 ], [ 65535, %cond.false39 ], !dbg !15057
  br label %cond.end40, !dbg !15059

cond.end40:                                       ; preds = %cond.end, %cond.true
  %cond41 = phi i32 [ %conv19, %cond.true ], [ %cond, %cond.end ], !dbg !15060
  %36 = load i32, i32* %j, align 4, !dbg !15062
  %idxprom42 = sext i32 %36 to i64, !dbg !15063
  %37 = load i16*, i16** %top, align 8, !dbg !15063
  %arrayidx43 = getelementptr inbounds i16, i16* %37, i64 %idxprom42, !dbg !15063
  %38 = load i16, i16* %arrayidx43, align 2, !dbg !15063
  %conv44 = zext i16 %38 to i32, !dbg !15063
  %sub45 = sub nsw i32 %cond41, %conv44, !dbg !15064
  %conv46 = sitofp i32 %sub45 to double, !dbg !15065
  %39 = load double, double* %opacity, align 8, !dbg !15066
  %mul = fmul double %conv46, %39, !dbg !15067
  %add = fadd double %conv11, %mul, !dbg !15068
  %conv47 = fptoui double %add to i16, !dbg !15069
  %40 = load i32, i32* %j, align 4, !dbg !15070
  %idxprom48 = sext i32 %40 to i64, !dbg !15071
  %41 = load i16*, i16** %dst, align 8, !dbg !15071
  %arrayidx49 = getelementptr inbounds i16, i16* %41, i64 %idxprom48, !dbg !15071
  store i16 %conv47, i16* %arrayidx49, align 2, !dbg !15072
  br label %for.inc, !dbg !15073

for.inc:                                          ; preds = %cond.end40
  %42 = load i32, i32* %j, align 4, !dbg !15074
  %inc = add nsw i32 %42, 1, !dbg !15074
  store i32 %inc, i32* %j, align 4, !dbg !15074
  br label %for.cond5, !dbg !15076, !llvm.loop !15077

for.end:                                          ; preds = %for.cond5
  %43 = load i64, i64* %dst_linesize.addr, align 8, !dbg !15079
  %44 = load i16*, i16** %dst, align 8, !dbg !15081
  %add.ptr = getelementptr inbounds i16, i16* %44, i64 %43, !dbg !15081
  store i16* %add.ptr, i16** %dst, align 8, !dbg !15081
  %45 = load i64, i64* %top_linesize.addr, align 8, !dbg !15082
  %46 = load i16*, i16** %top, align 8, !dbg !15083
  %add.ptr50 = getelementptr inbounds i16, i16* %46, i64 %45, !dbg !15083
  store i16* %add.ptr50, i16** %top, align 8, !dbg !15083
  %47 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !15084
  %48 = load i16*, i16** %bottom, align 8, !dbg !15085
  %add.ptr51 = getelementptr inbounds i16, i16* %48, i64 %47, !dbg !15085
  store i16* %add.ptr51, i16** %bottom, align 8, !dbg !15085
  br label %for.inc52, !dbg !15086

for.inc52:                                        ; preds = %for.end
  %49 = load i32, i32* %i, align 4, !dbg !15087
  %inc53 = add nsw i32 %49, 1, !dbg !15087
  store i32 %inc53, i32* %i, align 4, !dbg !15087
  br label %for.cond, !dbg !15089, !llvm.loop !15090

for.end54:                                        ; preds = %for.cond
  ret void, !dbg !15092
}

; Function Attrs: nounwind uwtable
define internal void @blend_exclusion_16bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !15094 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !15095, metadata !905), !dbg !15096
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !15097, metadata !905), !dbg !15098
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !15099, metadata !905), !dbg !15100
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !15101, metadata !905), !dbg !15102
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !15103, metadata !905), !dbg !15104
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !15105, metadata !905), !dbg !15106
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !15107, metadata !905), !dbg !15108
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !15109, metadata !905), !dbg !15110
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !15111, metadata !905), !dbg !15112
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !15113, metadata !905), !dbg !15114
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !15115, metadata !905), !dbg !15116
  call void @llvm.dbg.declare(metadata i16** %top, metadata !15117, metadata !905), !dbg !15118
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !15119
  %1 = bitcast i8* %0 to i16*, !dbg !15120
  store i16* %1, i16** %top, align 8, !dbg !15118
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !15121, metadata !905), !dbg !15122
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !15123
  %3 = bitcast i8* %2 to i16*, !dbg !15124
  store i16* %3, i16** %bottom, align 8, !dbg !15122
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !15125, metadata !905), !dbg !15126
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !15127
  %5 = bitcast i8* %4 to i16*, !dbg !15128
  store i16* %5, i16** %dst, align 8, !dbg !15126
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !15129, metadata !905), !dbg !15130
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !15131
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !15132
  %7 = load double, double* %opacity1, align 8, !dbg !15132
  store double %7, double* %opacity, align 8, !dbg !15130
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15133, metadata !905), !dbg !15134
  call void @llvm.dbg.declare(metadata i32* %j, metadata !15135, metadata !905), !dbg !15136
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !15137
  %div = sdiv i64 %8, 2, !dbg !15137
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !15137
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !15138
  %div2 = sdiv i64 %9, 2, !dbg !15138
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !15138
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !15139
  %div3 = sdiv i64 %10, 2, !dbg !15139
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !15139
  store i32 0, i32* %i, align 4, !dbg !15140
  br label %for.cond, !dbg !15142

for.cond:                                         ; preds = %for.inc38, %entry
  %11 = load i32, i32* %i, align 4, !dbg !15143
  %conv = sext i32 %11 to i64, !dbg !15143
  %12 = load i64, i64* %height.addr, align 8, !dbg !15146
  %cmp = icmp slt i64 %conv, %12, !dbg !15147
  br i1 %cmp, label %for.body, label %for.end40, !dbg !15148

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !15149
  br label %for.cond5, !dbg !15153

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !15154
  %conv6 = sext i32 %13 to i64, !dbg !15154
  %14 = load i64, i64* %width.addr, align 8, !dbg !15157
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !15158
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !15159

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !15160
  %idxprom = sext i32 %15 to i64, !dbg !15163
  %16 = load i16*, i16** %top, align 8, !dbg !15163
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !15163
  %17 = load i16, i16* %arrayidx, align 2, !dbg !15163
  %conv10 = zext i16 %17 to i32, !dbg !15163
  %conv11 = sitofp i32 %conv10 to double, !dbg !15163
  %18 = load i32, i32* %j, align 4, !dbg !15164
  %idxprom12 = sext i32 %18 to i64, !dbg !15165
  %19 = load i16*, i16** %top, align 8, !dbg !15165
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !15165
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !15165
  %conv14 = zext i16 %20 to i32, !dbg !15165
  %21 = load i32, i32* %j, align 4, !dbg !15166
  %idxprom15 = sext i32 %21 to i64, !dbg !15167
  %22 = load i16*, i16** %bottom, align 8, !dbg !15167
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !15167
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !15167
  %conv17 = zext i16 %23 to i32, !dbg !15167
  %add = add nsw i32 %conv14, %conv17, !dbg !15168
  %24 = load i32, i32* %j, align 4, !dbg !15169
  %idxprom18 = sext i32 %24 to i64, !dbg !15170
  %25 = load i16*, i16** %top, align 8, !dbg !15170
  %arrayidx19 = getelementptr inbounds i16, i16* %25, i64 %idxprom18, !dbg !15170
  %26 = load i16, i16* %arrayidx19, align 2, !dbg !15170
  %conv20 = zext i16 %26 to i32, !dbg !15170
  %mul = mul nsw i32 2, %conv20, !dbg !15171
  %27 = load i32, i32* %j, align 4, !dbg !15172
  %idxprom21 = sext i32 %27 to i64, !dbg !15173
  %28 = load i16*, i16** %bottom, align 8, !dbg !15173
  %arrayidx22 = getelementptr inbounds i16, i16* %28, i64 %idxprom21, !dbg !15173
  %29 = load i16, i16* %arrayidx22, align 2, !dbg !15173
  %conv23 = zext i16 %29 to i32, !dbg !15173
  %mul24 = mul nsw i32 %mul, %conv23, !dbg !15174
  %div25 = sdiv i32 %mul24, 65535, !dbg !15175
  %sub = sub nsw i32 %add, %div25, !dbg !15176
  %30 = load i32, i32* %j, align 4, !dbg !15177
  %idxprom26 = sext i32 %30 to i64, !dbg !15178
  %31 = load i16*, i16** %top, align 8, !dbg !15178
  %arrayidx27 = getelementptr inbounds i16, i16* %31, i64 %idxprom26, !dbg !15178
  %32 = load i16, i16* %arrayidx27, align 2, !dbg !15178
  %conv28 = zext i16 %32 to i32, !dbg !15178
  %sub29 = sub nsw i32 %sub, %conv28, !dbg !15179
  %conv30 = sitofp i32 %sub29 to double, !dbg !15180
  %33 = load double, double* %opacity, align 8, !dbg !15181
  %mul31 = fmul double %conv30, %33, !dbg !15182
  %add32 = fadd double %conv11, %mul31, !dbg !15183
  %conv33 = fptoui double %add32 to i16, !dbg !15163
  %34 = load i32, i32* %j, align 4, !dbg !15184
  %idxprom34 = sext i32 %34 to i64, !dbg !15185
  %35 = load i16*, i16** %dst, align 8, !dbg !15185
  %arrayidx35 = getelementptr inbounds i16, i16* %35, i64 %idxprom34, !dbg !15185
  store i16 %conv33, i16* %arrayidx35, align 2, !dbg !15186
  br label %for.inc, !dbg !15187

for.inc:                                          ; preds = %for.body9
  %36 = load i32, i32* %j, align 4, !dbg !15188
  %inc = add nsw i32 %36, 1, !dbg !15188
  store i32 %inc, i32* %j, align 4, !dbg !15188
  br label %for.cond5, !dbg !15190, !llvm.loop !15191

for.end:                                          ; preds = %for.cond5
  %37 = load i64, i64* %dst_linesize.addr, align 8, !dbg !15193
  %38 = load i16*, i16** %dst, align 8, !dbg !15195
  %add.ptr = getelementptr inbounds i16, i16* %38, i64 %37, !dbg !15195
  store i16* %add.ptr, i16** %dst, align 8, !dbg !15195
  %39 = load i64, i64* %top_linesize.addr, align 8, !dbg !15196
  %40 = load i16*, i16** %top, align 8, !dbg !15197
  %add.ptr36 = getelementptr inbounds i16, i16* %40, i64 %39, !dbg !15197
  store i16* %add.ptr36, i16** %top, align 8, !dbg !15197
  %41 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !15198
  %42 = load i16*, i16** %bottom, align 8, !dbg !15199
  %add.ptr37 = getelementptr inbounds i16, i16* %42, i64 %41, !dbg !15199
  store i16* %add.ptr37, i16** %bottom, align 8, !dbg !15199
  br label %for.inc38, !dbg !15200

for.inc38:                                        ; preds = %for.end
  %43 = load i32, i32* %i, align 4, !dbg !15201
  %inc39 = add nsw i32 %43, 1, !dbg !15201
  store i32 %inc39, i32* %i, align 4, !dbg !15201
  br label %for.cond, !dbg !15203, !llvm.loop !15204

for.end40:                                        ; preds = %for.cond
  ret void, !dbg !15206
}

; Function Attrs: nounwind uwtable
define internal void @blend_extremity_16bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !15208 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !15209, metadata !905), !dbg !15210
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !15211, metadata !905), !dbg !15212
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !15213, metadata !905), !dbg !15214
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !15215, metadata !905), !dbg !15216
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !15217, metadata !905), !dbg !15218
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !15219, metadata !905), !dbg !15220
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !15221, metadata !905), !dbg !15222
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !15223, metadata !905), !dbg !15224
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !15225, metadata !905), !dbg !15226
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !15227, metadata !905), !dbg !15228
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !15229, metadata !905), !dbg !15230
  call void @llvm.dbg.declare(metadata i16** %top, metadata !15231, metadata !905), !dbg !15232
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !15233
  %1 = bitcast i8* %0 to i16*, !dbg !15234
  store i16* %1, i16** %top, align 8, !dbg !15232
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !15235, metadata !905), !dbg !15236
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !15237
  %3 = bitcast i8* %2 to i16*, !dbg !15238
  store i16* %3, i16** %bottom, align 8, !dbg !15236
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !15239, metadata !905), !dbg !15240
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !15241
  %5 = bitcast i8* %4 to i16*, !dbg !15242
  store i16* %5, i16** %dst, align 8, !dbg !15240
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !15243, metadata !905), !dbg !15244
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !15245
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !15246
  %7 = load double, double* %opacity1, align 8, !dbg !15246
  store double %7, double* %opacity, align 8, !dbg !15244
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15247, metadata !905), !dbg !15248
  call void @llvm.dbg.declare(metadata i32* %j, metadata !15249, metadata !905), !dbg !15250
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !15251
  %div = sdiv i64 %8, 2, !dbg !15251
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !15251
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !15252
  %div2 = sdiv i64 %9, 2, !dbg !15252
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !15252
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !15253
  %div3 = sdiv i64 %10, 2, !dbg !15253
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !15253
  store i32 0, i32* %i, align 4, !dbg !15254
  br label %for.cond, !dbg !15256

for.cond:                                         ; preds = %for.inc48, %entry
  %11 = load i32, i32* %i, align 4, !dbg !15257
  %conv = sext i32 %11 to i64, !dbg !15257
  %12 = load i64, i64* %height.addr, align 8, !dbg !15260
  %cmp = icmp slt i64 %conv, %12, !dbg !15261
  br i1 %cmp, label %for.body, label %for.end50, !dbg !15262

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !15263
  br label %for.cond5, !dbg !15267

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !15268
  %conv6 = sext i32 %13 to i64, !dbg !15268
  %14 = load i64, i64* %width.addr, align 8, !dbg !15271
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !15272
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !15273

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !15274
  %idxprom = sext i32 %15 to i64, !dbg !15277
  %16 = load i16*, i16** %top, align 8, !dbg !15277
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !15277
  %17 = load i16, i16* %arrayidx, align 2, !dbg !15277
  %conv10 = zext i16 %17 to i32, !dbg !15277
  %conv11 = sitofp i32 %conv10 to double, !dbg !15277
  %18 = load i32, i32* %j, align 4, !dbg !15278
  %idxprom12 = sext i32 %18 to i64, !dbg !15279
  %19 = load i16*, i16** %top, align 8, !dbg !15279
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !15279
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !15279
  %conv14 = zext i16 %20 to i32, !dbg !15279
  %sub = sub nsw i32 65535, %conv14, !dbg !15280
  %21 = load i32, i32* %j, align 4, !dbg !15281
  %idxprom15 = sext i32 %21 to i64, !dbg !15282
  %22 = load i16*, i16** %bottom, align 8, !dbg !15282
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !15282
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !15282
  %conv17 = zext i16 %23 to i32, !dbg !15282
  %sub18 = sub nsw i32 %sub, %conv17, !dbg !15283
  %cmp19 = icmp sge i32 %sub18, 0, !dbg !15284
  br i1 %cmp19, label %cond.true, label %cond.false, !dbg !15285

cond.true:                                        ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !15286
  %idxprom21 = sext i32 %24 to i64, !dbg !15288
  %25 = load i16*, i16** %top, align 8, !dbg !15288
  %arrayidx22 = getelementptr inbounds i16, i16* %25, i64 %idxprom21, !dbg !15288
  %26 = load i16, i16* %arrayidx22, align 2, !dbg !15288
  %conv23 = zext i16 %26 to i32, !dbg !15288
  %sub24 = sub nsw i32 65535, %conv23, !dbg !15289
  %27 = load i32, i32* %j, align 4, !dbg !15290
  %idxprom25 = sext i32 %27 to i64, !dbg !15291
  %28 = load i16*, i16** %bottom, align 8, !dbg !15291
  %arrayidx26 = getelementptr inbounds i16, i16* %28, i64 %idxprom25, !dbg !15291
  %29 = load i16, i16* %arrayidx26, align 2, !dbg !15291
  %conv27 = zext i16 %29 to i32, !dbg !15291
  %sub28 = sub nsw i32 %sub24, %conv27, !dbg !15292
  br label %cond.end, !dbg !15293

cond.false:                                       ; preds = %for.body9
  %30 = load i32, i32* %j, align 4, !dbg !15294
  %idxprom29 = sext i32 %30 to i64, !dbg !15296
  %31 = load i16*, i16** %top, align 8, !dbg !15296
  %arrayidx30 = getelementptr inbounds i16, i16* %31, i64 %idxprom29, !dbg !15296
  %32 = load i16, i16* %arrayidx30, align 2, !dbg !15296
  %conv31 = zext i16 %32 to i32, !dbg !15296
  %sub32 = sub nsw i32 65535, %conv31, !dbg !15297
  %33 = load i32, i32* %j, align 4, !dbg !15298
  %idxprom33 = sext i32 %33 to i64, !dbg !15299
  %34 = load i16*, i16** %bottom, align 8, !dbg !15299
  %arrayidx34 = getelementptr inbounds i16, i16* %34, i64 %idxprom33, !dbg !15299
  %35 = load i16, i16* %arrayidx34, align 2, !dbg !15299
  %conv35 = zext i16 %35 to i32, !dbg !15299
  %sub36 = sub nsw i32 %sub32, %conv35, !dbg !15300
  %sub37 = sub nsw i32 0, %sub36, !dbg !15301
  br label %cond.end, !dbg !15302

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub28, %cond.true ], [ %sub37, %cond.false ], !dbg !15303
  %36 = load i32, i32* %j, align 4, !dbg !15305
  %idxprom38 = sext i32 %36 to i64, !dbg !15306
  %37 = load i16*, i16** %top, align 8, !dbg !15306
  %arrayidx39 = getelementptr inbounds i16, i16* %37, i64 %idxprom38, !dbg !15306
  %38 = load i16, i16* %arrayidx39, align 2, !dbg !15306
  %conv40 = zext i16 %38 to i32, !dbg !15306
  %sub41 = sub nsw i32 %cond, %conv40, !dbg !15307
  %conv42 = sitofp i32 %sub41 to double, !dbg !15308
  %39 = load double, double* %opacity, align 8, !dbg !15309
  %mul = fmul double %conv42, %39, !dbg !15310
  %add = fadd double %conv11, %mul, !dbg !15311
  %conv43 = fptoui double %add to i16, !dbg !15312
  %40 = load i32, i32* %j, align 4, !dbg !15313
  %idxprom44 = sext i32 %40 to i64, !dbg !15314
  %41 = load i16*, i16** %dst, align 8, !dbg !15314
  %arrayidx45 = getelementptr inbounds i16, i16* %41, i64 %idxprom44, !dbg !15314
  store i16 %conv43, i16* %arrayidx45, align 2, !dbg !15315
  br label %for.inc, !dbg !15316

for.inc:                                          ; preds = %cond.end
  %42 = load i32, i32* %j, align 4, !dbg !15317
  %inc = add nsw i32 %42, 1, !dbg !15317
  store i32 %inc, i32* %j, align 4, !dbg !15317
  br label %for.cond5, !dbg !15319, !llvm.loop !15320

for.end:                                          ; preds = %for.cond5
  %43 = load i64, i64* %dst_linesize.addr, align 8, !dbg !15322
  %44 = load i16*, i16** %dst, align 8, !dbg !15324
  %add.ptr = getelementptr inbounds i16, i16* %44, i64 %43, !dbg !15324
  store i16* %add.ptr, i16** %dst, align 8, !dbg !15324
  %45 = load i64, i64* %top_linesize.addr, align 8, !dbg !15325
  %46 = load i16*, i16** %top, align 8, !dbg !15326
  %add.ptr46 = getelementptr inbounds i16, i16* %46, i64 %45, !dbg !15326
  store i16* %add.ptr46, i16** %top, align 8, !dbg !15326
  %47 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !15327
  %48 = load i16*, i16** %bottom, align 8, !dbg !15328
  %add.ptr47 = getelementptr inbounds i16, i16* %48, i64 %47, !dbg !15328
  store i16* %add.ptr47, i16** %bottom, align 8, !dbg !15328
  br label %for.inc48, !dbg !15329

for.inc48:                                        ; preds = %for.end
  %49 = load i32, i32* %i, align 4, !dbg !15330
  %inc49 = add nsw i32 %49, 1, !dbg !15330
  store i32 %inc49, i32* %i, align 4, !dbg !15330
  br label %for.cond, !dbg !15332, !llvm.loop !15333

for.end50:                                        ; preds = %for.cond
  ret void, !dbg !15335
}

; Function Attrs: nounwind uwtable
define internal void @blend_freeze_16bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !15337 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !15338, metadata !905), !dbg !15339
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !15340, metadata !905), !dbg !15341
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !15342, metadata !905), !dbg !15343
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !15344, metadata !905), !dbg !15345
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !15346, metadata !905), !dbg !15347
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !15348, metadata !905), !dbg !15349
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !15350, metadata !905), !dbg !15351
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !15352, metadata !905), !dbg !15353
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !15354, metadata !905), !dbg !15355
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !15356, metadata !905), !dbg !15357
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !15358, metadata !905), !dbg !15359
  call void @llvm.dbg.declare(metadata i16** %top, metadata !15360, metadata !905), !dbg !15361
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !15362
  %1 = bitcast i8* %0 to i16*, !dbg !15363
  store i16* %1, i16** %top, align 8, !dbg !15361
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !15364, metadata !905), !dbg !15365
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !15366
  %3 = bitcast i8* %2 to i16*, !dbg !15367
  store i16* %3, i16** %bottom, align 8, !dbg !15365
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !15368, metadata !905), !dbg !15369
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !15370
  %5 = bitcast i8* %4 to i16*, !dbg !15371
  store i16* %5, i16** %dst, align 8, !dbg !15369
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !15372, metadata !905), !dbg !15373
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !15374
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !15375
  %7 = load double, double* %opacity1, align 8, !dbg !15375
  store double %7, double* %opacity, align 8, !dbg !15373
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15376, metadata !905), !dbg !15377
  call void @llvm.dbg.declare(metadata i32* %j, metadata !15378, metadata !905), !dbg !15379
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !15380
  %div = sdiv i64 %8, 2, !dbg !15380
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !15380
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !15381
  %div2 = sdiv i64 %9, 2, !dbg !15381
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !15381
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !15382
  %div3 = sdiv i64 %10, 2, !dbg !15382
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !15382
  store i32 0, i32* %i, align 4, !dbg !15383
  br label %for.cond, !dbg !15385

for.cond:                                         ; preds = %for.inc59, %entry
  %11 = load i32, i32* %i, align 4, !dbg !15386
  %conv = sext i32 %11 to i64, !dbg !15386
  %12 = load i64, i64* %height.addr, align 8, !dbg !15389
  %cmp = icmp slt i64 %conv, %12, !dbg !15390
  br i1 %cmp, label %for.body, label %for.end61, !dbg !15391

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !15392
  br label %for.cond5, !dbg !15396

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !15397
  %conv6 = sext i32 %13 to i64, !dbg !15397
  %14 = load i64, i64* %width.addr, align 8, !dbg !15400
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !15401
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !15402

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !15403
  %idxprom = sext i32 %15 to i64, !dbg !15406
  %16 = load i16*, i16** %top, align 8, !dbg !15406
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !15406
  %17 = load i16, i16* %arrayidx, align 2, !dbg !15406
  %conv10 = zext i16 %17 to i32, !dbg !15406
  %conv11 = sitofp i32 %conv10 to double, !dbg !15406
  %18 = load i32, i32* %j, align 4, !dbg !15407
  %idxprom12 = sext i32 %18 to i64, !dbg !15408
  %19 = load i16*, i16** %bottom, align 8, !dbg !15408
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !15408
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !15408
  %conv14 = zext i16 %20 to i32, !dbg !15408
  %cmp15 = icmp eq i32 %conv14, 0, !dbg !15409
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !15410

cond.true:                                        ; preds = %for.body9
  br label %cond.end46, !dbg !15411

cond.false:                                       ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !15413
  %idxprom17 = sext i32 %21 to i64, !dbg !15415
  %22 = load i16*, i16** %top, align 8, !dbg !15415
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !15415
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !15415
  %conv19 = zext i16 %23 to i32, !dbg !15415
  %sub = sub nsw i32 65535, %conv19, !dbg !15416
  %24 = load i32, i32* %j, align 4, !dbg !15417
  %idxprom20 = sext i32 %24 to i64, !dbg !15418
  %25 = load i16*, i16** %top, align 8, !dbg !15418
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !15418
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !15418
  %conv22 = zext i16 %26 to i32, !dbg !15418
  %sub23 = sub nsw i32 65535, %conv22, !dbg !15419
  %mul = mul nsw i32 %sub, %sub23, !dbg !15420
  %27 = load i32, i32* %j, align 4, !dbg !15421
  %idxprom24 = sext i32 %27 to i64, !dbg !15422
  %28 = load i16*, i16** %bottom, align 8, !dbg !15422
  %arrayidx25 = getelementptr inbounds i16, i16* %28, i64 %idxprom24, !dbg !15422
  %29 = load i16, i16* %arrayidx25, align 2, !dbg !15422
  %conv26 = zext i16 %29 to i32, !dbg !15422
  %div27 = sdiv i32 %mul, %conv26, !dbg !15423
  %cmp28 = icmp sgt i32 %div27, 65535, !dbg !15424
  br i1 %cmp28, label %cond.true30, label %cond.false31, !dbg !15425

cond.true30:                                      ; preds = %cond.false
  br label %cond.end, !dbg !15426

cond.false31:                                     ; preds = %cond.false
  %30 = load i32, i32* %j, align 4, !dbg !15428
  %idxprom32 = sext i32 %30 to i64, !dbg !15430
  %31 = load i16*, i16** %top, align 8, !dbg !15430
  %arrayidx33 = getelementptr inbounds i16, i16* %31, i64 %idxprom32, !dbg !15430
  %32 = load i16, i16* %arrayidx33, align 2, !dbg !15430
  %conv34 = zext i16 %32 to i32, !dbg !15430
  %sub35 = sub nsw i32 65535, %conv34, !dbg !15431
  %33 = load i32, i32* %j, align 4, !dbg !15432
  %idxprom36 = sext i32 %33 to i64, !dbg !15433
  %34 = load i16*, i16** %top, align 8, !dbg !15433
  %arrayidx37 = getelementptr inbounds i16, i16* %34, i64 %idxprom36, !dbg !15433
  %35 = load i16, i16* %arrayidx37, align 2, !dbg !15433
  %conv38 = zext i16 %35 to i32, !dbg !15433
  %sub39 = sub nsw i32 65535, %conv38, !dbg !15434
  %mul40 = mul nsw i32 %sub35, %sub39, !dbg !15435
  %36 = load i32, i32* %j, align 4, !dbg !15436
  %idxprom41 = sext i32 %36 to i64, !dbg !15437
  %37 = load i16*, i16** %bottom, align 8, !dbg !15437
  %arrayidx42 = getelementptr inbounds i16, i16* %37, i64 %idxprom41, !dbg !15437
  %38 = load i16, i16* %arrayidx42, align 2, !dbg !15437
  %conv43 = zext i16 %38 to i32, !dbg !15437
  %div44 = sdiv i32 %mul40, %conv43, !dbg !15438
  br label %cond.end, !dbg !15439

cond.end:                                         ; preds = %cond.false31, %cond.true30
  %cond = phi i32 [ 65535, %cond.true30 ], [ %div44, %cond.false31 ], !dbg !15440
  %sub45 = sub nsw i32 65535, %cond, !dbg !15442
  br label %cond.end46, !dbg !15443

cond.end46:                                       ; preds = %cond.end, %cond.true
  %cond47 = phi i32 [ 0, %cond.true ], [ %sub45, %cond.end ], !dbg !15444
  %39 = load i32, i32* %j, align 4, !dbg !15446
  %idxprom48 = sext i32 %39 to i64, !dbg !15447
  %40 = load i16*, i16** %top, align 8, !dbg !15447
  %arrayidx49 = getelementptr inbounds i16, i16* %40, i64 %idxprom48, !dbg !15447
  %41 = load i16, i16* %arrayidx49, align 2, !dbg !15447
  %conv50 = zext i16 %41 to i32, !dbg !15447
  %sub51 = sub nsw i32 %cond47, %conv50, !dbg !15448
  %conv52 = sitofp i32 %sub51 to double, !dbg !15449
  %42 = load double, double* %opacity, align 8, !dbg !15450
  %mul53 = fmul double %conv52, %42, !dbg !15451
  %add = fadd double %conv11, %mul53, !dbg !15452
  %conv54 = fptoui double %add to i16, !dbg !15453
  %43 = load i32, i32* %j, align 4, !dbg !15454
  %idxprom55 = sext i32 %43 to i64, !dbg !15455
  %44 = load i16*, i16** %dst, align 8, !dbg !15455
  %arrayidx56 = getelementptr inbounds i16, i16* %44, i64 %idxprom55, !dbg !15455
  store i16 %conv54, i16* %arrayidx56, align 2, !dbg !15456
  br label %for.inc, !dbg !15457

for.inc:                                          ; preds = %cond.end46
  %45 = load i32, i32* %j, align 4, !dbg !15458
  %inc = add nsw i32 %45, 1, !dbg !15458
  store i32 %inc, i32* %j, align 4, !dbg !15458
  br label %for.cond5, !dbg !15460, !llvm.loop !15461

for.end:                                          ; preds = %for.cond5
  %46 = load i64, i64* %dst_linesize.addr, align 8, !dbg !15463
  %47 = load i16*, i16** %dst, align 8, !dbg !15465
  %add.ptr = getelementptr inbounds i16, i16* %47, i64 %46, !dbg !15465
  store i16* %add.ptr, i16** %dst, align 8, !dbg !15465
  %48 = load i64, i64* %top_linesize.addr, align 8, !dbg !15466
  %49 = load i16*, i16** %top, align 8, !dbg !15467
  %add.ptr57 = getelementptr inbounds i16, i16* %49, i64 %48, !dbg !15467
  store i16* %add.ptr57, i16** %top, align 8, !dbg !15467
  %50 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !15468
  %51 = load i16*, i16** %bottom, align 8, !dbg !15469
  %add.ptr58 = getelementptr inbounds i16, i16* %51, i64 %50, !dbg !15469
  store i16* %add.ptr58, i16** %bottom, align 8, !dbg !15469
  br label %for.inc59, !dbg !15470

for.inc59:                                        ; preds = %for.end
  %52 = load i32, i32* %i, align 4, !dbg !15471
  %inc60 = add nsw i32 %52, 1, !dbg !15471
  store i32 %inc60, i32* %i, align 4, !dbg !15471
  br label %for.cond, !dbg !15473, !llvm.loop !15474

for.end61:                                        ; preds = %for.cond
  ret void, !dbg !15476
}

; Function Attrs: nounwind uwtable
define internal void @blend_glow_16bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !15478 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !15479, metadata !905), !dbg !15480
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !15481, metadata !905), !dbg !15482
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !15483, metadata !905), !dbg !15484
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !15485, metadata !905), !dbg !15486
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !15487, metadata !905), !dbg !15488
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !15489, metadata !905), !dbg !15490
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !15491, metadata !905), !dbg !15492
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !15493, metadata !905), !dbg !15494
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !15495, metadata !905), !dbg !15496
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !15497, metadata !905), !dbg !15498
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !15499, metadata !905), !dbg !15500
  call void @llvm.dbg.declare(metadata i16** %top, metadata !15501, metadata !905), !dbg !15502
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !15503
  %1 = bitcast i8* %0 to i16*, !dbg !15504
  store i16* %1, i16** %top, align 8, !dbg !15502
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !15505, metadata !905), !dbg !15506
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !15507
  %3 = bitcast i8* %2 to i16*, !dbg !15508
  store i16* %3, i16** %bottom, align 8, !dbg !15506
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !15509, metadata !905), !dbg !15510
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !15511
  %5 = bitcast i8* %4 to i16*, !dbg !15512
  store i16* %5, i16** %dst, align 8, !dbg !15510
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !15513, metadata !905), !dbg !15514
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !15515
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !15516
  %7 = load double, double* %opacity1, align 8, !dbg !15516
  store double %7, double* %opacity, align 8, !dbg !15514
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15517, metadata !905), !dbg !15518
  call void @llvm.dbg.declare(metadata i32* %j, metadata !15519, metadata !905), !dbg !15520
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !15521
  %div = sdiv i64 %8, 2, !dbg !15521
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !15521
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !15522
  %div2 = sdiv i64 %9, 2, !dbg !15522
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !15522
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !15523
  %div3 = sdiv i64 %10, 2, !dbg !15523
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !15523
  store i32 0, i32* %i, align 4, !dbg !15524
  br label %for.cond, !dbg !15526

for.cond:                                         ; preds = %for.inc59, %entry
  %11 = load i32, i32* %i, align 4, !dbg !15527
  %conv = sext i32 %11 to i64, !dbg !15527
  %12 = load i64, i64* %height.addr, align 8, !dbg !15530
  %cmp = icmp slt i64 %conv, %12, !dbg !15531
  br i1 %cmp, label %for.body, label %for.end61, !dbg !15532

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !15533
  br label %for.cond5, !dbg !15537

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !15538
  %conv6 = sext i32 %13 to i64, !dbg !15538
  %14 = load i64, i64* %width.addr, align 8, !dbg !15541
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !15542
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !15543

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !15544
  %idxprom = sext i32 %15 to i64, !dbg !15547
  %16 = load i16*, i16** %top, align 8, !dbg !15547
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !15547
  %17 = load i16, i16* %arrayidx, align 2, !dbg !15547
  %conv10 = zext i16 %17 to i32, !dbg !15547
  %conv11 = sitofp i32 %conv10 to double, !dbg !15547
  %18 = load i32, i32* %j, align 4, !dbg !15548
  %idxprom12 = sext i32 %18 to i64, !dbg !15549
  %19 = load i16*, i16** %top, align 8, !dbg !15549
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !15549
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !15549
  %conv14 = zext i16 %20 to i32, !dbg !15549
  %cmp15 = icmp eq i32 %conv14, 65535, !dbg !15550
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !15551

cond.true:                                        ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !15552
  %idxprom17 = sext i32 %21 to i64, !dbg !15554
  %22 = load i16*, i16** %top, align 8, !dbg !15554
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !15554
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !15554
  %conv19 = zext i16 %23 to i32, !dbg !15554
  br label %cond.end46, !dbg !15555

cond.false:                                       ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !15556
  %idxprom20 = sext i32 %24 to i64, !dbg !15558
  %25 = load i16*, i16** %bottom, align 8, !dbg !15558
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !15558
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !15558
  %conv22 = zext i16 %26 to i32, !dbg !15558
  %27 = load i32, i32* %j, align 4, !dbg !15559
  %idxprom23 = sext i32 %27 to i64, !dbg !15560
  %28 = load i16*, i16** %bottom, align 8, !dbg !15560
  %arrayidx24 = getelementptr inbounds i16, i16* %28, i64 %idxprom23, !dbg !15560
  %29 = load i16, i16* %arrayidx24, align 2, !dbg !15560
  %conv25 = zext i16 %29 to i32, !dbg !15560
  %mul = mul nsw i32 %conv22, %conv25, !dbg !15561
  %30 = load i32, i32* %j, align 4, !dbg !15562
  %idxprom26 = sext i32 %30 to i64, !dbg !15563
  %31 = load i16*, i16** %top, align 8, !dbg !15563
  %arrayidx27 = getelementptr inbounds i16, i16* %31, i64 %idxprom26, !dbg !15563
  %32 = load i16, i16* %arrayidx27, align 2, !dbg !15563
  %conv28 = zext i16 %32 to i32, !dbg !15563
  %sub = sub nsw i32 65535, %conv28, !dbg !15564
  %div29 = sdiv i32 %mul, %sub, !dbg !15565
  %cmp30 = icmp sgt i32 65535, %div29, !dbg !15566
  br i1 %cmp30, label %cond.true32, label %cond.false45, !dbg !15567

cond.true32:                                      ; preds = %cond.false
  %33 = load i32, i32* %j, align 4, !dbg !15568
  %idxprom33 = sext i32 %33 to i64, !dbg !15570
  %34 = load i16*, i16** %bottom, align 8, !dbg !15570
  %arrayidx34 = getelementptr inbounds i16, i16* %34, i64 %idxprom33, !dbg !15570
  %35 = load i16, i16* %arrayidx34, align 2, !dbg !15570
  %conv35 = zext i16 %35 to i32, !dbg !15570
  %36 = load i32, i32* %j, align 4, !dbg !15571
  %idxprom36 = sext i32 %36 to i64, !dbg !15572
  %37 = load i16*, i16** %bottom, align 8, !dbg !15572
  %arrayidx37 = getelementptr inbounds i16, i16* %37, i64 %idxprom36, !dbg !15572
  %38 = load i16, i16* %arrayidx37, align 2, !dbg !15572
  %conv38 = zext i16 %38 to i32, !dbg !15572
  %mul39 = mul nsw i32 %conv35, %conv38, !dbg !15573
  %39 = load i32, i32* %j, align 4, !dbg !15574
  %idxprom40 = sext i32 %39 to i64, !dbg !15575
  %40 = load i16*, i16** %top, align 8, !dbg !15575
  %arrayidx41 = getelementptr inbounds i16, i16* %40, i64 %idxprom40, !dbg !15575
  %41 = load i16, i16* %arrayidx41, align 2, !dbg !15575
  %conv42 = zext i16 %41 to i32, !dbg !15575
  %sub43 = sub nsw i32 65535, %conv42, !dbg !15576
  %div44 = sdiv i32 %mul39, %sub43, !dbg !15577
  br label %cond.end, !dbg !15578

cond.false45:                                     ; preds = %cond.false
  br label %cond.end, !dbg !15579

cond.end:                                         ; preds = %cond.false45, %cond.true32
  %cond = phi i32 [ %div44, %cond.true32 ], [ 65535, %cond.false45 ], !dbg !15581
  br label %cond.end46, !dbg !15583

cond.end46:                                       ; preds = %cond.end, %cond.true
  %cond47 = phi i32 [ %conv19, %cond.true ], [ %cond, %cond.end ], !dbg !15584
  %42 = load i32, i32* %j, align 4, !dbg !15586
  %idxprom48 = sext i32 %42 to i64, !dbg !15587
  %43 = load i16*, i16** %top, align 8, !dbg !15587
  %arrayidx49 = getelementptr inbounds i16, i16* %43, i64 %idxprom48, !dbg !15587
  %44 = load i16, i16* %arrayidx49, align 2, !dbg !15587
  %conv50 = zext i16 %44 to i32, !dbg !15587
  %sub51 = sub nsw i32 %cond47, %conv50, !dbg !15588
  %conv52 = sitofp i32 %sub51 to double, !dbg !15589
  %45 = load double, double* %opacity, align 8, !dbg !15590
  %mul53 = fmul double %conv52, %45, !dbg !15591
  %add = fadd double %conv11, %mul53, !dbg !15592
  %conv54 = fptoui double %add to i16, !dbg !15593
  %46 = load i32, i32* %j, align 4, !dbg !15594
  %idxprom55 = sext i32 %46 to i64, !dbg !15595
  %47 = load i16*, i16** %dst, align 8, !dbg !15595
  %arrayidx56 = getelementptr inbounds i16, i16* %47, i64 %idxprom55, !dbg !15595
  store i16 %conv54, i16* %arrayidx56, align 2, !dbg !15596
  br label %for.inc, !dbg !15597

for.inc:                                          ; preds = %cond.end46
  %48 = load i32, i32* %j, align 4, !dbg !15598
  %inc = add nsw i32 %48, 1, !dbg !15598
  store i32 %inc, i32* %j, align 4, !dbg !15598
  br label %for.cond5, !dbg !15600, !llvm.loop !15601

for.end:                                          ; preds = %for.cond5
  %49 = load i64, i64* %dst_linesize.addr, align 8, !dbg !15603
  %50 = load i16*, i16** %dst, align 8, !dbg !15605
  %add.ptr = getelementptr inbounds i16, i16* %50, i64 %49, !dbg !15605
  store i16* %add.ptr, i16** %dst, align 8, !dbg !15605
  %51 = load i64, i64* %top_linesize.addr, align 8, !dbg !15606
  %52 = load i16*, i16** %top, align 8, !dbg !15607
  %add.ptr57 = getelementptr inbounds i16, i16* %52, i64 %51, !dbg !15607
  store i16* %add.ptr57, i16** %top, align 8, !dbg !15607
  %53 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !15608
  %54 = load i16*, i16** %bottom, align 8, !dbg !15609
  %add.ptr58 = getelementptr inbounds i16, i16* %54, i64 %53, !dbg !15609
  store i16* %add.ptr58, i16** %bottom, align 8, !dbg !15609
  br label %for.inc59, !dbg !15610

for.inc59:                                        ; preds = %for.end
  %55 = load i32, i32* %i, align 4, !dbg !15611
  %inc60 = add nsw i32 %55, 1, !dbg !15611
  store i32 %inc60, i32* %i, align 4, !dbg !15611
  br label %for.cond, !dbg !15613, !llvm.loop !15614

for.end61:                                        ; preds = %for.cond
  ret void, !dbg !15616
}

; Function Attrs: nounwind uwtable
define internal void @blend_hardlight_16bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !15618 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !15619, metadata !905), !dbg !15620
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !15621, metadata !905), !dbg !15622
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !15623, metadata !905), !dbg !15624
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !15625, metadata !905), !dbg !15626
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !15627, metadata !905), !dbg !15628
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !15629, metadata !905), !dbg !15630
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !15631, metadata !905), !dbg !15632
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !15633, metadata !905), !dbg !15634
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !15635, metadata !905), !dbg !15636
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !15637, metadata !905), !dbg !15638
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !15639, metadata !905), !dbg !15640
  call void @llvm.dbg.declare(metadata i16** %top, metadata !15641, metadata !905), !dbg !15642
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !15643
  %1 = bitcast i8* %0 to i16*, !dbg !15644
  store i16* %1, i16** %top, align 8, !dbg !15642
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !15645, metadata !905), !dbg !15646
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !15647
  %3 = bitcast i8* %2 to i16*, !dbg !15648
  store i16* %3, i16** %bottom, align 8, !dbg !15646
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !15649, metadata !905), !dbg !15650
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !15651
  %5 = bitcast i8* %4 to i16*, !dbg !15652
  store i16* %5, i16** %dst, align 8, !dbg !15650
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !15653, metadata !905), !dbg !15654
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !15655
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !15656
  %7 = load double, double* %opacity1, align 8, !dbg !15656
  store double %7, double* %opacity, align 8, !dbg !15654
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15657, metadata !905), !dbg !15658
  call void @llvm.dbg.declare(metadata i32* %j, metadata !15659, metadata !905), !dbg !15660
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !15661
  %div = sdiv i64 %8, 2, !dbg !15661
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !15661
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !15662
  %div2 = sdiv i64 %9, 2, !dbg !15662
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !15662
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !15663
  %div3 = sdiv i64 %10, 2, !dbg !15663
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !15663
  store i32 0, i32* %i, align 4, !dbg !15664
  br label %for.cond, !dbg !15666

for.cond:                                         ; preds = %for.inc47, %entry
  %11 = load i32, i32* %i, align 4, !dbg !15667
  %conv = sext i32 %11 to i64, !dbg !15667
  %12 = load i64, i64* %height.addr, align 8, !dbg !15670
  %cmp = icmp slt i64 %conv, %12, !dbg !15671
  br i1 %cmp, label %for.body, label %for.end49, !dbg !15672

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !15673
  br label %for.cond5, !dbg !15677

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !15678
  %conv6 = sext i32 %13 to i64, !dbg !15678
  %14 = load i64, i64* %width.addr, align 8, !dbg !15681
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !15682
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !15683

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !15684
  %idxprom = sext i32 %15 to i64, !dbg !15687
  %16 = load i16*, i16** %top, align 8, !dbg !15687
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !15687
  %17 = load i16, i16* %arrayidx, align 2, !dbg !15687
  %conv10 = zext i16 %17 to i32, !dbg !15687
  %conv11 = sitofp i32 %conv10 to double, !dbg !15687
  %18 = load i32, i32* %j, align 4, !dbg !15688
  %idxprom12 = sext i32 %18 to i64, !dbg !15689
  %19 = load i16*, i16** %bottom, align 8, !dbg !15689
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !15689
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !15689
  %conv14 = zext i16 %20 to i32, !dbg !15689
  %cmp15 = icmp slt i32 %conv14, 32768, !dbg !15690
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !15691

cond.true:                                        ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !15692
  %idxprom17 = sext i32 %21 to i64, !dbg !15694
  %22 = load i16*, i16** %bottom, align 8, !dbg !15694
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !15694
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !15694
  %conv19 = zext i16 %23 to i32, !dbg !15695
  %24 = load i32, i32* %j, align 4, !dbg !15696
  %idxprom20 = sext i32 %24 to i64, !dbg !15697
  %25 = load i16*, i16** %top, align 8, !dbg !15697
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !15697
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !15697
  %conv22 = zext i16 %26 to i32, !dbg !15698
  %mul = mul nsw i32 %conv19, %conv22, !dbg !15699
  %div23 = sdiv i32 %mul, 65535, !dbg !15700
  %mul24 = mul nsw i32 2, %div23, !dbg !15701
  br label %cond.end, !dbg !15702

cond.false:                                       ; preds = %for.body9
  %27 = load i32, i32* %j, align 4, !dbg !15703
  %idxprom25 = sext i32 %27 to i64, !dbg !15705
  %28 = load i16*, i16** %bottom, align 8, !dbg !15705
  %arrayidx26 = getelementptr inbounds i16, i16* %28, i64 %idxprom25, !dbg !15705
  %29 = load i16, i16* %arrayidx26, align 2, !dbg !15705
  %conv27 = zext i16 %29 to i32, !dbg !15706
  %sub = sub nsw i32 65535, %conv27, !dbg !15707
  %30 = load i32, i32* %j, align 4, !dbg !15708
  %idxprom28 = sext i32 %30 to i64, !dbg !15709
  %31 = load i16*, i16** %top, align 8, !dbg !15709
  %arrayidx29 = getelementptr inbounds i16, i16* %31, i64 %idxprom28, !dbg !15709
  %32 = load i16, i16* %arrayidx29, align 2, !dbg !15709
  %conv30 = zext i16 %32 to i32, !dbg !15710
  %sub31 = sub nsw i32 65535, %conv30, !dbg !15711
  %mul32 = mul nsw i32 %sub, %sub31, !dbg !15712
  %div33 = sdiv i32 %mul32, 65535, !dbg !15713
  %mul34 = mul nsw i32 2, %div33, !dbg !15714
  %sub35 = sub nsw i32 65535, %mul34, !dbg !15715
  br label %cond.end, !dbg !15716

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %mul24, %cond.true ], [ %sub35, %cond.false ], !dbg !15717
  %33 = load i32, i32* %j, align 4, !dbg !15719
  %idxprom36 = sext i32 %33 to i64, !dbg !15720
  %34 = load i16*, i16** %top, align 8, !dbg !15720
  %arrayidx37 = getelementptr inbounds i16, i16* %34, i64 %idxprom36, !dbg !15720
  %35 = load i16, i16* %arrayidx37, align 2, !dbg !15720
  %conv38 = zext i16 %35 to i32, !dbg !15720
  %sub39 = sub nsw i32 %cond, %conv38, !dbg !15721
  %conv40 = sitofp i32 %sub39 to double, !dbg !15722
  %36 = load double, double* %opacity, align 8, !dbg !15723
  %mul41 = fmul double %conv40, %36, !dbg !15724
  %add = fadd double %conv11, %mul41, !dbg !15725
  %conv42 = fptoui double %add to i16, !dbg !15726
  %37 = load i32, i32* %j, align 4, !dbg !15727
  %idxprom43 = sext i32 %37 to i64, !dbg !15728
  %38 = load i16*, i16** %dst, align 8, !dbg !15728
  %arrayidx44 = getelementptr inbounds i16, i16* %38, i64 %idxprom43, !dbg !15728
  store i16 %conv42, i16* %arrayidx44, align 2, !dbg !15729
  br label %for.inc, !dbg !15730

for.inc:                                          ; preds = %cond.end
  %39 = load i32, i32* %j, align 4, !dbg !15731
  %inc = add nsw i32 %39, 1, !dbg !15731
  store i32 %inc, i32* %j, align 4, !dbg !15731
  br label %for.cond5, !dbg !15733, !llvm.loop !15734

for.end:                                          ; preds = %for.cond5
  %40 = load i64, i64* %dst_linesize.addr, align 8, !dbg !15736
  %41 = load i16*, i16** %dst, align 8, !dbg !15738
  %add.ptr = getelementptr inbounds i16, i16* %41, i64 %40, !dbg !15738
  store i16* %add.ptr, i16** %dst, align 8, !dbg !15738
  %42 = load i64, i64* %top_linesize.addr, align 8, !dbg !15739
  %43 = load i16*, i16** %top, align 8, !dbg !15740
  %add.ptr45 = getelementptr inbounds i16, i16* %43, i64 %42, !dbg !15740
  store i16* %add.ptr45, i16** %top, align 8, !dbg !15740
  %44 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !15741
  %45 = load i16*, i16** %bottom, align 8, !dbg !15742
  %add.ptr46 = getelementptr inbounds i16, i16* %45, i64 %44, !dbg !15742
  store i16* %add.ptr46, i16** %bottom, align 8, !dbg !15742
  br label %for.inc47, !dbg !15743

for.inc47:                                        ; preds = %for.end
  %46 = load i32, i32* %i, align 4, !dbg !15744
  %inc48 = add nsw i32 %46, 1, !dbg !15744
  store i32 %inc48, i32* %i, align 4, !dbg !15744
  br label %for.cond, !dbg !15746, !llvm.loop !15747

for.end49:                                        ; preds = %for.cond
  ret void, !dbg !15749
}

; Function Attrs: nounwind uwtable
define internal void @blend_hardmix_16bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !15751 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !15752, metadata !905), !dbg !15753
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !15754, metadata !905), !dbg !15755
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !15756, metadata !905), !dbg !15757
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !15758, metadata !905), !dbg !15759
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !15760, metadata !905), !dbg !15761
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !15762, metadata !905), !dbg !15763
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !15764, metadata !905), !dbg !15765
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !15766, metadata !905), !dbg !15767
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !15768, metadata !905), !dbg !15769
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !15770, metadata !905), !dbg !15771
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !15772, metadata !905), !dbg !15773
  call void @llvm.dbg.declare(metadata i16** %top, metadata !15774, metadata !905), !dbg !15775
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !15776
  %1 = bitcast i8* %0 to i16*, !dbg !15777
  store i16* %1, i16** %top, align 8, !dbg !15775
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !15778, metadata !905), !dbg !15779
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !15780
  %3 = bitcast i8* %2 to i16*, !dbg !15781
  store i16* %3, i16** %bottom, align 8, !dbg !15779
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !15782, metadata !905), !dbg !15783
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !15784
  %5 = bitcast i8* %4 to i16*, !dbg !15785
  store i16* %5, i16** %dst, align 8, !dbg !15783
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !15786, metadata !905), !dbg !15787
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !15788
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !15789
  %7 = load double, double* %opacity1, align 8, !dbg !15789
  store double %7, double* %opacity, align 8, !dbg !15787
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15790, metadata !905), !dbg !15791
  call void @llvm.dbg.declare(metadata i32* %j, metadata !15792, metadata !905), !dbg !15793
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !15794
  %div = sdiv i64 %8, 2, !dbg !15794
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !15794
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !15795
  %div2 = sdiv i64 %9, 2, !dbg !15795
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !15795
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !15796
  %div3 = sdiv i64 %10, 2, !dbg !15796
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !15796
  store i32 0, i32* %i, align 4, !dbg !15797
  br label %for.cond, !dbg !15799

for.cond:                                         ; preds = %for.inc30, %entry
  %11 = load i32, i32* %i, align 4, !dbg !15800
  %conv = sext i32 %11 to i64, !dbg !15800
  %12 = load i64, i64* %height.addr, align 8, !dbg !15803
  %cmp = icmp slt i64 %conv, %12, !dbg !15804
  br i1 %cmp, label %for.body, label %for.end32, !dbg !15805

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !15806
  br label %for.cond5, !dbg !15810

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !15811
  %conv6 = sext i32 %13 to i64, !dbg !15811
  %14 = load i64, i64* %width.addr, align 8, !dbg !15814
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !15815
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !15816

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !15817
  %idxprom = sext i32 %15 to i64, !dbg !15820
  %16 = load i16*, i16** %top, align 8, !dbg !15820
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !15820
  %17 = load i16, i16* %arrayidx, align 2, !dbg !15820
  %conv10 = zext i16 %17 to i32, !dbg !15820
  %conv11 = sitofp i32 %conv10 to double, !dbg !15820
  %18 = load i32, i32* %j, align 4, !dbg !15821
  %idxprom12 = sext i32 %18 to i64, !dbg !15822
  %19 = load i16*, i16** %top, align 8, !dbg !15822
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !15822
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !15822
  %conv14 = zext i16 %20 to i32, !dbg !15822
  %21 = load i32, i32* %j, align 4, !dbg !15823
  %idxprom15 = sext i32 %21 to i64, !dbg !15824
  %22 = load i16*, i16** %bottom, align 8, !dbg !15824
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !15824
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !15824
  %conv17 = zext i16 %23 to i32, !dbg !15824
  %sub = sub nsw i32 65535, %conv17, !dbg !15825
  %cmp18 = icmp slt i32 %conv14, %sub, !dbg !15826
  %cond = select i1 %cmp18, i32 0, i32 65535, !dbg !15827
  %24 = load i32, i32* %j, align 4, !dbg !15828
  %idxprom20 = sext i32 %24 to i64, !dbg !15829
  %25 = load i16*, i16** %top, align 8, !dbg !15829
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !15829
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !15829
  %conv22 = zext i16 %26 to i32, !dbg !15829
  %sub23 = sub nsw i32 %cond, %conv22, !dbg !15830
  %conv24 = sitofp i32 %sub23 to double, !dbg !15831
  %27 = load double, double* %opacity, align 8, !dbg !15832
  %mul = fmul double %conv24, %27, !dbg !15833
  %add = fadd double %conv11, %mul, !dbg !15834
  %conv25 = fptoui double %add to i16, !dbg !15820
  %28 = load i32, i32* %j, align 4, !dbg !15835
  %idxprom26 = sext i32 %28 to i64, !dbg !15836
  %29 = load i16*, i16** %dst, align 8, !dbg !15836
  %arrayidx27 = getelementptr inbounds i16, i16* %29, i64 %idxprom26, !dbg !15836
  store i16 %conv25, i16* %arrayidx27, align 2, !dbg !15837
  br label %for.inc, !dbg !15838

for.inc:                                          ; preds = %for.body9
  %30 = load i32, i32* %j, align 4, !dbg !15839
  %inc = add nsw i32 %30, 1, !dbg !15839
  store i32 %inc, i32* %j, align 4, !dbg !15839
  br label %for.cond5, !dbg !15841, !llvm.loop !15842

for.end:                                          ; preds = %for.cond5
  %31 = load i64, i64* %dst_linesize.addr, align 8, !dbg !15844
  %32 = load i16*, i16** %dst, align 8, !dbg !15846
  %add.ptr = getelementptr inbounds i16, i16* %32, i64 %31, !dbg !15846
  store i16* %add.ptr, i16** %dst, align 8, !dbg !15846
  %33 = load i64, i64* %top_linesize.addr, align 8, !dbg !15847
  %34 = load i16*, i16** %top, align 8, !dbg !15848
  %add.ptr28 = getelementptr inbounds i16, i16* %34, i64 %33, !dbg !15848
  store i16* %add.ptr28, i16** %top, align 8, !dbg !15848
  %35 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !15849
  %36 = load i16*, i16** %bottom, align 8, !dbg !15850
  %add.ptr29 = getelementptr inbounds i16, i16* %36, i64 %35, !dbg !15850
  store i16* %add.ptr29, i16** %bottom, align 8, !dbg !15850
  br label %for.inc30, !dbg !15851

for.inc30:                                        ; preds = %for.end
  %37 = load i32, i32* %i, align 4, !dbg !15852
  %inc31 = add nsw i32 %37, 1, !dbg !15852
  store i32 %inc31, i32* %i, align 4, !dbg !15852
  br label %for.cond, !dbg !15854, !llvm.loop !15855

for.end32:                                        ; preds = %for.cond
  ret void, !dbg !15857
}

; Function Attrs: nounwind uwtable
define internal void @blend_heat_16bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !15859 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !15860, metadata !905), !dbg !15861
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !15862, metadata !905), !dbg !15863
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !15864, metadata !905), !dbg !15865
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !15866, metadata !905), !dbg !15867
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !15868, metadata !905), !dbg !15869
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !15870, metadata !905), !dbg !15871
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !15872, metadata !905), !dbg !15873
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !15874, metadata !905), !dbg !15875
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !15876, metadata !905), !dbg !15877
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !15878, metadata !905), !dbg !15879
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !15880, metadata !905), !dbg !15881
  call void @llvm.dbg.declare(metadata i16** %top, metadata !15882, metadata !905), !dbg !15883
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !15884
  %1 = bitcast i8* %0 to i16*, !dbg !15885
  store i16* %1, i16** %top, align 8, !dbg !15883
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !15886, metadata !905), !dbg !15887
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !15888
  %3 = bitcast i8* %2 to i16*, !dbg !15889
  store i16* %3, i16** %bottom, align 8, !dbg !15887
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !15890, metadata !905), !dbg !15891
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !15892
  %5 = bitcast i8* %4 to i16*, !dbg !15893
  store i16* %5, i16** %dst, align 8, !dbg !15891
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !15894, metadata !905), !dbg !15895
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !15896
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !15897
  %7 = load double, double* %opacity1, align 8, !dbg !15897
  store double %7, double* %opacity, align 8, !dbg !15895
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15898, metadata !905), !dbg !15899
  call void @llvm.dbg.declare(metadata i32* %j, metadata !15900, metadata !905), !dbg !15901
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !15902
  %div = sdiv i64 %8, 2, !dbg !15902
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !15902
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !15903
  %div2 = sdiv i64 %9, 2, !dbg !15903
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !15903
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !15904
  %div3 = sdiv i64 %10, 2, !dbg !15904
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !15904
  store i32 0, i32* %i, align 4, !dbg !15905
  br label %for.cond, !dbg !15907

for.cond:                                         ; preds = %for.inc59, %entry
  %11 = load i32, i32* %i, align 4, !dbg !15908
  %conv = sext i32 %11 to i64, !dbg !15908
  %12 = load i64, i64* %height.addr, align 8, !dbg !15911
  %cmp = icmp slt i64 %conv, %12, !dbg !15912
  br i1 %cmp, label %for.body, label %for.end61, !dbg !15913

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !15914
  br label %for.cond5, !dbg !15918

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !15919
  %conv6 = sext i32 %13 to i64, !dbg !15919
  %14 = load i64, i64* %width.addr, align 8, !dbg !15922
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !15923
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !15924

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !15925
  %idxprom = sext i32 %15 to i64, !dbg !15928
  %16 = load i16*, i16** %top, align 8, !dbg !15928
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !15928
  %17 = load i16, i16* %arrayidx, align 2, !dbg !15928
  %conv10 = zext i16 %17 to i32, !dbg !15928
  %conv11 = sitofp i32 %conv10 to double, !dbg !15928
  %18 = load i32, i32* %j, align 4, !dbg !15929
  %idxprom12 = sext i32 %18 to i64, !dbg !15930
  %19 = load i16*, i16** %top, align 8, !dbg !15930
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !15930
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !15930
  %conv14 = zext i16 %20 to i32, !dbg !15930
  %cmp15 = icmp eq i32 %conv14, 0, !dbg !15931
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !15932

cond.true:                                        ; preds = %for.body9
  br label %cond.end46, !dbg !15933

cond.false:                                       ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !15935
  %idxprom17 = sext i32 %21 to i64, !dbg !15937
  %22 = load i16*, i16** %bottom, align 8, !dbg !15937
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !15937
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !15937
  %conv19 = zext i16 %23 to i32, !dbg !15937
  %sub = sub nsw i32 65535, %conv19, !dbg !15938
  %24 = load i32, i32* %j, align 4, !dbg !15939
  %idxprom20 = sext i32 %24 to i64, !dbg !15940
  %25 = load i16*, i16** %bottom, align 8, !dbg !15940
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !15940
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !15940
  %conv22 = zext i16 %26 to i32, !dbg !15940
  %sub23 = sub nsw i32 65535, %conv22, !dbg !15941
  %mul = mul nsw i32 %sub, %sub23, !dbg !15942
  %27 = load i32, i32* %j, align 4, !dbg !15943
  %idxprom24 = sext i32 %27 to i64, !dbg !15944
  %28 = load i16*, i16** %top, align 8, !dbg !15944
  %arrayidx25 = getelementptr inbounds i16, i16* %28, i64 %idxprom24, !dbg !15944
  %29 = load i16, i16* %arrayidx25, align 2, !dbg !15944
  %conv26 = zext i16 %29 to i32, !dbg !15944
  %div27 = sdiv i32 %mul, %conv26, !dbg !15945
  %cmp28 = icmp sgt i32 %div27, 65535, !dbg !15946
  br i1 %cmp28, label %cond.true30, label %cond.false31, !dbg !15947

cond.true30:                                      ; preds = %cond.false
  br label %cond.end, !dbg !15948

cond.false31:                                     ; preds = %cond.false
  %30 = load i32, i32* %j, align 4, !dbg !15950
  %idxprom32 = sext i32 %30 to i64, !dbg !15952
  %31 = load i16*, i16** %bottom, align 8, !dbg !15952
  %arrayidx33 = getelementptr inbounds i16, i16* %31, i64 %idxprom32, !dbg !15952
  %32 = load i16, i16* %arrayidx33, align 2, !dbg !15952
  %conv34 = zext i16 %32 to i32, !dbg !15952
  %sub35 = sub nsw i32 65535, %conv34, !dbg !15953
  %33 = load i32, i32* %j, align 4, !dbg !15954
  %idxprom36 = sext i32 %33 to i64, !dbg !15955
  %34 = load i16*, i16** %bottom, align 8, !dbg !15955
  %arrayidx37 = getelementptr inbounds i16, i16* %34, i64 %idxprom36, !dbg !15955
  %35 = load i16, i16* %arrayidx37, align 2, !dbg !15955
  %conv38 = zext i16 %35 to i32, !dbg !15955
  %sub39 = sub nsw i32 65535, %conv38, !dbg !15956
  %mul40 = mul nsw i32 %sub35, %sub39, !dbg !15957
  %36 = load i32, i32* %j, align 4, !dbg !15958
  %idxprom41 = sext i32 %36 to i64, !dbg !15959
  %37 = load i16*, i16** %top, align 8, !dbg !15959
  %arrayidx42 = getelementptr inbounds i16, i16* %37, i64 %idxprom41, !dbg !15959
  %38 = load i16, i16* %arrayidx42, align 2, !dbg !15959
  %conv43 = zext i16 %38 to i32, !dbg !15959
  %div44 = sdiv i32 %mul40, %conv43, !dbg !15960
  br label %cond.end, !dbg !15961

cond.end:                                         ; preds = %cond.false31, %cond.true30
  %cond = phi i32 [ 65535, %cond.true30 ], [ %div44, %cond.false31 ], !dbg !15962
  %sub45 = sub nsw i32 65535, %cond, !dbg !15964
  br label %cond.end46, !dbg !15965

cond.end46:                                       ; preds = %cond.end, %cond.true
  %cond47 = phi i32 [ 0, %cond.true ], [ %sub45, %cond.end ], !dbg !15966
  %39 = load i32, i32* %j, align 4, !dbg !15968
  %idxprom48 = sext i32 %39 to i64, !dbg !15969
  %40 = load i16*, i16** %top, align 8, !dbg !15969
  %arrayidx49 = getelementptr inbounds i16, i16* %40, i64 %idxprom48, !dbg !15969
  %41 = load i16, i16* %arrayidx49, align 2, !dbg !15969
  %conv50 = zext i16 %41 to i32, !dbg !15969
  %sub51 = sub nsw i32 %cond47, %conv50, !dbg !15970
  %conv52 = sitofp i32 %sub51 to double, !dbg !15971
  %42 = load double, double* %opacity, align 8, !dbg !15972
  %mul53 = fmul double %conv52, %42, !dbg !15973
  %add = fadd double %conv11, %mul53, !dbg !15974
  %conv54 = fptoui double %add to i16, !dbg !15975
  %43 = load i32, i32* %j, align 4, !dbg !15976
  %idxprom55 = sext i32 %43 to i64, !dbg !15977
  %44 = load i16*, i16** %dst, align 8, !dbg !15977
  %arrayidx56 = getelementptr inbounds i16, i16* %44, i64 %idxprom55, !dbg !15977
  store i16 %conv54, i16* %arrayidx56, align 2, !dbg !15978
  br label %for.inc, !dbg !15979

for.inc:                                          ; preds = %cond.end46
  %45 = load i32, i32* %j, align 4, !dbg !15980
  %inc = add nsw i32 %45, 1, !dbg !15980
  store i32 %inc, i32* %j, align 4, !dbg !15980
  br label %for.cond5, !dbg !15982, !llvm.loop !15983

for.end:                                          ; preds = %for.cond5
  %46 = load i64, i64* %dst_linesize.addr, align 8, !dbg !15985
  %47 = load i16*, i16** %dst, align 8, !dbg !15987
  %add.ptr = getelementptr inbounds i16, i16* %47, i64 %46, !dbg !15987
  store i16* %add.ptr, i16** %dst, align 8, !dbg !15987
  %48 = load i64, i64* %top_linesize.addr, align 8, !dbg !15988
  %49 = load i16*, i16** %top, align 8, !dbg !15989
  %add.ptr57 = getelementptr inbounds i16, i16* %49, i64 %48, !dbg !15989
  store i16* %add.ptr57, i16** %top, align 8, !dbg !15989
  %50 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !15990
  %51 = load i16*, i16** %bottom, align 8, !dbg !15991
  %add.ptr58 = getelementptr inbounds i16, i16* %51, i64 %50, !dbg !15991
  store i16* %add.ptr58, i16** %bottom, align 8, !dbg !15991
  br label %for.inc59, !dbg !15992

for.inc59:                                        ; preds = %for.end
  %52 = load i32, i32* %i, align 4, !dbg !15993
  %inc60 = add nsw i32 %52, 1, !dbg !15993
  store i32 %inc60, i32* %i, align 4, !dbg !15993
  br label %for.cond, !dbg !15995, !llvm.loop !15996

for.end61:                                        ; preds = %for.cond
  ret void, !dbg !15998
}

; Function Attrs: nounwind uwtable
define internal void @blend_lighten_16bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !16000 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !16001, metadata !905), !dbg !16002
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !16003, metadata !905), !dbg !16004
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !16005, metadata !905), !dbg !16006
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !16007, metadata !905), !dbg !16008
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !16009, metadata !905), !dbg !16010
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !16011, metadata !905), !dbg !16012
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !16013, metadata !905), !dbg !16014
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !16015, metadata !905), !dbg !16016
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !16017, metadata !905), !dbg !16018
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !16019, metadata !905), !dbg !16020
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !16021, metadata !905), !dbg !16022
  call void @llvm.dbg.declare(metadata i16** %top, metadata !16023, metadata !905), !dbg !16024
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !16025
  %1 = bitcast i8* %0 to i16*, !dbg !16026
  store i16* %1, i16** %top, align 8, !dbg !16024
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !16027, metadata !905), !dbg !16028
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !16029
  %3 = bitcast i8* %2 to i16*, !dbg !16030
  store i16* %3, i16** %bottom, align 8, !dbg !16028
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !16031, metadata !905), !dbg !16032
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !16033
  %5 = bitcast i8* %4 to i16*, !dbg !16034
  store i16* %5, i16** %dst, align 8, !dbg !16032
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !16035, metadata !905), !dbg !16036
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !16037
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !16038
  %7 = load double, double* %opacity1, align 8, !dbg !16038
  store double %7, double* %opacity, align 8, !dbg !16036
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16039, metadata !905), !dbg !16040
  call void @llvm.dbg.declare(metadata i32* %j, metadata !16041, metadata !905), !dbg !16042
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !16043
  %div = sdiv i64 %8, 2, !dbg !16043
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !16043
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !16044
  %div2 = sdiv i64 %9, 2, !dbg !16044
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !16044
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !16045
  %div3 = sdiv i64 %10, 2, !dbg !16045
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !16045
  store i32 0, i32* %i, align 4, !dbg !16046
  br label %for.cond, !dbg !16048

for.cond:                                         ; preds = %for.inc35, %entry
  %11 = load i32, i32* %i, align 4, !dbg !16049
  %conv = sext i32 %11 to i64, !dbg !16049
  %12 = load i64, i64* %height.addr, align 8, !dbg !16052
  %cmp = icmp slt i64 %conv, %12, !dbg !16053
  br i1 %cmp, label %for.body, label %for.end37, !dbg !16054

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !16055
  br label %for.cond5, !dbg !16059

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !16060
  %conv6 = sext i32 %13 to i64, !dbg !16060
  %14 = load i64, i64* %width.addr, align 8, !dbg !16063
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !16064
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !16065

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !16066
  %idxprom = sext i32 %15 to i64, !dbg !16069
  %16 = load i16*, i16** %top, align 8, !dbg !16069
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !16069
  %17 = load i16, i16* %arrayidx, align 2, !dbg !16069
  %conv10 = zext i16 %17 to i32, !dbg !16069
  %conv11 = sitofp i32 %conv10 to double, !dbg !16069
  %18 = load i32, i32* %j, align 4, !dbg !16070
  %idxprom12 = sext i32 %18 to i64, !dbg !16071
  %19 = load i16*, i16** %top, align 8, !dbg !16071
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !16071
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !16071
  %conv14 = zext i16 %20 to i32, !dbg !16072
  %21 = load i32, i32* %j, align 4, !dbg !16073
  %idxprom15 = sext i32 %21 to i64, !dbg !16074
  %22 = load i16*, i16** %bottom, align 8, !dbg !16074
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !16074
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !16074
  %conv17 = zext i16 %23 to i32, !dbg !16075
  %cmp18 = icmp sgt i32 %conv14, %conv17, !dbg !16076
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !16072

cond.true:                                        ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !16077
  %idxprom20 = sext i32 %24 to i64, !dbg !16079
  %25 = load i16*, i16** %top, align 8, !dbg !16079
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !16079
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !16079
  %conv22 = zext i16 %26 to i32, !dbg !16080
  br label %cond.end, !dbg !16081

cond.false:                                       ; preds = %for.body9
  %27 = load i32, i32* %j, align 4, !dbg !16082
  %idxprom23 = sext i32 %27 to i64, !dbg !16084
  %28 = load i16*, i16** %bottom, align 8, !dbg !16084
  %arrayidx24 = getelementptr inbounds i16, i16* %28, i64 %idxprom23, !dbg !16084
  %29 = load i16, i16* %arrayidx24, align 2, !dbg !16084
  %conv25 = zext i16 %29 to i32, !dbg !16085
  br label %cond.end, !dbg !16086

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv22, %cond.true ], [ %conv25, %cond.false ], !dbg !16087
  %30 = load i32, i32* %j, align 4, !dbg !16089
  %idxprom26 = sext i32 %30 to i64, !dbg !16090
  %31 = load i16*, i16** %top, align 8, !dbg !16090
  %arrayidx27 = getelementptr inbounds i16, i16* %31, i64 %idxprom26, !dbg !16090
  %32 = load i16, i16* %arrayidx27, align 2, !dbg !16090
  %conv28 = zext i16 %32 to i32, !dbg !16090
  %sub = sub nsw i32 %cond, %conv28, !dbg !16091
  %conv29 = sitofp i32 %sub to double, !dbg !16092
  %33 = load double, double* %opacity, align 8, !dbg !16093
  %mul = fmul double %conv29, %33, !dbg !16094
  %add = fadd double %conv11, %mul, !dbg !16095
  %conv30 = fptoui double %add to i16, !dbg !16096
  %34 = load i32, i32* %j, align 4, !dbg !16097
  %idxprom31 = sext i32 %34 to i64, !dbg !16098
  %35 = load i16*, i16** %dst, align 8, !dbg !16098
  %arrayidx32 = getelementptr inbounds i16, i16* %35, i64 %idxprom31, !dbg !16098
  store i16 %conv30, i16* %arrayidx32, align 2, !dbg !16099
  br label %for.inc, !dbg !16100

for.inc:                                          ; preds = %cond.end
  %36 = load i32, i32* %j, align 4, !dbg !16101
  %inc = add nsw i32 %36, 1, !dbg !16101
  store i32 %inc, i32* %j, align 4, !dbg !16101
  br label %for.cond5, !dbg !16103, !llvm.loop !16104

for.end:                                          ; preds = %for.cond5
  %37 = load i64, i64* %dst_linesize.addr, align 8, !dbg !16106
  %38 = load i16*, i16** %dst, align 8, !dbg !16108
  %add.ptr = getelementptr inbounds i16, i16* %38, i64 %37, !dbg !16108
  store i16* %add.ptr, i16** %dst, align 8, !dbg !16108
  %39 = load i64, i64* %top_linesize.addr, align 8, !dbg !16109
  %40 = load i16*, i16** %top, align 8, !dbg !16110
  %add.ptr33 = getelementptr inbounds i16, i16* %40, i64 %39, !dbg !16110
  store i16* %add.ptr33, i16** %top, align 8, !dbg !16110
  %41 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !16111
  %42 = load i16*, i16** %bottom, align 8, !dbg !16112
  %add.ptr34 = getelementptr inbounds i16, i16* %42, i64 %41, !dbg !16112
  store i16* %add.ptr34, i16** %bottom, align 8, !dbg !16112
  br label %for.inc35, !dbg !16113

for.inc35:                                        ; preds = %for.end
  %43 = load i32, i32* %i, align 4, !dbg !16114
  %inc36 = add nsw i32 %43, 1, !dbg !16114
  store i32 %inc36, i32* %i, align 4, !dbg !16114
  br label %for.cond, !dbg !16116, !llvm.loop !16117

for.end37:                                        ; preds = %for.cond
  ret void, !dbg !16119
}

; Function Attrs: nounwind uwtable
define internal void @blend_linearlight_16bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !16121 {
entry:
  %retval.i = alloca i16, align 2
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !13967, metadata !905), !dbg !16122
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !16131, metadata !905), !dbg !16132
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !16133, metadata !905), !dbg !16134
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !16135, metadata !905), !dbg !16136
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !16137, metadata !905), !dbg !16138
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !16139, metadata !905), !dbg !16140
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !16141, metadata !905), !dbg !16142
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !16143, metadata !905), !dbg !16144
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !16145, metadata !905), !dbg !16146
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !16147, metadata !905), !dbg !16148
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !16149, metadata !905), !dbg !16150
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !16151, metadata !905), !dbg !16152
  call void @llvm.dbg.declare(metadata i16** %top, metadata !16153, metadata !905), !dbg !16154
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !16155
  %1 = bitcast i8* %0 to i16*, !dbg !16156
  store i16* %1, i16** %top, align 8, !dbg !16154
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !16157, metadata !905), !dbg !16158
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !16159
  %3 = bitcast i8* %2 to i16*, !dbg !16160
  store i16* %3, i16** %bottom, align 8, !dbg !16158
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !16161, metadata !905), !dbg !16162
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !16163
  %5 = bitcast i8* %4 to i16*, !dbg !16164
  store i16* %5, i16** %dst, align 8, !dbg !16162
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !16165, metadata !905), !dbg !16166
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !16167
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !16168
  %7 = load double, double* %opacity1, align 8, !dbg !16168
  store double %7, double* %opacity, align 8, !dbg !16166
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16169, metadata !905), !dbg !16170
  call void @llvm.dbg.declare(metadata i32* %j, metadata !16171, metadata !905), !dbg !16172
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !16173
  %div = sdiv i64 %8, 2, !dbg !16173
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !16173
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !16174
  %div2 = sdiv i64 %9, 2, !dbg !16174
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !16174
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !16175
  %div3 = sdiv i64 %10, 2, !dbg !16175
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !16175
  store i32 0, i32* %i, align 4, !dbg !16176
  br label %for.cond, !dbg !16177

for.cond:                                         ; preds = %for.inc45, %entry
  %11 = load i32, i32* %i, align 4, !dbg !16178
  %conv = sext i32 %11 to i64, !dbg !16178
  %12 = load i64, i64* %height.addr, align 8, !dbg !16180
  %cmp = icmp slt i64 %conv, %12, !dbg !16181
  br i1 %cmp, label %for.body, label %for.end47, !dbg !16182

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !16183
  br label %for.cond5, !dbg !16185

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !16186
  %conv6 = sext i32 %13 to i64, !dbg !16186
  %14 = load i64, i64* %width.addr, align 8, !dbg !16188
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !16189
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !16190

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !16191
  %idxprom = sext i32 %15 to i64, !dbg !16193
  %16 = load i16*, i16** %top, align 8, !dbg !16193
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !16193
  %17 = load i16, i16* %arrayidx, align 2, !dbg !16193
  %conv10 = zext i16 %17 to i32, !dbg !16193
  %conv11 = sitofp i32 %conv10 to double, !dbg !16193
  %18 = load i32, i32* %j, align 4, !dbg !16194
  %idxprom12 = sext i32 %18 to i64, !dbg !16195
  %19 = load i16*, i16** %bottom, align 8, !dbg !16195
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !16195
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !16195
  %conv14 = zext i16 %20 to i32, !dbg !16195
  %cmp15 = icmp slt i32 %conv14, 32768, !dbg !16196
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !16197

cond.true:                                        ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !16198
  %idxprom17 = sext i32 %21 to i64, !dbg !16200
  %22 = load i16*, i16** %bottom, align 8, !dbg !16200
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !16200
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !16200
  %conv19 = zext i16 %23 to i32, !dbg !16200
  %24 = load i32, i32* %j, align 4, !dbg !16201
  %idxprom20 = sext i32 %24 to i64, !dbg !16202
  %25 = load i16*, i16** %top, align 8, !dbg !16202
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !16202
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !16202
  %conv22 = zext i16 %26 to i32, !dbg !16202
  %mul = mul nsw i32 2, %conv22, !dbg !16203
  %add = add nsw i32 %conv19, %mul, !dbg !16204
  %sub = sub nsw i32 %add, 65535, !dbg !16205
  br label %cond.end, !dbg !16206

cond.false:                                       ; preds = %for.body9
  %27 = load i32, i32* %j, align 4, !dbg !16207
  %idxprom23 = sext i32 %27 to i64, !dbg !16209
  %28 = load i16*, i16** %bottom, align 8, !dbg !16209
  %arrayidx24 = getelementptr inbounds i16, i16* %28, i64 %idxprom23, !dbg !16209
  %29 = load i16, i16* %arrayidx24, align 2, !dbg !16209
  %conv25 = zext i16 %29 to i32, !dbg !16209
  %30 = load i32, i32* %j, align 4, !dbg !16210
  %idxprom26 = sext i32 %30 to i64, !dbg !16211
  %31 = load i16*, i16** %top, align 8, !dbg !16211
  %arrayidx27 = getelementptr inbounds i16, i16* %31, i64 %idxprom26, !dbg !16211
  %32 = load i16, i16* %arrayidx27, align 2, !dbg !16211
  %conv28 = zext i16 %32 to i32, !dbg !16211
  %sub29 = sub nsw i32 %conv28, 32768, !dbg !16212
  %mul30 = mul nsw i32 2, %sub29, !dbg !16213
  %add31 = add nsw i32 %conv25, %mul30, !dbg !16214
  br label %cond.end, !dbg !16215

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %add31, %cond.false ], !dbg !16216
  store i32 %cond, i32* %a.addr.i, align 4, !dbg !16217
  %33 = load i32, i32* %a.addr.i, align 4, !dbg !16218
  %and.i = and i32 %33, -65536, !dbg !16219
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !16219
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !16220

if.then.i:                                        ; preds = %cond.end
  %34 = load i32, i32* %a.addr.i, align 4, !dbg !16221
  %neg.i = xor i32 %34, -1, !dbg !16222
  %shr.i = ashr i32 %neg.i, 31, !dbg !16223
  %conv.i = trunc i32 %shr.i to i16, !dbg !16224
  store i16 %conv.i, i16* %retval.i, align 2, !dbg !16225
  br label %av_clip_uint16_c.exit, !dbg !16225

if.else.i:                                        ; preds = %cond.end
  %35 = load i32, i32* %a.addr.i, align 4, !dbg !16226
  %conv1.i = trunc i32 %35 to i16, !dbg !16226
  store i16 %conv1.i, i16* %retval.i, align 2, !dbg !16227
  br label %av_clip_uint16_c.exit, !dbg !16227

av_clip_uint16_c.exit:                            ; preds = %if.then.i, %if.else.i
  %36 = load i16, i16* %retval.i, align 2, !dbg !16228
  %conv32 = zext i16 %36 to i32, !dbg !16229
  %37 = load i32, i32* %j, align 4, !dbg !16230
  %idxprom33 = sext i32 %37 to i64, !dbg !16231
  %38 = load i16*, i16** %top, align 8, !dbg !16231
  %arrayidx34 = getelementptr inbounds i16, i16* %38, i64 %idxprom33, !dbg !16231
  %39 = load i16, i16* %arrayidx34, align 2, !dbg !16231
  %conv35 = zext i16 %39 to i32, !dbg !16231
  %sub36 = sub nsw i32 %conv32, %conv35, !dbg !16232
  %conv37 = sitofp i32 %sub36 to double, !dbg !16233
  %40 = load double, double* %opacity, align 8, !dbg !16234
  %mul38 = fmul double %conv37, %40, !dbg !16235
  %add39 = fadd double %conv11, %mul38, !dbg !16236
  %conv40 = fptoui double %add39 to i16, !dbg !16237
  %41 = load i32, i32* %j, align 4, !dbg !16238
  %idxprom41 = sext i32 %41 to i64, !dbg !16239
  %42 = load i16*, i16** %dst, align 8, !dbg !16239
  %arrayidx42 = getelementptr inbounds i16, i16* %42, i64 %idxprom41, !dbg !16239
  store i16 %conv40, i16* %arrayidx42, align 2, !dbg !16240
  br label %for.inc, !dbg !16241

for.inc:                                          ; preds = %av_clip_uint16_c.exit
  %43 = load i32, i32* %j, align 4, !dbg !16242
  %inc = add nsw i32 %43, 1, !dbg !16242
  store i32 %inc, i32* %j, align 4, !dbg !16242
  br label %for.cond5, !dbg !16244, !llvm.loop !16245

for.end:                                          ; preds = %for.cond5
  %44 = load i64, i64* %dst_linesize.addr, align 8, !dbg !16247
  %45 = load i16*, i16** %dst, align 8, !dbg !16249
  %add.ptr = getelementptr inbounds i16, i16* %45, i64 %44, !dbg !16249
  store i16* %add.ptr, i16** %dst, align 8, !dbg !16249
  %46 = load i64, i64* %top_linesize.addr, align 8, !dbg !16250
  %47 = load i16*, i16** %top, align 8, !dbg !16251
  %add.ptr43 = getelementptr inbounds i16, i16* %47, i64 %46, !dbg !16251
  store i16* %add.ptr43, i16** %top, align 8, !dbg !16251
  %48 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !16252
  %49 = load i16*, i16** %bottom, align 8, !dbg !16253
  %add.ptr44 = getelementptr inbounds i16, i16* %49, i64 %48, !dbg !16253
  store i16* %add.ptr44, i16** %bottom, align 8, !dbg !16253
  br label %for.inc45, !dbg !16254

for.inc45:                                        ; preds = %for.end
  %50 = load i32, i32* %i, align 4, !dbg !16255
  %inc46 = add nsw i32 %50, 1, !dbg !16255
  store i32 %inc46, i32* %i, align 4, !dbg !16255
  br label %for.cond, !dbg !16257, !llvm.loop !16258

for.end47:                                        ; preds = %for.cond
  ret void, !dbg !16260
}

; Function Attrs: nounwind uwtable
define internal void @blend_multiply_16bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !16262 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !16263, metadata !905), !dbg !16264
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !16265, metadata !905), !dbg !16266
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !16267, metadata !905), !dbg !16268
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !16269, metadata !905), !dbg !16270
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !16271, metadata !905), !dbg !16272
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !16273, metadata !905), !dbg !16274
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !16275, metadata !905), !dbg !16276
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !16277, metadata !905), !dbg !16278
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !16279, metadata !905), !dbg !16280
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !16281, metadata !905), !dbg !16282
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !16283, metadata !905), !dbg !16284
  call void @llvm.dbg.declare(metadata i16** %top, metadata !16285, metadata !905), !dbg !16286
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !16287
  %1 = bitcast i8* %0 to i16*, !dbg !16288
  store i16* %1, i16** %top, align 8, !dbg !16286
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !16289, metadata !905), !dbg !16290
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !16291
  %3 = bitcast i8* %2 to i16*, !dbg !16292
  store i16* %3, i16** %bottom, align 8, !dbg !16290
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !16293, metadata !905), !dbg !16294
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !16295
  %5 = bitcast i8* %4 to i16*, !dbg !16296
  store i16* %5, i16** %dst, align 8, !dbg !16294
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !16297, metadata !905), !dbg !16298
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !16299
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !16300
  %7 = load double, double* %opacity1, align 8, !dbg !16300
  store double %7, double* %opacity, align 8, !dbg !16298
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16301, metadata !905), !dbg !16302
  call void @llvm.dbg.declare(metadata i32* %j, metadata !16303, metadata !905), !dbg !16304
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !16305
  %div = sdiv i64 %8, 2, !dbg !16305
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !16305
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !16306
  %div2 = sdiv i64 %9, 2, !dbg !16306
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !16306
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !16307
  %div3 = sdiv i64 %10, 2, !dbg !16307
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !16307
  store i32 0, i32* %i, align 4, !dbg !16308
  br label %for.cond, !dbg !16310

for.cond:                                         ; preds = %for.inc30, %entry
  %11 = load i32, i32* %i, align 4, !dbg !16311
  %conv = sext i32 %11 to i64, !dbg !16311
  %12 = load i64, i64* %height.addr, align 8, !dbg !16314
  %cmp = icmp slt i64 %conv, %12, !dbg !16315
  br i1 %cmp, label %for.body, label %for.end32, !dbg !16316

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !16317
  br label %for.cond5, !dbg !16321

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !16322
  %conv6 = sext i32 %13 to i64, !dbg !16322
  %14 = load i64, i64* %width.addr, align 8, !dbg !16325
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !16326
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !16327

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !16328
  %idxprom = sext i32 %15 to i64, !dbg !16331
  %16 = load i16*, i16** %top, align 8, !dbg !16331
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !16331
  %17 = load i16, i16* %arrayidx, align 2, !dbg !16331
  %conv10 = zext i16 %17 to i32, !dbg !16331
  %conv11 = sitofp i32 %conv10 to double, !dbg !16331
  %18 = load i32, i32* %j, align 4, !dbg !16332
  %idxprom12 = sext i32 %18 to i64, !dbg !16333
  %19 = load i16*, i16** %top, align 8, !dbg !16333
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !16333
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !16333
  %conv14 = zext i16 %20 to i32, !dbg !16334
  %21 = load i32, i32* %j, align 4, !dbg !16335
  %idxprom15 = sext i32 %21 to i64, !dbg !16336
  %22 = load i16*, i16** %bottom, align 8, !dbg !16336
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !16336
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !16336
  %conv17 = zext i16 %23 to i32, !dbg !16337
  %mul = mul nsw i32 %conv14, %conv17, !dbg !16338
  %div18 = sdiv i32 %mul, 65535, !dbg !16339
  %mul19 = mul nsw i32 1, %div18, !dbg !16340
  %24 = load i32, i32* %j, align 4, !dbg !16341
  %idxprom20 = sext i32 %24 to i64, !dbg !16342
  %25 = load i16*, i16** %top, align 8, !dbg !16342
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !16342
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !16342
  %conv22 = zext i16 %26 to i32, !dbg !16342
  %sub = sub nsw i32 %mul19, %conv22, !dbg !16343
  %conv23 = sitofp i32 %sub to double, !dbg !16344
  %27 = load double, double* %opacity, align 8, !dbg !16345
  %mul24 = fmul double %conv23, %27, !dbg !16346
  %add = fadd double %conv11, %mul24, !dbg !16347
  %conv25 = fptoui double %add to i16, !dbg !16331
  %28 = load i32, i32* %j, align 4, !dbg !16348
  %idxprom26 = sext i32 %28 to i64, !dbg !16349
  %29 = load i16*, i16** %dst, align 8, !dbg !16349
  %arrayidx27 = getelementptr inbounds i16, i16* %29, i64 %idxprom26, !dbg !16349
  store i16 %conv25, i16* %arrayidx27, align 2, !dbg !16350
  br label %for.inc, !dbg !16351

for.inc:                                          ; preds = %for.body9
  %30 = load i32, i32* %j, align 4, !dbg !16352
  %inc = add nsw i32 %30, 1, !dbg !16352
  store i32 %inc, i32* %j, align 4, !dbg !16352
  br label %for.cond5, !dbg !16354, !llvm.loop !16355

for.end:                                          ; preds = %for.cond5
  %31 = load i64, i64* %dst_linesize.addr, align 8, !dbg !16357
  %32 = load i16*, i16** %dst, align 8, !dbg !16359
  %add.ptr = getelementptr inbounds i16, i16* %32, i64 %31, !dbg !16359
  store i16* %add.ptr, i16** %dst, align 8, !dbg !16359
  %33 = load i64, i64* %top_linesize.addr, align 8, !dbg !16360
  %34 = load i16*, i16** %top, align 8, !dbg !16361
  %add.ptr28 = getelementptr inbounds i16, i16* %34, i64 %33, !dbg !16361
  store i16* %add.ptr28, i16** %top, align 8, !dbg !16361
  %35 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !16362
  %36 = load i16*, i16** %bottom, align 8, !dbg !16363
  %add.ptr29 = getelementptr inbounds i16, i16* %36, i64 %35, !dbg !16363
  store i16* %add.ptr29, i16** %bottom, align 8, !dbg !16363
  br label %for.inc30, !dbg !16364

for.inc30:                                        ; preds = %for.end
  %37 = load i32, i32* %i, align 4, !dbg !16365
  %inc31 = add nsw i32 %37, 1, !dbg !16365
  store i32 %inc31, i32* %i, align 4, !dbg !16365
  br label %for.cond, !dbg !16367, !llvm.loop !16368

for.end32:                                        ; preds = %for.cond
  ret void, !dbg !16370
}

; Function Attrs: nounwind uwtable
define internal void @blend_multiply128_16bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !16372 {
entry:
  %retval.i = alloca i16, align 2
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !13967, metadata !905), !dbg !16373
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !16382, metadata !905), !dbg !16383
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !16384, metadata !905), !dbg !16385
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !16386, metadata !905), !dbg !16387
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !16388, metadata !905), !dbg !16389
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !16390, metadata !905), !dbg !16391
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !16392, metadata !905), !dbg !16393
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !16394, metadata !905), !dbg !16395
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !16396, metadata !905), !dbg !16397
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !16398, metadata !905), !dbg !16399
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !16400, metadata !905), !dbg !16401
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !16402, metadata !905), !dbg !16403
  call void @llvm.dbg.declare(metadata i16** %top, metadata !16404, metadata !905), !dbg !16405
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !16406
  %1 = bitcast i8* %0 to i16*, !dbg !16407
  store i16* %1, i16** %top, align 8, !dbg !16405
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !16408, metadata !905), !dbg !16409
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !16410
  %3 = bitcast i8* %2 to i16*, !dbg !16411
  store i16* %3, i16** %bottom, align 8, !dbg !16409
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !16412, metadata !905), !dbg !16413
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !16414
  %5 = bitcast i8* %4 to i16*, !dbg !16415
  store i16* %5, i16** %dst, align 8, !dbg !16413
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !16416, metadata !905), !dbg !16417
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !16418
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !16419
  %7 = load double, double* %opacity1, align 8, !dbg !16419
  store double %7, double* %opacity, align 8, !dbg !16417
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16420, metadata !905), !dbg !16421
  call void @llvm.dbg.declare(metadata i32* %j, metadata !16422, metadata !905), !dbg !16423
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !16424
  %div = sdiv i64 %8, 2, !dbg !16424
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !16424
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !16425
  %div2 = sdiv i64 %9, 2, !dbg !16425
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !16425
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !16426
  %div3 = sdiv i64 %10, 2, !dbg !16426
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !16426
  store i32 0, i32* %i, align 4, !dbg !16427
  br label %for.cond, !dbg !16428

for.cond:                                         ; preds = %for.inc34, %entry
  %11 = load i32, i32* %i, align 4, !dbg !16429
  %conv = sext i32 %11 to i64, !dbg !16429
  %12 = load i64, i64* %height.addr, align 8, !dbg !16431
  %cmp = icmp slt i64 %conv, %12, !dbg !16432
  br i1 %cmp, label %for.body, label %for.end36, !dbg !16433

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !16434
  br label %for.cond5, !dbg !16436

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !16437
  %conv6 = sext i32 %13 to i64, !dbg !16437
  %14 = load i64, i64* %width.addr, align 8, !dbg !16439
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !16440
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !16441

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !16442
  %idxprom = sext i32 %15 to i64, !dbg !16443
  %16 = load i16*, i16** %top, align 8, !dbg !16443
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !16443
  %17 = load i16, i16* %arrayidx, align 2, !dbg !16443
  %conv10 = zext i16 %17 to i32, !dbg !16443
  %conv11 = sitofp i32 %conv10 to double, !dbg !16443
  %18 = load i32, i32* %j, align 4, !dbg !16444
  %idxprom12 = sext i32 %18 to i64, !dbg !16445
  %19 = load i16*, i16** %top, align 8, !dbg !16445
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !16445
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !16445
  %conv14 = zext i16 %20 to i32, !dbg !16445
  %sub = sub nsw i32 %conv14, 32768, !dbg !16446
  %21 = load i32, i32* %j, align 4, !dbg !16447
  %idxprom15 = sext i32 %21 to i64, !dbg !16448
  %22 = load i16*, i16** %bottom, align 8, !dbg !16448
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !16448
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !16448
  %conv17 = zext i16 %23 to i32, !dbg !16448
  %mul = mul nsw i32 %sub, %conv17, !dbg !16449
  %conv18 = sitofp i32 %mul to double, !dbg !16450
  %div19 = fdiv double %conv18, 8.192000e+03, !dbg !16451
  %add = fadd double %div19, 3.276800e+04, !dbg !16452
  %conv20 = fptosi double %add to i32, !dbg !16450
  store i32 %conv20, i32* %a.addr.i, align 4, !dbg !16453
  %24 = load i32, i32* %a.addr.i, align 4, !dbg !16454
  %and.i = and i32 %24, -65536, !dbg !16455
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !16455
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !16456

if.then.i:                                        ; preds = %for.body9
  %25 = load i32, i32* %a.addr.i, align 4, !dbg !16457
  %neg.i = xor i32 %25, -1, !dbg !16458
  %shr.i = ashr i32 %neg.i, 31, !dbg !16459
  %conv.i = trunc i32 %shr.i to i16, !dbg !16460
  store i16 %conv.i, i16* %retval.i, align 2, !dbg !16461
  br label %av_clip_uint16_c.exit, !dbg !16461

if.else.i:                                        ; preds = %for.body9
  %26 = load i32, i32* %a.addr.i, align 4, !dbg !16462
  %conv1.i = trunc i32 %26 to i16, !dbg !16462
  store i16 %conv1.i, i16* %retval.i, align 2, !dbg !16463
  br label %av_clip_uint16_c.exit, !dbg !16463

av_clip_uint16_c.exit:                            ; preds = %if.then.i, %if.else.i
  %27 = load i16, i16* %retval.i, align 2, !dbg !16464
  %conv21 = zext i16 %27 to i32, !dbg !16465
  %28 = load i32, i32* %j, align 4, !dbg !16466
  %idxprom22 = sext i32 %28 to i64, !dbg !16467
  %29 = load i16*, i16** %top, align 8, !dbg !16467
  %arrayidx23 = getelementptr inbounds i16, i16* %29, i64 %idxprom22, !dbg !16467
  %30 = load i16, i16* %arrayidx23, align 2, !dbg !16467
  %conv24 = zext i16 %30 to i32, !dbg !16467
  %sub25 = sub nsw i32 %conv21, %conv24, !dbg !16468
  %conv26 = sitofp i32 %sub25 to double, !dbg !16469
  %31 = load double, double* %opacity, align 8, !dbg !16470
  %mul27 = fmul double %conv26, %31, !dbg !16471
  %add28 = fadd double %conv11, %mul27, !dbg !16472
  %conv29 = fptoui double %add28 to i16, !dbg !16443
  %32 = load i32, i32* %j, align 4, !dbg !16473
  %idxprom30 = sext i32 %32 to i64, !dbg !16474
  %33 = load i16*, i16** %dst, align 8, !dbg !16474
  %arrayidx31 = getelementptr inbounds i16, i16* %33, i64 %idxprom30, !dbg !16474
  store i16 %conv29, i16* %arrayidx31, align 2, !dbg !16475
  br label %for.inc, !dbg !16476

for.inc:                                          ; preds = %av_clip_uint16_c.exit
  %34 = load i32, i32* %j, align 4, !dbg !16477
  %inc = add nsw i32 %34, 1, !dbg !16477
  store i32 %inc, i32* %j, align 4, !dbg !16477
  br label %for.cond5, !dbg !16479, !llvm.loop !16480

for.end:                                          ; preds = %for.cond5
  %35 = load i64, i64* %dst_linesize.addr, align 8, !dbg !16482
  %36 = load i16*, i16** %dst, align 8, !dbg !16484
  %add.ptr = getelementptr inbounds i16, i16* %36, i64 %35, !dbg !16484
  store i16* %add.ptr, i16** %dst, align 8, !dbg !16484
  %37 = load i64, i64* %top_linesize.addr, align 8, !dbg !16485
  %38 = load i16*, i16** %top, align 8, !dbg !16486
  %add.ptr32 = getelementptr inbounds i16, i16* %38, i64 %37, !dbg !16486
  store i16* %add.ptr32, i16** %top, align 8, !dbg !16486
  %39 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !16487
  %40 = load i16*, i16** %bottom, align 8, !dbg !16488
  %add.ptr33 = getelementptr inbounds i16, i16* %40, i64 %39, !dbg !16488
  store i16* %add.ptr33, i16** %bottom, align 8, !dbg !16488
  br label %for.inc34, !dbg !16489

for.inc34:                                        ; preds = %for.end
  %41 = load i32, i32* %i, align 4, !dbg !16490
  %inc35 = add nsw i32 %41, 1, !dbg !16490
  store i32 %inc35, i32* %i, align 4, !dbg !16490
  br label %for.cond, !dbg !16492, !llvm.loop !16493

for.end36:                                        ; preds = %for.cond
  ret void, !dbg !16495
}

; Function Attrs: nounwind uwtable
define internal void @blend_negation_16bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !16497 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !16498, metadata !905), !dbg !16499
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !16500, metadata !905), !dbg !16501
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !16502, metadata !905), !dbg !16503
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !16504, metadata !905), !dbg !16505
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !16506, metadata !905), !dbg !16507
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !16508, metadata !905), !dbg !16509
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !16510, metadata !905), !dbg !16511
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !16512, metadata !905), !dbg !16513
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !16514, metadata !905), !dbg !16515
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !16516, metadata !905), !dbg !16517
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !16518, metadata !905), !dbg !16519
  call void @llvm.dbg.declare(metadata i16** %top, metadata !16520, metadata !905), !dbg !16521
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !16522
  %1 = bitcast i8* %0 to i16*, !dbg !16523
  store i16* %1, i16** %top, align 8, !dbg !16521
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !16524, metadata !905), !dbg !16525
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !16526
  %3 = bitcast i8* %2 to i16*, !dbg !16527
  store i16* %3, i16** %bottom, align 8, !dbg !16525
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !16528, metadata !905), !dbg !16529
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !16530
  %5 = bitcast i8* %4 to i16*, !dbg !16531
  store i16* %5, i16** %dst, align 8, !dbg !16529
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !16532, metadata !905), !dbg !16533
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !16534
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !16535
  %7 = load double, double* %opacity1, align 8, !dbg !16535
  store double %7, double* %opacity, align 8, !dbg !16533
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16536, metadata !905), !dbg !16537
  call void @llvm.dbg.declare(metadata i32* %j, metadata !16538, metadata !905), !dbg !16539
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !16540
  %div = sdiv i64 %8, 2, !dbg !16540
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !16540
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !16541
  %div2 = sdiv i64 %9, 2, !dbg !16541
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !16541
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !16542
  %div3 = sdiv i64 %10, 2, !dbg !16542
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !16542
  store i32 0, i32* %i, align 4, !dbg !16543
  br label %for.cond, !dbg !16545

for.cond:                                         ; preds = %for.inc49, %entry
  %11 = load i32, i32* %i, align 4, !dbg !16546
  %conv = sext i32 %11 to i64, !dbg !16546
  %12 = load i64, i64* %height.addr, align 8, !dbg !16549
  %cmp = icmp slt i64 %conv, %12, !dbg !16550
  br i1 %cmp, label %for.body, label %for.end51, !dbg !16551

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !16552
  br label %for.cond5, !dbg !16556

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !16557
  %conv6 = sext i32 %13 to i64, !dbg !16557
  %14 = load i64, i64* %width.addr, align 8, !dbg !16560
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !16561
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !16562

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !16563
  %idxprom = sext i32 %15 to i64, !dbg !16566
  %16 = load i16*, i16** %top, align 8, !dbg !16566
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !16566
  %17 = load i16, i16* %arrayidx, align 2, !dbg !16566
  %conv10 = zext i16 %17 to i32, !dbg !16566
  %conv11 = sitofp i32 %conv10 to double, !dbg !16566
  %18 = load i32, i32* %j, align 4, !dbg !16567
  %idxprom12 = sext i32 %18 to i64, !dbg !16568
  %19 = load i16*, i16** %top, align 8, !dbg !16568
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !16568
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !16568
  %conv14 = zext i16 %20 to i32, !dbg !16568
  %sub = sub nsw i32 65535, %conv14, !dbg !16569
  %21 = load i32, i32* %j, align 4, !dbg !16570
  %idxprom15 = sext i32 %21 to i64, !dbg !16571
  %22 = load i16*, i16** %bottom, align 8, !dbg !16571
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !16571
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !16571
  %conv17 = zext i16 %23 to i32, !dbg !16571
  %sub18 = sub nsw i32 %sub, %conv17, !dbg !16572
  %cmp19 = icmp sge i32 %sub18, 0, !dbg !16573
  br i1 %cmp19, label %cond.true, label %cond.false, !dbg !16574

cond.true:                                        ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !16575
  %idxprom21 = sext i32 %24 to i64, !dbg !16577
  %25 = load i16*, i16** %top, align 8, !dbg !16577
  %arrayidx22 = getelementptr inbounds i16, i16* %25, i64 %idxprom21, !dbg !16577
  %26 = load i16, i16* %arrayidx22, align 2, !dbg !16577
  %conv23 = zext i16 %26 to i32, !dbg !16577
  %sub24 = sub nsw i32 65535, %conv23, !dbg !16578
  %27 = load i32, i32* %j, align 4, !dbg !16579
  %idxprom25 = sext i32 %27 to i64, !dbg !16580
  %28 = load i16*, i16** %bottom, align 8, !dbg !16580
  %arrayidx26 = getelementptr inbounds i16, i16* %28, i64 %idxprom25, !dbg !16580
  %29 = load i16, i16* %arrayidx26, align 2, !dbg !16580
  %conv27 = zext i16 %29 to i32, !dbg !16580
  %sub28 = sub nsw i32 %sub24, %conv27, !dbg !16581
  br label %cond.end, !dbg !16582

cond.false:                                       ; preds = %for.body9
  %30 = load i32, i32* %j, align 4, !dbg !16583
  %idxprom29 = sext i32 %30 to i64, !dbg !16585
  %31 = load i16*, i16** %top, align 8, !dbg !16585
  %arrayidx30 = getelementptr inbounds i16, i16* %31, i64 %idxprom29, !dbg !16585
  %32 = load i16, i16* %arrayidx30, align 2, !dbg !16585
  %conv31 = zext i16 %32 to i32, !dbg !16585
  %sub32 = sub nsw i32 65535, %conv31, !dbg !16586
  %33 = load i32, i32* %j, align 4, !dbg !16587
  %idxprom33 = sext i32 %33 to i64, !dbg !16588
  %34 = load i16*, i16** %bottom, align 8, !dbg !16588
  %arrayidx34 = getelementptr inbounds i16, i16* %34, i64 %idxprom33, !dbg !16588
  %35 = load i16, i16* %arrayidx34, align 2, !dbg !16588
  %conv35 = zext i16 %35 to i32, !dbg !16588
  %sub36 = sub nsw i32 %sub32, %conv35, !dbg !16589
  %sub37 = sub nsw i32 0, %sub36, !dbg !16590
  br label %cond.end, !dbg !16591

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub28, %cond.true ], [ %sub37, %cond.false ], !dbg !16592
  %sub38 = sub nsw i32 65535, %cond, !dbg !16594
  %36 = load i32, i32* %j, align 4, !dbg !16595
  %idxprom39 = sext i32 %36 to i64, !dbg !16596
  %37 = load i16*, i16** %top, align 8, !dbg !16596
  %arrayidx40 = getelementptr inbounds i16, i16* %37, i64 %idxprom39, !dbg !16596
  %38 = load i16, i16* %arrayidx40, align 2, !dbg !16596
  %conv41 = zext i16 %38 to i32, !dbg !16596
  %sub42 = sub nsw i32 %sub38, %conv41, !dbg !16597
  %conv43 = sitofp i32 %sub42 to double, !dbg !16598
  %39 = load double, double* %opacity, align 8, !dbg !16599
  %mul = fmul double %conv43, %39, !dbg !16600
  %add = fadd double %conv11, %mul, !dbg !16601
  %conv44 = fptoui double %add to i16, !dbg !16602
  %40 = load i32, i32* %j, align 4, !dbg !16603
  %idxprom45 = sext i32 %40 to i64, !dbg !16604
  %41 = load i16*, i16** %dst, align 8, !dbg !16604
  %arrayidx46 = getelementptr inbounds i16, i16* %41, i64 %idxprom45, !dbg !16604
  store i16 %conv44, i16* %arrayidx46, align 2, !dbg !16605
  br label %for.inc, !dbg !16606

for.inc:                                          ; preds = %cond.end
  %42 = load i32, i32* %j, align 4, !dbg !16607
  %inc = add nsw i32 %42, 1, !dbg !16607
  store i32 %inc, i32* %j, align 4, !dbg !16607
  br label %for.cond5, !dbg !16609, !llvm.loop !16610

for.end:                                          ; preds = %for.cond5
  %43 = load i64, i64* %dst_linesize.addr, align 8, !dbg !16612
  %44 = load i16*, i16** %dst, align 8, !dbg !16614
  %add.ptr = getelementptr inbounds i16, i16* %44, i64 %43, !dbg !16614
  store i16* %add.ptr, i16** %dst, align 8, !dbg !16614
  %45 = load i64, i64* %top_linesize.addr, align 8, !dbg !16615
  %46 = load i16*, i16** %top, align 8, !dbg !16616
  %add.ptr47 = getelementptr inbounds i16, i16* %46, i64 %45, !dbg !16616
  store i16* %add.ptr47, i16** %top, align 8, !dbg !16616
  %47 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !16617
  %48 = load i16*, i16** %bottom, align 8, !dbg !16618
  %add.ptr48 = getelementptr inbounds i16, i16* %48, i64 %47, !dbg !16618
  store i16* %add.ptr48, i16** %bottom, align 8, !dbg !16618
  br label %for.inc49, !dbg !16619

for.inc49:                                        ; preds = %for.end
  %49 = load i32, i32* %i, align 4, !dbg !16620
  %inc50 = add nsw i32 %49, 1, !dbg !16620
  store i32 %inc50, i32* %i, align 4, !dbg !16620
  br label %for.cond, !dbg !16622, !llvm.loop !16623

for.end51:                                        ; preds = %for.cond
  ret void, !dbg !16625
}

; Function Attrs: nounwind uwtable
define internal void @blend_or_16bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !16627 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !16628, metadata !905), !dbg !16629
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !16630, metadata !905), !dbg !16631
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !16632, metadata !905), !dbg !16633
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !16634, metadata !905), !dbg !16635
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !16636, metadata !905), !dbg !16637
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !16638, metadata !905), !dbg !16639
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !16640, metadata !905), !dbg !16641
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !16642, metadata !905), !dbg !16643
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !16644, metadata !905), !dbg !16645
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !16646, metadata !905), !dbg !16647
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !16648, metadata !905), !dbg !16649
  call void @llvm.dbg.declare(metadata i16** %top, metadata !16650, metadata !905), !dbg !16651
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !16652
  %1 = bitcast i8* %0 to i16*, !dbg !16653
  store i16* %1, i16** %top, align 8, !dbg !16651
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !16654, metadata !905), !dbg !16655
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !16656
  %3 = bitcast i8* %2 to i16*, !dbg !16657
  store i16* %3, i16** %bottom, align 8, !dbg !16655
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !16658, metadata !905), !dbg !16659
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !16660
  %5 = bitcast i8* %4 to i16*, !dbg !16661
  store i16* %5, i16** %dst, align 8, !dbg !16659
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !16662, metadata !905), !dbg !16663
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !16664
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !16665
  %7 = load double, double* %opacity1, align 8, !dbg !16665
  store double %7, double* %opacity, align 8, !dbg !16663
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16666, metadata !905), !dbg !16667
  call void @llvm.dbg.declare(metadata i32* %j, metadata !16668, metadata !905), !dbg !16669
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !16670
  %div = sdiv i64 %8, 2, !dbg !16670
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !16670
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !16671
  %div2 = sdiv i64 %9, 2, !dbg !16671
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !16671
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !16672
  %div3 = sdiv i64 %10, 2, !dbg !16672
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !16672
  store i32 0, i32* %i, align 4, !dbg !16673
  br label %for.cond, !dbg !16675

for.cond:                                         ; preds = %for.inc27, %entry
  %11 = load i32, i32* %i, align 4, !dbg !16676
  %conv = sext i32 %11 to i64, !dbg !16676
  %12 = load i64, i64* %height.addr, align 8, !dbg !16679
  %cmp = icmp slt i64 %conv, %12, !dbg !16680
  br i1 %cmp, label %for.body, label %for.end29, !dbg !16681

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !16682
  br label %for.cond5, !dbg !16686

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !16687
  %conv6 = sext i32 %13 to i64, !dbg !16687
  %14 = load i64, i64* %width.addr, align 8, !dbg !16690
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !16691
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !16692

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !16693
  %idxprom = sext i32 %15 to i64, !dbg !16696
  %16 = load i16*, i16** %top, align 8, !dbg !16696
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !16696
  %17 = load i16, i16* %arrayidx, align 2, !dbg !16696
  %conv10 = zext i16 %17 to i32, !dbg !16696
  %conv11 = sitofp i32 %conv10 to double, !dbg !16696
  %18 = load i32, i32* %j, align 4, !dbg !16697
  %idxprom12 = sext i32 %18 to i64, !dbg !16698
  %19 = load i16*, i16** %top, align 8, !dbg !16698
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !16698
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !16698
  %conv14 = zext i16 %20 to i32, !dbg !16698
  %21 = load i32, i32* %j, align 4, !dbg !16699
  %idxprom15 = sext i32 %21 to i64, !dbg !16700
  %22 = load i16*, i16** %bottom, align 8, !dbg !16700
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !16700
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !16700
  %conv17 = zext i16 %23 to i32, !dbg !16700
  %or = or i32 %conv14, %conv17, !dbg !16701
  %24 = load i32, i32* %j, align 4, !dbg !16702
  %idxprom18 = sext i32 %24 to i64, !dbg !16703
  %25 = load i16*, i16** %top, align 8, !dbg !16703
  %arrayidx19 = getelementptr inbounds i16, i16* %25, i64 %idxprom18, !dbg !16703
  %26 = load i16, i16* %arrayidx19, align 2, !dbg !16703
  %conv20 = zext i16 %26 to i32, !dbg !16703
  %sub = sub nsw i32 %or, %conv20, !dbg !16704
  %conv21 = sitofp i32 %sub to double, !dbg !16705
  %27 = load double, double* %opacity, align 8, !dbg !16706
  %mul = fmul double %conv21, %27, !dbg !16707
  %add = fadd double %conv11, %mul, !dbg !16708
  %conv22 = fptoui double %add to i16, !dbg !16696
  %28 = load i32, i32* %j, align 4, !dbg !16709
  %idxprom23 = sext i32 %28 to i64, !dbg !16710
  %29 = load i16*, i16** %dst, align 8, !dbg !16710
  %arrayidx24 = getelementptr inbounds i16, i16* %29, i64 %idxprom23, !dbg !16710
  store i16 %conv22, i16* %arrayidx24, align 2, !dbg !16711
  br label %for.inc, !dbg !16712

for.inc:                                          ; preds = %for.body9
  %30 = load i32, i32* %j, align 4, !dbg !16713
  %inc = add nsw i32 %30, 1, !dbg !16713
  store i32 %inc, i32* %j, align 4, !dbg !16713
  br label %for.cond5, !dbg !16715, !llvm.loop !16716

for.end:                                          ; preds = %for.cond5
  %31 = load i64, i64* %dst_linesize.addr, align 8, !dbg !16718
  %32 = load i16*, i16** %dst, align 8, !dbg !16720
  %add.ptr = getelementptr inbounds i16, i16* %32, i64 %31, !dbg !16720
  store i16* %add.ptr, i16** %dst, align 8, !dbg !16720
  %33 = load i64, i64* %top_linesize.addr, align 8, !dbg !16721
  %34 = load i16*, i16** %top, align 8, !dbg !16722
  %add.ptr25 = getelementptr inbounds i16, i16* %34, i64 %33, !dbg !16722
  store i16* %add.ptr25, i16** %top, align 8, !dbg !16722
  %35 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !16723
  %36 = load i16*, i16** %bottom, align 8, !dbg !16724
  %add.ptr26 = getelementptr inbounds i16, i16* %36, i64 %35, !dbg !16724
  store i16* %add.ptr26, i16** %bottom, align 8, !dbg !16724
  br label %for.inc27, !dbg !16725

for.inc27:                                        ; preds = %for.end
  %37 = load i32, i32* %i, align 4, !dbg !16726
  %inc28 = add nsw i32 %37, 1, !dbg !16726
  store i32 %inc28, i32* %i, align 4, !dbg !16726
  br label %for.cond, !dbg !16728, !llvm.loop !16729

for.end29:                                        ; preds = %for.cond
  ret void, !dbg !16731
}

; Function Attrs: nounwind uwtable
define internal void @blend_overlay_16bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !16733 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !16734, metadata !905), !dbg !16735
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !16736, metadata !905), !dbg !16737
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !16738, metadata !905), !dbg !16739
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !16740, metadata !905), !dbg !16741
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !16742, metadata !905), !dbg !16743
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !16744, metadata !905), !dbg !16745
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !16746, metadata !905), !dbg !16747
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !16748, metadata !905), !dbg !16749
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !16750, metadata !905), !dbg !16751
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !16752, metadata !905), !dbg !16753
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !16754, metadata !905), !dbg !16755
  call void @llvm.dbg.declare(metadata i16** %top, metadata !16756, metadata !905), !dbg !16757
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !16758
  %1 = bitcast i8* %0 to i16*, !dbg !16759
  store i16* %1, i16** %top, align 8, !dbg !16757
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !16760, metadata !905), !dbg !16761
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !16762
  %3 = bitcast i8* %2 to i16*, !dbg !16763
  store i16* %3, i16** %bottom, align 8, !dbg !16761
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !16764, metadata !905), !dbg !16765
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !16766
  %5 = bitcast i8* %4 to i16*, !dbg !16767
  store i16* %5, i16** %dst, align 8, !dbg !16765
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !16768, metadata !905), !dbg !16769
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !16770
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !16771
  %7 = load double, double* %opacity1, align 8, !dbg !16771
  store double %7, double* %opacity, align 8, !dbg !16769
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16772, metadata !905), !dbg !16773
  call void @llvm.dbg.declare(metadata i32* %j, metadata !16774, metadata !905), !dbg !16775
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !16776
  %div = sdiv i64 %8, 2, !dbg !16776
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !16776
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !16777
  %div2 = sdiv i64 %9, 2, !dbg !16777
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !16777
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !16778
  %div3 = sdiv i64 %10, 2, !dbg !16778
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !16778
  store i32 0, i32* %i, align 4, !dbg !16779
  br label %for.cond, !dbg !16781

for.cond:                                         ; preds = %for.inc47, %entry
  %11 = load i32, i32* %i, align 4, !dbg !16782
  %conv = sext i32 %11 to i64, !dbg !16782
  %12 = load i64, i64* %height.addr, align 8, !dbg !16785
  %cmp = icmp slt i64 %conv, %12, !dbg !16786
  br i1 %cmp, label %for.body, label %for.end49, !dbg !16787

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !16788
  br label %for.cond5, !dbg !16792

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !16793
  %conv6 = sext i32 %13 to i64, !dbg !16793
  %14 = load i64, i64* %width.addr, align 8, !dbg !16796
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !16797
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !16798

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !16799
  %idxprom = sext i32 %15 to i64, !dbg !16802
  %16 = load i16*, i16** %top, align 8, !dbg !16802
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !16802
  %17 = load i16, i16* %arrayidx, align 2, !dbg !16802
  %conv10 = zext i16 %17 to i32, !dbg !16802
  %conv11 = sitofp i32 %conv10 to double, !dbg !16802
  %18 = load i32, i32* %j, align 4, !dbg !16803
  %idxprom12 = sext i32 %18 to i64, !dbg !16804
  %19 = load i16*, i16** %top, align 8, !dbg !16804
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !16804
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !16804
  %conv14 = zext i16 %20 to i32, !dbg !16804
  %cmp15 = icmp slt i32 %conv14, 32768, !dbg !16805
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !16806

cond.true:                                        ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !16807
  %idxprom17 = sext i32 %21 to i64, !dbg !16809
  %22 = load i16*, i16** %top, align 8, !dbg !16809
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !16809
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !16809
  %conv19 = zext i16 %23 to i32, !dbg !16810
  %24 = load i32, i32* %j, align 4, !dbg !16811
  %idxprom20 = sext i32 %24 to i64, !dbg !16812
  %25 = load i16*, i16** %bottom, align 8, !dbg !16812
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !16812
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !16812
  %conv22 = zext i16 %26 to i32, !dbg !16813
  %mul = mul nsw i32 %conv19, %conv22, !dbg !16814
  %div23 = sdiv i32 %mul, 65535, !dbg !16815
  %mul24 = mul nsw i32 2, %div23, !dbg !16816
  br label %cond.end, !dbg !16817

cond.false:                                       ; preds = %for.body9
  %27 = load i32, i32* %j, align 4, !dbg !16818
  %idxprom25 = sext i32 %27 to i64, !dbg !16820
  %28 = load i16*, i16** %top, align 8, !dbg !16820
  %arrayidx26 = getelementptr inbounds i16, i16* %28, i64 %idxprom25, !dbg !16820
  %29 = load i16, i16* %arrayidx26, align 2, !dbg !16820
  %conv27 = zext i16 %29 to i32, !dbg !16821
  %sub = sub nsw i32 65535, %conv27, !dbg !16822
  %30 = load i32, i32* %j, align 4, !dbg !16823
  %idxprom28 = sext i32 %30 to i64, !dbg !16824
  %31 = load i16*, i16** %bottom, align 8, !dbg !16824
  %arrayidx29 = getelementptr inbounds i16, i16* %31, i64 %idxprom28, !dbg !16824
  %32 = load i16, i16* %arrayidx29, align 2, !dbg !16824
  %conv30 = zext i16 %32 to i32, !dbg !16825
  %sub31 = sub nsw i32 65535, %conv30, !dbg !16826
  %mul32 = mul nsw i32 %sub, %sub31, !dbg !16827
  %div33 = sdiv i32 %mul32, 65535, !dbg !16828
  %mul34 = mul nsw i32 2, %div33, !dbg !16829
  %sub35 = sub nsw i32 65535, %mul34, !dbg !16830
  br label %cond.end, !dbg !16831

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %mul24, %cond.true ], [ %sub35, %cond.false ], !dbg !16832
  %33 = load i32, i32* %j, align 4, !dbg !16834
  %idxprom36 = sext i32 %33 to i64, !dbg !16835
  %34 = load i16*, i16** %top, align 8, !dbg !16835
  %arrayidx37 = getelementptr inbounds i16, i16* %34, i64 %idxprom36, !dbg !16835
  %35 = load i16, i16* %arrayidx37, align 2, !dbg !16835
  %conv38 = zext i16 %35 to i32, !dbg !16835
  %sub39 = sub nsw i32 %cond, %conv38, !dbg !16836
  %conv40 = sitofp i32 %sub39 to double, !dbg !16837
  %36 = load double, double* %opacity, align 8, !dbg !16838
  %mul41 = fmul double %conv40, %36, !dbg !16839
  %add = fadd double %conv11, %mul41, !dbg !16840
  %conv42 = fptoui double %add to i16, !dbg !16841
  %37 = load i32, i32* %j, align 4, !dbg !16842
  %idxprom43 = sext i32 %37 to i64, !dbg !16843
  %38 = load i16*, i16** %dst, align 8, !dbg !16843
  %arrayidx44 = getelementptr inbounds i16, i16* %38, i64 %idxprom43, !dbg !16843
  store i16 %conv42, i16* %arrayidx44, align 2, !dbg !16844
  br label %for.inc, !dbg !16845

for.inc:                                          ; preds = %cond.end
  %39 = load i32, i32* %j, align 4, !dbg !16846
  %inc = add nsw i32 %39, 1, !dbg !16846
  store i32 %inc, i32* %j, align 4, !dbg !16846
  br label %for.cond5, !dbg !16848, !llvm.loop !16849

for.end:                                          ; preds = %for.cond5
  %40 = load i64, i64* %dst_linesize.addr, align 8, !dbg !16851
  %41 = load i16*, i16** %dst, align 8, !dbg !16853
  %add.ptr = getelementptr inbounds i16, i16* %41, i64 %40, !dbg !16853
  store i16* %add.ptr, i16** %dst, align 8, !dbg !16853
  %42 = load i64, i64* %top_linesize.addr, align 8, !dbg !16854
  %43 = load i16*, i16** %top, align 8, !dbg !16855
  %add.ptr45 = getelementptr inbounds i16, i16* %43, i64 %42, !dbg !16855
  store i16* %add.ptr45, i16** %top, align 8, !dbg !16855
  %44 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !16856
  %45 = load i16*, i16** %bottom, align 8, !dbg !16857
  %add.ptr46 = getelementptr inbounds i16, i16* %45, i64 %44, !dbg !16857
  store i16* %add.ptr46, i16** %bottom, align 8, !dbg !16857
  br label %for.inc47, !dbg !16858

for.inc47:                                        ; preds = %for.end
  %46 = load i32, i32* %i, align 4, !dbg !16859
  %inc48 = add nsw i32 %46, 1, !dbg !16859
  store i32 %inc48, i32* %i, align 4, !dbg !16859
  br label %for.cond, !dbg !16861, !llvm.loop !16862

for.end49:                                        ; preds = %for.cond
  ret void, !dbg !16864
}

; Function Attrs: nounwind uwtable
define internal void @blend_phoenix_16bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !16866 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !16867, metadata !905), !dbg !16868
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !16869, metadata !905), !dbg !16870
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !16871, metadata !905), !dbg !16872
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !16873, metadata !905), !dbg !16874
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !16875, metadata !905), !dbg !16876
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !16877, metadata !905), !dbg !16878
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !16879, metadata !905), !dbg !16880
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !16881, metadata !905), !dbg !16882
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !16883, metadata !905), !dbg !16884
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !16885, metadata !905), !dbg !16886
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !16887, metadata !905), !dbg !16888
  call void @llvm.dbg.declare(metadata i16** %top, metadata !16889, metadata !905), !dbg !16890
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !16891
  %1 = bitcast i8* %0 to i16*, !dbg !16892
  store i16* %1, i16** %top, align 8, !dbg !16890
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !16893, metadata !905), !dbg !16894
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !16895
  %3 = bitcast i8* %2 to i16*, !dbg !16896
  store i16* %3, i16** %bottom, align 8, !dbg !16894
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !16897, metadata !905), !dbg !16898
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !16899
  %5 = bitcast i8* %4 to i16*, !dbg !16900
  store i16* %5, i16** %dst, align 8, !dbg !16898
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !16901, metadata !905), !dbg !16902
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !16903
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !16904
  %7 = load double, double* %opacity1, align 8, !dbg !16904
  store double %7, double* %opacity, align 8, !dbg !16902
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16905, metadata !905), !dbg !16906
  call void @llvm.dbg.declare(metadata i32* %j, metadata !16907, metadata !905), !dbg !16908
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !16909
  %div = sdiv i64 %8, 2, !dbg !16909
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !16909
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !16910
  %div2 = sdiv i64 %9, 2, !dbg !16910
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !16910
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !16911
  %div3 = sdiv i64 %10, 2, !dbg !16911
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !16911
  store i32 0, i32* %i, align 4, !dbg !16912
  br label %for.cond, !dbg !16914

for.cond:                                         ; preds = %for.inc55, %entry
  %11 = load i32, i32* %i, align 4, !dbg !16915
  %conv = sext i32 %11 to i64, !dbg !16915
  %12 = load i64, i64* %height.addr, align 8, !dbg !16918
  %cmp = icmp slt i64 %conv, %12, !dbg !16919
  br i1 %cmp, label %for.body, label %for.end57, !dbg !16920

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !16921
  br label %for.cond5, !dbg !16925

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !16926
  %conv6 = sext i32 %13 to i64, !dbg !16926
  %14 = load i64, i64* %width.addr, align 8, !dbg !16929
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !16930
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !16931

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !16932
  %idxprom = sext i32 %15 to i64, !dbg !16935
  %16 = load i16*, i16** %top, align 8, !dbg !16935
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !16935
  %17 = load i16, i16* %arrayidx, align 2, !dbg !16935
  %conv10 = zext i16 %17 to i32, !dbg !16935
  %conv11 = sitofp i32 %conv10 to double, !dbg !16935
  %18 = load i32, i32* %j, align 4, !dbg !16936
  %idxprom12 = sext i32 %18 to i64, !dbg !16937
  %19 = load i16*, i16** %top, align 8, !dbg !16937
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !16937
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !16937
  %conv14 = zext i16 %20 to i32, !dbg !16938
  %21 = load i32, i32* %j, align 4, !dbg !16939
  %idxprom15 = sext i32 %21 to i64, !dbg !16940
  %22 = load i16*, i16** %bottom, align 8, !dbg !16940
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !16940
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !16940
  %conv17 = zext i16 %23 to i32, !dbg !16941
  %cmp18 = icmp sgt i32 %conv14, %conv17, !dbg !16942
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !16938

cond.true:                                        ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !16943
  %idxprom20 = sext i32 %24 to i64, !dbg !16945
  %25 = load i16*, i16** %bottom, align 8, !dbg !16945
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !16945
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !16945
  %conv22 = zext i16 %26 to i32, !dbg !16946
  br label %cond.end, !dbg !16947

cond.false:                                       ; preds = %for.body9
  %27 = load i32, i32* %j, align 4, !dbg !16948
  %idxprom23 = sext i32 %27 to i64, !dbg !16950
  %28 = load i16*, i16** %top, align 8, !dbg !16950
  %arrayidx24 = getelementptr inbounds i16, i16* %28, i64 %idxprom23, !dbg !16950
  %29 = load i16, i16* %arrayidx24, align 2, !dbg !16950
  %conv25 = zext i16 %29 to i32, !dbg !16951
  br label %cond.end, !dbg !16952

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv22, %cond.true ], [ %conv25, %cond.false ], !dbg !16953
  %30 = load i32, i32* %j, align 4, !dbg !16955
  %idxprom26 = sext i32 %30 to i64, !dbg !16956
  %31 = load i16*, i16** %top, align 8, !dbg !16956
  %arrayidx27 = getelementptr inbounds i16, i16* %31, i64 %idxprom26, !dbg !16956
  %32 = load i16, i16* %arrayidx27, align 2, !dbg !16956
  %conv28 = zext i16 %32 to i32, !dbg !16957
  %33 = load i32, i32* %j, align 4, !dbg !16958
  %idxprom29 = sext i32 %33 to i64, !dbg !16959
  %34 = load i16*, i16** %bottom, align 8, !dbg !16959
  %arrayidx30 = getelementptr inbounds i16, i16* %34, i64 %idxprom29, !dbg !16959
  %35 = load i16, i16* %arrayidx30, align 2, !dbg !16959
  %conv31 = zext i16 %35 to i32, !dbg !16960
  %cmp32 = icmp sgt i32 %conv28, %conv31, !dbg !16961
  br i1 %cmp32, label %cond.true34, label %cond.false38, !dbg !16957

cond.true34:                                      ; preds = %cond.end
  %36 = load i32, i32* %j, align 4, !dbg !16962
  %idxprom35 = sext i32 %36 to i64, !dbg !16964
  %37 = load i16*, i16** %top, align 8, !dbg !16964
  %arrayidx36 = getelementptr inbounds i16, i16* %37, i64 %idxprom35, !dbg !16964
  %38 = load i16, i16* %arrayidx36, align 2, !dbg !16964
  %conv37 = zext i16 %38 to i32, !dbg !16965
  br label %cond.end42, !dbg !16966

cond.false38:                                     ; preds = %cond.end
  %39 = load i32, i32* %j, align 4, !dbg !16967
  %idxprom39 = sext i32 %39 to i64, !dbg !16969
  %40 = load i16*, i16** %bottom, align 8, !dbg !16969
  %arrayidx40 = getelementptr inbounds i16, i16* %40, i64 %idxprom39, !dbg !16969
  %41 = load i16, i16* %arrayidx40, align 2, !dbg !16969
  %conv41 = zext i16 %41 to i32, !dbg !16970
  br label %cond.end42, !dbg !16971

cond.end42:                                       ; preds = %cond.false38, %cond.true34
  %cond43 = phi i32 [ %conv37, %cond.true34 ], [ %conv41, %cond.false38 ], !dbg !16972
  %sub = sub nsw i32 %cond, %cond43, !dbg !16974
  %add = add nsw i32 %sub, 65535, !dbg !16975
  %42 = load i32, i32* %j, align 4, !dbg !16976
  %idxprom44 = sext i32 %42 to i64, !dbg !16977
  %43 = load i16*, i16** %top, align 8, !dbg !16977
  %arrayidx45 = getelementptr inbounds i16, i16* %43, i64 %idxprom44, !dbg !16977
  %44 = load i16, i16* %arrayidx45, align 2, !dbg !16977
  %conv46 = zext i16 %44 to i32, !dbg !16977
  %sub47 = sub nsw i32 %add, %conv46, !dbg !16978
  %conv48 = sitofp i32 %sub47 to double, !dbg !16979
  %45 = load double, double* %opacity, align 8, !dbg !16980
  %mul = fmul double %conv48, %45, !dbg !16981
  %add49 = fadd double %conv11, %mul, !dbg !16982
  %conv50 = fptoui double %add49 to i16, !dbg !16983
  %46 = load i32, i32* %j, align 4, !dbg !16984
  %idxprom51 = sext i32 %46 to i64, !dbg !16985
  %47 = load i16*, i16** %dst, align 8, !dbg !16985
  %arrayidx52 = getelementptr inbounds i16, i16* %47, i64 %idxprom51, !dbg !16985
  store i16 %conv50, i16* %arrayidx52, align 2, !dbg !16986
  br label %for.inc, !dbg !16987

for.inc:                                          ; preds = %cond.end42
  %48 = load i32, i32* %j, align 4, !dbg !16988
  %inc = add nsw i32 %48, 1, !dbg !16988
  store i32 %inc, i32* %j, align 4, !dbg !16988
  br label %for.cond5, !dbg !16990, !llvm.loop !16991

for.end:                                          ; preds = %for.cond5
  %49 = load i64, i64* %dst_linesize.addr, align 8, !dbg !16993
  %50 = load i16*, i16** %dst, align 8, !dbg !16995
  %add.ptr = getelementptr inbounds i16, i16* %50, i64 %49, !dbg !16995
  store i16* %add.ptr, i16** %dst, align 8, !dbg !16995
  %51 = load i64, i64* %top_linesize.addr, align 8, !dbg !16996
  %52 = load i16*, i16** %top, align 8, !dbg !16997
  %add.ptr53 = getelementptr inbounds i16, i16* %52, i64 %51, !dbg !16997
  store i16* %add.ptr53, i16** %top, align 8, !dbg !16997
  %53 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !16998
  %54 = load i16*, i16** %bottom, align 8, !dbg !16999
  %add.ptr54 = getelementptr inbounds i16, i16* %54, i64 %53, !dbg !16999
  store i16* %add.ptr54, i16** %bottom, align 8, !dbg !16999
  br label %for.inc55, !dbg !17000

for.inc55:                                        ; preds = %for.end
  %55 = load i32, i32* %i, align 4, !dbg !17001
  %inc56 = add nsw i32 %55, 1, !dbg !17001
  store i32 %inc56, i32* %i, align 4, !dbg !17001
  br label %for.cond, !dbg !17003, !llvm.loop !17004

for.end57:                                        ; preds = %for.cond
  ret void, !dbg !17006
}

; Function Attrs: nounwind uwtable
define internal void @blend_pinlight_16bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !17008 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !17009, metadata !905), !dbg !17010
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !17011, metadata !905), !dbg !17012
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !17013, metadata !905), !dbg !17014
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !17015, metadata !905), !dbg !17016
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !17017, metadata !905), !dbg !17018
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !17019, metadata !905), !dbg !17020
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !17021, metadata !905), !dbg !17022
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !17023, metadata !905), !dbg !17024
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !17025, metadata !905), !dbg !17026
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !17027, metadata !905), !dbg !17028
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !17029, metadata !905), !dbg !17030
  call void @llvm.dbg.declare(metadata i16** %top, metadata !17031, metadata !905), !dbg !17032
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !17033
  %1 = bitcast i8* %0 to i16*, !dbg !17034
  store i16* %1, i16** %top, align 8, !dbg !17032
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !17035, metadata !905), !dbg !17036
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !17037
  %3 = bitcast i8* %2 to i16*, !dbg !17038
  store i16* %3, i16** %bottom, align 8, !dbg !17036
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !17039, metadata !905), !dbg !17040
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !17041
  %5 = bitcast i8* %4 to i16*, !dbg !17042
  store i16* %5, i16** %dst, align 8, !dbg !17040
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !17043, metadata !905), !dbg !17044
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !17045
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !17046
  %7 = load double, double* %opacity1, align 8, !dbg !17046
  store double %7, double* %opacity, align 8, !dbg !17044
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17047, metadata !905), !dbg !17048
  call void @llvm.dbg.declare(metadata i32* %j, metadata !17049, metadata !905), !dbg !17050
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !17051
  %div = sdiv i64 %8, 2, !dbg !17051
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !17051
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !17052
  %div2 = sdiv i64 %9, 2, !dbg !17052
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !17052
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !17053
  %div3 = sdiv i64 %10, 2, !dbg !17053
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !17053
  store i32 0, i32* %i, align 4, !dbg !17054
  br label %for.cond, !dbg !17056

for.cond:                                         ; preds = %for.inc68, %entry
  %11 = load i32, i32* %i, align 4, !dbg !17057
  %conv = sext i32 %11 to i64, !dbg !17057
  %12 = load i64, i64* %height.addr, align 8, !dbg !17060
  %cmp = icmp slt i64 %conv, %12, !dbg !17061
  br i1 %cmp, label %for.body, label %for.end70, !dbg !17062

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !17063
  br label %for.cond5, !dbg !17067

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !17068
  %conv6 = sext i32 %13 to i64, !dbg !17068
  %14 = load i64, i64* %width.addr, align 8, !dbg !17071
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !17072
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !17073

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !17074
  %idxprom = sext i32 %15 to i64, !dbg !17077
  %16 = load i16*, i16** %top, align 8, !dbg !17077
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !17077
  %17 = load i16, i16* %arrayidx, align 2, !dbg !17077
  %conv10 = zext i16 %17 to i32, !dbg !17077
  %conv11 = sitofp i32 %conv10 to double, !dbg !17077
  %18 = load i32, i32* %j, align 4, !dbg !17078
  %idxprom12 = sext i32 %18 to i64, !dbg !17079
  %19 = load i16*, i16** %bottom, align 8, !dbg !17079
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !17079
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !17079
  %conv14 = zext i16 %20 to i32, !dbg !17079
  %cmp15 = icmp slt i32 %conv14, 32768, !dbg !17080
  br i1 %cmp15, label %cond.true, label %cond.false33, !dbg !17081

cond.true:                                        ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !17082
  %idxprom17 = sext i32 %21 to i64, !dbg !17084
  %22 = load i16*, i16** %top, align 8, !dbg !17084
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !17084
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !17084
  %conv19 = zext i16 %23 to i32, !dbg !17085
  %24 = load i32, i32* %j, align 4, !dbg !17086
  %idxprom20 = sext i32 %24 to i64, !dbg !17087
  %25 = load i16*, i16** %bottom, align 8, !dbg !17087
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !17087
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !17087
  %conv22 = zext i16 %26 to i32, !dbg !17087
  %mul = mul nsw i32 2, %conv22, !dbg !17088
  %cmp23 = icmp sgt i32 %conv19, %mul, !dbg !17089
  br i1 %cmp23, label %cond.true25, label %cond.false, !dbg !17085

cond.true25:                                      ; preds = %cond.true
  %27 = load i32, i32* %j, align 4, !dbg !17090
  %idxprom26 = sext i32 %27 to i64, !dbg !17092
  %28 = load i16*, i16** %bottom, align 8, !dbg !17092
  %arrayidx27 = getelementptr inbounds i16, i16* %28, i64 %idxprom26, !dbg !17092
  %29 = load i16, i16* %arrayidx27, align 2, !dbg !17092
  %conv28 = zext i16 %29 to i32, !dbg !17092
  %mul29 = mul nsw i32 2, %conv28, !dbg !17093
  br label %cond.end, !dbg !17094

cond.false:                                       ; preds = %cond.true
  %30 = load i32, i32* %j, align 4, !dbg !17095
  %idxprom30 = sext i32 %30 to i64, !dbg !17097
  %31 = load i16*, i16** %top, align 8, !dbg !17097
  %arrayidx31 = getelementptr inbounds i16, i16* %31, i64 %idxprom30, !dbg !17097
  %32 = load i16, i16* %arrayidx31, align 2, !dbg !17097
  %conv32 = zext i16 %32 to i32, !dbg !17098
  br label %cond.end, !dbg !17099

cond.end:                                         ; preds = %cond.false, %cond.true25
  %cond = phi i32 [ %mul29, %cond.true25 ], [ %conv32, %cond.false ], !dbg !17100
  br label %cond.end55, !dbg !17102

cond.false33:                                     ; preds = %for.body9
  %33 = load i32, i32* %j, align 4, !dbg !17103
  %idxprom34 = sext i32 %33 to i64, !dbg !17105
  %34 = load i16*, i16** %top, align 8, !dbg !17105
  %arrayidx35 = getelementptr inbounds i16, i16* %34, i64 %idxprom34, !dbg !17105
  %35 = load i16, i16* %arrayidx35, align 2, !dbg !17105
  %conv36 = zext i16 %35 to i32, !dbg !17106
  %36 = load i32, i32* %j, align 4, !dbg !17107
  %idxprom37 = sext i32 %36 to i64, !dbg !17108
  %37 = load i16*, i16** %bottom, align 8, !dbg !17108
  %arrayidx38 = getelementptr inbounds i16, i16* %37, i64 %idxprom37, !dbg !17108
  %38 = load i16, i16* %arrayidx38, align 2, !dbg !17108
  %conv39 = zext i16 %38 to i32, !dbg !17108
  %sub = sub nsw i32 %conv39, 32768, !dbg !17109
  %mul40 = mul nsw i32 2, %sub, !dbg !17110
  %cmp41 = icmp sgt i32 %conv36, %mul40, !dbg !17111
  br i1 %cmp41, label %cond.true43, label %cond.false47, !dbg !17106

cond.true43:                                      ; preds = %cond.false33
  %39 = load i32, i32* %j, align 4, !dbg !17112
  %idxprom44 = sext i32 %39 to i64, !dbg !17114
  %40 = load i16*, i16** %top, align 8, !dbg !17114
  %arrayidx45 = getelementptr inbounds i16, i16* %40, i64 %idxprom44, !dbg !17114
  %41 = load i16, i16* %arrayidx45, align 2, !dbg !17114
  %conv46 = zext i16 %41 to i32, !dbg !17115
  br label %cond.end53, !dbg !17116

cond.false47:                                     ; preds = %cond.false33
  %42 = load i32, i32* %j, align 4, !dbg !17117
  %idxprom48 = sext i32 %42 to i64, !dbg !17119
  %43 = load i16*, i16** %bottom, align 8, !dbg !17119
  %arrayidx49 = getelementptr inbounds i16, i16* %43, i64 %idxprom48, !dbg !17119
  %44 = load i16, i16* %arrayidx49, align 2, !dbg !17119
  %conv50 = zext i16 %44 to i32, !dbg !17119
  %sub51 = sub nsw i32 %conv50, 32768, !dbg !17120
  %mul52 = mul nsw i32 2, %sub51, !dbg !17121
  br label %cond.end53, !dbg !17122

cond.end53:                                       ; preds = %cond.false47, %cond.true43
  %cond54 = phi i32 [ %conv46, %cond.true43 ], [ %mul52, %cond.false47 ], !dbg !17123
  br label %cond.end55, !dbg !17125

cond.end55:                                       ; preds = %cond.end53, %cond.end
  %cond56 = phi i32 [ %cond, %cond.end ], [ %cond54, %cond.end53 ], !dbg !17126
  %45 = load i32, i32* %j, align 4, !dbg !17128
  %idxprom57 = sext i32 %45 to i64, !dbg !17129
  %46 = load i16*, i16** %top, align 8, !dbg !17129
  %arrayidx58 = getelementptr inbounds i16, i16* %46, i64 %idxprom57, !dbg !17129
  %47 = load i16, i16* %arrayidx58, align 2, !dbg !17129
  %conv59 = zext i16 %47 to i32, !dbg !17129
  %sub60 = sub nsw i32 %cond56, %conv59, !dbg !17130
  %conv61 = sitofp i32 %sub60 to double, !dbg !17131
  %48 = load double, double* %opacity, align 8, !dbg !17132
  %mul62 = fmul double %conv61, %48, !dbg !17133
  %add = fadd double %conv11, %mul62, !dbg !17134
  %conv63 = fptoui double %add to i16, !dbg !17135
  %49 = load i32, i32* %j, align 4, !dbg !17136
  %idxprom64 = sext i32 %49 to i64, !dbg !17137
  %50 = load i16*, i16** %dst, align 8, !dbg !17137
  %arrayidx65 = getelementptr inbounds i16, i16* %50, i64 %idxprom64, !dbg !17137
  store i16 %conv63, i16* %arrayidx65, align 2, !dbg !17138
  br label %for.inc, !dbg !17139

for.inc:                                          ; preds = %cond.end55
  %51 = load i32, i32* %j, align 4, !dbg !17140
  %inc = add nsw i32 %51, 1, !dbg !17140
  store i32 %inc, i32* %j, align 4, !dbg !17140
  br label %for.cond5, !dbg !17142, !llvm.loop !17143

for.end:                                          ; preds = %for.cond5
  %52 = load i64, i64* %dst_linesize.addr, align 8, !dbg !17145
  %53 = load i16*, i16** %dst, align 8, !dbg !17147
  %add.ptr = getelementptr inbounds i16, i16* %53, i64 %52, !dbg !17147
  store i16* %add.ptr, i16** %dst, align 8, !dbg !17147
  %54 = load i64, i64* %top_linesize.addr, align 8, !dbg !17148
  %55 = load i16*, i16** %top, align 8, !dbg !17149
  %add.ptr66 = getelementptr inbounds i16, i16* %55, i64 %54, !dbg !17149
  store i16* %add.ptr66, i16** %top, align 8, !dbg !17149
  %56 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !17150
  %57 = load i16*, i16** %bottom, align 8, !dbg !17151
  %add.ptr67 = getelementptr inbounds i16, i16* %57, i64 %56, !dbg !17151
  store i16* %add.ptr67, i16** %bottom, align 8, !dbg !17151
  br label %for.inc68, !dbg !17152

for.inc68:                                        ; preds = %for.end
  %58 = load i32, i32* %i, align 4, !dbg !17153
  %inc69 = add nsw i32 %58, 1, !dbg !17153
  store i32 %inc69, i32* %i, align 4, !dbg !17153
  br label %for.cond, !dbg !17155, !llvm.loop !17156

for.end70:                                        ; preds = %for.cond
  ret void, !dbg !17158
}

; Function Attrs: nounwind uwtable
define internal void @blend_reflect_16bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !17160 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !17161, metadata !905), !dbg !17162
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !17163, metadata !905), !dbg !17164
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !17165, metadata !905), !dbg !17166
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !17167, metadata !905), !dbg !17168
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !17169, metadata !905), !dbg !17170
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !17171, metadata !905), !dbg !17172
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !17173, metadata !905), !dbg !17174
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !17175, metadata !905), !dbg !17176
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !17177, metadata !905), !dbg !17178
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !17179, metadata !905), !dbg !17180
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !17181, metadata !905), !dbg !17182
  call void @llvm.dbg.declare(metadata i16** %top, metadata !17183, metadata !905), !dbg !17184
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !17185
  %1 = bitcast i8* %0 to i16*, !dbg !17186
  store i16* %1, i16** %top, align 8, !dbg !17184
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !17187, metadata !905), !dbg !17188
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !17189
  %3 = bitcast i8* %2 to i16*, !dbg !17190
  store i16* %3, i16** %bottom, align 8, !dbg !17188
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !17191, metadata !905), !dbg !17192
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !17193
  %5 = bitcast i8* %4 to i16*, !dbg !17194
  store i16* %5, i16** %dst, align 8, !dbg !17192
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !17195, metadata !905), !dbg !17196
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !17197
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !17198
  %7 = load double, double* %opacity1, align 8, !dbg !17198
  store double %7, double* %opacity, align 8, !dbg !17196
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17199, metadata !905), !dbg !17200
  call void @llvm.dbg.declare(metadata i32* %j, metadata !17201, metadata !905), !dbg !17202
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !17203
  %div = sdiv i64 %8, 2, !dbg !17203
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !17203
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !17204
  %div2 = sdiv i64 %9, 2, !dbg !17204
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !17204
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !17205
  %div3 = sdiv i64 %10, 2, !dbg !17205
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !17205
  store i32 0, i32* %i, align 4, !dbg !17206
  br label %for.cond, !dbg !17208

for.cond:                                         ; preds = %for.inc59, %entry
  %11 = load i32, i32* %i, align 4, !dbg !17209
  %conv = sext i32 %11 to i64, !dbg !17209
  %12 = load i64, i64* %height.addr, align 8, !dbg !17212
  %cmp = icmp slt i64 %conv, %12, !dbg !17213
  br i1 %cmp, label %for.body, label %for.end61, !dbg !17214

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !17215
  br label %for.cond5, !dbg !17219

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !17220
  %conv6 = sext i32 %13 to i64, !dbg !17220
  %14 = load i64, i64* %width.addr, align 8, !dbg !17223
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !17224
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !17225

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !17226
  %idxprom = sext i32 %15 to i64, !dbg !17229
  %16 = load i16*, i16** %top, align 8, !dbg !17229
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !17229
  %17 = load i16, i16* %arrayidx, align 2, !dbg !17229
  %conv10 = zext i16 %17 to i32, !dbg !17229
  %conv11 = sitofp i32 %conv10 to double, !dbg !17229
  %18 = load i32, i32* %j, align 4, !dbg !17230
  %idxprom12 = sext i32 %18 to i64, !dbg !17231
  %19 = load i16*, i16** %bottom, align 8, !dbg !17231
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !17231
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !17231
  %conv14 = zext i16 %20 to i32, !dbg !17231
  %cmp15 = icmp eq i32 %conv14, 65535, !dbg !17232
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !17233

cond.true:                                        ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !17234
  %idxprom17 = sext i32 %21 to i64, !dbg !17236
  %22 = load i16*, i16** %bottom, align 8, !dbg !17236
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !17236
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !17236
  %conv19 = zext i16 %23 to i32, !dbg !17236
  br label %cond.end46, !dbg !17237

cond.false:                                       ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !17238
  %idxprom20 = sext i32 %24 to i64, !dbg !17240
  %25 = load i16*, i16** %top, align 8, !dbg !17240
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !17240
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !17240
  %conv22 = zext i16 %26 to i32, !dbg !17240
  %27 = load i32, i32* %j, align 4, !dbg !17241
  %idxprom23 = sext i32 %27 to i64, !dbg !17242
  %28 = load i16*, i16** %top, align 8, !dbg !17242
  %arrayidx24 = getelementptr inbounds i16, i16* %28, i64 %idxprom23, !dbg !17242
  %29 = load i16, i16* %arrayidx24, align 2, !dbg !17242
  %conv25 = zext i16 %29 to i32, !dbg !17242
  %mul = mul nsw i32 %conv22, %conv25, !dbg !17243
  %30 = load i32, i32* %j, align 4, !dbg !17244
  %idxprom26 = sext i32 %30 to i64, !dbg !17245
  %31 = load i16*, i16** %bottom, align 8, !dbg !17245
  %arrayidx27 = getelementptr inbounds i16, i16* %31, i64 %idxprom26, !dbg !17245
  %32 = load i16, i16* %arrayidx27, align 2, !dbg !17245
  %conv28 = zext i16 %32 to i32, !dbg !17245
  %sub = sub nsw i32 65535, %conv28, !dbg !17246
  %div29 = sdiv i32 %mul, %sub, !dbg !17247
  %cmp30 = icmp sgt i32 65535, %div29, !dbg !17248
  br i1 %cmp30, label %cond.true32, label %cond.false45, !dbg !17249

cond.true32:                                      ; preds = %cond.false
  %33 = load i32, i32* %j, align 4, !dbg !17250
  %idxprom33 = sext i32 %33 to i64, !dbg !17252
  %34 = load i16*, i16** %top, align 8, !dbg !17252
  %arrayidx34 = getelementptr inbounds i16, i16* %34, i64 %idxprom33, !dbg !17252
  %35 = load i16, i16* %arrayidx34, align 2, !dbg !17252
  %conv35 = zext i16 %35 to i32, !dbg !17252
  %36 = load i32, i32* %j, align 4, !dbg !17253
  %idxprom36 = sext i32 %36 to i64, !dbg !17254
  %37 = load i16*, i16** %top, align 8, !dbg !17254
  %arrayidx37 = getelementptr inbounds i16, i16* %37, i64 %idxprom36, !dbg !17254
  %38 = load i16, i16* %arrayidx37, align 2, !dbg !17254
  %conv38 = zext i16 %38 to i32, !dbg !17254
  %mul39 = mul nsw i32 %conv35, %conv38, !dbg !17255
  %39 = load i32, i32* %j, align 4, !dbg !17256
  %idxprom40 = sext i32 %39 to i64, !dbg !17257
  %40 = load i16*, i16** %bottom, align 8, !dbg !17257
  %arrayidx41 = getelementptr inbounds i16, i16* %40, i64 %idxprom40, !dbg !17257
  %41 = load i16, i16* %arrayidx41, align 2, !dbg !17257
  %conv42 = zext i16 %41 to i32, !dbg !17257
  %sub43 = sub nsw i32 65535, %conv42, !dbg !17258
  %div44 = sdiv i32 %mul39, %sub43, !dbg !17259
  br label %cond.end, !dbg !17260

cond.false45:                                     ; preds = %cond.false
  br label %cond.end, !dbg !17261

cond.end:                                         ; preds = %cond.false45, %cond.true32
  %cond = phi i32 [ %div44, %cond.true32 ], [ 65535, %cond.false45 ], !dbg !17263
  br label %cond.end46, !dbg !17265

cond.end46:                                       ; preds = %cond.end, %cond.true
  %cond47 = phi i32 [ %conv19, %cond.true ], [ %cond, %cond.end ], !dbg !17266
  %42 = load i32, i32* %j, align 4, !dbg !17268
  %idxprom48 = sext i32 %42 to i64, !dbg !17269
  %43 = load i16*, i16** %top, align 8, !dbg !17269
  %arrayidx49 = getelementptr inbounds i16, i16* %43, i64 %idxprom48, !dbg !17269
  %44 = load i16, i16* %arrayidx49, align 2, !dbg !17269
  %conv50 = zext i16 %44 to i32, !dbg !17269
  %sub51 = sub nsw i32 %cond47, %conv50, !dbg !17270
  %conv52 = sitofp i32 %sub51 to double, !dbg !17271
  %45 = load double, double* %opacity, align 8, !dbg !17272
  %mul53 = fmul double %conv52, %45, !dbg !17273
  %add = fadd double %conv11, %mul53, !dbg !17274
  %conv54 = fptoui double %add to i16, !dbg !17275
  %46 = load i32, i32* %j, align 4, !dbg !17276
  %idxprom55 = sext i32 %46 to i64, !dbg !17277
  %47 = load i16*, i16** %dst, align 8, !dbg !17277
  %arrayidx56 = getelementptr inbounds i16, i16* %47, i64 %idxprom55, !dbg !17277
  store i16 %conv54, i16* %arrayidx56, align 2, !dbg !17278
  br label %for.inc, !dbg !17279

for.inc:                                          ; preds = %cond.end46
  %48 = load i32, i32* %j, align 4, !dbg !17280
  %inc = add nsw i32 %48, 1, !dbg !17280
  store i32 %inc, i32* %j, align 4, !dbg !17280
  br label %for.cond5, !dbg !17282, !llvm.loop !17283

for.end:                                          ; preds = %for.cond5
  %49 = load i64, i64* %dst_linesize.addr, align 8, !dbg !17285
  %50 = load i16*, i16** %dst, align 8, !dbg !17287
  %add.ptr = getelementptr inbounds i16, i16* %50, i64 %49, !dbg !17287
  store i16* %add.ptr, i16** %dst, align 8, !dbg !17287
  %51 = load i64, i64* %top_linesize.addr, align 8, !dbg !17288
  %52 = load i16*, i16** %top, align 8, !dbg !17289
  %add.ptr57 = getelementptr inbounds i16, i16* %52, i64 %51, !dbg !17289
  store i16* %add.ptr57, i16** %top, align 8, !dbg !17289
  %53 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !17290
  %54 = load i16*, i16** %bottom, align 8, !dbg !17291
  %add.ptr58 = getelementptr inbounds i16, i16* %54, i64 %53, !dbg !17291
  store i16* %add.ptr58, i16** %bottom, align 8, !dbg !17291
  br label %for.inc59, !dbg !17292

for.inc59:                                        ; preds = %for.end
  %55 = load i32, i32* %i, align 4, !dbg !17293
  %inc60 = add nsw i32 %55, 1, !dbg !17293
  store i32 %inc60, i32* %i, align 4, !dbg !17293
  br label %for.cond, !dbg !17295, !llvm.loop !17296

for.end61:                                        ; preds = %for.cond
  ret void, !dbg !17298
}

; Function Attrs: nounwind uwtable
define internal void @blend_screen_16bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !17300 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !17301, metadata !905), !dbg !17302
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !17303, metadata !905), !dbg !17304
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !17305, metadata !905), !dbg !17306
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !17307, metadata !905), !dbg !17308
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !17309, metadata !905), !dbg !17310
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !17311, metadata !905), !dbg !17312
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !17313, metadata !905), !dbg !17314
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !17315, metadata !905), !dbg !17316
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !17317, metadata !905), !dbg !17318
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !17319, metadata !905), !dbg !17320
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !17321, metadata !905), !dbg !17322
  call void @llvm.dbg.declare(metadata i16** %top, metadata !17323, metadata !905), !dbg !17324
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !17325
  %1 = bitcast i8* %0 to i16*, !dbg !17326
  store i16* %1, i16** %top, align 8, !dbg !17324
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !17327, metadata !905), !dbg !17328
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !17329
  %3 = bitcast i8* %2 to i16*, !dbg !17330
  store i16* %3, i16** %bottom, align 8, !dbg !17328
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !17331, metadata !905), !dbg !17332
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !17333
  %5 = bitcast i8* %4 to i16*, !dbg !17334
  store i16* %5, i16** %dst, align 8, !dbg !17332
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !17335, metadata !905), !dbg !17336
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !17337
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !17338
  %7 = load double, double* %opacity1, align 8, !dbg !17338
  store double %7, double* %opacity, align 8, !dbg !17336
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17339, metadata !905), !dbg !17340
  call void @llvm.dbg.declare(metadata i32* %j, metadata !17341, metadata !905), !dbg !17342
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !17343
  %div = sdiv i64 %8, 2, !dbg !17343
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !17343
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !17344
  %div2 = sdiv i64 %9, 2, !dbg !17344
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !17344
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !17345
  %div3 = sdiv i64 %10, 2, !dbg !17345
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !17345
  store i32 0, i32* %i, align 4, !dbg !17346
  br label %for.cond, !dbg !17348

for.cond:                                         ; preds = %for.inc33, %entry
  %11 = load i32, i32* %i, align 4, !dbg !17349
  %conv = sext i32 %11 to i64, !dbg !17349
  %12 = load i64, i64* %height.addr, align 8, !dbg !17352
  %cmp = icmp slt i64 %conv, %12, !dbg !17353
  br i1 %cmp, label %for.body, label %for.end35, !dbg !17354

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !17355
  br label %for.cond5, !dbg !17359

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !17360
  %conv6 = sext i32 %13 to i64, !dbg !17360
  %14 = load i64, i64* %width.addr, align 8, !dbg !17363
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !17364
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !17365

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !17366
  %idxprom = sext i32 %15 to i64, !dbg !17369
  %16 = load i16*, i16** %top, align 8, !dbg !17369
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !17369
  %17 = load i16, i16* %arrayidx, align 2, !dbg !17369
  %conv10 = zext i16 %17 to i32, !dbg !17369
  %conv11 = sitofp i32 %conv10 to double, !dbg !17369
  %18 = load i32, i32* %j, align 4, !dbg !17370
  %idxprom12 = sext i32 %18 to i64, !dbg !17371
  %19 = load i16*, i16** %top, align 8, !dbg !17371
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !17371
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !17371
  %conv14 = zext i16 %20 to i32, !dbg !17372
  %sub = sub nsw i32 65535, %conv14, !dbg !17373
  %21 = load i32, i32* %j, align 4, !dbg !17374
  %idxprom15 = sext i32 %21 to i64, !dbg !17375
  %22 = load i16*, i16** %bottom, align 8, !dbg !17375
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !17375
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !17375
  %conv17 = zext i16 %23 to i32, !dbg !17376
  %sub18 = sub nsw i32 65535, %conv17, !dbg !17377
  %mul = mul nsw i32 %sub, %sub18, !dbg !17378
  %div19 = sdiv i32 %mul, 65535, !dbg !17379
  %mul20 = mul nsw i32 1, %div19, !dbg !17380
  %sub21 = sub nsw i32 65535, %mul20, !dbg !17381
  %24 = load i32, i32* %j, align 4, !dbg !17382
  %idxprom22 = sext i32 %24 to i64, !dbg !17383
  %25 = load i16*, i16** %top, align 8, !dbg !17383
  %arrayidx23 = getelementptr inbounds i16, i16* %25, i64 %idxprom22, !dbg !17383
  %26 = load i16, i16* %arrayidx23, align 2, !dbg !17383
  %conv24 = zext i16 %26 to i32, !dbg !17383
  %sub25 = sub nsw i32 %sub21, %conv24, !dbg !17384
  %conv26 = sitofp i32 %sub25 to double, !dbg !17385
  %27 = load double, double* %opacity, align 8, !dbg !17386
  %mul27 = fmul double %conv26, %27, !dbg !17387
  %add = fadd double %conv11, %mul27, !dbg !17388
  %conv28 = fptoui double %add to i16, !dbg !17369
  %28 = load i32, i32* %j, align 4, !dbg !17389
  %idxprom29 = sext i32 %28 to i64, !dbg !17390
  %29 = load i16*, i16** %dst, align 8, !dbg !17390
  %arrayidx30 = getelementptr inbounds i16, i16* %29, i64 %idxprom29, !dbg !17390
  store i16 %conv28, i16* %arrayidx30, align 2, !dbg !17391
  br label %for.inc, !dbg !17392

for.inc:                                          ; preds = %for.body9
  %30 = load i32, i32* %j, align 4, !dbg !17393
  %inc = add nsw i32 %30, 1, !dbg !17393
  store i32 %inc, i32* %j, align 4, !dbg !17393
  br label %for.cond5, !dbg !17395, !llvm.loop !17396

for.end:                                          ; preds = %for.cond5
  %31 = load i64, i64* %dst_linesize.addr, align 8, !dbg !17398
  %32 = load i16*, i16** %dst, align 8, !dbg !17400
  %add.ptr = getelementptr inbounds i16, i16* %32, i64 %31, !dbg !17400
  store i16* %add.ptr, i16** %dst, align 8, !dbg !17400
  %33 = load i64, i64* %top_linesize.addr, align 8, !dbg !17401
  %34 = load i16*, i16** %top, align 8, !dbg !17402
  %add.ptr31 = getelementptr inbounds i16, i16* %34, i64 %33, !dbg !17402
  store i16* %add.ptr31, i16** %top, align 8, !dbg !17402
  %35 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !17403
  %36 = load i16*, i16** %bottom, align 8, !dbg !17404
  %add.ptr32 = getelementptr inbounds i16, i16* %36, i64 %35, !dbg !17404
  store i16* %add.ptr32, i16** %bottom, align 8, !dbg !17404
  br label %for.inc33, !dbg !17405

for.inc33:                                        ; preds = %for.end
  %37 = load i32, i32* %i, align 4, !dbg !17406
  %inc34 = add nsw i32 %37, 1, !dbg !17406
  store i32 %inc34, i32* %i, align 4, !dbg !17406
  br label %for.cond, !dbg !17408, !llvm.loop !17409

for.end35:                                        ; preds = %for.cond
  ret void, !dbg !17411
}

; Function Attrs: nounwind uwtable
define internal void @blend_softlight_16bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !17413 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !17414, metadata !905), !dbg !17415
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !17416, metadata !905), !dbg !17417
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !17418, metadata !905), !dbg !17419
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !17420, metadata !905), !dbg !17421
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !17422, metadata !905), !dbg !17423
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !17424, metadata !905), !dbg !17425
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !17426, metadata !905), !dbg !17427
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !17428, metadata !905), !dbg !17429
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !17430, metadata !905), !dbg !17431
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !17432, metadata !905), !dbg !17433
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !17434, metadata !905), !dbg !17435
  call void @llvm.dbg.declare(metadata i16** %top, metadata !17436, metadata !905), !dbg !17437
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !17438
  %1 = bitcast i8* %0 to i16*, !dbg !17439
  store i16* %1, i16** %top, align 8, !dbg !17437
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !17440, metadata !905), !dbg !17441
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !17442
  %3 = bitcast i8* %2 to i16*, !dbg !17443
  store i16* %3, i16** %bottom, align 8, !dbg !17441
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !17444, metadata !905), !dbg !17445
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !17446
  %5 = bitcast i8* %4 to i16*, !dbg !17447
  store i16* %5, i16** %dst, align 8, !dbg !17445
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !17448, metadata !905), !dbg !17449
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !17450
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !17451
  %7 = load double, double* %opacity1, align 8, !dbg !17451
  store double %7, double* %opacity, align 8, !dbg !17449
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17452, metadata !905), !dbg !17453
  call void @llvm.dbg.declare(metadata i32* %j, metadata !17454, metadata !905), !dbg !17455
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !17456
  %div = sdiv i64 %8, 2, !dbg !17456
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !17456
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !17457
  %div2 = sdiv i64 %9, 2, !dbg !17457
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !17457
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !17458
  %div3 = sdiv i64 %10, 2, !dbg !17458
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !17458
  store i32 0, i32* %i, align 4, !dbg !17459
  br label %for.cond, !dbg !17461

for.cond:                                         ; preds = %for.inc76, %entry
  %11 = load i32, i32* %i, align 4, !dbg !17462
  %conv = sext i32 %11 to i64, !dbg !17462
  %12 = load i64, i64* %height.addr, align 8, !dbg !17465
  %cmp = icmp slt i64 %conv, %12, !dbg !17466
  br i1 %cmp, label %for.body, label %for.end78, !dbg !17467

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !17468
  br label %for.cond5, !dbg !17472

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !17473
  %conv6 = sext i32 %13 to i64, !dbg !17473
  %14 = load i64, i64* %width.addr, align 8, !dbg !17476
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !17477
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !17478

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !17479
  %idxprom = sext i32 %15 to i64, !dbg !17482
  %16 = load i16*, i16** %top, align 8, !dbg !17482
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !17482
  %17 = load i16, i16* %arrayidx, align 2, !dbg !17482
  %conv10 = zext i16 %17 to i32, !dbg !17482
  %conv11 = sitofp i32 %conv10 to double, !dbg !17482
  %18 = load i32, i32* %j, align 4, !dbg !17483
  %idxprom12 = sext i32 %18 to i64, !dbg !17484
  %19 = load i16*, i16** %top, align 8, !dbg !17484
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !17484
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !17484
  %conv14 = zext i16 %20 to i32, !dbg !17484
  %cmp15 = icmp sgt i32 %conv14, 32767, !dbg !17485
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !17486

cond.true:                                        ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !17487
  %idxprom17 = sext i32 %21 to i64, !dbg !17489
  %22 = load i16*, i16** %bottom, align 8, !dbg !17489
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !17489
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !17489
  %conv19 = zext i16 %23 to i32, !dbg !17489
  %conv20 = sitofp i32 %conv19 to double, !dbg !17489
  %24 = load i32, i32* %j, align 4, !dbg !17490
  %idxprom21 = sext i32 %24 to i64, !dbg !17491
  %25 = load i16*, i16** %bottom, align 8, !dbg !17491
  %arrayidx22 = getelementptr inbounds i16, i16* %25, i64 %idxprom21, !dbg !17491
  %26 = load i16, i16* %arrayidx22, align 2, !dbg !17491
  %conv23 = zext i16 %26 to i32, !dbg !17491
  %sub = sub nsw i32 65535, %conv23, !dbg !17492
  %conv24 = sitofp i32 %sub to double, !dbg !17493
  %27 = load i32, i32* %j, align 4, !dbg !17494
  %idxprom25 = sext i32 %27 to i64, !dbg !17495
  %28 = load i16*, i16** %top, align 8, !dbg !17495
  %arrayidx26 = getelementptr inbounds i16, i16* %28, i64 %idxprom25, !dbg !17495
  %29 = load i16, i16* %arrayidx26, align 2, !dbg !17495
  %conv27 = zext i16 %29 to i32, !dbg !17495
  %conv28 = sitofp i32 %conv27 to double, !dbg !17495
  %sub29 = fsub double %conv28, 3.276750e+04, !dbg !17496
  %mul = fmul double %conv24, %sub29, !dbg !17497
  %div30 = fdiv double %mul, 3.276750e+04, !dbg !17498
  %30 = load i32, i32* %j, align 4, !dbg !17499
  %idxprom31 = sext i32 %30 to i64, !dbg !17500
  %31 = load i16*, i16** %bottom, align 8, !dbg !17500
  %arrayidx32 = getelementptr inbounds i16, i16* %31, i64 %idxprom31, !dbg !17500
  %32 = load i16, i16* %arrayidx32, align 2, !dbg !17500
  %conv33 = zext i16 %32 to i32, !dbg !17500
  %conv34 = sitofp i32 %conv33 to double, !dbg !17500
  %sub35 = fsub double %conv34, 3.276750e+04, !dbg !17501
  %call = call double @fabs(double %sub35) #1, !dbg !17502
  %div36 = fdiv double %call, 6.553500e+04, !dbg !17503
  %sub37 = fsub double 5.000000e-01, %div36, !dbg !17504
  %mul38 = fmul double %div30, %sub37, !dbg !17505
  %add = fadd double %conv20, %mul38, !dbg !17506
  br label %cond.end, !dbg !17507

cond.false:                                       ; preds = %for.body9
  %33 = load i32, i32* %j, align 4, !dbg !17508
  %idxprom39 = sext i32 %33 to i64, !dbg !17510
  %34 = load i16*, i16** %bottom, align 8, !dbg !17510
  %arrayidx40 = getelementptr inbounds i16, i16* %34, i64 %idxprom39, !dbg !17510
  %35 = load i16, i16* %arrayidx40, align 2, !dbg !17510
  %conv41 = zext i16 %35 to i32, !dbg !17510
  %conv42 = sitofp i32 %conv41 to double, !dbg !17510
  %36 = load i32, i32* %j, align 4, !dbg !17511
  %idxprom43 = sext i32 %36 to i64, !dbg !17512
  %37 = load i16*, i16** %bottom, align 8, !dbg !17512
  %arrayidx44 = getelementptr inbounds i16, i16* %37, i64 %idxprom43, !dbg !17512
  %38 = load i16, i16* %arrayidx44, align 2, !dbg !17512
  %conv45 = zext i16 %38 to i32, !dbg !17512
  %conv46 = sitofp i32 %conv45 to double, !dbg !17512
  %39 = load i32, i32* %j, align 4, !dbg !17513
  %idxprom47 = sext i32 %39 to i64, !dbg !17514
  %40 = load i16*, i16** %top, align 8, !dbg !17514
  %arrayidx48 = getelementptr inbounds i16, i16* %40, i64 %idxprom47, !dbg !17514
  %41 = load i16, i16* %arrayidx48, align 2, !dbg !17514
  %conv49 = zext i16 %41 to i32, !dbg !17514
  %conv50 = sitofp i32 %conv49 to double, !dbg !17514
  %sub51 = fsub double 3.276750e+04, %conv50, !dbg !17515
  %div52 = fdiv double %sub51, 3.276750e+04, !dbg !17516
  %mul53 = fmul double %conv46, %div52, !dbg !17517
  %42 = load i32, i32* %j, align 4, !dbg !17518
  %idxprom54 = sext i32 %42 to i64, !dbg !17519
  %43 = load i16*, i16** %bottom, align 8, !dbg !17519
  %arrayidx55 = getelementptr inbounds i16, i16* %43, i64 %idxprom54, !dbg !17519
  %44 = load i16, i16* %arrayidx55, align 2, !dbg !17519
  %conv56 = zext i16 %44 to i32, !dbg !17519
  %conv57 = sitofp i32 %conv56 to double, !dbg !17519
  %sub58 = fsub double %conv57, 3.276750e+04, !dbg !17520
  %call59 = call double @fabs(double %sub58) #1, !dbg !17521
  %div60 = fdiv double %call59, 6.553500e+04, !dbg !17522
  %sub61 = fsub double 5.000000e-01, %div60, !dbg !17523
  %mul62 = fmul double %mul53, %sub61, !dbg !17524
  %sub63 = fsub double %conv42, %mul62, !dbg !17525
  br label %cond.end, !dbg !17526

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %add, %cond.true ], [ %sub63, %cond.false ], !dbg !17527
  %45 = load i32, i32* %j, align 4, !dbg !17529
  %idxprom64 = sext i32 %45 to i64, !dbg !17530
  %46 = load i16*, i16** %top, align 8, !dbg !17530
  %arrayidx65 = getelementptr inbounds i16, i16* %46, i64 %idxprom64, !dbg !17530
  %47 = load i16, i16* %arrayidx65, align 2, !dbg !17530
  %conv66 = zext i16 %47 to i32, !dbg !17530
  %conv67 = sitofp i32 %conv66 to double, !dbg !17530
  %sub68 = fsub double %cond, %conv67, !dbg !17531
  %48 = load double, double* %opacity, align 8, !dbg !17532
  %mul69 = fmul double %sub68, %48, !dbg !17533
  %add70 = fadd double %conv11, %mul69, !dbg !17534
  %conv71 = fptoui double %add70 to i16, !dbg !17535
  %49 = load i32, i32* %j, align 4, !dbg !17536
  %idxprom72 = sext i32 %49 to i64, !dbg !17537
  %50 = load i16*, i16** %dst, align 8, !dbg !17537
  %arrayidx73 = getelementptr inbounds i16, i16* %50, i64 %idxprom72, !dbg !17537
  store i16 %conv71, i16* %arrayidx73, align 2, !dbg !17538
  br label %for.inc, !dbg !17539

for.inc:                                          ; preds = %cond.end
  %51 = load i32, i32* %j, align 4, !dbg !17540
  %inc = add nsw i32 %51, 1, !dbg !17540
  store i32 %inc, i32* %j, align 4, !dbg !17540
  br label %for.cond5, !dbg !17542, !llvm.loop !17543

for.end:                                          ; preds = %for.cond5
  %52 = load i64, i64* %dst_linesize.addr, align 8, !dbg !17545
  %53 = load i16*, i16** %dst, align 8, !dbg !17547
  %add.ptr = getelementptr inbounds i16, i16* %53, i64 %52, !dbg !17547
  store i16* %add.ptr, i16** %dst, align 8, !dbg !17547
  %54 = load i64, i64* %top_linesize.addr, align 8, !dbg !17548
  %55 = load i16*, i16** %top, align 8, !dbg !17549
  %add.ptr74 = getelementptr inbounds i16, i16* %55, i64 %54, !dbg !17549
  store i16* %add.ptr74, i16** %top, align 8, !dbg !17549
  %56 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !17550
  %57 = load i16*, i16** %bottom, align 8, !dbg !17551
  %add.ptr75 = getelementptr inbounds i16, i16* %57, i64 %56, !dbg !17551
  store i16* %add.ptr75, i16** %bottom, align 8, !dbg !17551
  br label %for.inc76, !dbg !17552

for.inc76:                                        ; preds = %for.end
  %58 = load i32, i32* %i, align 4, !dbg !17553
  %inc77 = add nsw i32 %58, 1, !dbg !17553
  store i32 %inc77, i32* %i, align 4, !dbg !17553
  br label %for.cond, !dbg !17555, !llvm.loop !17556

for.end78:                                        ; preds = %for.cond
  ret void, !dbg !17558
}

; Function Attrs: nounwind uwtable
define internal void @blend_subtract_16bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !17560 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !17561, metadata !905), !dbg !17562
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !17563, metadata !905), !dbg !17564
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !17565, metadata !905), !dbg !17566
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !17567, metadata !905), !dbg !17568
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !17569, metadata !905), !dbg !17570
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !17571, metadata !905), !dbg !17572
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !17573, metadata !905), !dbg !17574
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !17575, metadata !905), !dbg !17576
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !17577, metadata !905), !dbg !17578
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !17579, metadata !905), !dbg !17580
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !17581, metadata !905), !dbg !17582
  call void @llvm.dbg.declare(metadata i16** %top, metadata !17583, metadata !905), !dbg !17584
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !17585
  %1 = bitcast i8* %0 to i16*, !dbg !17586
  store i16* %1, i16** %top, align 8, !dbg !17584
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !17587, metadata !905), !dbg !17588
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !17589
  %3 = bitcast i8* %2 to i16*, !dbg !17590
  store i16* %3, i16** %bottom, align 8, !dbg !17588
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !17591, metadata !905), !dbg !17592
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !17593
  %5 = bitcast i8* %4 to i16*, !dbg !17594
  store i16* %5, i16** %dst, align 8, !dbg !17592
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !17595, metadata !905), !dbg !17596
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !17597
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !17598
  %7 = load double, double* %opacity1, align 8, !dbg !17598
  store double %7, double* %opacity, align 8, !dbg !17596
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17599, metadata !905), !dbg !17600
  call void @llvm.dbg.declare(metadata i32* %j, metadata !17601, metadata !905), !dbg !17602
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !17603
  %div = sdiv i64 %8, 2, !dbg !17603
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !17603
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !17604
  %div2 = sdiv i64 %9, 2, !dbg !17604
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !17604
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !17605
  %div3 = sdiv i64 %10, 2, !dbg !17605
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !17605
  store i32 0, i32* %i, align 4, !dbg !17606
  br label %for.cond, !dbg !17608

for.cond:                                         ; preds = %for.inc37, %entry
  %11 = load i32, i32* %i, align 4, !dbg !17609
  %conv = sext i32 %11 to i64, !dbg !17609
  %12 = load i64, i64* %height.addr, align 8, !dbg !17612
  %cmp = icmp slt i64 %conv, %12, !dbg !17613
  br i1 %cmp, label %for.body, label %for.end39, !dbg !17614

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !17615
  br label %for.cond5, !dbg !17619

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !17620
  %conv6 = sext i32 %13 to i64, !dbg !17620
  %14 = load i64, i64* %width.addr, align 8, !dbg !17623
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !17624
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !17625

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !17626
  %idxprom = sext i32 %15 to i64, !dbg !17629
  %16 = load i16*, i16** %top, align 8, !dbg !17629
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !17629
  %17 = load i16, i16* %arrayidx, align 2, !dbg !17629
  %conv10 = zext i16 %17 to i32, !dbg !17629
  %conv11 = sitofp i32 %conv10 to double, !dbg !17629
  %18 = load i32, i32* %j, align 4, !dbg !17630
  %idxprom12 = sext i32 %18 to i64, !dbg !17631
  %19 = load i16*, i16** %top, align 8, !dbg !17631
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !17631
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !17631
  %conv14 = zext i16 %20 to i32, !dbg !17631
  %21 = load i32, i32* %j, align 4, !dbg !17632
  %idxprom15 = sext i32 %21 to i64, !dbg !17633
  %22 = load i16*, i16** %bottom, align 8, !dbg !17633
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !17633
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !17633
  %conv17 = zext i16 %23 to i32, !dbg !17633
  %sub = sub nsw i32 %conv14, %conv17, !dbg !17634
  %cmp18 = icmp sgt i32 0, %sub, !dbg !17635
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !17636

cond.true:                                        ; preds = %for.body9
  br label %cond.end, !dbg !17637

cond.false:                                       ; preds = %for.body9
  %24 = load i32, i32* %j, align 4, !dbg !17639
  %idxprom20 = sext i32 %24 to i64, !dbg !17641
  %25 = load i16*, i16** %top, align 8, !dbg !17641
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !17641
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !17641
  %conv22 = zext i16 %26 to i32, !dbg !17641
  %27 = load i32, i32* %j, align 4, !dbg !17642
  %idxprom23 = sext i32 %27 to i64, !dbg !17643
  %28 = load i16*, i16** %bottom, align 8, !dbg !17643
  %arrayidx24 = getelementptr inbounds i16, i16* %28, i64 %idxprom23, !dbg !17643
  %29 = load i16, i16* %arrayidx24, align 2, !dbg !17643
  %conv25 = zext i16 %29 to i32, !dbg !17643
  %sub26 = sub nsw i32 %conv22, %conv25, !dbg !17644
  br label %cond.end, !dbg !17645

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %sub26, %cond.false ], !dbg !17646
  %30 = load i32, i32* %j, align 4, !dbg !17648
  %idxprom27 = sext i32 %30 to i64, !dbg !17649
  %31 = load i16*, i16** %top, align 8, !dbg !17649
  %arrayidx28 = getelementptr inbounds i16, i16* %31, i64 %idxprom27, !dbg !17649
  %32 = load i16, i16* %arrayidx28, align 2, !dbg !17649
  %conv29 = zext i16 %32 to i32, !dbg !17649
  %sub30 = sub nsw i32 %cond, %conv29, !dbg !17650
  %conv31 = sitofp i32 %sub30 to double, !dbg !17651
  %33 = load double, double* %opacity, align 8, !dbg !17652
  %mul = fmul double %conv31, %33, !dbg !17653
  %add = fadd double %conv11, %mul, !dbg !17654
  %conv32 = fptoui double %add to i16, !dbg !17655
  %34 = load i32, i32* %j, align 4, !dbg !17656
  %idxprom33 = sext i32 %34 to i64, !dbg !17657
  %35 = load i16*, i16** %dst, align 8, !dbg !17657
  %arrayidx34 = getelementptr inbounds i16, i16* %35, i64 %idxprom33, !dbg !17657
  store i16 %conv32, i16* %arrayidx34, align 2, !dbg !17658
  br label %for.inc, !dbg !17659

for.inc:                                          ; preds = %cond.end
  %36 = load i32, i32* %j, align 4, !dbg !17660
  %inc = add nsw i32 %36, 1, !dbg !17660
  store i32 %inc, i32* %j, align 4, !dbg !17660
  br label %for.cond5, !dbg !17662, !llvm.loop !17663

for.end:                                          ; preds = %for.cond5
  %37 = load i64, i64* %dst_linesize.addr, align 8, !dbg !17665
  %38 = load i16*, i16** %dst, align 8, !dbg !17667
  %add.ptr = getelementptr inbounds i16, i16* %38, i64 %37, !dbg !17667
  store i16* %add.ptr, i16** %dst, align 8, !dbg !17667
  %39 = load i64, i64* %top_linesize.addr, align 8, !dbg !17668
  %40 = load i16*, i16** %top, align 8, !dbg !17669
  %add.ptr35 = getelementptr inbounds i16, i16* %40, i64 %39, !dbg !17669
  store i16* %add.ptr35, i16** %top, align 8, !dbg !17669
  %41 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !17670
  %42 = load i16*, i16** %bottom, align 8, !dbg !17671
  %add.ptr36 = getelementptr inbounds i16, i16* %42, i64 %41, !dbg !17671
  store i16* %add.ptr36, i16** %bottom, align 8, !dbg !17671
  br label %for.inc37, !dbg !17672

for.inc37:                                        ; preds = %for.end
  %43 = load i32, i32* %i, align 4, !dbg !17673
  %inc38 = add nsw i32 %43, 1, !dbg !17673
  store i32 %inc38, i32* %i, align 4, !dbg !17673
  br label %for.cond, !dbg !17675, !llvm.loop !17676

for.end39:                                        ; preds = %for.cond
  ret void, !dbg !17678
}

; Function Attrs: nounwind uwtable
define internal void @blend_vividlight_16bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !17680 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !17681, metadata !905), !dbg !17682
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !17683, metadata !905), !dbg !17684
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !17685, metadata !905), !dbg !17686
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !17687, metadata !905), !dbg !17688
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !17689, metadata !905), !dbg !17690
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !17691, metadata !905), !dbg !17692
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !17693, metadata !905), !dbg !17694
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !17695, metadata !905), !dbg !17696
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !17697, metadata !905), !dbg !17698
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !17699, metadata !905), !dbg !17700
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !17701, metadata !905), !dbg !17702
  call void @llvm.dbg.declare(metadata i16** %top, metadata !17703, metadata !905), !dbg !17704
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !17705
  %1 = bitcast i8* %0 to i16*, !dbg !17706
  store i16* %1, i16** %top, align 8, !dbg !17704
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !17707, metadata !905), !dbg !17708
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !17709
  %3 = bitcast i8* %2 to i16*, !dbg !17710
  store i16* %3, i16** %bottom, align 8, !dbg !17708
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !17711, metadata !905), !dbg !17712
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !17713
  %5 = bitcast i8* %4 to i16*, !dbg !17714
  store i16* %5, i16** %dst, align 8, !dbg !17712
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !17715, metadata !905), !dbg !17716
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !17717
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !17718
  %7 = load double, double* %opacity1, align 8, !dbg !17718
  store double %7, double* %opacity, align 8, !dbg !17716
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17719, metadata !905), !dbg !17720
  call void @llvm.dbg.declare(metadata i32* %j, metadata !17721, metadata !905), !dbg !17722
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !17723
  %div = sdiv i64 %8, 2, !dbg !17723
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !17723
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !17724
  %div2 = sdiv i64 %9, 2, !dbg !17724
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !17724
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !17725
  %div3 = sdiv i64 %10, 2, !dbg !17725
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !17725
  store i32 0, i32* %i, align 4, !dbg !17726
  br label %for.cond, !dbg !17728

for.cond:                                         ; preds = %for.inc111, %entry
  %11 = load i32, i32* %i, align 4, !dbg !17729
  %conv = sext i32 %11 to i64, !dbg !17729
  %12 = load i64, i64* %height.addr, align 8, !dbg !17732
  %cmp = icmp slt i64 %conv, %12, !dbg !17733
  br i1 %cmp, label %for.body, label %for.end113, !dbg !17734

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !17735
  br label %for.cond5, !dbg !17739

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !17740
  %conv6 = sext i32 %13 to i64, !dbg !17740
  %14 = load i64, i64* %width.addr, align 8, !dbg !17743
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !17744
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !17745

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !17746
  %idxprom = sext i32 %15 to i64, !dbg !17749
  %16 = load i16*, i16** %top, align 8, !dbg !17749
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !17749
  %17 = load i16, i16* %arrayidx, align 2, !dbg !17749
  %conv10 = zext i16 %17 to i32, !dbg !17749
  %conv11 = sitofp i32 %conv10 to double, !dbg !17749
  %18 = load i32, i32* %j, align 4, !dbg !17750
  %idxprom12 = sext i32 %18 to i64, !dbg !17751
  %19 = load i16*, i16** %top, align 8, !dbg !17751
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !17751
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !17751
  %conv14 = zext i16 %20 to i32, !dbg !17751
  %cmp15 = icmp slt i32 %conv14, 32768, !dbg !17752
  br i1 %cmp15, label %cond.true, label %cond.false53, !dbg !17753

cond.true:                                        ; preds = %for.body9
  %21 = load i32, i32* %j, align 4, !dbg !17754
  %idxprom17 = sext i32 %21 to i64, !dbg !17756
  %22 = load i16*, i16** %top, align 8, !dbg !17756
  %arrayidx18 = getelementptr inbounds i16, i16* %22, i64 %idxprom17, !dbg !17756
  %23 = load i16, i16* %arrayidx18, align 2, !dbg !17756
  %conv19 = zext i16 %23 to i32, !dbg !17756
  %mul = mul nsw i32 2, %conv19, !dbg !17757
  %cmp20 = icmp eq i32 %mul, 0, !dbg !17758
  br i1 %cmp20, label %cond.true22, label %cond.false, !dbg !17759

cond.true22:                                      ; preds = %cond.true
  %24 = load i32, i32* %j, align 4, !dbg !17760
  %idxprom23 = sext i32 %24 to i64, !dbg !17762
  %25 = load i16*, i16** %top, align 8, !dbg !17762
  %arrayidx24 = getelementptr inbounds i16, i16* %25, i64 %idxprom23, !dbg !17762
  %26 = load i16, i16* %arrayidx24, align 2, !dbg !17762
  %conv25 = zext i16 %26 to i32, !dbg !17762
  %mul26 = mul nsw i32 2, %conv25, !dbg !17763
  br label %cond.end51, !dbg !17764

cond.false:                                       ; preds = %cond.true
  %27 = load i32, i32* %j, align 4, !dbg !17765
  %idxprom27 = sext i32 %27 to i64, !dbg !17767
  %28 = load i16*, i16** %bottom, align 8, !dbg !17767
  %arrayidx28 = getelementptr inbounds i16, i16* %28, i64 %idxprom27, !dbg !17767
  %29 = load i16, i16* %arrayidx28, align 2, !dbg !17767
  %conv29 = zext i16 %29 to i32, !dbg !17768
  %sub = sub nsw i32 65535, %conv29, !dbg !17769
  %shl = shl i32 %sub, 16, !dbg !17770
  %30 = load i32, i32* %j, align 4, !dbg !17771
  %idxprom30 = sext i32 %30 to i64, !dbg !17772
  %31 = load i16*, i16** %top, align 8, !dbg !17772
  %arrayidx31 = getelementptr inbounds i16, i16* %31, i64 %idxprom30, !dbg !17772
  %32 = load i16, i16* %arrayidx31, align 2, !dbg !17772
  %conv32 = zext i16 %32 to i32, !dbg !17772
  %mul33 = mul nsw i32 2, %conv32, !dbg !17773
  %div34 = sdiv i32 %shl, %mul33, !dbg !17774
  %sub35 = sub nsw i32 65535, %div34, !dbg !17775
  %cmp36 = icmp sgt i32 0, %sub35, !dbg !17776
  br i1 %cmp36, label %cond.true38, label %cond.false39, !dbg !17777

cond.true38:                                      ; preds = %cond.false
  br label %cond.end, !dbg !17778

cond.false39:                                     ; preds = %cond.false
  %33 = load i32, i32* %j, align 4, !dbg !17780
  %idxprom40 = sext i32 %33 to i64, !dbg !17782
  %34 = load i16*, i16** %bottom, align 8, !dbg !17782
  %arrayidx41 = getelementptr inbounds i16, i16* %34, i64 %idxprom40, !dbg !17782
  %35 = load i16, i16* %arrayidx41, align 2, !dbg !17782
  %conv42 = zext i16 %35 to i32, !dbg !17783
  %sub43 = sub nsw i32 65535, %conv42, !dbg !17784
  %shl44 = shl i32 %sub43, 16, !dbg !17785
  %36 = load i32, i32* %j, align 4, !dbg !17786
  %idxprom45 = sext i32 %36 to i64, !dbg !17787
  %37 = load i16*, i16** %top, align 8, !dbg !17787
  %arrayidx46 = getelementptr inbounds i16, i16* %37, i64 %idxprom45, !dbg !17787
  %38 = load i16, i16* %arrayidx46, align 2, !dbg !17787
  %conv47 = zext i16 %38 to i32, !dbg !17787
  %mul48 = mul nsw i32 2, %conv47, !dbg !17788
  %div49 = sdiv i32 %shl44, %mul48, !dbg !17789
  %sub50 = sub nsw i32 65535, %div49, !dbg !17790
  br label %cond.end, !dbg !17791

cond.end:                                         ; preds = %cond.false39, %cond.true38
  %cond = phi i32 [ 0, %cond.true38 ], [ %sub50, %cond.false39 ], !dbg !17792
  br label %cond.end51, !dbg !17794

cond.end51:                                       ; preds = %cond.end, %cond.true22
  %cond52 = phi i32 [ %mul26, %cond.true22 ], [ %cond, %cond.end ], !dbg !17795
  br label %cond.end98, !dbg !17797

cond.false53:                                     ; preds = %for.body9
  %39 = load i32, i32* %j, align 4, !dbg !17798
  %idxprom54 = sext i32 %39 to i64, !dbg !17800
  %40 = load i16*, i16** %top, align 8, !dbg !17800
  %arrayidx55 = getelementptr inbounds i16, i16* %40, i64 %idxprom54, !dbg !17800
  %41 = load i16, i16* %arrayidx55, align 2, !dbg !17800
  %conv56 = zext i16 %41 to i32, !dbg !17800
  %sub57 = sub nsw i32 %conv56, 32768, !dbg !17801
  %mul58 = mul nsw i32 2, %sub57, !dbg !17802
  %cmp59 = icmp eq i32 %mul58, 65535, !dbg !17803
  br i1 %cmp59, label %cond.true61, label %cond.false67, !dbg !17804

cond.true61:                                      ; preds = %cond.false53
  %42 = load i32, i32* %j, align 4, !dbg !17805
  %idxprom62 = sext i32 %42 to i64, !dbg !17807
  %43 = load i16*, i16** %top, align 8, !dbg !17807
  %arrayidx63 = getelementptr inbounds i16, i16* %43, i64 %idxprom62, !dbg !17807
  %44 = load i16, i16* %arrayidx63, align 2, !dbg !17807
  %conv64 = zext i16 %44 to i32, !dbg !17807
  %sub65 = sub nsw i32 %conv64, 32768, !dbg !17808
  %mul66 = mul nsw i32 2, %sub65, !dbg !17809
  br label %cond.end96, !dbg !17810

cond.false67:                                     ; preds = %cond.false53
  %45 = load i32, i32* %j, align 4, !dbg !17811
  %idxprom68 = sext i32 %45 to i64, !dbg !17813
  %46 = load i16*, i16** %bottom, align 8, !dbg !17813
  %arrayidx69 = getelementptr inbounds i16, i16* %46, i64 %idxprom68, !dbg !17813
  %47 = load i16, i16* %arrayidx69, align 2, !dbg !17813
  %conv70 = zext i16 %47 to i32, !dbg !17814
  %shl71 = shl i32 %conv70, 16, !dbg !17815
  %48 = load i32, i32* %j, align 4, !dbg !17816
  %idxprom72 = sext i32 %48 to i64, !dbg !17817
  %49 = load i16*, i16** %top, align 8, !dbg !17817
  %arrayidx73 = getelementptr inbounds i16, i16* %49, i64 %idxprom72, !dbg !17817
  %50 = load i16, i16* %arrayidx73, align 2, !dbg !17817
  %conv74 = zext i16 %50 to i32, !dbg !17817
  %sub75 = sub nsw i32 %conv74, 32768, !dbg !17818
  %mul76 = mul nsw i32 2, %sub75, !dbg !17819
  %sub77 = sub nsw i32 65535, %mul76, !dbg !17820
  %div78 = sdiv i32 %shl71, %sub77, !dbg !17821
  %cmp79 = icmp sgt i32 65535, %div78, !dbg !17822
  br i1 %cmp79, label %cond.true81, label %cond.false93, !dbg !17823

cond.true81:                                      ; preds = %cond.false67
  %51 = load i32, i32* %j, align 4, !dbg !17824
  %idxprom82 = sext i32 %51 to i64, !dbg !17826
  %52 = load i16*, i16** %bottom, align 8, !dbg !17826
  %arrayidx83 = getelementptr inbounds i16, i16* %52, i64 %idxprom82, !dbg !17826
  %53 = load i16, i16* %arrayidx83, align 2, !dbg !17826
  %conv84 = zext i16 %53 to i32, !dbg !17827
  %shl85 = shl i32 %conv84, 16, !dbg !17828
  %54 = load i32, i32* %j, align 4, !dbg !17829
  %idxprom86 = sext i32 %54 to i64, !dbg !17830
  %55 = load i16*, i16** %top, align 8, !dbg !17830
  %arrayidx87 = getelementptr inbounds i16, i16* %55, i64 %idxprom86, !dbg !17830
  %56 = load i16, i16* %arrayidx87, align 2, !dbg !17830
  %conv88 = zext i16 %56 to i32, !dbg !17830
  %sub89 = sub nsw i32 %conv88, 32768, !dbg !17831
  %mul90 = mul nsw i32 2, %sub89, !dbg !17832
  %sub91 = sub nsw i32 65535, %mul90, !dbg !17833
  %div92 = sdiv i32 %shl85, %sub91, !dbg !17834
  br label %cond.end94, !dbg !17835

cond.false93:                                     ; preds = %cond.false67
  br label %cond.end94, !dbg !17836

cond.end94:                                       ; preds = %cond.false93, %cond.true81
  %cond95 = phi i32 [ %div92, %cond.true81 ], [ 65535, %cond.false93 ], !dbg !17838
  br label %cond.end96, !dbg !17840

cond.end96:                                       ; preds = %cond.end94, %cond.true61
  %cond97 = phi i32 [ %mul66, %cond.true61 ], [ %cond95, %cond.end94 ], !dbg !17841
  br label %cond.end98, !dbg !17843

cond.end98:                                       ; preds = %cond.end96, %cond.end51
  %cond99 = phi i32 [ %cond52, %cond.end51 ], [ %cond97, %cond.end96 ], !dbg !17844
  %57 = load i32, i32* %j, align 4, !dbg !17846
  %idxprom100 = sext i32 %57 to i64, !dbg !17847
  %58 = load i16*, i16** %top, align 8, !dbg !17847
  %arrayidx101 = getelementptr inbounds i16, i16* %58, i64 %idxprom100, !dbg !17847
  %59 = load i16, i16* %arrayidx101, align 2, !dbg !17847
  %conv102 = zext i16 %59 to i32, !dbg !17847
  %sub103 = sub nsw i32 %cond99, %conv102, !dbg !17848
  %conv104 = sitofp i32 %sub103 to double, !dbg !17849
  %60 = load double, double* %opacity, align 8, !dbg !17850
  %mul105 = fmul double %conv104, %60, !dbg !17851
  %add = fadd double %conv11, %mul105, !dbg !17852
  %conv106 = fptoui double %add to i16, !dbg !17853
  %61 = load i32, i32* %j, align 4, !dbg !17854
  %idxprom107 = sext i32 %61 to i64, !dbg !17855
  %62 = load i16*, i16** %dst, align 8, !dbg !17855
  %arrayidx108 = getelementptr inbounds i16, i16* %62, i64 %idxprom107, !dbg !17855
  store i16 %conv106, i16* %arrayidx108, align 2, !dbg !17856
  br label %for.inc, !dbg !17857

for.inc:                                          ; preds = %cond.end98
  %63 = load i32, i32* %j, align 4, !dbg !17858
  %inc = add nsw i32 %63, 1, !dbg !17858
  store i32 %inc, i32* %j, align 4, !dbg !17858
  br label %for.cond5, !dbg !17860, !llvm.loop !17861

for.end:                                          ; preds = %for.cond5
  %64 = load i64, i64* %dst_linesize.addr, align 8, !dbg !17863
  %65 = load i16*, i16** %dst, align 8, !dbg !17865
  %add.ptr = getelementptr inbounds i16, i16* %65, i64 %64, !dbg !17865
  store i16* %add.ptr, i16** %dst, align 8, !dbg !17865
  %66 = load i64, i64* %top_linesize.addr, align 8, !dbg !17866
  %67 = load i16*, i16** %top, align 8, !dbg !17867
  %add.ptr109 = getelementptr inbounds i16, i16* %67, i64 %66, !dbg !17867
  store i16* %add.ptr109, i16** %top, align 8, !dbg !17867
  %68 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !17868
  %69 = load i16*, i16** %bottom, align 8, !dbg !17869
  %add.ptr110 = getelementptr inbounds i16, i16* %69, i64 %68, !dbg !17869
  store i16* %add.ptr110, i16** %bottom, align 8, !dbg !17869
  br label %for.inc111, !dbg !17870

for.inc111:                                       ; preds = %for.end
  %70 = load i32, i32* %i, align 4, !dbg !17871
  %inc112 = add nsw i32 %70, 1, !dbg !17871
  store i32 %inc112, i32* %i, align 4, !dbg !17871
  br label %for.cond, !dbg !17873, !llvm.loop !17874

for.end113:                                       ; preds = %for.cond
  ret void, !dbg !17876
}

; Function Attrs: nounwind uwtable
define internal void @blend_xor_16bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !17878 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %opacity = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !17879, metadata !905), !dbg !17880
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !17881, metadata !905), !dbg !17882
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !17883, metadata !905), !dbg !17884
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !17885, metadata !905), !dbg !17886
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !17887, metadata !905), !dbg !17888
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !17889, metadata !905), !dbg !17890
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !17891, metadata !905), !dbg !17892
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !17893, metadata !905), !dbg !17894
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !17895, metadata !905), !dbg !17896
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !17897, metadata !905), !dbg !17898
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !17899, metadata !905), !dbg !17900
  call void @llvm.dbg.declare(metadata i16** %top, metadata !17901, metadata !905), !dbg !17902
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !17903
  %1 = bitcast i8* %0 to i16*, !dbg !17904
  store i16* %1, i16** %top, align 8, !dbg !17902
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !17905, metadata !905), !dbg !17906
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !17907
  %3 = bitcast i8* %2 to i16*, !dbg !17908
  store i16* %3, i16** %bottom, align 8, !dbg !17906
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !17909, metadata !905), !dbg !17910
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !17911
  %5 = bitcast i8* %4 to i16*, !dbg !17912
  store i16* %5, i16** %dst, align 8, !dbg !17910
  call void @llvm.dbg.declare(metadata double* %opacity, metadata !17913, metadata !905), !dbg !17914
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !17915
  %opacity1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 1, !dbg !17916
  %7 = load double, double* %opacity1, align 8, !dbg !17916
  store double %7, double* %opacity, align 8, !dbg !17914
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17917, metadata !905), !dbg !17918
  call void @llvm.dbg.declare(metadata i32* %j, metadata !17919, metadata !905), !dbg !17920
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !17921
  %div = sdiv i64 %8, 2, !dbg !17921
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !17921
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !17922
  %div2 = sdiv i64 %9, 2, !dbg !17922
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !17922
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !17923
  %div3 = sdiv i64 %10, 2, !dbg !17923
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !17923
  store i32 0, i32* %i, align 4, !dbg !17924
  br label %for.cond, !dbg !17926

for.cond:                                         ; preds = %for.inc27, %entry
  %11 = load i32, i32* %i, align 4, !dbg !17927
  %conv = sext i32 %11 to i64, !dbg !17927
  %12 = load i64, i64* %height.addr, align 8, !dbg !17930
  %cmp = icmp slt i64 %conv, %12, !dbg !17931
  br i1 %cmp, label %for.body, label %for.end29, !dbg !17932

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !17933
  br label %for.cond5, !dbg !17937

for.cond5:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !17938
  %conv6 = sext i32 %13 to i64, !dbg !17938
  %14 = load i64, i64* %width.addr, align 8, !dbg !17941
  %cmp7 = icmp slt i64 %conv6, %14, !dbg !17942
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !17943

for.body9:                                        ; preds = %for.cond5
  %15 = load i32, i32* %j, align 4, !dbg !17944
  %idxprom = sext i32 %15 to i64, !dbg !17947
  %16 = load i16*, i16** %top, align 8, !dbg !17947
  %arrayidx = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !17947
  %17 = load i16, i16* %arrayidx, align 2, !dbg !17947
  %conv10 = zext i16 %17 to i32, !dbg !17947
  %conv11 = sitofp i32 %conv10 to double, !dbg !17947
  %18 = load i32, i32* %j, align 4, !dbg !17948
  %idxprom12 = sext i32 %18 to i64, !dbg !17949
  %19 = load i16*, i16** %top, align 8, !dbg !17949
  %arrayidx13 = getelementptr inbounds i16, i16* %19, i64 %idxprom12, !dbg !17949
  %20 = load i16, i16* %arrayidx13, align 2, !dbg !17949
  %conv14 = zext i16 %20 to i32, !dbg !17949
  %21 = load i32, i32* %j, align 4, !dbg !17950
  %idxprom15 = sext i32 %21 to i64, !dbg !17951
  %22 = load i16*, i16** %bottom, align 8, !dbg !17951
  %arrayidx16 = getelementptr inbounds i16, i16* %22, i64 %idxprom15, !dbg !17951
  %23 = load i16, i16* %arrayidx16, align 2, !dbg !17951
  %conv17 = zext i16 %23 to i32, !dbg !17951
  %xor = xor i32 %conv14, %conv17, !dbg !17952
  %24 = load i32, i32* %j, align 4, !dbg !17953
  %idxprom18 = sext i32 %24 to i64, !dbg !17954
  %25 = load i16*, i16** %top, align 8, !dbg !17954
  %arrayidx19 = getelementptr inbounds i16, i16* %25, i64 %idxprom18, !dbg !17954
  %26 = load i16, i16* %arrayidx19, align 2, !dbg !17954
  %conv20 = zext i16 %26 to i32, !dbg !17954
  %sub = sub nsw i32 %xor, %conv20, !dbg !17955
  %conv21 = sitofp i32 %sub to double, !dbg !17956
  %27 = load double, double* %opacity, align 8, !dbg !17957
  %mul = fmul double %conv21, %27, !dbg !17958
  %add = fadd double %conv11, %mul, !dbg !17959
  %conv22 = fptoui double %add to i16, !dbg !17947
  %28 = load i32, i32* %j, align 4, !dbg !17960
  %idxprom23 = sext i32 %28 to i64, !dbg !17961
  %29 = load i16*, i16** %dst, align 8, !dbg !17961
  %arrayidx24 = getelementptr inbounds i16, i16* %29, i64 %idxprom23, !dbg !17961
  store i16 %conv22, i16* %arrayidx24, align 2, !dbg !17962
  br label %for.inc, !dbg !17963

for.inc:                                          ; preds = %for.body9
  %30 = load i32, i32* %j, align 4, !dbg !17964
  %inc = add nsw i32 %30, 1, !dbg !17964
  store i32 %inc, i32* %j, align 4, !dbg !17964
  br label %for.cond5, !dbg !17966, !llvm.loop !17967

for.end:                                          ; preds = %for.cond5
  %31 = load i64, i64* %dst_linesize.addr, align 8, !dbg !17969
  %32 = load i16*, i16** %dst, align 8, !dbg !17971
  %add.ptr = getelementptr inbounds i16, i16* %32, i64 %31, !dbg !17971
  store i16* %add.ptr, i16** %dst, align 8, !dbg !17971
  %33 = load i64, i64* %top_linesize.addr, align 8, !dbg !17972
  %34 = load i16*, i16** %top, align 8, !dbg !17973
  %add.ptr25 = getelementptr inbounds i16, i16* %34, i64 %33, !dbg !17973
  store i16* %add.ptr25, i16** %top, align 8, !dbg !17973
  %35 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !17974
  %36 = load i16*, i16** %bottom, align 8, !dbg !17975
  %add.ptr26 = getelementptr inbounds i16, i16* %36, i64 %35, !dbg !17975
  store i16* %add.ptr26, i16** %bottom, align 8, !dbg !17975
  br label %for.inc27, !dbg !17976

for.inc27:                                        ; preds = %for.end
  %37 = load i32, i32* %i, align 4, !dbg !17977
  %inc28 = add nsw i32 %37, 1, !dbg !17977
  store i32 %inc28, i32* %i, align 4, !dbg !17977
  br label %for.cond, !dbg !17979, !llvm.loop !17980

for.end29:                                        ; preds = %for.cond
  ret void, !dbg !17982
}

declare void @ff_blend_init_x86(%struct.FilterParams*, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @blend_framesync_preinit(%struct.AVFilterContext* %ctx) #0 !dbg !17984 {
entry:
  %ctx.addr = alloca %struct.AVFilterContext*, align 8
  %s = alloca %struct.BlendContext*, align 8
  store %struct.AVFilterContext* %ctx, %struct.AVFilterContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx.addr, metadata !17985, metadata !905), !dbg !17986
  call void @llvm.dbg.declare(metadata %struct.BlendContext** %s, metadata !17987, metadata !905), !dbg !18043
  %0 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !18044
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %0, i32 0, i32 9, !dbg !18045
  %1 = load i8*, i8** %priv, align 8, !dbg !18045
  %2 = bitcast i8* %1 to %struct.BlendContext*, !dbg !18044
  store %struct.BlendContext* %2, %struct.BlendContext** %s, align 8, !dbg !18043
  %3 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !18046
  %fs = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %3, i32 0, i32 1, !dbg !18047
  call void @ff_framesync_preinit(%struct.FFFrameSync* %fs), !dbg !18048
  ret i32 0, !dbg !18049
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @init(%struct.AVFilterContext* %ctx) #3 !dbg !18050 {
entry:
  %ctx.addr = alloca %struct.AVFilterContext*, align 8
  %s = alloca %struct.BlendContext*, align 8
  store %struct.AVFilterContext* %ctx, %struct.AVFilterContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx.addr, metadata !18051, metadata !905), !dbg !18052
  call void @llvm.dbg.declare(metadata %struct.BlendContext** %s, metadata !18053, metadata !905), !dbg !18054
  %0 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !18055
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %0, i32 0, i32 9, !dbg !18056
  %1 = load i8*, i8** %priv, align 8, !dbg !18056
  %2 = bitcast i8* %1 to %struct.BlendContext*, !dbg !18055
  store %struct.BlendContext* %2, %struct.BlendContext** %s, align 8, !dbg !18054
  %3 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !18057
  %filter = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %3, i32 0, i32 1, !dbg !18058
  %4 = load %struct.AVFilter*, %struct.AVFilter** %filter, align 8, !dbg !18058
  %name = getelementptr inbounds %struct.AVFilter, %struct.AVFilter* %4, i32 0, i32 0, !dbg !18059
  %5 = load i8*, i8** %name, align 8, !dbg !18059
  %call = call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0)) #8, !dbg !18060
  %tobool = icmp ne i32 %call, 0, !dbg !18061
  %lnot = xor i1 %tobool, true, !dbg !18061
  %lnot.ext = zext i1 %lnot to i32, !dbg !18061
  %6 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !18062
  %tblend = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %6, i32 0, i32 10, !dbg !18063
  store i32 %lnot.ext, i32* %tblend, align 8, !dbg !18064
  %7 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !18065
  %fs = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %7, i32 0, i32 1, !dbg !18066
  %on_event = getelementptr inbounds %struct.FFFrameSync, %struct.FFFrameSync* %fs, i32 0, i32 5, !dbg !18067
  store i32 (%struct.FFFrameSync*)* @blend_frame_for_dualinput, i32 (%struct.FFFrameSync*)** %on_event, align 8, !dbg !18068
  ret i32 0, !dbg !18069
}

; Function Attrs: cold nounwind optsize uwtable
define internal void @uninit(%struct.AVFilterContext* %ctx) #3 !dbg !18070 {
entry:
  %ctx.addr = alloca %struct.AVFilterContext*, align 8
  %s = alloca %struct.BlendContext*, align 8
  %i = alloca i32, align 4
  store %struct.AVFilterContext* %ctx, %struct.AVFilterContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx.addr, metadata !18071, metadata !905), !dbg !18072
  call void @llvm.dbg.declare(metadata %struct.BlendContext** %s, metadata !18073, metadata !905), !dbg !18074
  %0 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !18075
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %0, i32 0, i32 9, !dbg !18076
  %1 = load i8*, i8** %priv, align 8, !dbg !18076
  %2 = bitcast i8* %1 to %struct.BlendContext*, !dbg !18075
  store %struct.BlendContext* %2, %struct.BlendContext** %s, align 8, !dbg !18074
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18077, metadata !905), !dbg !18078
  %3 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !18079
  %fs = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %3, i32 0, i32 1, !dbg !18080
  call void @ff_framesync_uninit(%struct.FFFrameSync* %fs), !dbg !18081
  %4 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !18082
  %prev_frame = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %4, i32 0, i32 11, !dbg !18083
  call void @av_frame_free(%struct.AVFrame** %prev_frame), !dbg !18084
  store i32 0, i32* %i, align 4, !dbg !18085
  br label %for.cond, !dbg !18087

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %i, align 4, !dbg !18088
  %conv = sext i32 %5 to i64, !dbg !18088
  %cmp = icmp ult i64 %conv, 4, !dbg !18091
  br i1 %cmp, label %for.body, label %for.end, !dbg !18092

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !18093
  %idxprom = sext i32 %6 to i64, !dbg !18094
  %7 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !18094
  %params = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %7, i32 0, i32 9, !dbg !18095
  %arrayidx = getelementptr inbounds [4 x %struct.FilterParams], [4 x %struct.FilterParams]* %params, i64 0, i64 %idxprom, !dbg !18094
  %e = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %arrayidx, i32 0, i32 2, !dbg !18096
  %8 = load %struct.AVExpr*, %struct.AVExpr** %e, align 8, !dbg !18096
  call void @av_expr_free(%struct.AVExpr* %8), !dbg !18097
  br label %for.inc, !dbg !18097

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !18098
  %inc = add nsw i32 %9, 1, !dbg !18098
  store i32 %inc, i32* %i, align 4, !dbg !18098
  br label %for.cond, !dbg !18100, !llvm.loop !18101

for.end:                                          ; preds = %for.cond
  ret void, !dbg !18103
}

; Function Attrs: nounwind uwtable
define internal i32 @query_formats(%struct.AVFilterContext* %ctx) #0 !dbg !868 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.AVFilterContext*, align 8
  %fmts_list = alloca %struct.AVFilterFormats*, align 8
  store %struct.AVFilterContext* %ctx, %struct.AVFilterContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx.addr, metadata !18104, metadata !905), !dbg !18105
  call void @llvm.dbg.declare(metadata %struct.AVFilterFormats** %fmts_list, metadata !18106, metadata !905), !dbg !18107
  %call = call %struct.AVFilterFormats* @ff_make_format_list(i32* getelementptr inbounds ([44 x i32], [44 x i32]* @query_formats.pix_fmts, i32 0, i32 0)), !dbg !18108
  store %struct.AVFilterFormats* %call, %struct.AVFilterFormats** %fmts_list, align 8, !dbg !18107
  %0 = load %struct.AVFilterFormats*, %struct.AVFilterFormats** %fmts_list, align 8, !dbg !18109
  %tobool = icmp ne %struct.AVFilterFormats* %0, null, !dbg !18109
  br i1 %tobool, label %if.end, label %if.then, !dbg !18111

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !18112
  br label %return, !dbg !18112

if.end:                                           ; preds = %entry
  %1 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !18113
  %2 = load %struct.AVFilterFormats*, %struct.AVFilterFormats** %fmts_list, align 8, !dbg !18114
  %call1 = call i32 @ff_set_common_formats(%struct.AVFilterContext* %1, %struct.AVFilterFormats* %2), !dbg !18115
  store i32 %call1, i32* %retval, align 4, !dbg !18116
  br label %return, !dbg !18116

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !18117
  ret i32 %3, !dbg !18117
}

; Function Attrs: nounwind uwtable
define internal i32 @activate(%struct.AVFilterContext* %ctx) #0 !dbg !18118 {
entry:
  %ctx.addr = alloca %struct.AVFilterContext*, align 8
  %s = alloca %struct.BlendContext*, align 8
  store %struct.AVFilterContext* %ctx, %struct.AVFilterContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx.addr, metadata !18119, metadata !905), !dbg !18120
  call void @llvm.dbg.declare(metadata %struct.BlendContext** %s, metadata !18121, metadata !905), !dbg !18122
  %0 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !18123
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %0, i32 0, i32 9, !dbg !18124
  %1 = load i8*, i8** %priv, align 8, !dbg !18124
  %2 = bitcast i8* %1 to %struct.BlendContext*, !dbg !18123
  store %struct.BlendContext* %2, %struct.BlendContext** %s, align 8, !dbg !18122
  %3 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !18125
  %fs = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %3, i32 0, i32 1, !dbg !18126
  %call = call i32 @ff_framesync_activate(%struct.FFFrameSync* %fs), !dbg !18127
  ret i32 %call, !dbg !18128
}

declare void @av_image_copy_plane(i8*, i32, i8*, i32, i32, i32) #2

; Function Attrs: nounwind readnone
declare double @fabs(double) #4

; Function Attrs: nounwind uwtable
define internal i32 @config_output(%struct.AVFilterLink* %outlink) #0 !dbg !18129 {
entry:
  %retval = alloca i32, align 4
  %outlink.addr = alloca %struct.AVFilterLink*, align 8
  %ctx = alloca %struct.AVFilterContext*, align 8
  %toplink = alloca %struct.AVFilterLink*, align 8
  %s = alloca %struct.BlendContext*, align 8
  %pix_desc = alloca %struct.AVPixFmtDescriptor*, align 8
  %ret = alloca i32, align 4
  %plane = alloca i32, align 4
  %bottomlink = alloca %struct.AVFilterLink*, align 8
  %param = alloca %struct.FilterParams*, align 8
  store %struct.AVFilterLink* %outlink, %struct.AVFilterLink** %outlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterLink** %outlink.addr, metadata !18130, metadata !905), !dbg !18131
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx, metadata !18132, metadata !905), !dbg !18133
  %0 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !18134
  %src = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %0, i32 0, i32 0, !dbg !18135
  %1 = load %struct.AVFilterContext*, %struct.AVFilterContext** %src, align 8, !dbg !18135
  store %struct.AVFilterContext* %1, %struct.AVFilterContext** %ctx, align 8, !dbg !18133
  call void @llvm.dbg.declare(metadata %struct.AVFilterLink** %toplink, metadata !18136, metadata !905), !dbg !18137
  %2 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !18138
  %inputs = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %2, i32 0, i32 4, !dbg !18139
  %3 = load %struct.AVFilterLink**, %struct.AVFilterLink*** %inputs, align 8, !dbg !18139
  %arrayidx = getelementptr inbounds %struct.AVFilterLink*, %struct.AVFilterLink** %3, i64 0, !dbg !18138
  %4 = load %struct.AVFilterLink*, %struct.AVFilterLink** %arrayidx, align 8, !dbg !18138
  store %struct.AVFilterLink* %4, %struct.AVFilterLink** %toplink, align 8, !dbg !18137
  call void @llvm.dbg.declare(metadata %struct.BlendContext** %s, metadata !18140, metadata !905), !dbg !18141
  %5 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !18142
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %5, i32 0, i32 9, !dbg !18143
  %6 = load i8*, i8** %priv, align 8, !dbg !18143
  %7 = bitcast i8* %6 to %struct.BlendContext*, !dbg !18142
  store %struct.BlendContext* %7, %struct.BlendContext** %s, align 8, !dbg !18141
  call void @llvm.dbg.declare(metadata %struct.AVPixFmtDescriptor** %pix_desc, metadata !18144, metadata !905), !dbg !18170
  %8 = load %struct.AVFilterLink*, %struct.AVFilterLink** %toplink, align 8, !dbg !18171
  %format = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %8, i32 0, i32 10, !dbg !18172
  %9 = load i32, i32* %format, align 4, !dbg !18172
  %call = call %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32 %9), !dbg !18173
  store %struct.AVPixFmtDescriptor* %call, %struct.AVPixFmtDescriptor** %pix_desc, align 8, !dbg !18170
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !18174, metadata !905), !dbg !18175
  call void @llvm.dbg.declare(metadata i32* %plane, metadata !18176, metadata !905), !dbg !18177
  %10 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !18178
  %tblend = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %10, i32 0, i32 10, !dbg !18180
  %11 = load i32, i32* %tblend, align 8, !dbg !18180
  %tobool = icmp ne i32 %11, 0, !dbg !18178
  br i1 %tobool, label %if.end20, label %if.then, !dbg !18181

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.AVFilterLink** %bottomlink, metadata !18182, metadata !905), !dbg !18184
  %12 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !18185
  %inputs1 = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %12, i32 0, i32 4, !dbg !18186
  %13 = load %struct.AVFilterLink**, %struct.AVFilterLink*** %inputs1, align 8, !dbg !18186
  %arrayidx2 = getelementptr inbounds %struct.AVFilterLink*, %struct.AVFilterLink** %13, i64 1, !dbg !18185
  %14 = load %struct.AVFilterLink*, %struct.AVFilterLink** %arrayidx2, align 8, !dbg !18185
  store %struct.AVFilterLink* %14, %struct.AVFilterLink** %bottomlink, align 8, !dbg !18184
  %15 = load %struct.AVFilterLink*, %struct.AVFilterLink** %toplink, align 8, !dbg !18187
  %format3 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %15, i32 0, i32 10, !dbg !18189
  %16 = load i32, i32* %format3, align 4, !dbg !18189
  %17 = load %struct.AVFilterLink*, %struct.AVFilterLink** %bottomlink, align 8, !dbg !18190
  %format4 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %17, i32 0, i32 10, !dbg !18191
  %18 = load i32, i32* %format4, align 4, !dbg !18191
  %cmp = icmp ne i32 %16, %18, !dbg !18192
  br i1 %cmp, label %if.then5, label %if.end, !dbg !18193

if.then5:                                         ; preds = %if.then
  %19 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !18194
  %20 = bitcast %struct.AVFilterContext* %19 to i8*, !dbg !18194
  call void (i8*, i32, i8*, ...) @av_log(i8* %20, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7, i32 0, i32 0)), !dbg !18196
  store i32 -22, i32* %retval, align 4, !dbg !18197
  br label %return, !dbg !18197

if.end:                                           ; preds = %if.then
  %21 = load %struct.AVFilterLink*, %struct.AVFilterLink** %toplink, align 8, !dbg !18198
  %w = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %21, i32 0, i32 5, !dbg !18200
  %22 = load i32, i32* %w, align 4, !dbg !18200
  %23 = load %struct.AVFilterLink*, %struct.AVFilterLink** %bottomlink, align 8, !dbg !18201
  %w6 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %23, i32 0, i32 5, !dbg !18202
  %24 = load i32, i32* %w6, align 4, !dbg !18202
  %cmp7 = icmp ne i32 %22, %24, !dbg !18203
  br i1 %cmp7, label %if.then10, label %lor.lhs.false, !dbg !18204

lor.lhs.false:                                    ; preds = %if.end
  %25 = load %struct.AVFilterLink*, %struct.AVFilterLink** %toplink, align 8, !dbg !18205
  %h = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %25, i32 0, i32 6, !dbg !18207
  %26 = load i32, i32* %h, align 8, !dbg !18207
  %27 = load %struct.AVFilterLink*, %struct.AVFilterLink** %bottomlink, align 8, !dbg !18208
  %h8 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %27, i32 0, i32 6, !dbg !18209
  %28 = load i32, i32* %h8, align 8, !dbg !18209
  %cmp9 = icmp ne i32 %26, %28, !dbg !18210
  br i1 %cmp9, label %if.then10, label %if.end19, !dbg !18211

if.then10:                                        ; preds = %lor.lhs.false, %if.end
  %29 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !18212
  %30 = bitcast %struct.AVFilterContext* %29 to i8*, !dbg !18212
  %31 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !18214
  %input_pads = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %31, i32 0, i32 3, !dbg !18215
  %32 = load %struct.AVFilterPad*, %struct.AVFilterPad** %input_pads, align 8, !dbg !18215
  %arrayidx11 = getelementptr inbounds %struct.AVFilterPad, %struct.AVFilterPad* %32, i64 0, !dbg !18214
  %name = getelementptr inbounds %struct.AVFilterPad, %struct.AVFilterPad* %arrayidx11, i32 0, i32 0, !dbg !18216
  %33 = load i8*, i8** %name, align 8, !dbg !18216
  %34 = load %struct.AVFilterLink*, %struct.AVFilterLink** %toplink, align 8, !dbg !18217
  %w12 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %34, i32 0, i32 5, !dbg !18218
  %35 = load i32, i32* %w12, align 4, !dbg !18218
  %36 = load %struct.AVFilterLink*, %struct.AVFilterLink** %toplink, align 8, !dbg !18219
  %h13 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %36, i32 0, i32 6, !dbg !18220
  %37 = load i32, i32* %h13, align 8, !dbg !18220
  %38 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !18221
  %input_pads14 = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %38, i32 0, i32 3, !dbg !18222
  %39 = load %struct.AVFilterPad*, %struct.AVFilterPad** %input_pads14, align 8, !dbg !18222
  %arrayidx15 = getelementptr inbounds %struct.AVFilterPad, %struct.AVFilterPad* %39, i64 1, !dbg !18221
  %name16 = getelementptr inbounds %struct.AVFilterPad, %struct.AVFilterPad* %arrayidx15, i32 0, i32 0, !dbg !18223
  %40 = load i8*, i8** %name16, align 8, !dbg !18223
  %41 = load %struct.AVFilterLink*, %struct.AVFilterLink** %bottomlink, align 8, !dbg !18224
  %w17 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %41, i32 0, i32 5, !dbg !18225
  %42 = load i32, i32* %w17, align 4, !dbg !18225
  %43 = load %struct.AVFilterLink*, %struct.AVFilterLink** %bottomlink, align 8, !dbg !18226
  %h18 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %43, i32 0, i32 6, !dbg !18227
  %44 = load i32, i32* %h18, align 8, !dbg !18227
  call void (i8*, i32, i8*, ...) @av_log(i8* %30, i32 16, i8* getelementptr inbounds ([121 x i8], [121 x i8]* @.str.8, i32 0, i32 0), i8* %33, i32 %35, i32 %37, i8* %40, i32 %42, i32 %44), !dbg !18228
  store i32 -22, i32* %retval, align 4, !dbg !18229
  br label %return, !dbg !18229

if.end19:                                         ; preds = %lor.lhs.false
  br label %if.end20, !dbg !18230

if.end20:                                         ; preds = %if.end19, %entry
  %45 = load %struct.AVFilterLink*, %struct.AVFilterLink** %toplink, align 8, !dbg !18231
  %w21 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %45, i32 0, i32 5, !dbg !18232
  %46 = load i32, i32* %w21, align 4, !dbg !18232
  %47 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !18233
  %w22 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %47, i32 0, i32 5, !dbg !18234
  store i32 %46, i32* %w22, align 4, !dbg !18235
  %48 = load %struct.AVFilterLink*, %struct.AVFilterLink** %toplink, align 8, !dbg !18236
  %h23 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %48, i32 0, i32 6, !dbg !18237
  %49 = load i32, i32* %h23, align 8, !dbg !18237
  %50 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !18238
  %h24 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %50, i32 0, i32 6, !dbg !18239
  store i32 %49, i32* %h24, align 8, !dbg !18240
  %51 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !18241
  %time_base = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %51, i32 0, i32 11, !dbg !18242
  %52 = load %struct.AVFilterLink*, %struct.AVFilterLink** %toplink, align 8, !dbg !18243
  %time_base25 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %52, i32 0, i32 11, !dbg !18244
  %53 = bitcast %struct.AVRational* %time_base to i8*, !dbg !18244
  %54 = bitcast %struct.AVRational* %time_base25 to i8*, !dbg !18244
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 8, i32 8, i1 false), !dbg !18244
  %55 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !18245
  %sample_aspect_ratio = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %55, i32 0, i32 7, !dbg !18246
  %56 = load %struct.AVFilterLink*, %struct.AVFilterLink** %toplink, align 8, !dbg !18247
  %sample_aspect_ratio26 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %56, i32 0, i32 7, !dbg !18248
  %57 = bitcast %struct.AVRational* %sample_aspect_ratio to i8*, !dbg !18248
  %58 = bitcast %struct.AVRational* %sample_aspect_ratio26 to i8*, !dbg !18248
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %57, i8* %58, i64 8, i32 4, i1 false), !dbg !18248
  %59 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !18249
  %frame_rate = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %59, i32 0, i32 24, !dbg !18250
  %60 = load %struct.AVFilterLink*, %struct.AVFilterLink** %toplink, align 8, !dbg !18251
  %frame_rate27 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %60, i32 0, i32 24, !dbg !18252
  %61 = bitcast %struct.AVRational* %frame_rate to i8*, !dbg !18252
  %62 = bitcast %struct.AVRational* %frame_rate27 to i8*, !dbg !18252
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %61, i8* %62, i64 8, i32 4, i1 false), !dbg !18252
  %63 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %pix_desc, align 8, !dbg !18253
  %log2_chroma_w = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %63, i32 0, i32 2, !dbg !18254
  %64 = load i8, i8* %log2_chroma_w, align 1, !dbg !18254
  %conv = zext i8 %64 to i32, !dbg !18253
  %65 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !18255
  %hsub = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %65, i32 0, i32 2, !dbg !18256
  store i32 %conv, i32* %hsub, align 8, !dbg !18257
  %66 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %pix_desc, align 8, !dbg !18258
  %log2_chroma_h = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %66, i32 0, i32 3, !dbg !18259
  %67 = load i8, i8* %log2_chroma_h, align 2, !dbg !18259
  %conv28 = zext i8 %67 to i32, !dbg !18258
  %68 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !18260
  %vsub = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %68, i32 0, i32 3, !dbg !18261
  store i32 %conv28, i32* %vsub, align 4, !dbg !18262
  %69 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %pix_desc, align 8, !dbg !18263
  %comp = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %69, i32 0, i32 5, !dbg !18264
  %arrayidx29 = getelementptr inbounds [4 x %struct.AVComponentDescriptor], [4 x %struct.AVComponentDescriptor]* %comp, i64 0, i64 0, !dbg !18263
  %depth = getelementptr inbounds %struct.AVComponentDescriptor, %struct.AVComponentDescriptor* %arrayidx29, i32 0, i32 4, !dbg !18265
  %70 = load i32, i32* %depth, align 8, !dbg !18265
  %71 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !18266
  %depth30 = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %71, i32 0, i32 8, !dbg !18267
  store i32 %70, i32* %depth30, align 8, !dbg !18268
  %72 = load %struct.AVFilterLink*, %struct.AVFilterLink** %toplink, align 8, !dbg !18269
  %format31 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %72, i32 0, i32 10, !dbg !18270
  %73 = load i32, i32* %format31, align 4, !dbg !18270
  %call32 = call i32 @av_pix_fmt_count_planes(i32 %73), !dbg !18271
  %74 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !18272
  %nb_planes = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %74, i32 0, i32 4, !dbg !18273
  store i32 %call32, i32* %nb_planes, align 8, !dbg !18274
  %75 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !18275
  %tblend33 = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %75, i32 0, i32 10, !dbg !18277
  %76 = load i32, i32* %tblend33, align 8, !dbg !18277
  %tobool34 = icmp ne i32 %76, 0, !dbg !18275
  br i1 %tobool34, label %if.end41, label %if.then35, !dbg !18278

if.then35:                                        ; preds = %if.end20
  %77 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !18279
  %fs = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %77, i32 0, i32 1, !dbg !18281
  %78 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !18282
  %call36 = call i32 @ff_framesync_init_dualinput(%struct.FFFrameSync* %fs, %struct.AVFilterContext* %78), !dbg !18283
  store i32 %call36, i32* %ret, align 4, !dbg !18284
  %cmp37 = icmp slt i32 %call36, 0, !dbg !18285
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !18286

if.then39:                                        ; preds = %if.then35
  %79 = load i32, i32* %ret, align 4, !dbg !18287
  store i32 %79, i32* %retval, align 4, !dbg !18288
  br label %return, !dbg !18288

if.end40:                                         ; preds = %if.then35
  br label %if.end41, !dbg !18289

if.end41:                                         ; preds = %if.end40, %if.end20
  store i32 0, i32* %plane, align 4, !dbg !18291
  br label %for.cond, !dbg !18293

for.cond:                                         ; preds = %for.inc, %if.end41
  %80 = load i32, i32* %plane, align 4, !dbg !18294
  %conv42 = sext i32 %80 to i64, !dbg !18294
  %cmp43 = icmp ult i64 %conv42, 4, !dbg !18297
  br i1 %cmp43, label %for.body, label %for.end, !dbg !18298

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param, metadata !18299, metadata !905), !dbg !18301
  %81 = load i32, i32* %plane, align 4, !dbg !18302
  %idxprom = sext i32 %81 to i64, !dbg !18303
  %82 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !18303
  %params = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %82, i32 0, i32 9, !dbg !18304
  %arrayidx45 = getelementptr inbounds [4 x %struct.FilterParams], [4 x %struct.FilterParams]* %params, i64 0, i64 %idxprom, !dbg !18303
  store %struct.FilterParams* %arrayidx45, %struct.FilterParams** %param, align 8, !dbg !18301
  %83 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !18305
  %all_mode = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %83, i32 0, i32 6, !dbg !18307
  %84 = load i32, i32* %all_mode, align 8, !dbg !18307
  %cmp46 = icmp sge i32 %84, 0, !dbg !18308
  br i1 %cmp46, label %if.then48, label %if.end50, !dbg !18309

if.then48:                                        ; preds = %for.body
  %85 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !18310
  %all_mode49 = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %85, i32 0, i32 6, !dbg !18311
  %86 = load i32, i32* %all_mode49, align 8, !dbg !18311
  %87 = load %struct.FilterParams*, %struct.FilterParams** %param, align 8, !dbg !18312
  %mode = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %87, i32 0, i32 0, !dbg !18313
  store i32 %86, i32* %mode, align 8, !dbg !18314
  br label %if.end50, !dbg !18312

if.end50:                                         ; preds = %if.then48, %for.body
  %88 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !18315
  %all_opacity = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %88, i32 0, i32 7, !dbg !18317
  %89 = load double, double* %all_opacity, align 8, !dbg !18317
  %cmp51 = fcmp olt double %89, 1.000000e+00, !dbg !18318
  br i1 %cmp51, label %if.then53, label %if.end55, !dbg !18319

if.then53:                                        ; preds = %if.end50
  %90 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !18320
  %all_opacity54 = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %90, i32 0, i32 7, !dbg !18321
  %91 = load double, double* %all_opacity54, align 8, !dbg !18321
  %92 = load %struct.FilterParams*, %struct.FilterParams** %param, align 8, !dbg !18322
  %opacity = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %92, i32 0, i32 1, !dbg !18323
  store double %91, double* %opacity, align 8, !dbg !18324
  br label %if.end55, !dbg !18322

if.end55:                                         ; preds = %if.then53, %if.end50
  %93 = load %struct.FilterParams*, %struct.FilterParams** %param, align 8, !dbg !18325
  %94 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !18326
  %depth56 = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %94, i32 0, i32 8, !dbg !18327
  %95 = load i32, i32* %depth56, align 8, !dbg !18327
  call void @ff_blend_init(%struct.FilterParams* %93, i32 %95), !dbg !18328
  %96 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !18329
  %all_expr = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %96, i32 0, i32 5, !dbg !18331
  %97 = load i8*, i8** %all_expr, align 8, !dbg !18331
  %tobool57 = icmp ne i8* %97, null, !dbg !18329
  br i1 %tobool57, label %land.lhs.true, label %if.end67, !dbg !18332

land.lhs.true:                                    ; preds = %if.end55
  %98 = load %struct.FilterParams*, %struct.FilterParams** %param, align 8, !dbg !18333
  %expr_str = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %98, i32 0, i32 3, !dbg !18335
  %99 = load i8*, i8** %expr_str, align 8, !dbg !18335
  %tobool58 = icmp ne i8* %99, null, !dbg !18333
  br i1 %tobool58, label %if.end67, label %if.then59, !dbg !18336

if.then59:                                        ; preds = %land.lhs.true
  %100 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !18337
  %all_expr60 = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %100, i32 0, i32 5, !dbg !18339
  %101 = load i8*, i8** %all_expr60, align 8, !dbg !18339
  %call61 = call noalias i8* @av_strdup(i8* %101), !dbg !18340
  %102 = load %struct.FilterParams*, %struct.FilterParams** %param, align 8, !dbg !18341
  %expr_str62 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %102, i32 0, i32 3, !dbg !18342
  store i8* %call61, i8** %expr_str62, align 8, !dbg !18343
  %103 = load %struct.FilterParams*, %struct.FilterParams** %param, align 8, !dbg !18344
  %expr_str63 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %103, i32 0, i32 3, !dbg !18346
  %104 = load i8*, i8** %expr_str63, align 8, !dbg !18346
  %tobool64 = icmp ne i8* %104, null, !dbg !18344
  br i1 %tobool64, label %if.end66, label %if.then65, !dbg !18347

if.then65:                                        ; preds = %if.then59
  store i32 -12, i32* %retval, align 4, !dbg !18348
  br label %return, !dbg !18348

if.end66:                                         ; preds = %if.then59
  br label %if.end67, !dbg !18349

if.end67:                                         ; preds = %if.end66, %land.lhs.true, %if.end55
  %105 = load %struct.FilterParams*, %struct.FilterParams** %param, align 8, !dbg !18350
  %expr_str68 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %105, i32 0, i32 3, !dbg !18352
  %106 = load i8*, i8** %expr_str68, align 8, !dbg !18352
  %tobool69 = icmp ne i8* %106, null, !dbg !18350
  br i1 %tobool69, label %if.then70, label %if.end80, !dbg !18353

if.then70:                                        ; preds = %if.end67
  %107 = load %struct.FilterParams*, %struct.FilterParams** %param, align 8, !dbg !18354
  %e = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %107, i32 0, i32 2, !dbg !18356
  %108 = load %struct.FilterParams*, %struct.FilterParams** %param, align 8, !dbg !18357
  %expr_str71 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %108, i32 0, i32 3, !dbg !18358
  %109 = load i8*, i8** %expr_str71, align 8, !dbg !18358
  %110 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !18359
  %111 = bitcast %struct.AVFilterContext* %110 to i8*, !dbg !18359
  %call72 = call i32 @av_expr_parse(%struct.AVExpr** %e, i8* %109, i8** getelementptr inbounds ([13 x i8*], [13 x i8*]* @var_names, i32 0, i32 0), i8** null, double (i8*, double)** null, i8** null, double (i8*, double, double)** null, i32 0, i8* %111), !dbg !18360
  store i32 %call72, i32* %ret, align 4, !dbg !18361
  %112 = load i32, i32* %ret, align 4, !dbg !18362
  %cmp73 = icmp slt i32 %112, 0, !dbg !18364
  br i1 %cmp73, label %if.then75, label %if.end76, !dbg !18365

if.then75:                                        ; preds = %if.then70
  %113 = load i32, i32* %ret, align 4, !dbg !18366
  store i32 %113, i32* %retval, align 4, !dbg !18367
  br label %return, !dbg !18367

if.end76:                                         ; preds = %if.then70
  %114 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !18368
  %depth77 = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %114, i32 0, i32 8, !dbg !18369
  %115 = load i32, i32* %depth77, align 8, !dbg !18369
  %cmp78 = icmp sgt i32 %115, 8, !dbg !18370
  %cond = select i1 %cmp78, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_expr_16bit, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* @blend_expr_8bit, !dbg !18368
  %116 = load %struct.FilterParams*, %struct.FilterParams** %param, align 8, !dbg !18371
  %blend = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %116, i32 0, i32 4, !dbg !18372
  store void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)* %cond, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend, align 8, !dbg !18373
  br label %if.end80, !dbg !18374

if.end80:                                         ; preds = %if.end76, %if.end67
  br label %for.inc, !dbg !18375

for.inc:                                          ; preds = %if.end80
  %117 = load i32, i32* %plane, align 4, !dbg !18376
  %inc = add nsw i32 %117, 1, !dbg !18376
  store i32 %inc, i32* %plane, align 4, !dbg !18376
  br label %for.cond, !dbg !18378, !llvm.loop !18379

for.end:                                          ; preds = %for.cond
  %118 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !18381
  %tblend81 = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %118, i32 0, i32 10, !dbg !18382
  %119 = load i32, i32* %tblend81, align 8, !dbg !18382
  %tobool82 = icmp ne i32 %119, 0, !dbg !18381
  br i1 %tobool82, label %cond.true, label %cond.false, !dbg !18381

cond.true:                                        ; preds = %for.end
  br label %cond.end, !dbg !18383

cond.false:                                       ; preds = %for.end
  %120 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !18385
  %fs83 = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %120, i32 0, i32 1, !dbg !18387
  %call84 = call i32 @ff_framesync_configure(%struct.FFFrameSync* %fs83), !dbg !18388
  br label %cond.end, !dbg !18389

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond85 = phi i32 [ 0, %cond.true ], [ %call84, %cond.false ], !dbg !18390
  store i32 %cond85, i32* %retval, align 4, !dbg !18392
  br label %return, !dbg !18392

return:                                           ; preds = %cond.end, %if.then75, %if.then65, %if.then39, %if.then10, %if.then5
  %121 = load i32, i32* %retval, align 4, !dbg !18393
  ret i32 %121, !dbg !18393
}

declare %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32) #2

declare void @av_log(i8*, i32, i8*, ...) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #5

declare i32 @av_pix_fmt_count_planes(i32) #2

declare i32 @ff_framesync_init_dualinput(%struct.FFFrameSync*, %struct.AVFilterContext*) #2

declare noalias i8* @av_strdup(i8*) #2

declare i32 @av_expr_parse(%struct.AVExpr**, i8*, i8**, i8**, double (i8*, double)**, i8**, double (i8*, double, double)**, i32, i8*) #2

; Function Attrs: nounwind uwtable
define internal void @blend_expr_16bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !18394 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i16*, align 8
  %bottom = alloca i16*, align 8
  %dst = alloca i16*, align 8
  %e = alloca %struct.AVExpr*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !18395, metadata !905), !dbg !18396
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !18397, metadata !905), !dbg !18398
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !18399, metadata !905), !dbg !18400
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !18401, metadata !905), !dbg !18402
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !18403, metadata !905), !dbg !18404
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !18405, metadata !905), !dbg !18406
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !18407, metadata !905), !dbg !18408
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !18409, metadata !905), !dbg !18410
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !18411, metadata !905), !dbg !18412
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !18413, metadata !905), !dbg !18414
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !18415, metadata !905), !dbg !18416
  call void @llvm.dbg.declare(metadata i16** %top, metadata !18417, metadata !905), !dbg !18418
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !18419
  %1 = bitcast i8* %0 to i16*, !dbg !18420
  store i16* %1, i16** %top, align 8, !dbg !18418
  call void @llvm.dbg.declare(metadata i16** %bottom, metadata !18421, metadata !905), !dbg !18422
  %2 = load i8*, i8** %_bottom.addr, align 8, !dbg !18423
  %3 = bitcast i8* %2 to i16*, !dbg !18424
  store i16* %3, i16** %bottom, align 8, !dbg !18422
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !18425, metadata !905), !dbg !18426
  %4 = load i8*, i8** %_dst.addr, align 8, !dbg !18427
  %5 = bitcast i8* %4 to i16*, !dbg !18428
  store i16* %5, i16** %dst, align 8, !dbg !18426
  call void @llvm.dbg.declare(metadata %struct.AVExpr** %e, metadata !18429, metadata !905), !dbg !18430
  %6 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !18431
  %e1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %6, i32 0, i32 2, !dbg !18432
  %7 = load %struct.AVExpr*, %struct.AVExpr** %e1, align 8, !dbg !18432
  store %struct.AVExpr* %7, %struct.AVExpr** %e, align 8, !dbg !18430
  call void @llvm.dbg.declare(metadata i32* %y, metadata !18433, metadata !905), !dbg !18434
  call void @llvm.dbg.declare(metadata i32* %x, metadata !18435, metadata !905), !dbg !18436
  %8 = load i64, i64* %dst_linesize.addr, align 8, !dbg !18437
  %div = sdiv i64 %8, 2, !dbg !18437
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !18437
  %9 = load i64, i64* %top_linesize.addr, align 8, !dbg !18438
  %div2 = sdiv i64 %9, 2, !dbg !18438
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !18438
  %10 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !18439
  %div3 = sdiv i64 %10, 2, !dbg !18439
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !18439
  store i32 0, i32* %y, align 4, !dbg !18440
  br label %for.cond, !dbg !18442

for.cond:                                         ; preds = %for.inc27, %entry
  %11 = load i32, i32* %y, align 4, !dbg !18443
  %conv = sext i32 %11 to i64, !dbg !18443
  %12 = load i64, i64* %height.addr, align 8, !dbg !18446
  %cmp = icmp slt i64 %conv, %12, !dbg !18447
  br i1 %cmp, label %for.body, label %for.end29, !dbg !18448

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %y, align 4, !dbg !18449
  %14 = load i32, i32* %starty.addr, align 4, !dbg !18452
  %add = add nsw i32 %13, %14, !dbg !18453
  %conv5 = sitofp i32 %add to double, !dbg !18449
  %15 = load double*, double** %values.addr, align 8, !dbg !18454
  %arrayidx = getelementptr inbounds double, double* %15, i64 1, !dbg !18454
  store double %conv5, double* %arrayidx, align 8, !dbg !18455
  store i32 0, i32* %x, align 4, !dbg !18456
  br label %for.cond6, !dbg !18457

for.cond6:                                        ; preds = %for.inc, %for.body
  %16 = load i32, i32* %x, align 4, !dbg !18458
  %conv7 = sext i32 %16 to i64, !dbg !18458
  %17 = load i64, i64* %width.addr, align 8, !dbg !18462
  %cmp8 = icmp slt i64 %conv7, %17, !dbg !18463
  br i1 %cmp8, label %for.body10, label %for.end, !dbg !18464

for.body10:                                       ; preds = %for.cond6
  %18 = load i32, i32* %x, align 4, !dbg !18465
  %conv11 = sitofp i32 %18 to double, !dbg !18465
  %19 = load double*, double** %values.addr, align 8, !dbg !18468
  %arrayidx12 = getelementptr inbounds double, double* %19, i64 0, !dbg !18468
  store double %conv11, double* %arrayidx12, align 8, !dbg !18469
  %20 = load i32, i32* %x, align 4, !dbg !18470
  %idxprom = sext i32 %20 to i64, !dbg !18471
  %21 = load i16*, i16** %top, align 8, !dbg !18471
  %arrayidx13 = getelementptr inbounds i16, i16* %21, i64 %idxprom, !dbg !18471
  %22 = load i16, i16* %arrayidx13, align 2, !dbg !18471
  %conv14 = uitofp i16 %22 to double, !dbg !18471
  %23 = load double*, double** %values.addr, align 8, !dbg !18472
  %arrayidx15 = getelementptr inbounds double, double* %23, i64 8, !dbg !18472
  store double %conv14, double* %arrayidx15, align 8, !dbg !18473
  %24 = load double*, double** %values.addr, align 8, !dbg !18474
  %arrayidx16 = getelementptr inbounds double, double* %24, i64 10, !dbg !18474
  store double %conv14, double* %arrayidx16, align 8, !dbg !18475
  %25 = load i32, i32* %x, align 4, !dbg !18476
  %idxprom17 = sext i32 %25 to i64, !dbg !18477
  %26 = load i16*, i16** %bottom, align 8, !dbg !18477
  %arrayidx18 = getelementptr inbounds i16, i16* %26, i64 %idxprom17, !dbg !18477
  %27 = load i16, i16* %arrayidx18, align 2, !dbg !18477
  %conv19 = uitofp i16 %27 to double, !dbg !18477
  %28 = load double*, double** %values.addr, align 8, !dbg !18478
  %arrayidx20 = getelementptr inbounds double, double* %28, i64 9, !dbg !18478
  store double %conv19, double* %arrayidx20, align 8, !dbg !18479
  %29 = load double*, double** %values.addr, align 8, !dbg !18480
  %arrayidx21 = getelementptr inbounds double, double* %29, i64 11, !dbg !18480
  store double %conv19, double* %arrayidx21, align 8, !dbg !18481
  %30 = load %struct.AVExpr*, %struct.AVExpr** %e, align 8, !dbg !18482
  %31 = load double*, double** %values.addr, align 8, !dbg !18483
  %call = call double @av_expr_eval(%struct.AVExpr* %30, double* %31, i8* null), !dbg !18484
  %conv22 = fptoui double %call to i16, !dbg !18484
  %32 = load i32, i32* %x, align 4, !dbg !18485
  %idxprom23 = sext i32 %32 to i64, !dbg !18486
  %33 = load i16*, i16** %dst, align 8, !dbg !18486
  %arrayidx24 = getelementptr inbounds i16, i16* %33, i64 %idxprom23, !dbg !18486
  store i16 %conv22, i16* %arrayidx24, align 2, !dbg !18487
  br label %for.inc, !dbg !18488

for.inc:                                          ; preds = %for.body10
  %34 = load i32, i32* %x, align 4, !dbg !18489
  %inc = add nsw i32 %34, 1, !dbg !18489
  store i32 %inc, i32* %x, align 4, !dbg !18489
  br label %for.cond6, !dbg !18491, !llvm.loop !18492

for.end:                                          ; preds = %for.cond6
  %35 = load i64, i64* %dst_linesize.addr, align 8, !dbg !18494
  %36 = load i16*, i16** %dst, align 8, !dbg !18496
  %add.ptr = getelementptr inbounds i16, i16* %36, i64 %35, !dbg !18496
  store i16* %add.ptr, i16** %dst, align 8, !dbg !18496
  %37 = load i64, i64* %top_linesize.addr, align 8, !dbg !18497
  %38 = load i16*, i16** %top, align 8, !dbg !18498
  %add.ptr25 = getelementptr inbounds i16, i16* %38, i64 %37, !dbg !18498
  store i16* %add.ptr25, i16** %top, align 8, !dbg !18498
  %39 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !18499
  %40 = load i16*, i16** %bottom, align 8, !dbg !18500
  %add.ptr26 = getelementptr inbounds i16, i16* %40, i64 %39, !dbg !18500
  store i16* %add.ptr26, i16** %bottom, align 8, !dbg !18500
  br label %for.inc27, !dbg !18501

for.inc27:                                        ; preds = %for.end
  %41 = load i32, i32* %y, align 4, !dbg !18502
  %inc28 = add nsw i32 %41, 1, !dbg !18502
  store i32 %inc28, i32* %y, align 4, !dbg !18502
  br label %for.cond, !dbg !18504, !llvm.loop !18505

for.end29:                                        ; preds = %for.cond
  ret void, !dbg !18507
}

; Function Attrs: nounwind uwtable
define internal void @blend_expr_8bit(i8* %_top, i64 %top_linesize, i8* %_bottom, i64 %bottom_linesize, i8* %_dst, i64 %dst_linesize, i64 %width, i64 %height, %struct.FilterParams* %param, double* %values, i32 %starty) #0 !dbg !18509 {
entry:
  %_top.addr = alloca i8*, align 8
  %top_linesize.addr = alloca i64, align 8
  %_bottom.addr = alloca i8*, align 8
  %bottom_linesize.addr = alloca i64, align 8
  %_dst.addr = alloca i8*, align 8
  %dst_linesize.addr = alloca i64, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %param.addr = alloca %struct.FilterParams*, align 8
  %values.addr = alloca double*, align 8
  %starty.addr = alloca i32, align 4
  %top = alloca i8*, align 8
  %bottom = alloca i8*, align 8
  %dst = alloca i8*, align 8
  %e = alloca %struct.AVExpr*, align 8
  %y = alloca i32, align 4
  %x = alloca i32, align 4
  store i8* %_top, i8** %_top.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_top.addr, metadata !18510, metadata !905), !dbg !18511
  store i64 %top_linesize, i64* %top_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %top_linesize.addr, metadata !18512, metadata !905), !dbg !18513
  store i8* %_bottom, i8** %_bottom.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_bottom.addr, metadata !18514, metadata !905), !dbg !18515
  store i64 %bottom_linesize, i64* %bottom_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bottom_linesize.addr, metadata !18516, metadata !905), !dbg !18517
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !18518, metadata !905), !dbg !18519
  store i64 %dst_linesize, i64* %dst_linesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dst_linesize.addr, metadata !18520, metadata !905), !dbg !18521
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !18522, metadata !905), !dbg !18523
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !18524, metadata !905), !dbg !18525
  store %struct.FilterParams* %param, %struct.FilterParams** %param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param.addr, metadata !18526, metadata !905), !dbg !18527
  store double* %values, double** %values.addr, align 8
  call void @llvm.dbg.declare(metadata double** %values.addr, metadata !18528, metadata !905), !dbg !18529
  store i32 %starty, i32* %starty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %starty.addr, metadata !18530, metadata !905), !dbg !18531
  call void @llvm.dbg.declare(metadata i8** %top, metadata !18532, metadata !905), !dbg !18533
  %0 = load i8*, i8** %_top.addr, align 8, !dbg !18534
  store i8* %0, i8** %top, align 8, !dbg !18533
  call void @llvm.dbg.declare(metadata i8** %bottom, metadata !18535, metadata !905), !dbg !18536
  %1 = load i8*, i8** %_bottom.addr, align 8, !dbg !18537
  store i8* %1, i8** %bottom, align 8, !dbg !18536
  call void @llvm.dbg.declare(metadata i8** %dst, metadata !18538, metadata !905), !dbg !18539
  %2 = load i8*, i8** %_dst.addr, align 8, !dbg !18540
  store i8* %2, i8** %dst, align 8, !dbg !18539
  call void @llvm.dbg.declare(metadata %struct.AVExpr** %e, metadata !18541, metadata !905), !dbg !18542
  %3 = load %struct.FilterParams*, %struct.FilterParams** %param.addr, align 8, !dbg !18543
  %e1 = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %3, i32 0, i32 2, !dbg !18544
  %4 = load %struct.AVExpr*, %struct.AVExpr** %e1, align 8, !dbg !18544
  store %struct.AVExpr* %4, %struct.AVExpr** %e, align 8, !dbg !18542
  call void @llvm.dbg.declare(metadata i32* %y, metadata !18545, metadata !905), !dbg !18546
  call void @llvm.dbg.declare(metadata i32* %x, metadata !18547, metadata !905), !dbg !18548
  %5 = load i64, i64* %dst_linesize.addr, align 8, !dbg !18549
  %div = sdiv i64 %5, 1, !dbg !18549
  store i64 %div, i64* %dst_linesize.addr, align 8, !dbg !18549
  %6 = load i64, i64* %top_linesize.addr, align 8, !dbg !18550
  %div2 = sdiv i64 %6, 1, !dbg !18550
  store i64 %div2, i64* %top_linesize.addr, align 8, !dbg !18550
  %7 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !18551
  %div3 = sdiv i64 %7, 1, !dbg !18551
  store i64 %div3, i64* %bottom_linesize.addr, align 8, !dbg !18551
  store i32 0, i32* %y, align 4, !dbg !18552
  br label %for.cond, !dbg !18554

for.cond:                                         ; preds = %for.inc27, %entry
  %8 = load i32, i32* %y, align 4, !dbg !18555
  %conv = sext i32 %8 to i64, !dbg !18555
  %9 = load i64, i64* %height.addr, align 8, !dbg !18558
  %cmp = icmp slt i64 %conv, %9, !dbg !18559
  br i1 %cmp, label %for.body, label %for.end29, !dbg !18560

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %y, align 4, !dbg !18561
  %11 = load i32, i32* %starty.addr, align 4, !dbg !18564
  %add = add nsw i32 %10, %11, !dbg !18565
  %conv5 = sitofp i32 %add to double, !dbg !18561
  %12 = load double*, double** %values.addr, align 8, !dbg !18566
  %arrayidx = getelementptr inbounds double, double* %12, i64 1, !dbg !18566
  store double %conv5, double* %arrayidx, align 8, !dbg !18567
  store i32 0, i32* %x, align 4, !dbg !18568
  br label %for.cond6, !dbg !18569

for.cond6:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %x, align 4, !dbg !18570
  %conv7 = sext i32 %13 to i64, !dbg !18570
  %14 = load i64, i64* %width.addr, align 8, !dbg !18574
  %cmp8 = icmp slt i64 %conv7, %14, !dbg !18575
  br i1 %cmp8, label %for.body10, label %for.end, !dbg !18576

for.body10:                                       ; preds = %for.cond6
  %15 = load i32, i32* %x, align 4, !dbg !18577
  %conv11 = sitofp i32 %15 to double, !dbg !18577
  %16 = load double*, double** %values.addr, align 8, !dbg !18580
  %arrayidx12 = getelementptr inbounds double, double* %16, i64 0, !dbg !18580
  store double %conv11, double* %arrayidx12, align 8, !dbg !18581
  %17 = load i32, i32* %x, align 4, !dbg !18582
  %idxprom = sext i32 %17 to i64, !dbg !18583
  %18 = load i8*, i8** %top, align 8, !dbg !18583
  %arrayidx13 = getelementptr inbounds i8, i8* %18, i64 %idxprom, !dbg !18583
  %19 = load i8, i8* %arrayidx13, align 1, !dbg !18583
  %conv14 = uitofp i8 %19 to double, !dbg !18583
  %20 = load double*, double** %values.addr, align 8, !dbg !18584
  %arrayidx15 = getelementptr inbounds double, double* %20, i64 8, !dbg !18584
  store double %conv14, double* %arrayidx15, align 8, !dbg !18585
  %21 = load double*, double** %values.addr, align 8, !dbg !18586
  %arrayidx16 = getelementptr inbounds double, double* %21, i64 10, !dbg !18586
  store double %conv14, double* %arrayidx16, align 8, !dbg !18587
  %22 = load i32, i32* %x, align 4, !dbg !18588
  %idxprom17 = sext i32 %22 to i64, !dbg !18589
  %23 = load i8*, i8** %bottom, align 8, !dbg !18589
  %arrayidx18 = getelementptr inbounds i8, i8* %23, i64 %idxprom17, !dbg !18589
  %24 = load i8, i8* %arrayidx18, align 1, !dbg !18589
  %conv19 = uitofp i8 %24 to double, !dbg !18589
  %25 = load double*, double** %values.addr, align 8, !dbg !18590
  %arrayidx20 = getelementptr inbounds double, double* %25, i64 9, !dbg !18590
  store double %conv19, double* %arrayidx20, align 8, !dbg !18591
  %26 = load double*, double** %values.addr, align 8, !dbg !18592
  %arrayidx21 = getelementptr inbounds double, double* %26, i64 11, !dbg !18592
  store double %conv19, double* %arrayidx21, align 8, !dbg !18593
  %27 = load %struct.AVExpr*, %struct.AVExpr** %e, align 8, !dbg !18594
  %28 = load double*, double** %values.addr, align 8, !dbg !18595
  %call = call double @av_expr_eval(%struct.AVExpr* %27, double* %28, i8* null), !dbg !18596
  %conv22 = fptoui double %call to i8, !dbg !18596
  %29 = load i32, i32* %x, align 4, !dbg !18597
  %idxprom23 = sext i32 %29 to i64, !dbg !18598
  %30 = load i8*, i8** %dst, align 8, !dbg !18598
  %arrayidx24 = getelementptr inbounds i8, i8* %30, i64 %idxprom23, !dbg !18598
  store i8 %conv22, i8* %arrayidx24, align 1, !dbg !18599
  br label %for.inc, !dbg !18600

for.inc:                                          ; preds = %for.body10
  %31 = load i32, i32* %x, align 4, !dbg !18601
  %inc = add nsw i32 %31, 1, !dbg !18601
  store i32 %inc, i32* %x, align 4, !dbg !18601
  br label %for.cond6, !dbg !18603, !llvm.loop !18604

for.end:                                          ; preds = %for.cond6
  %32 = load i64, i64* %dst_linesize.addr, align 8, !dbg !18606
  %33 = load i8*, i8** %dst, align 8, !dbg !18608
  %add.ptr = getelementptr inbounds i8, i8* %33, i64 %32, !dbg !18608
  store i8* %add.ptr, i8** %dst, align 8, !dbg !18608
  %34 = load i64, i64* %top_linesize.addr, align 8, !dbg !18609
  %35 = load i8*, i8** %top, align 8, !dbg !18610
  %add.ptr25 = getelementptr inbounds i8, i8* %35, i64 %34, !dbg !18610
  store i8* %add.ptr25, i8** %top, align 8, !dbg !18610
  %36 = load i64, i64* %bottom_linesize.addr, align 8, !dbg !18611
  %37 = load i8*, i8** %bottom, align 8, !dbg !18612
  %add.ptr26 = getelementptr inbounds i8, i8* %37, i64 %36, !dbg !18612
  store i8* %add.ptr26, i8** %bottom, align 8, !dbg !18612
  br label %for.inc27, !dbg !18613

for.inc27:                                        ; preds = %for.end
  %38 = load i32, i32* %y, align 4, !dbg !18614
  %inc28 = add nsw i32 %38, 1, !dbg !18614
  store i32 %inc28, i32* %y, align 4, !dbg !18614
  br label %for.cond, !dbg !18616, !llvm.loop !18617

for.end29:                                        ; preds = %for.cond
  ret void, !dbg !18619
}

declare i32 @ff_framesync_configure(%struct.FFFrameSync*) #2

declare double @av_expr_eval(%struct.AVExpr*, double*, i8*) #2

declare i8* @av_default_item_name(i8*) #2

; Function Attrs: nounwind uwtable
define internal i8* @blend_child_next(i8* %obj, i8* %prev) #0 !dbg !18621 {
entry:
  %obj.addr = alloca i8*, align 8
  %prev.addr = alloca i8*, align 8
  %s = alloca %struct.BlendContext*, align 8
  store i8* %obj, i8** %obj.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %obj.addr, metadata !18622, metadata !905), !dbg !18623
  store i8* %prev, i8** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prev.addr, metadata !18624, metadata !905), !dbg !18625
  call void @llvm.dbg.declare(metadata %struct.BlendContext** %s, metadata !18626, metadata !905), !dbg !18627
  %0 = load i8*, i8** %obj.addr, align 8, !dbg !18628
  %1 = bitcast i8* %0 to %struct.BlendContext*, !dbg !18628
  store %struct.BlendContext* %1, %struct.BlendContext** %s, align 8, !dbg !18627
  %call = call %struct.AVClass* @ff_framesync_get_class(), !dbg !18629
  %2 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !18630
  %fs = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %2, i32 0, i32 1, !dbg !18631
  %class = getelementptr inbounds %struct.FFFrameSync, %struct.FFFrameSync* %fs, i32 0, i32 0, !dbg !18632
  store %struct.AVClass* %call, %struct.AVClass** %class, align 8, !dbg !18633
  %3 = load i8*, i8** %prev.addr, align 8, !dbg !18634
  %tobool = icmp ne i8* %3, null, !dbg !18634
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !18634

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !18635

cond.false:                                       ; preds = %entry
  %4 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !18637
  %fs1 = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %4, i32 0, i32 1, !dbg !18639
  br label %cond.end, !dbg !18640

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.FFFrameSync* [ null, %cond.true ], [ %fs1, %cond.false ], !dbg !18641
  %5 = bitcast %struct.FFFrameSync* %cond to i8*, !dbg !18641
  ret i8* %5, !dbg !18643
}

; Function Attrs: nounwind uwtable
define internal %struct.AVClass* @blend_child_class_next(%struct.AVClass* %prev) #0 !dbg !18644 {
entry:
  %prev.addr = alloca %struct.AVClass*, align 8
  store %struct.AVClass* %prev, %struct.AVClass** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVClass** %prev.addr, metadata !18647, metadata !905), !dbg !18648
  %0 = load %struct.AVClass*, %struct.AVClass** %prev.addr, align 8, !dbg !18649
  %tobool = icmp ne %struct.AVClass* %0, null, !dbg !18649
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !18649

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !18650

cond.false:                                       ; preds = %entry
  %call = call %struct.AVClass* @ff_framesync_get_class(), !dbg !18652
  br label %cond.end, !dbg !18654

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.AVClass* [ null, %cond.true ], [ %call, %cond.false ], !dbg !18655
  ret %struct.AVClass* %cond, !dbg !18657
}

declare %struct.AVClass* @ff_framesync_get_class() #2

declare void @ff_framesync_preinit(%struct.FFFrameSync*) #2

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #6

; Function Attrs: nounwind uwtable
define internal i32 @blend_frame_for_dualinput(%struct.FFFrameSync* %fs) #0 !dbg !18658 {
entry:
  %retval = alloca i32, align 4
  %fs.addr = alloca %struct.FFFrameSync*, align 8
  %ctx = alloca %struct.AVFilterContext*, align 8
  %top_buf = alloca %struct.AVFrame*, align 8
  %bottom_buf = alloca %struct.AVFrame*, align 8
  %dst_buf = alloca %struct.AVFrame*, align 8
  %ret = alloca i32, align 4
  store %struct.FFFrameSync* %fs, %struct.FFFrameSync** %fs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FFFrameSync** %fs.addr, metadata !18662, metadata !905), !dbg !18663
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx, metadata !18664, metadata !905), !dbg !18665
  %0 = load %struct.FFFrameSync*, %struct.FFFrameSync** %fs.addr, align 8, !dbg !18666
  %parent = getelementptr inbounds %struct.FFFrameSync, %struct.FFFrameSync* %0, i32 0, i32 1, !dbg !18667
  %1 = load %struct.AVFilterContext*, %struct.AVFilterContext** %parent, align 8, !dbg !18667
  store %struct.AVFilterContext* %1, %struct.AVFilterContext** %ctx, align 8, !dbg !18665
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %top_buf, metadata !18668, metadata !905), !dbg !18669
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %bottom_buf, metadata !18670, metadata !905), !dbg !18671
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %dst_buf, metadata !18672, metadata !905), !dbg !18673
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !18674, metadata !905), !dbg !18675
  %2 = load %struct.FFFrameSync*, %struct.FFFrameSync** %fs.addr, align 8, !dbg !18676
  %call = call i32 @ff_framesync_dualinput_get(%struct.FFFrameSync* %2, %struct.AVFrame** %top_buf, %struct.AVFrame** %bottom_buf), !dbg !18677
  store i32 %call, i32* %ret, align 4, !dbg !18678
  %3 = load i32, i32* %ret, align 4, !dbg !18679
  %cmp = icmp slt i32 %3, 0, !dbg !18681
  br i1 %cmp, label %if.then, label %if.end, !dbg !18682

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %ret, align 4, !dbg !18683
  store i32 %4, i32* %retval, align 4, !dbg !18684
  br label %return, !dbg !18684

if.end:                                           ; preds = %entry
  %5 = load %struct.AVFrame*, %struct.AVFrame** %bottom_buf, align 8, !dbg !18685
  %tobool = icmp ne %struct.AVFrame* %5, null, !dbg !18685
  br i1 %tobool, label %if.end3, label %if.then1, !dbg !18687

if.then1:                                         ; preds = %if.end
  %6 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !18688
  %outputs = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %6, i32 0, i32 7, !dbg !18689
  %7 = load %struct.AVFilterLink**, %struct.AVFilterLink*** %outputs, align 8, !dbg !18689
  %arrayidx = getelementptr inbounds %struct.AVFilterLink*, %struct.AVFilterLink** %7, i64 0, !dbg !18688
  %8 = load %struct.AVFilterLink*, %struct.AVFilterLink** %arrayidx, align 8, !dbg !18688
  %9 = load %struct.AVFrame*, %struct.AVFrame** %top_buf, align 8, !dbg !18690
  %call2 = call i32 @ff_filter_frame(%struct.AVFilterLink* %8, %struct.AVFrame* %9), !dbg !18691
  store i32 %call2, i32* %retval, align 4, !dbg !18692
  br label %return, !dbg !18692

if.end3:                                          ; preds = %if.end
  %10 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !18693
  %11 = load %struct.AVFrame*, %struct.AVFrame** %top_buf, align 8, !dbg !18694
  %12 = load %struct.AVFrame*, %struct.AVFrame** %bottom_buf, align 8, !dbg !18695
  %call4 = call %struct.AVFrame* @blend_frame(%struct.AVFilterContext* %10, %struct.AVFrame* %11, %struct.AVFrame* %12), !dbg !18696
  store %struct.AVFrame* %call4, %struct.AVFrame** %dst_buf, align 8, !dbg !18697
  %13 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !18698
  %outputs5 = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %13, i32 0, i32 7, !dbg !18699
  %14 = load %struct.AVFilterLink**, %struct.AVFilterLink*** %outputs5, align 8, !dbg !18699
  %arrayidx6 = getelementptr inbounds %struct.AVFilterLink*, %struct.AVFilterLink** %14, i64 0, !dbg !18698
  %15 = load %struct.AVFilterLink*, %struct.AVFilterLink** %arrayidx6, align 8, !dbg !18698
  %16 = load %struct.AVFrame*, %struct.AVFrame** %dst_buf, align 8, !dbg !18700
  %call7 = call i32 @ff_filter_frame(%struct.AVFilterLink* %15, %struct.AVFrame* %16), !dbg !18701
  store i32 %call7, i32* %retval, align 4, !dbg !18702
  br label %return, !dbg !18702

return:                                           ; preds = %if.end3, %if.then1, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !18703
  ret i32 %17, !dbg !18703
}

declare i32 @ff_framesync_dualinput_get(%struct.FFFrameSync*, %struct.AVFrame**, %struct.AVFrame**) #2

declare i32 @ff_filter_frame(%struct.AVFilterLink*, %struct.AVFrame*) #2

; Function Attrs: nounwind uwtable
define internal %struct.AVFrame* @blend_frame(%struct.AVFilterContext* %ctx, %struct.AVFrame* %top_buf, %struct.AVFrame* %bottom_buf) #0 !dbg !18704 {
entry:
  %retval = alloca %struct.AVFrame*, align 8
  %ctx.addr = alloca %struct.AVFilterContext*, align 8
  %top_buf.addr = alloca %struct.AVFrame*, align 8
  %bottom_buf.addr = alloca %struct.AVFrame*, align 8
  %s = alloca %struct.BlendContext*, align 8
  %inlink = alloca %struct.AVFilterLink*, align 8
  %outlink = alloca %struct.AVFilterLink*, align 8
  %dst_buf = alloca %struct.AVFrame*, align 8
  %plane = alloca i32, align 4
  %hsub = alloca i32, align 4
  %vsub = alloca i32, align 4
  %outw = alloca i32, align 4
  %outh = alloca i32, align 4
  %param = alloca %struct.FilterParams*, align 8
  %td = alloca %struct.ThreadData, align 8
  store %struct.AVFilterContext* %ctx, %struct.AVFilterContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx.addr, metadata !18709, metadata !905), !dbg !18710
  store %struct.AVFrame* %top_buf, %struct.AVFrame** %top_buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %top_buf.addr, metadata !18711, metadata !905), !dbg !18712
  store %struct.AVFrame* %bottom_buf, %struct.AVFrame** %bottom_buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %bottom_buf.addr, metadata !18713, metadata !905), !dbg !18714
  call void @llvm.dbg.declare(metadata %struct.BlendContext** %s, metadata !18715, metadata !905), !dbg !18716
  %0 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !18717
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %0, i32 0, i32 9, !dbg !18718
  %1 = load i8*, i8** %priv, align 8, !dbg !18718
  %2 = bitcast i8* %1 to %struct.BlendContext*, !dbg !18717
  store %struct.BlendContext* %2, %struct.BlendContext** %s, align 8, !dbg !18716
  call void @llvm.dbg.declare(metadata %struct.AVFilterLink** %inlink, metadata !18719, metadata !905), !dbg !18720
  %3 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !18721
  %inputs = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %3, i32 0, i32 4, !dbg !18722
  %4 = load %struct.AVFilterLink**, %struct.AVFilterLink*** %inputs, align 8, !dbg !18722
  %arrayidx = getelementptr inbounds %struct.AVFilterLink*, %struct.AVFilterLink** %4, i64 0, !dbg !18721
  %5 = load %struct.AVFilterLink*, %struct.AVFilterLink** %arrayidx, align 8, !dbg !18721
  store %struct.AVFilterLink* %5, %struct.AVFilterLink** %inlink, align 8, !dbg !18720
  call void @llvm.dbg.declare(metadata %struct.AVFilterLink** %outlink, metadata !18723, metadata !905), !dbg !18724
  %6 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !18725
  %outputs = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %6, i32 0, i32 7, !dbg !18726
  %7 = load %struct.AVFilterLink**, %struct.AVFilterLink*** %outputs, align 8, !dbg !18726
  %arrayidx1 = getelementptr inbounds %struct.AVFilterLink*, %struct.AVFilterLink** %7, i64 0, !dbg !18725
  %8 = load %struct.AVFilterLink*, %struct.AVFilterLink** %arrayidx1, align 8, !dbg !18725
  store %struct.AVFilterLink* %8, %struct.AVFilterLink** %outlink, align 8, !dbg !18724
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %dst_buf, metadata !18727, metadata !905), !dbg !18728
  call void @llvm.dbg.declare(metadata i32* %plane, metadata !18729, metadata !905), !dbg !18730
  %9 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink, align 8, !dbg !18731
  %10 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink, align 8, !dbg !18732
  %w = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %10, i32 0, i32 5, !dbg !18733
  %11 = load i32, i32* %w, align 4, !dbg !18733
  %12 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink, align 8, !dbg !18734
  %h = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %12, i32 0, i32 6, !dbg !18735
  %13 = load i32, i32* %h, align 8, !dbg !18735
  %call = call %struct.AVFrame* @ff_get_video_buffer(%struct.AVFilterLink* %9, i32 %11, i32 %13), !dbg !18736
  store %struct.AVFrame* %call, %struct.AVFrame** %dst_buf, align 8, !dbg !18737
  %14 = load %struct.AVFrame*, %struct.AVFrame** %dst_buf, align 8, !dbg !18738
  %tobool = icmp ne %struct.AVFrame* %14, null, !dbg !18738
  br i1 %tobool, label %if.end, label %if.then, !dbg !18740

if.then:                                          ; preds = %entry
  %15 = load %struct.AVFrame*, %struct.AVFrame** %top_buf.addr, align 8, !dbg !18741
  store %struct.AVFrame* %15, %struct.AVFrame** %retval, align 8, !dbg !18742
  br label %return, !dbg !18742

if.end:                                           ; preds = %entry
  %16 = load %struct.AVFrame*, %struct.AVFrame** %dst_buf, align 8, !dbg !18743
  %17 = load %struct.AVFrame*, %struct.AVFrame** %top_buf.addr, align 8, !dbg !18744
  %call2 = call i32 @av_frame_copy_props(%struct.AVFrame* %16, %struct.AVFrame* %17), !dbg !18745
  store i32 0, i32* %plane, align 4, !dbg !18746
  br label %for.cond, !dbg !18748

for.cond:                                         ; preds = %for.inc, %if.end
  %18 = load i32, i32* %plane, align 4, !dbg !18749
  %19 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !18752
  %nb_planes = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %19, i32 0, i32 4, !dbg !18753
  %20 = load i32, i32* %nb_planes, align 8, !dbg !18753
  %cmp = icmp slt i32 %18, %20, !dbg !18754
  br i1 %cmp, label %for.body, label %for.end, !dbg !18755

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %hsub, metadata !18756, metadata !905), !dbg !18758
  %21 = load i32, i32* %plane, align 4, !dbg !18759
  %cmp3 = icmp eq i32 %21, 1, !dbg !18760
  br i1 %cmp3, label %cond.true, label %lor.lhs.false, !dbg !18761

lor.lhs.false:                                    ; preds = %for.body
  %22 = load i32, i32* %plane, align 4, !dbg !18762
  %cmp4 = icmp eq i32 %22, 2, !dbg !18764
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !18765

cond.true:                                        ; preds = %lor.lhs.false, %for.body
  %23 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !18766
  %hsub5 = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %23, i32 0, i32 2, !dbg !18768
  %24 = load i32, i32* %hsub5, align 8, !dbg !18768
  br label %cond.end, !dbg !18769

cond.false:                                       ; preds = %lor.lhs.false
  br label %cond.end, !dbg !18770

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %24, %cond.true ], [ 0, %cond.false ], !dbg !18772
  store i32 %cond, i32* %hsub, align 4, !dbg !18774
  call void @llvm.dbg.declare(metadata i32* %vsub, metadata !18775, metadata !905), !dbg !18776
  %25 = load i32, i32* %plane, align 4, !dbg !18777
  %cmp6 = icmp eq i32 %25, 1, !dbg !18778
  br i1 %cmp6, label %cond.true9, label %lor.lhs.false7, !dbg !18779

lor.lhs.false7:                                   ; preds = %cond.end
  %26 = load i32, i32* %plane, align 4, !dbg !18780
  %cmp8 = icmp eq i32 %26, 2, !dbg !18781
  br i1 %cmp8, label %cond.true9, label %cond.false11, !dbg !18782

cond.true9:                                       ; preds = %lor.lhs.false7, %cond.end
  %27 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !18783
  %vsub10 = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %27, i32 0, i32 3, !dbg !18784
  %28 = load i32, i32* %vsub10, align 4, !dbg !18784
  br label %cond.end12, !dbg !18785

cond.false11:                                     ; preds = %lor.lhs.false7
  br label %cond.end12, !dbg !18786

cond.end12:                                       ; preds = %cond.false11, %cond.true9
  %cond13 = phi i32 [ %28, %cond.true9 ], [ 0, %cond.false11 ], !dbg !18787
  store i32 %cond13, i32* %vsub, align 4, !dbg !18788
  call void @llvm.dbg.declare(metadata i32* %outw, metadata !18789, metadata !905), !dbg !18790
  %29 = load %struct.AVFrame*, %struct.AVFrame** %dst_buf, align 8, !dbg !18791
  %width = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %29, i32 0, i32 3, !dbg !18792
  %30 = load i32, i32* %width, align 8, !dbg !18792
  %sub = sub nsw i32 0, %30, !dbg !18793
  %31 = load i32, i32* %hsub, align 4, !dbg !18794
  %shr = ashr i32 %sub, %31, !dbg !18795
  %sub14 = sub nsw i32 0, %shr, !dbg !18796
  store i32 %sub14, i32* %outw, align 4, !dbg !18790
  call void @llvm.dbg.declare(metadata i32* %outh, metadata !18797, metadata !905), !dbg !18798
  %32 = load %struct.AVFrame*, %struct.AVFrame** %dst_buf, align 8, !dbg !18799
  %height = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %32, i32 0, i32 4, !dbg !18800
  %33 = load i32, i32* %height, align 4, !dbg !18800
  %sub15 = sub nsw i32 0, %33, !dbg !18801
  %34 = load i32, i32* %vsub, align 4, !dbg !18802
  %shr16 = ashr i32 %sub15, %34, !dbg !18803
  %sub17 = sub nsw i32 0, %shr16, !dbg !18804
  store i32 %sub17, i32* %outh, align 4, !dbg !18798
  call void @llvm.dbg.declare(metadata %struct.FilterParams** %param, metadata !18805, metadata !905), !dbg !18806
  %35 = load i32, i32* %plane, align 4, !dbg !18807
  %idxprom = sext i32 %35 to i64, !dbg !18808
  %36 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !18808
  %params = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %36, i32 0, i32 9, !dbg !18809
  %arrayidx18 = getelementptr inbounds [4 x %struct.FilterParams], [4 x %struct.FilterParams]* %params, i64 0, i64 %idxprom, !dbg !18808
  store %struct.FilterParams* %arrayidx18, %struct.FilterParams** %param, align 8, !dbg !18806
  call void @llvm.dbg.declare(metadata %struct.ThreadData* %td, metadata !18810, metadata !905), !dbg !18822
  %top = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %td, i32 0, i32 0, !dbg !18823
  %37 = load %struct.AVFrame*, %struct.AVFrame** %top_buf.addr, align 8, !dbg !18824
  store %struct.AVFrame* %37, %struct.AVFrame** %top, align 8, !dbg !18823
  %bottom = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %td, i32 0, i32 1, !dbg !18823
  %38 = load %struct.AVFrame*, %struct.AVFrame** %bottom_buf.addr, align 8, !dbg !18825
  store %struct.AVFrame* %38, %struct.AVFrame** %bottom, align 8, !dbg !18823
  %dst = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %td, i32 0, i32 2, !dbg !18823
  %39 = load %struct.AVFrame*, %struct.AVFrame** %dst_buf, align 8, !dbg !18826
  store %struct.AVFrame* %39, %struct.AVFrame** %dst, align 8, !dbg !18823
  %inlink19 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %td, i32 0, i32 3, !dbg !18823
  %40 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink, align 8, !dbg !18827
  store %struct.AVFilterLink* %40, %struct.AVFilterLink** %inlink19, align 8, !dbg !18823
  %plane20 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %td, i32 0, i32 4, !dbg !18823
  %41 = load i32, i32* %plane, align 4, !dbg !18828
  store i32 %41, i32* %plane20, align 8, !dbg !18823
  %w21 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %td, i32 0, i32 5, !dbg !18823
  %42 = load i32, i32* %outw, align 4, !dbg !18829
  store i32 %42, i32* %w21, align 4, !dbg !18823
  %h22 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %td, i32 0, i32 6, !dbg !18823
  %43 = load i32, i32* %outh, align 4, !dbg !18830
  store i32 %43, i32* %h22, align 8, !dbg !18823
  %param23 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %td, i32 0, i32 7, !dbg !18823
  %44 = load %struct.FilterParams*, %struct.FilterParams** %param, align 8, !dbg !18831
  store %struct.FilterParams* %44, %struct.FilterParams** %param23, align 8, !dbg !18823
  %45 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !18832
  %internal = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %45, i32 0, i32 12, !dbg !18833
  %46 = load %struct.AVFilterInternal*, %struct.AVFilterInternal** %internal, align 8, !dbg !18833
  %execute = getelementptr inbounds %struct.AVFilterInternal, %struct.AVFilterInternal* %46, i32 0, i32 0, !dbg !18834
  %47 = load i32 (%struct.AVFilterContext*, i32 (%struct.AVFilterContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32 (%struct.AVFilterContext*, i32 (%struct.AVFilterContext*, i8*, i32, i32)*, i8*, i32*, i32)** %execute, align 8, !dbg !18834
  %48 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !18835
  %49 = bitcast %struct.ThreadData* %td to i8*, !dbg !18836
  %50 = load i32, i32* %outh, align 4, !dbg !18837
  %51 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !18838
  %call24 = call i32 @ff_filter_get_nb_threads(%struct.AVFilterContext* %51), !dbg !18839
  %cmp25 = icmp sgt i32 %50, %call24, !dbg !18840
  br i1 %cmp25, label %cond.true26, label %cond.false28, !dbg !18841

cond.true26:                                      ; preds = %cond.end12
  %52 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !18842
  %call27 = call i32 @ff_filter_get_nb_threads(%struct.AVFilterContext* %52), !dbg !18843
  br label %cond.end29, !dbg !18844

cond.false28:                                     ; preds = %cond.end12
  %53 = load i32, i32* %outh, align 4, !dbg !18845
  br label %cond.end29, !dbg !18846

cond.end29:                                       ; preds = %cond.false28, %cond.true26
  %cond30 = phi i32 [ %call27, %cond.true26 ], [ %53, %cond.false28 ], !dbg !18847
  %call31 = call i32 %47(%struct.AVFilterContext* %48, i32 (%struct.AVFilterContext*, i8*, i32, i32)* @filter_slice, i8* %49, i32* null, i32 %cond30), !dbg !18848
  br label %for.inc, !dbg !18849

for.inc:                                          ; preds = %cond.end29
  %54 = load i32, i32* %plane, align 4, !dbg !18850
  %inc = add nsw i32 %54, 1, !dbg !18850
  store i32 %inc, i32* %plane, align 4, !dbg !18850
  br label %for.cond, !dbg !18852, !llvm.loop !18853

for.end:                                          ; preds = %for.cond
  %55 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !18855
  %tblend = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %55, i32 0, i32 10, !dbg !18857
  %56 = load i32, i32* %tblend, align 8, !dbg !18857
  %tobool32 = icmp ne i32 %56, 0, !dbg !18855
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !18858

if.then33:                                        ; preds = %for.end
  call void @av_frame_free(%struct.AVFrame** %top_buf.addr), !dbg !18859
  br label %if.end34, !dbg !18859

if.end34:                                         ; preds = %if.then33, %for.end
  %57 = load %struct.AVFrame*, %struct.AVFrame** %dst_buf, align 8, !dbg !18860
  store %struct.AVFrame* %57, %struct.AVFrame** %retval, align 8, !dbg !18861
  br label %return, !dbg !18861

return:                                           ; preds = %if.end34, %if.then
  %58 = load %struct.AVFrame*, %struct.AVFrame** %retval, align 8, !dbg !18862
  ret %struct.AVFrame* %58, !dbg !18862
}

declare %struct.AVFrame* @ff_get_video_buffer(%struct.AVFilterLink*, i32, i32) #2

declare i32 @av_frame_copy_props(%struct.AVFrame*, %struct.AVFrame*) #2

; Function Attrs: nounwind uwtable
define internal i32 @filter_slice(%struct.AVFilterContext* %ctx, i8* %arg, i32 %jobnr, i32 %nb_jobs) #0 !dbg !18863 {
entry:
  %ctx.addr = alloca %struct.AVFilterContext*, align 8
  %arg.addr = alloca i8*, align 8
  %jobnr.addr = alloca i32, align 4
  %nb_jobs.addr = alloca i32, align 4
  %td = alloca %struct.ThreadData*, align 8
  %slice_start = alloca i32, align 4
  %slice_end = alloca i32, align 4
  %height = alloca i32, align 4
  %top = alloca i8*, align 8
  %bottom = alloca i8*, align 8
  %dst = alloca i8*, align 8
  %values = alloca [12 x double], align 16
  store %struct.AVFilterContext* %ctx, %struct.AVFilterContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx.addr, metadata !18864, metadata !905), !dbg !18865
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !18866, metadata !905), !dbg !18867
  store i32 %jobnr, i32* %jobnr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %jobnr.addr, metadata !18868, metadata !905), !dbg !18869
  store i32 %nb_jobs, i32* %nb_jobs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_jobs.addr, metadata !18870, metadata !905), !dbg !18871
  call void @llvm.dbg.declare(metadata %struct.ThreadData** %td, metadata !18872, metadata !905), !dbg !18874
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !18875
  %1 = bitcast i8* %0 to %struct.ThreadData*, !dbg !18875
  store %struct.ThreadData* %1, %struct.ThreadData** %td, align 8, !dbg !18874
  call void @llvm.dbg.declare(metadata i32* %slice_start, metadata !18876, metadata !905), !dbg !18877
  %2 = load %struct.ThreadData*, %struct.ThreadData** %td, align 8, !dbg !18878
  %h = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %2, i32 0, i32 6, !dbg !18879
  %3 = load i32, i32* %h, align 8, !dbg !18879
  %4 = load i32, i32* %jobnr.addr, align 4, !dbg !18880
  %mul = mul nsw i32 %3, %4, !dbg !18881
  %5 = load i32, i32* %nb_jobs.addr, align 4, !dbg !18882
  %div = sdiv i32 %mul, %5, !dbg !18883
  store i32 %div, i32* %slice_start, align 4, !dbg !18877
  call void @llvm.dbg.declare(metadata i32* %slice_end, metadata !18884, metadata !905), !dbg !18885
  %6 = load %struct.ThreadData*, %struct.ThreadData** %td, align 8, !dbg !18886
  %h1 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %6, i32 0, i32 6, !dbg !18887
  %7 = load i32, i32* %h1, align 8, !dbg !18887
  %8 = load i32, i32* %jobnr.addr, align 4, !dbg !18888
  %add = add nsw i32 %8, 1, !dbg !18889
  %mul2 = mul nsw i32 %7, %add, !dbg !18890
  %9 = load i32, i32* %nb_jobs.addr, align 4, !dbg !18891
  %div3 = sdiv i32 %mul2, %9, !dbg !18892
  store i32 %div3, i32* %slice_end, align 4, !dbg !18885
  call void @llvm.dbg.declare(metadata i32* %height, metadata !18893, metadata !905), !dbg !18894
  %10 = load i32, i32* %slice_end, align 4, !dbg !18895
  %11 = load i32, i32* %slice_start, align 4, !dbg !18896
  %sub = sub nsw i32 %10, %11, !dbg !18897
  store i32 %sub, i32* %height, align 4, !dbg !18894
  call void @llvm.dbg.declare(metadata i8** %top, metadata !18898, metadata !905), !dbg !18899
  %12 = load %struct.ThreadData*, %struct.ThreadData** %td, align 8, !dbg !18900
  %plane = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %12, i32 0, i32 4, !dbg !18901
  %13 = load i32, i32* %plane, align 8, !dbg !18901
  %idxprom = sext i32 %13 to i64, !dbg !18902
  %14 = load %struct.ThreadData*, %struct.ThreadData** %td, align 8, !dbg !18902
  %top4 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %14, i32 0, i32 0, !dbg !18903
  %15 = load %struct.AVFrame*, %struct.AVFrame** %top4, align 8, !dbg !18903
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %15, i32 0, i32 0, !dbg !18904
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 %idxprom, !dbg !18902
  %16 = load i8*, i8** %arrayidx, align 8, !dbg !18902
  store i8* %16, i8** %top, align 8, !dbg !18899
  call void @llvm.dbg.declare(metadata i8** %bottom, metadata !18905, metadata !905), !dbg !18906
  %17 = load %struct.ThreadData*, %struct.ThreadData** %td, align 8, !dbg !18907
  %plane5 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %17, i32 0, i32 4, !dbg !18908
  %18 = load i32, i32* %plane5, align 8, !dbg !18908
  %idxprom6 = sext i32 %18 to i64, !dbg !18909
  %19 = load %struct.ThreadData*, %struct.ThreadData** %td, align 8, !dbg !18909
  %bottom7 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %19, i32 0, i32 1, !dbg !18910
  %20 = load %struct.AVFrame*, %struct.AVFrame** %bottom7, align 8, !dbg !18910
  %data8 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %20, i32 0, i32 0, !dbg !18911
  %arrayidx9 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data8, i64 0, i64 %idxprom6, !dbg !18909
  %21 = load i8*, i8** %arrayidx9, align 8, !dbg !18909
  store i8* %21, i8** %bottom, align 8, !dbg !18906
  call void @llvm.dbg.declare(metadata i8** %dst, metadata !18912, metadata !905), !dbg !18913
  %22 = load %struct.ThreadData*, %struct.ThreadData** %td, align 8, !dbg !18914
  %plane10 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %22, i32 0, i32 4, !dbg !18915
  %23 = load i32, i32* %plane10, align 8, !dbg !18915
  %idxprom11 = sext i32 %23 to i64, !dbg !18916
  %24 = load %struct.ThreadData*, %struct.ThreadData** %td, align 8, !dbg !18916
  %dst12 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %24, i32 0, i32 2, !dbg !18917
  %25 = load %struct.AVFrame*, %struct.AVFrame** %dst12, align 8, !dbg !18917
  %data13 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %25, i32 0, i32 0, !dbg !18918
  %arrayidx14 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data13, i64 0, i64 %idxprom11, !dbg !18916
  %26 = load i8*, i8** %arrayidx14, align 8, !dbg !18916
  store i8* %26, i8** %dst, align 8, !dbg !18913
  call void @llvm.dbg.declare(metadata [12 x double]* %values, metadata !18919, metadata !905), !dbg !18923
  %27 = load %struct.ThreadData*, %struct.ThreadData** %td, align 8, !dbg !18924
  %inlink = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %27, i32 0, i32 3, !dbg !18925
  %28 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink, align 8, !dbg !18925
  %frame_count_out = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %28, i32 0, i32 32, !dbg !18926
  %29 = load i64, i64* %frame_count_out, align 8, !dbg !18926
  %conv = sitofp i64 %29 to double, !dbg !18924
  %arrayidx15 = getelementptr inbounds [12 x double], [12 x double]* %values, i64 0, i64 7, !dbg !18927
  store double %conv, double* %arrayidx15, align 8, !dbg !18928
  %30 = load %struct.ThreadData*, %struct.ThreadData** %td, align 8, !dbg !18929
  %dst16 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %30, i32 0, i32 2, !dbg !18930
  %31 = load %struct.AVFrame*, %struct.AVFrame** %dst16, align 8, !dbg !18930
  %pts = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %31, i32 0, i32 10, !dbg !18931
  %32 = load i64, i64* %pts, align 8, !dbg !18931
  %cmp = icmp eq i64 %32, -9223372036854775808, !dbg !18932
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !18929

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !18933

cond.false:                                       ; preds = %entry
  %33 = load %struct.ThreadData*, %struct.ThreadData** %td, align 8, !dbg !18935
  %dst18 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %33, i32 0, i32 2, !dbg !18937
  %34 = load %struct.AVFrame*, %struct.AVFrame** %dst18, align 8, !dbg !18937
  %pts19 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %34, i32 0, i32 10, !dbg !18938
  %35 = load i64, i64* %pts19, align 8, !dbg !18938
  %conv20 = sitofp i64 %35 to double, !dbg !18935
  %36 = load %struct.ThreadData*, %struct.ThreadData** %td, align 8, !dbg !18939
  %inlink21 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %36, i32 0, i32 3, !dbg !18940
  %37 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink21, align 8, !dbg !18940
  %time_base = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %37, i32 0, i32 11, !dbg !18941
  %38 = bitcast %struct.AVRational* %time_base to i64*, !dbg !18942
  %39 = load i64, i64* %38, align 8, !dbg !18942
  %call = call double @av_q2d(i64 %39), !dbg !18942
  %mul22 = fmul double %conv20, %call, !dbg !18943
  br label %cond.end, !dbg !18944

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ 0x7FF8000000000000, %cond.true ], [ %mul22, %cond.false ], !dbg !18945
  %arrayidx23 = getelementptr inbounds [12 x double], [12 x double]* %values, i64 0, i64 6, !dbg !18947
  store double %cond, double* %arrayidx23, align 16, !dbg !18948
  %40 = load %struct.ThreadData*, %struct.ThreadData** %td, align 8, !dbg !18949
  %w = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %40, i32 0, i32 5, !dbg !18950
  %41 = load i32, i32* %w, align 4, !dbg !18950
  %conv24 = sitofp i32 %41 to double, !dbg !18949
  %arrayidx25 = getelementptr inbounds [12 x double], [12 x double]* %values, i64 0, i64 2, !dbg !18951
  store double %conv24, double* %arrayidx25, align 16, !dbg !18952
  %42 = load %struct.ThreadData*, %struct.ThreadData** %td, align 8, !dbg !18953
  %h26 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %42, i32 0, i32 6, !dbg !18954
  %43 = load i32, i32* %h26, align 8, !dbg !18954
  %conv27 = sitofp i32 %43 to double, !dbg !18953
  %arrayidx28 = getelementptr inbounds [12 x double], [12 x double]* %values, i64 0, i64 3, !dbg !18955
  store double %conv27, double* %arrayidx28, align 8, !dbg !18956
  %44 = load %struct.ThreadData*, %struct.ThreadData** %td, align 8, !dbg !18957
  %w29 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %44, i32 0, i32 5, !dbg !18958
  %45 = load i32, i32* %w29, align 4, !dbg !18958
  %conv30 = sitofp i32 %45 to double, !dbg !18957
  %46 = load %struct.ThreadData*, %struct.ThreadData** %td, align 8, !dbg !18959
  %dst31 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %46, i32 0, i32 2, !dbg !18960
  %47 = load %struct.AVFrame*, %struct.AVFrame** %dst31, align 8, !dbg !18960
  %width = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %47, i32 0, i32 3, !dbg !18961
  %48 = load i32, i32* %width, align 8, !dbg !18961
  %conv32 = sitofp i32 %48 to double, !dbg !18962
  %div33 = fdiv double %conv30, %conv32, !dbg !18963
  %arrayidx34 = getelementptr inbounds [12 x double], [12 x double]* %values, i64 0, i64 4, !dbg !18964
  store double %div33, double* %arrayidx34, align 16, !dbg !18965
  %49 = load %struct.ThreadData*, %struct.ThreadData** %td, align 8, !dbg !18966
  %h35 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %49, i32 0, i32 6, !dbg !18967
  %50 = load i32, i32* %h35, align 8, !dbg !18967
  %conv36 = sitofp i32 %50 to double, !dbg !18966
  %51 = load %struct.ThreadData*, %struct.ThreadData** %td, align 8, !dbg !18968
  %dst37 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %51, i32 0, i32 2, !dbg !18969
  %52 = load %struct.AVFrame*, %struct.AVFrame** %dst37, align 8, !dbg !18969
  %height38 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %52, i32 0, i32 4, !dbg !18970
  %53 = load i32, i32* %height38, align 4, !dbg !18970
  %conv39 = sitofp i32 %53 to double, !dbg !18971
  %div40 = fdiv double %conv36, %conv39, !dbg !18972
  %arrayidx41 = getelementptr inbounds [12 x double], [12 x double]* %values, i64 0, i64 5, !dbg !18973
  store double %div40, double* %arrayidx41, align 8, !dbg !18974
  %54 = load %struct.ThreadData*, %struct.ThreadData** %td, align 8, !dbg !18975
  %param = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %54, i32 0, i32 7, !dbg !18976
  %55 = load %struct.FilterParams*, %struct.FilterParams** %param, align 8, !dbg !18976
  %blend = getelementptr inbounds %struct.FilterParams, %struct.FilterParams* %55, i32 0, i32 4, !dbg !18977
  %56 = load void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)*, void (i8*, i64, i8*, i64, i8*, i64, i64, i64, %struct.FilterParams*, double*, i32)** %blend, align 8, !dbg !18977
  %57 = load i8*, i8** %top, align 8, !dbg !18978
  %58 = load i32, i32* %slice_start, align 4, !dbg !18979
  %59 = load %struct.ThreadData*, %struct.ThreadData** %td, align 8, !dbg !18980
  %plane42 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %59, i32 0, i32 4, !dbg !18981
  %60 = load i32, i32* %plane42, align 8, !dbg !18981
  %idxprom43 = sext i32 %60 to i64, !dbg !18982
  %61 = load %struct.ThreadData*, %struct.ThreadData** %td, align 8, !dbg !18982
  %top44 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %61, i32 0, i32 0, !dbg !18983
  %62 = load %struct.AVFrame*, %struct.AVFrame** %top44, align 8, !dbg !18983
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %62, i32 0, i32 1, !dbg !18984
  %arrayidx45 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 %idxprom43, !dbg !18982
  %63 = load i32, i32* %arrayidx45, align 4, !dbg !18982
  %mul46 = mul nsw i32 %58, %63, !dbg !18985
  %idx.ext = sext i32 %mul46 to i64, !dbg !18986
  %add.ptr = getelementptr inbounds i8, i8* %57, i64 %idx.ext, !dbg !18986
  %64 = load %struct.ThreadData*, %struct.ThreadData** %td, align 8, !dbg !18987
  %plane47 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %64, i32 0, i32 4, !dbg !18988
  %65 = load i32, i32* %plane47, align 8, !dbg !18988
  %idxprom48 = sext i32 %65 to i64, !dbg !18989
  %66 = load %struct.ThreadData*, %struct.ThreadData** %td, align 8, !dbg !18989
  %top49 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %66, i32 0, i32 0, !dbg !18990
  %67 = load %struct.AVFrame*, %struct.AVFrame** %top49, align 8, !dbg !18990
  %linesize50 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %67, i32 0, i32 1, !dbg !18991
  %arrayidx51 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize50, i64 0, i64 %idxprom48, !dbg !18989
  %68 = load i32, i32* %arrayidx51, align 4, !dbg !18989
  %conv52 = sext i32 %68 to i64, !dbg !18989
  %69 = load i8*, i8** %bottom, align 8, !dbg !18992
  %70 = load i32, i32* %slice_start, align 4, !dbg !18993
  %71 = load %struct.ThreadData*, %struct.ThreadData** %td, align 8, !dbg !18994
  %plane53 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %71, i32 0, i32 4, !dbg !18995
  %72 = load i32, i32* %plane53, align 8, !dbg !18995
  %idxprom54 = sext i32 %72 to i64, !dbg !18996
  %73 = load %struct.ThreadData*, %struct.ThreadData** %td, align 8, !dbg !18996
  %bottom55 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %73, i32 0, i32 1, !dbg !18997
  %74 = load %struct.AVFrame*, %struct.AVFrame** %bottom55, align 8, !dbg !18997
  %linesize56 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %74, i32 0, i32 1, !dbg !18998
  %arrayidx57 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize56, i64 0, i64 %idxprom54, !dbg !18996
  %75 = load i32, i32* %arrayidx57, align 4, !dbg !18996
  %mul58 = mul nsw i32 %70, %75, !dbg !18999
  %idx.ext59 = sext i32 %mul58 to i64, !dbg !19000
  %add.ptr60 = getelementptr inbounds i8, i8* %69, i64 %idx.ext59, !dbg !19000
  %76 = load %struct.ThreadData*, %struct.ThreadData** %td, align 8, !dbg !19001
  %plane61 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %76, i32 0, i32 4, !dbg !19002
  %77 = load i32, i32* %plane61, align 8, !dbg !19002
  %idxprom62 = sext i32 %77 to i64, !dbg !19003
  %78 = load %struct.ThreadData*, %struct.ThreadData** %td, align 8, !dbg !19003
  %bottom63 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %78, i32 0, i32 1, !dbg !19004
  %79 = load %struct.AVFrame*, %struct.AVFrame** %bottom63, align 8, !dbg !19004
  %linesize64 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %79, i32 0, i32 1, !dbg !19005
  %arrayidx65 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize64, i64 0, i64 %idxprom62, !dbg !19003
  %80 = load i32, i32* %arrayidx65, align 4, !dbg !19003
  %conv66 = sext i32 %80 to i64, !dbg !19003
  %81 = load i8*, i8** %dst, align 8, !dbg !19006
  %82 = load i32, i32* %slice_start, align 4, !dbg !19007
  %83 = load %struct.ThreadData*, %struct.ThreadData** %td, align 8, !dbg !19008
  %plane67 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %83, i32 0, i32 4, !dbg !19009
  %84 = load i32, i32* %plane67, align 8, !dbg !19009
  %idxprom68 = sext i32 %84 to i64, !dbg !19010
  %85 = load %struct.ThreadData*, %struct.ThreadData** %td, align 8, !dbg !19010
  %dst69 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %85, i32 0, i32 2, !dbg !19011
  %86 = load %struct.AVFrame*, %struct.AVFrame** %dst69, align 8, !dbg !19011
  %linesize70 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %86, i32 0, i32 1, !dbg !19012
  %arrayidx71 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize70, i64 0, i64 %idxprom68, !dbg !19010
  %87 = load i32, i32* %arrayidx71, align 4, !dbg !19010
  %mul72 = mul nsw i32 %82, %87, !dbg !19013
  %idx.ext73 = sext i32 %mul72 to i64, !dbg !19014
  %add.ptr74 = getelementptr inbounds i8, i8* %81, i64 %idx.ext73, !dbg !19014
  %88 = load %struct.ThreadData*, %struct.ThreadData** %td, align 8, !dbg !19015
  %plane75 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %88, i32 0, i32 4, !dbg !19016
  %89 = load i32, i32* %plane75, align 8, !dbg !19016
  %idxprom76 = sext i32 %89 to i64, !dbg !19017
  %90 = load %struct.ThreadData*, %struct.ThreadData** %td, align 8, !dbg !19017
  %dst77 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %90, i32 0, i32 2, !dbg !19018
  %91 = load %struct.AVFrame*, %struct.AVFrame** %dst77, align 8, !dbg !19018
  %linesize78 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %91, i32 0, i32 1, !dbg !19019
  %arrayidx79 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize78, i64 0, i64 %idxprom76, !dbg !19017
  %92 = load i32, i32* %arrayidx79, align 4, !dbg !19017
  %conv80 = sext i32 %92 to i64, !dbg !19017
  %93 = load %struct.ThreadData*, %struct.ThreadData** %td, align 8, !dbg !19020
  %w81 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %93, i32 0, i32 5, !dbg !19021
  %94 = load i32, i32* %w81, align 4, !dbg !19021
  %conv82 = sext i32 %94 to i64, !dbg !19020
  %95 = load i32, i32* %height, align 4, !dbg !19022
  %conv83 = sext i32 %95 to i64, !dbg !19022
  %96 = load %struct.ThreadData*, %struct.ThreadData** %td, align 8, !dbg !19023
  %param84 = getelementptr inbounds %struct.ThreadData, %struct.ThreadData* %96, i32 0, i32 7, !dbg !19024
  %97 = load %struct.FilterParams*, %struct.FilterParams** %param84, align 8, !dbg !19024
  %arrayidx85 = getelementptr inbounds [12 x double], [12 x double]* %values, i64 0, i64 0, !dbg !19025
  %98 = load i32, i32* %slice_start, align 4, !dbg !19026
  call void %56(i8* %add.ptr, i64 %conv52, i8* %add.ptr60, i64 %conv66, i8* %add.ptr74, i64 %conv80, i64 %conv82, i64 %conv83, %struct.FilterParams* %97, double* %arrayidx85, i32 %98), !dbg !18975
  ret i32 0, !dbg !19027
}

declare i32 @ff_filter_get_nb_threads(%struct.AVFilterContext*) #2

declare void @av_frame_free(%struct.AVFrame**) #2

; Function Attrs: inlinehint nounwind uwtable
define internal double @av_q2d(i64 %a.coerce) #7 !dbg !19028 {
entry:
  %a = alloca %struct.AVRational, align 4
  %0 = bitcast %struct.AVRational* %a to i64*
  store i64 %a.coerce, i64* %0, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %a, metadata !19031, metadata !905), !dbg !19032
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %a, i32 0, i32 0, !dbg !19033
  %1 = load i32, i32* %num, align 4, !dbg !19033
  %conv = sitofp i32 %1 to double, !dbg !19034
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %a, i32 0, i32 1, !dbg !19035
  %2 = load i32, i32* %den, align 4, !dbg !19035
  %conv1 = sitofp i32 %2 to double, !dbg !19036
  %div = fdiv double %conv, %conv1, !dbg !19037
  ret double %div, !dbg !19038
}

declare void @ff_framesync_uninit(%struct.FFFrameSync*) #2

declare void @av_expr_free(%struct.AVExpr*) #2

declare %struct.AVFilterFormats* @ff_make_format_list(i32*) #2

declare i32 @ff_set_common_formats(%struct.AVFilterContext*, %struct.AVFilterFormats*) #2

declare i32 @ff_framesync_activate(%struct.FFFrameSync*) #2

; Function Attrs: nounwind uwtable
define internal i32 @tblend_filter_frame(%struct.AVFilterLink* %inlink, %struct.AVFrame* %frame) #0 !dbg !19039 {
entry:
  %retval = alloca i32, align 4
  %inlink.addr = alloca %struct.AVFilterLink*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %ctx = alloca %struct.AVFilterContext*, align 8
  %s = alloca %struct.BlendContext*, align 8
  %outlink = alloca %struct.AVFilterLink*, align 8
  %out = alloca %struct.AVFrame*, align 8
  store %struct.AVFilterLink* %inlink, %struct.AVFilterLink** %inlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterLink** %inlink.addr, metadata !19040, metadata !905), !dbg !19041
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !19042, metadata !905), !dbg !19043
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx, metadata !19044, metadata !905), !dbg !19045
  %0 = load %struct.AVFilterLink*, %struct.AVFilterLink** %inlink.addr, align 8, !dbg !19046
  %dst = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %0, i32 0, i32 2, !dbg !19047
  %1 = load %struct.AVFilterContext*, %struct.AVFilterContext** %dst, align 8, !dbg !19047
  store %struct.AVFilterContext* %1, %struct.AVFilterContext** %ctx, align 8, !dbg !19045
  call void @llvm.dbg.declare(metadata %struct.BlendContext** %s, metadata !19048, metadata !905), !dbg !19049
  %2 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !19050
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %2, i32 0, i32 9, !dbg !19051
  %3 = load i8*, i8** %priv, align 8, !dbg !19051
  %4 = bitcast i8* %3 to %struct.BlendContext*, !dbg !19050
  store %struct.BlendContext* %4, %struct.BlendContext** %s, align 8, !dbg !19049
  call void @llvm.dbg.declare(metadata %struct.AVFilterLink** %outlink, metadata !19052, metadata !905), !dbg !19053
  %5 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !19054
  %outputs = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %5, i32 0, i32 7, !dbg !19055
  %6 = load %struct.AVFilterLink**, %struct.AVFilterLink*** %outputs, align 8, !dbg !19055
  %arrayidx = getelementptr inbounds %struct.AVFilterLink*, %struct.AVFilterLink** %6, i64 0, !dbg !19054
  %7 = load %struct.AVFilterLink*, %struct.AVFilterLink** %arrayidx, align 8, !dbg !19054
  store %struct.AVFilterLink* %7, %struct.AVFilterLink** %outlink, align 8, !dbg !19053
  %8 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !19056
  %prev_frame = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %8, i32 0, i32 11, !dbg !19058
  %9 = load %struct.AVFrame*, %struct.AVFrame** %prev_frame, align 8, !dbg !19058
  %tobool = icmp ne %struct.AVFrame* %9, null, !dbg !19056
  br i1 %tobool, label %if.then, label %if.end8, !dbg !19059

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %out, metadata !19060, metadata !905), !dbg !19062
  %10 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !19063
  %is_disabled = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %10, i32 0, i32 17, !dbg !19065
  %11 = load i32, i32* %is_disabled, align 8, !dbg !19065
  %tobool1 = icmp ne i32 %11, 0, !dbg !19063
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !19066

if.then2:                                         ; preds = %if.then
  %12 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !19067
  %call = call %struct.AVFrame* @av_frame_clone(%struct.AVFrame* %12), !dbg !19068
  store %struct.AVFrame* %call, %struct.AVFrame** %out, align 8, !dbg !19069
  br label %if.end, !dbg !19070

if.else:                                          ; preds = %if.then
  %13 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx, align 8, !dbg !19071
  %14 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !19072
  %15 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !19073
  %prev_frame3 = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %15, i32 0, i32 11, !dbg !19074
  %16 = load %struct.AVFrame*, %struct.AVFrame** %prev_frame3, align 8, !dbg !19074
  %call4 = call %struct.AVFrame* @blend_frame(%struct.AVFilterContext* %13, %struct.AVFrame* %14, %struct.AVFrame* %16), !dbg !19075
  store %struct.AVFrame* %call4, %struct.AVFrame** %out, align 8, !dbg !19076
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  %17 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !19077
  %prev_frame5 = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %17, i32 0, i32 11, !dbg !19078
  call void @av_frame_free(%struct.AVFrame** %prev_frame5), !dbg !19079
  %18 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !19080
  %19 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !19081
  %prev_frame6 = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %19, i32 0, i32 11, !dbg !19082
  store %struct.AVFrame* %18, %struct.AVFrame** %prev_frame6, align 8, !dbg !19083
  %20 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink, align 8, !dbg !19084
  %21 = load %struct.AVFrame*, %struct.AVFrame** %out, align 8, !dbg !19085
  %call7 = call i32 @ff_filter_frame(%struct.AVFilterLink* %20, %struct.AVFrame* %21), !dbg !19086
  store i32 %call7, i32* %retval, align 4, !dbg !19087
  br label %return, !dbg !19087

if.end8:                                          ; preds = %entry
  %22 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !19088
  %23 = load %struct.BlendContext*, %struct.BlendContext** %s, align 8, !dbg !19089
  %prev_frame9 = getelementptr inbounds %struct.BlendContext, %struct.BlendContext* %23, i32 0, i32 11, !dbg !19090
  store %struct.AVFrame* %22, %struct.AVFrame** %prev_frame9, align 8, !dbg !19091
  store i32 0, i32* %retval, align 4, !dbg !19092
  br label %return, !dbg !19092

return:                                           ; preds = %if.end8, %if.end
  %24 = load i32, i32* %retval, align 4, !dbg !19093
  ret i32 %24, !dbg !19093
}

declare %struct.AVFrame* @av_frame_clone(%struct.AVFrame*) #2

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!878, !879}
!llvm.ident = !{!880}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !838, globals: !844)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a/[inter]libavfilter--vf_blend.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!2 = !{!3, !41, !51, !61, !85, !92, !110, !134, !153, !163, !185, !206, !617, !623, !639}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BlendMode", file: !4, line: 27, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "libavfilter/blend.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40}
!6 = !DIEnumerator(name: "BLEND_UNSET", value: -1)
!7 = !DIEnumerator(name: "BLEND_NORMAL", value: 0)
!8 = !DIEnumerator(name: "BLEND_ADDITION", value: 1)
!9 = !DIEnumerator(name: "BLEND_AND", value: 2)
!10 = !DIEnumerator(name: "BLEND_AVERAGE", value: 3)
!11 = !DIEnumerator(name: "BLEND_BURN", value: 4)
!12 = !DIEnumerator(name: "BLEND_DARKEN", value: 5)
!13 = !DIEnumerator(name: "BLEND_DIFFERENCE", value: 6)
!14 = !DIEnumerator(name: "BLEND_GRAINEXTRACT", value: 7)
!15 = !DIEnumerator(name: "BLEND_DIVIDE", value: 8)
!16 = !DIEnumerator(name: "BLEND_DODGE", value: 9)
!17 = !DIEnumerator(name: "BLEND_EXCLUSION", value: 10)
!18 = !DIEnumerator(name: "BLEND_HARDLIGHT", value: 11)
!19 = !DIEnumerator(name: "BLEND_LIGHTEN", value: 12)
!20 = !DIEnumerator(name: "BLEND_MULTIPLY", value: 13)
!21 = !DIEnumerator(name: "BLEND_NEGATION", value: 14)
!22 = !DIEnumerator(name: "BLEND_OR", value: 15)
!23 = !DIEnumerator(name: "BLEND_OVERLAY", value: 16)
!24 = !DIEnumerator(name: "BLEND_PHOENIX", value: 17)
!25 = !DIEnumerator(name: "BLEND_PINLIGHT", value: 18)
!26 = !DIEnumerator(name: "BLEND_REFLECT", value: 19)
!27 = !DIEnumerator(name: "BLEND_SCREEN", value: 20)
!28 = !DIEnumerator(name: "BLEND_SOFTLIGHT", value: 21)
!29 = !DIEnumerator(name: "BLEND_SUBTRACT", value: 22)
!30 = !DIEnumerator(name: "BLEND_VIVIDLIGHT", value: 23)
!31 = !DIEnumerator(name: "BLEND_XOR", value: 24)
!32 = !DIEnumerator(name: "BLEND_HARDMIX", value: 25)
!33 = !DIEnumerator(name: "BLEND_LINEARLIGHT", value: 26)
!34 = !DIEnumerator(name: "BLEND_GLOW", value: 27)
!35 = !DIEnumerator(name: "BLEND_GRAINMERGE", value: 28)
!36 = !DIEnumerator(name: "BLEND_MULTIPLY128", value: 29)
!37 = !DIEnumerator(name: "BLEND_HEAT", value: 30)
!38 = !DIEnumerator(name: "BLEND_FREEZE", value: 31)
!39 = !DIEnumerator(name: "BLEND_EXTREMITY", value: 32)
!40 = !DIEnumerator(name: "BLEND_NB", value: 33)
!41 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !42, line: 199, size: 32, align: 32, elements: !43)
!42 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!43 = !{!44, !45, !46, !47, !48, !49, !50}
!44 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!45 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!46 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!47 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!48 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!49 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!50 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!51 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !42, line: 272, size: 32, align: 32, elements: !52)
!52 = !{!53, !54, !55, !56, !57, !58, !59, !60}
!53 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!54 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!55 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!56 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!57 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!58 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!59 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!60 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!61 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !62, line: 48, size: 32, align: 32, elements: !63)
!62 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!63 = !{!64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84}
!64 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!65 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!66 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!67 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!68 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!69 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!70 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!71 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!72 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!73 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!74 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!75 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!76 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!77 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!78 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!79 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!80 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!81 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!82 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!83 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!84 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!85 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !86, line: 516, size: 32, align: 32, elements: !87)
!86 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!87 = !{!88, !89, !90, !91}
!88 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!89 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!90 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!91 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!92 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !86, line: 440, size: 32, align: 32, elements: !93)
!93 = !{!94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109}
!94 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!95 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!96 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!97 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!98 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!99 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!100 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!101 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!102 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!103 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!104 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!105 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!106 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!107 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!108 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!109 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!110 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !86, line: 464, size: 32, align: 32, elements: !111)
!111 = !{!112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!112 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!113 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!114 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!115 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!116 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!117 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!118 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!119 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!120 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!121 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!122 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!123 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!124 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!125 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!126 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!127 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!128 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!129 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!130 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!131 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!132 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!133 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !86, line: 493, size: 32, align: 32, elements: !135)
!135 = !{!136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152}
!136 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!137 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!138 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!139 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!140 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!141 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!142 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!143 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!144 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!145 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!146 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!147 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!148 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!149 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!150 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!151 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!152 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!153 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !86, line: 538, size: 32, align: 32, elements: !154)
!154 = !{!155, !156, !157, !158, !159, !160, !161, !162}
!155 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!156 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!157 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!158 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!159 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!160 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!161 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!162 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!163 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !164, line: 221, size: 32, align: 32, elements: !165)
!164 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!165 = !{!166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184}
!166 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!167 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!168 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!169 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!170 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!171 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!172 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!173 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!174 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!175 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!176 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!177 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!178 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!179 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!180 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!181 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!182 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!183 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!184 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!185 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !186, line: 29, size: 32, align: 32, elements: !187)
!186 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!187 = !{!188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205}
!188 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!189 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!190 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!191 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!192 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!193 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!194 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!195 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!196 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!197 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!198 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!199 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!200 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!201 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!202 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!203 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!204 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!205 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!206 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !208, file: !207, line: 503, size: 32, align: 32, elements: !613)
!207 = !DIFile(filename: "libavfilter/avfilter.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterLink", file: !207, line: 439, size: 493504, align: 64, elements: !209)
!209 = !{!210, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !574, !575, !576, !577, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609}
!210 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !208, file: !207, line: 440, baseType: !211, size: 64, align: 64)
!211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !212, size: 64, align: 64)
!212 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterContext", file: !207, line: 67, baseType: !213)
!213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterContext", file: !207, line: 338, size: 1344, align: 64, elements: !214)
!214 = !{!215, !302, !474, !475, !477, !479, !481, !482, !483, !484, !485, !525, !526, !532, !541, !542, !543, !545, !546, !547, !548, !549}
!215 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !213, file: !207, line: 339, baseType: !216, size: 64, align: 64)
!216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 64, align: 64)
!217 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !218)
!218 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !186, line: 143, baseType: !219)
!219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !186, line: 67, size: 640, align: 64, elements: !220)
!220 = !{!221, !225, !230, !261, !262, !263, !264, !268, !274, !276, !280}
!221 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !219, file: !186, line: 72, baseType: !222, size: 64, align: 64)
!222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 64, align: 64)
!223 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !224)
!224 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !219, file: !186, line: 78, baseType: !226, size: 64, align: 64, offset: 64)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 64, align: 64)
!227 = !DISubroutineType(types: !228)
!228 = !{!222, !229}
!229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !219, file: !186, line: 85, baseType: !231, size: 64, align: 64, offset: 128)
!231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 64, align: 64)
!232 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !233)
!233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !164, line: 246, size: 512, align: 64, elements: !234)
!234 = !{!235, !236, !237, !239, !240, !257, !258, !259, !260}
!235 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !233, file: !164, line: 247, baseType: !222, size: 64, align: 64)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !233, file: !164, line: 253, baseType: !222, size: 64, align: 64, offset: 64)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !233, file: !164, line: 259, baseType: !238, size: 32, align: 32, offset: 128)
!238 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !233, file: !164, line: 260, baseType: !163, size: 32, align: 32, offset: 160)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !233, file: !164, line: 271, baseType: !241, size: 64, align: 64, offset: 192)
!241 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !233, file: !164, line: 265, size: 64, align: 64, elements: !242)
!242 = !{!243, !247, !249, !250}
!243 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !241, file: !164, line: 266, baseType: !244, size: 64, align: 64)
!244 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !245, line: 40, baseType: !246)
!245 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!246 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !241, file: !164, line: 267, baseType: !248, size: 64, align: 64)
!248 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !241, file: !164, line: 268, baseType: !222, size: 64, align: 64)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !241, file: !164, line: 270, baseType: !251, size: 64, align: 32)
!251 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !252, line: 61, baseType: !253)
!252 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !252, line: 58, size: 64, align: 32, elements: !254)
!254 = !{!255, !256}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !253, file: !252, line: 59, baseType: !238, size: 32, align: 32)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !253, file: !252, line: 60, baseType: !238, size: 32, align: 32, offset: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !233, file: !164, line: 272, baseType: !248, size: 64, align: 64, offset: 256)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !233, file: !164, line: 273, baseType: !248, size: 64, align: 64, offset: 320)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !233, file: !164, line: 275, baseType: !238, size: 32, align: 32, offset: 384)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !233, file: !164, line: 300, baseType: !222, size: 64, align: 64, offset: 448)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !219, file: !186, line: 93, baseType: !238, size: 32, align: 32, offset: 192)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !219, file: !186, line: 99, baseType: !238, size: 32, align: 32, offset: 224)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !219, file: !186, line: 108, baseType: !238, size: 32, align: 32, offset: 256)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !219, file: !186, line: 113, baseType: !265, size: 64, align: 64, offset: 320)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 64, align: 64)
!266 = !DISubroutineType(types: !267)
!267 = !{!229, !229, !229}
!268 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !219, file: !186, line: 123, baseType: !269, size: 64, align: 64, offset: 384)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 64, align: 64)
!270 = !DISubroutineType(types: !271)
!271 = !{!272, !272}
!272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !273, size: 64, align: 64)
!273 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !219)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !219, file: !186, line: 130, baseType: !275, size: 32, align: 32, offset: 448)
!275 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !186, line: 48, baseType: !185)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !219, file: !186, line: 136, baseType: !277, size: 64, align: 64, offset: 512)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64, align: 64)
!278 = !DISubroutineType(types: !279)
!279 = !{!275, !229}
!280 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !219, file: !186, line: 142, baseType: !281, size: 64, align: 64, offset: 576)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 64, align: 64)
!282 = !DISubroutineType(types: !283)
!283 = !{!238, !284, !229, !222, !238}
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64, align: 64)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !286, size: 64, align: 64)
!286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !164, line: 329, size: 128, align: 64, elements: !287)
!287 = !{!288, !300, !301}
!288 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !286, file: !164, line: 360, baseType: !289, size: 64, align: 64)
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 64, align: 64)
!290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 64, align: 64)
!291 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOptionRange", file: !164, line: 324, baseType: !292)
!292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRange", file: !164, line: 306, size: 384, align: 64, elements: !293)
!293 = !{!294, !295, !296, !297, !298, !299}
!294 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !292, file: !164, line: 307, baseType: !222, size: 64, align: 64)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !292, file: !164, line: 313, baseType: !248, size: 64, align: 64, offset: 64)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !292, file: !164, line: 313, baseType: !248, size: 64, align: 64, offset: 128)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "component_min", scope: !292, file: !164, line: 318, baseType: !248, size: 64, align: 64, offset: 192)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "component_max", scope: !292, file: !164, line: 318, baseType: !248, size: 64, align: 64, offset: 256)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "is_range", scope: !292, file: !164, line: 323, baseType: !238, size: 32, align: 32, offset: 320)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ranges", scope: !286, file: !164, line: 364, baseType: !238, size: 32, align: 32, offset: 64)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !286, file: !164, line: 368, baseType: !238, size: 32, align: 32, offset: 96)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !213, file: !207, line: 341, baseType: !303, size: 64, align: 64, offset: 64)
!303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 64, align: 64)
!304 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !305)
!305 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilter", file: !207, line: 328, baseType: !306)
!306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilter", file: !207, line: 144, size: 1024, align: 64, elements: !307)
!307 = !{!308, !309, !310, !442, !443, !444, !445, !449, !450, !455, !459, !460, !461, !462, !464, !469, !473}
!308 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !306, file: !207, line: 148, baseType: !222, size: 64, align: 64)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !306, file: !207, line: 155, baseType: !222, size: 64, align: 64, offset: 64)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !306, file: !207, line: 164, baseType: !311, size: 64, align: 64, offset: 128)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64, align: 64)
!312 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !313)
!313 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterPad", file: !207, line: 69, baseType: !314)
!314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterPad", file: !315, line: 54, size: 576, align: 64, elements: !316)
!315 = !DIFile(filename: "libavfilter/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!316 = !{!317, !318, !319, !426, !430, !434, !438, !439, !440, !441}
!317 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !314, file: !315, line: 60, baseType: !222, size: 64, align: 64)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !314, file: !315, line: 65, baseType: !41, size: 32, align: 32, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "get_video_buffer", scope: !314, file: !315, line: 73, baseType: !320, size: 64, align: 64, offset: 128)
!320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 64, align: 64)
!321 = !DISubroutineType(types: !322)
!322 = !{!323, !424, !238, !238}
!323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !324, size: 64, align: 64)
!324 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !62, line: 646, baseType: !325)
!325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !62, line: 268, size: 4288, align: 64, elements: !326)
!326 = !{!327, !334, !336, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !356, !357, !358, !359, !360, !361, !362, !363, !376, !378, !379, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !412, !413, !414, !415, !416, !417, !420, !421, !422, !423}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !325, file: !62, line: 282, baseType: !328, size: 512, align: 64)
!328 = !DICompositeType(tag: DW_TAG_array_type, baseType: !329, size: 512, align: 64, elements: !332)
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 64, align: 64)
!330 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !245, line: 48, baseType: !331)
!331 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!332 = !{!333}
!333 = !DISubrange(count: 8)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !325, file: !62, line: 299, baseType: !335, size: 256, align: 32, offset: 512)
!335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !238, size: 256, align: 32, elements: !332)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !325, file: !62, line: 315, baseType: !337, size: 64, align: 64, offset: 768)
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 64, align: 64)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !325, file: !62, line: 326, baseType: !238, size: 32, align: 32, offset: 832)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !325, file: !62, line: 326, baseType: !238, size: 32, align: 32, offset: 864)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !325, file: !62, line: 334, baseType: !238, size: 32, align: 32, offset: 896)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !325, file: !62, line: 341, baseType: !238, size: 32, align: 32, offset: 928)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !325, file: !62, line: 346, baseType: !238, size: 32, align: 32, offset: 960)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !325, file: !62, line: 351, baseType: !51, size: 32, align: 32, offset: 992)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !325, file: !62, line: 356, baseType: !251, size: 64, align: 32, offset: 1024)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !325, file: !62, line: 361, baseType: !244, size: 64, align: 64, offset: 1088)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !325, file: !62, line: 369, baseType: !244, size: 64, align: 64, offset: 1152)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !325, file: !62, line: 377, baseType: !244, size: 64, align: 64, offset: 1216)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !325, file: !62, line: 382, baseType: !238, size: 32, align: 32, offset: 1280)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !325, file: !62, line: 386, baseType: !238, size: 32, align: 32, offset: 1312)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !325, file: !62, line: 391, baseType: !238, size: 32, align: 32, offset: 1344)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !325, file: !62, line: 396, baseType: !229, size: 64, align: 64, offset: 1408)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !325, file: !62, line: 403, baseType: !353, size: 512, align: 64, offset: 1472)
!353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !354, size: 512, align: 64, elements: !332)
!354 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !245, line: 55, baseType: !355)
!355 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !325, file: !62, line: 410, baseType: !238, size: 32, align: 32, offset: 1984)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !325, file: !62, line: 415, baseType: !238, size: 32, align: 32, offset: 2016)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !325, file: !62, line: 420, baseType: !238, size: 32, align: 32, offset: 2048)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !325, file: !62, line: 425, baseType: !238, size: 32, align: 32, offset: 2080)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !325, file: !62, line: 435, baseType: !244, size: 64, align: 64, offset: 2112)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !325, file: !62, line: 440, baseType: !238, size: 32, align: 32, offset: 2176)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !325, file: !62, line: 445, baseType: !354, size: 64, align: 64, offset: 2240)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !325, file: !62, line: 459, baseType: !364, size: 512, align: 64, offset: 2304)
!364 = !DICompositeType(tag: DW_TAG_array_type, baseType: !365, size: 512, align: 64, elements: !332)
!365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 64, align: 64)
!366 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !367, line: 94, baseType: !368)
!367 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !367, line: 81, size: 192, align: 64, elements: !369)
!369 = !{!370, !374, !375}
!370 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !368, file: !367, line: 82, baseType: !371, size: 64, align: 64)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 64, align: 64)
!372 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !367, line: 73, baseType: !373)
!373 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !367, line: 73, flags: DIFlagFwdDecl)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !368, file: !367, line: 89, baseType: !329, size: 64, align: 64, offset: 64)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !368, file: !367, line: 93, baseType: !238, size: 32, align: 32, offset: 128)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !325, file: !62, line: 473, baseType: !377, size: 64, align: 64, offset: 2816)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 64, align: 64)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !325, file: !62, line: 477, baseType: !238, size: 32, align: 32, offset: 2880)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !325, file: !62, line: 479, baseType: !380, size: 64, align: 64, offset: 2944)
!380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 64, align: 64)
!381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !382, size: 64, align: 64)
!382 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !62, line: 207, baseType: !383)
!383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !62, line: 201, size: 320, align: 64, elements: !384)
!384 = !{!385, !386, !387, !388, !393}
!385 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !383, file: !62, line: 202, baseType: !61, size: 32, align: 32)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !383, file: !62, line: 203, baseType: !329, size: 64, align: 64, offset: 64)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !383, file: !62, line: 204, baseType: !238, size: 32, align: 32, offset: 128)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !383, file: !62, line: 205, baseType: !389, size: 64, align: 64, offset: 192)
!389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64, align: 64)
!390 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !391, line: 86, baseType: !392)
!391 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!392 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !391, line: 86, flags: DIFlagFwdDecl)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !383, file: !62, line: 206, baseType: !365, size: 64, align: 64, offset: 256)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !325, file: !62, line: 480, baseType: !238, size: 32, align: 32, offset: 3008)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !325, file: !62, line: 505, baseType: !238, size: 32, align: 32, offset: 3040)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !325, file: !62, line: 512, baseType: !85, size: 32, align: 32, offset: 3072)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !325, file: !62, line: 514, baseType: !92, size: 32, align: 32, offset: 3104)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !325, file: !62, line: 516, baseType: !110, size: 32, align: 32, offset: 3136)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !325, file: !62, line: 523, baseType: !134, size: 32, align: 32, offset: 3168)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !325, file: !62, line: 525, baseType: !153, size: 32, align: 32, offset: 3200)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !325, file: !62, line: 532, baseType: !244, size: 64, align: 64, offset: 3264)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !325, file: !62, line: 539, baseType: !244, size: 64, align: 64, offset: 3328)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !325, file: !62, line: 547, baseType: !244, size: 64, align: 64, offset: 3392)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !325, file: !62, line: 554, baseType: !389, size: 64, align: 64, offset: 3456)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !325, file: !62, line: 563, baseType: !238, size: 32, align: 32, offset: 3520)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !325, file: !62, line: 572, baseType: !238, size: 32, align: 32, offset: 3552)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !325, file: !62, line: 581, baseType: !238, size: 32, align: 32, offset: 3584)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !325, file: !62, line: 588, baseType: !409, size: 64, align: 64, offset: 3648)
!409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 64, align: 64)
!410 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !245, line: 36, baseType: !411)
!411 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !325, file: !62, line: 593, baseType: !238, size: 32, align: 32, offset: 3712)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !325, file: !62, line: 596, baseType: !238, size: 32, align: 32, offset: 3744)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !325, file: !62, line: 599, baseType: !365, size: 64, align: 64, offset: 3776)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !325, file: !62, line: 605, baseType: !365, size: 64, align: 64, offset: 3840)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !325, file: !62, line: 616, baseType: !365, size: 64, align: 64, offset: 3904)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !325, file: !62, line: 626, baseType: !418, size: 64, align: 64, offset: 3968)
!418 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !419, line: 216, baseType: !355)
!419 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!420 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !325, file: !62, line: 627, baseType: !418, size: 64, align: 64, offset: 4032)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !325, file: !62, line: 628, baseType: !418, size: 64, align: 64, offset: 4096)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !325, file: !62, line: 629, baseType: !418, size: 64, align: 64, offset: 4160)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !325, file: !62, line: 645, baseType: !365, size: 64, align: 64, offset: 4224)
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 64, align: 64)
!425 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterLink", file: !207, line: 68, baseType: !208)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "get_audio_buffer", scope: !314, file: !315, line: 81, baseType: !427, size: 64, align: 64, offset: 192)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !428, size: 64, align: 64)
!428 = !DISubroutineType(types: !429)
!429 = !{!323, !424, !238}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "filter_frame", scope: !314, file: !315, line: 93, baseType: !431, size: 64, align: 64, offset: 256)
!431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !432, size: 64, align: 64)
!432 = !DISubroutineType(types: !433)
!433 = !{!238, !424, !323}
!434 = !DIDerivedType(tag: DW_TAG_member, name: "poll_frame", scope: !314, file: !315, line: 104, baseType: !435, size: 64, align: 64, offset: 320)
!435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 64, align: 64)
!436 = !DISubroutineType(types: !437)
!437 = !{!238, !424}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "request_frame", scope: !314, file: !315, line: 113, baseType: !435, size: 64, align: 64, offset: 384)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "config_props", scope: !314, file: !315, line: 129, baseType: !435, size: 64, align: 64, offset: 448)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "needs_fifo", scope: !314, file: !315, line: 137, baseType: !238, size: 32, align: 32, offset: 512)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "needs_writable", scope: !314, file: !315, line: 145, baseType: !238, size: 32, align: 32, offset: 544)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !306, file: !207, line: 172, baseType: !311, size: 64, align: 64, offset: 192)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !306, file: !207, line: 182, baseType: !216, size: 64, align: 64, offset: 256)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !306, file: !207, line: 187, baseType: !238, size: 32, align: 32, offset: 320)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "preinit", scope: !306, file: !207, line: 210, baseType: !446, size: 64, align: 64, offset: 384)
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64, align: 64)
!447 = !DISubroutineType(types: !448)
!448 = !{!238, !211}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !306, file: !207, line: 233, baseType: !446, size: 64, align: 64, offset: 448)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "init_dict", scope: !306, file: !207, line: 246, baseType: !451, size: 64, align: 64, offset: 512)
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 64, align: 64)
!452 = !DISubroutineType(types: !453)
!453 = !{!238, !211, !454}
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 64, align: 64)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !306, file: !207, line: 258, baseType: !456, size: 64, align: 64, offset: 576)
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !457, size: 64, align: 64)
!457 = !DISubroutineType(types: !458)
!458 = !{null, !211}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "query_formats", scope: !306, file: !207, line: 282, baseType: !446, size: 64, align: 64, offset: 640)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !306, file: !207, line: 284, baseType: !238, size: 32, align: 32, offset: 704)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "flags_internal", scope: !306, file: !207, line: 286, baseType: !238, size: 32, align: 32, offset: 736)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !306, file: !207, line: 292, baseType: !463, size: 64, align: 64, offset: 768)
!463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 64, align: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "process_command", scope: !306, file: !207, line: 306, baseType: !465, size: 64, align: 64, offset: 832)
!465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 64, align: 64)
!466 = !DISubroutineType(types: !467)
!467 = !{!238, !211, !222, !222, !468, !238, !238}
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 64, align: 64)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "init_opaque", scope: !306, file: !207, line: 313, baseType: !470, size: 64, align: 64, offset: 896)
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64, align: 64)
!471 = !DISubroutineType(types: !472)
!472 = !{!238, !211, !229}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !306, file: !207, line: 327, baseType: !446, size: 64, align: 64, offset: 960)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !213, file: !207, line: 343, baseType: !468, size: 64, align: 64, offset: 128)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "input_pads", scope: !213, file: !207, line: 345, baseType: !476, size: 64, align: 64, offset: 192)
!476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64, align: 64)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !213, file: !207, line: 346, baseType: !478, size: 64, align: 64, offset: 256)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 64, align: 64)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inputs", scope: !213, file: !207, line: 347, baseType: !480, size: 32, align: 32, offset: 320)
!480 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "output_pads", scope: !213, file: !207, line: 349, baseType: !476, size: 64, align: 64, offset: 384)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !213, file: !207, line: 350, baseType: !478, size: 64, align: 64, offset: 448)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "nb_outputs", scope: !213, file: !207, line: 351, baseType: !480, size: 32, align: 32, offset: 512)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !213, file: !207, line: 353, baseType: !229, size: 64, align: 64, offset: 576)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "graph", scope: !213, file: !207, line: 355, baseType: !486, size: 64, align: 64, offset: 640)
!486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 64, align: 64)
!487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterGraph", file: !207, line: 840, size: 768, align: 64, elements: !488)
!488 = !{!489, !490, !492, !493, !494, !495, !496, !497, !519, !520, !521, !522, !523, !524}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !487, file: !207, line: 841, baseType: !216, size: 64, align: 64)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "filters", scope: !487, file: !207, line: 842, baseType: !491, size: 64, align: 64, offset: 64)
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !211, size: 64, align: 64)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "nb_filters", scope: !487, file: !207, line: 843, baseType: !480, size: 32, align: 32, offset: 128)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "scale_sws_opts", scope: !487, file: !207, line: 845, baseType: !468, size: 64, align: 64, offset: 192)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "resample_lavr_opts", scope: !487, file: !207, line: 847, baseType: !468, size: 64, align: 64, offset: 256)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !487, file: !207, line: 862, baseType: !238, size: 32, align: 32, offset: 320)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "nb_threads", scope: !487, file: !207, line: 869, baseType: !238, size: 32, align: 32, offset: 352)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !487, file: !207, line: 874, baseType: !498, size: 64, align: 64, offset: 384)
!498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !499, size: 64, align: 64)
!499 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterGraphInternal", file: !207, line: 809, baseType: !500)
!500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterGraphInternal", file: !315, line: 148, size: 192, align: 64, elements: !501)
!501 = !{!502, !503, !513}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !500, file: !315, line: 149, baseType: !229, size: 64, align: 64)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "thread_execute", scope: !500, file: !315, line: 150, baseType: !504, size: 64, align: 64, offset: 64)
!504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 64, align: 64)
!505 = !DIDerivedType(tag: DW_TAG_typedef, name: "avfilter_execute_func", file: !207, line: 837, baseType: !506)
!506 = !DISubroutineType(types: !507)
!507 = !{!238, !211, !508, !229, !512, !238}
!508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !509, size: 64, align: 64)
!509 = !DIDerivedType(tag: DW_TAG_typedef, name: "avfilter_action_func", file: !207, line: 823, baseType: !510)
!510 = !DISubroutineType(types: !511)
!511 = !{!238, !211, !229, !238, !238}
!512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !238, size: 64, align: 64)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "frame_queues", scope: !500, file: !315, line: 151, baseType: !514, size: 8, align: 8, offset: 128)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFFrameQueueGlobal", file: !515, line: 48, baseType: !516)
!515 = !DIFile(filename: "libavfilter/framequeue.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFFrameQueueGlobal", file: !515, line: 46, size: 8, align: 8, elements: !517)
!517 = !{!518}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !516, file: !515, line: 47, baseType: !224, size: 8, align: 8)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !487, file: !207, line: 881, baseType: !229, size: 64, align: 64, offset: 448)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !487, file: !207, line: 895, baseType: !504, size: 64, align: 64, offset: 512)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "aresample_swr_opts", scope: !487, file: !207, line: 897, baseType: !468, size: 64, align: 64, offset: 576)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "sink_links", scope: !487, file: !207, line: 906, baseType: !478, size: 64, align: 64, offset: 640)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "sink_links_count", scope: !487, file: !207, line: 907, baseType: !238, size: 32, align: 32, offset: 704)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "disable_auto_convert", scope: !487, file: !207, line: 909, baseType: !480, size: 32, align: 32, offset: 736)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !213, file: !207, line: 373, baseType: !238, size: 32, align: 32, offset: 704)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !213, file: !207, line: 378, baseType: !527, size: 64, align: 64, offset: 768)
!527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !528, size: 64, align: 64)
!528 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterInternal", file: !207, line: 335, baseType: !529)
!529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterInternal", file: !315, line: 154, size: 64, align: 64, elements: !530)
!530 = !{!531}
!531 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !529, file: !315, line: 155, baseType: !504, size: 64, align: 64)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "command_queue", scope: !213, file: !207, line: 380, baseType: !533, size: 64, align: 64, offset: 832)
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 64, align: 64)
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterCommand", file: !315, line: 38, size: 320, align: 64, elements: !535)
!535 = !{!536, !537, !538, !539, !540}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !534, file: !315, line: 39, baseType: !248, size: 64, align: 64)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !534, file: !315, line: 40, baseType: !468, size: 64, align: 64, offset: 64)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !534, file: !315, line: 41, baseType: !468, size: 64, align: 64, offset: 128)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !534, file: !315, line: 42, baseType: !238, size: 32, align: 32, offset: 192)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !534, file: !315, line: 43, baseType: !533, size: 64, align: 64, offset: 256)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "enable_str", scope: !213, file: !207, line: 382, baseType: !468, size: 64, align: 64, offset: 896)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !213, file: !207, line: 383, baseType: !229, size: 64, align: 64, offset: 960)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "var_values", scope: !213, file: !207, line: 384, baseType: !544, size: 64, align: 64, offset: 1024)
!544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 64, align: 64)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "is_disabled", scope: !213, file: !207, line: 385, baseType: !238, size: 32, align: 32, offset: 1088)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !213, file: !207, line: 394, baseType: !365, size: 64, align: 64, offset: 1152)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "nb_threads", scope: !213, file: !207, line: 401, baseType: !238, size: 32, align: 32, offset: 1216)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "ready", scope: !213, file: !207, line: 408, baseType: !480, size: 32, align: 32, offset: 1248)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !213, file: !207, line: 424, baseType: !238, size: 32, align: 32, offset: 1280)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "srcpad", scope: !208, file: !207, line: 441, baseType: !476, size: 64, align: 64, offset: 64)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !208, file: !207, line: 443, baseType: !211, size: 64, align: 64, offset: 128)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "dstpad", scope: !208, file: !207, line: 444, baseType: !476, size: 64, align: 64, offset: 192)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !208, file: !207, line: 446, baseType: !41, size: 32, align: 32, offset: 256)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !208, file: !207, line: 449, baseType: !238, size: 32, align: 32, offset: 288)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !208, file: !207, line: 450, baseType: !238, size: 32, align: 32, offset: 320)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !208, file: !207, line: 451, baseType: !251, size: 64, align: 32, offset: 352)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !208, file: !207, line: 453, baseType: !354, size: 64, align: 64, offset: 448)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !208, file: !207, line: 454, baseType: !238, size: 32, align: 32, offset: 512)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !208, file: !207, line: 456, baseType: !238, size: 32, align: 32, offset: 544)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !208, file: !207, line: 465, baseType: !251, size: 64, align: 32, offset: 576)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "in_formats", scope: !208, file: !207, line: 481, baseType: !562, size: 64, align: 64, offset: 640)
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 64, align: 64)
!563 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterFormats", file: !207, line: 70, baseType: !564)
!564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterFormats", file: !565, line: 64, size: 256, align: 64, elements: !566)
!565 = !DIFile(filename: "libavfilter/formats.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!566 = !{!567, !568, !569, !570}
!567 = !DIDerivedType(tag: DW_TAG_member, name: "nb_formats", scope: !564, file: !565, line: 65, baseType: !480, size: 32, align: 32)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "formats", scope: !564, file: !565, line: 66, baseType: !512, size: 64, align: 64, offset: 64)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !564, file: !565, line: 68, baseType: !480, size: 32, align: 32, offset: 128)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !564, file: !565, line: 69, baseType: !571, size: 64, align: 64, offset: 192)
!571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !572, size: 64, align: 64)
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 64, align: 64)
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !564, size: 64, align: 64)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "out_formats", scope: !208, file: !207, line: 482, baseType: !562, size: 64, align: 64, offset: 704)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "in_samplerates", scope: !208, file: !207, line: 488, baseType: !562, size: 64, align: 64, offset: 768)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "out_samplerates", scope: !208, file: !207, line: 489, baseType: !562, size: 64, align: 64, offset: 832)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "in_channel_layouts", scope: !208, file: !207, line: 490, baseType: !578, size: 64, align: 64, offset: 896)
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 64, align: 64)
!579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterChannelLayouts", file: !565, line: 85, size: 256, align: 64, elements: !580)
!580 = !{!581, !583, !584, !585, !586, !587}
!581 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !579, file: !565, line: 86, baseType: !582, size: 64, align: 64)
!582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 64, align: 64)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "nb_channel_layouts", scope: !579, file: !565, line: 87, baseType: !238, size: 32, align: 32, offset: 64)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "all_layouts", scope: !579, file: !565, line: 88, baseType: !224, size: 8, align: 8, offset: 96)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "all_counts", scope: !579, file: !565, line: 89, baseType: !224, size: 8, align: 8, offset: 104)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !579, file: !565, line: 91, baseType: !480, size: 32, align: 32, offset: 128)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !579, file: !565, line: 92, baseType: !588, size: 64, align: 64, offset: 192)
!588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 64, align: 64)
!589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 64, align: 64)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "out_channel_layouts", scope: !208, file: !207, line: 491, baseType: !578, size: 64, align: 64, offset: 960)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "request_samples", scope: !208, file: !207, line: 500, baseType: !238, size: 32, align: 32, offset: 1024)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !208, file: !207, line: 507, baseType: !206, size: 32, align: 32, offset: 1056)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "graph", scope: !208, file: !207, line: 512, baseType: !486, size: 64, align: 64, offset: 1088)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "current_pts", scope: !208, file: !207, line: 518, baseType: !244, size: 64, align: 64, offset: 1152)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "current_pts_us", scope: !208, file: !207, line: 524, baseType: !244, size: 64, align: 64, offset: 1216)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "age_index", scope: !208, file: !207, line: 529, baseType: !238, size: 32, align: 32, offset: 1280)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "frame_rate", scope: !208, file: !207, line: 542, baseType: !251, size: 64, align: 32, offset: 1312)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "partial_buf", scope: !208, file: !207, line: 547, baseType: !323, size: 64, align: 64, offset: 1408)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "partial_buf_size", scope: !208, file: !207, line: 553, baseType: !238, size: 32, align: 32, offset: 1472)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "min_samples", scope: !208, file: !207, line: 562, baseType: !238, size: 32, align: 32, offset: 1504)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "max_samples", scope: !208, file: !207, line: 568, baseType: !238, size: 32, align: 32, offset: 1536)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !208, file: !207, line: 573, baseType: !238, size: 32, align: 32, offset: 1568)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !208, file: !207, line: 578, baseType: !480, size: 32, align: 32, offset: 1600)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "frame_count_in", scope: !208, file: !207, line: 583, baseType: !244, size: 64, align: 64, offset: 1664)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "frame_count_out", scope: !208, file: !207, line: 583, baseType: !244, size: 64, align: 64, offset: 1728)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "frame_pool", scope: !208, file: !207, line: 588, baseType: !229, size: 64, align: 64, offset: 1792)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "frame_wanted_out", scope: !208, file: !207, line: 595, baseType: !238, size: 32, align: 32, offset: 1856)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !208, file: !207, line: 601, baseType: !365, size: 64, align: 64, offset: 1920)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !208, file: !207, line: 610, baseType: !610, size: 491520, align: 8, offset: 1984)
!610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 491520, align: 8, elements: !611)
!611 = !{!612}
!612 = !DISubrange(count: 61440)
!613 = !{!614, !615, !616}
!614 = !DIEnumerator(name: "AVLINK_UNINIT", value: 0)
!615 = !DIEnumerator(name: "AVLINK_STARTINIT", value: 1)
!616 = !DIEnumerator(name: "AVLINK_INIT", value: 2)
!617 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "FFFrameSyncExtMode", file: !618, line: 60, size: 32, align: 32, elements: !619)
!618 = !DIFile(filename: "libavfilter/framesync.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!619 = !{!620, !621, !622}
!620 = !DIEnumerator(name: "EXT_STOP", value: 0)
!621 = !DIEnumerator(name: "EXT_NULL", value: 1)
!622 = !DIEnumerator(name: "EXT_INFINITY", value: 2)
!623 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !624, line: 52, size: 32, align: 32, elements: !625)
!624 = !DIFile(filename: "libavfilter/vf_blend.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!625 = !{!626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638}
!626 = !DIEnumerator(name: "VAR_X", value: 0)
!627 = !DIEnumerator(name: "VAR_Y", value: 1)
!628 = !DIEnumerator(name: "VAR_W", value: 2)
!629 = !DIEnumerator(name: "VAR_H", value: 3)
!630 = !DIEnumerator(name: "VAR_SW", value: 4)
!631 = !DIEnumerator(name: "VAR_SH", value: 5)
!632 = !DIEnumerator(name: "VAR_T", value: 6)
!633 = !DIEnumerator(name: "VAR_N", value: 7)
!634 = !DIEnumerator(name: "VAR_A", value: 8)
!635 = !DIEnumerator(name: "VAR_B", value: 9)
!636 = !DIEnumerator(name: "VAR_TOP", value: 10)
!637 = !DIEnumerator(name: "VAR_BOTTOM", value: 11)
!638 = !DIEnumerator(name: "VAR_VARS_NB", value: 12)
!639 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !86, line: 64, size: 32, align: 32, elements: !640)
!640 = !{!641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837}
!641 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!642 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!643 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!644 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!645 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!646 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!647 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!648 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!649 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!650 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!651 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!652 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!653 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!654 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!655 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!656 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!657 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!658 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!659 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!660 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!661 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!662 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!663 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!664 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!665 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!666 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!667 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!668 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!669 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!670 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!671 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!672 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!673 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!674 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!675 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!676 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!677 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!678 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!679 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!680 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!681 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!682 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!683 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!684 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!685 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!686 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!687 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!688 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!689 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!690 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!691 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!692 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!693 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!694 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!695 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!696 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!697 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!698 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!699 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!700 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!701 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!702 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!703 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!704 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!705 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!706 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!707 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!708 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!709 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!710 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!711 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!712 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!713 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!714 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!715 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!716 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!717 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!718 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!719 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!720 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!721 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!722 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!723 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!724 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!725 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!726 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!727 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!728 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!729 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!730 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!731 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!732 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!733 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!734 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!735 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!736 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!737 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!738 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!739 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!740 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!741 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!742 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!743 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!744 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!745 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!746 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!747 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!748 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!749 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!750 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!751 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!752 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!753 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!754 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!755 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!756 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!757 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!758 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!759 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!760 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!761 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!762 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!763 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!764 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!765 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!766 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!767 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!768 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!769 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!770 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!771 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!772 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!773 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!774 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!775 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!776 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!777 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!778 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!779 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!780 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!781 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!782 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!783 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!784 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!785 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!786 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!787 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!788 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!789 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!790 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!791 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!792 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!793 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!794 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!795 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!796 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!797 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!798 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!799 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!800 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!801 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!802 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!803 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!804 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!805 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!806 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!807 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!808 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!809 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!810 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!811 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!812 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!813 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!814 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!815 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!816 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!817 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!818 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!819 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!820 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!821 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!822 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!823 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!824 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!825 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!826 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!827 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!828 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!829 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!830 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!831 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!832 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!833 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!834 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!835 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!836 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!837 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!838 = !{!839, !843, !238, !229, !329, !244, !248}
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 64, align: 64)
!840 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !841)
!841 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !245, line: 49, baseType: !842)
!842 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 64, align: 64)
!844 = !{!845, !846, !847, !851, !855, !860, !861, !867, !874, !875, !876, !877}
!845 = distinct !DIGlobalVariable(name: "ff_vf_blend", scope: !0, file: !624, line: 824, type: !305, isLocal: false, isDefinition: true, variable: %struct.AVFilter* @ff_vf_blend)
!846 = distinct !DIGlobalVariable(name: "ff_vf_tblend", scope: !0, file: !624, line: 889, type: !305, isLocal: false, isDefinition: true, variable: %struct.AVFilter* @ff_vf_tblend)
!847 = distinct !DIGlobalVariable(name: "blend_inputs", scope: !0, file: !624, line: 804, type: !848, isLocal: true, isDefinition: true, variable: [3 x %struct.AVFilterPad]* @blend_inputs)
!848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 1728, align: 64, elements: !849)
!849 = !{!850}
!850 = !DISubrange(count: 3)
!851 = distinct !DIGlobalVariable(name: "blend_outputs", scope: !0, file: !624, line: 815, type: !852, isLocal: true, isDefinition: true, variable: [2 x %struct.AVFilterPad]* @blend_outputs)
!852 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 1152, align: 64, elements: !853)
!853 = !{!854}
!854 = !DISubrange(count: 2)
!855 = distinct !DIGlobalVariable(name: "var_names", scope: !0, file: !624, line: 51, type: !856, isLocal: true, isDefinition: true, variable: [13 x i8*]* @var_names)
!856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !857, size: 832, align: 64, elements: !858)
!857 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !222)
!858 = !{!859}
!859 = !DISubrange(count: 13)
!860 = distinct !DIGlobalVariable(name: "blend_class", scope: !0, file: !624, line: 123, type: !217, isLocal: true, isDefinition: true, variable: %struct.AVClass* @blend_class)
!861 = distinct !DIGlobalVariable(name: "blend_options", scope: !0, file: !624, line: 118, type: !862, isLocal: true, isDefinition: true, variable: <{ %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption }>* @blend_options)
!862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !863, size: 26112, align: 64, elements: !865)
!863 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !864)
!864 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOption", file: !164, line: 301, baseType: !233)
!865 = !{!866}
!866 = !DISubrange(count: 51)
!867 = distinct !DIGlobalVariable(name: "pix_fmts", scope: !868, file: !624, line: 525, type: !870, isLocal: true, isDefinition: true, variable: [44 x i32]* @query_formats.pix_fmts)
!868 = distinct !DISubprogram(name: "query_formats", scope: !624, file: !624, line: 523, type: !447, isLocal: true, isDefinition: true, scopeLine: 524, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!869 = !{}
!870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !871, size: 1408, align: 32, elements: !872)
!871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !639)
!872 = !{!873}
!873 = !DISubrange(count: 44)
!874 = distinct !DIGlobalVariable(name: "tblend_inputs", scope: !0, file: !624, line: 871, type: !852, isLocal: true, isDefinition: true, variable: [2 x %struct.AVFilterPad]* @tblend_inputs)
!875 = distinct !DIGlobalVariable(name: "tblend_outputs", scope: !0, file: !624, line: 880, type: !852, isLocal: true, isDefinition: true, variable: [2 x %struct.AVFilterPad]* @tblend_outputs)
!876 = distinct !DIGlobalVariable(name: "tblend_class", scope: !0, file: !624, line: 869, type: !217, isLocal: true, isDefinition: true, variable: %struct.AVClass* @tblend_class)
!877 = distinct !DIGlobalVariable(name: "tblend_options", scope: !0, file: !624, line: 864, type: !862, isLocal: true, isDefinition: true, variable: <{ %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption }>* @tblend_options)
!878 = !{i32 2, !"Dwarf Version", i32 4}
!879 = !{i32 2, !"Debug Info Version", i32 3}
!880 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!881 = distinct !DISubprogram(name: "ff_blend_init", scope: !624, file: !624, line: 559, type: !882, isLocal: false, isDefinition: true, scopeLine: 560, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!882 = !DISubroutineType(types: !883)
!883 = !{null, !884, !238}
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 64, align: 64)
!885 = !DIDerivedType(tag: DW_TAG_typedef, name: "FilterParams", file: !4, line: 75, baseType: !886)
!886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FilterParams", file: !4, line: 65, size: 320, align: 64, elements: !887)
!887 = !{!888, !889, !890, !895, !896}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !886, file: !4, line: 66, baseType: !3, size: 32, align: 32)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !886, file: !4, line: 67, baseType: !248, size: 64, align: 64, offset: 64)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !886, file: !4, line: 68, baseType: !891, size: 64, align: 64, offset: 128)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 64, align: 64)
!892 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVExpr", file: !893, line: 31, baseType: !894)
!893 = !DIFile(filename: "./libavutil/eval.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!894 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVExpr", file: !893, line: 31, flags: DIFlagFwdDecl)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "expr_str", scope: !886, file: !4, line: 69, baseType: !468, size: 64, align: 64, offset: 192)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !886, file: !4, line: 70, baseType: !897, size: 64, align: 64, offset: 256)
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 64, align: 64)
!898 = !DISubroutineType(types: !899)
!899 = !{null, !900, !902, !900, !902, !329, !902, !902, !902, !903, !544, !238}
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64, align: 64)
!901 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !330)
!902 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !419, line: 149, baseType: !246)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 64, align: 64)
!904 = !DILocalVariable(name: "param", arg: 1, scope: !881, file: !624, line: 559, type: !884)
!905 = !DIExpression()
!906 = !DILocation(line: 559, column: 34, scope: !881)
!907 = !DILocalVariable(name: "depth", arg: 2, scope: !881, file: !624, line: 559, type: !238)
!908 = !DILocation(line: 559, column: 45, scope: !881)
!909 = !DILocation(line: 561, column: 13, scope: !881)
!910 = !DILocation(line: 561, column: 5, scope: !881)
!911 = !DILocation(line: 563, column: 17, scope: !912)
!912 = distinct !DILexicalBlock(scope: !881, file: !624, line: 561, column: 20)
!913 = !DILocation(line: 563, column: 24, scope: !912)
!914 = !DILocation(line: 563, column: 9, scope: !912)
!915 = !DILocation(line: 564, column: 30, scope: !916)
!916 = distinct !DILexicalBlock(scope: !912, file: !624, line: 563, column: 30)
!917 = !DILocation(line: 564, column: 37, scope: !916)
!918 = !DILocation(line: 564, column: 43, scope: !916)
!919 = !DILocation(line: 564, column: 66, scope: !916)
!920 = !DILocation(line: 565, column: 32, scope: !916)
!921 = !DILocation(line: 565, column: 39, scope: !916)
!922 = !DILocation(line: 565, column: 45, scope: !916)
!923 = !DILocation(line: 565, column: 70, scope: !916)
!924 = !DILocation(line: 566, column: 25, scope: !916)
!925 = !DILocation(line: 566, column: 32, scope: !916)
!926 = !DILocation(line: 566, column: 38, scope: !916)
!927 = !DILocation(line: 566, column: 56, scope: !916)
!928 = !DILocation(line: 567, column: 29, scope: !916)
!929 = !DILocation(line: 567, column: 36, scope: !916)
!930 = !DILocation(line: 567, column: 42, scope: !916)
!931 = !DILocation(line: 567, column: 64, scope: !916)
!932 = !DILocation(line: 568, column: 26, scope: !916)
!933 = !DILocation(line: 568, column: 33, scope: !916)
!934 = !DILocation(line: 568, column: 39, scope: !916)
!935 = !DILocation(line: 568, column: 58, scope: !916)
!936 = !DILocation(line: 569, column: 28, scope: !916)
!937 = !DILocation(line: 569, column: 35, scope: !916)
!938 = !DILocation(line: 569, column: 41, scope: !916)
!939 = !DILocation(line: 569, column: 62, scope: !916)
!940 = !DILocation(line: 570, column: 32, scope: !916)
!941 = !DILocation(line: 570, column: 39, scope: !916)
!942 = !DILocation(line: 570, column: 45, scope: !916)
!943 = !DILocation(line: 570, column: 70, scope: !916)
!944 = !DILocation(line: 571, column: 34, scope: !916)
!945 = !DILocation(line: 571, column: 41, scope: !916)
!946 = !DILocation(line: 571, column: 47, scope: !916)
!947 = !DILocation(line: 571, column: 74, scope: !916)
!948 = !DILocation(line: 572, column: 28, scope: !916)
!949 = !DILocation(line: 572, column: 35, scope: !916)
!950 = !DILocation(line: 572, column: 41, scope: !916)
!951 = !DILocation(line: 572, column: 62, scope: !916)
!952 = !DILocation(line: 573, column: 27, scope: !916)
!953 = !DILocation(line: 573, column: 34, scope: !916)
!954 = !DILocation(line: 573, column: 40, scope: !916)
!955 = !DILocation(line: 573, column: 60, scope: !916)
!956 = !DILocation(line: 574, column: 31, scope: !916)
!957 = !DILocation(line: 574, column: 38, scope: !916)
!958 = !DILocation(line: 574, column: 44, scope: !916)
!959 = !DILocation(line: 574, column: 68, scope: !916)
!960 = !DILocation(line: 575, column: 31, scope: !916)
!961 = !DILocation(line: 575, column: 38, scope: !916)
!962 = !DILocation(line: 575, column: 44, scope: !916)
!963 = !DILocation(line: 575, column: 68, scope: !916)
!964 = !DILocation(line: 576, column: 28, scope: !916)
!965 = !DILocation(line: 576, column: 35, scope: !916)
!966 = !DILocation(line: 576, column: 41, scope: !916)
!967 = !DILocation(line: 576, column: 62, scope: !916)
!968 = !DILocation(line: 577, column: 26, scope: !916)
!969 = !DILocation(line: 577, column: 33, scope: !916)
!970 = !DILocation(line: 577, column: 39, scope: !916)
!971 = !DILocation(line: 577, column: 58, scope: !916)
!972 = !DILocation(line: 578, column: 31, scope: !916)
!973 = !DILocation(line: 578, column: 38, scope: !916)
!974 = !DILocation(line: 578, column: 44, scope: !916)
!975 = !DILocation(line: 578, column: 68, scope: !916)
!976 = !DILocation(line: 579, column: 29, scope: !916)
!977 = !DILocation(line: 579, column: 36, scope: !916)
!978 = !DILocation(line: 579, column: 42, scope: !916)
!979 = !DILocation(line: 579, column: 64, scope: !916)
!980 = !DILocation(line: 580, column: 26, scope: !916)
!981 = !DILocation(line: 580, column: 33, scope: !916)
!982 = !DILocation(line: 580, column: 39, scope: !916)
!983 = !DILocation(line: 580, column: 58, scope: !916)
!984 = !DILocation(line: 581, column: 29, scope: !916)
!985 = !DILocation(line: 581, column: 36, scope: !916)
!986 = !DILocation(line: 581, column: 42, scope: !916)
!987 = !DILocation(line: 581, column: 64, scope: !916)
!988 = !DILocation(line: 582, column: 32, scope: !916)
!989 = !DILocation(line: 582, column: 39, scope: !916)
!990 = !DILocation(line: 582, column: 45, scope: !916)
!991 = !DILocation(line: 582, column: 70, scope: !916)
!992 = !DILocation(line: 583, column: 30, scope: !916)
!993 = !DILocation(line: 583, column: 37, scope: !916)
!994 = !DILocation(line: 583, column: 43, scope: !916)
!995 = !DILocation(line: 583, column: 66, scope: !916)
!996 = !DILocation(line: 584, column: 32, scope: !916)
!997 = !DILocation(line: 584, column: 39, scope: !916)
!998 = !DILocation(line: 584, column: 45, scope: !916)
!999 = !DILocation(line: 584, column: 70, scope: !916)
!1000 = !DILocation(line: 585, column: 30, scope: !916)
!1001 = !DILocation(line: 585, column: 37, scope: !916)
!1002 = !DILocation(line: 585, column: 43, scope: !916)
!1003 = !DILocation(line: 585, column: 66, scope: !916)
!1004 = !DILocation(line: 586, column: 43, scope: !916)
!1005 = !DILocation(line: 586, column: 50, scope: !916)
!1006 = !DILocation(line: 586, column: 58, scope: !916)
!1007 = !DILocation(line: 586, column: 43, scope: !1008)
!1008 = !DILexicalBlockFile(scope: !916, file: !624, discriminator: 1)
!1009 = !DILocation(line: 587, column: 47, scope: !916)
!1010 = !DILocation(line: 587, column: 54, scope: !916)
!1011 = !DILocation(line: 587, column: 62, scope: !916)
!1012 = !DILocation(line: 586, column: 43, scope: !1013)
!1013 = !DILexicalBlockFile(scope: !916, file: !624, discriminator: 2)
!1014 = !DILocation(line: 586, column: 43, scope: !1015)
!1015 = !DILexicalBlockFile(scope: !916, file: !624, discriminator: 3)
!1016 = !DILocation(line: 586, column: 28, scope: !1015)
!1017 = !DILocation(line: 586, column: 35, scope: !1015)
!1018 = !DILocation(line: 586, column: 41, scope: !1015)
!1019 = !DILocation(line: 588, column: 66, scope: !916)
!1020 = !DILocation(line: 589, column: 24, scope: !916)
!1021 = !DILocation(line: 589, column: 31, scope: !916)
!1022 = !DILocation(line: 589, column: 37, scope: !916)
!1023 = !DILocation(line: 589, column: 54, scope: !916)
!1024 = !DILocation(line: 590, column: 29, scope: !916)
!1025 = !DILocation(line: 590, column: 36, scope: !916)
!1026 = !DILocation(line: 590, column: 42, scope: !916)
!1027 = !DILocation(line: 590, column: 64, scope: !916)
!1028 = !DILocation(line: 591, column: 29, scope: !916)
!1029 = !DILocation(line: 591, column: 36, scope: !916)
!1030 = !DILocation(line: 591, column: 42, scope: !916)
!1031 = !DILocation(line: 591, column: 64, scope: !916)
!1032 = !DILocation(line: 592, column: 30, scope: !916)
!1033 = !DILocation(line: 592, column: 37, scope: !916)
!1034 = !DILocation(line: 592, column: 43, scope: !916)
!1035 = !DILocation(line: 592, column: 66, scope: !916)
!1036 = !DILocation(line: 593, column: 29, scope: !916)
!1037 = !DILocation(line: 593, column: 36, scope: !916)
!1038 = !DILocation(line: 593, column: 42, scope: !916)
!1039 = !DILocation(line: 593, column: 64, scope: !916)
!1040 = !DILocation(line: 594, column: 28, scope: !916)
!1041 = !DILocation(line: 594, column: 35, scope: !916)
!1042 = !DILocation(line: 594, column: 41, scope: !916)
!1043 = !DILocation(line: 594, column: 62, scope: !916)
!1044 = !DILocation(line: 595, column: 31, scope: !916)
!1045 = !DILocation(line: 595, column: 38, scope: !916)
!1046 = !DILocation(line: 595, column: 44, scope: !916)
!1047 = !DILocation(line: 595, column: 68, scope: !916)
!1048 = !DILocation(line: 596, column: 30, scope: !916)
!1049 = !DILocation(line: 596, column: 37, scope: !916)
!1050 = !DILocation(line: 596, column: 43, scope: !916)
!1051 = !DILocation(line: 596, column: 66, scope: !916)
!1052 = !DILocation(line: 597, column: 32, scope: !916)
!1053 = !DILocation(line: 597, column: 39, scope: !916)
!1054 = !DILocation(line: 597, column: 45, scope: !916)
!1055 = !DILocation(line: 597, column: 70, scope: !916)
!1056 = !DILocation(line: 598, column: 25, scope: !916)
!1057 = !DILocation(line: 598, column: 32, scope: !916)
!1058 = !DILocation(line: 598, column: 38, scope: !916)
!1059 = !DILocation(line: 598, column: 56, scope: !916)
!1060 = !DILocation(line: 600, column: 9, scope: !912)
!1061 = !DILocation(line: 602, column: 17, scope: !912)
!1062 = !DILocation(line: 602, column: 24, scope: !912)
!1063 = !DILocation(line: 602, column: 9, scope: !912)
!1064 = !DILocation(line: 603, column: 30, scope: !1065)
!1065 = distinct !DILexicalBlock(scope: !912, file: !624, line: 602, column: 30)
!1066 = !DILocation(line: 603, column: 37, scope: !1065)
!1067 = !DILocation(line: 603, column: 43, scope: !1065)
!1068 = !DILocation(line: 603, column: 67, scope: !1065)
!1069 = !DILocation(line: 604, column: 32, scope: !1065)
!1070 = !DILocation(line: 604, column: 39, scope: !1065)
!1071 = !DILocation(line: 604, column: 45, scope: !1065)
!1072 = !DILocation(line: 604, column: 71, scope: !1065)
!1073 = !DILocation(line: 605, column: 25, scope: !1065)
!1074 = !DILocation(line: 605, column: 32, scope: !1065)
!1075 = !DILocation(line: 605, column: 38, scope: !1065)
!1076 = !DILocation(line: 605, column: 57, scope: !1065)
!1077 = !DILocation(line: 606, column: 29, scope: !1065)
!1078 = !DILocation(line: 606, column: 36, scope: !1065)
!1079 = !DILocation(line: 606, column: 42, scope: !1065)
!1080 = !DILocation(line: 606, column: 65, scope: !1065)
!1081 = !DILocation(line: 607, column: 26, scope: !1065)
!1082 = !DILocation(line: 607, column: 33, scope: !1065)
!1083 = !DILocation(line: 607, column: 39, scope: !1065)
!1084 = !DILocation(line: 607, column: 59, scope: !1065)
!1085 = !DILocation(line: 608, column: 28, scope: !1065)
!1086 = !DILocation(line: 608, column: 35, scope: !1065)
!1087 = !DILocation(line: 608, column: 41, scope: !1065)
!1088 = !DILocation(line: 608, column: 63, scope: !1065)
!1089 = !DILocation(line: 609, column: 32, scope: !1065)
!1090 = !DILocation(line: 609, column: 39, scope: !1065)
!1091 = !DILocation(line: 609, column: 45, scope: !1065)
!1092 = !DILocation(line: 609, column: 71, scope: !1065)
!1093 = !DILocation(line: 610, column: 34, scope: !1065)
!1094 = !DILocation(line: 610, column: 41, scope: !1065)
!1095 = !DILocation(line: 610, column: 47, scope: !1065)
!1096 = !DILocation(line: 610, column: 75, scope: !1065)
!1097 = !DILocation(line: 611, column: 28, scope: !1065)
!1098 = !DILocation(line: 611, column: 35, scope: !1065)
!1099 = !DILocation(line: 611, column: 41, scope: !1065)
!1100 = !DILocation(line: 611, column: 63, scope: !1065)
!1101 = !DILocation(line: 612, column: 27, scope: !1065)
!1102 = !DILocation(line: 612, column: 34, scope: !1065)
!1103 = !DILocation(line: 612, column: 40, scope: !1065)
!1104 = !DILocation(line: 612, column: 61, scope: !1065)
!1105 = !DILocation(line: 613, column: 31, scope: !1065)
!1106 = !DILocation(line: 613, column: 38, scope: !1065)
!1107 = !DILocation(line: 613, column: 44, scope: !1065)
!1108 = !DILocation(line: 613, column: 69, scope: !1065)
!1109 = !DILocation(line: 614, column: 31, scope: !1065)
!1110 = !DILocation(line: 614, column: 38, scope: !1065)
!1111 = !DILocation(line: 614, column: 44, scope: !1065)
!1112 = !DILocation(line: 614, column: 69, scope: !1065)
!1113 = !DILocation(line: 615, column: 28, scope: !1065)
!1114 = !DILocation(line: 615, column: 35, scope: !1065)
!1115 = !DILocation(line: 615, column: 41, scope: !1065)
!1116 = !DILocation(line: 615, column: 63, scope: !1065)
!1117 = !DILocation(line: 616, column: 26, scope: !1065)
!1118 = !DILocation(line: 616, column: 33, scope: !1065)
!1119 = !DILocation(line: 616, column: 39, scope: !1065)
!1120 = !DILocation(line: 616, column: 59, scope: !1065)
!1121 = !DILocation(line: 617, column: 31, scope: !1065)
!1122 = !DILocation(line: 617, column: 38, scope: !1065)
!1123 = !DILocation(line: 617, column: 44, scope: !1065)
!1124 = !DILocation(line: 617, column: 69, scope: !1065)
!1125 = !DILocation(line: 618, column: 29, scope: !1065)
!1126 = !DILocation(line: 618, column: 36, scope: !1065)
!1127 = !DILocation(line: 618, column: 42, scope: !1065)
!1128 = !DILocation(line: 618, column: 65, scope: !1065)
!1129 = !DILocation(line: 619, column: 26, scope: !1065)
!1130 = !DILocation(line: 619, column: 33, scope: !1065)
!1131 = !DILocation(line: 619, column: 39, scope: !1065)
!1132 = !DILocation(line: 619, column: 59, scope: !1065)
!1133 = !DILocation(line: 620, column: 29, scope: !1065)
!1134 = !DILocation(line: 620, column: 36, scope: !1065)
!1135 = !DILocation(line: 620, column: 42, scope: !1065)
!1136 = !DILocation(line: 620, column: 65, scope: !1065)
!1137 = !DILocation(line: 621, column: 32, scope: !1065)
!1138 = !DILocation(line: 621, column: 39, scope: !1065)
!1139 = !DILocation(line: 621, column: 45, scope: !1065)
!1140 = !DILocation(line: 621, column: 71, scope: !1065)
!1141 = !DILocation(line: 622, column: 30, scope: !1065)
!1142 = !DILocation(line: 622, column: 37, scope: !1065)
!1143 = !DILocation(line: 622, column: 43, scope: !1065)
!1144 = !DILocation(line: 622, column: 67, scope: !1065)
!1145 = !DILocation(line: 623, column: 32, scope: !1065)
!1146 = !DILocation(line: 623, column: 39, scope: !1065)
!1147 = !DILocation(line: 623, column: 45, scope: !1065)
!1148 = !DILocation(line: 623, column: 71, scope: !1065)
!1149 = !DILocation(line: 624, column: 30, scope: !1065)
!1150 = !DILocation(line: 624, column: 37, scope: !1065)
!1151 = !DILocation(line: 624, column: 43, scope: !1065)
!1152 = !DILocation(line: 624, column: 67, scope: !1065)
!1153 = !DILocation(line: 625, column: 43, scope: !1065)
!1154 = !DILocation(line: 625, column: 50, scope: !1065)
!1155 = !DILocation(line: 625, column: 58, scope: !1065)
!1156 = !DILocation(line: 625, column: 43, scope: !1157)
!1157 = !DILexicalBlockFile(scope: !1065, file: !624, discriminator: 1)
!1158 = !DILocation(line: 626, column: 47, scope: !1065)
!1159 = !DILocation(line: 626, column: 54, scope: !1065)
!1160 = !DILocation(line: 626, column: 62, scope: !1065)
!1161 = !DILocation(line: 625, column: 43, scope: !1162)
!1162 = !DILexicalBlockFile(scope: !1065, file: !624, discriminator: 2)
!1163 = !DILocation(line: 625, column: 43, scope: !1164)
!1164 = !DILexicalBlockFile(scope: !1065, file: !624, discriminator: 3)
!1165 = !DILocation(line: 625, column: 28, scope: !1164)
!1166 = !DILocation(line: 625, column: 35, scope: !1164)
!1167 = !DILocation(line: 625, column: 41, scope: !1164)
!1168 = !DILocation(line: 627, column: 67, scope: !1065)
!1169 = !DILocation(line: 628, column: 24, scope: !1065)
!1170 = !DILocation(line: 628, column: 31, scope: !1065)
!1171 = !DILocation(line: 628, column: 37, scope: !1065)
!1172 = !DILocation(line: 628, column: 55, scope: !1065)
!1173 = !DILocation(line: 629, column: 29, scope: !1065)
!1174 = !DILocation(line: 629, column: 36, scope: !1065)
!1175 = !DILocation(line: 629, column: 42, scope: !1065)
!1176 = !DILocation(line: 629, column: 65, scope: !1065)
!1177 = !DILocation(line: 630, column: 29, scope: !1065)
!1178 = !DILocation(line: 630, column: 36, scope: !1065)
!1179 = !DILocation(line: 630, column: 42, scope: !1065)
!1180 = !DILocation(line: 630, column: 65, scope: !1065)
!1181 = !DILocation(line: 631, column: 30, scope: !1065)
!1182 = !DILocation(line: 631, column: 37, scope: !1065)
!1183 = !DILocation(line: 631, column: 43, scope: !1065)
!1184 = !DILocation(line: 631, column: 67, scope: !1065)
!1185 = !DILocation(line: 632, column: 29, scope: !1065)
!1186 = !DILocation(line: 632, column: 36, scope: !1065)
!1187 = !DILocation(line: 632, column: 42, scope: !1065)
!1188 = !DILocation(line: 632, column: 65, scope: !1065)
!1189 = !DILocation(line: 633, column: 28, scope: !1065)
!1190 = !DILocation(line: 633, column: 35, scope: !1065)
!1191 = !DILocation(line: 633, column: 41, scope: !1065)
!1192 = !DILocation(line: 633, column: 63, scope: !1065)
!1193 = !DILocation(line: 634, column: 31, scope: !1065)
!1194 = !DILocation(line: 634, column: 38, scope: !1065)
!1195 = !DILocation(line: 634, column: 44, scope: !1065)
!1196 = !DILocation(line: 634, column: 69, scope: !1065)
!1197 = !DILocation(line: 635, column: 30, scope: !1065)
!1198 = !DILocation(line: 635, column: 37, scope: !1065)
!1199 = !DILocation(line: 635, column: 43, scope: !1065)
!1200 = !DILocation(line: 635, column: 67, scope: !1065)
!1201 = !DILocation(line: 636, column: 32, scope: !1065)
!1202 = !DILocation(line: 636, column: 39, scope: !1065)
!1203 = !DILocation(line: 636, column: 45, scope: !1065)
!1204 = !DILocation(line: 636, column: 70, scope: !1065)
!1205 = !DILocation(line: 637, column: 25, scope: !1065)
!1206 = !DILocation(line: 637, column: 32, scope: !1065)
!1207 = !DILocation(line: 637, column: 38, scope: !1065)
!1208 = !DILocation(line: 637, column: 57, scope: !1065)
!1209 = !DILocation(line: 639, column: 9, scope: !912)
!1210 = !DILocation(line: 641, column: 17, scope: !912)
!1211 = !DILocation(line: 641, column: 24, scope: !912)
!1212 = !DILocation(line: 641, column: 9, scope: !912)
!1213 = !DILocation(line: 642, column: 30, scope: !1214)
!1214 = distinct !DILexicalBlock(scope: !912, file: !624, line: 641, column: 30)
!1215 = !DILocation(line: 642, column: 37, scope: !1214)
!1216 = !DILocation(line: 642, column: 43, scope: !1214)
!1217 = !DILocation(line: 642, column: 67, scope: !1214)
!1218 = !DILocation(line: 643, column: 32, scope: !1214)
!1219 = !DILocation(line: 643, column: 39, scope: !1214)
!1220 = !DILocation(line: 643, column: 45, scope: !1214)
!1221 = !DILocation(line: 643, column: 71, scope: !1214)
!1222 = !DILocation(line: 644, column: 25, scope: !1214)
!1223 = !DILocation(line: 644, column: 32, scope: !1214)
!1224 = !DILocation(line: 644, column: 38, scope: !1214)
!1225 = !DILocation(line: 644, column: 57, scope: !1214)
!1226 = !DILocation(line: 645, column: 29, scope: !1214)
!1227 = !DILocation(line: 645, column: 36, scope: !1214)
!1228 = !DILocation(line: 645, column: 42, scope: !1214)
!1229 = !DILocation(line: 645, column: 65, scope: !1214)
!1230 = !DILocation(line: 646, column: 26, scope: !1214)
!1231 = !DILocation(line: 646, column: 33, scope: !1214)
!1232 = !DILocation(line: 646, column: 39, scope: !1214)
!1233 = !DILocation(line: 646, column: 59, scope: !1214)
!1234 = !DILocation(line: 647, column: 28, scope: !1214)
!1235 = !DILocation(line: 647, column: 35, scope: !1214)
!1236 = !DILocation(line: 647, column: 41, scope: !1214)
!1237 = !DILocation(line: 647, column: 63, scope: !1214)
!1238 = !DILocation(line: 648, column: 32, scope: !1214)
!1239 = !DILocation(line: 648, column: 39, scope: !1214)
!1240 = !DILocation(line: 648, column: 45, scope: !1214)
!1241 = !DILocation(line: 648, column: 71, scope: !1214)
!1242 = !DILocation(line: 649, column: 34, scope: !1214)
!1243 = !DILocation(line: 649, column: 41, scope: !1214)
!1244 = !DILocation(line: 649, column: 47, scope: !1214)
!1245 = !DILocation(line: 649, column: 75, scope: !1214)
!1246 = !DILocation(line: 650, column: 28, scope: !1214)
!1247 = !DILocation(line: 650, column: 35, scope: !1214)
!1248 = !DILocation(line: 650, column: 41, scope: !1214)
!1249 = !DILocation(line: 650, column: 63, scope: !1214)
!1250 = !DILocation(line: 651, column: 27, scope: !1214)
!1251 = !DILocation(line: 651, column: 34, scope: !1214)
!1252 = !DILocation(line: 651, column: 40, scope: !1214)
!1253 = !DILocation(line: 651, column: 61, scope: !1214)
!1254 = !DILocation(line: 652, column: 31, scope: !1214)
!1255 = !DILocation(line: 652, column: 38, scope: !1214)
!1256 = !DILocation(line: 652, column: 44, scope: !1214)
!1257 = !DILocation(line: 652, column: 69, scope: !1214)
!1258 = !DILocation(line: 653, column: 31, scope: !1214)
!1259 = !DILocation(line: 653, column: 38, scope: !1214)
!1260 = !DILocation(line: 653, column: 44, scope: !1214)
!1261 = !DILocation(line: 653, column: 69, scope: !1214)
!1262 = !DILocation(line: 654, column: 28, scope: !1214)
!1263 = !DILocation(line: 654, column: 35, scope: !1214)
!1264 = !DILocation(line: 654, column: 41, scope: !1214)
!1265 = !DILocation(line: 654, column: 63, scope: !1214)
!1266 = !DILocation(line: 655, column: 26, scope: !1214)
!1267 = !DILocation(line: 655, column: 33, scope: !1214)
!1268 = !DILocation(line: 655, column: 39, scope: !1214)
!1269 = !DILocation(line: 655, column: 59, scope: !1214)
!1270 = !DILocation(line: 656, column: 31, scope: !1214)
!1271 = !DILocation(line: 656, column: 38, scope: !1214)
!1272 = !DILocation(line: 656, column: 44, scope: !1214)
!1273 = !DILocation(line: 656, column: 69, scope: !1214)
!1274 = !DILocation(line: 657, column: 29, scope: !1214)
!1275 = !DILocation(line: 657, column: 36, scope: !1214)
!1276 = !DILocation(line: 657, column: 42, scope: !1214)
!1277 = !DILocation(line: 657, column: 65, scope: !1214)
!1278 = !DILocation(line: 658, column: 26, scope: !1214)
!1279 = !DILocation(line: 658, column: 33, scope: !1214)
!1280 = !DILocation(line: 658, column: 39, scope: !1214)
!1281 = !DILocation(line: 658, column: 59, scope: !1214)
!1282 = !DILocation(line: 659, column: 29, scope: !1214)
!1283 = !DILocation(line: 659, column: 36, scope: !1214)
!1284 = !DILocation(line: 659, column: 42, scope: !1214)
!1285 = !DILocation(line: 659, column: 65, scope: !1214)
!1286 = !DILocation(line: 660, column: 32, scope: !1214)
!1287 = !DILocation(line: 660, column: 39, scope: !1214)
!1288 = !DILocation(line: 660, column: 45, scope: !1214)
!1289 = !DILocation(line: 660, column: 71, scope: !1214)
!1290 = !DILocation(line: 661, column: 30, scope: !1214)
!1291 = !DILocation(line: 661, column: 37, scope: !1214)
!1292 = !DILocation(line: 661, column: 43, scope: !1214)
!1293 = !DILocation(line: 661, column: 67, scope: !1214)
!1294 = !DILocation(line: 662, column: 32, scope: !1214)
!1295 = !DILocation(line: 662, column: 39, scope: !1214)
!1296 = !DILocation(line: 662, column: 45, scope: !1214)
!1297 = !DILocation(line: 662, column: 71, scope: !1214)
!1298 = !DILocation(line: 663, column: 30, scope: !1214)
!1299 = !DILocation(line: 663, column: 37, scope: !1214)
!1300 = !DILocation(line: 663, column: 43, scope: !1214)
!1301 = !DILocation(line: 663, column: 67, scope: !1214)
!1302 = !DILocation(line: 664, column: 43, scope: !1214)
!1303 = !DILocation(line: 664, column: 50, scope: !1214)
!1304 = !DILocation(line: 664, column: 58, scope: !1214)
!1305 = !DILocation(line: 664, column: 43, scope: !1306)
!1306 = !DILexicalBlockFile(scope: !1214, file: !624, discriminator: 1)
!1307 = !DILocation(line: 665, column: 47, scope: !1214)
!1308 = !DILocation(line: 665, column: 54, scope: !1214)
!1309 = !DILocation(line: 665, column: 62, scope: !1214)
!1310 = !DILocation(line: 664, column: 43, scope: !1311)
!1311 = !DILexicalBlockFile(scope: !1214, file: !624, discriminator: 2)
!1312 = !DILocation(line: 664, column: 43, scope: !1313)
!1313 = !DILexicalBlockFile(scope: !1214, file: !624, discriminator: 3)
!1314 = !DILocation(line: 664, column: 28, scope: !1313)
!1315 = !DILocation(line: 664, column: 35, scope: !1313)
!1316 = !DILocation(line: 664, column: 41, scope: !1313)
!1317 = !DILocation(line: 666, column: 67, scope: !1214)
!1318 = !DILocation(line: 667, column: 24, scope: !1214)
!1319 = !DILocation(line: 667, column: 31, scope: !1214)
!1320 = !DILocation(line: 667, column: 37, scope: !1214)
!1321 = !DILocation(line: 667, column: 55, scope: !1214)
!1322 = !DILocation(line: 668, column: 29, scope: !1214)
!1323 = !DILocation(line: 668, column: 36, scope: !1214)
!1324 = !DILocation(line: 668, column: 42, scope: !1214)
!1325 = !DILocation(line: 668, column: 65, scope: !1214)
!1326 = !DILocation(line: 669, column: 29, scope: !1214)
!1327 = !DILocation(line: 669, column: 36, scope: !1214)
!1328 = !DILocation(line: 669, column: 42, scope: !1214)
!1329 = !DILocation(line: 669, column: 65, scope: !1214)
!1330 = !DILocation(line: 670, column: 30, scope: !1214)
!1331 = !DILocation(line: 670, column: 37, scope: !1214)
!1332 = !DILocation(line: 670, column: 43, scope: !1214)
!1333 = !DILocation(line: 670, column: 67, scope: !1214)
!1334 = !DILocation(line: 671, column: 29, scope: !1214)
!1335 = !DILocation(line: 671, column: 36, scope: !1214)
!1336 = !DILocation(line: 671, column: 42, scope: !1214)
!1337 = !DILocation(line: 671, column: 65, scope: !1214)
!1338 = !DILocation(line: 672, column: 28, scope: !1214)
!1339 = !DILocation(line: 672, column: 35, scope: !1214)
!1340 = !DILocation(line: 672, column: 41, scope: !1214)
!1341 = !DILocation(line: 672, column: 63, scope: !1214)
!1342 = !DILocation(line: 673, column: 31, scope: !1214)
!1343 = !DILocation(line: 673, column: 38, scope: !1214)
!1344 = !DILocation(line: 673, column: 44, scope: !1214)
!1345 = !DILocation(line: 673, column: 69, scope: !1214)
!1346 = !DILocation(line: 674, column: 30, scope: !1214)
!1347 = !DILocation(line: 674, column: 37, scope: !1214)
!1348 = !DILocation(line: 674, column: 43, scope: !1214)
!1349 = !DILocation(line: 674, column: 67, scope: !1214)
!1350 = !DILocation(line: 675, column: 32, scope: !1214)
!1351 = !DILocation(line: 675, column: 39, scope: !1214)
!1352 = !DILocation(line: 675, column: 45, scope: !1214)
!1353 = !DILocation(line: 675, column: 70, scope: !1214)
!1354 = !DILocation(line: 676, column: 25, scope: !1214)
!1355 = !DILocation(line: 676, column: 32, scope: !1214)
!1356 = !DILocation(line: 676, column: 38, scope: !1214)
!1357 = !DILocation(line: 676, column: 57, scope: !1214)
!1358 = !DILocation(line: 678, column: 9, scope: !912)
!1359 = !DILocation(line: 680, column: 17, scope: !912)
!1360 = !DILocation(line: 680, column: 24, scope: !912)
!1361 = !DILocation(line: 680, column: 9, scope: !912)
!1362 = !DILocation(line: 681, column: 30, scope: !1363)
!1363 = distinct !DILexicalBlock(scope: !912, file: !624, line: 680, column: 30)
!1364 = !DILocation(line: 681, column: 37, scope: !1363)
!1365 = !DILocation(line: 681, column: 43, scope: !1363)
!1366 = !DILocation(line: 681, column: 67, scope: !1363)
!1367 = !DILocation(line: 682, column: 32, scope: !1363)
!1368 = !DILocation(line: 682, column: 39, scope: !1363)
!1369 = !DILocation(line: 682, column: 45, scope: !1363)
!1370 = !DILocation(line: 682, column: 71, scope: !1363)
!1371 = !DILocation(line: 683, column: 25, scope: !1363)
!1372 = !DILocation(line: 683, column: 32, scope: !1363)
!1373 = !DILocation(line: 683, column: 38, scope: !1363)
!1374 = !DILocation(line: 683, column: 57, scope: !1363)
!1375 = !DILocation(line: 684, column: 29, scope: !1363)
!1376 = !DILocation(line: 684, column: 36, scope: !1363)
!1377 = !DILocation(line: 684, column: 42, scope: !1363)
!1378 = !DILocation(line: 684, column: 65, scope: !1363)
!1379 = !DILocation(line: 685, column: 26, scope: !1363)
!1380 = !DILocation(line: 685, column: 33, scope: !1363)
!1381 = !DILocation(line: 685, column: 39, scope: !1363)
!1382 = !DILocation(line: 685, column: 59, scope: !1363)
!1383 = !DILocation(line: 686, column: 28, scope: !1363)
!1384 = !DILocation(line: 686, column: 35, scope: !1363)
!1385 = !DILocation(line: 686, column: 41, scope: !1363)
!1386 = !DILocation(line: 686, column: 63, scope: !1363)
!1387 = !DILocation(line: 687, column: 32, scope: !1363)
!1388 = !DILocation(line: 687, column: 39, scope: !1363)
!1389 = !DILocation(line: 687, column: 45, scope: !1363)
!1390 = !DILocation(line: 687, column: 71, scope: !1363)
!1391 = !DILocation(line: 688, column: 34, scope: !1363)
!1392 = !DILocation(line: 688, column: 41, scope: !1363)
!1393 = !DILocation(line: 688, column: 47, scope: !1363)
!1394 = !DILocation(line: 688, column: 75, scope: !1363)
!1395 = !DILocation(line: 689, column: 28, scope: !1363)
!1396 = !DILocation(line: 689, column: 35, scope: !1363)
!1397 = !DILocation(line: 689, column: 41, scope: !1363)
!1398 = !DILocation(line: 689, column: 63, scope: !1363)
!1399 = !DILocation(line: 690, column: 27, scope: !1363)
!1400 = !DILocation(line: 690, column: 34, scope: !1363)
!1401 = !DILocation(line: 690, column: 40, scope: !1363)
!1402 = !DILocation(line: 690, column: 61, scope: !1363)
!1403 = !DILocation(line: 691, column: 31, scope: !1363)
!1404 = !DILocation(line: 691, column: 38, scope: !1363)
!1405 = !DILocation(line: 691, column: 44, scope: !1363)
!1406 = !DILocation(line: 691, column: 69, scope: !1363)
!1407 = !DILocation(line: 692, column: 31, scope: !1363)
!1408 = !DILocation(line: 692, column: 38, scope: !1363)
!1409 = !DILocation(line: 692, column: 44, scope: !1363)
!1410 = !DILocation(line: 692, column: 69, scope: !1363)
!1411 = !DILocation(line: 693, column: 28, scope: !1363)
!1412 = !DILocation(line: 693, column: 35, scope: !1363)
!1413 = !DILocation(line: 693, column: 41, scope: !1363)
!1414 = !DILocation(line: 693, column: 63, scope: !1363)
!1415 = !DILocation(line: 694, column: 26, scope: !1363)
!1416 = !DILocation(line: 694, column: 33, scope: !1363)
!1417 = !DILocation(line: 694, column: 39, scope: !1363)
!1418 = !DILocation(line: 694, column: 59, scope: !1363)
!1419 = !DILocation(line: 695, column: 31, scope: !1363)
!1420 = !DILocation(line: 695, column: 38, scope: !1363)
!1421 = !DILocation(line: 695, column: 44, scope: !1363)
!1422 = !DILocation(line: 695, column: 69, scope: !1363)
!1423 = !DILocation(line: 696, column: 29, scope: !1363)
!1424 = !DILocation(line: 696, column: 36, scope: !1363)
!1425 = !DILocation(line: 696, column: 42, scope: !1363)
!1426 = !DILocation(line: 696, column: 65, scope: !1363)
!1427 = !DILocation(line: 697, column: 26, scope: !1363)
!1428 = !DILocation(line: 697, column: 33, scope: !1363)
!1429 = !DILocation(line: 697, column: 39, scope: !1363)
!1430 = !DILocation(line: 697, column: 59, scope: !1363)
!1431 = !DILocation(line: 698, column: 29, scope: !1363)
!1432 = !DILocation(line: 698, column: 36, scope: !1363)
!1433 = !DILocation(line: 698, column: 42, scope: !1363)
!1434 = !DILocation(line: 698, column: 65, scope: !1363)
!1435 = !DILocation(line: 699, column: 32, scope: !1363)
!1436 = !DILocation(line: 699, column: 39, scope: !1363)
!1437 = !DILocation(line: 699, column: 45, scope: !1363)
!1438 = !DILocation(line: 699, column: 71, scope: !1363)
!1439 = !DILocation(line: 700, column: 30, scope: !1363)
!1440 = !DILocation(line: 700, column: 37, scope: !1363)
!1441 = !DILocation(line: 700, column: 43, scope: !1363)
!1442 = !DILocation(line: 700, column: 67, scope: !1363)
!1443 = !DILocation(line: 701, column: 32, scope: !1363)
!1444 = !DILocation(line: 701, column: 39, scope: !1363)
!1445 = !DILocation(line: 701, column: 45, scope: !1363)
!1446 = !DILocation(line: 701, column: 71, scope: !1363)
!1447 = !DILocation(line: 702, column: 30, scope: !1363)
!1448 = !DILocation(line: 702, column: 37, scope: !1363)
!1449 = !DILocation(line: 702, column: 43, scope: !1363)
!1450 = !DILocation(line: 702, column: 67, scope: !1363)
!1451 = !DILocation(line: 703, column: 43, scope: !1363)
!1452 = !DILocation(line: 703, column: 50, scope: !1363)
!1453 = !DILocation(line: 703, column: 58, scope: !1363)
!1454 = !DILocation(line: 703, column: 43, scope: !1455)
!1455 = !DILexicalBlockFile(scope: !1363, file: !624, discriminator: 1)
!1456 = !DILocation(line: 704, column: 47, scope: !1363)
!1457 = !DILocation(line: 704, column: 54, scope: !1363)
!1458 = !DILocation(line: 704, column: 62, scope: !1363)
!1459 = !DILocation(line: 703, column: 43, scope: !1460)
!1460 = !DILexicalBlockFile(scope: !1363, file: !624, discriminator: 2)
!1461 = !DILocation(line: 703, column: 43, scope: !1462)
!1462 = !DILexicalBlockFile(scope: !1363, file: !624, discriminator: 3)
!1463 = !DILocation(line: 703, column: 28, scope: !1462)
!1464 = !DILocation(line: 703, column: 35, scope: !1462)
!1465 = !DILocation(line: 703, column: 41, scope: !1462)
!1466 = !DILocation(line: 705, column: 67, scope: !1363)
!1467 = !DILocation(line: 706, column: 24, scope: !1363)
!1468 = !DILocation(line: 706, column: 31, scope: !1363)
!1469 = !DILocation(line: 706, column: 37, scope: !1363)
!1470 = !DILocation(line: 706, column: 55, scope: !1363)
!1471 = !DILocation(line: 707, column: 29, scope: !1363)
!1472 = !DILocation(line: 707, column: 36, scope: !1363)
!1473 = !DILocation(line: 707, column: 42, scope: !1363)
!1474 = !DILocation(line: 707, column: 65, scope: !1363)
!1475 = !DILocation(line: 708, column: 29, scope: !1363)
!1476 = !DILocation(line: 708, column: 36, scope: !1363)
!1477 = !DILocation(line: 708, column: 42, scope: !1363)
!1478 = !DILocation(line: 708, column: 65, scope: !1363)
!1479 = !DILocation(line: 709, column: 30, scope: !1363)
!1480 = !DILocation(line: 709, column: 37, scope: !1363)
!1481 = !DILocation(line: 709, column: 43, scope: !1363)
!1482 = !DILocation(line: 709, column: 67, scope: !1363)
!1483 = !DILocation(line: 710, column: 29, scope: !1363)
!1484 = !DILocation(line: 710, column: 36, scope: !1363)
!1485 = !DILocation(line: 710, column: 42, scope: !1363)
!1486 = !DILocation(line: 710, column: 65, scope: !1363)
!1487 = !DILocation(line: 711, column: 28, scope: !1363)
!1488 = !DILocation(line: 711, column: 35, scope: !1363)
!1489 = !DILocation(line: 711, column: 41, scope: !1363)
!1490 = !DILocation(line: 711, column: 63, scope: !1363)
!1491 = !DILocation(line: 712, column: 31, scope: !1363)
!1492 = !DILocation(line: 712, column: 38, scope: !1363)
!1493 = !DILocation(line: 712, column: 44, scope: !1363)
!1494 = !DILocation(line: 712, column: 69, scope: !1363)
!1495 = !DILocation(line: 713, column: 30, scope: !1363)
!1496 = !DILocation(line: 713, column: 37, scope: !1363)
!1497 = !DILocation(line: 713, column: 43, scope: !1363)
!1498 = !DILocation(line: 713, column: 67, scope: !1363)
!1499 = !DILocation(line: 714, column: 32, scope: !1363)
!1500 = !DILocation(line: 714, column: 39, scope: !1363)
!1501 = !DILocation(line: 714, column: 45, scope: !1363)
!1502 = !DILocation(line: 714, column: 70, scope: !1363)
!1503 = !DILocation(line: 715, column: 25, scope: !1363)
!1504 = !DILocation(line: 715, column: 32, scope: !1363)
!1505 = !DILocation(line: 715, column: 38, scope: !1363)
!1506 = !DILocation(line: 715, column: 57, scope: !1363)
!1507 = !DILocation(line: 717, column: 9, scope: !912)
!1508 = !DILocation(line: 720, column: 9, scope: !1509)
!1509 = distinct !DILexicalBlock(scope: !881, file: !624, line: 720, column: 9)
!1510 = !DILocation(line: 720, column: 16, scope: !1509)
!1511 = !DILocation(line: 720, column: 24, scope: !1509)
!1512 = !DILocation(line: 720, column: 29, scope: !1509)
!1513 = !DILocation(line: 720, column: 32, scope: !1514)
!1514 = !DILexicalBlockFile(scope: !1509, file: !624, discriminator: 1)
!1515 = !DILocation(line: 720, column: 39, scope: !1514)
!1516 = !DILocation(line: 720, column: 44, scope: !1514)
!1517 = !DILocation(line: 720, column: 9, scope: !1514)
!1518 = !DILocation(line: 721, column: 24, scope: !1519)
!1519 = distinct !DILexicalBlock(scope: !1509, file: !624, line: 720, column: 61)
!1520 = !DILocation(line: 721, column: 30, scope: !1519)
!1521 = !DILocation(line: 721, column: 9, scope: !1519)
!1522 = !DILocation(line: 721, column: 16, scope: !1519)
!1523 = !DILocation(line: 721, column: 22, scope: !1519)
!1524 = !DILocation(line: 722, column: 5, scope: !1519)
!1525 = !DILocation(line: 725, column: 27, scope: !1526)
!1526 = distinct !DILexicalBlock(scope: !881, file: !624, line: 724, column: 9)
!1527 = !DILocation(line: 725, column: 34, scope: !1526)
!1528 = !DILocation(line: 725, column: 9, scope: !1526)
!1529 = !DILocation(line: 726, column: 1, scope: !881)
!1530 = distinct !DISubprogram(name: "blend_addition_8bit", scope: !624, file: !624, line: 242, type: !1531, isLocal: true, isDefinition: true, scopeLine: 242, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!1531 = !DISubroutineType(types: !1532)
!1532 = !{null, !900, !902, !900, !902, !329, !902, !902, !902, !884, !544, !238}
!1533 = !DILocalVariable(name: "top", arg: 1, scope: !1530, file: !624, line: 242, type: !900)
!1534 = !DILocation(line: 242, column: 48, scope: !1530)
!1535 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !1530, file: !624, line: 242, type: !902)
!1536 = !DILocation(line: 242, column: 63, scope: !1530)
!1537 = !DILocalVariable(name: "bottom", arg: 3, scope: !1530, file: !624, line: 242, type: !900)
!1538 = !DILocation(line: 242, column: 92, scope: !1530)
!1539 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !1530, file: !624, line: 242, type: !902)
!1540 = !DILocation(line: 242, column: 110, scope: !1530)
!1541 = !DILocalVariable(name: "dst", arg: 5, scope: !1530, file: !624, line: 242, type: !329)
!1542 = !DILocation(line: 242, column: 136, scope: !1530)
!1543 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !1530, file: !624, line: 242, type: !902)
!1544 = !DILocation(line: 242, column: 151, scope: !1530)
!1545 = !DILocalVariable(name: "width", arg: 7, scope: !1530, file: !624, line: 242, type: !902)
!1546 = !DILocation(line: 242, column: 175, scope: !1530)
!1547 = !DILocalVariable(name: "height", arg: 8, scope: !1530, file: !624, line: 242, type: !902)
!1548 = !DILocation(line: 242, column: 192, scope: !1530)
!1549 = !DILocalVariable(name: "param", arg: 9, scope: !1530, file: !624, line: 242, type: !884)
!1550 = !DILocation(line: 242, column: 214, scope: !1530)
!1551 = !DILocalVariable(name: "values", arg: 10, scope: !1530, file: !624, line: 242, type: !544)
!1552 = !DILocation(line: 242, column: 229, scope: !1530)
!1553 = !DILocalVariable(name: "starty", arg: 11, scope: !1530, file: !624, line: 242, type: !238)
!1554 = !DILocation(line: 242, column: 241, scope: !1530)
!1555 = !DILocalVariable(name: "opacity", scope: !1530, file: !624, line: 242, type: !248)
!1556 = !DILocation(line: 242, column: 258, scope: !1530)
!1557 = !DILocation(line: 242, column: 268, scope: !1530)
!1558 = !DILocation(line: 242, column: 275, scope: !1530)
!1559 = !DILocalVariable(name: "i", scope: !1530, file: !624, line: 242, type: !238)
!1560 = !DILocation(line: 242, column: 288, scope: !1530)
!1561 = !DILocalVariable(name: "j", scope: !1530, file: !624, line: 242, type: !238)
!1562 = !DILocation(line: 242, column: 291, scope: !1530)
!1563 = !DILocation(line: 242, column: 301, scope: !1564)
!1564 = distinct !DILexicalBlock(scope: !1530, file: !624, line: 242, column: 294)
!1565 = !DILocation(line: 242, column: 299, scope: !1564)
!1566 = !DILocation(line: 242, column: 306, scope: !1567)
!1567 = !DILexicalBlockFile(scope: !1568, file: !624, discriminator: 1)
!1568 = distinct !DILexicalBlock(scope: !1564, file: !624, line: 242, column: 294)
!1569 = !DILocation(line: 242, column: 310, scope: !1567)
!1570 = !DILocation(line: 242, column: 308, scope: !1567)
!1571 = !DILocation(line: 242, column: 294, scope: !1567)
!1572 = !DILocation(line: 242, column: 332, scope: !1573)
!1573 = !DILexicalBlockFile(scope: !1574, file: !624, discriminator: 2)
!1574 = distinct !DILexicalBlock(scope: !1575, file: !624, line: 242, column: 325)
!1575 = distinct !DILexicalBlock(scope: !1568, file: !624, line: 242, column: 323)
!1576 = !DILocation(line: 242, column: 330, scope: !1573)
!1577 = !DILocation(line: 242, column: 337, scope: !1578)
!1578 = !DILexicalBlockFile(scope: !1579, file: !624, discriminator: 3)
!1579 = distinct !DILexicalBlock(scope: !1574, file: !624, line: 242, column: 325)
!1580 = !DILocation(line: 242, column: 341, scope: !1578)
!1581 = !DILocation(line: 242, column: 339, scope: !1578)
!1582 = !DILocation(line: 242, column: 325, scope: !1578)
!1583 = !DILocation(line: 242, column: 368, scope: !1584)
!1584 = !DILexicalBlockFile(scope: !1585, file: !624, discriminator: 4)
!1585 = distinct !DILexicalBlock(scope: !1579, file: !624, line: 242, column: 353)
!1586 = !DILocation(line: 242, column: 364, scope: !1584)
!1587 = !DILocation(line: 242, column: 389, scope: !1584)
!1588 = !DILocation(line: 242, column: 385, scope: !1584)
!1589 = !DILocation(line: 242, column: 401, scope: !1584)
!1590 = !DILocation(line: 242, column: 394, scope: !1584)
!1591 = !DILocation(line: 242, column: 392, scope: !1584)
!1592 = !DILocation(line: 242, column: 382, scope: !1584)
!1593 = !DILocation(line: 242, column: 376, scope: !1584)
!1594 = !DILocation(line: 242, column: 412, scope: !1595)
!1595 = !DILexicalBlockFile(scope: !1585, file: !624, discriminator: 5)
!1596 = !DILocation(line: 242, column: 408, scope: !1595)
!1597 = !DILocation(line: 242, column: 424, scope: !1595)
!1598 = !DILocation(line: 242, column: 417, scope: !1595)
!1599 = !DILocation(line: 242, column: 415, scope: !1595)
!1600 = !DILocation(line: 242, column: 376, scope: !1595)
!1601 = !DILocation(line: 242, column: 376, scope: !1602)
!1602 = !DILexicalBlockFile(scope: !1585, file: !624, discriminator: 6)
!1603 = !DILocation(line: 242, column: 376, scope: !1604)
!1604 = !DILexicalBlockFile(scope: !1585, file: !624, discriminator: 7)
!1605 = !DILocation(line: 242, column: 444, scope: !1604)
!1606 = !DILocation(line: 242, column: 440, scope: !1604)
!1607 = !DILocation(line: 242, column: 438, scope: !1604)
!1608 = !DILocation(line: 242, column: 373, scope: !1604)
!1609 = !DILocation(line: 242, column: 450, scope: !1604)
!1610 = !DILocation(line: 242, column: 448, scope: !1604)
!1611 = !DILocation(line: 242, column: 371, scope: !1604)
!1612 = !DILocation(line: 242, column: 364, scope: !1604)
!1613 = !DILocation(line: 242, column: 359, scope: !1604)
!1614 = !DILocation(line: 242, column: 355, scope: !1604)
!1615 = !DILocation(line: 242, column: 362, scope: !1604)
!1616 = !DILocation(line: 242, column: 459, scope: !1604)
!1617 = !DILocation(line: 242, column: 349, scope: !1618)
!1618 = !DILexicalBlockFile(scope: !1579, file: !624, discriminator: 8)
!1619 = !DILocation(line: 242, column: 325, scope: !1618)
!1620 = distinct !{!1620, !1621}
!1621 = !DILocation(line: 242, column: 325, scope: !1575)
!1622 = !DILocation(line: 242, column: 468, scope: !1623)
!1623 = !DILexicalBlockFile(scope: !1575, file: !624, discriminator: 9)
!1624 = !DILocation(line: 242, column: 465, scope: !1623)
!1625 = !DILocation(line: 242, column: 489, scope: !1623)
!1626 = !DILocation(line: 242, column: 486, scope: !1623)
!1627 = !DILocation(line: 242, column: 513, scope: !1623)
!1628 = !DILocation(line: 242, column: 510, scope: !1623)
!1629 = !DILocation(line: 242, column: 530, scope: !1623)
!1630 = !DILocation(line: 242, column: 319, scope: !1631)
!1631 = !DILexicalBlockFile(scope: !1568, file: !624, discriminator: 10)
!1632 = !DILocation(line: 242, column: 294, scope: !1631)
!1633 = distinct !{!1633, !1634}
!1634 = !DILocation(line: 242, column: 294, scope: !1530)
!1635 = !DILocation(line: 242, column: 532, scope: !1636)
!1636 = !DILexicalBlockFile(scope: !1530, file: !624, discriminator: 11)
!1637 = distinct !DISubprogram(name: "blend_grainmerge_8bit", scope: !624, file: !624, line: 243, type: !1531, isLocal: true, isDefinition: true, scopeLine: 243, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!1638 = !DILocalVariable(name: "a", arg: 1, scope: !1639, file: !1640, line: 159, type: !238)
!1639 = distinct !DISubprogram(name: "av_clip_uint8_c", scope: !1640, file: !1640, line: 159, type: !1641, isLocal: true, isDefinition: true, scopeLine: 160, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!1640 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!1641 = !DISubroutineType(types: !1642)
!1642 = !{!330, !238}
!1643 = !DILocation(line: 159, column: 97, scope: !1639, inlinedAt: !1644)
!1644 = distinct !DILocation(line: 243, column: 377, scope: !1645)
!1645 = !DILexicalBlockFile(scope: !1646, file: !624, discriminator: 4)
!1646 = distinct !DILexicalBlock(scope: !1647, file: !624, line: 243, column: 355)
!1647 = distinct !DILexicalBlock(scope: !1648, file: !624, line: 243, column: 327)
!1648 = distinct !DILexicalBlock(scope: !1649, file: !624, line: 243, column: 327)
!1649 = distinct !DILexicalBlock(scope: !1650, file: !624, line: 243, column: 325)
!1650 = distinct !DILexicalBlock(scope: !1651, file: !624, line: 243, column: 296)
!1651 = distinct !DILexicalBlock(scope: !1637, file: !624, line: 243, column: 296)
!1652 = !DILocalVariable(name: "top", arg: 1, scope: !1637, file: !624, line: 243, type: !900)
!1653 = !DILocation(line: 243, column: 50, scope: !1637)
!1654 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !1637, file: !624, line: 243, type: !902)
!1655 = !DILocation(line: 243, column: 65, scope: !1637)
!1656 = !DILocalVariable(name: "bottom", arg: 3, scope: !1637, file: !624, line: 243, type: !900)
!1657 = !DILocation(line: 243, column: 94, scope: !1637)
!1658 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !1637, file: !624, line: 243, type: !902)
!1659 = !DILocation(line: 243, column: 112, scope: !1637)
!1660 = !DILocalVariable(name: "dst", arg: 5, scope: !1637, file: !624, line: 243, type: !329)
!1661 = !DILocation(line: 243, column: 138, scope: !1637)
!1662 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !1637, file: !624, line: 243, type: !902)
!1663 = !DILocation(line: 243, column: 153, scope: !1637)
!1664 = !DILocalVariable(name: "width", arg: 7, scope: !1637, file: !624, line: 243, type: !902)
!1665 = !DILocation(line: 243, column: 177, scope: !1637)
!1666 = !DILocalVariable(name: "height", arg: 8, scope: !1637, file: !624, line: 243, type: !902)
!1667 = !DILocation(line: 243, column: 194, scope: !1637)
!1668 = !DILocalVariable(name: "param", arg: 9, scope: !1637, file: !624, line: 243, type: !884)
!1669 = !DILocation(line: 243, column: 216, scope: !1637)
!1670 = !DILocalVariable(name: "values", arg: 10, scope: !1637, file: !624, line: 243, type: !544)
!1671 = !DILocation(line: 243, column: 231, scope: !1637)
!1672 = !DILocalVariable(name: "starty", arg: 11, scope: !1637, file: !624, line: 243, type: !238)
!1673 = !DILocation(line: 243, column: 243, scope: !1637)
!1674 = !DILocalVariable(name: "opacity", scope: !1637, file: !624, line: 243, type: !248)
!1675 = !DILocation(line: 243, column: 260, scope: !1637)
!1676 = !DILocation(line: 243, column: 270, scope: !1637)
!1677 = !DILocation(line: 243, column: 277, scope: !1637)
!1678 = !DILocalVariable(name: "i", scope: !1637, file: !624, line: 243, type: !238)
!1679 = !DILocation(line: 243, column: 290, scope: !1637)
!1680 = !DILocalVariable(name: "j", scope: !1637, file: !624, line: 243, type: !238)
!1681 = !DILocation(line: 243, column: 293, scope: !1637)
!1682 = !DILocation(line: 243, column: 303, scope: !1651)
!1683 = !DILocation(line: 243, column: 301, scope: !1651)
!1684 = !DILocation(line: 243, column: 308, scope: !1685)
!1685 = !DILexicalBlockFile(scope: !1650, file: !624, discriminator: 1)
!1686 = !DILocation(line: 243, column: 312, scope: !1685)
!1687 = !DILocation(line: 243, column: 310, scope: !1685)
!1688 = !DILocation(line: 243, column: 296, scope: !1685)
!1689 = !DILocation(line: 243, column: 334, scope: !1690)
!1690 = !DILexicalBlockFile(scope: !1648, file: !624, discriminator: 2)
!1691 = !DILocation(line: 243, column: 332, scope: !1690)
!1692 = !DILocation(line: 243, column: 339, scope: !1693)
!1693 = !DILexicalBlockFile(scope: !1647, file: !624, discriminator: 3)
!1694 = !DILocation(line: 243, column: 343, scope: !1693)
!1695 = !DILocation(line: 243, column: 341, scope: !1693)
!1696 = !DILocation(line: 243, column: 327, scope: !1693)
!1697 = !DILocation(line: 243, column: 370, scope: !1645)
!1698 = !DILocation(line: 243, column: 366, scope: !1645)
!1699 = !DILocation(line: 243, column: 397, scope: !1645)
!1700 = !DILocation(line: 243, column: 393, scope: !1645)
!1701 = !DILocation(line: 243, column: 409, scope: !1645)
!1702 = !DILocation(line: 243, column: 402, scope: !1645)
!1703 = !DILocation(line: 243, column: 400, scope: !1645)
!1704 = !DILocation(line: 243, column: 412, scope: !1645)
!1705 = !DILocation(line: 243, column: 377, scope: !1645)
!1706 = !DILocation(line: 161, column: 9, scope: !1707, inlinedAt: !1644)
!1707 = distinct !DILexicalBlock(scope: !1639, file: !1640, line: 161, column: 9)
!1708 = !DILocation(line: 161, column: 10, scope: !1707, inlinedAt: !1644)
!1709 = !DILocation(line: 161, column: 9, scope: !1639, inlinedAt: !1644)
!1710 = !DILocation(line: 161, column: 29, scope: !1711, inlinedAt: !1644)
!1711 = !DILexicalBlockFile(scope: !1707, file: !1640, discriminator: 1)
!1712 = !DILocation(line: 161, column: 28, scope: !1711, inlinedAt: !1644)
!1713 = !DILocation(line: 161, column: 31, scope: !1711, inlinedAt: !1644)
!1714 = !DILocation(line: 161, column: 27, scope: !1711, inlinedAt: !1644)
!1715 = !DILocation(line: 161, column: 20, scope: !1711, inlinedAt: !1644)
!1716 = !DILocation(line: 162, column: 17, scope: !1707, inlinedAt: !1644)
!1717 = !DILocation(line: 162, column: 10, scope: !1707, inlinedAt: !1644)
!1718 = !DILocation(line: 163, column: 1, scope: !1639, inlinedAt: !1644)
!1719 = !DILocation(line: 243, column: 376, scope: !1645)
!1720 = !DILocation(line: 243, column: 426, scope: !1645)
!1721 = !DILocation(line: 243, column: 422, scope: !1645)
!1722 = !DILocation(line: 243, column: 420, scope: !1645)
!1723 = !DILocation(line: 243, column: 375, scope: !1645)
!1724 = !DILocation(line: 243, column: 432, scope: !1645)
!1725 = !DILocation(line: 243, column: 430, scope: !1645)
!1726 = !DILocation(line: 243, column: 373, scope: !1645)
!1727 = !DILocation(line: 243, column: 361, scope: !1645)
!1728 = !DILocation(line: 243, column: 357, scope: !1645)
!1729 = !DILocation(line: 243, column: 364, scope: !1645)
!1730 = !DILocation(line: 243, column: 441, scope: !1645)
!1731 = !DILocation(line: 243, column: 351, scope: !1732)
!1732 = !DILexicalBlockFile(scope: !1647, file: !624, discriminator: 5)
!1733 = !DILocation(line: 243, column: 327, scope: !1732)
!1734 = distinct !{!1734, !1735}
!1735 = !DILocation(line: 243, column: 327, scope: !1649)
!1736 = !DILocation(line: 243, column: 450, scope: !1737)
!1737 = !DILexicalBlockFile(scope: !1649, file: !624, discriminator: 6)
!1738 = !DILocation(line: 243, column: 447, scope: !1737)
!1739 = !DILocation(line: 243, column: 471, scope: !1737)
!1740 = !DILocation(line: 243, column: 468, scope: !1737)
!1741 = !DILocation(line: 243, column: 495, scope: !1737)
!1742 = !DILocation(line: 243, column: 492, scope: !1737)
!1743 = !DILocation(line: 243, column: 512, scope: !1737)
!1744 = !DILocation(line: 243, column: 321, scope: !1745)
!1745 = !DILexicalBlockFile(scope: !1650, file: !624, discriminator: 7)
!1746 = !DILocation(line: 243, column: 296, scope: !1745)
!1747 = distinct !{!1747, !1748}
!1748 = !DILocation(line: 243, column: 296, scope: !1637)
!1749 = !DILocation(line: 243, column: 514, scope: !1750)
!1750 = !DILexicalBlockFile(scope: !1637, file: !624, discriminator: 8)
!1751 = distinct !DISubprogram(name: "blend_and_8bit", scope: !624, file: !624, line: 269, type: !1531, isLocal: true, isDefinition: true, scopeLine: 269, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!1752 = !DILocalVariable(name: "top", arg: 1, scope: !1751, file: !624, line: 269, type: !900)
!1753 = !DILocation(line: 269, column: 43, scope: !1751)
!1754 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !1751, file: !624, line: 269, type: !902)
!1755 = !DILocation(line: 269, column: 58, scope: !1751)
!1756 = !DILocalVariable(name: "bottom", arg: 3, scope: !1751, file: !624, line: 269, type: !900)
!1757 = !DILocation(line: 269, column: 87, scope: !1751)
!1758 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !1751, file: !624, line: 269, type: !902)
!1759 = !DILocation(line: 269, column: 105, scope: !1751)
!1760 = !DILocalVariable(name: "dst", arg: 5, scope: !1751, file: !624, line: 269, type: !329)
!1761 = !DILocation(line: 269, column: 131, scope: !1751)
!1762 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !1751, file: !624, line: 269, type: !902)
!1763 = !DILocation(line: 269, column: 146, scope: !1751)
!1764 = !DILocalVariable(name: "width", arg: 7, scope: !1751, file: !624, line: 269, type: !902)
!1765 = !DILocation(line: 269, column: 170, scope: !1751)
!1766 = !DILocalVariable(name: "height", arg: 8, scope: !1751, file: !624, line: 269, type: !902)
!1767 = !DILocation(line: 269, column: 187, scope: !1751)
!1768 = !DILocalVariable(name: "param", arg: 9, scope: !1751, file: !624, line: 269, type: !884)
!1769 = !DILocation(line: 269, column: 209, scope: !1751)
!1770 = !DILocalVariable(name: "values", arg: 10, scope: !1751, file: !624, line: 269, type: !544)
!1771 = !DILocation(line: 269, column: 224, scope: !1751)
!1772 = !DILocalVariable(name: "starty", arg: 11, scope: !1751, file: !624, line: 269, type: !238)
!1773 = !DILocation(line: 269, column: 236, scope: !1751)
!1774 = !DILocalVariable(name: "opacity", scope: !1751, file: !624, line: 269, type: !248)
!1775 = !DILocation(line: 269, column: 253, scope: !1751)
!1776 = !DILocation(line: 269, column: 263, scope: !1751)
!1777 = !DILocation(line: 269, column: 270, scope: !1751)
!1778 = !DILocalVariable(name: "i", scope: !1751, file: !624, line: 269, type: !238)
!1779 = !DILocation(line: 269, column: 283, scope: !1751)
!1780 = !DILocalVariable(name: "j", scope: !1751, file: !624, line: 269, type: !238)
!1781 = !DILocation(line: 269, column: 286, scope: !1751)
!1782 = !DILocation(line: 269, column: 296, scope: !1783)
!1783 = distinct !DILexicalBlock(scope: !1751, file: !624, line: 269, column: 289)
!1784 = !DILocation(line: 269, column: 294, scope: !1783)
!1785 = !DILocation(line: 269, column: 301, scope: !1786)
!1786 = !DILexicalBlockFile(scope: !1787, file: !624, discriminator: 1)
!1787 = distinct !DILexicalBlock(scope: !1783, file: !624, line: 269, column: 289)
!1788 = !DILocation(line: 269, column: 305, scope: !1786)
!1789 = !DILocation(line: 269, column: 303, scope: !1786)
!1790 = !DILocation(line: 269, column: 289, scope: !1786)
!1791 = !DILocation(line: 269, column: 327, scope: !1792)
!1792 = !DILexicalBlockFile(scope: !1793, file: !624, discriminator: 2)
!1793 = distinct !DILexicalBlock(scope: !1794, file: !624, line: 269, column: 320)
!1794 = distinct !DILexicalBlock(scope: !1787, file: !624, line: 269, column: 318)
!1795 = !DILocation(line: 269, column: 325, scope: !1792)
!1796 = !DILocation(line: 269, column: 332, scope: !1797)
!1797 = !DILexicalBlockFile(scope: !1798, file: !624, discriminator: 3)
!1798 = distinct !DILexicalBlock(scope: !1793, file: !624, line: 269, column: 320)
!1799 = !DILocation(line: 269, column: 336, scope: !1797)
!1800 = !DILocation(line: 269, column: 334, scope: !1797)
!1801 = !DILocation(line: 269, column: 320, scope: !1797)
!1802 = !DILocation(line: 269, column: 363, scope: !1803)
!1803 = !DILexicalBlockFile(scope: !1804, file: !624, discriminator: 4)
!1804 = distinct !DILexicalBlock(scope: !1798, file: !624, line: 269, column: 348)
!1805 = !DILocation(line: 269, column: 359, scope: !1803)
!1806 = !DILocation(line: 269, column: 374, scope: !1803)
!1807 = !DILocation(line: 269, column: 370, scope: !1803)
!1808 = !DILocation(line: 269, column: 386, scope: !1803)
!1809 = !DILocation(line: 269, column: 379, scope: !1803)
!1810 = !DILocation(line: 269, column: 377, scope: !1803)
!1811 = !DILocation(line: 269, column: 396, scope: !1803)
!1812 = !DILocation(line: 269, column: 392, scope: !1803)
!1813 = !DILocation(line: 269, column: 390, scope: !1803)
!1814 = !DILocation(line: 269, column: 368, scope: !1803)
!1815 = !DILocation(line: 269, column: 402, scope: !1803)
!1816 = !DILocation(line: 269, column: 400, scope: !1803)
!1817 = !DILocation(line: 269, column: 366, scope: !1803)
!1818 = !DILocation(line: 269, column: 354, scope: !1803)
!1819 = !DILocation(line: 269, column: 350, scope: !1803)
!1820 = !DILocation(line: 269, column: 357, scope: !1803)
!1821 = !DILocation(line: 269, column: 411, scope: !1803)
!1822 = !DILocation(line: 269, column: 344, scope: !1823)
!1823 = !DILexicalBlockFile(scope: !1798, file: !624, discriminator: 5)
!1824 = !DILocation(line: 269, column: 320, scope: !1823)
!1825 = distinct !{!1825, !1826}
!1826 = !DILocation(line: 269, column: 320, scope: !1794)
!1827 = !DILocation(line: 269, column: 420, scope: !1828)
!1828 = !DILexicalBlockFile(scope: !1794, file: !624, discriminator: 6)
!1829 = !DILocation(line: 269, column: 417, scope: !1828)
!1830 = !DILocation(line: 269, column: 441, scope: !1828)
!1831 = !DILocation(line: 269, column: 438, scope: !1828)
!1832 = !DILocation(line: 269, column: 465, scope: !1828)
!1833 = !DILocation(line: 269, column: 462, scope: !1828)
!1834 = !DILocation(line: 269, column: 482, scope: !1828)
!1835 = !DILocation(line: 269, column: 314, scope: !1836)
!1836 = !DILexicalBlockFile(scope: !1787, file: !624, discriminator: 7)
!1837 = !DILocation(line: 269, column: 289, scope: !1836)
!1838 = distinct !{!1838, !1839}
!1839 = !DILocation(line: 269, column: 289, scope: !1751)
!1840 = !DILocation(line: 269, column: 484, scope: !1841)
!1841 = !DILexicalBlockFile(scope: !1751, file: !624, discriminator: 8)
!1842 = distinct !DISubprogram(name: "blend_average_8bit", scope: !624, file: !624, line: 244, type: !1531, isLocal: true, isDefinition: true, scopeLine: 244, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!1843 = !DILocalVariable(name: "top", arg: 1, scope: !1842, file: !624, line: 244, type: !900)
!1844 = !DILocation(line: 244, column: 47, scope: !1842)
!1845 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !1842, file: !624, line: 244, type: !902)
!1846 = !DILocation(line: 244, column: 62, scope: !1842)
!1847 = !DILocalVariable(name: "bottom", arg: 3, scope: !1842, file: !624, line: 244, type: !900)
!1848 = !DILocation(line: 244, column: 91, scope: !1842)
!1849 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !1842, file: !624, line: 244, type: !902)
!1850 = !DILocation(line: 244, column: 109, scope: !1842)
!1851 = !DILocalVariable(name: "dst", arg: 5, scope: !1842, file: !624, line: 244, type: !329)
!1852 = !DILocation(line: 244, column: 135, scope: !1842)
!1853 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !1842, file: !624, line: 244, type: !902)
!1854 = !DILocation(line: 244, column: 150, scope: !1842)
!1855 = !DILocalVariable(name: "width", arg: 7, scope: !1842, file: !624, line: 244, type: !902)
!1856 = !DILocation(line: 244, column: 174, scope: !1842)
!1857 = !DILocalVariable(name: "height", arg: 8, scope: !1842, file: !624, line: 244, type: !902)
!1858 = !DILocation(line: 244, column: 191, scope: !1842)
!1859 = !DILocalVariable(name: "param", arg: 9, scope: !1842, file: !624, line: 244, type: !884)
!1860 = !DILocation(line: 244, column: 213, scope: !1842)
!1861 = !DILocalVariable(name: "values", arg: 10, scope: !1842, file: !624, line: 244, type: !544)
!1862 = !DILocation(line: 244, column: 228, scope: !1842)
!1863 = !DILocalVariable(name: "starty", arg: 11, scope: !1842, file: !624, line: 244, type: !238)
!1864 = !DILocation(line: 244, column: 240, scope: !1842)
!1865 = !DILocalVariable(name: "opacity", scope: !1842, file: !624, line: 244, type: !248)
!1866 = !DILocation(line: 244, column: 257, scope: !1842)
!1867 = !DILocation(line: 244, column: 267, scope: !1842)
!1868 = !DILocation(line: 244, column: 274, scope: !1842)
!1869 = !DILocalVariable(name: "i", scope: !1842, file: !624, line: 244, type: !238)
!1870 = !DILocation(line: 244, column: 287, scope: !1842)
!1871 = !DILocalVariable(name: "j", scope: !1842, file: !624, line: 244, type: !238)
!1872 = !DILocation(line: 244, column: 290, scope: !1842)
!1873 = !DILocation(line: 244, column: 300, scope: !1874)
!1874 = distinct !DILexicalBlock(scope: !1842, file: !624, line: 244, column: 293)
!1875 = !DILocation(line: 244, column: 298, scope: !1874)
!1876 = !DILocation(line: 244, column: 305, scope: !1877)
!1877 = !DILexicalBlockFile(scope: !1878, file: !624, discriminator: 1)
!1878 = distinct !DILexicalBlock(scope: !1874, file: !624, line: 244, column: 293)
!1879 = !DILocation(line: 244, column: 309, scope: !1877)
!1880 = !DILocation(line: 244, column: 307, scope: !1877)
!1881 = !DILocation(line: 244, column: 293, scope: !1877)
!1882 = !DILocation(line: 244, column: 331, scope: !1883)
!1883 = !DILexicalBlockFile(scope: !1884, file: !624, discriminator: 2)
!1884 = distinct !DILexicalBlock(scope: !1885, file: !624, line: 244, column: 324)
!1885 = distinct !DILexicalBlock(scope: !1878, file: !624, line: 244, column: 322)
!1886 = !DILocation(line: 244, column: 329, scope: !1883)
!1887 = !DILocation(line: 244, column: 336, scope: !1888)
!1888 = !DILexicalBlockFile(scope: !1889, file: !624, discriminator: 3)
!1889 = distinct !DILexicalBlock(scope: !1884, file: !624, line: 244, column: 324)
!1890 = !DILocation(line: 244, column: 340, scope: !1888)
!1891 = !DILocation(line: 244, column: 338, scope: !1888)
!1892 = !DILocation(line: 244, column: 324, scope: !1888)
!1893 = !DILocation(line: 244, column: 367, scope: !1894)
!1894 = !DILexicalBlockFile(scope: !1895, file: !624, discriminator: 4)
!1895 = distinct !DILexicalBlock(scope: !1889, file: !624, line: 244, column: 352)
!1896 = !DILocation(line: 244, column: 363, scope: !1894)
!1897 = !DILocation(line: 244, column: 379, scope: !1894)
!1898 = !DILocation(line: 244, column: 375, scope: !1894)
!1899 = !DILocation(line: 244, column: 391, scope: !1894)
!1900 = !DILocation(line: 244, column: 384, scope: !1894)
!1901 = !DILocation(line: 244, column: 382, scope: !1894)
!1902 = !DILocation(line: 244, column: 395, scope: !1894)
!1903 = !DILocation(line: 244, column: 406, scope: !1894)
!1904 = !DILocation(line: 244, column: 402, scope: !1894)
!1905 = !DILocation(line: 244, column: 400, scope: !1894)
!1906 = !DILocation(line: 244, column: 372, scope: !1894)
!1907 = !DILocation(line: 244, column: 412, scope: !1894)
!1908 = !DILocation(line: 244, column: 410, scope: !1894)
!1909 = !DILocation(line: 244, column: 370, scope: !1894)
!1910 = !DILocation(line: 244, column: 358, scope: !1894)
!1911 = !DILocation(line: 244, column: 354, scope: !1894)
!1912 = !DILocation(line: 244, column: 361, scope: !1894)
!1913 = !DILocation(line: 244, column: 421, scope: !1894)
!1914 = !DILocation(line: 244, column: 348, scope: !1915)
!1915 = !DILexicalBlockFile(scope: !1889, file: !624, discriminator: 5)
!1916 = !DILocation(line: 244, column: 324, scope: !1915)
!1917 = distinct !{!1917, !1918}
!1918 = !DILocation(line: 244, column: 324, scope: !1885)
!1919 = !DILocation(line: 244, column: 430, scope: !1920)
!1920 = !DILexicalBlockFile(scope: !1885, file: !624, discriminator: 6)
!1921 = !DILocation(line: 244, column: 427, scope: !1920)
!1922 = !DILocation(line: 244, column: 451, scope: !1920)
!1923 = !DILocation(line: 244, column: 448, scope: !1920)
!1924 = !DILocation(line: 244, column: 475, scope: !1920)
!1925 = !DILocation(line: 244, column: 472, scope: !1920)
!1926 = !DILocation(line: 244, column: 492, scope: !1920)
!1927 = !DILocation(line: 244, column: 318, scope: !1928)
!1928 = !DILexicalBlockFile(scope: !1878, file: !624, discriminator: 7)
!1929 = !DILocation(line: 244, column: 293, scope: !1928)
!1930 = distinct !{!1930, !1931}
!1931 = !DILocation(line: 244, column: 293, scope: !1842)
!1932 = !DILocation(line: 244, column: 494, scope: !1933)
!1933 = !DILexicalBlockFile(scope: !1842, file: !624, discriminator: 8)
!1934 = distinct !DISubprogram(name: "blend_burn_8bit", scope: !624, file: !624, line: 262, type: !1531, isLocal: true, isDefinition: true, scopeLine: 262, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!1935 = !DILocalVariable(name: "top", arg: 1, scope: !1934, file: !624, line: 262, type: !900)
!1936 = !DILocation(line: 262, column: 44, scope: !1934)
!1937 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !1934, file: !624, line: 262, type: !902)
!1938 = !DILocation(line: 262, column: 59, scope: !1934)
!1939 = !DILocalVariable(name: "bottom", arg: 3, scope: !1934, file: !624, line: 262, type: !900)
!1940 = !DILocation(line: 262, column: 88, scope: !1934)
!1941 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !1934, file: !624, line: 262, type: !902)
!1942 = !DILocation(line: 262, column: 106, scope: !1934)
!1943 = !DILocalVariable(name: "dst", arg: 5, scope: !1934, file: !624, line: 262, type: !329)
!1944 = !DILocation(line: 262, column: 132, scope: !1934)
!1945 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !1934, file: !624, line: 262, type: !902)
!1946 = !DILocation(line: 262, column: 147, scope: !1934)
!1947 = !DILocalVariable(name: "width", arg: 7, scope: !1934, file: !624, line: 262, type: !902)
!1948 = !DILocation(line: 262, column: 171, scope: !1934)
!1949 = !DILocalVariable(name: "height", arg: 8, scope: !1934, file: !624, line: 262, type: !902)
!1950 = !DILocation(line: 262, column: 188, scope: !1934)
!1951 = !DILocalVariable(name: "param", arg: 9, scope: !1934, file: !624, line: 262, type: !884)
!1952 = !DILocation(line: 262, column: 210, scope: !1934)
!1953 = !DILocalVariable(name: "values", arg: 10, scope: !1934, file: !624, line: 262, type: !544)
!1954 = !DILocation(line: 262, column: 225, scope: !1934)
!1955 = !DILocalVariable(name: "starty", arg: 11, scope: !1934, file: !624, line: 262, type: !238)
!1956 = !DILocation(line: 262, column: 237, scope: !1934)
!1957 = !DILocalVariable(name: "opacity", scope: !1934, file: !624, line: 262, type: !248)
!1958 = !DILocation(line: 262, column: 254, scope: !1934)
!1959 = !DILocation(line: 262, column: 264, scope: !1934)
!1960 = !DILocation(line: 262, column: 271, scope: !1934)
!1961 = !DILocalVariable(name: "i", scope: !1934, file: !624, line: 262, type: !238)
!1962 = !DILocation(line: 262, column: 284, scope: !1934)
!1963 = !DILocalVariable(name: "j", scope: !1934, file: !624, line: 262, type: !238)
!1964 = !DILocation(line: 262, column: 287, scope: !1934)
!1965 = !DILocation(line: 262, column: 297, scope: !1966)
!1966 = distinct !DILexicalBlock(scope: !1934, file: !624, line: 262, column: 290)
!1967 = !DILocation(line: 262, column: 295, scope: !1966)
!1968 = !DILocation(line: 262, column: 302, scope: !1969)
!1969 = !DILexicalBlockFile(scope: !1970, file: !624, discriminator: 1)
!1970 = distinct !DILexicalBlock(scope: !1966, file: !624, line: 262, column: 290)
!1971 = !DILocation(line: 262, column: 306, scope: !1969)
!1972 = !DILocation(line: 262, column: 304, scope: !1969)
!1973 = !DILocation(line: 262, column: 290, scope: !1969)
!1974 = !DILocation(line: 262, column: 328, scope: !1975)
!1975 = !DILexicalBlockFile(scope: !1976, file: !624, discriminator: 2)
!1976 = distinct !DILexicalBlock(scope: !1977, file: !624, line: 262, column: 321)
!1977 = distinct !DILexicalBlock(scope: !1970, file: !624, line: 262, column: 319)
!1978 = !DILocation(line: 262, column: 326, scope: !1975)
!1979 = !DILocation(line: 262, column: 333, scope: !1980)
!1980 = !DILexicalBlockFile(scope: !1981, file: !624, discriminator: 3)
!1981 = distinct !DILexicalBlock(scope: !1976, file: !624, line: 262, column: 321)
!1982 = !DILocation(line: 262, column: 337, scope: !1980)
!1983 = !DILocation(line: 262, column: 335, scope: !1980)
!1984 = !DILocation(line: 262, column: 321, scope: !1980)
!1985 = !DILocation(line: 262, column: 364, scope: !1986)
!1986 = !DILexicalBlockFile(scope: !1987, file: !624, discriminator: 4)
!1987 = distinct !DILexicalBlock(scope: !1981, file: !624, line: 262, column: 349)
!1988 = !DILocation(line: 262, column: 360, scope: !1986)
!1989 = !DILocation(line: 262, column: 378, scope: !1986)
!1990 = !DILocation(line: 262, column: 374, scope: !1986)
!1991 = !DILocation(line: 262, column: 373, scope: !1986)
!1992 = !DILocation(line: 262, column: 382, scope: !1986)
!1993 = !DILocation(line: 262, column: 372, scope: !1986)
!1994 = !DILocation(line: 262, column: 395, scope: !1995)
!1995 = !DILexicalBlockFile(scope: !1987, file: !624, discriminator: 5)
!1996 = !DILocation(line: 262, column: 391, scope: !1995)
!1997 = !DILocation(line: 262, column: 390, scope: !1995)
!1998 = !DILocation(line: 262, column: 372, scope: !1995)
!1999 = !DILocation(line: 262, column: 431, scope: !2000)
!2000 = !DILexicalBlockFile(scope: !1987, file: !624, discriminator: 6)
!2001 = !DILocation(line: 262, column: 424, scope: !2000)
!2002 = !DILocation(line: 262, column: 423, scope: !2000)
!2003 = !DILocation(line: 262, column: 421, scope: !2000)
!2004 = !DILocation(line: 262, column: 436, scope: !2000)
!2005 = !DILocation(line: 262, column: 449, scope: !2000)
!2006 = !DILocation(line: 262, column: 445, scope: !2000)
!2007 = !DILocation(line: 262, column: 444, scope: !2000)
!2008 = !DILocation(line: 262, column: 442, scope: !2000)
!2009 = !DILocation(line: 262, column: 413, scope: !2000)
!2010 = !DILocation(line: 262, column: 406, scope: !2000)
!2011 = !DILocation(line: 262, column: 402, scope: !2000)
!2012 = !DILocation(line: 262, column: 402, scope: !2013)
!2013 = !DILexicalBlockFile(scope: !1987, file: !624, discriminator: 7)
!2014 = !DILocation(line: 262, column: 485, scope: !2015)
!2015 = !DILexicalBlockFile(scope: !1987, file: !624, discriminator: 8)
!2016 = !DILocation(line: 262, column: 478, scope: !2015)
!2017 = !DILocation(line: 262, column: 477, scope: !2015)
!2018 = !DILocation(line: 262, column: 475, scope: !2015)
!2019 = !DILocation(line: 262, column: 490, scope: !2015)
!2020 = !DILocation(line: 262, column: 503, scope: !2015)
!2021 = !DILocation(line: 262, column: 499, scope: !2015)
!2022 = !DILocation(line: 262, column: 498, scope: !2015)
!2023 = !DILocation(line: 262, column: 496, scope: !2015)
!2024 = !DILocation(line: 262, column: 467, scope: !2015)
!2025 = !DILocation(line: 262, column: 402, scope: !2015)
!2026 = !DILocation(line: 262, column: 402, scope: !2027)
!2027 = !DILexicalBlockFile(scope: !1987, file: !624, discriminator: 9)
!2028 = !DILocation(line: 262, column: 372, scope: !2027)
!2029 = !DILocation(line: 262, column: 372, scope: !2030)
!2030 = !DILexicalBlockFile(scope: !1987, file: !624, discriminator: 10)
!2031 = !DILocation(line: 262, column: 517, scope: !2030)
!2032 = !DILocation(line: 262, column: 513, scope: !2030)
!2033 = !DILocation(line: 262, column: 511, scope: !2030)
!2034 = !DILocation(line: 262, column: 369, scope: !2030)
!2035 = !DILocation(line: 262, column: 523, scope: !2030)
!2036 = !DILocation(line: 262, column: 521, scope: !2030)
!2037 = !DILocation(line: 262, column: 367, scope: !2030)
!2038 = !DILocation(line: 262, column: 360, scope: !2030)
!2039 = !DILocation(line: 262, column: 355, scope: !2030)
!2040 = !DILocation(line: 262, column: 351, scope: !2030)
!2041 = !DILocation(line: 262, column: 358, scope: !2030)
!2042 = !DILocation(line: 262, column: 532, scope: !2030)
!2043 = !DILocation(line: 262, column: 345, scope: !2044)
!2044 = !DILexicalBlockFile(scope: !1981, file: !624, discriminator: 11)
!2045 = !DILocation(line: 262, column: 321, scope: !2044)
!2046 = distinct !{!2046, !2047}
!2047 = !DILocation(line: 262, column: 321, scope: !1977)
!2048 = !DILocation(line: 262, column: 541, scope: !2049)
!2049 = !DILexicalBlockFile(scope: !1977, file: !624, discriminator: 12)
!2050 = !DILocation(line: 262, column: 538, scope: !2049)
!2051 = !DILocation(line: 262, column: 562, scope: !2049)
!2052 = !DILocation(line: 262, column: 559, scope: !2049)
!2053 = !DILocation(line: 262, column: 586, scope: !2049)
!2054 = !DILocation(line: 262, column: 583, scope: !2049)
!2055 = !DILocation(line: 262, column: 603, scope: !2049)
!2056 = !DILocation(line: 262, column: 315, scope: !2057)
!2057 = !DILexicalBlockFile(scope: !1970, file: !624, discriminator: 13)
!2058 = !DILocation(line: 262, column: 290, scope: !2057)
!2059 = distinct !{!2059, !2060}
!2060 = !DILocation(line: 262, column: 290, scope: !1934)
!2061 = !DILocation(line: 262, column: 605, scope: !2062)
!2062 = !DILexicalBlockFile(scope: !1934, file: !624, discriminator: 14)
!2063 = distinct !DISubprogram(name: "blend_darken_8bit", scope: !624, file: !624, line: 258, type: !1531, isLocal: true, isDefinition: true, scopeLine: 258, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!2064 = !DILocalVariable(name: "top", arg: 1, scope: !2063, file: !624, line: 258, type: !900)
!2065 = !DILocation(line: 258, column: 46, scope: !2063)
!2066 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !2063, file: !624, line: 258, type: !902)
!2067 = !DILocation(line: 258, column: 61, scope: !2063)
!2068 = !DILocalVariable(name: "bottom", arg: 3, scope: !2063, file: !624, line: 258, type: !900)
!2069 = !DILocation(line: 258, column: 90, scope: !2063)
!2070 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !2063, file: !624, line: 258, type: !902)
!2071 = !DILocation(line: 258, column: 108, scope: !2063)
!2072 = !DILocalVariable(name: "dst", arg: 5, scope: !2063, file: !624, line: 258, type: !329)
!2073 = !DILocation(line: 258, column: 134, scope: !2063)
!2074 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !2063, file: !624, line: 258, type: !902)
!2075 = !DILocation(line: 258, column: 149, scope: !2063)
!2076 = !DILocalVariable(name: "width", arg: 7, scope: !2063, file: !624, line: 258, type: !902)
!2077 = !DILocation(line: 258, column: 173, scope: !2063)
!2078 = !DILocalVariable(name: "height", arg: 8, scope: !2063, file: !624, line: 258, type: !902)
!2079 = !DILocation(line: 258, column: 190, scope: !2063)
!2080 = !DILocalVariable(name: "param", arg: 9, scope: !2063, file: !624, line: 258, type: !884)
!2081 = !DILocation(line: 258, column: 212, scope: !2063)
!2082 = !DILocalVariable(name: "values", arg: 10, scope: !2063, file: !624, line: 258, type: !544)
!2083 = !DILocation(line: 258, column: 227, scope: !2063)
!2084 = !DILocalVariable(name: "starty", arg: 11, scope: !2063, file: !624, line: 258, type: !238)
!2085 = !DILocation(line: 258, column: 239, scope: !2063)
!2086 = !DILocalVariable(name: "opacity", scope: !2063, file: !624, line: 258, type: !248)
!2087 = !DILocation(line: 258, column: 256, scope: !2063)
!2088 = !DILocation(line: 258, column: 266, scope: !2063)
!2089 = !DILocation(line: 258, column: 273, scope: !2063)
!2090 = !DILocalVariable(name: "i", scope: !2063, file: !624, line: 258, type: !238)
!2091 = !DILocation(line: 258, column: 286, scope: !2063)
!2092 = !DILocalVariable(name: "j", scope: !2063, file: !624, line: 258, type: !238)
!2093 = !DILocation(line: 258, column: 289, scope: !2063)
!2094 = !DILocation(line: 258, column: 299, scope: !2095)
!2095 = distinct !DILexicalBlock(scope: !2063, file: !624, line: 258, column: 292)
!2096 = !DILocation(line: 258, column: 297, scope: !2095)
!2097 = !DILocation(line: 258, column: 304, scope: !2098)
!2098 = !DILexicalBlockFile(scope: !2099, file: !624, discriminator: 1)
!2099 = distinct !DILexicalBlock(scope: !2095, file: !624, line: 258, column: 292)
!2100 = !DILocation(line: 258, column: 308, scope: !2098)
!2101 = !DILocation(line: 258, column: 306, scope: !2098)
!2102 = !DILocation(line: 258, column: 292, scope: !2098)
!2103 = !DILocation(line: 258, column: 330, scope: !2104)
!2104 = !DILexicalBlockFile(scope: !2105, file: !624, discriminator: 2)
!2105 = distinct !DILexicalBlock(scope: !2106, file: !624, line: 258, column: 323)
!2106 = distinct !DILexicalBlock(scope: !2099, file: !624, line: 258, column: 321)
!2107 = !DILocation(line: 258, column: 328, scope: !2104)
!2108 = !DILocation(line: 258, column: 335, scope: !2109)
!2109 = !DILexicalBlockFile(scope: !2110, file: !624, discriminator: 3)
!2110 = distinct !DILexicalBlock(scope: !2105, file: !624, line: 258, column: 323)
!2111 = !DILocation(line: 258, column: 339, scope: !2109)
!2112 = !DILocation(line: 258, column: 337, scope: !2109)
!2113 = !DILocation(line: 258, column: 323, scope: !2109)
!2114 = !DILocation(line: 258, column: 366, scope: !2115)
!2115 = !DILexicalBlockFile(scope: !2116, file: !624, discriminator: 4)
!2116 = distinct !DILexicalBlock(scope: !2110, file: !624, line: 258, column: 351)
!2117 = !DILocation(line: 258, column: 362, scope: !2115)
!2118 = !DILocation(line: 258, column: 379, scope: !2115)
!2119 = !DILocation(line: 258, column: 375, scope: !2115)
!2120 = !DILocation(line: 258, column: 374, scope: !2115)
!2121 = !DILocation(line: 258, column: 393, scope: !2115)
!2122 = !DILocation(line: 258, column: 386, scope: !2115)
!2123 = !DILocation(line: 258, column: 385, scope: !2115)
!2124 = !DILocation(line: 258, column: 383, scope: !2115)
!2125 = !DILocation(line: 258, column: 407, scope: !2126)
!2126 = !DILexicalBlockFile(scope: !2116, file: !624, discriminator: 5)
!2127 = !DILocation(line: 258, column: 400, scope: !2126)
!2128 = !DILocation(line: 258, column: 399, scope: !2126)
!2129 = !DILocation(line: 258, column: 374, scope: !2126)
!2130 = !DILocation(line: 258, column: 418, scope: !2131)
!2131 = !DILexicalBlockFile(scope: !2116, file: !624, discriminator: 6)
!2132 = !DILocation(line: 258, column: 414, scope: !2131)
!2133 = !DILocation(line: 258, column: 413, scope: !2131)
!2134 = !DILocation(line: 258, column: 374, scope: !2131)
!2135 = !DILocation(line: 258, column: 374, scope: !2136)
!2136 = !DILexicalBlockFile(scope: !2116, file: !624, discriminator: 7)
!2137 = !DILocation(line: 258, column: 430, scope: !2136)
!2138 = !DILocation(line: 258, column: 426, scope: !2136)
!2139 = !DILocation(line: 258, column: 424, scope: !2136)
!2140 = !DILocation(line: 258, column: 371, scope: !2136)
!2141 = !DILocation(line: 258, column: 436, scope: !2136)
!2142 = !DILocation(line: 258, column: 434, scope: !2136)
!2143 = !DILocation(line: 258, column: 369, scope: !2136)
!2144 = !DILocation(line: 258, column: 362, scope: !2136)
!2145 = !DILocation(line: 258, column: 357, scope: !2136)
!2146 = !DILocation(line: 258, column: 353, scope: !2136)
!2147 = !DILocation(line: 258, column: 360, scope: !2136)
!2148 = !DILocation(line: 258, column: 445, scope: !2136)
!2149 = !DILocation(line: 258, column: 347, scope: !2150)
!2150 = !DILexicalBlockFile(scope: !2110, file: !624, discriminator: 8)
!2151 = !DILocation(line: 258, column: 323, scope: !2150)
!2152 = distinct !{!2152, !2153}
!2153 = !DILocation(line: 258, column: 323, scope: !2106)
!2154 = !DILocation(line: 258, column: 454, scope: !2155)
!2155 = !DILexicalBlockFile(scope: !2106, file: !624, discriminator: 9)
!2156 = !DILocation(line: 258, column: 451, scope: !2155)
!2157 = !DILocation(line: 258, column: 475, scope: !2155)
!2158 = !DILocation(line: 258, column: 472, scope: !2155)
!2159 = !DILocation(line: 258, column: 499, scope: !2155)
!2160 = !DILocation(line: 258, column: 496, scope: !2155)
!2161 = !DILocation(line: 258, column: 516, scope: !2155)
!2162 = !DILocation(line: 258, column: 317, scope: !2163)
!2163 = !DILexicalBlockFile(scope: !2099, file: !624, discriminator: 10)
!2164 = !DILocation(line: 258, column: 292, scope: !2163)
!2165 = distinct !{!2165, !2166}
!2166 = !DILocation(line: 258, column: 292, scope: !2063)
!2167 = !DILocation(line: 258, column: 518, scope: !2168)
!2168 = !DILexicalBlockFile(scope: !2063, file: !624, discriminator: 11)
!2169 = distinct !DISubprogram(name: "blend_difference_8bit", scope: !624, file: !624, line: 250, type: !1531, isLocal: true, isDefinition: true, scopeLine: 250, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!2170 = !DILocalVariable(name: "top", arg: 1, scope: !2169, file: !624, line: 250, type: !900)
!2171 = !DILocation(line: 250, column: 50, scope: !2169)
!2172 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !2169, file: !624, line: 250, type: !902)
!2173 = !DILocation(line: 250, column: 65, scope: !2169)
!2174 = !DILocalVariable(name: "bottom", arg: 3, scope: !2169, file: !624, line: 250, type: !900)
!2175 = !DILocation(line: 250, column: 94, scope: !2169)
!2176 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !2169, file: !624, line: 250, type: !902)
!2177 = !DILocation(line: 250, column: 112, scope: !2169)
!2178 = !DILocalVariable(name: "dst", arg: 5, scope: !2169, file: !624, line: 250, type: !329)
!2179 = !DILocation(line: 250, column: 138, scope: !2169)
!2180 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !2169, file: !624, line: 250, type: !902)
!2181 = !DILocation(line: 250, column: 153, scope: !2169)
!2182 = !DILocalVariable(name: "width", arg: 7, scope: !2169, file: !624, line: 250, type: !902)
!2183 = !DILocation(line: 250, column: 177, scope: !2169)
!2184 = !DILocalVariable(name: "height", arg: 8, scope: !2169, file: !624, line: 250, type: !902)
!2185 = !DILocation(line: 250, column: 194, scope: !2169)
!2186 = !DILocalVariable(name: "param", arg: 9, scope: !2169, file: !624, line: 250, type: !884)
!2187 = !DILocation(line: 250, column: 216, scope: !2169)
!2188 = !DILocalVariable(name: "values", arg: 10, scope: !2169, file: !624, line: 250, type: !544)
!2189 = !DILocation(line: 250, column: 231, scope: !2169)
!2190 = !DILocalVariable(name: "starty", arg: 11, scope: !2169, file: !624, line: 250, type: !238)
!2191 = !DILocation(line: 250, column: 243, scope: !2169)
!2192 = !DILocalVariable(name: "opacity", scope: !2169, file: !624, line: 250, type: !248)
!2193 = !DILocation(line: 250, column: 260, scope: !2169)
!2194 = !DILocation(line: 250, column: 270, scope: !2169)
!2195 = !DILocation(line: 250, column: 277, scope: !2169)
!2196 = !DILocalVariable(name: "i", scope: !2169, file: !624, line: 250, type: !238)
!2197 = !DILocation(line: 250, column: 290, scope: !2169)
!2198 = !DILocalVariable(name: "j", scope: !2169, file: !624, line: 250, type: !238)
!2199 = !DILocation(line: 250, column: 293, scope: !2169)
!2200 = !DILocation(line: 250, column: 303, scope: !2201)
!2201 = distinct !DILexicalBlock(scope: !2169, file: !624, line: 250, column: 296)
!2202 = !DILocation(line: 250, column: 301, scope: !2201)
!2203 = !DILocation(line: 250, column: 308, scope: !2204)
!2204 = !DILexicalBlockFile(scope: !2205, file: !624, discriminator: 1)
!2205 = distinct !DILexicalBlock(scope: !2201, file: !624, line: 250, column: 296)
!2206 = !DILocation(line: 250, column: 312, scope: !2204)
!2207 = !DILocation(line: 250, column: 310, scope: !2204)
!2208 = !DILocation(line: 250, column: 296, scope: !2204)
!2209 = !DILocation(line: 250, column: 334, scope: !2210)
!2210 = !DILexicalBlockFile(scope: !2211, file: !624, discriminator: 2)
!2211 = distinct !DILexicalBlock(scope: !2212, file: !624, line: 250, column: 327)
!2212 = distinct !DILexicalBlock(scope: !2205, file: !624, line: 250, column: 325)
!2213 = !DILocation(line: 250, column: 332, scope: !2210)
!2214 = !DILocation(line: 250, column: 339, scope: !2215)
!2215 = !DILexicalBlockFile(scope: !2216, file: !624, discriminator: 3)
!2216 = distinct !DILexicalBlock(scope: !2211, file: !624, line: 250, column: 327)
!2217 = !DILocation(line: 250, column: 343, scope: !2215)
!2218 = !DILocation(line: 250, column: 341, scope: !2215)
!2219 = !DILocation(line: 250, column: 327, scope: !2215)
!2220 = !DILocation(line: 250, column: 370, scope: !2221)
!2221 = !DILexicalBlockFile(scope: !2222, file: !624, discriminator: 4)
!2222 = distinct !DILexicalBlock(scope: !2216, file: !624, line: 250, column: 355)
!2223 = !DILocation(line: 250, column: 366, scope: !2221)
!2224 = !DILocation(line: 250, column: 383, scope: !2221)
!2225 = !DILocation(line: 250, column: 379, scope: !2221)
!2226 = !DILocation(line: 250, column: 395, scope: !2221)
!2227 = !DILocation(line: 250, column: 388, scope: !2221)
!2228 = !DILocation(line: 250, column: 386, scope: !2221)
!2229 = !DILocation(line: 250, column: 399, scope: !2221)
!2230 = !DILocation(line: 250, column: 378, scope: !2221)
!2231 = !DILocation(line: 250, column: 411, scope: !2232)
!2232 = !DILexicalBlockFile(scope: !2222, file: !624, discriminator: 5)
!2233 = !DILocation(line: 250, column: 407, scope: !2232)
!2234 = !DILocation(line: 250, column: 423, scope: !2232)
!2235 = !DILocation(line: 250, column: 416, scope: !2232)
!2236 = !DILocation(line: 250, column: 414, scope: !2232)
!2237 = !DILocation(line: 250, column: 378, scope: !2232)
!2238 = !DILocation(line: 250, column: 436, scope: !2239)
!2239 = !DILexicalBlockFile(scope: !2222, file: !624, discriminator: 6)
!2240 = !DILocation(line: 250, column: 432, scope: !2239)
!2241 = !DILocation(line: 250, column: 448, scope: !2239)
!2242 = !DILocation(line: 250, column: 441, scope: !2239)
!2243 = !DILocation(line: 250, column: 439, scope: !2239)
!2244 = !DILocation(line: 250, column: 430, scope: !2239)
!2245 = !DILocation(line: 250, column: 378, scope: !2239)
!2246 = !DILocation(line: 250, column: 378, scope: !2247)
!2247 = !DILexicalBlockFile(scope: !2222, file: !624, discriminator: 7)
!2248 = !DILocation(line: 250, column: 461, scope: !2247)
!2249 = !DILocation(line: 250, column: 457, scope: !2247)
!2250 = !DILocation(line: 250, column: 455, scope: !2247)
!2251 = !DILocation(line: 250, column: 375, scope: !2247)
!2252 = !DILocation(line: 250, column: 467, scope: !2247)
!2253 = !DILocation(line: 250, column: 465, scope: !2247)
!2254 = !DILocation(line: 250, column: 373, scope: !2247)
!2255 = !DILocation(line: 250, column: 366, scope: !2247)
!2256 = !DILocation(line: 250, column: 361, scope: !2247)
!2257 = !DILocation(line: 250, column: 357, scope: !2247)
!2258 = !DILocation(line: 250, column: 364, scope: !2247)
!2259 = !DILocation(line: 250, column: 476, scope: !2247)
!2260 = !DILocation(line: 250, column: 351, scope: !2261)
!2261 = !DILexicalBlockFile(scope: !2216, file: !624, discriminator: 8)
!2262 = !DILocation(line: 250, column: 327, scope: !2261)
!2263 = distinct !{!2263, !2264}
!2264 = !DILocation(line: 250, column: 327, scope: !2212)
!2265 = !DILocation(line: 250, column: 485, scope: !2266)
!2266 = !DILexicalBlockFile(scope: !2212, file: !624, discriminator: 9)
!2267 = !DILocation(line: 250, column: 482, scope: !2266)
!2268 = !DILocation(line: 250, column: 506, scope: !2266)
!2269 = !DILocation(line: 250, column: 503, scope: !2266)
!2270 = !DILocation(line: 250, column: 530, scope: !2266)
!2271 = !DILocation(line: 250, column: 527, scope: !2266)
!2272 = !DILocation(line: 250, column: 547, scope: !2266)
!2273 = !DILocation(line: 250, column: 321, scope: !2274)
!2274 = !DILexicalBlockFile(scope: !2205, file: !624, discriminator: 10)
!2275 = !DILocation(line: 250, column: 296, scope: !2274)
!2276 = distinct !{!2276, !2277}
!2277 = !DILocation(line: 250, column: 296, scope: !2169)
!2278 = !DILocation(line: 250, column: 549, scope: !2279)
!2279 = !DILexicalBlockFile(scope: !2169, file: !624, discriminator: 11)
!2280 = distinct !DISubprogram(name: "blend_grainextract_8bit", scope: !624, file: !624, line: 251, type: !1531, isLocal: true, isDefinition: true, scopeLine: 251, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!2281 = !DILocation(line: 159, column: 97, scope: !1639, inlinedAt: !2282)
!2282 = distinct !DILocation(line: 251, column: 379, scope: !2283)
!2283 = !DILexicalBlockFile(scope: !2284, file: !624, discriminator: 4)
!2284 = distinct !DILexicalBlock(scope: !2285, file: !624, line: 251, column: 357)
!2285 = distinct !DILexicalBlock(scope: !2286, file: !624, line: 251, column: 329)
!2286 = distinct !DILexicalBlock(scope: !2287, file: !624, line: 251, column: 329)
!2287 = distinct !DILexicalBlock(scope: !2288, file: !624, line: 251, column: 327)
!2288 = distinct !DILexicalBlock(scope: !2289, file: !624, line: 251, column: 298)
!2289 = distinct !DILexicalBlock(scope: !2280, file: !624, line: 251, column: 298)
!2290 = !DILocalVariable(name: "top", arg: 1, scope: !2280, file: !624, line: 251, type: !900)
!2291 = !DILocation(line: 251, column: 52, scope: !2280)
!2292 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !2280, file: !624, line: 251, type: !902)
!2293 = !DILocation(line: 251, column: 67, scope: !2280)
!2294 = !DILocalVariable(name: "bottom", arg: 3, scope: !2280, file: !624, line: 251, type: !900)
!2295 = !DILocation(line: 251, column: 96, scope: !2280)
!2296 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !2280, file: !624, line: 251, type: !902)
!2297 = !DILocation(line: 251, column: 114, scope: !2280)
!2298 = !DILocalVariable(name: "dst", arg: 5, scope: !2280, file: !624, line: 251, type: !329)
!2299 = !DILocation(line: 251, column: 140, scope: !2280)
!2300 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !2280, file: !624, line: 251, type: !902)
!2301 = !DILocation(line: 251, column: 155, scope: !2280)
!2302 = !DILocalVariable(name: "width", arg: 7, scope: !2280, file: !624, line: 251, type: !902)
!2303 = !DILocation(line: 251, column: 179, scope: !2280)
!2304 = !DILocalVariable(name: "height", arg: 8, scope: !2280, file: !624, line: 251, type: !902)
!2305 = !DILocation(line: 251, column: 196, scope: !2280)
!2306 = !DILocalVariable(name: "param", arg: 9, scope: !2280, file: !624, line: 251, type: !884)
!2307 = !DILocation(line: 251, column: 218, scope: !2280)
!2308 = !DILocalVariable(name: "values", arg: 10, scope: !2280, file: !624, line: 251, type: !544)
!2309 = !DILocation(line: 251, column: 233, scope: !2280)
!2310 = !DILocalVariable(name: "starty", arg: 11, scope: !2280, file: !624, line: 251, type: !238)
!2311 = !DILocation(line: 251, column: 245, scope: !2280)
!2312 = !DILocalVariable(name: "opacity", scope: !2280, file: !624, line: 251, type: !248)
!2313 = !DILocation(line: 251, column: 262, scope: !2280)
!2314 = !DILocation(line: 251, column: 272, scope: !2280)
!2315 = !DILocation(line: 251, column: 279, scope: !2280)
!2316 = !DILocalVariable(name: "i", scope: !2280, file: !624, line: 251, type: !238)
!2317 = !DILocation(line: 251, column: 292, scope: !2280)
!2318 = !DILocalVariable(name: "j", scope: !2280, file: !624, line: 251, type: !238)
!2319 = !DILocation(line: 251, column: 295, scope: !2280)
!2320 = !DILocation(line: 251, column: 305, scope: !2289)
!2321 = !DILocation(line: 251, column: 303, scope: !2289)
!2322 = !DILocation(line: 251, column: 310, scope: !2323)
!2323 = !DILexicalBlockFile(scope: !2288, file: !624, discriminator: 1)
!2324 = !DILocation(line: 251, column: 314, scope: !2323)
!2325 = !DILocation(line: 251, column: 312, scope: !2323)
!2326 = !DILocation(line: 251, column: 298, scope: !2323)
!2327 = !DILocation(line: 251, column: 336, scope: !2328)
!2328 = !DILexicalBlockFile(scope: !2286, file: !624, discriminator: 2)
!2329 = !DILocation(line: 251, column: 334, scope: !2328)
!2330 = !DILocation(line: 251, column: 341, scope: !2331)
!2331 = !DILexicalBlockFile(scope: !2285, file: !624, discriminator: 3)
!2332 = !DILocation(line: 251, column: 345, scope: !2331)
!2333 = !DILocation(line: 251, column: 343, scope: !2331)
!2334 = !DILocation(line: 251, column: 329, scope: !2331)
!2335 = !DILocation(line: 251, column: 372, scope: !2283)
!2336 = !DILocation(line: 251, column: 368, scope: !2283)
!2337 = !DILocation(line: 251, column: 405, scope: !2283)
!2338 = !DILocation(line: 251, column: 401, scope: !2283)
!2339 = !DILocation(line: 251, column: 399, scope: !2283)
!2340 = !DILocation(line: 251, column: 417, scope: !2283)
!2341 = !DILocation(line: 251, column: 410, scope: !2283)
!2342 = !DILocation(line: 251, column: 408, scope: !2283)
!2343 = !DILocation(line: 251, column: 379, scope: !2283)
!2344 = !DILocation(line: 161, column: 9, scope: !1707, inlinedAt: !2282)
!2345 = !DILocation(line: 161, column: 10, scope: !1707, inlinedAt: !2282)
!2346 = !DILocation(line: 161, column: 9, scope: !1639, inlinedAt: !2282)
!2347 = !DILocation(line: 161, column: 29, scope: !1711, inlinedAt: !2282)
!2348 = !DILocation(line: 161, column: 28, scope: !1711, inlinedAt: !2282)
!2349 = !DILocation(line: 161, column: 31, scope: !1711, inlinedAt: !2282)
!2350 = !DILocation(line: 161, column: 27, scope: !1711, inlinedAt: !2282)
!2351 = !DILocation(line: 161, column: 20, scope: !1711, inlinedAt: !2282)
!2352 = !DILocation(line: 162, column: 17, scope: !1707, inlinedAt: !2282)
!2353 = !DILocation(line: 162, column: 10, scope: !1707, inlinedAt: !2282)
!2354 = !DILocation(line: 163, column: 1, scope: !1639, inlinedAt: !2282)
!2355 = !DILocation(line: 251, column: 378, scope: !2283)
!2356 = !DILocation(line: 251, column: 428, scope: !2283)
!2357 = !DILocation(line: 251, column: 424, scope: !2283)
!2358 = !DILocation(line: 251, column: 422, scope: !2283)
!2359 = !DILocation(line: 251, column: 377, scope: !2283)
!2360 = !DILocation(line: 251, column: 434, scope: !2283)
!2361 = !DILocation(line: 251, column: 432, scope: !2283)
!2362 = !DILocation(line: 251, column: 375, scope: !2283)
!2363 = !DILocation(line: 251, column: 363, scope: !2283)
!2364 = !DILocation(line: 251, column: 359, scope: !2283)
!2365 = !DILocation(line: 251, column: 366, scope: !2283)
!2366 = !DILocation(line: 251, column: 443, scope: !2283)
!2367 = !DILocation(line: 251, column: 353, scope: !2368)
!2368 = !DILexicalBlockFile(scope: !2285, file: !624, discriminator: 5)
!2369 = !DILocation(line: 251, column: 329, scope: !2368)
!2370 = distinct !{!2370, !2371}
!2371 = !DILocation(line: 251, column: 329, scope: !2287)
!2372 = !DILocation(line: 251, column: 452, scope: !2373)
!2373 = !DILexicalBlockFile(scope: !2287, file: !624, discriminator: 6)
!2374 = !DILocation(line: 251, column: 449, scope: !2373)
!2375 = !DILocation(line: 251, column: 473, scope: !2373)
!2376 = !DILocation(line: 251, column: 470, scope: !2373)
!2377 = !DILocation(line: 251, column: 497, scope: !2373)
!2378 = !DILocation(line: 251, column: 494, scope: !2373)
!2379 = !DILocation(line: 251, column: 514, scope: !2373)
!2380 = !DILocation(line: 251, column: 323, scope: !2381)
!2381 = !DILexicalBlockFile(scope: !2288, file: !624, discriminator: 7)
!2382 = !DILocation(line: 251, column: 298, scope: !2381)
!2383 = distinct !{!2383, !2384}
!2384 = !DILocation(line: 251, column: 298, scope: !2280)
!2385 = !DILocation(line: 251, column: 516, scope: !2386)
!2386 = !DILexicalBlockFile(scope: !2280, file: !624, discriminator: 8)
!2387 = distinct !DISubprogram(name: "blend_divide_8bit", scope: !624, file: !624, line: 260, type: !1531, isLocal: true, isDefinition: true, scopeLine: 260, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!2388 = !DILocation(line: 159, column: 97, scope: !1639, inlinedAt: !2389)
!2389 = distinct !DILocation(line: 260, column: 373, scope: !2390)
!2390 = !DILexicalBlockFile(scope: !2391, file: !624, discriminator: 7)
!2391 = distinct !DILexicalBlock(scope: !2392, file: !624, line: 260, column: 351)
!2392 = distinct !DILexicalBlock(scope: !2393, file: !624, line: 260, column: 323)
!2393 = distinct !DILexicalBlock(scope: !2394, file: !624, line: 260, column: 323)
!2394 = distinct !DILexicalBlock(scope: !2395, file: !624, line: 260, column: 321)
!2395 = distinct !DILexicalBlock(scope: !2396, file: !624, line: 260, column: 292)
!2396 = distinct !DILexicalBlock(scope: !2387, file: !624, line: 260, column: 292)
!2397 = !DILocalVariable(name: "top", arg: 1, scope: !2387, file: !624, line: 260, type: !900)
!2398 = !DILocation(line: 260, column: 46, scope: !2387)
!2399 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !2387, file: !624, line: 260, type: !902)
!2400 = !DILocation(line: 260, column: 61, scope: !2387)
!2401 = !DILocalVariable(name: "bottom", arg: 3, scope: !2387, file: !624, line: 260, type: !900)
!2402 = !DILocation(line: 260, column: 90, scope: !2387)
!2403 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !2387, file: !624, line: 260, type: !902)
!2404 = !DILocation(line: 260, column: 108, scope: !2387)
!2405 = !DILocalVariable(name: "dst", arg: 5, scope: !2387, file: !624, line: 260, type: !329)
!2406 = !DILocation(line: 260, column: 134, scope: !2387)
!2407 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !2387, file: !624, line: 260, type: !902)
!2408 = !DILocation(line: 260, column: 149, scope: !2387)
!2409 = !DILocalVariable(name: "width", arg: 7, scope: !2387, file: !624, line: 260, type: !902)
!2410 = !DILocation(line: 260, column: 173, scope: !2387)
!2411 = !DILocalVariable(name: "height", arg: 8, scope: !2387, file: !624, line: 260, type: !902)
!2412 = !DILocation(line: 260, column: 190, scope: !2387)
!2413 = !DILocalVariable(name: "param", arg: 9, scope: !2387, file: !624, line: 260, type: !884)
!2414 = !DILocation(line: 260, column: 212, scope: !2387)
!2415 = !DILocalVariable(name: "values", arg: 10, scope: !2387, file: !624, line: 260, type: !544)
!2416 = !DILocation(line: 260, column: 227, scope: !2387)
!2417 = !DILocalVariable(name: "starty", arg: 11, scope: !2387, file: !624, line: 260, type: !238)
!2418 = !DILocation(line: 260, column: 239, scope: !2387)
!2419 = !DILocalVariable(name: "opacity", scope: !2387, file: !624, line: 260, type: !248)
!2420 = !DILocation(line: 260, column: 256, scope: !2387)
!2421 = !DILocation(line: 260, column: 266, scope: !2387)
!2422 = !DILocation(line: 260, column: 273, scope: !2387)
!2423 = !DILocalVariable(name: "i", scope: !2387, file: !624, line: 260, type: !238)
!2424 = !DILocation(line: 260, column: 286, scope: !2387)
!2425 = !DILocalVariable(name: "j", scope: !2387, file: !624, line: 260, type: !238)
!2426 = !DILocation(line: 260, column: 289, scope: !2387)
!2427 = !DILocation(line: 260, column: 299, scope: !2396)
!2428 = !DILocation(line: 260, column: 297, scope: !2396)
!2429 = !DILocation(line: 260, column: 304, scope: !2430)
!2430 = !DILexicalBlockFile(scope: !2395, file: !624, discriminator: 1)
!2431 = !DILocation(line: 260, column: 308, scope: !2430)
!2432 = !DILocation(line: 260, column: 306, scope: !2430)
!2433 = !DILocation(line: 260, column: 292, scope: !2430)
!2434 = !DILocation(line: 260, column: 330, scope: !2435)
!2435 = !DILexicalBlockFile(scope: !2393, file: !624, discriminator: 2)
!2436 = !DILocation(line: 260, column: 328, scope: !2435)
!2437 = !DILocation(line: 260, column: 335, scope: !2438)
!2438 = !DILexicalBlockFile(scope: !2392, file: !624, discriminator: 3)
!2439 = !DILocation(line: 260, column: 339, scope: !2438)
!2440 = !DILocation(line: 260, column: 337, scope: !2438)
!2441 = !DILocation(line: 260, column: 323, scope: !2438)
!2442 = !DILocation(line: 260, column: 366, scope: !2443)
!2443 = !DILexicalBlockFile(scope: !2391, file: !624, discriminator: 4)
!2444 = !DILocation(line: 260, column: 362, scope: !2443)
!2445 = !DILocation(line: 260, column: 396, scope: !2443)
!2446 = !DILocation(line: 260, column: 389, scope: !2443)
!2447 = !DILocation(line: 260, column: 399, scope: !2443)
!2448 = !DILocation(line: 260, column: 389, scope: !2449)
!2449 = !DILexicalBlockFile(scope: !2391, file: !624, discriminator: 5)
!2450 = !DILocation(line: 260, column: 422, scope: !2451)
!2451 = !DILexicalBlockFile(scope: !2391, file: !624, discriminator: 6)
!2452 = !DILocation(line: 260, column: 418, scope: !2451)
!2453 = !DILocation(line: 260, column: 416, scope: !2451)
!2454 = !DILocation(line: 260, column: 434, scope: !2451)
!2455 = !DILocation(line: 260, column: 427, scope: !2451)
!2456 = !DILocation(line: 260, column: 425, scope: !2451)
!2457 = !DILocation(line: 260, column: 389, scope: !2451)
!2458 = !DILocation(line: 260, column: 389, scope: !2390)
!2459 = !DILocation(line: 260, column: 373, scope: !2390)
!2460 = !DILocation(line: 161, column: 9, scope: !1707, inlinedAt: !2389)
!2461 = !DILocation(line: 161, column: 10, scope: !1707, inlinedAt: !2389)
!2462 = !DILocation(line: 161, column: 9, scope: !1639, inlinedAt: !2389)
!2463 = !DILocation(line: 161, column: 29, scope: !1711, inlinedAt: !2389)
!2464 = !DILocation(line: 161, column: 28, scope: !1711, inlinedAt: !2389)
!2465 = !DILocation(line: 161, column: 31, scope: !1711, inlinedAt: !2389)
!2466 = !DILocation(line: 161, column: 27, scope: !1711, inlinedAt: !2389)
!2467 = !DILocation(line: 161, column: 20, scope: !1711, inlinedAt: !2389)
!2468 = !DILocation(line: 162, column: 17, scope: !1707, inlinedAt: !2389)
!2469 = !DILocation(line: 162, column: 10, scope: !1707, inlinedAt: !2389)
!2470 = !DILocation(line: 163, column: 1, scope: !1639, inlinedAt: !2389)
!2471 = !DILocation(line: 260, column: 372, scope: !2390)
!2472 = !DILocation(line: 260, column: 445, scope: !2390)
!2473 = !DILocation(line: 260, column: 441, scope: !2390)
!2474 = !DILocation(line: 260, column: 439, scope: !2390)
!2475 = !DILocation(line: 260, column: 371, scope: !2390)
!2476 = !DILocation(line: 260, column: 451, scope: !2390)
!2477 = !DILocation(line: 260, column: 449, scope: !2390)
!2478 = !DILocation(line: 260, column: 369, scope: !2390)
!2479 = !DILocation(line: 260, column: 362, scope: !2390)
!2480 = !DILocation(line: 260, column: 357, scope: !2390)
!2481 = !DILocation(line: 260, column: 353, scope: !2390)
!2482 = !DILocation(line: 260, column: 360, scope: !2390)
!2483 = !DILocation(line: 260, column: 460, scope: !2390)
!2484 = !DILocation(line: 260, column: 347, scope: !2485)
!2485 = !DILexicalBlockFile(scope: !2392, file: !624, discriminator: 8)
!2486 = !DILocation(line: 260, column: 323, scope: !2485)
!2487 = distinct !{!2487, !2488}
!2488 = !DILocation(line: 260, column: 323, scope: !2394)
!2489 = !DILocation(line: 260, column: 469, scope: !2490)
!2490 = !DILexicalBlockFile(scope: !2394, file: !624, discriminator: 9)
!2491 = !DILocation(line: 260, column: 466, scope: !2490)
!2492 = !DILocation(line: 260, column: 490, scope: !2490)
!2493 = !DILocation(line: 260, column: 487, scope: !2490)
!2494 = !DILocation(line: 260, column: 514, scope: !2490)
!2495 = !DILocation(line: 260, column: 511, scope: !2490)
!2496 = !DILocation(line: 260, column: 531, scope: !2490)
!2497 = !DILocation(line: 260, column: 317, scope: !2498)
!2498 = !DILexicalBlockFile(scope: !2395, file: !624, discriminator: 10)
!2499 = !DILocation(line: 260, column: 292, scope: !2498)
!2500 = distinct !{!2500, !2501}
!2501 = !DILocation(line: 260, column: 292, scope: !2387)
!2502 = !DILocation(line: 260, column: 533, scope: !2503)
!2503 = !DILexicalBlockFile(scope: !2387, file: !624, discriminator: 11)
!2504 = distinct !DISubprogram(name: "blend_dodge_8bit", scope: !624, file: !624, line: 261, type: !1531, isLocal: true, isDefinition: true, scopeLine: 261, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!2505 = !DILocalVariable(name: "top", arg: 1, scope: !2504, file: !624, line: 261, type: !900)
!2506 = !DILocation(line: 261, column: 45, scope: !2504)
!2507 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !2504, file: !624, line: 261, type: !902)
!2508 = !DILocation(line: 261, column: 60, scope: !2504)
!2509 = !DILocalVariable(name: "bottom", arg: 3, scope: !2504, file: !624, line: 261, type: !900)
!2510 = !DILocation(line: 261, column: 89, scope: !2504)
!2511 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !2504, file: !624, line: 261, type: !902)
!2512 = !DILocation(line: 261, column: 107, scope: !2504)
!2513 = !DILocalVariable(name: "dst", arg: 5, scope: !2504, file: !624, line: 261, type: !329)
!2514 = !DILocation(line: 261, column: 133, scope: !2504)
!2515 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !2504, file: !624, line: 261, type: !902)
!2516 = !DILocation(line: 261, column: 148, scope: !2504)
!2517 = !DILocalVariable(name: "width", arg: 7, scope: !2504, file: !624, line: 261, type: !902)
!2518 = !DILocation(line: 261, column: 172, scope: !2504)
!2519 = !DILocalVariable(name: "height", arg: 8, scope: !2504, file: !624, line: 261, type: !902)
!2520 = !DILocation(line: 261, column: 189, scope: !2504)
!2521 = !DILocalVariable(name: "param", arg: 9, scope: !2504, file: !624, line: 261, type: !884)
!2522 = !DILocation(line: 261, column: 211, scope: !2504)
!2523 = !DILocalVariable(name: "values", arg: 10, scope: !2504, file: !624, line: 261, type: !544)
!2524 = !DILocation(line: 261, column: 226, scope: !2504)
!2525 = !DILocalVariable(name: "starty", arg: 11, scope: !2504, file: !624, line: 261, type: !238)
!2526 = !DILocation(line: 261, column: 238, scope: !2504)
!2527 = !DILocalVariable(name: "opacity", scope: !2504, file: !624, line: 261, type: !248)
!2528 = !DILocation(line: 261, column: 255, scope: !2504)
!2529 = !DILocation(line: 261, column: 265, scope: !2504)
!2530 = !DILocation(line: 261, column: 272, scope: !2504)
!2531 = !DILocalVariable(name: "i", scope: !2504, file: !624, line: 261, type: !238)
!2532 = !DILocation(line: 261, column: 285, scope: !2504)
!2533 = !DILocalVariable(name: "j", scope: !2504, file: !624, line: 261, type: !238)
!2534 = !DILocation(line: 261, column: 288, scope: !2504)
!2535 = !DILocation(line: 261, column: 298, scope: !2536)
!2536 = distinct !DILexicalBlock(scope: !2504, file: !624, line: 261, column: 291)
!2537 = !DILocation(line: 261, column: 296, scope: !2536)
!2538 = !DILocation(line: 261, column: 303, scope: !2539)
!2539 = !DILexicalBlockFile(scope: !2540, file: !624, discriminator: 1)
!2540 = distinct !DILexicalBlock(scope: !2536, file: !624, line: 261, column: 291)
!2541 = !DILocation(line: 261, column: 307, scope: !2539)
!2542 = !DILocation(line: 261, column: 305, scope: !2539)
!2543 = !DILocation(line: 261, column: 291, scope: !2539)
!2544 = !DILocation(line: 261, column: 329, scope: !2545)
!2545 = !DILexicalBlockFile(scope: !2546, file: !624, discriminator: 2)
!2546 = distinct !DILexicalBlock(scope: !2547, file: !624, line: 261, column: 322)
!2547 = distinct !DILexicalBlock(scope: !2540, file: !624, line: 261, column: 320)
!2548 = !DILocation(line: 261, column: 327, scope: !2545)
!2549 = !DILocation(line: 261, column: 334, scope: !2550)
!2550 = !DILexicalBlockFile(scope: !2551, file: !624, discriminator: 3)
!2551 = distinct !DILexicalBlock(scope: !2546, file: !624, line: 261, column: 322)
!2552 = !DILocation(line: 261, column: 338, scope: !2550)
!2553 = !DILocation(line: 261, column: 336, scope: !2550)
!2554 = !DILocation(line: 261, column: 322, scope: !2550)
!2555 = !DILocation(line: 261, column: 365, scope: !2556)
!2556 = !DILexicalBlockFile(scope: !2557, file: !624, discriminator: 4)
!2557 = distinct !DILexicalBlock(scope: !2551, file: !624, line: 261, column: 350)
!2558 = !DILocation(line: 261, column: 361, scope: !2556)
!2559 = !DILocation(line: 261, column: 379, scope: !2556)
!2560 = !DILocation(line: 261, column: 375, scope: !2556)
!2561 = !DILocation(line: 261, column: 374, scope: !2556)
!2562 = !DILocation(line: 261, column: 383, scope: !2556)
!2563 = !DILocation(line: 261, column: 373, scope: !2556)
!2564 = !DILocation(line: 261, column: 398, scope: !2565)
!2565 = !DILexicalBlockFile(scope: !2557, file: !624, discriminator: 5)
!2566 = !DILocation(line: 261, column: 394, scope: !2565)
!2567 = !DILocation(line: 261, column: 393, scope: !2565)
!2568 = !DILocation(line: 261, column: 373, scope: !2565)
!2569 = !DILocation(line: 261, column: 424, scope: !2570)
!2570 = !DILexicalBlockFile(scope: !2557, file: !624, discriminator: 6)
!2571 = !DILocation(line: 261, column: 417, scope: !2570)
!2572 = !DILocation(line: 261, column: 416, scope: !2570)
!2573 = !DILocation(line: 261, column: 428, scope: !2570)
!2574 = !DILocation(line: 261, column: 448, scope: !2570)
!2575 = !DILocation(line: 261, column: 444, scope: !2570)
!2576 = !DILocation(line: 261, column: 443, scope: !2570)
!2577 = !DILocation(line: 261, column: 441, scope: !2570)
!2578 = !DILocation(line: 261, column: 434, scope: !2570)
!2579 = !DILocation(line: 261, column: 411, scope: !2570)
!2580 = !DILocation(line: 261, column: 405, scope: !2570)
!2581 = !DILocation(line: 261, column: 468, scope: !2582)
!2582 = !DILexicalBlockFile(scope: !2557, file: !624, discriminator: 7)
!2583 = !DILocation(line: 261, column: 461, scope: !2582)
!2584 = !DILocation(line: 261, column: 460, scope: !2582)
!2585 = !DILocation(line: 261, column: 472, scope: !2582)
!2586 = !DILocation(line: 261, column: 492, scope: !2582)
!2587 = !DILocation(line: 261, column: 488, scope: !2582)
!2588 = !DILocation(line: 261, column: 487, scope: !2582)
!2589 = !DILocation(line: 261, column: 485, scope: !2582)
!2590 = !DILocation(line: 261, column: 478, scope: !2582)
!2591 = !DILocation(line: 261, column: 405, scope: !2582)
!2592 = !DILocation(line: 261, column: 405, scope: !2593)
!2593 = !DILexicalBlockFile(scope: !2557, file: !624, discriminator: 8)
!2594 = !DILocation(line: 261, column: 405, scope: !2595)
!2595 = !DILexicalBlockFile(scope: !2557, file: !624, discriminator: 9)
!2596 = !DILocation(line: 261, column: 373, scope: !2595)
!2597 = !DILocation(line: 261, column: 373, scope: !2598)
!2598 = !DILexicalBlockFile(scope: !2557, file: !624, discriminator: 10)
!2599 = !DILocation(line: 261, column: 516, scope: !2598)
!2600 = !DILocation(line: 261, column: 512, scope: !2598)
!2601 = !DILocation(line: 261, column: 510, scope: !2598)
!2602 = !DILocation(line: 261, column: 370, scope: !2598)
!2603 = !DILocation(line: 261, column: 522, scope: !2598)
!2604 = !DILocation(line: 261, column: 520, scope: !2598)
!2605 = !DILocation(line: 261, column: 368, scope: !2598)
!2606 = !DILocation(line: 261, column: 361, scope: !2598)
!2607 = !DILocation(line: 261, column: 356, scope: !2598)
!2608 = !DILocation(line: 261, column: 352, scope: !2598)
!2609 = !DILocation(line: 261, column: 359, scope: !2598)
!2610 = !DILocation(line: 261, column: 531, scope: !2598)
!2611 = !DILocation(line: 261, column: 346, scope: !2612)
!2612 = !DILexicalBlockFile(scope: !2551, file: !624, discriminator: 11)
!2613 = !DILocation(line: 261, column: 322, scope: !2612)
!2614 = distinct !{!2614, !2615}
!2615 = !DILocation(line: 261, column: 322, scope: !2547)
!2616 = !DILocation(line: 261, column: 540, scope: !2617)
!2617 = !DILexicalBlockFile(scope: !2547, file: !624, discriminator: 12)
!2618 = !DILocation(line: 261, column: 537, scope: !2617)
!2619 = !DILocation(line: 261, column: 561, scope: !2617)
!2620 = !DILocation(line: 261, column: 558, scope: !2617)
!2621 = !DILocation(line: 261, column: 585, scope: !2617)
!2622 = !DILocation(line: 261, column: 582, scope: !2617)
!2623 = !DILocation(line: 261, column: 602, scope: !2617)
!2624 = !DILocation(line: 261, column: 316, scope: !2625)
!2625 = !DILexicalBlockFile(scope: !2540, file: !624, discriminator: 13)
!2626 = !DILocation(line: 261, column: 291, scope: !2625)
!2627 = distinct !{!2627, !2628}
!2628 = !DILocation(line: 261, column: 291, scope: !2504)
!2629 = !DILocation(line: 261, column: 604, scope: !2630)
!2630 = !DILexicalBlockFile(scope: !2504, file: !624, discriminator: 14)
!2631 = distinct !DISubprogram(name: "blend_exclusion_8bit", scope: !624, file: !624, line: 264, type: !1531, isLocal: true, isDefinition: true, scopeLine: 264, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!2632 = !DILocalVariable(name: "top", arg: 1, scope: !2631, file: !624, line: 264, type: !900)
!2633 = !DILocation(line: 264, column: 49, scope: !2631)
!2634 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !2631, file: !624, line: 264, type: !902)
!2635 = !DILocation(line: 264, column: 64, scope: !2631)
!2636 = !DILocalVariable(name: "bottom", arg: 3, scope: !2631, file: !624, line: 264, type: !900)
!2637 = !DILocation(line: 264, column: 93, scope: !2631)
!2638 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !2631, file: !624, line: 264, type: !902)
!2639 = !DILocation(line: 264, column: 111, scope: !2631)
!2640 = !DILocalVariable(name: "dst", arg: 5, scope: !2631, file: !624, line: 264, type: !329)
!2641 = !DILocation(line: 264, column: 137, scope: !2631)
!2642 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !2631, file: !624, line: 264, type: !902)
!2643 = !DILocation(line: 264, column: 152, scope: !2631)
!2644 = !DILocalVariable(name: "width", arg: 7, scope: !2631, file: !624, line: 264, type: !902)
!2645 = !DILocation(line: 264, column: 176, scope: !2631)
!2646 = !DILocalVariable(name: "height", arg: 8, scope: !2631, file: !624, line: 264, type: !902)
!2647 = !DILocation(line: 264, column: 193, scope: !2631)
!2648 = !DILocalVariable(name: "param", arg: 9, scope: !2631, file: !624, line: 264, type: !884)
!2649 = !DILocation(line: 264, column: 215, scope: !2631)
!2650 = !DILocalVariable(name: "values", arg: 10, scope: !2631, file: !624, line: 264, type: !544)
!2651 = !DILocation(line: 264, column: 230, scope: !2631)
!2652 = !DILocalVariable(name: "starty", arg: 11, scope: !2631, file: !624, line: 264, type: !238)
!2653 = !DILocation(line: 264, column: 242, scope: !2631)
!2654 = !DILocalVariable(name: "opacity", scope: !2631, file: !624, line: 264, type: !248)
!2655 = !DILocation(line: 264, column: 259, scope: !2631)
!2656 = !DILocation(line: 264, column: 269, scope: !2631)
!2657 = !DILocation(line: 264, column: 276, scope: !2631)
!2658 = !DILocalVariable(name: "i", scope: !2631, file: !624, line: 264, type: !238)
!2659 = !DILocation(line: 264, column: 289, scope: !2631)
!2660 = !DILocalVariable(name: "j", scope: !2631, file: !624, line: 264, type: !238)
!2661 = !DILocation(line: 264, column: 292, scope: !2631)
!2662 = !DILocation(line: 264, column: 302, scope: !2663)
!2663 = distinct !DILexicalBlock(scope: !2631, file: !624, line: 264, column: 295)
!2664 = !DILocation(line: 264, column: 300, scope: !2663)
!2665 = !DILocation(line: 264, column: 307, scope: !2666)
!2666 = !DILexicalBlockFile(scope: !2667, file: !624, discriminator: 1)
!2667 = distinct !DILexicalBlock(scope: !2663, file: !624, line: 264, column: 295)
!2668 = !DILocation(line: 264, column: 311, scope: !2666)
!2669 = !DILocation(line: 264, column: 309, scope: !2666)
!2670 = !DILocation(line: 264, column: 295, scope: !2666)
!2671 = !DILocation(line: 264, column: 333, scope: !2672)
!2672 = !DILexicalBlockFile(scope: !2673, file: !624, discriminator: 2)
!2673 = distinct !DILexicalBlock(scope: !2674, file: !624, line: 264, column: 326)
!2674 = distinct !DILexicalBlock(scope: !2667, file: !624, line: 264, column: 324)
!2675 = !DILocation(line: 264, column: 331, scope: !2672)
!2676 = !DILocation(line: 264, column: 338, scope: !2677)
!2677 = !DILexicalBlockFile(scope: !2678, file: !624, discriminator: 3)
!2678 = distinct !DILexicalBlock(scope: !2673, file: !624, line: 264, column: 326)
!2679 = !DILocation(line: 264, column: 342, scope: !2677)
!2680 = !DILocation(line: 264, column: 340, scope: !2677)
!2681 = !DILocation(line: 264, column: 326, scope: !2677)
!2682 = !DILocation(line: 264, column: 369, scope: !2683)
!2683 = !DILexicalBlockFile(scope: !2684, file: !624, discriminator: 4)
!2684 = distinct !DILexicalBlock(scope: !2678, file: !624, line: 264, column: 354)
!2685 = !DILocation(line: 264, column: 365, scope: !2683)
!2686 = !DILocation(line: 264, column: 380, scope: !2683)
!2687 = !DILocation(line: 264, column: 376, scope: !2683)
!2688 = !DILocation(line: 264, column: 392, scope: !2683)
!2689 = !DILocation(line: 264, column: 385, scope: !2683)
!2690 = !DILocation(line: 264, column: 383, scope: !2683)
!2691 = !DILocation(line: 264, column: 405, scope: !2683)
!2692 = !DILocation(line: 264, column: 401, scope: !2683)
!2693 = !DILocation(line: 264, column: 399, scope: !2683)
!2694 = !DILocation(line: 264, column: 417, scope: !2683)
!2695 = !DILocation(line: 264, column: 410, scope: !2683)
!2696 = !DILocation(line: 264, column: 408, scope: !2683)
!2697 = !DILocation(line: 264, column: 420, scope: !2683)
!2698 = !DILocation(line: 264, column: 395, scope: !2683)
!2699 = !DILocation(line: 264, column: 433, scope: !2683)
!2700 = !DILocation(line: 264, column: 429, scope: !2683)
!2701 = !DILocation(line: 264, column: 427, scope: !2683)
!2702 = !DILocation(line: 264, column: 374, scope: !2683)
!2703 = !DILocation(line: 264, column: 439, scope: !2683)
!2704 = !DILocation(line: 264, column: 437, scope: !2683)
!2705 = !DILocation(line: 264, column: 372, scope: !2683)
!2706 = !DILocation(line: 264, column: 360, scope: !2683)
!2707 = !DILocation(line: 264, column: 356, scope: !2683)
!2708 = !DILocation(line: 264, column: 363, scope: !2683)
!2709 = !DILocation(line: 264, column: 448, scope: !2683)
!2710 = !DILocation(line: 264, column: 350, scope: !2711)
!2711 = !DILexicalBlockFile(scope: !2678, file: !624, discriminator: 5)
!2712 = !DILocation(line: 264, column: 326, scope: !2711)
!2713 = distinct !{!2713, !2714}
!2714 = !DILocation(line: 264, column: 326, scope: !2674)
!2715 = !DILocation(line: 264, column: 457, scope: !2716)
!2716 = !DILexicalBlockFile(scope: !2674, file: !624, discriminator: 6)
!2717 = !DILocation(line: 264, column: 454, scope: !2716)
!2718 = !DILocation(line: 264, column: 478, scope: !2716)
!2719 = !DILocation(line: 264, column: 475, scope: !2716)
!2720 = !DILocation(line: 264, column: 502, scope: !2716)
!2721 = !DILocation(line: 264, column: 499, scope: !2716)
!2722 = !DILocation(line: 264, column: 519, scope: !2716)
!2723 = !DILocation(line: 264, column: 320, scope: !2724)
!2724 = !DILexicalBlockFile(scope: !2667, file: !624, discriminator: 7)
!2725 = !DILocation(line: 264, column: 295, scope: !2724)
!2726 = distinct !{!2726, !2727}
!2727 = !DILocation(line: 264, column: 295, scope: !2631)
!2728 = !DILocation(line: 264, column: 521, scope: !2729)
!2729 = !DILexicalBlockFile(scope: !2631, file: !624, discriminator: 8)
!2730 = distinct !DISubprogram(name: "blend_extremity_8bit", scope: !624, file: !624, line: 249, type: !1531, isLocal: true, isDefinition: true, scopeLine: 249, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!2731 = !DILocalVariable(name: "top", arg: 1, scope: !2730, file: !624, line: 249, type: !900)
!2732 = !DILocation(line: 249, column: 49, scope: !2730)
!2733 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !2730, file: !624, line: 249, type: !902)
!2734 = !DILocation(line: 249, column: 64, scope: !2730)
!2735 = !DILocalVariable(name: "bottom", arg: 3, scope: !2730, file: !624, line: 249, type: !900)
!2736 = !DILocation(line: 249, column: 93, scope: !2730)
!2737 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !2730, file: !624, line: 249, type: !902)
!2738 = !DILocation(line: 249, column: 111, scope: !2730)
!2739 = !DILocalVariable(name: "dst", arg: 5, scope: !2730, file: !624, line: 249, type: !329)
!2740 = !DILocation(line: 249, column: 137, scope: !2730)
!2741 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !2730, file: !624, line: 249, type: !902)
!2742 = !DILocation(line: 249, column: 152, scope: !2730)
!2743 = !DILocalVariable(name: "width", arg: 7, scope: !2730, file: !624, line: 249, type: !902)
!2744 = !DILocation(line: 249, column: 176, scope: !2730)
!2745 = !DILocalVariable(name: "height", arg: 8, scope: !2730, file: !624, line: 249, type: !902)
!2746 = !DILocation(line: 249, column: 193, scope: !2730)
!2747 = !DILocalVariable(name: "param", arg: 9, scope: !2730, file: !624, line: 249, type: !884)
!2748 = !DILocation(line: 249, column: 215, scope: !2730)
!2749 = !DILocalVariable(name: "values", arg: 10, scope: !2730, file: !624, line: 249, type: !544)
!2750 = !DILocation(line: 249, column: 230, scope: !2730)
!2751 = !DILocalVariable(name: "starty", arg: 11, scope: !2730, file: !624, line: 249, type: !238)
!2752 = !DILocation(line: 249, column: 242, scope: !2730)
!2753 = !DILocalVariable(name: "opacity", scope: !2730, file: !624, line: 249, type: !248)
!2754 = !DILocation(line: 249, column: 259, scope: !2730)
!2755 = !DILocation(line: 249, column: 269, scope: !2730)
!2756 = !DILocation(line: 249, column: 276, scope: !2730)
!2757 = !DILocalVariable(name: "i", scope: !2730, file: !624, line: 249, type: !238)
!2758 = !DILocation(line: 249, column: 289, scope: !2730)
!2759 = !DILocalVariable(name: "j", scope: !2730, file: !624, line: 249, type: !238)
!2760 = !DILocation(line: 249, column: 292, scope: !2730)
!2761 = !DILocation(line: 249, column: 302, scope: !2762)
!2762 = distinct !DILexicalBlock(scope: !2730, file: !624, line: 249, column: 295)
!2763 = !DILocation(line: 249, column: 300, scope: !2762)
!2764 = !DILocation(line: 249, column: 307, scope: !2765)
!2765 = !DILexicalBlockFile(scope: !2766, file: !624, discriminator: 1)
!2766 = distinct !DILexicalBlock(scope: !2762, file: !624, line: 249, column: 295)
!2767 = !DILocation(line: 249, column: 311, scope: !2765)
!2768 = !DILocation(line: 249, column: 309, scope: !2765)
!2769 = !DILocation(line: 249, column: 295, scope: !2765)
!2770 = !DILocation(line: 249, column: 333, scope: !2771)
!2771 = !DILexicalBlockFile(scope: !2772, file: !624, discriminator: 2)
!2772 = distinct !DILexicalBlock(scope: !2773, file: !624, line: 249, column: 326)
!2773 = distinct !DILexicalBlock(scope: !2766, file: !624, line: 249, column: 324)
!2774 = !DILocation(line: 249, column: 331, scope: !2771)
!2775 = !DILocation(line: 249, column: 338, scope: !2776)
!2776 = !DILexicalBlockFile(scope: !2777, file: !624, discriminator: 3)
!2777 = distinct !DILexicalBlock(scope: !2772, file: !624, line: 249, column: 326)
!2778 = !DILocation(line: 249, column: 342, scope: !2776)
!2779 = !DILocation(line: 249, column: 340, scope: !2776)
!2780 = !DILocation(line: 249, column: 326, scope: !2776)
!2781 = !DILocation(line: 249, column: 369, scope: !2782)
!2782 = !DILexicalBlockFile(scope: !2783, file: !624, discriminator: 4)
!2783 = distinct !DILexicalBlock(scope: !2777, file: !624, line: 249, column: 354)
!2784 = !DILocation(line: 249, column: 365, scope: !2782)
!2785 = !DILocation(line: 249, column: 388, scope: !2782)
!2786 = !DILocation(line: 249, column: 384, scope: !2782)
!2787 = !DILocation(line: 249, column: 382, scope: !2782)
!2788 = !DILocation(line: 249, column: 400, scope: !2782)
!2789 = !DILocation(line: 249, column: 393, scope: !2782)
!2790 = !DILocation(line: 249, column: 391, scope: !2782)
!2791 = !DILocation(line: 249, column: 404, scope: !2782)
!2792 = !DILocation(line: 249, column: 377, scope: !2782)
!2793 = !DILocation(line: 249, column: 422, scope: !2794)
!2794 = !DILexicalBlockFile(scope: !2783, file: !624, discriminator: 5)
!2795 = !DILocation(line: 249, column: 418, scope: !2794)
!2796 = !DILocation(line: 249, column: 416, scope: !2794)
!2797 = !DILocation(line: 249, column: 434, scope: !2794)
!2798 = !DILocation(line: 249, column: 427, scope: !2794)
!2799 = !DILocation(line: 249, column: 425, scope: !2794)
!2800 = !DILocation(line: 249, column: 377, scope: !2794)
!2801 = !DILocation(line: 249, column: 453, scope: !2802)
!2802 = !DILexicalBlockFile(scope: !2783, file: !624, discriminator: 6)
!2803 = !DILocation(line: 249, column: 449, scope: !2802)
!2804 = !DILocation(line: 249, column: 447, scope: !2802)
!2805 = !DILocation(line: 249, column: 465, scope: !2802)
!2806 = !DILocation(line: 249, column: 458, scope: !2802)
!2807 = !DILocation(line: 249, column: 456, scope: !2802)
!2808 = !DILocation(line: 249, column: 441, scope: !2802)
!2809 = !DILocation(line: 249, column: 377, scope: !2802)
!2810 = !DILocation(line: 249, column: 377, scope: !2811)
!2811 = !DILexicalBlockFile(scope: !2783, file: !624, discriminator: 7)
!2812 = !DILocation(line: 249, column: 478, scope: !2811)
!2813 = !DILocation(line: 249, column: 474, scope: !2811)
!2814 = !DILocation(line: 249, column: 472, scope: !2811)
!2815 = !DILocation(line: 249, column: 374, scope: !2811)
!2816 = !DILocation(line: 249, column: 484, scope: !2811)
!2817 = !DILocation(line: 249, column: 482, scope: !2811)
!2818 = !DILocation(line: 249, column: 372, scope: !2811)
!2819 = !DILocation(line: 249, column: 365, scope: !2811)
!2820 = !DILocation(line: 249, column: 360, scope: !2811)
!2821 = !DILocation(line: 249, column: 356, scope: !2811)
!2822 = !DILocation(line: 249, column: 363, scope: !2811)
!2823 = !DILocation(line: 249, column: 493, scope: !2811)
!2824 = !DILocation(line: 249, column: 350, scope: !2825)
!2825 = !DILexicalBlockFile(scope: !2777, file: !624, discriminator: 8)
!2826 = !DILocation(line: 249, column: 326, scope: !2825)
!2827 = distinct !{!2827, !2828}
!2828 = !DILocation(line: 249, column: 326, scope: !2773)
!2829 = !DILocation(line: 249, column: 502, scope: !2830)
!2830 = !DILexicalBlockFile(scope: !2773, file: !624, discriminator: 9)
!2831 = !DILocation(line: 249, column: 499, scope: !2830)
!2832 = !DILocation(line: 249, column: 523, scope: !2830)
!2833 = !DILocation(line: 249, column: 520, scope: !2830)
!2834 = !DILocation(line: 249, column: 547, scope: !2830)
!2835 = !DILocation(line: 249, column: 544, scope: !2830)
!2836 = !DILocation(line: 249, column: 564, scope: !2830)
!2837 = !DILocation(line: 249, column: 320, scope: !2838)
!2838 = !DILexicalBlockFile(scope: !2766, file: !624, discriminator: 10)
!2839 = !DILocation(line: 249, column: 295, scope: !2838)
!2840 = distinct !{!2840, !2841}
!2841 = !DILocation(line: 249, column: 295, scope: !2730)
!2842 = !DILocation(line: 249, column: 566, scope: !2843)
!2843 = !DILexicalBlockFile(scope: !2730, file: !624, discriminator: 11)
!2844 = distinct !DISubprogram(name: "blend_freeze_8bit", scope: !624, file: !624, line: 257, type: !1531, isLocal: true, isDefinition: true, scopeLine: 257, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!2845 = !DILocalVariable(name: "top", arg: 1, scope: !2844, file: !624, line: 257, type: !900)
!2846 = !DILocation(line: 257, column: 46, scope: !2844)
!2847 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !2844, file: !624, line: 257, type: !902)
!2848 = !DILocation(line: 257, column: 61, scope: !2844)
!2849 = !DILocalVariable(name: "bottom", arg: 3, scope: !2844, file: !624, line: 257, type: !900)
!2850 = !DILocation(line: 257, column: 90, scope: !2844)
!2851 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !2844, file: !624, line: 257, type: !902)
!2852 = !DILocation(line: 257, column: 108, scope: !2844)
!2853 = !DILocalVariable(name: "dst", arg: 5, scope: !2844, file: !624, line: 257, type: !329)
!2854 = !DILocation(line: 257, column: 134, scope: !2844)
!2855 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !2844, file: !624, line: 257, type: !902)
!2856 = !DILocation(line: 257, column: 149, scope: !2844)
!2857 = !DILocalVariable(name: "width", arg: 7, scope: !2844, file: !624, line: 257, type: !902)
!2858 = !DILocation(line: 257, column: 173, scope: !2844)
!2859 = !DILocalVariable(name: "height", arg: 8, scope: !2844, file: !624, line: 257, type: !902)
!2860 = !DILocation(line: 257, column: 190, scope: !2844)
!2861 = !DILocalVariable(name: "param", arg: 9, scope: !2844, file: !624, line: 257, type: !884)
!2862 = !DILocation(line: 257, column: 212, scope: !2844)
!2863 = !DILocalVariable(name: "values", arg: 10, scope: !2844, file: !624, line: 257, type: !544)
!2864 = !DILocation(line: 257, column: 227, scope: !2844)
!2865 = !DILocalVariable(name: "starty", arg: 11, scope: !2844, file: !624, line: 257, type: !238)
!2866 = !DILocation(line: 257, column: 239, scope: !2844)
!2867 = !DILocalVariable(name: "opacity", scope: !2844, file: !624, line: 257, type: !248)
!2868 = !DILocation(line: 257, column: 256, scope: !2844)
!2869 = !DILocation(line: 257, column: 266, scope: !2844)
!2870 = !DILocation(line: 257, column: 273, scope: !2844)
!2871 = !DILocalVariable(name: "i", scope: !2844, file: !624, line: 257, type: !238)
!2872 = !DILocation(line: 257, column: 286, scope: !2844)
!2873 = !DILocalVariable(name: "j", scope: !2844, file: !624, line: 257, type: !238)
!2874 = !DILocation(line: 257, column: 289, scope: !2844)
!2875 = !DILocation(line: 257, column: 299, scope: !2876)
!2876 = distinct !DILexicalBlock(scope: !2844, file: !624, line: 257, column: 292)
!2877 = !DILocation(line: 257, column: 297, scope: !2876)
!2878 = !DILocation(line: 257, column: 304, scope: !2879)
!2879 = !DILexicalBlockFile(scope: !2880, file: !624, discriminator: 1)
!2880 = distinct !DILexicalBlock(scope: !2876, file: !624, line: 257, column: 292)
!2881 = !DILocation(line: 257, column: 308, scope: !2879)
!2882 = !DILocation(line: 257, column: 306, scope: !2879)
!2883 = !DILocation(line: 257, column: 292, scope: !2879)
!2884 = !DILocation(line: 257, column: 330, scope: !2885)
!2885 = !DILexicalBlockFile(scope: !2886, file: !624, discriminator: 2)
!2886 = distinct !DILexicalBlock(scope: !2887, file: !624, line: 257, column: 323)
!2887 = distinct !DILexicalBlock(scope: !2880, file: !624, line: 257, column: 321)
!2888 = !DILocation(line: 257, column: 328, scope: !2885)
!2889 = !DILocation(line: 257, column: 335, scope: !2890)
!2890 = !DILexicalBlockFile(scope: !2891, file: !624, discriminator: 3)
!2891 = distinct !DILexicalBlock(scope: !2886, file: !624, line: 257, column: 323)
!2892 = !DILocation(line: 257, column: 339, scope: !2890)
!2893 = !DILocation(line: 257, column: 337, scope: !2890)
!2894 = !DILocation(line: 257, column: 323, scope: !2890)
!2895 = !DILocation(line: 257, column: 366, scope: !2896)
!2896 = !DILexicalBlockFile(scope: !2897, file: !624, discriminator: 4)
!2897 = distinct !DILexicalBlock(scope: !2891, file: !624, line: 257, column: 351)
!2898 = !DILocation(line: 257, column: 362, scope: !2896)
!2899 = !DILocation(line: 257, column: 381, scope: !2896)
!2900 = !DILocation(line: 257, column: 374, scope: !2896)
!2901 = !DILocation(line: 257, column: 384, scope: !2896)
!2902 = !DILocation(line: 257, column: 373, scope: !2896)
!2903 = !DILocation(line: 257, column: 373, scope: !2904)
!2904 = !DILexicalBlockFile(scope: !2897, file: !624, discriminator: 5)
!2905 = !DILocation(line: 257, column: 416, scope: !2906)
!2906 = !DILexicalBlockFile(scope: !2897, file: !624, discriminator: 6)
!2907 = !DILocation(line: 257, column: 412, scope: !2906)
!2908 = !DILocation(line: 257, column: 410, scope: !2906)
!2909 = !DILocation(line: 257, column: 433, scope: !2906)
!2910 = !DILocation(line: 257, column: 429, scope: !2906)
!2911 = !DILocation(line: 257, column: 427, scope: !2906)
!2912 = !DILocation(line: 257, column: 420, scope: !2906)
!2913 = !DILocation(line: 257, column: 447, scope: !2906)
!2914 = !DILocation(line: 257, column: 440, scope: !2906)
!2915 = !DILocation(line: 257, column: 438, scope: !2906)
!2916 = !DILocation(line: 257, column: 451, scope: !2906)
!2917 = !DILocation(line: 257, column: 403, scope: !2906)
!2918 = !DILocation(line: 257, column: 403, scope: !2919)
!2919 = !DILexicalBlockFile(scope: !2897, file: !624, discriminator: 7)
!2920 = !DILocation(line: 257, column: 482, scope: !2921)
!2921 = !DILexicalBlockFile(scope: !2897, file: !624, discriminator: 8)
!2922 = !DILocation(line: 257, column: 478, scope: !2921)
!2923 = !DILocation(line: 257, column: 476, scope: !2921)
!2924 = !DILocation(line: 257, column: 499, scope: !2921)
!2925 = !DILocation(line: 257, column: 495, scope: !2921)
!2926 = !DILocation(line: 257, column: 493, scope: !2921)
!2927 = !DILocation(line: 257, column: 486, scope: !2921)
!2928 = !DILocation(line: 257, column: 513, scope: !2921)
!2929 = !DILocation(line: 257, column: 506, scope: !2921)
!2930 = !DILocation(line: 257, column: 504, scope: !2921)
!2931 = !DILocation(line: 257, column: 403, scope: !2921)
!2932 = !DILocation(line: 257, column: 403, scope: !2933)
!2933 = !DILexicalBlockFile(scope: !2897, file: !624, discriminator: 9)
!2934 = !DILocation(line: 257, column: 400, scope: !2933)
!2935 = !DILocation(line: 257, column: 373, scope: !2933)
!2936 = !DILocation(line: 257, column: 373, scope: !2937)
!2937 = !DILexicalBlockFile(scope: !2897, file: !624, discriminator: 10)
!2938 = !DILocation(line: 257, column: 525, scope: !2937)
!2939 = !DILocation(line: 257, column: 521, scope: !2937)
!2940 = !DILocation(line: 257, column: 519, scope: !2937)
!2941 = !DILocation(line: 257, column: 371, scope: !2937)
!2942 = !DILocation(line: 257, column: 531, scope: !2937)
!2943 = !DILocation(line: 257, column: 529, scope: !2937)
!2944 = !DILocation(line: 257, column: 369, scope: !2937)
!2945 = !DILocation(line: 257, column: 362, scope: !2937)
!2946 = !DILocation(line: 257, column: 357, scope: !2937)
!2947 = !DILocation(line: 257, column: 353, scope: !2937)
!2948 = !DILocation(line: 257, column: 360, scope: !2937)
!2949 = !DILocation(line: 257, column: 540, scope: !2937)
!2950 = !DILocation(line: 257, column: 347, scope: !2951)
!2951 = !DILexicalBlockFile(scope: !2891, file: !624, discriminator: 11)
!2952 = !DILocation(line: 257, column: 323, scope: !2951)
!2953 = distinct !{!2953, !2954}
!2954 = !DILocation(line: 257, column: 323, scope: !2887)
!2955 = !DILocation(line: 257, column: 549, scope: !2956)
!2956 = !DILexicalBlockFile(scope: !2887, file: !624, discriminator: 12)
!2957 = !DILocation(line: 257, column: 546, scope: !2956)
!2958 = !DILocation(line: 257, column: 570, scope: !2956)
!2959 = !DILocation(line: 257, column: 567, scope: !2956)
!2960 = !DILocation(line: 257, column: 594, scope: !2956)
!2961 = !DILocation(line: 257, column: 591, scope: !2956)
!2962 = !DILocation(line: 257, column: 611, scope: !2956)
!2963 = !DILocation(line: 257, column: 317, scope: !2964)
!2964 = !DILexicalBlockFile(scope: !2880, file: !624, discriminator: 13)
!2965 = !DILocation(line: 257, column: 292, scope: !2964)
!2966 = distinct !{!2966, !2967}
!2967 = !DILocation(line: 257, column: 292, scope: !2844)
!2968 = !DILocation(line: 257, column: 613, scope: !2969)
!2969 = !DILexicalBlockFile(scope: !2844, file: !624, discriminator: 14)
!2970 = distinct !DISubprogram(name: "blend_glow_8bit", scope: !624, file: !624, line: 268, type: !1531, isLocal: true, isDefinition: true, scopeLine: 268, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!2971 = !DILocalVariable(name: "top", arg: 1, scope: !2970, file: !624, line: 268, type: !900)
!2972 = !DILocation(line: 268, column: 44, scope: !2970)
!2973 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !2970, file: !624, line: 268, type: !902)
!2974 = !DILocation(line: 268, column: 59, scope: !2970)
!2975 = !DILocalVariable(name: "bottom", arg: 3, scope: !2970, file: !624, line: 268, type: !900)
!2976 = !DILocation(line: 268, column: 88, scope: !2970)
!2977 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !2970, file: !624, line: 268, type: !902)
!2978 = !DILocation(line: 268, column: 106, scope: !2970)
!2979 = !DILocalVariable(name: "dst", arg: 5, scope: !2970, file: !624, line: 268, type: !329)
!2980 = !DILocation(line: 268, column: 132, scope: !2970)
!2981 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !2970, file: !624, line: 268, type: !902)
!2982 = !DILocation(line: 268, column: 147, scope: !2970)
!2983 = !DILocalVariable(name: "width", arg: 7, scope: !2970, file: !624, line: 268, type: !902)
!2984 = !DILocation(line: 268, column: 171, scope: !2970)
!2985 = !DILocalVariable(name: "height", arg: 8, scope: !2970, file: !624, line: 268, type: !902)
!2986 = !DILocation(line: 268, column: 188, scope: !2970)
!2987 = !DILocalVariable(name: "param", arg: 9, scope: !2970, file: !624, line: 268, type: !884)
!2988 = !DILocation(line: 268, column: 210, scope: !2970)
!2989 = !DILocalVariable(name: "values", arg: 10, scope: !2970, file: !624, line: 268, type: !544)
!2990 = !DILocation(line: 268, column: 225, scope: !2970)
!2991 = !DILocalVariable(name: "starty", arg: 11, scope: !2970, file: !624, line: 268, type: !238)
!2992 = !DILocation(line: 268, column: 237, scope: !2970)
!2993 = !DILocalVariable(name: "opacity", scope: !2970, file: !624, line: 268, type: !248)
!2994 = !DILocation(line: 268, column: 254, scope: !2970)
!2995 = !DILocation(line: 268, column: 264, scope: !2970)
!2996 = !DILocation(line: 268, column: 271, scope: !2970)
!2997 = !DILocalVariable(name: "i", scope: !2970, file: !624, line: 268, type: !238)
!2998 = !DILocation(line: 268, column: 284, scope: !2970)
!2999 = !DILocalVariable(name: "j", scope: !2970, file: !624, line: 268, type: !238)
!3000 = !DILocation(line: 268, column: 287, scope: !2970)
!3001 = !DILocation(line: 268, column: 297, scope: !3002)
!3002 = distinct !DILexicalBlock(scope: !2970, file: !624, line: 268, column: 290)
!3003 = !DILocation(line: 268, column: 295, scope: !3002)
!3004 = !DILocation(line: 268, column: 302, scope: !3005)
!3005 = !DILexicalBlockFile(scope: !3006, file: !624, discriminator: 1)
!3006 = distinct !DILexicalBlock(scope: !3002, file: !624, line: 268, column: 290)
!3007 = !DILocation(line: 268, column: 306, scope: !3005)
!3008 = !DILocation(line: 268, column: 304, scope: !3005)
!3009 = !DILocation(line: 268, column: 290, scope: !3005)
!3010 = !DILocation(line: 268, column: 328, scope: !3011)
!3011 = !DILexicalBlockFile(scope: !3012, file: !624, discriminator: 2)
!3012 = distinct !DILexicalBlock(scope: !3013, file: !624, line: 268, column: 321)
!3013 = distinct !DILexicalBlock(scope: !3006, file: !624, line: 268, column: 319)
!3014 = !DILocation(line: 268, column: 326, scope: !3011)
!3015 = !DILocation(line: 268, column: 333, scope: !3016)
!3016 = !DILexicalBlockFile(scope: !3017, file: !624, discriminator: 3)
!3017 = distinct !DILexicalBlock(scope: !3012, file: !624, line: 268, column: 321)
!3018 = !DILocation(line: 268, column: 337, scope: !3016)
!3019 = !DILocation(line: 268, column: 335, scope: !3016)
!3020 = !DILocation(line: 268, column: 321, scope: !3016)
!3021 = !DILocation(line: 268, column: 364, scope: !3022)
!3022 = !DILexicalBlockFile(scope: !3023, file: !624, discriminator: 4)
!3023 = distinct !DILexicalBlock(scope: !3017, file: !624, line: 268, column: 349)
!3024 = !DILocation(line: 268, column: 360, scope: !3022)
!3025 = !DILocation(line: 268, column: 376, scope: !3022)
!3026 = !DILocation(line: 268, column: 372, scope: !3022)
!3027 = !DILocation(line: 268, column: 379, scope: !3022)
!3028 = !DILocation(line: 268, column: 371, scope: !3022)
!3029 = !DILocation(line: 268, column: 393, scope: !3030)
!3030 = !DILexicalBlockFile(scope: !3023, file: !624, discriminator: 5)
!3031 = !DILocation(line: 268, column: 389, scope: !3030)
!3032 = !DILocation(line: 268, column: 371, scope: !3030)
!3033 = !DILocation(line: 268, column: 416, scope: !3034)
!3034 = !DILexicalBlockFile(scope: !3023, file: !624, discriminator: 6)
!3035 = !DILocation(line: 268, column: 409, scope: !3034)
!3036 = !DILocation(line: 268, column: 428, scope: !3034)
!3037 = !DILocation(line: 268, column: 421, scope: !3034)
!3038 = !DILocation(line: 268, column: 419, scope: !3034)
!3039 = !DILocation(line: 268, column: 444, scope: !3034)
!3040 = !DILocation(line: 268, column: 440, scope: !3034)
!3041 = !DILocation(line: 268, column: 438, scope: !3034)
!3042 = !DILocation(line: 268, column: 431, scope: !3034)
!3043 = !DILocation(line: 268, column: 405, scope: !3034)
!3044 = !DILocation(line: 268, column: 399, scope: !3034)
!3045 = !DILocation(line: 268, column: 461, scope: !3046)
!3046 = !DILexicalBlockFile(scope: !3023, file: !624, discriminator: 7)
!3047 = !DILocation(line: 268, column: 454, scope: !3046)
!3048 = !DILocation(line: 268, column: 473, scope: !3046)
!3049 = !DILocation(line: 268, column: 466, scope: !3046)
!3050 = !DILocation(line: 268, column: 464, scope: !3046)
!3051 = !DILocation(line: 268, column: 489, scope: !3046)
!3052 = !DILocation(line: 268, column: 485, scope: !3046)
!3053 = !DILocation(line: 268, column: 483, scope: !3046)
!3054 = !DILocation(line: 268, column: 476, scope: !3046)
!3055 = !DILocation(line: 268, column: 399, scope: !3046)
!3056 = !DILocation(line: 268, column: 399, scope: !3057)
!3057 = !DILexicalBlockFile(scope: !3023, file: !624, discriminator: 8)
!3058 = !DILocation(line: 268, column: 399, scope: !3059)
!3059 = !DILexicalBlockFile(scope: !3023, file: !624, discriminator: 9)
!3060 = !DILocation(line: 268, column: 371, scope: !3059)
!3061 = !DILocation(line: 268, column: 371, scope: !3062)
!3062 = !DILexicalBlockFile(scope: !3023, file: !624, discriminator: 10)
!3063 = !DILocation(line: 268, column: 511, scope: !3062)
!3064 = !DILocation(line: 268, column: 507, scope: !3062)
!3065 = !DILocation(line: 268, column: 505, scope: !3062)
!3066 = !DILocation(line: 268, column: 369, scope: !3062)
!3067 = !DILocation(line: 268, column: 517, scope: !3062)
!3068 = !DILocation(line: 268, column: 515, scope: !3062)
!3069 = !DILocation(line: 268, column: 367, scope: !3062)
!3070 = !DILocation(line: 268, column: 360, scope: !3062)
!3071 = !DILocation(line: 268, column: 355, scope: !3062)
!3072 = !DILocation(line: 268, column: 351, scope: !3062)
!3073 = !DILocation(line: 268, column: 358, scope: !3062)
!3074 = !DILocation(line: 268, column: 526, scope: !3062)
!3075 = !DILocation(line: 268, column: 345, scope: !3076)
!3076 = !DILexicalBlockFile(scope: !3017, file: !624, discriminator: 11)
!3077 = !DILocation(line: 268, column: 321, scope: !3076)
!3078 = distinct !{!3078, !3079}
!3079 = !DILocation(line: 268, column: 321, scope: !3013)
!3080 = !DILocation(line: 268, column: 535, scope: !3081)
!3081 = !DILexicalBlockFile(scope: !3013, file: !624, discriminator: 12)
!3082 = !DILocation(line: 268, column: 532, scope: !3081)
!3083 = !DILocation(line: 268, column: 556, scope: !3081)
!3084 = !DILocation(line: 268, column: 553, scope: !3081)
!3085 = !DILocation(line: 268, column: 580, scope: !3081)
!3086 = !DILocation(line: 268, column: 577, scope: !3081)
!3087 = !DILocation(line: 268, column: 597, scope: !3081)
!3088 = !DILocation(line: 268, column: 315, scope: !3089)
!3089 = !DILexicalBlockFile(scope: !3006, file: !624, discriminator: 13)
!3090 = !DILocation(line: 268, column: 290, scope: !3089)
!3091 = distinct !{!3091, !3092}
!3092 = !DILocation(line: 268, column: 290, scope: !2970)
!3093 = !DILocation(line: 268, column: 599, scope: !3094)
!3094 = !DILexicalBlockFile(scope: !2970, file: !624, discriminator: 14)
!3095 = distinct !DISubprogram(name: "blend_hardlight_8bit", scope: !624, file: !624, line: 254, type: !1531, isLocal: true, isDefinition: true, scopeLine: 254, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!3096 = !DILocalVariable(name: "top", arg: 1, scope: !3095, file: !624, line: 254, type: !900)
!3097 = !DILocation(line: 254, column: 49, scope: !3095)
!3098 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !3095, file: !624, line: 254, type: !902)
!3099 = !DILocation(line: 254, column: 64, scope: !3095)
!3100 = !DILocalVariable(name: "bottom", arg: 3, scope: !3095, file: !624, line: 254, type: !900)
!3101 = !DILocation(line: 254, column: 93, scope: !3095)
!3102 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !3095, file: !624, line: 254, type: !902)
!3103 = !DILocation(line: 254, column: 111, scope: !3095)
!3104 = !DILocalVariable(name: "dst", arg: 5, scope: !3095, file: !624, line: 254, type: !329)
!3105 = !DILocation(line: 254, column: 137, scope: !3095)
!3106 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !3095, file: !624, line: 254, type: !902)
!3107 = !DILocation(line: 254, column: 152, scope: !3095)
!3108 = !DILocalVariable(name: "width", arg: 7, scope: !3095, file: !624, line: 254, type: !902)
!3109 = !DILocation(line: 254, column: 176, scope: !3095)
!3110 = !DILocalVariable(name: "height", arg: 8, scope: !3095, file: !624, line: 254, type: !902)
!3111 = !DILocation(line: 254, column: 193, scope: !3095)
!3112 = !DILocalVariable(name: "param", arg: 9, scope: !3095, file: !624, line: 254, type: !884)
!3113 = !DILocation(line: 254, column: 215, scope: !3095)
!3114 = !DILocalVariable(name: "values", arg: 10, scope: !3095, file: !624, line: 254, type: !544)
!3115 = !DILocation(line: 254, column: 230, scope: !3095)
!3116 = !DILocalVariable(name: "starty", arg: 11, scope: !3095, file: !624, line: 254, type: !238)
!3117 = !DILocation(line: 254, column: 242, scope: !3095)
!3118 = !DILocalVariable(name: "opacity", scope: !3095, file: !624, line: 254, type: !248)
!3119 = !DILocation(line: 254, column: 259, scope: !3095)
!3120 = !DILocation(line: 254, column: 269, scope: !3095)
!3121 = !DILocation(line: 254, column: 276, scope: !3095)
!3122 = !DILocalVariable(name: "i", scope: !3095, file: !624, line: 254, type: !238)
!3123 = !DILocation(line: 254, column: 289, scope: !3095)
!3124 = !DILocalVariable(name: "j", scope: !3095, file: !624, line: 254, type: !238)
!3125 = !DILocation(line: 254, column: 292, scope: !3095)
!3126 = !DILocation(line: 254, column: 302, scope: !3127)
!3127 = distinct !DILexicalBlock(scope: !3095, file: !624, line: 254, column: 295)
!3128 = !DILocation(line: 254, column: 300, scope: !3127)
!3129 = !DILocation(line: 254, column: 307, scope: !3130)
!3130 = !DILexicalBlockFile(scope: !3131, file: !624, discriminator: 1)
!3131 = distinct !DILexicalBlock(scope: !3127, file: !624, line: 254, column: 295)
!3132 = !DILocation(line: 254, column: 311, scope: !3130)
!3133 = !DILocation(line: 254, column: 309, scope: !3130)
!3134 = !DILocation(line: 254, column: 295, scope: !3130)
!3135 = !DILocation(line: 254, column: 333, scope: !3136)
!3136 = !DILexicalBlockFile(scope: !3137, file: !624, discriminator: 2)
!3137 = distinct !DILexicalBlock(scope: !3138, file: !624, line: 254, column: 326)
!3138 = distinct !DILexicalBlock(scope: !3131, file: !624, line: 254, column: 324)
!3139 = !DILocation(line: 254, column: 331, scope: !3136)
!3140 = !DILocation(line: 254, column: 338, scope: !3141)
!3141 = !DILexicalBlockFile(scope: !3142, file: !624, discriminator: 3)
!3142 = distinct !DILexicalBlock(scope: !3137, file: !624, line: 254, column: 326)
!3143 = !DILocation(line: 254, column: 342, scope: !3141)
!3144 = !DILocation(line: 254, column: 340, scope: !3141)
!3145 = !DILocation(line: 254, column: 326, scope: !3141)
!3146 = !DILocation(line: 254, column: 369, scope: !3147)
!3147 = !DILexicalBlockFile(scope: !3148, file: !624, discriminator: 4)
!3148 = distinct !DILexicalBlock(scope: !3142, file: !624, line: 254, column: 354)
!3149 = !DILocation(line: 254, column: 365, scope: !3147)
!3150 = !DILocation(line: 254, column: 384, scope: !3147)
!3151 = !DILocation(line: 254, column: 377, scope: !3147)
!3152 = !DILocation(line: 254, column: 387, scope: !3147)
!3153 = !DILocation(line: 254, column: 376, scope: !3147)
!3154 = !DILocation(line: 254, column: 413, scope: !3155)
!3155 = !DILexicalBlockFile(scope: !3148, file: !624, discriminator: 5)
!3156 = !DILocation(line: 254, column: 406, scope: !3155)
!3157 = !DILocation(line: 254, column: 405, scope: !3155)
!3158 = !DILocation(line: 254, column: 424, scope: !3155)
!3159 = !DILocation(line: 254, column: 420, scope: !3155)
!3160 = !DILocation(line: 254, column: 419, scope: !3155)
!3161 = !DILocation(line: 254, column: 417, scope: !3155)
!3162 = !DILocation(line: 254, column: 429, scope: !3155)
!3163 = !DILocation(line: 254, column: 401, scope: !3155)
!3164 = !DILocation(line: 254, column: 376, scope: !3155)
!3165 = !DILocation(line: 254, column: 468, scope: !3166)
!3166 = !DILexicalBlockFile(scope: !3148, file: !624, discriminator: 6)
!3167 = !DILocation(line: 254, column: 461, scope: !3166)
!3168 = !DILocation(line: 254, column: 460, scope: !3166)
!3169 = !DILocation(line: 254, column: 458, scope: !3166)
!3170 = !DILocation(line: 254, column: 487, scope: !3166)
!3171 = !DILocation(line: 254, column: 483, scope: !3166)
!3172 = !DILocation(line: 254, column: 482, scope: !3166)
!3173 = !DILocation(line: 254, column: 480, scope: !3166)
!3174 = !DILocation(line: 254, column: 473, scope: !3166)
!3175 = !DILocation(line: 254, column: 492, scope: !3166)
!3176 = !DILocation(line: 254, column: 450, scope: !3166)
!3177 = !DILocation(line: 254, column: 444, scope: !3166)
!3178 = !DILocation(line: 254, column: 376, scope: !3166)
!3179 = !DILocation(line: 254, column: 376, scope: !3180)
!3180 = !DILexicalBlockFile(scope: !3148, file: !624, discriminator: 7)
!3181 = !DILocation(line: 254, column: 507, scope: !3180)
!3182 = !DILocation(line: 254, column: 503, scope: !3180)
!3183 = !DILocation(line: 254, column: 501, scope: !3180)
!3184 = !DILocation(line: 254, column: 374, scope: !3180)
!3185 = !DILocation(line: 254, column: 513, scope: !3180)
!3186 = !DILocation(line: 254, column: 511, scope: !3180)
!3187 = !DILocation(line: 254, column: 372, scope: !3180)
!3188 = !DILocation(line: 254, column: 365, scope: !3180)
!3189 = !DILocation(line: 254, column: 360, scope: !3180)
!3190 = !DILocation(line: 254, column: 356, scope: !3180)
!3191 = !DILocation(line: 254, column: 363, scope: !3180)
!3192 = !DILocation(line: 254, column: 522, scope: !3180)
!3193 = !DILocation(line: 254, column: 350, scope: !3194)
!3194 = !DILexicalBlockFile(scope: !3142, file: !624, discriminator: 8)
!3195 = !DILocation(line: 254, column: 326, scope: !3194)
!3196 = distinct !{!3196, !3197}
!3197 = !DILocation(line: 254, column: 326, scope: !3138)
!3198 = !DILocation(line: 254, column: 531, scope: !3199)
!3199 = !DILexicalBlockFile(scope: !3138, file: !624, discriminator: 9)
!3200 = !DILocation(line: 254, column: 528, scope: !3199)
!3201 = !DILocation(line: 254, column: 552, scope: !3199)
!3202 = !DILocation(line: 254, column: 549, scope: !3199)
!3203 = !DILocation(line: 254, column: 576, scope: !3199)
!3204 = !DILocation(line: 254, column: 573, scope: !3199)
!3205 = !DILocation(line: 254, column: 593, scope: !3199)
!3206 = !DILocation(line: 254, column: 320, scope: !3207)
!3207 = !DILexicalBlockFile(scope: !3131, file: !624, discriminator: 10)
!3208 = !DILocation(line: 254, column: 295, scope: !3207)
!3209 = distinct !{!3209, !3210}
!3210 = !DILocation(line: 254, column: 295, scope: !3095)
!3211 = !DILocation(line: 254, column: 595, scope: !3212)
!3212 = !DILexicalBlockFile(scope: !3095, file: !624, discriminator: 11)
!3213 = distinct !DISubprogram(name: "blend_hardmix_8bit", scope: !624, file: !624, line: 255, type: !1531, isLocal: true, isDefinition: true, scopeLine: 255, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!3214 = !DILocalVariable(name: "top", arg: 1, scope: !3213, file: !624, line: 255, type: !900)
!3215 = !DILocation(line: 255, column: 47, scope: !3213)
!3216 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !3213, file: !624, line: 255, type: !902)
!3217 = !DILocation(line: 255, column: 62, scope: !3213)
!3218 = !DILocalVariable(name: "bottom", arg: 3, scope: !3213, file: !624, line: 255, type: !900)
!3219 = !DILocation(line: 255, column: 91, scope: !3213)
!3220 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !3213, file: !624, line: 255, type: !902)
!3221 = !DILocation(line: 255, column: 109, scope: !3213)
!3222 = !DILocalVariable(name: "dst", arg: 5, scope: !3213, file: !624, line: 255, type: !329)
!3223 = !DILocation(line: 255, column: 135, scope: !3213)
!3224 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !3213, file: !624, line: 255, type: !902)
!3225 = !DILocation(line: 255, column: 150, scope: !3213)
!3226 = !DILocalVariable(name: "width", arg: 7, scope: !3213, file: !624, line: 255, type: !902)
!3227 = !DILocation(line: 255, column: 174, scope: !3213)
!3228 = !DILocalVariable(name: "height", arg: 8, scope: !3213, file: !624, line: 255, type: !902)
!3229 = !DILocation(line: 255, column: 191, scope: !3213)
!3230 = !DILocalVariable(name: "param", arg: 9, scope: !3213, file: !624, line: 255, type: !884)
!3231 = !DILocation(line: 255, column: 213, scope: !3213)
!3232 = !DILocalVariable(name: "values", arg: 10, scope: !3213, file: !624, line: 255, type: !544)
!3233 = !DILocation(line: 255, column: 228, scope: !3213)
!3234 = !DILocalVariable(name: "starty", arg: 11, scope: !3213, file: !624, line: 255, type: !238)
!3235 = !DILocation(line: 255, column: 240, scope: !3213)
!3236 = !DILocalVariable(name: "opacity", scope: !3213, file: !624, line: 255, type: !248)
!3237 = !DILocation(line: 255, column: 257, scope: !3213)
!3238 = !DILocation(line: 255, column: 267, scope: !3213)
!3239 = !DILocation(line: 255, column: 274, scope: !3213)
!3240 = !DILocalVariable(name: "i", scope: !3213, file: !624, line: 255, type: !238)
!3241 = !DILocation(line: 255, column: 287, scope: !3213)
!3242 = !DILocalVariable(name: "j", scope: !3213, file: !624, line: 255, type: !238)
!3243 = !DILocation(line: 255, column: 290, scope: !3213)
!3244 = !DILocation(line: 255, column: 300, scope: !3245)
!3245 = distinct !DILexicalBlock(scope: !3213, file: !624, line: 255, column: 293)
!3246 = !DILocation(line: 255, column: 298, scope: !3245)
!3247 = !DILocation(line: 255, column: 305, scope: !3248)
!3248 = !DILexicalBlockFile(scope: !3249, file: !624, discriminator: 1)
!3249 = distinct !DILexicalBlock(scope: !3245, file: !624, line: 255, column: 293)
!3250 = !DILocation(line: 255, column: 309, scope: !3248)
!3251 = !DILocation(line: 255, column: 307, scope: !3248)
!3252 = !DILocation(line: 255, column: 293, scope: !3248)
!3253 = !DILocation(line: 255, column: 331, scope: !3254)
!3254 = !DILexicalBlockFile(scope: !3255, file: !624, discriminator: 2)
!3255 = distinct !DILexicalBlock(scope: !3256, file: !624, line: 255, column: 324)
!3256 = distinct !DILexicalBlock(scope: !3249, file: !624, line: 255, column: 322)
!3257 = !DILocation(line: 255, column: 329, scope: !3254)
!3258 = !DILocation(line: 255, column: 336, scope: !3259)
!3259 = !DILexicalBlockFile(scope: !3260, file: !624, discriminator: 3)
!3260 = distinct !DILexicalBlock(scope: !3255, file: !624, line: 255, column: 324)
!3261 = !DILocation(line: 255, column: 340, scope: !3259)
!3262 = !DILocation(line: 255, column: 338, scope: !3259)
!3263 = !DILocation(line: 255, column: 324, scope: !3259)
!3264 = !DILocation(line: 255, column: 367, scope: !3265)
!3265 = !DILexicalBlockFile(scope: !3266, file: !624, discriminator: 4)
!3266 = distinct !DILexicalBlock(scope: !3260, file: !624, line: 255, column: 352)
!3267 = !DILocation(line: 255, column: 363, scope: !3265)
!3268 = !DILocation(line: 255, column: 379, scope: !3265)
!3269 = !DILocation(line: 255, column: 375, scope: !3265)
!3270 = !DILocation(line: 255, column: 398, scope: !3265)
!3271 = !DILocation(line: 255, column: 391, scope: !3265)
!3272 = !DILocation(line: 255, column: 389, scope: !3265)
!3273 = !DILocation(line: 255, column: 382, scope: !3265)
!3274 = !DILocation(line: 255, column: 374, scope: !3265)
!3275 = !DILocation(line: 255, column: 419, scope: !3265)
!3276 = !DILocation(line: 255, column: 415, scope: !3265)
!3277 = !DILocation(line: 255, column: 413, scope: !3265)
!3278 = !DILocation(line: 255, column: 372, scope: !3265)
!3279 = !DILocation(line: 255, column: 425, scope: !3265)
!3280 = !DILocation(line: 255, column: 423, scope: !3265)
!3281 = !DILocation(line: 255, column: 370, scope: !3265)
!3282 = !DILocation(line: 255, column: 358, scope: !3265)
!3283 = !DILocation(line: 255, column: 354, scope: !3265)
!3284 = !DILocation(line: 255, column: 361, scope: !3265)
!3285 = !DILocation(line: 255, column: 434, scope: !3265)
!3286 = !DILocation(line: 255, column: 348, scope: !3287)
!3287 = !DILexicalBlockFile(scope: !3260, file: !624, discriminator: 5)
!3288 = !DILocation(line: 255, column: 324, scope: !3287)
!3289 = distinct !{!3289, !3290}
!3290 = !DILocation(line: 255, column: 324, scope: !3256)
!3291 = !DILocation(line: 255, column: 443, scope: !3292)
!3292 = !DILexicalBlockFile(scope: !3256, file: !624, discriminator: 6)
!3293 = !DILocation(line: 255, column: 440, scope: !3292)
!3294 = !DILocation(line: 255, column: 464, scope: !3292)
!3295 = !DILocation(line: 255, column: 461, scope: !3292)
!3296 = !DILocation(line: 255, column: 488, scope: !3292)
!3297 = !DILocation(line: 255, column: 485, scope: !3292)
!3298 = !DILocation(line: 255, column: 505, scope: !3292)
!3299 = !DILocation(line: 255, column: 318, scope: !3300)
!3300 = !DILexicalBlockFile(scope: !3249, file: !624, discriminator: 7)
!3301 = !DILocation(line: 255, column: 293, scope: !3300)
!3302 = distinct !{!3302, !3303}
!3303 = !DILocation(line: 255, column: 293, scope: !3213)
!3304 = !DILocation(line: 255, column: 507, scope: !3305)
!3305 = !DILexicalBlockFile(scope: !3213, file: !624, discriminator: 8)
!3306 = distinct !DISubprogram(name: "blend_heat_8bit", scope: !624, file: !624, line: 256, type: !1531, isLocal: true, isDefinition: true, scopeLine: 256, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!3307 = !DILocalVariable(name: "top", arg: 1, scope: !3306, file: !624, line: 256, type: !900)
!3308 = !DILocation(line: 256, column: 44, scope: !3306)
!3309 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !3306, file: !624, line: 256, type: !902)
!3310 = !DILocation(line: 256, column: 59, scope: !3306)
!3311 = !DILocalVariable(name: "bottom", arg: 3, scope: !3306, file: !624, line: 256, type: !900)
!3312 = !DILocation(line: 256, column: 88, scope: !3306)
!3313 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !3306, file: !624, line: 256, type: !902)
!3314 = !DILocation(line: 256, column: 106, scope: !3306)
!3315 = !DILocalVariable(name: "dst", arg: 5, scope: !3306, file: !624, line: 256, type: !329)
!3316 = !DILocation(line: 256, column: 132, scope: !3306)
!3317 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !3306, file: !624, line: 256, type: !902)
!3318 = !DILocation(line: 256, column: 147, scope: !3306)
!3319 = !DILocalVariable(name: "width", arg: 7, scope: !3306, file: !624, line: 256, type: !902)
!3320 = !DILocation(line: 256, column: 171, scope: !3306)
!3321 = !DILocalVariable(name: "height", arg: 8, scope: !3306, file: !624, line: 256, type: !902)
!3322 = !DILocation(line: 256, column: 188, scope: !3306)
!3323 = !DILocalVariable(name: "param", arg: 9, scope: !3306, file: !624, line: 256, type: !884)
!3324 = !DILocation(line: 256, column: 210, scope: !3306)
!3325 = !DILocalVariable(name: "values", arg: 10, scope: !3306, file: !624, line: 256, type: !544)
!3326 = !DILocation(line: 256, column: 225, scope: !3306)
!3327 = !DILocalVariable(name: "starty", arg: 11, scope: !3306, file: !624, line: 256, type: !238)
!3328 = !DILocation(line: 256, column: 237, scope: !3306)
!3329 = !DILocalVariable(name: "opacity", scope: !3306, file: !624, line: 256, type: !248)
!3330 = !DILocation(line: 256, column: 254, scope: !3306)
!3331 = !DILocation(line: 256, column: 264, scope: !3306)
!3332 = !DILocation(line: 256, column: 271, scope: !3306)
!3333 = !DILocalVariable(name: "i", scope: !3306, file: !624, line: 256, type: !238)
!3334 = !DILocation(line: 256, column: 284, scope: !3306)
!3335 = !DILocalVariable(name: "j", scope: !3306, file: !624, line: 256, type: !238)
!3336 = !DILocation(line: 256, column: 287, scope: !3306)
!3337 = !DILocation(line: 256, column: 297, scope: !3338)
!3338 = distinct !DILexicalBlock(scope: !3306, file: !624, line: 256, column: 290)
!3339 = !DILocation(line: 256, column: 295, scope: !3338)
!3340 = !DILocation(line: 256, column: 302, scope: !3341)
!3341 = !DILexicalBlockFile(scope: !3342, file: !624, discriminator: 1)
!3342 = distinct !DILexicalBlock(scope: !3338, file: !624, line: 256, column: 290)
!3343 = !DILocation(line: 256, column: 306, scope: !3341)
!3344 = !DILocation(line: 256, column: 304, scope: !3341)
!3345 = !DILocation(line: 256, column: 290, scope: !3341)
!3346 = !DILocation(line: 256, column: 328, scope: !3347)
!3347 = !DILexicalBlockFile(scope: !3348, file: !624, discriminator: 2)
!3348 = distinct !DILexicalBlock(scope: !3349, file: !624, line: 256, column: 321)
!3349 = distinct !DILexicalBlock(scope: !3342, file: !624, line: 256, column: 319)
!3350 = !DILocation(line: 256, column: 326, scope: !3347)
!3351 = !DILocation(line: 256, column: 333, scope: !3352)
!3352 = !DILexicalBlockFile(scope: !3353, file: !624, discriminator: 3)
!3353 = distinct !DILexicalBlock(scope: !3348, file: !624, line: 256, column: 321)
!3354 = !DILocation(line: 256, column: 337, scope: !3352)
!3355 = !DILocation(line: 256, column: 335, scope: !3352)
!3356 = !DILocation(line: 256, column: 321, scope: !3352)
!3357 = !DILocation(line: 256, column: 364, scope: !3358)
!3358 = !DILexicalBlockFile(scope: !3359, file: !624, discriminator: 4)
!3359 = distinct !DILexicalBlock(scope: !3353, file: !624, line: 256, column: 349)
!3360 = !DILocation(line: 256, column: 360, scope: !3358)
!3361 = !DILocation(line: 256, column: 376, scope: !3358)
!3362 = !DILocation(line: 256, column: 372, scope: !3358)
!3363 = !DILocation(line: 256, column: 379, scope: !3358)
!3364 = !DILocation(line: 256, column: 371, scope: !3358)
!3365 = !DILocation(line: 256, column: 371, scope: !3366)
!3366 = !DILexicalBlockFile(scope: !3359, file: !624, discriminator: 5)
!3367 = !DILocation(line: 256, column: 414, scope: !3368)
!3368 = !DILexicalBlockFile(scope: !3359, file: !624, discriminator: 6)
!3369 = !DILocation(line: 256, column: 407, scope: !3368)
!3370 = !DILocation(line: 256, column: 405, scope: !3368)
!3371 = !DILocation(line: 256, column: 434, scope: !3368)
!3372 = !DILocation(line: 256, column: 427, scope: !3368)
!3373 = !DILocation(line: 256, column: 425, scope: !3368)
!3374 = !DILocation(line: 256, column: 418, scope: !3368)
!3375 = !DILocation(line: 256, column: 445, scope: !3368)
!3376 = !DILocation(line: 256, column: 441, scope: !3368)
!3377 = !DILocation(line: 256, column: 439, scope: !3368)
!3378 = !DILocation(line: 256, column: 449, scope: !3368)
!3379 = !DILocation(line: 256, column: 398, scope: !3368)
!3380 = !DILocation(line: 256, column: 398, scope: !3381)
!3381 = !DILexicalBlockFile(scope: !3359, file: !624, discriminator: 7)
!3382 = !DILocation(line: 256, column: 483, scope: !3383)
!3383 = !DILexicalBlockFile(scope: !3359, file: !624, discriminator: 8)
!3384 = !DILocation(line: 256, column: 476, scope: !3383)
!3385 = !DILocation(line: 256, column: 474, scope: !3383)
!3386 = !DILocation(line: 256, column: 503, scope: !3383)
!3387 = !DILocation(line: 256, column: 496, scope: !3383)
!3388 = !DILocation(line: 256, column: 494, scope: !3383)
!3389 = !DILocation(line: 256, column: 487, scope: !3383)
!3390 = !DILocation(line: 256, column: 514, scope: !3383)
!3391 = !DILocation(line: 256, column: 510, scope: !3383)
!3392 = !DILocation(line: 256, column: 508, scope: !3383)
!3393 = !DILocation(line: 256, column: 398, scope: !3383)
!3394 = !DILocation(line: 256, column: 398, scope: !3395)
!3395 = !DILexicalBlockFile(scope: !3359, file: !624, discriminator: 9)
!3396 = !DILocation(line: 256, column: 395, scope: !3395)
!3397 = !DILocation(line: 256, column: 371, scope: !3395)
!3398 = !DILocation(line: 256, column: 371, scope: !3399)
!3399 = !DILexicalBlockFile(scope: !3359, file: !624, discriminator: 10)
!3400 = !DILocation(line: 256, column: 526, scope: !3399)
!3401 = !DILocation(line: 256, column: 522, scope: !3399)
!3402 = !DILocation(line: 256, column: 520, scope: !3399)
!3403 = !DILocation(line: 256, column: 369, scope: !3399)
!3404 = !DILocation(line: 256, column: 532, scope: !3399)
!3405 = !DILocation(line: 256, column: 530, scope: !3399)
!3406 = !DILocation(line: 256, column: 367, scope: !3399)
!3407 = !DILocation(line: 256, column: 360, scope: !3399)
!3408 = !DILocation(line: 256, column: 355, scope: !3399)
!3409 = !DILocation(line: 256, column: 351, scope: !3399)
!3410 = !DILocation(line: 256, column: 358, scope: !3399)
!3411 = !DILocation(line: 256, column: 541, scope: !3399)
!3412 = !DILocation(line: 256, column: 345, scope: !3413)
!3413 = !DILexicalBlockFile(scope: !3353, file: !624, discriminator: 11)
!3414 = !DILocation(line: 256, column: 321, scope: !3413)
!3415 = distinct !{!3415, !3416}
!3416 = !DILocation(line: 256, column: 321, scope: !3349)
!3417 = !DILocation(line: 256, column: 550, scope: !3418)
!3418 = !DILexicalBlockFile(scope: !3349, file: !624, discriminator: 12)
!3419 = !DILocation(line: 256, column: 547, scope: !3418)
!3420 = !DILocation(line: 256, column: 571, scope: !3418)
!3421 = !DILocation(line: 256, column: 568, scope: !3418)
!3422 = !DILocation(line: 256, column: 595, scope: !3418)
!3423 = !DILocation(line: 256, column: 592, scope: !3418)
!3424 = !DILocation(line: 256, column: 612, scope: !3418)
!3425 = !DILocation(line: 256, column: 315, scope: !3426)
!3426 = !DILexicalBlockFile(scope: !3342, file: !624, discriminator: 13)
!3427 = !DILocation(line: 256, column: 290, scope: !3426)
!3428 = distinct !{!3428, !3429}
!3429 = !DILocation(line: 256, column: 290, scope: !3306)
!3430 = !DILocation(line: 256, column: 614, scope: !3431)
!3431 = !DILexicalBlockFile(scope: !3306, file: !624, discriminator: 14)
!3432 = distinct !DISubprogram(name: "blend_lighten_8bit", scope: !624, file: !624, line: 259, type: !1531, isLocal: true, isDefinition: true, scopeLine: 259, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!3433 = !DILocalVariable(name: "top", arg: 1, scope: !3432, file: !624, line: 259, type: !900)
!3434 = !DILocation(line: 259, column: 47, scope: !3432)
!3435 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !3432, file: !624, line: 259, type: !902)
!3436 = !DILocation(line: 259, column: 62, scope: !3432)
!3437 = !DILocalVariable(name: "bottom", arg: 3, scope: !3432, file: !624, line: 259, type: !900)
!3438 = !DILocation(line: 259, column: 91, scope: !3432)
!3439 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !3432, file: !624, line: 259, type: !902)
!3440 = !DILocation(line: 259, column: 109, scope: !3432)
!3441 = !DILocalVariable(name: "dst", arg: 5, scope: !3432, file: !624, line: 259, type: !329)
!3442 = !DILocation(line: 259, column: 135, scope: !3432)
!3443 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !3432, file: !624, line: 259, type: !902)
!3444 = !DILocation(line: 259, column: 150, scope: !3432)
!3445 = !DILocalVariable(name: "width", arg: 7, scope: !3432, file: !624, line: 259, type: !902)
!3446 = !DILocation(line: 259, column: 174, scope: !3432)
!3447 = !DILocalVariable(name: "height", arg: 8, scope: !3432, file: !624, line: 259, type: !902)
!3448 = !DILocation(line: 259, column: 191, scope: !3432)
!3449 = !DILocalVariable(name: "param", arg: 9, scope: !3432, file: !624, line: 259, type: !884)
!3450 = !DILocation(line: 259, column: 213, scope: !3432)
!3451 = !DILocalVariable(name: "values", arg: 10, scope: !3432, file: !624, line: 259, type: !544)
!3452 = !DILocation(line: 259, column: 228, scope: !3432)
!3453 = !DILocalVariable(name: "starty", arg: 11, scope: !3432, file: !624, line: 259, type: !238)
!3454 = !DILocation(line: 259, column: 240, scope: !3432)
!3455 = !DILocalVariable(name: "opacity", scope: !3432, file: !624, line: 259, type: !248)
!3456 = !DILocation(line: 259, column: 257, scope: !3432)
!3457 = !DILocation(line: 259, column: 267, scope: !3432)
!3458 = !DILocation(line: 259, column: 274, scope: !3432)
!3459 = !DILocalVariable(name: "i", scope: !3432, file: !624, line: 259, type: !238)
!3460 = !DILocation(line: 259, column: 287, scope: !3432)
!3461 = !DILocalVariable(name: "j", scope: !3432, file: !624, line: 259, type: !238)
!3462 = !DILocation(line: 259, column: 290, scope: !3432)
!3463 = !DILocation(line: 259, column: 300, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3432, file: !624, line: 259, column: 293)
!3465 = !DILocation(line: 259, column: 298, scope: !3464)
!3466 = !DILocation(line: 259, column: 305, scope: !3467)
!3467 = !DILexicalBlockFile(scope: !3468, file: !624, discriminator: 1)
!3468 = distinct !DILexicalBlock(scope: !3464, file: !624, line: 259, column: 293)
!3469 = !DILocation(line: 259, column: 309, scope: !3467)
!3470 = !DILocation(line: 259, column: 307, scope: !3467)
!3471 = !DILocation(line: 259, column: 293, scope: !3467)
!3472 = !DILocation(line: 259, column: 331, scope: !3473)
!3473 = !DILexicalBlockFile(scope: !3474, file: !624, discriminator: 2)
!3474 = distinct !DILexicalBlock(scope: !3475, file: !624, line: 259, column: 324)
!3475 = distinct !DILexicalBlock(scope: !3468, file: !624, line: 259, column: 322)
!3476 = !DILocation(line: 259, column: 329, scope: !3473)
!3477 = !DILocation(line: 259, column: 336, scope: !3478)
!3478 = !DILexicalBlockFile(scope: !3479, file: !624, discriminator: 3)
!3479 = distinct !DILexicalBlock(scope: !3474, file: !624, line: 259, column: 324)
!3480 = !DILocation(line: 259, column: 340, scope: !3478)
!3481 = !DILocation(line: 259, column: 338, scope: !3478)
!3482 = !DILocation(line: 259, column: 324, scope: !3478)
!3483 = !DILocation(line: 259, column: 367, scope: !3484)
!3484 = !DILexicalBlockFile(scope: !3485, file: !624, discriminator: 4)
!3485 = distinct !DILexicalBlock(scope: !3479, file: !624, line: 259, column: 352)
!3486 = !DILocation(line: 259, column: 363, scope: !3484)
!3487 = !DILocation(line: 259, column: 380, scope: !3484)
!3488 = !DILocation(line: 259, column: 376, scope: !3484)
!3489 = !DILocation(line: 259, column: 375, scope: !3484)
!3490 = !DILocation(line: 259, column: 394, scope: !3484)
!3491 = !DILocation(line: 259, column: 387, scope: !3484)
!3492 = !DILocation(line: 259, column: 386, scope: !3484)
!3493 = !DILocation(line: 259, column: 384, scope: !3484)
!3494 = !DILocation(line: 259, column: 405, scope: !3495)
!3495 = !DILexicalBlockFile(scope: !3485, file: !624, discriminator: 5)
!3496 = !DILocation(line: 259, column: 401, scope: !3495)
!3497 = !DILocation(line: 259, column: 400, scope: !3495)
!3498 = !DILocation(line: 259, column: 375, scope: !3495)
!3499 = !DILocation(line: 259, column: 419, scope: !3500)
!3500 = !DILexicalBlockFile(scope: !3485, file: !624, discriminator: 6)
!3501 = !DILocation(line: 259, column: 412, scope: !3500)
!3502 = !DILocation(line: 259, column: 411, scope: !3500)
!3503 = !DILocation(line: 259, column: 375, scope: !3500)
!3504 = !DILocation(line: 259, column: 375, scope: !3505)
!3505 = !DILexicalBlockFile(scope: !3485, file: !624, discriminator: 7)
!3506 = !DILocation(line: 259, column: 431, scope: !3505)
!3507 = !DILocation(line: 259, column: 427, scope: !3505)
!3508 = !DILocation(line: 259, column: 425, scope: !3505)
!3509 = !DILocation(line: 259, column: 372, scope: !3505)
!3510 = !DILocation(line: 259, column: 437, scope: !3505)
!3511 = !DILocation(line: 259, column: 435, scope: !3505)
!3512 = !DILocation(line: 259, column: 370, scope: !3505)
!3513 = !DILocation(line: 259, column: 363, scope: !3505)
!3514 = !DILocation(line: 259, column: 358, scope: !3505)
!3515 = !DILocation(line: 259, column: 354, scope: !3505)
!3516 = !DILocation(line: 259, column: 361, scope: !3505)
!3517 = !DILocation(line: 259, column: 446, scope: !3505)
!3518 = !DILocation(line: 259, column: 348, scope: !3519)
!3519 = !DILexicalBlockFile(scope: !3479, file: !624, discriminator: 8)
!3520 = !DILocation(line: 259, column: 324, scope: !3519)
!3521 = distinct !{!3521, !3522}
!3522 = !DILocation(line: 259, column: 324, scope: !3475)
!3523 = !DILocation(line: 259, column: 455, scope: !3524)
!3524 = !DILexicalBlockFile(scope: !3475, file: !624, discriminator: 9)
!3525 = !DILocation(line: 259, column: 452, scope: !3524)
!3526 = !DILocation(line: 259, column: 476, scope: !3524)
!3527 = !DILocation(line: 259, column: 473, scope: !3524)
!3528 = !DILocation(line: 259, column: 500, scope: !3524)
!3529 = !DILocation(line: 259, column: 497, scope: !3524)
!3530 = !DILocation(line: 259, column: 517, scope: !3524)
!3531 = !DILocation(line: 259, column: 318, scope: !3532)
!3532 = !DILexicalBlockFile(scope: !3468, file: !624, discriminator: 10)
!3533 = !DILocation(line: 259, column: 293, scope: !3532)
!3534 = distinct !{!3534, !3535}
!3535 = !DILocation(line: 259, column: 293, scope: !3432)
!3536 = !DILocation(line: 259, column: 519, scope: !3537)
!3537 = !DILexicalBlockFile(scope: !3432, file: !624, discriminator: 11)
!3538 = distinct !DISubprogram(name: "blend_linearlight_8bit", scope: !624, file: !624, line: 273, type: !1531, isLocal: true, isDefinition: true, scopeLine: 273, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!3539 = !DILocation(line: 159, column: 97, scope: !1639, inlinedAt: !3540)
!3540 = distinct !DILocation(line: 273, column: 378, scope: !3541)
!3541 = !DILexicalBlockFile(scope: !3542, file: !624, discriminator: 7)
!3542 = distinct !DILexicalBlock(scope: !3543, file: !624, line: 273, column: 356)
!3543 = distinct !DILexicalBlock(scope: !3544, file: !624, line: 273, column: 328)
!3544 = distinct !DILexicalBlock(scope: !3545, file: !624, line: 273, column: 328)
!3545 = distinct !DILexicalBlock(scope: !3546, file: !624, line: 273, column: 326)
!3546 = distinct !DILexicalBlock(scope: !3547, file: !624, line: 273, column: 297)
!3547 = distinct !DILexicalBlock(scope: !3538, file: !624, line: 273, column: 297)
!3548 = !DILocalVariable(name: "top", arg: 1, scope: !3538, file: !624, line: 273, type: !900)
!3549 = !DILocation(line: 273, column: 51, scope: !3538)
!3550 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !3538, file: !624, line: 273, type: !902)
!3551 = !DILocation(line: 273, column: 66, scope: !3538)
!3552 = !DILocalVariable(name: "bottom", arg: 3, scope: !3538, file: !624, line: 273, type: !900)
!3553 = !DILocation(line: 273, column: 95, scope: !3538)
!3554 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !3538, file: !624, line: 273, type: !902)
!3555 = !DILocation(line: 273, column: 113, scope: !3538)
!3556 = !DILocalVariable(name: "dst", arg: 5, scope: !3538, file: !624, line: 273, type: !329)
!3557 = !DILocation(line: 273, column: 139, scope: !3538)
!3558 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !3538, file: !624, line: 273, type: !902)
!3559 = !DILocation(line: 273, column: 154, scope: !3538)
!3560 = !DILocalVariable(name: "width", arg: 7, scope: !3538, file: !624, line: 273, type: !902)
!3561 = !DILocation(line: 273, column: 178, scope: !3538)
!3562 = !DILocalVariable(name: "height", arg: 8, scope: !3538, file: !624, line: 273, type: !902)
!3563 = !DILocation(line: 273, column: 195, scope: !3538)
!3564 = !DILocalVariable(name: "param", arg: 9, scope: !3538, file: !624, line: 273, type: !884)
!3565 = !DILocation(line: 273, column: 217, scope: !3538)
!3566 = !DILocalVariable(name: "values", arg: 10, scope: !3538, file: !624, line: 273, type: !544)
!3567 = !DILocation(line: 273, column: 232, scope: !3538)
!3568 = !DILocalVariable(name: "starty", arg: 11, scope: !3538, file: !624, line: 273, type: !238)
!3569 = !DILocation(line: 273, column: 244, scope: !3538)
!3570 = !DILocalVariable(name: "opacity", scope: !3538, file: !624, line: 273, type: !248)
!3571 = !DILocation(line: 273, column: 261, scope: !3538)
!3572 = !DILocation(line: 273, column: 271, scope: !3538)
!3573 = !DILocation(line: 273, column: 278, scope: !3538)
!3574 = !DILocalVariable(name: "i", scope: !3538, file: !624, line: 273, type: !238)
!3575 = !DILocation(line: 273, column: 291, scope: !3538)
!3576 = !DILocalVariable(name: "j", scope: !3538, file: !624, line: 273, type: !238)
!3577 = !DILocation(line: 273, column: 294, scope: !3538)
!3578 = !DILocation(line: 273, column: 304, scope: !3547)
!3579 = !DILocation(line: 273, column: 302, scope: !3547)
!3580 = !DILocation(line: 273, column: 309, scope: !3581)
!3581 = !DILexicalBlockFile(scope: !3546, file: !624, discriminator: 1)
!3582 = !DILocation(line: 273, column: 313, scope: !3581)
!3583 = !DILocation(line: 273, column: 311, scope: !3581)
!3584 = !DILocation(line: 273, column: 297, scope: !3581)
!3585 = !DILocation(line: 273, column: 335, scope: !3586)
!3586 = !DILexicalBlockFile(scope: !3544, file: !624, discriminator: 2)
!3587 = !DILocation(line: 273, column: 333, scope: !3586)
!3588 = !DILocation(line: 273, column: 340, scope: !3589)
!3589 = !DILexicalBlockFile(scope: !3543, file: !624, discriminator: 3)
!3590 = !DILocation(line: 273, column: 344, scope: !3589)
!3591 = !DILocation(line: 273, column: 342, scope: !3589)
!3592 = !DILocation(line: 273, column: 328, scope: !3589)
!3593 = !DILocation(line: 273, column: 371, scope: !3594)
!3594 = !DILexicalBlockFile(scope: !3542, file: !624, discriminator: 4)
!3595 = !DILocation(line: 273, column: 367, scope: !3594)
!3596 = !DILocation(line: 273, column: 402, scope: !3594)
!3597 = !DILocation(line: 273, column: 395, scope: !3594)
!3598 = !DILocation(line: 273, column: 405, scope: !3594)
!3599 = !DILocation(line: 273, column: 394, scope: !3594)
!3600 = !DILocation(line: 273, column: 421, scope: !3601)
!3601 = !DILexicalBlockFile(scope: !3542, file: !624, discriminator: 5)
!3602 = !DILocation(line: 273, column: 414, scope: !3601)
!3603 = !DILocation(line: 273, column: 434, scope: !3601)
!3604 = !DILocation(line: 273, column: 430, scope: !3601)
!3605 = !DILocation(line: 273, column: 428, scope: !3601)
!3606 = !DILocation(line: 273, column: 424, scope: !3601)
!3607 = !DILocation(line: 273, column: 437, scope: !3601)
!3608 = !DILocation(line: 273, column: 394, scope: !3601)
!3609 = !DILocation(line: 273, column: 452, scope: !3610)
!3610 = !DILexicalBlockFile(scope: !3542, file: !624, discriminator: 6)
!3611 = !DILocation(line: 273, column: 445, scope: !3610)
!3612 = !DILocation(line: 273, column: 466, scope: !3610)
!3613 = !DILocation(line: 273, column: 462, scope: !3610)
!3614 = !DILocation(line: 273, column: 469, scope: !3610)
!3615 = !DILocation(line: 273, column: 459, scope: !3610)
!3616 = !DILocation(line: 273, column: 455, scope: !3610)
!3617 = !DILocation(line: 273, column: 394, scope: !3610)
!3618 = !DILocation(line: 273, column: 394, scope: !3541)
!3619 = !DILocation(line: 273, column: 378, scope: !3541)
!3620 = !DILocation(line: 161, column: 9, scope: !1707, inlinedAt: !3540)
!3621 = !DILocation(line: 161, column: 10, scope: !1707, inlinedAt: !3540)
!3622 = !DILocation(line: 161, column: 9, scope: !1639, inlinedAt: !3540)
!3623 = !DILocation(line: 161, column: 29, scope: !1711, inlinedAt: !3540)
!3624 = !DILocation(line: 161, column: 28, scope: !1711, inlinedAt: !3540)
!3625 = !DILocation(line: 161, column: 31, scope: !1711, inlinedAt: !3540)
!3626 = !DILocation(line: 161, column: 27, scope: !1711, inlinedAt: !3540)
!3627 = !DILocation(line: 161, column: 20, scope: !1711, inlinedAt: !3540)
!3628 = !DILocation(line: 162, column: 17, scope: !1707, inlinedAt: !3540)
!3629 = !DILocation(line: 162, column: 10, scope: !1707, inlinedAt: !3540)
!3630 = !DILocation(line: 163, column: 1, scope: !1639, inlinedAt: !3540)
!3631 = !DILocation(line: 273, column: 377, scope: !3541)
!3632 = !DILocation(line: 273, column: 484, scope: !3541)
!3633 = !DILocation(line: 273, column: 480, scope: !3541)
!3634 = !DILocation(line: 273, column: 478, scope: !3541)
!3635 = !DILocation(line: 273, column: 376, scope: !3541)
!3636 = !DILocation(line: 273, column: 490, scope: !3541)
!3637 = !DILocation(line: 273, column: 488, scope: !3541)
!3638 = !DILocation(line: 273, column: 374, scope: !3541)
!3639 = !DILocation(line: 273, column: 367, scope: !3541)
!3640 = !DILocation(line: 273, column: 362, scope: !3541)
!3641 = !DILocation(line: 273, column: 358, scope: !3541)
!3642 = !DILocation(line: 273, column: 365, scope: !3541)
!3643 = !DILocation(line: 273, column: 499, scope: !3541)
!3644 = !DILocation(line: 273, column: 352, scope: !3645)
!3645 = !DILexicalBlockFile(scope: !3543, file: !624, discriminator: 8)
!3646 = !DILocation(line: 273, column: 328, scope: !3645)
!3647 = distinct !{!3647, !3648}
!3648 = !DILocation(line: 273, column: 328, scope: !3545)
!3649 = !DILocation(line: 273, column: 508, scope: !3650)
!3650 = !DILexicalBlockFile(scope: !3545, file: !624, discriminator: 9)
!3651 = !DILocation(line: 273, column: 505, scope: !3650)
!3652 = !DILocation(line: 273, column: 529, scope: !3650)
!3653 = !DILocation(line: 273, column: 526, scope: !3650)
!3654 = !DILocation(line: 273, column: 553, scope: !3650)
!3655 = !DILocation(line: 273, column: 550, scope: !3650)
!3656 = !DILocation(line: 273, column: 570, scope: !3650)
!3657 = !DILocation(line: 273, column: 322, scope: !3658)
!3658 = !DILexicalBlockFile(scope: !3546, file: !624, discriminator: 10)
!3659 = !DILocation(line: 273, column: 297, scope: !3658)
!3660 = distinct !{!3660, !3661}
!3661 = !DILocation(line: 273, column: 297, scope: !3538)
!3662 = !DILocation(line: 273, column: 572, scope: !3663)
!3663 = !DILexicalBlockFile(scope: !3538, file: !624, discriminator: 11)
!3664 = distinct !DISubprogram(name: "blend_multiply_8bit", scope: !624, file: !624, line: 246, type: !1531, isLocal: true, isDefinition: true, scopeLine: 246, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!3665 = !DILocalVariable(name: "top", arg: 1, scope: !3664, file: !624, line: 246, type: !900)
!3666 = !DILocation(line: 246, column: 48, scope: !3664)
!3667 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !3664, file: !624, line: 246, type: !902)
!3668 = !DILocation(line: 246, column: 63, scope: !3664)
!3669 = !DILocalVariable(name: "bottom", arg: 3, scope: !3664, file: !624, line: 246, type: !900)
!3670 = !DILocation(line: 246, column: 92, scope: !3664)
!3671 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !3664, file: !624, line: 246, type: !902)
!3672 = !DILocation(line: 246, column: 110, scope: !3664)
!3673 = !DILocalVariable(name: "dst", arg: 5, scope: !3664, file: !624, line: 246, type: !329)
!3674 = !DILocation(line: 246, column: 136, scope: !3664)
!3675 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !3664, file: !624, line: 246, type: !902)
!3676 = !DILocation(line: 246, column: 151, scope: !3664)
!3677 = !DILocalVariable(name: "width", arg: 7, scope: !3664, file: !624, line: 246, type: !902)
!3678 = !DILocation(line: 246, column: 175, scope: !3664)
!3679 = !DILocalVariable(name: "height", arg: 8, scope: !3664, file: !624, line: 246, type: !902)
!3680 = !DILocation(line: 246, column: 192, scope: !3664)
!3681 = !DILocalVariable(name: "param", arg: 9, scope: !3664, file: !624, line: 246, type: !884)
!3682 = !DILocation(line: 246, column: 214, scope: !3664)
!3683 = !DILocalVariable(name: "values", arg: 10, scope: !3664, file: !624, line: 246, type: !544)
!3684 = !DILocation(line: 246, column: 229, scope: !3664)
!3685 = !DILocalVariable(name: "starty", arg: 11, scope: !3664, file: !624, line: 246, type: !238)
!3686 = !DILocation(line: 246, column: 241, scope: !3664)
!3687 = !DILocalVariable(name: "opacity", scope: !3664, file: !624, line: 246, type: !248)
!3688 = !DILocation(line: 246, column: 258, scope: !3664)
!3689 = !DILocation(line: 246, column: 268, scope: !3664)
!3690 = !DILocation(line: 246, column: 275, scope: !3664)
!3691 = !DILocalVariable(name: "i", scope: !3664, file: !624, line: 246, type: !238)
!3692 = !DILocation(line: 246, column: 288, scope: !3664)
!3693 = !DILocalVariable(name: "j", scope: !3664, file: !624, line: 246, type: !238)
!3694 = !DILocation(line: 246, column: 291, scope: !3664)
!3695 = !DILocation(line: 246, column: 301, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !3664, file: !624, line: 246, column: 294)
!3697 = !DILocation(line: 246, column: 299, scope: !3696)
!3698 = !DILocation(line: 246, column: 306, scope: !3699)
!3699 = !DILexicalBlockFile(scope: !3700, file: !624, discriminator: 1)
!3700 = distinct !DILexicalBlock(scope: !3696, file: !624, line: 246, column: 294)
!3701 = !DILocation(line: 246, column: 310, scope: !3699)
!3702 = !DILocation(line: 246, column: 308, scope: !3699)
!3703 = !DILocation(line: 246, column: 294, scope: !3699)
!3704 = !DILocation(line: 246, column: 332, scope: !3705)
!3705 = !DILexicalBlockFile(scope: !3706, file: !624, discriminator: 2)
!3706 = distinct !DILexicalBlock(scope: !3707, file: !624, line: 246, column: 325)
!3707 = distinct !DILexicalBlock(scope: !3700, file: !624, line: 246, column: 323)
!3708 = !DILocation(line: 246, column: 330, scope: !3705)
!3709 = !DILocation(line: 246, column: 337, scope: !3710)
!3710 = !DILexicalBlockFile(scope: !3711, file: !624, discriminator: 3)
!3711 = distinct !DILexicalBlock(scope: !3706, file: !624, line: 246, column: 325)
!3712 = !DILocation(line: 246, column: 341, scope: !3710)
!3713 = !DILocation(line: 246, column: 339, scope: !3710)
!3714 = !DILocation(line: 246, column: 325, scope: !3710)
!3715 = !DILocation(line: 246, column: 368, scope: !3716)
!3716 = !DILexicalBlockFile(scope: !3717, file: !624, discriminator: 4)
!3717 = distinct !DILexicalBlock(scope: !3711, file: !624, line: 246, column: 353)
!3718 = !DILocation(line: 246, column: 364, scope: !3716)
!3719 = !DILocation(line: 246, column: 389, scope: !3716)
!3720 = !DILocation(line: 246, column: 385, scope: !3716)
!3721 = !DILocation(line: 246, column: 384, scope: !3716)
!3722 = !DILocation(line: 246, column: 403, scope: !3716)
!3723 = !DILocation(line: 246, column: 396, scope: !3716)
!3724 = !DILocation(line: 246, column: 395, scope: !3716)
!3725 = !DILocation(line: 246, column: 393, scope: !3716)
!3726 = !DILocation(line: 246, column: 408, scope: !3716)
!3727 = !DILocation(line: 246, column: 380, scope: !3716)
!3728 = !DILocation(line: 246, column: 423, scope: !3716)
!3729 = !DILocation(line: 246, column: 419, scope: !3716)
!3730 = !DILocation(line: 246, column: 417, scope: !3716)
!3731 = !DILocation(line: 246, column: 373, scope: !3716)
!3732 = !DILocation(line: 246, column: 429, scope: !3716)
!3733 = !DILocation(line: 246, column: 427, scope: !3716)
!3734 = !DILocation(line: 246, column: 371, scope: !3716)
!3735 = !DILocation(line: 246, column: 359, scope: !3716)
!3736 = !DILocation(line: 246, column: 355, scope: !3716)
!3737 = !DILocation(line: 246, column: 362, scope: !3716)
!3738 = !DILocation(line: 246, column: 438, scope: !3716)
!3739 = !DILocation(line: 246, column: 349, scope: !3740)
!3740 = !DILexicalBlockFile(scope: !3711, file: !624, discriminator: 5)
!3741 = !DILocation(line: 246, column: 325, scope: !3740)
!3742 = distinct !{!3742, !3743}
!3743 = !DILocation(line: 246, column: 325, scope: !3707)
!3744 = !DILocation(line: 246, column: 447, scope: !3745)
!3745 = !DILexicalBlockFile(scope: !3707, file: !624, discriminator: 6)
!3746 = !DILocation(line: 246, column: 444, scope: !3745)
!3747 = !DILocation(line: 246, column: 468, scope: !3745)
!3748 = !DILocation(line: 246, column: 465, scope: !3745)
!3749 = !DILocation(line: 246, column: 492, scope: !3745)
!3750 = !DILocation(line: 246, column: 489, scope: !3745)
!3751 = !DILocation(line: 246, column: 509, scope: !3745)
!3752 = !DILocation(line: 246, column: 319, scope: !3753)
!3753 = !DILexicalBlockFile(scope: !3700, file: !624, discriminator: 7)
!3754 = !DILocation(line: 246, column: 294, scope: !3753)
!3755 = distinct !{!3755, !3756}
!3756 = !DILocation(line: 246, column: 294, scope: !3664)
!3757 = !DILocation(line: 246, column: 511, scope: !3758)
!3758 = !DILexicalBlockFile(scope: !3664, file: !624, discriminator: 8)
!3759 = distinct !DISubprogram(name: "blend_multiply128_8bit", scope: !624, file: !624, line: 247, type: !1531, isLocal: true, isDefinition: true, scopeLine: 247, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!3760 = !DILocation(line: 159, column: 97, scope: !1639, inlinedAt: !3761)
!3761 = distinct !DILocation(line: 247, column: 378, scope: !3762)
!3762 = !DILexicalBlockFile(scope: !3763, file: !624, discriminator: 4)
!3763 = distinct !DILexicalBlock(scope: !3764, file: !624, line: 247, column: 356)
!3764 = distinct !DILexicalBlock(scope: !3765, file: !624, line: 247, column: 328)
!3765 = distinct !DILexicalBlock(scope: !3766, file: !624, line: 247, column: 328)
!3766 = distinct !DILexicalBlock(scope: !3767, file: !624, line: 247, column: 326)
!3767 = distinct !DILexicalBlock(scope: !3768, file: !624, line: 247, column: 297)
!3768 = distinct !DILexicalBlock(scope: !3759, file: !624, line: 247, column: 297)
!3769 = !DILocalVariable(name: "top", arg: 1, scope: !3759, file: !624, line: 247, type: !900)
!3770 = !DILocation(line: 247, column: 51, scope: !3759)
!3771 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !3759, file: !624, line: 247, type: !902)
!3772 = !DILocation(line: 247, column: 66, scope: !3759)
!3773 = !DILocalVariable(name: "bottom", arg: 3, scope: !3759, file: !624, line: 247, type: !900)
!3774 = !DILocation(line: 247, column: 95, scope: !3759)
!3775 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !3759, file: !624, line: 247, type: !902)
!3776 = !DILocation(line: 247, column: 113, scope: !3759)
!3777 = !DILocalVariable(name: "dst", arg: 5, scope: !3759, file: !624, line: 247, type: !329)
!3778 = !DILocation(line: 247, column: 139, scope: !3759)
!3779 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !3759, file: !624, line: 247, type: !902)
!3780 = !DILocation(line: 247, column: 154, scope: !3759)
!3781 = !DILocalVariable(name: "width", arg: 7, scope: !3759, file: !624, line: 247, type: !902)
!3782 = !DILocation(line: 247, column: 178, scope: !3759)
!3783 = !DILocalVariable(name: "height", arg: 8, scope: !3759, file: !624, line: 247, type: !902)
!3784 = !DILocation(line: 247, column: 195, scope: !3759)
!3785 = !DILocalVariable(name: "param", arg: 9, scope: !3759, file: !624, line: 247, type: !884)
!3786 = !DILocation(line: 247, column: 217, scope: !3759)
!3787 = !DILocalVariable(name: "values", arg: 10, scope: !3759, file: !624, line: 247, type: !544)
!3788 = !DILocation(line: 247, column: 232, scope: !3759)
!3789 = !DILocalVariable(name: "starty", arg: 11, scope: !3759, file: !624, line: 247, type: !238)
!3790 = !DILocation(line: 247, column: 244, scope: !3759)
!3791 = !DILocalVariable(name: "opacity", scope: !3759, file: !624, line: 247, type: !248)
!3792 = !DILocation(line: 247, column: 261, scope: !3759)
!3793 = !DILocation(line: 247, column: 271, scope: !3759)
!3794 = !DILocation(line: 247, column: 278, scope: !3759)
!3795 = !DILocalVariable(name: "i", scope: !3759, file: !624, line: 247, type: !238)
!3796 = !DILocation(line: 247, column: 291, scope: !3759)
!3797 = !DILocalVariable(name: "j", scope: !3759, file: !624, line: 247, type: !238)
!3798 = !DILocation(line: 247, column: 294, scope: !3759)
!3799 = !DILocation(line: 247, column: 304, scope: !3768)
!3800 = !DILocation(line: 247, column: 302, scope: !3768)
!3801 = !DILocation(line: 247, column: 309, scope: !3802)
!3802 = !DILexicalBlockFile(scope: !3767, file: !624, discriminator: 1)
!3803 = !DILocation(line: 247, column: 313, scope: !3802)
!3804 = !DILocation(line: 247, column: 311, scope: !3802)
!3805 = !DILocation(line: 247, column: 297, scope: !3802)
!3806 = !DILocation(line: 247, column: 335, scope: !3807)
!3807 = !DILexicalBlockFile(scope: !3765, file: !624, discriminator: 2)
!3808 = !DILocation(line: 247, column: 333, scope: !3807)
!3809 = !DILocation(line: 247, column: 340, scope: !3810)
!3810 = !DILexicalBlockFile(scope: !3764, file: !624, discriminator: 3)
!3811 = !DILocation(line: 247, column: 344, scope: !3810)
!3812 = !DILocation(line: 247, column: 342, scope: !3810)
!3813 = !DILocation(line: 247, column: 328, scope: !3810)
!3814 = !DILocation(line: 247, column: 371, scope: !3762)
!3815 = !DILocation(line: 247, column: 367, scope: !3762)
!3816 = !DILocation(line: 247, column: 399, scope: !3762)
!3817 = !DILocation(line: 247, column: 395, scope: !3762)
!3818 = !DILocation(line: 247, column: 402, scope: !3762)
!3819 = !DILocation(line: 247, column: 418, scope: !3762)
!3820 = !DILocation(line: 247, column: 411, scope: !3762)
!3821 = !DILocation(line: 247, column: 409, scope: !3762)
!3822 = !DILocation(line: 247, column: 394, scope: !3762)
!3823 = !DILocation(line: 247, column: 421, scope: !3762)
!3824 = !DILocation(line: 247, column: 427, scope: !3762)
!3825 = !DILocation(line: 247, column: 378, scope: !3762)
!3826 = !DILocation(line: 161, column: 9, scope: !1707, inlinedAt: !3761)
!3827 = !DILocation(line: 161, column: 10, scope: !1707, inlinedAt: !3761)
!3828 = !DILocation(line: 161, column: 9, scope: !1639, inlinedAt: !3761)
!3829 = !DILocation(line: 161, column: 29, scope: !1711, inlinedAt: !3761)
!3830 = !DILocation(line: 161, column: 28, scope: !1711, inlinedAt: !3761)
!3831 = !DILocation(line: 161, column: 31, scope: !1711, inlinedAt: !3761)
!3832 = !DILocation(line: 161, column: 27, scope: !1711, inlinedAt: !3761)
!3833 = !DILocation(line: 161, column: 20, scope: !1711, inlinedAt: !3761)
!3834 = !DILocation(line: 162, column: 17, scope: !1707, inlinedAt: !3761)
!3835 = !DILocation(line: 162, column: 10, scope: !1707, inlinedAt: !3761)
!3836 = !DILocation(line: 163, column: 1, scope: !1639, inlinedAt: !3761)
!3837 = !DILocation(line: 247, column: 377, scope: !3762)
!3838 = !DILocation(line: 247, column: 441, scope: !3762)
!3839 = !DILocation(line: 247, column: 437, scope: !3762)
!3840 = !DILocation(line: 247, column: 435, scope: !3762)
!3841 = !DILocation(line: 247, column: 376, scope: !3762)
!3842 = !DILocation(line: 247, column: 447, scope: !3762)
!3843 = !DILocation(line: 247, column: 445, scope: !3762)
!3844 = !DILocation(line: 247, column: 374, scope: !3762)
!3845 = !DILocation(line: 247, column: 362, scope: !3762)
!3846 = !DILocation(line: 247, column: 358, scope: !3762)
!3847 = !DILocation(line: 247, column: 365, scope: !3762)
!3848 = !DILocation(line: 247, column: 456, scope: !3762)
!3849 = !DILocation(line: 247, column: 352, scope: !3850)
!3850 = !DILexicalBlockFile(scope: !3764, file: !624, discriminator: 5)
!3851 = !DILocation(line: 247, column: 328, scope: !3850)
!3852 = distinct !{!3852, !3853}
!3853 = !DILocation(line: 247, column: 328, scope: !3766)
!3854 = !DILocation(line: 247, column: 465, scope: !3855)
!3855 = !DILexicalBlockFile(scope: !3766, file: !624, discriminator: 6)
!3856 = !DILocation(line: 247, column: 462, scope: !3855)
!3857 = !DILocation(line: 247, column: 486, scope: !3855)
!3858 = !DILocation(line: 247, column: 483, scope: !3855)
!3859 = !DILocation(line: 247, column: 510, scope: !3855)
!3860 = !DILocation(line: 247, column: 507, scope: !3855)
!3861 = !DILocation(line: 247, column: 527, scope: !3855)
!3862 = !DILocation(line: 247, column: 322, scope: !3863)
!3863 = !DILexicalBlockFile(scope: !3767, file: !624, discriminator: 7)
!3864 = !DILocation(line: 247, column: 297, scope: !3863)
!3865 = distinct !{!3865, !3866}
!3866 = !DILocation(line: 247, column: 297, scope: !3759)
!3867 = !DILocation(line: 247, column: 529, scope: !3868)
!3868 = !DILexicalBlockFile(scope: !3759, file: !624, discriminator: 8)
!3869 = distinct !DISubprogram(name: "blend_negation_8bit", scope: !624, file: !624, line: 248, type: !1531, isLocal: true, isDefinition: true, scopeLine: 248, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!3870 = !DILocalVariable(name: "top", arg: 1, scope: !3869, file: !624, line: 248, type: !900)
!3871 = !DILocation(line: 248, column: 48, scope: !3869)
!3872 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !3869, file: !624, line: 248, type: !902)
!3873 = !DILocation(line: 248, column: 63, scope: !3869)
!3874 = !DILocalVariable(name: "bottom", arg: 3, scope: !3869, file: !624, line: 248, type: !900)
!3875 = !DILocation(line: 248, column: 92, scope: !3869)
!3876 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !3869, file: !624, line: 248, type: !902)
!3877 = !DILocation(line: 248, column: 110, scope: !3869)
!3878 = !DILocalVariable(name: "dst", arg: 5, scope: !3869, file: !624, line: 248, type: !329)
!3879 = !DILocation(line: 248, column: 136, scope: !3869)
!3880 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !3869, file: !624, line: 248, type: !902)
!3881 = !DILocation(line: 248, column: 151, scope: !3869)
!3882 = !DILocalVariable(name: "width", arg: 7, scope: !3869, file: !624, line: 248, type: !902)
!3883 = !DILocation(line: 248, column: 175, scope: !3869)
!3884 = !DILocalVariable(name: "height", arg: 8, scope: !3869, file: !624, line: 248, type: !902)
!3885 = !DILocation(line: 248, column: 192, scope: !3869)
!3886 = !DILocalVariable(name: "param", arg: 9, scope: !3869, file: !624, line: 248, type: !884)
!3887 = !DILocation(line: 248, column: 214, scope: !3869)
!3888 = !DILocalVariable(name: "values", arg: 10, scope: !3869, file: !624, line: 248, type: !544)
!3889 = !DILocation(line: 248, column: 229, scope: !3869)
!3890 = !DILocalVariable(name: "starty", arg: 11, scope: !3869, file: !624, line: 248, type: !238)
!3891 = !DILocation(line: 248, column: 241, scope: !3869)
!3892 = !DILocalVariable(name: "opacity", scope: !3869, file: !624, line: 248, type: !248)
!3893 = !DILocation(line: 248, column: 258, scope: !3869)
!3894 = !DILocation(line: 248, column: 268, scope: !3869)
!3895 = !DILocation(line: 248, column: 275, scope: !3869)
!3896 = !DILocalVariable(name: "i", scope: !3869, file: !624, line: 248, type: !238)
!3897 = !DILocation(line: 248, column: 288, scope: !3869)
!3898 = !DILocalVariable(name: "j", scope: !3869, file: !624, line: 248, type: !238)
!3899 = !DILocation(line: 248, column: 291, scope: !3869)
!3900 = !DILocation(line: 248, column: 301, scope: !3901)
!3901 = distinct !DILexicalBlock(scope: !3869, file: !624, line: 248, column: 294)
!3902 = !DILocation(line: 248, column: 299, scope: !3901)
!3903 = !DILocation(line: 248, column: 306, scope: !3904)
!3904 = !DILexicalBlockFile(scope: !3905, file: !624, discriminator: 1)
!3905 = distinct !DILexicalBlock(scope: !3901, file: !624, line: 248, column: 294)
!3906 = !DILocation(line: 248, column: 310, scope: !3904)
!3907 = !DILocation(line: 248, column: 308, scope: !3904)
!3908 = !DILocation(line: 248, column: 294, scope: !3904)
!3909 = !DILocation(line: 248, column: 332, scope: !3910)
!3910 = !DILexicalBlockFile(scope: !3911, file: !624, discriminator: 2)
!3911 = distinct !DILexicalBlock(scope: !3912, file: !624, line: 248, column: 325)
!3912 = distinct !DILexicalBlock(scope: !3905, file: !624, line: 248, column: 323)
!3913 = !DILocation(line: 248, column: 330, scope: !3910)
!3914 = !DILocation(line: 248, column: 337, scope: !3915)
!3915 = !DILexicalBlockFile(scope: !3916, file: !624, discriminator: 3)
!3916 = distinct !DILexicalBlock(scope: !3911, file: !624, line: 248, column: 325)
!3917 = !DILocation(line: 248, column: 341, scope: !3915)
!3918 = !DILocation(line: 248, column: 339, scope: !3915)
!3919 = !DILocation(line: 248, column: 325, scope: !3915)
!3920 = !DILocation(line: 248, column: 368, scope: !3921)
!3921 = !DILexicalBlockFile(scope: !3922, file: !624, discriminator: 4)
!3922 = distinct !DILexicalBlock(scope: !3916, file: !624, line: 248, column: 353)
!3923 = !DILocation(line: 248, column: 364, scope: !3921)
!3924 = !DILocation(line: 248, column: 393, scope: !3921)
!3925 = !DILocation(line: 248, column: 389, scope: !3921)
!3926 = !DILocation(line: 248, column: 387, scope: !3921)
!3927 = !DILocation(line: 248, column: 405, scope: !3921)
!3928 = !DILocation(line: 248, column: 398, scope: !3921)
!3929 = !DILocation(line: 248, column: 396, scope: !3921)
!3930 = !DILocation(line: 248, column: 409, scope: !3921)
!3931 = !DILocation(line: 248, column: 382, scope: !3921)
!3932 = !DILocation(line: 248, column: 427, scope: !3933)
!3933 = !DILexicalBlockFile(scope: !3922, file: !624, discriminator: 5)
!3934 = !DILocation(line: 248, column: 423, scope: !3933)
!3935 = !DILocation(line: 248, column: 421, scope: !3933)
!3936 = !DILocation(line: 248, column: 439, scope: !3933)
!3937 = !DILocation(line: 248, column: 432, scope: !3933)
!3938 = !DILocation(line: 248, column: 430, scope: !3933)
!3939 = !DILocation(line: 248, column: 382, scope: !3933)
!3940 = !DILocation(line: 248, column: 458, scope: !3941)
!3941 = !DILexicalBlockFile(scope: !3922, file: !624, discriminator: 6)
!3942 = !DILocation(line: 248, column: 454, scope: !3941)
!3943 = !DILocation(line: 248, column: 452, scope: !3941)
!3944 = !DILocation(line: 248, column: 470, scope: !3941)
!3945 = !DILocation(line: 248, column: 463, scope: !3941)
!3946 = !DILocation(line: 248, column: 461, scope: !3941)
!3947 = !DILocation(line: 248, column: 446, scope: !3941)
!3948 = !DILocation(line: 248, column: 382, scope: !3941)
!3949 = !DILocation(line: 248, column: 382, scope: !3950)
!3950 = !DILexicalBlockFile(scope: !3922, file: !624, discriminator: 7)
!3951 = !DILocation(line: 248, column: 379, scope: !3950)
!3952 = !DILocation(line: 248, column: 483, scope: !3950)
!3953 = !DILocation(line: 248, column: 479, scope: !3950)
!3954 = !DILocation(line: 248, column: 477, scope: !3950)
!3955 = !DILocation(line: 248, column: 373, scope: !3950)
!3956 = !DILocation(line: 248, column: 489, scope: !3950)
!3957 = !DILocation(line: 248, column: 487, scope: !3950)
!3958 = !DILocation(line: 248, column: 371, scope: !3950)
!3959 = !DILocation(line: 248, column: 364, scope: !3950)
!3960 = !DILocation(line: 248, column: 359, scope: !3950)
!3961 = !DILocation(line: 248, column: 355, scope: !3950)
!3962 = !DILocation(line: 248, column: 362, scope: !3950)
!3963 = !DILocation(line: 248, column: 498, scope: !3950)
!3964 = !DILocation(line: 248, column: 349, scope: !3965)
!3965 = !DILexicalBlockFile(scope: !3916, file: !624, discriminator: 8)
!3966 = !DILocation(line: 248, column: 325, scope: !3965)
!3967 = distinct !{!3967, !3968}
!3968 = !DILocation(line: 248, column: 325, scope: !3912)
!3969 = !DILocation(line: 248, column: 507, scope: !3970)
!3970 = !DILexicalBlockFile(scope: !3912, file: !624, discriminator: 9)
!3971 = !DILocation(line: 248, column: 504, scope: !3970)
!3972 = !DILocation(line: 248, column: 528, scope: !3970)
!3973 = !DILocation(line: 248, column: 525, scope: !3970)
!3974 = !DILocation(line: 248, column: 552, scope: !3970)
!3975 = !DILocation(line: 248, column: 549, scope: !3970)
!3976 = !DILocation(line: 248, column: 569, scope: !3970)
!3977 = !DILocation(line: 248, column: 319, scope: !3978)
!3978 = !DILexicalBlockFile(scope: !3905, file: !624, discriminator: 10)
!3979 = !DILocation(line: 248, column: 294, scope: !3978)
!3980 = distinct !{!3980, !3981}
!3981 = !DILocation(line: 248, column: 294, scope: !3869)
!3982 = !DILocation(line: 248, column: 571, scope: !3983)
!3983 = !DILexicalBlockFile(scope: !3869, file: !624, discriminator: 11)
!3984 = distinct !DISubprogram(name: "blend_copytop_8", scope: !624, file: !624, line: 136, type: !1531, isLocal: true, isDefinition: true, scopeLine: 136, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!3985 = !DILocalVariable(name: "top", arg: 1, scope: !3984, file: !624, line: 136, type: !900)
!3986 = !DILocation(line: 136, column: 44, scope: !3984)
!3987 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !3984, file: !624, line: 136, type: !902)
!3988 = !DILocation(line: 136, column: 59, scope: !3984)
!3989 = !DILocalVariable(name: "bottom", arg: 3, scope: !3984, file: !624, line: 136, type: !900)
!3990 = !DILocation(line: 136, column: 88, scope: !3984)
!3991 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !3984, file: !624, line: 136, type: !902)
!3992 = !DILocation(line: 136, column: 106, scope: !3984)
!3993 = !DILocalVariable(name: "dst", arg: 5, scope: !3984, file: !624, line: 136, type: !329)
!3994 = !DILocation(line: 136, column: 132, scope: !3984)
!3995 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !3984, file: !624, line: 136, type: !902)
!3996 = !DILocation(line: 136, column: 147, scope: !3984)
!3997 = !DILocalVariable(name: "width", arg: 7, scope: !3984, file: !624, line: 136, type: !902)
!3998 = !DILocation(line: 136, column: 171, scope: !3984)
!3999 = !DILocalVariable(name: "height", arg: 8, scope: !3984, file: !624, line: 136, type: !902)
!4000 = !DILocation(line: 136, column: 188, scope: !3984)
!4001 = !DILocalVariable(name: "param", arg: 9, scope: !3984, file: !624, line: 136, type: !884)
!4002 = !DILocation(line: 136, column: 210, scope: !3984)
!4003 = !DILocalVariable(name: "values", arg: 10, scope: !3984, file: !624, line: 136, type: !544)
!4004 = !DILocation(line: 136, column: 225, scope: !3984)
!4005 = !DILocalVariable(name: "starty", arg: 11, scope: !3984, file: !624, line: 136, type: !238)
!4006 = !DILocation(line: 136, column: 237, scope: !3984)
!4007 = !DILocation(line: 136, column: 267, scope: !3984)
!4008 = !DILocation(line: 136, column: 272, scope: !3984)
!4009 = !DILocation(line: 136, column: 286, scope: !3984)
!4010 = !DILocation(line: 136, column: 291, scope: !3984)
!4011 = !DILocation(line: 136, column: 305, scope: !3984)
!4012 = !DILocation(line: 136, column: 311, scope: !3984)
!4013 = !DILocation(line: 136, column: 315, scope: !3984)
!4014 = !DILocation(line: 136, column: 320, scope: !3984)
!4015 = !DILocation(line: 136, column: 247, scope: !3984)
!4016 = !DILocation(line: 136, column: 329, scope: !3984)
!4017 = distinct !DISubprogram(name: "blend_copybottom_8", scope: !624, file: !624, line: 137, type: !1531, isLocal: true, isDefinition: true, scopeLine: 137, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!4018 = !DILocalVariable(name: "top", arg: 1, scope: !4017, file: !624, line: 137, type: !900)
!4019 = !DILocation(line: 137, column: 47, scope: !4017)
!4020 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !4017, file: !624, line: 137, type: !902)
!4021 = !DILocation(line: 137, column: 62, scope: !4017)
!4022 = !DILocalVariable(name: "bottom", arg: 3, scope: !4017, file: !624, line: 137, type: !900)
!4023 = !DILocation(line: 137, column: 91, scope: !4017)
!4024 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !4017, file: !624, line: 137, type: !902)
!4025 = !DILocation(line: 137, column: 109, scope: !4017)
!4026 = !DILocalVariable(name: "dst", arg: 5, scope: !4017, file: !624, line: 137, type: !329)
!4027 = !DILocation(line: 137, column: 135, scope: !4017)
!4028 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !4017, file: !624, line: 137, type: !902)
!4029 = !DILocation(line: 137, column: 150, scope: !4017)
!4030 = !DILocalVariable(name: "width", arg: 7, scope: !4017, file: !624, line: 137, type: !902)
!4031 = !DILocation(line: 137, column: 174, scope: !4017)
!4032 = !DILocalVariable(name: "height", arg: 8, scope: !4017, file: !624, line: 137, type: !902)
!4033 = !DILocation(line: 137, column: 191, scope: !4017)
!4034 = !DILocalVariable(name: "param", arg: 9, scope: !4017, file: !624, line: 137, type: !884)
!4035 = !DILocation(line: 137, column: 213, scope: !4017)
!4036 = !DILocalVariable(name: "values", arg: 10, scope: !4017, file: !624, line: 137, type: !544)
!4037 = !DILocation(line: 137, column: 228, scope: !4017)
!4038 = !DILocalVariable(name: "starty", arg: 11, scope: !4017, file: !624, line: 137, type: !238)
!4039 = !DILocation(line: 137, column: 240, scope: !4017)
!4040 = !DILocation(line: 137, column: 270, scope: !4017)
!4041 = !DILocation(line: 137, column: 275, scope: !4017)
!4042 = !DILocation(line: 137, column: 289, scope: !4017)
!4043 = !DILocation(line: 137, column: 297, scope: !4017)
!4044 = !DILocation(line: 137, column: 314, scope: !4017)
!4045 = !DILocation(line: 137, column: 320, scope: !4017)
!4046 = !DILocation(line: 137, column: 324, scope: !4017)
!4047 = !DILocation(line: 137, column: 329, scope: !4017)
!4048 = !DILocation(line: 137, column: 250, scope: !4017)
!4049 = !DILocation(line: 137, column: 338, scope: !4017)
!4050 = distinct !DISubprogram(name: "blend_normal_8bit", scope: !624, file: !624, line: 144, type: !1531, isLocal: true, isDefinition: true, scopeLine: 149, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!4051 = !DILocalVariable(name: "top", arg: 1, scope: !4050, file: !624, line: 144, type: !900)
!4052 = !DILocation(line: 144, column: 46, scope: !4050)
!4053 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !4050, file: !624, line: 144, type: !902)
!4054 = !DILocation(line: 144, column: 61, scope: !4050)
!4055 = !DILocalVariable(name: "bottom", arg: 3, scope: !4050, file: !624, line: 145, type: !900)
!4056 = !DILocation(line: 145, column: 46, scope: !4050)
!4057 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !4050, file: !624, line: 145, type: !902)
!4058 = !DILocation(line: 145, column: 64, scope: !4050)
!4059 = !DILocalVariable(name: "dst", arg: 5, scope: !4050, file: !624, line: 146, type: !329)
!4060 = !DILocation(line: 146, column: 40, scope: !4050)
!4061 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !4050, file: !624, line: 146, type: !902)
!4062 = !DILocation(line: 146, column: 55, scope: !4050)
!4063 = !DILocalVariable(name: "width", arg: 7, scope: !4050, file: !624, line: 147, type: !902)
!4064 = !DILocation(line: 147, column: 41, scope: !4050)
!4065 = !DILocalVariable(name: "height", arg: 8, scope: !4050, file: !624, line: 147, type: !902)
!4066 = !DILocation(line: 147, column: 58, scope: !4050)
!4067 = !DILocalVariable(name: "param", arg: 9, scope: !4050, file: !624, line: 148, type: !884)
!4068 = !DILocation(line: 148, column: 45, scope: !4050)
!4069 = !DILocalVariable(name: "values", arg: 10, scope: !4050, file: !624, line: 148, type: !544)
!4070 = !DILocation(line: 148, column: 60, scope: !4050)
!4071 = !DILocalVariable(name: "starty", arg: 11, scope: !4050, file: !624, line: 148, type: !238)
!4072 = !DILocation(line: 148, column: 72, scope: !4050)
!4073 = !DILocalVariable(name: "opacity", scope: !4050, file: !624, line: 150, type: !4074)
!4074 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !248)
!4075 = !DILocation(line: 150, column: 18, scope: !4050)
!4076 = !DILocation(line: 150, column: 28, scope: !4050)
!4077 = !DILocation(line: 150, column: 35, scope: !4050)
!4078 = !DILocalVariable(name: "i", scope: !4050, file: !624, line: 151, type: !238)
!4079 = !DILocation(line: 151, column: 9, scope: !4050)
!4080 = !DILocalVariable(name: "j", scope: !4050, file: !624, line: 151, type: !238)
!4081 = !DILocation(line: 151, column: 12, scope: !4050)
!4082 = !DILocation(line: 153, column: 12, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4050, file: !624, line: 153, column: 5)
!4084 = !DILocation(line: 153, column: 10, scope: !4083)
!4085 = !DILocation(line: 153, column: 17, scope: !4086)
!4086 = !DILexicalBlockFile(scope: !4087, file: !624, discriminator: 1)
!4087 = distinct !DILexicalBlock(scope: !4083, file: !624, line: 153, column: 5)
!4088 = !DILocation(line: 153, column: 21, scope: !4086)
!4089 = !DILocation(line: 153, column: 19, scope: !4086)
!4090 = !DILocation(line: 153, column: 5, scope: !4086)
!4091 = !DILocation(line: 154, column: 16, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4093, file: !624, line: 154, column: 9)
!4093 = distinct !DILexicalBlock(scope: !4087, file: !624, line: 153, column: 34)
!4094 = !DILocation(line: 154, column: 14, scope: !4092)
!4095 = !DILocation(line: 154, column: 21, scope: !4096)
!4096 = !DILexicalBlockFile(scope: !4097, file: !624, discriminator: 1)
!4097 = distinct !DILexicalBlock(scope: !4092, file: !624, line: 154, column: 9)
!4098 = !DILocation(line: 154, column: 25, scope: !4096)
!4099 = !DILocation(line: 154, column: 23, scope: !4096)
!4100 = !DILocation(line: 154, column: 9, scope: !4096)
!4101 = !DILocation(line: 155, column: 26, scope: !4102)
!4102 = distinct !DILexicalBlock(scope: !4097, file: !624, line: 154, column: 37)
!4103 = !DILocation(line: 155, column: 22, scope: !4102)
!4104 = !DILocation(line: 155, column: 31, scope: !4102)
!4105 = !DILocation(line: 155, column: 29, scope: !4102)
!4106 = !DILocation(line: 155, column: 48, scope: !4102)
!4107 = !DILocation(line: 155, column: 41, scope: !4102)
!4108 = !DILocation(line: 155, column: 59, scope: !4102)
!4109 = !DILocation(line: 155, column: 57, scope: !4102)
!4110 = !DILocation(line: 155, column: 51, scope: !4102)
!4111 = !DILocation(line: 155, column: 39, scope: !4102)
!4112 = !DILocation(line: 155, column: 17, scope: !4102)
!4113 = !DILocation(line: 155, column: 13, scope: !4102)
!4114 = !DILocation(line: 155, column: 20, scope: !4102)
!4115 = !DILocation(line: 156, column: 9, scope: !4102)
!4116 = !DILocation(line: 154, column: 33, scope: !4117)
!4117 = !DILexicalBlockFile(scope: !4097, file: !624, discriminator: 2)
!4118 = !DILocation(line: 154, column: 9, scope: !4117)
!4119 = distinct !{!4119, !4120}
!4120 = !DILocation(line: 154, column: 9, scope: !4093)
!4121 = !DILocation(line: 157, column: 16, scope: !4093)
!4122 = !DILocation(line: 157, column: 13, scope: !4093)
!4123 = !DILocation(line: 158, column: 16, scope: !4093)
!4124 = !DILocation(line: 158, column: 13, scope: !4093)
!4125 = !DILocation(line: 159, column: 19, scope: !4093)
!4126 = !DILocation(line: 159, column: 16, scope: !4093)
!4127 = !DILocation(line: 160, column: 5, scope: !4093)
!4128 = !DILocation(line: 153, column: 30, scope: !4129)
!4129 = !DILexicalBlockFile(scope: !4087, file: !624, discriminator: 2)
!4130 = !DILocation(line: 153, column: 5, scope: !4129)
!4131 = distinct !{!4131, !4132}
!4132 = !DILocation(line: 153, column: 5, scope: !4050)
!4133 = !DILocation(line: 161, column: 1, scope: !4050)
!4134 = distinct !DISubprogram(name: "blend_or_8bit", scope: !624, file: !624, line: 270, type: !1531, isLocal: true, isDefinition: true, scopeLine: 270, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!4135 = !DILocalVariable(name: "top", arg: 1, scope: !4134, file: !624, line: 270, type: !900)
!4136 = !DILocation(line: 270, column: 42, scope: !4134)
!4137 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !4134, file: !624, line: 270, type: !902)
!4138 = !DILocation(line: 270, column: 57, scope: !4134)
!4139 = !DILocalVariable(name: "bottom", arg: 3, scope: !4134, file: !624, line: 270, type: !900)
!4140 = !DILocation(line: 270, column: 86, scope: !4134)
!4141 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !4134, file: !624, line: 270, type: !902)
!4142 = !DILocation(line: 270, column: 104, scope: !4134)
!4143 = !DILocalVariable(name: "dst", arg: 5, scope: !4134, file: !624, line: 270, type: !329)
!4144 = !DILocation(line: 270, column: 130, scope: !4134)
!4145 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !4134, file: !624, line: 270, type: !902)
!4146 = !DILocation(line: 270, column: 145, scope: !4134)
!4147 = !DILocalVariable(name: "width", arg: 7, scope: !4134, file: !624, line: 270, type: !902)
!4148 = !DILocation(line: 270, column: 169, scope: !4134)
!4149 = !DILocalVariable(name: "height", arg: 8, scope: !4134, file: !624, line: 270, type: !902)
!4150 = !DILocation(line: 270, column: 186, scope: !4134)
!4151 = !DILocalVariable(name: "param", arg: 9, scope: !4134, file: !624, line: 270, type: !884)
!4152 = !DILocation(line: 270, column: 208, scope: !4134)
!4153 = !DILocalVariable(name: "values", arg: 10, scope: !4134, file: !624, line: 270, type: !544)
!4154 = !DILocation(line: 270, column: 223, scope: !4134)
!4155 = !DILocalVariable(name: "starty", arg: 11, scope: !4134, file: !624, line: 270, type: !238)
!4156 = !DILocation(line: 270, column: 235, scope: !4134)
!4157 = !DILocalVariable(name: "opacity", scope: !4134, file: !624, line: 270, type: !248)
!4158 = !DILocation(line: 270, column: 252, scope: !4134)
!4159 = !DILocation(line: 270, column: 262, scope: !4134)
!4160 = !DILocation(line: 270, column: 269, scope: !4134)
!4161 = !DILocalVariable(name: "i", scope: !4134, file: !624, line: 270, type: !238)
!4162 = !DILocation(line: 270, column: 282, scope: !4134)
!4163 = !DILocalVariable(name: "j", scope: !4134, file: !624, line: 270, type: !238)
!4164 = !DILocation(line: 270, column: 285, scope: !4134)
!4165 = !DILocation(line: 270, column: 295, scope: !4166)
!4166 = distinct !DILexicalBlock(scope: !4134, file: !624, line: 270, column: 288)
!4167 = !DILocation(line: 270, column: 293, scope: !4166)
!4168 = !DILocation(line: 270, column: 300, scope: !4169)
!4169 = !DILexicalBlockFile(scope: !4170, file: !624, discriminator: 1)
!4170 = distinct !DILexicalBlock(scope: !4166, file: !624, line: 270, column: 288)
!4171 = !DILocation(line: 270, column: 304, scope: !4169)
!4172 = !DILocation(line: 270, column: 302, scope: !4169)
!4173 = !DILocation(line: 270, column: 288, scope: !4169)
!4174 = !DILocation(line: 270, column: 326, scope: !4175)
!4175 = !DILexicalBlockFile(scope: !4176, file: !624, discriminator: 2)
!4176 = distinct !DILexicalBlock(scope: !4177, file: !624, line: 270, column: 319)
!4177 = distinct !DILexicalBlock(scope: !4170, file: !624, line: 270, column: 317)
!4178 = !DILocation(line: 270, column: 324, scope: !4175)
!4179 = !DILocation(line: 270, column: 331, scope: !4180)
!4180 = !DILexicalBlockFile(scope: !4181, file: !624, discriminator: 3)
!4181 = distinct !DILexicalBlock(scope: !4176, file: !624, line: 270, column: 319)
!4182 = !DILocation(line: 270, column: 335, scope: !4180)
!4183 = !DILocation(line: 270, column: 333, scope: !4180)
!4184 = !DILocation(line: 270, column: 319, scope: !4180)
!4185 = !DILocation(line: 270, column: 362, scope: !4186)
!4186 = !DILexicalBlockFile(scope: !4187, file: !624, discriminator: 4)
!4187 = distinct !DILexicalBlock(scope: !4181, file: !624, line: 270, column: 347)
!4188 = !DILocation(line: 270, column: 358, scope: !4186)
!4189 = !DILocation(line: 270, column: 373, scope: !4186)
!4190 = !DILocation(line: 270, column: 369, scope: !4186)
!4191 = !DILocation(line: 270, column: 385, scope: !4186)
!4192 = !DILocation(line: 270, column: 378, scope: !4186)
!4193 = !DILocation(line: 270, column: 376, scope: !4186)
!4194 = !DILocation(line: 270, column: 395, scope: !4186)
!4195 = !DILocation(line: 270, column: 391, scope: !4186)
!4196 = !DILocation(line: 270, column: 389, scope: !4186)
!4197 = !DILocation(line: 270, column: 367, scope: !4186)
!4198 = !DILocation(line: 270, column: 401, scope: !4186)
!4199 = !DILocation(line: 270, column: 399, scope: !4186)
!4200 = !DILocation(line: 270, column: 365, scope: !4186)
!4201 = !DILocation(line: 270, column: 353, scope: !4186)
!4202 = !DILocation(line: 270, column: 349, scope: !4186)
!4203 = !DILocation(line: 270, column: 356, scope: !4186)
!4204 = !DILocation(line: 270, column: 410, scope: !4186)
!4205 = !DILocation(line: 270, column: 343, scope: !4206)
!4206 = !DILexicalBlockFile(scope: !4181, file: !624, discriminator: 5)
!4207 = !DILocation(line: 270, column: 319, scope: !4206)
!4208 = distinct !{!4208, !4209}
!4209 = !DILocation(line: 270, column: 319, scope: !4177)
!4210 = !DILocation(line: 270, column: 419, scope: !4211)
!4211 = !DILexicalBlockFile(scope: !4177, file: !624, discriminator: 6)
!4212 = !DILocation(line: 270, column: 416, scope: !4211)
!4213 = !DILocation(line: 270, column: 440, scope: !4211)
!4214 = !DILocation(line: 270, column: 437, scope: !4211)
!4215 = !DILocation(line: 270, column: 464, scope: !4211)
!4216 = !DILocation(line: 270, column: 461, scope: !4211)
!4217 = !DILocation(line: 270, column: 481, scope: !4211)
!4218 = !DILocation(line: 270, column: 313, scope: !4219)
!4219 = !DILexicalBlockFile(scope: !4170, file: !624, discriminator: 7)
!4220 = !DILocation(line: 270, column: 288, scope: !4219)
!4221 = distinct !{!4221, !4222}
!4222 = !DILocation(line: 270, column: 288, scope: !4134)
!4223 = !DILocation(line: 270, column: 483, scope: !4224)
!4224 = !DILexicalBlockFile(scope: !4134, file: !624, discriminator: 8)
!4225 = distinct !DISubprogram(name: "blend_overlay_8bit", scope: !624, file: !624, line: 253, type: !1531, isLocal: true, isDefinition: true, scopeLine: 253, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!4226 = !DILocalVariable(name: "top", arg: 1, scope: !4225, file: !624, line: 253, type: !900)
!4227 = !DILocation(line: 253, column: 47, scope: !4225)
!4228 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !4225, file: !624, line: 253, type: !902)
!4229 = !DILocation(line: 253, column: 62, scope: !4225)
!4230 = !DILocalVariable(name: "bottom", arg: 3, scope: !4225, file: !624, line: 253, type: !900)
!4231 = !DILocation(line: 253, column: 91, scope: !4225)
!4232 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !4225, file: !624, line: 253, type: !902)
!4233 = !DILocation(line: 253, column: 109, scope: !4225)
!4234 = !DILocalVariable(name: "dst", arg: 5, scope: !4225, file: !624, line: 253, type: !329)
!4235 = !DILocation(line: 253, column: 135, scope: !4225)
!4236 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !4225, file: !624, line: 253, type: !902)
!4237 = !DILocation(line: 253, column: 150, scope: !4225)
!4238 = !DILocalVariable(name: "width", arg: 7, scope: !4225, file: !624, line: 253, type: !902)
!4239 = !DILocation(line: 253, column: 174, scope: !4225)
!4240 = !DILocalVariable(name: "height", arg: 8, scope: !4225, file: !624, line: 253, type: !902)
!4241 = !DILocation(line: 253, column: 191, scope: !4225)
!4242 = !DILocalVariable(name: "param", arg: 9, scope: !4225, file: !624, line: 253, type: !884)
!4243 = !DILocation(line: 253, column: 213, scope: !4225)
!4244 = !DILocalVariable(name: "values", arg: 10, scope: !4225, file: !624, line: 253, type: !544)
!4245 = !DILocation(line: 253, column: 228, scope: !4225)
!4246 = !DILocalVariable(name: "starty", arg: 11, scope: !4225, file: !624, line: 253, type: !238)
!4247 = !DILocation(line: 253, column: 240, scope: !4225)
!4248 = !DILocalVariable(name: "opacity", scope: !4225, file: !624, line: 253, type: !248)
!4249 = !DILocation(line: 253, column: 257, scope: !4225)
!4250 = !DILocation(line: 253, column: 267, scope: !4225)
!4251 = !DILocation(line: 253, column: 274, scope: !4225)
!4252 = !DILocalVariable(name: "i", scope: !4225, file: !624, line: 253, type: !238)
!4253 = !DILocation(line: 253, column: 287, scope: !4225)
!4254 = !DILocalVariable(name: "j", scope: !4225, file: !624, line: 253, type: !238)
!4255 = !DILocation(line: 253, column: 290, scope: !4225)
!4256 = !DILocation(line: 253, column: 300, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !4225, file: !624, line: 253, column: 293)
!4258 = !DILocation(line: 253, column: 298, scope: !4257)
!4259 = !DILocation(line: 253, column: 305, scope: !4260)
!4260 = !DILexicalBlockFile(scope: !4261, file: !624, discriminator: 1)
!4261 = distinct !DILexicalBlock(scope: !4257, file: !624, line: 253, column: 293)
!4262 = !DILocation(line: 253, column: 309, scope: !4260)
!4263 = !DILocation(line: 253, column: 307, scope: !4260)
!4264 = !DILocation(line: 253, column: 293, scope: !4260)
!4265 = !DILocation(line: 253, column: 331, scope: !4266)
!4266 = !DILexicalBlockFile(scope: !4267, file: !624, discriminator: 2)
!4267 = distinct !DILexicalBlock(scope: !4268, file: !624, line: 253, column: 324)
!4268 = distinct !DILexicalBlock(scope: !4261, file: !624, line: 253, column: 322)
!4269 = !DILocation(line: 253, column: 329, scope: !4266)
!4270 = !DILocation(line: 253, column: 336, scope: !4271)
!4271 = !DILexicalBlockFile(scope: !4272, file: !624, discriminator: 3)
!4272 = distinct !DILexicalBlock(scope: !4267, file: !624, line: 253, column: 324)
!4273 = !DILocation(line: 253, column: 340, scope: !4271)
!4274 = !DILocation(line: 253, column: 338, scope: !4271)
!4275 = !DILocation(line: 253, column: 324, scope: !4271)
!4276 = !DILocation(line: 253, column: 367, scope: !4277)
!4277 = !DILexicalBlockFile(scope: !4278, file: !624, discriminator: 4)
!4278 = distinct !DILexicalBlock(scope: !4272, file: !624, line: 253, column: 352)
!4279 = !DILocation(line: 253, column: 363, scope: !4277)
!4280 = !DILocation(line: 253, column: 379, scope: !4277)
!4281 = !DILocation(line: 253, column: 375, scope: !4277)
!4282 = !DILocation(line: 253, column: 382, scope: !4277)
!4283 = !DILocation(line: 253, column: 374, scope: !4277)
!4284 = !DILocation(line: 253, column: 405, scope: !4285)
!4285 = !DILexicalBlockFile(scope: !4278, file: !624, discriminator: 5)
!4286 = !DILocation(line: 253, column: 401, scope: !4285)
!4287 = !DILocation(line: 253, column: 400, scope: !4285)
!4288 = !DILocation(line: 253, column: 419, scope: !4285)
!4289 = !DILocation(line: 253, column: 412, scope: !4285)
!4290 = !DILocation(line: 253, column: 411, scope: !4285)
!4291 = !DILocation(line: 253, column: 409, scope: !4285)
!4292 = !DILocation(line: 253, column: 424, scope: !4285)
!4293 = !DILocation(line: 253, column: 396, scope: !4285)
!4294 = !DILocation(line: 253, column: 374, scope: !4285)
!4295 = !DILocation(line: 253, column: 460, scope: !4296)
!4296 = !DILexicalBlockFile(scope: !4278, file: !624, discriminator: 6)
!4297 = !DILocation(line: 253, column: 456, scope: !4296)
!4298 = !DILocation(line: 253, column: 455, scope: !4296)
!4299 = !DILocation(line: 253, column: 453, scope: !4296)
!4300 = !DILocation(line: 253, column: 482, scope: !4296)
!4301 = !DILocation(line: 253, column: 475, scope: !4296)
!4302 = !DILocation(line: 253, column: 474, scope: !4296)
!4303 = !DILocation(line: 253, column: 472, scope: !4296)
!4304 = !DILocation(line: 253, column: 465, scope: !4296)
!4305 = !DILocation(line: 253, column: 487, scope: !4296)
!4306 = !DILocation(line: 253, column: 445, scope: !4296)
!4307 = !DILocation(line: 253, column: 439, scope: !4296)
!4308 = !DILocation(line: 253, column: 374, scope: !4296)
!4309 = !DILocation(line: 253, column: 374, scope: !4310)
!4310 = !DILexicalBlockFile(scope: !4278, file: !624, discriminator: 7)
!4311 = !DILocation(line: 253, column: 502, scope: !4310)
!4312 = !DILocation(line: 253, column: 498, scope: !4310)
!4313 = !DILocation(line: 253, column: 496, scope: !4310)
!4314 = !DILocation(line: 253, column: 372, scope: !4310)
!4315 = !DILocation(line: 253, column: 508, scope: !4310)
!4316 = !DILocation(line: 253, column: 506, scope: !4310)
!4317 = !DILocation(line: 253, column: 370, scope: !4310)
!4318 = !DILocation(line: 253, column: 363, scope: !4310)
!4319 = !DILocation(line: 253, column: 358, scope: !4310)
!4320 = !DILocation(line: 253, column: 354, scope: !4310)
!4321 = !DILocation(line: 253, column: 361, scope: !4310)
!4322 = !DILocation(line: 253, column: 517, scope: !4310)
!4323 = !DILocation(line: 253, column: 348, scope: !4324)
!4324 = !DILexicalBlockFile(scope: !4272, file: !624, discriminator: 8)
!4325 = !DILocation(line: 253, column: 324, scope: !4324)
!4326 = distinct !{!4326, !4327}
!4327 = !DILocation(line: 253, column: 324, scope: !4268)
!4328 = !DILocation(line: 253, column: 526, scope: !4329)
!4329 = !DILexicalBlockFile(scope: !4268, file: !624, discriminator: 9)
!4330 = !DILocation(line: 253, column: 523, scope: !4329)
!4331 = !DILocation(line: 253, column: 547, scope: !4329)
!4332 = !DILocation(line: 253, column: 544, scope: !4329)
!4333 = !DILocation(line: 253, column: 571, scope: !4329)
!4334 = !DILocation(line: 253, column: 568, scope: !4329)
!4335 = !DILocation(line: 253, column: 588, scope: !4329)
!4336 = !DILocation(line: 253, column: 318, scope: !4337)
!4337 = !DILexicalBlockFile(scope: !4261, file: !624, discriminator: 10)
!4338 = !DILocation(line: 253, column: 293, scope: !4337)
!4339 = distinct !{!4339, !4340}
!4340 = !DILocation(line: 253, column: 293, scope: !4225)
!4341 = !DILocation(line: 253, column: 590, scope: !4342)
!4342 = !DILexicalBlockFile(scope: !4225, file: !624, discriminator: 11)
!4343 = distinct !DISubprogram(name: "blend_phoenix_8bit", scope: !624, file: !624, line: 266, type: !1531, isLocal: true, isDefinition: true, scopeLine: 266, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!4344 = !DILocalVariable(name: "top", arg: 1, scope: !4343, file: !624, line: 266, type: !900)
!4345 = !DILocation(line: 266, column: 47, scope: !4343)
!4346 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !4343, file: !624, line: 266, type: !902)
!4347 = !DILocation(line: 266, column: 62, scope: !4343)
!4348 = !DILocalVariable(name: "bottom", arg: 3, scope: !4343, file: !624, line: 266, type: !900)
!4349 = !DILocation(line: 266, column: 91, scope: !4343)
!4350 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !4343, file: !624, line: 266, type: !902)
!4351 = !DILocation(line: 266, column: 109, scope: !4343)
!4352 = !DILocalVariable(name: "dst", arg: 5, scope: !4343, file: !624, line: 266, type: !329)
!4353 = !DILocation(line: 266, column: 135, scope: !4343)
!4354 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !4343, file: !624, line: 266, type: !902)
!4355 = !DILocation(line: 266, column: 150, scope: !4343)
!4356 = !DILocalVariable(name: "width", arg: 7, scope: !4343, file: !624, line: 266, type: !902)
!4357 = !DILocation(line: 266, column: 174, scope: !4343)
!4358 = !DILocalVariable(name: "height", arg: 8, scope: !4343, file: !624, line: 266, type: !902)
!4359 = !DILocation(line: 266, column: 191, scope: !4343)
!4360 = !DILocalVariable(name: "param", arg: 9, scope: !4343, file: !624, line: 266, type: !884)
!4361 = !DILocation(line: 266, column: 213, scope: !4343)
!4362 = !DILocalVariable(name: "values", arg: 10, scope: !4343, file: !624, line: 266, type: !544)
!4363 = !DILocation(line: 266, column: 228, scope: !4343)
!4364 = !DILocalVariable(name: "starty", arg: 11, scope: !4343, file: !624, line: 266, type: !238)
!4365 = !DILocation(line: 266, column: 240, scope: !4343)
!4366 = !DILocalVariable(name: "opacity", scope: !4343, file: !624, line: 266, type: !248)
!4367 = !DILocation(line: 266, column: 257, scope: !4343)
!4368 = !DILocation(line: 266, column: 267, scope: !4343)
!4369 = !DILocation(line: 266, column: 274, scope: !4343)
!4370 = !DILocalVariable(name: "i", scope: !4343, file: !624, line: 266, type: !238)
!4371 = !DILocation(line: 266, column: 287, scope: !4343)
!4372 = !DILocalVariable(name: "j", scope: !4343, file: !624, line: 266, type: !238)
!4373 = !DILocation(line: 266, column: 290, scope: !4343)
!4374 = !DILocation(line: 266, column: 300, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4343, file: !624, line: 266, column: 293)
!4376 = !DILocation(line: 266, column: 298, scope: !4375)
!4377 = !DILocation(line: 266, column: 305, scope: !4378)
!4378 = !DILexicalBlockFile(scope: !4379, file: !624, discriminator: 1)
!4379 = distinct !DILexicalBlock(scope: !4375, file: !624, line: 266, column: 293)
!4380 = !DILocation(line: 266, column: 309, scope: !4378)
!4381 = !DILocation(line: 266, column: 307, scope: !4378)
!4382 = !DILocation(line: 266, column: 293, scope: !4378)
!4383 = !DILocation(line: 266, column: 331, scope: !4384)
!4384 = !DILexicalBlockFile(scope: !4385, file: !624, discriminator: 2)
!4385 = distinct !DILexicalBlock(scope: !4386, file: !624, line: 266, column: 324)
!4386 = distinct !DILexicalBlock(scope: !4379, file: !624, line: 266, column: 322)
!4387 = !DILocation(line: 266, column: 329, scope: !4384)
!4388 = !DILocation(line: 266, column: 336, scope: !4389)
!4389 = !DILexicalBlockFile(scope: !4390, file: !624, discriminator: 3)
!4390 = distinct !DILexicalBlock(scope: !4385, file: !624, line: 266, column: 324)
!4391 = !DILocation(line: 266, column: 340, scope: !4389)
!4392 = !DILocation(line: 266, column: 338, scope: !4389)
!4393 = !DILocation(line: 266, column: 324, scope: !4389)
!4394 = !DILocation(line: 266, column: 367, scope: !4395)
!4395 = !DILexicalBlockFile(scope: !4396, file: !624, discriminator: 4)
!4396 = distinct !DILexicalBlock(scope: !4390, file: !624, line: 266, column: 352)
!4397 = !DILocation(line: 266, column: 363, scope: !4395)
!4398 = !DILocation(line: 266, column: 380, scope: !4395)
!4399 = !DILocation(line: 266, column: 376, scope: !4395)
!4400 = !DILocation(line: 266, column: 375, scope: !4395)
!4401 = !DILocation(line: 266, column: 394, scope: !4395)
!4402 = !DILocation(line: 266, column: 387, scope: !4395)
!4403 = !DILocation(line: 266, column: 386, scope: !4395)
!4404 = !DILocation(line: 266, column: 384, scope: !4395)
!4405 = !DILocation(line: 266, column: 408, scope: !4406)
!4406 = !DILexicalBlockFile(scope: !4396, file: !624, discriminator: 5)
!4407 = !DILocation(line: 266, column: 401, scope: !4406)
!4408 = !DILocation(line: 266, column: 400, scope: !4406)
!4409 = !DILocation(line: 266, column: 375, scope: !4406)
!4410 = !DILocation(line: 266, column: 419, scope: !4411)
!4411 = !DILexicalBlockFile(scope: !4396, file: !624, discriminator: 6)
!4412 = !DILocation(line: 266, column: 415, scope: !4411)
!4413 = !DILocation(line: 266, column: 414, scope: !4411)
!4414 = !DILocation(line: 266, column: 375, scope: !4411)
!4415 = !DILocation(line: 266, column: 375, scope: !4416)
!4416 = !DILexicalBlockFile(scope: !4396, file: !624, discriminator: 7)
!4417 = !DILocation(line: 266, column: 432, scope: !4416)
!4418 = !DILocation(line: 266, column: 428, scope: !4416)
!4419 = !DILocation(line: 266, column: 427, scope: !4416)
!4420 = !DILocation(line: 266, column: 446, scope: !4416)
!4421 = !DILocation(line: 266, column: 439, scope: !4416)
!4422 = !DILocation(line: 266, column: 438, scope: !4416)
!4423 = !DILocation(line: 266, column: 436, scope: !4416)
!4424 = !DILocation(line: 266, column: 457, scope: !4425)
!4425 = !DILexicalBlockFile(scope: !4396, file: !624, discriminator: 8)
!4426 = !DILocation(line: 266, column: 453, scope: !4425)
!4427 = !DILocation(line: 266, column: 452, scope: !4425)
!4428 = !DILocation(line: 266, column: 427, scope: !4425)
!4429 = !DILocation(line: 266, column: 471, scope: !4430)
!4430 = !DILexicalBlockFile(scope: !4396, file: !624, discriminator: 9)
!4431 = !DILocation(line: 266, column: 464, scope: !4430)
!4432 = !DILocation(line: 266, column: 463, scope: !4430)
!4433 = !DILocation(line: 266, column: 427, scope: !4430)
!4434 = !DILocation(line: 266, column: 427, scope: !4435)
!4435 = !DILexicalBlockFile(scope: !4396, file: !624, discriminator: 10)
!4436 = !DILocation(line: 266, column: 424, scope: !4435)
!4437 = !DILocation(line: 266, column: 476, scope: !4435)
!4438 = !DILocation(line: 266, column: 489, scope: !4435)
!4439 = !DILocation(line: 266, column: 485, scope: !4435)
!4440 = !DILocation(line: 266, column: 483, scope: !4435)
!4441 = !DILocation(line: 266, column: 372, scope: !4435)
!4442 = !DILocation(line: 266, column: 495, scope: !4435)
!4443 = !DILocation(line: 266, column: 493, scope: !4435)
!4444 = !DILocation(line: 266, column: 370, scope: !4435)
!4445 = !DILocation(line: 266, column: 363, scope: !4435)
!4446 = !DILocation(line: 266, column: 358, scope: !4435)
!4447 = !DILocation(line: 266, column: 354, scope: !4435)
!4448 = !DILocation(line: 266, column: 361, scope: !4435)
!4449 = !DILocation(line: 266, column: 504, scope: !4435)
!4450 = !DILocation(line: 266, column: 348, scope: !4451)
!4451 = !DILexicalBlockFile(scope: !4390, file: !624, discriminator: 11)
!4452 = !DILocation(line: 266, column: 324, scope: !4451)
!4453 = distinct !{!4453, !4454}
!4454 = !DILocation(line: 266, column: 324, scope: !4386)
!4455 = !DILocation(line: 266, column: 513, scope: !4456)
!4456 = !DILexicalBlockFile(scope: !4386, file: !624, discriminator: 12)
!4457 = !DILocation(line: 266, column: 510, scope: !4456)
!4458 = !DILocation(line: 266, column: 534, scope: !4456)
!4459 = !DILocation(line: 266, column: 531, scope: !4456)
!4460 = !DILocation(line: 266, column: 558, scope: !4456)
!4461 = !DILocation(line: 266, column: 555, scope: !4456)
!4462 = !DILocation(line: 266, column: 575, scope: !4456)
!4463 = !DILocation(line: 266, column: 318, scope: !4464)
!4464 = !DILexicalBlockFile(scope: !4379, file: !624, discriminator: 13)
!4465 = !DILocation(line: 266, column: 293, scope: !4464)
!4466 = distinct !{!4466, !4467}
!4467 = !DILocation(line: 266, column: 293, scope: !4343)
!4468 = !DILocation(line: 266, column: 577, scope: !4469)
!4469 = !DILexicalBlockFile(scope: !4343, file: !624, discriminator: 14)
!4470 = distinct !DISubprogram(name: "blend_pinlight_8bit", scope: !624, file: !624, line: 265, type: !1531, isLocal: true, isDefinition: true, scopeLine: 265, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!4471 = !DILocalVariable(name: "top", arg: 1, scope: !4470, file: !624, line: 265, type: !900)
!4472 = !DILocation(line: 265, column: 48, scope: !4470)
!4473 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !4470, file: !624, line: 265, type: !902)
!4474 = !DILocation(line: 265, column: 63, scope: !4470)
!4475 = !DILocalVariable(name: "bottom", arg: 3, scope: !4470, file: !624, line: 265, type: !900)
!4476 = !DILocation(line: 265, column: 92, scope: !4470)
!4477 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !4470, file: !624, line: 265, type: !902)
!4478 = !DILocation(line: 265, column: 110, scope: !4470)
!4479 = !DILocalVariable(name: "dst", arg: 5, scope: !4470, file: !624, line: 265, type: !329)
!4480 = !DILocation(line: 265, column: 136, scope: !4470)
!4481 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !4470, file: !624, line: 265, type: !902)
!4482 = !DILocation(line: 265, column: 151, scope: !4470)
!4483 = !DILocalVariable(name: "width", arg: 7, scope: !4470, file: !624, line: 265, type: !902)
!4484 = !DILocation(line: 265, column: 175, scope: !4470)
!4485 = !DILocalVariable(name: "height", arg: 8, scope: !4470, file: !624, line: 265, type: !902)
!4486 = !DILocation(line: 265, column: 192, scope: !4470)
!4487 = !DILocalVariable(name: "param", arg: 9, scope: !4470, file: !624, line: 265, type: !884)
!4488 = !DILocation(line: 265, column: 214, scope: !4470)
!4489 = !DILocalVariable(name: "values", arg: 10, scope: !4470, file: !624, line: 265, type: !544)
!4490 = !DILocation(line: 265, column: 229, scope: !4470)
!4491 = !DILocalVariable(name: "starty", arg: 11, scope: !4470, file: !624, line: 265, type: !238)
!4492 = !DILocation(line: 265, column: 241, scope: !4470)
!4493 = !DILocalVariable(name: "opacity", scope: !4470, file: !624, line: 265, type: !248)
!4494 = !DILocation(line: 265, column: 258, scope: !4470)
!4495 = !DILocation(line: 265, column: 268, scope: !4470)
!4496 = !DILocation(line: 265, column: 275, scope: !4470)
!4497 = !DILocalVariable(name: "i", scope: !4470, file: !624, line: 265, type: !238)
!4498 = !DILocation(line: 265, column: 288, scope: !4470)
!4499 = !DILocalVariable(name: "j", scope: !4470, file: !624, line: 265, type: !238)
!4500 = !DILocation(line: 265, column: 291, scope: !4470)
!4501 = !DILocation(line: 265, column: 301, scope: !4502)
!4502 = distinct !DILexicalBlock(scope: !4470, file: !624, line: 265, column: 294)
!4503 = !DILocation(line: 265, column: 299, scope: !4502)
!4504 = !DILocation(line: 265, column: 306, scope: !4505)
!4505 = !DILexicalBlockFile(scope: !4506, file: !624, discriminator: 1)
!4506 = distinct !DILexicalBlock(scope: !4502, file: !624, line: 265, column: 294)
!4507 = !DILocation(line: 265, column: 310, scope: !4505)
!4508 = !DILocation(line: 265, column: 308, scope: !4505)
!4509 = !DILocation(line: 265, column: 294, scope: !4505)
!4510 = !DILocation(line: 265, column: 332, scope: !4511)
!4511 = !DILexicalBlockFile(scope: !4512, file: !624, discriminator: 2)
!4512 = distinct !DILexicalBlock(scope: !4513, file: !624, line: 265, column: 325)
!4513 = distinct !DILexicalBlock(scope: !4506, file: !624, line: 265, column: 323)
!4514 = !DILocation(line: 265, column: 330, scope: !4511)
!4515 = !DILocation(line: 265, column: 337, scope: !4516)
!4516 = !DILexicalBlockFile(scope: !4517, file: !624, discriminator: 3)
!4517 = distinct !DILexicalBlock(scope: !4512, file: !624, line: 265, column: 325)
!4518 = !DILocation(line: 265, column: 341, scope: !4516)
!4519 = !DILocation(line: 265, column: 339, scope: !4516)
!4520 = !DILocation(line: 265, column: 325, scope: !4516)
!4521 = !DILocation(line: 265, column: 368, scope: !4522)
!4522 = !DILexicalBlockFile(scope: !4523, file: !624, discriminator: 4)
!4523 = distinct !DILexicalBlock(scope: !4517, file: !624, line: 265, column: 353)
!4524 = !DILocation(line: 265, column: 364, scope: !4522)
!4525 = !DILocation(line: 265, column: 383, scope: !4522)
!4526 = !DILocation(line: 265, column: 376, scope: !4522)
!4527 = !DILocation(line: 265, column: 386, scope: !4522)
!4528 = !DILocation(line: 265, column: 375, scope: !4522)
!4529 = !DILocation(line: 265, column: 401, scope: !4530)
!4530 = !DILexicalBlockFile(scope: !4523, file: !624, discriminator: 5)
!4531 = !DILocation(line: 265, column: 397, scope: !4530)
!4532 = !DILocation(line: 265, column: 396, scope: !4530)
!4533 = !DILocation(line: 265, column: 419, scope: !4530)
!4534 = !DILocation(line: 265, column: 412, scope: !4530)
!4535 = !DILocation(line: 265, column: 410, scope: !4530)
!4536 = !DILocation(line: 265, column: 405, scope: !4530)
!4537 = !DILocation(line: 265, column: 437, scope: !4538)
!4538 = !DILexicalBlockFile(scope: !4523, file: !624, discriminator: 6)
!4539 = !DILocation(line: 265, column: 430, scope: !4538)
!4540 = !DILocation(line: 265, column: 428, scope: !4538)
!4541 = !DILocation(line: 265, column: 396, scope: !4538)
!4542 = !DILocation(line: 265, column: 448, scope: !4543)
!4543 = !DILexicalBlockFile(scope: !4523, file: !624, discriminator: 7)
!4544 = !DILocation(line: 265, column: 444, scope: !4543)
!4545 = !DILocation(line: 265, column: 443, scope: !4543)
!4546 = !DILocation(line: 265, column: 396, scope: !4543)
!4547 = !DILocation(line: 265, column: 396, scope: !4548)
!4548 = !DILexicalBlockFile(scope: !4523, file: !624, discriminator: 8)
!4549 = !DILocation(line: 265, column: 375, scope: !4548)
!4550 = !DILocation(line: 265, column: 461, scope: !4551)
!4551 = !DILexicalBlockFile(scope: !4523, file: !624, discriminator: 9)
!4552 = !DILocation(line: 265, column: 457, scope: !4551)
!4553 = !DILocation(line: 265, column: 456, scope: !4551)
!4554 = !DILocation(line: 265, column: 480, scope: !4551)
!4555 = !DILocation(line: 265, column: 473, scope: !4551)
!4556 = !DILocation(line: 265, column: 483, scope: !4551)
!4557 = !DILocation(line: 265, column: 470, scope: !4551)
!4558 = !DILocation(line: 265, column: 465, scope: !4551)
!4559 = !DILocation(line: 265, column: 498, scope: !4560)
!4560 = !DILexicalBlockFile(scope: !4523, file: !624, discriminator: 10)
!4561 = !DILocation(line: 265, column: 494, scope: !4560)
!4562 = !DILocation(line: 265, column: 493, scope: !4560)
!4563 = !DILocation(line: 265, column: 456, scope: !4560)
!4564 = !DILocation(line: 265, column: 517, scope: !4565)
!4565 = !DILexicalBlockFile(scope: !4523, file: !624, discriminator: 11)
!4566 = !DILocation(line: 265, column: 510, scope: !4565)
!4567 = !DILocation(line: 265, column: 520, scope: !4565)
!4568 = !DILocation(line: 265, column: 507, scope: !4565)
!4569 = !DILocation(line: 265, column: 456, scope: !4565)
!4570 = !DILocation(line: 265, column: 456, scope: !4571)
!4571 = !DILexicalBlockFile(scope: !4523, file: !624, discriminator: 12)
!4572 = !DILocation(line: 265, column: 375, scope: !4571)
!4573 = !DILocation(line: 265, column: 375, scope: !4574)
!4574 = !DILexicalBlockFile(scope: !4523, file: !624, discriminator: 13)
!4575 = !DILocation(line: 265, column: 536, scope: !4574)
!4576 = !DILocation(line: 265, column: 532, scope: !4574)
!4577 = !DILocation(line: 265, column: 530, scope: !4574)
!4578 = !DILocation(line: 265, column: 373, scope: !4574)
!4579 = !DILocation(line: 265, column: 542, scope: !4574)
!4580 = !DILocation(line: 265, column: 540, scope: !4574)
!4581 = !DILocation(line: 265, column: 371, scope: !4574)
!4582 = !DILocation(line: 265, column: 364, scope: !4574)
!4583 = !DILocation(line: 265, column: 359, scope: !4574)
!4584 = !DILocation(line: 265, column: 355, scope: !4574)
!4585 = !DILocation(line: 265, column: 362, scope: !4574)
!4586 = !DILocation(line: 265, column: 551, scope: !4574)
!4587 = !DILocation(line: 265, column: 349, scope: !4588)
!4588 = !DILexicalBlockFile(scope: !4517, file: !624, discriminator: 14)
!4589 = !DILocation(line: 265, column: 325, scope: !4588)
!4590 = distinct !{!4590, !4591}
!4591 = !DILocation(line: 265, column: 325, scope: !4513)
!4592 = !DILocation(line: 265, column: 560, scope: !4593)
!4593 = !DILexicalBlockFile(scope: !4513, file: !624, discriminator: 15)
!4594 = !DILocation(line: 265, column: 557, scope: !4593)
!4595 = !DILocation(line: 265, column: 581, scope: !4593)
!4596 = !DILocation(line: 265, column: 578, scope: !4593)
!4597 = !DILocation(line: 265, column: 605, scope: !4593)
!4598 = !DILocation(line: 265, column: 602, scope: !4593)
!4599 = !DILocation(line: 265, column: 622, scope: !4593)
!4600 = !DILocation(line: 265, column: 319, scope: !4601)
!4601 = !DILexicalBlockFile(scope: !4506, file: !624, discriminator: 16)
!4602 = !DILocation(line: 265, column: 294, scope: !4601)
!4603 = distinct !{!4603, !4604}
!4604 = !DILocation(line: 265, column: 294, scope: !4470)
!4605 = !DILocation(line: 265, column: 624, scope: !4606)
!4606 = !DILexicalBlockFile(scope: !4470, file: !624, discriminator: 17)
!4607 = distinct !DISubprogram(name: "blend_reflect_8bit", scope: !624, file: !624, line: 267, type: !1531, isLocal: true, isDefinition: true, scopeLine: 267, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!4608 = !DILocalVariable(name: "top", arg: 1, scope: !4607, file: !624, line: 267, type: !900)
!4609 = !DILocation(line: 267, column: 47, scope: !4607)
!4610 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !4607, file: !624, line: 267, type: !902)
!4611 = !DILocation(line: 267, column: 62, scope: !4607)
!4612 = !DILocalVariable(name: "bottom", arg: 3, scope: !4607, file: !624, line: 267, type: !900)
!4613 = !DILocation(line: 267, column: 91, scope: !4607)
!4614 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !4607, file: !624, line: 267, type: !902)
!4615 = !DILocation(line: 267, column: 109, scope: !4607)
!4616 = !DILocalVariable(name: "dst", arg: 5, scope: !4607, file: !624, line: 267, type: !329)
!4617 = !DILocation(line: 267, column: 135, scope: !4607)
!4618 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !4607, file: !624, line: 267, type: !902)
!4619 = !DILocation(line: 267, column: 150, scope: !4607)
!4620 = !DILocalVariable(name: "width", arg: 7, scope: !4607, file: !624, line: 267, type: !902)
!4621 = !DILocation(line: 267, column: 174, scope: !4607)
!4622 = !DILocalVariable(name: "height", arg: 8, scope: !4607, file: !624, line: 267, type: !902)
!4623 = !DILocation(line: 267, column: 191, scope: !4607)
!4624 = !DILocalVariable(name: "param", arg: 9, scope: !4607, file: !624, line: 267, type: !884)
!4625 = !DILocation(line: 267, column: 213, scope: !4607)
!4626 = !DILocalVariable(name: "values", arg: 10, scope: !4607, file: !624, line: 267, type: !544)
!4627 = !DILocation(line: 267, column: 228, scope: !4607)
!4628 = !DILocalVariable(name: "starty", arg: 11, scope: !4607, file: !624, line: 267, type: !238)
!4629 = !DILocation(line: 267, column: 240, scope: !4607)
!4630 = !DILocalVariable(name: "opacity", scope: !4607, file: !624, line: 267, type: !248)
!4631 = !DILocation(line: 267, column: 257, scope: !4607)
!4632 = !DILocation(line: 267, column: 267, scope: !4607)
!4633 = !DILocation(line: 267, column: 274, scope: !4607)
!4634 = !DILocalVariable(name: "i", scope: !4607, file: !624, line: 267, type: !238)
!4635 = !DILocation(line: 267, column: 287, scope: !4607)
!4636 = !DILocalVariable(name: "j", scope: !4607, file: !624, line: 267, type: !238)
!4637 = !DILocation(line: 267, column: 290, scope: !4607)
!4638 = !DILocation(line: 267, column: 300, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4607, file: !624, line: 267, column: 293)
!4640 = !DILocation(line: 267, column: 298, scope: !4639)
!4641 = !DILocation(line: 267, column: 305, scope: !4642)
!4642 = !DILexicalBlockFile(scope: !4643, file: !624, discriminator: 1)
!4643 = distinct !DILexicalBlock(scope: !4639, file: !624, line: 267, column: 293)
!4644 = !DILocation(line: 267, column: 309, scope: !4642)
!4645 = !DILocation(line: 267, column: 307, scope: !4642)
!4646 = !DILocation(line: 267, column: 293, scope: !4642)
!4647 = !DILocation(line: 267, column: 331, scope: !4648)
!4648 = !DILexicalBlockFile(scope: !4649, file: !624, discriminator: 2)
!4649 = distinct !DILexicalBlock(scope: !4650, file: !624, line: 267, column: 324)
!4650 = distinct !DILexicalBlock(scope: !4643, file: !624, line: 267, column: 322)
!4651 = !DILocation(line: 267, column: 329, scope: !4648)
!4652 = !DILocation(line: 267, column: 336, scope: !4653)
!4653 = !DILexicalBlockFile(scope: !4654, file: !624, discriminator: 3)
!4654 = distinct !DILexicalBlock(scope: !4649, file: !624, line: 267, column: 324)
!4655 = !DILocation(line: 267, column: 340, scope: !4653)
!4656 = !DILocation(line: 267, column: 338, scope: !4653)
!4657 = !DILocation(line: 267, column: 324, scope: !4653)
!4658 = !DILocation(line: 267, column: 367, scope: !4659)
!4659 = !DILexicalBlockFile(scope: !4660, file: !624, discriminator: 4)
!4660 = distinct !DILexicalBlock(scope: !4654, file: !624, line: 267, column: 352)
!4661 = !DILocation(line: 267, column: 363, scope: !4659)
!4662 = !DILocation(line: 267, column: 382, scope: !4659)
!4663 = !DILocation(line: 267, column: 375, scope: !4659)
!4664 = !DILocation(line: 267, column: 385, scope: !4659)
!4665 = !DILocation(line: 267, column: 374, scope: !4659)
!4666 = !DILocation(line: 267, column: 402, scope: !4667)
!4667 = !DILexicalBlockFile(scope: !4660, file: !624, discriminator: 5)
!4668 = !DILocation(line: 267, column: 395, scope: !4667)
!4669 = !DILocation(line: 267, column: 374, scope: !4667)
!4670 = !DILocation(line: 267, column: 422, scope: !4671)
!4671 = !DILexicalBlockFile(scope: !4660, file: !624, discriminator: 6)
!4672 = !DILocation(line: 267, column: 418, scope: !4671)
!4673 = !DILocation(line: 267, column: 431, scope: !4671)
!4674 = !DILocation(line: 267, column: 427, scope: !4671)
!4675 = !DILocation(line: 267, column: 425, scope: !4671)
!4676 = !DILocation(line: 267, column: 450, scope: !4671)
!4677 = !DILocation(line: 267, column: 443, scope: !4671)
!4678 = !DILocation(line: 267, column: 441, scope: !4671)
!4679 = !DILocation(line: 267, column: 434, scope: !4671)
!4680 = !DILocation(line: 267, column: 414, scope: !4671)
!4681 = !DILocation(line: 267, column: 408, scope: !4671)
!4682 = !DILocation(line: 267, column: 464, scope: !4683)
!4683 = !DILexicalBlockFile(scope: !4660, file: !624, discriminator: 7)
!4684 = !DILocation(line: 267, column: 460, scope: !4683)
!4685 = !DILocation(line: 267, column: 473, scope: !4683)
!4686 = !DILocation(line: 267, column: 469, scope: !4683)
!4687 = !DILocation(line: 267, column: 467, scope: !4683)
!4688 = !DILocation(line: 267, column: 492, scope: !4683)
!4689 = !DILocation(line: 267, column: 485, scope: !4683)
!4690 = !DILocation(line: 267, column: 483, scope: !4683)
!4691 = !DILocation(line: 267, column: 476, scope: !4683)
!4692 = !DILocation(line: 267, column: 408, scope: !4683)
!4693 = !DILocation(line: 267, column: 408, scope: !4694)
!4694 = !DILexicalBlockFile(scope: !4660, file: !624, discriminator: 8)
!4695 = !DILocation(line: 267, column: 408, scope: !4696)
!4696 = !DILexicalBlockFile(scope: !4660, file: !624, discriminator: 9)
!4697 = !DILocation(line: 267, column: 374, scope: !4696)
!4698 = !DILocation(line: 267, column: 374, scope: !4699)
!4699 = !DILexicalBlockFile(scope: !4660, file: !624, discriminator: 10)
!4700 = !DILocation(line: 267, column: 514, scope: !4699)
!4701 = !DILocation(line: 267, column: 510, scope: !4699)
!4702 = !DILocation(line: 267, column: 508, scope: !4699)
!4703 = !DILocation(line: 267, column: 372, scope: !4699)
!4704 = !DILocation(line: 267, column: 520, scope: !4699)
!4705 = !DILocation(line: 267, column: 518, scope: !4699)
!4706 = !DILocation(line: 267, column: 370, scope: !4699)
!4707 = !DILocation(line: 267, column: 363, scope: !4699)
!4708 = !DILocation(line: 267, column: 358, scope: !4699)
!4709 = !DILocation(line: 267, column: 354, scope: !4699)
!4710 = !DILocation(line: 267, column: 361, scope: !4699)
!4711 = !DILocation(line: 267, column: 529, scope: !4699)
!4712 = !DILocation(line: 267, column: 348, scope: !4713)
!4713 = !DILexicalBlockFile(scope: !4654, file: !624, discriminator: 11)
!4714 = !DILocation(line: 267, column: 324, scope: !4713)
!4715 = distinct !{!4715, !4716}
!4716 = !DILocation(line: 267, column: 324, scope: !4650)
!4717 = !DILocation(line: 267, column: 538, scope: !4718)
!4718 = !DILexicalBlockFile(scope: !4650, file: !624, discriminator: 12)
!4719 = !DILocation(line: 267, column: 535, scope: !4718)
!4720 = !DILocation(line: 267, column: 559, scope: !4718)
!4721 = !DILocation(line: 267, column: 556, scope: !4718)
!4722 = !DILocation(line: 267, column: 583, scope: !4718)
!4723 = !DILocation(line: 267, column: 580, scope: !4718)
!4724 = !DILocation(line: 267, column: 600, scope: !4718)
!4725 = !DILocation(line: 267, column: 318, scope: !4726)
!4726 = !DILexicalBlockFile(scope: !4643, file: !624, discriminator: 13)
!4727 = !DILocation(line: 267, column: 293, scope: !4726)
!4728 = distinct !{!4728, !4729}
!4729 = !DILocation(line: 267, column: 293, scope: !4607)
!4730 = !DILocation(line: 267, column: 602, scope: !4731)
!4731 = !DILexicalBlockFile(scope: !4607, file: !624, discriminator: 14)
!4732 = distinct !DISubprogram(name: "blend_screen_8bit", scope: !624, file: !624, line: 252, type: !1531, isLocal: true, isDefinition: true, scopeLine: 252, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!4733 = !DILocalVariable(name: "top", arg: 1, scope: !4732, file: !624, line: 252, type: !900)
!4734 = !DILocation(line: 252, column: 46, scope: !4732)
!4735 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !4732, file: !624, line: 252, type: !902)
!4736 = !DILocation(line: 252, column: 61, scope: !4732)
!4737 = !DILocalVariable(name: "bottom", arg: 3, scope: !4732, file: !624, line: 252, type: !900)
!4738 = !DILocation(line: 252, column: 90, scope: !4732)
!4739 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !4732, file: !624, line: 252, type: !902)
!4740 = !DILocation(line: 252, column: 108, scope: !4732)
!4741 = !DILocalVariable(name: "dst", arg: 5, scope: !4732, file: !624, line: 252, type: !329)
!4742 = !DILocation(line: 252, column: 134, scope: !4732)
!4743 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !4732, file: !624, line: 252, type: !902)
!4744 = !DILocation(line: 252, column: 149, scope: !4732)
!4745 = !DILocalVariable(name: "width", arg: 7, scope: !4732, file: !624, line: 252, type: !902)
!4746 = !DILocation(line: 252, column: 173, scope: !4732)
!4747 = !DILocalVariable(name: "height", arg: 8, scope: !4732, file: !624, line: 252, type: !902)
!4748 = !DILocation(line: 252, column: 190, scope: !4732)
!4749 = !DILocalVariable(name: "param", arg: 9, scope: !4732, file: !624, line: 252, type: !884)
!4750 = !DILocation(line: 252, column: 212, scope: !4732)
!4751 = !DILocalVariable(name: "values", arg: 10, scope: !4732, file: !624, line: 252, type: !544)
!4752 = !DILocation(line: 252, column: 227, scope: !4732)
!4753 = !DILocalVariable(name: "starty", arg: 11, scope: !4732, file: !624, line: 252, type: !238)
!4754 = !DILocation(line: 252, column: 239, scope: !4732)
!4755 = !DILocalVariable(name: "opacity", scope: !4732, file: !624, line: 252, type: !248)
!4756 = !DILocation(line: 252, column: 256, scope: !4732)
!4757 = !DILocation(line: 252, column: 266, scope: !4732)
!4758 = !DILocation(line: 252, column: 273, scope: !4732)
!4759 = !DILocalVariable(name: "i", scope: !4732, file: !624, line: 252, type: !238)
!4760 = !DILocation(line: 252, column: 286, scope: !4732)
!4761 = !DILocalVariable(name: "j", scope: !4732, file: !624, line: 252, type: !238)
!4762 = !DILocation(line: 252, column: 289, scope: !4732)
!4763 = !DILocation(line: 252, column: 299, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4732, file: !624, line: 252, column: 292)
!4765 = !DILocation(line: 252, column: 297, scope: !4764)
!4766 = !DILocation(line: 252, column: 304, scope: !4767)
!4767 = !DILexicalBlockFile(scope: !4768, file: !624, discriminator: 1)
!4768 = distinct !DILexicalBlock(scope: !4764, file: !624, line: 252, column: 292)
!4769 = !DILocation(line: 252, column: 308, scope: !4767)
!4770 = !DILocation(line: 252, column: 306, scope: !4767)
!4771 = !DILocation(line: 252, column: 292, scope: !4767)
!4772 = !DILocation(line: 252, column: 330, scope: !4773)
!4773 = !DILexicalBlockFile(scope: !4774, file: !624, discriminator: 2)
!4774 = distinct !DILexicalBlock(scope: !4775, file: !624, line: 252, column: 323)
!4775 = distinct !DILexicalBlock(scope: !4768, file: !624, line: 252, column: 321)
!4776 = !DILocation(line: 252, column: 328, scope: !4773)
!4777 = !DILocation(line: 252, column: 335, scope: !4778)
!4778 = !DILexicalBlockFile(scope: !4779, file: !624, discriminator: 3)
!4779 = distinct !DILexicalBlock(scope: !4774, file: !624, line: 252, column: 323)
!4780 = !DILocation(line: 252, column: 339, scope: !4778)
!4781 = !DILocation(line: 252, column: 337, scope: !4778)
!4782 = !DILocation(line: 252, column: 323, scope: !4778)
!4783 = !DILocation(line: 252, column: 366, scope: !4784)
!4784 = !DILexicalBlockFile(scope: !4785, file: !624, discriminator: 4)
!4785 = distinct !DILexicalBlock(scope: !4779, file: !624, line: 252, column: 351)
!4786 = !DILocation(line: 252, column: 362, scope: !4784)
!4787 = !DILocation(line: 252, column: 399, scope: !4784)
!4788 = !DILocation(line: 252, column: 395, scope: !4784)
!4789 = !DILocation(line: 252, column: 394, scope: !4784)
!4790 = !DILocation(line: 252, column: 392, scope: !4784)
!4791 = !DILocation(line: 252, column: 421, scope: !4784)
!4792 = !DILocation(line: 252, column: 414, scope: !4784)
!4793 = !DILocation(line: 252, column: 413, scope: !4784)
!4794 = !DILocation(line: 252, column: 411, scope: !4784)
!4795 = !DILocation(line: 252, column: 404, scope: !4784)
!4796 = !DILocation(line: 252, column: 426, scope: !4784)
!4797 = !DILocation(line: 252, column: 384, scope: !4784)
!4798 = !DILocation(line: 252, column: 378, scope: !4784)
!4799 = !DILocation(line: 252, column: 441, scope: !4784)
!4800 = !DILocation(line: 252, column: 437, scope: !4784)
!4801 = !DILocation(line: 252, column: 435, scope: !4784)
!4802 = !DILocation(line: 252, column: 371, scope: !4784)
!4803 = !DILocation(line: 252, column: 447, scope: !4784)
!4804 = !DILocation(line: 252, column: 445, scope: !4784)
!4805 = !DILocation(line: 252, column: 369, scope: !4784)
!4806 = !DILocation(line: 252, column: 357, scope: !4784)
!4807 = !DILocation(line: 252, column: 353, scope: !4784)
!4808 = !DILocation(line: 252, column: 360, scope: !4784)
!4809 = !DILocation(line: 252, column: 456, scope: !4784)
!4810 = !DILocation(line: 252, column: 347, scope: !4811)
!4811 = !DILexicalBlockFile(scope: !4779, file: !624, discriminator: 5)
!4812 = !DILocation(line: 252, column: 323, scope: !4811)
!4813 = distinct !{!4813, !4814}
!4814 = !DILocation(line: 252, column: 323, scope: !4775)
!4815 = !DILocation(line: 252, column: 465, scope: !4816)
!4816 = !DILexicalBlockFile(scope: !4775, file: !624, discriminator: 6)
!4817 = !DILocation(line: 252, column: 462, scope: !4816)
!4818 = !DILocation(line: 252, column: 486, scope: !4816)
!4819 = !DILocation(line: 252, column: 483, scope: !4816)
!4820 = !DILocation(line: 252, column: 510, scope: !4816)
!4821 = !DILocation(line: 252, column: 507, scope: !4816)
!4822 = !DILocation(line: 252, column: 527, scope: !4816)
!4823 = !DILocation(line: 252, column: 317, scope: !4824)
!4824 = !DILexicalBlockFile(scope: !4768, file: !624, discriminator: 7)
!4825 = !DILocation(line: 252, column: 292, scope: !4824)
!4826 = distinct !{!4826, !4827}
!4827 = !DILocation(line: 252, column: 292, scope: !4732)
!4828 = !DILocation(line: 252, column: 529, scope: !4829)
!4829 = !DILexicalBlockFile(scope: !4732, file: !624, discriminator: 8)
!4830 = distinct !DISubprogram(name: "blend_softlight_8bit", scope: !624, file: !624, line: 263, type: !1531, isLocal: true, isDefinition: true, scopeLine: 263, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!4831 = !DILocalVariable(name: "top", arg: 1, scope: !4830, file: !624, line: 263, type: !900)
!4832 = !DILocation(line: 263, column: 49, scope: !4830)
!4833 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !4830, file: !624, line: 263, type: !902)
!4834 = !DILocation(line: 263, column: 64, scope: !4830)
!4835 = !DILocalVariable(name: "bottom", arg: 3, scope: !4830, file: !624, line: 263, type: !900)
!4836 = !DILocation(line: 263, column: 93, scope: !4830)
!4837 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !4830, file: !624, line: 263, type: !902)
!4838 = !DILocation(line: 263, column: 111, scope: !4830)
!4839 = !DILocalVariable(name: "dst", arg: 5, scope: !4830, file: !624, line: 263, type: !329)
!4840 = !DILocation(line: 263, column: 137, scope: !4830)
!4841 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !4830, file: !624, line: 263, type: !902)
!4842 = !DILocation(line: 263, column: 152, scope: !4830)
!4843 = !DILocalVariable(name: "width", arg: 7, scope: !4830, file: !624, line: 263, type: !902)
!4844 = !DILocation(line: 263, column: 176, scope: !4830)
!4845 = !DILocalVariable(name: "height", arg: 8, scope: !4830, file: !624, line: 263, type: !902)
!4846 = !DILocation(line: 263, column: 193, scope: !4830)
!4847 = !DILocalVariable(name: "param", arg: 9, scope: !4830, file: !624, line: 263, type: !884)
!4848 = !DILocation(line: 263, column: 215, scope: !4830)
!4849 = !DILocalVariable(name: "values", arg: 10, scope: !4830, file: !624, line: 263, type: !544)
!4850 = !DILocation(line: 263, column: 230, scope: !4830)
!4851 = !DILocalVariable(name: "starty", arg: 11, scope: !4830, file: !624, line: 263, type: !238)
!4852 = !DILocation(line: 263, column: 242, scope: !4830)
!4853 = !DILocalVariable(name: "opacity", scope: !4830, file: !624, line: 263, type: !248)
!4854 = !DILocation(line: 263, column: 259, scope: !4830)
!4855 = !DILocation(line: 263, column: 269, scope: !4830)
!4856 = !DILocation(line: 263, column: 276, scope: !4830)
!4857 = !DILocalVariable(name: "i", scope: !4830, file: !624, line: 263, type: !238)
!4858 = !DILocation(line: 263, column: 289, scope: !4830)
!4859 = !DILocalVariable(name: "j", scope: !4830, file: !624, line: 263, type: !238)
!4860 = !DILocation(line: 263, column: 292, scope: !4830)
!4861 = !DILocation(line: 263, column: 302, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4830, file: !624, line: 263, column: 295)
!4863 = !DILocation(line: 263, column: 300, scope: !4862)
!4864 = !DILocation(line: 263, column: 307, scope: !4865)
!4865 = !DILexicalBlockFile(scope: !4866, file: !624, discriminator: 1)
!4866 = distinct !DILexicalBlock(scope: !4862, file: !624, line: 263, column: 295)
!4867 = !DILocation(line: 263, column: 311, scope: !4865)
!4868 = !DILocation(line: 263, column: 309, scope: !4865)
!4869 = !DILocation(line: 263, column: 295, scope: !4865)
!4870 = !DILocation(line: 263, column: 333, scope: !4871)
!4871 = !DILexicalBlockFile(scope: !4872, file: !624, discriminator: 2)
!4872 = distinct !DILexicalBlock(scope: !4873, file: !624, line: 263, column: 326)
!4873 = distinct !DILexicalBlock(scope: !4866, file: !624, line: 263, column: 324)
!4874 = !DILocation(line: 263, column: 331, scope: !4871)
!4875 = !DILocation(line: 263, column: 338, scope: !4876)
!4876 = !DILexicalBlockFile(scope: !4877, file: !624, discriminator: 3)
!4877 = distinct !DILexicalBlock(scope: !4872, file: !624, line: 263, column: 326)
!4878 = !DILocation(line: 263, column: 342, scope: !4876)
!4879 = !DILocation(line: 263, column: 340, scope: !4876)
!4880 = !DILocation(line: 263, column: 326, scope: !4876)
!4881 = !DILocation(line: 263, column: 369, scope: !4882)
!4882 = !DILexicalBlockFile(scope: !4883, file: !624, discriminator: 4)
!4883 = distinct !DILexicalBlock(scope: !4877, file: !624, line: 263, column: 354)
!4884 = !DILocation(line: 263, column: 365, scope: !4882)
!4885 = !DILocation(line: 263, column: 381, scope: !4882)
!4886 = !DILocation(line: 263, column: 377, scope: !4882)
!4887 = !DILocation(line: 263, column: 384, scope: !4882)
!4888 = !DILocation(line: 263, column: 376, scope: !4882)
!4889 = !DILocation(line: 263, column: 400, scope: !4890)
!4890 = !DILexicalBlockFile(scope: !4883, file: !624, discriminator: 5)
!4891 = !DILocation(line: 263, column: 393, scope: !4890)
!4892 = !DILocation(line: 263, column: 419, scope: !4890)
!4893 = !DILocation(line: 263, column: 412, scope: !4890)
!4894 = !DILocation(line: 263, column: 410, scope: !4890)
!4895 = !DILocation(line: 263, column: 405, scope: !4890)
!4896 = !DILocation(line: 263, column: 430, scope: !4890)
!4897 = !DILocation(line: 263, column: 426, scope: !4890)
!4898 = !DILocation(line: 263, column: 433, scope: !4890)
!4899 = !DILocation(line: 263, column: 423, scope: !4890)
!4900 = !DILocation(line: 263, column: 442, scope: !4890)
!4901 = !DILocation(line: 263, column: 471, scope: !4890)
!4902 = !DILocation(line: 263, column: 464, scope: !4890)
!4903 = !DILocation(line: 263, column: 474, scope: !4890)
!4904 = !DILocation(line: 263, column: 459, scope: !4890)
!4905 = !DILocation(line: 263, column: 483, scope: !4890)
!4906 = !DILocation(line: 263, column: 457, scope: !4890)
!4907 = !DILocation(line: 263, column: 450, scope: !4890)
!4908 = !DILocation(line: 263, column: 403, scope: !4890)
!4909 = !DILocation(line: 263, column: 376, scope: !4890)
!4910 = !DILocation(line: 263, column: 498, scope: !4911)
!4911 = !DILexicalBlockFile(scope: !4883, file: !624, discriminator: 6)
!4912 = !DILocation(line: 263, column: 491, scope: !4911)
!4913 = !DILocation(line: 263, column: 510, scope: !4911)
!4914 = !DILocation(line: 263, column: 503, scope: !4911)
!4915 = !DILocation(line: 263, column: 529, scope: !4911)
!4916 = !DILocation(line: 263, column: 525, scope: !4911)
!4917 = !DILocation(line: 263, column: 523, scope: !4911)
!4918 = !DILocation(line: 263, column: 533, scope: !4911)
!4919 = !DILocation(line: 263, column: 513, scope: !4911)
!4920 = !DILocation(line: 263, column: 563, scope: !4911)
!4921 = !DILocation(line: 263, column: 556, scope: !4911)
!4922 = !DILocation(line: 263, column: 566, scope: !4911)
!4923 = !DILocation(line: 263, column: 551, scope: !4911)
!4924 = !DILocation(line: 263, column: 574, scope: !4911)
!4925 = !DILocation(line: 263, column: 549, scope: !4911)
!4926 = !DILocation(line: 263, column: 542, scope: !4911)
!4927 = !DILocation(line: 263, column: 501, scope: !4911)
!4928 = !DILocation(line: 263, column: 376, scope: !4911)
!4929 = !DILocation(line: 263, column: 376, scope: !4930)
!4930 = !DILexicalBlockFile(scope: !4883, file: !624, discriminator: 7)
!4931 = !DILocation(line: 263, column: 587, scope: !4930)
!4932 = !DILocation(line: 263, column: 583, scope: !4930)
!4933 = !DILocation(line: 263, column: 581, scope: !4930)
!4934 = !DILocation(line: 263, column: 593, scope: !4930)
!4935 = !DILocation(line: 263, column: 591, scope: !4930)
!4936 = !DILocation(line: 263, column: 372, scope: !4930)
!4937 = !DILocation(line: 263, column: 365, scope: !4930)
!4938 = !DILocation(line: 263, column: 360, scope: !4930)
!4939 = !DILocation(line: 263, column: 356, scope: !4930)
!4940 = !DILocation(line: 263, column: 363, scope: !4930)
!4941 = !DILocation(line: 263, column: 602, scope: !4930)
!4942 = !DILocation(line: 263, column: 350, scope: !4943)
!4943 = !DILexicalBlockFile(scope: !4877, file: !624, discriminator: 8)
!4944 = !DILocation(line: 263, column: 326, scope: !4943)
!4945 = distinct !{!4945, !4946}
!4946 = !DILocation(line: 263, column: 326, scope: !4873)
!4947 = !DILocation(line: 263, column: 611, scope: !4948)
!4948 = !DILexicalBlockFile(scope: !4873, file: !624, discriminator: 9)
!4949 = !DILocation(line: 263, column: 608, scope: !4948)
!4950 = !DILocation(line: 263, column: 632, scope: !4948)
!4951 = !DILocation(line: 263, column: 629, scope: !4948)
!4952 = !DILocation(line: 263, column: 656, scope: !4948)
!4953 = !DILocation(line: 263, column: 653, scope: !4948)
!4954 = !DILocation(line: 263, column: 673, scope: !4948)
!4955 = !DILocation(line: 263, column: 320, scope: !4956)
!4956 = !DILexicalBlockFile(scope: !4866, file: !624, discriminator: 10)
!4957 = !DILocation(line: 263, column: 295, scope: !4956)
!4958 = distinct !{!4958, !4959}
!4959 = !DILocation(line: 263, column: 295, scope: !4830)
!4960 = !DILocation(line: 263, column: 675, scope: !4961)
!4961 = !DILexicalBlockFile(scope: !4830, file: !624, discriminator: 11)
!4962 = distinct !DISubprogram(name: "blend_subtract_8bit", scope: !624, file: !624, line: 245, type: !1531, isLocal: true, isDefinition: true, scopeLine: 245, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!4963 = !DILocalVariable(name: "top", arg: 1, scope: !4962, file: !624, line: 245, type: !900)
!4964 = !DILocation(line: 245, column: 48, scope: !4962)
!4965 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !4962, file: !624, line: 245, type: !902)
!4966 = !DILocation(line: 245, column: 63, scope: !4962)
!4967 = !DILocalVariable(name: "bottom", arg: 3, scope: !4962, file: !624, line: 245, type: !900)
!4968 = !DILocation(line: 245, column: 92, scope: !4962)
!4969 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !4962, file: !624, line: 245, type: !902)
!4970 = !DILocation(line: 245, column: 110, scope: !4962)
!4971 = !DILocalVariable(name: "dst", arg: 5, scope: !4962, file: !624, line: 245, type: !329)
!4972 = !DILocation(line: 245, column: 136, scope: !4962)
!4973 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !4962, file: !624, line: 245, type: !902)
!4974 = !DILocation(line: 245, column: 151, scope: !4962)
!4975 = !DILocalVariable(name: "width", arg: 7, scope: !4962, file: !624, line: 245, type: !902)
!4976 = !DILocation(line: 245, column: 175, scope: !4962)
!4977 = !DILocalVariable(name: "height", arg: 8, scope: !4962, file: !624, line: 245, type: !902)
!4978 = !DILocation(line: 245, column: 192, scope: !4962)
!4979 = !DILocalVariable(name: "param", arg: 9, scope: !4962, file: !624, line: 245, type: !884)
!4980 = !DILocation(line: 245, column: 214, scope: !4962)
!4981 = !DILocalVariable(name: "values", arg: 10, scope: !4962, file: !624, line: 245, type: !544)
!4982 = !DILocation(line: 245, column: 229, scope: !4962)
!4983 = !DILocalVariable(name: "starty", arg: 11, scope: !4962, file: !624, line: 245, type: !238)
!4984 = !DILocation(line: 245, column: 241, scope: !4962)
!4985 = !DILocalVariable(name: "opacity", scope: !4962, file: !624, line: 245, type: !248)
!4986 = !DILocation(line: 245, column: 258, scope: !4962)
!4987 = !DILocation(line: 245, column: 268, scope: !4962)
!4988 = !DILocation(line: 245, column: 275, scope: !4962)
!4989 = !DILocalVariable(name: "i", scope: !4962, file: !624, line: 245, type: !238)
!4990 = !DILocation(line: 245, column: 288, scope: !4962)
!4991 = !DILocalVariable(name: "j", scope: !4962, file: !624, line: 245, type: !238)
!4992 = !DILocation(line: 245, column: 291, scope: !4962)
!4993 = !DILocation(line: 245, column: 301, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4962, file: !624, line: 245, column: 294)
!4995 = !DILocation(line: 245, column: 299, scope: !4994)
!4996 = !DILocation(line: 245, column: 306, scope: !4997)
!4997 = !DILexicalBlockFile(scope: !4998, file: !624, discriminator: 1)
!4998 = distinct !DILexicalBlock(scope: !4994, file: !624, line: 245, column: 294)
!4999 = !DILocation(line: 245, column: 310, scope: !4997)
!5000 = !DILocation(line: 245, column: 308, scope: !4997)
!5001 = !DILocation(line: 245, column: 294, scope: !4997)
!5002 = !DILocation(line: 245, column: 332, scope: !5003)
!5003 = !DILexicalBlockFile(scope: !5004, file: !624, discriminator: 2)
!5004 = distinct !DILexicalBlock(scope: !5005, file: !624, line: 245, column: 325)
!5005 = distinct !DILexicalBlock(scope: !4998, file: !624, line: 245, column: 323)
!5006 = !DILocation(line: 245, column: 330, scope: !5003)
!5007 = !DILocation(line: 245, column: 337, scope: !5008)
!5008 = !DILexicalBlockFile(scope: !5009, file: !624, discriminator: 3)
!5009 = distinct !DILexicalBlock(scope: !5004, file: !624, line: 245, column: 325)
!5010 = !DILocation(line: 245, column: 341, scope: !5008)
!5011 = !DILocation(line: 245, column: 339, scope: !5008)
!5012 = !DILocation(line: 245, column: 325, scope: !5008)
!5013 = !DILocation(line: 245, column: 368, scope: !5014)
!5014 = !DILexicalBlockFile(scope: !5015, file: !624, discriminator: 4)
!5015 = distinct !DILexicalBlock(scope: !5009, file: !624, line: 245, column: 353)
!5016 = !DILocation(line: 245, column: 364, scope: !5014)
!5017 = !DILocation(line: 245, column: 387, scope: !5014)
!5018 = !DILocation(line: 245, column: 383, scope: !5014)
!5019 = !DILocation(line: 245, column: 399, scope: !5014)
!5020 = !DILocation(line: 245, column: 392, scope: !5014)
!5021 = !DILocation(line: 245, column: 390, scope: !5014)
!5022 = !DILocation(line: 245, column: 380, scope: !5014)
!5023 = !DILocation(line: 245, column: 376, scope: !5014)
!5024 = !DILocation(line: 245, column: 376, scope: !5025)
!5025 = !DILexicalBlockFile(scope: !5015, file: !624, discriminator: 5)
!5026 = !DILocation(line: 245, column: 416, scope: !5027)
!5027 = !DILexicalBlockFile(scope: !5015, file: !624, discriminator: 6)
!5028 = !DILocation(line: 245, column: 412, scope: !5027)
!5029 = !DILocation(line: 245, column: 428, scope: !5027)
!5030 = !DILocation(line: 245, column: 421, scope: !5027)
!5031 = !DILocation(line: 245, column: 419, scope: !5027)
!5032 = !DILocation(line: 245, column: 376, scope: !5027)
!5033 = !DILocation(line: 245, column: 376, scope: !5034)
!5034 = !DILexicalBlockFile(scope: !5015, file: !624, discriminator: 7)
!5035 = !DILocation(line: 245, column: 440, scope: !5034)
!5036 = !DILocation(line: 245, column: 436, scope: !5034)
!5037 = !DILocation(line: 245, column: 434, scope: !5034)
!5038 = !DILocation(line: 245, column: 373, scope: !5034)
!5039 = !DILocation(line: 245, column: 446, scope: !5034)
!5040 = !DILocation(line: 245, column: 444, scope: !5034)
!5041 = !DILocation(line: 245, column: 371, scope: !5034)
!5042 = !DILocation(line: 245, column: 364, scope: !5034)
!5043 = !DILocation(line: 245, column: 359, scope: !5034)
!5044 = !DILocation(line: 245, column: 355, scope: !5034)
!5045 = !DILocation(line: 245, column: 362, scope: !5034)
!5046 = !DILocation(line: 245, column: 455, scope: !5034)
!5047 = !DILocation(line: 245, column: 349, scope: !5048)
!5048 = !DILexicalBlockFile(scope: !5009, file: !624, discriminator: 8)
!5049 = !DILocation(line: 245, column: 325, scope: !5048)
!5050 = distinct !{!5050, !5051}
!5051 = !DILocation(line: 245, column: 325, scope: !5005)
!5052 = !DILocation(line: 245, column: 464, scope: !5053)
!5053 = !DILexicalBlockFile(scope: !5005, file: !624, discriminator: 9)
!5054 = !DILocation(line: 245, column: 461, scope: !5053)
!5055 = !DILocation(line: 245, column: 485, scope: !5053)
!5056 = !DILocation(line: 245, column: 482, scope: !5053)
!5057 = !DILocation(line: 245, column: 509, scope: !5053)
!5058 = !DILocation(line: 245, column: 506, scope: !5053)
!5059 = !DILocation(line: 245, column: 526, scope: !5053)
!5060 = !DILocation(line: 245, column: 319, scope: !5061)
!5061 = !DILexicalBlockFile(scope: !4998, file: !624, discriminator: 10)
!5062 = !DILocation(line: 245, column: 294, scope: !5061)
!5063 = distinct !{!5063, !5064}
!5064 = !DILocation(line: 245, column: 294, scope: !4962)
!5065 = !DILocation(line: 245, column: 528, scope: !5066)
!5066 = !DILexicalBlockFile(scope: !4962, file: !624, discriminator: 11)
!5067 = distinct !DISubprogram(name: "blend_vividlight_8bit", scope: !624, file: !624, line: 272, type: !1531, isLocal: true, isDefinition: true, scopeLine: 272, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!5068 = !DILocalVariable(name: "top", arg: 1, scope: !5067, file: !624, line: 272, type: !900)
!5069 = !DILocation(line: 272, column: 50, scope: !5067)
!5070 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !5067, file: !624, line: 272, type: !902)
!5071 = !DILocation(line: 272, column: 65, scope: !5067)
!5072 = !DILocalVariable(name: "bottom", arg: 3, scope: !5067, file: !624, line: 272, type: !900)
!5073 = !DILocation(line: 272, column: 94, scope: !5067)
!5074 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !5067, file: !624, line: 272, type: !902)
!5075 = !DILocation(line: 272, column: 112, scope: !5067)
!5076 = !DILocalVariable(name: "dst", arg: 5, scope: !5067, file: !624, line: 272, type: !329)
!5077 = !DILocation(line: 272, column: 138, scope: !5067)
!5078 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !5067, file: !624, line: 272, type: !902)
!5079 = !DILocation(line: 272, column: 153, scope: !5067)
!5080 = !DILocalVariable(name: "width", arg: 7, scope: !5067, file: !624, line: 272, type: !902)
!5081 = !DILocation(line: 272, column: 177, scope: !5067)
!5082 = !DILocalVariable(name: "height", arg: 8, scope: !5067, file: !624, line: 272, type: !902)
!5083 = !DILocation(line: 272, column: 194, scope: !5067)
!5084 = !DILocalVariable(name: "param", arg: 9, scope: !5067, file: !624, line: 272, type: !884)
!5085 = !DILocation(line: 272, column: 216, scope: !5067)
!5086 = !DILocalVariable(name: "values", arg: 10, scope: !5067, file: !624, line: 272, type: !544)
!5087 = !DILocation(line: 272, column: 231, scope: !5067)
!5088 = !DILocalVariable(name: "starty", arg: 11, scope: !5067, file: !624, line: 272, type: !238)
!5089 = !DILocation(line: 272, column: 243, scope: !5067)
!5090 = !DILocalVariable(name: "opacity", scope: !5067, file: !624, line: 272, type: !248)
!5091 = !DILocation(line: 272, column: 260, scope: !5067)
!5092 = !DILocation(line: 272, column: 270, scope: !5067)
!5093 = !DILocation(line: 272, column: 277, scope: !5067)
!5094 = !DILocalVariable(name: "i", scope: !5067, file: !624, line: 272, type: !238)
!5095 = !DILocation(line: 272, column: 290, scope: !5067)
!5096 = !DILocalVariable(name: "j", scope: !5067, file: !624, line: 272, type: !238)
!5097 = !DILocation(line: 272, column: 293, scope: !5067)
!5098 = !DILocation(line: 272, column: 303, scope: !5099)
!5099 = distinct !DILexicalBlock(scope: !5067, file: !624, line: 272, column: 296)
!5100 = !DILocation(line: 272, column: 301, scope: !5099)
!5101 = !DILocation(line: 272, column: 308, scope: !5102)
!5102 = !DILexicalBlockFile(scope: !5103, file: !624, discriminator: 1)
!5103 = distinct !DILexicalBlock(scope: !5099, file: !624, line: 272, column: 296)
!5104 = !DILocation(line: 272, column: 312, scope: !5102)
!5105 = !DILocation(line: 272, column: 310, scope: !5102)
!5106 = !DILocation(line: 272, column: 296, scope: !5102)
!5107 = !DILocation(line: 272, column: 334, scope: !5108)
!5108 = !DILexicalBlockFile(scope: !5109, file: !624, discriminator: 2)
!5109 = distinct !DILexicalBlock(scope: !5110, file: !624, line: 272, column: 327)
!5110 = distinct !DILexicalBlock(scope: !5103, file: !624, line: 272, column: 325)
!5111 = !DILocation(line: 272, column: 332, scope: !5108)
!5112 = !DILocation(line: 272, column: 339, scope: !5113)
!5113 = !DILexicalBlockFile(scope: !5114, file: !624, discriminator: 3)
!5114 = distinct !DILexicalBlock(scope: !5109, file: !624, line: 272, column: 327)
!5115 = !DILocation(line: 272, column: 343, scope: !5113)
!5116 = !DILocation(line: 272, column: 341, scope: !5113)
!5117 = !DILocation(line: 272, column: 327, scope: !5113)
!5118 = !DILocation(line: 272, column: 370, scope: !5119)
!5119 = !DILexicalBlockFile(scope: !5120, file: !624, discriminator: 4)
!5120 = distinct !DILexicalBlock(scope: !5114, file: !624, line: 272, column: 355)
!5121 = !DILocation(line: 272, column: 366, scope: !5119)
!5122 = !DILocation(line: 272, column: 382, scope: !5119)
!5123 = !DILocation(line: 272, column: 378, scope: !5119)
!5124 = !DILocation(line: 272, column: 385, scope: !5119)
!5125 = !DILocation(line: 272, column: 377, scope: !5119)
!5126 = !DILocation(line: 272, column: 405, scope: !5127)
!5127 = !DILexicalBlockFile(scope: !5120, file: !624, discriminator: 5)
!5128 = !DILocation(line: 272, column: 401, scope: !5127)
!5129 = !DILocation(line: 272, column: 399, scope: !5127)
!5130 = !DILocation(line: 272, column: 409, scope: !5127)
!5131 = !DILocation(line: 272, column: 395, scope: !5127)
!5132 = !DILocation(line: 272, column: 426, scope: !5133)
!5133 = !DILexicalBlockFile(scope: !5120, file: !624, discriminator: 6)
!5134 = !DILocation(line: 272, column: 422, scope: !5133)
!5135 = !DILocation(line: 272, column: 420, scope: !5133)
!5136 = !DILocation(line: 272, column: 395, scope: !5133)
!5137 = !DILocation(line: 272, column: 462, scope: !5138)
!5138 = !DILexicalBlockFile(scope: !5120, file: !624, discriminator: 7)
!5139 = !DILocation(line: 272, column: 455, scope: !5138)
!5140 = !DILocation(line: 272, column: 454, scope: !5138)
!5141 = !DILocation(line: 272, column: 452, scope: !5138)
!5142 = !DILocation(line: 272, column: 467, scope: !5138)
!5143 = !DILocation(line: 272, column: 484, scope: !5138)
!5144 = !DILocation(line: 272, column: 480, scope: !5138)
!5145 = !DILocation(line: 272, column: 478, scope: !5138)
!5146 = !DILocation(line: 272, column: 473, scope: !5138)
!5147 = !DILocation(line: 272, column: 444, scope: !5138)
!5148 = !DILocation(line: 272, column: 437, scope: !5138)
!5149 = !DILocation(line: 272, column: 433, scope: !5138)
!5150 = !DILocation(line: 272, column: 433, scope: !5151)
!5151 = !DILexicalBlockFile(scope: !5120, file: !624, discriminator: 8)
!5152 = !DILocation(line: 272, column: 520, scope: !5153)
!5153 = !DILexicalBlockFile(scope: !5120, file: !624, discriminator: 9)
!5154 = !DILocation(line: 272, column: 513, scope: !5153)
!5155 = !DILocation(line: 272, column: 512, scope: !5153)
!5156 = !DILocation(line: 272, column: 510, scope: !5153)
!5157 = !DILocation(line: 272, column: 525, scope: !5153)
!5158 = !DILocation(line: 272, column: 542, scope: !5153)
!5159 = !DILocation(line: 272, column: 538, scope: !5153)
!5160 = !DILocation(line: 272, column: 536, scope: !5153)
!5161 = !DILocation(line: 272, column: 531, scope: !5153)
!5162 = !DILocation(line: 272, column: 502, scope: !5153)
!5163 = !DILocation(line: 272, column: 433, scope: !5153)
!5164 = !DILocation(line: 272, column: 433, scope: !5165)
!5165 = !DILexicalBlockFile(scope: !5120, file: !624, discriminator: 10)
!5166 = !DILocation(line: 272, column: 395, scope: !5165)
!5167 = !DILocation(line: 272, column: 395, scope: !5168)
!5168 = !DILexicalBlockFile(scope: !5120, file: !624, discriminator: 11)
!5169 = !DILocation(line: 272, column: 377, scope: !5168)
!5170 = !DILocation(line: 272, column: 563, scope: !5171)
!5171 = !DILexicalBlockFile(scope: !5120, file: !624, discriminator: 12)
!5172 = !DILocation(line: 272, column: 559, scope: !5171)
!5173 = !DILocation(line: 272, column: 566, scope: !5171)
!5174 = !DILocation(line: 272, column: 556, scope: !5171)
!5175 = !DILocation(line: 272, column: 574, scope: !5171)
!5176 = !DILocation(line: 272, column: 552, scope: !5171)
!5177 = !DILocation(line: 272, column: 594, scope: !5178)
!5178 = !DILexicalBlockFile(scope: !5120, file: !624, discriminator: 13)
!5179 = !DILocation(line: 272, column: 590, scope: !5178)
!5180 = !DILocation(line: 272, column: 597, scope: !5178)
!5181 = !DILocation(line: 272, column: 587, scope: !5178)
!5182 = !DILocation(line: 272, column: 552, scope: !5178)
!5183 = !DILocation(line: 272, column: 627, scope: !5184)
!5184 = !DILexicalBlockFile(scope: !5120, file: !624, discriminator: 14)
!5185 = !DILocation(line: 272, column: 620, scope: !5184)
!5186 = !DILocation(line: 272, column: 619, scope: !5184)
!5187 = !DILocation(line: 272, column: 631, scope: !5184)
!5188 = !DILocation(line: 272, column: 656, scope: !5184)
!5189 = !DILocation(line: 272, column: 652, scope: !5184)
!5190 = !DILocation(line: 272, column: 659, scope: !5184)
!5191 = !DILocation(line: 272, column: 649, scope: !5184)
!5192 = !DILocation(line: 272, column: 644, scope: !5184)
!5193 = !DILocation(line: 272, column: 637, scope: !5184)
!5194 = !DILocation(line: 272, column: 614, scope: !5184)
!5195 = !DILocation(line: 272, column: 608, scope: !5184)
!5196 = !DILocation(line: 272, column: 683, scope: !5197)
!5197 = !DILexicalBlockFile(scope: !5120, file: !624, discriminator: 15)
!5198 = !DILocation(line: 272, column: 676, scope: !5197)
!5199 = !DILocation(line: 272, column: 675, scope: !5197)
!5200 = !DILocation(line: 272, column: 687, scope: !5197)
!5201 = !DILocation(line: 272, column: 712, scope: !5197)
!5202 = !DILocation(line: 272, column: 708, scope: !5197)
!5203 = !DILocation(line: 272, column: 715, scope: !5197)
!5204 = !DILocation(line: 272, column: 705, scope: !5197)
!5205 = !DILocation(line: 272, column: 700, scope: !5197)
!5206 = !DILocation(line: 272, column: 693, scope: !5197)
!5207 = !DILocation(line: 272, column: 608, scope: !5197)
!5208 = !DILocation(line: 272, column: 608, scope: !5209)
!5209 = !DILexicalBlockFile(scope: !5120, file: !624, discriminator: 16)
!5210 = !DILocation(line: 272, column: 608, scope: !5211)
!5211 = !DILexicalBlockFile(scope: !5120, file: !624, discriminator: 17)
!5212 = !DILocation(line: 272, column: 552, scope: !5211)
!5213 = !DILocation(line: 272, column: 552, scope: !5214)
!5214 = !DILexicalBlockFile(scope: !5120, file: !624, discriminator: 18)
!5215 = !DILocation(line: 272, column: 377, scope: !5214)
!5216 = !DILocation(line: 272, column: 377, scope: !5217)
!5217 = !DILexicalBlockFile(scope: !5120, file: !624, discriminator: 19)
!5218 = !DILocation(line: 272, column: 743, scope: !5217)
!5219 = !DILocation(line: 272, column: 739, scope: !5217)
!5220 = !DILocation(line: 272, column: 737, scope: !5217)
!5221 = !DILocation(line: 272, column: 375, scope: !5217)
!5222 = !DILocation(line: 272, column: 749, scope: !5217)
!5223 = !DILocation(line: 272, column: 747, scope: !5217)
!5224 = !DILocation(line: 272, column: 373, scope: !5217)
!5225 = !DILocation(line: 272, column: 366, scope: !5217)
!5226 = !DILocation(line: 272, column: 361, scope: !5217)
!5227 = !DILocation(line: 272, column: 357, scope: !5217)
!5228 = !DILocation(line: 272, column: 364, scope: !5217)
!5229 = !DILocation(line: 272, column: 758, scope: !5217)
!5230 = !DILocation(line: 272, column: 351, scope: !5231)
!5231 = !DILexicalBlockFile(scope: !5114, file: !624, discriminator: 20)
!5232 = !DILocation(line: 272, column: 327, scope: !5231)
!5233 = distinct !{!5233, !5234}
!5234 = !DILocation(line: 272, column: 327, scope: !5110)
!5235 = !DILocation(line: 272, column: 767, scope: !5236)
!5236 = !DILexicalBlockFile(scope: !5110, file: !624, discriminator: 21)
!5237 = !DILocation(line: 272, column: 764, scope: !5236)
!5238 = !DILocation(line: 272, column: 788, scope: !5236)
!5239 = !DILocation(line: 272, column: 785, scope: !5236)
!5240 = !DILocation(line: 272, column: 812, scope: !5236)
!5241 = !DILocation(line: 272, column: 809, scope: !5236)
!5242 = !DILocation(line: 272, column: 829, scope: !5236)
!5243 = !DILocation(line: 272, column: 321, scope: !5244)
!5244 = !DILexicalBlockFile(scope: !5103, file: !624, discriminator: 22)
!5245 = !DILocation(line: 272, column: 296, scope: !5244)
!5246 = distinct !{!5246, !5247}
!5247 = !DILocation(line: 272, column: 296, scope: !5067)
!5248 = !DILocation(line: 272, column: 831, scope: !5249)
!5249 = !DILexicalBlockFile(scope: !5067, file: !624, discriminator: 23)
!5250 = distinct !DISubprogram(name: "blend_xor_8bit", scope: !624, file: !624, line: 271, type: !1531, isLocal: true, isDefinition: true, scopeLine: 271, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!5251 = !DILocalVariable(name: "top", arg: 1, scope: !5250, file: !624, line: 271, type: !900)
!5252 = !DILocation(line: 271, column: 43, scope: !5250)
!5253 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !5250, file: !624, line: 271, type: !902)
!5254 = !DILocation(line: 271, column: 58, scope: !5250)
!5255 = !DILocalVariable(name: "bottom", arg: 3, scope: !5250, file: !624, line: 271, type: !900)
!5256 = !DILocation(line: 271, column: 87, scope: !5250)
!5257 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !5250, file: !624, line: 271, type: !902)
!5258 = !DILocation(line: 271, column: 105, scope: !5250)
!5259 = !DILocalVariable(name: "dst", arg: 5, scope: !5250, file: !624, line: 271, type: !329)
!5260 = !DILocation(line: 271, column: 131, scope: !5250)
!5261 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !5250, file: !624, line: 271, type: !902)
!5262 = !DILocation(line: 271, column: 146, scope: !5250)
!5263 = !DILocalVariable(name: "width", arg: 7, scope: !5250, file: !624, line: 271, type: !902)
!5264 = !DILocation(line: 271, column: 170, scope: !5250)
!5265 = !DILocalVariable(name: "height", arg: 8, scope: !5250, file: !624, line: 271, type: !902)
!5266 = !DILocation(line: 271, column: 187, scope: !5250)
!5267 = !DILocalVariable(name: "param", arg: 9, scope: !5250, file: !624, line: 271, type: !884)
!5268 = !DILocation(line: 271, column: 209, scope: !5250)
!5269 = !DILocalVariable(name: "values", arg: 10, scope: !5250, file: !624, line: 271, type: !544)
!5270 = !DILocation(line: 271, column: 224, scope: !5250)
!5271 = !DILocalVariable(name: "starty", arg: 11, scope: !5250, file: !624, line: 271, type: !238)
!5272 = !DILocation(line: 271, column: 236, scope: !5250)
!5273 = !DILocalVariable(name: "opacity", scope: !5250, file: !624, line: 271, type: !248)
!5274 = !DILocation(line: 271, column: 253, scope: !5250)
!5275 = !DILocation(line: 271, column: 263, scope: !5250)
!5276 = !DILocation(line: 271, column: 270, scope: !5250)
!5277 = !DILocalVariable(name: "i", scope: !5250, file: !624, line: 271, type: !238)
!5278 = !DILocation(line: 271, column: 283, scope: !5250)
!5279 = !DILocalVariable(name: "j", scope: !5250, file: !624, line: 271, type: !238)
!5280 = !DILocation(line: 271, column: 286, scope: !5250)
!5281 = !DILocation(line: 271, column: 296, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5250, file: !624, line: 271, column: 289)
!5283 = !DILocation(line: 271, column: 294, scope: !5282)
!5284 = !DILocation(line: 271, column: 301, scope: !5285)
!5285 = !DILexicalBlockFile(scope: !5286, file: !624, discriminator: 1)
!5286 = distinct !DILexicalBlock(scope: !5282, file: !624, line: 271, column: 289)
!5287 = !DILocation(line: 271, column: 305, scope: !5285)
!5288 = !DILocation(line: 271, column: 303, scope: !5285)
!5289 = !DILocation(line: 271, column: 289, scope: !5285)
!5290 = !DILocation(line: 271, column: 327, scope: !5291)
!5291 = !DILexicalBlockFile(scope: !5292, file: !624, discriminator: 2)
!5292 = distinct !DILexicalBlock(scope: !5293, file: !624, line: 271, column: 320)
!5293 = distinct !DILexicalBlock(scope: !5286, file: !624, line: 271, column: 318)
!5294 = !DILocation(line: 271, column: 325, scope: !5291)
!5295 = !DILocation(line: 271, column: 332, scope: !5296)
!5296 = !DILexicalBlockFile(scope: !5297, file: !624, discriminator: 3)
!5297 = distinct !DILexicalBlock(scope: !5292, file: !624, line: 271, column: 320)
!5298 = !DILocation(line: 271, column: 336, scope: !5296)
!5299 = !DILocation(line: 271, column: 334, scope: !5296)
!5300 = !DILocation(line: 271, column: 320, scope: !5296)
!5301 = !DILocation(line: 271, column: 363, scope: !5302)
!5302 = !DILexicalBlockFile(scope: !5303, file: !624, discriminator: 4)
!5303 = distinct !DILexicalBlock(scope: !5297, file: !624, line: 271, column: 348)
!5304 = !DILocation(line: 271, column: 359, scope: !5302)
!5305 = !DILocation(line: 271, column: 374, scope: !5302)
!5306 = !DILocation(line: 271, column: 370, scope: !5302)
!5307 = !DILocation(line: 271, column: 386, scope: !5302)
!5308 = !DILocation(line: 271, column: 379, scope: !5302)
!5309 = !DILocation(line: 271, column: 377, scope: !5302)
!5310 = !DILocation(line: 271, column: 396, scope: !5302)
!5311 = !DILocation(line: 271, column: 392, scope: !5302)
!5312 = !DILocation(line: 271, column: 390, scope: !5302)
!5313 = !DILocation(line: 271, column: 368, scope: !5302)
!5314 = !DILocation(line: 271, column: 402, scope: !5302)
!5315 = !DILocation(line: 271, column: 400, scope: !5302)
!5316 = !DILocation(line: 271, column: 366, scope: !5302)
!5317 = !DILocation(line: 271, column: 354, scope: !5302)
!5318 = !DILocation(line: 271, column: 350, scope: !5302)
!5319 = !DILocation(line: 271, column: 357, scope: !5302)
!5320 = !DILocation(line: 271, column: 411, scope: !5302)
!5321 = !DILocation(line: 271, column: 344, scope: !5322)
!5322 = !DILexicalBlockFile(scope: !5297, file: !624, discriminator: 5)
!5323 = !DILocation(line: 271, column: 320, scope: !5322)
!5324 = distinct !{!5324, !5325}
!5325 = !DILocation(line: 271, column: 320, scope: !5293)
!5326 = !DILocation(line: 271, column: 420, scope: !5327)
!5327 = !DILexicalBlockFile(scope: !5293, file: !624, discriminator: 6)
!5328 = !DILocation(line: 271, column: 417, scope: !5327)
!5329 = !DILocation(line: 271, column: 441, scope: !5327)
!5330 = !DILocation(line: 271, column: 438, scope: !5327)
!5331 = !DILocation(line: 271, column: 465, scope: !5327)
!5332 = !DILocation(line: 271, column: 462, scope: !5327)
!5333 = !DILocation(line: 271, column: 482, scope: !5327)
!5334 = !DILocation(line: 271, column: 314, scope: !5335)
!5335 = !DILexicalBlockFile(scope: !5286, file: !624, discriminator: 7)
!5336 = !DILocation(line: 271, column: 289, scope: !5335)
!5337 = distinct !{!5337, !5338}
!5338 = !DILocation(line: 271, column: 289, scope: !5250)
!5339 = !DILocation(line: 271, column: 484, scope: !5340)
!5340 = !DILexicalBlockFile(scope: !5250, file: !624, discriminator: 8)
!5341 = distinct !DISubprogram(name: "blend_addition_10bit", scope: !624, file: !624, line: 328, type: !1531, isLocal: true, isDefinition: true, scopeLine: 328, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!5342 = !DILocalVariable(name: "_top", arg: 1, scope: !5341, file: !624, line: 328, type: !900)
!5343 = !DILocation(line: 328, column: 49, scope: !5341)
!5344 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !5341, file: !624, line: 328, type: !902)
!5345 = !DILocation(line: 328, column: 65, scope: !5341)
!5346 = !DILocalVariable(name: "_bottom", arg: 3, scope: !5341, file: !624, line: 328, type: !900)
!5347 = !DILocation(line: 328, column: 94, scope: !5341)
!5348 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !5341, file: !624, line: 328, type: !902)
!5349 = !DILocation(line: 328, column: 113, scope: !5341)
!5350 = !DILocalVariable(name: "_dst", arg: 5, scope: !5341, file: !624, line: 328, type: !329)
!5351 = !DILocation(line: 328, column: 139, scope: !5341)
!5352 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !5341, file: !624, line: 328, type: !902)
!5353 = !DILocation(line: 328, column: 155, scope: !5341)
!5354 = !DILocalVariable(name: "width", arg: 7, scope: !5341, file: !624, line: 328, type: !902)
!5355 = !DILocation(line: 328, column: 179, scope: !5341)
!5356 = !DILocalVariable(name: "height", arg: 8, scope: !5341, file: !624, line: 328, type: !902)
!5357 = !DILocation(line: 328, column: 196, scope: !5341)
!5358 = !DILocalVariable(name: "param", arg: 9, scope: !5341, file: !624, line: 328, type: !884)
!5359 = !DILocation(line: 328, column: 218, scope: !5341)
!5360 = !DILocalVariable(name: "values", arg: 10, scope: !5341, file: !624, line: 328, type: !544)
!5361 = !DILocation(line: 328, column: 233, scope: !5341)
!5362 = !DILocalVariable(name: "starty", arg: 11, scope: !5341, file: !624, line: 328, type: !238)
!5363 = !DILocation(line: 328, column: 245, scope: !5341)
!5364 = !DILocalVariable(name: "top", scope: !5341, file: !624, line: 328, type: !839)
!5365 = !DILocation(line: 328, column: 271, scope: !5341)
!5366 = !DILocation(line: 328, column: 294, scope: !5341)
!5367 = !DILocation(line: 328, column: 277, scope: !5341)
!5368 = !DILocalVariable(name: "bottom", scope: !5341, file: !624, line: 328, type: !839)
!5369 = !DILocation(line: 328, column: 316, scope: !5341)
!5370 = !DILocation(line: 328, column: 342, scope: !5341)
!5371 = !DILocation(line: 328, column: 325, scope: !5341)
!5372 = !DILocalVariable(name: "dst", scope: !5341, file: !624, line: 328, type: !843)
!5373 = !DILocation(line: 328, column: 361, scope: !5341)
!5374 = !DILocation(line: 328, column: 378, scope: !5341)
!5375 = !DILocation(line: 328, column: 367, scope: !5341)
!5376 = !DILocalVariable(name: "opacity", scope: !5341, file: !624, line: 328, type: !248)
!5377 = !DILocation(line: 328, column: 391, scope: !5341)
!5378 = !DILocation(line: 328, column: 401, scope: !5341)
!5379 = !DILocation(line: 328, column: 408, scope: !5341)
!5380 = !DILocalVariable(name: "i", scope: !5341, file: !624, line: 328, type: !238)
!5381 = !DILocation(line: 328, column: 421, scope: !5341)
!5382 = !DILocalVariable(name: "j", scope: !5341, file: !624, line: 328, type: !238)
!5383 = !DILocation(line: 328, column: 424, scope: !5341)
!5384 = !DILocation(line: 328, column: 440, scope: !5341)
!5385 = !DILocation(line: 328, column: 459, scope: !5341)
!5386 = !DILocation(line: 328, column: 481, scope: !5341)
!5387 = !DILocation(line: 328, column: 494, scope: !5388)
!5388 = distinct !DILexicalBlock(scope: !5341, file: !624, line: 328, column: 487)
!5389 = !DILocation(line: 328, column: 492, scope: !5388)
!5390 = !DILocation(line: 328, column: 499, scope: !5391)
!5391 = !DILexicalBlockFile(scope: !5392, file: !624, discriminator: 1)
!5392 = distinct !DILexicalBlock(scope: !5388, file: !624, line: 328, column: 487)
!5393 = !DILocation(line: 328, column: 503, scope: !5391)
!5394 = !DILocation(line: 328, column: 501, scope: !5391)
!5395 = !DILocation(line: 328, column: 487, scope: !5391)
!5396 = !DILocation(line: 328, column: 525, scope: !5397)
!5397 = !DILexicalBlockFile(scope: !5398, file: !624, discriminator: 2)
!5398 = distinct !DILexicalBlock(scope: !5399, file: !624, line: 328, column: 518)
!5399 = distinct !DILexicalBlock(scope: !5392, file: !624, line: 328, column: 516)
!5400 = !DILocation(line: 328, column: 523, scope: !5397)
!5401 = !DILocation(line: 328, column: 530, scope: !5402)
!5402 = !DILexicalBlockFile(scope: !5403, file: !624, discriminator: 3)
!5403 = distinct !DILexicalBlock(scope: !5398, file: !624, line: 328, column: 518)
!5404 = !DILocation(line: 328, column: 534, scope: !5402)
!5405 = !DILocation(line: 328, column: 532, scope: !5402)
!5406 = !DILocation(line: 328, column: 518, scope: !5402)
!5407 = !DILocation(line: 328, column: 561, scope: !5408)
!5408 = !DILexicalBlockFile(scope: !5409, file: !624, discriminator: 4)
!5409 = distinct !DILexicalBlock(scope: !5403, file: !624, line: 328, column: 546)
!5410 = !DILocation(line: 328, column: 557, scope: !5408)
!5411 = !DILocation(line: 328, column: 583, scope: !5408)
!5412 = !DILocation(line: 328, column: 579, scope: !5408)
!5413 = !DILocation(line: 328, column: 595, scope: !5408)
!5414 = !DILocation(line: 328, column: 588, scope: !5408)
!5415 = !DILocation(line: 328, column: 586, scope: !5408)
!5416 = !DILocation(line: 328, column: 576, scope: !5408)
!5417 = !DILocation(line: 328, column: 569, scope: !5408)
!5418 = !DILocation(line: 328, column: 606, scope: !5419)
!5419 = !DILexicalBlockFile(scope: !5409, file: !624, discriminator: 5)
!5420 = !DILocation(line: 328, column: 602, scope: !5419)
!5421 = !DILocation(line: 328, column: 618, scope: !5419)
!5422 = !DILocation(line: 328, column: 611, scope: !5419)
!5423 = !DILocation(line: 328, column: 609, scope: !5419)
!5424 = !DILocation(line: 328, column: 569, scope: !5419)
!5425 = !DILocation(line: 328, column: 569, scope: !5426)
!5426 = !DILexicalBlockFile(scope: !5409, file: !624, discriminator: 6)
!5427 = !DILocation(line: 328, column: 569, scope: !5428)
!5428 = !DILexicalBlockFile(scope: !5409, file: !624, discriminator: 7)
!5429 = !DILocation(line: 328, column: 639, scope: !5428)
!5430 = !DILocation(line: 328, column: 635, scope: !5428)
!5431 = !DILocation(line: 328, column: 633, scope: !5428)
!5432 = !DILocation(line: 328, column: 566, scope: !5428)
!5433 = !DILocation(line: 328, column: 645, scope: !5428)
!5434 = !DILocation(line: 328, column: 643, scope: !5428)
!5435 = !DILocation(line: 328, column: 564, scope: !5428)
!5436 = !DILocation(line: 328, column: 557, scope: !5428)
!5437 = !DILocation(line: 328, column: 552, scope: !5428)
!5438 = !DILocation(line: 328, column: 548, scope: !5428)
!5439 = !DILocation(line: 328, column: 555, scope: !5428)
!5440 = !DILocation(line: 328, column: 654, scope: !5428)
!5441 = !DILocation(line: 328, column: 542, scope: !5442)
!5442 = !DILexicalBlockFile(scope: !5403, file: !624, discriminator: 8)
!5443 = !DILocation(line: 328, column: 518, scope: !5442)
!5444 = distinct !{!5444, !5445}
!5445 = !DILocation(line: 328, column: 518, scope: !5399)
!5446 = !DILocation(line: 328, column: 663, scope: !5447)
!5447 = !DILexicalBlockFile(scope: !5399, file: !624, discriminator: 9)
!5448 = !DILocation(line: 328, column: 660, scope: !5447)
!5449 = !DILocation(line: 328, column: 684, scope: !5447)
!5450 = !DILocation(line: 328, column: 681, scope: !5447)
!5451 = !DILocation(line: 328, column: 708, scope: !5447)
!5452 = !DILocation(line: 328, column: 705, scope: !5447)
!5453 = !DILocation(line: 328, column: 725, scope: !5447)
!5454 = !DILocation(line: 328, column: 512, scope: !5455)
!5455 = !DILexicalBlockFile(scope: !5392, file: !624, discriminator: 10)
!5456 = !DILocation(line: 328, column: 487, scope: !5455)
!5457 = distinct !{!5457, !5458}
!5458 = !DILocation(line: 328, column: 487, scope: !5341)
!5459 = !DILocation(line: 328, column: 727, scope: !5460)
!5460 = !DILexicalBlockFile(scope: !5341, file: !624, discriminator: 11)
!5461 = distinct !DISubprogram(name: "blend_grainmerge_10bit", scope: !624, file: !624, line: 329, type: !1531, isLocal: true, isDefinition: true, scopeLine: 329, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!5462 = !DILocalVariable(name: "a", arg: 1, scope: !5463, file: !1640, line: 229, type: !238)
!5463 = distinct !DISubprogram(name: "av_clip_uintp2_c", scope: !1640, file: !1640, line: 229, type: !5464, isLocal: true, isDefinition: true, scopeLine: 230, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!5464 = !DISubroutineType(types: !5465)
!5465 = !{!480, !238, !238}
!5466 = !DILocation(line: 229, column: 99, scope: !5463, inlinedAt: !5467)
!5467 = distinct !DILocation(line: 329, column: 575, scope: !5468)
!5468 = !DILexicalBlockFile(scope: !5469, file: !624, discriminator: 4)
!5469 = distinct !DILexicalBlock(scope: !5470, file: !624, line: 329, column: 548)
!5470 = distinct !DILexicalBlock(scope: !5471, file: !624, line: 329, column: 520)
!5471 = distinct !DILexicalBlock(scope: !5472, file: !624, line: 329, column: 520)
!5472 = distinct !DILexicalBlock(scope: !5473, file: !624, line: 329, column: 518)
!5473 = distinct !DILexicalBlock(scope: !5474, file: !624, line: 329, column: 489)
!5474 = distinct !DILexicalBlock(scope: !5461, file: !624, line: 329, column: 489)
!5475 = !DILocalVariable(name: "p", arg: 2, scope: !5463, file: !1640, line: 229, type: !238)
!5476 = !DILocation(line: 229, column: 106, scope: !5463, inlinedAt: !5467)
!5477 = !DILocalVariable(name: "_top", arg: 1, scope: !5461, file: !624, line: 329, type: !900)
!5478 = !DILocation(line: 329, column: 51, scope: !5461)
!5479 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !5461, file: !624, line: 329, type: !902)
!5480 = !DILocation(line: 329, column: 67, scope: !5461)
!5481 = !DILocalVariable(name: "_bottom", arg: 3, scope: !5461, file: !624, line: 329, type: !900)
!5482 = !DILocation(line: 329, column: 96, scope: !5461)
!5483 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !5461, file: !624, line: 329, type: !902)
!5484 = !DILocation(line: 329, column: 115, scope: !5461)
!5485 = !DILocalVariable(name: "_dst", arg: 5, scope: !5461, file: !624, line: 329, type: !329)
!5486 = !DILocation(line: 329, column: 141, scope: !5461)
!5487 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !5461, file: !624, line: 329, type: !902)
!5488 = !DILocation(line: 329, column: 157, scope: !5461)
!5489 = !DILocalVariable(name: "width", arg: 7, scope: !5461, file: !624, line: 329, type: !902)
!5490 = !DILocation(line: 329, column: 181, scope: !5461)
!5491 = !DILocalVariable(name: "height", arg: 8, scope: !5461, file: !624, line: 329, type: !902)
!5492 = !DILocation(line: 329, column: 198, scope: !5461)
!5493 = !DILocalVariable(name: "param", arg: 9, scope: !5461, file: !624, line: 329, type: !884)
!5494 = !DILocation(line: 329, column: 220, scope: !5461)
!5495 = !DILocalVariable(name: "values", arg: 10, scope: !5461, file: !624, line: 329, type: !544)
!5496 = !DILocation(line: 329, column: 235, scope: !5461)
!5497 = !DILocalVariable(name: "starty", arg: 11, scope: !5461, file: !624, line: 329, type: !238)
!5498 = !DILocation(line: 329, column: 247, scope: !5461)
!5499 = !DILocalVariable(name: "top", scope: !5461, file: !624, line: 329, type: !839)
!5500 = !DILocation(line: 329, column: 273, scope: !5461)
!5501 = !DILocation(line: 329, column: 296, scope: !5461)
!5502 = !DILocation(line: 329, column: 279, scope: !5461)
!5503 = !DILocalVariable(name: "bottom", scope: !5461, file: !624, line: 329, type: !839)
!5504 = !DILocation(line: 329, column: 318, scope: !5461)
!5505 = !DILocation(line: 329, column: 344, scope: !5461)
!5506 = !DILocation(line: 329, column: 327, scope: !5461)
!5507 = !DILocalVariable(name: "dst", scope: !5461, file: !624, line: 329, type: !843)
!5508 = !DILocation(line: 329, column: 363, scope: !5461)
!5509 = !DILocation(line: 329, column: 380, scope: !5461)
!5510 = !DILocation(line: 329, column: 369, scope: !5461)
!5511 = !DILocalVariable(name: "opacity", scope: !5461, file: !624, line: 329, type: !248)
!5512 = !DILocation(line: 329, column: 393, scope: !5461)
!5513 = !DILocation(line: 329, column: 403, scope: !5461)
!5514 = !DILocation(line: 329, column: 410, scope: !5461)
!5515 = !DILocalVariable(name: "i", scope: !5461, file: !624, line: 329, type: !238)
!5516 = !DILocation(line: 329, column: 423, scope: !5461)
!5517 = !DILocalVariable(name: "j", scope: !5461, file: !624, line: 329, type: !238)
!5518 = !DILocation(line: 329, column: 426, scope: !5461)
!5519 = !DILocation(line: 329, column: 442, scope: !5461)
!5520 = !DILocation(line: 329, column: 461, scope: !5461)
!5521 = !DILocation(line: 329, column: 483, scope: !5461)
!5522 = !DILocation(line: 329, column: 496, scope: !5474)
!5523 = !DILocation(line: 329, column: 494, scope: !5474)
!5524 = !DILocation(line: 329, column: 501, scope: !5525)
!5525 = !DILexicalBlockFile(scope: !5473, file: !624, discriminator: 1)
!5526 = !DILocation(line: 329, column: 505, scope: !5525)
!5527 = !DILocation(line: 329, column: 503, scope: !5525)
!5528 = !DILocation(line: 329, column: 489, scope: !5525)
!5529 = !DILocation(line: 329, column: 527, scope: !5530)
!5530 = !DILexicalBlockFile(scope: !5471, file: !624, discriminator: 2)
!5531 = !DILocation(line: 329, column: 525, scope: !5530)
!5532 = !DILocation(line: 329, column: 532, scope: !5533)
!5533 = !DILexicalBlockFile(scope: !5470, file: !624, discriminator: 3)
!5534 = !DILocation(line: 329, column: 536, scope: !5533)
!5535 = !DILocation(line: 329, column: 534, scope: !5533)
!5536 = !DILocation(line: 329, column: 520, scope: !5533)
!5537 = !DILocation(line: 329, column: 563, scope: !5468)
!5538 = !DILocation(line: 329, column: 559, scope: !5468)
!5539 = !DILocation(line: 329, column: 596, scope: !5468)
!5540 = !DILocation(line: 329, column: 592, scope: !5468)
!5541 = !DILocation(line: 329, column: 608, scope: !5468)
!5542 = !DILocation(line: 329, column: 601, scope: !5468)
!5543 = !DILocation(line: 329, column: 599, scope: !5468)
!5544 = !DILocation(line: 329, column: 611, scope: !5468)
!5545 = !DILocation(line: 329, column: 575, scope: !5468)
!5546 = !DILocation(line: 231, column: 9, scope: !5547, inlinedAt: !5467)
!5547 = distinct !DILexicalBlock(scope: !5463, file: !1640, line: 231, column: 9)
!5548 = !DILocation(line: 231, column: 19, scope: !5547, inlinedAt: !5467)
!5549 = !DILocation(line: 231, column: 17, scope: !5547, inlinedAt: !5467)
!5550 = !DILocation(line: 231, column: 22, scope: !5547, inlinedAt: !5467)
!5551 = !DILocation(line: 231, column: 13, scope: !5547, inlinedAt: !5467)
!5552 = !DILocation(line: 231, column: 11, scope: !5547, inlinedAt: !5467)
!5553 = !DILocation(line: 231, column: 9, scope: !5463, inlinedAt: !5467)
!5554 = !DILocation(line: 231, column: 37, scope: !5555, inlinedAt: !5467)
!5555 = !DILexicalBlockFile(scope: !5547, file: !1640, discriminator: 1)
!5556 = !DILocation(line: 231, column: 36, scope: !5555, inlinedAt: !5467)
!5557 = !DILocation(line: 231, column: 40, scope: !5555, inlinedAt: !5467)
!5558 = !DILocation(line: 231, column: 53, scope: !5555, inlinedAt: !5467)
!5559 = !DILocation(line: 231, column: 51, scope: !5555, inlinedAt: !5467)
!5560 = !DILocation(line: 231, column: 56, scope: !5555, inlinedAt: !5467)
!5561 = !DILocation(line: 231, column: 46, scope: !5555, inlinedAt: !5467)
!5562 = !DILocation(line: 231, column: 28, scope: !5555, inlinedAt: !5467)
!5563 = !DILocation(line: 232, column: 17, scope: !5547, inlinedAt: !5467)
!5564 = !DILocation(line: 232, column: 10, scope: !5547, inlinedAt: !5467)
!5565 = !DILocation(line: 233, column: 1, scope: !5463, inlinedAt: !5467)
!5566 = !DILocation(line: 329, column: 629, scope: !5468)
!5567 = !DILocation(line: 329, column: 625, scope: !5468)
!5568 = !DILocation(line: 329, column: 623, scope: !5468)
!5569 = !DILocation(line: 329, column: 568, scope: !5468)
!5570 = !DILocation(line: 329, column: 635, scope: !5468)
!5571 = !DILocation(line: 329, column: 633, scope: !5468)
!5572 = !DILocation(line: 329, column: 566, scope: !5468)
!5573 = !DILocation(line: 329, column: 554, scope: !5468)
!5574 = !DILocation(line: 329, column: 550, scope: !5468)
!5575 = !DILocation(line: 329, column: 557, scope: !5468)
!5576 = !DILocation(line: 329, column: 644, scope: !5468)
!5577 = !DILocation(line: 329, column: 544, scope: !5578)
!5578 = !DILexicalBlockFile(scope: !5470, file: !624, discriminator: 5)
!5579 = !DILocation(line: 329, column: 520, scope: !5578)
!5580 = distinct !{!5580, !5581}
!5581 = !DILocation(line: 329, column: 520, scope: !5472)
!5582 = !DILocation(line: 329, column: 653, scope: !5583)
!5583 = !DILexicalBlockFile(scope: !5472, file: !624, discriminator: 6)
!5584 = !DILocation(line: 329, column: 650, scope: !5583)
!5585 = !DILocation(line: 329, column: 674, scope: !5583)
!5586 = !DILocation(line: 329, column: 671, scope: !5583)
!5587 = !DILocation(line: 329, column: 698, scope: !5583)
!5588 = !DILocation(line: 329, column: 695, scope: !5583)
!5589 = !DILocation(line: 329, column: 715, scope: !5583)
!5590 = !DILocation(line: 329, column: 514, scope: !5591)
!5591 = !DILexicalBlockFile(scope: !5473, file: !624, discriminator: 7)
!5592 = !DILocation(line: 329, column: 489, scope: !5591)
!5593 = distinct !{!5593, !5594}
!5594 = !DILocation(line: 329, column: 489, scope: !5461)
!5595 = !DILocation(line: 329, column: 717, scope: !5596)
!5596 = !DILexicalBlockFile(scope: !5461, file: !624, discriminator: 8)
!5597 = distinct !DISubprogram(name: "blend_and_10bit", scope: !624, file: !624, line: 355, type: !1531, isLocal: true, isDefinition: true, scopeLine: 355, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!5598 = !DILocalVariable(name: "_top", arg: 1, scope: !5597, file: !624, line: 355, type: !900)
!5599 = !DILocation(line: 355, column: 44, scope: !5597)
!5600 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !5597, file: !624, line: 355, type: !902)
!5601 = !DILocation(line: 355, column: 60, scope: !5597)
!5602 = !DILocalVariable(name: "_bottom", arg: 3, scope: !5597, file: !624, line: 355, type: !900)
!5603 = !DILocation(line: 355, column: 89, scope: !5597)
!5604 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !5597, file: !624, line: 355, type: !902)
!5605 = !DILocation(line: 355, column: 108, scope: !5597)
!5606 = !DILocalVariable(name: "_dst", arg: 5, scope: !5597, file: !624, line: 355, type: !329)
!5607 = !DILocation(line: 355, column: 134, scope: !5597)
!5608 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !5597, file: !624, line: 355, type: !902)
!5609 = !DILocation(line: 355, column: 150, scope: !5597)
!5610 = !DILocalVariable(name: "width", arg: 7, scope: !5597, file: !624, line: 355, type: !902)
!5611 = !DILocation(line: 355, column: 174, scope: !5597)
!5612 = !DILocalVariable(name: "height", arg: 8, scope: !5597, file: !624, line: 355, type: !902)
!5613 = !DILocation(line: 355, column: 191, scope: !5597)
!5614 = !DILocalVariable(name: "param", arg: 9, scope: !5597, file: !624, line: 355, type: !884)
!5615 = !DILocation(line: 355, column: 213, scope: !5597)
!5616 = !DILocalVariable(name: "values", arg: 10, scope: !5597, file: !624, line: 355, type: !544)
!5617 = !DILocation(line: 355, column: 228, scope: !5597)
!5618 = !DILocalVariable(name: "starty", arg: 11, scope: !5597, file: !624, line: 355, type: !238)
!5619 = !DILocation(line: 355, column: 240, scope: !5597)
!5620 = !DILocalVariable(name: "top", scope: !5597, file: !624, line: 355, type: !839)
!5621 = !DILocation(line: 355, column: 266, scope: !5597)
!5622 = !DILocation(line: 355, column: 289, scope: !5597)
!5623 = !DILocation(line: 355, column: 272, scope: !5597)
!5624 = !DILocalVariable(name: "bottom", scope: !5597, file: !624, line: 355, type: !839)
!5625 = !DILocation(line: 355, column: 311, scope: !5597)
!5626 = !DILocation(line: 355, column: 337, scope: !5597)
!5627 = !DILocation(line: 355, column: 320, scope: !5597)
!5628 = !DILocalVariable(name: "dst", scope: !5597, file: !624, line: 355, type: !843)
!5629 = !DILocation(line: 355, column: 356, scope: !5597)
!5630 = !DILocation(line: 355, column: 373, scope: !5597)
!5631 = !DILocation(line: 355, column: 362, scope: !5597)
!5632 = !DILocalVariable(name: "opacity", scope: !5597, file: !624, line: 355, type: !248)
!5633 = !DILocation(line: 355, column: 386, scope: !5597)
!5634 = !DILocation(line: 355, column: 396, scope: !5597)
!5635 = !DILocation(line: 355, column: 403, scope: !5597)
!5636 = !DILocalVariable(name: "i", scope: !5597, file: !624, line: 355, type: !238)
!5637 = !DILocation(line: 355, column: 416, scope: !5597)
!5638 = !DILocalVariable(name: "j", scope: !5597, file: !624, line: 355, type: !238)
!5639 = !DILocation(line: 355, column: 419, scope: !5597)
!5640 = !DILocation(line: 355, column: 435, scope: !5597)
!5641 = !DILocation(line: 355, column: 454, scope: !5597)
!5642 = !DILocation(line: 355, column: 476, scope: !5597)
!5643 = !DILocation(line: 355, column: 489, scope: !5644)
!5644 = distinct !DILexicalBlock(scope: !5597, file: !624, line: 355, column: 482)
!5645 = !DILocation(line: 355, column: 487, scope: !5644)
!5646 = !DILocation(line: 355, column: 494, scope: !5647)
!5647 = !DILexicalBlockFile(scope: !5648, file: !624, discriminator: 1)
!5648 = distinct !DILexicalBlock(scope: !5644, file: !624, line: 355, column: 482)
!5649 = !DILocation(line: 355, column: 498, scope: !5647)
!5650 = !DILocation(line: 355, column: 496, scope: !5647)
!5651 = !DILocation(line: 355, column: 482, scope: !5647)
!5652 = !DILocation(line: 355, column: 520, scope: !5653)
!5653 = !DILexicalBlockFile(scope: !5654, file: !624, discriminator: 2)
!5654 = distinct !DILexicalBlock(scope: !5655, file: !624, line: 355, column: 513)
!5655 = distinct !DILexicalBlock(scope: !5648, file: !624, line: 355, column: 511)
!5656 = !DILocation(line: 355, column: 518, scope: !5653)
!5657 = !DILocation(line: 355, column: 525, scope: !5658)
!5658 = !DILexicalBlockFile(scope: !5659, file: !624, discriminator: 3)
!5659 = distinct !DILexicalBlock(scope: !5654, file: !624, line: 355, column: 513)
!5660 = !DILocation(line: 355, column: 529, scope: !5658)
!5661 = !DILocation(line: 355, column: 527, scope: !5658)
!5662 = !DILocation(line: 355, column: 513, scope: !5658)
!5663 = !DILocation(line: 355, column: 556, scope: !5664)
!5664 = !DILexicalBlockFile(scope: !5665, file: !624, discriminator: 4)
!5665 = distinct !DILexicalBlock(scope: !5659, file: !624, line: 355, column: 541)
!5666 = !DILocation(line: 355, column: 552, scope: !5664)
!5667 = !DILocation(line: 355, column: 567, scope: !5664)
!5668 = !DILocation(line: 355, column: 563, scope: !5664)
!5669 = !DILocation(line: 355, column: 579, scope: !5664)
!5670 = !DILocation(line: 355, column: 572, scope: !5664)
!5671 = !DILocation(line: 355, column: 570, scope: !5664)
!5672 = !DILocation(line: 355, column: 589, scope: !5664)
!5673 = !DILocation(line: 355, column: 585, scope: !5664)
!5674 = !DILocation(line: 355, column: 583, scope: !5664)
!5675 = !DILocation(line: 355, column: 561, scope: !5664)
!5676 = !DILocation(line: 355, column: 595, scope: !5664)
!5677 = !DILocation(line: 355, column: 593, scope: !5664)
!5678 = !DILocation(line: 355, column: 559, scope: !5664)
!5679 = !DILocation(line: 355, column: 547, scope: !5664)
!5680 = !DILocation(line: 355, column: 543, scope: !5664)
!5681 = !DILocation(line: 355, column: 550, scope: !5664)
!5682 = !DILocation(line: 355, column: 604, scope: !5664)
!5683 = !DILocation(line: 355, column: 537, scope: !5684)
!5684 = !DILexicalBlockFile(scope: !5659, file: !624, discriminator: 5)
!5685 = !DILocation(line: 355, column: 513, scope: !5684)
!5686 = distinct !{!5686, !5687}
!5687 = !DILocation(line: 355, column: 513, scope: !5655)
!5688 = !DILocation(line: 355, column: 613, scope: !5689)
!5689 = !DILexicalBlockFile(scope: !5655, file: !624, discriminator: 6)
!5690 = !DILocation(line: 355, column: 610, scope: !5689)
!5691 = !DILocation(line: 355, column: 634, scope: !5689)
!5692 = !DILocation(line: 355, column: 631, scope: !5689)
!5693 = !DILocation(line: 355, column: 658, scope: !5689)
!5694 = !DILocation(line: 355, column: 655, scope: !5689)
!5695 = !DILocation(line: 355, column: 675, scope: !5689)
!5696 = !DILocation(line: 355, column: 507, scope: !5697)
!5697 = !DILexicalBlockFile(scope: !5648, file: !624, discriminator: 7)
!5698 = !DILocation(line: 355, column: 482, scope: !5697)
!5699 = distinct !{!5699, !5700}
!5700 = !DILocation(line: 355, column: 482, scope: !5597)
!5701 = !DILocation(line: 355, column: 677, scope: !5702)
!5702 = !DILexicalBlockFile(scope: !5597, file: !624, discriminator: 8)
!5703 = distinct !DISubprogram(name: "blend_average_10bit", scope: !624, file: !624, line: 330, type: !1531, isLocal: true, isDefinition: true, scopeLine: 330, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!5704 = !DILocalVariable(name: "_top", arg: 1, scope: !5703, file: !624, line: 330, type: !900)
!5705 = !DILocation(line: 330, column: 48, scope: !5703)
!5706 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !5703, file: !624, line: 330, type: !902)
!5707 = !DILocation(line: 330, column: 64, scope: !5703)
!5708 = !DILocalVariable(name: "_bottom", arg: 3, scope: !5703, file: !624, line: 330, type: !900)
!5709 = !DILocation(line: 330, column: 93, scope: !5703)
!5710 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !5703, file: !624, line: 330, type: !902)
!5711 = !DILocation(line: 330, column: 112, scope: !5703)
!5712 = !DILocalVariable(name: "_dst", arg: 5, scope: !5703, file: !624, line: 330, type: !329)
!5713 = !DILocation(line: 330, column: 138, scope: !5703)
!5714 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !5703, file: !624, line: 330, type: !902)
!5715 = !DILocation(line: 330, column: 154, scope: !5703)
!5716 = !DILocalVariable(name: "width", arg: 7, scope: !5703, file: !624, line: 330, type: !902)
!5717 = !DILocation(line: 330, column: 178, scope: !5703)
!5718 = !DILocalVariable(name: "height", arg: 8, scope: !5703, file: !624, line: 330, type: !902)
!5719 = !DILocation(line: 330, column: 195, scope: !5703)
!5720 = !DILocalVariable(name: "param", arg: 9, scope: !5703, file: !624, line: 330, type: !884)
!5721 = !DILocation(line: 330, column: 217, scope: !5703)
!5722 = !DILocalVariable(name: "values", arg: 10, scope: !5703, file: !624, line: 330, type: !544)
!5723 = !DILocation(line: 330, column: 232, scope: !5703)
!5724 = !DILocalVariable(name: "starty", arg: 11, scope: !5703, file: !624, line: 330, type: !238)
!5725 = !DILocation(line: 330, column: 244, scope: !5703)
!5726 = !DILocalVariable(name: "top", scope: !5703, file: !624, line: 330, type: !839)
!5727 = !DILocation(line: 330, column: 270, scope: !5703)
!5728 = !DILocation(line: 330, column: 293, scope: !5703)
!5729 = !DILocation(line: 330, column: 276, scope: !5703)
!5730 = !DILocalVariable(name: "bottom", scope: !5703, file: !624, line: 330, type: !839)
!5731 = !DILocation(line: 330, column: 315, scope: !5703)
!5732 = !DILocation(line: 330, column: 341, scope: !5703)
!5733 = !DILocation(line: 330, column: 324, scope: !5703)
!5734 = !DILocalVariable(name: "dst", scope: !5703, file: !624, line: 330, type: !843)
!5735 = !DILocation(line: 330, column: 360, scope: !5703)
!5736 = !DILocation(line: 330, column: 377, scope: !5703)
!5737 = !DILocation(line: 330, column: 366, scope: !5703)
!5738 = !DILocalVariable(name: "opacity", scope: !5703, file: !624, line: 330, type: !248)
!5739 = !DILocation(line: 330, column: 390, scope: !5703)
!5740 = !DILocation(line: 330, column: 400, scope: !5703)
!5741 = !DILocation(line: 330, column: 407, scope: !5703)
!5742 = !DILocalVariable(name: "i", scope: !5703, file: !624, line: 330, type: !238)
!5743 = !DILocation(line: 330, column: 420, scope: !5703)
!5744 = !DILocalVariable(name: "j", scope: !5703, file: !624, line: 330, type: !238)
!5745 = !DILocation(line: 330, column: 423, scope: !5703)
!5746 = !DILocation(line: 330, column: 439, scope: !5703)
!5747 = !DILocation(line: 330, column: 458, scope: !5703)
!5748 = !DILocation(line: 330, column: 480, scope: !5703)
!5749 = !DILocation(line: 330, column: 493, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5703, file: !624, line: 330, column: 486)
!5751 = !DILocation(line: 330, column: 491, scope: !5750)
!5752 = !DILocation(line: 330, column: 498, scope: !5753)
!5753 = !DILexicalBlockFile(scope: !5754, file: !624, discriminator: 1)
!5754 = distinct !DILexicalBlock(scope: !5750, file: !624, line: 330, column: 486)
!5755 = !DILocation(line: 330, column: 502, scope: !5753)
!5756 = !DILocation(line: 330, column: 500, scope: !5753)
!5757 = !DILocation(line: 330, column: 486, scope: !5753)
!5758 = !DILocation(line: 330, column: 524, scope: !5759)
!5759 = !DILexicalBlockFile(scope: !5760, file: !624, discriminator: 2)
!5760 = distinct !DILexicalBlock(scope: !5761, file: !624, line: 330, column: 517)
!5761 = distinct !DILexicalBlock(scope: !5754, file: !624, line: 330, column: 515)
!5762 = !DILocation(line: 330, column: 522, scope: !5759)
!5763 = !DILocation(line: 330, column: 529, scope: !5764)
!5764 = !DILexicalBlockFile(scope: !5765, file: !624, discriminator: 3)
!5765 = distinct !DILexicalBlock(scope: !5760, file: !624, line: 330, column: 517)
!5766 = !DILocation(line: 330, column: 533, scope: !5764)
!5767 = !DILocation(line: 330, column: 531, scope: !5764)
!5768 = !DILocation(line: 330, column: 517, scope: !5764)
!5769 = !DILocation(line: 330, column: 560, scope: !5770)
!5770 = !DILexicalBlockFile(scope: !5771, file: !624, discriminator: 4)
!5771 = distinct !DILexicalBlock(scope: !5765, file: !624, line: 330, column: 545)
!5772 = !DILocation(line: 330, column: 556, scope: !5770)
!5773 = !DILocation(line: 330, column: 572, scope: !5770)
!5774 = !DILocation(line: 330, column: 568, scope: !5770)
!5775 = !DILocation(line: 330, column: 584, scope: !5770)
!5776 = !DILocation(line: 330, column: 577, scope: !5770)
!5777 = !DILocation(line: 330, column: 575, scope: !5770)
!5778 = !DILocation(line: 330, column: 588, scope: !5770)
!5779 = !DILocation(line: 330, column: 599, scope: !5770)
!5780 = !DILocation(line: 330, column: 595, scope: !5770)
!5781 = !DILocation(line: 330, column: 593, scope: !5770)
!5782 = !DILocation(line: 330, column: 565, scope: !5770)
!5783 = !DILocation(line: 330, column: 605, scope: !5770)
!5784 = !DILocation(line: 330, column: 603, scope: !5770)
!5785 = !DILocation(line: 330, column: 563, scope: !5770)
!5786 = !DILocation(line: 330, column: 551, scope: !5770)
!5787 = !DILocation(line: 330, column: 547, scope: !5770)
!5788 = !DILocation(line: 330, column: 554, scope: !5770)
!5789 = !DILocation(line: 330, column: 614, scope: !5770)
!5790 = !DILocation(line: 330, column: 541, scope: !5791)
!5791 = !DILexicalBlockFile(scope: !5765, file: !624, discriminator: 5)
!5792 = !DILocation(line: 330, column: 517, scope: !5791)
!5793 = distinct !{!5793, !5794}
!5794 = !DILocation(line: 330, column: 517, scope: !5761)
!5795 = !DILocation(line: 330, column: 623, scope: !5796)
!5796 = !DILexicalBlockFile(scope: !5761, file: !624, discriminator: 6)
!5797 = !DILocation(line: 330, column: 620, scope: !5796)
!5798 = !DILocation(line: 330, column: 644, scope: !5796)
!5799 = !DILocation(line: 330, column: 641, scope: !5796)
!5800 = !DILocation(line: 330, column: 668, scope: !5796)
!5801 = !DILocation(line: 330, column: 665, scope: !5796)
!5802 = !DILocation(line: 330, column: 685, scope: !5796)
!5803 = !DILocation(line: 330, column: 511, scope: !5804)
!5804 = !DILexicalBlockFile(scope: !5754, file: !624, discriminator: 7)
!5805 = !DILocation(line: 330, column: 486, scope: !5804)
!5806 = distinct !{!5806, !5807}
!5807 = !DILocation(line: 330, column: 486, scope: !5703)
!5808 = !DILocation(line: 330, column: 687, scope: !5809)
!5809 = !DILexicalBlockFile(scope: !5703, file: !624, discriminator: 8)
!5810 = distinct !DISubprogram(name: "blend_burn_10bit", scope: !624, file: !624, line: 348, type: !1531, isLocal: true, isDefinition: true, scopeLine: 348, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!5811 = !DILocalVariable(name: "_top", arg: 1, scope: !5810, file: !624, line: 348, type: !900)
!5812 = !DILocation(line: 348, column: 45, scope: !5810)
!5813 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !5810, file: !624, line: 348, type: !902)
!5814 = !DILocation(line: 348, column: 61, scope: !5810)
!5815 = !DILocalVariable(name: "_bottom", arg: 3, scope: !5810, file: !624, line: 348, type: !900)
!5816 = !DILocation(line: 348, column: 90, scope: !5810)
!5817 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !5810, file: !624, line: 348, type: !902)
!5818 = !DILocation(line: 348, column: 109, scope: !5810)
!5819 = !DILocalVariable(name: "_dst", arg: 5, scope: !5810, file: !624, line: 348, type: !329)
!5820 = !DILocation(line: 348, column: 135, scope: !5810)
!5821 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !5810, file: !624, line: 348, type: !902)
!5822 = !DILocation(line: 348, column: 151, scope: !5810)
!5823 = !DILocalVariable(name: "width", arg: 7, scope: !5810, file: !624, line: 348, type: !902)
!5824 = !DILocation(line: 348, column: 175, scope: !5810)
!5825 = !DILocalVariable(name: "height", arg: 8, scope: !5810, file: !624, line: 348, type: !902)
!5826 = !DILocation(line: 348, column: 192, scope: !5810)
!5827 = !DILocalVariable(name: "param", arg: 9, scope: !5810, file: !624, line: 348, type: !884)
!5828 = !DILocation(line: 348, column: 214, scope: !5810)
!5829 = !DILocalVariable(name: "values", arg: 10, scope: !5810, file: !624, line: 348, type: !544)
!5830 = !DILocation(line: 348, column: 229, scope: !5810)
!5831 = !DILocalVariable(name: "starty", arg: 11, scope: !5810, file: !624, line: 348, type: !238)
!5832 = !DILocation(line: 348, column: 241, scope: !5810)
!5833 = !DILocalVariable(name: "top", scope: !5810, file: !624, line: 348, type: !839)
!5834 = !DILocation(line: 348, column: 267, scope: !5810)
!5835 = !DILocation(line: 348, column: 290, scope: !5810)
!5836 = !DILocation(line: 348, column: 273, scope: !5810)
!5837 = !DILocalVariable(name: "bottom", scope: !5810, file: !624, line: 348, type: !839)
!5838 = !DILocation(line: 348, column: 312, scope: !5810)
!5839 = !DILocation(line: 348, column: 338, scope: !5810)
!5840 = !DILocation(line: 348, column: 321, scope: !5810)
!5841 = !DILocalVariable(name: "dst", scope: !5810, file: !624, line: 348, type: !843)
!5842 = !DILocation(line: 348, column: 357, scope: !5810)
!5843 = !DILocation(line: 348, column: 374, scope: !5810)
!5844 = !DILocation(line: 348, column: 363, scope: !5810)
!5845 = !DILocalVariable(name: "opacity", scope: !5810, file: !624, line: 348, type: !248)
!5846 = !DILocation(line: 348, column: 387, scope: !5810)
!5847 = !DILocation(line: 348, column: 397, scope: !5810)
!5848 = !DILocation(line: 348, column: 404, scope: !5810)
!5849 = !DILocalVariable(name: "i", scope: !5810, file: !624, line: 348, type: !238)
!5850 = !DILocation(line: 348, column: 417, scope: !5810)
!5851 = !DILocalVariable(name: "j", scope: !5810, file: !624, line: 348, type: !238)
!5852 = !DILocation(line: 348, column: 420, scope: !5810)
!5853 = !DILocation(line: 348, column: 436, scope: !5810)
!5854 = !DILocation(line: 348, column: 455, scope: !5810)
!5855 = !DILocation(line: 348, column: 477, scope: !5810)
!5856 = !DILocation(line: 348, column: 490, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !5810, file: !624, line: 348, column: 483)
!5858 = !DILocation(line: 348, column: 488, scope: !5857)
!5859 = !DILocation(line: 348, column: 495, scope: !5860)
!5860 = !DILexicalBlockFile(scope: !5861, file: !624, discriminator: 1)
!5861 = distinct !DILexicalBlock(scope: !5857, file: !624, line: 348, column: 483)
!5862 = !DILocation(line: 348, column: 499, scope: !5860)
!5863 = !DILocation(line: 348, column: 497, scope: !5860)
!5864 = !DILocation(line: 348, column: 483, scope: !5860)
!5865 = !DILocation(line: 348, column: 521, scope: !5866)
!5866 = !DILexicalBlockFile(scope: !5867, file: !624, discriminator: 2)
!5867 = distinct !DILexicalBlock(scope: !5868, file: !624, line: 348, column: 514)
!5868 = distinct !DILexicalBlock(scope: !5861, file: !624, line: 348, column: 512)
!5869 = !DILocation(line: 348, column: 519, scope: !5866)
!5870 = !DILocation(line: 348, column: 526, scope: !5871)
!5871 = !DILexicalBlockFile(scope: !5872, file: !624, discriminator: 3)
!5872 = distinct !DILexicalBlock(scope: !5867, file: !624, line: 348, column: 514)
!5873 = !DILocation(line: 348, column: 530, scope: !5871)
!5874 = !DILocation(line: 348, column: 528, scope: !5871)
!5875 = !DILocation(line: 348, column: 514, scope: !5871)
!5876 = !DILocation(line: 348, column: 557, scope: !5877)
!5877 = !DILexicalBlockFile(scope: !5878, file: !624, discriminator: 4)
!5878 = distinct !DILexicalBlock(scope: !5872, file: !624, line: 348, column: 542)
!5879 = !DILocation(line: 348, column: 553, scope: !5877)
!5880 = !DILocation(line: 348, column: 571, scope: !5877)
!5881 = !DILocation(line: 348, column: 567, scope: !5877)
!5882 = !DILocation(line: 348, column: 566, scope: !5877)
!5883 = !DILocation(line: 348, column: 575, scope: !5877)
!5884 = !DILocation(line: 348, column: 565, scope: !5877)
!5885 = !DILocation(line: 348, column: 588, scope: !5886)
!5886 = !DILexicalBlockFile(scope: !5878, file: !624, discriminator: 5)
!5887 = !DILocation(line: 348, column: 584, scope: !5886)
!5888 = !DILocation(line: 348, column: 583, scope: !5886)
!5889 = !DILocation(line: 348, column: 565, scope: !5886)
!5890 = !DILocation(line: 348, column: 626, scope: !5891)
!5891 = !DILexicalBlockFile(scope: !5878, file: !624, discriminator: 6)
!5892 = !DILocation(line: 348, column: 619, scope: !5891)
!5893 = !DILocation(line: 348, column: 618, scope: !5891)
!5894 = !DILocation(line: 348, column: 616, scope: !5891)
!5895 = !DILocation(line: 348, column: 631, scope: !5891)
!5896 = !DILocation(line: 348, column: 645, scope: !5891)
!5897 = !DILocation(line: 348, column: 641, scope: !5891)
!5898 = !DILocation(line: 348, column: 640, scope: !5891)
!5899 = !DILocation(line: 348, column: 638, scope: !5891)
!5900 = !DILocation(line: 348, column: 607, scope: !5891)
!5901 = !DILocation(line: 348, column: 599, scope: !5891)
!5902 = !DILocation(line: 348, column: 595, scope: !5891)
!5903 = !DILocation(line: 348, column: 595, scope: !5904)
!5904 = !DILexicalBlockFile(scope: !5878, file: !624, discriminator: 7)
!5905 = !DILocation(line: 348, column: 683, scope: !5906)
!5906 = !DILexicalBlockFile(scope: !5878, file: !624, discriminator: 8)
!5907 = !DILocation(line: 348, column: 676, scope: !5906)
!5908 = !DILocation(line: 348, column: 675, scope: !5906)
!5909 = !DILocation(line: 348, column: 673, scope: !5906)
!5910 = !DILocation(line: 348, column: 688, scope: !5906)
!5911 = !DILocation(line: 348, column: 702, scope: !5906)
!5912 = !DILocation(line: 348, column: 698, scope: !5906)
!5913 = !DILocation(line: 348, column: 697, scope: !5906)
!5914 = !DILocation(line: 348, column: 695, scope: !5906)
!5915 = !DILocation(line: 348, column: 664, scope: !5906)
!5916 = !DILocation(line: 348, column: 595, scope: !5906)
!5917 = !DILocation(line: 348, column: 595, scope: !5918)
!5918 = !DILexicalBlockFile(scope: !5878, file: !624, discriminator: 9)
!5919 = !DILocation(line: 348, column: 565, scope: !5918)
!5920 = !DILocation(line: 348, column: 565, scope: !5921)
!5921 = !DILexicalBlockFile(scope: !5878, file: !624, discriminator: 10)
!5922 = !DILocation(line: 348, column: 716, scope: !5921)
!5923 = !DILocation(line: 348, column: 712, scope: !5921)
!5924 = !DILocation(line: 348, column: 710, scope: !5921)
!5925 = !DILocation(line: 348, column: 562, scope: !5921)
!5926 = !DILocation(line: 348, column: 722, scope: !5921)
!5927 = !DILocation(line: 348, column: 720, scope: !5921)
!5928 = !DILocation(line: 348, column: 560, scope: !5921)
!5929 = !DILocation(line: 348, column: 553, scope: !5921)
!5930 = !DILocation(line: 348, column: 548, scope: !5921)
!5931 = !DILocation(line: 348, column: 544, scope: !5921)
!5932 = !DILocation(line: 348, column: 551, scope: !5921)
!5933 = !DILocation(line: 348, column: 731, scope: !5921)
!5934 = !DILocation(line: 348, column: 538, scope: !5935)
!5935 = !DILexicalBlockFile(scope: !5872, file: !624, discriminator: 11)
!5936 = !DILocation(line: 348, column: 514, scope: !5935)
!5937 = distinct !{!5937, !5938}
!5938 = !DILocation(line: 348, column: 514, scope: !5868)
!5939 = !DILocation(line: 348, column: 740, scope: !5940)
!5940 = !DILexicalBlockFile(scope: !5868, file: !624, discriminator: 12)
!5941 = !DILocation(line: 348, column: 737, scope: !5940)
!5942 = !DILocation(line: 348, column: 761, scope: !5940)
!5943 = !DILocation(line: 348, column: 758, scope: !5940)
!5944 = !DILocation(line: 348, column: 785, scope: !5940)
!5945 = !DILocation(line: 348, column: 782, scope: !5940)
!5946 = !DILocation(line: 348, column: 802, scope: !5940)
!5947 = !DILocation(line: 348, column: 508, scope: !5948)
!5948 = !DILexicalBlockFile(scope: !5861, file: !624, discriminator: 13)
!5949 = !DILocation(line: 348, column: 483, scope: !5948)
!5950 = distinct !{!5950, !5951}
!5951 = !DILocation(line: 348, column: 483, scope: !5810)
!5952 = !DILocation(line: 348, column: 804, scope: !5953)
!5953 = !DILexicalBlockFile(scope: !5810, file: !624, discriminator: 14)
!5954 = distinct !DISubprogram(name: "blend_darken_10bit", scope: !624, file: !624, line: 344, type: !1531, isLocal: true, isDefinition: true, scopeLine: 344, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!5955 = !DILocalVariable(name: "_top", arg: 1, scope: !5954, file: !624, line: 344, type: !900)
!5956 = !DILocation(line: 344, column: 47, scope: !5954)
!5957 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !5954, file: !624, line: 344, type: !902)
!5958 = !DILocation(line: 344, column: 63, scope: !5954)
!5959 = !DILocalVariable(name: "_bottom", arg: 3, scope: !5954, file: !624, line: 344, type: !900)
!5960 = !DILocation(line: 344, column: 92, scope: !5954)
!5961 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !5954, file: !624, line: 344, type: !902)
!5962 = !DILocation(line: 344, column: 111, scope: !5954)
!5963 = !DILocalVariable(name: "_dst", arg: 5, scope: !5954, file: !624, line: 344, type: !329)
!5964 = !DILocation(line: 344, column: 137, scope: !5954)
!5965 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !5954, file: !624, line: 344, type: !902)
!5966 = !DILocation(line: 344, column: 153, scope: !5954)
!5967 = !DILocalVariable(name: "width", arg: 7, scope: !5954, file: !624, line: 344, type: !902)
!5968 = !DILocation(line: 344, column: 177, scope: !5954)
!5969 = !DILocalVariable(name: "height", arg: 8, scope: !5954, file: !624, line: 344, type: !902)
!5970 = !DILocation(line: 344, column: 194, scope: !5954)
!5971 = !DILocalVariable(name: "param", arg: 9, scope: !5954, file: !624, line: 344, type: !884)
!5972 = !DILocation(line: 344, column: 216, scope: !5954)
!5973 = !DILocalVariable(name: "values", arg: 10, scope: !5954, file: !624, line: 344, type: !544)
!5974 = !DILocation(line: 344, column: 231, scope: !5954)
!5975 = !DILocalVariable(name: "starty", arg: 11, scope: !5954, file: !624, line: 344, type: !238)
!5976 = !DILocation(line: 344, column: 243, scope: !5954)
!5977 = !DILocalVariable(name: "top", scope: !5954, file: !624, line: 344, type: !839)
!5978 = !DILocation(line: 344, column: 269, scope: !5954)
!5979 = !DILocation(line: 344, column: 292, scope: !5954)
!5980 = !DILocation(line: 344, column: 275, scope: !5954)
!5981 = !DILocalVariable(name: "bottom", scope: !5954, file: !624, line: 344, type: !839)
!5982 = !DILocation(line: 344, column: 314, scope: !5954)
!5983 = !DILocation(line: 344, column: 340, scope: !5954)
!5984 = !DILocation(line: 344, column: 323, scope: !5954)
!5985 = !DILocalVariable(name: "dst", scope: !5954, file: !624, line: 344, type: !843)
!5986 = !DILocation(line: 344, column: 359, scope: !5954)
!5987 = !DILocation(line: 344, column: 376, scope: !5954)
!5988 = !DILocation(line: 344, column: 365, scope: !5954)
!5989 = !DILocalVariable(name: "opacity", scope: !5954, file: !624, line: 344, type: !248)
!5990 = !DILocation(line: 344, column: 389, scope: !5954)
!5991 = !DILocation(line: 344, column: 399, scope: !5954)
!5992 = !DILocation(line: 344, column: 406, scope: !5954)
!5993 = !DILocalVariable(name: "i", scope: !5954, file: !624, line: 344, type: !238)
!5994 = !DILocation(line: 344, column: 419, scope: !5954)
!5995 = !DILocalVariable(name: "j", scope: !5954, file: !624, line: 344, type: !238)
!5996 = !DILocation(line: 344, column: 422, scope: !5954)
!5997 = !DILocation(line: 344, column: 438, scope: !5954)
!5998 = !DILocation(line: 344, column: 457, scope: !5954)
!5999 = !DILocation(line: 344, column: 479, scope: !5954)
!6000 = !DILocation(line: 344, column: 492, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5954, file: !624, line: 344, column: 485)
!6002 = !DILocation(line: 344, column: 490, scope: !6001)
!6003 = !DILocation(line: 344, column: 497, scope: !6004)
!6004 = !DILexicalBlockFile(scope: !6005, file: !624, discriminator: 1)
!6005 = distinct !DILexicalBlock(scope: !6001, file: !624, line: 344, column: 485)
!6006 = !DILocation(line: 344, column: 501, scope: !6004)
!6007 = !DILocation(line: 344, column: 499, scope: !6004)
!6008 = !DILocation(line: 344, column: 485, scope: !6004)
!6009 = !DILocation(line: 344, column: 523, scope: !6010)
!6010 = !DILexicalBlockFile(scope: !6011, file: !624, discriminator: 2)
!6011 = distinct !DILexicalBlock(scope: !6012, file: !624, line: 344, column: 516)
!6012 = distinct !DILexicalBlock(scope: !6005, file: !624, line: 344, column: 514)
!6013 = !DILocation(line: 344, column: 521, scope: !6010)
!6014 = !DILocation(line: 344, column: 528, scope: !6015)
!6015 = !DILexicalBlockFile(scope: !6016, file: !624, discriminator: 3)
!6016 = distinct !DILexicalBlock(scope: !6011, file: !624, line: 344, column: 516)
!6017 = !DILocation(line: 344, column: 532, scope: !6015)
!6018 = !DILocation(line: 344, column: 530, scope: !6015)
!6019 = !DILocation(line: 344, column: 516, scope: !6015)
!6020 = !DILocation(line: 344, column: 559, scope: !6021)
!6021 = !DILexicalBlockFile(scope: !6022, file: !624, discriminator: 4)
!6022 = distinct !DILexicalBlock(scope: !6016, file: !624, line: 344, column: 544)
!6023 = !DILocation(line: 344, column: 555, scope: !6021)
!6024 = !DILocation(line: 344, column: 572, scope: !6021)
!6025 = !DILocation(line: 344, column: 568, scope: !6021)
!6026 = !DILocation(line: 344, column: 567, scope: !6021)
!6027 = !DILocation(line: 344, column: 586, scope: !6021)
!6028 = !DILocation(line: 344, column: 579, scope: !6021)
!6029 = !DILocation(line: 344, column: 578, scope: !6021)
!6030 = !DILocation(line: 344, column: 576, scope: !6021)
!6031 = !DILocation(line: 344, column: 600, scope: !6032)
!6032 = !DILexicalBlockFile(scope: !6022, file: !624, discriminator: 5)
!6033 = !DILocation(line: 344, column: 593, scope: !6032)
!6034 = !DILocation(line: 344, column: 592, scope: !6032)
!6035 = !DILocation(line: 344, column: 567, scope: !6032)
!6036 = !DILocation(line: 344, column: 611, scope: !6037)
!6037 = !DILexicalBlockFile(scope: !6022, file: !624, discriminator: 6)
!6038 = !DILocation(line: 344, column: 607, scope: !6037)
!6039 = !DILocation(line: 344, column: 606, scope: !6037)
!6040 = !DILocation(line: 344, column: 567, scope: !6037)
!6041 = !DILocation(line: 344, column: 567, scope: !6042)
!6042 = !DILexicalBlockFile(scope: !6022, file: !624, discriminator: 7)
!6043 = !DILocation(line: 344, column: 623, scope: !6042)
!6044 = !DILocation(line: 344, column: 619, scope: !6042)
!6045 = !DILocation(line: 344, column: 617, scope: !6042)
!6046 = !DILocation(line: 344, column: 564, scope: !6042)
!6047 = !DILocation(line: 344, column: 629, scope: !6042)
!6048 = !DILocation(line: 344, column: 627, scope: !6042)
!6049 = !DILocation(line: 344, column: 562, scope: !6042)
!6050 = !DILocation(line: 344, column: 555, scope: !6042)
!6051 = !DILocation(line: 344, column: 550, scope: !6042)
!6052 = !DILocation(line: 344, column: 546, scope: !6042)
!6053 = !DILocation(line: 344, column: 553, scope: !6042)
!6054 = !DILocation(line: 344, column: 638, scope: !6042)
!6055 = !DILocation(line: 344, column: 540, scope: !6056)
!6056 = !DILexicalBlockFile(scope: !6016, file: !624, discriminator: 8)
!6057 = !DILocation(line: 344, column: 516, scope: !6056)
!6058 = distinct !{!6058, !6059}
!6059 = !DILocation(line: 344, column: 516, scope: !6012)
!6060 = !DILocation(line: 344, column: 647, scope: !6061)
!6061 = !DILexicalBlockFile(scope: !6012, file: !624, discriminator: 9)
!6062 = !DILocation(line: 344, column: 644, scope: !6061)
!6063 = !DILocation(line: 344, column: 668, scope: !6061)
!6064 = !DILocation(line: 344, column: 665, scope: !6061)
!6065 = !DILocation(line: 344, column: 692, scope: !6061)
!6066 = !DILocation(line: 344, column: 689, scope: !6061)
!6067 = !DILocation(line: 344, column: 709, scope: !6061)
!6068 = !DILocation(line: 344, column: 510, scope: !6069)
!6069 = !DILexicalBlockFile(scope: !6005, file: !624, discriminator: 10)
!6070 = !DILocation(line: 344, column: 485, scope: !6069)
!6071 = distinct !{!6071, !6072}
!6072 = !DILocation(line: 344, column: 485, scope: !5954)
!6073 = !DILocation(line: 344, column: 711, scope: !6074)
!6074 = !DILexicalBlockFile(scope: !5954, file: !624, discriminator: 11)
!6075 = distinct !DISubprogram(name: "blend_difference_10bit", scope: !624, file: !624, line: 336, type: !1531, isLocal: true, isDefinition: true, scopeLine: 336, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!6076 = !DILocalVariable(name: "_top", arg: 1, scope: !6075, file: !624, line: 336, type: !900)
!6077 = !DILocation(line: 336, column: 51, scope: !6075)
!6078 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !6075, file: !624, line: 336, type: !902)
!6079 = !DILocation(line: 336, column: 67, scope: !6075)
!6080 = !DILocalVariable(name: "_bottom", arg: 3, scope: !6075, file: !624, line: 336, type: !900)
!6081 = !DILocation(line: 336, column: 96, scope: !6075)
!6082 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !6075, file: !624, line: 336, type: !902)
!6083 = !DILocation(line: 336, column: 115, scope: !6075)
!6084 = !DILocalVariable(name: "_dst", arg: 5, scope: !6075, file: !624, line: 336, type: !329)
!6085 = !DILocation(line: 336, column: 141, scope: !6075)
!6086 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !6075, file: !624, line: 336, type: !902)
!6087 = !DILocation(line: 336, column: 157, scope: !6075)
!6088 = !DILocalVariable(name: "width", arg: 7, scope: !6075, file: !624, line: 336, type: !902)
!6089 = !DILocation(line: 336, column: 181, scope: !6075)
!6090 = !DILocalVariable(name: "height", arg: 8, scope: !6075, file: !624, line: 336, type: !902)
!6091 = !DILocation(line: 336, column: 198, scope: !6075)
!6092 = !DILocalVariable(name: "param", arg: 9, scope: !6075, file: !624, line: 336, type: !884)
!6093 = !DILocation(line: 336, column: 220, scope: !6075)
!6094 = !DILocalVariable(name: "values", arg: 10, scope: !6075, file: !624, line: 336, type: !544)
!6095 = !DILocation(line: 336, column: 235, scope: !6075)
!6096 = !DILocalVariable(name: "starty", arg: 11, scope: !6075, file: !624, line: 336, type: !238)
!6097 = !DILocation(line: 336, column: 247, scope: !6075)
!6098 = !DILocalVariable(name: "top", scope: !6075, file: !624, line: 336, type: !839)
!6099 = !DILocation(line: 336, column: 273, scope: !6075)
!6100 = !DILocation(line: 336, column: 296, scope: !6075)
!6101 = !DILocation(line: 336, column: 279, scope: !6075)
!6102 = !DILocalVariable(name: "bottom", scope: !6075, file: !624, line: 336, type: !839)
!6103 = !DILocation(line: 336, column: 318, scope: !6075)
!6104 = !DILocation(line: 336, column: 344, scope: !6075)
!6105 = !DILocation(line: 336, column: 327, scope: !6075)
!6106 = !DILocalVariable(name: "dst", scope: !6075, file: !624, line: 336, type: !843)
!6107 = !DILocation(line: 336, column: 363, scope: !6075)
!6108 = !DILocation(line: 336, column: 380, scope: !6075)
!6109 = !DILocation(line: 336, column: 369, scope: !6075)
!6110 = !DILocalVariable(name: "opacity", scope: !6075, file: !624, line: 336, type: !248)
!6111 = !DILocation(line: 336, column: 393, scope: !6075)
!6112 = !DILocation(line: 336, column: 403, scope: !6075)
!6113 = !DILocation(line: 336, column: 410, scope: !6075)
!6114 = !DILocalVariable(name: "i", scope: !6075, file: !624, line: 336, type: !238)
!6115 = !DILocation(line: 336, column: 423, scope: !6075)
!6116 = !DILocalVariable(name: "j", scope: !6075, file: !624, line: 336, type: !238)
!6117 = !DILocation(line: 336, column: 426, scope: !6075)
!6118 = !DILocation(line: 336, column: 442, scope: !6075)
!6119 = !DILocation(line: 336, column: 461, scope: !6075)
!6120 = !DILocation(line: 336, column: 483, scope: !6075)
!6121 = !DILocation(line: 336, column: 496, scope: !6122)
!6122 = distinct !DILexicalBlock(scope: !6075, file: !624, line: 336, column: 489)
!6123 = !DILocation(line: 336, column: 494, scope: !6122)
!6124 = !DILocation(line: 336, column: 501, scope: !6125)
!6125 = !DILexicalBlockFile(scope: !6126, file: !624, discriminator: 1)
!6126 = distinct !DILexicalBlock(scope: !6122, file: !624, line: 336, column: 489)
!6127 = !DILocation(line: 336, column: 505, scope: !6125)
!6128 = !DILocation(line: 336, column: 503, scope: !6125)
!6129 = !DILocation(line: 336, column: 489, scope: !6125)
!6130 = !DILocation(line: 336, column: 527, scope: !6131)
!6131 = !DILexicalBlockFile(scope: !6132, file: !624, discriminator: 2)
!6132 = distinct !DILexicalBlock(scope: !6133, file: !624, line: 336, column: 520)
!6133 = distinct !DILexicalBlock(scope: !6126, file: !624, line: 336, column: 518)
!6134 = !DILocation(line: 336, column: 525, scope: !6131)
!6135 = !DILocation(line: 336, column: 532, scope: !6136)
!6136 = !DILexicalBlockFile(scope: !6137, file: !624, discriminator: 3)
!6137 = distinct !DILexicalBlock(scope: !6132, file: !624, line: 336, column: 520)
!6138 = !DILocation(line: 336, column: 536, scope: !6136)
!6139 = !DILocation(line: 336, column: 534, scope: !6136)
!6140 = !DILocation(line: 336, column: 520, scope: !6136)
!6141 = !DILocation(line: 336, column: 563, scope: !6142)
!6142 = !DILexicalBlockFile(scope: !6143, file: !624, discriminator: 4)
!6143 = distinct !DILexicalBlock(scope: !6137, file: !624, line: 336, column: 548)
!6144 = !DILocation(line: 336, column: 559, scope: !6142)
!6145 = !DILocation(line: 336, column: 576, scope: !6142)
!6146 = !DILocation(line: 336, column: 572, scope: !6142)
!6147 = !DILocation(line: 336, column: 588, scope: !6142)
!6148 = !DILocation(line: 336, column: 581, scope: !6142)
!6149 = !DILocation(line: 336, column: 579, scope: !6142)
!6150 = !DILocation(line: 336, column: 592, scope: !6142)
!6151 = !DILocation(line: 336, column: 571, scope: !6142)
!6152 = !DILocation(line: 336, column: 604, scope: !6153)
!6153 = !DILexicalBlockFile(scope: !6143, file: !624, discriminator: 5)
!6154 = !DILocation(line: 336, column: 600, scope: !6153)
!6155 = !DILocation(line: 336, column: 616, scope: !6153)
!6156 = !DILocation(line: 336, column: 609, scope: !6153)
!6157 = !DILocation(line: 336, column: 607, scope: !6153)
!6158 = !DILocation(line: 336, column: 571, scope: !6153)
!6159 = !DILocation(line: 336, column: 629, scope: !6160)
!6160 = !DILexicalBlockFile(scope: !6143, file: !624, discriminator: 6)
!6161 = !DILocation(line: 336, column: 625, scope: !6160)
!6162 = !DILocation(line: 336, column: 641, scope: !6160)
!6163 = !DILocation(line: 336, column: 634, scope: !6160)
!6164 = !DILocation(line: 336, column: 632, scope: !6160)
!6165 = !DILocation(line: 336, column: 623, scope: !6160)
!6166 = !DILocation(line: 336, column: 571, scope: !6160)
!6167 = !DILocation(line: 336, column: 571, scope: !6168)
!6168 = !DILexicalBlockFile(scope: !6143, file: !624, discriminator: 7)
!6169 = !DILocation(line: 336, column: 654, scope: !6168)
!6170 = !DILocation(line: 336, column: 650, scope: !6168)
!6171 = !DILocation(line: 336, column: 648, scope: !6168)
!6172 = !DILocation(line: 336, column: 568, scope: !6168)
!6173 = !DILocation(line: 336, column: 660, scope: !6168)
!6174 = !DILocation(line: 336, column: 658, scope: !6168)
!6175 = !DILocation(line: 336, column: 566, scope: !6168)
!6176 = !DILocation(line: 336, column: 559, scope: !6168)
!6177 = !DILocation(line: 336, column: 554, scope: !6168)
!6178 = !DILocation(line: 336, column: 550, scope: !6168)
!6179 = !DILocation(line: 336, column: 557, scope: !6168)
!6180 = !DILocation(line: 336, column: 669, scope: !6168)
!6181 = !DILocation(line: 336, column: 544, scope: !6182)
!6182 = !DILexicalBlockFile(scope: !6137, file: !624, discriminator: 8)
!6183 = !DILocation(line: 336, column: 520, scope: !6182)
!6184 = distinct !{!6184, !6185}
!6185 = !DILocation(line: 336, column: 520, scope: !6133)
!6186 = !DILocation(line: 336, column: 678, scope: !6187)
!6187 = !DILexicalBlockFile(scope: !6133, file: !624, discriminator: 9)
!6188 = !DILocation(line: 336, column: 675, scope: !6187)
!6189 = !DILocation(line: 336, column: 699, scope: !6187)
!6190 = !DILocation(line: 336, column: 696, scope: !6187)
!6191 = !DILocation(line: 336, column: 723, scope: !6187)
!6192 = !DILocation(line: 336, column: 720, scope: !6187)
!6193 = !DILocation(line: 336, column: 740, scope: !6187)
!6194 = !DILocation(line: 336, column: 514, scope: !6195)
!6195 = !DILexicalBlockFile(scope: !6126, file: !624, discriminator: 10)
!6196 = !DILocation(line: 336, column: 489, scope: !6195)
!6197 = distinct !{!6197, !6198}
!6198 = !DILocation(line: 336, column: 489, scope: !6075)
!6199 = !DILocation(line: 336, column: 742, scope: !6200)
!6200 = !DILexicalBlockFile(scope: !6075, file: !624, discriminator: 11)
!6201 = distinct !DISubprogram(name: "blend_grainextract_10bit", scope: !624, file: !624, line: 337, type: !1531, isLocal: true, isDefinition: true, scopeLine: 337, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!6202 = !DILocation(line: 229, column: 99, scope: !5463, inlinedAt: !6203)
!6203 = distinct !DILocation(line: 337, column: 577, scope: !6204)
!6204 = !DILexicalBlockFile(scope: !6205, file: !624, discriminator: 4)
!6205 = distinct !DILexicalBlock(scope: !6206, file: !624, line: 337, column: 550)
!6206 = distinct !DILexicalBlock(scope: !6207, file: !624, line: 337, column: 522)
!6207 = distinct !DILexicalBlock(scope: !6208, file: !624, line: 337, column: 522)
!6208 = distinct !DILexicalBlock(scope: !6209, file: !624, line: 337, column: 520)
!6209 = distinct !DILexicalBlock(scope: !6210, file: !624, line: 337, column: 491)
!6210 = distinct !DILexicalBlock(scope: !6201, file: !624, line: 337, column: 491)
!6211 = !DILocation(line: 229, column: 106, scope: !5463, inlinedAt: !6203)
!6212 = !DILocalVariable(name: "_top", arg: 1, scope: !6201, file: !624, line: 337, type: !900)
!6213 = !DILocation(line: 337, column: 53, scope: !6201)
!6214 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !6201, file: !624, line: 337, type: !902)
!6215 = !DILocation(line: 337, column: 69, scope: !6201)
!6216 = !DILocalVariable(name: "_bottom", arg: 3, scope: !6201, file: !624, line: 337, type: !900)
!6217 = !DILocation(line: 337, column: 98, scope: !6201)
!6218 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !6201, file: !624, line: 337, type: !902)
!6219 = !DILocation(line: 337, column: 117, scope: !6201)
!6220 = !DILocalVariable(name: "_dst", arg: 5, scope: !6201, file: !624, line: 337, type: !329)
!6221 = !DILocation(line: 337, column: 143, scope: !6201)
!6222 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !6201, file: !624, line: 337, type: !902)
!6223 = !DILocation(line: 337, column: 159, scope: !6201)
!6224 = !DILocalVariable(name: "width", arg: 7, scope: !6201, file: !624, line: 337, type: !902)
!6225 = !DILocation(line: 337, column: 183, scope: !6201)
!6226 = !DILocalVariable(name: "height", arg: 8, scope: !6201, file: !624, line: 337, type: !902)
!6227 = !DILocation(line: 337, column: 200, scope: !6201)
!6228 = !DILocalVariable(name: "param", arg: 9, scope: !6201, file: !624, line: 337, type: !884)
!6229 = !DILocation(line: 337, column: 222, scope: !6201)
!6230 = !DILocalVariable(name: "values", arg: 10, scope: !6201, file: !624, line: 337, type: !544)
!6231 = !DILocation(line: 337, column: 237, scope: !6201)
!6232 = !DILocalVariable(name: "starty", arg: 11, scope: !6201, file: !624, line: 337, type: !238)
!6233 = !DILocation(line: 337, column: 249, scope: !6201)
!6234 = !DILocalVariable(name: "top", scope: !6201, file: !624, line: 337, type: !839)
!6235 = !DILocation(line: 337, column: 275, scope: !6201)
!6236 = !DILocation(line: 337, column: 298, scope: !6201)
!6237 = !DILocation(line: 337, column: 281, scope: !6201)
!6238 = !DILocalVariable(name: "bottom", scope: !6201, file: !624, line: 337, type: !839)
!6239 = !DILocation(line: 337, column: 320, scope: !6201)
!6240 = !DILocation(line: 337, column: 346, scope: !6201)
!6241 = !DILocation(line: 337, column: 329, scope: !6201)
!6242 = !DILocalVariable(name: "dst", scope: !6201, file: !624, line: 337, type: !843)
!6243 = !DILocation(line: 337, column: 365, scope: !6201)
!6244 = !DILocation(line: 337, column: 382, scope: !6201)
!6245 = !DILocation(line: 337, column: 371, scope: !6201)
!6246 = !DILocalVariable(name: "opacity", scope: !6201, file: !624, line: 337, type: !248)
!6247 = !DILocation(line: 337, column: 395, scope: !6201)
!6248 = !DILocation(line: 337, column: 405, scope: !6201)
!6249 = !DILocation(line: 337, column: 412, scope: !6201)
!6250 = !DILocalVariable(name: "i", scope: !6201, file: !624, line: 337, type: !238)
!6251 = !DILocation(line: 337, column: 425, scope: !6201)
!6252 = !DILocalVariable(name: "j", scope: !6201, file: !624, line: 337, type: !238)
!6253 = !DILocation(line: 337, column: 428, scope: !6201)
!6254 = !DILocation(line: 337, column: 444, scope: !6201)
!6255 = !DILocation(line: 337, column: 463, scope: !6201)
!6256 = !DILocation(line: 337, column: 485, scope: !6201)
!6257 = !DILocation(line: 337, column: 498, scope: !6210)
!6258 = !DILocation(line: 337, column: 496, scope: !6210)
!6259 = !DILocation(line: 337, column: 503, scope: !6260)
!6260 = !DILexicalBlockFile(scope: !6209, file: !624, discriminator: 1)
!6261 = !DILocation(line: 337, column: 507, scope: !6260)
!6262 = !DILocation(line: 337, column: 505, scope: !6260)
!6263 = !DILocation(line: 337, column: 491, scope: !6260)
!6264 = !DILocation(line: 337, column: 529, scope: !6265)
!6265 = !DILexicalBlockFile(scope: !6207, file: !624, discriminator: 2)
!6266 = !DILocation(line: 337, column: 527, scope: !6265)
!6267 = !DILocation(line: 337, column: 534, scope: !6268)
!6268 = !DILexicalBlockFile(scope: !6206, file: !624, discriminator: 3)
!6269 = !DILocation(line: 337, column: 538, scope: !6268)
!6270 = !DILocation(line: 337, column: 536, scope: !6268)
!6271 = !DILocation(line: 337, column: 522, scope: !6268)
!6272 = !DILocation(line: 337, column: 565, scope: !6204)
!6273 = !DILocation(line: 337, column: 561, scope: !6204)
!6274 = !DILocation(line: 337, column: 604, scope: !6204)
!6275 = !DILocation(line: 337, column: 600, scope: !6204)
!6276 = !DILocation(line: 337, column: 598, scope: !6204)
!6277 = !DILocation(line: 337, column: 616, scope: !6204)
!6278 = !DILocation(line: 337, column: 609, scope: !6204)
!6279 = !DILocation(line: 337, column: 607, scope: !6204)
!6280 = !DILocation(line: 337, column: 577, scope: !6204)
!6281 = !DILocation(line: 231, column: 9, scope: !5547, inlinedAt: !6203)
!6282 = !DILocation(line: 231, column: 19, scope: !5547, inlinedAt: !6203)
!6283 = !DILocation(line: 231, column: 17, scope: !5547, inlinedAt: !6203)
!6284 = !DILocation(line: 231, column: 22, scope: !5547, inlinedAt: !6203)
!6285 = !DILocation(line: 231, column: 13, scope: !5547, inlinedAt: !6203)
!6286 = !DILocation(line: 231, column: 11, scope: !5547, inlinedAt: !6203)
!6287 = !DILocation(line: 231, column: 9, scope: !5463, inlinedAt: !6203)
!6288 = !DILocation(line: 231, column: 37, scope: !5555, inlinedAt: !6203)
!6289 = !DILocation(line: 231, column: 36, scope: !5555, inlinedAt: !6203)
!6290 = !DILocation(line: 231, column: 40, scope: !5555, inlinedAt: !6203)
!6291 = !DILocation(line: 231, column: 53, scope: !5555, inlinedAt: !6203)
!6292 = !DILocation(line: 231, column: 51, scope: !5555, inlinedAt: !6203)
!6293 = !DILocation(line: 231, column: 56, scope: !5555, inlinedAt: !6203)
!6294 = !DILocation(line: 231, column: 46, scope: !5555, inlinedAt: !6203)
!6295 = !DILocation(line: 231, column: 28, scope: !5555, inlinedAt: !6203)
!6296 = !DILocation(line: 232, column: 17, scope: !5547, inlinedAt: !6203)
!6297 = !DILocation(line: 232, column: 10, scope: !5547, inlinedAt: !6203)
!6298 = !DILocation(line: 233, column: 1, scope: !5463, inlinedAt: !6203)
!6299 = !DILocation(line: 337, column: 631, scope: !6204)
!6300 = !DILocation(line: 337, column: 627, scope: !6204)
!6301 = !DILocation(line: 337, column: 625, scope: !6204)
!6302 = !DILocation(line: 337, column: 570, scope: !6204)
!6303 = !DILocation(line: 337, column: 637, scope: !6204)
!6304 = !DILocation(line: 337, column: 635, scope: !6204)
!6305 = !DILocation(line: 337, column: 568, scope: !6204)
!6306 = !DILocation(line: 337, column: 556, scope: !6204)
!6307 = !DILocation(line: 337, column: 552, scope: !6204)
!6308 = !DILocation(line: 337, column: 559, scope: !6204)
!6309 = !DILocation(line: 337, column: 646, scope: !6204)
!6310 = !DILocation(line: 337, column: 546, scope: !6311)
!6311 = !DILexicalBlockFile(scope: !6206, file: !624, discriminator: 5)
!6312 = !DILocation(line: 337, column: 522, scope: !6311)
!6313 = distinct !{!6313, !6314}
!6314 = !DILocation(line: 337, column: 522, scope: !6208)
!6315 = !DILocation(line: 337, column: 655, scope: !6316)
!6316 = !DILexicalBlockFile(scope: !6208, file: !624, discriminator: 6)
!6317 = !DILocation(line: 337, column: 652, scope: !6316)
!6318 = !DILocation(line: 337, column: 676, scope: !6316)
!6319 = !DILocation(line: 337, column: 673, scope: !6316)
!6320 = !DILocation(line: 337, column: 700, scope: !6316)
!6321 = !DILocation(line: 337, column: 697, scope: !6316)
!6322 = !DILocation(line: 337, column: 717, scope: !6316)
!6323 = !DILocation(line: 337, column: 516, scope: !6324)
!6324 = !DILexicalBlockFile(scope: !6209, file: !624, discriminator: 7)
!6325 = !DILocation(line: 337, column: 491, scope: !6324)
!6326 = distinct !{!6326, !6327}
!6327 = !DILocation(line: 337, column: 491, scope: !6201)
!6328 = !DILocation(line: 337, column: 719, scope: !6329)
!6329 = !DILexicalBlockFile(scope: !6201, file: !624, discriminator: 8)
!6330 = distinct !DISubprogram(name: "blend_divide_10bit", scope: !624, file: !624, line: 346, type: !1531, isLocal: true, isDefinition: true, scopeLine: 346, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!6331 = !DILocation(line: 229, column: 99, scope: !5463, inlinedAt: !6332)
!6332 = distinct !DILocation(line: 346, column: 571, scope: !6333)
!6333 = !DILexicalBlockFile(scope: !6334, file: !624, discriminator: 7)
!6334 = distinct !DILexicalBlock(scope: !6335, file: !624, line: 346, column: 544)
!6335 = distinct !DILexicalBlock(scope: !6336, file: !624, line: 346, column: 516)
!6336 = distinct !DILexicalBlock(scope: !6337, file: !624, line: 346, column: 516)
!6337 = distinct !DILexicalBlock(scope: !6338, file: !624, line: 346, column: 514)
!6338 = distinct !DILexicalBlock(scope: !6339, file: !624, line: 346, column: 485)
!6339 = distinct !DILexicalBlock(scope: !6330, file: !624, line: 346, column: 485)
!6340 = !DILocation(line: 229, column: 106, scope: !5463, inlinedAt: !6332)
!6341 = !DILocalVariable(name: "_top", arg: 1, scope: !6330, file: !624, line: 346, type: !900)
!6342 = !DILocation(line: 346, column: 47, scope: !6330)
!6343 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !6330, file: !624, line: 346, type: !902)
!6344 = !DILocation(line: 346, column: 63, scope: !6330)
!6345 = !DILocalVariable(name: "_bottom", arg: 3, scope: !6330, file: !624, line: 346, type: !900)
!6346 = !DILocation(line: 346, column: 92, scope: !6330)
!6347 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !6330, file: !624, line: 346, type: !902)
!6348 = !DILocation(line: 346, column: 111, scope: !6330)
!6349 = !DILocalVariable(name: "_dst", arg: 5, scope: !6330, file: !624, line: 346, type: !329)
!6350 = !DILocation(line: 346, column: 137, scope: !6330)
!6351 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !6330, file: !624, line: 346, type: !902)
!6352 = !DILocation(line: 346, column: 153, scope: !6330)
!6353 = !DILocalVariable(name: "width", arg: 7, scope: !6330, file: !624, line: 346, type: !902)
!6354 = !DILocation(line: 346, column: 177, scope: !6330)
!6355 = !DILocalVariable(name: "height", arg: 8, scope: !6330, file: !624, line: 346, type: !902)
!6356 = !DILocation(line: 346, column: 194, scope: !6330)
!6357 = !DILocalVariable(name: "param", arg: 9, scope: !6330, file: !624, line: 346, type: !884)
!6358 = !DILocation(line: 346, column: 216, scope: !6330)
!6359 = !DILocalVariable(name: "values", arg: 10, scope: !6330, file: !624, line: 346, type: !544)
!6360 = !DILocation(line: 346, column: 231, scope: !6330)
!6361 = !DILocalVariable(name: "starty", arg: 11, scope: !6330, file: !624, line: 346, type: !238)
!6362 = !DILocation(line: 346, column: 243, scope: !6330)
!6363 = !DILocalVariable(name: "top", scope: !6330, file: !624, line: 346, type: !839)
!6364 = !DILocation(line: 346, column: 269, scope: !6330)
!6365 = !DILocation(line: 346, column: 292, scope: !6330)
!6366 = !DILocation(line: 346, column: 275, scope: !6330)
!6367 = !DILocalVariable(name: "bottom", scope: !6330, file: !624, line: 346, type: !839)
!6368 = !DILocation(line: 346, column: 314, scope: !6330)
!6369 = !DILocation(line: 346, column: 340, scope: !6330)
!6370 = !DILocation(line: 346, column: 323, scope: !6330)
!6371 = !DILocalVariable(name: "dst", scope: !6330, file: !624, line: 346, type: !843)
!6372 = !DILocation(line: 346, column: 359, scope: !6330)
!6373 = !DILocation(line: 346, column: 376, scope: !6330)
!6374 = !DILocation(line: 346, column: 365, scope: !6330)
!6375 = !DILocalVariable(name: "opacity", scope: !6330, file: !624, line: 346, type: !248)
!6376 = !DILocation(line: 346, column: 389, scope: !6330)
!6377 = !DILocation(line: 346, column: 399, scope: !6330)
!6378 = !DILocation(line: 346, column: 406, scope: !6330)
!6379 = !DILocalVariable(name: "i", scope: !6330, file: !624, line: 346, type: !238)
!6380 = !DILocation(line: 346, column: 419, scope: !6330)
!6381 = !DILocalVariable(name: "j", scope: !6330, file: !624, line: 346, type: !238)
!6382 = !DILocation(line: 346, column: 422, scope: !6330)
!6383 = !DILocation(line: 346, column: 438, scope: !6330)
!6384 = !DILocation(line: 346, column: 457, scope: !6330)
!6385 = !DILocation(line: 346, column: 479, scope: !6330)
!6386 = !DILocation(line: 346, column: 492, scope: !6339)
!6387 = !DILocation(line: 346, column: 490, scope: !6339)
!6388 = !DILocation(line: 346, column: 497, scope: !6389)
!6389 = !DILexicalBlockFile(scope: !6338, file: !624, discriminator: 1)
!6390 = !DILocation(line: 346, column: 501, scope: !6389)
!6391 = !DILocation(line: 346, column: 499, scope: !6389)
!6392 = !DILocation(line: 346, column: 485, scope: !6389)
!6393 = !DILocation(line: 346, column: 523, scope: !6394)
!6394 = !DILexicalBlockFile(scope: !6336, file: !624, discriminator: 2)
!6395 = !DILocation(line: 346, column: 521, scope: !6394)
!6396 = !DILocation(line: 346, column: 528, scope: !6397)
!6397 = !DILexicalBlockFile(scope: !6335, file: !624, discriminator: 3)
!6398 = !DILocation(line: 346, column: 532, scope: !6397)
!6399 = !DILocation(line: 346, column: 530, scope: !6397)
!6400 = !DILocation(line: 346, column: 516, scope: !6397)
!6401 = !DILocation(line: 346, column: 559, scope: !6402)
!6402 = !DILexicalBlockFile(scope: !6334, file: !624, discriminator: 4)
!6403 = !DILocation(line: 346, column: 555, scope: !6402)
!6404 = !DILocation(line: 346, column: 595, scope: !6402)
!6405 = !DILocation(line: 346, column: 588, scope: !6402)
!6406 = !DILocation(line: 346, column: 598, scope: !6402)
!6407 = !DILocation(line: 346, column: 588, scope: !6408)
!6408 = !DILexicalBlockFile(scope: !6334, file: !624, discriminator: 5)
!6409 = !DILocation(line: 346, column: 623, scope: !6410)
!6410 = !DILexicalBlockFile(scope: !6334, file: !624, discriminator: 6)
!6411 = !DILocation(line: 346, column: 619, scope: !6410)
!6412 = !DILocation(line: 346, column: 617, scope: !6410)
!6413 = !DILocation(line: 346, column: 635, scope: !6410)
!6414 = !DILocation(line: 346, column: 628, scope: !6410)
!6415 = !DILocation(line: 346, column: 626, scope: !6410)
!6416 = !DILocation(line: 346, column: 588, scope: !6410)
!6417 = !DILocation(line: 346, column: 588, scope: !6333)
!6418 = !DILocation(line: 346, column: 571, scope: !6333)
!6419 = !DILocation(line: 231, column: 9, scope: !5547, inlinedAt: !6332)
!6420 = !DILocation(line: 231, column: 19, scope: !5547, inlinedAt: !6332)
!6421 = !DILocation(line: 231, column: 17, scope: !5547, inlinedAt: !6332)
!6422 = !DILocation(line: 231, column: 22, scope: !5547, inlinedAt: !6332)
!6423 = !DILocation(line: 231, column: 13, scope: !5547, inlinedAt: !6332)
!6424 = !DILocation(line: 231, column: 11, scope: !5547, inlinedAt: !6332)
!6425 = !DILocation(line: 231, column: 9, scope: !5463, inlinedAt: !6332)
!6426 = !DILocation(line: 231, column: 37, scope: !5555, inlinedAt: !6332)
!6427 = !DILocation(line: 231, column: 36, scope: !5555, inlinedAt: !6332)
!6428 = !DILocation(line: 231, column: 40, scope: !5555, inlinedAt: !6332)
!6429 = !DILocation(line: 231, column: 53, scope: !5555, inlinedAt: !6332)
!6430 = !DILocation(line: 231, column: 51, scope: !5555, inlinedAt: !6332)
!6431 = !DILocation(line: 231, column: 56, scope: !5555, inlinedAt: !6332)
!6432 = !DILocation(line: 231, column: 46, scope: !5555, inlinedAt: !6332)
!6433 = !DILocation(line: 231, column: 28, scope: !5555, inlinedAt: !6332)
!6434 = !DILocation(line: 232, column: 17, scope: !5547, inlinedAt: !6332)
!6435 = !DILocation(line: 232, column: 10, scope: !5547, inlinedAt: !6332)
!6436 = !DILocation(line: 233, column: 1, scope: !5463, inlinedAt: !6332)
!6437 = !DILocation(line: 346, column: 650, scope: !6333)
!6438 = !DILocation(line: 346, column: 646, scope: !6333)
!6439 = !DILocation(line: 346, column: 644, scope: !6333)
!6440 = !DILocation(line: 346, column: 564, scope: !6333)
!6441 = !DILocation(line: 346, column: 656, scope: !6333)
!6442 = !DILocation(line: 346, column: 654, scope: !6333)
!6443 = !DILocation(line: 346, column: 562, scope: !6333)
!6444 = !DILocation(line: 346, column: 555, scope: !6333)
!6445 = !DILocation(line: 346, column: 550, scope: !6333)
!6446 = !DILocation(line: 346, column: 546, scope: !6333)
!6447 = !DILocation(line: 346, column: 553, scope: !6333)
!6448 = !DILocation(line: 346, column: 665, scope: !6333)
!6449 = !DILocation(line: 346, column: 540, scope: !6450)
!6450 = !DILexicalBlockFile(scope: !6335, file: !624, discriminator: 8)
!6451 = !DILocation(line: 346, column: 516, scope: !6450)
!6452 = distinct !{!6452, !6453}
!6453 = !DILocation(line: 346, column: 516, scope: !6337)
!6454 = !DILocation(line: 346, column: 674, scope: !6455)
!6455 = !DILexicalBlockFile(scope: !6337, file: !624, discriminator: 9)
!6456 = !DILocation(line: 346, column: 671, scope: !6455)
!6457 = !DILocation(line: 346, column: 695, scope: !6455)
!6458 = !DILocation(line: 346, column: 692, scope: !6455)
!6459 = !DILocation(line: 346, column: 719, scope: !6455)
!6460 = !DILocation(line: 346, column: 716, scope: !6455)
!6461 = !DILocation(line: 346, column: 736, scope: !6455)
!6462 = !DILocation(line: 346, column: 510, scope: !6463)
!6463 = !DILexicalBlockFile(scope: !6338, file: !624, discriminator: 10)
!6464 = !DILocation(line: 346, column: 485, scope: !6463)
!6465 = distinct !{!6465, !6466}
!6466 = !DILocation(line: 346, column: 485, scope: !6330)
!6467 = !DILocation(line: 346, column: 738, scope: !6468)
!6468 = !DILexicalBlockFile(scope: !6330, file: !624, discriminator: 11)
!6469 = distinct !DISubprogram(name: "blend_dodge_10bit", scope: !624, file: !624, line: 347, type: !1531, isLocal: true, isDefinition: true, scopeLine: 347, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!6470 = !DILocalVariable(name: "_top", arg: 1, scope: !6469, file: !624, line: 347, type: !900)
!6471 = !DILocation(line: 347, column: 46, scope: !6469)
!6472 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !6469, file: !624, line: 347, type: !902)
!6473 = !DILocation(line: 347, column: 62, scope: !6469)
!6474 = !DILocalVariable(name: "_bottom", arg: 3, scope: !6469, file: !624, line: 347, type: !900)
!6475 = !DILocation(line: 347, column: 91, scope: !6469)
!6476 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !6469, file: !624, line: 347, type: !902)
!6477 = !DILocation(line: 347, column: 110, scope: !6469)
!6478 = !DILocalVariable(name: "_dst", arg: 5, scope: !6469, file: !624, line: 347, type: !329)
!6479 = !DILocation(line: 347, column: 136, scope: !6469)
!6480 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !6469, file: !624, line: 347, type: !902)
!6481 = !DILocation(line: 347, column: 152, scope: !6469)
!6482 = !DILocalVariable(name: "width", arg: 7, scope: !6469, file: !624, line: 347, type: !902)
!6483 = !DILocation(line: 347, column: 176, scope: !6469)
!6484 = !DILocalVariable(name: "height", arg: 8, scope: !6469, file: !624, line: 347, type: !902)
!6485 = !DILocation(line: 347, column: 193, scope: !6469)
!6486 = !DILocalVariable(name: "param", arg: 9, scope: !6469, file: !624, line: 347, type: !884)
!6487 = !DILocation(line: 347, column: 215, scope: !6469)
!6488 = !DILocalVariable(name: "values", arg: 10, scope: !6469, file: !624, line: 347, type: !544)
!6489 = !DILocation(line: 347, column: 230, scope: !6469)
!6490 = !DILocalVariable(name: "starty", arg: 11, scope: !6469, file: !624, line: 347, type: !238)
!6491 = !DILocation(line: 347, column: 242, scope: !6469)
!6492 = !DILocalVariable(name: "top", scope: !6469, file: !624, line: 347, type: !839)
!6493 = !DILocation(line: 347, column: 268, scope: !6469)
!6494 = !DILocation(line: 347, column: 291, scope: !6469)
!6495 = !DILocation(line: 347, column: 274, scope: !6469)
!6496 = !DILocalVariable(name: "bottom", scope: !6469, file: !624, line: 347, type: !839)
!6497 = !DILocation(line: 347, column: 313, scope: !6469)
!6498 = !DILocation(line: 347, column: 339, scope: !6469)
!6499 = !DILocation(line: 347, column: 322, scope: !6469)
!6500 = !DILocalVariable(name: "dst", scope: !6469, file: !624, line: 347, type: !843)
!6501 = !DILocation(line: 347, column: 358, scope: !6469)
!6502 = !DILocation(line: 347, column: 375, scope: !6469)
!6503 = !DILocation(line: 347, column: 364, scope: !6469)
!6504 = !DILocalVariable(name: "opacity", scope: !6469, file: !624, line: 347, type: !248)
!6505 = !DILocation(line: 347, column: 388, scope: !6469)
!6506 = !DILocation(line: 347, column: 398, scope: !6469)
!6507 = !DILocation(line: 347, column: 405, scope: !6469)
!6508 = !DILocalVariable(name: "i", scope: !6469, file: !624, line: 347, type: !238)
!6509 = !DILocation(line: 347, column: 418, scope: !6469)
!6510 = !DILocalVariable(name: "j", scope: !6469, file: !624, line: 347, type: !238)
!6511 = !DILocation(line: 347, column: 421, scope: !6469)
!6512 = !DILocation(line: 347, column: 437, scope: !6469)
!6513 = !DILocation(line: 347, column: 456, scope: !6469)
!6514 = !DILocation(line: 347, column: 478, scope: !6469)
!6515 = !DILocation(line: 347, column: 491, scope: !6516)
!6516 = distinct !DILexicalBlock(scope: !6469, file: !624, line: 347, column: 484)
!6517 = !DILocation(line: 347, column: 489, scope: !6516)
!6518 = !DILocation(line: 347, column: 496, scope: !6519)
!6519 = !DILexicalBlockFile(scope: !6520, file: !624, discriminator: 1)
!6520 = distinct !DILexicalBlock(scope: !6516, file: !624, line: 347, column: 484)
!6521 = !DILocation(line: 347, column: 500, scope: !6519)
!6522 = !DILocation(line: 347, column: 498, scope: !6519)
!6523 = !DILocation(line: 347, column: 484, scope: !6519)
!6524 = !DILocation(line: 347, column: 522, scope: !6525)
!6525 = !DILexicalBlockFile(scope: !6526, file: !624, discriminator: 2)
!6526 = distinct !DILexicalBlock(scope: !6527, file: !624, line: 347, column: 515)
!6527 = distinct !DILexicalBlock(scope: !6520, file: !624, line: 347, column: 513)
!6528 = !DILocation(line: 347, column: 520, scope: !6525)
!6529 = !DILocation(line: 347, column: 527, scope: !6530)
!6530 = !DILexicalBlockFile(scope: !6531, file: !624, discriminator: 3)
!6531 = distinct !DILexicalBlock(scope: !6526, file: !624, line: 347, column: 515)
!6532 = !DILocation(line: 347, column: 531, scope: !6530)
!6533 = !DILocation(line: 347, column: 529, scope: !6530)
!6534 = !DILocation(line: 347, column: 515, scope: !6530)
!6535 = !DILocation(line: 347, column: 558, scope: !6536)
!6536 = !DILexicalBlockFile(scope: !6537, file: !624, discriminator: 4)
!6537 = distinct !DILexicalBlock(scope: !6531, file: !624, line: 347, column: 543)
!6538 = !DILocation(line: 347, column: 554, scope: !6536)
!6539 = !DILocation(line: 347, column: 572, scope: !6536)
!6540 = !DILocation(line: 347, column: 568, scope: !6536)
!6541 = !DILocation(line: 347, column: 567, scope: !6536)
!6542 = !DILocation(line: 347, column: 576, scope: !6536)
!6543 = !DILocation(line: 347, column: 566, scope: !6536)
!6544 = !DILocation(line: 347, column: 592, scope: !6545)
!6545 = !DILexicalBlockFile(scope: !6537, file: !624, discriminator: 5)
!6546 = !DILocation(line: 347, column: 588, scope: !6545)
!6547 = !DILocation(line: 347, column: 587, scope: !6545)
!6548 = !DILocation(line: 347, column: 566, scope: !6545)
!6549 = !DILocation(line: 347, column: 619, scope: !6550)
!6550 = !DILexicalBlockFile(scope: !6537, file: !624, discriminator: 6)
!6551 = !DILocation(line: 347, column: 612, scope: !6550)
!6552 = !DILocation(line: 347, column: 611, scope: !6550)
!6553 = !DILocation(line: 347, column: 623, scope: !6550)
!6554 = !DILocation(line: 347, column: 645, scope: !6550)
!6555 = !DILocation(line: 347, column: 641, scope: !6550)
!6556 = !DILocation(line: 347, column: 640, scope: !6550)
!6557 = !DILocation(line: 347, column: 638, scope: !6550)
!6558 = !DILocation(line: 347, column: 630, scope: !6550)
!6559 = !DILocation(line: 347, column: 606, scope: !6550)
!6560 = !DILocation(line: 347, column: 599, scope: !6550)
!6561 = !DILocation(line: 347, column: 665, scope: !6562)
!6562 = !DILexicalBlockFile(scope: !6537, file: !624, discriminator: 7)
!6563 = !DILocation(line: 347, column: 658, scope: !6562)
!6564 = !DILocation(line: 347, column: 657, scope: !6562)
!6565 = !DILocation(line: 347, column: 669, scope: !6562)
!6566 = !DILocation(line: 347, column: 691, scope: !6562)
!6567 = !DILocation(line: 347, column: 687, scope: !6562)
!6568 = !DILocation(line: 347, column: 686, scope: !6562)
!6569 = !DILocation(line: 347, column: 684, scope: !6562)
!6570 = !DILocation(line: 347, column: 676, scope: !6562)
!6571 = !DILocation(line: 347, column: 599, scope: !6562)
!6572 = !DILocation(line: 347, column: 599, scope: !6573)
!6573 = !DILexicalBlockFile(scope: !6537, file: !624, discriminator: 8)
!6574 = !DILocation(line: 347, column: 599, scope: !6575)
!6575 = !DILexicalBlockFile(scope: !6537, file: !624, discriminator: 9)
!6576 = !DILocation(line: 347, column: 566, scope: !6575)
!6577 = !DILocation(line: 347, column: 566, scope: !6578)
!6578 = !DILexicalBlockFile(scope: !6537, file: !624, discriminator: 10)
!6579 = !DILocation(line: 347, column: 716, scope: !6578)
!6580 = !DILocation(line: 347, column: 712, scope: !6578)
!6581 = !DILocation(line: 347, column: 710, scope: !6578)
!6582 = !DILocation(line: 347, column: 563, scope: !6578)
!6583 = !DILocation(line: 347, column: 722, scope: !6578)
!6584 = !DILocation(line: 347, column: 720, scope: !6578)
!6585 = !DILocation(line: 347, column: 561, scope: !6578)
!6586 = !DILocation(line: 347, column: 554, scope: !6578)
!6587 = !DILocation(line: 347, column: 549, scope: !6578)
!6588 = !DILocation(line: 347, column: 545, scope: !6578)
!6589 = !DILocation(line: 347, column: 552, scope: !6578)
!6590 = !DILocation(line: 347, column: 731, scope: !6578)
!6591 = !DILocation(line: 347, column: 539, scope: !6592)
!6592 = !DILexicalBlockFile(scope: !6531, file: !624, discriminator: 11)
!6593 = !DILocation(line: 347, column: 515, scope: !6592)
!6594 = distinct !{!6594, !6595}
!6595 = !DILocation(line: 347, column: 515, scope: !6527)
!6596 = !DILocation(line: 347, column: 740, scope: !6597)
!6597 = !DILexicalBlockFile(scope: !6527, file: !624, discriminator: 12)
!6598 = !DILocation(line: 347, column: 737, scope: !6597)
!6599 = !DILocation(line: 347, column: 761, scope: !6597)
!6600 = !DILocation(line: 347, column: 758, scope: !6597)
!6601 = !DILocation(line: 347, column: 785, scope: !6597)
!6602 = !DILocation(line: 347, column: 782, scope: !6597)
!6603 = !DILocation(line: 347, column: 802, scope: !6597)
!6604 = !DILocation(line: 347, column: 509, scope: !6605)
!6605 = !DILexicalBlockFile(scope: !6520, file: !624, discriminator: 13)
!6606 = !DILocation(line: 347, column: 484, scope: !6605)
!6607 = distinct !{!6607, !6608}
!6608 = !DILocation(line: 347, column: 484, scope: !6469)
!6609 = !DILocation(line: 347, column: 804, scope: !6610)
!6610 = !DILexicalBlockFile(scope: !6469, file: !624, discriminator: 14)
!6611 = distinct !DISubprogram(name: "blend_exclusion_10bit", scope: !624, file: !624, line: 350, type: !1531, isLocal: true, isDefinition: true, scopeLine: 350, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!6612 = !DILocalVariable(name: "_top", arg: 1, scope: !6611, file: !624, line: 350, type: !900)
!6613 = !DILocation(line: 350, column: 50, scope: !6611)
!6614 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !6611, file: !624, line: 350, type: !902)
!6615 = !DILocation(line: 350, column: 66, scope: !6611)
!6616 = !DILocalVariable(name: "_bottom", arg: 3, scope: !6611, file: !624, line: 350, type: !900)
!6617 = !DILocation(line: 350, column: 95, scope: !6611)
!6618 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !6611, file: !624, line: 350, type: !902)
!6619 = !DILocation(line: 350, column: 114, scope: !6611)
!6620 = !DILocalVariable(name: "_dst", arg: 5, scope: !6611, file: !624, line: 350, type: !329)
!6621 = !DILocation(line: 350, column: 140, scope: !6611)
!6622 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !6611, file: !624, line: 350, type: !902)
!6623 = !DILocation(line: 350, column: 156, scope: !6611)
!6624 = !DILocalVariable(name: "width", arg: 7, scope: !6611, file: !624, line: 350, type: !902)
!6625 = !DILocation(line: 350, column: 180, scope: !6611)
!6626 = !DILocalVariable(name: "height", arg: 8, scope: !6611, file: !624, line: 350, type: !902)
!6627 = !DILocation(line: 350, column: 197, scope: !6611)
!6628 = !DILocalVariable(name: "param", arg: 9, scope: !6611, file: !624, line: 350, type: !884)
!6629 = !DILocation(line: 350, column: 219, scope: !6611)
!6630 = !DILocalVariable(name: "values", arg: 10, scope: !6611, file: !624, line: 350, type: !544)
!6631 = !DILocation(line: 350, column: 234, scope: !6611)
!6632 = !DILocalVariable(name: "starty", arg: 11, scope: !6611, file: !624, line: 350, type: !238)
!6633 = !DILocation(line: 350, column: 246, scope: !6611)
!6634 = !DILocalVariable(name: "top", scope: !6611, file: !624, line: 350, type: !839)
!6635 = !DILocation(line: 350, column: 272, scope: !6611)
!6636 = !DILocation(line: 350, column: 295, scope: !6611)
!6637 = !DILocation(line: 350, column: 278, scope: !6611)
!6638 = !DILocalVariable(name: "bottom", scope: !6611, file: !624, line: 350, type: !839)
!6639 = !DILocation(line: 350, column: 317, scope: !6611)
!6640 = !DILocation(line: 350, column: 343, scope: !6611)
!6641 = !DILocation(line: 350, column: 326, scope: !6611)
!6642 = !DILocalVariable(name: "dst", scope: !6611, file: !624, line: 350, type: !843)
!6643 = !DILocation(line: 350, column: 362, scope: !6611)
!6644 = !DILocation(line: 350, column: 379, scope: !6611)
!6645 = !DILocation(line: 350, column: 368, scope: !6611)
!6646 = !DILocalVariable(name: "opacity", scope: !6611, file: !624, line: 350, type: !248)
!6647 = !DILocation(line: 350, column: 392, scope: !6611)
!6648 = !DILocation(line: 350, column: 402, scope: !6611)
!6649 = !DILocation(line: 350, column: 409, scope: !6611)
!6650 = !DILocalVariable(name: "i", scope: !6611, file: !624, line: 350, type: !238)
!6651 = !DILocation(line: 350, column: 422, scope: !6611)
!6652 = !DILocalVariable(name: "j", scope: !6611, file: !624, line: 350, type: !238)
!6653 = !DILocation(line: 350, column: 425, scope: !6611)
!6654 = !DILocation(line: 350, column: 441, scope: !6611)
!6655 = !DILocation(line: 350, column: 460, scope: !6611)
!6656 = !DILocation(line: 350, column: 482, scope: !6611)
!6657 = !DILocation(line: 350, column: 495, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6611, file: !624, line: 350, column: 488)
!6659 = !DILocation(line: 350, column: 493, scope: !6658)
!6660 = !DILocation(line: 350, column: 500, scope: !6661)
!6661 = !DILexicalBlockFile(scope: !6662, file: !624, discriminator: 1)
!6662 = distinct !DILexicalBlock(scope: !6658, file: !624, line: 350, column: 488)
!6663 = !DILocation(line: 350, column: 504, scope: !6661)
!6664 = !DILocation(line: 350, column: 502, scope: !6661)
!6665 = !DILocation(line: 350, column: 488, scope: !6661)
!6666 = !DILocation(line: 350, column: 526, scope: !6667)
!6667 = !DILexicalBlockFile(scope: !6668, file: !624, discriminator: 2)
!6668 = distinct !DILexicalBlock(scope: !6669, file: !624, line: 350, column: 519)
!6669 = distinct !DILexicalBlock(scope: !6662, file: !624, line: 350, column: 517)
!6670 = !DILocation(line: 350, column: 524, scope: !6667)
!6671 = !DILocation(line: 350, column: 531, scope: !6672)
!6672 = !DILexicalBlockFile(scope: !6673, file: !624, discriminator: 3)
!6673 = distinct !DILexicalBlock(scope: !6668, file: !624, line: 350, column: 519)
!6674 = !DILocation(line: 350, column: 535, scope: !6672)
!6675 = !DILocation(line: 350, column: 533, scope: !6672)
!6676 = !DILocation(line: 350, column: 519, scope: !6672)
!6677 = !DILocation(line: 350, column: 562, scope: !6678)
!6678 = !DILexicalBlockFile(scope: !6679, file: !624, discriminator: 4)
!6679 = distinct !DILexicalBlock(scope: !6673, file: !624, line: 350, column: 547)
!6680 = !DILocation(line: 350, column: 558, scope: !6678)
!6681 = !DILocation(line: 350, column: 573, scope: !6678)
!6682 = !DILocation(line: 350, column: 569, scope: !6678)
!6683 = !DILocation(line: 350, column: 585, scope: !6678)
!6684 = !DILocation(line: 350, column: 578, scope: !6678)
!6685 = !DILocation(line: 350, column: 576, scope: !6678)
!6686 = !DILocation(line: 350, column: 598, scope: !6678)
!6687 = !DILocation(line: 350, column: 594, scope: !6678)
!6688 = !DILocation(line: 350, column: 592, scope: !6678)
!6689 = !DILocation(line: 350, column: 610, scope: !6678)
!6690 = !DILocation(line: 350, column: 603, scope: !6678)
!6691 = !DILocation(line: 350, column: 601, scope: !6678)
!6692 = !DILocation(line: 350, column: 613, scope: !6678)
!6693 = !DILocation(line: 350, column: 588, scope: !6678)
!6694 = !DILocation(line: 350, column: 627, scope: !6678)
!6695 = !DILocation(line: 350, column: 623, scope: !6678)
!6696 = !DILocation(line: 350, column: 621, scope: !6678)
!6697 = !DILocation(line: 350, column: 567, scope: !6678)
!6698 = !DILocation(line: 350, column: 633, scope: !6678)
!6699 = !DILocation(line: 350, column: 631, scope: !6678)
!6700 = !DILocation(line: 350, column: 565, scope: !6678)
!6701 = !DILocation(line: 350, column: 553, scope: !6678)
!6702 = !DILocation(line: 350, column: 549, scope: !6678)
!6703 = !DILocation(line: 350, column: 556, scope: !6678)
!6704 = !DILocation(line: 350, column: 642, scope: !6678)
!6705 = !DILocation(line: 350, column: 543, scope: !6706)
!6706 = !DILexicalBlockFile(scope: !6673, file: !624, discriminator: 5)
!6707 = !DILocation(line: 350, column: 519, scope: !6706)
!6708 = distinct !{!6708, !6709}
!6709 = !DILocation(line: 350, column: 519, scope: !6669)
!6710 = !DILocation(line: 350, column: 651, scope: !6711)
!6711 = !DILexicalBlockFile(scope: !6669, file: !624, discriminator: 6)
!6712 = !DILocation(line: 350, column: 648, scope: !6711)
!6713 = !DILocation(line: 350, column: 672, scope: !6711)
!6714 = !DILocation(line: 350, column: 669, scope: !6711)
!6715 = !DILocation(line: 350, column: 696, scope: !6711)
!6716 = !DILocation(line: 350, column: 693, scope: !6711)
!6717 = !DILocation(line: 350, column: 713, scope: !6711)
!6718 = !DILocation(line: 350, column: 513, scope: !6719)
!6719 = !DILexicalBlockFile(scope: !6662, file: !624, discriminator: 7)
!6720 = !DILocation(line: 350, column: 488, scope: !6719)
!6721 = distinct !{!6721, !6722}
!6722 = !DILocation(line: 350, column: 488, scope: !6611)
!6723 = !DILocation(line: 350, column: 715, scope: !6724)
!6724 = !DILexicalBlockFile(scope: !6611, file: !624, discriminator: 8)
!6725 = distinct !DISubprogram(name: "blend_extremity_10bit", scope: !624, file: !624, line: 335, type: !1531, isLocal: true, isDefinition: true, scopeLine: 335, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!6726 = !DILocalVariable(name: "_top", arg: 1, scope: !6725, file: !624, line: 335, type: !900)
!6727 = !DILocation(line: 335, column: 50, scope: !6725)
!6728 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !6725, file: !624, line: 335, type: !902)
!6729 = !DILocation(line: 335, column: 66, scope: !6725)
!6730 = !DILocalVariable(name: "_bottom", arg: 3, scope: !6725, file: !624, line: 335, type: !900)
!6731 = !DILocation(line: 335, column: 95, scope: !6725)
!6732 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !6725, file: !624, line: 335, type: !902)
!6733 = !DILocation(line: 335, column: 114, scope: !6725)
!6734 = !DILocalVariable(name: "_dst", arg: 5, scope: !6725, file: !624, line: 335, type: !329)
!6735 = !DILocation(line: 335, column: 140, scope: !6725)
!6736 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !6725, file: !624, line: 335, type: !902)
!6737 = !DILocation(line: 335, column: 156, scope: !6725)
!6738 = !DILocalVariable(name: "width", arg: 7, scope: !6725, file: !624, line: 335, type: !902)
!6739 = !DILocation(line: 335, column: 180, scope: !6725)
!6740 = !DILocalVariable(name: "height", arg: 8, scope: !6725, file: !624, line: 335, type: !902)
!6741 = !DILocation(line: 335, column: 197, scope: !6725)
!6742 = !DILocalVariable(name: "param", arg: 9, scope: !6725, file: !624, line: 335, type: !884)
!6743 = !DILocation(line: 335, column: 219, scope: !6725)
!6744 = !DILocalVariable(name: "values", arg: 10, scope: !6725, file: !624, line: 335, type: !544)
!6745 = !DILocation(line: 335, column: 234, scope: !6725)
!6746 = !DILocalVariable(name: "starty", arg: 11, scope: !6725, file: !624, line: 335, type: !238)
!6747 = !DILocation(line: 335, column: 246, scope: !6725)
!6748 = !DILocalVariable(name: "top", scope: !6725, file: !624, line: 335, type: !839)
!6749 = !DILocation(line: 335, column: 272, scope: !6725)
!6750 = !DILocation(line: 335, column: 295, scope: !6725)
!6751 = !DILocation(line: 335, column: 278, scope: !6725)
!6752 = !DILocalVariable(name: "bottom", scope: !6725, file: !624, line: 335, type: !839)
!6753 = !DILocation(line: 335, column: 317, scope: !6725)
!6754 = !DILocation(line: 335, column: 343, scope: !6725)
!6755 = !DILocation(line: 335, column: 326, scope: !6725)
!6756 = !DILocalVariable(name: "dst", scope: !6725, file: !624, line: 335, type: !843)
!6757 = !DILocation(line: 335, column: 362, scope: !6725)
!6758 = !DILocation(line: 335, column: 379, scope: !6725)
!6759 = !DILocation(line: 335, column: 368, scope: !6725)
!6760 = !DILocalVariable(name: "opacity", scope: !6725, file: !624, line: 335, type: !248)
!6761 = !DILocation(line: 335, column: 392, scope: !6725)
!6762 = !DILocation(line: 335, column: 402, scope: !6725)
!6763 = !DILocation(line: 335, column: 409, scope: !6725)
!6764 = !DILocalVariable(name: "i", scope: !6725, file: !624, line: 335, type: !238)
!6765 = !DILocation(line: 335, column: 422, scope: !6725)
!6766 = !DILocalVariable(name: "j", scope: !6725, file: !624, line: 335, type: !238)
!6767 = !DILocation(line: 335, column: 425, scope: !6725)
!6768 = !DILocation(line: 335, column: 441, scope: !6725)
!6769 = !DILocation(line: 335, column: 460, scope: !6725)
!6770 = !DILocation(line: 335, column: 482, scope: !6725)
!6771 = !DILocation(line: 335, column: 495, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6725, file: !624, line: 335, column: 488)
!6773 = !DILocation(line: 335, column: 493, scope: !6772)
!6774 = !DILocation(line: 335, column: 500, scope: !6775)
!6775 = !DILexicalBlockFile(scope: !6776, file: !624, discriminator: 1)
!6776 = distinct !DILexicalBlock(scope: !6772, file: !624, line: 335, column: 488)
!6777 = !DILocation(line: 335, column: 504, scope: !6775)
!6778 = !DILocation(line: 335, column: 502, scope: !6775)
!6779 = !DILocation(line: 335, column: 488, scope: !6775)
!6780 = !DILocation(line: 335, column: 526, scope: !6781)
!6781 = !DILexicalBlockFile(scope: !6782, file: !624, discriminator: 2)
!6782 = distinct !DILexicalBlock(scope: !6783, file: !624, line: 335, column: 519)
!6783 = distinct !DILexicalBlock(scope: !6776, file: !624, line: 335, column: 517)
!6784 = !DILocation(line: 335, column: 524, scope: !6781)
!6785 = !DILocation(line: 335, column: 531, scope: !6786)
!6786 = !DILexicalBlockFile(scope: !6787, file: !624, discriminator: 3)
!6787 = distinct !DILexicalBlock(scope: !6782, file: !624, line: 335, column: 519)
!6788 = !DILocation(line: 335, column: 535, scope: !6786)
!6789 = !DILocation(line: 335, column: 533, scope: !6786)
!6790 = !DILocation(line: 335, column: 519, scope: !6786)
!6791 = !DILocation(line: 335, column: 562, scope: !6792)
!6792 = !DILexicalBlockFile(scope: !6793, file: !624, discriminator: 4)
!6793 = distinct !DILexicalBlock(scope: !6787, file: !624, line: 335, column: 547)
!6794 = !DILocation(line: 335, column: 558, scope: !6792)
!6795 = !DILocation(line: 335, column: 582, scope: !6792)
!6796 = !DILocation(line: 335, column: 578, scope: !6792)
!6797 = !DILocation(line: 335, column: 576, scope: !6792)
!6798 = !DILocation(line: 335, column: 594, scope: !6792)
!6799 = !DILocation(line: 335, column: 587, scope: !6792)
!6800 = !DILocation(line: 335, column: 585, scope: !6792)
!6801 = !DILocation(line: 335, column: 598, scope: !6792)
!6802 = !DILocation(line: 335, column: 570, scope: !6792)
!6803 = !DILocation(line: 335, column: 617, scope: !6804)
!6804 = !DILexicalBlockFile(scope: !6793, file: !624, discriminator: 5)
!6805 = !DILocation(line: 335, column: 613, scope: !6804)
!6806 = !DILocation(line: 335, column: 611, scope: !6804)
!6807 = !DILocation(line: 335, column: 629, scope: !6804)
!6808 = !DILocation(line: 335, column: 622, scope: !6804)
!6809 = !DILocation(line: 335, column: 620, scope: !6804)
!6810 = !DILocation(line: 335, column: 570, scope: !6804)
!6811 = !DILocation(line: 335, column: 649, scope: !6812)
!6812 = !DILexicalBlockFile(scope: !6793, file: !624, discriminator: 6)
!6813 = !DILocation(line: 335, column: 645, scope: !6812)
!6814 = !DILocation(line: 335, column: 643, scope: !6812)
!6815 = !DILocation(line: 335, column: 661, scope: !6812)
!6816 = !DILocation(line: 335, column: 654, scope: !6812)
!6817 = !DILocation(line: 335, column: 652, scope: !6812)
!6818 = !DILocation(line: 335, column: 636, scope: !6812)
!6819 = !DILocation(line: 335, column: 570, scope: !6812)
!6820 = !DILocation(line: 335, column: 570, scope: !6821)
!6821 = !DILexicalBlockFile(scope: !6793, file: !624, discriminator: 7)
!6822 = !DILocation(line: 335, column: 674, scope: !6821)
!6823 = !DILocation(line: 335, column: 670, scope: !6821)
!6824 = !DILocation(line: 335, column: 668, scope: !6821)
!6825 = !DILocation(line: 335, column: 567, scope: !6821)
!6826 = !DILocation(line: 335, column: 680, scope: !6821)
!6827 = !DILocation(line: 335, column: 678, scope: !6821)
!6828 = !DILocation(line: 335, column: 565, scope: !6821)
!6829 = !DILocation(line: 335, column: 558, scope: !6821)
!6830 = !DILocation(line: 335, column: 553, scope: !6821)
!6831 = !DILocation(line: 335, column: 549, scope: !6821)
!6832 = !DILocation(line: 335, column: 556, scope: !6821)
!6833 = !DILocation(line: 335, column: 689, scope: !6821)
!6834 = !DILocation(line: 335, column: 543, scope: !6835)
!6835 = !DILexicalBlockFile(scope: !6787, file: !624, discriminator: 8)
!6836 = !DILocation(line: 335, column: 519, scope: !6835)
!6837 = distinct !{!6837, !6838}
!6838 = !DILocation(line: 335, column: 519, scope: !6783)
!6839 = !DILocation(line: 335, column: 698, scope: !6840)
!6840 = !DILexicalBlockFile(scope: !6783, file: !624, discriminator: 9)
!6841 = !DILocation(line: 335, column: 695, scope: !6840)
!6842 = !DILocation(line: 335, column: 719, scope: !6840)
!6843 = !DILocation(line: 335, column: 716, scope: !6840)
!6844 = !DILocation(line: 335, column: 743, scope: !6840)
!6845 = !DILocation(line: 335, column: 740, scope: !6840)
!6846 = !DILocation(line: 335, column: 760, scope: !6840)
!6847 = !DILocation(line: 335, column: 513, scope: !6848)
!6848 = !DILexicalBlockFile(scope: !6776, file: !624, discriminator: 10)
!6849 = !DILocation(line: 335, column: 488, scope: !6848)
!6850 = distinct !{!6850, !6851}
!6851 = !DILocation(line: 335, column: 488, scope: !6725)
!6852 = !DILocation(line: 335, column: 762, scope: !6853)
!6853 = !DILexicalBlockFile(scope: !6725, file: !624, discriminator: 11)
!6854 = distinct !DISubprogram(name: "blend_freeze_10bit", scope: !624, file: !624, line: 343, type: !1531, isLocal: true, isDefinition: true, scopeLine: 343, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!6855 = !DILocalVariable(name: "_top", arg: 1, scope: !6854, file: !624, line: 343, type: !900)
!6856 = !DILocation(line: 343, column: 47, scope: !6854)
!6857 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !6854, file: !624, line: 343, type: !902)
!6858 = !DILocation(line: 343, column: 63, scope: !6854)
!6859 = !DILocalVariable(name: "_bottom", arg: 3, scope: !6854, file: !624, line: 343, type: !900)
!6860 = !DILocation(line: 343, column: 92, scope: !6854)
!6861 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !6854, file: !624, line: 343, type: !902)
!6862 = !DILocation(line: 343, column: 111, scope: !6854)
!6863 = !DILocalVariable(name: "_dst", arg: 5, scope: !6854, file: !624, line: 343, type: !329)
!6864 = !DILocation(line: 343, column: 137, scope: !6854)
!6865 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !6854, file: !624, line: 343, type: !902)
!6866 = !DILocation(line: 343, column: 153, scope: !6854)
!6867 = !DILocalVariable(name: "width", arg: 7, scope: !6854, file: !624, line: 343, type: !902)
!6868 = !DILocation(line: 343, column: 177, scope: !6854)
!6869 = !DILocalVariable(name: "height", arg: 8, scope: !6854, file: !624, line: 343, type: !902)
!6870 = !DILocation(line: 343, column: 194, scope: !6854)
!6871 = !DILocalVariable(name: "param", arg: 9, scope: !6854, file: !624, line: 343, type: !884)
!6872 = !DILocation(line: 343, column: 216, scope: !6854)
!6873 = !DILocalVariable(name: "values", arg: 10, scope: !6854, file: !624, line: 343, type: !544)
!6874 = !DILocation(line: 343, column: 231, scope: !6854)
!6875 = !DILocalVariable(name: "starty", arg: 11, scope: !6854, file: !624, line: 343, type: !238)
!6876 = !DILocation(line: 343, column: 243, scope: !6854)
!6877 = !DILocalVariable(name: "top", scope: !6854, file: !624, line: 343, type: !839)
!6878 = !DILocation(line: 343, column: 269, scope: !6854)
!6879 = !DILocation(line: 343, column: 292, scope: !6854)
!6880 = !DILocation(line: 343, column: 275, scope: !6854)
!6881 = !DILocalVariable(name: "bottom", scope: !6854, file: !624, line: 343, type: !839)
!6882 = !DILocation(line: 343, column: 314, scope: !6854)
!6883 = !DILocation(line: 343, column: 340, scope: !6854)
!6884 = !DILocation(line: 343, column: 323, scope: !6854)
!6885 = !DILocalVariable(name: "dst", scope: !6854, file: !624, line: 343, type: !843)
!6886 = !DILocation(line: 343, column: 359, scope: !6854)
!6887 = !DILocation(line: 343, column: 376, scope: !6854)
!6888 = !DILocation(line: 343, column: 365, scope: !6854)
!6889 = !DILocalVariable(name: "opacity", scope: !6854, file: !624, line: 343, type: !248)
!6890 = !DILocation(line: 343, column: 389, scope: !6854)
!6891 = !DILocation(line: 343, column: 399, scope: !6854)
!6892 = !DILocation(line: 343, column: 406, scope: !6854)
!6893 = !DILocalVariable(name: "i", scope: !6854, file: !624, line: 343, type: !238)
!6894 = !DILocation(line: 343, column: 419, scope: !6854)
!6895 = !DILocalVariable(name: "j", scope: !6854, file: !624, line: 343, type: !238)
!6896 = !DILocation(line: 343, column: 422, scope: !6854)
!6897 = !DILocation(line: 343, column: 438, scope: !6854)
!6898 = !DILocation(line: 343, column: 457, scope: !6854)
!6899 = !DILocation(line: 343, column: 479, scope: !6854)
!6900 = !DILocation(line: 343, column: 492, scope: !6901)
!6901 = distinct !DILexicalBlock(scope: !6854, file: !624, line: 343, column: 485)
!6902 = !DILocation(line: 343, column: 490, scope: !6901)
!6903 = !DILocation(line: 343, column: 497, scope: !6904)
!6904 = !DILexicalBlockFile(scope: !6905, file: !624, discriminator: 1)
!6905 = distinct !DILexicalBlock(scope: !6901, file: !624, line: 343, column: 485)
!6906 = !DILocation(line: 343, column: 501, scope: !6904)
!6907 = !DILocation(line: 343, column: 499, scope: !6904)
!6908 = !DILocation(line: 343, column: 485, scope: !6904)
!6909 = !DILocation(line: 343, column: 523, scope: !6910)
!6910 = !DILexicalBlockFile(scope: !6911, file: !624, discriminator: 2)
!6911 = distinct !DILexicalBlock(scope: !6912, file: !624, line: 343, column: 516)
!6912 = distinct !DILexicalBlock(scope: !6905, file: !624, line: 343, column: 514)
!6913 = !DILocation(line: 343, column: 521, scope: !6910)
!6914 = !DILocation(line: 343, column: 528, scope: !6915)
!6915 = !DILexicalBlockFile(scope: !6916, file: !624, discriminator: 3)
!6916 = distinct !DILexicalBlock(scope: !6911, file: !624, line: 343, column: 516)
!6917 = !DILocation(line: 343, column: 532, scope: !6915)
!6918 = !DILocation(line: 343, column: 530, scope: !6915)
!6919 = !DILocation(line: 343, column: 516, scope: !6915)
!6920 = !DILocation(line: 343, column: 559, scope: !6921)
!6921 = !DILexicalBlockFile(scope: !6922, file: !624, discriminator: 4)
!6922 = distinct !DILexicalBlock(scope: !6916, file: !624, line: 343, column: 544)
!6923 = !DILocation(line: 343, column: 555, scope: !6921)
!6924 = !DILocation(line: 343, column: 574, scope: !6921)
!6925 = !DILocation(line: 343, column: 567, scope: !6921)
!6926 = !DILocation(line: 343, column: 577, scope: !6921)
!6927 = !DILocation(line: 343, column: 566, scope: !6921)
!6928 = !DILocation(line: 343, column: 566, scope: !6929)
!6929 = !DILexicalBlockFile(scope: !6922, file: !624, discriminator: 5)
!6930 = !DILocation(line: 343, column: 611, scope: !6931)
!6931 = !DILexicalBlockFile(scope: !6922, file: !624, discriminator: 6)
!6932 = !DILocation(line: 343, column: 607, scope: !6931)
!6933 = !DILocation(line: 343, column: 605, scope: !6931)
!6934 = !DILocation(line: 343, column: 629, scope: !6931)
!6935 = !DILocation(line: 343, column: 625, scope: !6931)
!6936 = !DILocation(line: 343, column: 623, scope: !6931)
!6937 = !DILocation(line: 343, column: 615, scope: !6931)
!6938 = !DILocation(line: 343, column: 643, scope: !6931)
!6939 = !DILocation(line: 343, column: 636, scope: !6931)
!6940 = !DILocation(line: 343, column: 634, scope: !6931)
!6941 = !DILocation(line: 343, column: 647, scope: !6931)
!6942 = !DILocation(line: 343, column: 597, scope: !6931)
!6943 = !DILocation(line: 343, column: 597, scope: !6944)
!6944 = !DILexicalBlockFile(scope: !6922, file: !624, discriminator: 7)
!6945 = !DILocation(line: 343, column: 681, scope: !6946)
!6946 = !DILexicalBlockFile(scope: !6922, file: !624, discriminator: 8)
!6947 = !DILocation(line: 343, column: 677, scope: !6946)
!6948 = !DILocation(line: 343, column: 675, scope: !6946)
!6949 = !DILocation(line: 343, column: 699, scope: !6946)
!6950 = !DILocation(line: 343, column: 695, scope: !6946)
!6951 = !DILocation(line: 343, column: 693, scope: !6946)
!6952 = !DILocation(line: 343, column: 685, scope: !6946)
!6953 = !DILocation(line: 343, column: 713, scope: !6946)
!6954 = !DILocation(line: 343, column: 706, scope: !6946)
!6955 = !DILocation(line: 343, column: 704, scope: !6946)
!6956 = !DILocation(line: 343, column: 597, scope: !6946)
!6957 = !DILocation(line: 343, column: 597, scope: !6958)
!6958 = !DILexicalBlockFile(scope: !6922, file: !624, discriminator: 9)
!6959 = !DILocation(line: 343, column: 594, scope: !6958)
!6960 = !DILocation(line: 343, column: 566, scope: !6958)
!6961 = !DILocation(line: 343, column: 566, scope: !6962)
!6962 = !DILexicalBlockFile(scope: !6922, file: !624, discriminator: 10)
!6963 = !DILocation(line: 343, column: 725, scope: !6962)
!6964 = !DILocation(line: 343, column: 721, scope: !6962)
!6965 = !DILocation(line: 343, column: 719, scope: !6962)
!6966 = !DILocation(line: 343, column: 564, scope: !6962)
!6967 = !DILocation(line: 343, column: 731, scope: !6962)
!6968 = !DILocation(line: 343, column: 729, scope: !6962)
!6969 = !DILocation(line: 343, column: 562, scope: !6962)
!6970 = !DILocation(line: 343, column: 555, scope: !6962)
!6971 = !DILocation(line: 343, column: 550, scope: !6962)
!6972 = !DILocation(line: 343, column: 546, scope: !6962)
!6973 = !DILocation(line: 343, column: 553, scope: !6962)
!6974 = !DILocation(line: 343, column: 740, scope: !6962)
!6975 = !DILocation(line: 343, column: 540, scope: !6976)
!6976 = !DILexicalBlockFile(scope: !6916, file: !624, discriminator: 11)
!6977 = !DILocation(line: 343, column: 516, scope: !6976)
!6978 = distinct !{!6978, !6979}
!6979 = !DILocation(line: 343, column: 516, scope: !6912)
!6980 = !DILocation(line: 343, column: 749, scope: !6981)
!6981 = !DILexicalBlockFile(scope: !6912, file: !624, discriminator: 12)
!6982 = !DILocation(line: 343, column: 746, scope: !6981)
!6983 = !DILocation(line: 343, column: 770, scope: !6981)
!6984 = !DILocation(line: 343, column: 767, scope: !6981)
!6985 = !DILocation(line: 343, column: 794, scope: !6981)
!6986 = !DILocation(line: 343, column: 791, scope: !6981)
!6987 = !DILocation(line: 343, column: 811, scope: !6981)
!6988 = !DILocation(line: 343, column: 510, scope: !6989)
!6989 = !DILexicalBlockFile(scope: !6905, file: !624, discriminator: 13)
!6990 = !DILocation(line: 343, column: 485, scope: !6989)
!6991 = distinct !{!6991, !6992}
!6992 = !DILocation(line: 343, column: 485, scope: !6854)
!6993 = !DILocation(line: 343, column: 813, scope: !6994)
!6994 = !DILexicalBlockFile(scope: !6854, file: !624, discriminator: 14)
!6995 = distinct !DISubprogram(name: "blend_glow_10bit", scope: !624, file: !624, line: 354, type: !1531, isLocal: true, isDefinition: true, scopeLine: 354, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!6996 = !DILocalVariable(name: "_top", arg: 1, scope: !6995, file: !624, line: 354, type: !900)
!6997 = !DILocation(line: 354, column: 45, scope: !6995)
!6998 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !6995, file: !624, line: 354, type: !902)
!6999 = !DILocation(line: 354, column: 61, scope: !6995)
!7000 = !DILocalVariable(name: "_bottom", arg: 3, scope: !6995, file: !624, line: 354, type: !900)
!7001 = !DILocation(line: 354, column: 90, scope: !6995)
!7002 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !6995, file: !624, line: 354, type: !902)
!7003 = !DILocation(line: 354, column: 109, scope: !6995)
!7004 = !DILocalVariable(name: "_dst", arg: 5, scope: !6995, file: !624, line: 354, type: !329)
!7005 = !DILocation(line: 354, column: 135, scope: !6995)
!7006 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !6995, file: !624, line: 354, type: !902)
!7007 = !DILocation(line: 354, column: 151, scope: !6995)
!7008 = !DILocalVariable(name: "width", arg: 7, scope: !6995, file: !624, line: 354, type: !902)
!7009 = !DILocation(line: 354, column: 175, scope: !6995)
!7010 = !DILocalVariable(name: "height", arg: 8, scope: !6995, file: !624, line: 354, type: !902)
!7011 = !DILocation(line: 354, column: 192, scope: !6995)
!7012 = !DILocalVariable(name: "param", arg: 9, scope: !6995, file: !624, line: 354, type: !884)
!7013 = !DILocation(line: 354, column: 214, scope: !6995)
!7014 = !DILocalVariable(name: "values", arg: 10, scope: !6995, file: !624, line: 354, type: !544)
!7015 = !DILocation(line: 354, column: 229, scope: !6995)
!7016 = !DILocalVariable(name: "starty", arg: 11, scope: !6995, file: !624, line: 354, type: !238)
!7017 = !DILocation(line: 354, column: 241, scope: !6995)
!7018 = !DILocalVariable(name: "top", scope: !6995, file: !624, line: 354, type: !839)
!7019 = !DILocation(line: 354, column: 267, scope: !6995)
!7020 = !DILocation(line: 354, column: 290, scope: !6995)
!7021 = !DILocation(line: 354, column: 273, scope: !6995)
!7022 = !DILocalVariable(name: "bottom", scope: !6995, file: !624, line: 354, type: !839)
!7023 = !DILocation(line: 354, column: 312, scope: !6995)
!7024 = !DILocation(line: 354, column: 338, scope: !6995)
!7025 = !DILocation(line: 354, column: 321, scope: !6995)
!7026 = !DILocalVariable(name: "dst", scope: !6995, file: !624, line: 354, type: !843)
!7027 = !DILocation(line: 354, column: 357, scope: !6995)
!7028 = !DILocation(line: 354, column: 374, scope: !6995)
!7029 = !DILocation(line: 354, column: 363, scope: !6995)
!7030 = !DILocalVariable(name: "opacity", scope: !6995, file: !624, line: 354, type: !248)
!7031 = !DILocation(line: 354, column: 387, scope: !6995)
!7032 = !DILocation(line: 354, column: 397, scope: !6995)
!7033 = !DILocation(line: 354, column: 404, scope: !6995)
!7034 = !DILocalVariable(name: "i", scope: !6995, file: !624, line: 354, type: !238)
!7035 = !DILocation(line: 354, column: 417, scope: !6995)
!7036 = !DILocalVariable(name: "j", scope: !6995, file: !624, line: 354, type: !238)
!7037 = !DILocation(line: 354, column: 420, scope: !6995)
!7038 = !DILocation(line: 354, column: 436, scope: !6995)
!7039 = !DILocation(line: 354, column: 455, scope: !6995)
!7040 = !DILocation(line: 354, column: 477, scope: !6995)
!7041 = !DILocation(line: 354, column: 490, scope: !7042)
!7042 = distinct !DILexicalBlock(scope: !6995, file: !624, line: 354, column: 483)
!7043 = !DILocation(line: 354, column: 488, scope: !7042)
!7044 = !DILocation(line: 354, column: 495, scope: !7045)
!7045 = !DILexicalBlockFile(scope: !7046, file: !624, discriminator: 1)
!7046 = distinct !DILexicalBlock(scope: !7042, file: !624, line: 354, column: 483)
!7047 = !DILocation(line: 354, column: 499, scope: !7045)
!7048 = !DILocation(line: 354, column: 497, scope: !7045)
!7049 = !DILocation(line: 354, column: 483, scope: !7045)
!7050 = !DILocation(line: 354, column: 521, scope: !7051)
!7051 = !DILexicalBlockFile(scope: !7052, file: !624, discriminator: 2)
!7052 = distinct !DILexicalBlock(scope: !7053, file: !624, line: 354, column: 514)
!7053 = distinct !DILexicalBlock(scope: !7046, file: !624, line: 354, column: 512)
!7054 = !DILocation(line: 354, column: 519, scope: !7051)
!7055 = !DILocation(line: 354, column: 526, scope: !7056)
!7056 = !DILexicalBlockFile(scope: !7057, file: !624, discriminator: 3)
!7057 = distinct !DILexicalBlock(scope: !7052, file: !624, line: 354, column: 514)
!7058 = !DILocation(line: 354, column: 530, scope: !7056)
!7059 = !DILocation(line: 354, column: 528, scope: !7056)
!7060 = !DILocation(line: 354, column: 514, scope: !7056)
!7061 = !DILocation(line: 354, column: 557, scope: !7062)
!7062 = !DILexicalBlockFile(scope: !7063, file: !624, discriminator: 4)
!7063 = distinct !DILexicalBlock(scope: !7057, file: !624, line: 354, column: 542)
!7064 = !DILocation(line: 354, column: 553, scope: !7062)
!7065 = !DILocation(line: 354, column: 569, scope: !7062)
!7066 = !DILocation(line: 354, column: 565, scope: !7062)
!7067 = !DILocation(line: 354, column: 572, scope: !7062)
!7068 = !DILocation(line: 354, column: 564, scope: !7062)
!7069 = !DILocation(line: 354, column: 587, scope: !7070)
!7070 = !DILexicalBlockFile(scope: !7063, file: !624, discriminator: 5)
!7071 = !DILocation(line: 354, column: 583, scope: !7070)
!7072 = !DILocation(line: 354, column: 564, scope: !7070)
!7073 = !DILocation(line: 354, column: 611, scope: !7074)
!7074 = !DILexicalBlockFile(scope: !7063, file: !624, discriminator: 6)
!7075 = !DILocation(line: 354, column: 604, scope: !7074)
!7076 = !DILocation(line: 354, column: 623, scope: !7074)
!7077 = !DILocation(line: 354, column: 616, scope: !7074)
!7078 = !DILocation(line: 354, column: 614, scope: !7074)
!7079 = !DILocation(line: 354, column: 640, scope: !7074)
!7080 = !DILocation(line: 354, column: 636, scope: !7074)
!7081 = !DILocation(line: 354, column: 634, scope: !7074)
!7082 = !DILocation(line: 354, column: 626, scope: !7074)
!7083 = !DILocation(line: 354, column: 600, scope: !7074)
!7084 = !DILocation(line: 354, column: 593, scope: !7074)
!7085 = !DILocation(line: 354, column: 657, scope: !7086)
!7086 = !DILexicalBlockFile(scope: !7063, file: !624, discriminator: 7)
!7087 = !DILocation(line: 354, column: 650, scope: !7086)
!7088 = !DILocation(line: 354, column: 669, scope: !7086)
!7089 = !DILocation(line: 354, column: 662, scope: !7086)
!7090 = !DILocation(line: 354, column: 660, scope: !7086)
!7091 = !DILocation(line: 354, column: 686, scope: !7086)
!7092 = !DILocation(line: 354, column: 682, scope: !7086)
!7093 = !DILocation(line: 354, column: 680, scope: !7086)
!7094 = !DILocation(line: 354, column: 672, scope: !7086)
!7095 = !DILocation(line: 354, column: 593, scope: !7086)
!7096 = !DILocation(line: 354, column: 593, scope: !7097)
!7097 = !DILexicalBlockFile(scope: !7063, file: !624, discriminator: 8)
!7098 = !DILocation(line: 354, column: 593, scope: !7099)
!7099 = !DILexicalBlockFile(scope: !7063, file: !624, discriminator: 9)
!7100 = !DILocation(line: 354, column: 564, scope: !7099)
!7101 = !DILocation(line: 354, column: 564, scope: !7102)
!7102 = !DILexicalBlockFile(scope: !7063, file: !624, discriminator: 10)
!7103 = !DILocation(line: 354, column: 709, scope: !7102)
!7104 = !DILocation(line: 354, column: 705, scope: !7102)
!7105 = !DILocation(line: 354, column: 703, scope: !7102)
!7106 = !DILocation(line: 354, column: 562, scope: !7102)
!7107 = !DILocation(line: 354, column: 715, scope: !7102)
!7108 = !DILocation(line: 354, column: 713, scope: !7102)
!7109 = !DILocation(line: 354, column: 560, scope: !7102)
!7110 = !DILocation(line: 354, column: 553, scope: !7102)
!7111 = !DILocation(line: 354, column: 548, scope: !7102)
!7112 = !DILocation(line: 354, column: 544, scope: !7102)
!7113 = !DILocation(line: 354, column: 551, scope: !7102)
!7114 = !DILocation(line: 354, column: 724, scope: !7102)
!7115 = !DILocation(line: 354, column: 538, scope: !7116)
!7116 = !DILexicalBlockFile(scope: !7057, file: !624, discriminator: 11)
!7117 = !DILocation(line: 354, column: 514, scope: !7116)
!7118 = distinct !{!7118, !7119}
!7119 = !DILocation(line: 354, column: 514, scope: !7053)
!7120 = !DILocation(line: 354, column: 733, scope: !7121)
!7121 = !DILexicalBlockFile(scope: !7053, file: !624, discriminator: 12)
!7122 = !DILocation(line: 354, column: 730, scope: !7121)
!7123 = !DILocation(line: 354, column: 754, scope: !7121)
!7124 = !DILocation(line: 354, column: 751, scope: !7121)
!7125 = !DILocation(line: 354, column: 778, scope: !7121)
!7126 = !DILocation(line: 354, column: 775, scope: !7121)
!7127 = !DILocation(line: 354, column: 795, scope: !7121)
!7128 = !DILocation(line: 354, column: 508, scope: !7129)
!7129 = !DILexicalBlockFile(scope: !7046, file: !624, discriminator: 13)
!7130 = !DILocation(line: 354, column: 483, scope: !7129)
!7131 = distinct !{!7131, !7132}
!7132 = !DILocation(line: 354, column: 483, scope: !6995)
!7133 = !DILocation(line: 354, column: 797, scope: !7134)
!7134 = !DILexicalBlockFile(scope: !6995, file: !624, discriminator: 14)
!7135 = distinct !DISubprogram(name: "blend_hardlight_10bit", scope: !624, file: !624, line: 340, type: !1531, isLocal: true, isDefinition: true, scopeLine: 340, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!7136 = !DILocalVariable(name: "_top", arg: 1, scope: !7135, file: !624, line: 340, type: !900)
!7137 = !DILocation(line: 340, column: 50, scope: !7135)
!7138 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !7135, file: !624, line: 340, type: !902)
!7139 = !DILocation(line: 340, column: 66, scope: !7135)
!7140 = !DILocalVariable(name: "_bottom", arg: 3, scope: !7135, file: !624, line: 340, type: !900)
!7141 = !DILocation(line: 340, column: 95, scope: !7135)
!7142 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !7135, file: !624, line: 340, type: !902)
!7143 = !DILocation(line: 340, column: 114, scope: !7135)
!7144 = !DILocalVariable(name: "_dst", arg: 5, scope: !7135, file: !624, line: 340, type: !329)
!7145 = !DILocation(line: 340, column: 140, scope: !7135)
!7146 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !7135, file: !624, line: 340, type: !902)
!7147 = !DILocation(line: 340, column: 156, scope: !7135)
!7148 = !DILocalVariable(name: "width", arg: 7, scope: !7135, file: !624, line: 340, type: !902)
!7149 = !DILocation(line: 340, column: 180, scope: !7135)
!7150 = !DILocalVariable(name: "height", arg: 8, scope: !7135, file: !624, line: 340, type: !902)
!7151 = !DILocation(line: 340, column: 197, scope: !7135)
!7152 = !DILocalVariable(name: "param", arg: 9, scope: !7135, file: !624, line: 340, type: !884)
!7153 = !DILocation(line: 340, column: 219, scope: !7135)
!7154 = !DILocalVariable(name: "values", arg: 10, scope: !7135, file: !624, line: 340, type: !544)
!7155 = !DILocation(line: 340, column: 234, scope: !7135)
!7156 = !DILocalVariable(name: "starty", arg: 11, scope: !7135, file: !624, line: 340, type: !238)
!7157 = !DILocation(line: 340, column: 246, scope: !7135)
!7158 = !DILocalVariable(name: "top", scope: !7135, file: !624, line: 340, type: !839)
!7159 = !DILocation(line: 340, column: 272, scope: !7135)
!7160 = !DILocation(line: 340, column: 295, scope: !7135)
!7161 = !DILocation(line: 340, column: 278, scope: !7135)
!7162 = !DILocalVariable(name: "bottom", scope: !7135, file: !624, line: 340, type: !839)
!7163 = !DILocation(line: 340, column: 317, scope: !7135)
!7164 = !DILocation(line: 340, column: 343, scope: !7135)
!7165 = !DILocation(line: 340, column: 326, scope: !7135)
!7166 = !DILocalVariable(name: "dst", scope: !7135, file: !624, line: 340, type: !843)
!7167 = !DILocation(line: 340, column: 362, scope: !7135)
!7168 = !DILocation(line: 340, column: 379, scope: !7135)
!7169 = !DILocation(line: 340, column: 368, scope: !7135)
!7170 = !DILocalVariable(name: "opacity", scope: !7135, file: !624, line: 340, type: !248)
!7171 = !DILocation(line: 340, column: 392, scope: !7135)
!7172 = !DILocation(line: 340, column: 402, scope: !7135)
!7173 = !DILocation(line: 340, column: 409, scope: !7135)
!7174 = !DILocalVariable(name: "i", scope: !7135, file: !624, line: 340, type: !238)
!7175 = !DILocation(line: 340, column: 422, scope: !7135)
!7176 = !DILocalVariable(name: "j", scope: !7135, file: !624, line: 340, type: !238)
!7177 = !DILocation(line: 340, column: 425, scope: !7135)
!7178 = !DILocation(line: 340, column: 441, scope: !7135)
!7179 = !DILocation(line: 340, column: 460, scope: !7135)
!7180 = !DILocation(line: 340, column: 482, scope: !7135)
!7181 = !DILocation(line: 340, column: 495, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7135, file: !624, line: 340, column: 488)
!7183 = !DILocation(line: 340, column: 493, scope: !7182)
!7184 = !DILocation(line: 340, column: 500, scope: !7185)
!7185 = !DILexicalBlockFile(scope: !7186, file: !624, discriminator: 1)
!7186 = distinct !DILexicalBlock(scope: !7182, file: !624, line: 340, column: 488)
!7187 = !DILocation(line: 340, column: 504, scope: !7185)
!7188 = !DILocation(line: 340, column: 502, scope: !7185)
!7189 = !DILocation(line: 340, column: 488, scope: !7185)
!7190 = !DILocation(line: 340, column: 526, scope: !7191)
!7191 = !DILexicalBlockFile(scope: !7192, file: !624, discriminator: 2)
!7192 = distinct !DILexicalBlock(scope: !7193, file: !624, line: 340, column: 519)
!7193 = distinct !DILexicalBlock(scope: !7186, file: !624, line: 340, column: 517)
!7194 = !DILocation(line: 340, column: 524, scope: !7191)
!7195 = !DILocation(line: 340, column: 531, scope: !7196)
!7196 = !DILexicalBlockFile(scope: !7197, file: !624, discriminator: 3)
!7197 = distinct !DILexicalBlock(scope: !7192, file: !624, line: 340, column: 519)
!7198 = !DILocation(line: 340, column: 535, scope: !7196)
!7199 = !DILocation(line: 340, column: 533, scope: !7196)
!7200 = !DILocation(line: 340, column: 519, scope: !7196)
!7201 = !DILocation(line: 340, column: 562, scope: !7202)
!7202 = !DILexicalBlockFile(scope: !7203, file: !624, discriminator: 4)
!7203 = distinct !DILexicalBlock(scope: !7197, file: !624, line: 340, column: 547)
!7204 = !DILocation(line: 340, column: 558, scope: !7202)
!7205 = !DILocation(line: 340, column: 577, scope: !7202)
!7206 = !DILocation(line: 340, column: 570, scope: !7202)
!7207 = !DILocation(line: 340, column: 580, scope: !7202)
!7208 = !DILocation(line: 340, column: 569, scope: !7202)
!7209 = !DILocation(line: 340, column: 606, scope: !7210)
!7210 = !DILexicalBlockFile(scope: !7203, file: !624, discriminator: 5)
!7211 = !DILocation(line: 340, column: 599, scope: !7210)
!7212 = !DILocation(line: 340, column: 598, scope: !7210)
!7213 = !DILocation(line: 340, column: 617, scope: !7210)
!7214 = !DILocation(line: 340, column: 613, scope: !7210)
!7215 = !DILocation(line: 340, column: 612, scope: !7210)
!7216 = !DILocation(line: 340, column: 610, scope: !7210)
!7217 = !DILocation(line: 340, column: 622, scope: !7210)
!7218 = !DILocation(line: 340, column: 594, scope: !7210)
!7219 = !DILocation(line: 340, column: 569, scope: !7210)
!7220 = !DILocation(line: 340, column: 664, scope: !7221)
!7221 = !DILexicalBlockFile(scope: !7203, file: !624, discriminator: 6)
!7222 = !DILocation(line: 340, column: 657, scope: !7221)
!7223 = !DILocation(line: 340, column: 656, scope: !7221)
!7224 = !DILocation(line: 340, column: 654, scope: !7221)
!7225 = !DILocation(line: 340, column: 684, scope: !7221)
!7226 = !DILocation(line: 340, column: 680, scope: !7221)
!7227 = !DILocation(line: 340, column: 679, scope: !7221)
!7228 = !DILocation(line: 340, column: 677, scope: !7221)
!7229 = !DILocation(line: 340, column: 669, scope: !7221)
!7230 = !DILocation(line: 340, column: 689, scope: !7221)
!7231 = !DILocation(line: 340, column: 645, scope: !7221)
!7232 = !DILocation(line: 340, column: 639, scope: !7221)
!7233 = !DILocation(line: 340, column: 569, scope: !7221)
!7234 = !DILocation(line: 340, column: 569, scope: !7235)
!7235 = !DILexicalBlockFile(scope: !7203, file: !624, discriminator: 7)
!7236 = !DILocation(line: 340, column: 705, scope: !7235)
!7237 = !DILocation(line: 340, column: 701, scope: !7235)
!7238 = !DILocation(line: 340, column: 699, scope: !7235)
!7239 = !DILocation(line: 340, column: 567, scope: !7235)
!7240 = !DILocation(line: 340, column: 711, scope: !7235)
!7241 = !DILocation(line: 340, column: 709, scope: !7235)
!7242 = !DILocation(line: 340, column: 565, scope: !7235)
!7243 = !DILocation(line: 340, column: 558, scope: !7235)
!7244 = !DILocation(line: 340, column: 553, scope: !7235)
!7245 = !DILocation(line: 340, column: 549, scope: !7235)
!7246 = !DILocation(line: 340, column: 556, scope: !7235)
!7247 = !DILocation(line: 340, column: 720, scope: !7235)
!7248 = !DILocation(line: 340, column: 543, scope: !7249)
!7249 = !DILexicalBlockFile(scope: !7197, file: !624, discriminator: 8)
!7250 = !DILocation(line: 340, column: 519, scope: !7249)
!7251 = distinct !{!7251, !7252}
!7252 = !DILocation(line: 340, column: 519, scope: !7193)
!7253 = !DILocation(line: 340, column: 729, scope: !7254)
!7254 = !DILexicalBlockFile(scope: !7193, file: !624, discriminator: 9)
!7255 = !DILocation(line: 340, column: 726, scope: !7254)
!7256 = !DILocation(line: 340, column: 750, scope: !7254)
!7257 = !DILocation(line: 340, column: 747, scope: !7254)
!7258 = !DILocation(line: 340, column: 774, scope: !7254)
!7259 = !DILocation(line: 340, column: 771, scope: !7254)
!7260 = !DILocation(line: 340, column: 791, scope: !7254)
!7261 = !DILocation(line: 340, column: 513, scope: !7262)
!7262 = !DILexicalBlockFile(scope: !7186, file: !624, discriminator: 10)
!7263 = !DILocation(line: 340, column: 488, scope: !7262)
!7264 = distinct !{!7264, !7265}
!7265 = !DILocation(line: 340, column: 488, scope: !7135)
!7266 = !DILocation(line: 340, column: 793, scope: !7267)
!7267 = !DILexicalBlockFile(scope: !7135, file: !624, discriminator: 11)
!7268 = distinct !DISubprogram(name: "blend_hardmix_10bit", scope: !624, file: !624, line: 341, type: !1531, isLocal: true, isDefinition: true, scopeLine: 341, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!7269 = !DILocalVariable(name: "_top", arg: 1, scope: !7268, file: !624, line: 341, type: !900)
!7270 = !DILocation(line: 341, column: 48, scope: !7268)
!7271 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !7268, file: !624, line: 341, type: !902)
!7272 = !DILocation(line: 341, column: 64, scope: !7268)
!7273 = !DILocalVariable(name: "_bottom", arg: 3, scope: !7268, file: !624, line: 341, type: !900)
!7274 = !DILocation(line: 341, column: 93, scope: !7268)
!7275 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !7268, file: !624, line: 341, type: !902)
!7276 = !DILocation(line: 341, column: 112, scope: !7268)
!7277 = !DILocalVariable(name: "_dst", arg: 5, scope: !7268, file: !624, line: 341, type: !329)
!7278 = !DILocation(line: 341, column: 138, scope: !7268)
!7279 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !7268, file: !624, line: 341, type: !902)
!7280 = !DILocation(line: 341, column: 154, scope: !7268)
!7281 = !DILocalVariable(name: "width", arg: 7, scope: !7268, file: !624, line: 341, type: !902)
!7282 = !DILocation(line: 341, column: 178, scope: !7268)
!7283 = !DILocalVariable(name: "height", arg: 8, scope: !7268, file: !624, line: 341, type: !902)
!7284 = !DILocation(line: 341, column: 195, scope: !7268)
!7285 = !DILocalVariable(name: "param", arg: 9, scope: !7268, file: !624, line: 341, type: !884)
!7286 = !DILocation(line: 341, column: 217, scope: !7268)
!7287 = !DILocalVariable(name: "values", arg: 10, scope: !7268, file: !624, line: 341, type: !544)
!7288 = !DILocation(line: 341, column: 232, scope: !7268)
!7289 = !DILocalVariable(name: "starty", arg: 11, scope: !7268, file: !624, line: 341, type: !238)
!7290 = !DILocation(line: 341, column: 244, scope: !7268)
!7291 = !DILocalVariable(name: "top", scope: !7268, file: !624, line: 341, type: !839)
!7292 = !DILocation(line: 341, column: 270, scope: !7268)
!7293 = !DILocation(line: 341, column: 293, scope: !7268)
!7294 = !DILocation(line: 341, column: 276, scope: !7268)
!7295 = !DILocalVariable(name: "bottom", scope: !7268, file: !624, line: 341, type: !839)
!7296 = !DILocation(line: 341, column: 315, scope: !7268)
!7297 = !DILocation(line: 341, column: 341, scope: !7268)
!7298 = !DILocation(line: 341, column: 324, scope: !7268)
!7299 = !DILocalVariable(name: "dst", scope: !7268, file: !624, line: 341, type: !843)
!7300 = !DILocation(line: 341, column: 360, scope: !7268)
!7301 = !DILocation(line: 341, column: 377, scope: !7268)
!7302 = !DILocation(line: 341, column: 366, scope: !7268)
!7303 = !DILocalVariable(name: "opacity", scope: !7268, file: !624, line: 341, type: !248)
!7304 = !DILocation(line: 341, column: 390, scope: !7268)
!7305 = !DILocation(line: 341, column: 400, scope: !7268)
!7306 = !DILocation(line: 341, column: 407, scope: !7268)
!7307 = !DILocalVariable(name: "i", scope: !7268, file: !624, line: 341, type: !238)
!7308 = !DILocation(line: 341, column: 420, scope: !7268)
!7309 = !DILocalVariable(name: "j", scope: !7268, file: !624, line: 341, type: !238)
!7310 = !DILocation(line: 341, column: 423, scope: !7268)
!7311 = !DILocation(line: 341, column: 439, scope: !7268)
!7312 = !DILocation(line: 341, column: 458, scope: !7268)
!7313 = !DILocation(line: 341, column: 480, scope: !7268)
!7314 = !DILocation(line: 341, column: 493, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7268, file: !624, line: 341, column: 486)
!7316 = !DILocation(line: 341, column: 491, scope: !7315)
!7317 = !DILocation(line: 341, column: 498, scope: !7318)
!7318 = !DILexicalBlockFile(scope: !7319, file: !624, discriminator: 1)
!7319 = distinct !DILexicalBlock(scope: !7315, file: !624, line: 341, column: 486)
!7320 = !DILocation(line: 341, column: 502, scope: !7318)
!7321 = !DILocation(line: 341, column: 500, scope: !7318)
!7322 = !DILocation(line: 341, column: 486, scope: !7318)
!7323 = !DILocation(line: 341, column: 524, scope: !7324)
!7324 = !DILexicalBlockFile(scope: !7325, file: !624, discriminator: 2)
!7325 = distinct !DILexicalBlock(scope: !7326, file: !624, line: 341, column: 517)
!7326 = distinct !DILexicalBlock(scope: !7319, file: !624, line: 341, column: 515)
!7327 = !DILocation(line: 341, column: 522, scope: !7324)
!7328 = !DILocation(line: 341, column: 529, scope: !7329)
!7329 = !DILexicalBlockFile(scope: !7330, file: !624, discriminator: 3)
!7330 = distinct !DILexicalBlock(scope: !7325, file: !624, line: 341, column: 517)
!7331 = !DILocation(line: 341, column: 533, scope: !7329)
!7332 = !DILocation(line: 341, column: 531, scope: !7329)
!7333 = !DILocation(line: 341, column: 517, scope: !7329)
!7334 = !DILocation(line: 341, column: 560, scope: !7335)
!7335 = !DILexicalBlockFile(scope: !7336, file: !624, discriminator: 4)
!7336 = distinct !DILexicalBlock(scope: !7330, file: !624, line: 341, column: 545)
!7337 = !DILocation(line: 341, column: 556, scope: !7335)
!7338 = !DILocation(line: 341, column: 572, scope: !7335)
!7339 = !DILocation(line: 341, column: 568, scope: !7335)
!7340 = !DILocation(line: 341, column: 592, scope: !7335)
!7341 = !DILocation(line: 341, column: 585, scope: !7335)
!7342 = !DILocation(line: 341, column: 583, scope: !7335)
!7343 = !DILocation(line: 341, column: 575, scope: !7335)
!7344 = !DILocation(line: 341, column: 567, scope: !7335)
!7345 = !DILocation(line: 341, column: 614, scope: !7335)
!7346 = !DILocation(line: 341, column: 610, scope: !7335)
!7347 = !DILocation(line: 341, column: 608, scope: !7335)
!7348 = !DILocation(line: 341, column: 565, scope: !7335)
!7349 = !DILocation(line: 341, column: 620, scope: !7335)
!7350 = !DILocation(line: 341, column: 618, scope: !7335)
!7351 = !DILocation(line: 341, column: 563, scope: !7335)
!7352 = !DILocation(line: 341, column: 551, scope: !7335)
!7353 = !DILocation(line: 341, column: 547, scope: !7335)
!7354 = !DILocation(line: 341, column: 554, scope: !7335)
!7355 = !DILocation(line: 341, column: 629, scope: !7335)
!7356 = !DILocation(line: 341, column: 541, scope: !7357)
!7357 = !DILexicalBlockFile(scope: !7330, file: !624, discriminator: 5)
!7358 = !DILocation(line: 341, column: 517, scope: !7357)
!7359 = distinct !{!7359, !7360}
!7360 = !DILocation(line: 341, column: 517, scope: !7326)
!7361 = !DILocation(line: 341, column: 638, scope: !7362)
!7362 = !DILexicalBlockFile(scope: !7326, file: !624, discriminator: 6)
!7363 = !DILocation(line: 341, column: 635, scope: !7362)
!7364 = !DILocation(line: 341, column: 659, scope: !7362)
!7365 = !DILocation(line: 341, column: 656, scope: !7362)
!7366 = !DILocation(line: 341, column: 683, scope: !7362)
!7367 = !DILocation(line: 341, column: 680, scope: !7362)
!7368 = !DILocation(line: 341, column: 700, scope: !7362)
!7369 = !DILocation(line: 341, column: 511, scope: !7370)
!7370 = !DILexicalBlockFile(scope: !7319, file: !624, discriminator: 7)
!7371 = !DILocation(line: 341, column: 486, scope: !7370)
!7372 = distinct !{!7372, !7373}
!7373 = !DILocation(line: 341, column: 486, scope: !7268)
!7374 = !DILocation(line: 341, column: 702, scope: !7375)
!7375 = !DILexicalBlockFile(scope: !7268, file: !624, discriminator: 8)
!7376 = distinct !DISubprogram(name: "blend_heat_10bit", scope: !624, file: !624, line: 342, type: !1531, isLocal: true, isDefinition: true, scopeLine: 342, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!7377 = !DILocalVariable(name: "_top", arg: 1, scope: !7376, file: !624, line: 342, type: !900)
!7378 = !DILocation(line: 342, column: 45, scope: !7376)
!7379 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !7376, file: !624, line: 342, type: !902)
!7380 = !DILocation(line: 342, column: 61, scope: !7376)
!7381 = !DILocalVariable(name: "_bottom", arg: 3, scope: !7376, file: !624, line: 342, type: !900)
!7382 = !DILocation(line: 342, column: 90, scope: !7376)
!7383 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !7376, file: !624, line: 342, type: !902)
!7384 = !DILocation(line: 342, column: 109, scope: !7376)
!7385 = !DILocalVariable(name: "_dst", arg: 5, scope: !7376, file: !624, line: 342, type: !329)
!7386 = !DILocation(line: 342, column: 135, scope: !7376)
!7387 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !7376, file: !624, line: 342, type: !902)
!7388 = !DILocation(line: 342, column: 151, scope: !7376)
!7389 = !DILocalVariable(name: "width", arg: 7, scope: !7376, file: !624, line: 342, type: !902)
!7390 = !DILocation(line: 342, column: 175, scope: !7376)
!7391 = !DILocalVariable(name: "height", arg: 8, scope: !7376, file: !624, line: 342, type: !902)
!7392 = !DILocation(line: 342, column: 192, scope: !7376)
!7393 = !DILocalVariable(name: "param", arg: 9, scope: !7376, file: !624, line: 342, type: !884)
!7394 = !DILocation(line: 342, column: 214, scope: !7376)
!7395 = !DILocalVariable(name: "values", arg: 10, scope: !7376, file: !624, line: 342, type: !544)
!7396 = !DILocation(line: 342, column: 229, scope: !7376)
!7397 = !DILocalVariable(name: "starty", arg: 11, scope: !7376, file: !624, line: 342, type: !238)
!7398 = !DILocation(line: 342, column: 241, scope: !7376)
!7399 = !DILocalVariable(name: "top", scope: !7376, file: !624, line: 342, type: !839)
!7400 = !DILocation(line: 342, column: 267, scope: !7376)
!7401 = !DILocation(line: 342, column: 290, scope: !7376)
!7402 = !DILocation(line: 342, column: 273, scope: !7376)
!7403 = !DILocalVariable(name: "bottom", scope: !7376, file: !624, line: 342, type: !839)
!7404 = !DILocation(line: 342, column: 312, scope: !7376)
!7405 = !DILocation(line: 342, column: 338, scope: !7376)
!7406 = !DILocation(line: 342, column: 321, scope: !7376)
!7407 = !DILocalVariable(name: "dst", scope: !7376, file: !624, line: 342, type: !843)
!7408 = !DILocation(line: 342, column: 357, scope: !7376)
!7409 = !DILocation(line: 342, column: 374, scope: !7376)
!7410 = !DILocation(line: 342, column: 363, scope: !7376)
!7411 = !DILocalVariable(name: "opacity", scope: !7376, file: !624, line: 342, type: !248)
!7412 = !DILocation(line: 342, column: 387, scope: !7376)
!7413 = !DILocation(line: 342, column: 397, scope: !7376)
!7414 = !DILocation(line: 342, column: 404, scope: !7376)
!7415 = !DILocalVariable(name: "i", scope: !7376, file: !624, line: 342, type: !238)
!7416 = !DILocation(line: 342, column: 417, scope: !7376)
!7417 = !DILocalVariable(name: "j", scope: !7376, file: !624, line: 342, type: !238)
!7418 = !DILocation(line: 342, column: 420, scope: !7376)
!7419 = !DILocation(line: 342, column: 436, scope: !7376)
!7420 = !DILocation(line: 342, column: 455, scope: !7376)
!7421 = !DILocation(line: 342, column: 477, scope: !7376)
!7422 = !DILocation(line: 342, column: 490, scope: !7423)
!7423 = distinct !DILexicalBlock(scope: !7376, file: !624, line: 342, column: 483)
!7424 = !DILocation(line: 342, column: 488, scope: !7423)
!7425 = !DILocation(line: 342, column: 495, scope: !7426)
!7426 = !DILexicalBlockFile(scope: !7427, file: !624, discriminator: 1)
!7427 = distinct !DILexicalBlock(scope: !7423, file: !624, line: 342, column: 483)
!7428 = !DILocation(line: 342, column: 499, scope: !7426)
!7429 = !DILocation(line: 342, column: 497, scope: !7426)
!7430 = !DILocation(line: 342, column: 483, scope: !7426)
!7431 = !DILocation(line: 342, column: 521, scope: !7432)
!7432 = !DILexicalBlockFile(scope: !7433, file: !624, discriminator: 2)
!7433 = distinct !DILexicalBlock(scope: !7434, file: !624, line: 342, column: 514)
!7434 = distinct !DILexicalBlock(scope: !7427, file: !624, line: 342, column: 512)
!7435 = !DILocation(line: 342, column: 519, scope: !7432)
!7436 = !DILocation(line: 342, column: 526, scope: !7437)
!7437 = !DILexicalBlockFile(scope: !7438, file: !624, discriminator: 3)
!7438 = distinct !DILexicalBlock(scope: !7433, file: !624, line: 342, column: 514)
!7439 = !DILocation(line: 342, column: 530, scope: !7437)
!7440 = !DILocation(line: 342, column: 528, scope: !7437)
!7441 = !DILocation(line: 342, column: 514, scope: !7437)
!7442 = !DILocation(line: 342, column: 557, scope: !7443)
!7443 = !DILexicalBlockFile(scope: !7444, file: !624, discriminator: 4)
!7444 = distinct !DILexicalBlock(scope: !7438, file: !624, line: 342, column: 542)
!7445 = !DILocation(line: 342, column: 553, scope: !7443)
!7446 = !DILocation(line: 342, column: 569, scope: !7443)
!7447 = !DILocation(line: 342, column: 565, scope: !7443)
!7448 = !DILocation(line: 342, column: 572, scope: !7443)
!7449 = !DILocation(line: 342, column: 564, scope: !7443)
!7450 = !DILocation(line: 342, column: 564, scope: !7451)
!7451 = !DILexicalBlockFile(scope: !7444, file: !624, discriminator: 5)
!7452 = !DILocation(line: 342, column: 609, scope: !7453)
!7453 = !DILexicalBlockFile(scope: !7444, file: !624, discriminator: 6)
!7454 = !DILocation(line: 342, column: 602, scope: !7453)
!7455 = !DILocation(line: 342, column: 600, scope: !7453)
!7456 = !DILocation(line: 342, column: 630, scope: !7453)
!7457 = !DILocation(line: 342, column: 623, scope: !7453)
!7458 = !DILocation(line: 342, column: 621, scope: !7453)
!7459 = !DILocation(line: 342, column: 613, scope: !7453)
!7460 = !DILocation(line: 342, column: 641, scope: !7453)
!7461 = !DILocation(line: 342, column: 637, scope: !7453)
!7462 = !DILocation(line: 342, column: 635, scope: !7453)
!7463 = !DILocation(line: 342, column: 645, scope: !7453)
!7464 = !DILocation(line: 342, column: 592, scope: !7453)
!7465 = !DILocation(line: 342, column: 592, scope: !7466)
!7466 = !DILexicalBlockFile(scope: !7444, file: !624, discriminator: 7)
!7467 = !DILocation(line: 342, column: 682, scope: !7468)
!7468 = !DILexicalBlockFile(scope: !7444, file: !624, discriminator: 8)
!7469 = !DILocation(line: 342, column: 675, scope: !7468)
!7470 = !DILocation(line: 342, column: 673, scope: !7468)
!7471 = !DILocation(line: 342, column: 703, scope: !7468)
!7472 = !DILocation(line: 342, column: 696, scope: !7468)
!7473 = !DILocation(line: 342, column: 694, scope: !7468)
!7474 = !DILocation(line: 342, column: 686, scope: !7468)
!7475 = !DILocation(line: 342, column: 714, scope: !7468)
!7476 = !DILocation(line: 342, column: 710, scope: !7468)
!7477 = !DILocation(line: 342, column: 708, scope: !7468)
!7478 = !DILocation(line: 342, column: 592, scope: !7468)
!7479 = !DILocation(line: 342, column: 592, scope: !7480)
!7480 = !DILexicalBlockFile(scope: !7444, file: !624, discriminator: 9)
!7481 = !DILocation(line: 342, column: 589, scope: !7480)
!7482 = !DILocation(line: 342, column: 564, scope: !7480)
!7483 = !DILocation(line: 342, column: 564, scope: !7484)
!7484 = !DILexicalBlockFile(scope: !7444, file: !624, discriminator: 10)
!7485 = !DILocation(line: 342, column: 726, scope: !7484)
!7486 = !DILocation(line: 342, column: 722, scope: !7484)
!7487 = !DILocation(line: 342, column: 720, scope: !7484)
!7488 = !DILocation(line: 342, column: 562, scope: !7484)
!7489 = !DILocation(line: 342, column: 732, scope: !7484)
!7490 = !DILocation(line: 342, column: 730, scope: !7484)
!7491 = !DILocation(line: 342, column: 560, scope: !7484)
!7492 = !DILocation(line: 342, column: 553, scope: !7484)
!7493 = !DILocation(line: 342, column: 548, scope: !7484)
!7494 = !DILocation(line: 342, column: 544, scope: !7484)
!7495 = !DILocation(line: 342, column: 551, scope: !7484)
!7496 = !DILocation(line: 342, column: 741, scope: !7484)
!7497 = !DILocation(line: 342, column: 538, scope: !7498)
!7498 = !DILexicalBlockFile(scope: !7438, file: !624, discriminator: 11)
!7499 = !DILocation(line: 342, column: 514, scope: !7498)
!7500 = distinct !{!7500, !7501}
!7501 = !DILocation(line: 342, column: 514, scope: !7434)
!7502 = !DILocation(line: 342, column: 750, scope: !7503)
!7503 = !DILexicalBlockFile(scope: !7434, file: !624, discriminator: 12)
!7504 = !DILocation(line: 342, column: 747, scope: !7503)
!7505 = !DILocation(line: 342, column: 771, scope: !7503)
!7506 = !DILocation(line: 342, column: 768, scope: !7503)
!7507 = !DILocation(line: 342, column: 795, scope: !7503)
!7508 = !DILocation(line: 342, column: 792, scope: !7503)
!7509 = !DILocation(line: 342, column: 812, scope: !7503)
!7510 = !DILocation(line: 342, column: 508, scope: !7511)
!7511 = !DILexicalBlockFile(scope: !7427, file: !624, discriminator: 13)
!7512 = !DILocation(line: 342, column: 483, scope: !7511)
!7513 = distinct !{!7513, !7514}
!7514 = !DILocation(line: 342, column: 483, scope: !7376)
!7515 = !DILocation(line: 342, column: 814, scope: !7516)
!7516 = !DILexicalBlockFile(scope: !7376, file: !624, discriminator: 14)
!7517 = distinct !DISubprogram(name: "blend_lighten_10bit", scope: !624, file: !624, line: 345, type: !1531, isLocal: true, isDefinition: true, scopeLine: 345, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!7518 = !DILocalVariable(name: "_top", arg: 1, scope: !7517, file: !624, line: 345, type: !900)
!7519 = !DILocation(line: 345, column: 48, scope: !7517)
!7520 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !7517, file: !624, line: 345, type: !902)
!7521 = !DILocation(line: 345, column: 64, scope: !7517)
!7522 = !DILocalVariable(name: "_bottom", arg: 3, scope: !7517, file: !624, line: 345, type: !900)
!7523 = !DILocation(line: 345, column: 93, scope: !7517)
!7524 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !7517, file: !624, line: 345, type: !902)
!7525 = !DILocation(line: 345, column: 112, scope: !7517)
!7526 = !DILocalVariable(name: "_dst", arg: 5, scope: !7517, file: !624, line: 345, type: !329)
!7527 = !DILocation(line: 345, column: 138, scope: !7517)
!7528 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !7517, file: !624, line: 345, type: !902)
!7529 = !DILocation(line: 345, column: 154, scope: !7517)
!7530 = !DILocalVariable(name: "width", arg: 7, scope: !7517, file: !624, line: 345, type: !902)
!7531 = !DILocation(line: 345, column: 178, scope: !7517)
!7532 = !DILocalVariable(name: "height", arg: 8, scope: !7517, file: !624, line: 345, type: !902)
!7533 = !DILocation(line: 345, column: 195, scope: !7517)
!7534 = !DILocalVariable(name: "param", arg: 9, scope: !7517, file: !624, line: 345, type: !884)
!7535 = !DILocation(line: 345, column: 217, scope: !7517)
!7536 = !DILocalVariable(name: "values", arg: 10, scope: !7517, file: !624, line: 345, type: !544)
!7537 = !DILocation(line: 345, column: 232, scope: !7517)
!7538 = !DILocalVariable(name: "starty", arg: 11, scope: !7517, file: !624, line: 345, type: !238)
!7539 = !DILocation(line: 345, column: 244, scope: !7517)
!7540 = !DILocalVariable(name: "top", scope: !7517, file: !624, line: 345, type: !839)
!7541 = !DILocation(line: 345, column: 270, scope: !7517)
!7542 = !DILocation(line: 345, column: 293, scope: !7517)
!7543 = !DILocation(line: 345, column: 276, scope: !7517)
!7544 = !DILocalVariable(name: "bottom", scope: !7517, file: !624, line: 345, type: !839)
!7545 = !DILocation(line: 345, column: 315, scope: !7517)
!7546 = !DILocation(line: 345, column: 341, scope: !7517)
!7547 = !DILocation(line: 345, column: 324, scope: !7517)
!7548 = !DILocalVariable(name: "dst", scope: !7517, file: !624, line: 345, type: !843)
!7549 = !DILocation(line: 345, column: 360, scope: !7517)
!7550 = !DILocation(line: 345, column: 377, scope: !7517)
!7551 = !DILocation(line: 345, column: 366, scope: !7517)
!7552 = !DILocalVariable(name: "opacity", scope: !7517, file: !624, line: 345, type: !248)
!7553 = !DILocation(line: 345, column: 390, scope: !7517)
!7554 = !DILocation(line: 345, column: 400, scope: !7517)
!7555 = !DILocation(line: 345, column: 407, scope: !7517)
!7556 = !DILocalVariable(name: "i", scope: !7517, file: !624, line: 345, type: !238)
!7557 = !DILocation(line: 345, column: 420, scope: !7517)
!7558 = !DILocalVariable(name: "j", scope: !7517, file: !624, line: 345, type: !238)
!7559 = !DILocation(line: 345, column: 423, scope: !7517)
!7560 = !DILocation(line: 345, column: 439, scope: !7517)
!7561 = !DILocation(line: 345, column: 458, scope: !7517)
!7562 = !DILocation(line: 345, column: 480, scope: !7517)
!7563 = !DILocation(line: 345, column: 493, scope: !7564)
!7564 = distinct !DILexicalBlock(scope: !7517, file: !624, line: 345, column: 486)
!7565 = !DILocation(line: 345, column: 491, scope: !7564)
!7566 = !DILocation(line: 345, column: 498, scope: !7567)
!7567 = !DILexicalBlockFile(scope: !7568, file: !624, discriminator: 1)
!7568 = distinct !DILexicalBlock(scope: !7564, file: !624, line: 345, column: 486)
!7569 = !DILocation(line: 345, column: 502, scope: !7567)
!7570 = !DILocation(line: 345, column: 500, scope: !7567)
!7571 = !DILocation(line: 345, column: 486, scope: !7567)
!7572 = !DILocation(line: 345, column: 524, scope: !7573)
!7573 = !DILexicalBlockFile(scope: !7574, file: !624, discriminator: 2)
!7574 = distinct !DILexicalBlock(scope: !7575, file: !624, line: 345, column: 517)
!7575 = distinct !DILexicalBlock(scope: !7568, file: !624, line: 345, column: 515)
!7576 = !DILocation(line: 345, column: 522, scope: !7573)
!7577 = !DILocation(line: 345, column: 529, scope: !7578)
!7578 = !DILexicalBlockFile(scope: !7579, file: !624, discriminator: 3)
!7579 = distinct !DILexicalBlock(scope: !7574, file: !624, line: 345, column: 517)
!7580 = !DILocation(line: 345, column: 533, scope: !7578)
!7581 = !DILocation(line: 345, column: 531, scope: !7578)
!7582 = !DILocation(line: 345, column: 517, scope: !7578)
!7583 = !DILocation(line: 345, column: 560, scope: !7584)
!7584 = !DILexicalBlockFile(scope: !7585, file: !624, discriminator: 4)
!7585 = distinct !DILexicalBlock(scope: !7579, file: !624, line: 345, column: 545)
!7586 = !DILocation(line: 345, column: 556, scope: !7584)
!7587 = !DILocation(line: 345, column: 573, scope: !7584)
!7588 = !DILocation(line: 345, column: 569, scope: !7584)
!7589 = !DILocation(line: 345, column: 568, scope: !7584)
!7590 = !DILocation(line: 345, column: 587, scope: !7584)
!7591 = !DILocation(line: 345, column: 580, scope: !7584)
!7592 = !DILocation(line: 345, column: 579, scope: !7584)
!7593 = !DILocation(line: 345, column: 577, scope: !7584)
!7594 = !DILocation(line: 345, column: 598, scope: !7595)
!7595 = !DILexicalBlockFile(scope: !7585, file: !624, discriminator: 5)
!7596 = !DILocation(line: 345, column: 594, scope: !7595)
!7597 = !DILocation(line: 345, column: 593, scope: !7595)
!7598 = !DILocation(line: 345, column: 568, scope: !7595)
!7599 = !DILocation(line: 345, column: 612, scope: !7600)
!7600 = !DILexicalBlockFile(scope: !7585, file: !624, discriminator: 6)
!7601 = !DILocation(line: 345, column: 605, scope: !7600)
!7602 = !DILocation(line: 345, column: 604, scope: !7600)
!7603 = !DILocation(line: 345, column: 568, scope: !7600)
!7604 = !DILocation(line: 345, column: 568, scope: !7605)
!7605 = !DILexicalBlockFile(scope: !7585, file: !624, discriminator: 7)
!7606 = !DILocation(line: 345, column: 624, scope: !7605)
!7607 = !DILocation(line: 345, column: 620, scope: !7605)
!7608 = !DILocation(line: 345, column: 618, scope: !7605)
!7609 = !DILocation(line: 345, column: 565, scope: !7605)
!7610 = !DILocation(line: 345, column: 630, scope: !7605)
!7611 = !DILocation(line: 345, column: 628, scope: !7605)
!7612 = !DILocation(line: 345, column: 563, scope: !7605)
!7613 = !DILocation(line: 345, column: 556, scope: !7605)
!7614 = !DILocation(line: 345, column: 551, scope: !7605)
!7615 = !DILocation(line: 345, column: 547, scope: !7605)
!7616 = !DILocation(line: 345, column: 554, scope: !7605)
!7617 = !DILocation(line: 345, column: 639, scope: !7605)
!7618 = !DILocation(line: 345, column: 541, scope: !7619)
!7619 = !DILexicalBlockFile(scope: !7579, file: !624, discriminator: 8)
!7620 = !DILocation(line: 345, column: 517, scope: !7619)
!7621 = distinct !{!7621, !7622}
!7622 = !DILocation(line: 345, column: 517, scope: !7575)
!7623 = !DILocation(line: 345, column: 648, scope: !7624)
!7624 = !DILexicalBlockFile(scope: !7575, file: !624, discriminator: 9)
!7625 = !DILocation(line: 345, column: 645, scope: !7624)
!7626 = !DILocation(line: 345, column: 669, scope: !7624)
!7627 = !DILocation(line: 345, column: 666, scope: !7624)
!7628 = !DILocation(line: 345, column: 693, scope: !7624)
!7629 = !DILocation(line: 345, column: 690, scope: !7624)
!7630 = !DILocation(line: 345, column: 710, scope: !7624)
!7631 = !DILocation(line: 345, column: 511, scope: !7632)
!7632 = !DILexicalBlockFile(scope: !7568, file: !624, discriminator: 10)
!7633 = !DILocation(line: 345, column: 486, scope: !7632)
!7634 = distinct !{!7634, !7635}
!7635 = !DILocation(line: 345, column: 486, scope: !7517)
!7636 = !DILocation(line: 345, column: 712, scope: !7637)
!7637 = !DILexicalBlockFile(scope: !7517, file: !624, discriminator: 11)
!7638 = distinct !DISubprogram(name: "blend_linearlight_10bit", scope: !624, file: !624, line: 359, type: !1531, isLocal: true, isDefinition: true, scopeLine: 359, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!7639 = !DILocation(line: 229, column: 99, scope: !5463, inlinedAt: !7640)
!7640 = distinct !DILocation(line: 359, column: 576, scope: !7641)
!7641 = !DILexicalBlockFile(scope: !7642, file: !624, discriminator: 7)
!7642 = distinct !DILexicalBlock(scope: !7643, file: !624, line: 359, column: 549)
!7643 = distinct !DILexicalBlock(scope: !7644, file: !624, line: 359, column: 521)
!7644 = distinct !DILexicalBlock(scope: !7645, file: !624, line: 359, column: 521)
!7645 = distinct !DILexicalBlock(scope: !7646, file: !624, line: 359, column: 519)
!7646 = distinct !DILexicalBlock(scope: !7647, file: !624, line: 359, column: 490)
!7647 = distinct !DILexicalBlock(scope: !7638, file: !624, line: 359, column: 490)
!7648 = !DILocation(line: 229, column: 106, scope: !5463, inlinedAt: !7640)
!7649 = !DILocalVariable(name: "_top", arg: 1, scope: !7638, file: !624, line: 359, type: !900)
!7650 = !DILocation(line: 359, column: 52, scope: !7638)
!7651 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !7638, file: !624, line: 359, type: !902)
!7652 = !DILocation(line: 359, column: 68, scope: !7638)
!7653 = !DILocalVariable(name: "_bottom", arg: 3, scope: !7638, file: !624, line: 359, type: !900)
!7654 = !DILocation(line: 359, column: 97, scope: !7638)
!7655 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !7638, file: !624, line: 359, type: !902)
!7656 = !DILocation(line: 359, column: 116, scope: !7638)
!7657 = !DILocalVariable(name: "_dst", arg: 5, scope: !7638, file: !624, line: 359, type: !329)
!7658 = !DILocation(line: 359, column: 142, scope: !7638)
!7659 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !7638, file: !624, line: 359, type: !902)
!7660 = !DILocation(line: 359, column: 158, scope: !7638)
!7661 = !DILocalVariable(name: "width", arg: 7, scope: !7638, file: !624, line: 359, type: !902)
!7662 = !DILocation(line: 359, column: 182, scope: !7638)
!7663 = !DILocalVariable(name: "height", arg: 8, scope: !7638, file: !624, line: 359, type: !902)
!7664 = !DILocation(line: 359, column: 199, scope: !7638)
!7665 = !DILocalVariable(name: "param", arg: 9, scope: !7638, file: !624, line: 359, type: !884)
!7666 = !DILocation(line: 359, column: 221, scope: !7638)
!7667 = !DILocalVariable(name: "values", arg: 10, scope: !7638, file: !624, line: 359, type: !544)
!7668 = !DILocation(line: 359, column: 236, scope: !7638)
!7669 = !DILocalVariable(name: "starty", arg: 11, scope: !7638, file: !624, line: 359, type: !238)
!7670 = !DILocation(line: 359, column: 248, scope: !7638)
!7671 = !DILocalVariable(name: "top", scope: !7638, file: !624, line: 359, type: !839)
!7672 = !DILocation(line: 359, column: 274, scope: !7638)
!7673 = !DILocation(line: 359, column: 297, scope: !7638)
!7674 = !DILocation(line: 359, column: 280, scope: !7638)
!7675 = !DILocalVariable(name: "bottom", scope: !7638, file: !624, line: 359, type: !839)
!7676 = !DILocation(line: 359, column: 319, scope: !7638)
!7677 = !DILocation(line: 359, column: 345, scope: !7638)
!7678 = !DILocation(line: 359, column: 328, scope: !7638)
!7679 = !DILocalVariable(name: "dst", scope: !7638, file: !624, line: 359, type: !843)
!7680 = !DILocation(line: 359, column: 364, scope: !7638)
!7681 = !DILocation(line: 359, column: 381, scope: !7638)
!7682 = !DILocation(line: 359, column: 370, scope: !7638)
!7683 = !DILocalVariable(name: "opacity", scope: !7638, file: !624, line: 359, type: !248)
!7684 = !DILocation(line: 359, column: 394, scope: !7638)
!7685 = !DILocation(line: 359, column: 404, scope: !7638)
!7686 = !DILocation(line: 359, column: 411, scope: !7638)
!7687 = !DILocalVariable(name: "i", scope: !7638, file: !624, line: 359, type: !238)
!7688 = !DILocation(line: 359, column: 424, scope: !7638)
!7689 = !DILocalVariable(name: "j", scope: !7638, file: !624, line: 359, type: !238)
!7690 = !DILocation(line: 359, column: 427, scope: !7638)
!7691 = !DILocation(line: 359, column: 443, scope: !7638)
!7692 = !DILocation(line: 359, column: 462, scope: !7638)
!7693 = !DILocation(line: 359, column: 484, scope: !7638)
!7694 = !DILocation(line: 359, column: 497, scope: !7647)
!7695 = !DILocation(line: 359, column: 495, scope: !7647)
!7696 = !DILocation(line: 359, column: 502, scope: !7697)
!7697 = !DILexicalBlockFile(scope: !7646, file: !624, discriminator: 1)
!7698 = !DILocation(line: 359, column: 506, scope: !7697)
!7699 = !DILocation(line: 359, column: 504, scope: !7697)
!7700 = !DILocation(line: 359, column: 490, scope: !7697)
!7701 = !DILocation(line: 359, column: 528, scope: !7702)
!7702 = !DILexicalBlockFile(scope: !7644, file: !624, discriminator: 2)
!7703 = !DILocation(line: 359, column: 526, scope: !7702)
!7704 = !DILocation(line: 359, column: 533, scope: !7705)
!7705 = !DILexicalBlockFile(scope: !7643, file: !624, discriminator: 3)
!7706 = !DILocation(line: 359, column: 537, scope: !7705)
!7707 = !DILocation(line: 359, column: 535, scope: !7705)
!7708 = !DILocation(line: 359, column: 521, scope: !7705)
!7709 = !DILocation(line: 359, column: 564, scope: !7710)
!7710 = !DILexicalBlockFile(scope: !7642, file: !624, discriminator: 4)
!7711 = !DILocation(line: 359, column: 560, scope: !7710)
!7712 = !DILocation(line: 359, column: 601, scope: !7710)
!7713 = !DILocation(line: 359, column: 594, scope: !7710)
!7714 = !DILocation(line: 359, column: 604, scope: !7710)
!7715 = !DILocation(line: 359, column: 593, scope: !7710)
!7716 = !DILocation(line: 359, column: 620, scope: !7717)
!7717 = !DILexicalBlockFile(scope: !7642, file: !624, discriminator: 5)
!7718 = !DILocation(line: 359, column: 613, scope: !7717)
!7719 = !DILocation(line: 359, column: 633, scope: !7717)
!7720 = !DILocation(line: 359, column: 629, scope: !7717)
!7721 = !DILocation(line: 359, column: 627, scope: !7717)
!7722 = !DILocation(line: 359, column: 623, scope: !7717)
!7723 = !DILocation(line: 359, column: 636, scope: !7717)
!7724 = !DILocation(line: 359, column: 593, scope: !7717)
!7725 = !DILocation(line: 359, column: 652, scope: !7726)
!7726 = !DILexicalBlockFile(scope: !7642, file: !624, discriminator: 6)
!7727 = !DILocation(line: 359, column: 645, scope: !7726)
!7728 = !DILocation(line: 359, column: 666, scope: !7726)
!7729 = !DILocation(line: 359, column: 662, scope: !7726)
!7730 = !DILocation(line: 359, column: 669, scope: !7726)
!7731 = !DILocation(line: 359, column: 659, scope: !7726)
!7732 = !DILocation(line: 359, column: 655, scope: !7726)
!7733 = !DILocation(line: 359, column: 593, scope: !7726)
!7734 = !DILocation(line: 359, column: 593, scope: !7641)
!7735 = !DILocation(line: 359, column: 576, scope: !7641)
!7736 = !DILocation(line: 231, column: 9, scope: !5547, inlinedAt: !7640)
!7737 = !DILocation(line: 231, column: 19, scope: !5547, inlinedAt: !7640)
!7738 = !DILocation(line: 231, column: 17, scope: !5547, inlinedAt: !7640)
!7739 = !DILocation(line: 231, column: 22, scope: !5547, inlinedAt: !7640)
!7740 = !DILocation(line: 231, column: 13, scope: !5547, inlinedAt: !7640)
!7741 = !DILocation(line: 231, column: 11, scope: !5547, inlinedAt: !7640)
!7742 = !DILocation(line: 231, column: 9, scope: !5463, inlinedAt: !7640)
!7743 = !DILocation(line: 231, column: 37, scope: !5555, inlinedAt: !7640)
!7744 = !DILocation(line: 231, column: 36, scope: !5555, inlinedAt: !7640)
!7745 = !DILocation(line: 231, column: 40, scope: !5555, inlinedAt: !7640)
!7746 = !DILocation(line: 231, column: 53, scope: !5555, inlinedAt: !7640)
!7747 = !DILocation(line: 231, column: 51, scope: !5555, inlinedAt: !7640)
!7748 = !DILocation(line: 231, column: 56, scope: !5555, inlinedAt: !7640)
!7749 = !DILocation(line: 231, column: 46, scope: !5555, inlinedAt: !7640)
!7750 = !DILocation(line: 231, column: 28, scope: !5555, inlinedAt: !7640)
!7751 = !DILocation(line: 232, column: 17, scope: !5547, inlinedAt: !7640)
!7752 = !DILocation(line: 232, column: 10, scope: !5547, inlinedAt: !7640)
!7753 = !DILocation(line: 233, column: 1, scope: !5463, inlinedAt: !7640)
!7754 = !DILocation(line: 359, column: 688, scope: !7641)
!7755 = !DILocation(line: 359, column: 684, scope: !7641)
!7756 = !DILocation(line: 359, column: 682, scope: !7641)
!7757 = !DILocation(line: 359, column: 569, scope: !7641)
!7758 = !DILocation(line: 359, column: 694, scope: !7641)
!7759 = !DILocation(line: 359, column: 692, scope: !7641)
!7760 = !DILocation(line: 359, column: 567, scope: !7641)
!7761 = !DILocation(line: 359, column: 560, scope: !7641)
!7762 = !DILocation(line: 359, column: 555, scope: !7641)
!7763 = !DILocation(line: 359, column: 551, scope: !7641)
!7764 = !DILocation(line: 359, column: 558, scope: !7641)
!7765 = !DILocation(line: 359, column: 703, scope: !7641)
!7766 = !DILocation(line: 359, column: 545, scope: !7767)
!7767 = !DILexicalBlockFile(scope: !7643, file: !624, discriminator: 8)
!7768 = !DILocation(line: 359, column: 521, scope: !7767)
!7769 = distinct !{!7769, !7770}
!7770 = !DILocation(line: 359, column: 521, scope: !7645)
!7771 = !DILocation(line: 359, column: 712, scope: !7772)
!7772 = !DILexicalBlockFile(scope: !7645, file: !624, discriminator: 9)
!7773 = !DILocation(line: 359, column: 709, scope: !7772)
!7774 = !DILocation(line: 359, column: 733, scope: !7772)
!7775 = !DILocation(line: 359, column: 730, scope: !7772)
!7776 = !DILocation(line: 359, column: 757, scope: !7772)
!7777 = !DILocation(line: 359, column: 754, scope: !7772)
!7778 = !DILocation(line: 359, column: 774, scope: !7772)
!7779 = !DILocation(line: 359, column: 515, scope: !7780)
!7780 = !DILexicalBlockFile(scope: !7646, file: !624, discriminator: 10)
!7781 = !DILocation(line: 359, column: 490, scope: !7780)
!7782 = distinct !{!7782, !7783}
!7783 = !DILocation(line: 359, column: 490, scope: !7638)
!7784 = !DILocation(line: 359, column: 776, scope: !7785)
!7785 = !DILexicalBlockFile(scope: !7638, file: !624, discriminator: 11)
!7786 = distinct !DISubprogram(name: "blend_multiply_10bit", scope: !624, file: !624, line: 332, type: !1531, isLocal: true, isDefinition: true, scopeLine: 332, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!7787 = !DILocalVariable(name: "_top", arg: 1, scope: !7786, file: !624, line: 332, type: !900)
!7788 = !DILocation(line: 332, column: 49, scope: !7786)
!7789 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !7786, file: !624, line: 332, type: !902)
!7790 = !DILocation(line: 332, column: 65, scope: !7786)
!7791 = !DILocalVariable(name: "_bottom", arg: 3, scope: !7786, file: !624, line: 332, type: !900)
!7792 = !DILocation(line: 332, column: 94, scope: !7786)
!7793 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !7786, file: !624, line: 332, type: !902)
!7794 = !DILocation(line: 332, column: 113, scope: !7786)
!7795 = !DILocalVariable(name: "_dst", arg: 5, scope: !7786, file: !624, line: 332, type: !329)
!7796 = !DILocation(line: 332, column: 139, scope: !7786)
!7797 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !7786, file: !624, line: 332, type: !902)
!7798 = !DILocation(line: 332, column: 155, scope: !7786)
!7799 = !DILocalVariable(name: "width", arg: 7, scope: !7786, file: !624, line: 332, type: !902)
!7800 = !DILocation(line: 332, column: 179, scope: !7786)
!7801 = !DILocalVariable(name: "height", arg: 8, scope: !7786, file: !624, line: 332, type: !902)
!7802 = !DILocation(line: 332, column: 196, scope: !7786)
!7803 = !DILocalVariable(name: "param", arg: 9, scope: !7786, file: !624, line: 332, type: !884)
!7804 = !DILocation(line: 332, column: 218, scope: !7786)
!7805 = !DILocalVariable(name: "values", arg: 10, scope: !7786, file: !624, line: 332, type: !544)
!7806 = !DILocation(line: 332, column: 233, scope: !7786)
!7807 = !DILocalVariable(name: "starty", arg: 11, scope: !7786, file: !624, line: 332, type: !238)
!7808 = !DILocation(line: 332, column: 245, scope: !7786)
!7809 = !DILocalVariable(name: "top", scope: !7786, file: !624, line: 332, type: !839)
!7810 = !DILocation(line: 332, column: 271, scope: !7786)
!7811 = !DILocation(line: 332, column: 294, scope: !7786)
!7812 = !DILocation(line: 332, column: 277, scope: !7786)
!7813 = !DILocalVariable(name: "bottom", scope: !7786, file: !624, line: 332, type: !839)
!7814 = !DILocation(line: 332, column: 316, scope: !7786)
!7815 = !DILocation(line: 332, column: 342, scope: !7786)
!7816 = !DILocation(line: 332, column: 325, scope: !7786)
!7817 = !DILocalVariable(name: "dst", scope: !7786, file: !624, line: 332, type: !843)
!7818 = !DILocation(line: 332, column: 361, scope: !7786)
!7819 = !DILocation(line: 332, column: 378, scope: !7786)
!7820 = !DILocation(line: 332, column: 367, scope: !7786)
!7821 = !DILocalVariable(name: "opacity", scope: !7786, file: !624, line: 332, type: !248)
!7822 = !DILocation(line: 332, column: 391, scope: !7786)
!7823 = !DILocation(line: 332, column: 401, scope: !7786)
!7824 = !DILocation(line: 332, column: 408, scope: !7786)
!7825 = !DILocalVariable(name: "i", scope: !7786, file: !624, line: 332, type: !238)
!7826 = !DILocation(line: 332, column: 421, scope: !7786)
!7827 = !DILocalVariable(name: "j", scope: !7786, file: !624, line: 332, type: !238)
!7828 = !DILocation(line: 332, column: 424, scope: !7786)
!7829 = !DILocation(line: 332, column: 440, scope: !7786)
!7830 = !DILocation(line: 332, column: 459, scope: !7786)
!7831 = !DILocation(line: 332, column: 481, scope: !7786)
!7832 = !DILocation(line: 332, column: 494, scope: !7833)
!7833 = distinct !DILexicalBlock(scope: !7786, file: !624, line: 332, column: 487)
!7834 = !DILocation(line: 332, column: 492, scope: !7833)
!7835 = !DILocation(line: 332, column: 499, scope: !7836)
!7836 = !DILexicalBlockFile(scope: !7837, file: !624, discriminator: 1)
!7837 = distinct !DILexicalBlock(scope: !7833, file: !624, line: 332, column: 487)
!7838 = !DILocation(line: 332, column: 503, scope: !7836)
!7839 = !DILocation(line: 332, column: 501, scope: !7836)
!7840 = !DILocation(line: 332, column: 487, scope: !7836)
!7841 = !DILocation(line: 332, column: 525, scope: !7842)
!7842 = !DILexicalBlockFile(scope: !7843, file: !624, discriminator: 2)
!7843 = distinct !DILexicalBlock(scope: !7844, file: !624, line: 332, column: 518)
!7844 = distinct !DILexicalBlock(scope: !7837, file: !624, line: 332, column: 516)
!7845 = !DILocation(line: 332, column: 523, scope: !7842)
!7846 = !DILocation(line: 332, column: 530, scope: !7847)
!7847 = !DILexicalBlockFile(scope: !7848, file: !624, discriminator: 3)
!7848 = distinct !DILexicalBlock(scope: !7843, file: !624, line: 332, column: 518)
!7849 = !DILocation(line: 332, column: 534, scope: !7847)
!7850 = !DILocation(line: 332, column: 532, scope: !7847)
!7851 = !DILocation(line: 332, column: 518, scope: !7847)
!7852 = !DILocation(line: 332, column: 561, scope: !7853)
!7853 = !DILexicalBlockFile(scope: !7854, file: !624, discriminator: 4)
!7854 = distinct !DILexicalBlock(scope: !7848, file: !624, line: 332, column: 546)
!7855 = !DILocation(line: 332, column: 557, scope: !7853)
!7856 = !DILocation(line: 332, column: 582, scope: !7853)
!7857 = !DILocation(line: 332, column: 578, scope: !7853)
!7858 = !DILocation(line: 332, column: 577, scope: !7853)
!7859 = !DILocation(line: 332, column: 596, scope: !7853)
!7860 = !DILocation(line: 332, column: 589, scope: !7853)
!7861 = !DILocation(line: 332, column: 588, scope: !7853)
!7862 = !DILocation(line: 332, column: 586, scope: !7853)
!7863 = !DILocation(line: 332, column: 601, scope: !7853)
!7864 = !DILocation(line: 332, column: 573, scope: !7853)
!7865 = !DILocation(line: 332, column: 617, scope: !7853)
!7866 = !DILocation(line: 332, column: 613, scope: !7853)
!7867 = !DILocation(line: 332, column: 611, scope: !7853)
!7868 = !DILocation(line: 332, column: 566, scope: !7853)
!7869 = !DILocation(line: 332, column: 623, scope: !7853)
!7870 = !DILocation(line: 332, column: 621, scope: !7853)
!7871 = !DILocation(line: 332, column: 564, scope: !7853)
!7872 = !DILocation(line: 332, column: 552, scope: !7853)
!7873 = !DILocation(line: 332, column: 548, scope: !7853)
!7874 = !DILocation(line: 332, column: 555, scope: !7853)
!7875 = !DILocation(line: 332, column: 632, scope: !7853)
!7876 = !DILocation(line: 332, column: 542, scope: !7877)
!7877 = !DILexicalBlockFile(scope: !7848, file: !624, discriminator: 5)
!7878 = !DILocation(line: 332, column: 518, scope: !7877)
!7879 = distinct !{!7879, !7880}
!7880 = !DILocation(line: 332, column: 518, scope: !7844)
!7881 = !DILocation(line: 332, column: 641, scope: !7882)
!7882 = !DILexicalBlockFile(scope: !7844, file: !624, discriminator: 6)
!7883 = !DILocation(line: 332, column: 638, scope: !7882)
!7884 = !DILocation(line: 332, column: 662, scope: !7882)
!7885 = !DILocation(line: 332, column: 659, scope: !7882)
!7886 = !DILocation(line: 332, column: 686, scope: !7882)
!7887 = !DILocation(line: 332, column: 683, scope: !7882)
!7888 = !DILocation(line: 332, column: 703, scope: !7882)
!7889 = !DILocation(line: 332, column: 512, scope: !7890)
!7890 = !DILexicalBlockFile(scope: !7837, file: !624, discriminator: 7)
!7891 = !DILocation(line: 332, column: 487, scope: !7890)
!7892 = distinct !{!7892, !7893}
!7893 = !DILocation(line: 332, column: 487, scope: !7786)
!7894 = !DILocation(line: 332, column: 705, scope: !7895)
!7895 = !DILexicalBlockFile(scope: !7786, file: !624, discriminator: 8)
!7896 = distinct !DISubprogram(name: "blend_multiply128_10bit", scope: !624, file: !624, line: 333, type: !1531, isLocal: true, isDefinition: true, scopeLine: 333, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!7897 = !DILocation(line: 229, column: 99, scope: !5463, inlinedAt: !7898)
!7898 = distinct !DILocation(line: 333, column: 576, scope: !7899)
!7899 = !DILexicalBlockFile(scope: !7900, file: !624, discriminator: 4)
!7900 = distinct !DILexicalBlock(scope: !7901, file: !624, line: 333, column: 549)
!7901 = distinct !DILexicalBlock(scope: !7902, file: !624, line: 333, column: 521)
!7902 = distinct !DILexicalBlock(scope: !7903, file: !624, line: 333, column: 521)
!7903 = distinct !DILexicalBlock(scope: !7904, file: !624, line: 333, column: 519)
!7904 = distinct !DILexicalBlock(scope: !7905, file: !624, line: 333, column: 490)
!7905 = distinct !DILexicalBlock(scope: !7896, file: !624, line: 333, column: 490)
!7906 = !DILocation(line: 229, column: 106, scope: !5463, inlinedAt: !7898)
!7907 = !DILocalVariable(name: "_top", arg: 1, scope: !7896, file: !624, line: 333, type: !900)
!7908 = !DILocation(line: 333, column: 52, scope: !7896)
!7909 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !7896, file: !624, line: 333, type: !902)
!7910 = !DILocation(line: 333, column: 68, scope: !7896)
!7911 = !DILocalVariable(name: "_bottom", arg: 3, scope: !7896, file: !624, line: 333, type: !900)
!7912 = !DILocation(line: 333, column: 97, scope: !7896)
!7913 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !7896, file: !624, line: 333, type: !902)
!7914 = !DILocation(line: 333, column: 116, scope: !7896)
!7915 = !DILocalVariable(name: "_dst", arg: 5, scope: !7896, file: !624, line: 333, type: !329)
!7916 = !DILocation(line: 333, column: 142, scope: !7896)
!7917 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !7896, file: !624, line: 333, type: !902)
!7918 = !DILocation(line: 333, column: 158, scope: !7896)
!7919 = !DILocalVariable(name: "width", arg: 7, scope: !7896, file: !624, line: 333, type: !902)
!7920 = !DILocation(line: 333, column: 182, scope: !7896)
!7921 = !DILocalVariable(name: "height", arg: 8, scope: !7896, file: !624, line: 333, type: !902)
!7922 = !DILocation(line: 333, column: 199, scope: !7896)
!7923 = !DILocalVariable(name: "param", arg: 9, scope: !7896, file: !624, line: 333, type: !884)
!7924 = !DILocation(line: 333, column: 221, scope: !7896)
!7925 = !DILocalVariable(name: "values", arg: 10, scope: !7896, file: !624, line: 333, type: !544)
!7926 = !DILocation(line: 333, column: 236, scope: !7896)
!7927 = !DILocalVariable(name: "starty", arg: 11, scope: !7896, file: !624, line: 333, type: !238)
!7928 = !DILocation(line: 333, column: 248, scope: !7896)
!7929 = !DILocalVariable(name: "top", scope: !7896, file: !624, line: 333, type: !839)
!7930 = !DILocation(line: 333, column: 274, scope: !7896)
!7931 = !DILocation(line: 333, column: 297, scope: !7896)
!7932 = !DILocation(line: 333, column: 280, scope: !7896)
!7933 = !DILocalVariable(name: "bottom", scope: !7896, file: !624, line: 333, type: !839)
!7934 = !DILocation(line: 333, column: 319, scope: !7896)
!7935 = !DILocation(line: 333, column: 345, scope: !7896)
!7936 = !DILocation(line: 333, column: 328, scope: !7896)
!7937 = !DILocalVariable(name: "dst", scope: !7896, file: !624, line: 333, type: !843)
!7938 = !DILocation(line: 333, column: 364, scope: !7896)
!7939 = !DILocation(line: 333, column: 381, scope: !7896)
!7940 = !DILocation(line: 333, column: 370, scope: !7896)
!7941 = !DILocalVariable(name: "opacity", scope: !7896, file: !624, line: 333, type: !248)
!7942 = !DILocation(line: 333, column: 394, scope: !7896)
!7943 = !DILocation(line: 333, column: 404, scope: !7896)
!7944 = !DILocation(line: 333, column: 411, scope: !7896)
!7945 = !DILocalVariable(name: "i", scope: !7896, file: !624, line: 333, type: !238)
!7946 = !DILocation(line: 333, column: 424, scope: !7896)
!7947 = !DILocalVariable(name: "j", scope: !7896, file: !624, line: 333, type: !238)
!7948 = !DILocation(line: 333, column: 427, scope: !7896)
!7949 = !DILocation(line: 333, column: 443, scope: !7896)
!7950 = !DILocation(line: 333, column: 462, scope: !7896)
!7951 = !DILocation(line: 333, column: 484, scope: !7896)
!7952 = !DILocation(line: 333, column: 497, scope: !7905)
!7953 = !DILocation(line: 333, column: 495, scope: !7905)
!7954 = !DILocation(line: 333, column: 502, scope: !7955)
!7955 = !DILexicalBlockFile(scope: !7904, file: !624, discriminator: 1)
!7956 = !DILocation(line: 333, column: 506, scope: !7955)
!7957 = !DILocation(line: 333, column: 504, scope: !7955)
!7958 = !DILocation(line: 333, column: 490, scope: !7955)
!7959 = !DILocation(line: 333, column: 528, scope: !7960)
!7960 = !DILexicalBlockFile(scope: !7902, file: !624, discriminator: 2)
!7961 = !DILocation(line: 333, column: 526, scope: !7960)
!7962 = !DILocation(line: 333, column: 533, scope: !7963)
!7963 = !DILexicalBlockFile(scope: !7901, file: !624, discriminator: 3)
!7964 = !DILocation(line: 333, column: 537, scope: !7963)
!7965 = !DILocation(line: 333, column: 535, scope: !7963)
!7966 = !DILocation(line: 333, column: 521, scope: !7963)
!7967 = !DILocation(line: 333, column: 564, scope: !7899)
!7968 = !DILocation(line: 333, column: 560, scope: !7899)
!7969 = !DILocation(line: 333, column: 598, scope: !7899)
!7970 = !DILocation(line: 333, column: 594, scope: !7899)
!7971 = !DILocation(line: 333, column: 601, scope: !7899)
!7972 = !DILocation(line: 333, column: 617, scope: !7899)
!7973 = !DILocation(line: 333, column: 610, scope: !7899)
!7974 = !DILocation(line: 333, column: 608, scope: !7899)
!7975 = !DILocation(line: 333, column: 593, scope: !7899)
!7976 = !DILocation(line: 333, column: 620, scope: !7899)
!7977 = !DILocation(line: 333, column: 627, scope: !7899)
!7978 = !DILocation(line: 333, column: 576, scope: !7899)
!7979 = !DILocation(line: 231, column: 9, scope: !5547, inlinedAt: !7898)
!7980 = !DILocation(line: 231, column: 19, scope: !5547, inlinedAt: !7898)
!7981 = !DILocation(line: 231, column: 17, scope: !5547, inlinedAt: !7898)
!7982 = !DILocation(line: 231, column: 22, scope: !5547, inlinedAt: !7898)
!7983 = !DILocation(line: 231, column: 13, scope: !5547, inlinedAt: !7898)
!7984 = !DILocation(line: 231, column: 11, scope: !5547, inlinedAt: !7898)
!7985 = !DILocation(line: 231, column: 9, scope: !5463, inlinedAt: !7898)
!7986 = !DILocation(line: 231, column: 37, scope: !5555, inlinedAt: !7898)
!7987 = !DILocation(line: 231, column: 36, scope: !5555, inlinedAt: !7898)
!7988 = !DILocation(line: 231, column: 40, scope: !5555, inlinedAt: !7898)
!7989 = !DILocation(line: 231, column: 53, scope: !5555, inlinedAt: !7898)
!7990 = !DILocation(line: 231, column: 51, scope: !5555, inlinedAt: !7898)
!7991 = !DILocation(line: 231, column: 56, scope: !5555, inlinedAt: !7898)
!7992 = !DILocation(line: 231, column: 46, scope: !5555, inlinedAt: !7898)
!7993 = !DILocation(line: 231, column: 28, scope: !5555, inlinedAt: !7898)
!7994 = !DILocation(line: 232, column: 17, scope: !5547, inlinedAt: !7898)
!7995 = !DILocation(line: 232, column: 10, scope: !5547, inlinedAt: !7898)
!7996 = !DILocation(line: 233, column: 1, scope: !5463, inlinedAt: !7898)
!7997 = !DILocation(line: 333, column: 645, scope: !7899)
!7998 = !DILocation(line: 333, column: 641, scope: !7899)
!7999 = !DILocation(line: 333, column: 639, scope: !7899)
!8000 = !DILocation(line: 333, column: 569, scope: !7899)
!8001 = !DILocation(line: 333, column: 651, scope: !7899)
!8002 = !DILocation(line: 333, column: 649, scope: !7899)
!8003 = !DILocation(line: 333, column: 567, scope: !7899)
!8004 = !DILocation(line: 333, column: 555, scope: !7899)
!8005 = !DILocation(line: 333, column: 551, scope: !7899)
!8006 = !DILocation(line: 333, column: 558, scope: !7899)
!8007 = !DILocation(line: 333, column: 660, scope: !7899)
!8008 = !DILocation(line: 333, column: 545, scope: !8009)
!8009 = !DILexicalBlockFile(scope: !7901, file: !624, discriminator: 5)
!8010 = !DILocation(line: 333, column: 521, scope: !8009)
!8011 = distinct !{!8011, !8012}
!8012 = !DILocation(line: 333, column: 521, scope: !7903)
!8013 = !DILocation(line: 333, column: 669, scope: !8014)
!8014 = !DILexicalBlockFile(scope: !7903, file: !624, discriminator: 6)
!8015 = !DILocation(line: 333, column: 666, scope: !8014)
!8016 = !DILocation(line: 333, column: 690, scope: !8014)
!8017 = !DILocation(line: 333, column: 687, scope: !8014)
!8018 = !DILocation(line: 333, column: 714, scope: !8014)
!8019 = !DILocation(line: 333, column: 711, scope: !8014)
!8020 = !DILocation(line: 333, column: 731, scope: !8014)
!8021 = !DILocation(line: 333, column: 515, scope: !8022)
!8022 = !DILexicalBlockFile(scope: !7904, file: !624, discriminator: 7)
!8023 = !DILocation(line: 333, column: 490, scope: !8022)
!8024 = distinct !{!8024, !8025}
!8025 = !DILocation(line: 333, column: 490, scope: !7896)
!8026 = !DILocation(line: 333, column: 733, scope: !8027)
!8027 = !DILexicalBlockFile(scope: !7896, file: !624, discriminator: 8)
!8028 = distinct !DISubprogram(name: "blend_negation_10bit", scope: !624, file: !624, line: 334, type: !1531, isLocal: true, isDefinition: true, scopeLine: 334, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!8029 = !DILocalVariable(name: "_top", arg: 1, scope: !8028, file: !624, line: 334, type: !900)
!8030 = !DILocation(line: 334, column: 49, scope: !8028)
!8031 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !8028, file: !624, line: 334, type: !902)
!8032 = !DILocation(line: 334, column: 65, scope: !8028)
!8033 = !DILocalVariable(name: "_bottom", arg: 3, scope: !8028, file: !624, line: 334, type: !900)
!8034 = !DILocation(line: 334, column: 94, scope: !8028)
!8035 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !8028, file: !624, line: 334, type: !902)
!8036 = !DILocation(line: 334, column: 113, scope: !8028)
!8037 = !DILocalVariable(name: "_dst", arg: 5, scope: !8028, file: !624, line: 334, type: !329)
!8038 = !DILocation(line: 334, column: 139, scope: !8028)
!8039 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !8028, file: !624, line: 334, type: !902)
!8040 = !DILocation(line: 334, column: 155, scope: !8028)
!8041 = !DILocalVariable(name: "width", arg: 7, scope: !8028, file: !624, line: 334, type: !902)
!8042 = !DILocation(line: 334, column: 179, scope: !8028)
!8043 = !DILocalVariable(name: "height", arg: 8, scope: !8028, file: !624, line: 334, type: !902)
!8044 = !DILocation(line: 334, column: 196, scope: !8028)
!8045 = !DILocalVariable(name: "param", arg: 9, scope: !8028, file: !624, line: 334, type: !884)
!8046 = !DILocation(line: 334, column: 218, scope: !8028)
!8047 = !DILocalVariable(name: "values", arg: 10, scope: !8028, file: !624, line: 334, type: !544)
!8048 = !DILocation(line: 334, column: 233, scope: !8028)
!8049 = !DILocalVariable(name: "starty", arg: 11, scope: !8028, file: !624, line: 334, type: !238)
!8050 = !DILocation(line: 334, column: 245, scope: !8028)
!8051 = !DILocalVariable(name: "top", scope: !8028, file: !624, line: 334, type: !839)
!8052 = !DILocation(line: 334, column: 271, scope: !8028)
!8053 = !DILocation(line: 334, column: 294, scope: !8028)
!8054 = !DILocation(line: 334, column: 277, scope: !8028)
!8055 = !DILocalVariable(name: "bottom", scope: !8028, file: !624, line: 334, type: !839)
!8056 = !DILocation(line: 334, column: 316, scope: !8028)
!8057 = !DILocation(line: 334, column: 342, scope: !8028)
!8058 = !DILocation(line: 334, column: 325, scope: !8028)
!8059 = !DILocalVariable(name: "dst", scope: !8028, file: !624, line: 334, type: !843)
!8060 = !DILocation(line: 334, column: 361, scope: !8028)
!8061 = !DILocation(line: 334, column: 378, scope: !8028)
!8062 = !DILocation(line: 334, column: 367, scope: !8028)
!8063 = !DILocalVariable(name: "opacity", scope: !8028, file: !624, line: 334, type: !248)
!8064 = !DILocation(line: 334, column: 391, scope: !8028)
!8065 = !DILocation(line: 334, column: 401, scope: !8028)
!8066 = !DILocation(line: 334, column: 408, scope: !8028)
!8067 = !DILocalVariable(name: "i", scope: !8028, file: !624, line: 334, type: !238)
!8068 = !DILocation(line: 334, column: 421, scope: !8028)
!8069 = !DILocalVariable(name: "j", scope: !8028, file: !624, line: 334, type: !238)
!8070 = !DILocation(line: 334, column: 424, scope: !8028)
!8071 = !DILocation(line: 334, column: 440, scope: !8028)
!8072 = !DILocation(line: 334, column: 459, scope: !8028)
!8073 = !DILocation(line: 334, column: 481, scope: !8028)
!8074 = !DILocation(line: 334, column: 494, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !8028, file: !624, line: 334, column: 487)
!8076 = !DILocation(line: 334, column: 492, scope: !8075)
!8077 = !DILocation(line: 334, column: 499, scope: !8078)
!8078 = !DILexicalBlockFile(scope: !8079, file: !624, discriminator: 1)
!8079 = distinct !DILexicalBlock(scope: !8075, file: !624, line: 334, column: 487)
!8080 = !DILocation(line: 334, column: 503, scope: !8078)
!8081 = !DILocation(line: 334, column: 501, scope: !8078)
!8082 = !DILocation(line: 334, column: 487, scope: !8078)
!8083 = !DILocation(line: 334, column: 525, scope: !8084)
!8084 = !DILexicalBlockFile(scope: !8085, file: !624, discriminator: 2)
!8085 = distinct !DILexicalBlock(scope: !8086, file: !624, line: 334, column: 518)
!8086 = distinct !DILexicalBlock(scope: !8079, file: !624, line: 334, column: 516)
!8087 = !DILocation(line: 334, column: 523, scope: !8084)
!8088 = !DILocation(line: 334, column: 530, scope: !8089)
!8089 = !DILexicalBlockFile(scope: !8090, file: !624, discriminator: 3)
!8090 = distinct !DILexicalBlock(scope: !8085, file: !624, line: 334, column: 518)
!8091 = !DILocation(line: 334, column: 534, scope: !8089)
!8092 = !DILocation(line: 334, column: 532, scope: !8089)
!8093 = !DILocation(line: 334, column: 518, scope: !8089)
!8094 = !DILocation(line: 334, column: 561, scope: !8095)
!8095 = !DILexicalBlockFile(scope: !8096, file: !624, discriminator: 4)
!8096 = distinct !DILexicalBlock(scope: !8090, file: !624, line: 334, column: 546)
!8097 = !DILocation(line: 334, column: 557, scope: !8095)
!8098 = !DILocation(line: 334, column: 588, scope: !8095)
!8099 = !DILocation(line: 334, column: 584, scope: !8095)
!8100 = !DILocation(line: 334, column: 582, scope: !8095)
!8101 = !DILocation(line: 334, column: 600, scope: !8095)
!8102 = !DILocation(line: 334, column: 593, scope: !8095)
!8103 = !DILocation(line: 334, column: 591, scope: !8095)
!8104 = !DILocation(line: 334, column: 604, scope: !8095)
!8105 = !DILocation(line: 334, column: 576, scope: !8095)
!8106 = !DILocation(line: 334, column: 623, scope: !8107)
!8107 = !DILexicalBlockFile(scope: !8096, file: !624, discriminator: 5)
!8108 = !DILocation(line: 334, column: 619, scope: !8107)
!8109 = !DILocation(line: 334, column: 617, scope: !8107)
!8110 = !DILocation(line: 334, column: 635, scope: !8107)
!8111 = !DILocation(line: 334, column: 628, scope: !8107)
!8112 = !DILocation(line: 334, column: 626, scope: !8107)
!8113 = !DILocation(line: 334, column: 576, scope: !8107)
!8114 = !DILocation(line: 334, column: 655, scope: !8115)
!8115 = !DILexicalBlockFile(scope: !8096, file: !624, discriminator: 6)
!8116 = !DILocation(line: 334, column: 651, scope: !8115)
!8117 = !DILocation(line: 334, column: 649, scope: !8115)
!8118 = !DILocation(line: 334, column: 667, scope: !8115)
!8119 = !DILocation(line: 334, column: 660, scope: !8115)
!8120 = !DILocation(line: 334, column: 658, scope: !8115)
!8121 = !DILocation(line: 334, column: 642, scope: !8115)
!8122 = !DILocation(line: 334, column: 576, scope: !8115)
!8123 = !DILocation(line: 334, column: 576, scope: !8124)
!8124 = !DILexicalBlockFile(scope: !8096, file: !624, discriminator: 7)
!8125 = !DILocation(line: 334, column: 573, scope: !8124)
!8126 = !DILocation(line: 334, column: 680, scope: !8124)
!8127 = !DILocation(line: 334, column: 676, scope: !8124)
!8128 = !DILocation(line: 334, column: 674, scope: !8124)
!8129 = !DILocation(line: 334, column: 566, scope: !8124)
!8130 = !DILocation(line: 334, column: 686, scope: !8124)
!8131 = !DILocation(line: 334, column: 684, scope: !8124)
!8132 = !DILocation(line: 334, column: 564, scope: !8124)
!8133 = !DILocation(line: 334, column: 557, scope: !8124)
!8134 = !DILocation(line: 334, column: 552, scope: !8124)
!8135 = !DILocation(line: 334, column: 548, scope: !8124)
!8136 = !DILocation(line: 334, column: 555, scope: !8124)
!8137 = !DILocation(line: 334, column: 695, scope: !8124)
!8138 = !DILocation(line: 334, column: 542, scope: !8139)
!8139 = !DILexicalBlockFile(scope: !8090, file: !624, discriminator: 8)
!8140 = !DILocation(line: 334, column: 518, scope: !8139)
!8141 = distinct !{!8141, !8142}
!8142 = !DILocation(line: 334, column: 518, scope: !8086)
!8143 = !DILocation(line: 334, column: 704, scope: !8144)
!8144 = !DILexicalBlockFile(scope: !8086, file: !624, discriminator: 9)
!8145 = !DILocation(line: 334, column: 701, scope: !8144)
!8146 = !DILocation(line: 334, column: 725, scope: !8144)
!8147 = !DILocation(line: 334, column: 722, scope: !8144)
!8148 = !DILocation(line: 334, column: 749, scope: !8144)
!8149 = !DILocation(line: 334, column: 746, scope: !8144)
!8150 = !DILocation(line: 334, column: 766, scope: !8144)
!8151 = !DILocation(line: 334, column: 512, scope: !8152)
!8152 = !DILexicalBlockFile(scope: !8079, file: !624, discriminator: 10)
!8153 = !DILocation(line: 334, column: 487, scope: !8152)
!8154 = distinct !{!8154, !8155}
!8155 = !DILocation(line: 334, column: 487, scope: !8028)
!8156 = !DILocation(line: 334, column: 768, scope: !8157)
!8157 = !DILexicalBlockFile(scope: !8028, file: !624, discriminator: 11)
!8158 = distinct !DISubprogram(name: "blend_copytop_16", scope: !624, file: !624, line: 139, type: !1531, isLocal: true, isDefinition: true, scopeLine: 139, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!8159 = !DILocalVariable(name: "top", arg: 1, scope: !8158, file: !624, line: 139, type: !900)
!8160 = !DILocation(line: 139, column: 45, scope: !8158)
!8161 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !8158, file: !624, line: 139, type: !902)
!8162 = !DILocation(line: 139, column: 60, scope: !8158)
!8163 = !DILocalVariable(name: "bottom", arg: 3, scope: !8158, file: !624, line: 139, type: !900)
!8164 = !DILocation(line: 139, column: 89, scope: !8158)
!8165 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !8158, file: !624, line: 139, type: !902)
!8166 = !DILocation(line: 139, column: 107, scope: !8158)
!8167 = !DILocalVariable(name: "dst", arg: 5, scope: !8158, file: !624, line: 139, type: !329)
!8168 = !DILocation(line: 139, column: 133, scope: !8158)
!8169 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !8158, file: !624, line: 139, type: !902)
!8170 = !DILocation(line: 139, column: 148, scope: !8158)
!8171 = !DILocalVariable(name: "width", arg: 7, scope: !8158, file: !624, line: 139, type: !902)
!8172 = !DILocation(line: 139, column: 172, scope: !8158)
!8173 = !DILocalVariable(name: "height", arg: 8, scope: !8158, file: !624, line: 139, type: !902)
!8174 = !DILocation(line: 139, column: 189, scope: !8158)
!8175 = !DILocalVariable(name: "param", arg: 9, scope: !8158, file: !624, line: 139, type: !884)
!8176 = !DILocation(line: 139, column: 211, scope: !8158)
!8177 = !DILocalVariable(name: "values", arg: 10, scope: !8158, file: !624, line: 139, type: !544)
!8178 = !DILocation(line: 139, column: 226, scope: !8158)
!8179 = !DILocalVariable(name: "starty", arg: 11, scope: !8158, file: !624, line: 139, type: !238)
!8180 = !DILocation(line: 139, column: 238, scope: !8158)
!8181 = !DILocation(line: 139, column: 268, scope: !8158)
!8182 = !DILocation(line: 139, column: 273, scope: !8158)
!8183 = !DILocation(line: 139, column: 287, scope: !8158)
!8184 = !DILocation(line: 139, column: 292, scope: !8158)
!8185 = !DILocation(line: 139, column: 306, scope: !8158)
!8186 = !DILocation(line: 139, column: 312, scope: !8158)
!8187 = !DILocation(line: 139, column: 317, scope: !8158)
!8188 = !DILocation(line: 139, column: 322, scope: !8158)
!8189 = !DILocation(line: 139, column: 248, scope: !8158)
!8190 = !DILocation(line: 139, column: 331, scope: !8158)
!8191 = distinct !DISubprogram(name: "blend_copybottom_16", scope: !624, file: !624, line: 140, type: !1531, isLocal: true, isDefinition: true, scopeLine: 140, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!8192 = !DILocalVariable(name: "top", arg: 1, scope: !8191, file: !624, line: 140, type: !900)
!8193 = !DILocation(line: 140, column: 48, scope: !8191)
!8194 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !8191, file: !624, line: 140, type: !902)
!8195 = !DILocation(line: 140, column: 63, scope: !8191)
!8196 = !DILocalVariable(name: "bottom", arg: 3, scope: !8191, file: !624, line: 140, type: !900)
!8197 = !DILocation(line: 140, column: 92, scope: !8191)
!8198 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !8191, file: !624, line: 140, type: !902)
!8199 = !DILocation(line: 140, column: 110, scope: !8191)
!8200 = !DILocalVariable(name: "dst", arg: 5, scope: !8191, file: !624, line: 140, type: !329)
!8201 = !DILocation(line: 140, column: 136, scope: !8191)
!8202 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !8191, file: !624, line: 140, type: !902)
!8203 = !DILocation(line: 140, column: 151, scope: !8191)
!8204 = !DILocalVariable(name: "width", arg: 7, scope: !8191, file: !624, line: 140, type: !902)
!8205 = !DILocation(line: 140, column: 175, scope: !8191)
!8206 = !DILocalVariable(name: "height", arg: 8, scope: !8191, file: !624, line: 140, type: !902)
!8207 = !DILocation(line: 140, column: 192, scope: !8191)
!8208 = !DILocalVariable(name: "param", arg: 9, scope: !8191, file: !624, line: 140, type: !884)
!8209 = !DILocation(line: 140, column: 214, scope: !8191)
!8210 = !DILocalVariable(name: "values", arg: 10, scope: !8191, file: !624, line: 140, type: !544)
!8211 = !DILocation(line: 140, column: 229, scope: !8191)
!8212 = !DILocalVariable(name: "starty", arg: 11, scope: !8191, file: !624, line: 140, type: !238)
!8213 = !DILocation(line: 140, column: 241, scope: !8191)
!8214 = !DILocation(line: 140, column: 271, scope: !8191)
!8215 = !DILocation(line: 140, column: 276, scope: !8191)
!8216 = !DILocation(line: 140, column: 290, scope: !8191)
!8217 = !DILocation(line: 140, column: 298, scope: !8191)
!8218 = !DILocation(line: 140, column: 315, scope: !8191)
!8219 = !DILocation(line: 140, column: 321, scope: !8191)
!8220 = !DILocation(line: 140, column: 326, scope: !8191)
!8221 = !DILocation(line: 140, column: 331, scope: !8191)
!8222 = !DILocation(line: 140, column: 251, scope: !8191)
!8223 = !DILocation(line: 140, column: 340, scope: !8191)
!8224 = distinct !DISubprogram(name: "blend_normal_16bit", scope: !624, file: !624, line: 163, type: !1531, isLocal: true, isDefinition: true, scopeLine: 168, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!8225 = !DILocalVariable(name: "_top", arg: 1, scope: !8224, file: !624, line: 163, type: !900)
!8226 = !DILocation(line: 163, column: 47, scope: !8224)
!8227 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !8224, file: !624, line: 163, type: !902)
!8228 = !DILocation(line: 163, column: 63, scope: !8224)
!8229 = !DILocalVariable(name: "_bottom", arg: 3, scope: !8224, file: !624, line: 164, type: !900)
!8230 = !DILocation(line: 164, column: 50, scope: !8224)
!8231 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !8224, file: !624, line: 164, type: !902)
!8232 = !DILocation(line: 164, column: 69, scope: !8224)
!8233 = !DILocalVariable(name: "_dst", arg: 5, scope: !8224, file: !624, line: 165, type: !329)
!8234 = !DILocation(line: 165, column: 44, scope: !8224)
!8235 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !8224, file: !624, line: 165, type: !902)
!8236 = !DILocation(line: 165, column: 60, scope: !8224)
!8237 = !DILocalVariable(name: "width", arg: 7, scope: !8224, file: !624, line: 166, type: !902)
!8238 = !DILocation(line: 166, column: 45, scope: !8224)
!8239 = !DILocalVariable(name: "height", arg: 8, scope: !8224, file: !624, line: 166, type: !902)
!8240 = !DILocation(line: 166, column: 62, scope: !8224)
!8241 = !DILocalVariable(name: "param", arg: 9, scope: !8224, file: !624, line: 167, type: !884)
!8242 = !DILocation(line: 167, column: 49, scope: !8224)
!8243 = !DILocalVariable(name: "values", arg: 10, scope: !8224, file: !624, line: 167, type: !544)
!8244 = !DILocation(line: 167, column: 64, scope: !8224)
!8245 = !DILocalVariable(name: "starty", arg: 11, scope: !8224, file: !624, line: 167, type: !238)
!8246 = !DILocation(line: 167, column: 76, scope: !8224)
!8247 = !DILocalVariable(name: "top", scope: !8224, file: !624, line: 169, type: !839)
!8248 = !DILocation(line: 169, column: 21, scope: !8224)
!8249 = !DILocation(line: 169, column: 38, scope: !8224)
!8250 = !DILocation(line: 169, column: 27, scope: !8224)
!8251 = !DILocalVariable(name: "bottom", scope: !8224, file: !624, line: 170, type: !839)
!8252 = !DILocation(line: 170, column: 21, scope: !8224)
!8253 = !DILocation(line: 170, column: 41, scope: !8224)
!8254 = !DILocation(line: 170, column: 30, scope: !8224)
!8255 = !DILocalVariable(name: "dst", scope: !8224, file: !624, line: 171, type: !843)
!8256 = !DILocation(line: 171, column: 15, scope: !8224)
!8257 = !DILocation(line: 171, column: 32, scope: !8224)
!8258 = !DILocation(line: 171, column: 21, scope: !8224)
!8259 = !DILocalVariable(name: "opacity", scope: !8224, file: !624, line: 172, type: !4074)
!8260 = !DILocation(line: 172, column: 18, scope: !8224)
!8261 = !DILocation(line: 172, column: 28, scope: !8224)
!8262 = !DILocation(line: 172, column: 35, scope: !8224)
!8263 = !DILocalVariable(name: "i", scope: !8224, file: !624, line: 173, type: !238)
!8264 = !DILocation(line: 173, column: 9, scope: !8224)
!8265 = !DILocalVariable(name: "j", scope: !8224, file: !624, line: 173, type: !238)
!8266 = !DILocation(line: 173, column: 12, scope: !8224)
!8267 = !DILocation(line: 174, column: 18, scope: !8224)
!8268 = !DILocation(line: 175, column: 18, scope: !8224)
!8269 = !DILocation(line: 176, column: 21, scope: !8224)
!8270 = !DILocation(line: 178, column: 12, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !8224, file: !624, line: 178, column: 5)
!8272 = !DILocation(line: 178, column: 10, scope: !8271)
!8273 = !DILocation(line: 178, column: 17, scope: !8274)
!8274 = !DILexicalBlockFile(scope: !8275, file: !624, discriminator: 1)
!8275 = distinct !DILexicalBlock(scope: !8271, file: !624, line: 178, column: 5)
!8276 = !DILocation(line: 178, column: 21, scope: !8274)
!8277 = !DILocation(line: 178, column: 19, scope: !8274)
!8278 = !DILocation(line: 178, column: 5, scope: !8274)
!8279 = !DILocation(line: 179, column: 16, scope: !8280)
!8280 = distinct !DILexicalBlock(scope: !8281, file: !624, line: 179, column: 9)
!8281 = distinct !DILexicalBlock(scope: !8275, file: !624, line: 178, column: 34)
!8282 = !DILocation(line: 179, column: 14, scope: !8280)
!8283 = !DILocation(line: 179, column: 21, scope: !8284)
!8284 = !DILexicalBlockFile(scope: !8285, file: !624, discriminator: 1)
!8285 = distinct !DILexicalBlock(scope: !8280, file: !624, line: 179, column: 9)
!8286 = !DILocation(line: 179, column: 25, scope: !8284)
!8287 = !DILocation(line: 179, column: 23, scope: !8284)
!8288 = !DILocation(line: 179, column: 9, scope: !8284)
!8289 = !DILocation(line: 180, column: 26, scope: !8290)
!8290 = distinct !DILexicalBlock(scope: !8285, file: !624, line: 179, column: 37)
!8291 = !DILocation(line: 180, column: 22, scope: !8290)
!8292 = !DILocation(line: 180, column: 31, scope: !8290)
!8293 = !DILocation(line: 180, column: 29, scope: !8290)
!8294 = !DILocation(line: 180, column: 48, scope: !8290)
!8295 = !DILocation(line: 180, column: 41, scope: !8290)
!8296 = !DILocation(line: 180, column: 59, scope: !8290)
!8297 = !DILocation(line: 180, column: 57, scope: !8290)
!8298 = !DILocation(line: 180, column: 51, scope: !8290)
!8299 = !DILocation(line: 180, column: 39, scope: !8290)
!8300 = !DILocation(line: 180, column: 17, scope: !8290)
!8301 = !DILocation(line: 180, column: 13, scope: !8290)
!8302 = !DILocation(line: 180, column: 20, scope: !8290)
!8303 = !DILocation(line: 181, column: 9, scope: !8290)
!8304 = !DILocation(line: 179, column: 33, scope: !8305)
!8305 = !DILexicalBlockFile(scope: !8285, file: !624, discriminator: 2)
!8306 = !DILocation(line: 179, column: 9, scope: !8305)
!8307 = distinct !{!8307, !8308}
!8308 = !DILocation(line: 179, column: 9, scope: !8281)
!8309 = !DILocation(line: 182, column: 16, scope: !8281)
!8310 = !DILocation(line: 182, column: 13, scope: !8281)
!8311 = !DILocation(line: 183, column: 16, scope: !8281)
!8312 = !DILocation(line: 183, column: 13, scope: !8281)
!8313 = !DILocation(line: 184, column: 19, scope: !8281)
!8314 = !DILocation(line: 184, column: 16, scope: !8281)
!8315 = !DILocation(line: 185, column: 5, scope: !8281)
!8316 = !DILocation(line: 178, column: 30, scope: !8317)
!8317 = !DILexicalBlockFile(scope: !8275, file: !624, discriminator: 2)
!8318 = !DILocation(line: 178, column: 5, scope: !8317)
!8319 = distinct !{!8319, !8320}
!8320 = !DILocation(line: 178, column: 5, scope: !8224)
!8321 = !DILocation(line: 186, column: 1, scope: !8224)
!8322 = distinct !DISubprogram(name: "blend_or_10bit", scope: !624, file: !624, line: 356, type: !1531, isLocal: true, isDefinition: true, scopeLine: 356, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!8323 = !DILocalVariable(name: "_top", arg: 1, scope: !8322, file: !624, line: 356, type: !900)
!8324 = !DILocation(line: 356, column: 43, scope: !8322)
!8325 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !8322, file: !624, line: 356, type: !902)
!8326 = !DILocation(line: 356, column: 59, scope: !8322)
!8327 = !DILocalVariable(name: "_bottom", arg: 3, scope: !8322, file: !624, line: 356, type: !900)
!8328 = !DILocation(line: 356, column: 88, scope: !8322)
!8329 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !8322, file: !624, line: 356, type: !902)
!8330 = !DILocation(line: 356, column: 107, scope: !8322)
!8331 = !DILocalVariable(name: "_dst", arg: 5, scope: !8322, file: !624, line: 356, type: !329)
!8332 = !DILocation(line: 356, column: 133, scope: !8322)
!8333 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !8322, file: !624, line: 356, type: !902)
!8334 = !DILocation(line: 356, column: 149, scope: !8322)
!8335 = !DILocalVariable(name: "width", arg: 7, scope: !8322, file: !624, line: 356, type: !902)
!8336 = !DILocation(line: 356, column: 173, scope: !8322)
!8337 = !DILocalVariable(name: "height", arg: 8, scope: !8322, file: !624, line: 356, type: !902)
!8338 = !DILocation(line: 356, column: 190, scope: !8322)
!8339 = !DILocalVariable(name: "param", arg: 9, scope: !8322, file: !624, line: 356, type: !884)
!8340 = !DILocation(line: 356, column: 212, scope: !8322)
!8341 = !DILocalVariable(name: "values", arg: 10, scope: !8322, file: !624, line: 356, type: !544)
!8342 = !DILocation(line: 356, column: 227, scope: !8322)
!8343 = !DILocalVariable(name: "starty", arg: 11, scope: !8322, file: !624, line: 356, type: !238)
!8344 = !DILocation(line: 356, column: 239, scope: !8322)
!8345 = !DILocalVariable(name: "top", scope: !8322, file: !624, line: 356, type: !839)
!8346 = !DILocation(line: 356, column: 265, scope: !8322)
!8347 = !DILocation(line: 356, column: 288, scope: !8322)
!8348 = !DILocation(line: 356, column: 271, scope: !8322)
!8349 = !DILocalVariable(name: "bottom", scope: !8322, file: !624, line: 356, type: !839)
!8350 = !DILocation(line: 356, column: 310, scope: !8322)
!8351 = !DILocation(line: 356, column: 336, scope: !8322)
!8352 = !DILocation(line: 356, column: 319, scope: !8322)
!8353 = !DILocalVariable(name: "dst", scope: !8322, file: !624, line: 356, type: !843)
!8354 = !DILocation(line: 356, column: 355, scope: !8322)
!8355 = !DILocation(line: 356, column: 372, scope: !8322)
!8356 = !DILocation(line: 356, column: 361, scope: !8322)
!8357 = !DILocalVariable(name: "opacity", scope: !8322, file: !624, line: 356, type: !248)
!8358 = !DILocation(line: 356, column: 385, scope: !8322)
!8359 = !DILocation(line: 356, column: 395, scope: !8322)
!8360 = !DILocation(line: 356, column: 402, scope: !8322)
!8361 = !DILocalVariable(name: "i", scope: !8322, file: !624, line: 356, type: !238)
!8362 = !DILocation(line: 356, column: 415, scope: !8322)
!8363 = !DILocalVariable(name: "j", scope: !8322, file: !624, line: 356, type: !238)
!8364 = !DILocation(line: 356, column: 418, scope: !8322)
!8365 = !DILocation(line: 356, column: 434, scope: !8322)
!8366 = !DILocation(line: 356, column: 453, scope: !8322)
!8367 = !DILocation(line: 356, column: 475, scope: !8322)
!8368 = !DILocation(line: 356, column: 488, scope: !8369)
!8369 = distinct !DILexicalBlock(scope: !8322, file: !624, line: 356, column: 481)
!8370 = !DILocation(line: 356, column: 486, scope: !8369)
!8371 = !DILocation(line: 356, column: 493, scope: !8372)
!8372 = !DILexicalBlockFile(scope: !8373, file: !624, discriminator: 1)
!8373 = distinct !DILexicalBlock(scope: !8369, file: !624, line: 356, column: 481)
!8374 = !DILocation(line: 356, column: 497, scope: !8372)
!8375 = !DILocation(line: 356, column: 495, scope: !8372)
!8376 = !DILocation(line: 356, column: 481, scope: !8372)
!8377 = !DILocation(line: 356, column: 519, scope: !8378)
!8378 = !DILexicalBlockFile(scope: !8379, file: !624, discriminator: 2)
!8379 = distinct !DILexicalBlock(scope: !8380, file: !624, line: 356, column: 512)
!8380 = distinct !DILexicalBlock(scope: !8373, file: !624, line: 356, column: 510)
!8381 = !DILocation(line: 356, column: 517, scope: !8378)
!8382 = !DILocation(line: 356, column: 524, scope: !8383)
!8383 = !DILexicalBlockFile(scope: !8384, file: !624, discriminator: 3)
!8384 = distinct !DILexicalBlock(scope: !8379, file: !624, line: 356, column: 512)
!8385 = !DILocation(line: 356, column: 528, scope: !8383)
!8386 = !DILocation(line: 356, column: 526, scope: !8383)
!8387 = !DILocation(line: 356, column: 512, scope: !8383)
!8388 = !DILocation(line: 356, column: 555, scope: !8389)
!8389 = !DILexicalBlockFile(scope: !8390, file: !624, discriminator: 4)
!8390 = distinct !DILexicalBlock(scope: !8384, file: !624, line: 356, column: 540)
!8391 = !DILocation(line: 356, column: 551, scope: !8389)
!8392 = !DILocation(line: 356, column: 566, scope: !8389)
!8393 = !DILocation(line: 356, column: 562, scope: !8389)
!8394 = !DILocation(line: 356, column: 578, scope: !8389)
!8395 = !DILocation(line: 356, column: 571, scope: !8389)
!8396 = !DILocation(line: 356, column: 569, scope: !8389)
!8397 = !DILocation(line: 356, column: 588, scope: !8389)
!8398 = !DILocation(line: 356, column: 584, scope: !8389)
!8399 = !DILocation(line: 356, column: 582, scope: !8389)
!8400 = !DILocation(line: 356, column: 560, scope: !8389)
!8401 = !DILocation(line: 356, column: 594, scope: !8389)
!8402 = !DILocation(line: 356, column: 592, scope: !8389)
!8403 = !DILocation(line: 356, column: 558, scope: !8389)
!8404 = !DILocation(line: 356, column: 546, scope: !8389)
!8405 = !DILocation(line: 356, column: 542, scope: !8389)
!8406 = !DILocation(line: 356, column: 549, scope: !8389)
!8407 = !DILocation(line: 356, column: 603, scope: !8389)
!8408 = !DILocation(line: 356, column: 536, scope: !8409)
!8409 = !DILexicalBlockFile(scope: !8384, file: !624, discriminator: 5)
!8410 = !DILocation(line: 356, column: 512, scope: !8409)
!8411 = distinct !{!8411, !8412}
!8412 = !DILocation(line: 356, column: 512, scope: !8380)
!8413 = !DILocation(line: 356, column: 612, scope: !8414)
!8414 = !DILexicalBlockFile(scope: !8380, file: !624, discriminator: 6)
!8415 = !DILocation(line: 356, column: 609, scope: !8414)
!8416 = !DILocation(line: 356, column: 633, scope: !8414)
!8417 = !DILocation(line: 356, column: 630, scope: !8414)
!8418 = !DILocation(line: 356, column: 657, scope: !8414)
!8419 = !DILocation(line: 356, column: 654, scope: !8414)
!8420 = !DILocation(line: 356, column: 674, scope: !8414)
!8421 = !DILocation(line: 356, column: 506, scope: !8422)
!8422 = !DILexicalBlockFile(scope: !8373, file: !624, discriminator: 7)
!8423 = !DILocation(line: 356, column: 481, scope: !8422)
!8424 = distinct !{!8424, !8425}
!8425 = !DILocation(line: 356, column: 481, scope: !8322)
!8426 = !DILocation(line: 356, column: 676, scope: !8427)
!8427 = !DILexicalBlockFile(scope: !8322, file: !624, discriminator: 8)
!8428 = distinct !DISubprogram(name: "blend_overlay_10bit", scope: !624, file: !624, line: 339, type: !1531, isLocal: true, isDefinition: true, scopeLine: 339, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!8429 = !DILocalVariable(name: "_top", arg: 1, scope: !8428, file: !624, line: 339, type: !900)
!8430 = !DILocation(line: 339, column: 48, scope: !8428)
!8431 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !8428, file: !624, line: 339, type: !902)
!8432 = !DILocation(line: 339, column: 64, scope: !8428)
!8433 = !DILocalVariable(name: "_bottom", arg: 3, scope: !8428, file: !624, line: 339, type: !900)
!8434 = !DILocation(line: 339, column: 93, scope: !8428)
!8435 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !8428, file: !624, line: 339, type: !902)
!8436 = !DILocation(line: 339, column: 112, scope: !8428)
!8437 = !DILocalVariable(name: "_dst", arg: 5, scope: !8428, file: !624, line: 339, type: !329)
!8438 = !DILocation(line: 339, column: 138, scope: !8428)
!8439 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !8428, file: !624, line: 339, type: !902)
!8440 = !DILocation(line: 339, column: 154, scope: !8428)
!8441 = !DILocalVariable(name: "width", arg: 7, scope: !8428, file: !624, line: 339, type: !902)
!8442 = !DILocation(line: 339, column: 178, scope: !8428)
!8443 = !DILocalVariable(name: "height", arg: 8, scope: !8428, file: !624, line: 339, type: !902)
!8444 = !DILocation(line: 339, column: 195, scope: !8428)
!8445 = !DILocalVariable(name: "param", arg: 9, scope: !8428, file: !624, line: 339, type: !884)
!8446 = !DILocation(line: 339, column: 217, scope: !8428)
!8447 = !DILocalVariable(name: "values", arg: 10, scope: !8428, file: !624, line: 339, type: !544)
!8448 = !DILocation(line: 339, column: 232, scope: !8428)
!8449 = !DILocalVariable(name: "starty", arg: 11, scope: !8428, file: !624, line: 339, type: !238)
!8450 = !DILocation(line: 339, column: 244, scope: !8428)
!8451 = !DILocalVariable(name: "top", scope: !8428, file: !624, line: 339, type: !839)
!8452 = !DILocation(line: 339, column: 270, scope: !8428)
!8453 = !DILocation(line: 339, column: 293, scope: !8428)
!8454 = !DILocation(line: 339, column: 276, scope: !8428)
!8455 = !DILocalVariable(name: "bottom", scope: !8428, file: !624, line: 339, type: !839)
!8456 = !DILocation(line: 339, column: 315, scope: !8428)
!8457 = !DILocation(line: 339, column: 341, scope: !8428)
!8458 = !DILocation(line: 339, column: 324, scope: !8428)
!8459 = !DILocalVariable(name: "dst", scope: !8428, file: !624, line: 339, type: !843)
!8460 = !DILocation(line: 339, column: 360, scope: !8428)
!8461 = !DILocation(line: 339, column: 377, scope: !8428)
!8462 = !DILocation(line: 339, column: 366, scope: !8428)
!8463 = !DILocalVariable(name: "opacity", scope: !8428, file: !624, line: 339, type: !248)
!8464 = !DILocation(line: 339, column: 390, scope: !8428)
!8465 = !DILocation(line: 339, column: 400, scope: !8428)
!8466 = !DILocation(line: 339, column: 407, scope: !8428)
!8467 = !DILocalVariable(name: "i", scope: !8428, file: !624, line: 339, type: !238)
!8468 = !DILocation(line: 339, column: 420, scope: !8428)
!8469 = !DILocalVariable(name: "j", scope: !8428, file: !624, line: 339, type: !238)
!8470 = !DILocation(line: 339, column: 423, scope: !8428)
!8471 = !DILocation(line: 339, column: 439, scope: !8428)
!8472 = !DILocation(line: 339, column: 458, scope: !8428)
!8473 = !DILocation(line: 339, column: 480, scope: !8428)
!8474 = !DILocation(line: 339, column: 493, scope: !8475)
!8475 = distinct !DILexicalBlock(scope: !8428, file: !624, line: 339, column: 486)
!8476 = !DILocation(line: 339, column: 491, scope: !8475)
!8477 = !DILocation(line: 339, column: 498, scope: !8478)
!8478 = !DILexicalBlockFile(scope: !8479, file: !624, discriminator: 1)
!8479 = distinct !DILexicalBlock(scope: !8475, file: !624, line: 339, column: 486)
!8480 = !DILocation(line: 339, column: 502, scope: !8478)
!8481 = !DILocation(line: 339, column: 500, scope: !8478)
!8482 = !DILocation(line: 339, column: 486, scope: !8478)
!8483 = !DILocation(line: 339, column: 524, scope: !8484)
!8484 = !DILexicalBlockFile(scope: !8485, file: !624, discriminator: 2)
!8485 = distinct !DILexicalBlock(scope: !8486, file: !624, line: 339, column: 517)
!8486 = distinct !DILexicalBlock(scope: !8479, file: !624, line: 339, column: 515)
!8487 = !DILocation(line: 339, column: 522, scope: !8484)
!8488 = !DILocation(line: 339, column: 529, scope: !8489)
!8489 = !DILexicalBlockFile(scope: !8490, file: !624, discriminator: 3)
!8490 = distinct !DILexicalBlock(scope: !8485, file: !624, line: 339, column: 517)
!8491 = !DILocation(line: 339, column: 533, scope: !8489)
!8492 = !DILocation(line: 339, column: 531, scope: !8489)
!8493 = !DILocation(line: 339, column: 517, scope: !8489)
!8494 = !DILocation(line: 339, column: 560, scope: !8495)
!8495 = !DILexicalBlockFile(scope: !8496, file: !624, discriminator: 4)
!8496 = distinct !DILexicalBlock(scope: !8490, file: !624, line: 339, column: 545)
!8497 = !DILocation(line: 339, column: 556, scope: !8495)
!8498 = !DILocation(line: 339, column: 572, scope: !8495)
!8499 = !DILocation(line: 339, column: 568, scope: !8495)
!8500 = !DILocation(line: 339, column: 575, scope: !8495)
!8501 = !DILocation(line: 339, column: 567, scope: !8495)
!8502 = !DILocation(line: 339, column: 598, scope: !8503)
!8503 = !DILexicalBlockFile(scope: !8496, file: !624, discriminator: 5)
!8504 = !DILocation(line: 339, column: 594, scope: !8503)
!8505 = !DILocation(line: 339, column: 593, scope: !8503)
!8506 = !DILocation(line: 339, column: 612, scope: !8503)
!8507 = !DILocation(line: 339, column: 605, scope: !8503)
!8508 = !DILocation(line: 339, column: 604, scope: !8503)
!8509 = !DILocation(line: 339, column: 602, scope: !8503)
!8510 = !DILocation(line: 339, column: 617, scope: !8503)
!8511 = !DILocation(line: 339, column: 589, scope: !8503)
!8512 = !DILocation(line: 339, column: 567, scope: !8503)
!8513 = !DILocation(line: 339, column: 656, scope: !8514)
!8514 = !DILexicalBlockFile(scope: !8496, file: !624, discriminator: 6)
!8515 = !DILocation(line: 339, column: 652, scope: !8514)
!8516 = !DILocation(line: 339, column: 651, scope: !8514)
!8517 = !DILocation(line: 339, column: 649, scope: !8514)
!8518 = !DILocation(line: 339, column: 679, scope: !8514)
!8519 = !DILocation(line: 339, column: 672, scope: !8514)
!8520 = !DILocation(line: 339, column: 671, scope: !8514)
!8521 = !DILocation(line: 339, column: 669, scope: !8514)
!8522 = !DILocation(line: 339, column: 661, scope: !8514)
!8523 = !DILocation(line: 339, column: 684, scope: !8514)
!8524 = !DILocation(line: 339, column: 640, scope: !8514)
!8525 = !DILocation(line: 339, column: 634, scope: !8514)
!8526 = !DILocation(line: 339, column: 567, scope: !8514)
!8527 = !DILocation(line: 339, column: 567, scope: !8528)
!8528 = !DILexicalBlockFile(scope: !8496, file: !624, discriminator: 7)
!8529 = !DILocation(line: 339, column: 700, scope: !8528)
!8530 = !DILocation(line: 339, column: 696, scope: !8528)
!8531 = !DILocation(line: 339, column: 694, scope: !8528)
!8532 = !DILocation(line: 339, column: 565, scope: !8528)
!8533 = !DILocation(line: 339, column: 706, scope: !8528)
!8534 = !DILocation(line: 339, column: 704, scope: !8528)
!8535 = !DILocation(line: 339, column: 563, scope: !8528)
!8536 = !DILocation(line: 339, column: 556, scope: !8528)
!8537 = !DILocation(line: 339, column: 551, scope: !8528)
!8538 = !DILocation(line: 339, column: 547, scope: !8528)
!8539 = !DILocation(line: 339, column: 554, scope: !8528)
!8540 = !DILocation(line: 339, column: 715, scope: !8528)
!8541 = !DILocation(line: 339, column: 541, scope: !8542)
!8542 = !DILexicalBlockFile(scope: !8490, file: !624, discriminator: 8)
!8543 = !DILocation(line: 339, column: 517, scope: !8542)
!8544 = distinct !{!8544, !8545}
!8545 = !DILocation(line: 339, column: 517, scope: !8486)
!8546 = !DILocation(line: 339, column: 724, scope: !8547)
!8547 = !DILexicalBlockFile(scope: !8486, file: !624, discriminator: 9)
!8548 = !DILocation(line: 339, column: 721, scope: !8547)
!8549 = !DILocation(line: 339, column: 745, scope: !8547)
!8550 = !DILocation(line: 339, column: 742, scope: !8547)
!8551 = !DILocation(line: 339, column: 769, scope: !8547)
!8552 = !DILocation(line: 339, column: 766, scope: !8547)
!8553 = !DILocation(line: 339, column: 786, scope: !8547)
!8554 = !DILocation(line: 339, column: 511, scope: !8555)
!8555 = !DILexicalBlockFile(scope: !8479, file: !624, discriminator: 10)
!8556 = !DILocation(line: 339, column: 486, scope: !8555)
!8557 = distinct !{!8557, !8558}
!8558 = !DILocation(line: 339, column: 486, scope: !8428)
!8559 = !DILocation(line: 339, column: 788, scope: !8560)
!8560 = !DILexicalBlockFile(scope: !8428, file: !624, discriminator: 11)
!8561 = distinct !DISubprogram(name: "blend_phoenix_10bit", scope: !624, file: !624, line: 352, type: !1531, isLocal: true, isDefinition: true, scopeLine: 352, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!8562 = !DILocalVariable(name: "_top", arg: 1, scope: !8561, file: !624, line: 352, type: !900)
!8563 = !DILocation(line: 352, column: 48, scope: !8561)
!8564 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !8561, file: !624, line: 352, type: !902)
!8565 = !DILocation(line: 352, column: 64, scope: !8561)
!8566 = !DILocalVariable(name: "_bottom", arg: 3, scope: !8561, file: !624, line: 352, type: !900)
!8567 = !DILocation(line: 352, column: 93, scope: !8561)
!8568 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !8561, file: !624, line: 352, type: !902)
!8569 = !DILocation(line: 352, column: 112, scope: !8561)
!8570 = !DILocalVariable(name: "_dst", arg: 5, scope: !8561, file: !624, line: 352, type: !329)
!8571 = !DILocation(line: 352, column: 138, scope: !8561)
!8572 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !8561, file: !624, line: 352, type: !902)
!8573 = !DILocation(line: 352, column: 154, scope: !8561)
!8574 = !DILocalVariable(name: "width", arg: 7, scope: !8561, file: !624, line: 352, type: !902)
!8575 = !DILocation(line: 352, column: 178, scope: !8561)
!8576 = !DILocalVariable(name: "height", arg: 8, scope: !8561, file: !624, line: 352, type: !902)
!8577 = !DILocation(line: 352, column: 195, scope: !8561)
!8578 = !DILocalVariable(name: "param", arg: 9, scope: !8561, file: !624, line: 352, type: !884)
!8579 = !DILocation(line: 352, column: 217, scope: !8561)
!8580 = !DILocalVariable(name: "values", arg: 10, scope: !8561, file: !624, line: 352, type: !544)
!8581 = !DILocation(line: 352, column: 232, scope: !8561)
!8582 = !DILocalVariable(name: "starty", arg: 11, scope: !8561, file: !624, line: 352, type: !238)
!8583 = !DILocation(line: 352, column: 244, scope: !8561)
!8584 = !DILocalVariable(name: "top", scope: !8561, file: !624, line: 352, type: !839)
!8585 = !DILocation(line: 352, column: 270, scope: !8561)
!8586 = !DILocation(line: 352, column: 293, scope: !8561)
!8587 = !DILocation(line: 352, column: 276, scope: !8561)
!8588 = !DILocalVariable(name: "bottom", scope: !8561, file: !624, line: 352, type: !839)
!8589 = !DILocation(line: 352, column: 315, scope: !8561)
!8590 = !DILocation(line: 352, column: 341, scope: !8561)
!8591 = !DILocation(line: 352, column: 324, scope: !8561)
!8592 = !DILocalVariable(name: "dst", scope: !8561, file: !624, line: 352, type: !843)
!8593 = !DILocation(line: 352, column: 360, scope: !8561)
!8594 = !DILocation(line: 352, column: 377, scope: !8561)
!8595 = !DILocation(line: 352, column: 366, scope: !8561)
!8596 = !DILocalVariable(name: "opacity", scope: !8561, file: !624, line: 352, type: !248)
!8597 = !DILocation(line: 352, column: 390, scope: !8561)
!8598 = !DILocation(line: 352, column: 400, scope: !8561)
!8599 = !DILocation(line: 352, column: 407, scope: !8561)
!8600 = !DILocalVariable(name: "i", scope: !8561, file: !624, line: 352, type: !238)
!8601 = !DILocation(line: 352, column: 420, scope: !8561)
!8602 = !DILocalVariable(name: "j", scope: !8561, file: !624, line: 352, type: !238)
!8603 = !DILocation(line: 352, column: 423, scope: !8561)
!8604 = !DILocation(line: 352, column: 439, scope: !8561)
!8605 = !DILocation(line: 352, column: 458, scope: !8561)
!8606 = !DILocation(line: 352, column: 480, scope: !8561)
!8607 = !DILocation(line: 352, column: 493, scope: !8608)
!8608 = distinct !DILexicalBlock(scope: !8561, file: !624, line: 352, column: 486)
!8609 = !DILocation(line: 352, column: 491, scope: !8608)
!8610 = !DILocation(line: 352, column: 498, scope: !8611)
!8611 = !DILexicalBlockFile(scope: !8612, file: !624, discriminator: 1)
!8612 = distinct !DILexicalBlock(scope: !8608, file: !624, line: 352, column: 486)
!8613 = !DILocation(line: 352, column: 502, scope: !8611)
!8614 = !DILocation(line: 352, column: 500, scope: !8611)
!8615 = !DILocation(line: 352, column: 486, scope: !8611)
!8616 = !DILocation(line: 352, column: 524, scope: !8617)
!8617 = !DILexicalBlockFile(scope: !8618, file: !624, discriminator: 2)
!8618 = distinct !DILexicalBlock(scope: !8619, file: !624, line: 352, column: 517)
!8619 = distinct !DILexicalBlock(scope: !8612, file: !624, line: 352, column: 515)
!8620 = !DILocation(line: 352, column: 522, scope: !8617)
!8621 = !DILocation(line: 352, column: 529, scope: !8622)
!8622 = !DILexicalBlockFile(scope: !8623, file: !624, discriminator: 3)
!8623 = distinct !DILexicalBlock(scope: !8618, file: !624, line: 352, column: 517)
!8624 = !DILocation(line: 352, column: 533, scope: !8622)
!8625 = !DILocation(line: 352, column: 531, scope: !8622)
!8626 = !DILocation(line: 352, column: 517, scope: !8622)
!8627 = !DILocation(line: 352, column: 560, scope: !8628)
!8628 = !DILexicalBlockFile(scope: !8629, file: !624, discriminator: 4)
!8629 = distinct !DILexicalBlock(scope: !8623, file: !624, line: 352, column: 545)
!8630 = !DILocation(line: 352, column: 556, scope: !8628)
!8631 = !DILocation(line: 352, column: 573, scope: !8628)
!8632 = !DILocation(line: 352, column: 569, scope: !8628)
!8633 = !DILocation(line: 352, column: 568, scope: !8628)
!8634 = !DILocation(line: 352, column: 587, scope: !8628)
!8635 = !DILocation(line: 352, column: 580, scope: !8628)
!8636 = !DILocation(line: 352, column: 579, scope: !8628)
!8637 = !DILocation(line: 352, column: 577, scope: !8628)
!8638 = !DILocation(line: 352, column: 601, scope: !8639)
!8639 = !DILexicalBlockFile(scope: !8629, file: !624, discriminator: 5)
!8640 = !DILocation(line: 352, column: 594, scope: !8639)
!8641 = !DILocation(line: 352, column: 593, scope: !8639)
!8642 = !DILocation(line: 352, column: 568, scope: !8639)
!8643 = !DILocation(line: 352, column: 612, scope: !8644)
!8644 = !DILexicalBlockFile(scope: !8629, file: !624, discriminator: 6)
!8645 = !DILocation(line: 352, column: 608, scope: !8644)
!8646 = !DILocation(line: 352, column: 607, scope: !8644)
!8647 = !DILocation(line: 352, column: 568, scope: !8644)
!8648 = !DILocation(line: 352, column: 568, scope: !8649)
!8649 = !DILexicalBlockFile(scope: !8629, file: !624, discriminator: 7)
!8650 = !DILocation(line: 352, column: 625, scope: !8649)
!8651 = !DILocation(line: 352, column: 621, scope: !8649)
!8652 = !DILocation(line: 352, column: 620, scope: !8649)
!8653 = !DILocation(line: 352, column: 639, scope: !8649)
!8654 = !DILocation(line: 352, column: 632, scope: !8649)
!8655 = !DILocation(line: 352, column: 631, scope: !8649)
!8656 = !DILocation(line: 352, column: 629, scope: !8649)
!8657 = !DILocation(line: 352, column: 650, scope: !8658)
!8658 = !DILexicalBlockFile(scope: !8629, file: !624, discriminator: 8)
!8659 = !DILocation(line: 352, column: 646, scope: !8658)
!8660 = !DILocation(line: 352, column: 645, scope: !8658)
!8661 = !DILocation(line: 352, column: 620, scope: !8658)
!8662 = !DILocation(line: 352, column: 664, scope: !8663)
!8663 = !DILexicalBlockFile(scope: !8629, file: !624, discriminator: 9)
!8664 = !DILocation(line: 352, column: 657, scope: !8663)
!8665 = !DILocation(line: 352, column: 656, scope: !8663)
!8666 = !DILocation(line: 352, column: 620, scope: !8663)
!8667 = !DILocation(line: 352, column: 620, scope: !8668)
!8668 = !DILexicalBlockFile(scope: !8629, file: !624, discriminator: 10)
!8669 = !DILocation(line: 352, column: 617, scope: !8668)
!8670 = !DILocation(line: 352, column: 669, scope: !8668)
!8671 = !DILocation(line: 352, column: 683, scope: !8668)
!8672 = !DILocation(line: 352, column: 679, scope: !8668)
!8673 = !DILocation(line: 352, column: 677, scope: !8668)
!8674 = !DILocation(line: 352, column: 565, scope: !8668)
!8675 = !DILocation(line: 352, column: 689, scope: !8668)
!8676 = !DILocation(line: 352, column: 687, scope: !8668)
!8677 = !DILocation(line: 352, column: 563, scope: !8668)
!8678 = !DILocation(line: 352, column: 556, scope: !8668)
!8679 = !DILocation(line: 352, column: 551, scope: !8668)
!8680 = !DILocation(line: 352, column: 547, scope: !8668)
!8681 = !DILocation(line: 352, column: 554, scope: !8668)
!8682 = !DILocation(line: 352, column: 698, scope: !8668)
!8683 = !DILocation(line: 352, column: 541, scope: !8684)
!8684 = !DILexicalBlockFile(scope: !8623, file: !624, discriminator: 11)
!8685 = !DILocation(line: 352, column: 517, scope: !8684)
!8686 = distinct !{!8686, !8687}
!8687 = !DILocation(line: 352, column: 517, scope: !8619)
!8688 = !DILocation(line: 352, column: 707, scope: !8689)
!8689 = !DILexicalBlockFile(scope: !8619, file: !624, discriminator: 12)
!8690 = !DILocation(line: 352, column: 704, scope: !8689)
!8691 = !DILocation(line: 352, column: 728, scope: !8689)
!8692 = !DILocation(line: 352, column: 725, scope: !8689)
!8693 = !DILocation(line: 352, column: 752, scope: !8689)
!8694 = !DILocation(line: 352, column: 749, scope: !8689)
!8695 = !DILocation(line: 352, column: 769, scope: !8689)
!8696 = !DILocation(line: 352, column: 511, scope: !8697)
!8697 = !DILexicalBlockFile(scope: !8612, file: !624, discriminator: 13)
!8698 = !DILocation(line: 352, column: 486, scope: !8697)
!8699 = distinct !{!8699, !8700}
!8700 = !DILocation(line: 352, column: 486, scope: !8561)
!8701 = !DILocation(line: 352, column: 771, scope: !8702)
!8702 = !DILexicalBlockFile(scope: !8561, file: !624, discriminator: 14)
!8703 = distinct !DISubprogram(name: "blend_pinlight_10bit", scope: !624, file: !624, line: 351, type: !1531, isLocal: true, isDefinition: true, scopeLine: 351, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!8704 = !DILocalVariable(name: "_top", arg: 1, scope: !8703, file: !624, line: 351, type: !900)
!8705 = !DILocation(line: 351, column: 49, scope: !8703)
!8706 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !8703, file: !624, line: 351, type: !902)
!8707 = !DILocation(line: 351, column: 65, scope: !8703)
!8708 = !DILocalVariable(name: "_bottom", arg: 3, scope: !8703, file: !624, line: 351, type: !900)
!8709 = !DILocation(line: 351, column: 94, scope: !8703)
!8710 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !8703, file: !624, line: 351, type: !902)
!8711 = !DILocation(line: 351, column: 113, scope: !8703)
!8712 = !DILocalVariable(name: "_dst", arg: 5, scope: !8703, file: !624, line: 351, type: !329)
!8713 = !DILocation(line: 351, column: 139, scope: !8703)
!8714 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !8703, file: !624, line: 351, type: !902)
!8715 = !DILocation(line: 351, column: 155, scope: !8703)
!8716 = !DILocalVariable(name: "width", arg: 7, scope: !8703, file: !624, line: 351, type: !902)
!8717 = !DILocation(line: 351, column: 179, scope: !8703)
!8718 = !DILocalVariable(name: "height", arg: 8, scope: !8703, file: !624, line: 351, type: !902)
!8719 = !DILocation(line: 351, column: 196, scope: !8703)
!8720 = !DILocalVariable(name: "param", arg: 9, scope: !8703, file: !624, line: 351, type: !884)
!8721 = !DILocation(line: 351, column: 218, scope: !8703)
!8722 = !DILocalVariable(name: "values", arg: 10, scope: !8703, file: !624, line: 351, type: !544)
!8723 = !DILocation(line: 351, column: 233, scope: !8703)
!8724 = !DILocalVariable(name: "starty", arg: 11, scope: !8703, file: !624, line: 351, type: !238)
!8725 = !DILocation(line: 351, column: 245, scope: !8703)
!8726 = !DILocalVariable(name: "top", scope: !8703, file: !624, line: 351, type: !839)
!8727 = !DILocation(line: 351, column: 271, scope: !8703)
!8728 = !DILocation(line: 351, column: 294, scope: !8703)
!8729 = !DILocation(line: 351, column: 277, scope: !8703)
!8730 = !DILocalVariable(name: "bottom", scope: !8703, file: !624, line: 351, type: !839)
!8731 = !DILocation(line: 351, column: 316, scope: !8703)
!8732 = !DILocation(line: 351, column: 342, scope: !8703)
!8733 = !DILocation(line: 351, column: 325, scope: !8703)
!8734 = !DILocalVariable(name: "dst", scope: !8703, file: !624, line: 351, type: !843)
!8735 = !DILocation(line: 351, column: 361, scope: !8703)
!8736 = !DILocation(line: 351, column: 378, scope: !8703)
!8737 = !DILocation(line: 351, column: 367, scope: !8703)
!8738 = !DILocalVariable(name: "opacity", scope: !8703, file: !624, line: 351, type: !248)
!8739 = !DILocation(line: 351, column: 391, scope: !8703)
!8740 = !DILocation(line: 351, column: 401, scope: !8703)
!8741 = !DILocation(line: 351, column: 408, scope: !8703)
!8742 = !DILocalVariable(name: "i", scope: !8703, file: !624, line: 351, type: !238)
!8743 = !DILocation(line: 351, column: 421, scope: !8703)
!8744 = !DILocalVariable(name: "j", scope: !8703, file: !624, line: 351, type: !238)
!8745 = !DILocation(line: 351, column: 424, scope: !8703)
!8746 = !DILocation(line: 351, column: 440, scope: !8703)
!8747 = !DILocation(line: 351, column: 459, scope: !8703)
!8748 = !DILocation(line: 351, column: 481, scope: !8703)
!8749 = !DILocation(line: 351, column: 494, scope: !8750)
!8750 = distinct !DILexicalBlock(scope: !8703, file: !624, line: 351, column: 487)
!8751 = !DILocation(line: 351, column: 492, scope: !8750)
!8752 = !DILocation(line: 351, column: 499, scope: !8753)
!8753 = !DILexicalBlockFile(scope: !8754, file: !624, discriminator: 1)
!8754 = distinct !DILexicalBlock(scope: !8750, file: !624, line: 351, column: 487)
!8755 = !DILocation(line: 351, column: 503, scope: !8753)
!8756 = !DILocation(line: 351, column: 501, scope: !8753)
!8757 = !DILocation(line: 351, column: 487, scope: !8753)
!8758 = !DILocation(line: 351, column: 525, scope: !8759)
!8759 = !DILexicalBlockFile(scope: !8760, file: !624, discriminator: 2)
!8760 = distinct !DILexicalBlock(scope: !8761, file: !624, line: 351, column: 518)
!8761 = distinct !DILexicalBlock(scope: !8754, file: !624, line: 351, column: 516)
!8762 = !DILocation(line: 351, column: 523, scope: !8759)
!8763 = !DILocation(line: 351, column: 530, scope: !8764)
!8764 = !DILexicalBlockFile(scope: !8765, file: !624, discriminator: 3)
!8765 = distinct !DILexicalBlock(scope: !8760, file: !624, line: 351, column: 518)
!8766 = !DILocation(line: 351, column: 534, scope: !8764)
!8767 = !DILocation(line: 351, column: 532, scope: !8764)
!8768 = !DILocation(line: 351, column: 518, scope: !8764)
!8769 = !DILocation(line: 351, column: 561, scope: !8770)
!8770 = !DILexicalBlockFile(scope: !8771, file: !624, discriminator: 4)
!8771 = distinct !DILexicalBlock(scope: !8765, file: !624, line: 351, column: 546)
!8772 = !DILocation(line: 351, column: 557, scope: !8770)
!8773 = !DILocation(line: 351, column: 576, scope: !8770)
!8774 = !DILocation(line: 351, column: 569, scope: !8770)
!8775 = !DILocation(line: 351, column: 579, scope: !8770)
!8776 = !DILocation(line: 351, column: 568, scope: !8770)
!8777 = !DILocation(line: 351, column: 594, scope: !8778)
!8778 = !DILexicalBlockFile(scope: !8771, file: !624, discriminator: 5)
!8779 = !DILocation(line: 351, column: 590, scope: !8778)
!8780 = !DILocation(line: 351, column: 589, scope: !8778)
!8781 = !DILocation(line: 351, column: 612, scope: !8778)
!8782 = !DILocation(line: 351, column: 605, scope: !8778)
!8783 = !DILocation(line: 351, column: 603, scope: !8778)
!8784 = !DILocation(line: 351, column: 598, scope: !8778)
!8785 = !DILocation(line: 351, column: 630, scope: !8786)
!8786 = !DILexicalBlockFile(scope: !8771, file: !624, discriminator: 6)
!8787 = !DILocation(line: 351, column: 623, scope: !8786)
!8788 = !DILocation(line: 351, column: 621, scope: !8786)
!8789 = !DILocation(line: 351, column: 589, scope: !8786)
!8790 = !DILocation(line: 351, column: 641, scope: !8791)
!8791 = !DILexicalBlockFile(scope: !8771, file: !624, discriminator: 7)
!8792 = !DILocation(line: 351, column: 637, scope: !8791)
!8793 = !DILocation(line: 351, column: 636, scope: !8791)
!8794 = !DILocation(line: 351, column: 589, scope: !8791)
!8795 = !DILocation(line: 351, column: 589, scope: !8796)
!8796 = !DILexicalBlockFile(scope: !8771, file: !624, discriminator: 8)
!8797 = !DILocation(line: 351, column: 568, scope: !8796)
!8798 = !DILocation(line: 351, column: 654, scope: !8799)
!8799 = !DILexicalBlockFile(scope: !8771, file: !624, discriminator: 9)
!8800 = !DILocation(line: 351, column: 650, scope: !8799)
!8801 = !DILocation(line: 351, column: 649, scope: !8799)
!8802 = !DILocation(line: 351, column: 673, scope: !8799)
!8803 = !DILocation(line: 351, column: 666, scope: !8799)
!8804 = !DILocation(line: 351, column: 676, scope: !8799)
!8805 = !DILocation(line: 351, column: 663, scope: !8799)
!8806 = !DILocation(line: 351, column: 658, scope: !8799)
!8807 = !DILocation(line: 351, column: 691, scope: !8808)
!8808 = !DILexicalBlockFile(scope: !8771, file: !624, discriminator: 10)
!8809 = !DILocation(line: 351, column: 687, scope: !8808)
!8810 = !DILocation(line: 351, column: 686, scope: !8808)
!8811 = !DILocation(line: 351, column: 649, scope: !8808)
!8812 = !DILocation(line: 351, column: 710, scope: !8813)
!8813 = !DILexicalBlockFile(scope: !8771, file: !624, discriminator: 11)
!8814 = !DILocation(line: 351, column: 703, scope: !8813)
!8815 = !DILocation(line: 351, column: 713, scope: !8813)
!8816 = !DILocation(line: 351, column: 700, scope: !8813)
!8817 = !DILocation(line: 351, column: 649, scope: !8813)
!8818 = !DILocation(line: 351, column: 649, scope: !8819)
!8819 = !DILexicalBlockFile(scope: !8771, file: !624, discriminator: 12)
!8820 = !DILocation(line: 351, column: 568, scope: !8819)
!8821 = !DILocation(line: 351, column: 568, scope: !8822)
!8822 = !DILexicalBlockFile(scope: !8771, file: !624, discriminator: 13)
!8823 = !DILocation(line: 351, column: 729, scope: !8822)
!8824 = !DILocation(line: 351, column: 725, scope: !8822)
!8825 = !DILocation(line: 351, column: 723, scope: !8822)
!8826 = !DILocation(line: 351, column: 566, scope: !8822)
!8827 = !DILocation(line: 351, column: 735, scope: !8822)
!8828 = !DILocation(line: 351, column: 733, scope: !8822)
!8829 = !DILocation(line: 351, column: 564, scope: !8822)
!8830 = !DILocation(line: 351, column: 557, scope: !8822)
!8831 = !DILocation(line: 351, column: 552, scope: !8822)
!8832 = !DILocation(line: 351, column: 548, scope: !8822)
!8833 = !DILocation(line: 351, column: 555, scope: !8822)
!8834 = !DILocation(line: 351, column: 744, scope: !8822)
!8835 = !DILocation(line: 351, column: 542, scope: !8836)
!8836 = !DILexicalBlockFile(scope: !8765, file: !624, discriminator: 14)
!8837 = !DILocation(line: 351, column: 518, scope: !8836)
!8838 = distinct !{!8838, !8839}
!8839 = !DILocation(line: 351, column: 518, scope: !8761)
!8840 = !DILocation(line: 351, column: 753, scope: !8841)
!8841 = !DILexicalBlockFile(scope: !8761, file: !624, discriminator: 15)
!8842 = !DILocation(line: 351, column: 750, scope: !8841)
!8843 = !DILocation(line: 351, column: 774, scope: !8841)
!8844 = !DILocation(line: 351, column: 771, scope: !8841)
!8845 = !DILocation(line: 351, column: 798, scope: !8841)
!8846 = !DILocation(line: 351, column: 795, scope: !8841)
!8847 = !DILocation(line: 351, column: 815, scope: !8841)
!8848 = !DILocation(line: 351, column: 512, scope: !8849)
!8849 = !DILexicalBlockFile(scope: !8754, file: !624, discriminator: 16)
!8850 = !DILocation(line: 351, column: 487, scope: !8849)
!8851 = distinct !{!8851, !8852}
!8852 = !DILocation(line: 351, column: 487, scope: !8703)
!8853 = !DILocation(line: 351, column: 817, scope: !8854)
!8854 = !DILexicalBlockFile(scope: !8703, file: !624, discriminator: 17)
!8855 = distinct !DISubprogram(name: "blend_reflect_10bit", scope: !624, file: !624, line: 353, type: !1531, isLocal: true, isDefinition: true, scopeLine: 353, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!8856 = !DILocalVariable(name: "_top", arg: 1, scope: !8855, file: !624, line: 353, type: !900)
!8857 = !DILocation(line: 353, column: 48, scope: !8855)
!8858 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !8855, file: !624, line: 353, type: !902)
!8859 = !DILocation(line: 353, column: 64, scope: !8855)
!8860 = !DILocalVariable(name: "_bottom", arg: 3, scope: !8855, file: !624, line: 353, type: !900)
!8861 = !DILocation(line: 353, column: 93, scope: !8855)
!8862 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !8855, file: !624, line: 353, type: !902)
!8863 = !DILocation(line: 353, column: 112, scope: !8855)
!8864 = !DILocalVariable(name: "_dst", arg: 5, scope: !8855, file: !624, line: 353, type: !329)
!8865 = !DILocation(line: 353, column: 138, scope: !8855)
!8866 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !8855, file: !624, line: 353, type: !902)
!8867 = !DILocation(line: 353, column: 154, scope: !8855)
!8868 = !DILocalVariable(name: "width", arg: 7, scope: !8855, file: !624, line: 353, type: !902)
!8869 = !DILocation(line: 353, column: 178, scope: !8855)
!8870 = !DILocalVariable(name: "height", arg: 8, scope: !8855, file: !624, line: 353, type: !902)
!8871 = !DILocation(line: 353, column: 195, scope: !8855)
!8872 = !DILocalVariable(name: "param", arg: 9, scope: !8855, file: !624, line: 353, type: !884)
!8873 = !DILocation(line: 353, column: 217, scope: !8855)
!8874 = !DILocalVariable(name: "values", arg: 10, scope: !8855, file: !624, line: 353, type: !544)
!8875 = !DILocation(line: 353, column: 232, scope: !8855)
!8876 = !DILocalVariable(name: "starty", arg: 11, scope: !8855, file: !624, line: 353, type: !238)
!8877 = !DILocation(line: 353, column: 244, scope: !8855)
!8878 = !DILocalVariable(name: "top", scope: !8855, file: !624, line: 353, type: !839)
!8879 = !DILocation(line: 353, column: 270, scope: !8855)
!8880 = !DILocation(line: 353, column: 293, scope: !8855)
!8881 = !DILocation(line: 353, column: 276, scope: !8855)
!8882 = !DILocalVariable(name: "bottom", scope: !8855, file: !624, line: 353, type: !839)
!8883 = !DILocation(line: 353, column: 315, scope: !8855)
!8884 = !DILocation(line: 353, column: 341, scope: !8855)
!8885 = !DILocation(line: 353, column: 324, scope: !8855)
!8886 = !DILocalVariable(name: "dst", scope: !8855, file: !624, line: 353, type: !843)
!8887 = !DILocation(line: 353, column: 360, scope: !8855)
!8888 = !DILocation(line: 353, column: 377, scope: !8855)
!8889 = !DILocation(line: 353, column: 366, scope: !8855)
!8890 = !DILocalVariable(name: "opacity", scope: !8855, file: !624, line: 353, type: !248)
!8891 = !DILocation(line: 353, column: 390, scope: !8855)
!8892 = !DILocation(line: 353, column: 400, scope: !8855)
!8893 = !DILocation(line: 353, column: 407, scope: !8855)
!8894 = !DILocalVariable(name: "i", scope: !8855, file: !624, line: 353, type: !238)
!8895 = !DILocation(line: 353, column: 420, scope: !8855)
!8896 = !DILocalVariable(name: "j", scope: !8855, file: !624, line: 353, type: !238)
!8897 = !DILocation(line: 353, column: 423, scope: !8855)
!8898 = !DILocation(line: 353, column: 439, scope: !8855)
!8899 = !DILocation(line: 353, column: 458, scope: !8855)
!8900 = !DILocation(line: 353, column: 480, scope: !8855)
!8901 = !DILocation(line: 353, column: 493, scope: !8902)
!8902 = distinct !DILexicalBlock(scope: !8855, file: !624, line: 353, column: 486)
!8903 = !DILocation(line: 353, column: 491, scope: !8902)
!8904 = !DILocation(line: 353, column: 498, scope: !8905)
!8905 = !DILexicalBlockFile(scope: !8906, file: !624, discriminator: 1)
!8906 = distinct !DILexicalBlock(scope: !8902, file: !624, line: 353, column: 486)
!8907 = !DILocation(line: 353, column: 502, scope: !8905)
!8908 = !DILocation(line: 353, column: 500, scope: !8905)
!8909 = !DILocation(line: 353, column: 486, scope: !8905)
!8910 = !DILocation(line: 353, column: 524, scope: !8911)
!8911 = !DILexicalBlockFile(scope: !8912, file: !624, discriminator: 2)
!8912 = distinct !DILexicalBlock(scope: !8913, file: !624, line: 353, column: 517)
!8913 = distinct !DILexicalBlock(scope: !8906, file: !624, line: 353, column: 515)
!8914 = !DILocation(line: 353, column: 522, scope: !8911)
!8915 = !DILocation(line: 353, column: 529, scope: !8916)
!8916 = !DILexicalBlockFile(scope: !8917, file: !624, discriminator: 3)
!8917 = distinct !DILexicalBlock(scope: !8912, file: !624, line: 353, column: 517)
!8918 = !DILocation(line: 353, column: 533, scope: !8916)
!8919 = !DILocation(line: 353, column: 531, scope: !8916)
!8920 = !DILocation(line: 353, column: 517, scope: !8916)
!8921 = !DILocation(line: 353, column: 560, scope: !8922)
!8922 = !DILexicalBlockFile(scope: !8923, file: !624, discriminator: 4)
!8923 = distinct !DILexicalBlock(scope: !8917, file: !624, line: 353, column: 545)
!8924 = !DILocation(line: 353, column: 556, scope: !8922)
!8925 = !DILocation(line: 353, column: 575, scope: !8922)
!8926 = !DILocation(line: 353, column: 568, scope: !8922)
!8927 = !DILocation(line: 353, column: 578, scope: !8922)
!8928 = !DILocation(line: 353, column: 567, scope: !8922)
!8929 = !DILocation(line: 353, column: 596, scope: !8930)
!8930 = !DILexicalBlockFile(scope: !8923, file: !624, discriminator: 5)
!8931 = !DILocation(line: 353, column: 589, scope: !8930)
!8932 = !DILocation(line: 353, column: 567, scope: !8930)
!8933 = !DILocation(line: 353, column: 617, scope: !8934)
!8934 = !DILexicalBlockFile(scope: !8923, file: !624, discriminator: 6)
!8935 = !DILocation(line: 353, column: 613, scope: !8934)
!8936 = !DILocation(line: 353, column: 626, scope: !8934)
!8937 = !DILocation(line: 353, column: 622, scope: !8934)
!8938 = !DILocation(line: 353, column: 620, scope: !8934)
!8939 = !DILocation(line: 353, column: 646, scope: !8934)
!8940 = !DILocation(line: 353, column: 639, scope: !8934)
!8941 = !DILocation(line: 353, column: 637, scope: !8934)
!8942 = !DILocation(line: 353, column: 629, scope: !8934)
!8943 = !DILocation(line: 353, column: 609, scope: !8934)
!8944 = !DILocation(line: 353, column: 602, scope: !8934)
!8945 = !DILocation(line: 353, column: 660, scope: !8946)
!8946 = !DILexicalBlockFile(scope: !8923, file: !624, discriminator: 7)
!8947 = !DILocation(line: 353, column: 656, scope: !8946)
!8948 = !DILocation(line: 353, column: 669, scope: !8946)
!8949 = !DILocation(line: 353, column: 665, scope: !8946)
!8950 = !DILocation(line: 353, column: 663, scope: !8946)
!8951 = !DILocation(line: 353, column: 689, scope: !8946)
!8952 = !DILocation(line: 353, column: 682, scope: !8946)
!8953 = !DILocation(line: 353, column: 680, scope: !8946)
!8954 = !DILocation(line: 353, column: 672, scope: !8946)
!8955 = !DILocation(line: 353, column: 602, scope: !8946)
!8956 = !DILocation(line: 353, column: 602, scope: !8957)
!8957 = !DILexicalBlockFile(scope: !8923, file: !624, discriminator: 8)
!8958 = !DILocation(line: 353, column: 602, scope: !8959)
!8959 = !DILexicalBlockFile(scope: !8923, file: !624, discriminator: 9)
!8960 = !DILocation(line: 353, column: 567, scope: !8959)
!8961 = !DILocation(line: 353, column: 567, scope: !8962)
!8962 = !DILexicalBlockFile(scope: !8923, file: !624, discriminator: 10)
!8963 = !DILocation(line: 353, column: 712, scope: !8962)
!8964 = !DILocation(line: 353, column: 708, scope: !8962)
!8965 = !DILocation(line: 353, column: 706, scope: !8962)
!8966 = !DILocation(line: 353, column: 565, scope: !8962)
!8967 = !DILocation(line: 353, column: 718, scope: !8962)
!8968 = !DILocation(line: 353, column: 716, scope: !8962)
!8969 = !DILocation(line: 353, column: 563, scope: !8962)
!8970 = !DILocation(line: 353, column: 556, scope: !8962)
!8971 = !DILocation(line: 353, column: 551, scope: !8962)
!8972 = !DILocation(line: 353, column: 547, scope: !8962)
!8973 = !DILocation(line: 353, column: 554, scope: !8962)
!8974 = !DILocation(line: 353, column: 727, scope: !8962)
!8975 = !DILocation(line: 353, column: 541, scope: !8976)
!8976 = !DILexicalBlockFile(scope: !8917, file: !624, discriminator: 11)
!8977 = !DILocation(line: 353, column: 517, scope: !8976)
!8978 = distinct !{!8978, !8979}
!8979 = !DILocation(line: 353, column: 517, scope: !8913)
!8980 = !DILocation(line: 353, column: 736, scope: !8981)
!8981 = !DILexicalBlockFile(scope: !8913, file: !624, discriminator: 12)
!8982 = !DILocation(line: 353, column: 733, scope: !8981)
!8983 = !DILocation(line: 353, column: 757, scope: !8981)
!8984 = !DILocation(line: 353, column: 754, scope: !8981)
!8985 = !DILocation(line: 353, column: 781, scope: !8981)
!8986 = !DILocation(line: 353, column: 778, scope: !8981)
!8987 = !DILocation(line: 353, column: 798, scope: !8981)
!8988 = !DILocation(line: 353, column: 511, scope: !8989)
!8989 = !DILexicalBlockFile(scope: !8906, file: !624, discriminator: 13)
!8990 = !DILocation(line: 353, column: 486, scope: !8989)
!8991 = distinct !{!8991, !8992}
!8992 = !DILocation(line: 353, column: 486, scope: !8855)
!8993 = !DILocation(line: 353, column: 800, scope: !8994)
!8994 = !DILexicalBlockFile(scope: !8855, file: !624, discriminator: 14)
!8995 = distinct !DISubprogram(name: "blend_screen_10bit", scope: !624, file: !624, line: 338, type: !1531, isLocal: true, isDefinition: true, scopeLine: 338, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!8996 = !DILocalVariable(name: "_top", arg: 1, scope: !8995, file: !624, line: 338, type: !900)
!8997 = !DILocation(line: 338, column: 47, scope: !8995)
!8998 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !8995, file: !624, line: 338, type: !902)
!8999 = !DILocation(line: 338, column: 63, scope: !8995)
!9000 = !DILocalVariable(name: "_bottom", arg: 3, scope: !8995, file: !624, line: 338, type: !900)
!9001 = !DILocation(line: 338, column: 92, scope: !8995)
!9002 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !8995, file: !624, line: 338, type: !902)
!9003 = !DILocation(line: 338, column: 111, scope: !8995)
!9004 = !DILocalVariable(name: "_dst", arg: 5, scope: !8995, file: !624, line: 338, type: !329)
!9005 = !DILocation(line: 338, column: 137, scope: !8995)
!9006 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !8995, file: !624, line: 338, type: !902)
!9007 = !DILocation(line: 338, column: 153, scope: !8995)
!9008 = !DILocalVariable(name: "width", arg: 7, scope: !8995, file: !624, line: 338, type: !902)
!9009 = !DILocation(line: 338, column: 177, scope: !8995)
!9010 = !DILocalVariable(name: "height", arg: 8, scope: !8995, file: !624, line: 338, type: !902)
!9011 = !DILocation(line: 338, column: 194, scope: !8995)
!9012 = !DILocalVariable(name: "param", arg: 9, scope: !8995, file: !624, line: 338, type: !884)
!9013 = !DILocation(line: 338, column: 216, scope: !8995)
!9014 = !DILocalVariable(name: "values", arg: 10, scope: !8995, file: !624, line: 338, type: !544)
!9015 = !DILocation(line: 338, column: 231, scope: !8995)
!9016 = !DILocalVariable(name: "starty", arg: 11, scope: !8995, file: !624, line: 338, type: !238)
!9017 = !DILocation(line: 338, column: 243, scope: !8995)
!9018 = !DILocalVariable(name: "top", scope: !8995, file: !624, line: 338, type: !839)
!9019 = !DILocation(line: 338, column: 269, scope: !8995)
!9020 = !DILocation(line: 338, column: 292, scope: !8995)
!9021 = !DILocation(line: 338, column: 275, scope: !8995)
!9022 = !DILocalVariable(name: "bottom", scope: !8995, file: !624, line: 338, type: !839)
!9023 = !DILocation(line: 338, column: 314, scope: !8995)
!9024 = !DILocation(line: 338, column: 340, scope: !8995)
!9025 = !DILocation(line: 338, column: 323, scope: !8995)
!9026 = !DILocalVariable(name: "dst", scope: !8995, file: !624, line: 338, type: !843)
!9027 = !DILocation(line: 338, column: 359, scope: !8995)
!9028 = !DILocation(line: 338, column: 376, scope: !8995)
!9029 = !DILocation(line: 338, column: 365, scope: !8995)
!9030 = !DILocalVariable(name: "opacity", scope: !8995, file: !624, line: 338, type: !248)
!9031 = !DILocation(line: 338, column: 389, scope: !8995)
!9032 = !DILocation(line: 338, column: 399, scope: !8995)
!9033 = !DILocation(line: 338, column: 406, scope: !8995)
!9034 = !DILocalVariable(name: "i", scope: !8995, file: !624, line: 338, type: !238)
!9035 = !DILocation(line: 338, column: 419, scope: !8995)
!9036 = !DILocalVariable(name: "j", scope: !8995, file: !624, line: 338, type: !238)
!9037 = !DILocation(line: 338, column: 422, scope: !8995)
!9038 = !DILocation(line: 338, column: 438, scope: !8995)
!9039 = !DILocation(line: 338, column: 457, scope: !8995)
!9040 = !DILocation(line: 338, column: 479, scope: !8995)
!9041 = !DILocation(line: 338, column: 492, scope: !9042)
!9042 = distinct !DILexicalBlock(scope: !8995, file: !624, line: 338, column: 485)
!9043 = !DILocation(line: 338, column: 490, scope: !9042)
!9044 = !DILocation(line: 338, column: 497, scope: !9045)
!9045 = !DILexicalBlockFile(scope: !9046, file: !624, discriminator: 1)
!9046 = distinct !DILexicalBlock(scope: !9042, file: !624, line: 338, column: 485)
!9047 = !DILocation(line: 338, column: 501, scope: !9045)
!9048 = !DILocation(line: 338, column: 499, scope: !9045)
!9049 = !DILocation(line: 338, column: 485, scope: !9045)
!9050 = !DILocation(line: 338, column: 523, scope: !9051)
!9051 = !DILexicalBlockFile(scope: !9052, file: !624, discriminator: 2)
!9052 = distinct !DILexicalBlock(scope: !9053, file: !624, line: 338, column: 516)
!9053 = distinct !DILexicalBlock(scope: !9046, file: !624, line: 338, column: 514)
!9054 = !DILocation(line: 338, column: 521, scope: !9051)
!9055 = !DILocation(line: 338, column: 528, scope: !9056)
!9056 = !DILexicalBlockFile(scope: !9057, file: !624, discriminator: 3)
!9057 = distinct !DILexicalBlock(scope: !9052, file: !624, line: 338, column: 516)
!9058 = !DILocation(line: 338, column: 532, scope: !9056)
!9059 = !DILocation(line: 338, column: 530, scope: !9056)
!9060 = !DILocation(line: 338, column: 516, scope: !9056)
!9061 = !DILocation(line: 338, column: 559, scope: !9062)
!9062 = !DILexicalBlockFile(scope: !9063, file: !624, discriminator: 4)
!9063 = distinct !DILexicalBlock(scope: !9057, file: !624, line: 338, column: 544)
!9064 = !DILocation(line: 338, column: 555, scope: !9062)
!9065 = !DILocation(line: 338, column: 594, scope: !9062)
!9066 = !DILocation(line: 338, column: 590, scope: !9062)
!9067 = !DILocation(line: 338, column: 589, scope: !9062)
!9068 = !DILocation(line: 338, column: 587, scope: !9062)
!9069 = !DILocation(line: 338, column: 617, scope: !9062)
!9070 = !DILocation(line: 338, column: 610, scope: !9062)
!9071 = !DILocation(line: 338, column: 609, scope: !9062)
!9072 = !DILocation(line: 338, column: 607, scope: !9062)
!9073 = !DILocation(line: 338, column: 599, scope: !9062)
!9074 = !DILocation(line: 338, column: 622, scope: !9062)
!9075 = !DILocation(line: 338, column: 578, scope: !9062)
!9076 = !DILocation(line: 338, column: 572, scope: !9062)
!9077 = !DILocation(line: 338, column: 638, scope: !9062)
!9078 = !DILocation(line: 338, column: 634, scope: !9062)
!9079 = !DILocation(line: 338, column: 632, scope: !9062)
!9080 = !DILocation(line: 338, column: 564, scope: !9062)
!9081 = !DILocation(line: 338, column: 644, scope: !9062)
!9082 = !DILocation(line: 338, column: 642, scope: !9062)
!9083 = !DILocation(line: 338, column: 562, scope: !9062)
!9084 = !DILocation(line: 338, column: 550, scope: !9062)
!9085 = !DILocation(line: 338, column: 546, scope: !9062)
!9086 = !DILocation(line: 338, column: 553, scope: !9062)
!9087 = !DILocation(line: 338, column: 653, scope: !9062)
!9088 = !DILocation(line: 338, column: 540, scope: !9089)
!9089 = !DILexicalBlockFile(scope: !9057, file: !624, discriminator: 5)
!9090 = !DILocation(line: 338, column: 516, scope: !9089)
!9091 = distinct !{!9091, !9092}
!9092 = !DILocation(line: 338, column: 516, scope: !9053)
!9093 = !DILocation(line: 338, column: 662, scope: !9094)
!9094 = !DILexicalBlockFile(scope: !9053, file: !624, discriminator: 6)
!9095 = !DILocation(line: 338, column: 659, scope: !9094)
!9096 = !DILocation(line: 338, column: 683, scope: !9094)
!9097 = !DILocation(line: 338, column: 680, scope: !9094)
!9098 = !DILocation(line: 338, column: 707, scope: !9094)
!9099 = !DILocation(line: 338, column: 704, scope: !9094)
!9100 = !DILocation(line: 338, column: 724, scope: !9094)
!9101 = !DILocation(line: 338, column: 510, scope: !9102)
!9102 = !DILexicalBlockFile(scope: !9046, file: !624, discriminator: 7)
!9103 = !DILocation(line: 338, column: 485, scope: !9102)
!9104 = distinct !{!9104, !9105}
!9105 = !DILocation(line: 338, column: 485, scope: !8995)
!9106 = !DILocation(line: 338, column: 726, scope: !9107)
!9107 = !DILexicalBlockFile(scope: !8995, file: !624, discriminator: 8)
!9108 = distinct !DISubprogram(name: "blend_softlight_10bit", scope: !624, file: !624, line: 349, type: !1531, isLocal: true, isDefinition: true, scopeLine: 349, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!9109 = !DILocalVariable(name: "_top", arg: 1, scope: !9108, file: !624, line: 349, type: !900)
!9110 = !DILocation(line: 349, column: 50, scope: !9108)
!9111 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !9108, file: !624, line: 349, type: !902)
!9112 = !DILocation(line: 349, column: 66, scope: !9108)
!9113 = !DILocalVariable(name: "_bottom", arg: 3, scope: !9108, file: !624, line: 349, type: !900)
!9114 = !DILocation(line: 349, column: 95, scope: !9108)
!9115 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !9108, file: !624, line: 349, type: !902)
!9116 = !DILocation(line: 349, column: 114, scope: !9108)
!9117 = !DILocalVariable(name: "_dst", arg: 5, scope: !9108, file: !624, line: 349, type: !329)
!9118 = !DILocation(line: 349, column: 140, scope: !9108)
!9119 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !9108, file: !624, line: 349, type: !902)
!9120 = !DILocation(line: 349, column: 156, scope: !9108)
!9121 = !DILocalVariable(name: "width", arg: 7, scope: !9108, file: !624, line: 349, type: !902)
!9122 = !DILocation(line: 349, column: 180, scope: !9108)
!9123 = !DILocalVariable(name: "height", arg: 8, scope: !9108, file: !624, line: 349, type: !902)
!9124 = !DILocation(line: 349, column: 197, scope: !9108)
!9125 = !DILocalVariable(name: "param", arg: 9, scope: !9108, file: !624, line: 349, type: !884)
!9126 = !DILocation(line: 349, column: 219, scope: !9108)
!9127 = !DILocalVariable(name: "values", arg: 10, scope: !9108, file: !624, line: 349, type: !544)
!9128 = !DILocation(line: 349, column: 234, scope: !9108)
!9129 = !DILocalVariable(name: "starty", arg: 11, scope: !9108, file: !624, line: 349, type: !238)
!9130 = !DILocation(line: 349, column: 246, scope: !9108)
!9131 = !DILocalVariable(name: "top", scope: !9108, file: !624, line: 349, type: !839)
!9132 = !DILocation(line: 349, column: 272, scope: !9108)
!9133 = !DILocation(line: 349, column: 295, scope: !9108)
!9134 = !DILocation(line: 349, column: 278, scope: !9108)
!9135 = !DILocalVariable(name: "bottom", scope: !9108, file: !624, line: 349, type: !839)
!9136 = !DILocation(line: 349, column: 317, scope: !9108)
!9137 = !DILocation(line: 349, column: 343, scope: !9108)
!9138 = !DILocation(line: 349, column: 326, scope: !9108)
!9139 = !DILocalVariable(name: "dst", scope: !9108, file: !624, line: 349, type: !843)
!9140 = !DILocation(line: 349, column: 362, scope: !9108)
!9141 = !DILocation(line: 349, column: 379, scope: !9108)
!9142 = !DILocation(line: 349, column: 368, scope: !9108)
!9143 = !DILocalVariable(name: "opacity", scope: !9108, file: !624, line: 349, type: !248)
!9144 = !DILocation(line: 349, column: 392, scope: !9108)
!9145 = !DILocation(line: 349, column: 402, scope: !9108)
!9146 = !DILocation(line: 349, column: 409, scope: !9108)
!9147 = !DILocalVariable(name: "i", scope: !9108, file: !624, line: 349, type: !238)
!9148 = !DILocation(line: 349, column: 422, scope: !9108)
!9149 = !DILocalVariable(name: "j", scope: !9108, file: !624, line: 349, type: !238)
!9150 = !DILocation(line: 349, column: 425, scope: !9108)
!9151 = !DILocation(line: 349, column: 441, scope: !9108)
!9152 = !DILocation(line: 349, column: 460, scope: !9108)
!9153 = !DILocation(line: 349, column: 482, scope: !9108)
!9154 = !DILocation(line: 349, column: 495, scope: !9155)
!9155 = distinct !DILexicalBlock(scope: !9108, file: !624, line: 349, column: 488)
!9156 = !DILocation(line: 349, column: 493, scope: !9155)
!9157 = !DILocation(line: 349, column: 500, scope: !9158)
!9158 = !DILexicalBlockFile(scope: !9159, file: !624, discriminator: 1)
!9159 = distinct !DILexicalBlock(scope: !9155, file: !624, line: 349, column: 488)
!9160 = !DILocation(line: 349, column: 504, scope: !9158)
!9161 = !DILocation(line: 349, column: 502, scope: !9158)
!9162 = !DILocation(line: 349, column: 488, scope: !9158)
!9163 = !DILocation(line: 349, column: 526, scope: !9164)
!9164 = !DILexicalBlockFile(scope: !9165, file: !624, discriminator: 2)
!9165 = distinct !DILexicalBlock(scope: !9166, file: !624, line: 349, column: 519)
!9166 = distinct !DILexicalBlock(scope: !9159, file: !624, line: 349, column: 517)
!9167 = !DILocation(line: 349, column: 524, scope: !9164)
!9168 = !DILocation(line: 349, column: 531, scope: !9169)
!9169 = !DILexicalBlockFile(scope: !9170, file: !624, discriminator: 3)
!9170 = distinct !DILexicalBlock(scope: !9165, file: !624, line: 349, column: 519)
!9171 = !DILocation(line: 349, column: 535, scope: !9169)
!9172 = !DILocation(line: 349, column: 533, scope: !9169)
!9173 = !DILocation(line: 349, column: 519, scope: !9169)
!9174 = !DILocation(line: 349, column: 562, scope: !9175)
!9175 = !DILexicalBlockFile(scope: !9176, file: !624, discriminator: 4)
!9176 = distinct !DILexicalBlock(scope: !9170, file: !624, line: 349, column: 547)
!9177 = !DILocation(line: 349, column: 558, scope: !9175)
!9178 = !DILocation(line: 349, column: 574, scope: !9175)
!9179 = !DILocation(line: 349, column: 570, scope: !9175)
!9180 = !DILocation(line: 349, column: 577, scope: !9175)
!9181 = !DILocation(line: 349, column: 569, scope: !9175)
!9182 = !DILocation(line: 349, column: 593, scope: !9183)
!9183 = !DILexicalBlockFile(scope: !9176, file: !624, discriminator: 5)
!9184 = !DILocation(line: 349, column: 586, scope: !9183)
!9185 = !DILocation(line: 349, column: 613, scope: !9183)
!9186 = !DILocation(line: 349, column: 606, scope: !9183)
!9187 = !DILocation(line: 349, column: 604, scope: !9183)
!9188 = !DILocation(line: 349, column: 598, scope: !9183)
!9189 = !DILocation(line: 349, column: 624, scope: !9183)
!9190 = !DILocation(line: 349, column: 620, scope: !9183)
!9191 = !DILocation(line: 349, column: 627, scope: !9183)
!9192 = !DILocation(line: 349, column: 617, scope: !9183)
!9193 = !DILocation(line: 349, column: 636, scope: !9183)
!9194 = !DILocation(line: 349, column: 665, scope: !9183)
!9195 = !DILocation(line: 349, column: 658, scope: !9183)
!9196 = !DILocation(line: 349, column: 668, scope: !9183)
!9197 = !DILocation(line: 349, column: 653, scope: !9183)
!9198 = !DILocation(line: 349, column: 677, scope: !9183)
!9199 = !DILocation(line: 349, column: 651, scope: !9183)
!9200 = !DILocation(line: 349, column: 644, scope: !9183)
!9201 = !DILocation(line: 349, column: 596, scope: !9183)
!9202 = !DILocation(line: 349, column: 569, scope: !9183)
!9203 = !DILocation(line: 349, column: 693, scope: !9204)
!9204 = !DILexicalBlockFile(scope: !9176, file: !624, discriminator: 6)
!9205 = !DILocation(line: 349, column: 686, scope: !9204)
!9206 = !DILocation(line: 349, column: 705, scope: !9204)
!9207 = !DILocation(line: 349, column: 698, scope: !9204)
!9208 = !DILocation(line: 349, column: 724, scope: !9204)
!9209 = !DILocation(line: 349, column: 720, scope: !9204)
!9210 = !DILocation(line: 349, column: 718, scope: !9204)
!9211 = !DILocation(line: 349, column: 728, scope: !9204)
!9212 = !DILocation(line: 349, column: 708, scope: !9204)
!9213 = !DILocation(line: 349, column: 758, scope: !9204)
!9214 = !DILocation(line: 349, column: 751, scope: !9204)
!9215 = !DILocation(line: 349, column: 761, scope: !9204)
!9216 = !DILocation(line: 349, column: 746, scope: !9204)
!9217 = !DILocation(line: 349, column: 769, scope: !9204)
!9218 = !DILocation(line: 349, column: 744, scope: !9204)
!9219 = !DILocation(line: 349, column: 737, scope: !9204)
!9220 = !DILocation(line: 349, column: 696, scope: !9204)
!9221 = !DILocation(line: 349, column: 569, scope: !9204)
!9222 = !DILocation(line: 349, column: 569, scope: !9223)
!9223 = !DILexicalBlockFile(scope: !9176, file: !624, discriminator: 7)
!9224 = !DILocation(line: 349, column: 783, scope: !9223)
!9225 = !DILocation(line: 349, column: 779, scope: !9223)
!9226 = !DILocation(line: 349, column: 777, scope: !9223)
!9227 = !DILocation(line: 349, column: 789, scope: !9223)
!9228 = !DILocation(line: 349, column: 787, scope: !9223)
!9229 = !DILocation(line: 349, column: 565, scope: !9223)
!9230 = !DILocation(line: 349, column: 558, scope: !9223)
!9231 = !DILocation(line: 349, column: 553, scope: !9223)
!9232 = !DILocation(line: 349, column: 549, scope: !9223)
!9233 = !DILocation(line: 349, column: 556, scope: !9223)
!9234 = !DILocation(line: 349, column: 798, scope: !9223)
!9235 = !DILocation(line: 349, column: 543, scope: !9236)
!9236 = !DILexicalBlockFile(scope: !9170, file: !624, discriminator: 8)
!9237 = !DILocation(line: 349, column: 519, scope: !9236)
!9238 = distinct !{!9238, !9239}
!9239 = !DILocation(line: 349, column: 519, scope: !9166)
!9240 = !DILocation(line: 349, column: 807, scope: !9241)
!9241 = !DILexicalBlockFile(scope: !9166, file: !624, discriminator: 9)
!9242 = !DILocation(line: 349, column: 804, scope: !9241)
!9243 = !DILocation(line: 349, column: 828, scope: !9241)
!9244 = !DILocation(line: 349, column: 825, scope: !9241)
!9245 = !DILocation(line: 349, column: 852, scope: !9241)
!9246 = !DILocation(line: 349, column: 849, scope: !9241)
!9247 = !DILocation(line: 349, column: 869, scope: !9241)
!9248 = !DILocation(line: 349, column: 513, scope: !9249)
!9249 = !DILexicalBlockFile(scope: !9159, file: !624, discriminator: 10)
!9250 = !DILocation(line: 349, column: 488, scope: !9249)
!9251 = distinct !{!9251, !9252}
!9252 = !DILocation(line: 349, column: 488, scope: !9108)
!9253 = !DILocation(line: 349, column: 871, scope: !9254)
!9254 = !DILexicalBlockFile(scope: !9108, file: !624, discriminator: 11)
!9255 = distinct !DISubprogram(name: "blend_subtract_10bit", scope: !624, file: !624, line: 331, type: !1531, isLocal: true, isDefinition: true, scopeLine: 331, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!9256 = !DILocalVariable(name: "_top", arg: 1, scope: !9255, file: !624, line: 331, type: !900)
!9257 = !DILocation(line: 331, column: 49, scope: !9255)
!9258 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !9255, file: !624, line: 331, type: !902)
!9259 = !DILocation(line: 331, column: 65, scope: !9255)
!9260 = !DILocalVariable(name: "_bottom", arg: 3, scope: !9255, file: !624, line: 331, type: !900)
!9261 = !DILocation(line: 331, column: 94, scope: !9255)
!9262 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !9255, file: !624, line: 331, type: !902)
!9263 = !DILocation(line: 331, column: 113, scope: !9255)
!9264 = !DILocalVariable(name: "_dst", arg: 5, scope: !9255, file: !624, line: 331, type: !329)
!9265 = !DILocation(line: 331, column: 139, scope: !9255)
!9266 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !9255, file: !624, line: 331, type: !902)
!9267 = !DILocation(line: 331, column: 155, scope: !9255)
!9268 = !DILocalVariable(name: "width", arg: 7, scope: !9255, file: !624, line: 331, type: !902)
!9269 = !DILocation(line: 331, column: 179, scope: !9255)
!9270 = !DILocalVariable(name: "height", arg: 8, scope: !9255, file: !624, line: 331, type: !902)
!9271 = !DILocation(line: 331, column: 196, scope: !9255)
!9272 = !DILocalVariable(name: "param", arg: 9, scope: !9255, file: !624, line: 331, type: !884)
!9273 = !DILocation(line: 331, column: 218, scope: !9255)
!9274 = !DILocalVariable(name: "values", arg: 10, scope: !9255, file: !624, line: 331, type: !544)
!9275 = !DILocation(line: 331, column: 233, scope: !9255)
!9276 = !DILocalVariable(name: "starty", arg: 11, scope: !9255, file: !624, line: 331, type: !238)
!9277 = !DILocation(line: 331, column: 245, scope: !9255)
!9278 = !DILocalVariable(name: "top", scope: !9255, file: !624, line: 331, type: !839)
!9279 = !DILocation(line: 331, column: 271, scope: !9255)
!9280 = !DILocation(line: 331, column: 294, scope: !9255)
!9281 = !DILocation(line: 331, column: 277, scope: !9255)
!9282 = !DILocalVariable(name: "bottom", scope: !9255, file: !624, line: 331, type: !839)
!9283 = !DILocation(line: 331, column: 316, scope: !9255)
!9284 = !DILocation(line: 331, column: 342, scope: !9255)
!9285 = !DILocation(line: 331, column: 325, scope: !9255)
!9286 = !DILocalVariable(name: "dst", scope: !9255, file: !624, line: 331, type: !843)
!9287 = !DILocation(line: 331, column: 361, scope: !9255)
!9288 = !DILocation(line: 331, column: 378, scope: !9255)
!9289 = !DILocation(line: 331, column: 367, scope: !9255)
!9290 = !DILocalVariable(name: "opacity", scope: !9255, file: !624, line: 331, type: !248)
!9291 = !DILocation(line: 331, column: 391, scope: !9255)
!9292 = !DILocation(line: 331, column: 401, scope: !9255)
!9293 = !DILocation(line: 331, column: 408, scope: !9255)
!9294 = !DILocalVariable(name: "i", scope: !9255, file: !624, line: 331, type: !238)
!9295 = !DILocation(line: 331, column: 421, scope: !9255)
!9296 = !DILocalVariable(name: "j", scope: !9255, file: !624, line: 331, type: !238)
!9297 = !DILocation(line: 331, column: 424, scope: !9255)
!9298 = !DILocation(line: 331, column: 440, scope: !9255)
!9299 = !DILocation(line: 331, column: 459, scope: !9255)
!9300 = !DILocation(line: 331, column: 481, scope: !9255)
!9301 = !DILocation(line: 331, column: 494, scope: !9302)
!9302 = distinct !DILexicalBlock(scope: !9255, file: !624, line: 331, column: 487)
!9303 = !DILocation(line: 331, column: 492, scope: !9302)
!9304 = !DILocation(line: 331, column: 499, scope: !9305)
!9305 = !DILexicalBlockFile(scope: !9306, file: !624, discriminator: 1)
!9306 = distinct !DILexicalBlock(scope: !9302, file: !624, line: 331, column: 487)
!9307 = !DILocation(line: 331, column: 503, scope: !9305)
!9308 = !DILocation(line: 331, column: 501, scope: !9305)
!9309 = !DILocation(line: 331, column: 487, scope: !9305)
!9310 = !DILocation(line: 331, column: 525, scope: !9311)
!9311 = !DILexicalBlockFile(scope: !9312, file: !624, discriminator: 2)
!9312 = distinct !DILexicalBlock(scope: !9313, file: !624, line: 331, column: 518)
!9313 = distinct !DILexicalBlock(scope: !9306, file: !624, line: 331, column: 516)
!9314 = !DILocation(line: 331, column: 523, scope: !9311)
!9315 = !DILocation(line: 331, column: 530, scope: !9316)
!9316 = !DILexicalBlockFile(scope: !9317, file: !624, discriminator: 3)
!9317 = distinct !DILexicalBlock(scope: !9312, file: !624, line: 331, column: 518)
!9318 = !DILocation(line: 331, column: 534, scope: !9316)
!9319 = !DILocation(line: 331, column: 532, scope: !9316)
!9320 = !DILocation(line: 331, column: 518, scope: !9316)
!9321 = !DILocation(line: 331, column: 561, scope: !9322)
!9322 = !DILexicalBlockFile(scope: !9323, file: !624, discriminator: 4)
!9323 = distinct !DILexicalBlock(scope: !9317, file: !624, line: 331, column: 546)
!9324 = !DILocation(line: 331, column: 557, scope: !9322)
!9325 = !DILocation(line: 331, column: 580, scope: !9322)
!9326 = !DILocation(line: 331, column: 576, scope: !9322)
!9327 = !DILocation(line: 331, column: 592, scope: !9322)
!9328 = !DILocation(line: 331, column: 585, scope: !9322)
!9329 = !DILocation(line: 331, column: 583, scope: !9322)
!9330 = !DILocation(line: 331, column: 573, scope: !9322)
!9331 = !DILocation(line: 331, column: 569, scope: !9322)
!9332 = !DILocation(line: 331, column: 569, scope: !9333)
!9333 = !DILexicalBlockFile(scope: !9323, file: !624, discriminator: 5)
!9334 = !DILocation(line: 331, column: 609, scope: !9335)
!9335 = !DILexicalBlockFile(scope: !9323, file: !624, discriminator: 6)
!9336 = !DILocation(line: 331, column: 605, scope: !9335)
!9337 = !DILocation(line: 331, column: 621, scope: !9335)
!9338 = !DILocation(line: 331, column: 614, scope: !9335)
!9339 = !DILocation(line: 331, column: 612, scope: !9335)
!9340 = !DILocation(line: 331, column: 569, scope: !9335)
!9341 = !DILocation(line: 331, column: 569, scope: !9342)
!9342 = !DILexicalBlockFile(scope: !9323, file: !624, discriminator: 7)
!9343 = !DILocation(line: 331, column: 633, scope: !9342)
!9344 = !DILocation(line: 331, column: 629, scope: !9342)
!9345 = !DILocation(line: 331, column: 627, scope: !9342)
!9346 = !DILocation(line: 331, column: 566, scope: !9342)
!9347 = !DILocation(line: 331, column: 639, scope: !9342)
!9348 = !DILocation(line: 331, column: 637, scope: !9342)
!9349 = !DILocation(line: 331, column: 564, scope: !9342)
!9350 = !DILocation(line: 331, column: 557, scope: !9342)
!9351 = !DILocation(line: 331, column: 552, scope: !9342)
!9352 = !DILocation(line: 331, column: 548, scope: !9342)
!9353 = !DILocation(line: 331, column: 555, scope: !9342)
!9354 = !DILocation(line: 331, column: 648, scope: !9342)
!9355 = !DILocation(line: 331, column: 542, scope: !9356)
!9356 = !DILexicalBlockFile(scope: !9317, file: !624, discriminator: 8)
!9357 = !DILocation(line: 331, column: 518, scope: !9356)
!9358 = distinct !{!9358, !9359}
!9359 = !DILocation(line: 331, column: 518, scope: !9313)
!9360 = !DILocation(line: 331, column: 657, scope: !9361)
!9361 = !DILexicalBlockFile(scope: !9313, file: !624, discriminator: 9)
!9362 = !DILocation(line: 331, column: 654, scope: !9361)
!9363 = !DILocation(line: 331, column: 678, scope: !9361)
!9364 = !DILocation(line: 331, column: 675, scope: !9361)
!9365 = !DILocation(line: 331, column: 702, scope: !9361)
!9366 = !DILocation(line: 331, column: 699, scope: !9361)
!9367 = !DILocation(line: 331, column: 719, scope: !9361)
!9368 = !DILocation(line: 331, column: 512, scope: !9369)
!9369 = !DILexicalBlockFile(scope: !9306, file: !624, discriminator: 10)
!9370 = !DILocation(line: 331, column: 487, scope: !9369)
!9371 = distinct !{!9371, !9372}
!9372 = !DILocation(line: 331, column: 487, scope: !9255)
!9373 = !DILocation(line: 331, column: 721, scope: !9374)
!9374 = !DILexicalBlockFile(scope: !9255, file: !624, discriminator: 11)
!9375 = distinct !DISubprogram(name: "blend_vividlight_10bit", scope: !624, file: !624, line: 358, type: !1531, isLocal: true, isDefinition: true, scopeLine: 358, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!9376 = !DILocalVariable(name: "_top", arg: 1, scope: !9375, file: !624, line: 358, type: !900)
!9377 = !DILocation(line: 358, column: 51, scope: !9375)
!9378 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !9375, file: !624, line: 358, type: !902)
!9379 = !DILocation(line: 358, column: 67, scope: !9375)
!9380 = !DILocalVariable(name: "_bottom", arg: 3, scope: !9375, file: !624, line: 358, type: !900)
!9381 = !DILocation(line: 358, column: 96, scope: !9375)
!9382 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !9375, file: !624, line: 358, type: !902)
!9383 = !DILocation(line: 358, column: 115, scope: !9375)
!9384 = !DILocalVariable(name: "_dst", arg: 5, scope: !9375, file: !624, line: 358, type: !329)
!9385 = !DILocation(line: 358, column: 141, scope: !9375)
!9386 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !9375, file: !624, line: 358, type: !902)
!9387 = !DILocation(line: 358, column: 157, scope: !9375)
!9388 = !DILocalVariable(name: "width", arg: 7, scope: !9375, file: !624, line: 358, type: !902)
!9389 = !DILocation(line: 358, column: 181, scope: !9375)
!9390 = !DILocalVariable(name: "height", arg: 8, scope: !9375, file: !624, line: 358, type: !902)
!9391 = !DILocation(line: 358, column: 198, scope: !9375)
!9392 = !DILocalVariable(name: "param", arg: 9, scope: !9375, file: !624, line: 358, type: !884)
!9393 = !DILocation(line: 358, column: 220, scope: !9375)
!9394 = !DILocalVariable(name: "values", arg: 10, scope: !9375, file: !624, line: 358, type: !544)
!9395 = !DILocation(line: 358, column: 235, scope: !9375)
!9396 = !DILocalVariable(name: "starty", arg: 11, scope: !9375, file: !624, line: 358, type: !238)
!9397 = !DILocation(line: 358, column: 247, scope: !9375)
!9398 = !DILocalVariable(name: "top", scope: !9375, file: !624, line: 358, type: !839)
!9399 = !DILocation(line: 358, column: 273, scope: !9375)
!9400 = !DILocation(line: 358, column: 296, scope: !9375)
!9401 = !DILocation(line: 358, column: 279, scope: !9375)
!9402 = !DILocalVariable(name: "bottom", scope: !9375, file: !624, line: 358, type: !839)
!9403 = !DILocation(line: 358, column: 318, scope: !9375)
!9404 = !DILocation(line: 358, column: 344, scope: !9375)
!9405 = !DILocation(line: 358, column: 327, scope: !9375)
!9406 = !DILocalVariable(name: "dst", scope: !9375, file: !624, line: 358, type: !843)
!9407 = !DILocation(line: 358, column: 363, scope: !9375)
!9408 = !DILocation(line: 358, column: 380, scope: !9375)
!9409 = !DILocation(line: 358, column: 369, scope: !9375)
!9410 = !DILocalVariable(name: "opacity", scope: !9375, file: !624, line: 358, type: !248)
!9411 = !DILocation(line: 358, column: 393, scope: !9375)
!9412 = !DILocation(line: 358, column: 403, scope: !9375)
!9413 = !DILocation(line: 358, column: 410, scope: !9375)
!9414 = !DILocalVariable(name: "i", scope: !9375, file: !624, line: 358, type: !238)
!9415 = !DILocation(line: 358, column: 423, scope: !9375)
!9416 = !DILocalVariable(name: "j", scope: !9375, file: !624, line: 358, type: !238)
!9417 = !DILocation(line: 358, column: 426, scope: !9375)
!9418 = !DILocation(line: 358, column: 442, scope: !9375)
!9419 = !DILocation(line: 358, column: 461, scope: !9375)
!9420 = !DILocation(line: 358, column: 483, scope: !9375)
!9421 = !DILocation(line: 358, column: 496, scope: !9422)
!9422 = distinct !DILexicalBlock(scope: !9375, file: !624, line: 358, column: 489)
!9423 = !DILocation(line: 358, column: 494, scope: !9422)
!9424 = !DILocation(line: 358, column: 501, scope: !9425)
!9425 = !DILexicalBlockFile(scope: !9426, file: !624, discriminator: 1)
!9426 = distinct !DILexicalBlock(scope: !9422, file: !624, line: 358, column: 489)
!9427 = !DILocation(line: 358, column: 505, scope: !9425)
!9428 = !DILocation(line: 358, column: 503, scope: !9425)
!9429 = !DILocation(line: 358, column: 489, scope: !9425)
!9430 = !DILocation(line: 358, column: 527, scope: !9431)
!9431 = !DILexicalBlockFile(scope: !9432, file: !624, discriminator: 2)
!9432 = distinct !DILexicalBlock(scope: !9433, file: !624, line: 358, column: 520)
!9433 = distinct !DILexicalBlock(scope: !9426, file: !624, line: 358, column: 518)
!9434 = !DILocation(line: 358, column: 525, scope: !9431)
!9435 = !DILocation(line: 358, column: 532, scope: !9436)
!9436 = !DILexicalBlockFile(scope: !9437, file: !624, discriminator: 3)
!9437 = distinct !DILexicalBlock(scope: !9432, file: !624, line: 358, column: 520)
!9438 = !DILocation(line: 358, column: 536, scope: !9436)
!9439 = !DILocation(line: 358, column: 534, scope: !9436)
!9440 = !DILocation(line: 358, column: 520, scope: !9436)
!9441 = !DILocation(line: 358, column: 563, scope: !9442)
!9442 = !DILexicalBlockFile(scope: !9443, file: !624, discriminator: 4)
!9443 = distinct !DILexicalBlock(scope: !9437, file: !624, line: 358, column: 548)
!9444 = !DILocation(line: 358, column: 559, scope: !9442)
!9445 = !DILocation(line: 358, column: 575, scope: !9442)
!9446 = !DILocation(line: 358, column: 571, scope: !9442)
!9447 = !DILocation(line: 358, column: 578, scope: !9442)
!9448 = !DILocation(line: 358, column: 570, scope: !9442)
!9449 = !DILocation(line: 358, column: 598, scope: !9450)
!9450 = !DILexicalBlockFile(scope: !9443, file: !624, discriminator: 5)
!9451 = !DILocation(line: 358, column: 594, scope: !9450)
!9452 = !DILocation(line: 358, column: 592, scope: !9450)
!9453 = !DILocation(line: 358, column: 602, scope: !9450)
!9454 = !DILocation(line: 358, column: 588, scope: !9450)
!9455 = !DILocation(line: 358, column: 619, scope: !9456)
!9456 = !DILexicalBlockFile(scope: !9443, file: !624, discriminator: 6)
!9457 = !DILocation(line: 358, column: 615, scope: !9456)
!9458 = !DILocation(line: 358, column: 613, scope: !9456)
!9459 = !DILocation(line: 358, column: 588, scope: !9456)
!9460 = !DILocation(line: 358, column: 657, scope: !9461)
!9461 = !DILexicalBlockFile(scope: !9443, file: !624, discriminator: 7)
!9462 = !DILocation(line: 358, column: 650, scope: !9461)
!9463 = !DILocation(line: 358, column: 649, scope: !9461)
!9464 = !DILocation(line: 358, column: 647, scope: !9461)
!9465 = !DILocation(line: 358, column: 662, scope: !9461)
!9466 = !DILocation(line: 358, column: 680, scope: !9461)
!9467 = !DILocation(line: 358, column: 676, scope: !9461)
!9468 = !DILocation(line: 358, column: 674, scope: !9461)
!9469 = !DILocation(line: 358, column: 669, scope: !9461)
!9470 = !DILocation(line: 358, column: 638, scope: !9461)
!9471 = !DILocation(line: 358, column: 630, scope: !9461)
!9472 = !DILocation(line: 358, column: 626, scope: !9461)
!9473 = !DILocation(line: 358, column: 626, scope: !9474)
!9474 = !DILexicalBlockFile(scope: !9443, file: !624, discriminator: 8)
!9475 = !DILocation(line: 358, column: 718, scope: !9476)
!9476 = !DILexicalBlockFile(scope: !9443, file: !624, discriminator: 9)
!9477 = !DILocation(line: 358, column: 711, scope: !9476)
!9478 = !DILocation(line: 358, column: 710, scope: !9476)
!9479 = !DILocation(line: 358, column: 708, scope: !9476)
!9480 = !DILocation(line: 358, column: 723, scope: !9476)
!9481 = !DILocation(line: 358, column: 741, scope: !9476)
!9482 = !DILocation(line: 358, column: 737, scope: !9476)
!9483 = !DILocation(line: 358, column: 735, scope: !9476)
!9484 = !DILocation(line: 358, column: 730, scope: !9476)
!9485 = !DILocation(line: 358, column: 699, scope: !9476)
!9486 = !DILocation(line: 358, column: 626, scope: !9476)
!9487 = !DILocation(line: 358, column: 626, scope: !9488)
!9488 = !DILexicalBlockFile(scope: !9443, file: !624, discriminator: 10)
!9489 = !DILocation(line: 358, column: 588, scope: !9488)
!9490 = !DILocation(line: 358, column: 588, scope: !9491)
!9491 = !DILexicalBlockFile(scope: !9443, file: !624, discriminator: 11)
!9492 = !DILocation(line: 358, column: 570, scope: !9491)
!9493 = !DILocation(line: 358, column: 762, scope: !9494)
!9494 = !DILexicalBlockFile(scope: !9443, file: !624, discriminator: 12)
!9495 = !DILocation(line: 358, column: 758, scope: !9494)
!9496 = !DILocation(line: 358, column: 765, scope: !9494)
!9497 = !DILocation(line: 358, column: 755, scope: !9494)
!9498 = !DILocation(line: 358, column: 773, scope: !9494)
!9499 = !DILocation(line: 358, column: 751, scope: !9494)
!9500 = !DILocation(line: 358, column: 794, scope: !9501)
!9501 = !DILexicalBlockFile(scope: !9443, file: !624, discriminator: 13)
!9502 = !DILocation(line: 358, column: 790, scope: !9501)
!9503 = !DILocation(line: 358, column: 797, scope: !9501)
!9504 = !DILocation(line: 358, column: 787, scope: !9501)
!9505 = !DILocation(line: 358, column: 751, scope: !9501)
!9506 = !DILocation(line: 358, column: 828, scope: !9507)
!9507 = !DILexicalBlockFile(scope: !9443, file: !624, discriminator: 14)
!9508 = !DILocation(line: 358, column: 821, scope: !9507)
!9509 = !DILocation(line: 358, column: 820, scope: !9507)
!9510 = !DILocation(line: 358, column: 832, scope: !9507)
!9511 = !DILocation(line: 358, column: 859, scope: !9507)
!9512 = !DILocation(line: 358, column: 855, scope: !9507)
!9513 = !DILocation(line: 358, column: 862, scope: !9507)
!9514 = !DILocation(line: 358, column: 852, scope: !9507)
!9515 = !DILocation(line: 358, column: 847, scope: !9507)
!9516 = !DILocation(line: 358, column: 839, scope: !9507)
!9517 = !DILocation(line: 358, column: 815, scope: !9507)
!9518 = !DILocation(line: 358, column: 808, scope: !9507)
!9519 = !DILocation(line: 358, column: 886, scope: !9520)
!9520 = !DILexicalBlockFile(scope: !9443, file: !624, discriminator: 15)
!9521 = !DILocation(line: 358, column: 879, scope: !9520)
!9522 = !DILocation(line: 358, column: 878, scope: !9520)
!9523 = !DILocation(line: 358, column: 890, scope: !9520)
!9524 = !DILocation(line: 358, column: 917, scope: !9520)
!9525 = !DILocation(line: 358, column: 913, scope: !9520)
!9526 = !DILocation(line: 358, column: 920, scope: !9520)
!9527 = !DILocation(line: 358, column: 910, scope: !9520)
!9528 = !DILocation(line: 358, column: 905, scope: !9520)
!9529 = !DILocation(line: 358, column: 897, scope: !9520)
!9530 = !DILocation(line: 358, column: 808, scope: !9520)
!9531 = !DILocation(line: 358, column: 808, scope: !9532)
!9532 = !DILexicalBlockFile(scope: !9443, file: !624, discriminator: 16)
!9533 = !DILocation(line: 358, column: 808, scope: !9534)
!9534 = !DILexicalBlockFile(scope: !9443, file: !624, discriminator: 17)
!9535 = !DILocation(line: 358, column: 751, scope: !9534)
!9536 = !DILocation(line: 358, column: 751, scope: !9537)
!9537 = !DILexicalBlockFile(scope: !9443, file: !624, discriminator: 18)
!9538 = !DILocation(line: 358, column: 570, scope: !9537)
!9539 = !DILocation(line: 358, column: 570, scope: !9540)
!9540 = !DILexicalBlockFile(scope: !9443, file: !624, discriminator: 19)
!9541 = !DILocation(line: 358, column: 949, scope: !9540)
!9542 = !DILocation(line: 358, column: 945, scope: !9540)
!9543 = !DILocation(line: 358, column: 943, scope: !9540)
!9544 = !DILocation(line: 358, column: 568, scope: !9540)
!9545 = !DILocation(line: 358, column: 955, scope: !9540)
!9546 = !DILocation(line: 358, column: 953, scope: !9540)
!9547 = !DILocation(line: 358, column: 566, scope: !9540)
!9548 = !DILocation(line: 358, column: 559, scope: !9540)
!9549 = !DILocation(line: 358, column: 554, scope: !9540)
!9550 = !DILocation(line: 358, column: 550, scope: !9540)
!9551 = !DILocation(line: 358, column: 557, scope: !9540)
!9552 = !DILocation(line: 358, column: 964, scope: !9540)
!9553 = !DILocation(line: 358, column: 544, scope: !9554)
!9554 = !DILexicalBlockFile(scope: !9437, file: !624, discriminator: 20)
!9555 = !DILocation(line: 358, column: 520, scope: !9554)
!9556 = distinct !{!9556, !9557}
!9557 = !DILocation(line: 358, column: 520, scope: !9433)
!9558 = !DILocation(line: 358, column: 973, scope: !9559)
!9559 = !DILexicalBlockFile(scope: !9433, file: !624, discriminator: 21)
!9560 = !DILocation(line: 358, column: 970, scope: !9559)
!9561 = !DILocation(line: 358, column: 994, scope: !9559)
!9562 = !DILocation(line: 358, column: 991, scope: !9559)
!9563 = !DILocation(line: 358, column: 1018, scope: !9559)
!9564 = !DILocation(line: 358, column: 1015, scope: !9559)
!9565 = !DILocation(line: 358, column: 1035, scope: !9559)
!9566 = !DILocation(line: 358, column: 514, scope: !9567)
!9567 = !DILexicalBlockFile(scope: !9426, file: !624, discriminator: 22)
!9568 = !DILocation(line: 358, column: 489, scope: !9567)
!9569 = distinct !{!9569, !9570}
!9570 = !DILocation(line: 358, column: 489, scope: !9375)
!9571 = !DILocation(line: 358, column: 1037, scope: !9572)
!9572 = !DILexicalBlockFile(scope: !9375, file: !624, discriminator: 23)
!9573 = distinct !DISubprogram(name: "blend_xor_10bit", scope: !624, file: !624, line: 357, type: !1531, isLocal: true, isDefinition: true, scopeLine: 357, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!9574 = !DILocalVariable(name: "_top", arg: 1, scope: !9573, file: !624, line: 357, type: !900)
!9575 = !DILocation(line: 357, column: 44, scope: !9573)
!9576 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !9573, file: !624, line: 357, type: !902)
!9577 = !DILocation(line: 357, column: 60, scope: !9573)
!9578 = !DILocalVariable(name: "_bottom", arg: 3, scope: !9573, file: !624, line: 357, type: !900)
!9579 = !DILocation(line: 357, column: 89, scope: !9573)
!9580 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !9573, file: !624, line: 357, type: !902)
!9581 = !DILocation(line: 357, column: 108, scope: !9573)
!9582 = !DILocalVariable(name: "_dst", arg: 5, scope: !9573, file: !624, line: 357, type: !329)
!9583 = !DILocation(line: 357, column: 134, scope: !9573)
!9584 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !9573, file: !624, line: 357, type: !902)
!9585 = !DILocation(line: 357, column: 150, scope: !9573)
!9586 = !DILocalVariable(name: "width", arg: 7, scope: !9573, file: !624, line: 357, type: !902)
!9587 = !DILocation(line: 357, column: 174, scope: !9573)
!9588 = !DILocalVariable(name: "height", arg: 8, scope: !9573, file: !624, line: 357, type: !902)
!9589 = !DILocation(line: 357, column: 191, scope: !9573)
!9590 = !DILocalVariable(name: "param", arg: 9, scope: !9573, file: !624, line: 357, type: !884)
!9591 = !DILocation(line: 357, column: 213, scope: !9573)
!9592 = !DILocalVariable(name: "values", arg: 10, scope: !9573, file: !624, line: 357, type: !544)
!9593 = !DILocation(line: 357, column: 228, scope: !9573)
!9594 = !DILocalVariable(name: "starty", arg: 11, scope: !9573, file: !624, line: 357, type: !238)
!9595 = !DILocation(line: 357, column: 240, scope: !9573)
!9596 = !DILocalVariable(name: "top", scope: !9573, file: !624, line: 357, type: !839)
!9597 = !DILocation(line: 357, column: 266, scope: !9573)
!9598 = !DILocation(line: 357, column: 289, scope: !9573)
!9599 = !DILocation(line: 357, column: 272, scope: !9573)
!9600 = !DILocalVariable(name: "bottom", scope: !9573, file: !624, line: 357, type: !839)
!9601 = !DILocation(line: 357, column: 311, scope: !9573)
!9602 = !DILocation(line: 357, column: 337, scope: !9573)
!9603 = !DILocation(line: 357, column: 320, scope: !9573)
!9604 = !DILocalVariable(name: "dst", scope: !9573, file: !624, line: 357, type: !843)
!9605 = !DILocation(line: 357, column: 356, scope: !9573)
!9606 = !DILocation(line: 357, column: 373, scope: !9573)
!9607 = !DILocation(line: 357, column: 362, scope: !9573)
!9608 = !DILocalVariable(name: "opacity", scope: !9573, file: !624, line: 357, type: !248)
!9609 = !DILocation(line: 357, column: 386, scope: !9573)
!9610 = !DILocation(line: 357, column: 396, scope: !9573)
!9611 = !DILocation(line: 357, column: 403, scope: !9573)
!9612 = !DILocalVariable(name: "i", scope: !9573, file: !624, line: 357, type: !238)
!9613 = !DILocation(line: 357, column: 416, scope: !9573)
!9614 = !DILocalVariable(name: "j", scope: !9573, file: !624, line: 357, type: !238)
!9615 = !DILocation(line: 357, column: 419, scope: !9573)
!9616 = !DILocation(line: 357, column: 435, scope: !9573)
!9617 = !DILocation(line: 357, column: 454, scope: !9573)
!9618 = !DILocation(line: 357, column: 476, scope: !9573)
!9619 = !DILocation(line: 357, column: 489, scope: !9620)
!9620 = distinct !DILexicalBlock(scope: !9573, file: !624, line: 357, column: 482)
!9621 = !DILocation(line: 357, column: 487, scope: !9620)
!9622 = !DILocation(line: 357, column: 494, scope: !9623)
!9623 = !DILexicalBlockFile(scope: !9624, file: !624, discriminator: 1)
!9624 = distinct !DILexicalBlock(scope: !9620, file: !624, line: 357, column: 482)
!9625 = !DILocation(line: 357, column: 498, scope: !9623)
!9626 = !DILocation(line: 357, column: 496, scope: !9623)
!9627 = !DILocation(line: 357, column: 482, scope: !9623)
!9628 = !DILocation(line: 357, column: 520, scope: !9629)
!9629 = !DILexicalBlockFile(scope: !9630, file: !624, discriminator: 2)
!9630 = distinct !DILexicalBlock(scope: !9631, file: !624, line: 357, column: 513)
!9631 = distinct !DILexicalBlock(scope: !9624, file: !624, line: 357, column: 511)
!9632 = !DILocation(line: 357, column: 518, scope: !9629)
!9633 = !DILocation(line: 357, column: 525, scope: !9634)
!9634 = !DILexicalBlockFile(scope: !9635, file: !624, discriminator: 3)
!9635 = distinct !DILexicalBlock(scope: !9630, file: !624, line: 357, column: 513)
!9636 = !DILocation(line: 357, column: 529, scope: !9634)
!9637 = !DILocation(line: 357, column: 527, scope: !9634)
!9638 = !DILocation(line: 357, column: 513, scope: !9634)
!9639 = !DILocation(line: 357, column: 556, scope: !9640)
!9640 = !DILexicalBlockFile(scope: !9641, file: !624, discriminator: 4)
!9641 = distinct !DILexicalBlock(scope: !9635, file: !624, line: 357, column: 541)
!9642 = !DILocation(line: 357, column: 552, scope: !9640)
!9643 = !DILocation(line: 357, column: 567, scope: !9640)
!9644 = !DILocation(line: 357, column: 563, scope: !9640)
!9645 = !DILocation(line: 357, column: 579, scope: !9640)
!9646 = !DILocation(line: 357, column: 572, scope: !9640)
!9647 = !DILocation(line: 357, column: 570, scope: !9640)
!9648 = !DILocation(line: 357, column: 589, scope: !9640)
!9649 = !DILocation(line: 357, column: 585, scope: !9640)
!9650 = !DILocation(line: 357, column: 583, scope: !9640)
!9651 = !DILocation(line: 357, column: 561, scope: !9640)
!9652 = !DILocation(line: 357, column: 595, scope: !9640)
!9653 = !DILocation(line: 357, column: 593, scope: !9640)
!9654 = !DILocation(line: 357, column: 559, scope: !9640)
!9655 = !DILocation(line: 357, column: 547, scope: !9640)
!9656 = !DILocation(line: 357, column: 543, scope: !9640)
!9657 = !DILocation(line: 357, column: 550, scope: !9640)
!9658 = !DILocation(line: 357, column: 604, scope: !9640)
!9659 = !DILocation(line: 357, column: 537, scope: !9660)
!9660 = !DILexicalBlockFile(scope: !9635, file: !624, discriminator: 5)
!9661 = !DILocation(line: 357, column: 513, scope: !9660)
!9662 = distinct !{!9662, !9663}
!9663 = !DILocation(line: 357, column: 513, scope: !9631)
!9664 = !DILocation(line: 357, column: 613, scope: !9665)
!9665 = !DILexicalBlockFile(scope: !9631, file: !624, discriminator: 6)
!9666 = !DILocation(line: 357, column: 610, scope: !9665)
!9667 = !DILocation(line: 357, column: 634, scope: !9665)
!9668 = !DILocation(line: 357, column: 631, scope: !9665)
!9669 = !DILocation(line: 357, column: 658, scope: !9665)
!9670 = !DILocation(line: 357, column: 655, scope: !9665)
!9671 = !DILocation(line: 357, column: 675, scope: !9665)
!9672 = !DILocation(line: 357, column: 507, scope: !9673)
!9673 = !DILexicalBlockFile(scope: !9624, file: !624, discriminator: 7)
!9674 = !DILocation(line: 357, column: 482, scope: !9673)
!9675 = distinct !{!9675, !9676}
!9676 = !DILocation(line: 357, column: 482, scope: !9573)
!9677 = !DILocation(line: 357, column: 677, scope: !9678)
!9678 = !DILexicalBlockFile(scope: !9573, file: !624, discriminator: 8)
!9679 = distinct !DISubprogram(name: "blend_addition_12bit", scope: !624, file: !624, line: 371, type: !1531, isLocal: true, isDefinition: true, scopeLine: 371, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!9680 = !DILocalVariable(name: "_top", arg: 1, scope: !9679, file: !624, line: 371, type: !900)
!9681 = !DILocation(line: 371, column: 49, scope: !9679)
!9682 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !9679, file: !624, line: 371, type: !902)
!9683 = !DILocation(line: 371, column: 65, scope: !9679)
!9684 = !DILocalVariable(name: "_bottom", arg: 3, scope: !9679, file: !624, line: 371, type: !900)
!9685 = !DILocation(line: 371, column: 94, scope: !9679)
!9686 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !9679, file: !624, line: 371, type: !902)
!9687 = !DILocation(line: 371, column: 113, scope: !9679)
!9688 = !DILocalVariable(name: "_dst", arg: 5, scope: !9679, file: !624, line: 371, type: !329)
!9689 = !DILocation(line: 371, column: 139, scope: !9679)
!9690 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !9679, file: !624, line: 371, type: !902)
!9691 = !DILocation(line: 371, column: 155, scope: !9679)
!9692 = !DILocalVariable(name: "width", arg: 7, scope: !9679, file: !624, line: 371, type: !902)
!9693 = !DILocation(line: 371, column: 179, scope: !9679)
!9694 = !DILocalVariable(name: "height", arg: 8, scope: !9679, file: !624, line: 371, type: !902)
!9695 = !DILocation(line: 371, column: 196, scope: !9679)
!9696 = !DILocalVariable(name: "param", arg: 9, scope: !9679, file: !624, line: 371, type: !884)
!9697 = !DILocation(line: 371, column: 218, scope: !9679)
!9698 = !DILocalVariable(name: "values", arg: 10, scope: !9679, file: !624, line: 371, type: !544)
!9699 = !DILocation(line: 371, column: 233, scope: !9679)
!9700 = !DILocalVariable(name: "starty", arg: 11, scope: !9679, file: !624, line: 371, type: !238)
!9701 = !DILocation(line: 371, column: 245, scope: !9679)
!9702 = !DILocalVariable(name: "top", scope: !9679, file: !624, line: 371, type: !839)
!9703 = !DILocation(line: 371, column: 271, scope: !9679)
!9704 = !DILocation(line: 371, column: 294, scope: !9679)
!9705 = !DILocation(line: 371, column: 277, scope: !9679)
!9706 = !DILocalVariable(name: "bottom", scope: !9679, file: !624, line: 371, type: !839)
!9707 = !DILocation(line: 371, column: 316, scope: !9679)
!9708 = !DILocation(line: 371, column: 342, scope: !9679)
!9709 = !DILocation(line: 371, column: 325, scope: !9679)
!9710 = !DILocalVariable(name: "dst", scope: !9679, file: !624, line: 371, type: !843)
!9711 = !DILocation(line: 371, column: 361, scope: !9679)
!9712 = !DILocation(line: 371, column: 378, scope: !9679)
!9713 = !DILocation(line: 371, column: 367, scope: !9679)
!9714 = !DILocalVariable(name: "opacity", scope: !9679, file: !624, line: 371, type: !248)
!9715 = !DILocation(line: 371, column: 391, scope: !9679)
!9716 = !DILocation(line: 371, column: 401, scope: !9679)
!9717 = !DILocation(line: 371, column: 408, scope: !9679)
!9718 = !DILocalVariable(name: "i", scope: !9679, file: !624, line: 371, type: !238)
!9719 = !DILocation(line: 371, column: 421, scope: !9679)
!9720 = !DILocalVariable(name: "j", scope: !9679, file: !624, line: 371, type: !238)
!9721 = !DILocation(line: 371, column: 424, scope: !9679)
!9722 = !DILocation(line: 371, column: 440, scope: !9679)
!9723 = !DILocation(line: 371, column: 459, scope: !9679)
!9724 = !DILocation(line: 371, column: 481, scope: !9679)
!9725 = !DILocation(line: 371, column: 494, scope: !9726)
!9726 = distinct !DILexicalBlock(scope: !9679, file: !624, line: 371, column: 487)
!9727 = !DILocation(line: 371, column: 492, scope: !9726)
!9728 = !DILocation(line: 371, column: 499, scope: !9729)
!9729 = !DILexicalBlockFile(scope: !9730, file: !624, discriminator: 1)
!9730 = distinct !DILexicalBlock(scope: !9726, file: !624, line: 371, column: 487)
!9731 = !DILocation(line: 371, column: 503, scope: !9729)
!9732 = !DILocation(line: 371, column: 501, scope: !9729)
!9733 = !DILocation(line: 371, column: 487, scope: !9729)
!9734 = !DILocation(line: 371, column: 525, scope: !9735)
!9735 = !DILexicalBlockFile(scope: !9736, file: !624, discriminator: 2)
!9736 = distinct !DILexicalBlock(scope: !9737, file: !624, line: 371, column: 518)
!9737 = distinct !DILexicalBlock(scope: !9730, file: !624, line: 371, column: 516)
!9738 = !DILocation(line: 371, column: 523, scope: !9735)
!9739 = !DILocation(line: 371, column: 530, scope: !9740)
!9740 = !DILexicalBlockFile(scope: !9741, file: !624, discriminator: 3)
!9741 = distinct !DILexicalBlock(scope: !9736, file: !624, line: 371, column: 518)
!9742 = !DILocation(line: 371, column: 534, scope: !9740)
!9743 = !DILocation(line: 371, column: 532, scope: !9740)
!9744 = !DILocation(line: 371, column: 518, scope: !9740)
!9745 = !DILocation(line: 371, column: 561, scope: !9746)
!9746 = !DILexicalBlockFile(scope: !9747, file: !624, discriminator: 4)
!9747 = distinct !DILexicalBlock(scope: !9741, file: !624, line: 371, column: 546)
!9748 = !DILocation(line: 371, column: 557, scope: !9746)
!9749 = !DILocation(line: 371, column: 583, scope: !9746)
!9750 = !DILocation(line: 371, column: 579, scope: !9746)
!9751 = !DILocation(line: 371, column: 595, scope: !9746)
!9752 = !DILocation(line: 371, column: 588, scope: !9746)
!9753 = !DILocation(line: 371, column: 586, scope: !9746)
!9754 = !DILocation(line: 371, column: 576, scope: !9746)
!9755 = !DILocation(line: 371, column: 569, scope: !9746)
!9756 = !DILocation(line: 371, column: 606, scope: !9757)
!9757 = !DILexicalBlockFile(scope: !9747, file: !624, discriminator: 5)
!9758 = !DILocation(line: 371, column: 602, scope: !9757)
!9759 = !DILocation(line: 371, column: 618, scope: !9757)
!9760 = !DILocation(line: 371, column: 611, scope: !9757)
!9761 = !DILocation(line: 371, column: 609, scope: !9757)
!9762 = !DILocation(line: 371, column: 569, scope: !9757)
!9763 = !DILocation(line: 371, column: 569, scope: !9764)
!9764 = !DILexicalBlockFile(scope: !9747, file: !624, discriminator: 6)
!9765 = !DILocation(line: 371, column: 569, scope: !9766)
!9766 = !DILexicalBlockFile(scope: !9747, file: !624, discriminator: 7)
!9767 = !DILocation(line: 371, column: 639, scope: !9766)
!9768 = !DILocation(line: 371, column: 635, scope: !9766)
!9769 = !DILocation(line: 371, column: 633, scope: !9766)
!9770 = !DILocation(line: 371, column: 566, scope: !9766)
!9771 = !DILocation(line: 371, column: 645, scope: !9766)
!9772 = !DILocation(line: 371, column: 643, scope: !9766)
!9773 = !DILocation(line: 371, column: 564, scope: !9766)
!9774 = !DILocation(line: 371, column: 557, scope: !9766)
!9775 = !DILocation(line: 371, column: 552, scope: !9766)
!9776 = !DILocation(line: 371, column: 548, scope: !9766)
!9777 = !DILocation(line: 371, column: 555, scope: !9766)
!9778 = !DILocation(line: 371, column: 654, scope: !9766)
!9779 = !DILocation(line: 371, column: 542, scope: !9780)
!9780 = !DILexicalBlockFile(scope: !9741, file: !624, discriminator: 8)
!9781 = !DILocation(line: 371, column: 518, scope: !9780)
!9782 = distinct !{!9782, !9783}
!9783 = !DILocation(line: 371, column: 518, scope: !9737)
!9784 = !DILocation(line: 371, column: 663, scope: !9785)
!9785 = !DILexicalBlockFile(scope: !9737, file: !624, discriminator: 9)
!9786 = !DILocation(line: 371, column: 660, scope: !9785)
!9787 = !DILocation(line: 371, column: 684, scope: !9785)
!9788 = !DILocation(line: 371, column: 681, scope: !9785)
!9789 = !DILocation(line: 371, column: 708, scope: !9785)
!9790 = !DILocation(line: 371, column: 705, scope: !9785)
!9791 = !DILocation(line: 371, column: 725, scope: !9785)
!9792 = !DILocation(line: 371, column: 512, scope: !9793)
!9793 = !DILexicalBlockFile(scope: !9730, file: !624, discriminator: 10)
!9794 = !DILocation(line: 371, column: 487, scope: !9793)
!9795 = distinct !{!9795, !9796}
!9796 = !DILocation(line: 371, column: 487, scope: !9679)
!9797 = !DILocation(line: 371, column: 727, scope: !9798)
!9798 = !DILexicalBlockFile(scope: !9679, file: !624, discriminator: 11)
!9799 = distinct !DISubprogram(name: "blend_grainmerge_12bit", scope: !624, file: !624, line: 372, type: !1531, isLocal: true, isDefinition: true, scopeLine: 372, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!9800 = !DILocation(line: 229, column: 99, scope: !5463, inlinedAt: !9801)
!9801 = distinct !DILocation(line: 372, column: 575, scope: !9802)
!9802 = !DILexicalBlockFile(scope: !9803, file: !624, discriminator: 4)
!9803 = distinct !DILexicalBlock(scope: !9804, file: !624, line: 372, column: 548)
!9804 = distinct !DILexicalBlock(scope: !9805, file: !624, line: 372, column: 520)
!9805 = distinct !DILexicalBlock(scope: !9806, file: !624, line: 372, column: 520)
!9806 = distinct !DILexicalBlock(scope: !9807, file: !624, line: 372, column: 518)
!9807 = distinct !DILexicalBlock(scope: !9808, file: !624, line: 372, column: 489)
!9808 = distinct !DILexicalBlock(scope: !9799, file: !624, line: 372, column: 489)
!9809 = !DILocation(line: 229, column: 106, scope: !5463, inlinedAt: !9801)
!9810 = !DILocalVariable(name: "_top", arg: 1, scope: !9799, file: !624, line: 372, type: !900)
!9811 = !DILocation(line: 372, column: 51, scope: !9799)
!9812 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !9799, file: !624, line: 372, type: !902)
!9813 = !DILocation(line: 372, column: 67, scope: !9799)
!9814 = !DILocalVariable(name: "_bottom", arg: 3, scope: !9799, file: !624, line: 372, type: !900)
!9815 = !DILocation(line: 372, column: 96, scope: !9799)
!9816 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !9799, file: !624, line: 372, type: !902)
!9817 = !DILocation(line: 372, column: 115, scope: !9799)
!9818 = !DILocalVariable(name: "_dst", arg: 5, scope: !9799, file: !624, line: 372, type: !329)
!9819 = !DILocation(line: 372, column: 141, scope: !9799)
!9820 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !9799, file: !624, line: 372, type: !902)
!9821 = !DILocation(line: 372, column: 157, scope: !9799)
!9822 = !DILocalVariable(name: "width", arg: 7, scope: !9799, file: !624, line: 372, type: !902)
!9823 = !DILocation(line: 372, column: 181, scope: !9799)
!9824 = !DILocalVariable(name: "height", arg: 8, scope: !9799, file: !624, line: 372, type: !902)
!9825 = !DILocation(line: 372, column: 198, scope: !9799)
!9826 = !DILocalVariable(name: "param", arg: 9, scope: !9799, file: !624, line: 372, type: !884)
!9827 = !DILocation(line: 372, column: 220, scope: !9799)
!9828 = !DILocalVariable(name: "values", arg: 10, scope: !9799, file: !624, line: 372, type: !544)
!9829 = !DILocation(line: 372, column: 235, scope: !9799)
!9830 = !DILocalVariable(name: "starty", arg: 11, scope: !9799, file: !624, line: 372, type: !238)
!9831 = !DILocation(line: 372, column: 247, scope: !9799)
!9832 = !DILocalVariable(name: "top", scope: !9799, file: !624, line: 372, type: !839)
!9833 = !DILocation(line: 372, column: 273, scope: !9799)
!9834 = !DILocation(line: 372, column: 296, scope: !9799)
!9835 = !DILocation(line: 372, column: 279, scope: !9799)
!9836 = !DILocalVariable(name: "bottom", scope: !9799, file: !624, line: 372, type: !839)
!9837 = !DILocation(line: 372, column: 318, scope: !9799)
!9838 = !DILocation(line: 372, column: 344, scope: !9799)
!9839 = !DILocation(line: 372, column: 327, scope: !9799)
!9840 = !DILocalVariable(name: "dst", scope: !9799, file: !624, line: 372, type: !843)
!9841 = !DILocation(line: 372, column: 363, scope: !9799)
!9842 = !DILocation(line: 372, column: 380, scope: !9799)
!9843 = !DILocation(line: 372, column: 369, scope: !9799)
!9844 = !DILocalVariable(name: "opacity", scope: !9799, file: !624, line: 372, type: !248)
!9845 = !DILocation(line: 372, column: 393, scope: !9799)
!9846 = !DILocation(line: 372, column: 403, scope: !9799)
!9847 = !DILocation(line: 372, column: 410, scope: !9799)
!9848 = !DILocalVariable(name: "i", scope: !9799, file: !624, line: 372, type: !238)
!9849 = !DILocation(line: 372, column: 423, scope: !9799)
!9850 = !DILocalVariable(name: "j", scope: !9799, file: !624, line: 372, type: !238)
!9851 = !DILocation(line: 372, column: 426, scope: !9799)
!9852 = !DILocation(line: 372, column: 442, scope: !9799)
!9853 = !DILocation(line: 372, column: 461, scope: !9799)
!9854 = !DILocation(line: 372, column: 483, scope: !9799)
!9855 = !DILocation(line: 372, column: 496, scope: !9808)
!9856 = !DILocation(line: 372, column: 494, scope: !9808)
!9857 = !DILocation(line: 372, column: 501, scope: !9858)
!9858 = !DILexicalBlockFile(scope: !9807, file: !624, discriminator: 1)
!9859 = !DILocation(line: 372, column: 505, scope: !9858)
!9860 = !DILocation(line: 372, column: 503, scope: !9858)
!9861 = !DILocation(line: 372, column: 489, scope: !9858)
!9862 = !DILocation(line: 372, column: 527, scope: !9863)
!9863 = !DILexicalBlockFile(scope: !9805, file: !624, discriminator: 2)
!9864 = !DILocation(line: 372, column: 525, scope: !9863)
!9865 = !DILocation(line: 372, column: 532, scope: !9866)
!9866 = !DILexicalBlockFile(scope: !9804, file: !624, discriminator: 3)
!9867 = !DILocation(line: 372, column: 536, scope: !9866)
!9868 = !DILocation(line: 372, column: 534, scope: !9866)
!9869 = !DILocation(line: 372, column: 520, scope: !9866)
!9870 = !DILocation(line: 372, column: 563, scope: !9802)
!9871 = !DILocation(line: 372, column: 559, scope: !9802)
!9872 = !DILocation(line: 372, column: 596, scope: !9802)
!9873 = !DILocation(line: 372, column: 592, scope: !9802)
!9874 = !DILocation(line: 372, column: 608, scope: !9802)
!9875 = !DILocation(line: 372, column: 601, scope: !9802)
!9876 = !DILocation(line: 372, column: 599, scope: !9802)
!9877 = !DILocation(line: 372, column: 611, scope: !9802)
!9878 = !DILocation(line: 372, column: 575, scope: !9802)
!9879 = !DILocation(line: 231, column: 9, scope: !5547, inlinedAt: !9801)
!9880 = !DILocation(line: 231, column: 19, scope: !5547, inlinedAt: !9801)
!9881 = !DILocation(line: 231, column: 17, scope: !5547, inlinedAt: !9801)
!9882 = !DILocation(line: 231, column: 22, scope: !5547, inlinedAt: !9801)
!9883 = !DILocation(line: 231, column: 13, scope: !5547, inlinedAt: !9801)
!9884 = !DILocation(line: 231, column: 11, scope: !5547, inlinedAt: !9801)
!9885 = !DILocation(line: 231, column: 9, scope: !5463, inlinedAt: !9801)
!9886 = !DILocation(line: 231, column: 37, scope: !5555, inlinedAt: !9801)
!9887 = !DILocation(line: 231, column: 36, scope: !5555, inlinedAt: !9801)
!9888 = !DILocation(line: 231, column: 40, scope: !5555, inlinedAt: !9801)
!9889 = !DILocation(line: 231, column: 53, scope: !5555, inlinedAt: !9801)
!9890 = !DILocation(line: 231, column: 51, scope: !5555, inlinedAt: !9801)
!9891 = !DILocation(line: 231, column: 56, scope: !5555, inlinedAt: !9801)
!9892 = !DILocation(line: 231, column: 46, scope: !5555, inlinedAt: !9801)
!9893 = !DILocation(line: 231, column: 28, scope: !5555, inlinedAt: !9801)
!9894 = !DILocation(line: 232, column: 17, scope: !5547, inlinedAt: !9801)
!9895 = !DILocation(line: 232, column: 10, scope: !5547, inlinedAt: !9801)
!9896 = !DILocation(line: 233, column: 1, scope: !5463, inlinedAt: !9801)
!9897 = !DILocation(line: 372, column: 630, scope: !9802)
!9898 = !DILocation(line: 372, column: 626, scope: !9802)
!9899 = !DILocation(line: 372, column: 624, scope: !9802)
!9900 = !DILocation(line: 372, column: 568, scope: !9802)
!9901 = !DILocation(line: 372, column: 636, scope: !9802)
!9902 = !DILocation(line: 372, column: 634, scope: !9802)
!9903 = !DILocation(line: 372, column: 566, scope: !9802)
!9904 = !DILocation(line: 372, column: 554, scope: !9802)
!9905 = !DILocation(line: 372, column: 550, scope: !9802)
!9906 = !DILocation(line: 372, column: 557, scope: !9802)
!9907 = !DILocation(line: 372, column: 645, scope: !9802)
!9908 = !DILocation(line: 372, column: 544, scope: !9909)
!9909 = !DILexicalBlockFile(scope: !9804, file: !624, discriminator: 5)
!9910 = !DILocation(line: 372, column: 520, scope: !9909)
!9911 = distinct !{!9911, !9912}
!9912 = !DILocation(line: 372, column: 520, scope: !9806)
!9913 = !DILocation(line: 372, column: 654, scope: !9914)
!9914 = !DILexicalBlockFile(scope: !9806, file: !624, discriminator: 6)
!9915 = !DILocation(line: 372, column: 651, scope: !9914)
!9916 = !DILocation(line: 372, column: 675, scope: !9914)
!9917 = !DILocation(line: 372, column: 672, scope: !9914)
!9918 = !DILocation(line: 372, column: 699, scope: !9914)
!9919 = !DILocation(line: 372, column: 696, scope: !9914)
!9920 = !DILocation(line: 372, column: 716, scope: !9914)
!9921 = !DILocation(line: 372, column: 514, scope: !9922)
!9922 = !DILexicalBlockFile(scope: !9807, file: !624, discriminator: 7)
!9923 = !DILocation(line: 372, column: 489, scope: !9922)
!9924 = distinct !{!9924, !9925}
!9925 = !DILocation(line: 372, column: 489, scope: !9799)
!9926 = !DILocation(line: 372, column: 718, scope: !9927)
!9927 = !DILexicalBlockFile(scope: !9799, file: !624, discriminator: 8)
!9928 = distinct !DISubprogram(name: "blend_and_12bit", scope: !624, file: !624, line: 398, type: !1531, isLocal: true, isDefinition: true, scopeLine: 398, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!9929 = !DILocalVariable(name: "_top", arg: 1, scope: !9928, file: !624, line: 398, type: !900)
!9930 = !DILocation(line: 398, column: 44, scope: !9928)
!9931 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !9928, file: !624, line: 398, type: !902)
!9932 = !DILocation(line: 398, column: 60, scope: !9928)
!9933 = !DILocalVariable(name: "_bottom", arg: 3, scope: !9928, file: !624, line: 398, type: !900)
!9934 = !DILocation(line: 398, column: 89, scope: !9928)
!9935 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !9928, file: !624, line: 398, type: !902)
!9936 = !DILocation(line: 398, column: 108, scope: !9928)
!9937 = !DILocalVariable(name: "_dst", arg: 5, scope: !9928, file: !624, line: 398, type: !329)
!9938 = !DILocation(line: 398, column: 134, scope: !9928)
!9939 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !9928, file: !624, line: 398, type: !902)
!9940 = !DILocation(line: 398, column: 150, scope: !9928)
!9941 = !DILocalVariable(name: "width", arg: 7, scope: !9928, file: !624, line: 398, type: !902)
!9942 = !DILocation(line: 398, column: 174, scope: !9928)
!9943 = !DILocalVariable(name: "height", arg: 8, scope: !9928, file: !624, line: 398, type: !902)
!9944 = !DILocation(line: 398, column: 191, scope: !9928)
!9945 = !DILocalVariable(name: "param", arg: 9, scope: !9928, file: !624, line: 398, type: !884)
!9946 = !DILocation(line: 398, column: 213, scope: !9928)
!9947 = !DILocalVariable(name: "values", arg: 10, scope: !9928, file: !624, line: 398, type: !544)
!9948 = !DILocation(line: 398, column: 228, scope: !9928)
!9949 = !DILocalVariable(name: "starty", arg: 11, scope: !9928, file: !624, line: 398, type: !238)
!9950 = !DILocation(line: 398, column: 240, scope: !9928)
!9951 = !DILocalVariable(name: "top", scope: !9928, file: !624, line: 398, type: !839)
!9952 = !DILocation(line: 398, column: 266, scope: !9928)
!9953 = !DILocation(line: 398, column: 289, scope: !9928)
!9954 = !DILocation(line: 398, column: 272, scope: !9928)
!9955 = !DILocalVariable(name: "bottom", scope: !9928, file: !624, line: 398, type: !839)
!9956 = !DILocation(line: 398, column: 311, scope: !9928)
!9957 = !DILocation(line: 398, column: 337, scope: !9928)
!9958 = !DILocation(line: 398, column: 320, scope: !9928)
!9959 = !DILocalVariable(name: "dst", scope: !9928, file: !624, line: 398, type: !843)
!9960 = !DILocation(line: 398, column: 356, scope: !9928)
!9961 = !DILocation(line: 398, column: 373, scope: !9928)
!9962 = !DILocation(line: 398, column: 362, scope: !9928)
!9963 = !DILocalVariable(name: "opacity", scope: !9928, file: !624, line: 398, type: !248)
!9964 = !DILocation(line: 398, column: 386, scope: !9928)
!9965 = !DILocation(line: 398, column: 396, scope: !9928)
!9966 = !DILocation(line: 398, column: 403, scope: !9928)
!9967 = !DILocalVariable(name: "i", scope: !9928, file: !624, line: 398, type: !238)
!9968 = !DILocation(line: 398, column: 416, scope: !9928)
!9969 = !DILocalVariable(name: "j", scope: !9928, file: !624, line: 398, type: !238)
!9970 = !DILocation(line: 398, column: 419, scope: !9928)
!9971 = !DILocation(line: 398, column: 435, scope: !9928)
!9972 = !DILocation(line: 398, column: 454, scope: !9928)
!9973 = !DILocation(line: 398, column: 476, scope: !9928)
!9974 = !DILocation(line: 398, column: 489, scope: !9975)
!9975 = distinct !DILexicalBlock(scope: !9928, file: !624, line: 398, column: 482)
!9976 = !DILocation(line: 398, column: 487, scope: !9975)
!9977 = !DILocation(line: 398, column: 494, scope: !9978)
!9978 = !DILexicalBlockFile(scope: !9979, file: !624, discriminator: 1)
!9979 = distinct !DILexicalBlock(scope: !9975, file: !624, line: 398, column: 482)
!9980 = !DILocation(line: 398, column: 498, scope: !9978)
!9981 = !DILocation(line: 398, column: 496, scope: !9978)
!9982 = !DILocation(line: 398, column: 482, scope: !9978)
!9983 = !DILocation(line: 398, column: 520, scope: !9984)
!9984 = !DILexicalBlockFile(scope: !9985, file: !624, discriminator: 2)
!9985 = distinct !DILexicalBlock(scope: !9986, file: !624, line: 398, column: 513)
!9986 = distinct !DILexicalBlock(scope: !9979, file: !624, line: 398, column: 511)
!9987 = !DILocation(line: 398, column: 518, scope: !9984)
!9988 = !DILocation(line: 398, column: 525, scope: !9989)
!9989 = !DILexicalBlockFile(scope: !9990, file: !624, discriminator: 3)
!9990 = distinct !DILexicalBlock(scope: !9985, file: !624, line: 398, column: 513)
!9991 = !DILocation(line: 398, column: 529, scope: !9989)
!9992 = !DILocation(line: 398, column: 527, scope: !9989)
!9993 = !DILocation(line: 398, column: 513, scope: !9989)
!9994 = !DILocation(line: 398, column: 556, scope: !9995)
!9995 = !DILexicalBlockFile(scope: !9996, file: !624, discriminator: 4)
!9996 = distinct !DILexicalBlock(scope: !9990, file: !624, line: 398, column: 541)
!9997 = !DILocation(line: 398, column: 552, scope: !9995)
!9998 = !DILocation(line: 398, column: 567, scope: !9995)
!9999 = !DILocation(line: 398, column: 563, scope: !9995)
!10000 = !DILocation(line: 398, column: 579, scope: !9995)
!10001 = !DILocation(line: 398, column: 572, scope: !9995)
!10002 = !DILocation(line: 398, column: 570, scope: !9995)
!10003 = !DILocation(line: 398, column: 589, scope: !9995)
!10004 = !DILocation(line: 398, column: 585, scope: !9995)
!10005 = !DILocation(line: 398, column: 583, scope: !9995)
!10006 = !DILocation(line: 398, column: 561, scope: !9995)
!10007 = !DILocation(line: 398, column: 595, scope: !9995)
!10008 = !DILocation(line: 398, column: 593, scope: !9995)
!10009 = !DILocation(line: 398, column: 559, scope: !9995)
!10010 = !DILocation(line: 398, column: 547, scope: !9995)
!10011 = !DILocation(line: 398, column: 543, scope: !9995)
!10012 = !DILocation(line: 398, column: 550, scope: !9995)
!10013 = !DILocation(line: 398, column: 604, scope: !9995)
!10014 = !DILocation(line: 398, column: 537, scope: !10015)
!10015 = !DILexicalBlockFile(scope: !9990, file: !624, discriminator: 5)
!10016 = !DILocation(line: 398, column: 513, scope: !10015)
!10017 = distinct !{!10017, !10018}
!10018 = !DILocation(line: 398, column: 513, scope: !9986)
!10019 = !DILocation(line: 398, column: 613, scope: !10020)
!10020 = !DILexicalBlockFile(scope: !9986, file: !624, discriminator: 6)
!10021 = !DILocation(line: 398, column: 610, scope: !10020)
!10022 = !DILocation(line: 398, column: 634, scope: !10020)
!10023 = !DILocation(line: 398, column: 631, scope: !10020)
!10024 = !DILocation(line: 398, column: 658, scope: !10020)
!10025 = !DILocation(line: 398, column: 655, scope: !10020)
!10026 = !DILocation(line: 398, column: 675, scope: !10020)
!10027 = !DILocation(line: 398, column: 507, scope: !10028)
!10028 = !DILexicalBlockFile(scope: !9979, file: !624, discriminator: 7)
!10029 = !DILocation(line: 398, column: 482, scope: !10028)
!10030 = distinct !{!10030, !10031}
!10031 = !DILocation(line: 398, column: 482, scope: !9928)
!10032 = !DILocation(line: 398, column: 677, scope: !10033)
!10033 = !DILexicalBlockFile(scope: !9928, file: !624, discriminator: 8)
!10034 = distinct !DISubprogram(name: "blend_average_12bit", scope: !624, file: !624, line: 373, type: !1531, isLocal: true, isDefinition: true, scopeLine: 373, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!10035 = !DILocalVariable(name: "_top", arg: 1, scope: !10034, file: !624, line: 373, type: !900)
!10036 = !DILocation(line: 373, column: 48, scope: !10034)
!10037 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !10034, file: !624, line: 373, type: !902)
!10038 = !DILocation(line: 373, column: 64, scope: !10034)
!10039 = !DILocalVariable(name: "_bottom", arg: 3, scope: !10034, file: !624, line: 373, type: !900)
!10040 = !DILocation(line: 373, column: 93, scope: !10034)
!10041 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !10034, file: !624, line: 373, type: !902)
!10042 = !DILocation(line: 373, column: 112, scope: !10034)
!10043 = !DILocalVariable(name: "_dst", arg: 5, scope: !10034, file: !624, line: 373, type: !329)
!10044 = !DILocation(line: 373, column: 138, scope: !10034)
!10045 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !10034, file: !624, line: 373, type: !902)
!10046 = !DILocation(line: 373, column: 154, scope: !10034)
!10047 = !DILocalVariable(name: "width", arg: 7, scope: !10034, file: !624, line: 373, type: !902)
!10048 = !DILocation(line: 373, column: 178, scope: !10034)
!10049 = !DILocalVariable(name: "height", arg: 8, scope: !10034, file: !624, line: 373, type: !902)
!10050 = !DILocation(line: 373, column: 195, scope: !10034)
!10051 = !DILocalVariable(name: "param", arg: 9, scope: !10034, file: !624, line: 373, type: !884)
!10052 = !DILocation(line: 373, column: 217, scope: !10034)
!10053 = !DILocalVariable(name: "values", arg: 10, scope: !10034, file: !624, line: 373, type: !544)
!10054 = !DILocation(line: 373, column: 232, scope: !10034)
!10055 = !DILocalVariable(name: "starty", arg: 11, scope: !10034, file: !624, line: 373, type: !238)
!10056 = !DILocation(line: 373, column: 244, scope: !10034)
!10057 = !DILocalVariable(name: "top", scope: !10034, file: !624, line: 373, type: !839)
!10058 = !DILocation(line: 373, column: 270, scope: !10034)
!10059 = !DILocation(line: 373, column: 293, scope: !10034)
!10060 = !DILocation(line: 373, column: 276, scope: !10034)
!10061 = !DILocalVariable(name: "bottom", scope: !10034, file: !624, line: 373, type: !839)
!10062 = !DILocation(line: 373, column: 315, scope: !10034)
!10063 = !DILocation(line: 373, column: 341, scope: !10034)
!10064 = !DILocation(line: 373, column: 324, scope: !10034)
!10065 = !DILocalVariable(name: "dst", scope: !10034, file: !624, line: 373, type: !843)
!10066 = !DILocation(line: 373, column: 360, scope: !10034)
!10067 = !DILocation(line: 373, column: 377, scope: !10034)
!10068 = !DILocation(line: 373, column: 366, scope: !10034)
!10069 = !DILocalVariable(name: "opacity", scope: !10034, file: !624, line: 373, type: !248)
!10070 = !DILocation(line: 373, column: 390, scope: !10034)
!10071 = !DILocation(line: 373, column: 400, scope: !10034)
!10072 = !DILocation(line: 373, column: 407, scope: !10034)
!10073 = !DILocalVariable(name: "i", scope: !10034, file: !624, line: 373, type: !238)
!10074 = !DILocation(line: 373, column: 420, scope: !10034)
!10075 = !DILocalVariable(name: "j", scope: !10034, file: !624, line: 373, type: !238)
!10076 = !DILocation(line: 373, column: 423, scope: !10034)
!10077 = !DILocation(line: 373, column: 439, scope: !10034)
!10078 = !DILocation(line: 373, column: 458, scope: !10034)
!10079 = !DILocation(line: 373, column: 480, scope: !10034)
!10080 = !DILocation(line: 373, column: 493, scope: !10081)
!10081 = distinct !DILexicalBlock(scope: !10034, file: !624, line: 373, column: 486)
!10082 = !DILocation(line: 373, column: 491, scope: !10081)
!10083 = !DILocation(line: 373, column: 498, scope: !10084)
!10084 = !DILexicalBlockFile(scope: !10085, file: !624, discriminator: 1)
!10085 = distinct !DILexicalBlock(scope: !10081, file: !624, line: 373, column: 486)
!10086 = !DILocation(line: 373, column: 502, scope: !10084)
!10087 = !DILocation(line: 373, column: 500, scope: !10084)
!10088 = !DILocation(line: 373, column: 486, scope: !10084)
!10089 = !DILocation(line: 373, column: 524, scope: !10090)
!10090 = !DILexicalBlockFile(scope: !10091, file: !624, discriminator: 2)
!10091 = distinct !DILexicalBlock(scope: !10092, file: !624, line: 373, column: 517)
!10092 = distinct !DILexicalBlock(scope: !10085, file: !624, line: 373, column: 515)
!10093 = !DILocation(line: 373, column: 522, scope: !10090)
!10094 = !DILocation(line: 373, column: 529, scope: !10095)
!10095 = !DILexicalBlockFile(scope: !10096, file: !624, discriminator: 3)
!10096 = distinct !DILexicalBlock(scope: !10091, file: !624, line: 373, column: 517)
!10097 = !DILocation(line: 373, column: 533, scope: !10095)
!10098 = !DILocation(line: 373, column: 531, scope: !10095)
!10099 = !DILocation(line: 373, column: 517, scope: !10095)
!10100 = !DILocation(line: 373, column: 560, scope: !10101)
!10101 = !DILexicalBlockFile(scope: !10102, file: !624, discriminator: 4)
!10102 = distinct !DILexicalBlock(scope: !10096, file: !624, line: 373, column: 545)
!10103 = !DILocation(line: 373, column: 556, scope: !10101)
!10104 = !DILocation(line: 373, column: 572, scope: !10101)
!10105 = !DILocation(line: 373, column: 568, scope: !10101)
!10106 = !DILocation(line: 373, column: 584, scope: !10101)
!10107 = !DILocation(line: 373, column: 577, scope: !10101)
!10108 = !DILocation(line: 373, column: 575, scope: !10101)
!10109 = !DILocation(line: 373, column: 588, scope: !10101)
!10110 = !DILocation(line: 373, column: 599, scope: !10101)
!10111 = !DILocation(line: 373, column: 595, scope: !10101)
!10112 = !DILocation(line: 373, column: 593, scope: !10101)
!10113 = !DILocation(line: 373, column: 565, scope: !10101)
!10114 = !DILocation(line: 373, column: 605, scope: !10101)
!10115 = !DILocation(line: 373, column: 603, scope: !10101)
!10116 = !DILocation(line: 373, column: 563, scope: !10101)
!10117 = !DILocation(line: 373, column: 551, scope: !10101)
!10118 = !DILocation(line: 373, column: 547, scope: !10101)
!10119 = !DILocation(line: 373, column: 554, scope: !10101)
!10120 = !DILocation(line: 373, column: 614, scope: !10101)
!10121 = !DILocation(line: 373, column: 541, scope: !10122)
!10122 = !DILexicalBlockFile(scope: !10096, file: !624, discriminator: 5)
!10123 = !DILocation(line: 373, column: 517, scope: !10122)
!10124 = distinct !{!10124, !10125}
!10125 = !DILocation(line: 373, column: 517, scope: !10092)
!10126 = !DILocation(line: 373, column: 623, scope: !10127)
!10127 = !DILexicalBlockFile(scope: !10092, file: !624, discriminator: 6)
!10128 = !DILocation(line: 373, column: 620, scope: !10127)
!10129 = !DILocation(line: 373, column: 644, scope: !10127)
!10130 = !DILocation(line: 373, column: 641, scope: !10127)
!10131 = !DILocation(line: 373, column: 668, scope: !10127)
!10132 = !DILocation(line: 373, column: 665, scope: !10127)
!10133 = !DILocation(line: 373, column: 685, scope: !10127)
!10134 = !DILocation(line: 373, column: 511, scope: !10135)
!10135 = !DILexicalBlockFile(scope: !10085, file: !624, discriminator: 7)
!10136 = !DILocation(line: 373, column: 486, scope: !10135)
!10137 = distinct !{!10137, !10138}
!10138 = !DILocation(line: 373, column: 486, scope: !10034)
!10139 = !DILocation(line: 373, column: 687, scope: !10140)
!10140 = !DILexicalBlockFile(scope: !10034, file: !624, discriminator: 8)
!10141 = distinct !DISubprogram(name: "blend_burn_12bit", scope: !624, file: !624, line: 391, type: !1531, isLocal: true, isDefinition: true, scopeLine: 391, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!10142 = !DILocalVariable(name: "_top", arg: 1, scope: !10141, file: !624, line: 391, type: !900)
!10143 = !DILocation(line: 391, column: 45, scope: !10141)
!10144 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !10141, file: !624, line: 391, type: !902)
!10145 = !DILocation(line: 391, column: 61, scope: !10141)
!10146 = !DILocalVariable(name: "_bottom", arg: 3, scope: !10141, file: !624, line: 391, type: !900)
!10147 = !DILocation(line: 391, column: 90, scope: !10141)
!10148 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !10141, file: !624, line: 391, type: !902)
!10149 = !DILocation(line: 391, column: 109, scope: !10141)
!10150 = !DILocalVariable(name: "_dst", arg: 5, scope: !10141, file: !624, line: 391, type: !329)
!10151 = !DILocation(line: 391, column: 135, scope: !10141)
!10152 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !10141, file: !624, line: 391, type: !902)
!10153 = !DILocation(line: 391, column: 151, scope: !10141)
!10154 = !DILocalVariable(name: "width", arg: 7, scope: !10141, file: !624, line: 391, type: !902)
!10155 = !DILocation(line: 391, column: 175, scope: !10141)
!10156 = !DILocalVariable(name: "height", arg: 8, scope: !10141, file: !624, line: 391, type: !902)
!10157 = !DILocation(line: 391, column: 192, scope: !10141)
!10158 = !DILocalVariable(name: "param", arg: 9, scope: !10141, file: !624, line: 391, type: !884)
!10159 = !DILocation(line: 391, column: 214, scope: !10141)
!10160 = !DILocalVariable(name: "values", arg: 10, scope: !10141, file: !624, line: 391, type: !544)
!10161 = !DILocation(line: 391, column: 229, scope: !10141)
!10162 = !DILocalVariable(name: "starty", arg: 11, scope: !10141, file: !624, line: 391, type: !238)
!10163 = !DILocation(line: 391, column: 241, scope: !10141)
!10164 = !DILocalVariable(name: "top", scope: !10141, file: !624, line: 391, type: !839)
!10165 = !DILocation(line: 391, column: 267, scope: !10141)
!10166 = !DILocation(line: 391, column: 290, scope: !10141)
!10167 = !DILocation(line: 391, column: 273, scope: !10141)
!10168 = !DILocalVariable(name: "bottom", scope: !10141, file: !624, line: 391, type: !839)
!10169 = !DILocation(line: 391, column: 312, scope: !10141)
!10170 = !DILocation(line: 391, column: 338, scope: !10141)
!10171 = !DILocation(line: 391, column: 321, scope: !10141)
!10172 = !DILocalVariable(name: "dst", scope: !10141, file: !624, line: 391, type: !843)
!10173 = !DILocation(line: 391, column: 357, scope: !10141)
!10174 = !DILocation(line: 391, column: 374, scope: !10141)
!10175 = !DILocation(line: 391, column: 363, scope: !10141)
!10176 = !DILocalVariable(name: "opacity", scope: !10141, file: !624, line: 391, type: !248)
!10177 = !DILocation(line: 391, column: 387, scope: !10141)
!10178 = !DILocation(line: 391, column: 397, scope: !10141)
!10179 = !DILocation(line: 391, column: 404, scope: !10141)
!10180 = !DILocalVariable(name: "i", scope: !10141, file: !624, line: 391, type: !238)
!10181 = !DILocation(line: 391, column: 417, scope: !10141)
!10182 = !DILocalVariable(name: "j", scope: !10141, file: !624, line: 391, type: !238)
!10183 = !DILocation(line: 391, column: 420, scope: !10141)
!10184 = !DILocation(line: 391, column: 436, scope: !10141)
!10185 = !DILocation(line: 391, column: 455, scope: !10141)
!10186 = !DILocation(line: 391, column: 477, scope: !10141)
!10187 = !DILocation(line: 391, column: 490, scope: !10188)
!10188 = distinct !DILexicalBlock(scope: !10141, file: !624, line: 391, column: 483)
!10189 = !DILocation(line: 391, column: 488, scope: !10188)
!10190 = !DILocation(line: 391, column: 495, scope: !10191)
!10191 = !DILexicalBlockFile(scope: !10192, file: !624, discriminator: 1)
!10192 = distinct !DILexicalBlock(scope: !10188, file: !624, line: 391, column: 483)
!10193 = !DILocation(line: 391, column: 499, scope: !10191)
!10194 = !DILocation(line: 391, column: 497, scope: !10191)
!10195 = !DILocation(line: 391, column: 483, scope: !10191)
!10196 = !DILocation(line: 391, column: 521, scope: !10197)
!10197 = !DILexicalBlockFile(scope: !10198, file: !624, discriminator: 2)
!10198 = distinct !DILexicalBlock(scope: !10199, file: !624, line: 391, column: 514)
!10199 = distinct !DILexicalBlock(scope: !10192, file: !624, line: 391, column: 512)
!10200 = !DILocation(line: 391, column: 519, scope: !10197)
!10201 = !DILocation(line: 391, column: 526, scope: !10202)
!10202 = !DILexicalBlockFile(scope: !10203, file: !624, discriminator: 3)
!10203 = distinct !DILexicalBlock(scope: !10198, file: !624, line: 391, column: 514)
!10204 = !DILocation(line: 391, column: 530, scope: !10202)
!10205 = !DILocation(line: 391, column: 528, scope: !10202)
!10206 = !DILocation(line: 391, column: 514, scope: !10202)
!10207 = !DILocation(line: 391, column: 557, scope: !10208)
!10208 = !DILexicalBlockFile(scope: !10209, file: !624, discriminator: 4)
!10209 = distinct !DILexicalBlock(scope: !10203, file: !624, line: 391, column: 542)
!10210 = !DILocation(line: 391, column: 553, scope: !10208)
!10211 = !DILocation(line: 391, column: 571, scope: !10208)
!10212 = !DILocation(line: 391, column: 567, scope: !10208)
!10213 = !DILocation(line: 391, column: 566, scope: !10208)
!10214 = !DILocation(line: 391, column: 575, scope: !10208)
!10215 = !DILocation(line: 391, column: 565, scope: !10208)
!10216 = !DILocation(line: 391, column: 588, scope: !10217)
!10217 = !DILexicalBlockFile(scope: !10209, file: !624, discriminator: 5)
!10218 = !DILocation(line: 391, column: 584, scope: !10217)
!10219 = !DILocation(line: 391, column: 583, scope: !10217)
!10220 = !DILocation(line: 391, column: 565, scope: !10217)
!10221 = !DILocation(line: 391, column: 626, scope: !10222)
!10222 = !DILexicalBlockFile(scope: !10209, file: !624, discriminator: 6)
!10223 = !DILocation(line: 391, column: 619, scope: !10222)
!10224 = !DILocation(line: 391, column: 618, scope: !10222)
!10225 = !DILocation(line: 391, column: 616, scope: !10222)
!10226 = !DILocation(line: 391, column: 631, scope: !10222)
!10227 = !DILocation(line: 391, column: 645, scope: !10222)
!10228 = !DILocation(line: 391, column: 641, scope: !10222)
!10229 = !DILocation(line: 391, column: 640, scope: !10222)
!10230 = !DILocation(line: 391, column: 638, scope: !10222)
!10231 = !DILocation(line: 391, column: 607, scope: !10222)
!10232 = !DILocation(line: 391, column: 599, scope: !10222)
!10233 = !DILocation(line: 391, column: 595, scope: !10222)
!10234 = !DILocation(line: 391, column: 595, scope: !10235)
!10235 = !DILexicalBlockFile(scope: !10209, file: !624, discriminator: 7)
!10236 = !DILocation(line: 391, column: 683, scope: !10237)
!10237 = !DILexicalBlockFile(scope: !10209, file: !624, discriminator: 8)
!10238 = !DILocation(line: 391, column: 676, scope: !10237)
!10239 = !DILocation(line: 391, column: 675, scope: !10237)
!10240 = !DILocation(line: 391, column: 673, scope: !10237)
!10241 = !DILocation(line: 391, column: 688, scope: !10237)
!10242 = !DILocation(line: 391, column: 702, scope: !10237)
!10243 = !DILocation(line: 391, column: 698, scope: !10237)
!10244 = !DILocation(line: 391, column: 697, scope: !10237)
!10245 = !DILocation(line: 391, column: 695, scope: !10237)
!10246 = !DILocation(line: 391, column: 664, scope: !10237)
!10247 = !DILocation(line: 391, column: 595, scope: !10237)
!10248 = !DILocation(line: 391, column: 595, scope: !10249)
!10249 = !DILexicalBlockFile(scope: !10209, file: !624, discriminator: 9)
!10250 = !DILocation(line: 391, column: 565, scope: !10249)
!10251 = !DILocation(line: 391, column: 565, scope: !10252)
!10252 = !DILexicalBlockFile(scope: !10209, file: !624, discriminator: 10)
!10253 = !DILocation(line: 391, column: 716, scope: !10252)
!10254 = !DILocation(line: 391, column: 712, scope: !10252)
!10255 = !DILocation(line: 391, column: 710, scope: !10252)
!10256 = !DILocation(line: 391, column: 562, scope: !10252)
!10257 = !DILocation(line: 391, column: 722, scope: !10252)
!10258 = !DILocation(line: 391, column: 720, scope: !10252)
!10259 = !DILocation(line: 391, column: 560, scope: !10252)
!10260 = !DILocation(line: 391, column: 553, scope: !10252)
!10261 = !DILocation(line: 391, column: 548, scope: !10252)
!10262 = !DILocation(line: 391, column: 544, scope: !10252)
!10263 = !DILocation(line: 391, column: 551, scope: !10252)
!10264 = !DILocation(line: 391, column: 731, scope: !10252)
!10265 = !DILocation(line: 391, column: 538, scope: !10266)
!10266 = !DILexicalBlockFile(scope: !10203, file: !624, discriminator: 11)
!10267 = !DILocation(line: 391, column: 514, scope: !10266)
!10268 = distinct !{!10268, !10269}
!10269 = !DILocation(line: 391, column: 514, scope: !10199)
!10270 = !DILocation(line: 391, column: 740, scope: !10271)
!10271 = !DILexicalBlockFile(scope: !10199, file: !624, discriminator: 12)
!10272 = !DILocation(line: 391, column: 737, scope: !10271)
!10273 = !DILocation(line: 391, column: 761, scope: !10271)
!10274 = !DILocation(line: 391, column: 758, scope: !10271)
!10275 = !DILocation(line: 391, column: 785, scope: !10271)
!10276 = !DILocation(line: 391, column: 782, scope: !10271)
!10277 = !DILocation(line: 391, column: 802, scope: !10271)
!10278 = !DILocation(line: 391, column: 508, scope: !10279)
!10279 = !DILexicalBlockFile(scope: !10192, file: !624, discriminator: 13)
!10280 = !DILocation(line: 391, column: 483, scope: !10279)
!10281 = distinct !{!10281, !10282}
!10282 = !DILocation(line: 391, column: 483, scope: !10141)
!10283 = !DILocation(line: 391, column: 804, scope: !10284)
!10284 = !DILexicalBlockFile(scope: !10141, file: !624, discriminator: 14)
!10285 = distinct !DISubprogram(name: "blend_darken_12bit", scope: !624, file: !624, line: 387, type: !1531, isLocal: true, isDefinition: true, scopeLine: 387, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!10286 = !DILocalVariable(name: "_top", arg: 1, scope: !10285, file: !624, line: 387, type: !900)
!10287 = !DILocation(line: 387, column: 47, scope: !10285)
!10288 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !10285, file: !624, line: 387, type: !902)
!10289 = !DILocation(line: 387, column: 63, scope: !10285)
!10290 = !DILocalVariable(name: "_bottom", arg: 3, scope: !10285, file: !624, line: 387, type: !900)
!10291 = !DILocation(line: 387, column: 92, scope: !10285)
!10292 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !10285, file: !624, line: 387, type: !902)
!10293 = !DILocation(line: 387, column: 111, scope: !10285)
!10294 = !DILocalVariable(name: "_dst", arg: 5, scope: !10285, file: !624, line: 387, type: !329)
!10295 = !DILocation(line: 387, column: 137, scope: !10285)
!10296 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !10285, file: !624, line: 387, type: !902)
!10297 = !DILocation(line: 387, column: 153, scope: !10285)
!10298 = !DILocalVariable(name: "width", arg: 7, scope: !10285, file: !624, line: 387, type: !902)
!10299 = !DILocation(line: 387, column: 177, scope: !10285)
!10300 = !DILocalVariable(name: "height", arg: 8, scope: !10285, file: !624, line: 387, type: !902)
!10301 = !DILocation(line: 387, column: 194, scope: !10285)
!10302 = !DILocalVariable(name: "param", arg: 9, scope: !10285, file: !624, line: 387, type: !884)
!10303 = !DILocation(line: 387, column: 216, scope: !10285)
!10304 = !DILocalVariable(name: "values", arg: 10, scope: !10285, file: !624, line: 387, type: !544)
!10305 = !DILocation(line: 387, column: 231, scope: !10285)
!10306 = !DILocalVariable(name: "starty", arg: 11, scope: !10285, file: !624, line: 387, type: !238)
!10307 = !DILocation(line: 387, column: 243, scope: !10285)
!10308 = !DILocalVariable(name: "top", scope: !10285, file: !624, line: 387, type: !839)
!10309 = !DILocation(line: 387, column: 269, scope: !10285)
!10310 = !DILocation(line: 387, column: 292, scope: !10285)
!10311 = !DILocation(line: 387, column: 275, scope: !10285)
!10312 = !DILocalVariable(name: "bottom", scope: !10285, file: !624, line: 387, type: !839)
!10313 = !DILocation(line: 387, column: 314, scope: !10285)
!10314 = !DILocation(line: 387, column: 340, scope: !10285)
!10315 = !DILocation(line: 387, column: 323, scope: !10285)
!10316 = !DILocalVariable(name: "dst", scope: !10285, file: !624, line: 387, type: !843)
!10317 = !DILocation(line: 387, column: 359, scope: !10285)
!10318 = !DILocation(line: 387, column: 376, scope: !10285)
!10319 = !DILocation(line: 387, column: 365, scope: !10285)
!10320 = !DILocalVariable(name: "opacity", scope: !10285, file: !624, line: 387, type: !248)
!10321 = !DILocation(line: 387, column: 389, scope: !10285)
!10322 = !DILocation(line: 387, column: 399, scope: !10285)
!10323 = !DILocation(line: 387, column: 406, scope: !10285)
!10324 = !DILocalVariable(name: "i", scope: !10285, file: !624, line: 387, type: !238)
!10325 = !DILocation(line: 387, column: 419, scope: !10285)
!10326 = !DILocalVariable(name: "j", scope: !10285, file: !624, line: 387, type: !238)
!10327 = !DILocation(line: 387, column: 422, scope: !10285)
!10328 = !DILocation(line: 387, column: 438, scope: !10285)
!10329 = !DILocation(line: 387, column: 457, scope: !10285)
!10330 = !DILocation(line: 387, column: 479, scope: !10285)
!10331 = !DILocation(line: 387, column: 492, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !10285, file: !624, line: 387, column: 485)
!10333 = !DILocation(line: 387, column: 490, scope: !10332)
!10334 = !DILocation(line: 387, column: 497, scope: !10335)
!10335 = !DILexicalBlockFile(scope: !10336, file: !624, discriminator: 1)
!10336 = distinct !DILexicalBlock(scope: !10332, file: !624, line: 387, column: 485)
!10337 = !DILocation(line: 387, column: 501, scope: !10335)
!10338 = !DILocation(line: 387, column: 499, scope: !10335)
!10339 = !DILocation(line: 387, column: 485, scope: !10335)
!10340 = !DILocation(line: 387, column: 523, scope: !10341)
!10341 = !DILexicalBlockFile(scope: !10342, file: !624, discriminator: 2)
!10342 = distinct !DILexicalBlock(scope: !10343, file: !624, line: 387, column: 516)
!10343 = distinct !DILexicalBlock(scope: !10336, file: !624, line: 387, column: 514)
!10344 = !DILocation(line: 387, column: 521, scope: !10341)
!10345 = !DILocation(line: 387, column: 528, scope: !10346)
!10346 = !DILexicalBlockFile(scope: !10347, file: !624, discriminator: 3)
!10347 = distinct !DILexicalBlock(scope: !10342, file: !624, line: 387, column: 516)
!10348 = !DILocation(line: 387, column: 532, scope: !10346)
!10349 = !DILocation(line: 387, column: 530, scope: !10346)
!10350 = !DILocation(line: 387, column: 516, scope: !10346)
!10351 = !DILocation(line: 387, column: 559, scope: !10352)
!10352 = !DILexicalBlockFile(scope: !10353, file: !624, discriminator: 4)
!10353 = distinct !DILexicalBlock(scope: !10347, file: !624, line: 387, column: 544)
!10354 = !DILocation(line: 387, column: 555, scope: !10352)
!10355 = !DILocation(line: 387, column: 572, scope: !10352)
!10356 = !DILocation(line: 387, column: 568, scope: !10352)
!10357 = !DILocation(line: 387, column: 567, scope: !10352)
!10358 = !DILocation(line: 387, column: 586, scope: !10352)
!10359 = !DILocation(line: 387, column: 579, scope: !10352)
!10360 = !DILocation(line: 387, column: 578, scope: !10352)
!10361 = !DILocation(line: 387, column: 576, scope: !10352)
!10362 = !DILocation(line: 387, column: 600, scope: !10363)
!10363 = !DILexicalBlockFile(scope: !10353, file: !624, discriminator: 5)
!10364 = !DILocation(line: 387, column: 593, scope: !10363)
!10365 = !DILocation(line: 387, column: 592, scope: !10363)
!10366 = !DILocation(line: 387, column: 567, scope: !10363)
!10367 = !DILocation(line: 387, column: 611, scope: !10368)
!10368 = !DILexicalBlockFile(scope: !10353, file: !624, discriminator: 6)
!10369 = !DILocation(line: 387, column: 607, scope: !10368)
!10370 = !DILocation(line: 387, column: 606, scope: !10368)
!10371 = !DILocation(line: 387, column: 567, scope: !10368)
!10372 = !DILocation(line: 387, column: 567, scope: !10373)
!10373 = !DILexicalBlockFile(scope: !10353, file: !624, discriminator: 7)
!10374 = !DILocation(line: 387, column: 623, scope: !10373)
!10375 = !DILocation(line: 387, column: 619, scope: !10373)
!10376 = !DILocation(line: 387, column: 617, scope: !10373)
!10377 = !DILocation(line: 387, column: 564, scope: !10373)
!10378 = !DILocation(line: 387, column: 629, scope: !10373)
!10379 = !DILocation(line: 387, column: 627, scope: !10373)
!10380 = !DILocation(line: 387, column: 562, scope: !10373)
!10381 = !DILocation(line: 387, column: 555, scope: !10373)
!10382 = !DILocation(line: 387, column: 550, scope: !10373)
!10383 = !DILocation(line: 387, column: 546, scope: !10373)
!10384 = !DILocation(line: 387, column: 553, scope: !10373)
!10385 = !DILocation(line: 387, column: 638, scope: !10373)
!10386 = !DILocation(line: 387, column: 540, scope: !10387)
!10387 = !DILexicalBlockFile(scope: !10347, file: !624, discriminator: 8)
!10388 = !DILocation(line: 387, column: 516, scope: !10387)
!10389 = distinct !{!10389, !10390}
!10390 = !DILocation(line: 387, column: 516, scope: !10343)
!10391 = !DILocation(line: 387, column: 647, scope: !10392)
!10392 = !DILexicalBlockFile(scope: !10343, file: !624, discriminator: 9)
!10393 = !DILocation(line: 387, column: 644, scope: !10392)
!10394 = !DILocation(line: 387, column: 668, scope: !10392)
!10395 = !DILocation(line: 387, column: 665, scope: !10392)
!10396 = !DILocation(line: 387, column: 692, scope: !10392)
!10397 = !DILocation(line: 387, column: 689, scope: !10392)
!10398 = !DILocation(line: 387, column: 709, scope: !10392)
!10399 = !DILocation(line: 387, column: 510, scope: !10400)
!10400 = !DILexicalBlockFile(scope: !10336, file: !624, discriminator: 10)
!10401 = !DILocation(line: 387, column: 485, scope: !10400)
!10402 = distinct !{!10402, !10403}
!10403 = !DILocation(line: 387, column: 485, scope: !10285)
!10404 = !DILocation(line: 387, column: 711, scope: !10405)
!10405 = !DILexicalBlockFile(scope: !10285, file: !624, discriminator: 11)
!10406 = distinct !DISubprogram(name: "blend_difference_12bit", scope: !624, file: !624, line: 379, type: !1531, isLocal: true, isDefinition: true, scopeLine: 379, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!10407 = !DILocalVariable(name: "_top", arg: 1, scope: !10406, file: !624, line: 379, type: !900)
!10408 = !DILocation(line: 379, column: 51, scope: !10406)
!10409 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !10406, file: !624, line: 379, type: !902)
!10410 = !DILocation(line: 379, column: 67, scope: !10406)
!10411 = !DILocalVariable(name: "_bottom", arg: 3, scope: !10406, file: !624, line: 379, type: !900)
!10412 = !DILocation(line: 379, column: 96, scope: !10406)
!10413 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !10406, file: !624, line: 379, type: !902)
!10414 = !DILocation(line: 379, column: 115, scope: !10406)
!10415 = !DILocalVariable(name: "_dst", arg: 5, scope: !10406, file: !624, line: 379, type: !329)
!10416 = !DILocation(line: 379, column: 141, scope: !10406)
!10417 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !10406, file: !624, line: 379, type: !902)
!10418 = !DILocation(line: 379, column: 157, scope: !10406)
!10419 = !DILocalVariable(name: "width", arg: 7, scope: !10406, file: !624, line: 379, type: !902)
!10420 = !DILocation(line: 379, column: 181, scope: !10406)
!10421 = !DILocalVariable(name: "height", arg: 8, scope: !10406, file: !624, line: 379, type: !902)
!10422 = !DILocation(line: 379, column: 198, scope: !10406)
!10423 = !DILocalVariable(name: "param", arg: 9, scope: !10406, file: !624, line: 379, type: !884)
!10424 = !DILocation(line: 379, column: 220, scope: !10406)
!10425 = !DILocalVariable(name: "values", arg: 10, scope: !10406, file: !624, line: 379, type: !544)
!10426 = !DILocation(line: 379, column: 235, scope: !10406)
!10427 = !DILocalVariable(name: "starty", arg: 11, scope: !10406, file: !624, line: 379, type: !238)
!10428 = !DILocation(line: 379, column: 247, scope: !10406)
!10429 = !DILocalVariable(name: "top", scope: !10406, file: !624, line: 379, type: !839)
!10430 = !DILocation(line: 379, column: 273, scope: !10406)
!10431 = !DILocation(line: 379, column: 296, scope: !10406)
!10432 = !DILocation(line: 379, column: 279, scope: !10406)
!10433 = !DILocalVariable(name: "bottom", scope: !10406, file: !624, line: 379, type: !839)
!10434 = !DILocation(line: 379, column: 318, scope: !10406)
!10435 = !DILocation(line: 379, column: 344, scope: !10406)
!10436 = !DILocation(line: 379, column: 327, scope: !10406)
!10437 = !DILocalVariable(name: "dst", scope: !10406, file: !624, line: 379, type: !843)
!10438 = !DILocation(line: 379, column: 363, scope: !10406)
!10439 = !DILocation(line: 379, column: 380, scope: !10406)
!10440 = !DILocation(line: 379, column: 369, scope: !10406)
!10441 = !DILocalVariable(name: "opacity", scope: !10406, file: !624, line: 379, type: !248)
!10442 = !DILocation(line: 379, column: 393, scope: !10406)
!10443 = !DILocation(line: 379, column: 403, scope: !10406)
!10444 = !DILocation(line: 379, column: 410, scope: !10406)
!10445 = !DILocalVariable(name: "i", scope: !10406, file: !624, line: 379, type: !238)
!10446 = !DILocation(line: 379, column: 423, scope: !10406)
!10447 = !DILocalVariable(name: "j", scope: !10406, file: !624, line: 379, type: !238)
!10448 = !DILocation(line: 379, column: 426, scope: !10406)
!10449 = !DILocation(line: 379, column: 442, scope: !10406)
!10450 = !DILocation(line: 379, column: 461, scope: !10406)
!10451 = !DILocation(line: 379, column: 483, scope: !10406)
!10452 = !DILocation(line: 379, column: 496, scope: !10453)
!10453 = distinct !DILexicalBlock(scope: !10406, file: !624, line: 379, column: 489)
!10454 = !DILocation(line: 379, column: 494, scope: !10453)
!10455 = !DILocation(line: 379, column: 501, scope: !10456)
!10456 = !DILexicalBlockFile(scope: !10457, file: !624, discriminator: 1)
!10457 = distinct !DILexicalBlock(scope: !10453, file: !624, line: 379, column: 489)
!10458 = !DILocation(line: 379, column: 505, scope: !10456)
!10459 = !DILocation(line: 379, column: 503, scope: !10456)
!10460 = !DILocation(line: 379, column: 489, scope: !10456)
!10461 = !DILocation(line: 379, column: 527, scope: !10462)
!10462 = !DILexicalBlockFile(scope: !10463, file: !624, discriminator: 2)
!10463 = distinct !DILexicalBlock(scope: !10464, file: !624, line: 379, column: 520)
!10464 = distinct !DILexicalBlock(scope: !10457, file: !624, line: 379, column: 518)
!10465 = !DILocation(line: 379, column: 525, scope: !10462)
!10466 = !DILocation(line: 379, column: 532, scope: !10467)
!10467 = !DILexicalBlockFile(scope: !10468, file: !624, discriminator: 3)
!10468 = distinct !DILexicalBlock(scope: !10463, file: !624, line: 379, column: 520)
!10469 = !DILocation(line: 379, column: 536, scope: !10467)
!10470 = !DILocation(line: 379, column: 534, scope: !10467)
!10471 = !DILocation(line: 379, column: 520, scope: !10467)
!10472 = !DILocation(line: 379, column: 563, scope: !10473)
!10473 = !DILexicalBlockFile(scope: !10474, file: !624, discriminator: 4)
!10474 = distinct !DILexicalBlock(scope: !10468, file: !624, line: 379, column: 548)
!10475 = !DILocation(line: 379, column: 559, scope: !10473)
!10476 = !DILocation(line: 379, column: 576, scope: !10473)
!10477 = !DILocation(line: 379, column: 572, scope: !10473)
!10478 = !DILocation(line: 379, column: 588, scope: !10473)
!10479 = !DILocation(line: 379, column: 581, scope: !10473)
!10480 = !DILocation(line: 379, column: 579, scope: !10473)
!10481 = !DILocation(line: 379, column: 592, scope: !10473)
!10482 = !DILocation(line: 379, column: 571, scope: !10473)
!10483 = !DILocation(line: 379, column: 604, scope: !10484)
!10484 = !DILexicalBlockFile(scope: !10474, file: !624, discriminator: 5)
!10485 = !DILocation(line: 379, column: 600, scope: !10484)
!10486 = !DILocation(line: 379, column: 616, scope: !10484)
!10487 = !DILocation(line: 379, column: 609, scope: !10484)
!10488 = !DILocation(line: 379, column: 607, scope: !10484)
!10489 = !DILocation(line: 379, column: 571, scope: !10484)
!10490 = !DILocation(line: 379, column: 629, scope: !10491)
!10491 = !DILexicalBlockFile(scope: !10474, file: !624, discriminator: 6)
!10492 = !DILocation(line: 379, column: 625, scope: !10491)
!10493 = !DILocation(line: 379, column: 641, scope: !10491)
!10494 = !DILocation(line: 379, column: 634, scope: !10491)
!10495 = !DILocation(line: 379, column: 632, scope: !10491)
!10496 = !DILocation(line: 379, column: 623, scope: !10491)
!10497 = !DILocation(line: 379, column: 571, scope: !10491)
!10498 = !DILocation(line: 379, column: 571, scope: !10499)
!10499 = !DILexicalBlockFile(scope: !10474, file: !624, discriminator: 7)
!10500 = !DILocation(line: 379, column: 654, scope: !10499)
!10501 = !DILocation(line: 379, column: 650, scope: !10499)
!10502 = !DILocation(line: 379, column: 648, scope: !10499)
!10503 = !DILocation(line: 379, column: 568, scope: !10499)
!10504 = !DILocation(line: 379, column: 660, scope: !10499)
!10505 = !DILocation(line: 379, column: 658, scope: !10499)
!10506 = !DILocation(line: 379, column: 566, scope: !10499)
!10507 = !DILocation(line: 379, column: 559, scope: !10499)
!10508 = !DILocation(line: 379, column: 554, scope: !10499)
!10509 = !DILocation(line: 379, column: 550, scope: !10499)
!10510 = !DILocation(line: 379, column: 557, scope: !10499)
!10511 = !DILocation(line: 379, column: 669, scope: !10499)
!10512 = !DILocation(line: 379, column: 544, scope: !10513)
!10513 = !DILexicalBlockFile(scope: !10468, file: !624, discriminator: 8)
!10514 = !DILocation(line: 379, column: 520, scope: !10513)
!10515 = distinct !{!10515, !10516}
!10516 = !DILocation(line: 379, column: 520, scope: !10464)
!10517 = !DILocation(line: 379, column: 678, scope: !10518)
!10518 = !DILexicalBlockFile(scope: !10464, file: !624, discriminator: 9)
!10519 = !DILocation(line: 379, column: 675, scope: !10518)
!10520 = !DILocation(line: 379, column: 699, scope: !10518)
!10521 = !DILocation(line: 379, column: 696, scope: !10518)
!10522 = !DILocation(line: 379, column: 723, scope: !10518)
!10523 = !DILocation(line: 379, column: 720, scope: !10518)
!10524 = !DILocation(line: 379, column: 740, scope: !10518)
!10525 = !DILocation(line: 379, column: 514, scope: !10526)
!10526 = !DILexicalBlockFile(scope: !10457, file: !624, discriminator: 10)
!10527 = !DILocation(line: 379, column: 489, scope: !10526)
!10528 = distinct !{!10528, !10529}
!10529 = !DILocation(line: 379, column: 489, scope: !10406)
!10530 = !DILocation(line: 379, column: 742, scope: !10531)
!10531 = !DILexicalBlockFile(scope: !10406, file: !624, discriminator: 11)
!10532 = distinct !DISubprogram(name: "blend_grainextract_12bit", scope: !624, file: !624, line: 380, type: !1531, isLocal: true, isDefinition: true, scopeLine: 380, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!10533 = !DILocation(line: 229, column: 99, scope: !5463, inlinedAt: !10534)
!10534 = distinct !DILocation(line: 380, column: 577, scope: !10535)
!10535 = !DILexicalBlockFile(scope: !10536, file: !624, discriminator: 4)
!10536 = distinct !DILexicalBlock(scope: !10537, file: !624, line: 380, column: 550)
!10537 = distinct !DILexicalBlock(scope: !10538, file: !624, line: 380, column: 522)
!10538 = distinct !DILexicalBlock(scope: !10539, file: !624, line: 380, column: 522)
!10539 = distinct !DILexicalBlock(scope: !10540, file: !624, line: 380, column: 520)
!10540 = distinct !DILexicalBlock(scope: !10541, file: !624, line: 380, column: 491)
!10541 = distinct !DILexicalBlock(scope: !10532, file: !624, line: 380, column: 491)
!10542 = !DILocation(line: 229, column: 106, scope: !5463, inlinedAt: !10534)
!10543 = !DILocalVariable(name: "_top", arg: 1, scope: !10532, file: !624, line: 380, type: !900)
!10544 = !DILocation(line: 380, column: 53, scope: !10532)
!10545 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !10532, file: !624, line: 380, type: !902)
!10546 = !DILocation(line: 380, column: 69, scope: !10532)
!10547 = !DILocalVariable(name: "_bottom", arg: 3, scope: !10532, file: !624, line: 380, type: !900)
!10548 = !DILocation(line: 380, column: 98, scope: !10532)
!10549 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !10532, file: !624, line: 380, type: !902)
!10550 = !DILocation(line: 380, column: 117, scope: !10532)
!10551 = !DILocalVariable(name: "_dst", arg: 5, scope: !10532, file: !624, line: 380, type: !329)
!10552 = !DILocation(line: 380, column: 143, scope: !10532)
!10553 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !10532, file: !624, line: 380, type: !902)
!10554 = !DILocation(line: 380, column: 159, scope: !10532)
!10555 = !DILocalVariable(name: "width", arg: 7, scope: !10532, file: !624, line: 380, type: !902)
!10556 = !DILocation(line: 380, column: 183, scope: !10532)
!10557 = !DILocalVariable(name: "height", arg: 8, scope: !10532, file: !624, line: 380, type: !902)
!10558 = !DILocation(line: 380, column: 200, scope: !10532)
!10559 = !DILocalVariable(name: "param", arg: 9, scope: !10532, file: !624, line: 380, type: !884)
!10560 = !DILocation(line: 380, column: 222, scope: !10532)
!10561 = !DILocalVariable(name: "values", arg: 10, scope: !10532, file: !624, line: 380, type: !544)
!10562 = !DILocation(line: 380, column: 237, scope: !10532)
!10563 = !DILocalVariable(name: "starty", arg: 11, scope: !10532, file: !624, line: 380, type: !238)
!10564 = !DILocation(line: 380, column: 249, scope: !10532)
!10565 = !DILocalVariable(name: "top", scope: !10532, file: !624, line: 380, type: !839)
!10566 = !DILocation(line: 380, column: 275, scope: !10532)
!10567 = !DILocation(line: 380, column: 298, scope: !10532)
!10568 = !DILocation(line: 380, column: 281, scope: !10532)
!10569 = !DILocalVariable(name: "bottom", scope: !10532, file: !624, line: 380, type: !839)
!10570 = !DILocation(line: 380, column: 320, scope: !10532)
!10571 = !DILocation(line: 380, column: 346, scope: !10532)
!10572 = !DILocation(line: 380, column: 329, scope: !10532)
!10573 = !DILocalVariable(name: "dst", scope: !10532, file: !624, line: 380, type: !843)
!10574 = !DILocation(line: 380, column: 365, scope: !10532)
!10575 = !DILocation(line: 380, column: 382, scope: !10532)
!10576 = !DILocation(line: 380, column: 371, scope: !10532)
!10577 = !DILocalVariable(name: "opacity", scope: !10532, file: !624, line: 380, type: !248)
!10578 = !DILocation(line: 380, column: 395, scope: !10532)
!10579 = !DILocation(line: 380, column: 405, scope: !10532)
!10580 = !DILocation(line: 380, column: 412, scope: !10532)
!10581 = !DILocalVariable(name: "i", scope: !10532, file: !624, line: 380, type: !238)
!10582 = !DILocation(line: 380, column: 425, scope: !10532)
!10583 = !DILocalVariable(name: "j", scope: !10532, file: !624, line: 380, type: !238)
!10584 = !DILocation(line: 380, column: 428, scope: !10532)
!10585 = !DILocation(line: 380, column: 444, scope: !10532)
!10586 = !DILocation(line: 380, column: 463, scope: !10532)
!10587 = !DILocation(line: 380, column: 485, scope: !10532)
!10588 = !DILocation(line: 380, column: 498, scope: !10541)
!10589 = !DILocation(line: 380, column: 496, scope: !10541)
!10590 = !DILocation(line: 380, column: 503, scope: !10591)
!10591 = !DILexicalBlockFile(scope: !10540, file: !624, discriminator: 1)
!10592 = !DILocation(line: 380, column: 507, scope: !10591)
!10593 = !DILocation(line: 380, column: 505, scope: !10591)
!10594 = !DILocation(line: 380, column: 491, scope: !10591)
!10595 = !DILocation(line: 380, column: 529, scope: !10596)
!10596 = !DILexicalBlockFile(scope: !10538, file: !624, discriminator: 2)
!10597 = !DILocation(line: 380, column: 527, scope: !10596)
!10598 = !DILocation(line: 380, column: 534, scope: !10599)
!10599 = !DILexicalBlockFile(scope: !10537, file: !624, discriminator: 3)
!10600 = !DILocation(line: 380, column: 538, scope: !10599)
!10601 = !DILocation(line: 380, column: 536, scope: !10599)
!10602 = !DILocation(line: 380, column: 522, scope: !10599)
!10603 = !DILocation(line: 380, column: 565, scope: !10535)
!10604 = !DILocation(line: 380, column: 561, scope: !10535)
!10605 = !DILocation(line: 380, column: 605, scope: !10535)
!10606 = !DILocation(line: 380, column: 601, scope: !10535)
!10607 = !DILocation(line: 380, column: 599, scope: !10535)
!10608 = !DILocation(line: 380, column: 617, scope: !10535)
!10609 = !DILocation(line: 380, column: 610, scope: !10535)
!10610 = !DILocation(line: 380, column: 608, scope: !10535)
!10611 = !DILocation(line: 380, column: 577, scope: !10535)
!10612 = !DILocation(line: 231, column: 9, scope: !5547, inlinedAt: !10534)
!10613 = !DILocation(line: 231, column: 19, scope: !5547, inlinedAt: !10534)
!10614 = !DILocation(line: 231, column: 17, scope: !5547, inlinedAt: !10534)
!10615 = !DILocation(line: 231, column: 22, scope: !5547, inlinedAt: !10534)
!10616 = !DILocation(line: 231, column: 13, scope: !5547, inlinedAt: !10534)
!10617 = !DILocation(line: 231, column: 11, scope: !5547, inlinedAt: !10534)
!10618 = !DILocation(line: 231, column: 9, scope: !5463, inlinedAt: !10534)
!10619 = !DILocation(line: 231, column: 37, scope: !5555, inlinedAt: !10534)
!10620 = !DILocation(line: 231, column: 36, scope: !5555, inlinedAt: !10534)
!10621 = !DILocation(line: 231, column: 40, scope: !5555, inlinedAt: !10534)
!10622 = !DILocation(line: 231, column: 53, scope: !5555, inlinedAt: !10534)
!10623 = !DILocation(line: 231, column: 51, scope: !5555, inlinedAt: !10534)
!10624 = !DILocation(line: 231, column: 56, scope: !5555, inlinedAt: !10534)
!10625 = !DILocation(line: 231, column: 46, scope: !5555, inlinedAt: !10534)
!10626 = !DILocation(line: 231, column: 28, scope: !5555, inlinedAt: !10534)
!10627 = !DILocation(line: 232, column: 17, scope: !5547, inlinedAt: !10534)
!10628 = !DILocation(line: 232, column: 10, scope: !5547, inlinedAt: !10534)
!10629 = !DILocation(line: 233, column: 1, scope: !5463, inlinedAt: !10534)
!10630 = !DILocation(line: 380, column: 632, scope: !10535)
!10631 = !DILocation(line: 380, column: 628, scope: !10535)
!10632 = !DILocation(line: 380, column: 626, scope: !10535)
!10633 = !DILocation(line: 380, column: 570, scope: !10535)
!10634 = !DILocation(line: 380, column: 638, scope: !10535)
!10635 = !DILocation(line: 380, column: 636, scope: !10535)
!10636 = !DILocation(line: 380, column: 568, scope: !10535)
!10637 = !DILocation(line: 380, column: 556, scope: !10535)
!10638 = !DILocation(line: 380, column: 552, scope: !10535)
!10639 = !DILocation(line: 380, column: 559, scope: !10535)
!10640 = !DILocation(line: 380, column: 647, scope: !10535)
!10641 = !DILocation(line: 380, column: 546, scope: !10642)
!10642 = !DILexicalBlockFile(scope: !10537, file: !624, discriminator: 5)
!10643 = !DILocation(line: 380, column: 522, scope: !10642)
!10644 = distinct !{!10644, !10645}
!10645 = !DILocation(line: 380, column: 522, scope: !10539)
!10646 = !DILocation(line: 380, column: 656, scope: !10647)
!10647 = !DILexicalBlockFile(scope: !10539, file: !624, discriminator: 6)
!10648 = !DILocation(line: 380, column: 653, scope: !10647)
!10649 = !DILocation(line: 380, column: 677, scope: !10647)
!10650 = !DILocation(line: 380, column: 674, scope: !10647)
!10651 = !DILocation(line: 380, column: 701, scope: !10647)
!10652 = !DILocation(line: 380, column: 698, scope: !10647)
!10653 = !DILocation(line: 380, column: 718, scope: !10647)
!10654 = !DILocation(line: 380, column: 516, scope: !10655)
!10655 = !DILexicalBlockFile(scope: !10540, file: !624, discriminator: 7)
!10656 = !DILocation(line: 380, column: 491, scope: !10655)
!10657 = distinct !{!10657, !10658}
!10658 = !DILocation(line: 380, column: 491, scope: !10532)
!10659 = !DILocation(line: 380, column: 720, scope: !10660)
!10660 = !DILexicalBlockFile(scope: !10532, file: !624, discriminator: 8)
!10661 = distinct !DISubprogram(name: "blend_divide_12bit", scope: !624, file: !624, line: 389, type: !1531, isLocal: true, isDefinition: true, scopeLine: 389, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!10662 = !DILocation(line: 229, column: 99, scope: !5463, inlinedAt: !10663)
!10663 = distinct !DILocation(line: 389, column: 571, scope: !10664)
!10664 = !DILexicalBlockFile(scope: !10665, file: !624, discriminator: 7)
!10665 = distinct !DILexicalBlock(scope: !10666, file: !624, line: 389, column: 544)
!10666 = distinct !DILexicalBlock(scope: !10667, file: !624, line: 389, column: 516)
!10667 = distinct !DILexicalBlock(scope: !10668, file: !624, line: 389, column: 516)
!10668 = distinct !DILexicalBlock(scope: !10669, file: !624, line: 389, column: 514)
!10669 = distinct !DILexicalBlock(scope: !10670, file: !624, line: 389, column: 485)
!10670 = distinct !DILexicalBlock(scope: !10661, file: !624, line: 389, column: 485)
!10671 = !DILocation(line: 229, column: 106, scope: !5463, inlinedAt: !10663)
!10672 = !DILocalVariable(name: "_top", arg: 1, scope: !10661, file: !624, line: 389, type: !900)
!10673 = !DILocation(line: 389, column: 47, scope: !10661)
!10674 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !10661, file: !624, line: 389, type: !902)
!10675 = !DILocation(line: 389, column: 63, scope: !10661)
!10676 = !DILocalVariable(name: "_bottom", arg: 3, scope: !10661, file: !624, line: 389, type: !900)
!10677 = !DILocation(line: 389, column: 92, scope: !10661)
!10678 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !10661, file: !624, line: 389, type: !902)
!10679 = !DILocation(line: 389, column: 111, scope: !10661)
!10680 = !DILocalVariable(name: "_dst", arg: 5, scope: !10661, file: !624, line: 389, type: !329)
!10681 = !DILocation(line: 389, column: 137, scope: !10661)
!10682 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !10661, file: !624, line: 389, type: !902)
!10683 = !DILocation(line: 389, column: 153, scope: !10661)
!10684 = !DILocalVariable(name: "width", arg: 7, scope: !10661, file: !624, line: 389, type: !902)
!10685 = !DILocation(line: 389, column: 177, scope: !10661)
!10686 = !DILocalVariable(name: "height", arg: 8, scope: !10661, file: !624, line: 389, type: !902)
!10687 = !DILocation(line: 389, column: 194, scope: !10661)
!10688 = !DILocalVariable(name: "param", arg: 9, scope: !10661, file: !624, line: 389, type: !884)
!10689 = !DILocation(line: 389, column: 216, scope: !10661)
!10690 = !DILocalVariable(name: "values", arg: 10, scope: !10661, file: !624, line: 389, type: !544)
!10691 = !DILocation(line: 389, column: 231, scope: !10661)
!10692 = !DILocalVariable(name: "starty", arg: 11, scope: !10661, file: !624, line: 389, type: !238)
!10693 = !DILocation(line: 389, column: 243, scope: !10661)
!10694 = !DILocalVariable(name: "top", scope: !10661, file: !624, line: 389, type: !839)
!10695 = !DILocation(line: 389, column: 269, scope: !10661)
!10696 = !DILocation(line: 389, column: 292, scope: !10661)
!10697 = !DILocation(line: 389, column: 275, scope: !10661)
!10698 = !DILocalVariable(name: "bottom", scope: !10661, file: !624, line: 389, type: !839)
!10699 = !DILocation(line: 389, column: 314, scope: !10661)
!10700 = !DILocation(line: 389, column: 340, scope: !10661)
!10701 = !DILocation(line: 389, column: 323, scope: !10661)
!10702 = !DILocalVariable(name: "dst", scope: !10661, file: !624, line: 389, type: !843)
!10703 = !DILocation(line: 389, column: 359, scope: !10661)
!10704 = !DILocation(line: 389, column: 376, scope: !10661)
!10705 = !DILocation(line: 389, column: 365, scope: !10661)
!10706 = !DILocalVariable(name: "opacity", scope: !10661, file: !624, line: 389, type: !248)
!10707 = !DILocation(line: 389, column: 389, scope: !10661)
!10708 = !DILocation(line: 389, column: 399, scope: !10661)
!10709 = !DILocation(line: 389, column: 406, scope: !10661)
!10710 = !DILocalVariable(name: "i", scope: !10661, file: !624, line: 389, type: !238)
!10711 = !DILocation(line: 389, column: 419, scope: !10661)
!10712 = !DILocalVariable(name: "j", scope: !10661, file: !624, line: 389, type: !238)
!10713 = !DILocation(line: 389, column: 422, scope: !10661)
!10714 = !DILocation(line: 389, column: 438, scope: !10661)
!10715 = !DILocation(line: 389, column: 457, scope: !10661)
!10716 = !DILocation(line: 389, column: 479, scope: !10661)
!10717 = !DILocation(line: 389, column: 492, scope: !10670)
!10718 = !DILocation(line: 389, column: 490, scope: !10670)
!10719 = !DILocation(line: 389, column: 497, scope: !10720)
!10720 = !DILexicalBlockFile(scope: !10669, file: !624, discriminator: 1)
!10721 = !DILocation(line: 389, column: 501, scope: !10720)
!10722 = !DILocation(line: 389, column: 499, scope: !10720)
!10723 = !DILocation(line: 389, column: 485, scope: !10720)
!10724 = !DILocation(line: 389, column: 523, scope: !10725)
!10725 = !DILexicalBlockFile(scope: !10667, file: !624, discriminator: 2)
!10726 = !DILocation(line: 389, column: 521, scope: !10725)
!10727 = !DILocation(line: 389, column: 528, scope: !10728)
!10728 = !DILexicalBlockFile(scope: !10666, file: !624, discriminator: 3)
!10729 = !DILocation(line: 389, column: 532, scope: !10728)
!10730 = !DILocation(line: 389, column: 530, scope: !10728)
!10731 = !DILocation(line: 389, column: 516, scope: !10728)
!10732 = !DILocation(line: 389, column: 559, scope: !10733)
!10733 = !DILexicalBlockFile(scope: !10665, file: !624, discriminator: 4)
!10734 = !DILocation(line: 389, column: 555, scope: !10733)
!10735 = !DILocation(line: 389, column: 595, scope: !10733)
!10736 = !DILocation(line: 389, column: 588, scope: !10733)
!10737 = !DILocation(line: 389, column: 598, scope: !10733)
!10738 = !DILocation(line: 389, column: 588, scope: !10739)
!10739 = !DILexicalBlockFile(scope: !10665, file: !624, discriminator: 5)
!10740 = !DILocation(line: 389, column: 623, scope: !10741)
!10741 = !DILexicalBlockFile(scope: !10665, file: !624, discriminator: 6)
!10742 = !DILocation(line: 389, column: 619, scope: !10741)
!10743 = !DILocation(line: 389, column: 617, scope: !10741)
!10744 = !DILocation(line: 389, column: 635, scope: !10741)
!10745 = !DILocation(line: 389, column: 628, scope: !10741)
!10746 = !DILocation(line: 389, column: 626, scope: !10741)
!10747 = !DILocation(line: 389, column: 588, scope: !10741)
!10748 = !DILocation(line: 389, column: 588, scope: !10664)
!10749 = !DILocation(line: 389, column: 571, scope: !10664)
!10750 = !DILocation(line: 231, column: 9, scope: !5547, inlinedAt: !10663)
!10751 = !DILocation(line: 231, column: 19, scope: !5547, inlinedAt: !10663)
!10752 = !DILocation(line: 231, column: 17, scope: !5547, inlinedAt: !10663)
!10753 = !DILocation(line: 231, column: 22, scope: !5547, inlinedAt: !10663)
!10754 = !DILocation(line: 231, column: 13, scope: !5547, inlinedAt: !10663)
!10755 = !DILocation(line: 231, column: 11, scope: !5547, inlinedAt: !10663)
!10756 = !DILocation(line: 231, column: 9, scope: !5463, inlinedAt: !10663)
!10757 = !DILocation(line: 231, column: 37, scope: !5555, inlinedAt: !10663)
!10758 = !DILocation(line: 231, column: 36, scope: !5555, inlinedAt: !10663)
!10759 = !DILocation(line: 231, column: 40, scope: !5555, inlinedAt: !10663)
!10760 = !DILocation(line: 231, column: 53, scope: !5555, inlinedAt: !10663)
!10761 = !DILocation(line: 231, column: 51, scope: !5555, inlinedAt: !10663)
!10762 = !DILocation(line: 231, column: 56, scope: !5555, inlinedAt: !10663)
!10763 = !DILocation(line: 231, column: 46, scope: !5555, inlinedAt: !10663)
!10764 = !DILocation(line: 231, column: 28, scope: !5555, inlinedAt: !10663)
!10765 = !DILocation(line: 232, column: 17, scope: !5547, inlinedAt: !10663)
!10766 = !DILocation(line: 232, column: 10, scope: !5547, inlinedAt: !10663)
!10767 = !DILocation(line: 233, column: 1, scope: !5463, inlinedAt: !10663)
!10768 = !DILocation(line: 389, column: 650, scope: !10664)
!10769 = !DILocation(line: 389, column: 646, scope: !10664)
!10770 = !DILocation(line: 389, column: 644, scope: !10664)
!10771 = !DILocation(line: 389, column: 564, scope: !10664)
!10772 = !DILocation(line: 389, column: 656, scope: !10664)
!10773 = !DILocation(line: 389, column: 654, scope: !10664)
!10774 = !DILocation(line: 389, column: 562, scope: !10664)
!10775 = !DILocation(line: 389, column: 555, scope: !10664)
!10776 = !DILocation(line: 389, column: 550, scope: !10664)
!10777 = !DILocation(line: 389, column: 546, scope: !10664)
!10778 = !DILocation(line: 389, column: 553, scope: !10664)
!10779 = !DILocation(line: 389, column: 665, scope: !10664)
!10780 = !DILocation(line: 389, column: 540, scope: !10781)
!10781 = !DILexicalBlockFile(scope: !10666, file: !624, discriminator: 8)
!10782 = !DILocation(line: 389, column: 516, scope: !10781)
!10783 = distinct !{!10783, !10784}
!10784 = !DILocation(line: 389, column: 516, scope: !10668)
!10785 = !DILocation(line: 389, column: 674, scope: !10786)
!10786 = !DILexicalBlockFile(scope: !10668, file: !624, discriminator: 9)
!10787 = !DILocation(line: 389, column: 671, scope: !10786)
!10788 = !DILocation(line: 389, column: 695, scope: !10786)
!10789 = !DILocation(line: 389, column: 692, scope: !10786)
!10790 = !DILocation(line: 389, column: 719, scope: !10786)
!10791 = !DILocation(line: 389, column: 716, scope: !10786)
!10792 = !DILocation(line: 389, column: 736, scope: !10786)
!10793 = !DILocation(line: 389, column: 510, scope: !10794)
!10794 = !DILexicalBlockFile(scope: !10669, file: !624, discriminator: 10)
!10795 = !DILocation(line: 389, column: 485, scope: !10794)
!10796 = distinct !{!10796, !10797}
!10797 = !DILocation(line: 389, column: 485, scope: !10661)
!10798 = !DILocation(line: 389, column: 738, scope: !10799)
!10799 = !DILexicalBlockFile(scope: !10661, file: !624, discriminator: 11)
!10800 = distinct !DISubprogram(name: "blend_dodge_12bit", scope: !624, file: !624, line: 390, type: !1531, isLocal: true, isDefinition: true, scopeLine: 390, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!10801 = !DILocalVariable(name: "_top", arg: 1, scope: !10800, file: !624, line: 390, type: !900)
!10802 = !DILocation(line: 390, column: 46, scope: !10800)
!10803 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !10800, file: !624, line: 390, type: !902)
!10804 = !DILocation(line: 390, column: 62, scope: !10800)
!10805 = !DILocalVariable(name: "_bottom", arg: 3, scope: !10800, file: !624, line: 390, type: !900)
!10806 = !DILocation(line: 390, column: 91, scope: !10800)
!10807 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !10800, file: !624, line: 390, type: !902)
!10808 = !DILocation(line: 390, column: 110, scope: !10800)
!10809 = !DILocalVariable(name: "_dst", arg: 5, scope: !10800, file: !624, line: 390, type: !329)
!10810 = !DILocation(line: 390, column: 136, scope: !10800)
!10811 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !10800, file: !624, line: 390, type: !902)
!10812 = !DILocation(line: 390, column: 152, scope: !10800)
!10813 = !DILocalVariable(name: "width", arg: 7, scope: !10800, file: !624, line: 390, type: !902)
!10814 = !DILocation(line: 390, column: 176, scope: !10800)
!10815 = !DILocalVariable(name: "height", arg: 8, scope: !10800, file: !624, line: 390, type: !902)
!10816 = !DILocation(line: 390, column: 193, scope: !10800)
!10817 = !DILocalVariable(name: "param", arg: 9, scope: !10800, file: !624, line: 390, type: !884)
!10818 = !DILocation(line: 390, column: 215, scope: !10800)
!10819 = !DILocalVariable(name: "values", arg: 10, scope: !10800, file: !624, line: 390, type: !544)
!10820 = !DILocation(line: 390, column: 230, scope: !10800)
!10821 = !DILocalVariable(name: "starty", arg: 11, scope: !10800, file: !624, line: 390, type: !238)
!10822 = !DILocation(line: 390, column: 242, scope: !10800)
!10823 = !DILocalVariable(name: "top", scope: !10800, file: !624, line: 390, type: !839)
!10824 = !DILocation(line: 390, column: 268, scope: !10800)
!10825 = !DILocation(line: 390, column: 291, scope: !10800)
!10826 = !DILocation(line: 390, column: 274, scope: !10800)
!10827 = !DILocalVariable(name: "bottom", scope: !10800, file: !624, line: 390, type: !839)
!10828 = !DILocation(line: 390, column: 313, scope: !10800)
!10829 = !DILocation(line: 390, column: 339, scope: !10800)
!10830 = !DILocation(line: 390, column: 322, scope: !10800)
!10831 = !DILocalVariable(name: "dst", scope: !10800, file: !624, line: 390, type: !843)
!10832 = !DILocation(line: 390, column: 358, scope: !10800)
!10833 = !DILocation(line: 390, column: 375, scope: !10800)
!10834 = !DILocation(line: 390, column: 364, scope: !10800)
!10835 = !DILocalVariable(name: "opacity", scope: !10800, file: !624, line: 390, type: !248)
!10836 = !DILocation(line: 390, column: 388, scope: !10800)
!10837 = !DILocation(line: 390, column: 398, scope: !10800)
!10838 = !DILocation(line: 390, column: 405, scope: !10800)
!10839 = !DILocalVariable(name: "i", scope: !10800, file: !624, line: 390, type: !238)
!10840 = !DILocation(line: 390, column: 418, scope: !10800)
!10841 = !DILocalVariable(name: "j", scope: !10800, file: !624, line: 390, type: !238)
!10842 = !DILocation(line: 390, column: 421, scope: !10800)
!10843 = !DILocation(line: 390, column: 437, scope: !10800)
!10844 = !DILocation(line: 390, column: 456, scope: !10800)
!10845 = !DILocation(line: 390, column: 478, scope: !10800)
!10846 = !DILocation(line: 390, column: 491, scope: !10847)
!10847 = distinct !DILexicalBlock(scope: !10800, file: !624, line: 390, column: 484)
!10848 = !DILocation(line: 390, column: 489, scope: !10847)
!10849 = !DILocation(line: 390, column: 496, scope: !10850)
!10850 = !DILexicalBlockFile(scope: !10851, file: !624, discriminator: 1)
!10851 = distinct !DILexicalBlock(scope: !10847, file: !624, line: 390, column: 484)
!10852 = !DILocation(line: 390, column: 500, scope: !10850)
!10853 = !DILocation(line: 390, column: 498, scope: !10850)
!10854 = !DILocation(line: 390, column: 484, scope: !10850)
!10855 = !DILocation(line: 390, column: 522, scope: !10856)
!10856 = !DILexicalBlockFile(scope: !10857, file: !624, discriminator: 2)
!10857 = distinct !DILexicalBlock(scope: !10858, file: !624, line: 390, column: 515)
!10858 = distinct !DILexicalBlock(scope: !10851, file: !624, line: 390, column: 513)
!10859 = !DILocation(line: 390, column: 520, scope: !10856)
!10860 = !DILocation(line: 390, column: 527, scope: !10861)
!10861 = !DILexicalBlockFile(scope: !10862, file: !624, discriminator: 3)
!10862 = distinct !DILexicalBlock(scope: !10857, file: !624, line: 390, column: 515)
!10863 = !DILocation(line: 390, column: 531, scope: !10861)
!10864 = !DILocation(line: 390, column: 529, scope: !10861)
!10865 = !DILocation(line: 390, column: 515, scope: !10861)
!10866 = !DILocation(line: 390, column: 558, scope: !10867)
!10867 = !DILexicalBlockFile(scope: !10868, file: !624, discriminator: 4)
!10868 = distinct !DILexicalBlock(scope: !10862, file: !624, line: 390, column: 543)
!10869 = !DILocation(line: 390, column: 554, scope: !10867)
!10870 = !DILocation(line: 390, column: 572, scope: !10867)
!10871 = !DILocation(line: 390, column: 568, scope: !10867)
!10872 = !DILocation(line: 390, column: 567, scope: !10867)
!10873 = !DILocation(line: 390, column: 576, scope: !10867)
!10874 = !DILocation(line: 390, column: 566, scope: !10867)
!10875 = !DILocation(line: 390, column: 592, scope: !10876)
!10876 = !DILexicalBlockFile(scope: !10868, file: !624, discriminator: 5)
!10877 = !DILocation(line: 390, column: 588, scope: !10876)
!10878 = !DILocation(line: 390, column: 587, scope: !10876)
!10879 = !DILocation(line: 390, column: 566, scope: !10876)
!10880 = !DILocation(line: 390, column: 619, scope: !10881)
!10881 = !DILexicalBlockFile(scope: !10868, file: !624, discriminator: 6)
!10882 = !DILocation(line: 390, column: 612, scope: !10881)
!10883 = !DILocation(line: 390, column: 611, scope: !10881)
!10884 = !DILocation(line: 390, column: 623, scope: !10881)
!10885 = !DILocation(line: 390, column: 645, scope: !10881)
!10886 = !DILocation(line: 390, column: 641, scope: !10881)
!10887 = !DILocation(line: 390, column: 640, scope: !10881)
!10888 = !DILocation(line: 390, column: 638, scope: !10881)
!10889 = !DILocation(line: 390, column: 630, scope: !10881)
!10890 = !DILocation(line: 390, column: 606, scope: !10881)
!10891 = !DILocation(line: 390, column: 599, scope: !10881)
!10892 = !DILocation(line: 390, column: 665, scope: !10893)
!10893 = !DILexicalBlockFile(scope: !10868, file: !624, discriminator: 7)
!10894 = !DILocation(line: 390, column: 658, scope: !10893)
!10895 = !DILocation(line: 390, column: 657, scope: !10893)
!10896 = !DILocation(line: 390, column: 669, scope: !10893)
!10897 = !DILocation(line: 390, column: 691, scope: !10893)
!10898 = !DILocation(line: 390, column: 687, scope: !10893)
!10899 = !DILocation(line: 390, column: 686, scope: !10893)
!10900 = !DILocation(line: 390, column: 684, scope: !10893)
!10901 = !DILocation(line: 390, column: 676, scope: !10893)
!10902 = !DILocation(line: 390, column: 599, scope: !10893)
!10903 = !DILocation(line: 390, column: 599, scope: !10904)
!10904 = !DILexicalBlockFile(scope: !10868, file: !624, discriminator: 8)
!10905 = !DILocation(line: 390, column: 599, scope: !10906)
!10906 = !DILexicalBlockFile(scope: !10868, file: !624, discriminator: 9)
!10907 = !DILocation(line: 390, column: 566, scope: !10906)
!10908 = !DILocation(line: 390, column: 566, scope: !10909)
!10909 = !DILexicalBlockFile(scope: !10868, file: !624, discriminator: 10)
!10910 = !DILocation(line: 390, column: 716, scope: !10909)
!10911 = !DILocation(line: 390, column: 712, scope: !10909)
!10912 = !DILocation(line: 390, column: 710, scope: !10909)
!10913 = !DILocation(line: 390, column: 563, scope: !10909)
!10914 = !DILocation(line: 390, column: 722, scope: !10909)
!10915 = !DILocation(line: 390, column: 720, scope: !10909)
!10916 = !DILocation(line: 390, column: 561, scope: !10909)
!10917 = !DILocation(line: 390, column: 554, scope: !10909)
!10918 = !DILocation(line: 390, column: 549, scope: !10909)
!10919 = !DILocation(line: 390, column: 545, scope: !10909)
!10920 = !DILocation(line: 390, column: 552, scope: !10909)
!10921 = !DILocation(line: 390, column: 731, scope: !10909)
!10922 = !DILocation(line: 390, column: 539, scope: !10923)
!10923 = !DILexicalBlockFile(scope: !10862, file: !624, discriminator: 11)
!10924 = !DILocation(line: 390, column: 515, scope: !10923)
!10925 = distinct !{!10925, !10926}
!10926 = !DILocation(line: 390, column: 515, scope: !10858)
!10927 = !DILocation(line: 390, column: 740, scope: !10928)
!10928 = !DILexicalBlockFile(scope: !10858, file: !624, discriminator: 12)
!10929 = !DILocation(line: 390, column: 737, scope: !10928)
!10930 = !DILocation(line: 390, column: 761, scope: !10928)
!10931 = !DILocation(line: 390, column: 758, scope: !10928)
!10932 = !DILocation(line: 390, column: 785, scope: !10928)
!10933 = !DILocation(line: 390, column: 782, scope: !10928)
!10934 = !DILocation(line: 390, column: 802, scope: !10928)
!10935 = !DILocation(line: 390, column: 509, scope: !10936)
!10936 = !DILexicalBlockFile(scope: !10851, file: !624, discriminator: 13)
!10937 = !DILocation(line: 390, column: 484, scope: !10936)
!10938 = distinct !{!10938, !10939}
!10939 = !DILocation(line: 390, column: 484, scope: !10800)
!10940 = !DILocation(line: 390, column: 804, scope: !10941)
!10941 = !DILexicalBlockFile(scope: !10800, file: !624, discriminator: 14)
!10942 = distinct !DISubprogram(name: "blend_exclusion_12bit", scope: !624, file: !624, line: 393, type: !1531, isLocal: true, isDefinition: true, scopeLine: 393, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!10943 = !DILocalVariable(name: "_top", arg: 1, scope: !10942, file: !624, line: 393, type: !900)
!10944 = !DILocation(line: 393, column: 50, scope: !10942)
!10945 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !10942, file: !624, line: 393, type: !902)
!10946 = !DILocation(line: 393, column: 66, scope: !10942)
!10947 = !DILocalVariable(name: "_bottom", arg: 3, scope: !10942, file: !624, line: 393, type: !900)
!10948 = !DILocation(line: 393, column: 95, scope: !10942)
!10949 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !10942, file: !624, line: 393, type: !902)
!10950 = !DILocation(line: 393, column: 114, scope: !10942)
!10951 = !DILocalVariable(name: "_dst", arg: 5, scope: !10942, file: !624, line: 393, type: !329)
!10952 = !DILocation(line: 393, column: 140, scope: !10942)
!10953 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !10942, file: !624, line: 393, type: !902)
!10954 = !DILocation(line: 393, column: 156, scope: !10942)
!10955 = !DILocalVariable(name: "width", arg: 7, scope: !10942, file: !624, line: 393, type: !902)
!10956 = !DILocation(line: 393, column: 180, scope: !10942)
!10957 = !DILocalVariable(name: "height", arg: 8, scope: !10942, file: !624, line: 393, type: !902)
!10958 = !DILocation(line: 393, column: 197, scope: !10942)
!10959 = !DILocalVariable(name: "param", arg: 9, scope: !10942, file: !624, line: 393, type: !884)
!10960 = !DILocation(line: 393, column: 219, scope: !10942)
!10961 = !DILocalVariable(name: "values", arg: 10, scope: !10942, file: !624, line: 393, type: !544)
!10962 = !DILocation(line: 393, column: 234, scope: !10942)
!10963 = !DILocalVariable(name: "starty", arg: 11, scope: !10942, file: !624, line: 393, type: !238)
!10964 = !DILocation(line: 393, column: 246, scope: !10942)
!10965 = !DILocalVariable(name: "top", scope: !10942, file: !624, line: 393, type: !839)
!10966 = !DILocation(line: 393, column: 272, scope: !10942)
!10967 = !DILocation(line: 393, column: 295, scope: !10942)
!10968 = !DILocation(line: 393, column: 278, scope: !10942)
!10969 = !DILocalVariable(name: "bottom", scope: !10942, file: !624, line: 393, type: !839)
!10970 = !DILocation(line: 393, column: 317, scope: !10942)
!10971 = !DILocation(line: 393, column: 343, scope: !10942)
!10972 = !DILocation(line: 393, column: 326, scope: !10942)
!10973 = !DILocalVariable(name: "dst", scope: !10942, file: !624, line: 393, type: !843)
!10974 = !DILocation(line: 393, column: 362, scope: !10942)
!10975 = !DILocation(line: 393, column: 379, scope: !10942)
!10976 = !DILocation(line: 393, column: 368, scope: !10942)
!10977 = !DILocalVariable(name: "opacity", scope: !10942, file: !624, line: 393, type: !248)
!10978 = !DILocation(line: 393, column: 392, scope: !10942)
!10979 = !DILocation(line: 393, column: 402, scope: !10942)
!10980 = !DILocation(line: 393, column: 409, scope: !10942)
!10981 = !DILocalVariable(name: "i", scope: !10942, file: !624, line: 393, type: !238)
!10982 = !DILocation(line: 393, column: 422, scope: !10942)
!10983 = !DILocalVariable(name: "j", scope: !10942, file: !624, line: 393, type: !238)
!10984 = !DILocation(line: 393, column: 425, scope: !10942)
!10985 = !DILocation(line: 393, column: 441, scope: !10942)
!10986 = !DILocation(line: 393, column: 460, scope: !10942)
!10987 = !DILocation(line: 393, column: 482, scope: !10942)
!10988 = !DILocation(line: 393, column: 495, scope: !10989)
!10989 = distinct !DILexicalBlock(scope: !10942, file: !624, line: 393, column: 488)
!10990 = !DILocation(line: 393, column: 493, scope: !10989)
!10991 = !DILocation(line: 393, column: 500, scope: !10992)
!10992 = !DILexicalBlockFile(scope: !10993, file: !624, discriminator: 1)
!10993 = distinct !DILexicalBlock(scope: !10989, file: !624, line: 393, column: 488)
!10994 = !DILocation(line: 393, column: 504, scope: !10992)
!10995 = !DILocation(line: 393, column: 502, scope: !10992)
!10996 = !DILocation(line: 393, column: 488, scope: !10992)
!10997 = !DILocation(line: 393, column: 526, scope: !10998)
!10998 = !DILexicalBlockFile(scope: !10999, file: !624, discriminator: 2)
!10999 = distinct !DILexicalBlock(scope: !11000, file: !624, line: 393, column: 519)
!11000 = distinct !DILexicalBlock(scope: !10993, file: !624, line: 393, column: 517)
!11001 = !DILocation(line: 393, column: 524, scope: !10998)
!11002 = !DILocation(line: 393, column: 531, scope: !11003)
!11003 = !DILexicalBlockFile(scope: !11004, file: !624, discriminator: 3)
!11004 = distinct !DILexicalBlock(scope: !10999, file: !624, line: 393, column: 519)
!11005 = !DILocation(line: 393, column: 535, scope: !11003)
!11006 = !DILocation(line: 393, column: 533, scope: !11003)
!11007 = !DILocation(line: 393, column: 519, scope: !11003)
!11008 = !DILocation(line: 393, column: 562, scope: !11009)
!11009 = !DILexicalBlockFile(scope: !11010, file: !624, discriminator: 4)
!11010 = distinct !DILexicalBlock(scope: !11004, file: !624, line: 393, column: 547)
!11011 = !DILocation(line: 393, column: 558, scope: !11009)
!11012 = !DILocation(line: 393, column: 573, scope: !11009)
!11013 = !DILocation(line: 393, column: 569, scope: !11009)
!11014 = !DILocation(line: 393, column: 585, scope: !11009)
!11015 = !DILocation(line: 393, column: 578, scope: !11009)
!11016 = !DILocation(line: 393, column: 576, scope: !11009)
!11017 = !DILocation(line: 393, column: 598, scope: !11009)
!11018 = !DILocation(line: 393, column: 594, scope: !11009)
!11019 = !DILocation(line: 393, column: 592, scope: !11009)
!11020 = !DILocation(line: 393, column: 610, scope: !11009)
!11021 = !DILocation(line: 393, column: 603, scope: !11009)
!11022 = !DILocation(line: 393, column: 601, scope: !11009)
!11023 = !DILocation(line: 393, column: 613, scope: !11009)
!11024 = !DILocation(line: 393, column: 588, scope: !11009)
!11025 = !DILocation(line: 393, column: 627, scope: !11009)
!11026 = !DILocation(line: 393, column: 623, scope: !11009)
!11027 = !DILocation(line: 393, column: 621, scope: !11009)
!11028 = !DILocation(line: 393, column: 567, scope: !11009)
!11029 = !DILocation(line: 393, column: 633, scope: !11009)
!11030 = !DILocation(line: 393, column: 631, scope: !11009)
!11031 = !DILocation(line: 393, column: 565, scope: !11009)
!11032 = !DILocation(line: 393, column: 553, scope: !11009)
!11033 = !DILocation(line: 393, column: 549, scope: !11009)
!11034 = !DILocation(line: 393, column: 556, scope: !11009)
!11035 = !DILocation(line: 393, column: 642, scope: !11009)
!11036 = !DILocation(line: 393, column: 543, scope: !11037)
!11037 = !DILexicalBlockFile(scope: !11004, file: !624, discriminator: 5)
!11038 = !DILocation(line: 393, column: 519, scope: !11037)
!11039 = distinct !{!11039, !11040}
!11040 = !DILocation(line: 393, column: 519, scope: !11000)
!11041 = !DILocation(line: 393, column: 651, scope: !11042)
!11042 = !DILexicalBlockFile(scope: !11000, file: !624, discriminator: 6)
!11043 = !DILocation(line: 393, column: 648, scope: !11042)
!11044 = !DILocation(line: 393, column: 672, scope: !11042)
!11045 = !DILocation(line: 393, column: 669, scope: !11042)
!11046 = !DILocation(line: 393, column: 696, scope: !11042)
!11047 = !DILocation(line: 393, column: 693, scope: !11042)
!11048 = !DILocation(line: 393, column: 713, scope: !11042)
!11049 = !DILocation(line: 393, column: 513, scope: !11050)
!11050 = !DILexicalBlockFile(scope: !10993, file: !624, discriminator: 7)
!11051 = !DILocation(line: 393, column: 488, scope: !11050)
!11052 = distinct !{!11052, !11053}
!11053 = !DILocation(line: 393, column: 488, scope: !10942)
!11054 = !DILocation(line: 393, column: 715, scope: !11055)
!11055 = !DILexicalBlockFile(scope: !10942, file: !624, discriminator: 8)
!11056 = distinct !DISubprogram(name: "blend_extremity_12bit", scope: !624, file: !624, line: 378, type: !1531, isLocal: true, isDefinition: true, scopeLine: 378, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!11057 = !DILocalVariable(name: "_top", arg: 1, scope: !11056, file: !624, line: 378, type: !900)
!11058 = !DILocation(line: 378, column: 50, scope: !11056)
!11059 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !11056, file: !624, line: 378, type: !902)
!11060 = !DILocation(line: 378, column: 66, scope: !11056)
!11061 = !DILocalVariable(name: "_bottom", arg: 3, scope: !11056, file: !624, line: 378, type: !900)
!11062 = !DILocation(line: 378, column: 95, scope: !11056)
!11063 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !11056, file: !624, line: 378, type: !902)
!11064 = !DILocation(line: 378, column: 114, scope: !11056)
!11065 = !DILocalVariable(name: "_dst", arg: 5, scope: !11056, file: !624, line: 378, type: !329)
!11066 = !DILocation(line: 378, column: 140, scope: !11056)
!11067 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !11056, file: !624, line: 378, type: !902)
!11068 = !DILocation(line: 378, column: 156, scope: !11056)
!11069 = !DILocalVariable(name: "width", arg: 7, scope: !11056, file: !624, line: 378, type: !902)
!11070 = !DILocation(line: 378, column: 180, scope: !11056)
!11071 = !DILocalVariable(name: "height", arg: 8, scope: !11056, file: !624, line: 378, type: !902)
!11072 = !DILocation(line: 378, column: 197, scope: !11056)
!11073 = !DILocalVariable(name: "param", arg: 9, scope: !11056, file: !624, line: 378, type: !884)
!11074 = !DILocation(line: 378, column: 219, scope: !11056)
!11075 = !DILocalVariable(name: "values", arg: 10, scope: !11056, file: !624, line: 378, type: !544)
!11076 = !DILocation(line: 378, column: 234, scope: !11056)
!11077 = !DILocalVariable(name: "starty", arg: 11, scope: !11056, file: !624, line: 378, type: !238)
!11078 = !DILocation(line: 378, column: 246, scope: !11056)
!11079 = !DILocalVariable(name: "top", scope: !11056, file: !624, line: 378, type: !839)
!11080 = !DILocation(line: 378, column: 272, scope: !11056)
!11081 = !DILocation(line: 378, column: 295, scope: !11056)
!11082 = !DILocation(line: 378, column: 278, scope: !11056)
!11083 = !DILocalVariable(name: "bottom", scope: !11056, file: !624, line: 378, type: !839)
!11084 = !DILocation(line: 378, column: 317, scope: !11056)
!11085 = !DILocation(line: 378, column: 343, scope: !11056)
!11086 = !DILocation(line: 378, column: 326, scope: !11056)
!11087 = !DILocalVariable(name: "dst", scope: !11056, file: !624, line: 378, type: !843)
!11088 = !DILocation(line: 378, column: 362, scope: !11056)
!11089 = !DILocation(line: 378, column: 379, scope: !11056)
!11090 = !DILocation(line: 378, column: 368, scope: !11056)
!11091 = !DILocalVariable(name: "opacity", scope: !11056, file: !624, line: 378, type: !248)
!11092 = !DILocation(line: 378, column: 392, scope: !11056)
!11093 = !DILocation(line: 378, column: 402, scope: !11056)
!11094 = !DILocation(line: 378, column: 409, scope: !11056)
!11095 = !DILocalVariable(name: "i", scope: !11056, file: !624, line: 378, type: !238)
!11096 = !DILocation(line: 378, column: 422, scope: !11056)
!11097 = !DILocalVariable(name: "j", scope: !11056, file: !624, line: 378, type: !238)
!11098 = !DILocation(line: 378, column: 425, scope: !11056)
!11099 = !DILocation(line: 378, column: 441, scope: !11056)
!11100 = !DILocation(line: 378, column: 460, scope: !11056)
!11101 = !DILocation(line: 378, column: 482, scope: !11056)
!11102 = !DILocation(line: 378, column: 495, scope: !11103)
!11103 = distinct !DILexicalBlock(scope: !11056, file: !624, line: 378, column: 488)
!11104 = !DILocation(line: 378, column: 493, scope: !11103)
!11105 = !DILocation(line: 378, column: 500, scope: !11106)
!11106 = !DILexicalBlockFile(scope: !11107, file: !624, discriminator: 1)
!11107 = distinct !DILexicalBlock(scope: !11103, file: !624, line: 378, column: 488)
!11108 = !DILocation(line: 378, column: 504, scope: !11106)
!11109 = !DILocation(line: 378, column: 502, scope: !11106)
!11110 = !DILocation(line: 378, column: 488, scope: !11106)
!11111 = !DILocation(line: 378, column: 526, scope: !11112)
!11112 = !DILexicalBlockFile(scope: !11113, file: !624, discriminator: 2)
!11113 = distinct !DILexicalBlock(scope: !11114, file: !624, line: 378, column: 519)
!11114 = distinct !DILexicalBlock(scope: !11107, file: !624, line: 378, column: 517)
!11115 = !DILocation(line: 378, column: 524, scope: !11112)
!11116 = !DILocation(line: 378, column: 531, scope: !11117)
!11117 = !DILexicalBlockFile(scope: !11118, file: !624, discriminator: 3)
!11118 = distinct !DILexicalBlock(scope: !11113, file: !624, line: 378, column: 519)
!11119 = !DILocation(line: 378, column: 535, scope: !11117)
!11120 = !DILocation(line: 378, column: 533, scope: !11117)
!11121 = !DILocation(line: 378, column: 519, scope: !11117)
!11122 = !DILocation(line: 378, column: 562, scope: !11123)
!11123 = !DILexicalBlockFile(scope: !11124, file: !624, discriminator: 4)
!11124 = distinct !DILexicalBlock(scope: !11118, file: !624, line: 378, column: 547)
!11125 = !DILocation(line: 378, column: 558, scope: !11123)
!11126 = !DILocation(line: 378, column: 582, scope: !11123)
!11127 = !DILocation(line: 378, column: 578, scope: !11123)
!11128 = !DILocation(line: 378, column: 576, scope: !11123)
!11129 = !DILocation(line: 378, column: 594, scope: !11123)
!11130 = !DILocation(line: 378, column: 587, scope: !11123)
!11131 = !DILocation(line: 378, column: 585, scope: !11123)
!11132 = !DILocation(line: 378, column: 598, scope: !11123)
!11133 = !DILocation(line: 378, column: 570, scope: !11123)
!11134 = !DILocation(line: 378, column: 617, scope: !11135)
!11135 = !DILexicalBlockFile(scope: !11124, file: !624, discriminator: 5)
!11136 = !DILocation(line: 378, column: 613, scope: !11135)
!11137 = !DILocation(line: 378, column: 611, scope: !11135)
!11138 = !DILocation(line: 378, column: 629, scope: !11135)
!11139 = !DILocation(line: 378, column: 622, scope: !11135)
!11140 = !DILocation(line: 378, column: 620, scope: !11135)
!11141 = !DILocation(line: 378, column: 570, scope: !11135)
!11142 = !DILocation(line: 378, column: 649, scope: !11143)
!11143 = !DILexicalBlockFile(scope: !11124, file: !624, discriminator: 6)
!11144 = !DILocation(line: 378, column: 645, scope: !11143)
!11145 = !DILocation(line: 378, column: 643, scope: !11143)
!11146 = !DILocation(line: 378, column: 661, scope: !11143)
!11147 = !DILocation(line: 378, column: 654, scope: !11143)
!11148 = !DILocation(line: 378, column: 652, scope: !11143)
!11149 = !DILocation(line: 378, column: 636, scope: !11143)
!11150 = !DILocation(line: 378, column: 570, scope: !11143)
!11151 = !DILocation(line: 378, column: 570, scope: !11152)
!11152 = !DILexicalBlockFile(scope: !11124, file: !624, discriminator: 7)
!11153 = !DILocation(line: 378, column: 674, scope: !11152)
!11154 = !DILocation(line: 378, column: 670, scope: !11152)
!11155 = !DILocation(line: 378, column: 668, scope: !11152)
!11156 = !DILocation(line: 378, column: 567, scope: !11152)
!11157 = !DILocation(line: 378, column: 680, scope: !11152)
!11158 = !DILocation(line: 378, column: 678, scope: !11152)
!11159 = !DILocation(line: 378, column: 565, scope: !11152)
!11160 = !DILocation(line: 378, column: 558, scope: !11152)
!11161 = !DILocation(line: 378, column: 553, scope: !11152)
!11162 = !DILocation(line: 378, column: 549, scope: !11152)
!11163 = !DILocation(line: 378, column: 556, scope: !11152)
!11164 = !DILocation(line: 378, column: 689, scope: !11152)
!11165 = !DILocation(line: 378, column: 543, scope: !11166)
!11166 = !DILexicalBlockFile(scope: !11118, file: !624, discriminator: 8)
!11167 = !DILocation(line: 378, column: 519, scope: !11166)
!11168 = distinct !{!11168, !11169}
!11169 = !DILocation(line: 378, column: 519, scope: !11114)
!11170 = !DILocation(line: 378, column: 698, scope: !11171)
!11171 = !DILexicalBlockFile(scope: !11114, file: !624, discriminator: 9)
!11172 = !DILocation(line: 378, column: 695, scope: !11171)
!11173 = !DILocation(line: 378, column: 719, scope: !11171)
!11174 = !DILocation(line: 378, column: 716, scope: !11171)
!11175 = !DILocation(line: 378, column: 743, scope: !11171)
!11176 = !DILocation(line: 378, column: 740, scope: !11171)
!11177 = !DILocation(line: 378, column: 760, scope: !11171)
!11178 = !DILocation(line: 378, column: 513, scope: !11179)
!11179 = !DILexicalBlockFile(scope: !11107, file: !624, discriminator: 10)
!11180 = !DILocation(line: 378, column: 488, scope: !11179)
!11181 = distinct !{!11181, !11182}
!11182 = !DILocation(line: 378, column: 488, scope: !11056)
!11183 = !DILocation(line: 378, column: 762, scope: !11184)
!11184 = !DILexicalBlockFile(scope: !11056, file: !624, discriminator: 11)
!11185 = distinct !DISubprogram(name: "blend_freeze_12bit", scope: !624, file: !624, line: 386, type: !1531, isLocal: true, isDefinition: true, scopeLine: 386, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!11186 = !DILocalVariable(name: "_top", arg: 1, scope: !11185, file: !624, line: 386, type: !900)
!11187 = !DILocation(line: 386, column: 47, scope: !11185)
!11188 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !11185, file: !624, line: 386, type: !902)
!11189 = !DILocation(line: 386, column: 63, scope: !11185)
!11190 = !DILocalVariable(name: "_bottom", arg: 3, scope: !11185, file: !624, line: 386, type: !900)
!11191 = !DILocation(line: 386, column: 92, scope: !11185)
!11192 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !11185, file: !624, line: 386, type: !902)
!11193 = !DILocation(line: 386, column: 111, scope: !11185)
!11194 = !DILocalVariable(name: "_dst", arg: 5, scope: !11185, file: !624, line: 386, type: !329)
!11195 = !DILocation(line: 386, column: 137, scope: !11185)
!11196 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !11185, file: !624, line: 386, type: !902)
!11197 = !DILocation(line: 386, column: 153, scope: !11185)
!11198 = !DILocalVariable(name: "width", arg: 7, scope: !11185, file: !624, line: 386, type: !902)
!11199 = !DILocation(line: 386, column: 177, scope: !11185)
!11200 = !DILocalVariable(name: "height", arg: 8, scope: !11185, file: !624, line: 386, type: !902)
!11201 = !DILocation(line: 386, column: 194, scope: !11185)
!11202 = !DILocalVariable(name: "param", arg: 9, scope: !11185, file: !624, line: 386, type: !884)
!11203 = !DILocation(line: 386, column: 216, scope: !11185)
!11204 = !DILocalVariable(name: "values", arg: 10, scope: !11185, file: !624, line: 386, type: !544)
!11205 = !DILocation(line: 386, column: 231, scope: !11185)
!11206 = !DILocalVariable(name: "starty", arg: 11, scope: !11185, file: !624, line: 386, type: !238)
!11207 = !DILocation(line: 386, column: 243, scope: !11185)
!11208 = !DILocalVariable(name: "top", scope: !11185, file: !624, line: 386, type: !839)
!11209 = !DILocation(line: 386, column: 269, scope: !11185)
!11210 = !DILocation(line: 386, column: 292, scope: !11185)
!11211 = !DILocation(line: 386, column: 275, scope: !11185)
!11212 = !DILocalVariable(name: "bottom", scope: !11185, file: !624, line: 386, type: !839)
!11213 = !DILocation(line: 386, column: 314, scope: !11185)
!11214 = !DILocation(line: 386, column: 340, scope: !11185)
!11215 = !DILocation(line: 386, column: 323, scope: !11185)
!11216 = !DILocalVariable(name: "dst", scope: !11185, file: !624, line: 386, type: !843)
!11217 = !DILocation(line: 386, column: 359, scope: !11185)
!11218 = !DILocation(line: 386, column: 376, scope: !11185)
!11219 = !DILocation(line: 386, column: 365, scope: !11185)
!11220 = !DILocalVariable(name: "opacity", scope: !11185, file: !624, line: 386, type: !248)
!11221 = !DILocation(line: 386, column: 389, scope: !11185)
!11222 = !DILocation(line: 386, column: 399, scope: !11185)
!11223 = !DILocation(line: 386, column: 406, scope: !11185)
!11224 = !DILocalVariable(name: "i", scope: !11185, file: !624, line: 386, type: !238)
!11225 = !DILocation(line: 386, column: 419, scope: !11185)
!11226 = !DILocalVariable(name: "j", scope: !11185, file: !624, line: 386, type: !238)
!11227 = !DILocation(line: 386, column: 422, scope: !11185)
!11228 = !DILocation(line: 386, column: 438, scope: !11185)
!11229 = !DILocation(line: 386, column: 457, scope: !11185)
!11230 = !DILocation(line: 386, column: 479, scope: !11185)
!11231 = !DILocation(line: 386, column: 492, scope: !11232)
!11232 = distinct !DILexicalBlock(scope: !11185, file: !624, line: 386, column: 485)
!11233 = !DILocation(line: 386, column: 490, scope: !11232)
!11234 = !DILocation(line: 386, column: 497, scope: !11235)
!11235 = !DILexicalBlockFile(scope: !11236, file: !624, discriminator: 1)
!11236 = distinct !DILexicalBlock(scope: !11232, file: !624, line: 386, column: 485)
!11237 = !DILocation(line: 386, column: 501, scope: !11235)
!11238 = !DILocation(line: 386, column: 499, scope: !11235)
!11239 = !DILocation(line: 386, column: 485, scope: !11235)
!11240 = !DILocation(line: 386, column: 523, scope: !11241)
!11241 = !DILexicalBlockFile(scope: !11242, file: !624, discriminator: 2)
!11242 = distinct !DILexicalBlock(scope: !11243, file: !624, line: 386, column: 516)
!11243 = distinct !DILexicalBlock(scope: !11236, file: !624, line: 386, column: 514)
!11244 = !DILocation(line: 386, column: 521, scope: !11241)
!11245 = !DILocation(line: 386, column: 528, scope: !11246)
!11246 = !DILexicalBlockFile(scope: !11247, file: !624, discriminator: 3)
!11247 = distinct !DILexicalBlock(scope: !11242, file: !624, line: 386, column: 516)
!11248 = !DILocation(line: 386, column: 532, scope: !11246)
!11249 = !DILocation(line: 386, column: 530, scope: !11246)
!11250 = !DILocation(line: 386, column: 516, scope: !11246)
!11251 = !DILocation(line: 386, column: 559, scope: !11252)
!11252 = !DILexicalBlockFile(scope: !11253, file: !624, discriminator: 4)
!11253 = distinct !DILexicalBlock(scope: !11247, file: !624, line: 386, column: 544)
!11254 = !DILocation(line: 386, column: 555, scope: !11252)
!11255 = !DILocation(line: 386, column: 574, scope: !11252)
!11256 = !DILocation(line: 386, column: 567, scope: !11252)
!11257 = !DILocation(line: 386, column: 577, scope: !11252)
!11258 = !DILocation(line: 386, column: 566, scope: !11252)
!11259 = !DILocation(line: 386, column: 566, scope: !11260)
!11260 = !DILexicalBlockFile(scope: !11253, file: !624, discriminator: 5)
!11261 = !DILocation(line: 386, column: 611, scope: !11262)
!11262 = !DILexicalBlockFile(scope: !11253, file: !624, discriminator: 6)
!11263 = !DILocation(line: 386, column: 607, scope: !11262)
!11264 = !DILocation(line: 386, column: 605, scope: !11262)
!11265 = !DILocation(line: 386, column: 629, scope: !11262)
!11266 = !DILocation(line: 386, column: 625, scope: !11262)
!11267 = !DILocation(line: 386, column: 623, scope: !11262)
!11268 = !DILocation(line: 386, column: 615, scope: !11262)
!11269 = !DILocation(line: 386, column: 643, scope: !11262)
!11270 = !DILocation(line: 386, column: 636, scope: !11262)
!11271 = !DILocation(line: 386, column: 634, scope: !11262)
!11272 = !DILocation(line: 386, column: 647, scope: !11262)
!11273 = !DILocation(line: 386, column: 597, scope: !11262)
!11274 = !DILocation(line: 386, column: 597, scope: !11275)
!11275 = !DILexicalBlockFile(scope: !11253, file: !624, discriminator: 7)
!11276 = !DILocation(line: 386, column: 681, scope: !11277)
!11277 = !DILexicalBlockFile(scope: !11253, file: !624, discriminator: 8)
!11278 = !DILocation(line: 386, column: 677, scope: !11277)
!11279 = !DILocation(line: 386, column: 675, scope: !11277)
!11280 = !DILocation(line: 386, column: 699, scope: !11277)
!11281 = !DILocation(line: 386, column: 695, scope: !11277)
!11282 = !DILocation(line: 386, column: 693, scope: !11277)
!11283 = !DILocation(line: 386, column: 685, scope: !11277)
!11284 = !DILocation(line: 386, column: 713, scope: !11277)
!11285 = !DILocation(line: 386, column: 706, scope: !11277)
!11286 = !DILocation(line: 386, column: 704, scope: !11277)
!11287 = !DILocation(line: 386, column: 597, scope: !11277)
!11288 = !DILocation(line: 386, column: 597, scope: !11289)
!11289 = !DILexicalBlockFile(scope: !11253, file: !624, discriminator: 9)
!11290 = !DILocation(line: 386, column: 594, scope: !11289)
!11291 = !DILocation(line: 386, column: 566, scope: !11289)
!11292 = !DILocation(line: 386, column: 566, scope: !11293)
!11293 = !DILexicalBlockFile(scope: !11253, file: !624, discriminator: 10)
!11294 = !DILocation(line: 386, column: 725, scope: !11293)
!11295 = !DILocation(line: 386, column: 721, scope: !11293)
!11296 = !DILocation(line: 386, column: 719, scope: !11293)
!11297 = !DILocation(line: 386, column: 564, scope: !11293)
!11298 = !DILocation(line: 386, column: 731, scope: !11293)
!11299 = !DILocation(line: 386, column: 729, scope: !11293)
!11300 = !DILocation(line: 386, column: 562, scope: !11293)
!11301 = !DILocation(line: 386, column: 555, scope: !11293)
!11302 = !DILocation(line: 386, column: 550, scope: !11293)
!11303 = !DILocation(line: 386, column: 546, scope: !11293)
!11304 = !DILocation(line: 386, column: 553, scope: !11293)
!11305 = !DILocation(line: 386, column: 740, scope: !11293)
!11306 = !DILocation(line: 386, column: 540, scope: !11307)
!11307 = !DILexicalBlockFile(scope: !11247, file: !624, discriminator: 11)
!11308 = !DILocation(line: 386, column: 516, scope: !11307)
!11309 = distinct !{!11309, !11310}
!11310 = !DILocation(line: 386, column: 516, scope: !11243)
!11311 = !DILocation(line: 386, column: 749, scope: !11312)
!11312 = !DILexicalBlockFile(scope: !11243, file: !624, discriminator: 12)
!11313 = !DILocation(line: 386, column: 746, scope: !11312)
!11314 = !DILocation(line: 386, column: 770, scope: !11312)
!11315 = !DILocation(line: 386, column: 767, scope: !11312)
!11316 = !DILocation(line: 386, column: 794, scope: !11312)
!11317 = !DILocation(line: 386, column: 791, scope: !11312)
!11318 = !DILocation(line: 386, column: 811, scope: !11312)
!11319 = !DILocation(line: 386, column: 510, scope: !11320)
!11320 = !DILexicalBlockFile(scope: !11236, file: !624, discriminator: 13)
!11321 = !DILocation(line: 386, column: 485, scope: !11320)
!11322 = distinct !{!11322, !11323}
!11323 = !DILocation(line: 386, column: 485, scope: !11185)
!11324 = !DILocation(line: 386, column: 813, scope: !11325)
!11325 = !DILexicalBlockFile(scope: !11185, file: !624, discriminator: 14)
!11326 = distinct !DISubprogram(name: "blend_glow_12bit", scope: !624, file: !624, line: 397, type: !1531, isLocal: true, isDefinition: true, scopeLine: 397, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!11327 = !DILocalVariable(name: "_top", arg: 1, scope: !11326, file: !624, line: 397, type: !900)
!11328 = !DILocation(line: 397, column: 45, scope: !11326)
!11329 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !11326, file: !624, line: 397, type: !902)
!11330 = !DILocation(line: 397, column: 61, scope: !11326)
!11331 = !DILocalVariable(name: "_bottom", arg: 3, scope: !11326, file: !624, line: 397, type: !900)
!11332 = !DILocation(line: 397, column: 90, scope: !11326)
!11333 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !11326, file: !624, line: 397, type: !902)
!11334 = !DILocation(line: 397, column: 109, scope: !11326)
!11335 = !DILocalVariable(name: "_dst", arg: 5, scope: !11326, file: !624, line: 397, type: !329)
!11336 = !DILocation(line: 397, column: 135, scope: !11326)
!11337 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !11326, file: !624, line: 397, type: !902)
!11338 = !DILocation(line: 397, column: 151, scope: !11326)
!11339 = !DILocalVariable(name: "width", arg: 7, scope: !11326, file: !624, line: 397, type: !902)
!11340 = !DILocation(line: 397, column: 175, scope: !11326)
!11341 = !DILocalVariable(name: "height", arg: 8, scope: !11326, file: !624, line: 397, type: !902)
!11342 = !DILocation(line: 397, column: 192, scope: !11326)
!11343 = !DILocalVariable(name: "param", arg: 9, scope: !11326, file: !624, line: 397, type: !884)
!11344 = !DILocation(line: 397, column: 214, scope: !11326)
!11345 = !DILocalVariable(name: "values", arg: 10, scope: !11326, file: !624, line: 397, type: !544)
!11346 = !DILocation(line: 397, column: 229, scope: !11326)
!11347 = !DILocalVariable(name: "starty", arg: 11, scope: !11326, file: !624, line: 397, type: !238)
!11348 = !DILocation(line: 397, column: 241, scope: !11326)
!11349 = !DILocalVariable(name: "top", scope: !11326, file: !624, line: 397, type: !839)
!11350 = !DILocation(line: 397, column: 267, scope: !11326)
!11351 = !DILocation(line: 397, column: 290, scope: !11326)
!11352 = !DILocation(line: 397, column: 273, scope: !11326)
!11353 = !DILocalVariable(name: "bottom", scope: !11326, file: !624, line: 397, type: !839)
!11354 = !DILocation(line: 397, column: 312, scope: !11326)
!11355 = !DILocation(line: 397, column: 338, scope: !11326)
!11356 = !DILocation(line: 397, column: 321, scope: !11326)
!11357 = !DILocalVariable(name: "dst", scope: !11326, file: !624, line: 397, type: !843)
!11358 = !DILocation(line: 397, column: 357, scope: !11326)
!11359 = !DILocation(line: 397, column: 374, scope: !11326)
!11360 = !DILocation(line: 397, column: 363, scope: !11326)
!11361 = !DILocalVariable(name: "opacity", scope: !11326, file: !624, line: 397, type: !248)
!11362 = !DILocation(line: 397, column: 387, scope: !11326)
!11363 = !DILocation(line: 397, column: 397, scope: !11326)
!11364 = !DILocation(line: 397, column: 404, scope: !11326)
!11365 = !DILocalVariable(name: "i", scope: !11326, file: !624, line: 397, type: !238)
!11366 = !DILocation(line: 397, column: 417, scope: !11326)
!11367 = !DILocalVariable(name: "j", scope: !11326, file: !624, line: 397, type: !238)
!11368 = !DILocation(line: 397, column: 420, scope: !11326)
!11369 = !DILocation(line: 397, column: 436, scope: !11326)
!11370 = !DILocation(line: 397, column: 455, scope: !11326)
!11371 = !DILocation(line: 397, column: 477, scope: !11326)
!11372 = !DILocation(line: 397, column: 490, scope: !11373)
!11373 = distinct !DILexicalBlock(scope: !11326, file: !624, line: 397, column: 483)
!11374 = !DILocation(line: 397, column: 488, scope: !11373)
!11375 = !DILocation(line: 397, column: 495, scope: !11376)
!11376 = !DILexicalBlockFile(scope: !11377, file: !624, discriminator: 1)
!11377 = distinct !DILexicalBlock(scope: !11373, file: !624, line: 397, column: 483)
!11378 = !DILocation(line: 397, column: 499, scope: !11376)
!11379 = !DILocation(line: 397, column: 497, scope: !11376)
!11380 = !DILocation(line: 397, column: 483, scope: !11376)
!11381 = !DILocation(line: 397, column: 521, scope: !11382)
!11382 = !DILexicalBlockFile(scope: !11383, file: !624, discriminator: 2)
!11383 = distinct !DILexicalBlock(scope: !11384, file: !624, line: 397, column: 514)
!11384 = distinct !DILexicalBlock(scope: !11377, file: !624, line: 397, column: 512)
!11385 = !DILocation(line: 397, column: 519, scope: !11382)
!11386 = !DILocation(line: 397, column: 526, scope: !11387)
!11387 = !DILexicalBlockFile(scope: !11388, file: !624, discriminator: 3)
!11388 = distinct !DILexicalBlock(scope: !11383, file: !624, line: 397, column: 514)
!11389 = !DILocation(line: 397, column: 530, scope: !11387)
!11390 = !DILocation(line: 397, column: 528, scope: !11387)
!11391 = !DILocation(line: 397, column: 514, scope: !11387)
!11392 = !DILocation(line: 397, column: 557, scope: !11393)
!11393 = !DILexicalBlockFile(scope: !11394, file: !624, discriminator: 4)
!11394 = distinct !DILexicalBlock(scope: !11388, file: !624, line: 397, column: 542)
!11395 = !DILocation(line: 397, column: 553, scope: !11393)
!11396 = !DILocation(line: 397, column: 569, scope: !11393)
!11397 = !DILocation(line: 397, column: 565, scope: !11393)
!11398 = !DILocation(line: 397, column: 572, scope: !11393)
!11399 = !DILocation(line: 397, column: 564, scope: !11393)
!11400 = !DILocation(line: 397, column: 587, scope: !11401)
!11401 = !DILexicalBlockFile(scope: !11394, file: !624, discriminator: 5)
!11402 = !DILocation(line: 397, column: 583, scope: !11401)
!11403 = !DILocation(line: 397, column: 564, scope: !11401)
!11404 = !DILocation(line: 397, column: 611, scope: !11405)
!11405 = !DILexicalBlockFile(scope: !11394, file: !624, discriminator: 6)
!11406 = !DILocation(line: 397, column: 604, scope: !11405)
!11407 = !DILocation(line: 397, column: 623, scope: !11405)
!11408 = !DILocation(line: 397, column: 616, scope: !11405)
!11409 = !DILocation(line: 397, column: 614, scope: !11405)
!11410 = !DILocation(line: 397, column: 640, scope: !11405)
!11411 = !DILocation(line: 397, column: 636, scope: !11405)
!11412 = !DILocation(line: 397, column: 634, scope: !11405)
!11413 = !DILocation(line: 397, column: 626, scope: !11405)
!11414 = !DILocation(line: 397, column: 600, scope: !11405)
!11415 = !DILocation(line: 397, column: 593, scope: !11405)
!11416 = !DILocation(line: 397, column: 657, scope: !11417)
!11417 = !DILexicalBlockFile(scope: !11394, file: !624, discriminator: 7)
!11418 = !DILocation(line: 397, column: 650, scope: !11417)
!11419 = !DILocation(line: 397, column: 669, scope: !11417)
!11420 = !DILocation(line: 397, column: 662, scope: !11417)
!11421 = !DILocation(line: 397, column: 660, scope: !11417)
!11422 = !DILocation(line: 397, column: 686, scope: !11417)
!11423 = !DILocation(line: 397, column: 682, scope: !11417)
!11424 = !DILocation(line: 397, column: 680, scope: !11417)
!11425 = !DILocation(line: 397, column: 672, scope: !11417)
!11426 = !DILocation(line: 397, column: 593, scope: !11417)
!11427 = !DILocation(line: 397, column: 593, scope: !11428)
!11428 = !DILexicalBlockFile(scope: !11394, file: !624, discriminator: 8)
!11429 = !DILocation(line: 397, column: 593, scope: !11430)
!11430 = !DILexicalBlockFile(scope: !11394, file: !624, discriminator: 9)
!11431 = !DILocation(line: 397, column: 564, scope: !11430)
!11432 = !DILocation(line: 397, column: 564, scope: !11433)
!11433 = !DILexicalBlockFile(scope: !11394, file: !624, discriminator: 10)
!11434 = !DILocation(line: 397, column: 709, scope: !11433)
!11435 = !DILocation(line: 397, column: 705, scope: !11433)
!11436 = !DILocation(line: 397, column: 703, scope: !11433)
!11437 = !DILocation(line: 397, column: 562, scope: !11433)
!11438 = !DILocation(line: 397, column: 715, scope: !11433)
!11439 = !DILocation(line: 397, column: 713, scope: !11433)
!11440 = !DILocation(line: 397, column: 560, scope: !11433)
!11441 = !DILocation(line: 397, column: 553, scope: !11433)
!11442 = !DILocation(line: 397, column: 548, scope: !11433)
!11443 = !DILocation(line: 397, column: 544, scope: !11433)
!11444 = !DILocation(line: 397, column: 551, scope: !11433)
!11445 = !DILocation(line: 397, column: 724, scope: !11433)
!11446 = !DILocation(line: 397, column: 538, scope: !11447)
!11447 = !DILexicalBlockFile(scope: !11388, file: !624, discriminator: 11)
!11448 = !DILocation(line: 397, column: 514, scope: !11447)
!11449 = distinct !{!11449, !11450}
!11450 = !DILocation(line: 397, column: 514, scope: !11384)
!11451 = !DILocation(line: 397, column: 733, scope: !11452)
!11452 = !DILexicalBlockFile(scope: !11384, file: !624, discriminator: 12)
!11453 = !DILocation(line: 397, column: 730, scope: !11452)
!11454 = !DILocation(line: 397, column: 754, scope: !11452)
!11455 = !DILocation(line: 397, column: 751, scope: !11452)
!11456 = !DILocation(line: 397, column: 778, scope: !11452)
!11457 = !DILocation(line: 397, column: 775, scope: !11452)
!11458 = !DILocation(line: 397, column: 795, scope: !11452)
!11459 = !DILocation(line: 397, column: 508, scope: !11460)
!11460 = !DILexicalBlockFile(scope: !11377, file: !624, discriminator: 13)
!11461 = !DILocation(line: 397, column: 483, scope: !11460)
!11462 = distinct !{!11462, !11463}
!11463 = !DILocation(line: 397, column: 483, scope: !11326)
!11464 = !DILocation(line: 397, column: 797, scope: !11465)
!11465 = !DILexicalBlockFile(scope: !11326, file: !624, discriminator: 14)
!11466 = distinct !DISubprogram(name: "blend_hardlight_12bit", scope: !624, file: !624, line: 383, type: !1531, isLocal: true, isDefinition: true, scopeLine: 383, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!11467 = !DILocalVariable(name: "_top", arg: 1, scope: !11466, file: !624, line: 383, type: !900)
!11468 = !DILocation(line: 383, column: 50, scope: !11466)
!11469 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !11466, file: !624, line: 383, type: !902)
!11470 = !DILocation(line: 383, column: 66, scope: !11466)
!11471 = !DILocalVariable(name: "_bottom", arg: 3, scope: !11466, file: !624, line: 383, type: !900)
!11472 = !DILocation(line: 383, column: 95, scope: !11466)
!11473 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !11466, file: !624, line: 383, type: !902)
!11474 = !DILocation(line: 383, column: 114, scope: !11466)
!11475 = !DILocalVariable(name: "_dst", arg: 5, scope: !11466, file: !624, line: 383, type: !329)
!11476 = !DILocation(line: 383, column: 140, scope: !11466)
!11477 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !11466, file: !624, line: 383, type: !902)
!11478 = !DILocation(line: 383, column: 156, scope: !11466)
!11479 = !DILocalVariable(name: "width", arg: 7, scope: !11466, file: !624, line: 383, type: !902)
!11480 = !DILocation(line: 383, column: 180, scope: !11466)
!11481 = !DILocalVariable(name: "height", arg: 8, scope: !11466, file: !624, line: 383, type: !902)
!11482 = !DILocation(line: 383, column: 197, scope: !11466)
!11483 = !DILocalVariable(name: "param", arg: 9, scope: !11466, file: !624, line: 383, type: !884)
!11484 = !DILocation(line: 383, column: 219, scope: !11466)
!11485 = !DILocalVariable(name: "values", arg: 10, scope: !11466, file: !624, line: 383, type: !544)
!11486 = !DILocation(line: 383, column: 234, scope: !11466)
!11487 = !DILocalVariable(name: "starty", arg: 11, scope: !11466, file: !624, line: 383, type: !238)
!11488 = !DILocation(line: 383, column: 246, scope: !11466)
!11489 = !DILocalVariable(name: "top", scope: !11466, file: !624, line: 383, type: !839)
!11490 = !DILocation(line: 383, column: 272, scope: !11466)
!11491 = !DILocation(line: 383, column: 295, scope: !11466)
!11492 = !DILocation(line: 383, column: 278, scope: !11466)
!11493 = !DILocalVariable(name: "bottom", scope: !11466, file: !624, line: 383, type: !839)
!11494 = !DILocation(line: 383, column: 317, scope: !11466)
!11495 = !DILocation(line: 383, column: 343, scope: !11466)
!11496 = !DILocation(line: 383, column: 326, scope: !11466)
!11497 = !DILocalVariable(name: "dst", scope: !11466, file: !624, line: 383, type: !843)
!11498 = !DILocation(line: 383, column: 362, scope: !11466)
!11499 = !DILocation(line: 383, column: 379, scope: !11466)
!11500 = !DILocation(line: 383, column: 368, scope: !11466)
!11501 = !DILocalVariable(name: "opacity", scope: !11466, file: !624, line: 383, type: !248)
!11502 = !DILocation(line: 383, column: 392, scope: !11466)
!11503 = !DILocation(line: 383, column: 402, scope: !11466)
!11504 = !DILocation(line: 383, column: 409, scope: !11466)
!11505 = !DILocalVariable(name: "i", scope: !11466, file: !624, line: 383, type: !238)
!11506 = !DILocation(line: 383, column: 422, scope: !11466)
!11507 = !DILocalVariable(name: "j", scope: !11466, file: !624, line: 383, type: !238)
!11508 = !DILocation(line: 383, column: 425, scope: !11466)
!11509 = !DILocation(line: 383, column: 441, scope: !11466)
!11510 = !DILocation(line: 383, column: 460, scope: !11466)
!11511 = !DILocation(line: 383, column: 482, scope: !11466)
!11512 = !DILocation(line: 383, column: 495, scope: !11513)
!11513 = distinct !DILexicalBlock(scope: !11466, file: !624, line: 383, column: 488)
!11514 = !DILocation(line: 383, column: 493, scope: !11513)
!11515 = !DILocation(line: 383, column: 500, scope: !11516)
!11516 = !DILexicalBlockFile(scope: !11517, file: !624, discriminator: 1)
!11517 = distinct !DILexicalBlock(scope: !11513, file: !624, line: 383, column: 488)
!11518 = !DILocation(line: 383, column: 504, scope: !11516)
!11519 = !DILocation(line: 383, column: 502, scope: !11516)
!11520 = !DILocation(line: 383, column: 488, scope: !11516)
!11521 = !DILocation(line: 383, column: 526, scope: !11522)
!11522 = !DILexicalBlockFile(scope: !11523, file: !624, discriminator: 2)
!11523 = distinct !DILexicalBlock(scope: !11524, file: !624, line: 383, column: 519)
!11524 = distinct !DILexicalBlock(scope: !11517, file: !624, line: 383, column: 517)
!11525 = !DILocation(line: 383, column: 524, scope: !11522)
!11526 = !DILocation(line: 383, column: 531, scope: !11527)
!11527 = !DILexicalBlockFile(scope: !11528, file: !624, discriminator: 3)
!11528 = distinct !DILexicalBlock(scope: !11523, file: !624, line: 383, column: 519)
!11529 = !DILocation(line: 383, column: 535, scope: !11527)
!11530 = !DILocation(line: 383, column: 533, scope: !11527)
!11531 = !DILocation(line: 383, column: 519, scope: !11527)
!11532 = !DILocation(line: 383, column: 562, scope: !11533)
!11533 = !DILexicalBlockFile(scope: !11534, file: !624, discriminator: 4)
!11534 = distinct !DILexicalBlock(scope: !11528, file: !624, line: 383, column: 547)
!11535 = !DILocation(line: 383, column: 558, scope: !11533)
!11536 = !DILocation(line: 383, column: 577, scope: !11533)
!11537 = !DILocation(line: 383, column: 570, scope: !11533)
!11538 = !DILocation(line: 383, column: 580, scope: !11533)
!11539 = !DILocation(line: 383, column: 569, scope: !11533)
!11540 = !DILocation(line: 383, column: 607, scope: !11541)
!11541 = !DILexicalBlockFile(scope: !11534, file: !624, discriminator: 5)
!11542 = !DILocation(line: 383, column: 600, scope: !11541)
!11543 = !DILocation(line: 383, column: 599, scope: !11541)
!11544 = !DILocation(line: 383, column: 618, scope: !11541)
!11545 = !DILocation(line: 383, column: 614, scope: !11541)
!11546 = !DILocation(line: 383, column: 613, scope: !11541)
!11547 = !DILocation(line: 383, column: 611, scope: !11541)
!11548 = !DILocation(line: 383, column: 623, scope: !11541)
!11549 = !DILocation(line: 383, column: 595, scope: !11541)
!11550 = !DILocation(line: 383, column: 569, scope: !11541)
!11551 = !DILocation(line: 383, column: 665, scope: !11552)
!11552 = !DILexicalBlockFile(scope: !11534, file: !624, discriminator: 6)
!11553 = !DILocation(line: 383, column: 658, scope: !11552)
!11554 = !DILocation(line: 383, column: 657, scope: !11552)
!11555 = !DILocation(line: 383, column: 655, scope: !11552)
!11556 = !DILocation(line: 383, column: 685, scope: !11552)
!11557 = !DILocation(line: 383, column: 681, scope: !11552)
!11558 = !DILocation(line: 383, column: 680, scope: !11552)
!11559 = !DILocation(line: 383, column: 678, scope: !11552)
!11560 = !DILocation(line: 383, column: 670, scope: !11552)
!11561 = !DILocation(line: 383, column: 690, scope: !11552)
!11562 = !DILocation(line: 383, column: 646, scope: !11552)
!11563 = !DILocation(line: 383, column: 640, scope: !11552)
!11564 = !DILocation(line: 383, column: 569, scope: !11552)
!11565 = !DILocation(line: 383, column: 569, scope: !11566)
!11566 = !DILexicalBlockFile(scope: !11534, file: !624, discriminator: 7)
!11567 = !DILocation(line: 383, column: 706, scope: !11566)
!11568 = !DILocation(line: 383, column: 702, scope: !11566)
!11569 = !DILocation(line: 383, column: 700, scope: !11566)
!11570 = !DILocation(line: 383, column: 567, scope: !11566)
!11571 = !DILocation(line: 383, column: 712, scope: !11566)
!11572 = !DILocation(line: 383, column: 710, scope: !11566)
!11573 = !DILocation(line: 383, column: 565, scope: !11566)
!11574 = !DILocation(line: 383, column: 558, scope: !11566)
!11575 = !DILocation(line: 383, column: 553, scope: !11566)
!11576 = !DILocation(line: 383, column: 549, scope: !11566)
!11577 = !DILocation(line: 383, column: 556, scope: !11566)
!11578 = !DILocation(line: 383, column: 721, scope: !11566)
!11579 = !DILocation(line: 383, column: 543, scope: !11580)
!11580 = !DILexicalBlockFile(scope: !11528, file: !624, discriminator: 8)
!11581 = !DILocation(line: 383, column: 519, scope: !11580)
!11582 = distinct !{!11582, !11583}
!11583 = !DILocation(line: 383, column: 519, scope: !11524)
!11584 = !DILocation(line: 383, column: 730, scope: !11585)
!11585 = !DILexicalBlockFile(scope: !11524, file: !624, discriminator: 9)
!11586 = !DILocation(line: 383, column: 727, scope: !11585)
!11587 = !DILocation(line: 383, column: 751, scope: !11585)
!11588 = !DILocation(line: 383, column: 748, scope: !11585)
!11589 = !DILocation(line: 383, column: 775, scope: !11585)
!11590 = !DILocation(line: 383, column: 772, scope: !11585)
!11591 = !DILocation(line: 383, column: 792, scope: !11585)
!11592 = !DILocation(line: 383, column: 513, scope: !11593)
!11593 = !DILexicalBlockFile(scope: !11517, file: !624, discriminator: 10)
!11594 = !DILocation(line: 383, column: 488, scope: !11593)
!11595 = distinct !{!11595, !11596}
!11596 = !DILocation(line: 383, column: 488, scope: !11466)
!11597 = !DILocation(line: 383, column: 794, scope: !11598)
!11598 = !DILexicalBlockFile(scope: !11466, file: !624, discriminator: 11)
!11599 = distinct !DISubprogram(name: "blend_hardmix_12bit", scope: !624, file: !624, line: 384, type: !1531, isLocal: true, isDefinition: true, scopeLine: 384, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!11600 = !DILocalVariable(name: "_top", arg: 1, scope: !11599, file: !624, line: 384, type: !900)
!11601 = !DILocation(line: 384, column: 48, scope: !11599)
!11602 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !11599, file: !624, line: 384, type: !902)
!11603 = !DILocation(line: 384, column: 64, scope: !11599)
!11604 = !DILocalVariable(name: "_bottom", arg: 3, scope: !11599, file: !624, line: 384, type: !900)
!11605 = !DILocation(line: 384, column: 93, scope: !11599)
!11606 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !11599, file: !624, line: 384, type: !902)
!11607 = !DILocation(line: 384, column: 112, scope: !11599)
!11608 = !DILocalVariable(name: "_dst", arg: 5, scope: !11599, file: !624, line: 384, type: !329)
!11609 = !DILocation(line: 384, column: 138, scope: !11599)
!11610 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !11599, file: !624, line: 384, type: !902)
!11611 = !DILocation(line: 384, column: 154, scope: !11599)
!11612 = !DILocalVariable(name: "width", arg: 7, scope: !11599, file: !624, line: 384, type: !902)
!11613 = !DILocation(line: 384, column: 178, scope: !11599)
!11614 = !DILocalVariable(name: "height", arg: 8, scope: !11599, file: !624, line: 384, type: !902)
!11615 = !DILocation(line: 384, column: 195, scope: !11599)
!11616 = !DILocalVariable(name: "param", arg: 9, scope: !11599, file: !624, line: 384, type: !884)
!11617 = !DILocation(line: 384, column: 217, scope: !11599)
!11618 = !DILocalVariable(name: "values", arg: 10, scope: !11599, file: !624, line: 384, type: !544)
!11619 = !DILocation(line: 384, column: 232, scope: !11599)
!11620 = !DILocalVariable(name: "starty", arg: 11, scope: !11599, file: !624, line: 384, type: !238)
!11621 = !DILocation(line: 384, column: 244, scope: !11599)
!11622 = !DILocalVariable(name: "top", scope: !11599, file: !624, line: 384, type: !839)
!11623 = !DILocation(line: 384, column: 270, scope: !11599)
!11624 = !DILocation(line: 384, column: 293, scope: !11599)
!11625 = !DILocation(line: 384, column: 276, scope: !11599)
!11626 = !DILocalVariable(name: "bottom", scope: !11599, file: !624, line: 384, type: !839)
!11627 = !DILocation(line: 384, column: 315, scope: !11599)
!11628 = !DILocation(line: 384, column: 341, scope: !11599)
!11629 = !DILocation(line: 384, column: 324, scope: !11599)
!11630 = !DILocalVariable(name: "dst", scope: !11599, file: !624, line: 384, type: !843)
!11631 = !DILocation(line: 384, column: 360, scope: !11599)
!11632 = !DILocation(line: 384, column: 377, scope: !11599)
!11633 = !DILocation(line: 384, column: 366, scope: !11599)
!11634 = !DILocalVariable(name: "opacity", scope: !11599, file: !624, line: 384, type: !248)
!11635 = !DILocation(line: 384, column: 390, scope: !11599)
!11636 = !DILocation(line: 384, column: 400, scope: !11599)
!11637 = !DILocation(line: 384, column: 407, scope: !11599)
!11638 = !DILocalVariable(name: "i", scope: !11599, file: !624, line: 384, type: !238)
!11639 = !DILocation(line: 384, column: 420, scope: !11599)
!11640 = !DILocalVariable(name: "j", scope: !11599, file: !624, line: 384, type: !238)
!11641 = !DILocation(line: 384, column: 423, scope: !11599)
!11642 = !DILocation(line: 384, column: 439, scope: !11599)
!11643 = !DILocation(line: 384, column: 458, scope: !11599)
!11644 = !DILocation(line: 384, column: 480, scope: !11599)
!11645 = !DILocation(line: 384, column: 493, scope: !11646)
!11646 = distinct !DILexicalBlock(scope: !11599, file: !624, line: 384, column: 486)
!11647 = !DILocation(line: 384, column: 491, scope: !11646)
!11648 = !DILocation(line: 384, column: 498, scope: !11649)
!11649 = !DILexicalBlockFile(scope: !11650, file: !624, discriminator: 1)
!11650 = distinct !DILexicalBlock(scope: !11646, file: !624, line: 384, column: 486)
!11651 = !DILocation(line: 384, column: 502, scope: !11649)
!11652 = !DILocation(line: 384, column: 500, scope: !11649)
!11653 = !DILocation(line: 384, column: 486, scope: !11649)
!11654 = !DILocation(line: 384, column: 524, scope: !11655)
!11655 = !DILexicalBlockFile(scope: !11656, file: !624, discriminator: 2)
!11656 = distinct !DILexicalBlock(scope: !11657, file: !624, line: 384, column: 517)
!11657 = distinct !DILexicalBlock(scope: !11650, file: !624, line: 384, column: 515)
!11658 = !DILocation(line: 384, column: 522, scope: !11655)
!11659 = !DILocation(line: 384, column: 529, scope: !11660)
!11660 = !DILexicalBlockFile(scope: !11661, file: !624, discriminator: 3)
!11661 = distinct !DILexicalBlock(scope: !11656, file: !624, line: 384, column: 517)
!11662 = !DILocation(line: 384, column: 533, scope: !11660)
!11663 = !DILocation(line: 384, column: 531, scope: !11660)
!11664 = !DILocation(line: 384, column: 517, scope: !11660)
!11665 = !DILocation(line: 384, column: 560, scope: !11666)
!11666 = !DILexicalBlockFile(scope: !11667, file: !624, discriminator: 4)
!11667 = distinct !DILexicalBlock(scope: !11661, file: !624, line: 384, column: 545)
!11668 = !DILocation(line: 384, column: 556, scope: !11666)
!11669 = !DILocation(line: 384, column: 572, scope: !11666)
!11670 = !DILocation(line: 384, column: 568, scope: !11666)
!11671 = !DILocation(line: 384, column: 592, scope: !11666)
!11672 = !DILocation(line: 384, column: 585, scope: !11666)
!11673 = !DILocation(line: 384, column: 583, scope: !11666)
!11674 = !DILocation(line: 384, column: 575, scope: !11666)
!11675 = !DILocation(line: 384, column: 567, scope: !11666)
!11676 = !DILocation(line: 384, column: 614, scope: !11666)
!11677 = !DILocation(line: 384, column: 610, scope: !11666)
!11678 = !DILocation(line: 384, column: 608, scope: !11666)
!11679 = !DILocation(line: 384, column: 565, scope: !11666)
!11680 = !DILocation(line: 384, column: 620, scope: !11666)
!11681 = !DILocation(line: 384, column: 618, scope: !11666)
!11682 = !DILocation(line: 384, column: 563, scope: !11666)
!11683 = !DILocation(line: 384, column: 551, scope: !11666)
!11684 = !DILocation(line: 384, column: 547, scope: !11666)
!11685 = !DILocation(line: 384, column: 554, scope: !11666)
!11686 = !DILocation(line: 384, column: 629, scope: !11666)
!11687 = !DILocation(line: 384, column: 541, scope: !11688)
!11688 = !DILexicalBlockFile(scope: !11661, file: !624, discriminator: 5)
!11689 = !DILocation(line: 384, column: 517, scope: !11688)
!11690 = distinct !{!11690, !11691}
!11691 = !DILocation(line: 384, column: 517, scope: !11657)
!11692 = !DILocation(line: 384, column: 638, scope: !11693)
!11693 = !DILexicalBlockFile(scope: !11657, file: !624, discriminator: 6)
!11694 = !DILocation(line: 384, column: 635, scope: !11693)
!11695 = !DILocation(line: 384, column: 659, scope: !11693)
!11696 = !DILocation(line: 384, column: 656, scope: !11693)
!11697 = !DILocation(line: 384, column: 683, scope: !11693)
!11698 = !DILocation(line: 384, column: 680, scope: !11693)
!11699 = !DILocation(line: 384, column: 700, scope: !11693)
!11700 = !DILocation(line: 384, column: 511, scope: !11701)
!11701 = !DILexicalBlockFile(scope: !11650, file: !624, discriminator: 7)
!11702 = !DILocation(line: 384, column: 486, scope: !11701)
!11703 = distinct !{!11703, !11704}
!11704 = !DILocation(line: 384, column: 486, scope: !11599)
!11705 = !DILocation(line: 384, column: 702, scope: !11706)
!11706 = !DILexicalBlockFile(scope: !11599, file: !624, discriminator: 8)
!11707 = distinct !DISubprogram(name: "blend_heat_12bit", scope: !624, file: !624, line: 385, type: !1531, isLocal: true, isDefinition: true, scopeLine: 385, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!11708 = !DILocalVariable(name: "_top", arg: 1, scope: !11707, file: !624, line: 385, type: !900)
!11709 = !DILocation(line: 385, column: 45, scope: !11707)
!11710 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !11707, file: !624, line: 385, type: !902)
!11711 = !DILocation(line: 385, column: 61, scope: !11707)
!11712 = !DILocalVariable(name: "_bottom", arg: 3, scope: !11707, file: !624, line: 385, type: !900)
!11713 = !DILocation(line: 385, column: 90, scope: !11707)
!11714 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !11707, file: !624, line: 385, type: !902)
!11715 = !DILocation(line: 385, column: 109, scope: !11707)
!11716 = !DILocalVariable(name: "_dst", arg: 5, scope: !11707, file: !624, line: 385, type: !329)
!11717 = !DILocation(line: 385, column: 135, scope: !11707)
!11718 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !11707, file: !624, line: 385, type: !902)
!11719 = !DILocation(line: 385, column: 151, scope: !11707)
!11720 = !DILocalVariable(name: "width", arg: 7, scope: !11707, file: !624, line: 385, type: !902)
!11721 = !DILocation(line: 385, column: 175, scope: !11707)
!11722 = !DILocalVariable(name: "height", arg: 8, scope: !11707, file: !624, line: 385, type: !902)
!11723 = !DILocation(line: 385, column: 192, scope: !11707)
!11724 = !DILocalVariable(name: "param", arg: 9, scope: !11707, file: !624, line: 385, type: !884)
!11725 = !DILocation(line: 385, column: 214, scope: !11707)
!11726 = !DILocalVariable(name: "values", arg: 10, scope: !11707, file: !624, line: 385, type: !544)
!11727 = !DILocation(line: 385, column: 229, scope: !11707)
!11728 = !DILocalVariable(name: "starty", arg: 11, scope: !11707, file: !624, line: 385, type: !238)
!11729 = !DILocation(line: 385, column: 241, scope: !11707)
!11730 = !DILocalVariable(name: "top", scope: !11707, file: !624, line: 385, type: !839)
!11731 = !DILocation(line: 385, column: 267, scope: !11707)
!11732 = !DILocation(line: 385, column: 290, scope: !11707)
!11733 = !DILocation(line: 385, column: 273, scope: !11707)
!11734 = !DILocalVariable(name: "bottom", scope: !11707, file: !624, line: 385, type: !839)
!11735 = !DILocation(line: 385, column: 312, scope: !11707)
!11736 = !DILocation(line: 385, column: 338, scope: !11707)
!11737 = !DILocation(line: 385, column: 321, scope: !11707)
!11738 = !DILocalVariable(name: "dst", scope: !11707, file: !624, line: 385, type: !843)
!11739 = !DILocation(line: 385, column: 357, scope: !11707)
!11740 = !DILocation(line: 385, column: 374, scope: !11707)
!11741 = !DILocation(line: 385, column: 363, scope: !11707)
!11742 = !DILocalVariable(name: "opacity", scope: !11707, file: !624, line: 385, type: !248)
!11743 = !DILocation(line: 385, column: 387, scope: !11707)
!11744 = !DILocation(line: 385, column: 397, scope: !11707)
!11745 = !DILocation(line: 385, column: 404, scope: !11707)
!11746 = !DILocalVariable(name: "i", scope: !11707, file: !624, line: 385, type: !238)
!11747 = !DILocation(line: 385, column: 417, scope: !11707)
!11748 = !DILocalVariable(name: "j", scope: !11707, file: !624, line: 385, type: !238)
!11749 = !DILocation(line: 385, column: 420, scope: !11707)
!11750 = !DILocation(line: 385, column: 436, scope: !11707)
!11751 = !DILocation(line: 385, column: 455, scope: !11707)
!11752 = !DILocation(line: 385, column: 477, scope: !11707)
!11753 = !DILocation(line: 385, column: 490, scope: !11754)
!11754 = distinct !DILexicalBlock(scope: !11707, file: !624, line: 385, column: 483)
!11755 = !DILocation(line: 385, column: 488, scope: !11754)
!11756 = !DILocation(line: 385, column: 495, scope: !11757)
!11757 = !DILexicalBlockFile(scope: !11758, file: !624, discriminator: 1)
!11758 = distinct !DILexicalBlock(scope: !11754, file: !624, line: 385, column: 483)
!11759 = !DILocation(line: 385, column: 499, scope: !11757)
!11760 = !DILocation(line: 385, column: 497, scope: !11757)
!11761 = !DILocation(line: 385, column: 483, scope: !11757)
!11762 = !DILocation(line: 385, column: 521, scope: !11763)
!11763 = !DILexicalBlockFile(scope: !11764, file: !624, discriminator: 2)
!11764 = distinct !DILexicalBlock(scope: !11765, file: !624, line: 385, column: 514)
!11765 = distinct !DILexicalBlock(scope: !11758, file: !624, line: 385, column: 512)
!11766 = !DILocation(line: 385, column: 519, scope: !11763)
!11767 = !DILocation(line: 385, column: 526, scope: !11768)
!11768 = !DILexicalBlockFile(scope: !11769, file: !624, discriminator: 3)
!11769 = distinct !DILexicalBlock(scope: !11764, file: !624, line: 385, column: 514)
!11770 = !DILocation(line: 385, column: 530, scope: !11768)
!11771 = !DILocation(line: 385, column: 528, scope: !11768)
!11772 = !DILocation(line: 385, column: 514, scope: !11768)
!11773 = !DILocation(line: 385, column: 557, scope: !11774)
!11774 = !DILexicalBlockFile(scope: !11775, file: !624, discriminator: 4)
!11775 = distinct !DILexicalBlock(scope: !11769, file: !624, line: 385, column: 542)
!11776 = !DILocation(line: 385, column: 553, scope: !11774)
!11777 = !DILocation(line: 385, column: 569, scope: !11774)
!11778 = !DILocation(line: 385, column: 565, scope: !11774)
!11779 = !DILocation(line: 385, column: 572, scope: !11774)
!11780 = !DILocation(line: 385, column: 564, scope: !11774)
!11781 = !DILocation(line: 385, column: 564, scope: !11782)
!11782 = !DILexicalBlockFile(scope: !11775, file: !624, discriminator: 5)
!11783 = !DILocation(line: 385, column: 609, scope: !11784)
!11784 = !DILexicalBlockFile(scope: !11775, file: !624, discriminator: 6)
!11785 = !DILocation(line: 385, column: 602, scope: !11784)
!11786 = !DILocation(line: 385, column: 600, scope: !11784)
!11787 = !DILocation(line: 385, column: 630, scope: !11784)
!11788 = !DILocation(line: 385, column: 623, scope: !11784)
!11789 = !DILocation(line: 385, column: 621, scope: !11784)
!11790 = !DILocation(line: 385, column: 613, scope: !11784)
!11791 = !DILocation(line: 385, column: 641, scope: !11784)
!11792 = !DILocation(line: 385, column: 637, scope: !11784)
!11793 = !DILocation(line: 385, column: 635, scope: !11784)
!11794 = !DILocation(line: 385, column: 645, scope: !11784)
!11795 = !DILocation(line: 385, column: 592, scope: !11784)
!11796 = !DILocation(line: 385, column: 592, scope: !11797)
!11797 = !DILexicalBlockFile(scope: !11775, file: !624, discriminator: 7)
!11798 = !DILocation(line: 385, column: 682, scope: !11799)
!11799 = !DILexicalBlockFile(scope: !11775, file: !624, discriminator: 8)
!11800 = !DILocation(line: 385, column: 675, scope: !11799)
!11801 = !DILocation(line: 385, column: 673, scope: !11799)
!11802 = !DILocation(line: 385, column: 703, scope: !11799)
!11803 = !DILocation(line: 385, column: 696, scope: !11799)
!11804 = !DILocation(line: 385, column: 694, scope: !11799)
!11805 = !DILocation(line: 385, column: 686, scope: !11799)
!11806 = !DILocation(line: 385, column: 714, scope: !11799)
!11807 = !DILocation(line: 385, column: 710, scope: !11799)
!11808 = !DILocation(line: 385, column: 708, scope: !11799)
!11809 = !DILocation(line: 385, column: 592, scope: !11799)
!11810 = !DILocation(line: 385, column: 592, scope: !11811)
!11811 = !DILexicalBlockFile(scope: !11775, file: !624, discriminator: 9)
!11812 = !DILocation(line: 385, column: 589, scope: !11811)
!11813 = !DILocation(line: 385, column: 564, scope: !11811)
!11814 = !DILocation(line: 385, column: 564, scope: !11815)
!11815 = !DILexicalBlockFile(scope: !11775, file: !624, discriminator: 10)
!11816 = !DILocation(line: 385, column: 726, scope: !11815)
!11817 = !DILocation(line: 385, column: 722, scope: !11815)
!11818 = !DILocation(line: 385, column: 720, scope: !11815)
!11819 = !DILocation(line: 385, column: 562, scope: !11815)
!11820 = !DILocation(line: 385, column: 732, scope: !11815)
!11821 = !DILocation(line: 385, column: 730, scope: !11815)
!11822 = !DILocation(line: 385, column: 560, scope: !11815)
!11823 = !DILocation(line: 385, column: 553, scope: !11815)
!11824 = !DILocation(line: 385, column: 548, scope: !11815)
!11825 = !DILocation(line: 385, column: 544, scope: !11815)
!11826 = !DILocation(line: 385, column: 551, scope: !11815)
!11827 = !DILocation(line: 385, column: 741, scope: !11815)
!11828 = !DILocation(line: 385, column: 538, scope: !11829)
!11829 = !DILexicalBlockFile(scope: !11769, file: !624, discriminator: 11)
!11830 = !DILocation(line: 385, column: 514, scope: !11829)
!11831 = distinct !{!11831, !11832}
!11832 = !DILocation(line: 385, column: 514, scope: !11765)
!11833 = !DILocation(line: 385, column: 750, scope: !11834)
!11834 = !DILexicalBlockFile(scope: !11765, file: !624, discriminator: 12)
!11835 = !DILocation(line: 385, column: 747, scope: !11834)
!11836 = !DILocation(line: 385, column: 771, scope: !11834)
!11837 = !DILocation(line: 385, column: 768, scope: !11834)
!11838 = !DILocation(line: 385, column: 795, scope: !11834)
!11839 = !DILocation(line: 385, column: 792, scope: !11834)
!11840 = !DILocation(line: 385, column: 812, scope: !11834)
!11841 = !DILocation(line: 385, column: 508, scope: !11842)
!11842 = !DILexicalBlockFile(scope: !11758, file: !624, discriminator: 13)
!11843 = !DILocation(line: 385, column: 483, scope: !11842)
!11844 = distinct !{!11844, !11845}
!11845 = !DILocation(line: 385, column: 483, scope: !11707)
!11846 = !DILocation(line: 385, column: 814, scope: !11847)
!11847 = !DILexicalBlockFile(scope: !11707, file: !624, discriminator: 14)
!11848 = distinct !DISubprogram(name: "blend_lighten_12bit", scope: !624, file: !624, line: 388, type: !1531, isLocal: true, isDefinition: true, scopeLine: 388, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!11849 = !DILocalVariable(name: "_top", arg: 1, scope: !11848, file: !624, line: 388, type: !900)
!11850 = !DILocation(line: 388, column: 48, scope: !11848)
!11851 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !11848, file: !624, line: 388, type: !902)
!11852 = !DILocation(line: 388, column: 64, scope: !11848)
!11853 = !DILocalVariable(name: "_bottom", arg: 3, scope: !11848, file: !624, line: 388, type: !900)
!11854 = !DILocation(line: 388, column: 93, scope: !11848)
!11855 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !11848, file: !624, line: 388, type: !902)
!11856 = !DILocation(line: 388, column: 112, scope: !11848)
!11857 = !DILocalVariable(name: "_dst", arg: 5, scope: !11848, file: !624, line: 388, type: !329)
!11858 = !DILocation(line: 388, column: 138, scope: !11848)
!11859 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !11848, file: !624, line: 388, type: !902)
!11860 = !DILocation(line: 388, column: 154, scope: !11848)
!11861 = !DILocalVariable(name: "width", arg: 7, scope: !11848, file: !624, line: 388, type: !902)
!11862 = !DILocation(line: 388, column: 178, scope: !11848)
!11863 = !DILocalVariable(name: "height", arg: 8, scope: !11848, file: !624, line: 388, type: !902)
!11864 = !DILocation(line: 388, column: 195, scope: !11848)
!11865 = !DILocalVariable(name: "param", arg: 9, scope: !11848, file: !624, line: 388, type: !884)
!11866 = !DILocation(line: 388, column: 217, scope: !11848)
!11867 = !DILocalVariable(name: "values", arg: 10, scope: !11848, file: !624, line: 388, type: !544)
!11868 = !DILocation(line: 388, column: 232, scope: !11848)
!11869 = !DILocalVariable(name: "starty", arg: 11, scope: !11848, file: !624, line: 388, type: !238)
!11870 = !DILocation(line: 388, column: 244, scope: !11848)
!11871 = !DILocalVariable(name: "top", scope: !11848, file: !624, line: 388, type: !839)
!11872 = !DILocation(line: 388, column: 270, scope: !11848)
!11873 = !DILocation(line: 388, column: 293, scope: !11848)
!11874 = !DILocation(line: 388, column: 276, scope: !11848)
!11875 = !DILocalVariable(name: "bottom", scope: !11848, file: !624, line: 388, type: !839)
!11876 = !DILocation(line: 388, column: 315, scope: !11848)
!11877 = !DILocation(line: 388, column: 341, scope: !11848)
!11878 = !DILocation(line: 388, column: 324, scope: !11848)
!11879 = !DILocalVariable(name: "dst", scope: !11848, file: !624, line: 388, type: !843)
!11880 = !DILocation(line: 388, column: 360, scope: !11848)
!11881 = !DILocation(line: 388, column: 377, scope: !11848)
!11882 = !DILocation(line: 388, column: 366, scope: !11848)
!11883 = !DILocalVariable(name: "opacity", scope: !11848, file: !624, line: 388, type: !248)
!11884 = !DILocation(line: 388, column: 390, scope: !11848)
!11885 = !DILocation(line: 388, column: 400, scope: !11848)
!11886 = !DILocation(line: 388, column: 407, scope: !11848)
!11887 = !DILocalVariable(name: "i", scope: !11848, file: !624, line: 388, type: !238)
!11888 = !DILocation(line: 388, column: 420, scope: !11848)
!11889 = !DILocalVariable(name: "j", scope: !11848, file: !624, line: 388, type: !238)
!11890 = !DILocation(line: 388, column: 423, scope: !11848)
!11891 = !DILocation(line: 388, column: 439, scope: !11848)
!11892 = !DILocation(line: 388, column: 458, scope: !11848)
!11893 = !DILocation(line: 388, column: 480, scope: !11848)
!11894 = !DILocation(line: 388, column: 493, scope: !11895)
!11895 = distinct !DILexicalBlock(scope: !11848, file: !624, line: 388, column: 486)
!11896 = !DILocation(line: 388, column: 491, scope: !11895)
!11897 = !DILocation(line: 388, column: 498, scope: !11898)
!11898 = !DILexicalBlockFile(scope: !11899, file: !624, discriminator: 1)
!11899 = distinct !DILexicalBlock(scope: !11895, file: !624, line: 388, column: 486)
!11900 = !DILocation(line: 388, column: 502, scope: !11898)
!11901 = !DILocation(line: 388, column: 500, scope: !11898)
!11902 = !DILocation(line: 388, column: 486, scope: !11898)
!11903 = !DILocation(line: 388, column: 524, scope: !11904)
!11904 = !DILexicalBlockFile(scope: !11905, file: !624, discriminator: 2)
!11905 = distinct !DILexicalBlock(scope: !11906, file: !624, line: 388, column: 517)
!11906 = distinct !DILexicalBlock(scope: !11899, file: !624, line: 388, column: 515)
!11907 = !DILocation(line: 388, column: 522, scope: !11904)
!11908 = !DILocation(line: 388, column: 529, scope: !11909)
!11909 = !DILexicalBlockFile(scope: !11910, file: !624, discriminator: 3)
!11910 = distinct !DILexicalBlock(scope: !11905, file: !624, line: 388, column: 517)
!11911 = !DILocation(line: 388, column: 533, scope: !11909)
!11912 = !DILocation(line: 388, column: 531, scope: !11909)
!11913 = !DILocation(line: 388, column: 517, scope: !11909)
!11914 = !DILocation(line: 388, column: 560, scope: !11915)
!11915 = !DILexicalBlockFile(scope: !11916, file: !624, discriminator: 4)
!11916 = distinct !DILexicalBlock(scope: !11910, file: !624, line: 388, column: 545)
!11917 = !DILocation(line: 388, column: 556, scope: !11915)
!11918 = !DILocation(line: 388, column: 573, scope: !11915)
!11919 = !DILocation(line: 388, column: 569, scope: !11915)
!11920 = !DILocation(line: 388, column: 568, scope: !11915)
!11921 = !DILocation(line: 388, column: 587, scope: !11915)
!11922 = !DILocation(line: 388, column: 580, scope: !11915)
!11923 = !DILocation(line: 388, column: 579, scope: !11915)
!11924 = !DILocation(line: 388, column: 577, scope: !11915)
!11925 = !DILocation(line: 388, column: 598, scope: !11926)
!11926 = !DILexicalBlockFile(scope: !11916, file: !624, discriminator: 5)
!11927 = !DILocation(line: 388, column: 594, scope: !11926)
!11928 = !DILocation(line: 388, column: 593, scope: !11926)
!11929 = !DILocation(line: 388, column: 568, scope: !11926)
!11930 = !DILocation(line: 388, column: 612, scope: !11931)
!11931 = !DILexicalBlockFile(scope: !11916, file: !624, discriminator: 6)
!11932 = !DILocation(line: 388, column: 605, scope: !11931)
!11933 = !DILocation(line: 388, column: 604, scope: !11931)
!11934 = !DILocation(line: 388, column: 568, scope: !11931)
!11935 = !DILocation(line: 388, column: 568, scope: !11936)
!11936 = !DILexicalBlockFile(scope: !11916, file: !624, discriminator: 7)
!11937 = !DILocation(line: 388, column: 624, scope: !11936)
!11938 = !DILocation(line: 388, column: 620, scope: !11936)
!11939 = !DILocation(line: 388, column: 618, scope: !11936)
!11940 = !DILocation(line: 388, column: 565, scope: !11936)
!11941 = !DILocation(line: 388, column: 630, scope: !11936)
!11942 = !DILocation(line: 388, column: 628, scope: !11936)
!11943 = !DILocation(line: 388, column: 563, scope: !11936)
!11944 = !DILocation(line: 388, column: 556, scope: !11936)
!11945 = !DILocation(line: 388, column: 551, scope: !11936)
!11946 = !DILocation(line: 388, column: 547, scope: !11936)
!11947 = !DILocation(line: 388, column: 554, scope: !11936)
!11948 = !DILocation(line: 388, column: 639, scope: !11936)
!11949 = !DILocation(line: 388, column: 541, scope: !11950)
!11950 = !DILexicalBlockFile(scope: !11910, file: !624, discriminator: 8)
!11951 = !DILocation(line: 388, column: 517, scope: !11950)
!11952 = distinct !{!11952, !11953}
!11953 = !DILocation(line: 388, column: 517, scope: !11906)
!11954 = !DILocation(line: 388, column: 648, scope: !11955)
!11955 = !DILexicalBlockFile(scope: !11906, file: !624, discriminator: 9)
!11956 = !DILocation(line: 388, column: 645, scope: !11955)
!11957 = !DILocation(line: 388, column: 669, scope: !11955)
!11958 = !DILocation(line: 388, column: 666, scope: !11955)
!11959 = !DILocation(line: 388, column: 693, scope: !11955)
!11960 = !DILocation(line: 388, column: 690, scope: !11955)
!11961 = !DILocation(line: 388, column: 710, scope: !11955)
!11962 = !DILocation(line: 388, column: 511, scope: !11963)
!11963 = !DILexicalBlockFile(scope: !11899, file: !624, discriminator: 10)
!11964 = !DILocation(line: 388, column: 486, scope: !11963)
!11965 = distinct !{!11965, !11966}
!11966 = !DILocation(line: 388, column: 486, scope: !11848)
!11967 = !DILocation(line: 388, column: 712, scope: !11968)
!11968 = !DILexicalBlockFile(scope: !11848, file: !624, discriminator: 11)
!11969 = distinct !DISubprogram(name: "blend_linearlight_12bit", scope: !624, file: !624, line: 402, type: !1531, isLocal: true, isDefinition: true, scopeLine: 402, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!11970 = !DILocation(line: 229, column: 99, scope: !5463, inlinedAt: !11971)
!11971 = distinct !DILocation(line: 402, column: 576, scope: !11972)
!11972 = !DILexicalBlockFile(scope: !11973, file: !624, discriminator: 7)
!11973 = distinct !DILexicalBlock(scope: !11974, file: !624, line: 402, column: 549)
!11974 = distinct !DILexicalBlock(scope: !11975, file: !624, line: 402, column: 521)
!11975 = distinct !DILexicalBlock(scope: !11976, file: !624, line: 402, column: 521)
!11976 = distinct !DILexicalBlock(scope: !11977, file: !624, line: 402, column: 519)
!11977 = distinct !DILexicalBlock(scope: !11978, file: !624, line: 402, column: 490)
!11978 = distinct !DILexicalBlock(scope: !11969, file: !624, line: 402, column: 490)
!11979 = !DILocation(line: 229, column: 106, scope: !5463, inlinedAt: !11971)
!11980 = !DILocalVariable(name: "_top", arg: 1, scope: !11969, file: !624, line: 402, type: !900)
!11981 = !DILocation(line: 402, column: 52, scope: !11969)
!11982 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !11969, file: !624, line: 402, type: !902)
!11983 = !DILocation(line: 402, column: 68, scope: !11969)
!11984 = !DILocalVariable(name: "_bottom", arg: 3, scope: !11969, file: !624, line: 402, type: !900)
!11985 = !DILocation(line: 402, column: 97, scope: !11969)
!11986 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !11969, file: !624, line: 402, type: !902)
!11987 = !DILocation(line: 402, column: 116, scope: !11969)
!11988 = !DILocalVariable(name: "_dst", arg: 5, scope: !11969, file: !624, line: 402, type: !329)
!11989 = !DILocation(line: 402, column: 142, scope: !11969)
!11990 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !11969, file: !624, line: 402, type: !902)
!11991 = !DILocation(line: 402, column: 158, scope: !11969)
!11992 = !DILocalVariable(name: "width", arg: 7, scope: !11969, file: !624, line: 402, type: !902)
!11993 = !DILocation(line: 402, column: 182, scope: !11969)
!11994 = !DILocalVariable(name: "height", arg: 8, scope: !11969, file: !624, line: 402, type: !902)
!11995 = !DILocation(line: 402, column: 199, scope: !11969)
!11996 = !DILocalVariable(name: "param", arg: 9, scope: !11969, file: !624, line: 402, type: !884)
!11997 = !DILocation(line: 402, column: 221, scope: !11969)
!11998 = !DILocalVariable(name: "values", arg: 10, scope: !11969, file: !624, line: 402, type: !544)
!11999 = !DILocation(line: 402, column: 236, scope: !11969)
!12000 = !DILocalVariable(name: "starty", arg: 11, scope: !11969, file: !624, line: 402, type: !238)
!12001 = !DILocation(line: 402, column: 248, scope: !11969)
!12002 = !DILocalVariable(name: "top", scope: !11969, file: !624, line: 402, type: !839)
!12003 = !DILocation(line: 402, column: 274, scope: !11969)
!12004 = !DILocation(line: 402, column: 297, scope: !11969)
!12005 = !DILocation(line: 402, column: 280, scope: !11969)
!12006 = !DILocalVariable(name: "bottom", scope: !11969, file: !624, line: 402, type: !839)
!12007 = !DILocation(line: 402, column: 319, scope: !11969)
!12008 = !DILocation(line: 402, column: 345, scope: !11969)
!12009 = !DILocation(line: 402, column: 328, scope: !11969)
!12010 = !DILocalVariable(name: "dst", scope: !11969, file: !624, line: 402, type: !843)
!12011 = !DILocation(line: 402, column: 364, scope: !11969)
!12012 = !DILocation(line: 402, column: 381, scope: !11969)
!12013 = !DILocation(line: 402, column: 370, scope: !11969)
!12014 = !DILocalVariable(name: "opacity", scope: !11969, file: !624, line: 402, type: !248)
!12015 = !DILocation(line: 402, column: 394, scope: !11969)
!12016 = !DILocation(line: 402, column: 404, scope: !11969)
!12017 = !DILocation(line: 402, column: 411, scope: !11969)
!12018 = !DILocalVariable(name: "i", scope: !11969, file: !624, line: 402, type: !238)
!12019 = !DILocation(line: 402, column: 424, scope: !11969)
!12020 = !DILocalVariable(name: "j", scope: !11969, file: !624, line: 402, type: !238)
!12021 = !DILocation(line: 402, column: 427, scope: !11969)
!12022 = !DILocation(line: 402, column: 443, scope: !11969)
!12023 = !DILocation(line: 402, column: 462, scope: !11969)
!12024 = !DILocation(line: 402, column: 484, scope: !11969)
!12025 = !DILocation(line: 402, column: 497, scope: !11978)
!12026 = !DILocation(line: 402, column: 495, scope: !11978)
!12027 = !DILocation(line: 402, column: 502, scope: !12028)
!12028 = !DILexicalBlockFile(scope: !11977, file: !624, discriminator: 1)
!12029 = !DILocation(line: 402, column: 506, scope: !12028)
!12030 = !DILocation(line: 402, column: 504, scope: !12028)
!12031 = !DILocation(line: 402, column: 490, scope: !12028)
!12032 = !DILocation(line: 402, column: 528, scope: !12033)
!12033 = !DILexicalBlockFile(scope: !11975, file: !624, discriminator: 2)
!12034 = !DILocation(line: 402, column: 526, scope: !12033)
!12035 = !DILocation(line: 402, column: 533, scope: !12036)
!12036 = !DILexicalBlockFile(scope: !11974, file: !624, discriminator: 3)
!12037 = !DILocation(line: 402, column: 537, scope: !12036)
!12038 = !DILocation(line: 402, column: 535, scope: !12036)
!12039 = !DILocation(line: 402, column: 521, scope: !12036)
!12040 = !DILocation(line: 402, column: 564, scope: !12041)
!12041 = !DILexicalBlockFile(scope: !11973, file: !624, discriminator: 4)
!12042 = !DILocation(line: 402, column: 560, scope: !12041)
!12043 = !DILocation(line: 402, column: 601, scope: !12041)
!12044 = !DILocation(line: 402, column: 594, scope: !12041)
!12045 = !DILocation(line: 402, column: 604, scope: !12041)
!12046 = !DILocation(line: 402, column: 593, scope: !12041)
!12047 = !DILocation(line: 402, column: 621, scope: !12048)
!12048 = !DILexicalBlockFile(scope: !11973, file: !624, discriminator: 5)
!12049 = !DILocation(line: 402, column: 614, scope: !12048)
!12050 = !DILocation(line: 402, column: 634, scope: !12048)
!12051 = !DILocation(line: 402, column: 630, scope: !12048)
!12052 = !DILocation(line: 402, column: 628, scope: !12048)
!12053 = !DILocation(line: 402, column: 624, scope: !12048)
!12054 = !DILocation(line: 402, column: 637, scope: !12048)
!12055 = !DILocation(line: 402, column: 593, scope: !12048)
!12056 = !DILocation(line: 402, column: 653, scope: !12057)
!12057 = !DILexicalBlockFile(scope: !11973, file: !624, discriminator: 6)
!12058 = !DILocation(line: 402, column: 646, scope: !12057)
!12059 = !DILocation(line: 402, column: 667, scope: !12057)
!12060 = !DILocation(line: 402, column: 663, scope: !12057)
!12061 = !DILocation(line: 402, column: 670, scope: !12057)
!12062 = !DILocation(line: 402, column: 660, scope: !12057)
!12063 = !DILocation(line: 402, column: 656, scope: !12057)
!12064 = !DILocation(line: 402, column: 593, scope: !12057)
!12065 = !DILocation(line: 402, column: 593, scope: !11972)
!12066 = !DILocation(line: 402, column: 576, scope: !11972)
!12067 = !DILocation(line: 231, column: 9, scope: !5547, inlinedAt: !11971)
!12068 = !DILocation(line: 231, column: 19, scope: !5547, inlinedAt: !11971)
!12069 = !DILocation(line: 231, column: 17, scope: !5547, inlinedAt: !11971)
!12070 = !DILocation(line: 231, column: 22, scope: !5547, inlinedAt: !11971)
!12071 = !DILocation(line: 231, column: 13, scope: !5547, inlinedAt: !11971)
!12072 = !DILocation(line: 231, column: 11, scope: !5547, inlinedAt: !11971)
!12073 = !DILocation(line: 231, column: 9, scope: !5463, inlinedAt: !11971)
!12074 = !DILocation(line: 231, column: 37, scope: !5555, inlinedAt: !11971)
!12075 = !DILocation(line: 231, column: 36, scope: !5555, inlinedAt: !11971)
!12076 = !DILocation(line: 231, column: 40, scope: !5555, inlinedAt: !11971)
!12077 = !DILocation(line: 231, column: 53, scope: !5555, inlinedAt: !11971)
!12078 = !DILocation(line: 231, column: 51, scope: !5555, inlinedAt: !11971)
!12079 = !DILocation(line: 231, column: 56, scope: !5555, inlinedAt: !11971)
!12080 = !DILocation(line: 231, column: 46, scope: !5555, inlinedAt: !11971)
!12081 = !DILocation(line: 231, column: 28, scope: !5555, inlinedAt: !11971)
!12082 = !DILocation(line: 232, column: 17, scope: !5547, inlinedAt: !11971)
!12083 = !DILocation(line: 232, column: 10, scope: !5547, inlinedAt: !11971)
!12084 = !DILocation(line: 233, column: 1, scope: !5463, inlinedAt: !11971)
!12085 = !DILocation(line: 402, column: 690, scope: !11972)
!12086 = !DILocation(line: 402, column: 686, scope: !11972)
!12087 = !DILocation(line: 402, column: 684, scope: !11972)
!12088 = !DILocation(line: 402, column: 569, scope: !11972)
!12089 = !DILocation(line: 402, column: 696, scope: !11972)
!12090 = !DILocation(line: 402, column: 694, scope: !11972)
!12091 = !DILocation(line: 402, column: 567, scope: !11972)
!12092 = !DILocation(line: 402, column: 560, scope: !11972)
!12093 = !DILocation(line: 402, column: 555, scope: !11972)
!12094 = !DILocation(line: 402, column: 551, scope: !11972)
!12095 = !DILocation(line: 402, column: 558, scope: !11972)
!12096 = !DILocation(line: 402, column: 705, scope: !11972)
!12097 = !DILocation(line: 402, column: 545, scope: !12098)
!12098 = !DILexicalBlockFile(scope: !11974, file: !624, discriminator: 8)
!12099 = !DILocation(line: 402, column: 521, scope: !12098)
!12100 = distinct !{!12100, !12101}
!12101 = !DILocation(line: 402, column: 521, scope: !11976)
!12102 = !DILocation(line: 402, column: 714, scope: !12103)
!12103 = !DILexicalBlockFile(scope: !11976, file: !624, discriminator: 9)
!12104 = !DILocation(line: 402, column: 711, scope: !12103)
!12105 = !DILocation(line: 402, column: 735, scope: !12103)
!12106 = !DILocation(line: 402, column: 732, scope: !12103)
!12107 = !DILocation(line: 402, column: 759, scope: !12103)
!12108 = !DILocation(line: 402, column: 756, scope: !12103)
!12109 = !DILocation(line: 402, column: 776, scope: !12103)
!12110 = !DILocation(line: 402, column: 515, scope: !12111)
!12111 = !DILexicalBlockFile(scope: !11977, file: !624, discriminator: 10)
!12112 = !DILocation(line: 402, column: 490, scope: !12111)
!12113 = distinct !{!12113, !12114}
!12114 = !DILocation(line: 402, column: 490, scope: !11969)
!12115 = !DILocation(line: 402, column: 778, scope: !12116)
!12116 = !DILexicalBlockFile(scope: !11969, file: !624, discriminator: 11)
!12117 = distinct !DISubprogram(name: "blend_multiply_12bit", scope: !624, file: !624, line: 375, type: !1531, isLocal: true, isDefinition: true, scopeLine: 375, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!12118 = !DILocalVariable(name: "_top", arg: 1, scope: !12117, file: !624, line: 375, type: !900)
!12119 = !DILocation(line: 375, column: 49, scope: !12117)
!12120 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !12117, file: !624, line: 375, type: !902)
!12121 = !DILocation(line: 375, column: 65, scope: !12117)
!12122 = !DILocalVariable(name: "_bottom", arg: 3, scope: !12117, file: !624, line: 375, type: !900)
!12123 = !DILocation(line: 375, column: 94, scope: !12117)
!12124 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !12117, file: !624, line: 375, type: !902)
!12125 = !DILocation(line: 375, column: 113, scope: !12117)
!12126 = !DILocalVariable(name: "_dst", arg: 5, scope: !12117, file: !624, line: 375, type: !329)
!12127 = !DILocation(line: 375, column: 139, scope: !12117)
!12128 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !12117, file: !624, line: 375, type: !902)
!12129 = !DILocation(line: 375, column: 155, scope: !12117)
!12130 = !DILocalVariable(name: "width", arg: 7, scope: !12117, file: !624, line: 375, type: !902)
!12131 = !DILocation(line: 375, column: 179, scope: !12117)
!12132 = !DILocalVariable(name: "height", arg: 8, scope: !12117, file: !624, line: 375, type: !902)
!12133 = !DILocation(line: 375, column: 196, scope: !12117)
!12134 = !DILocalVariable(name: "param", arg: 9, scope: !12117, file: !624, line: 375, type: !884)
!12135 = !DILocation(line: 375, column: 218, scope: !12117)
!12136 = !DILocalVariable(name: "values", arg: 10, scope: !12117, file: !624, line: 375, type: !544)
!12137 = !DILocation(line: 375, column: 233, scope: !12117)
!12138 = !DILocalVariable(name: "starty", arg: 11, scope: !12117, file: !624, line: 375, type: !238)
!12139 = !DILocation(line: 375, column: 245, scope: !12117)
!12140 = !DILocalVariable(name: "top", scope: !12117, file: !624, line: 375, type: !839)
!12141 = !DILocation(line: 375, column: 271, scope: !12117)
!12142 = !DILocation(line: 375, column: 294, scope: !12117)
!12143 = !DILocation(line: 375, column: 277, scope: !12117)
!12144 = !DILocalVariable(name: "bottom", scope: !12117, file: !624, line: 375, type: !839)
!12145 = !DILocation(line: 375, column: 316, scope: !12117)
!12146 = !DILocation(line: 375, column: 342, scope: !12117)
!12147 = !DILocation(line: 375, column: 325, scope: !12117)
!12148 = !DILocalVariable(name: "dst", scope: !12117, file: !624, line: 375, type: !843)
!12149 = !DILocation(line: 375, column: 361, scope: !12117)
!12150 = !DILocation(line: 375, column: 378, scope: !12117)
!12151 = !DILocation(line: 375, column: 367, scope: !12117)
!12152 = !DILocalVariable(name: "opacity", scope: !12117, file: !624, line: 375, type: !248)
!12153 = !DILocation(line: 375, column: 391, scope: !12117)
!12154 = !DILocation(line: 375, column: 401, scope: !12117)
!12155 = !DILocation(line: 375, column: 408, scope: !12117)
!12156 = !DILocalVariable(name: "i", scope: !12117, file: !624, line: 375, type: !238)
!12157 = !DILocation(line: 375, column: 421, scope: !12117)
!12158 = !DILocalVariable(name: "j", scope: !12117, file: !624, line: 375, type: !238)
!12159 = !DILocation(line: 375, column: 424, scope: !12117)
!12160 = !DILocation(line: 375, column: 440, scope: !12117)
!12161 = !DILocation(line: 375, column: 459, scope: !12117)
!12162 = !DILocation(line: 375, column: 481, scope: !12117)
!12163 = !DILocation(line: 375, column: 494, scope: !12164)
!12164 = distinct !DILexicalBlock(scope: !12117, file: !624, line: 375, column: 487)
!12165 = !DILocation(line: 375, column: 492, scope: !12164)
!12166 = !DILocation(line: 375, column: 499, scope: !12167)
!12167 = !DILexicalBlockFile(scope: !12168, file: !624, discriminator: 1)
!12168 = distinct !DILexicalBlock(scope: !12164, file: !624, line: 375, column: 487)
!12169 = !DILocation(line: 375, column: 503, scope: !12167)
!12170 = !DILocation(line: 375, column: 501, scope: !12167)
!12171 = !DILocation(line: 375, column: 487, scope: !12167)
!12172 = !DILocation(line: 375, column: 525, scope: !12173)
!12173 = !DILexicalBlockFile(scope: !12174, file: !624, discriminator: 2)
!12174 = distinct !DILexicalBlock(scope: !12175, file: !624, line: 375, column: 518)
!12175 = distinct !DILexicalBlock(scope: !12168, file: !624, line: 375, column: 516)
!12176 = !DILocation(line: 375, column: 523, scope: !12173)
!12177 = !DILocation(line: 375, column: 530, scope: !12178)
!12178 = !DILexicalBlockFile(scope: !12179, file: !624, discriminator: 3)
!12179 = distinct !DILexicalBlock(scope: !12174, file: !624, line: 375, column: 518)
!12180 = !DILocation(line: 375, column: 534, scope: !12178)
!12181 = !DILocation(line: 375, column: 532, scope: !12178)
!12182 = !DILocation(line: 375, column: 518, scope: !12178)
!12183 = !DILocation(line: 375, column: 561, scope: !12184)
!12184 = !DILexicalBlockFile(scope: !12185, file: !624, discriminator: 4)
!12185 = distinct !DILexicalBlock(scope: !12179, file: !624, line: 375, column: 546)
!12186 = !DILocation(line: 375, column: 557, scope: !12184)
!12187 = !DILocation(line: 375, column: 582, scope: !12184)
!12188 = !DILocation(line: 375, column: 578, scope: !12184)
!12189 = !DILocation(line: 375, column: 577, scope: !12184)
!12190 = !DILocation(line: 375, column: 596, scope: !12184)
!12191 = !DILocation(line: 375, column: 589, scope: !12184)
!12192 = !DILocation(line: 375, column: 588, scope: !12184)
!12193 = !DILocation(line: 375, column: 586, scope: !12184)
!12194 = !DILocation(line: 375, column: 601, scope: !12184)
!12195 = !DILocation(line: 375, column: 573, scope: !12184)
!12196 = !DILocation(line: 375, column: 617, scope: !12184)
!12197 = !DILocation(line: 375, column: 613, scope: !12184)
!12198 = !DILocation(line: 375, column: 611, scope: !12184)
!12199 = !DILocation(line: 375, column: 566, scope: !12184)
!12200 = !DILocation(line: 375, column: 623, scope: !12184)
!12201 = !DILocation(line: 375, column: 621, scope: !12184)
!12202 = !DILocation(line: 375, column: 564, scope: !12184)
!12203 = !DILocation(line: 375, column: 552, scope: !12184)
!12204 = !DILocation(line: 375, column: 548, scope: !12184)
!12205 = !DILocation(line: 375, column: 555, scope: !12184)
!12206 = !DILocation(line: 375, column: 632, scope: !12184)
!12207 = !DILocation(line: 375, column: 542, scope: !12208)
!12208 = !DILexicalBlockFile(scope: !12179, file: !624, discriminator: 5)
!12209 = !DILocation(line: 375, column: 518, scope: !12208)
!12210 = distinct !{!12210, !12211}
!12211 = !DILocation(line: 375, column: 518, scope: !12175)
!12212 = !DILocation(line: 375, column: 641, scope: !12213)
!12213 = !DILexicalBlockFile(scope: !12175, file: !624, discriminator: 6)
!12214 = !DILocation(line: 375, column: 638, scope: !12213)
!12215 = !DILocation(line: 375, column: 662, scope: !12213)
!12216 = !DILocation(line: 375, column: 659, scope: !12213)
!12217 = !DILocation(line: 375, column: 686, scope: !12213)
!12218 = !DILocation(line: 375, column: 683, scope: !12213)
!12219 = !DILocation(line: 375, column: 703, scope: !12213)
!12220 = !DILocation(line: 375, column: 512, scope: !12221)
!12221 = !DILexicalBlockFile(scope: !12168, file: !624, discriminator: 7)
!12222 = !DILocation(line: 375, column: 487, scope: !12221)
!12223 = distinct !{!12223, !12224}
!12224 = !DILocation(line: 375, column: 487, scope: !12117)
!12225 = !DILocation(line: 375, column: 705, scope: !12226)
!12226 = !DILexicalBlockFile(scope: !12117, file: !624, discriminator: 8)
!12227 = distinct !DISubprogram(name: "blend_multiply128_12bit", scope: !624, file: !624, line: 376, type: !1531, isLocal: true, isDefinition: true, scopeLine: 376, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!12228 = !DILocation(line: 229, column: 99, scope: !5463, inlinedAt: !12229)
!12229 = distinct !DILocation(line: 376, column: 576, scope: !12230)
!12230 = !DILexicalBlockFile(scope: !12231, file: !624, discriminator: 4)
!12231 = distinct !DILexicalBlock(scope: !12232, file: !624, line: 376, column: 549)
!12232 = distinct !DILexicalBlock(scope: !12233, file: !624, line: 376, column: 521)
!12233 = distinct !DILexicalBlock(scope: !12234, file: !624, line: 376, column: 521)
!12234 = distinct !DILexicalBlock(scope: !12235, file: !624, line: 376, column: 519)
!12235 = distinct !DILexicalBlock(scope: !12236, file: !624, line: 376, column: 490)
!12236 = distinct !DILexicalBlock(scope: !12227, file: !624, line: 376, column: 490)
!12237 = !DILocation(line: 229, column: 106, scope: !5463, inlinedAt: !12229)
!12238 = !DILocalVariable(name: "_top", arg: 1, scope: !12227, file: !624, line: 376, type: !900)
!12239 = !DILocation(line: 376, column: 52, scope: !12227)
!12240 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !12227, file: !624, line: 376, type: !902)
!12241 = !DILocation(line: 376, column: 68, scope: !12227)
!12242 = !DILocalVariable(name: "_bottom", arg: 3, scope: !12227, file: !624, line: 376, type: !900)
!12243 = !DILocation(line: 376, column: 97, scope: !12227)
!12244 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !12227, file: !624, line: 376, type: !902)
!12245 = !DILocation(line: 376, column: 116, scope: !12227)
!12246 = !DILocalVariable(name: "_dst", arg: 5, scope: !12227, file: !624, line: 376, type: !329)
!12247 = !DILocation(line: 376, column: 142, scope: !12227)
!12248 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !12227, file: !624, line: 376, type: !902)
!12249 = !DILocation(line: 376, column: 158, scope: !12227)
!12250 = !DILocalVariable(name: "width", arg: 7, scope: !12227, file: !624, line: 376, type: !902)
!12251 = !DILocation(line: 376, column: 182, scope: !12227)
!12252 = !DILocalVariable(name: "height", arg: 8, scope: !12227, file: !624, line: 376, type: !902)
!12253 = !DILocation(line: 376, column: 199, scope: !12227)
!12254 = !DILocalVariable(name: "param", arg: 9, scope: !12227, file: !624, line: 376, type: !884)
!12255 = !DILocation(line: 376, column: 221, scope: !12227)
!12256 = !DILocalVariable(name: "values", arg: 10, scope: !12227, file: !624, line: 376, type: !544)
!12257 = !DILocation(line: 376, column: 236, scope: !12227)
!12258 = !DILocalVariable(name: "starty", arg: 11, scope: !12227, file: !624, line: 376, type: !238)
!12259 = !DILocation(line: 376, column: 248, scope: !12227)
!12260 = !DILocalVariable(name: "top", scope: !12227, file: !624, line: 376, type: !839)
!12261 = !DILocation(line: 376, column: 274, scope: !12227)
!12262 = !DILocation(line: 376, column: 297, scope: !12227)
!12263 = !DILocation(line: 376, column: 280, scope: !12227)
!12264 = !DILocalVariable(name: "bottom", scope: !12227, file: !624, line: 376, type: !839)
!12265 = !DILocation(line: 376, column: 319, scope: !12227)
!12266 = !DILocation(line: 376, column: 345, scope: !12227)
!12267 = !DILocation(line: 376, column: 328, scope: !12227)
!12268 = !DILocalVariable(name: "dst", scope: !12227, file: !624, line: 376, type: !843)
!12269 = !DILocation(line: 376, column: 364, scope: !12227)
!12270 = !DILocation(line: 376, column: 381, scope: !12227)
!12271 = !DILocation(line: 376, column: 370, scope: !12227)
!12272 = !DILocalVariable(name: "opacity", scope: !12227, file: !624, line: 376, type: !248)
!12273 = !DILocation(line: 376, column: 394, scope: !12227)
!12274 = !DILocation(line: 376, column: 404, scope: !12227)
!12275 = !DILocation(line: 376, column: 411, scope: !12227)
!12276 = !DILocalVariable(name: "i", scope: !12227, file: !624, line: 376, type: !238)
!12277 = !DILocation(line: 376, column: 424, scope: !12227)
!12278 = !DILocalVariable(name: "j", scope: !12227, file: !624, line: 376, type: !238)
!12279 = !DILocation(line: 376, column: 427, scope: !12227)
!12280 = !DILocation(line: 376, column: 443, scope: !12227)
!12281 = !DILocation(line: 376, column: 462, scope: !12227)
!12282 = !DILocation(line: 376, column: 484, scope: !12227)
!12283 = !DILocation(line: 376, column: 497, scope: !12236)
!12284 = !DILocation(line: 376, column: 495, scope: !12236)
!12285 = !DILocation(line: 376, column: 502, scope: !12286)
!12286 = !DILexicalBlockFile(scope: !12235, file: !624, discriminator: 1)
!12287 = !DILocation(line: 376, column: 506, scope: !12286)
!12288 = !DILocation(line: 376, column: 504, scope: !12286)
!12289 = !DILocation(line: 376, column: 490, scope: !12286)
!12290 = !DILocation(line: 376, column: 528, scope: !12291)
!12291 = !DILexicalBlockFile(scope: !12233, file: !624, discriminator: 2)
!12292 = !DILocation(line: 376, column: 526, scope: !12291)
!12293 = !DILocation(line: 376, column: 533, scope: !12294)
!12294 = !DILexicalBlockFile(scope: !12232, file: !624, discriminator: 3)
!12295 = !DILocation(line: 376, column: 537, scope: !12294)
!12296 = !DILocation(line: 376, column: 535, scope: !12294)
!12297 = !DILocation(line: 376, column: 521, scope: !12294)
!12298 = !DILocation(line: 376, column: 564, scope: !12230)
!12299 = !DILocation(line: 376, column: 560, scope: !12230)
!12300 = !DILocation(line: 376, column: 598, scope: !12230)
!12301 = !DILocation(line: 376, column: 594, scope: !12230)
!12302 = !DILocation(line: 376, column: 601, scope: !12230)
!12303 = !DILocation(line: 376, column: 618, scope: !12230)
!12304 = !DILocation(line: 376, column: 611, scope: !12230)
!12305 = !DILocation(line: 376, column: 609, scope: !12230)
!12306 = !DILocation(line: 376, column: 593, scope: !12230)
!12307 = !DILocation(line: 376, column: 621, scope: !12230)
!12308 = !DILocation(line: 376, column: 628, scope: !12230)
!12309 = !DILocation(line: 376, column: 576, scope: !12230)
!12310 = !DILocation(line: 231, column: 9, scope: !5547, inlinedAt: !12229)
!12311 = !DILocation(line: 231, column: 19, scope: !5547, inlinedAt: !12229)
!12312 = !DILocation(line: 231, column: 17, scope: !5547, inlinedAt: !12229)
!12313 = !DILocation(line: 231, column: 22, scope: !5547, inlinedAt: !12229)
!12314 = !DILocation(line: 231, column: 13, scope: !5547, inlinedAt: !12229)
!12315 = !DILocation(line: 231, column: 11, scope: !5547, inlinedAt: !12229)
!12316 = !DILocation(line: 231, column: 9, scope: !5463, inlinedAt: !12229)
!12317 = !DILocation(line: 231, column: 37, scope: !5555, inlinedAt: !12229)
!12318 = !DILocation(line: 231, column: 36, scope: !5555, inlinedAt: !12229)
!12319 = !DILocation(line: 231, column: 40, scope: !5555, inlinedAt: !12229)
!12320 = !DILocation(line: 231, column: 53, scope: !5555, inlinedAt: !12229)
!12321 = !DILocation(line: 231, column: 51, scope: !5555, inlinedAt: !12229)
!12322 = !DILocation(line: 231, column: 56, scope: !5555, inlinedAt: !12229)
!12323 = !DILocation(line: 231, column: 46, scope: !5555, inlinedAt: !12229)
!12324 = !DILocation(line: 231, column: 28, scope: !5555, inlinedAt: !12229)
!12325 = !DILocation(line: 232, column: 17, scope: !5547, inlinedAt: !12229)
!12326 = !DILocation(line: 232, column: 10, scope: !5547, inlinedAt: !12229)
!12327 = !DILocation(line: 233, column: 1, scope: !5463, inlinedAt: !12229)
!12328 = !DILocation(line: 376, column: 647, scope: !12230)
!12329 = !DILocation(line: 376, column: 643, scope: !12230)
!12330 = !DILocation(line: 376, column: 641, scope: !12230)
!12331 = !DILocation(line: 376, column: 569, scope: !12230)
!12332 = !DILocation(line: 376, column: 653, scope: !12230)
!12333 = !DILocation(line: 376, column: 651, scope: !12230)
!12334 = !DILocation(line: 376, column: 567, scope: !12230)
!12335 = !DILocation(line: 376, column: 555, scope: !12230)
!12336 = !DILocation(line: 376, column: 551, scope: !12230)
!12337 = !DILocation(line: 376, column: 558, scope: !12230)
!12338 = !DILocation(line: 376, column: 662, scope: !12230)
!12339 = !DILocation(line: 376, column: 545, scope: !12340)
!12340 = !DILexicalBlockFile(scope: !12232, file: !624, discriminator: 5)
!12341 = !DILocation(line: 376, column: 521, scope: !12340)
!12342 = distinct !{!12342, !12343}
!12343 = !DILocation(line: 376, column: 521, scope: !12234)
!12344 = !DILocation(line: 376, column: 671, scope: !12345)
!12345 = !DILexicalBlockFile(scope: !12234, file: !624, discriminator: 6)
!12346 = !DILocation(line: 376, column: 668, scope: !12345)
!12347 = !DILocation(line: 376, column: 692, scope: !12345)
!12348 = !DILocation(line: 376, column: 689, scope: !12345)
!12349 = !DILocation(line: 376, column: 716, scope: !12345)
!12350 = !DILocation(line: 376, column: 713, scope: !12345)
!12351 = !DILocation(line: 376, column: 733, scope: !12345)
!12352 = !DILocation(line: 376, column: 515, scope: !12353)
!12353 = !DILexicalBlockFile(scope: !12235, file: !624, discriminator: 7)
!12354 = !DILocation(line: 376, column: 490, scope: !12353)
!12355 = distinct !{!12355, !12356}
!12356 = !DILocation(line: 376, column: 490, scope: !12227)
!12357 = !DILocation(line: 376, column: 735, scope: !12358)
!12358 = !DILexicalBlockFile(scope: !12227, file: !624, discriminator: 8)
!12359 = distinct !DISubprogram(name: "blend_negation_12bit", scope: !624, file: !624, line: 377, type: !1531, isLocal: true, isDefinition: true, scopeLine: 377, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!12360 = !DILocalVariable(name: "_top", arg: 1, scope: !12359, file: !624, line: 377, type: !900)
!12361 = !DILocation(line: 377, column: 49, scope: !12359)
!12362 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !12359, file: !624, line: 377, type: !902)
!12363 = !DILocation(line: 377, column: 65, scope: !12359)
!12364 = !DILocalVariable(name: "_bottom", arg: 3, scope: !12359, file: !624, line: 377, type: !900)
!12365 = !DILocation(line: 377, column: 94, scope: !12359)
!12366 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !12359, file: !624, line: 377, type: !902)
!12367 = !DILocation(line: 377, column: 113, scope: !12359)
!12368 = !DILocalVariable(name: "_dst", arg: 5, scope: !12359, file: !624, line: 377, type: !329)
!12369 = !DILocation(line: 377, column: 139, scope: !12359)
!12370 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !12359, file: !624, line: 377, type: !902)
!12371 = !DILocation(line: 377, column: 155, scope: !12359)
!12372 = !DILocalVariable(name: "width", arg: 7, scope: !12359, file: !624, line: 377, type: !902)
!12373 = !DILocation(line: 377, column: 179, scope: !12359)
!12374 = !DILocalVariable(name: "height", arg: 8, scope: !12359, file: !624, line: 377, type: !902)
!12375 = !DILocation(line: 377, column: 196, scope: !12359)
!12376 = !DILocalVariable(name: "param", arg: 9, scope: !12359, file: !624, line: 377, type: !884)
!12377 = !DILocation(line: 377, column: 218, scope: !12359)
!12378 = !DILocalVariable(name: "values", arg: 10, scope: !12359, file: !624, line: 377, type: !544)
!12379 = !DILocation(line: 377, column: 233, scope: !12359)
!12380 = !DILocalVariable(name: "starty", arg: 11, scope: !12359, file: !624, line: 377, type: !238)
!12381 = !DILocation(line: 377, column: 245, scope: !12359)
!12382 = !DILocalVariable(name: "top", scope: !12359, file: !624, line: 377, type: !839)
!12383 = !DILocation(line: 377, column: 271, scope: !12359)
!12384 = !DILocation(line: 377, column: 294, scope: !12359)
!12385 = !DILocation(line: 377, column: 277, scope: !12359)
!12386 = !DILocalVariable(name: "bottom", scope: !12359, file: !624, line: 377, type: !839)
!12387 = !DILocation(line: 377, column: 316, scope: !12359)
!12388 = !DILocation(line: 377, column: 342, scope: !12359)
!12389 = !DILocation(line: 377, column: 325, scope: !12359)
!12390 = !DILocalVariable(name: "dst", scope: !12359, file: !624, line: 377, type: !843)
!12391 = !DILocation(line: 377, column: 361, scope: !12359)
!12392 = !DILocation(line: 377, column: 378, scope: !12359)
!12393 = !DILocation(line: 377, column: 367, scope: !12359)
!12394 = !DILocalVariable(name: "opacity", scope: !12359, file: !624, line: 377, type: !248)
!12395 = !DILocation(line: 377, column: 391, scope: !12359)
!12396 = !DILocation(line: 377, column: 401, scope: !12359)
!12397 = !DILocation(line: 377, column: 408, scope: !12359)
!12398 = !DILocalVariable(name: "i", scope: !12359, file: !624, line: 377, type: !238)
!12399 = !DILocation(line: 377, column: 421, scope: !12359)
!12400 = !DILocalVariable(name: "j", scope: !12359, file: !624, line: 377, type: !238)
!12401 = !DILocation(line: 377, column: 424, scope: !12359)
!12402 = !DILocation(line: 377, column: 440, scope: !12359)
!12403 = !DILocation(line: 377, column: 459, scope: !12359)
!12404 = !DILocation(line: 377, column: 481, scope: !12359)
!12405 = !DILocation(line: 377, column: 494, scope: !12406)
!12406 = distinct !DILexicalBlock(scope: !12359, file: !624, line: 377, column: 487)
!12407 = !DILocation(line: 377, column: 492, scope: !12406)
!12408 = !DILocation(line: 377, column: 499, scope: !12409)
!12409 = !DILexicalBlockFile(scope: !12410, file: !624, discriminator: 1)
!12410 = distinct !DILexicalBlock(scope: !12406, file: !624, line: 377, column: 487)
!12411 = !DILocation(line: 377, column: 503, scope: !12409)
!12412 = !DILocation(line: 377, column: 501, scope: !12409)
!12413 = !DILocation(line: 377, column: 487, scope: !12409)
!12414 = !DILocation(line: 377, column: 525, scope: !12415)
!12415 = !DILexicalBlockFile(scope: !12416, file: !624, discriminator: 2)
!12416 = distinct !DILexicalBlock(scope: !12417, file: !624, line: 377, column: 518)
!12417 = distinct !DILexicalBlock(scope: !12410, file: !624, line: 377, column: 516)
!12418 = !DILocation(line: 377, column: 523, scope: !12415)
!12419 = !DILocation(line: 377, column: 530, scope: !12420)
!12420 = !DILexicalBlockFile(scope: !12421, file: !624, discriminator: 3)
!12421 = distinct !DILexicalBlock(scope: !12416, file: !624, line: 377, column: 518)
!12422 = !DILocation(line: 377, column: 534, scope: !12420)
!12423 = !DILocation(line: 377, column: 532, scope: !12420)
!12424 = !DILocation(line: 377, column: 518, scope: !12420)
!12425 = !DILocation(line: 377, column: 561, scope: !12426)
!12426 = !DILexicalBlockFile(scope: !12427, file: !624, discriminator: 4)
!12427 = distinct !DILexicalBlock(scope: !12421, file: !624, line: 377, column: 546)
!12428 = !DILocation(line: 377, column: 557, scope: !12426)
!12429 = !DILocation(line: 377, column: 588, scope: !12426)
!12430 = !DILocation(line: 377, column: 584, scope: !12426)
!12431 = !DILocation(line: 377, column: 582, scope: !12426)
!12432 = !DILocation(line: 377, column: 600, scope: !12426)
!12433 = !DILocation(line: 377, column: 593, scope: !12426)
!12434 = !DILocation(line: 377, column: 591, scope: !12426)
!12435 = !DILocation(line: 377, column: 604, scope: !12426)
!12436 = !DILocation(line: 377, column: 576, scope: !12426)
!12437 = !DILocation(line: 377, column: 623, scope: !12438)
!12438 = !DILexicalBlockFile(scope: !12427, file: !624, discriminator: 5)
!12439 = !DILocation(line: 377, column: 619, scope: !12438)
!12440 = !DILocation(line: 377, column: 617, scope: !12438)
!12441 = !DILocation(line: 377, column: 635, scope: !12438)
!12442 = !DILocation(line: 377, column: 628, scope: !12438)
!12443 = !DILocation(line: 377, column: 626, scope: !12438)
!12444 = !DILocation(line: 377, column: 576, scope: !12438)
!12445 = !DILocation(line: 377, column: 655, scope: !12446)
!12446 = !DILexicalBlockFile(scope: !12427, file: !624, discriminator: 6)
!12447 = !DILocation(line: 377, column: 651, scope: !12446)
!12448 = !DILocation(line: 377, column: 649, scope: !12446)
!12449 = !DILocation(line: 377, column: 667, scope: !12446)
!12450 = !DILocation(line: 377, column: 660, scope: !12446)
!12451 = !DILocation(line: 377, column: 658, scope: !12446)
!12452 = !DILocation(line: 377, column: 642, scope: !12446)
!12453 = !DILocation(line: 377, column: 576, scope: !12446)
!12454 = !DILocation(line: 377, column: 576, scope: !12455)
!12455 = !DILexicalBlockFile(scope: !12427, file: !624, discriminator: 7)
!12456 = !DILocation(line: 377, column: 573, scope: !12455)
!12457 = !DILocation(line: 377, column: 680, scope: !12455)
!12458 = !DILocation(line: 377, column: 676, scope: !12455)
!12459 = !DILocation(line: 377, column: 674, scope: !12455)
!12460 = !DILocation(line: 377, column: 566, scope: !12455)
!12461 = !DILocation(line: 377, column: 686, scope: !12455)
!12462 = !DILocation(line: 377, column: 684, scope: !12455)
!12463 = !DILocation(line: 377, column: 564, scope: !12455)
!12464 = !DILocation(line: 377, column: 557, scope: !12455)
!12465 = !DILocation(line: 377, column: 552, scope: !12455)
!12466 = !DILocation(line: 377, column: 548, scope: !12455)
!12467 = !DILocation(line: 377, column: 555, scope: !12455)
!12468 = !DILocation(line: 377, column: 695, scope: !12455)
!12469 = !DILocation(line: 377, column: 542, scope: !12470)
!12470 = !DILexicalBlockFile(scope: !12421, file: !624, discriminator: 8)
!12471 = !DILocation(line: 377, column: 518, scope: !12470)
!12472 = distinct !{!12472, !12473}
!12473 = !DILocation(line: 377, column: 518, scope: !12417)
!12474 = !DILocation(line: 377, column: 704, scope: !12475)
!12475 = !DILexicalBlockFile(scope: !12417, file: !624, discriminator: 9)
!12476 = !DILocation(line: 377, column: 701, scope: !12475)
!12477 = !DILocation(line: 377, column: 725, scope: !12475)
!12478 = !DILocation(line: 377, column: 722, scope: !12475)
!12479 = !DILocation(line: 377, column: 749, scope: !12475)
!12480 = !DILocation(line: 377, column: 746, scope: !12475)
!12481 = !DILocation(line: 377, column: 766, scope: !12475)
!12482 = !DILocation(line: 377, column: 512, scope: !12483)
!12483 = !DILexicalBlockFile(scope: !12410, file: !624, discriminator: 10)
!12484 = !DILocation(line: 377, column: 487, scope: !12483)
!12485 = distinct !{!12485, !12486}
!12486 = !DILocation(line: 377, column: 487, scope: !12359)
!12487 = !DILocation(line: 377, column: 768, scope: !12488)
!12488 = !DILexicalBlockFile(scope: !12359, file: !624, discriminator: 11)
!12489 = distinct !DISubprogram(name: "blend_or_12bit", scope: !624, file: !624, line: 399, type: !1531, isLocal: true, isDefinition: true, scopeLine: 399, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!12490 = !DILocalVariable(name: "_top", arg: 1, scope: !12489, file: !624, line: 399, type: !900)
!12491 = !DILocation(line: 399, column: 43, scope: !12489)
!12492 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !12489, file: !624, line: 399, type: !902)
!12493 = !DILocation(line: 399, column: 59, scope: !12489)
!12494 = !DILocalVariable(name: "_bottom", arg: 3, scope: !12489, file: !624, line: 399, type: !900)
!12495 = !DILocation(line: 399, column: 88, scope: !12489)
!12496 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !12489, file: !624, line: 399, type: !902)
!12497 = !DILocation(line: 399, column: 107, scope: !12489)
!12498 = !DILocalVariable(name: "_dst", arg: 5, scope: !12489, file: !624, line: 399, type: !329)
!12499 = !DILocation(line: 399, column: 133, scope: !12489)
!12500 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !12489, file: !624, line: 399, type: !902)
!12501 = !DILocation(line: 399, column: 149, scope: !12489)
!12502 = !DILocalVariable(name: "width", arg: 7, scope: !12489, file: !624, line: 399, type: !902)
!12503 = !DILocation(line: 399, column: 173, scope: !12489)
!12504 = !DILocalVariable(name: "height", arg: 8, scope: !12489, file: !624, line: 399, type: !902)
!12505 = !DILocation(line: 399, column: 190, scope: !12489)
!12506 = !DILocalVariable(name: "param", arg: 9, scope: !12489, file: !624, line: 399, type: !884)
!12507 = !DILocation(line: 399, column: 212, scope: !12489)
!12508 = !DILocalVariable(name: "values", arg: 10, scope: !12489, file: !624, line: 399, type: !544)
!12509 = !DILocation(line: 399, column: 227, scope: !12489)
!12510 = !DILocalVariable(name: "starty", arg: 11, scope: !12489, file: !624, line: 399, type: !238)
!12511 = !DILocation(line: 399, column: 239, scope: !12489)
!12512 = !DILocalVariable(name: "top", scope: !12489, file: !624, line: 399, type: !839)
!12513 = !DILocation(line: 399, column: 265, scope: !12489)
!12514 = !DILocation(line: 399, column: 288, scope: !12489)
!12515 = !DILocation(line: 399, column: 271, scope: !12489)
!12516 = !DILocalVariable(name: "bottom", scope: !12489, file: !624, line: 399, type: !839)
!12517 = !DILocation(line: 399, column: 310, scope: !12489)
!12518 = !DILocation(line: 399, column: 336, scope: !12489)
!12519 = !DILocation(line: 399, column: 319, scope: !12489)
!12520 = !DILocalVariable(name: "dst", scope: !12489, file: !624, line: 399, type: !843)
!12521 = !DILocation(line: 399, column: 355, scope: !12489)
!12522 = !DILocation(line: 399, column: 372, scope: !12489)
!12523 = !DILocation(line: 399, column: 361, scope: !12489)
!12524 = !DILocalVariable(name: "opacity", scope: !12489, file: !624, line: 399, type: !248)
!12525 = !DILocation(line: 399, column: 385, scope: !12489)
!12526 = !DILocation(line: 399, column: 395, scope: !12489)
!12527 = !DILocation(line: 399, column: 402, scope: !12489)
!12528 = !DILocalVariable(name: "i", scope: !12489, file: !624, line: 399, type: !238)
!12529 = !DILocation(line: 399, column: 415, scope: !12489)
!12530 = !DILocalVariable(name: "j", scope: !12489, file: !624, line: 399, type: !238)
!12531 = !DILocation(line: 399, column: 418, scope: !12489)
!12532 = !DILocation(line: 399, column: 434, scope: !12489)
!12533 = !DILocation(line: 399, column: 453, scope: !12489)
!12534 = !DILocation(line: 399, column: 475, scope: !12489)
!12535 = !DILocation(line: 399, column: 488, scope: !12536)
!12536 = distinct !DILexicalBlock(scope: !12489, file: !624, line: 399, column: 481)
!12537 = !DILocation(line: 399, column: 486, scope: !12536)
!12538 = !DILocation(line: 399, column: 493, scope: !12539)
!12539 = !DILexicalBlockFile(scope: !12540, file: !624, discriminator: 1)
!12540 = distinct !DILexicalBlock(scope: !12536, file: !624, line: 399, column: 481)
!12541 = !DILocation(line: 399, column: 497, scope: !12539)
!12542 = !DILocation(line: 399, column: 495, scope: !12539)
!12543 = !DILocation(line: 399, column: 481, scope: !12539)
!12544 = !DILocation(line: 399, column: 519, scope: !12545)
!12545 = !DILexicalBlockFile(scope: !12546, file: !624, discriminator: 2)
!12546 = distinct !DILexicalBlock(scope: !12547, file: !624, line: 399, column: 512)
!12547 = distinct !DILexicalBlock(scope: !12540, file: !624, line: 399, column: 510)
!12548 = !DILocation(line: 399, column: 517, scope: !12545)
!12549 = !DILocation(line: 399, column: 524, scope: !12550)
!12550 = !DILexicalBlockFile(scope: !12551, file: !624, discriminator: 3)
!12551 = distinct !DILexicalBlock(scope: !12546, file: !624, line: 399, column: 512)
!12552 = !DILocation(line: 399, column: 528, scope: !12550)
!12553 = !DILocation(line: 399, column: 526, scope: !12550)
!12554 = !DILocation(line: 399, column: 512, scope: !12550)
!12555 = !DILocation(line: 399, column: 555, scope: !12556)
!12556 = !DILexicalBlockFile(scope: !12557, file: !624, discriminator: 4)
!12557 = distinct !DILexicalBlock(scope: !12551, file: !624, line: 399, column: 540)
!12558 = !DILocation(line: 399, column: 551, scope: !12556)
!12559 = !DILocation(line: 399, column: 566, scope: !12556)
!12560 = !DILocation(line: 399, column: 562, scope: !12556)
!12561 = !DILocation(line: 399, column: 578, scope: !12556)
!12562 = !DILocation(line: 399, column: 571, scope: !12556)
!12563 = !DILocation(line: 399, column: 569, scope: !12556)
!12564 = !DILocation(line: 399, column: 588, scope: !12556)
!12565 = !DILocation(line: 399, column: 584, scope: !12556)
!12566 = !DILocation(line: 399, column: 582, scope: !12556)
!12567 = !DILocation(line: 399, column: 560, scope: !12556)
!12568 = !DILocation(line: 399, column: 594, scope: !12556)
!12569 = !DILocation(line: 399, column: 592, scope: !12556)
!12570 = !DILocation(line: 399, column: 558, scope: !12556)
!12571 = !DILocation(line: 399, column: 546, scope: !12556)
!12572 = !DILocation(line: 399, column: 542, scope: !12556)
!12573 = !DILocation(line: 399, column: 549, scope: !12556)
!12574 = !DILocation(line: 399, column: 603, scope: !12556)
!12575 = !DILocation(line: 399, column: 536, scope: !12576)
!12576 = !DILexicalBlockFile(scope: !12551, file: !624, discriminator: 5)
!12577 = !DILocation(line: 399, column: 512, scope: !12576)
!12578 = distinct !{!12578, !12579}
!12579 = !DILocation(line: 399, column: 512, scope: !12547)
!12580 = !DILocation(line: 399, column: 612, scope: !12581)
!12581 = !DILexicalBlockFile(scope: !12547, file: !624, discriminator: 6)
!12582 = !DILocation(line: 399, column: 609, scope: !12581)
!12583 = !DILocation(line: 399, column: 633, scope: !12581)
!12584 = !DILocation(line: 399, column: 630, scope: !12581)
!12585 = !DILocation(line: 399, column: 657, scope: !12581)
!12586 = !DILocation(line: 399, column: 654, scope: !12581)
!12587 = !DILocation(line: 399, column: 674, scope: !12581)
!12588 = !DILocation(line: 399, column: 506, scope: !12589)
!12589 = !DILexicalBlockFile(scope: !12540, file: !624, discriminator: 7)
!12590 = !DILocation(line: 399, column: 481, scope: !12589)
!12591 = distinct !{!12591, !12592}
!12592 = !DILocation(line: 399, column: 481, scope: !12489)
!12593 = !DILocation(line: 399, column: 676, scope: !12594)
!12594 = !DILexicalBlockFile(scope: !12489, file: !624, discriminator: 8)
!12595 = distinct !DISubprogram(name: "blend_overlay_12bit", scope: !624, file: !624, line: 382, type: !1531, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!12596 = !DILocalVariable(name: "_top", arg: 1, scope: !12595, file: !624, line: 382, type: !900)
!12597 = !DILocation(line: 382, column: 48, scope: !12595)
!12598 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !12595, file: !624, line: 382, type: !902)
!12599 = !DILocation(line: 382, column: 64, scope: !12595)
!12600 = !DILocalVariable(name: "_bottom", arg: 3, scope: !12595, file: !624, line: 382, type: !900)
!12601 = !DILocation(line: 382, column: 93, scope: !12595)
!12602 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !12595, file: !624, line: 382, type: !902)
!12603 = !DILocation(line: 382, column: 112, scope: !12595)
!12604 = !DILocalVariable(name: "_dst", arg: 5, scope: !12595, file: !624, line: 382, type: !329)
!12605 = !DILocation(line: 382, column: 138, scope: !12595)
!12606 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !12595, file: !624, line: 382, type: !902)
!12607 = !DILocation(line: 382, column: 154, scope: !12595)
!12608 = !DILocalVariable(name: "width", arg: 7, scope: !12595, file: !624, line: 382, type: !902)
!12609 = !DILocation(line: 382, column: 178, scope: !12595)
!12610 = !DILocalVariable(name: "height", arg: 8, scope: !12595, file: !624, line: 382, type: !902)
!12611 = !DILocation(line: 382, column: 195, scope: !12595)
!12612 = !DILocalVariable(name: "param", arg: 9, scope: !12595, file: !624, line: 382, type: !884)
!12613 = !DILocation(line: 382, column: 217, scope: !12595)
!12614 = !DILocalVariable(name: "values", arg: 10, scope: !12595, file: !624, line: 382, type: !544)
!12615 = !DILocation(line: 382, column: 232, scope: !12595)
!12616 = !DILocalVariable(name: "starty", arg: 11, scope: !12595, file: !624, line: 382, type: !238)
!12617 = !DILocation(line: 382, column: 244, scope: !12595)
!12618 = !DILocalVariable(name: "top", scope: !12595, file: !624, line: 382, type: !839)
!12619 = !DILocation(line: 382, column: 270, scope: !12595)
!12620 = !DILocation(line: 382, column: 293, scope: !12595)
!12621 = !DILocation(line: 382, column: 276, scope: !12595)
!12622 = !DILocalVariable(name: "bottom", scope: !12595, file: !624, line: 382, type: !839)
!12623 = !DILocation(line: 382, column: 315, scope: !12595)
!12624 = !DILocation(line: 382, column: 341, scope: !12595)
!12625 = !DILocation(line: 382, column: 324, scope: !12595)
!12626 = !DILocalVariable(name: "dst", scope: !12595, file: !624, line: 382, type: !843)
!12627 = !DILocation(line: 382, column: 360, scope: !12595)
!12628 = !DILocation(line: 382, column: 377, scope: !12595)
!12629 = !DILocation(line: 382, column: 366, scope: !12595)
!12630 = !DILocalVariable(name: "opacity", scope: !12595, file: !624, line: 382, type: !248)
!12631 = !DILocation(line: 382, column: 390, scope: !12595)
!12632 = !DILocation(line: 382, column: 400, scope: !12595)
!12633 = !DILocation(line: 382, column: 407, scope: !12595)
!12634 = !DILocalVariable(name: "i", scope: !12595, file: !624, line: 382, type: !238)
!12635 = !DILocation(line: 382, column: 420, scope: !12595)
!12636 = !DILocalVariable(name: "j", scope: !12595, file: !624, line: 382, type: !238)
!12637 = !DILocation(line: 382, column: 423, scope: !12595)
!12638 = !DILocation(line: 382, column: 439, scope: !12595)
!12639 = !DILocation(line: 382, column: 458, scope: !12595)
!12640 = !DILocation(line: 382, column: 480, scope: !12595)
!12641 = !DILocation(line: 382, column: 493, scope: !12642)
!12642 = distinct !DILexicalBlock(scope: !12595, file: !624, line: 382, column: 486)
!12643 = !DILocation(line: 382, column: 491, scope: !12642)
!12644 = !DILocation(line: 382, column: 498, scope: !12645)
!12645 = !DILexicalBlockFile(scope: !12646, file: !624, discriminator: 1)
!12646 = distinct !DILexicalBlock(scope: !12642, file: !624, line: 382, column: 486)
!12647 = !DILocation(line: 382, column: 502, scope: !12645)
!12648 = !DILocation(line: 382, column: 500, scope: !12645)
!12649 = !DILocation(line: 382, column: 486, scope: !12645)
!12650 = !DILocation(line: 382, column: 524, scope: !12651)
!12651 = !DILexicalBlockFile(scope: !12652, file: !624, discriminator: 2)
!12652 = distinct !DILexicalBlock(scope: !12653, file: !624, line: 382, column: 517)
!12653 = distinct !DILexicalBlock(scope: !12646, file: !624, line: 382, column: 515)
!12654 = !DILocation(line: 382, column: 522, scope: !12651)
!12655 = !DILocation(line: 382, column: 529, scope: !12656)
!12656 = !DILexicalBlockFile(scope: !12657, file: !624, discriminator: 3)
!12657 = distinct !DILexicalBlock(scope: !12652, file: !624, line: 382, column: 517)
!12658 = !DILocation(line: 382, column: 533, scope: !12656)
!12659 = !DILocation(line: 382, column: 531, scope: !12656)
!12660 = !DILocation(line: 382, column: 517, scope: !12656)
!12661 = !DILocation(line: 382, column: 560, scope: !12662)
!12662 = !DILexicalBlockFile(scope: !12663, file: !624, discriminator: 4)
!12663 = distinct !DILexicalBlock(scope: !12657, file: !624, line: 382, column: 545)
!12664 = !DILocation(line: 382, column: 556, scope: !12662)
!12665 = !DILocation(line: 382, column: 572, scope: !12662)
!12666 = !DILocation(line: 382, column: 568, scope: !12662)
!12667 = !DILocation(line: 382, column: 575, scope: !12662)
!12668 = !DILocation(line: 382, column: 567, scope: !12662)
!12669 = !DILocation(line: 382, column: 599, scope: !12670)
!12670 = !DILexicalBlockFile(scope: !12663, file: !624, discriminator: 5)
!12671 = !DILocation(line: 382, column: 595, scope: !12670)
!12672 = !DILocation(line: 382, column: 594, scope: !12670)
!12673 = !DILocation(line: 382, column: 613, scope: !12670)
!12674 = !DILocation(line: 382, column: 606, scope: !12670)
!12675 = !DILocation(line: 382, column: 605, scope: !12670)
!12676 = !DILocation(line: 382, column: 603, scope: !12670)
!12677 = !DILocation(line: 382, column: 618, scope: !12670)
!12678 = !DILocation(line: 382, column: 590, scope: !12670)
!12679 = !DILocation(line: 382, column: 567, scope: !12670)
!12680 = !DILocation(line: 382, column: 657, scope: !12681)
!12681 = !DILexicalBlockFile(scope: !12663, file: !624, discriminator: 6)
!12682 = !DILocation(line: 382, column: 653, scope: !12681)
!12683 = !DILocation(line: 382, column: 652, scope: !12681)
!12684 = !DILocation(line: 382, column: 650, scope: !12681)
!12685 = !DILocation(line: 382, column: 680, scope: !12681)
!12686 = !DILocation(line: 382, column: 673, scope: !12681)
!12687 = !DILocation(line: 382, column: 672, scope: !12681)
!12688 = !DILocation(line: 382, column: 670, scope: !12681)
!12689 = !DILocation(line: 382, column: 662, scope: !12681)
!12690 = !DILocation(line: 382, column: 685, scope: !12681)
!12691 = !DILocation(line: 382, column: 641, scope: !12681)
!12692 = !DILocation(line: 382, column: 635, scope: !12681)
!12693 = !DILocation(line: 382, column: 567, scope: !12681)
!12694 = !DILocation(line: 382, column: 567, scope: !12695)
!12695 = !DILexicalBlockFile(scope: !12663, file: !624, discriminator: 7)
!12696 = !DILocation(line: 382, column: 701, scope: !12695)
!12697 = !DILocation(line: 382, column: 697, scope: !12695)
!12698 = !DILocation(line: 382, column: 695, scope: !12695)
!12699 = !DILocation(line: 382, column: 565, scope: !12695)
!12700 = !DILocation(line: 382, column: 707, scope: !12695)
!12701 = !DILocation(line: 382, column: 705, scope: !12695)
!12702 = !DILocation(line: 382, column: 563, scope: !12695)
!12703 = !DILocation(line: 382, column: 556, scope: !12695)
!12704 = !DILocation(line: 382, column: 551, scope: !12695)
!12705 = !DILocation(line: 382, column: 547, scope: !12695)
!12706 = !DILocation(line: 382, column: 554, scope: !12695)
!12707 = !DILocation(line: 382, column: 716, scope: !12695)
!12708 = !DILocation(line: 382, column: 541, scope: !12709)
!12709 = !DILexicalBlockFile(scope: !12657, file: !624, discriminator: 8)
!12710 = !DILocation(line: 382, column: 517, scope: !12709)
!12711 = distinct !{!12711, !12712}
!12712 = !DILocation(line: 382, column: 517, scope: !12653)
!12713 = !DILocation(line: 382, column: 725, scope: !12714)
!12714 = !DILexicalBlockFile(scope: !12653, file: !624, discriminator: 9)
!12715 = !DILocation(line: 382, column: 722, scope: !12714)
!12716 = !DILocation(line: 382, column: 746, scope: !12714)
!12717 = !DILocation(line: 382, column: 743, scope: !12714)
!12718 = !DILocation(line: 382, column: 770, scope: !12714)
!12719 = !DILocation(line: 382, column: 767, scope: !12714)
!12720 = !DILocation(line: 382, column: 787, scope: !12714)
!12721 = !DILocation(line: 382, column: 511, scope: !12722)
!12722 = !DILexicalBlockFile(scope: !12646, file: !624, discriminator: 10)
!12723 = !DILocation(line: 382, column: 486, scope: !12722)
!12724 = distinct !{!12724, !12725}
!12725 = !DILocation(line: 382, column: 486, scope: !12595)
!12726 = !DILocation(line: 382, column: 789, scope: !12727)
!12727 = !DILexicalBlockFile(scope: !12595, file: !624, discriminator: 11)
!12728 = distinct !DISubprogram(name: "blend_phoenix_12bit", scope: !624, file: !624, line: 395, type: !1531, isLocal: true, isDefinition: true, scopeLine: 395, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!12729 = !DILocalVariable(name: "_top", arg: 1, scope: !12728, file: !624, line: 395, type: !900)
!12730 = !DILocation(line: 395, column: 48, scope: !12728)
!12731 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !12728, file: !624, line: 395, type: !902)
!12732 = !DILocation(line: 395, column: 64, scope: !12728)
!12733 = !DILocalVariable(name: "_bottom", arg: 3, scope: !12728, file: !624, line: 395, type: !900)
!12734 = !DILocation(line: 395, column: 93, scope: !12728)
!12735 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !12728, file: !624, line: 395, type: !902)
!12736 = !DILocation(line: 395, column: 112, scope: !12728)
!12737 = !DILocalVariable(name: "_dst", arg: 5, scope: !12728, file: !624, line: 395, type: !329)
!12738 = !DILocation(line: 395, column: 138, scope: !12728)
!12739 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !12728, file: !624, line: 395, type: !902)
!12740 = !DILocation(line: 395, column: 154, scope: !12728)
!12741 = !DILocalVariable(name: "width", arg: 7, scope: !12728, file: !624, line: 395, type: !902)
!12742 = !DILocation(line: 395, column: 178, scope: !12728)
!12743 = !DILocalVariable(name: "height", arg: 8, scope: !12728, file: !624, line: 395, type: !902)
!12744 = !DILocation(line: 395, column: 195, scope: !12728)
!12745 = !DILocalVariable(name: "param", arg: 9, scope: !12728, file: !624, line: 395, type: !884)
!12746 = !DILocation(line: 395, column: 217, scope: !12728)
!12747 = !DILocalVariable(name: "values", arg: 10, scope: !12728, file: !624, line: 395, type: !544)
!12748 = !DILocation(line: 395, column: 232, scope: !12728)
!12749 = !DILocalVariable(name: "starty", arg: 11, scope: !12728, file: !624, line: 395, type: !238)
!12750 = !DILocation(line: 395, column: 244, scope: !12728)
!12751 = !DILocalVariable(name: "top", scope: !12728, file: !624, line: 395, type: !839)
!12752 = !DILocation(line: 395, column: 270, scope: !12728)
!12753 = !DILocation(line: 395, column: 293, scope: !12728)
!12754 = !DILocation(line: 395, column: 276, scope: !12728)
!12755 = !DILocalVariable(name: "bottom", scope: !12728, file: !624, line: 395, type: !839)
!12756 = !DILocation(line: 395, column: 315, scope: !12728)
!12757 = !DILocation(line: 395, column: 341, scope: !12728)
!12758 = !DILocation(line: 395, column: 324, scope: !12728)
!12759 = !DILocalVariable(name: "dst", scope: !12728, file: !624, line: 395, type: !843)
!12760 = !DILocation(line: 395, column: 360, scope: !12728)
!12761 = !DILocation(line: 395, column: 377, scope: !12728)
!12762 = !DILocation(line: 395, column: 366, scope: !12728)
!12763 = !DILocalVariable(name: "opacity", scope: !12728, file: !624, line: 395, type: !248)
!12764 = !DILocation(line: 395, column: 390, scope: !12728)
!12765 = !DILocation(line: 395, column: 400, scope: !12728)
!12766 = !DILocation(line: 395, column: 407, scope: !12728)
!12767 = !DILocalVariable(name: "i", scope: !12728, file: !624, line: 395, type: !238)
!12768 = !DILocation(line: 395, column: 420, scope: !12728)
!12769 = !DILocalVariable(name: "j", scope: !12728, file: !624, line: 395, type: !238)
!12770 = !DILocation(line: 395, column: 423, scope: !12728)
!12771 = !DILocation(line: 395, column: 439, scope: !12728)
!12772 = !DILocation(line: 395, column: 458, scope: !12728)
!12773 = !DILocation(line: 395, column: 480, scope: !12728)
!12774 = !DILocation(line: 395, column: 493, scope: !12775)
!12775 = distinct !DILexicalBlock(scope: !12728, file: !624, line: 395, column: 486)
!12776 = !DILocation(line: 395, column: 491, scope: !12775)
!12777 = !DILocation(line: 395, column: 498, scope: !12778)
!12778 = !DILexicalBlockFile(scope: !12779, file: !624, discriminator: 1)
!12779 = distinct !DILexicalBlock(scope: !12775, file: !624, line: 395, column: 486)
!12780 = !DILocation(line: 395, column: 502, scope: !12778)
!12781 = !DILocation(line: 395, column: 500, scope: !12778)
!12782 = !DILocation(line: 395, column: 486, scope: !12778)
!12783 = !DILocation(line: 395, column: 524, scope: !12784)
!12784 = !DILexicalBlockFile(scope: !12785, file: !624, discriminator: 2)
!12785 = distinct !DILexicalBlock(scope: !12786, file: !624, line: 395, column: 517)
!12786 = distinct !DILexicalBlock(scope: !12779, file: !624, line: 395, column: 515)
!12787 = !DILocation(line: 395, column: 522, scope: !12784)
!12788 = !DILocation(line: 395, column: 529, scope: !12789)
!12789 = !DILexicalBlockFile(scope: !12790, file: !624, discriminator: 3)
!12790 = distinct !DILexicalBlock(scope: !12785, file: !624, line: 395, column: 517)
!12791 = !DILocation(line: 395, column: 533, scope: !12789)
!12792 = !DILocation(line: 395, column: 531, scope: !12789)
!12793 = !DILocation(line: 395, column: 517, scope: !12789)
!12794 = !DILocation(line: 395, column: 560, scope: !12795)
!12795 = !DILexicalBlockFile(scope: !12796, file: !624, discriminator: 4)
!12796 = distinct !DILexicalBlock(scope: !12790, file: !624, line: 395, column: 545)
!12797 = !DILocation(line: 395, column: 556, scope: !12795)
!12798 = !DILocation(line: 395, column: 573, scope: !12795)
!12799 = !DILocation(line: 395, column: 569, scope: !12795)
!12800 = !DILocation(line: 395, column: 568, scope: !12795)
!12801 = !DILocation(line: 395, column: 587, scope: !12795)
!12802 = !DILocation(line: 395, column: 580, scope: !12795)
!12803 = !DILocation(line: 395, column: 579, scope: !12795)
!12804 = !DILocation(line: 395, column: 577, scope: !12795)
!12805 = !DILocation(line: 395, column: 601, scope: !12806)
!12806 = !DILexicalBlockFile(scope: !12796, file: !624, discriminator: 5)
!12807 = !DILocation(line: 395, column: 594, scope: !12806)
!12808 = !DILocation(line: 395, column: 593, scope: !12806)
!12809 = !DILocation(line: 395, column: 568, scope: !12806)
!12810 = !DILocation(line: 395, column: 612, scope: !12811)
!12811 = !DILexicalBlockFile(scope: !12796, file: !624, discriminator: 6)
!12812 = !DILocation(line: 395, column: 608, scope: !12811)
!12813 = !DILocation(line: 395, column: 607, scope: !12811)
!12814 = !DILocation(line: 395, column: 568, scope: !12811)
!12815 = !DILocation(line: 395, column: 568, scope: !12816)
!12816 = !DILexicalBlockFile(scope: !12796, file: !624, discriminator: 7)
!12817 = !DILocation(line: 395, column: 625, scope: !12816)
!12818 = !DILocation(line: 395, column: 621, scope: !12816)
!12819 = !DILocation(line: 395, column: 620, scope: !12816)
!12820 = !DILocation(line: 395, column: 639, scope: !12816)
!12821 = !DILocation(line: 395, column: 632, scope: !12816)
!12822 = !DILocation(line: 395, column: 631, scope: !12816)
!12823 = !DILocation(line: 395, column: 629, scope: !12816)
!12824 = !DILocation(line: 395, column: 650, scope: !12825)
!12825 = !DILexicalBlockFile(scope: !12796, file: !624, discriminator: 8)
!12826 = !DILocation(line: 395, column: 646, scope: !12825)
!12827 = !DILocation(line: 395, column: 645, scope: !12825)
!12828 = !DILocation(line: 395, column: 620, scope: !12825)
!12829 = !DILocation(line: 395, column: 664, scope: !12830)
!12830 = !DILexicalBlockFile(scope: !12796, file: !624, discriminator: 9)
!12831 = !DILocation(line: 395, column: 657, scope: !12830)
!12832 = !DILocation(line: 395, column: 656, scope: !12830)
!12833 = !DILocation(line: 395, column: 620, scope: !12830)
!12834 = !DILocation(line: 395, column: 620, scope: !12835)
!12835 = !DILexicalBlockFile(scope: !12796, file: !624, discriminator: 10)
!12836 = !DILocation(line: 395, column: 617, scope: !12835)
!12837 = !DILocation(line: 395, column: 669, scope: !12835)
!12838 = !DILocation(line: 395, column: 683, scope: !12835)
!12839 = !DILocation(line: 395, column: 679, scope: !12835)
!12840 = !DILocation(line: 395, column: 677, scope: !12835)
!12841 = !DILocation(line: 395, column: 565, scope: !12835)
!12842 = !DILocation(line: 395, column: 689, scope: !12835)
!12843 = !DILocation(line: 395, column: 687, scope: !12835)
!12844 = !DILocation(line: 395, column: 563, scope: !12835)
!12845 = !DILocation(line: 395, column: 556, scope: !12835)
!12846 = !DILocation(line: 395, column: 551, scope: !12835)
!12847 = !DILocation(line: 395, column: 547, scope: !12835)
!12848 = !DILocation(line: 395, column: 554, scope: !12835)
!12849 = !DILocation(line: 395, column: 698, scope: !12835)
!12850 = !DILocation(line: 395, column: 541, scope: !12851)
!12851 = !DILexicalBlockFile(scope: !12790, file: !624, discriminator: 11)
!12852 = !DILocation(line: 395, column: 517, scope: !12851)
!12853 = distinct !{!12853, !12854}
!12854 = !DILocation(line: 395, column: 517, scope: !12786)
!12855 = !DILocation(line: 395, column: 707, scope: !12856)
!12856 = !DILexicalBlockFile(scope: !12786, file: !624, discriminator: 12)
!12857 = !DILocation(line: 395, column: 704, scope: !12856)
!12858 = !DILocation(line: 395, column: 728, scope: !12856)
!12859 = !DILocation(line: 395, column: 725, scope: !12856)
!12860 = !DILocation(line: 395, column: 752, scope: !12856)
!12861 = !DILocation(line: 395, column: 749, scope: !12856)
!12862 = !DILocation(line: 395, column: 769, scope: !12856)
!12863 = !DILocation(line: 395, column: 511, scope: !12864)
!12864 = !DILexicalBlockFile(scope: !12779, file: !624, discriminator: 13)
!12865 = !DILocation(line: 395, column: 486, scope: !12864)
!12866 = distinct !{!12866, !12867}
!12867 = !DILocation(line: 395, column: 486, scope: !12728)
!12868 = !DILocation(line: 395, column: 771, scope: !12869)
!12869 = !DILexicalBlockFile(scope: !12728, file: !624, discriminator: 14)
!12870 = distinct !DISubprogram(name: "blend_pinlight_12bit", scope: !624, file: !624, line: 394, type: !1531, isLocal: true, isDefinition: true, scopeLine: 394, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!12871 = !DILocalVariable(name: "_top", arg: 1, scope: !12870, file: !624, line: 394, type: !900)
!12872 = !DILocation(line: 394, column: 49, scope: !12870)
!12873 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !12870, file: !624, line: 394, type: !902)
!12874 = !DILocation(line: 394, column: 65, scope: !12870)
!12875 = !DILocalVariable(name: "_bottom", arg: 3, scope: !12870, file: !624, line: 394, type: !900)
!12876 = !DILocation(line: 394, column: 94, scope: !12870)
!12877 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !12870, file: !624, line: 394, type: !902)
!12878 = !DILocation(line: 394, column: 113, scope: !12870)
!12879 = !DILocalVariable(name: "_dst", arg: 5, scope: !12870, file: !624, line: 394, type: !329)
!12880 = !DILocation(line: 394, column: 139, scope: !12870)
!12881 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !12870, file: !624, line: 394, type: !902)
!12882 = !DILocation(line: 394, column: 155, scope: !12870)
!12883 = !DILocalVariable(name: "width", arg: 7, scope: !12870, file: !624, line: 394, type: !902)
!12884 = !DILocation(line: 394, column: 179, scope: !12870)
!12885 = !DILocalVariable(name: "height", arg: 8, scope: !12870, file: !624, line: 394, type: !902)
!12886 = !DILocation(line: 394, column: 196, scope: !12870)
!12887 = !DILocalVariable(name: "param", arg: 9, scope: !12870, file: !624, line: 394, type: !884)
!12888 = !DILocation(line: 394, column: 218, scope: !12870)
!12889 = !DILocalVariable(name: "values", arg: 10, scope: !12870, file: !624, line: 394, type: !544)
!12890 = !DILocation(line: 394, column: 233, scope: !12870)
!12891 = !DILocalVariable(name: "starty", arg: 11, scope: !12870, file: !624, line: 394, type: !238)
!12892 = !DILocation(line: 394, column: 245, scope: !12870)
!12893 = !DILocalVariable(name: "top", scope: !12870, file: !624, line: 394, type: !839)
!12894 = !DILocation(line: 394, column: 271, scope: !12870)
!12895 = !DILocation(line: 394, column: 294, scope: !12870)
!12896 = !DILocation(line: 394, column: 277, scope: !12870)
!12897 = !DILocalVariable(name: "bottom", scope: !12870, file: !624, line: 394, type: !839)
!12898 = !DILocation(line: 394, column: 316, scope: !12870)
!12899 = !DILocation(line: 394, column: 342, scope: !12870)
!12900 = !DILocation(line: 394, column: 325, scope: !12870)
!12901 = !DILocalVariable(name: "dst", scope: !12870, file: !624, line: 394, type: !843)
!12902 = !DILocation(line: 394, column: 361, scope: !12870)
!12903 = !DILocation(line: 394, column: 378, scope: !12870)
!12904 = !DILocation(line: 394, column: 367, scope: !12870)
!12905 = !DILocalVariable(name: "opacity", scope: !12870, file: !624, line: 394, type: !248)
!12906 = !DILocation(line: 394, column: 391, scope: !12870)
!12907 = !DILocation(line: 394, column: 401, scope: !12870)
!12908 = !DILocation(line: 394, column: 408, scope: !12870)
!12909 = !DILocalVariable(name: "i", scope: !12870, file: !624, line: 394, type: !238)
!12910 = !DILocation(line: 394, column: 421, scope: !12870)
!12911 = !DILocalVariable(name: "j", scope: !12870, file: !624, line: 394, type: !238)
!12912 = !DILocation(line: 394, column: 424, scope: !12870)
!12913 = !DILocation(line: 394, column: 440, scope: !12870)
!12914 = !DILocation(line: 394, column: 459, scope: !12870)
!12915 = !DILocation(line: 394, column: 481, scope: !12870)
!12916 = !DILocation(line: 394, column: 494, scope: !12917)
!12917 = distinct !DILexicalBlock(scope: !12870, file: !624, line: 394, column: 487)
!12918 = !DILocation(line: 394, column: 492, scope: !12917)
!12919 = !DILocation(line: 394, column: 499, scope: !12920)
!12920 = !DILexicalBlockFile(scope: !12921, file: !624, discriminator: 1)
!12921 = distinct !DILexicalBlock(scope: !12917, file: !624, line: 394, column: 487)
!12922 = !DILocation(line: 394, column: 503, scope: !12920)
!12923 = !DILocation(line: 394, column: 501, scope: !12920)
!12924 = !DILocation(line: 394, column: 487, scope: !12920)
!12925 = !DILocation(line: 394, column: 525, scope: !12926)
!12926 = !DILexicalBlockFile(scope: !12927, file: !624, discriminator: 2)
!12927 = distinct !DILexicalBlock(scope: !12928, file: !624, line: 394, column: 518)
!12928 = distinct !DILexicalBlock(scope: !12921, file: !624, line: 394, column: 516)
!12929 = !DILocation(line: 394, column: 523, scope: !12926)
!12930 = !DILocation(line: 394, column: 530, scope: !12931)
!12931 = !DILexicalBlockFile(scope: !12932, file: !624, discriminator: 3)
!12932 = distinct !DILexicalBlock(scope: !12927, file: !624, line: 394, column: 518)
!12933 = !DILocation(line: 394, column: 534, scope: !12931)
!12934 = !DILocation(line: 394, column: 532, scope: !12931)
!12935 = !DILocation(line: 394, column: 518, scope: !12931)
!12936 = !DILocation(line: 394, column: 561, scope: !12937)
!12937 = !DILexicalBlockFile(scope: !12938, file: !624, discriminator: 4)
!12938 = distinct !DILexicalBlock(scope: !12932, file: !624, line: 394, column: 546)
!12939 = !DILocation(line: 394, column: 557, scope: !12937)
!12940 = !DILocation(line: 394, column: 576, scope: !12937)
!12941 = !DILocation(line: 394, column: 569, scope: !12937)
!12942 = !DILocation(line: 394, column: 579, scope: !12937)
!12943 = !DILocation(line: 394, column: 568, scope: !12937)
!12944 = !DILocation(line: 394, column: 595, scope: !12945)
!12945 = !DILexicalBlockFile(scope: !12938, file: !624, discriminator: 5)
!12946 = !DILocation(line: 394, column: 591, scope: !12945)
!12947 = !DILocation(line: 394, column: 590, scope: !12945)
!12948 = !DILocation(line: 394, column: 613, scope: !12945)
!12949 = !DILocation(line: 394, column: 606, scope: !12945)
!12950 = !DILocation(line: 394, column: 604, scope: !12945)
!12951 = !DILocation(line: 394, column: 599, scope: !12945)
!12952 = !DILocation(line: 394, column: 631, scope: !12953)
!12953 = !DILexicalBlockFile(scope: !12938, file: !624, discriminator: 6)
!12954 = !DILocation(line: 394, column: 624, scope: !12953)
!12955 = !DILocation(line: 394, column: 622, scope: !12953)
!12956 = !DILocation(line: 394, column: 590, scope: !12953)
!12957 = !DILocation(line: 394, column: 642, scope: !12958)
!12958 = !DILexicalBlockFile(scope: !12938, file: !624, discriminator: 7)
!12959 = !DILocation(line: 394, column: 638, scope: !12958)
!12960 = !DILocation(line: 394, column: 637, scope: !12958)
!12961 = !DILocation(line: 394, column: 590, scope: !12958)
!12962 = !DILocation(line: 394, column: 590, scope: !12963)
!12963 = !DILexicalBlockFile(scope: !12938, file: !624, discriminator: 8)
!12964 = !DILocation(line: 394, column: 568, scope: !12963)
!12965 = !DILocation(line: 394, column: 655, scope: !12966)
!12966 = !DILexicalBlockFile(scope: !12938, file: !624, discriminator: 9)
!12967 = !DILocation(line: 394, column: 651, scope: !12966)
!12968 = !DILocation(line: 394, column: 650, scope: !12966)
!12969 = !DILocation(line: 394, column: 674, scope: !12966)
!12970 = !DILocation(line: 394, column: 667, scope: !12966)
!12971 = !DILocation(line: 394, column: 677, scope: !12966)
!12972 = !DILocation(line: 394, column: 664, scope: !12966)
!12973 = !DILocation(line: 394, column: 659, scope: !12966)
!12974 = !DILocation(line: 394, column: 693, scope: !12975)
!12975 = !DILexicalBlockFile(scope: !12938, file: !624, discriminator: 10)
!12976 = !DILocation(line: 394, column: 689, scope: !12975)
!12977 = !DILocation(line: 394, column: 688, scope: !12975)
!12978 = !DILocation(line: 394, column: 650, scope: !12975)
!12979 = !DILocation(line: 394, column: 712, scope: !12980)
!12980 = !DILexicalBlockFile(scope: !12938, file: !624, discriminator: 11)
!12981 = !DILocation(line: 394, column: 705, scope: !12980)
!12982 = !DILocation(line: 394, column: 715, scope: !12980)
!12983 = !DILocation(line: 394, column: 702, scope: !12980)
!12984 = !DILocation(line: 394, column: 650, scope: !12980)
!12985 = !DILocation(line: 394, column: 650, scope: !12986)
!12986 = !DILexicalBlockFile(scope: !12938, file: !624, discriminator: 12)
!12987 = !DILocation(line: 394, column: 568, scope: !12986)
!12988 = !DILocation(line: 394, column: 568, scope: !12989)
!12989 = !DILexicalBlockFile(scope: !12938, file: !624, discriminator: 13)
!12990 = !DILocation(line: 394, column: 732, scope: !12989)
!12991 = !DILocation(line: 394, column: 728, scope: !12989)
!12992 = !DILocation(line: 394, column: 726, scope: !12989)
!12993 = !DILocation(line: 394, column: 566, scope: !12989)
!12994 = !DILocation(line: 394, column: 738, scope: !12989)
!12995 = !DILocation(line: 394, column: 736, scope: !12989)
!12996 = !DILocation(line: 394, column: 564, scope: !12989)
!12997 = !DILocation(line: 394, column: 557, scope: !12989)
!12998 = !DILocation(line: 394, column: 552, scope: !12989)
!12999 = !DILocation(line: 394, column: 548, scope: !12989)
!13000 = !DILocation(line: 394, column: 555, scope: !12989)
!13001 = !DILocation(line: 394, column: 747, scope: !12989)
!13002 = !DILocation(line: 394, column: 542, scope: !13003)
!13003 = !DILexicalBlockFile(scope: !12932, file: !624, discriminator: 14)
!13004 = !DILocation(line: 394, column: 518, scope: !13003)
!13005 = distinct !{!13005, !13006}
!13006 = !DILocation(line: 394, column: 518, scope: !12928)
!13007 = !DILocation(line: 394, column: 756, scope: !13008)
!13008 = !DILexicalBlockFile(scope: !12928, file: !624, discriminator: 15)
!13009 = !DILocation(line: 394, column: 753, scope: !13008)
!13010 = !DILocation(line: 394, column: 777, scope: !13008)
!13011 = !DILocation(line: 394, column: 774, scope: !13008)
!13012 = !DILocation(line: 394, column: 801, scope: !13008)
!13013 = !DILocation(line: 394, column: 798, scope: !13008)
!13014 = !DILocation(line: 394, column: 818, scope: !13008)
!13015 = !DILocation(line: 394, column: 512, scope: !13016)
!13016 = !DILexicalBlockFile(scope: !12921, file: !624, discriminator: 16)
!13017 = !DILocation(line: 394, column: 487, scope: !13016)
!13018 = distinct !{!13018, !13019}
!13019 = !DILocation(line: 394, column: 487, scope: !12870)
!13020 = !DILocation(line: 394, column: 820, scope: !13021)
!13021 = !DILexicalBlockFile(scope: !12870, file: !624, discriminator: 17)
!13022 = distinct !DISubprogram(name: "blend_reflect_12bit", scope: !624, file: !624, line: 396, type: !1531, isLocal: true, isDefinition: true, scopeLine: 396, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!13023 = !DILocalVariable(name: "_top", arg: 1, scope: !13022, file: !624, line: 396, type: !900)
!13024 = !DILocation(line: 396, column: 48, scope: !13022)
!13025 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !13022, file: !624, line: 396, type: !902)
!13026 = !DILocation(line: 396, column: 64, scope: !13022)
!13027 = !DILocalVariable(name: "_bottom", arg: 3, scope: !13022, file: !624, line: 396, type: !900)
!13028 = !DILocation(line: 396, column: 93, scope: !13022)
!13029 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !13022, file: !624, line: 396, type: !902)
!13030 = !DILocation(line: 396, column: 112, scope: !13022)
!13031 = !DILocalVariable(name: "_dst", arg: 5, scope: !13022, file: !624, line: 396, type: !329)
!13032 = !DILocation(line: 396, column: 138, scope: !13022)
!13033 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !13022, file: !624, line: 396, type: !902)
!13034 = !DILocation(line: 396, column: 154, scope: !13022)
!13035 = !DILocalVariable(name: "width", arg: 7, scope: !13022, file: !624, line: 396, type: !902)
!13036 = !DILocation(line: 396, column: 178, scope: !13022)
!13037 = !DILocalVariable(name: "height", arg: 8, scope: !13022, file: !624, line: 396, type: !902)
!13038 = !DILocation(line: 396, column: 195, scope: !13022)
!13039 = !DILocalVariable(name: "param", arg: 9, scope: !13022, file: !624, line: 396, type: !884)
!13040 = !DILocation(line: 396, column: 217, scope: !13022)
!13041 = !DILocalVariable(name: "values", arg: 10, scope: !13022, file: !624, line: 396, type: !544)
!13042 = !DILocation(line: 396, column: 232, scope: !13022)
!13043 = !DILocalVariable(name: "starty", arg: 11, scope: !13022, file: !624, line: 396, type: !238)
!13044 = !DILocation(line: 396, column: 244, scope: !13022)
!13045 = !DILocalVariable(name: "top", scope: !13022, file: !624, line: 396, type: !839)
!13046 = !DILocation(line: 396, column: 270, scope: !13022)
!13047 = !DILocation(line: 396, column: 293, scope: !13022)
!13048 = !DILocation(line: 396, column: 276, scope: !13022)
!13049 = !DILocalVariable(name: "bottom", scope: !13022, file: !624, line: 396, type: !839)
!13050 = !DILocation(line: 396, column: 315, scope: !13022)
!13051 = !DILocation(line: 396, column: 341, scope: !13022)
!13052 = !DILocation(line: 396, column: 324, scope: !13022)
!13053 = !DILocalVariable(name: "dst", scope: !13022, file: !624, line: 396, type: !843)
!13054 = !DILocation(line: 396, column: 360, scope: !13022)
!13055 = !DILocation(line: 396, column: 377, scope: !13022)
!13056 = !DILocation(line: 396, column: 366, scope: !13022)
!13057 = !DILocalVariable(name: "opacity", scope: !13022, file: !624, line: 396, type: !248)
!13058 = !DILocation(line: 396, column: 390, scope: !13022)
!13059 = !DILocation(line: 396, column: 400, scope: !13022)
!13060 = !DILocation(line: 396, column: 407, scope: !13022)
!13061 = !DILocalVariable(name: "i", scope: !13022, file: !624, line: 396, type: !238)
!13062 = !DILocation(line: 396, column: 420, scope: !13022)
!13063 = !DILocalVariable(name: "j", scope: !13022, file: !624, line: 396, type: !238)
!13064 = !DILocation(line: 396, column: 423, scope: !13022)
!13065 = !DILocation(line: 396, column: 439, scope: !13022)
!13066 = !DILocation(line: 396, column: 458, scope: !13022)
!13067 = !DILocation(line: 396, column: 480, scope: !13022)
!13068 = !DILocation(line: 396, column: 493, scope: !13069)
!13069 = distinct !DILexicalBlock(scope: !13022, file: !624, line: 396, column: 486)
!13070 = !DILocation(line: 396, column: 491, scope: !13069)
!13071 = !DILocation(line: 396, column: 498, scope: !13072)
!13072 = !DILexicalBlockFile(scope: !13073, file: !624, discriminator: 1)
!13073 = distinct !DILexicalBlock(scope: !13069, file: !624, line: 396, column: 486)
!13074 = !DILocation(line: 396, column: 502, scope: !13072)
!13075 = !DILocation(line: 396, column: 500, scope: !13072)
!13076 = !DILocation(line: 396, column: 486, scope: !13072)
!13077 = !DILocation(line: 396, column: 524, scope: !13078)
!13078 = !DILexicalBlockFile(scope: !13079, file: !624, discriminator: 2)
!13079 = distinct !DILexicalBlock(scope: !13080, file: !624, line: 396, column: 517)
!13080 = distinct !DILexicalBlock(scope: !13073, file: !624, line: 396, column: 515)
!13081 = !DILocation(line: 396, column: 522, scope: !13078)
!13082 = !DILocation(line: 396, column: 529, scope: !13083)
!13083 = !DILexicalBlockFile(scope: !13084, file: !624, discriminator: 3)
!13084 = distinct !DILexicalBlock(scope: !13079, file: !624, line: 396, column: 517)
!13085 = !DILocation(line: 396, column: 533, scope: !13083)
!13086 = !DILocation(line: 396, column: 531, scope: !13083)
!13087 = !DILocation(line: 396, column: 517, scope: !13083)
!13088 = !DILocation(line: 396, column: 560, scope: !13089)
!13089 = !DILexicalBlockFile(scope: !13090, file: !624, discriminator: 4)
!13090 = distinct !DILexicalBlock(scope: !13084, file: !624, line: 396, column: 545)
!13091 = !DILocation(line: 396, column: 556, scope: !13089)
!13092 = !DILocation(line: 396, column: 575, scope: !13089)
!13093 = !DILocation(line: 396, column: 568, scope: !13089)
!13094 = !DILocation(line: 396, column: 578, scope: !13089)
!13095 = !DILocation(line: 396, column: 567, scope: !13089)
!13096 = !DILocation(line: 396, column: 596, scope: !13097)
!13097 = !DILexicalBlockFile(scope: !13090, file: !624, discriminator: 5)
!13098 = !DILocation(line: 396, column: 589, scope: !13097)
!13099 = !DILocation(line: 396, column: 567, scope: !13097)
!13100 = !DILocation(line: 396, column: 617, scope: !13101)
!13101 = !DILexicalBlockFile(scope: !13090, file: !624, discriminator: 6)
!13102 = !DILocation(line: 396, column: 613, scope: !13101)
!13103 = !DILocation(line: 396, column: 626, scope: !13101)
!13104 = !DILocation(line: 396, column: 622, scope: !13101)
!13105 = !DILocation(line: 396, column: 620, scope: !13101)
!13106 = !DILocation(line: 396, column: 646, scope: !13101)
!13107 = !DILocation(line: 396, column: 639, scope: !13101)
!13108 = !DILocation(line: 396, column: 637, scope: !13101)
!13109 = !DILocation(line: 396, column: 629, scope: !13101)
!13110 = !DILocation(line: 396, column: 609, scope: !13101)
!13111 = !DILocation(line: 396, column: 602, scope: !13101)
!13112 = !DILocation(line: 396, column: 660, scope: !13113)
!13113 = !DILexicalBlockFile(scope: !13090, file: !624, discriminator: 7)
!13114 = !DILocation(line: 396, column: 656, scope: !13113)
!13115 = !DILocation(line: 396, column: 669, scope: !13113)
!13116 = !DILocation(line: 396, column: 665, scope: !13113)
!13117 = !DILocation(line: 396, column: 663, scope: !13113)
!13118 = !DILocation(line: 396, column: 689, scope: !13113)
!13119 = !DILocation(line: 396, column: 682, scope: !13113)
!13120 = !DILocation(line: 396, column: 680, scope: !13113)
!13121 = !DILocation(line: 396, column: 672, scope: !13113)
!13122 = !DILocation(line: 396, column: 602, scope: !13113)
!13123 = !DILocation(line: 396, column: 602, scope: !13124)
!13124 = !DILexicalBlockFile(scope: !13090, file: !624, discriminator: 8)
!13125 = !DILocation(line: 396, column: 602, scope: !13126)
!13126 = !DILexicalBlockFile(scope: !13090, file: !624, discriminator: 9)
!13127 = !DILocation(line: 396, column: 567, scope: !13126)
!13128 = !DILocation(line: 396, column: 567, scope: !13129)
!13129 = !DILexicalBlockFile(scope: !13090, file: !624, discriminator: 10)
!13130 = !DILocation(line: 396, column: 712, scope: !13129)
!13131 = !DILocation(line: 396, column: 708, scope: !13129)
!13132 = !DILocation(line: 396, column: 706, scope: !13129)
!13133 = !DILocation(line: 396, column: 565, scope: !13129)
!13134 = !DILocation(line: 396, column: 718, scope: !13129)
!13135 = !DILocation(line: 396, column: 716, scope: !13129)
!13136 = !DILocation(line: 396, column: 563, scope: !13129)
!13137 = !DILocation(line: 396, column: 556, scope: !13129)
!13138 = !DILocation(line: 396, column: 551, scope: !13129)
!13139 = !DILocation(line: 396, column: 547, scope: !13129)
!13140 = !DILocation(line: 396, column: 554, scope: !13129)
!13141 = !DILocation(line: 396, column: 727, scope: !13129)
!13142 = !DILocation(line: 396, column: 541, scope: !13143)
!13143 = !DILexicalBlockFile(scope: !13084, file: !624, discriminator: 11)
!13144 = !DILocation(line: 396, column: 517, scope: !13143)
!13145 = distinct !{!13145, !13146}
!13146 = !DILocation(line: 396, column: 517, scope: !13080)
!13147 = !DILocation(line: 396, column: 736, scope: !13148)
!13148 = !DILexicalBlockFile(scope: !13080, file: !624, discriminator: 12)
!13149 = !DILocation(line: 396, column: 733, scope: !13148)
!13150 = !DILocation(line: 396, column: 757, scope: !13148)
!13151 = !DILocation(line: 396, column: 754, scope: !13148)
!13152 = !DILocation(line: 396, column: 781, scope: !13148)
!13153 = !DILocation(line: 396, column: 778, scope: !13148)
!13154 = !DILocation(line: 396, column: 798, scope: !13148)
!13155 = !DILocation(line: 396, column: 511, scope: !13156)
!13156 = !DILexicalBlockFile(scope: !13073, file: !624, discriminator: 13)
!13157 = !DILocation(line: 396, column: 486, scope: !13156)
!13158 = distinct !{!13158, !13159}
!13159 = !DILocation(line: 396, column: 486, scope: !13022)
!13160 = !DILocation(line: 396, column: 800, scope: !13161)
!13161 = !DILexicalBlockFile(scope: !13022, file: !624, discriminator: 14)
!13162 = distinct !DISubprogram(name: "blend_screen_12bit", scope: !624, file: !624, line: 381, type: !1531, isLocal: true, isDefinition: true, scopeLine: 381, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!13163 = !DILocalVariable(name: "_top", arg: 1, scope: !13162, file: !624, line: 381, type: !900)
!13164 = !DILocation(line: 381, column: 47, scope: !13162)
!13165 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !13162, file: !624, line: 381, type: !902)
!13166 = !DILocation(line: 381, column: 63, scope: !13162)
!13167 = !DILocalVariable(name: "_bottom", arg: 3, scope: !13162, file: !624, line: 381, type: !900)
!13168 = !DILocation(line: 381, column: 92, scope: !13162)
!13169 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !13162, file: !624, line: 381, type: !902)
!13170 = !DILocation(line: 381, column: 111, scope: !13162)
!13171 = !DILocalVariable(name: "_dst", arg: 5, scope: !13162, file: !624, line: 381, type: !329)
!13172 = !DILocation(line: 381, column: 137, scope: !13162)
!13173 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !13162, file: !624, line: 381, type: !902)
!13174 = !DILocation(line: 381, column: 153, scope: !13162)
!13175 = !DILocalVariable(name: "width", arg: 7, scope: !13162, file: !624, line: 381, type: !902)
!13176 = !DILocation(line: 381, column: 177, scope: !13162)
!13177 = !DILocalVariable(name: "height", arg: 8, scope: !13162, file: !624, line: 381, type: !902)
!13178 = !DILocation(line: 381, column: 194, scope: !13162)
!13179 = !DILocalVariable(name: "param", arg: 9, scope: !13162, file: !624, line: 381, type: !884)
!13180 = !DILocation(line: 381, column: 216, scope: !13162)
!13181 = !DILocalVariable(name: "values", arg: 10, scope: !13162, file: !624, line: 381, type: !544)
!13182 = !DILocation(line: 381, column: 231, scope: !13162)
!13183 = !DILocalVariable(name: "starty", arg: 11, scope: !13162, file: !624, line: 381, type: !238)
!13184 = !DILocation(line: 381, column: 243, scope: !13162)
!13185 = !DILocalVariable(name: "top", scope: !13162, file: !624, line: 381, type: !839)
!13186 = !DILocation(line: 381, column: 269, scope: !13162)
!13187 = !DILocation(line: 381, column: 292, scope: !13162)
!13188 = !DILocation(line: 381, column: 275, scope: !13162)
!13189 = !DILocalVariable(name: "bottom", scope: !13162, file: !624, line: 381, type: !839)
!13190 = !DILocation(line: 381, column: 314, scope: !13162)
!13191 = !DILocation(line: 381, column: 340, scope: !13162)
!13192 = !DILocation(line: 381, column: 323, scope: !13162)
!13193 = !DILocalVariable(name: "dst", scope: !13162, file: !624, line: 381, type: !843)
!13194 = !DILocation(line: 381, column: 359, scope: !13162)
!13195 = !DILocation(line: 381, column: 376, scope: !13162)
!13196 = !DILocation(line: 381, column: 365, scope: !13162)
!13197 = !DILocalVariable(name: "opacity", scope: !13162, file: !624, line: 381, type: !248)
!13198 = !DILocation(line: 381, column: 389, scope: !13162)
!13199 = !DILocation(line: 381, column: 399, scope: !13162)
!13200 = !DILocation(line: 381, column: 406, scope: !13162)
!13201 = !DILocalVariable(name: "i", scope: !13162, file: !624, line: 381, type: !238)
!13202 = !DILocation(line: 381, column: 419, scope: !13162)
!13203 = !DILocalVariable(name: "j", scope: !13162, file: !624, line: 381, type: !238)
!13204 = !DILocation(line: 381, column: 422, scope: !13162)
!13205 = !DILocation(line: 381, column: 438, scope: !13162)
!13206 = !DILocation(line: 381, column: 457, scope: !13162)
!13207 = !DILocation(line: 381, column: 479, scope: !13162)
!13208 = !DILocation(line: 381, column: 492, scope: !13209)
!13209 = distinct !DILexicalBlock(scope: !13162, file: !624, line: 381, column: 485)
!13210 = !DILocation(line: 381, column: 490, scope: !13209)
!13211 = !DILocation(line: 381, column: 497, scope: !13212)
!13212 = !DILexicalBlockFile(scope: !13213, file: !624, discriminator: 1)
!13213 = distinct !DILexicalBlock(scope: !13209, file: !624, line: 381, column: 485)
!13214 = !DILocation(line: 381, column: 501, scope: !13212)
!13215 = !DILocation(line: 381, column: 499, scope: !13212)
!13216 = !DILocation(line: 381, column: 485, scope: !13212)
!13217 = !DILocation(line: 381, column: 523, scope: !13218)
!13218 = !DILexicalBlockFile(scope: !13219, file: !624, discriminator: 2)
!13219 = distinct !DILexicalBlock(scope: !13220, file: !624, line: 381, column: 516)
!13220 = distinct !DILexicalBlock(scope: !13213, file: !624, line: 381, column: 514)
!13221 = !DILocation(line: 381, column: 521, scope: !13218)
!13222 = !DILocation(line: 381, column: 528, scope: !13223)
!13223 = !DILexicalBlockFile(scope: !13224, file: !624, discriminator: 3)
!13224 = distinct !DILexicalBlock(scope: !13219, file: !624, line: 381, column: 516)
!13225 = !DILocation(line: 381, column: 532, scope: !13223)
!13226 = !DILocation(line: 381, column: 530, scope: !13223)
!13227 = !DILocation(line: 381, column: 516, scope: !13223)
!13228 = !DILocation(line: 381, column: 559, scope: !13229)
!13229 = !DILexicalBlockFile(scope: !13230, file: !624, discriminator: 4)
!13230 = distinct !DILexicalBlock(scope: !13224, file: !624, line: 381, column: 544)
!13231 = !DILocation(line: 381, column: 555, scope: !13229)
!13232 = !DILocation(line: 381, column: 594, scope: !13229)
!13233 = !DILocation(line: 381, column: 590, scope: !13229)
!13234 = !DILocation(line: 381, column: 589, scope: !13229)
!13235 = !DILocation(line: 381, column: 587, scope: !13229)
!13236 = !DILocation(line: 381, column: 617, scope: !13229)
!13237 = !DILocation(line: 381, column: 610, scope: !13229)
!13238 = !DILocation(line: 381, column: 609, scope: !13229)
!13239 = !DILocation(line: 381, column: 607, scope: !13229)
!13240 = !DILocation(line: 381, column: 599, scope: !13229)
!13241 = !DILocation(line: 381, column: 622, scope: !13229)
!13242 = !DILocation(line: 381, column: 578, scope: !13229)
!13243 = !DILocation(line: 381, column: 572, scope: !13229)
!13244 = !DILocation(line: 381, column: 638, scope: !13229)
!13245 = !DILocation(line: 381, column: 634, scope: !13229)
!13246 = !DILocation(line: 381, column: 632, scope: !13229)
!13247 = !DILocation(line: 381, column: 564, scope: !13229)
!13248 = !DILocation(line: 381, column: 644, scope: !13229)
!13249 = !DILocation(line: 381, column: 642, scope: !13229)
!13250 = !DILocation(line: 381, column: 562, scope: !13229)
!13251 = !DILocation(line: 381, column: 550, scope: !13229)
!13252 = !DILocation(line: 381, column: 546, scope: !13229)
!13253 = !DILocation(line: 381, column: 553, scope: !13229)
!13254 = !DILocation(line: 381, column: 653, scope: !13229)
!13255 = !DILocation(line: 381, column: 540, scope: !13256)
!13256 = !DILexicalBlockFile(scope: !13224, file: !624, discriminator: 5)
!13257 = !DILocation(line: 381, column: 516, scope: !13256)
!13258 = distinct !{!13258, !13259}
!13259 = !DILocation(line: 381, column: 516, scope: !13220)
!13260 = !DILocation(line: 381, column: 662, scope: !13261)
!13261 = !DILexicalBlockFile(scope: !13220, file: !624, discriminator: 6)
!13262 = !DILocation(line: 381, column: 659, scope: !13261)
!13263 = !DILocation(line: 381, column: 683, scope: !13261)
!13264 = !DILocation(line: 381, column: 680, scope: !13261)
!13265 = !DILocation(line: 381, column: 707, scope: !13261)
!13266 = !DILocation(line: 381, column: 704, scope: !13261)
!13267 = !DILocation(line: 381, column: 724, scope: !13261)
!13268 = !DILocation(line: 381, column: 510, scope: !13269)
!13269 = !DILexicalBlockFile(scope: !13213, file: !624, discriminator: 7)
!13270 = !DILocation(line: 381, column: 485, scope: !13269)
!13271 = distinct !{!13271, !13272}
!13272 = !DILocation(line: 381, column: 485, scope: !13162)
!13273 = !DILocation(line: 381, column: 726, scope: !13274)
!13274 = !DILexicalBlockFile(scope: !13162, file: !624, discriminator: 8)
!13275 = distinct !DISubprogram(name: "blend_softlight_12bit", scope: !624, file: !624, line: 392, type: !1531, isLocal: true, isDefinition: true, scopeLine: 392, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!13276 = !DILocalVariable(name: "_top", arg: 1, scope: !13275, file: !624, line: 392, type: !900)
!13277 = !DILocation(line: 392, column: 50, scope: !13275)
!13278 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !13275, file: !624, line: 392, type: !902)
!13279 = !DILocation(line: 392, column: 66, scope: !13275)
!13280 = !DILocalVariable(name: "_bottom", arg: 3, scope: !13275, file: !624, line: 392, type: !900)
!13281 = !DILocation(line: 392, column: 95, scope: !13275)
!13282 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !13275, file: !624, line: 392, type: !902)
!13283 = !DILocation(line: 392, column: 114, scope: !13275)
!13284 = !DILocalVariable(name: "_dst", arg: 5, scope: !13275, file: !624, line: 392, type: !329)
!13285 = !DILocation(line: 392, column: 140, scope: !13275)
!13286 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !13275, file: !624, line: 392, type: !902)
!13287 = !DILocation(line: 392, column: 156, scope: !13275)
!13288 = !DILocalVariable(name: "width", arg: 7, scope: !13275, file: !624, line: 392, type: !902)
!13289 = !DILocation(line: 392, column: 180, scope: !13275)
!13290 = !DILocalVariable(name: "height", arg: 8, scope: !13275, file: !624, line: 392, type: !902)
!13291 = !DILocation(line: 392, column: 197, scope: !13275)
!13292 = !DILocalVariable(name: "param", arg: 9, scope: !13275, file: !624, line: 392, type: !884)
!13293 = !DILocation(line: 392, column: 219, scope: !13275)
!13294 = !DILocalVariable(name: "values", arg: 10, scope: !13275, file: !624, line: 392, type: !544)
!13295 = !DILocation(line: 392, column: 234, scope: !13275)
!13296 = !DILocalVariable(name: "starty", arg: 11, scope: !13275, file: !624, line: 392, type: !238)
!13297 = !DILocation(line: 392, column: 246, scope: !13275)
!13298 = !DILocalVariable(name: "top", scope: !13275, file: !624, line: 392, type: !839)
!13299 = !DILocation(line: 392, column: 272, scope: !13275)
!13300 = !DILocation(line: 392, column: 295, scope: !13275)
!13301 = !DILocation(line: 392, column: 278, scope: !13275)
!13302 = !DILocalVariable(name: "bottom", scope: !13275, file: !624, line: 392, type: !839)
!13303 = !DILocation(line: 392, column: 317, scope: !13275)
!13304 = !DILocation(line: 392, column: 343, scope: !13275)
!13305 = !DILocation(line: 392, column: 326, scope: !13275)
!13306 = !DILocalVariable(name: "dst", scope: !13275, file: !624, line: 392, type: !843)
!13307 = !DILocation(line: 392, column: 362, scope: !13275)
!13308 = !DILocation(line: 392, column: 379, scope: !13275)
!13309 = !DILocation(line: 392, column: 368, scope: !13275)
!13310 = !DILocalVariable(name: "opacity", scope: !13275, file: !624, line: 392, type: !248)
!13311 = !DILocation(line: 392, column: 392, scope: !13275)
!13312 = !DILocation(line: 392, column: 402, scope: !13275)
!13313 = !DILocation(line: 392, column: 409, scope: !13275)
!13314 = !DILocalVariable(name: "i", scope: !13275, file: !624, line: 392, type: !238)
!13315 = !DILocation(line: 392, column: 422, scope: !13275)
!13316 = !DILocalVariable(name: "j", scope: !13275, file: !624, line: 392, type: !238)
!13317 = !DILocation(line: 392, column: 425, scope: !13275)
!13318 = !DILocation(line: 392, column: 441, scope: !13275)
!13319 = !DILocation(line: 392, column: 460, scope: !13275)
!13320 = !DILocation(line: 392, column: 482, scope: !13275)
!13321 = !DILocation(line: 392, column: 495, scope: !13322)
!13322 = distinct !DILexicalBlock(scope: !13275, file: !624, line: 392, column: 488)
!13323 = !DILocation(line: 392, column: 493, scope: !13322)
!13324 = !DILocation(line: 392, column: 500, scope: !13325)
!13325 = !DILexicalBlockFile(scope: !13326, file: !624, discriminator: 1)
!13326 = distinct !DILexicalBlock(scope: !13322, file: !624, line: 392, column: 488)
!13327 = !DILocation(line: 392, column: 504, scope: !13325)
!13328 = !DILocation(line: 392, column: 502, scope: !13325)
!13329 = !DILocation(line: 392, column: 488, scope: !13325)
!13330 = !DILocation(line: 392, column: 526, scope: !13331)
!13331 = !DILexicalBlockFile(scope: !13332, file: !624, discriminator: 2)
!13332 = distinct !DILexicalBlock(scope: !13333, file: !624, line: 392, column: 519)
!13333 = distinct !DILexicalBlock(scope: !13326, file: !624, line: 392, column: 517)
!13334 = !DILocation(line: 392, column: 524, scope: !13331)
!13335 = !DILocation(line: 392, column: 531, scope: !13336)
!13336 = !DILexicalBlockFile(scope: !13337, file: !624, discriminator: 3)
!13337 = distinct !DILexicalBlock(scope: !13332, file: !624, line: 392, column: 519)
!13338 = !DILocation(line: 392, column: 535, scope: !13336)
!13339 = !DILocation(line: 392, column: 533, scope: !13336)
!13340 = !DILocation(line: 392, column: 519, scope: !13336)
!13341 = !DILocation(line: 392, column: 562, scope: !13342)
!13342 = !DILexicalBlockFile(scope: !13343, file: !624, discriminator: 4)
!13343 = distinct !DILexicalBlock(scope: !13337, file: !624, line: 392, column: 547)
!13344 = !DILocation(line: 392, column: 558, scope: !13342)
!13345 = !DILocation(line: 392, column: 574, scope: !13342)
!13346 = !DILocation(line: 392, column: 570, scope: !13342)
!13347 = !DILocation(line: 392, column: 577, scope: !13342)
!13348 = !DILocation(line: 392, column: 569, scope: !13342)
!13349 = !DILocation(line: 392, column: 594, scope: !13350)
!13350 = !DILexicalBlockFile(scope: !13343, file: !624, discriminator: 5)
!13351 = !DILocation(line: 392, column: 587, scope: !13350)
!13352 = !DILocation(line: 392, column: 614, scope: !13350)
!13353 = !DILocation(line: 392, column: 607, scope: !13350)
!13354 = !DILocation(line: 392, column: 605, scope: !13350)
!13355 = !DILocation(line: 392, column: 599, scope: !13350)
!13356 = !DILocation(line: 392, column: 625, scope: !13350)
!13357 = !DILocation(line: 392, column: 621, scope: !13350)
!13358 = !DILocation(line: 392, column: 628, scope: !13350)
!13359 = !DILocation(line: 392, column: 618, scope: !13350)
!13360 = !DILocation(line: 392, column: 638, scope: !13350)
!13361 = !DILocation(line: 392, column: 668, scope: !13350)
!13362 = !DILocation(line: 392, column: 661, scope: !13350)
!13363 = !DILocation(line: 392, column: 671, scope: !13350)
!13364 = !DILocation(line: 392, column: 656, scope: !13350)
!13365 = !DILocation(line: 392, column: 681, scope: !13350)
!13366 = !DILocation(line: 392, column: 654, scope: !13350)
!13367 = !DILocation(line: 392, column: 647, scope: !13350)
!13368 = !DILocation(line: 392, column: 597, scope: !13350)
!13369 = !DILocation(line: 392, column: 569, scope: !13350)
!13370 = !DILocation(line: 392, column: 697, scope: !13371)
!13371 = !DILexicalBlockFile(scope: !13343, file: !624, discriminator: 6)
!13372 = !DILocation(line: 392, column: 690, scope: !13371)
!13373 = !DILocation(line: 392, column: 709, scope: !13371)
!13374 = !DILocation(line: 392, column: 702, scope: !13371)
!13375 = !DILocation(line: 392, column: 729, scope: !13371)
!13376 = !DILocation(line: 392, column: 725, scope: !13371)
!13377 = !DILocation(line: 392, column: 723, scope: !13371)
!13378 = !DILocation(line: 392, column: 733, scope: !13371)
!13379 = !DILocation(line: 392, column: 712, scope: !13371)
!13380 = !DILocation(line: 392, column: 764, scope: !13371)
!13381 = !DILocation(line: 392, column: 757, scope: !13371)
!13382 = !DILocation(line: 392, column: 767, scope: !13371)
!13383 = !DILocation(line: 392, column: 752, scope: !13371)
!13384 = !DILocation(line: 392, column: 776, scope: !13371)
!13385 = !DILocation(line: 392, column: 750, scope: !13371)
!13386 = !DILocation(line: 392, column: 743, scope: !13371)
!13387 = !DILocation(line: 392, column: 700, scope: !13371)
!13388 = !DILocation(line: 392, column: 569, scope: !13371)
!13389 = !DILocation(line: 392, column: 569, scope: !13390)
!13390 = !DILexicalBlockFile(scope: !13343, file: !624, discriminator: 7)
!13391 = !DILocation(line: 392, column: 790, scope: !13390)
!13392 = !DILocation(line: 392, column: 786, scope: !13390)
!13393 = !DILocation(line: 392, column: 784, scope: !13390)
!13394 = !DILocation(line: 392, column: 796, scope: !13390)
!13395 = !DILocation(line: 392, column: 794, scope: !13390)
!13396 = !DILocation(line: 392, column: 565, scope: !13390)
!13397 = !DILocation(line: 392, column: 558, scope: !13390)
!13398 = !DILocation(line: 392, column: 553, scope: !13390)
!13399 = !DILocation(line: 392, column: 549, scope: !13390)
!13400 = !DILocation(line: 392, column: 556, scope: !13390)
!13401 = !DILocation(line: 392, column: 805, scope: !13390)
!13402 = !DILocation(line: 392, column: 543, scope: !13403)
!13403 = !DILexicalBlockFile(scope: !13337, file: !624, discriminator: 8)
!13404 = !DILocation(line: 392, column: 519, scope: !13403)
!13405 = distinct !{!13405, !13406}
!13406 = !DILocation(line: 392, column: 519, scope: !13333)
!13407 = !DILocation(line: 392, column: 814, scope: !13408)
!13408 = !DILexicalBlockFile(scope: !13333, file: !624, discriminator: 9)
!13409 = !DILocation(line: 392, column: 811, scope: !13408)
!13410 = !DILocation(line: 392, column: 835, scope: !13408)
!13411 = !DILocation(line: 392, column: 832, scope: !13408)
!13412 = !DILocation(line: 392, column: 859, scope: !13408)
!13413 = !DILocation(line: 392, column: 856, scope: !13408)
!13414 = !DILocation(line: 392, column: 876, scope: !13408)
!13415 = !DILocation(line: 392, column: 513, scope: !13416)
!13416 = !DILexicalBlockFile(scope: !13326, file: !624, discriminator: 10)
!13417 = !DILocation(line: 392, column: 488, scope: !13416)
!13418 = distinct !{!13418, !13419}
!13419 = !DILocation(line: 392, column: 488, scope: !13275)
!13420 = !DILocation(line: 392, column: 878, scope: !13421)
!13421 = !DILexicalBlockFile(scope: !13275, file: !624, discriminator: 11)
!13422 = distinct !DISubprogram(name: "blend_subtract_12bit", scope: !624, file: !624, line: 374, type: !1531, isLocal: true, isDefinition: true, scopeLine: 374, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!13423 = !DILocalVariable(name: "_top", arg: 1, scope: !13422, file: !624, line: 374, type: !900)
!13424 = !DILocation(line: 374, column: 49, scope: !13422)
!13425 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !13422, file: !624, line: 374, type: !902)
!13426 = !DILocation(line: 374, column: 65, scope: !13422)
!13427 = !DILocalVariable(name: "_bottom", arg: 3, scope: !13422, file: !624, line: 374, type: !900)
!13428 = !DILocation(line: 374, column: 94, scope: !13422)
!13429 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !13422, file: !624, line: 374, type: !902)
!13430 = !DILocation(line: 374, column: 113, scope: !13422)
!13431 = !DILocalVariable(name: "_dst", arg: 5, scope: !13422, file: !624, line: 374, type: !329)
!13432 = !DILocation(line: 374, column: 139, scope: !13422)
!13433 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !13422, file: !624, line: 374, type: !902)
!13434 = !DILocation(line: 374, column: 155, scope: !13422)
!13435 = !DILocalVariable(name: "width", arg: 7, scope: !13422, file: !624, line: 374, type: !902)
!13436 = !DILocation(line: 374, column: 179, scope: !13422)
!13437 = !DILocalVariable(name: "height", arg: 8, scope: !13422, file: !624, line: 374, type: !902)
!13438 = !DILocation(line: 374, column: 196, scope: !13422)
!13439 = !DILocalVariable(name: "param", arg: 9, scope: !13422, file: !624, line: 374, type: !884)
!13440 = !DILocation(line: 374, column: 218, scope: !13422)
!13441 = !DILocalVariable(name: "values", arg: 10, scope: !13422, file: !624, line: 374, type: !544)
!13442 = !DILocation(line: 374, column: 233, scope: !13422)
!13443 = !DILocalVariable(name: "starty", arg: 11, scope: !13422, file: !624, line: 374, type: !238)
!13444 = !DILocation(line: 374, column: 245, scope: !13422)
!13445 = !DILocalVariable(name: "top", scope: !13422, file: !624, line: 374, type: !839)
!13446 = !DILocation(line: 374, column: 271, scope: !13422)
!13447 = !DILocation(line: 374, column: 294, scope: !13422)
!13448 = !DILocation(line: 374, column: 277, scope: !13422)
!13449 = !DILocalVariable(name: "bottom", scope: !13422, file: !624, line: 374, type: !839)
!13450 = !DILocation(line: 374, column: 316, scope: !13422)
!13451 = !DILocation(line: 374, column: 342, scope: !13422)
!13452 = !DILocation(line: 374, column: 325, scope: !13422)
!13453 = !DILocalVariable(name: "dst", scope: !13422, file: !624, line: 374, type: !843)
!13454 = !DILocation(line: 374, column: 361, scope: !13422)
!13455 = !DILocation(line: 374, column: 378, scope: !13422)
!13456 = !DILocation(line: 374, column: 367, scope: !13422)
!13457 = !DILocalVariable(name: "opacity", scope: !13422, file: !624, line: 374, type: !248)
!13458 = !DILocation(line: 374, column: 391, scope: !13422)
!13459 = !DILocation(line: 374, column: 401, scope: !13422)
!13460 = !DILocation(line: 374, column: 408, scope: !13422)
!13461 = !DILocalVariable(name: "i", scope: !13422, file: !624, line: 374, type: !238)
!13462 = !DILocation(line: 374, column: 421, scope: !13422)
!13463 = !DILocalVariable(name: "j", scope: !13422, file: !624, line: 374, type: !238)
!13464 = !DILocation(line: 374, column: 424, scope: !13422)
!13465 = !DILocation(line: 374, column: 440, scope: !13422)
!13466 = !DILocation(line: 374, column: 459, scope: !13422)
!13467 = !DILocation(line: 374, column: 481, scope: !13422)
!13468 = !DILocation(line: 374, column: 494, scope: !13469)
!13469 = distinct !DILexicalBlock(scope: !13422, file: !624, line: 374, column: 487)
!13470 = !DILocation(line: 374, column: 492, scope: !13469)
!13471 = !DILocation(line: 374, column: 499, scope: !13472)
!13472 = !DILexicalBlockFile(scope: !13473, file: !624, discriminator: 1)
!13473 = distinct !DILexicalBlock(scope: !13469, file: !624, line: 374, column: 487)
!13474 = !DILocation(line: 374, column: 503, scope: !13472)
!13475 = !DILocation(line: 374, column: 501, scope: !13472)
!13476 = !DILocation(line: 374, column: 487, scope: !13472)
!13477 = !DILocation(line: 374, column: 525, scope: !13478)
!13478 = !DILexicalBlockFile(scope: !13479, file: !624, discriminator: 2)
!13479 = distinct !DILexicalBlock(scope: !13480, file: !624, line: 374, column: 518)
!13480 = distinct !DILexicalBlock(scope: !13473, file: !624, line: 374, column: 516)
!13481 = !DILocation(line: 374, column: 523, scope: !13478)
!13482 = !DILocation(line: 374, column: 530, scope: !13483)
!13483 = !DILexicalBlockFile(scope: !13484, file: !624, discriminator: 3)
!13484 = distinct !DILexicalBlock(scope: !13479, file: !624, line: 374, column: 518)
!13485 = !DILocation(line: 374, column: 534, scope: !13483)
!13486 = !DILocation(line: 374, column: 532, scope: !13483)
!13487 = !DILocation(line: 374, column: 518, scope: !13483)
!13488 = !DILocation(line: 374, column: 561, scope: !13489)
!13489 = !DILexicalBlockFile(scope: !13490, file: !624, discriminator: 4)
!13490 = distinct !DILexicalBlock(scope: !13484, file: !624, line: 374, column: 546)
!13491 = !DILocation(line: 374, column: 557, scope: !13489)
!13492 = !DILocation(line: 374, column: 580, scope: !13489)
!13493 = !DILocation(line: 374, column: 576, scope: !13489)
!13494 = !DILocation(line: 374, column: 592, scope: !13489)
!13495 = !DILocation(line: 374, column: 585, scope: !13489)
!13496 = !DILocation(line: 374, column: 583, scope: !13489)
!13497 = !DILocation(line: 374, column: 573, scope: !13489)
!13498 = !DILocation(line: 374, column: 569, scope: !13489)
!13499 = !DILocation(line: 374, column: 569, scope: !13500)
!13500 = !DILexicalBlockFile(scope: !13490, file: !624, discriminator: 5)
!13501 = !DILocation(line: 374, column: 609, scope: !13502)
!13502 = !DILexicalBlockFile(scope: !13490, file: !624, discriminator: 6)
!13503 = !DILocation(line: 374, column: 605, scope: !13502)
!13504 = !DILocation(line: 374, column: 621, scope: !13502)
!13505 = !DILocation(line: 374, column: 614, scope: !13502)
!13506 = !DILocation(line: 374, column: 612, scope: !13502)
!13507 = !DILocation(line: 374, column: 569, scope: !13502)
!13508 = !DILocation(line: 374, column: 569, scope: !13509)
!13509 = !DILexicalBlockFile(scope: !13490, file: !624, discriminator: 7)
!13510 = !DILocation(line: 374, column: 633, scope: !13509)
!13511 = !DILocation(line: 374, column: 629, scope: !13509)
!13512 = !DILocation(line: 374, column: 627, scope: !13509)
!13513 = !DILocation(line: 374, column: 566, scope: !13509)
!13514 = !DILocation(line: 374, column: 639, scope: !13509)
!13515 = !DILocation(line: 374, column: 637, scope: !13509)
!13516 = !DILocation(line: 374, column: 564, scope: !13509)
!13517 = !DILocation(line: 374, column: 557, scope: !13509)
!13518 = !DILocation(line: 374, column: 552, scope: !13509)
!13519 = !DILocation(line: 374, column: 548, scope: !13509)
!13520 = !DILocation(line: 374, column: 555, scope: !13509)
!13521 = !DILocation(line: 374, column: 648, scope: !13509)
!13522 = !DILocation(line: 374, column: 542, scope: !13523)
!13523 = !DILexicalBlockFile(scope: !13484, file: !624, discriminator: 8)
!13524 = !DILocation(line: 374, column: 518, scope: !13523)
!13525 = distinct !{!13525, !13526}
!13526 = !DILocation(line: 374, column: 518, scope: !13480)
!13527 = !DILocation(line: 374, column: 657, scope: !13528)
!13528 = !DILexicalBlockFile(scope: !13480, file: !624, discriminator: 9)
!13529 = !DILocation(line: 374, column: 654, scope: !13528)
!13530 = !DILocation(line: 374, column: 678, scope: !13528)
!13531 = !DILocation(line: 374, column: 675, scope: !13528)
!13532 = !DILocation(line: 374, column: 702, scope: !13528)
!13533 = !DILocation(line: 374, column: 699, scope: !13528)
!13534 = !DILocation(line: 374, column: 719, scope: !13528)
!13535 = !DILocation(line: 374, column: 512, scope: !13536)
!13536 = !DILexicalBlockFile(scope: !13473, file: !624, discriminator: 10)
!13537 = !DILocation(line: 374, column: 487, scope: !13536)
!13538 = distinct !{!13538, !13539}
!13539 = !DILocation(line: 374, column: 487, scope: !13422)
!13540 = !DILocation(line: 374, column: 721, scope: !13541)
!13541 = !DILexicalBlockFile(scope: !13422, file: !624, discriminator: 11)
!13542 = distinct !DISubprogram(name: "blend_vividlight_12bit", scope: !624, file: !624, line: 401, type: !1531, isLocal: true, isDefinition: true, scopeLine: 401, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!13543 = !DILocalVariable(name: "_top", arg: 1, scope: !13542, file: !624, line: 401, type: !900)
!13544 = !DILocation(line: 401, column: 51, scope: !13542)
!13545 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !13542, file: !624, line: 401, type: !902)
!13546 = !DILocation(line: 401, column: 67, scope: !13542)
!13547 = !DILocalVariable(name: "_bottom", arg: 3, scope: !13542, file: !624, line: 401, type: !900)
!13548 = !DILocation(line: 401, column: 96, scope: !13542)
!13549 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !13542, file: !624, line: 401, type: !902)
!13550 = !DILocation(line: 401, column: 115, scope: !13542)
!13551 = !DILocalVariable(name: "_dst", arg: 5, scope: !13542, file: !624, line: 401, type: !329)
!13552 = !DILocation(line: 401, column: 141, scope: !13542)
!13553 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !13542, file: !624, line: 401, type: !902)
!13554 = !DILocation(line: 401, column: 157, scope: !13542)
!13555 = !DILocalVariable(name: "width", arg: 7, scope: !13542, file: !624, line: 401, type: !902)
!13556 = !DILocation(line: 401, column: 181, scope: !13542)
!13557 = !DILocalVariable(name: "height", arg: 8, scope: !13542, file: !624, line: 401, type: !902)
!13558 = !DILocation(line: 401, column: 198, scope: !13542)
!13559 = !DILocalVariable(name: "param", arg: 9, scope: !13542, file: !624, line: 401, type: !884)
!13560 = !DILocation(line: 401, column: 220, scope: !13542)
!13561 = !DILocalVariable(name: "values", arg: 10, scope: !13542, file: !624, line: 401, type: !544)
!13562 = !DILocation(line: 401, column: 235, scope: !13542)
!13563 = !DILocalVariable(name: "starty", arg: 11, scope: !13542, file: !624, line: 401, type: !238)
!13564 = !DILocation(line: 401, column: 247, scope: !13542)
!13565 = !DILocalVariable(name: "top", scope: !13542, file: !624, line: 401, type: !839)
!13566 = !DILocation(line: 401, column: 273, scope: !13542)
!13567 = !DILocation(line: 401, column: 296, scope: !13542)
!13568 = !DILocation(line: 401, column: 279, scope: !13542)
!13569 = !DILocalVariable(name: "bottom", scope: !13542, file: !624, line: 401, type: !839)
!13570 = !DILocation(line: 401, column: 318, scope: !13542)
!13571 = !DILocation(line: 401, column: 344, scope: !13542)
!13572 = !DILocation(line: 401, column: 327, scope: !13542)
!13573 = !DILocalVariable(name: "dst", scope: !13542, file: !624, line: 401, type: !843)
!13574 = !DILocation(line: 401, column: 363, scope: !13542)
!13575 = !DILocation(line: 401, column: 380, scope: !13542)
!13576 = !DILocation(line: 401, column: 369, scope: !13542)
!13577 = !DILocalVariable(name: "opacity", scope: !13542, file: !624, line: 401, type: !248)
!13578 = !DILocation(line: 401, column: 393, scope: !13542)
!13579 = !DILocation(line: 401, column: 403, scope: !13542)
!13580 = !DILocation(line: 401, column: 410, scope: !13542)
!13581 = !DILocalVariable(name: "i", scope: !13542, file: !624, line: 401, type: !238)
!13582 = !DILocation(line: 401, column: 423, scope: !13542)
!13583 = !DILocalVariable(name: "j", scope: !13542, file: !624, line: 401, type: !238)
!13584 = !DILocation(line: 401, column: 426, scope: !13542)
!13585 = !DILocation(line: 401, column: 442, scope: !13542)
!13586 = !DILocation(line: 401, column: 461, scope: !13542)
!13587 = !DILocation(line: 401, column: 483, scope: !13542)
!13588 = !DILocation(line: 401, column: 496, scope: !13589)
!13589 = distinct !DILexicalBlock(scope: !13542, file: !624, line: 401, column: 489)
!13590 = !DILocation(line: 401, column: 494, scope: !13589)
!13591 = !DILocation(line: 401, column: 501, scope: !13592)
!13592 = !DILexicalBlockFile(scope: !13593, file: !624, discriminator: 1)
!13593 = distinct !DILexicalBlock(scope: !13589, file: !624, line: 401, column: 489)
!13594 = !DILocation(line: 401, column: 505, scope: !13592)
!13595 = !DILocation(line: 401, column: 503, scope: !13592)
!13596 = !DILocation(line: 401, column: 489, scope: !13592)
!13597 = !DILocation(line: 401, column: 527, scope: !13598)
!13598 = !DILexicalBlockFile(scope: !13599, file: !624, discriminator: 2)
!13599 = distinct !DILexicalBlock(scope: !13600, file: !624, line: 401, column: 520)
!13600 = distinct !DILexicalBlock(scope: !13593, file: !624, line: 401, column: 518)
!13601 = !DILocation(line: 401, column: 525, scope: !13598)
!13602 = !DILocation(line: 401, column: 532, scope: !13603)
!13603 = !DILexicalBlockFile(scope: !13604, file: !624, discriminator: 3)
!13604 = distinct !DILexicalBlock(scope: !13599, file: !624, line: 401, column: 520)
!13605 = !DILocation(line: 401, column: 536, scope: !13603)
!13606 = !DILocation(line: 401, column: 534, scope: !13603)
!13607 = !DILocation(line: 401, column: 520, scope: !13603)
!13608 = !DILocation(line: 401, column: 563, scope: !13609)
!13609 = !DILexicalBlockFile(scope: !13610, file: !624, discriminator: 4)
!13610 = distinct !DILexicalBlock(scope: !13604, file: !624, line: 401, column: 548)
!13611 = !DILocation(line: 401, column: 559, scope: !13609)
!13612 = !DILocation(line: 401, column: 575, scope: !13609)
!13613 = !DILocation(line: 401, column: 571, scope: !13609)
!13614 = !DILocation(line: 401, column: 578, scope: !13609)
!13615 = !DILocation(line: 401, column: 570, scope: !13609)
!13616 = !DILocation(line: 401, column: 599, scope: !13617)
!13617 = !DILexicalBlockFile(scope: !13610, file: !624, discriminator: 5)
!13618 = !DILocation(line: 401, column: 595, scope: !13617)
!13619 = !DILocation(line: 401, column: 593, scope: !13617)
!13620 = !DILocation(line: 401, column: 603, scope: !13617)
!13621 = !DILocation(line: 401, column: 589, scope: !13617)
!13622 = !DILocation(line: 401, column: 620, scope: !13623)
!13623 = !DILexicalBlockFile(scope: !13610, file: !624, discriminator: 6)
!13624 = !DILocation(line: 401, column: 616, scope: !13623)
!13625 = !DILocation(line: 401, column: 614, scope: !13623)
!13626 = !DILocation(line: 401, column: 589, scope: !13623)
!13627 = !DILocation(line: 401, column: 658, scope: !13628)
!13628 = !DILexicalBlockFile(scope: !13610, file: !624, discriminator: 7)
!13629 = !DILocation(line: 401, column: 651, scope: !13628)
!13630 = !DILocation(line: 401, column: 650, scope: !13628)
!13631 = !DILocation(line: 401, column: 648, scope: !13628)
!13632 = !DILocation(line: 401, column: 663, scope: !13628)
!13633 = !DILocation(line: 401, column: 681, scope: !13628)
!13634 = !DILocation(line: 401, column: 677, scope: !13628)
!13635 = !DILocation(line: 401, column: 675, scope: !13628)
!13636 = !DILocation(line: 401, column: 670, scope: !13628)
!13637 = !DILocation(line: 401, column: 639, scope: !13628)
!13638 = !DILocation(line: 401, column: 631, scope: !13628)
!13639 = !DILocation(line: 401, column: 627, scope: !13628)
!13640 = !DILocation(line: 401, column: 627, scope: !13641)
!13641 = !DILexicalBlockFile(scope: !13610, file: !624, discriminator: 8)
!13642 = !DILocation(line: 401, column: 719, scope: !13643)
!13643 = !DILexicalBlockFile(scope: !13610, file: !624, discriminator: 9)
!13644 = !DILocation(line: 401, column: 712, scope: !13643)
!13645 = !DILocation(line: 401, column: 711, scope: !13643)
!13646 = !DILocation(line: 401, column: 709, scope: !13643)
!13647 = !DILocation(line: 401, column: 724, scope: !13643)
!13648 = !DILocation(line: 401, column: 742, scope: !13643)
!13649 = !DILocation(line: 401, column: 738, scope: !13643)
!13650 = !DILocation(line: 401, column: 736, scope: !13643)
!13651 = !DILocation(line: 401, column: 731, scope: !13643)
!13652 = !DILocation(line: 401, column: 700, scope: !13643)
!13653 = !DILocation(line: 401, column: 627, scope: !13643)
!13654 = !DILocation(line: 401, column: 627, scope: !13655)
!13655 = !DILexicalBlockFile(scope: !13610, file: !624, discriminator: 10)
!13656 = !DILocation(line: 401, column: 589, scope: !13655)
!13657 = !DILocation(line: 401, column: 589, scope: !13658)
!13658 = !DILexicalBlockFile(scope: !13610, file: !624, discriminator: 11)
!13659 = !DILocation(line: 401, column: 570, scope: !13658)
!13660 = !DILocation(line: 401, column: 763, scope: !13661)
!13661 = !DILexicalBlockFile(scope: !13610, file: !624, discriminator: 12)
!13662 = !DILocation(line: 401, column: 759, scope: !13661)
!13663 = !DILocation(line: 401, column: 766, scope: !13661)
!13664 = !DILocation(line: 401, column: 756, scope: !13661)
!13665 = !DILocation(line: 401, column: 775, scope: !13661)
!13666 = !DILocation(line: 401, column: 752, scope: !13661)
!13667 = !DILocation(line: 401, column: 796, scope: !13668)
!13668 = !DILexicalBlockFile(scope: !13610, file: !624, discriminator: 13)
!13669 = !DILocation(line: 401, column: 792, scope: !13668)
!13670 = !DILocation(line: 401, column: 799, scope: !13668)
!13671 = !DILocation(line: 401, column: 789, scope: !13668)
!13672 = !DILocation(line: 401, column: 752, scope: !13668)
!13673 = !DILocation(line: 401, column: 831, scope: !13674)
!13674 = !DILexicalBlockFile(scope: !13610, file: !624, discriminator: 14)
!13675 = !DILocation(line: 401, column: 824, scope: !13674)
!13676 = !DILocation(line: 401, column: 823, scope: !13674)
!13677 = !DILocation(line: 401, column: 835, scope: !13674)
!13678 = !DILocation(line: 401, column: 862, scope: !13674)
!13679 = !DILocation(line: 401, column: 858, scope: !13674)
!13680 = !DILocation(line: 401, column: 865, scope: !13674)
!13681 = !DILocation(line: 401, column: 855, scope: !13674)
!13682 = !DILocation(line: 401, column: 850, scope: !13674)
!13683 = !DILocation(line: 401, column: 842, scope: !13674)
!13684 = !DILocation(line: 401, column: 818, scope: !13674)
!13685 = !DILocation(line: 401, column: 811, scope: !13674)
!13686 = !DILocation(line: 401, column: 890, scope: !13687)
!13687 = !DILexicalBlockFile(scope: !13610, file: !624, discriminator: 15)
!13688 = !DILocation(line: 401, column: 883, scope: !13687)
!13689 = !DILocation(line: 401, column: 882, scope: !13687)
!13690 = !DILocation(line: 401, column: 894, scope: !13687)
!13691 = !DILocation(line: 401, column: 921, scope: !13687)
!13692 = !DILocation(line: 401, column: 917, scope: !13687)
!13693 = !DILocation(line: 401, column: 924, scope: !13687)
!13694 = !DILocation(line: 401, column: 914, scope: !13687)
!13695 = !DILocation(line: 401, column: 909, scope: !13687)
!13696 = !DILocation(line: 401, column: 901, scope: !13687)
!13697 = !DILocation(line: 401, column: 811, scope: !13687)
!13698 = !DILocation(line: 401, column: 811, scope: !13699)
!13699 = !DILexicalBlockFile(scope: !13610, file: !624, discriminator: 16)
!13700 = !DILocation(line: 401, column: 811, scope: !13701)
!13701 = !DILexicalBlockFile(scope: !13610, file: !624, discriminator: 17)
!13702 = !DILocation(line: 401, column: 752, scope: !13701)
!13703 = !DILocation(line: 401, column: 752, scope: !13704)
!13704 = !DILexicalBlockFile(scope: !13610, file: !624, discriminator: 18)
!13705 = !DILocation(line: 401, column: 570, scope: !13704)
!13706 = !DILocation(line: 401, column: 570, scope: !13707)
!13707 = !DILexicalBlockFile(scope: !13610, file: !624, discriminator: 19)
!13708 = !DILocation(line: 401, column: 954, scope: !13707)
!13709 = !DILocation(line: 401, column: 950, scope: !13707)
!13710 = !DILocation(line: 401, column: 948, scope: !13707)
!13711 = !DILocation(line: 401, column: 568, scope: !13707)
!13712 = !DILocation(line: 401, column: 960, scope: !13707)
!13713 = !DILocation(line: 401, column: 958, scope: !13707)
!13714 = !DILocation(line: 401, column: 566, scope: !13707)
!13715 = !DILocation(line: 401, column: 559, scope: !13707)
!13716 = !DILocation(line: 401, column: 554, scope: !13707)
!13717 = !DILocation(line: 401, column: 550, scope: !13707)
!13718 = !DILocation(line: 401, column: 557, scope: !13707)
!13719 = !DILocation(line: 401, column: 969, scope: !13707)
!13720 = !DILocation(line: 401, column: 544, scope: !13721)
!13721 = !DILexicalBlockFile(scope: !13604, file: !624, discriminator: 20)
!13722 = !DILocation(line: 401, column: 520, scope: !13721)
!13723 = distinct !{!13723, !13724}
!13724 = !DILocation(line: 401, column: 520, scope: !13600)
!13725 = !DILocation(line: 401, column: 978, scope: !13726)
!13726 = !DILexicalBlockFile(scope: !13600, file: !624, discriminator: 21)
!13727 = !DILocation(line: 401, column: 975, scope: !13726)
!13728 = !DILocation(line: 401, column: 999, scope: !13726)
!13729 = !DILocation(line: 401, column: 996, scope: !13726)
!13730 = !DILocation(line: 401, column: 1023, scope: !13726)
!13731 = !DILocation(line: 401, column: 1020, scope: !13726)
!13732 = !DILocation(line: 401, column: 1040, scope: !13726)
!13733 = !DILocation(line: 401, column: 514, scope: !13734)
!13734 = !DILexicalBlockFile(scope: !13593, file: !624, discriminator: 22)
!13735 = !DILocation(line: 401, column: 489, scope: !13734)
!13736 = distinct !{!13736, !13737}
!13737 = !DILocation(line: 401, column: 489, scope: !13542)
!13738 = !DILocation(line: 401, column: 1042, scope: !13739)
!13739 = !DILexicalBlockFile(scope: !13542, file: !624, discriminator: 23)
!13740 = distinct !DISubprogram(name: "blend_xor_12bit", scope: !624, file: !624, line: 400, type: !1531, isLocal: true, isDefinition: true, scopeLine: 400, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!13741 = !DILocalVariable(name: "_top", arg: 1, scope: !13740, file: !624, line: 400, type: !900)
!13742 = !DILocation(line: 400, column: 44, scope: !13740)
!13743 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !13740, file: !624, line: 400, type: !902)
!13744 = !DILocation(line: 400, column: 60, scope: !13740)
!13745 = !DILocalVariable(name: "_bottom", arg: 3, scope: !13740, file: !624, line: 400, type: !900)
!13746 = !DILocation(line: 400, column: 89, scope: !13740)
!13747 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !13740, file: !624, line: 400, type: !902)
!13748 = !DILocation(line: 400, column: 108, scope: !13740)
!13749 = !DILocalVariable(name: "_dst", arg: 5, scope: !13740, file: !624, line: 400, type: !329)
!13750 = !DILocation(line: 400, column: 134, scope: !13740)
!13751 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !13740, file: !624, line: 400, type: !902)
!13752 = !DILocation(line: 400, column: 150, scope: !13740)
!13753 = !DILocalVariable(name: "width", arg: 7, scope: !13740, file: !624, line: 400, type: !902)
!13754 = !DILocation(line: 400, column: 174, scope: !13740)
!13755 = !DILocalVariable(name: "height", arg: 8, scope: !13740, file: !624, line: 400, type: !902)
!13756 = !DILocation(line: 400, column: 191, scope: !13740)
!13757 = !DILocalVariable(name: "param", arg: 9, scope: !13740, file: !624, line: 400, type: !884)
!13758 = !DILocation(line: 400, column: 213, scope: !13740)
!13759 = !DILocalVariable(name: "values", arg: 10, scope: !13740, file: !624, line: 400, type: !544)
!13760 = !DILocation(line: 400, column: 228, scope: !13740)
!13761 = !DILocalVariable(name: "starty", arg: 11, scope: !13740, file: !624, line: 400, type: !238)
!13762 = !DILocation(line: 400, column: 240, scope: !13740)
!13763 = !DILocalVariable(name: "top", scope: !13740, file: !624, line: 400, type: !839)
!13764 = !DILocation(line: 400, column: 266, scope: !13740)
!13765 = !DILocation(line: 400, column: 289, scope: !13740)
!13766 = !DILocation(line: 400, column: 272, scope: !13740)
!13767 = !DILocalVariable(name: "bottom", scope: !13740, file: !624, line: 400, type: !839)
!13768 = !DILocation(line: 400, column: 311, scope: !13740)
!13769 = !DILocation(line: 400, column: 337, scope: !13740)
!13770 = !DILocation(line: 400, column: 320, scope: !13740)
!13771 = !DILocalVariable(name: "dst", scope: !13740, file: !624, line: 400, type: !843)
!13772 = !DILocation(line: 400, column: 356, scope: !13740)
!13773 = !DILocation(line: 400, column: 373, scope: !13740)
!13774 = !DILocation(line: 400, column: 362, scope: !13740)
!13775 = !DILocalVariable(name: "opacity", scope: !13740, file: !624, line: 400, type: !248)
!13776 = !DILocation(line: 400, column: 386, scope: !13740)
!13777 = !DILocation(line: 400, column: 396, scope: !13740)
!13778 = !DILocation(line: 400, column: 403, scope: !13740)
!13779 = !DILocalVariable(name: "i", scope: !13740, file: !624, line: 400, type: !238)
!13780 = !DILocation(line: 400, column: 416, scope: !13740)
!13781 = !DILocalVariable(name: "j", scope: !13740, file: !624, line: 400, type: !238)
!13782 = !DILocation(line: 400, column: 419, scope: !13740)
!13783 = !DILocation(line: 400, column: 435, scope: !13740)
!13784 = !DILocation(line: 400, column: 454, scope: !13740)
!13785 = !DILocation(line: 400, column: 476, scope: !13740)
!13786 = !DILocation(line: 400, column: 489, scope: !13787)
!13787 = distinct !DILexicalBlock(scope: !13740, file: !624, line: 400, column: 482)
!13788 = !DILocation(line: 400, column: 487, scope: !13787)
!13789 = !DILocation(line: 400, column: 494, scope: !13790)
!13790 = !DILexicalBlockFile(scope: !13791, file: !624, discriminator: 1)
!13791 = distinct !DILexicalBlock(scope: !13787, file: !624, line: 400, column: 482)
!13792 = !DILocation(line: 400, column: 498, scope: !13790)
!13793 = !DILocation(line: 400, column: 496, scope: !13790)
!13794 = !DILocation(line: 400, column: 482, scope: !13790)
!13795 = !DILocation(line: 400, column: 520, scope: !13796)
!13796 = !DILexicalBlockFile(scope: !13797, file: !624, discriminator: 2)
!13797 = distinct !DILexicalBlock(scope: !13798, file: !624, line: 400, column: 513)
!13798 = distinct !DILexicalBlock(scope: !13791, file: !624, line: 400, column: 511)
!13799 = !DILocation(line: 400, column: 518, scope: !13796)
!13800 = !DILocation(line: 400, column: 525, scope: !13801)
!13801 = !DILexicalBlockFile(scope: !13802, file: !624, discriminator: 3)
!13802 = distinct !DILexicalBlock(scope: !13797, file: !624, line: 400, column: 513)
!13803 = !DILocation(line: 400, column: 529, scope: !13801)
!13804 = !DILocation(line: 400, column: 527, scope: !13801)
!13805 = !DILocation(line: 400, column: 513, scope: !13801)
!13806 = !DILocation(line: 400, column: 556, scope: !13807)
!13807 = !DILexicalBlockFile(scope: !13808, file: !624, discriminator: 4)
!13808 = distinct !DILexicalBlock(scope: !13802, file: !624, line: 400, column: 541)
!13809 = !DILocation(line: 400, column: 552, scope: !13807)
!13810 = !DILocation(line: 400, column: 567, scope: !13807)
!13811 = !DILocation(line: 400, column: 563, scope: !13807)
!13812 = !DILocation(line: 400, column: 579, scope: !13807)
!13813 = !DILocation(line: 400, column: 572, scope: !13807)
!13814 = !DILocation(line: 400, column: 570, scope: !13807)
!13815 = !DILocation(line: 400, column: 589, scope: !13807)
!13816 = !DILocation(line: 400, column: 585, scope: !13807)
!13817 = !DILocation(line: 400, column: 583, scope: !13807)
!13818 = !DILocation(line: 400, column: 561, scope: !13807)
!13819 = !DILocation(line: 400, column: 595, scope: !13807)
!13820 = !DILocation(line: 400, column: 593, scope: !13807)
!13821 = !DILocation(line: 400, column: 559, scope: !13807)
!13822 = !DILocation(line: 400, column: 547, scope: !13807)
!13823 = !DILocation(line: 400, column: 543, scope: !13807)
!13824 = !DILocation(line: 400, column: 550, scope: !13807)
!13825 = !DILocation(line: 400, column: 604, scope: !13807)
!13826 = !DILocation(line: 400, column: 537, scope: !13827)
!13827 = !DILexicalBlockFile(scope: !13802, file: !624, discriminator: 5)
!13828 = !DILocation(line: 400, column: 513, scope: !13827)
!13829 = distinct !{!13829, !13830}
!13830 = !DILocation(line: 400, column: 513, scope: !13798)
!13831 = !DILocation(line: 400, column: 613, scope: !13832)
!13832 = !DILexicalBlockFile(scope: !13798, file: !624, discriminator: 6)
!13833 = !DILocation(line: 400, column: 610, scope: !13832)
!13834 = !DILocation(line: 400, column: 634, scope: !13832)
!13835 = !DILocation(line: 400, column: 631, scope: !13832)
!13836 = !DILocation(line: 400, column: 658, scope: !13832)
!13837 = !DILocation(line: 400, column: 655, scope: !13832)
!13838 = !DILocation(line: 400, column: 675, scope: !13832)
!13839 = !DILocation(line: 400, column: 507, scope: !13840)
!13840 = !DILexicalBlockFile(scope: !13791, file: !624, discriminator: 7)
!13841 = !DILocation(line: 400, column: 482, scope: !13840)
!13842 = distinct !{!13842, !13843}
!13843 = !DILocation(line: 400, column: 482, scope: !13740)
!13844 = !DILocation(line: 400, column: 677, scope: !13845)
!13845 = !DILexicalBlockFile(scope: !13740, file: !624, discriminator: 8)
!13846 = distinct !DISubprogram(name: "blend_addition_16bit", scope: !624, file: !624, line: 285, type: !1531, isLocal: true, isDefinition: true, scopeLine: 285, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!13847 = !DILocalVariable(name: "_top", arg: 1, scope: !13846, file: !624, line: 285, type: !900)
!13848 = !DILocation(line: 285, column: 49, scope: !13846)
!13849 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !13846, file: !624, line: 285, type: !902)
!13850 = !DILocation(line: 285, column: 65, scope: !13846)
!13851 = !DILocalVariable(name: "_bottom", arg: 3, scope: !13846, file: !624, line: 285, type: !900)
!13852 = !DILocation(line: 285, column: 94, scope: !13846)
!13853 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !13846, file: !624, line: 285, type: !902)
!13854 = !DILocation(line: 285, column: 113, scope: !13846)
!13855 = !DILocalVariable(name: "_dst", arg: 5, scope: !13846, file: !624, line: 285, type: !329)
!13856 = !DILocation(line: 285, column: 139, scope: !13846)
!13857 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !13846, file: !624, line: 285, type: !902)
!13858 = !DILocation(line: 285, column: 155, scope: !13846)
!13859 = !DILocalVariable(name: "width", arg: 7, scope: !13846, file: !624, line: 285, type: !902)
!13860 = !DILocation(line: 285, column: 179, scope: !13846)
!13861 = !DILocalVariable(name: "height", arg: 8, scope: !13846, file: !624, line: 285, type: !902)
!13862 = !DILocation(line: 285, column: 196, scope: !13846)
!13863 = !DILocalVariable(name: "param", arg: 9, scope: !13846, file: !624, line: 285, type: !884)
!13864 = !DILocation(line: 285, column: 218, scope: !13846)
!13865 = !DILocalVariable(name: "values", arg: 10, scope: !13846, file: !624, line: 285, type: !544)
!13866 = !DILocation(line: 285, column: 233, scope: !13846)
!13867 = !DILocalVariable(name: "starty", arg: 11, scope: !13846, file: !624, line: 285, type: !238)
!13868 = !DILocation(line: 285, column: 245, scope: !13846)
!13869 = !DILocalVariable(name: "top", scope: !13846, file: !624, line: 285, type: !839)
!13870 = !DILocation(line: 285, column: 271, scope: !13846)
!13871 = !DILocation(line: 285, column: 294, scope: !13846)
!13872 = !DILocation(line: 285, column: 277, scope: !13846)
!13873 = !DILocalVariable(name: "bottom", scope: !13846, file: !624, line: 285, type: !839)
!13874 = !DILocation(line: 285, column: 316, scope: !13846)
!13875 = !DILocation(line: 285, column: 342, scope: !13846)
!13876 = !DILocation(line: 285, column: 325, scope: !13846)
!13877 = !DILocalVariable(name: "dst", scope: !13846, file: !624, line: 285, type: !843)
!13878 = !DILocation(line: 285, column: 361, scope: !13846)
!13879 = !DILocation(line: 285, column: 378, scope: !13846)
!13880 = !DILocation(line: 285, column: 367, scope: !13846)
!13881 = !DILocalVariable(name: "opacity", scope: !13846, file: !624, line: 285, type: !248)
!13882 = !DILocation(line: 285, column: 391, scope: !13846)
!13883 = !DILocation(line: 285, column: 401, scope: !13846)
!13884 = !DILocation(line: 285, column: 408, scope: !13846)
!13885 = !DILocalVariable(name: "i", scope: !13846, file: !624, line: 285, type: !238)
!13886 = !DILocation(line: 285, column: 421, scope: !13846)
!13887 = !DILocalVariable(name: "j", scope: !13846, file: !624, line: 285, type: !238)
!13888 = !DILocation(line: 285, column: 424, scope: !13846)
!13889 = !DILocation(line: 285, column: 440, scope: !13846)
!13890 = !DILocation(line: 285, column: 459, scope: !13846)
!13891 = !DILocation(line: 285, column: 481, scope: !13846)
!13892 = !DILocation(line: 285, column: 494, scope: !13893)
!13893 = distinct !DILexicalBlock(scope: !13846, file: !624, line: 285, column: 487)
!13894 = !DILocation(line: 285, column: 492, scope: !13893)
!13895 = !DILocation(line: 285, column: 499, scope: !13896)
!13896 = !DILexicalBlockFile(scope: !13897, file: !624, discriminator: 1)
!13897 = distinct !DILexicalBlock(scope: !13893, file: !624, line: 285, column: 487)
!13898 = !DILocation(line: 285, column: 503, scope: !13896)
!13899 = !DILocation(line: 285, column: 501, scope: !13896)
!13900 = !DILocation(line: 285, column: 487, scope: !13896)
!13901 = !DILocation(line: 285, column: 525, scope: !13902)
!13902 = !DILexicalBlockFile(scope: !13903, file: !624, discriminator: 2)
!13903 = distinct !DILexicalBlock(scope: !13904, file: !624, line: 285, column: 518)
!13904 = distinct !DILexicalBlock(scope: !13897, file: !624, line: 285, column: 516)
!13905 = !DILocation(line: 285, column: 523, scope: !13902)
!13906 = !DILocation(line: 285, column: 530, scope: !13907)
!13907 = !DILexicalBlockFile(scope: !13908, file: !624, discriminator: 3)
!13908 = distinct !DILexicalBlock(scope: !13903, file: !624, line: 285, column: 518)
!13909 = !DILocation(line: 285, column: 534, scope: !13907)
!13910 = !DILocation(line: 285, column: 532, scope: !13907)
!13911 = !DILocation(line: 285, column: 518, scope: !13907)
!13912 = !DILocation(line: 285, column: 561, scope: !13913)
!13913 = !DILexicalBlockFile(scope: !13914, file: !624, discriminator: 4)
!13914 = distinct !DILexicalBlock(scope: !13908, file: !624, line: 285, column: 546)
!13915 = !DILocation(line: 285, column: 557, scope: !13913)
!13916 = !DILocation(line: 285, column: 584, scope: !13913)
!13917 = !DILocation(line: 285, column: 580, scope: !13913)
!13918 = !DILocation(line: 285, column: 596, scope: !13913)
!13919 = !DILocation(line: 285, column: 589, scope: !13913)
!13920 = !DILocation(line: 285, column: 587, scope: !13913)
!13921 = !DILocation(line: 285, column: 577, scope: !13913)
!13922 = !DILocation(line: 285, column: 569, scope: !13913)
!13923 = !DILocation(line: 285, column: 607, scope: !13924)
!13924 = !DILexicalBlockFile(scope: !13914, file: !624, discriminator: 5)
!13925 = !DILocation(line: 285, column: 603, scope: !13924)
!13926 = !DILocation(line: 285, column: 619, scope: !13924)
!13927 = !DILocation(line: 285, column: 612, scope: !13924)
!13928 = !DILocation(line: 285, column: 610, scope: !13924)
!13929 = !DILocation(line: 285, column: 569, scope: !13924)
!13930 = !DILocation(line: 285, column: 569, scope: !13931)
!13931 = !DILexicalBlockFile(scope: !13914, file: !624, discriminator: 6)
!13932 = !DILocation(line: 285, column: 569, scope: !13933)
!13933 = !DILexicalBlockFile(scope: !13914, file: !624, discriminator: 7)
!13934 = !DILocation(line: 285, column: 641, scope: !13933)
!13935 = !DILocation(line: 285, column: 637, scope: !13933)
!13936 = !DILocation(line: 285, column: 635, scope: !13933)
!13937 = !DILocation(line: 285, column: 566, scope: !13933)
!13938 = !DILocation(line: 285, column: 647, scope: !13933)
!13939 = !DILocation(line: 285, column: 645, scope: !13933)
!13940 = !DILocation(line: 285, column: 564, scope: !13933)
!13941 = !DILocation(line: 285, column: 557, scope: !13933)
!13942 = !DILocation(line: 285, column: 552, scope: !13933)
!13943 = !DILocation(line: 285, column: 548, scope: !13933)
!13944 = !DILocation(line: 285, column: 555, scope: !13933)
!13945 = !DILocation(line: 285, column: 656, scope: !13933)
!13946 = !DILocation(line: 285, column: 542, scope: !13947)
!13947 = !DILexicalBlockFile(scope: !13908, file: !624, discriminator: 8)
!13948 = !DILocation(line: 285, column: 518, scope: !13947)
!13949 = distinct !{!13949, !13950}
!13950 = !DILocation(line: 285, column: 518, scope: !13904)
!13951 = !DILocation(line: 285, column: 665, scope: !13952)
!13952 = !DILexicalBlockFile(scope: !13904, file: !624, discriminator: 9)
!13953 = !DILocation(line: 285, column: 662, scope: !13952)
!13954 = !DILocation(line: 285, column: 686, scope: !13952)
!13955 = !DILocation(line: 285, column: 683, scope: !13952)
!13956 = !DILocation(line: 285, column: 710, scope: !13952)
!13957 = !DILocation(line: 285, column: 707, scope: !13952)
!13958 = !DILocation(line: 285, column: 727, scope: !13952)
!13959 = !DILocation(line: 285, column: 512, scope: !13960)
!13960 = !DILexicalBlockFile(scope: !13897, file: !624, discriminator: 10)
!13961 = !DILocation(line: 285, column: 487, scope: !13960)
!13962 = distinct !{!13962, !13963}
!13963 = !DILocation(line: 285, column: 487, scope: !13846)
!13964 = !DILocation(line: 285, column: 729, scope: !13965)
!13965 = !DILexicalBlockFile(scope: !13846, file: !624, discriminator: 11)
!13966 = distinct !DISubprogram(name: "blend_grainmerge_16bit", scope: !624, file: !624, line: 286, type: !1531, isLocal: true, isDefinition: true, scopeLine: 286, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!13967 = !DILocalVariable(name: "a", arg: 1, scope: !13968, file: !1640, line: 181, type: !238)
!13968 = distinct !DISubprogram(name: "av_clip_uint16_c", scope: !1640, file: !1640, line: 181, type: !13969, isLocal: true, isDefinition: true, scopeLine: 182, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!13969 = !DISubroutineType(types: !13970)
!13970 = !{!841, !238}
!13971 = !DILocation(line: 181, column: 99, scope: !13968, inlinedAt: !13972)
!13972 = distinct !DILocation(line: 286, column: 570, scope: !13973)
!13973 = !DILexicalBlockFile(scope: !13974, file: !624, discriminator: 4)
!13974 = distinct !DILexicalBlock(scope: !13975, file: !624, line: 286, column: 548)
!13975 = distinct !DILexicalBlock(scope: !13976, file: !624, line: 286, column: 520)
!13976 = distinct !DILexicalBlock(scope: !13977, file: !624, line: 286, column: 520)
!13977 = distinct !DILexicalBlock(scope: !13978, file: !624, line: 286, column: 518)
!13978 = distinct !DILexicalBlock(scope: !13979, file: !624, line: 286, column: 489)
!13979 = distinct !DILexicalBlock(scope: !13966, file: !624, line: 286, column: 489)
!13980 = !DILocalVariable(name: "_top", arg: 1, scope: !13966, file: !624, line: 286, type: !900)
!13981 = !DILocation(line: 286, column: 51, scope: !13966)
!13982 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !13966, file: !624, line: 286, type: !902)
!13983 = !DILocation(line: 286, column: 67, scope: !13966)
!13984 = !DILocalVariable(name: "_bottom", arg: 3, scope: !13966, file: !624, line: 286, type: !900)
!13985 = !DILocation(line: 286, column: 96, scope: !13966)
!13986 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !13966, file: !624, line: 286, type: !902)
!13987 = !DILocation(line: 286, column: 115, scope: !13966)
!13988 = !DILocalVariable(name: "_dst", arg: 5, scope: !13966, file: !624, line: 286, type: !329)
!13989 = !DILocation(line: 286, column: 141, scope: !13966)
!13990 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !13966, file: !624, line: 286, type: !902)
!13991 = !DILocation(line: 286, column: 157, scope: !13966)
!13992 = !DILocalVariable(name: "width", arg: 7, scope: !13966, file: !624, line: 286, type: !902)
!13993 = !DILocation(line: 286, column: 181, scope: !13966)
!13994 = !DILocalVariable(name: "height", arg: 8, scope: !13966, file: !624, line: 286, type: !902)
!13995 = !DILocation(line: 286, column: 198, scope: !13966)
!13996 = !DILocalVariable(name: "param", arg: 9, scope: !13966, file: !624, line: 286, type: !884)
!13997 = !DILocation(line: 286, column: 220, scope: !13966)
!13998 = !DILocalVariable(name: "values", arg: 10, scope: !13966, file: !624, line: 286, type: !544)
!13999 = !DILocation(line: 286, column: 235, scope: !13966)
!14000 = !DILocalVariable(name: "starty", arg: 11, scope: !13966, file: !624, line: 286, type: !238)
!14001 = !DILocation(line: 286, column: 247, scope: !13966)
!14002 = !DILocalVariable(name: "top", scope: !13966, file: !624, line: 286, type: !839)
!14003 = !DILocation(line: 286, column: 273, scope: !13966)
!14004 = !DILocation(line: 286, column: 296, scope: !13966)
!14005 = !DILocation(line: 286, column: 279, scope: !13966)
!14006 = !DILocalVariable(name: "bottom", scope: !13966, file: !624, line: 286, type: !839)
!14007 = !DILocation(line: 286, column: 318, scope: !13966)
!14008 = !DILocation(line: 286, column: 344, scope: !13966)
!14009 = !DILocation(line: 286, column: 327, scope: !13966)
!14010 = !DILocalVariable(name: "dst", scope: !13966, file: !624, line: 286, type: !843)
!14011 = !DILocation(line: 286, column: 363, scope: !13966)
!14012 = !DILocation(line: 286, column: 380, scope: !13966)
!14013 = !DILocation(line: 286, column: 369, scope: !13966)
!14014 = !DILocalVariable(name: "opacity", scope: !13966, file: !624, line: 286, type: !248)
!14015 = !DILocation(line: 286, column: 393, scope: !13966)
!14016 = !DILocation(line: 286, column: 403, scope: !13966)
!14017 = !DILocation(line: 286, column: 410, scope: !13966)
!14018 = !DILocalVariable(name: "i", scope: !13966, file: !624, line: 286, type: !238)
!14019 = !DILocation(line: 286, column: 423, scope: !13966)
!14020 = !DILocalVariable(name: "j", scope: !13966, file: !624, line: 286, type: !238)
!14021 = !DILocation(line: 286, column: 426, scope: !13966)
!14022 = !DILocation(line: 286, column: 442, scope: !13966)
!14023 = !DILocation(line: 286, column: 461, scope: !13966)
!14024 = !DILocation(line: 286, column: 483, scope: !13966)
!14025 = !DILocation(line: 286, column: 496, scope: !13979)
!14026 = !DILocation(line: 286, column: 494, scope: !13979)
!14027 = !DILocation(line: 286, column: 501, scope: !14028)
!14028 = !DILexicalBlockFile(scope: !13978, file: !624, discriminator: 1)
!14029 = !DILocation(line: 286, column: 505, scope: !14028)
!14030 = !DILocation(line: 286, column: 503, scope: !14028)
!14031 = !DILocation(line: 286, column: 489, scope: !14028)
!14032 = !DILocation(line: 286, column: 527, scope: !14033)
!14033 = !DILexicalBlockFile(scope: !13976, file: !624, discriminator: 2)
!14034 = !DILocation(line: 286, column: 525, scope: !14033)
!14035 = !DILocation(line: 286, column: 532, scope: !14036)
!14036 = !DILexicalBlockFile(scope: !13975, file: !624, discriminator: 3)
!14037 = !DILocation(line: 286, column: 536, scope: !14036)
!14038 = !DILocation(line: 286, column: 534, scope: !14036)
!14039 = !DILocation(line: 286, column: 520, scope: !14036)
!14040 = !DILocation(line: 286, column: 563, scope: !13973)
!14041 = !DILocation(line: 286, column: 559, scope: !13973)
!14042 = !DILocation(line: 286, column: 591, scope: !13973)
!14043 = !DILocation(line: 286, column: 587, scope: !13973)
!14044 = !DILocation(line: 286, column: 603, scope: !13973)
!14045 = !DILocation(line: 286, column: 596, scope: !13973)
!14046 = !DILocation(line: 286, column: 594, scope: !13973)
!14047 = !DILocation(line: 286, column: 606, scope: !13973)
!14048 = !DILocation(line: 286, column: 570, scope: !13973)
!14049 = !DILocation(line: 183, column: 9, scope: !14050, inlinedAt: !13972)
!14050 = distinct !DILexicalBlock(scope: !13968, file: !1640, line: 183, column: 9)
!14051 = !DILocation(line: 183, column: 10, scope: !14050, inlinedAt: !13972)
!14052 = !DILocation(line: 183, column: 9, scope: !13968, inlinedAt: !13972)
!14053 = !DILocation(line: 183, column: 31, scope: !14054, inlinedAt: !13972)
!14054 = !DILexicalBlockFile(scope: !14050, file: !1640, discriminator: 1)
!14055 = !DILocation(line: 183, column: 30, scope: !14054, inlinedAt: !13972)
!14056 = !DILocation(line: 183, column: 33, scope: !14054, inlinedAt: !13972)
!14057 = !DILocation(line: 183, column: 29, scope: !14054, inlinedAt: !13972)
!14058 = !DILocation(line: 183, column: 22, scope: !14054, inlinedAt: !13972)
!14059 = !DILocation(line: 184, column: 17, scope: !14050, inlinedAt: !13972)
!14060 = !DILocation(line: 184, column: 10, scope: !14050, inlinedAt: !13972)
!14061 = !DILocation(line: 185, column: 1, scope: !13968, inlinedAt: !13972)
!14062 = !DILocation(line: 286, column: 569, scope: !13973)
!14063 = !DILocation(line: 286, column: 622, scope: !13973)
!14064 = !DILocation(line: 286, column: 618, scope: !13973)
!14065 = !DILocation(line: 286, column: 616, scope: !13973)
!14066 = !DILocation(line: 286, column: 568, scope: !13973)
!14067 = !DILocation(line: 286, column: 628, scope: !13973)
!14068 = !DILocation(line: 286, column: 626, scope: !13973)
!14069 = !DILocation(line: 286, column: 566, scope: !13973)
!14070 = !DILocation(line: 286, column: 554, scope: !13973)
!14071 = !DILocation(line: 286, column: 550, scope: !13973)
!14072 = !DILocation(line: 286, column: 557, scope: !13973)
!14073 = !DILocation(line: 286, column: 637, scope: !13973)
!14074 = !DILocation(line: 286, column: 544, scope: !14075)
!14075 = !DILexicalBlockFile(scope: !13975, file: !624, discriminator: 5)
!14076 = !DILocation(line: 286, column: 520, scope: !14075)
!14077 = distinct !{!14077, !14078}
!14078 = !DILocation(line: 286, column: 520, scope: !13977)
!14079 = !DILocation(line: 286, column: 646, scope: !14080)
!14080 = !DILexicalBlockFile(scope: !13977, file: !624, discriminator: 6)
!14081 = !DILocation(line: 286, column: 643, scope: !14080)
!14082 = !DILocation(line: 286, column: 667, scope: !14080)
!14083 = !DILocation(line: 286, column: 664, scope: !14080)
!14084 = !DILocation(line: 286, column: 691, scope: !14080)
!14085 = !DILocation(line: 286, column: 688, scope: !14080)
!14086 = !DILocation(line: 286, column: 708, scope: !14080)
!14087 = !DILocation(line: 286, column: 514, scope: !14088)
!14088 = !DILexicalBlockFile(scope: !13978, file: !624, discriminator: 7)
!14089 = !DILocation(line: 286, column: 489, scope: !14088)
!14090 = distinct !{!14090, !14091}
!14091 = !DILocation(line: 286, column: 489, scope: !13966)
!14092 = !DILocation(line: 286, column: 710, scope: !14093)
!14093 = !DILexicalBlockFile(scope: !13966, file: !624, discriminator: 8)
!14094 = distinct !DISubprogram(name: "blend_and_16bit", scope: !624, file: !624, line: 312, type: !1531, isLocal: true, isDefinition: true, scopeLine: 312, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!14095 = !DILocalVariable(name: "_top", arg: 1, scope: !14094, file: !624, line: 312, type: !900)
!14096 = !DILocation(line: 312, column: 44, scope: !14094)
!14097 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !14094, file: !624, line: 312, type: !902)
!14098 = !DILocation(line: 312, column: 60, scope: !14094)
!14099 = !DILocalVariable(name: "_bottom", arg: 3, scope: !14094, file: !624, line: 312, type: !900)
!14100 = !DILocation(line: 312, column: 89, scope: !14094)
!14101 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !14094, file: !624, line: 312, type: !902)
!14102 = !DILocation(line: 312, column: 108, scope: !14094)
!14103 = !DILocalVariable(name: "_dst", arg: 5, scope: !14094, file: !624, line: 312, type: !329)
!14104 = !DILocation(line: 312, column: 134, scope: !14094)
!14105 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !14094, file: !624, line: 312, type: !902)
!14106 = !DILocation(line: 312, column: 150, scope: !14094)
!14107 = !DILocalVariable(name: "width", arg: 7, scope: !14094, file: !624, line: 312, type: !902)
!14108 = !DILocation(line: 312, column: 174, scope: !14094)
!14109 = !DILocalVariable(name: "height", arg: 8, scope: !14094, file: !624, line: 312, type: !902)
!14110 = !DILocation(line: 312, column: 191, scope: !14094)
!14111 = !DILocalVariable(name: "param", arg: 9, scope: !14094, file: !624, line: 312, type: !884)
!14112 = !DILocation(line: 312, column: 213, scope: !14094)
!14113 = !DILocalVariable(name: "values", arg: 10, scope: !14094, file: !624, line: 312, type: !544)
!14114 = !DILocation(line: 312, column: 228, scope: !14094)
!14115 = !DILocalVariable(name: "starty", arg: 11, scope: !14094, file: !624, line: 312, type: !238)
!14116 = !DILocation(line: 312, column: 240, scope: !14094)
!14117 = !DILocalVariable(name: "top", scope: !14094, file: !624, line: 312, type: !839)
!14118 = !DILocation(line: 312, column: 266, scope: !14094)
!14119 = !DILocation(line: 312, column: 289, scope: !14094)
!14120 = !DILocation(line: 312, column: 272, scope: !14094)
!14121 = !DILocalVariable(name: "bottom", scope: !14094, file: !624, line: 312, type: !839)
!14122 = !DILocation(line: 312, column: 311, scope: !14094)
!14123 = !DILocation(line: 312, column: 337, scope: !14094)
!14124 = !DILocation(line: 312, column: 320, scope: !14094)
!14125 = !DILocalVariable(name: "dst", scope: !14094, file: !624, line: 312, type: !843)
!14126 = !DILocation(line: 312, column: 356, scope: !14094)
!14127 = !DILocation(line: 312, column: 373, scope: !14094)
!14128 = !DILocation(line: 312, column: 362, scope: !14094)
!14129 = !DILocalVariable(name: "opacity", scope: !14094, file: !624, line: 312, type: !248)
!14130 = !DILocation(line: 312, column: 386, scope: !14094)
!14131 = !DILocation(line: 312, column: 396, scope: !14094)
!14132 = !DILocation(line: 312, column: 403, scope: !14094)
!14133 = !DILocalVariable(name: "i", scope: !14094, file: !624, line: 312, type: !238)
!14134 = !DILocation(line: 312, column: 416, scope: !14094)
!14135 = !DILocalVariable(name: "j", scope: !14094, file: !624, line: 312, type: !238)
!14136 = !DILocation(line: 312, column: 419, scope: !14094)
!14137 = !DILocation(line: 312, column: 435, scope: !14094)
!14138 = !DILocation(line: 312, column: 454, scope: !14094)
!14139 = !DILocation(line: 312, column: 476, scope: !14094)
!14140 = !DILocation(line: 312, column: 489, scope: !14141)
!14141 = distinct !DILexicalBlock(scope: !14094, file: !624, line: 312, column: 482)
!14142 = !DILocation(line: 312, column: 487, scope: !14141)
!14143 = !DILocation(line: 312, column: 494, scope: !14144)
!14144 = !DILexicalBlockFile(scope: !14145, file: !624, discriminator: 1)
!14145 = distinct !DILexicalBlock(scope: !14141, file: !624, line: 312, column: 482)
!14146 = !DILocation(line: 312, column: 498, scope: !14144)
!14147 = !DILocation(line: 312, column: 496, scope: !14144)
!14148 = !DILocation(line: 312, column: 482, scope: !14144)
!14149 = !DILocation(line: 312, column: 520, scope: !14150)
!14150 = !DILexicalBlockFile(scope: !14151, file: !624, discriminator: 2)
!14151 = distinct !DILexicalBlock(scope: !14152, file: !624, line: 312, column: 513)
!14152 = distinct !DILexicalBlock(scope: !14145, file: !624, line: 312, column: 511)
!14153 = !DILocation(line: 312, column: 518, scope: !14150)
!14154 = !DILocation(line: 312, column: 525, scope: !14155)
!14155 = !DILexicalBlockFile(scope: !14156, file: !624, discriminator: 3)
!14156 = distinct !DILexicalBlock(scope: !14151, file: !624, line: 312, column: 513)
!14157 = !DILocation(line: 312, column: 529, scope: !14155)
!14158 = !DILocation(line: 312, column: 527, scope: !14155)
!14159 = !DILocation(line: 312, column: 513, scope: !14155)
!14160 = !DILocation(line: 312, column: 556, scope: !14161)
!14161 = !DILexicalBlockFile(scope: !14162, file: !624, discriminator: 4)
!14162 = distinct !DILexicalBlock(scope: !14156, file: !624, line: 312, column: 541)
!14163 = !DILocation(line: 312, column: 552, scope: !14161)
!14164 = !DILocation(line: 312, column: 567, scope: !14161)
!14165 = !DILocation(line: 312, column: 563, scope: !14161)
!14166 = !DILocation(line: 312, column: 579, scope: !14161)
!14167 = !DILocation(line: 312, column: 572, scope: !14161)
!14168 = !DILocation(line: 312, column: 570, scope: !14161)
!14169 = !DILocation(line: 312, column: 589, scope: !14161)
!14170 = !DILocation(line: 312, column: 585, scope: !14161)
!14171 = !DILocation(line: 312, column: 583, scope: !14161)
!14172 = !DILocation(line: 312, column: 561, scope: !14161)
!14173 = !DILocation(line: 312, column: 595, scope: !14161)
!14174 = !DILocation(line: 312, column: 593, scope: !14161)
!14175 = !DILocation(line: 312, column: 559, scope: !14161)
!14176 = !DILocation(line: 312, column: 547, scope: !14161)
!14177 = !DILocation(line: 312, column: 543, scope: !14161)
!14178 = !DILocation(line: 312, column: 550, scope: !14161)
!14179 = !DILocation(line: 312, column: 604, scope: !14161)
!14180 = !DILocation(line: 312, column: 537, scope: !14181)
!14181 = !DILexicalBlockFile(scope: !14156, file: !624, discriminator: 5)
!14182 = !DILocation(line: 312, column: 513, scope: !14181)
!14183 = distinct !{!14183, !14184}
!14184 = !DILocation(line: 312, column: 513, scope: !14152)
!14185 = !DILocation(line: 312, column: 613, scope: !14186)
!14186 = !DILexicalBlockFile(scope: !14152, file: !624, discriminator: 6)
!14187 = !DILocation(line: 312, column: 610, scope: !14186)
!14188 = !DILocation(line: 312, column: 634, scope: !14186)
!14189 = !DILocation(line: 312, column: 631, scope: !14186)
!14190 = !DILocation(line: 312, column: 658, scope: !14186)
!14191 = !DILocation(line: 312, column: 655, scope: !14186)
!14192 = !DILocation(line: 312, column: 675, scope: !14186)
!14193 = !DILocation(line: 312, column: 507, scope: !14194)
!14194 = !DILexicalBlockFile(scope: !14145, file: !624, discriminator: 7)
!14195 = !DILocation(line: 312, column: 482, scope: !14194)
!14196 = distinct !{!14196, !14197}
!14197 = !DILocation(line: 312, column: 482, scope: !14094)
!14198 = !DILocation(line: 312, column: 677, scope: !14199)
!14199 = !DILexicalBlockFile(scope: !14094, file: !624, discriminator: 8)
!14200 = distinct !DISubprogram(name: "blend_average_16bit", scope: !624, file: !624, line: 287, type: !1531, isLocal: true, isDefinition: true, scopeLine: 287, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!14201 = !DILocalVariable(name: "_top", arg: 1, scope: !14200, file: !624, line: 287, type: !900)
!14202 = !DILocation(line: 287, column: 48, scope: !14200)
!14203 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !14200, file: !624, line: 287, type: !902)
!14204 = !DILocation(line: 287, column: 64, scope: !14200)
!14205 = !DILocalVariable(name: "_bottom", arg: 3, scope: !14200, file: !624, line: 287, type: !900)
!14206 = !DILocation(line: 287, column: 93, scope: !14200)
!14207 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !14200, file: !624, line: 287, type: !902)
!14208 = !DILocation(line: 287, column: 112, scope: !14200)
!14209 = !DILocalVariable(name: "_dst", arg: 5, scope: !14200, file: !624, line: 287, type: !329)
!14210 = !DILocation(line: 287, column: 138, scope: !14200)
!14211 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !14200, file: !624, line: 287, type: !902)
!14212 = !DILocation(line: 287, column: 154, scope: !14200)
!14213 = !DILocalVariable(name: "width", arg: 7, scope: !14200, file: !624, line: 287, type: !902)
!14214 = !DILocation(line: 287, column: 178, scope: !14200)
!14215 = !DILocalVariable(name: "height", arg: 8, scope: !14200, file: !624, line: 287, type: !902)
!14216 = !DILocation(line: 287, column: 195, scope: !14200)
!14217 = !DILocalVariable(name: "param", arg: 9, scope: !14200, file: !624, line: 287, type: !884)
!14218 = !DILocation(line: 287, column: 217, scope: !14200)
!14219 = !DILocalVariable(name: "values", arg: 10, scope: !14200, file: !624, line: 287, type: !544)
!14220 = !DILocation(line: 287, column: 232, scope: !14200)
!14221 = !DILocalVariable(name: "starty", arg: 11, scope: !14200, file: !624, line: 287, type: !238)
!14222 = !DILocation(line: 287, column: 244, scope: !14200)
!14223 = !DILocalVariable(name: "top", scope: !14200, file: !624, line: 287, type: !839)
!14224 = !DILocation(line: 287, column: 270, scope: !14200)
!14225 = !DILocation(line: 287, column: 293, scope: !14200)
!14226 = !DILocation(line: 287, column: 276, scope: !14200)
!14227 = !DILocalVariable(name: "bottom", scope: !14200, file: !624, line: 287, type: !839)
!14228 = !DILocation(line: 287, column: 315, scope: !14200)
!14229 = !DILocation(line: 287, column: 341, scope: !14200)
!14230 = !DILocation(line: 287, column: 324, scope: !14200)
!14231 = !DILocalVariable(name: "dst", scope: !14200, file: !624, line: 287, type: !843)
!14232 = !DILocation(line: 287, column: 360, scope: !14200)
!14233 = !DILocation(line: 287, column: 377, scope: !14200)
!14234 = !DILocation(line: 287, column: 366, scope: !14200)
!14235 = !DILocalVariable(name: "opacity", scope: !14200, file: !624, line: 287, type: !248)
!14236 = !DILocation(line: 287, column: 390, scope: !14200)
!14237 = !DILocation(line: 287, column: 400, scope: !14200)
!14238 = !DILocation(line: 287, column: 407, scope: !14200)
!14239 = !DILocalVariable(name: "i", scope: !14200, file: !624, line: 287, type: !238)
!14240 = !DILocation(line: 287, column: 420, scope: !14200)
!14241 = !DILocalVariable(name: "j", scope: !14200, file: !624, line: 287, type: !238)
!14242 = !DILocation(line: 287, column: 423, scope: !14200)
!14243 = !DILocation(line: 287, column: 439, scope: !14200)
!14244 = !DILocation(line: 287, column: 458, scope: !14200)
!14245 = !DILocation(line: 287, column: 480, scope: !14200)
!14246 = !DILocation(line: 287, column: 493, scope: !14247)
!14247 = distinct !DILexicalBlock(scope: !14200, file: !624, line: 287, column: 486)
!14248 = !DILocation(line: 287, column: 491, scope: !14247)
!14249 = !DILocation(line: 287, column: 498, scope: !14250)
!14250 = !DILexicalBlockFile(scope: !14251, file: !624, discriminator: 1)
!14251 = distinct !DILexicalBlock(scope: !14247, file: !624, line: 287, column: 486)
!14252 = !DILocation(line: 287, column: 502, scope: !14250)
!14253 = !DILocation(line: 287, column: 500, scope: !14250)
!14254 = !DILocation(line: 287, column: 486, scope: !14250)
!14255 = !DILocation(line: 287, column: 524, scope: !14256)
!14256 = !DILexicalBlockFile(scope: !14257, file: !624, discriminator: 2)
!14257 = distinct !DILexicalBlock(scope: !14258, file: !624, line: 287, column: 517)
!14258 = distinct !DILexicalBlock(scope: !14251, file: !624, line: 287, column: 515)
!14259 = !DILocation(line: 287, column: 522, scope: !14256)
!14260 = !DILocation(line: 287, column: 529, scope: !14261)
!14261 = !DILexicalBlockFile(scope: !14262, file: !624, discriminator: 3)
!14262 = distinct !DILexicalBlock(scope: !14257, file: !624, line: 287, column: 517)
!14263 = !DILocation(line: 287, column: 533, scope: !14261)
!14264 = !DILocation(line: 287, column: 531, scope: !14261)
!14265 = !DILocation(line: 287, column: 517, scope: !14261)
!14266 = !DILocation(line: 287, column: 560, scope: !14267)
!14267 = !DILexicalBlockFile(scope: !14268, file: !624, discriminator: 4)
!14268 = distinct !DILexicalBlock(scope: !14262, file: !624, line: 287, column: 545)
!14269 = !DILocation(line: 287, column: 556, scope: !14267)
!14270 = !DILocation(line: 287, column: 572, scope: !14267)
!14271 = !DILocation(line: 287, column: 568, scope: !14267)
!14272 = !DILocation(line: 287, column: 584, scope: !14267)
!14273 = !DILocation(line: 287, column: 577, scope: !14267)
!14274 = !DILocation(line: 287, column: 575, scope: !14267)
!14275 = !DILocation(line: 287, column: 588, scope: !14267)
!14276 = !DILocation(line: 287, column: 599, scope: !14267)
!14277 = !DILocation(line: 287, column: 595, scope: !14267)
!14278 = !DILocation(line: 287, column: 593, scope: !14267)
!14279 = !DILocation(line: 287, column: 565, scope: !14267)
!14280 = !DILocation(line: 287, column: 605, scope: !14267)
!14281 = !DILocation(line: 287, column: 603, scope: !14267)
!14282 = !DILocation(line: 287, column: 563, scope: !14267)
!14283 = !DILocation(line: 287, column: 551, scope: !14267)
!14284 = !DILocation(line: 287, column: 547, scope: !14267)
!14285 = !DILocation(line: 287, column: 554, scope: !14267)
!14286 = !DILocation(line: 287, column: 614, scope: !14267)
!14287 = !DILocation(line: 287, column: 541, scope: !14288)
!14288 = !DILexicalBlockFile(scope: !14262, file: !624, discriminator: 5)
!14289 = !DILocation(line: 287, column: 517, scope: !14288)
!14290 = distinct !{!14290, !14291}
!14291 = !DILocation(line: 287, column: 517, scope: !14258)
!14292 = !DILocation(line: 287, column: 623, scope: !14293)
!14293 = !DILexicalBlockFile(scope: !14258, file: !624, discriminator: 6)
!14294 = !DILocation(line: 287, column: 620, scope: !14293)
!14295 = !DILocation(line: 287, column: 644, scope: !14293)
!14296 = !DILocation(line: 287, column: 641, scope: !14293)
!14297 = !DILocation(line: 287, column: 668, scope: !14293)
!14298 = !DILocation(line: 287, column: 665, scope: !14293)
!14299 = !DILocation(line: 287, column: 685, scope: !14293)
!14300 = !DILocation(line: 287, column: 511, scope: !14301)
!14301 = !DILexicalBlockFile(scope: !14251, file: !624, discriminator: 7)
!14302 = !DILocation(line: 287, column: 486, scope: !14301)
!14303 = distinct !{!14303, !14304}
!14304 = !DILocation(line: 287, column: 486, scope: !14200)
!14305 = !DILocation(line: 287, column: 687, scope: !14306)
!14306 = !DILexicalBlockFile(scope: !14200, file: !624, discriminator: 8)
!14307 = distinct !DISubprogram(name: "blend_burn_16bit", scope: !624, file: !624, line: 305, type: !1531, isLocal: true, isDefinition: true, scopeLine: 305, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!14308 = !DILocalVariable(name: "_top", arg: 1, scope: !14307, file: !624, line: 305, type: !900)
!14309 = !DILocation(line: 305, column: 45, scope: !14307)
!14310 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !14307, file: !624, line: 305, type: !902)
!14311 = !DILocation(line: 305, column: 61, scope: !14307)
!14312 = !DILocalVariable(name: "_bottom", arg: 3, scope: !14307, file: !624, line: 305, type: !900)
!14313 = !DILocation(line: 305, column: 90, scope: !14307)
!14314 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !14307, file: !624, line: 305, type: !902)
!14315 = !DILocation(line: 305, column: 109, scope: !14307)
!14316 = !DILocalVariable(name: "_dst", arg: 5, scope: !14307, file: !624, line: 305, type: !329)
!14317 = !DILocation(line: 305, column: 135, scope: !14307)
!14318 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !14307, file: !624, line: 305, type: !902)
!14319 = !DILocation(line: 305, column: 151, scope: !14307)
!14320 = !DILocalVariable(name: "width", arg: 7, scope: !14307, file: !624, line: 305, type: !902)
!14321 = !DILocation(line: 305, column: 175, scope: !14307)
!14322 = !DILocalVariable(name: "height", arg: 8, scope: !14307, file: !624, line: 305, type: !902)
!14323 = !DILocation(line: 305, column: 192, scope: !14307)
!14324 = !DILocalVariable(name: "param", arg: 9, scope: !14307, file: !624, line: 305, type: !884)
!14325 = !DILocation(line: 305, column: 214, scope: !14307)
!14326 = !DILocalVariable(name: "values", arg: 10, scope: !14307, file: !624, line: 305, type: !544)
!14327 = !DILocation(line: 305, column: 229, scope: !14307)
!14328 = !DILocalVariable(name: "starty", arg: 11, scope: !14307, file: !624, line: 305, type: !238)
!14329 = !DILocation(line: 305, column: 241, scope: !14307)
!14330 = !DILocalVariable(name: "top", scope: !14307, file: !624, line: 305, type: !839)
!14331 = !DILocation(line: 305, column: 267, scope: !14307)
!14332 = !DILocation(line: 305, column: 290, scope: !14307)
!14333 = !DILocation(line: 305, column: 273, scope: !14307)
!14334 = !DILocalVariable(name: "bottom", scope: !14307, file: !624, line: 305, type: !839)
!14335 = !DILocation(line: 305, column: 312, scope: !14307)
!14336 = !DILocation(line: 305, column: 338, scope: !14307)
!14337 = !DILocation(line: 305, column: 321, scope: !14307)
!14338 = !DILocalVariable(name: "dst", scope: !14307, file: !624, line: 305, type: !843)
!14339 = !DILocation(line: 305, column: 357, scope: !14307)
!14340 = !DILocation(line: 305, column: 374, scope: !14307)
!14341 = !DILocation(line: 305, column: 363, scope: !14307)
!14342 = !DILocalVariable(name: "opacity", scope: !14307, file: !624, line: 305, type: !248)
!14343 = !DILocation(line: 305, column: 387, scope: !14307)
!14344 = !DILocation(line: 305, column: 397, scope: !14307)
!14345 = !DILocation(line: 305, column: 404, scope: !14307)
!14346 = !DILocalVariable(name: "i", scope: !14307, file: !624, line: 305, type: !238)
!14347 = !DILocation(line: 305, column: 417, scope: !14307)
!14348 = !DILocalVariable(name: "j", scope: !14307, file: !624, line: 305, type: !238)
!14349 = !DILocation(line: 305, column: 420, scope: !14307)
!14350 = !DILocation(line: 305, column: 436, scope: !14307)
!14351 = !DILocation(line: 305, column: 455, scope: !14307)
!14352 = !DILocation(line: 305, column: 477, scope: !14307)
!14353 = !DILocation(line: 305, column: 490, scope: !14354)
!14354 = distinct !DILexicalBlock(scope: !14307, file: !624, line: 305, column: 483)
!14355 = !DILocation(line: 305, column: 488, scope: !14354)
!14356 = !DILocation(line: 305, column: 495, scope: !14357)
!14357 = !DILexicalBlockFile(scope: !14358, file: !624, discriminator: 1)
!14358 = distinct !DILexicalBlock(scope: !14354, file: !624, line: 305, column: 483)
!14359 = !DILocation(line: 305, column: 499, scope: !14357)
!14360 = !DILocation(line: 305, column: 497, scope: !14357)
!14361 = !DILocation(line: 305, column: 483, scope: !14357)
!14362 = !DILocation(line: 305, column: 521, scope: !14363)
!14363 = !DILexicalBlockFile(scope: !14364, file: !624, discriminator: 2)
!14364 = distinct !DILexicalBlock(scope: !14365, file: !624, line: 305, column: 514)
!14365 = distinct !DILexicalBlock(scope: !14358, file: !624, line: 305, column: 512)
!14366 = !DILocation(line: 305, column: 519, scope: !14363)
!14367 = !DILocation(line: 305, column: 526, scope: !14368)
!14368 = !DILexicalBlockFile(scope: !14369, file: !624, discriminator: 3)
!14369 = distinct !DILexicalBlock(scope: !14364, file: !624, line: 305, column: 514)
!14370 = !DILocation(line: 305, column: 530, scope: !14368)
!14371 = !DILocation(line: 305, column: 528, scope: !14368)
!14372 = !DILocation(line: 305, column: 514, scope: !14368)
!14373 = !DILocation(line: 305, column: 557, scope: !14374)
!14374 = !DILexicalBlockFile(scope: !14375, file: !624, discriminator: 4)
!14375 = distinct !DILexicalBlock(scope: !14369, file: !624, line: 305, column: 542)
!14376 = !DILocation(line: 305, column: 553, scope: !14374)
!14377 = !DILocation(line: 305, column: 571, scope: !14374)
!14378 = !DILocation(line: 305, column: 567, scope: !14374)
!14379 = !DILocation(line: 305, column: 566, scope: !14374)
!14380 = !DILocation(line: 305, column: 575, scope: !14374)
!14381 = !DILocation(line: 305, column: 565, scope: !14374)
!14382 = !DILocation(line: 305, column: 588, scope: !14383)
!14383 = !DILexicalBlockFile(scope: !14375, file: !624, discriminator: 5)
!14384 = !DILocation(line: 305, column: 584, scope: !14383)
!14385 = !DILocation(line: 305, column: 583, scope: !14383)
!14386 = !DILocation(line: 305, column: 565, scope: !14383)
!14387 = !DILocation(line: 305, column: 628, scope: !14388)
!14388 = !DILexicalBlockFile(scope: !14375, file: !624, discriminator: 6)
!14389 = !DILocation(line: 305, column: 621, scope: !14388)
!14390 = !DILocation(line: 305, column: 620, scope: !14388)
!14391 = !DILocation(line: 305, column: 618, scope: !14388)
!14392 = !DILocation(line: 305, column: 633, scope: !14388)
!14393 = !DILocation(line: 305, column: 647, scope: !14388)
!14394 = !DILocation(line: 305, column: 643, scope: !14388)
!14395 = !DILocation(line: 305, column: 642, scope: !14388)
!14396 = !DILocation(line: 305, column: 640, scope: !14388)
!14397 = !DILocation(line: 305, column: 608, scope: !14388)
!14398 = !DILocation(line: 305, column: 599, scope: !14388)
!14399 = !DILocation(line: 305, column: 595, scope: !14388)
!14400 = !DILocation(line: 305, column: 595, scope: !14401)
!14401 = !DILexicalBlockFile(scope: !14375, file: !624, discriminator: 7)
!14402 = !DILocation(line: 305, column: 687, scope: !14403)
!14403 = !DILexicalBlockFile(scope: !14375, file: !624, discriminator: 8)
!14404 = !DILocation(line: 305, column: 680, scope: !14403)
!14405 = !DILocation(line: 305, column: 679, scope: !14403)
!14406 = !DILocation(line: 305, column: 677, scope: !14403)
!14407 = !DILocation(line: 305, column: 692, scope: !14403)
!14408 = !DILocation(line: 305, column: 706, scope: !14403)
!14409 = !DILocation(line: 305, column: 702, scope: !14403)
!14410 = !DILocation(line: 305, column: 701, scope: !14403)
!14411 = !DILocation(line: 305, column: 699, scope: !14403)
!14412 = !DILocation(line: 305, column: 667, scope: !14403)
!14413 = !DILocation(line: 305, column: 595, scope: !14403)
!14414 = !DILocation(line: 305, column: 595, scope: !14415)
!14415 = !DILexicalBlockFile(scope: !14375, file: !624, discriminator: 9)
!14416 = !DILocation(line: 305, column: 565, scope: !14415)
!14417 = !DILocation(line: 305, column: 565, scope: !14418)
!14418 = !DILexicalBlockFile(scope: !14375, file: !624, discriminator: 10)
!14419 = !DILocation(line: 305, column: 720, scope: !14418)
!14420 = !DILocation(line: 305, column: 716, scope: !14418)
!14421 = !DILocation(line: 305, column: 714, scope: !14418)
!14422 = !DILocation(line: 305, column: 562, scope: !14418)
!14423 = !DILocation(line: 305, column: 726, scope: !14418)
!14424 = !DILocation(line: 305, column: 724, scope: !14418)
!14425 = !DILocation(line: 305, column: 560, scope: !14418)
!14426 = !DILocation(line: 305, column: 553, scope: !14418)
!14427 = !DILocation(line: 305, column: 548, scope: !14418)
!14428 = !DILocation(line: 305, column: 544, scope: !14418)
!14429 = !DILocation(line: 305, column: 551, scope: !14418)
!14430 = !DILocation(line: 305, column: 735, scope: !14418)
!14431 = !DILocation(line: 305, column: 538, scope: !14432)
!14432 = !DILexicalBlockFile(scope: !14369, file: !624, discriminator: 11)
!14433 = !DILocation(line: 305, column: 514, scope: !14432)
!14434 = distinct !{!14434, !14435}
!14435 = !DILocation(line: 305, column: 514, scope: !14365)
!14436 = !DILocation(line: 305, column: 744, scope: !14437)
!14437 = !DILexicalBlockFile(scope: !14365, file: !624, discriminator: 12)
!14438 = !DILocation(line: 305, column: 741, scope: !14437)
!14439 = !DILocation(line: 305, column: 765, scope: !14437)
!14440 = !DILocation(line: 305, column: 762, scope: !14437)
!14441 = !DILocation(line: 305, column: 789, scope: !14437)
!14442 = !DILocation(line: 305, column: 786, scope: !14437)
!14443 = !DILocation(line: 305, column: 806, scope: !14437)
!14444 = !DILocation(line: 305, column: 508, scope: !14445)
!14445 = !DILexicalBlockFile(scope: !14358, file: !624, discriminator: 13)
!14446 = !DILocation(line: 305, column: 483, scope: !14445)
!14447 = distinct !{!14447, !14448}
!14448 = !DILocation(line: 305, column: 483, scope: !14307)
!14449 = !DILocation(line: 305, column: 808, scope: !14450)
!14450 = !DILexicalBlockFile(scope: !14307, file: !624, discriminator: 14)
!14451 = distinct !DISubprogram(name: "blend_darken_16bit", scope: !624, file: !624, line: 301, type: !1531, isLocal: true, isDefinition: true, scopeLine: 301, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!14452 = !DILocalVariable(name: "_top", arg: 1, scope: !14451, file: !624, line: 301, type: !900)
!14453 = !DILocation(line: 301, column: 47, scope: !14451)
!14454 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !14451, file: !624, line: 301, type: !902)
!14455 = !DILocation(line: 301, column: 63, scope: !14451)
!14456 = !DILocalVariable(name: "_bottom", arg: 3, scope: !14451, file: !624, line: 301, type: !900)
!14457 = !DILocation(line: 301, column: 92, scope: !14451)
!14458 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !14451, file: !624, line: 301, type: !902)
!14459 = !DILocation(line: 301, column: 111, scope: !14451)
!14460 = !DILocalVariable(name: "_dst", arg: 5, scope: !14451, file: !624, line: 301, type: !329)
!14461 = !DILocation(line: 301, column: 137, scope: !14451)
!14462 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !14451, file: !624, line: 301, type: !902)
!14463 = !DILocation(line: 301, column: 153, scope: !14451)
!14464 = !DILocalVariable(name: "width", arg: 7, scope: !14451, file: !624, line: 301, type: !902)
!14465 = !DILocation(line: 301, column: 177, scope: !14451)
!14466 = !DILocalVariable(name: "height", arg: 8, scope: !14451, file: !624, line: 301, type: !902)
!14467 = !DILocation(line: 301, column: 194, scope: !14451)
!14468 = !DILocalVariable(name: "param", arg: 9, scope: !14451, file: !624, line: 301, type: !884)
!14469 = !DILocation(line: 301, column: 216, scope: !14451)
!14470 = !DILocalVariable(name: "values", arg: 10, scope: !14451, file: !624, line: 301, type: !544)
!14471 = !DILocation(line: 301, column: 231, scope: !14451)
!14472 = !DILocalVariable(name: "starty", arg: 11, scope: !14451, file: !624, line: 301, type: !238)
!14473 = !DILocation(line: 301, column: 243, scope: !14451)
!14474 = !DILocalVariable(name: "top", scope: !14451, file: !624, line: 301, type: !839)
!14475 = !DILocation(line: 301, column: 269, scope: !14451)
!14476 = !DILocation(line: 301, column: 292, scope: !14451)
!14477 = !DILocation(line: 301, column: 275, scope: !14451)
!14478 = !DILocalVariable(name: "bottom", scope: !14451, file: !624, line: 301, type: !839)
!14479 = !DILocation(line: 301, column: 314, scope: !14451)
!14480 = !DILocation(line: 301, column: 340, scope: !14451)
!14481 = !DILocation(line: 301, column: 323, scope: !14451)
!14482 = !DILocalVariable(name: "dst", scope: !14451, file: !624, line: 301, type: !843)
!14483 = !DILocation(line: 301, column: 359, scope: !14451)
!14484 = !DILocation(line: 301, column: 376, scope: !14451)
!14485 = !DILocation(line: 301, column: 365, scope: !14451)
!14486 = !DILocalVariable(name: "opacity", scope: !14451, file: !624, line: 301, type: !248)
!14487 = !DILocation(line: 301, column: 389, scope: !14451)
!14488 = !DILocation(line: 301, column: 399, scope: !14451)
!14489 = !DILocation(line: 301, column: 406, scope: !14451)
!14490 = !DILocalVariable(name: "i", scope: !14451, file: !624, line: 301, type: !238)
!14491 = !DILocation(line: 301, column: 419, scope: !14451)
!14492 = !DILocalVariable(name: "j", scope: !14451, file: !624, line: 301, type: !238)
!14493 = !DILocation(line: 301, column: 422, scope: !14451)
!14494 = !DILocation(line: 301, column: 438, scope: !14451)
!14495 = !DILocation(line: 301, column: 457, scope: !14451)
!14496 = !DILocation(line: 301, column: 479, scope: !14451)
!14497 = !DILocation(line: 301, column: 492, scope: !14498)
!14498 = distinct !DILexicalBlock(scope: !14451, file: !624, line: 301, column: 485)
!14499 = !DILocation(line: 301, column: 490, scope: !14498)
!14500 = !DILocation(line: 301, column: 497, scope: !14501)
!14501 = !DILexicalBlockFile(scope: !14502, file: !624, discriminator: 1)
!14502 = distinct !DILexicalBlock(scope: !14498, file: !624, line: 301, column: 485)
!14503 = !DILocation(line: 301, column: 501, scope: !14501)
!14504 = !DILocation(line: 301, column: 499, scope: !14501)
!14505 = !DILocation(line: 301, column: 485, scope: !14501)
!14506 = !DILocation(line: 301, column: 523, scope: !14507)
!14507 = !DILexicalBlockFile(scope: !14508, file: !624, discriminator: 2)
!14508 = distinct !DILexicalBlock(scope: !14509, file: !624, line: 301, column: 516)
!14509 = distinct !DILexicalBlock(scope: !14502, file: !624, line: 301, column: 514)
!14510 = !DILocation(line: 301, column: 521, scope: !14507)
!14511 = !DILocation(line: 301, column: 528, scope: !14512)
!14512 = !DILexicalBlockFile(scope: !14513, file: !624, discriminator: 3)
!14513 = distinct !DILexicalBlock(scope: !14508, file: !624, line: 301, column: 516)
!14514 = !DILocation(line: 301, column: 532, scope: !14512)
!14515 = !DILocation(line: 301, column: 530, scope: !14512)
!14516 = !DILocation(line: 301, column: 516, scope: !14512)
!14517 = !DILocation(line: 301, column: 559, scope: !14518)
!14518 = !DILexicalBlockFile(scope: !14519, file: !624, discriminator: 4)
!14519 = distinct !DILexicalBlock(scope: !14513, file: !624, line: 301, column: 544)
!14520 = !DILocation(line: 301, column: 555, scope: !14518)
!14521 = !DILocation(line: 301, column: 572, scope: !14518)
!14522 = !DILocation(line: 301, column: 568, scope: !14518)
!14523 = !DILocation(line: 301, column: 567, scope: !14518)
!14524 = !DILocation(line: 301, column: 586, scope: !14518)
!14525 = !DILocation(line: 301, column: 579, scope: !14518)
!14526 = !DILocation(line: 301, column: 578, scope: !14518)
!14527 = !DILocation(line: 301, column: 576, scope: !14518)
!14528 = !DILocation(line: 301, column: 600, scope: !14529)
!14529 = !DILexicalBlockFile(scope: !14519, file: !624, discriminator: 5)
!14530 = !DILocation(line: 301, column: 593, scope: !14529)
!14531 = !DILocation(line: 301, column: 592, scope: !14529)
!14532 = !DILocation(line: 301, column: 567, scope: !14529)
!14533 = !DILocation(line: 301, column: 611, scope: !14534)
!14534 = !DILexicalBlockFile(scope: !14519, file: !624, discriminator: 6)
!14535 = !DILocation(line: 301, column: 607, scope: !14534)
!14536 = !DILocation(line: 301, column: 606, scope: !14534)
!14537 = !DILocation(line: 301, column: 567, scope: !14534)
!14538 = !DILocation(line: 301, column: 567, scope: !14539)
!14539 = !DILexicalBlockFile(scope: !14519, file: !624, discriminator: 7)
!14540 = !DILocation(line: 301, column: 623, scope: !14539)
!14541 = !DILocation(line: 301, column: 619, scope: !14539)
!14542 = !DILocation(line: 301, column: 617, scope: !14539)
!14543 = !DILocation(line: 301, column: 564, scope: !14539)
!14544 = !DILocation(line: 301, column: 629, scope: !14539)
!14545 = !DILocation(line: 301, column: 627, scope: !14539)
!14546 = !DILocation(line: 301, column: 562, scope: !14539)
!14547 = !DILocation(line: 301, column: 555, scope: !14539)
!14548 = !DILocation(line: 301, column: 550, scope: !14539)
!14549 = !DILocation(line: 301, column: 546, scope: !14539)
!14550 = !DILocation(line: 301, column: 553, scope: !14539)
!14551 = !DILocation(line: 301, column: 638, scope: !14539)
!14552 = !DILocation(line: 301, column: 540, scope: !14553)
!14553 = !DILexicalBlockFile(scope: !14513, file: !624, discriminator: 8)
!14554 = !DILocation(line: 301, column: 516, scope: !14553)
!14555 = distinct !{!14555, !14556}
!14556 = !DILocation(line: 301, column: 516, scope: !14509)
!14557 = !DILocation(line: 301, column: 647, scope: !14558)
!14558 = !DILexicalBlockFile(scope: !14509, file: !624, discriminator: 9)
!14559 = !DILocation(line: 301, column: 644, scope: !14558)
!14560 = !DILocation(line: 301, column: 668, scope: !14558)
!14561 = !DILocation(line: 301, column: 665, scope: !14558)
!14562 = !DILocation(line: 301, column: 692, scope: !14558)
!14563 = !DILocation(line: 301, column: 689, scope: !14558)
!14564 = !DILocation(line: 301, column: 709, scope: !14558)
!14565 = !DILocation(line: 301, column: 510, scope: !14566)
!14566 = !DILexicalBlockFile(scope: !14502, file: !624, discriminator: 10)
!14567 = !DILocation(line: 301, column: 485, scope: !14566)
!14568 = distinct !{!14568, !14569}
!14569 = !DILocation(line: 301, column: 485, scope: !14451)
!14570 = !DILocation(line: 301, column: 711, scope: !14571)
!14571 = !DILexicalBlockFile(scope: !14451, file: !624, discriminator: 11)
!14572 = distinct !DISubprogram(name: "blend_difference_16bit", scope: !624, file: !624, line: 293, type: !1531, isLocal: true, isDefinition: true, scopeLine: 293, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!14573 = !DILocalVariable(name: "_top", arg: 1, scope: !14572, file: !624, line: 293, type: !900)
!14574 = !DILocation(line: 293, column: 51, scope: !14572)
!14575 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !14572, file: !624, line: 293, type: !902)
!14576 = !DILocation(line: 293, column: 67, scope: !14572)
!14577 = !DILocalVariable(name: "_bottom", arg: 3, scope: !14572, file: !624, line: 293, type: !900)
!14578 = !DILocation(line: 293, column: 96, scope: !14572)
!14579 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !14572, file: !624, line: 293, type: !902)
!14580 = !DILocation(line: 293, column: 115, scope: !14572)
!14581 = !DILocalVariable(name: "_dst", arg: 5, scope: !14572, file: !624, line: 293, type: !329)
!14582 = !DILocation(line: 293, column: 141, scope: !14572)
!14583 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !14572, file: !624, line: 293, type: !902)
!14584 = !DILocation(line: 293, column: 157, scope: !14572)
!14585 = !DILocalVariable(name: "width", arg: 7, scope: !14572, file: !624, line: 293, type: !902)
!14586 = !DILocation(line: 293, column: 181, scope: !14572)
!14587 = !DILocalVariable(name: "height", arg: 8, scope: !14572, file: !624, line: 293, type: !902)
!14588 = !DILocation(line: 293, column: 198, scope: !14572)
!14589 = !DILocalVariable(name: "param", arg: 9, scope: !14572, file: !624, line: 293, type: !884)
!14590 = !DILocation(line: 293, column: 220, scope: !14572)
!14591 = !DILocalVariable(name: "values", arg: 10, scope: !14572, file: !624, line: 293, type: !544)
!14592 = !DILocation(line: 293, column: 235, scope: !14572)
!14593 = !DILocalVariable(name: "starty", arg: 11, scope: !14572, file: !624, line: 293, type: !238)
!14594 = !DILocation(line: 293, column: 247, scope: !14572)
!14595 = !DILocalVariable(name: "top", scope: !14572, file: !624, line: 293, type: !839)
!14596 = !DILocation(line: 293, column: 273, scope: !14572)
!14597 = !DILocation(line: 293, column: 296, scope: !14572)
!14598 = !DILocation(line: 293, column: 279, scope: !14572)
!14599 = !DILocalVariable(name: "bottom", scope: !14572, file: !624, line: 293, type: !839)
!14600 = !DILocation(line: 293, column: 318, scope: !14572)
!14601 = !DILocation(line: 293, column: 344, scope: !14572)
!14602 = !DILocation(line: 293, column: 327, scope: !14572)
!14603 = !DILocalVariable(name: "dst", scope: !14572, file: !624, line: 293, type: !843)
!14604 = !DILocation(line: 293, column: 363, scope: !14572)
!14605 = !DILocation(line: 293, column: 380, scope: !14572)
!14606 = !DILocation(line: 293, column: 369, scope: !14572)
!14607 = !DILocalVariable(name: "opacity", scope: !14572, file: !624, line: 293, type: !248)
!14608 = !DILocation(line: 293, column: 393, scope: !14572)
!14609 = !DILocation(line: 293, column: 403, scope: !14572)
!14610 = !DILocation(line: 293, column: 410, scope: !14572)
!14611 = !DILocalVariable(name: "i", scope: !14572, file: !624, line: 293, type: !238)
!14612 = !DILocation(line: 293, column: 423, scope: !14572)
!14613 = !DILocalVariable(name: "j", scope: !14572, file: !624, line: 293, type: !238)
!14614 = !DILocation(line: 293, column: 426, scope: !14572)
!14615 = !DILocation(line: 293, column: 442, scope: !14572)
!14616 = !DILocation(line: 293, column: 461, scope: !14572)
!14617 = !DILocation(line: 293, column: 483, scope: !14572)
!14618 = !DILocation(line: 293, column: 496, scope: !14619)
!14619 = distinct !DILexicalBlock(scope: !14572, file: !624, line: 293, column: 489)
!14620 = !DILocation(line: 293, column: 494, scope: !14619)
!14621 = !DILocation(line: 293, column: 501, scope: !14622)
!14622 = !DILexicalBlockFile(scope: !14623, file: !624, discriminator: 1)
!14623 = distinct !DILexicalBlock(scope: !14619, file: !624, line: 293, column: 489)
!14624 = !DILocation(line: 293, column: 505, scope: !14622)
!14625 = !DILocation(line: 293, column: 503, scope: !14622)
!14626 = !DILocation(line: 293, column: 489, scope: !14622)
!14627 = !DILocation(line: 293, column: 527, scope: !14628)
!14628 = !DILexicalBlockFile(scope: !14629, file: !624, discriminator: 2)
!14629 = distinct !DILexicalBlock(scope: !14630, file: !624, line: 293, column: 520)
!14630 = distinct !DILexicalBlock(scope: !14623, file: !624, line: 293, column: 518)
!14631 = !DILocation(line: 293, column: 525, scope: !14628)
!14632 = !DILocation(line: 293, column: 532, scope: !14633)
!14633 = !DILexicalBlockFile(scope: !14634, file: !624, discriminator: 3)
!14634 = distinct !DILexicalBlock(scope: !14629, file: !624, line: 293, column: 520)
!14635 = !DILocation(line: 293, column: 536, scope: !14633)
!14636 = !DILocation(line: 293, column: 534, scope: !14633)
!14637 = !DILocation(line: 293, column: 520, scope: !14633)
!14638 = !DILocation(line: 293, column: 563, scope: !14639)
!14639 = !DILexicalBlockFile(scope: !14640, file: !624, discriminator: 4)
!14640 = distinct !DILexicalBlock(scope: !14634, file: !624, line: 293, column: 548)
!14641 = !DILocation(line: 293, column: 559, scope: !14639)
!14642 = !DILocation(line: 293, column: 576, scope: !14639)
!14643 = !DILocation(line: 293, column: 572, scope: !14639)
!14644 = !DILocation(line: 293, column: 588, scope: !14639)
!14645 = !DILocation(line: 293, column: 581, scope: !14639)
!14646 = !DILocation(line: 293, column: 579, scope: !14639)
!14647 = !DILocation(line: 293, column: 592, scope: !14639)
!14648 = !DILocation(line: 293, column: 571, scope: !14639)
!14649 = !DILocation(line: 293, column: 604, scope: !14650)
!14650 = !DILexicalBlockFile(scope: !14640, file: !624, discriminator: 5)
!14651 = !DILocation(line: 293, column: 600, scope: !14650)
!14652 = !DILocation(line: 293, column: 616, scope: !14650)
!14653 = !DILocation(line: 293, column: 609, scope: !14650)
!14654 = !DILocation(line: 293, column: 607, scope: !14650)
!14655 = !DILocation(line: 293, column: 571, scope: !14650)
!14656 = !DILocation(line: 293, column: 629, scope: !14657)
!14657 = !DILexicalBlockFile(scope: !14640, file: !624, discriminator: 6)
!14658 = !DILocation(line: 293, column: 625, scope: !14657)
!14659 = !DILocation(line: 293, column: 641, scope: !14657)
!14660 = !DILocation(line: 293, column: 634, scope: !14657)
!14661 = !DILocation(line: 293, column: 632, scope: !14657)
!14662 = !DILocation(line: 293, column: 623, scope: !14657)
!14663 = !DILocation(line: 293, column: 571, scope: !14657)
!14664 = !DILocation(line: 293, column: 571, scope: !14665)
!14665 = !DILexicalBlockFile(scope: !14640, file: !624, discriminator: 7)
!14666 = !DILocation(line: 293, column: 654, scope: !14665)
!14667 = !DILocation(line: 293, column: 650, scope: !14665)
!14668 = !DILocation(line: 293, column: 648, scope: !14665)
!14669 = !DILocation(line: 293, column: 568, scope: !14665)
!14670 = !DILocation(line: 293, column: 660, scope: !14665)
!14671 = !DILocation(line: 293, column: 658, scope: !14665)
!14672 = !DILocation(line: 293, column: 566, scope: !14665)
!14673 = !DILocation(line: 293, column: 559, scope: !14665)
!14674 = !DILocation(line: 293, column: 554, scope: !14665)
!14675 = !DILocation(line: 293, column: 550, scope: !14665)
!14676 = !DILocation(line: 293, column: 557, scope: !14665)
!14677 = !DILocation(line: 293, column: 669, scope: !14665)
!14678 = !DILocation(line: 293, column: 544, scope: !14679)
!14679 = !DILexicalBlockFile(scope: !14634, file: !624, discriminator: 8)
!14680 = !DILocation(line: 293, column: 520, scope: !14679)
!14681 = distinct !{!14681, !14682}
!14682 = !DILocation(line: 293, column: 520, scope: !14630)
!14683 = !DILocation(line: 293, column: 678, scope: !14684)
!14684 = !DILexicalBlockFile(scope: !14630, file: !624, discriminator: 9)
!14685 = !DILocation(line: 293, column: 675, scope: !14684)
!14686 = !DILocation(line: 293, column: 699, scope: !14684)
!14687 = !DILocation(line: 293, column: 696, scope: !14684)
!14688 = !DILocation(line: 293, column: 723, scope: !14684)
!14689 = !DILocation(line: 293, column: 720, scope: !14684)
!14690 = !DILocation(line: 293, column: 740, scope: !14684)
!14691 = !DILocation(line: 293, column: 514, scope: !14692)
!14692 = !DILexicalBlockFile(scope: !14623, file: !624, discriminator: 10)
!14693 = !DILocation(line: 293, column: 489, scope: !14692)
!14694 = distinct !{!14694, !14695}
!14695 = !DILocation(line: 293, column: 489, scope: !14572)
!14696 = !DILocation(line: 293, column: 742, scope: !14697)
!14697 = !DILexicalBlockFile(scope: !14572, file: !624, discriminator: 11)
!14698 = distinct !DISubprogram(name: "blend_grainextract_16bit", scope: !624, file: !624, line: 294, type: !1531, isLocal: true, isDefinition: true, scopeLine: 294, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!14699 = !DILocation(line: 181, column: 99, scope: !13968, inlinedAt: !14700)
!14700 = distinct !DILocation(line: 294, column: 572, scope: !14701)
!14701 = !DILexicalBlockFile(scope: !14702, file: !624, discriminator: 4)
!14702 = distinct !DILexicalBlock(scope: !14703, file: !624, line: 294, column: 550)
!14703 = distinct !DILexicalBlock(scope: !14704, file: !624, line: 294, column: 522)
!14704 = distinct !DILexicalBlock(scope: !14705, file: !624, line: 294, column: 522)
!14705 = distinct !DILexicalBlock(scope: !14706, file: !624, line: 294, column: 520)
!14706 = distinct !DILexicalBlock(scope: !14707, file: !624, line: 294, column: 491)
!14707 = distinct !DILexicalBlock(scope: !14698, file: !624, line: 294, column: 491)
!14708 = !DILocalVariable(name: "_top", arg: 1, scope: !14698, file: !624, line: 294, type: !900)
!14709 = !DILocation(line: 294, column: 53, scope: !14698)
!14710 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !14698, file: !624, line: 294, type: !902)
!14711 = !DILocation(line: 294, column: 69, scope: !14698)
!14712 = !DILocalVariable(name: "_bottom", arg: 3, scope: !14698, file: !624, line: 294, type: !900)
!14713 = !DILocation(line: 294, column: 98, scope: !14698)
!14714 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !14698, file: !624, line: 294, type: !902)
!14715 = !DILocation(line: 294, column: 117, scope: !14698)
!14716 = !DILocalVariable(name: "_dst", arg: 5, scope: !14698, file: !624, line: 294, type: !329)
!14717 = !DILocation(line: 294, column: 143, scope: !14698)
!14718 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !14698, file: !624, line: 294, type: !902)
!14719 = !DILocation(line: 294, column: 159, scope: !14698)
!14720 = !DILocalVariable(name: "width", arg: 7, scope: !14698, file: !624, line: 294, type: !902)
!14721 = !DILocation(line: 294, column: 183, scope: !14698)
!14722 = !DILocalVariable(name: "height", arg: 8, scope: !14698, file: !624, line: 294, type: !902)
!14723 = !DILocation(line: 294, column: 200, scope: !14698)
!14724 = !DILocalVariable(name: "param", arg: 9, scope: !14698, file: !624, line: 294, type: !884)
!14725 = !DILocation(line: 294, column: 222, scope: !14698)
!14726 = !DILocalVariable(name: "values", arg: 10, scope: !14698, file: !624, line: 294, type: !544)
!14727 = !DILocation(line: 294, column: 237, scope: !14698)
!14728 = !DILocalVariable(name: "starty", arg: 11, scope: !14698, file: !624, line: 294, type: !238)
!14729 = !DILocation(line: 294, column: 249, scope: !14698)
!14730 = !DILocalVariable(name: "top", scope: !14698, file: !624, line: 294, type: !839)
!14731 = !DILocation(line: 294, column: 275, scope: !14698)
!14732 = !DILocation(line: 294, column: 298, scope: !14698)
!14733 = !DILocation(line: 294, column: 281, scope: !14698)
!14734 = !DILocalVariable(name: "bottom", scope: !14698, file: !624, line: 294, type: !839)
!14735 = !DILocation(line: 294, column: 320, scope: !14698)
!14736 = !DILocation(line: 294, column: 346, scope: !14698)
!14737 = !DILocation(line: 294, column: 329, scope: !14698)
!14738 = !DILocalVariable(name: "dst", scope: !14698, file: !624, line: 294, type: !843)
!14739 = !DILocation(line: 294, column: 365, scope: !14698)
!14740 = !DILocation(line: 294, column: 382, scope: !14698)
!14741 = !DILocation(line: 294, column: 371, scope: !14698)
!14742 = !DILocalVariable(name: "opacity", scope: !14698, file: !624, line: 294, type: !248)
!14743 = !DILocation(line: 294, column: 395, scope: !14698)
!14744 = !DILocation(line: 294, column: 405, scope: !14698)
!14745 = !DILocation(line: 294, column: 412, scope: !14698)
!14746 = !DILocalVariable(name: "i", scope: !14698, file: !624, line: 294, type: !238)
!14747 = !DILocation(line: 294, column: 425, scope: !14698)
!14748 = !DILocalVariable(name: "j", scope: !14698, file: !624, line: 294, type: !238)
!14749 = !DILocation(line: 294, column: 428, scope: !14698)
!14750 = !DILocation(line: 294, column: 444, scope: !14698)
!14751 = !DILocation(line: 294, column: 463, scope: !14698)
!14752 = !DILocation(line: 294, column: 485, scope: !14698)
!14753 = !DILocation(line: 294, column: 498, scope: !14707)
!14754 = !DILocation(line: 294, column: 496, scope: !14707)
!14755 = !DILocation(line: 294, column: 503, scope: !14756)
!14756 = !DILexicalBlockFile(scope: !14706, file: !624, discriminator: 1)
!14757 = !DILocation(line: 294, column: 507, scope: !14756)
!14758 = !DILocation(line: 294, column: 505, scope: !14756)
!14759 = !DILocation(line: 294, column: 491, scope: !14756)
!14760 = !DILocation(line: 294, column: 529, scope: !14761)
!14761 = !DILexicalBlockFile(scope: !14704, file: !624, discriminator: 2)
!14762 = !DILocation(line: 294, column: 527, scope: !14761)
!14763 = !DILocation(line: 294, column: 534, scope: !14764)
!14764 = !DILexicalBlockFile(scope: !14703, file: !624, discriminator: 3)
!14765 = !DILocation(line: 294, column: 538, scope: !14764)
!14766 = !DILocation(line: 294, column: 536, scope: !14764)
!14767 = !DILocation(line: 294, column: 522, scope: !14764)
!14768 = !DILocation(line: 294, column: 565, scope: !14701)
!14769 = !DILocation(line: 294, column: 561, scope: !14701)
!14770 = !DILocation(line: 294, column: 601, scope: !14701)
!14771 = !DILocation(line: 294, column: 597, scope: !14701)
!14772 = !DILocation(line: 294, column: 595, scope: !14701)
!14773 = !DILocation(line: 294, column: 613, scope: !14701)
!14774 = !DILocation(line: 294, column: 606, scope: !14701)
!14775 = !DILocation(line: 294, column: 604, scope: !14701)
!14776 = !DILocation(line: 294, column: 572, scope: !14701)
!14777 = !DILocation(line: 183, column: 9, scope: !14050, inlinedAt: !14700)
!14778 = !DILocation(line: 183, column: 10, scope: !14050, inlinedAt: !14700)
!14779 = !DILocation(line: 183, column: 9, scope: !13968, inlinedAt: !14700)
!14780 = !DILocation(line: 183, column: 31, scope: !14054, inlinedAt: !14700)
!14781 = !DILocation(line: 183, column: 30, scope: !14054, inlinedAt: !14700)
!14782 = !DILocation(line: 183, column: 33, scope: !14054, inlinedAt: !14700)
!14783 = !DILocation(line: 183, column: 29, scope: !14054, inlinedAt: !14700)
!14784 = !DILocation(line: 183, column: 22, scope: !14054, inlinedAt: !14700)
!14785 = !DILocation(line: 184, column: 17, scope: !14050, inlinedAt: !14700)
!14786 = !DILocation(line: 184, column: 10, scope: !14050, inlinedAt: !14700)
!14787 = !DILocation(line: 185, column: 1, scope: !13968, inlinedAt: !14700)
!14788 = !DILocation(line: 294, column: 571, scope: !14701)
!14789 = !DILocation(line: 294, column: 624, scope: !14701)
!14790 = !DILocation(line: 294, column: 620, scope: !14701)
!14791 = !DILocation(line: 294, column: 618, scope: !14701)
!14792 = !DILocation(line: 294, column: 570, scope: !14701)
!14793 = !DILocation(line: 294, column: 630, scope: !14701)
!14794 = !DILocation(line: 294, column: 628, scope: !14701)
!14795 = !DILocation(line: 294, column: 568, scope: !14701)
!14796 = !DILocation(line: 294, column: 556, scope: !14701)
!14797 = !DILocation(line: 294, column: 552, scope: !14701)
!14798 = !DILocation(line: 294, column: 559, scope: !14701)
!14799 = !DILocation(line: 294, column: 639, scope: !14701)
!14800 = !DILocation(line: 294, column: 546, scope: !14801)
!14801 = !DILexicalBlockFile(scope: !14703, file: !624, discriminator: 5)
!14802 = !DILocation(line: 294, column: 522, scope: !14801)
!14803 = distinct !{!14803, !14804}
!14804 = !DILocation(line: 294, column: 522, scope: !14705)
!14805 = !DILocation(line: 294, column: 648, scope: !14806)
!14806 = !DILexicalBlockFile(scope: !14705, file: !624, discriminator: 6)
!14807 = !DILocation(line: 294, column: 645, scope: !14806)
!14808 = !DILocation(line: 294, column: 669, scope: !14806)
!14809 = !DILocation(line: 294, column: 666, scope: !14806)
!14810 = !DILocation(line: 294, column: 693, scope: !14806)
!14811 = !DILocation(line: 294, column: 690, scope: !14806)
!14812 = !DILocation(line: 294, column: 710, scope: !14806)
!14813 = !DILocation(line: 294, column: 516, scope: !14814)
!14814 = !DILexicalBlockFile(scope: !14706, file: !624, discriminator: 7)
!14815 = !DILocation(line: 294, column: 491, scope: !14814)
!14816 = distinct !{!14816, !14817}
!14817 = !DILocation(line: 294, column: 491, scope: !14698)
!14818 = !DILocation(line: 294, column: 712, scope: !14819)
!14819 = !DILexicalBlockFile(scope: !14698, file: !624, discriminator: 8)
!14820 = distinct !DISubprogram(name: "blend_divide_16bit", scope: !624, file: !624, line: 303, type: !1531, isLocal: true, isDefinition: true, scopeLine: 303, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!14821 = !DILocation(line: 181, column: 99, scope: !13968, inlinedAt: !14822)
!14822 = distinct !DILocation(line: 303, column: 566, scope: !14823)
!14823 = !DILexicalBlockFile(scope: !14824, file: !624, discriminator: 7)
!14824 = distinct !DILexicalBlock(scope: !14825, file: !624, line: 303, column: 544)
!14825 = distinct !DILexicalBlock(scope: !14826, file: !624, line: 303, column: 516)
!14826 = distinct !DILexicalBlock(scope: !14827, file: !624, line: 303, column: 516)
!14827 = distinct !DILexicalBlock(scope: !14828, file: !624, line: 303, column: 514)
!14828 = distinct !DILexicalBlock(scope: !14829, file: !624, line: 303, column: 485)
!14829 = distinct !DILexicalBlock(scope: !14820, file: !624, line: 303, column: 485)
!14830 = !DILocalVariable(name: "_top", arg: 1, scope: !14820, file: !624, line: 303, type: !900)
!14831 = !DILocation(line: 303, column: 47, scope: !14820)
!14832 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !14820, file: !624, line: 303, type: !902)
!14833 = !DILocation(line: 303, column: 63, scope: !14820)
!14834 = !DILocalVariable(name: "_bottom", arg: 3, scope: !14820, file: !624, line: 303, type: !900)
!14835 = !DILocation(line: 303, column: 92, scope: !14820)
!14836 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !14820, file: !624, line: 303, type: !902)
!14837 = !DILocation(line: 303, column: 111, scope: !14820)
!14838 = !DILocalVariable(name: "_dst", arg: 5, scope: !14820, file: !624, line: 303, type: !329)
!14839 = !DILocation(line: 303, column: 137, scope: !14820)
!14840 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !14820, file: !624, line: 303, type: !902)
!14841 = !DILocation(line: 303, column: 153, scope: !14820)
!14842 = !DILocalVariable(name: "width", arg: 7, scope: !14820, file: !624, line: 303, type: !902)
!14843 = !DILocation(line: 303, column: 177, scope: !14820)
!14844 = !DILocalVariable(name: "height", arg: 8, scope: !14820, file: !624, line: 303, type: !902)
!14845 = !DILocation(line: 303, column: 194, scope: !14820)
!14846 = !DILocalVariable(name: "param", arg: 9, scope: !14820, file: !624, line: 303, type: !884)
!14847 = !DILocation(line: 303, column: 216, scope: !14820)
!14848 = !DILocalVariable(name: "values", arg: 10, scope: !14820, file: !624, line: 303, type: !544)
!14849 = !DILocation(line: 303, column: 231, scope: !14820)
!14850 = !DILocalVariable(name: "starty", arg: 11, scope: !14820, file: !624, line: 303, type: !238)
!14851 = !DILocation(line: 303, column: 243, scope: !14820)
!14852 = !DILocalVariable(name: "top", scope: !14820, file: !624, line: 303, type: !839)
!14853 = !DILocation(line: 303, column: 269, scope: !14820)
!14854 = !DILocation(line: 303, column: 292, scope: !14820)
!14855 = !DILocation(line: 303, column: 275, scope: !14820)
!14856 = !DILocalVariable(name: "bottom", scope: !14820, file: !624, line: 303, type: !839)
!14857 = !DILocation(line: 303, column: 314, scope: !14820)
!14858 = !DILocation(line: 303, column: 340, scope: !14820)
!14859 = !DILocation(line: 303, column: 323, scope: !14820)
!14860 = !DILocalVariable(name: "dst", scope: !14820, file: !624, line: 303, type: !843)
!14861 = !DILocation(line: 303, column: 359, scope: !14820)
!14862 = !DILocation(line: 303, column: 376, scope: !14820)
!14863 = !DILocation(line: 303, column: 365, scope: !14820)
!14864 = !DILocalVariable(name: "opacity", scope: !14820, file: !624, line: 303, type: !248)
!14865 = !DILocation(line: 303, column: 389, scope: !14820)
!14866 = !DILocation(line: 303, column: 399, scope: !14820)
!14867 = !DILocation(line: 303, column: 406, scope: !14820)
!14868 = !DILocalVariable(name: "i", scope: !14820, file: !624, line: 303, type: !238)
!14869 = !DILocation(line: 303, column: 419, scope: !14820)
!14870 = !DILocalVariable(name: "j", scope: !14820, file: !624, line: 303, type: !238)
!14871 = !DILocation(line: 303, column: 422, scope: !14820)
!14872 = !DILocation(line: 303, column: 438, scope: !14820)
!14873 = !DILocation(line: 303, column: 457, scope: !14820)
!14874 = !DILocation(line: 303, column: 479, scope: !14820)
!14875 = !DILocation(line: 303, column: 492, scope: !14829)
!14876 = !DILocation(line: 303, column: 490, scope: !14829)
!14877 = !DILocation(line: 303, column: 497, scope: !14878)
!14878 = !DILexicalBlockFile(scope: !14828, file: !624, discriminator: 1)
!14879 = !DILocation(line: 303, column: 501, scope: !14878)
!14880 = !DILocation(line: 303, column: 499, scope: !14878)
!14881 = !DILocation(line: 303, column: 485, scope: !14878)
!14882 = !DILocation(line: 303, column: 523, scope: !14883)
!14883 = !DILexicalBlockFile(scope: !14826, file: !624, discriminator: 2)
!14884 = !DILocation(line: 303, column: 521, scope: !14883)
!14885 = !DILocation(line: 303, column: 528, scope: !14886)
!14886 = !DILexicalBlockFile(scope: !14825, file: !624, discriminator: 3)
!14887 = !DILocation(line: 303, column: 532, scope: !14886)
!14888 = !DILocation(line: 303, column: 530, scope: !14886)
!14889 = !DILocation(line: 303, column: 516, scope: !14886)
!14890 = !DILocation(line: 303, column: 559, scope: !14891)
!14891 = !DILexicalBlockFile(scope: !14824, file: !624, discriminator: 4)
!14892 = !DILocation(line: 303, column: 555, scope: !14891)
!14893 = !DILocation(line: 303, column: 590, scope: !14891)
!14894 = !DILocation(line: 303, column: 583, scope: !14891)
!14895 = !DILocation(line: 303, column: 593, scope: !14891)
!14896 = !DILocation(line: 303, column: 583, scope: !14897)
!14897 = !DILexicalBlockFile(scope: !14824, file: !624, discriminator: 5)
!14898 = !DILocation(line: 303, column: 620, scope: !14899)
!14899 = !DILexicalBlockFile(scope: !14824, file: !624, discriminator: 6)
!14900 = !DILocation(line: 303, column: 616, scope: !14899)
!14901 = !DILocation(line: 303, column: 614, scope: !14899)
!14902 = !DILocation(line: 303, column: 632, scope: !14899)
!14903 = !DILocation(line: 303, column: 625, scope: !14899)
!14904 = !DILocation(line: 303, column: 623, scope: !14899)
!14905 = !DILocation(line: 303, column: 583, scope: !14899)
!14906 = !DILocation(line: 303, column: 583, scope: !14823)
!14907 = !DILocation(line: 303, column: 566, scope: !14823)
!14908 = !DILocation(line: 183, column: 9, scope: !14050, inlinedAt: !14822)
!14909 = !DILocation(line: 183, column: 10, scope: !14050, inlinedAt: !14822)
!14910 = !DILocation(line: 183, column: 9, scope: !13968, inlinedAt: !14822)
!14911 = !DILocation(line: 183, column: 31, scope: !14054, inlinedAt: !14822)
!14912 = !DILocation(line: 183, column: 30, scope: !14054, inlinedAt: !14822)
!14913 = !DILocation(line: 183, column: 33, scope: !14054, inlinedAt: !14822)
!14914 = !DILocation(line: 183, column: 29, scope: !14054, inlinedAt: !14822)
!14915 = !DILocation(line: 183, column: 22, scope: !14054, inlinedAt: !14822)
!14916 = !DILocation(line: 184, column: 17, scope: !14050, inlinedAt: !14822)
!14917 = !DILocation(line: 184, column: 10, scope: !14050, inlinedAt: !14822)
!14918 = !DILocation(line: 185, column: 1, scope: !13968, inlinedAt: !14822)
!14919 = !DILocation(line: 303, column: 565, scope: !14823)
!14920 = !DILocation(line: 303, column: 643, scope: !14823)
!14921 = !DILocation(line: 303, column: 639, scope: !14823)
!14922 = !DILocation(line: 303, column: 637, scope: !14823)
!14923 = !DILocation(line: 303, column: 564, scope: !14823)
!14924 = !DILocation(line: 303, column: 649, scope: !14823)
!14925 = !DILocation(line: 303, column: 647, scope: !14823)
!14926 = !DILocation(line: 303, column: 562, scope: !14823)
!14927 = !DILocation(line: 303, column: 555, scope: !14823)
!14928 = !DILocation(line: 303, column: 550, scope: !14823)
!14929 = !DILocation(line: 303, column: 546, scope: !14823)
!14930 = !DILocation(line: 303, column: 553, scope: !14823)
!14931 = !DILocation(line: 303, column: 658, scope: !14823)
!14932 = !DILocation(line: 303, column: 540, scope: !14933)
!14933 = !DILexicalBlockFile(scope: !14825, file: !624, discriminator: 8)
!14934 = !DILocation(line: 303, column: 516, scope: !14933)
!14935 = distinct !{!14935, !14936}
!14936 = !DILocation(line: 303, column: 516, scope: !14827)
!14937 = !DILocation(line: 303, column: 667, scope: !14938)
!14938 = !DILexicalBlockFile(scope: !14827, file: !624, discriminator: 9)
!14939 = !DILocation(line: 303, column: 664, scope: !14938)
!14940 = !DILocation(line: 303, column: 688, scope: !14938)
!14941 = !DILocation(line: 303, column: 685, scope: !14938)
!14942 = !DILocation(line: 303, column: 712, scope: !14938)
!14943 = !DILocation(line: 303, column: 709, scope: !14938)
!14944 = !DILocation(line: 303, column: 729, scope: !14938)
!14945 = !DILocation(line: 303, column: 510, scope: !14946)
!14946 = !DILexicalBlockFile(scope: !14828, file: !624, discriminator: 10)
!14947 = !DILocation(line: 303, column: 485, scope: !14946)
!14948 = distinct !{!14948, !14949}
!14949 = !DILocation(line: 303, column: 485, scope: !14820)
!14950 = !DILocation(line: 303, column: 731, scope: !14951)
!14951 = !DILexicalBlockFile(scope: !14820, file: !624, discriminator: 11)
!14952 = distinct !DISubprogram(name: "blend_dodge_16bit", scope: !624, file: !624, line: 304, type: !1531, isLocal: true, isDefinition: true, scopeLine: 304, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!14953 = !DILocalVariable(name: "_top", arg: 1, scope: !14952, file: !624, line: 304, type: !900)
!14954 = !DILocation(line: 304, column: 46, scope: !14952)
!14955 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !14952, file: !624, line: 304, type: !902)
!14956 = !DILocation(line: 304, column: 62, scope: !14952)
!14957 = !DILocalVariable(name: "_bottom", arg: 3, scope: !14952, file: !624, line: 304, type: !900)
!14958 = !DILocation(line: 304, column: 91, scope: !14952)
!14959 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !14952, file: !624, line: 304, type: !902)
!14960 = !DILocation(line: 304, column: 110, scope: !14952)
!14961 = !DILocalVariable(name: "_dst", arg: 5, scope: !14952, file: !624, line: 304, type: !329)
!14962 = !DILocation(line: 304, column: 136, scope: !14952)
!14963 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !14952, file: !624, line: 304, type: !902)
!14964 = !DILocation(line: 304, column: 152, scope: !14952)
!14965 = !DILocalVariable(name: "width", arg: 7, scope: !14952, file: !624, line: 304, type: !902)
!14966 = !DILocation(line: 304, column: 176, scope: !14952)
!14967 = !DILocalVariable(name: "height", arg: 8, scope: !14952, file: !624, line: 304, type: !902)
!14968 = !DILocation(line: 304, column: 193, scope: !14952)
!14969 = !DILocalVariable(name: "param", arg: 9, scope: !14952, file: !624, line: 304, type: !884)
!14970 = !DILocation(line: 304, column: 215, scope: !14952)
!14971 = !DILocalVariable(name: "values", arg: 10, scope: !14952, file: !624, line: 304, type: !544)
!14972 = !DILocation(line: 304, column: 230, scope: !14952)
!14973 = !DILocalVariable(name: "starty", arg: 11, scope: !14952, file: !624, line: 304, type: !238)
!14974 = !DILocation(line: 304, column: 242, scope: !14952)
!14975 = !DILocalVariable(name: "top", scope: !14952, file: !624, line: 304, type: !839)
!14976 = !DILocation(line: 304, column: 268, scope: !14952)
!14977 = !DILocation(line: 304, column: 291, scope: !14952)
!14978 = !DILocation(line: 304, column: 274, scope: !14952)
!14979 = !DILocalVariable(name: "bottom", scope: !14952, file: !624, line: 304, type: !839)
!14980 = !DILocation(line: 304, column: 313, scope: !14952)
!14981 = !DILocation(line: 304, column: 339, scope: !14952)
!14982 = !DILocation(line: 304, column: 322, scope: !14952)
!14983 = !DILocalVariable(name: "dst", scope: !14952, file: !624, line: 304, type: !843)
!14984 = !DILocation(line: 304, column: 358, scope: !14952)
!14985 = !DILocation(line: 304, column: 375, scope: !14952)
!14986 = !DILocation(line: 304, column: 364, scope: !14952)
!14987 = !DILocalVariable(name: "opacity", scope: !14952, file: !624, line: 304, type: !248)
!14988 = !DILocation(line: 304, column: 388, scope: !14952)
!14989 = !DILocation(line: 304, column: 398, scope: !14952)
!14990 = !DILocation(line: 304, column: 405, scope: !14952)
!14991 = !DILocalVariable(name: "i", scope: !14952, file: !624, line: 304, type: !238)
!14992 = !DILocation(line: 304, column: 418, scope: !14952)
!14993 = !DILocalVariable(name: "j", scope: !14952, file: !624, line: 304, type: !238)
!14994 = !DILocation(line: 304, column: 421, scope: !14952)
!14995 = !DILocation(line: 304, column: 437, scope: !14952)
!14996 = !DILocation(line: 304, column: 456, scope: !14952)
!14997 = !DILocation(line: 304, column: 478, scope: !14952)
!14998 = !DILocation(line: 304, column: 491, scope: !14999)
!14999 = distinct !DILexicalBlock(scope: !14952, file: !624, line: 304, column: 484)
!15000 = !DILocation(line: 304, column: 489, scope: !14999)
!15001 = !DILocation(line: 304, column: 496, scope: !15002)
!15002 = !DILexicalBlockFile(scope: !15003, file: !624, discriminator: 1)
!15003 = distinct !DILexicalBlock(scope: !14999, file: !624, line: 304, column: 484)
!15004 = !DILocation(line: 304, column: 500, scope: !15002)
!15005 = !DILocation(line: 304, column: 498, scope: !15002)
!15006 = !DILocation(line: 304, column: 484, scope: !15002)
!15007 = !DILocation(line: 304, column: 522, scope: !15008)
!15008 = !DILexicalBlockFile(scope: !15009, file: !624, discriminator: 2)
!15009 = distinct !DILexicalBlock(scope: !15010, file: !624, line: 304, column: 515)
!15010 = distinct !DILexicalBlock(scope: !15003, file: !624, line: 304, column: 513)
!15011 = !DILocation(line: 304, column: 520, scope: !15008)
!15012 = !DILocation(line: 304, column: 527, scope: !15013)
!15013 = !DILexicalBlockFile(scope: !15014, file: !624, discriminator: 3)
!15014 = distinct !DILexicalBlock(scope: !15009, file: !624, line: 304, column: 515)
!15015 = !DILocation(line: 304, column: 531, scope: !15013)
!15016 = !DILocation(line: 304, column: 529, scope: !15013)
!15017 = !DILocation(line: 304, column: 515, scope: !15013)
!15018 = !DILocation(line: 304, column: 558, scope: !15019)
!15019 = !DILexicalBlockFile(scope: !15020, file: !624, discriminator: 4)
!15020 = distinct !DILexicalBlock(scope: !15014, file: !624, line: 304, column: 543)
!15021 = !DILocation(line: 304, column: 554, scope: !15019)
!15022 = !DILocation(line: 304, column: 572, scope: !15019)
!15023 = !DILocation(line: 304, column: 568, scope: !15019)
!15024 = !DILocation(line: 304, column: 567, scope: !15019)
!15025 = !DILocation(line: 304, column: 576, scope: !15019)
!15026 = !DILocation(line: 304, column: 566, scope: !15019)
!15027 = !DILocation(line: 304, column: 593, scope: !15028)
!15028 = !DILexicalBlockFile(scope: !15020, file: !624, discriminator: 5)
!15029 = !DILocation(line: 304, column: 589, scope: !15028)
!15030 = !DILocation(line: 304, column: 588, scope: !15028)
!15031 = !DILocation(line: 304, column: 566, scope: !15028)
!15032 = !DILocation(line: 304, column: 621, scope: !15033)
!15033 = !DILexicalBlockFile(scope: !15020, file: !624, discriminator: 6)
!15034 = !DILocation(line: 304, column: 614, scope: !15033)
!15035 = !DILocation(line: 304, column: 613, scope: !15033)
!15036 = !DILocation(line: 304, column: 625, scope: !15033)
!15037 = !DILocation(line: 304, column: 648, scope: !15033)
!15038 = !DILocation(line: 304, column: 644, scope: !15033)
!15039 = !DILocation(line: 304, column: 643, scope: !15033)
!15040 = !DILocation(line: 304, column: 641, scope: !15033)
!15041 = !DILocation(line: 304, column: 632, scope: !15033)
!15042 = !DILocation(line: 304, column: 608, scope: !15033)
!15043 = !DILocation(line: 304, column: 600, scope: !15033)
!15044 = !DILocation(line: 304, column: 668, scope: !15045)
!15045 = !DILexicalBlockFile(scope: !15020, file: !624, discriminator: 7)
!15046 = !DILocation(line: 304, column: 661, scope: !15045)
!15047 = !DILocation(line: 304, column: 660, scope: !15045)
!15048 = !DILocation(line: 304, column: 672, scope: !15045)
!15049 = !DILocation(line: 304, column: 695, scope: !15045)
!15050 = !DILocation(line: 304, column: 691, scope: !15045)
!15051 = !DILocation(line: 304, column: 690, scope: !15045)
!15052 = !DILocation(line: 304, column: 688, scope: !15045)
!15053 = !DILocation(line: 304, column: 679, scope: !15045)
!15054 = !DILocation(line: 304, column: 600, scope: !15045)
!15055 = !DILocation(line: 304, column: 600, scope: !15056)
!15056 = !DILexicalBlockFile(scope: !15020, file: !624, discriminator: 8)
!15057 = !DILocation(line: 304, column: 600, scope: !15058)
!15058 = !DILexicalBlockFile(scope: !15020, file: !624, discriminator: 9)
!15059 = !DILocation(line: 304, column: 566, scope: !15058)
!15060 = !DILocation(line: 304, column: 566, scope: !15061)
!15061 = !DILexicalBlockFile(scope: !15020, file: !624, discriminator: 10)
!15062 = !DILocation(line: 304, column: 721, scope: !15061)
!15063 = !DILocation(line: 304, column: 717, scope: !15061)
!15064 = !DILocation(line: 304, column: 715, scope: !15061)
!15065 = !DILocation(line: 304, column: 563, scope: !15061)
!15066 = !DILocation(line: 304, column: 727, scope: !15061)
!15067 = !DILocation(line: 304, column: 725, scope: !15061)
!15068 = !DILocation(line: 304, column: 561, scope: !15061)
!15069 = !DILocation(line: 304, column: 554, scope: !15061)
!15070 = !DILocation(line: 304, column: 549, scope: !15061)
!15071 = !DILocation(line: 304, column: 545, scope: !15061)
!15072 = !DILocation(line: 304, column: 552, scope: !15061)
!15073 = !DILocation(line: 304, column: 736, scope: !15061)
!15074 = !DILocation(line: 304, column: 539, scope: !15075)
!15075 = !DILexicalBlockFile(scope: !15014, file: !624, discriminator: 11)
!15076 = !DILocation(line: 304, column: 515, scope: !15075)
!15077 = distinct !{!15077, !15078}
!15078 = !DILocation(line: 304, column: 515, scope: !15010)
!15079 = !DILocation(line: 304, column: 745, scope: !15080)
!15080 = !DILexicalBlockFile(scope: !15010, file: !624, discriminator: 12)
!15081 = !DILocation(line: 304, column: 742, scope: !15080)
!15082 = !DILocation(line: 304, column: 766, scope: !15080)
!15083 = !DILocation(line: 304, column: 763, scope: !15080)
!15084 = !DILocation(line: 304, column: 790, scope: !15080)
!15085 = !DILocation(line: 304, column: 787, scope: !15080)
!15086 = !DILocation(line: 304, column: 807, scope: !15080)
!15087 = !DILocation(line: 304, column: 509, scope: !15088)
!15088 = !DILexicalBlockFile(scope: !15003, file: !624, discriminator: 13)
!15089 = !DILocation(line: 304, column: 484, scope: !15088)
!15090 = distinct !{!15090, !15091}
!15091 = !DILocation(line: 304, column: 484, scope: !14952)
!15092 = !DILocation(line: 304, column: 809, scope: !15093)
!15093 = !DILexicalBlockFile(scope: !14952, file: !624, discriminator: 14)
!15094 = distinct !DISubprogram(name: "blend_exclusion_16bit", scope: !624, file: !624, line: 307, type: !1531, isLocal: true, isDefinition: true, scopeLine: 307, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!15095 = !DILocalVariable(name: "_top", arg: 1, scope: !15094, file: !624, line: 307, type: !900)
!15096 = !DILocation(line: 307, column: 50, scope: !15094)
!15097 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !15094, file: !624, line: 307, type: !902)
!15098 = !DILocation(line: 307, column: 66, scope: !15094)
!15099 = !DILocalVariable(name: "_bottom", arg: 3, scope: !15094, file: !624, line: 307, type: !900)
!15100 = !DILocation(line: 307, column: 95, scope: !15094)
!15101 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !15094, file: !624, line: 307, type: !902)
!15102 = !DILocation(line: 307, column: 114, scope: !15094)
!15103 = !DILocalVariable(name: "_dst", arg: 5, scope: !15094, file: !624, line: 307, type: !329)
!15104 = !DILocation(line: 307, column: 140, scope: !15094)
!15105 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !15094, file: !624, line: 307, type: !902)
!15106 = !DILocation(line: 307, column: 156, scope: !15094)
!15107 = !DILocalVariable(name: "width", arg: 7, scope: !15094, file: !624, line: 307, type: !902)
!15108 = !DILocation(line: 307, column: 180, scope: !15094)
!15109 = !DILocalVariable(name: "height", arg: 8, scope: !15094, file: !624, line: 307, type: !902)
!15110 = !DILocation(line: 307, column: 197, scope: !15094)
!15111 = !DILocalVariable(name: "param", arg: 9, scope: !15094, file: !624, line: 307, type: !884)
!15112 = !DILocation(line: 307, column: 219, scope: !15094)
!15113 = !DILocalVariable(name: "values", arg: 10, scope: !15094, file: !624, line: 307, type: !544)
!15114 = !DILocation(line: 307, column: 234, scope: !15094)
!15115 = !DILocalVariable(name: "starty", arg: 11, scope: !15094, file: !624, line: 307, type: !238)
!15116 = !DILocation(line: 307, column: 246, scope: !15094)
!15117 = !DILocalVariable(name: "top", scope: !15094, file: !624, line: 307, type: !839)
!15118 = !DILocation(line: 307, column: 272, scope: !15094)
!15119 = !DILocation(line: 307, column: 295, scope: !15094)
!15120 = !DILocation(line: 307, column: 278, scope: !15094)
!15121 = !DILocalVariable(name: "bottom", scope: !15094, file: !624, line: 307, type: !839)
!15122 = !DILocation(line: 307, column: 317, scope: !15094)
!15123 = !DILocation(line: 307, column: 343, scope: !15094)
!15124 = !DILocation(line: 307, column: 326, scope: !15094)
!15125 = !DILocalVariable(name: "dst", scope: !15094, file: !624, line: 307, type: !843)
!15126 = !DILocation(line: 307, column: 362, scope: !15094)
!15127 = !DILocation(line: 307, column: 379, scope: !15094)
!15128 = !DILocation(line: 307, column: 368, scope: !15094)
!15129 = !DILocalVariable(name: "opacity", scope: !15094, file: !624, line: 307, type: !248)
!15130 = !DILocation(line: 307, column: 392, scope: !15094)
!15131 = !DILocation(line: 307, column: 402, scope: !15094)
!15132 = !DILocation(line: 307, column: 409, scope: !15094)
!15133 = !DILocalVariable(name: "i", scope: !15094, file: !624, line: 307, type: !238)
!15134 = !DILocation(line: 307, column: 422, scope: !15094)
!15135 = !DILocalVariable(name: "j", scope: !15094, file: !624, line: 307, type: !238)
!15136 = !DILocation(line: 307, column: 425, scope: !15094)
!15137 = !DILocation(line: 307, column: 441, scope: !15094)
!15138 = !DILocation(line: 307, column: 460, scope: !15094)
!15139 = !DILocation(line: 307, column: 482, scope: !15094)
!15140 = !DILocation(line: 307, column: 495, scope: !15141)
!15141 = distinct !DILexicalBlock(scope: !15094, file: !624, line: 307, column: 488)
!15142 = !DILocation(line: 307, column: 493, scope: !15141)
!15143 = !DILocation(line: 307, column: 500, scope: !15144)
!15144 = !DILexicalBlockFile(scope: !15145, file: !624, discriminator: 1)
!15145 = distinct !DILexicalBlock(scope: !15141, file: !624, line: 307, column: 488)
!15146 = !DILocation(line: 307, column: 504, scope: !15144)
!15147 = !DILocation(line: 307, column: 502, scope: !15144)
!15148 = !DILocation(line: 307, column: 488, scope: !15144)
!15149 = !DILocation(line: 307, column: 526, scope: !15150)
!15150 = !DILexicalBlockFile(scope: !15151, file: !624, discriminator: 2)
!15151 = distinct !DILexicalBlock(scope: !15152, file: !624, line: 307, column: 519)
!15152 = distinct !DILexicalBlock(scope: !15145, file: !624, line: 307, column: 517)
!15153 = !DILocation(line: 307, column: 524, scope: !15150)
!15154 = !DILocation(line: 307, column: 531, scope: !15155)
!15155 = !DILexicalBlockFile(scope: !15156, file: !624, discriminator: 3)
!15156 = distinct !DILexicalBlock(scope: !15151, file: !624, line: 307, column: 519)
!15157 = !DILocation(line: 307, column: 535, scope: !15155)
!15158 = !DILocation(line: 307, column: 533, scope: !15155)
!15159 = !DILocation(line: 307, column: 519, scope: !15155)
!15160 = !DILocation(line: 307, column: 562, scope: !15161)
!15161 = !DILexicalBlockFile(scope: !15162, file: !624, discriminator: 4)
!15162 = distinct !DILexicalBlock(scope: !15156, file: !624, line: 307, column: 547)
!15163 = !DILocation(line: 307, column: 558, scope: !15161)
!15164 = !DILocation(line: 307, column: 573, scope: !15161)
!15165 = !DILocation(line: 307, column: 569, scope: !15161)
!15166 = !DILocation(line: 307, column: 585, scope: !15161)
!15167 = !DILocation(line: 307, column: 578, scope: !15161)
!15168 = !DILocation(line: 307, column: 576, scope: !15161)
!15169 = !DILocation(line: 307, column: 598, scope: !15161)
!15170 = !DILocation(line: 307, column: 594, scope: !15161)
!15171 = !DILocation(line: 307, column: 592, scope: !15161)
!15172 = !DILocation(line: 307, column: 610, scope: !15161)
!15173 = !DILocation(line: 307, column: 603, scope: !15161)
!15174 = !DILocation(line: 307, column: 601, scope: !15161)
!15175 = !DILocation(line: 307, column: 613, scope: !15161)
!15176 = !DILocation(line: 307, column: 588, scope: !15161)
!15177 = !DILocation(line: 307, column: 628, scope: !15161)
!15178 = !DILocation(line: 307, column: 624, scope: !15161)
!15179 = !DILocation(line: 307, column: 622, scope: !15161)
!15180 = !DILocation(line: 307, column: 567, scope: !15161)
!15181 = !DILocation(line: 307, column: 634, scope: !15161)
!15182 = !DILocation(line: 307, column: 632, scope: !15161)
!15183 = !DILocation(line: 307, column: 565, scope: !15161)
!15184 = !DILocation(line: 307, column: 553, scope: !15161)
!15185 = !DILocation(line: 307, column: 549, scope: !15161)
!15186 = !DILocation(line: 307, column: 556, scope: !15161)
!15187 = !DILocation(line: 307, column: 643, scope: !15161)
!15188 = !DILocation(line: 307, column: 543, scope: !15189)
!15189 = !DILexicalBlockFile(scope: !15156, file: !624, discriminator: 5)
!15190 = !DILocation(line: 307, column: 519, scope: !15189)
!15191 = distinct !{!15191, !15192}
!15192 = !DILocation(line: 307, column: 519, scope: !15152)
!15193 = !DILocation(line: 307, column: 652, scope: !15194)
!15194 = !DILexicalBlockFile(scope: !15152, file: !624, discriminator: 6)
!15195 = !DILocation(line: 307, column: 649, scope: !15194)
!15196 = !DILocation(line: 307, column: 673, scope: !15194)
!15197 = !DILocation(line: 307, column: 670, scope: !15194)
!15198 = !DILocation(line: 307, column: 697, scope: !15194)
!15199 = !DILocation(line: 307, column: 694, scope: !15194)
!15200 = !DILocation(line: 307, column: 714, scope: !15194)
!15201 = !DILocation(line: 307, column: 513, scope: !15202)
!15202 = !DILexicalBlockFile(scope: !15145, file: !624, discriminator: 7)
!15203 = !DILocation(line: 307, column: 488, scope: !15202)
!15204 = distinct !{!15204, !15205}
!15205 = !DILocation(line: 307, column: 488, scope: !15094)
!15206 = !DILocation(line: 307, column: 716, scope: !15207)
!15207 = !DILexicalBlockFile(scope: !15094, file: !624, discriminator: 8)
!15208 = distinct !DISubprogram(name: "blend_extremity_16bit", scope: !624, file: !624, line: 292, type: !1531, isLocal: true, isDefinition: true, scopeLine: 292, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!15209 = !DILocalVariable(name: "_top", arg: 1, scope: !15208, file: !624, line: 292, type: !900)
!15210 = !DILocation(line: 292, column: 50, scope: !15208)
!15211 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !15208, file: !624, line: 292, type: !902)
!15212 = !DILocation(line: 292, column: 66, scope: !15208)
!15213 = !DILocalVariable(name: "_bottom", arg: 3, scope: !15208, file: !624, line: 292, type: !900)
!15214 = !DILocation(line: 292, column: 95, scope: !15208)
!15215 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !15208, file: !624, line: 292, type: !902)
!15216 = !DILocation(line: 292, column: 114, scope: !15208)
!15217 = !DILocalVariable(name: "_dst", arg: 5, scope: !15208, file: !624, line: 292, type: !329)
!15218 = !DILocation(line: 292, column: 140, scope: !15208)
!15219 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !15208, file: !624, line: 292, type: !902)
!15220 = !DILocation(line: 292, column: 156, scope: !15208)
!15221 = !DILocalVariable(name: "width", arg: 7, scope: !15208, file: !624, line: 292, type: !902)
!15222 = !DILocation(line: 292, column: 180, scope: !15208)
!15223 = !DILocalVariable(name: "height", arg: 8, scope: !15208, file: !624, line: 292, type: !902)
!15224 = !DILocation(line: 292, column: 197, scope: !15208)
!15225 = !DILocalVariable(name: "param", arg: 9, scope: !15208, file: !624, line: 292, type: !884)
!15226 = !DILocation(line: 292, column: 219, scope: !15208)
!15227 = !DILocalVariable(name: "values", arg: 10, scope: !15208, file: !624, line: 292, type: !544)
!15228 = !DILocation(line: 292, column: 234, scope: !15208)
!15229 = !DILocalVariable(name: "starty", arg: 11, scope: !15208, file: !624, line: 292, type: !238)
!15230 = !DILocation(line: 292, column: 246, scope: !15208)
!15231 = !DILocalVariable(name: "top", scope: !15208, file: !624, line: 292, type: !839)
!15232 = !DILocation(line: 292, column: 272, scope: !15208)
!15233 = !DILocation(line: 292, column: 295, scope: !15208)
!15234 = !DILocation(line: 292, column: 278, scope: !15208)
!15235 = !DILocalVariable(name: "bottom", scope: !15208, file: !624, line: 292, type: !839)
!15236 = !DILocation(line: 292, column: 317, scope: !15208)
!15237 = !DILocation(line: 292, column: 343, scope: !15208)
!15238 = !DILocation(line: 292, column: 326, scope: !15208)
!15239 = !DILocalVariable(name: "dst", scope: !15208, file: !624, line: 292, type: !843)
!15240 = !DILocation(line: 292, column: 362, scope: !15208)
!15241 = !DILocation(line: 292, column: 379, scope: !15208)
!15242 = !DILocation(line: 292, column: 368, scope: !15208)
!15243 = !DILocalVariable(name: "opacity", scope: !15208, file: !624, line: 292, type: !248)
!15244 = !DILocation(line: 292, column: 392, scope: !15208)
!15245 = !DILocation(line: 292, column: 402, scope: !15208)
!15246 = !DILocation(line: 292, column: 409, scope: !15208)
!15247 = !DILocalVariable(name: "i", scope: !15208, file: !624, line: 292, type: !238)
!15248 = !DILocation(line: 292, column: 422, scope: !15208)
!15249 = !DILocalVariable(name: "j", scope: !15208, file: !624, line: 292, type: !238)
!15250 = !DILocation(line: 292, column: 425, scope: !15208)
!15251 = !DILocation(line: 292, column: 441, scope: !15208)
!15252 = !DILocation(line: 292, column: 460, scope: !15208)
!15253 = !DILocation(line: 292, column: 482, scope: !15208)
!15254 = !DILocation(line: 292, column: 495, scope: !15255)
!15255 = distinct !DILexicalBlock(scope: !15208, file: !624, line: 292, column: 488)
!15256 = !DILocation(line: 292, column: 493, scope: !15255)
!15257 = !DILocation(line: 292, column: 500, scope: !15258)
!15258 = !DILexicalBlockFile(scope: !15259, file: !624, discriminator: 1)
!15259 = distinct !DILexicalBlock(scope: !15255, file: !624, line: 292, column: 488)
!15260 = !DILocation(line: 292, column: 504, scope: !15258)
!15261 = !DILocation(line: 292, column: 502, scope: !15258)
!15262 = !DILocation(line: 292, column: 488, scope: !15258)
!15263 = !DILocation(line: 292, column: 526, scope: !15264)
!15264 = !DILexicalBlockFile(scope: !15265, file: !624, discriminator: 2)
!15265 = distinct !DILexicalBlock(scope: !15266, file: !624, line: 292, column: 519)
!15266 = distinct !DILexicalBlock(scope: !15259, file: !624, line: 292, column: 517)
!15267 = !DILocation(line: 292, column: 524, scope: !15264)
!15268 = !DILocation(line: 292, column: 531, scope: !15269)
!15269 = !DILexicalBlockFile(scope: !15270, file: !624, discriminator: 3)
!15270 = distinct !DILexicalBlock(scope: !15265, file: !624, line: 292, column: 519)
!15271 = !DILocation(line: 292, column: 535, scope: !15269)
!15272 = !DILocation(line: 292, column: 533, scope: !15269)
!15273 = !DILocation(line: 292, column: 519, scope: !15269)
!15274 = !DILocation(line: 292, column: 562, scope: !15275)
!15275 = !DILexicalBlockFile(scope: !15276, file: !624, discriminator: 4)
!15276 = distinct !DILexicalBlock(scope: !15270, file: !624, line: 292, column: 547)
!15277 = !DILocation(line: 292, column: 558, scope: !15275)
!15278 = !DILocation(line: 292, column: 583, scope: !15275)
!15279 = !DILocation(line: 292, column: 579, scope: !15275)
!15280 = !DILocation(line: 292, column: 577, scope: !15275)
!15281 = !DILocation(line: 292, column: 595, scope: !15275)
!15282 = !DILocation(line: 292, column: 588, scope: !15275)
!15283 = !DILocation(line: 292, column: 586, scope: !15275)
!15284 = !DILocation(line: 292, column: 599, scope: !15275)
!15285 = !DILocation(line: 292, column: 570, scope: !15275)
!15286 = !DILocation(line: 292, column: 619, scope: !15287)
!15287 = !DILexicalBlockFile(scope: !15276, file: !624, discriminator: 5)
!15288 = !DILocation(line: 292, column: 615, scope: !15287)
!15289 = !DILocation(line: 292, column: 613, scope: !15287)
!15290 = !DILocation(line: 292, column: 631, scope: !15287)
!15291 = !DILocation(line: 292, column: 624, scope: !15287)
!15292 = !DILocation(line: 292, column: 622, scope: !15287)
!15293 = !DILocation(line: 292, column: 570, scope: !15287)
!15294 = !DILocation(line: 292, column: 652, scope: !15295)
!15295 = !DILexicalBlockFile(scope: !15276, file: !624, discriminator: 6)
!15296 = !DILocation(line: 292, column: 648, scope: !15295)
!15297 = !DILocation(line: 292, column: 646, scope: !15295)
!15298 = !DILocation(line: 292, column: 664, scope: !15295)
!15299 = !DILocation(line: 292, column: 657, scope: !15295)
!15300 = !DILocation(line: 292, column: 655, scope: !15295)
!15301 = !DILocation(line: 292, column: 638, scope: !15295)
!15302 = !DILocation(line: 292, column: 570, scope: !15295)
!15303 = !DILocation(line: 292, column: 570, scope: !15304)
!15304 = !DILexicalBlockFile(scope: !15276, file: !624, discriminator: 7)
!15305 = !DILocation(line: 292, column: 677, scope: !15304)
!15306 = !DILocation(line: 292, column: 673, scope: !15304)
!15307 = !DILocation(line: 292, column: 671, scope: !15304)
!15308 = !DILocation(line: 292, column: 567, scope: !15304)
!15309 = !DILocation(line: 292, column: 683, scope: !15304)
!15310 = !DILocation(line: 292, column: 681, scope: !15304)
!15311 = !DILocation(line: 292, column: 565, scope: !15304)
!15312 = !DILocation(line: 292, column: 558, scope: !15304)
!15313 = !DILocation(line: 292, column: 553, scope: !15304)
!15314 = !DILocation(line: 292, column: 549, scope: !15304)
!15315 = !DILocation(line: 292, column: 556, scope: !15304)
!15316 = !DILocation(line: 292, column: 692, scope: !15304)
!15317 = !DILocation(line: 292, column: 543, scope: !15318)
!15318 = !DILexicalBlockFile(scope: !15270, file: !624, discriminator: 8)
!15319 = !DILocation(line: 292, column: 519, scope: !15318)
!15320 = distinct !{!15320, !15321}
!15321 = !DILocation(line: 292, column: 519, scope: !15266)
!15322 = !DILocation(line: 292, column: 701, scope: !15323)
!15323 = !DILexicalBlockFile(scope: !15266, file: !624, discriminator: 9)
!15324 = !DILocation(line: 292, column: 698, scope: !15323)
!15325 = !DILocation(line: 292, column: 722, scope: !15323)
!15326 = !DILocation(line: 292, column: 719, scope: !15323)
!15327 = !DILocation(line: 292, column: 746, scope: !15323)
!15328 = !DILocation(line: 292, column: 743, scope: !15323)
!15329 = !DILocation(line: 292, column: 763, scope: !15323)
!15330 = !DILocation(line: 292, column: 513, scope: !15331)
!15331 = !DILexicalBlockFile(scope: !15259, file: !624, discriminator: 10)
!15332 = !DILocation(line: 292, column: 488, scope: !15331)
!15333 = distinct !{!15333, !15334}
!15334 = !DILocation(line: 292, column: 488, scope: !15208)
!15335 = !DILocation(line: 292, column: 765, scope: !15336)
!15336 = !DILexicalBlockFile(scope: !15208, file: !624, discriminator: 11)
!15337 = distinct !DISubprogram(name: "blend_freeze_16bit", scope: !624, file: !624, line: 300, type: !1531, isLocal: true, isDefinition: true, scopeLine: 300, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!15338 = !DILocalVariable(name: "_top", arg: 1, scope: !15337, file: !624, line: 300, type: !900)
!15339 = !DILocation(line: 300, column: 47, scope: !15337)
!15340 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !15337, file: !624, line: 300, type: !902)
!15341 = !DILocation(line: 300, column: 63, scope: !15337)
!15342 = !DILocalVariable(name: "_bottom", arg: 3, scope: !15337, file: !624, line: 300, type: !900)
!15343 = !DILocation(line: 300, column: 92, scope: !15337)
!15344 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !15337, file: !624, line: 300, type: !902)
!15345 = !DILocation(line: 300, column: 111, scope: !15337)
!15346 = !DILocalVariable(name: "_dst", arg: 5, scope: !15337, file: !624, line: 300, type: !329)
!15347 = !DILocation(line: 300, column: 137, scope: !15337)
!15348 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !15337, file: !624, line: 300, type: !902)
!15349 = !DILocation(line: 300, column: 153, scope: !15337)
!15350 = !DILocalVariable(name: "width", arg: 7, scope: !15337, file: !624, line: 300, type: !902)
!15351 = !DILocation(line: 300, column: 177, scope: !15337)
!15352 = !DILocalVariable(name: "height", arg: 8, scope: !15337, file: !624, line: 300, type: !902)
!15353 = !DILocation(line: 300, column: 194, scope: !15337)
!15354 = !DILocalVariable(name: "param", arg: 9, scope: !15337, file: !624, line: 300, type: !884)
!15355 = !DILocation(line: 300, column: 216, scope: !15337)
!15356 = !DILocalVariable(name: "values", arg: 10, scope: !15337, file: !624, line: 300, type: !544)
!15357 = !DILocation(line: 300, column: 231, scope: !15337)
!15358 = !DILocalVariable(name: "starty", arg: 11, scope: !15337, file: !624, line: 300, type: !238)
!15359 = !DILocation(line: 300, column: 243, scope: !15337)
!15360 = !DILocalVariable(name: "top", scope: !15337, file: !624, line: 300, type: !839)
!15361 = !DILocation(line: 300, column: 269, scope: !15337)
!15362 = !DILocation(line: 300, column: 292, scope: !15337)
!15363 = !DILocation(line: 300, column: 275, scope: !15337)
!15364 = !DILocalVariable(name: "bottom", scope: !15337, file: !624, line: 300, type: !839)
!15365 = !DILocation(line: 300, column: 314, scope: !15337)
!15366 = !DILocation(line: 300, column: 340, scope: !15337)
!15367 = !DILocation(line: 300, column: 323, scope: !15337)
!15368 = !DILocalVariable(name: "dst", scope: !15337, file: !624, line: 300, type: !843)
!15369 = !DILocation(line: 300, column: 359, scope: !15337)
!15370 = !DILocation(line: 300, column: 376, scope: !15337)
!15371 = !DILocation(line: 300, column: 365, scope: !15337)
!15372 = !DILocalVariable(name: "opacity", scope: !15337, file: !624, line: 300, type: !248)
!15373 = !DILocation(line: 300, column: 389, scope: !15337)
!15374 = !DILocation(line: 300, column: 399, scope: !15337)
!15375 = !DILocation(line: 300, column: 406, scope: !15337)
!15376 = !DILocalVariable(name: "i", scope: !15337, file: !624, line: 300, type: !238)
!15377 = !DILocation(line: 300, column: 419, scope: !15337)
!15378 = !DILocalVariable(name: "j", scope: !15337, file: !624, line: 300, type: !238)
!15379 = !DILocation(line: 300, column: 422, scope: !15337)
!15380 = !DILocation(line: 300, column: 438, scope: !15337)
!15381 = !DILocation(line: 300, column: 457, scope: !15337)
!15382 = !DILocation(line: 300, column: 479, scope: !15337)
!15383 = !DILocation(line: 300, column: 492, scope: !15384)
!15384 = distinct !DILexicalBlock(scope: !15337, file: !624, line: 300, column: 485)
!15385 = !DILocation(line: 300, column: 490, scope: !15384)
!15386 = !DILocation(line: 300, column: 497, scope: !15387)
!15387 = !DILexicalBlockFile(scope: !15388, file: !624, discriminator: 1)
!15388 = distinct !DILexicalBlock(scope: !15384, file: !624, line: 300, column: 485)
!15389 = !DILocation(line: 300, column: 501, scope: !15387)
!15390 = !DILocation(line: 300, column: 499, scope: !15387)
!15391 = !DILocation(line: 300, column: 485, scope: !15387)
!15392 = !DILocation(line: 300, column: 523, scope: !15393)
!15393 = !DILexicalBlockFile(scope: !15394, file: !624, discriminator: 2)
!15394 = distinct !DILexicalBlock(scope: !15395, file: !624, line: 300, column: 516)
!15395 = distinct !DILexicalBlock(scope: !15388, file: !624, line: 300, column: 514)
!15396 = !DILocation(line: 300, column: 521, scope: !15393)
!15397 = !DILocation(line: 300, column: 528, scope: !15398)
!15398 = !DILexicalBlockFile(scope: !15399, file: !624, discriminator: 3)
!15399 = distinct !DILexicalBlock(scope: !15394, file: !624, line: 300, column: 516)
!15400 = !DILocation(line: 300, column: 532, scope: !15398)
!15401 = !DILocation(line: 300, column: 530, scope: !15398)
!15402 = !DILocation(line: 300, column: 516, scope: !15398)
!15403 = !DILocation(line: 300, column: 559, scope: !15404)
!15404 = !DILexicalBlockFile(scope: !15405, file: !624, discriminator: 4)
!15405 = distinct !DILexicalBlock(scope: !15399, file: !624, line: 300, column: 544)
!15406 = !DILocation(line: 300, column: 555, scope: !15404)
!15407 = !DILocation(line: 300, column: 574, scope: !15404)
!15408 = !DILocation(line: 300, column: 567, scope: !15404)
!15409 = !DILocation(line: 300, column: 577, scope: !15404)
!15410 = !DILocation(line: 300, column: 566, scope: !15404)
!15411 = !DILocation(line: 300, column: 566, scope: !15412)
!15412 = !DILexicalBlockFile(scope: !15405, file: !624, discriminator: 5)
!15413 = !DILocation(line: 300, column: 613, scope: !15414)
!15414 = !DILexicalBlockFile(scope: !15405, file: !624, discriminator: 6)
!15415 = !DILocation(line: 300, column: 609, scope: !15414)
!15416 = !DILocation(line: 300, column: 607, scope: !15414)
!15417 = !DILocation(line: 300, column: 632, scope: !15414)
!15418 = !DILocation(line: 300, column: 628, scope: !15414)
!15419 = !DILocation(line: 300, column: 626, scope: !15414)
!15420 = !DILocation(line: 300, column: 617, scope: !15414)
!15421 = !DILocation(line: 300, column: 646, scope: !15414)
!15422 = !DILocation(line: 300, column: 639, scope: !15414)
!15423 = !DILocation(line: 300, column: 637, scope: !15414)
!15424 = !DILocation(line: 300, column: 650, scope: !15414)
!15425 = !DILocation(line: 300, column: 598, scope: !15414)
!15426 = !DILocation(line: 300, column: 598, scope: !15427)
!15427 = !DILexicalBlockFile(scope: !15405, file: !624, discriminator: 7)
!15428 = !DILocation(line: 300, column: 687, scope: !15429)
!15429 = !DILexicalBlockFile(scope: !15405, file: !624, discriminator: 8)
!15430 = !DILocation(line: 300, column: 683, scope: !15429)
!15431 = !DILocation(line: 300, column: 681, scope: !15429)
!15432 = !DILocation(line: 300, column: 706, scope: !15429)
!15433 = !DILocation(line: 300, column: 702, scope: !15429)
!15434 = !DILocation(line: 300, column: 700, scope: !15429)
!15435 = !DILocation(line: 300, column: 691, scope: !15429)
!15436 = !DILocation(line: 300, column: 720, scope: !15429)
!15437 = !DILocation(line: 300, column: 713, scope: !15429)
!15438 = !DILocation(line: 300, column: 711, scope: !15429)
!15439 = !DILocation(line: 300, column: 598, scope: !15429)
!15440 = !DILocation(line: 300, column: 598, scope: !15441)
!15441 = !DILexicalBlockFile(scope: !15405, file: !624, discriminator: 9)
!15442 = !DILocation(line: 300, column: 595, scope: !15441)
!15443 = !DILocation(line: 300, column: 566, scope: !15441)
!15444 = !DILocation(line: 300, column: 566, scope: !15445)
!15445 = !DILexicalBlockFile(scope: !15405, file: !624, discriminator: 10)
!15446 = !DILocation(line: 300, column: 732, scope: !15445)
!15447 = !DILocation(line: 300, column: 728, scope: !15445)
!15448 = !DILocation(line: 300, column: 726, scope: !15445)
!15449 = !DILocation(line: 300, column: 564, scope: !15445)
!15450 = !DILocation(line: 300, column: 738, scope: !15445)
!15451 = !DILocation(line: 300, column: 736, scope: !15445)
!15452 = !DILocation(line: 300, column: 562, scope: !15445)
!15453 = !DILocation(line: 300, column: 555, scope: !15445)
!15454 = !DILocation(line: 300, column: 550, scope: !15445)
!15455 = !DILocation(line: 300, column: 546, scope: !15445)
!15456 = !DILocation(line: 300, column: 553, scope: !15445)
!15457 = !DILocation(line: 300, column: 747, scope: !15445)
!15458 = !DILocation(line: 300, column: 540, scope: !15459)
!15459 = !DILexicalBlockFile(scope: !15399, file: !624, discriminator: 11)
!15460 = !DILocation(line: 300, column: 516, scope: !15459)
!15461 = distinct !{!15461, !15462}
!15462 = !DILocation(line: 300, column: 516, scope: !15395)
!15463 = !DILocation(line: 300, column: 756, scope: !15464)
!15464 = !DILexicalBlockFile(scope: !15395, file: !624, discriminator: 12)
!15465 = !DILocation(line: 300, column: 753, scope: !15464)
!15466 = !DILocation(line: 300, column: 777, scope: !15464)
!15467 = !DILocation(line: 300, column: 774, scope: !15464)
!15468 = !DILocation(line: 300, column: 801, scope: !15464)
!15469 = !DILocation(line: 300, column: 798, scope: !15464)
!15470 = !DILocation(line: 300, column: 818, scope: !15464)
!15471 = !DILocation(line: 300, column: 510, scope: !15472)
!15472 = !DILexicalBlockFile(scope: !15388, file: !624, discriminator: 13)
!15473 = !DILocation(line: 300, column: 485, scope: !15472)
!15474 = distinct !{!15474, !15475}
!15475 = !DILocation(line: 300, column: 485, scope: !15337)
!15476 = !DILocation(line: 300, column: 820, scope: !15477)
!15477 = !DILexicalBlockFile(scope: !15337, file: !624, discriminator: 14)
!15478 = distinct !DISubprogram(name: "blend_glow_16bit", scope: !624, file: !624, line: 311, type: !1531, isLocal: true, isDefinition: true, scopeLine: 311, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!15479 = !DILocalVariable(name: "_top", arg: 1, scope: !15478, file: !624, line: 311, type: !900)
!15480 = !DILocation(line: 311, column: 45, scope: !15478)
!15481 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !15478, file: !624, line: 311, type: !902)
!15482 = !DILocation(line: 311, column: 61, scope: !15478)
!15483 = !DILocalVariable(name: "_bottom", arg: 3, scope: !15478, file: !624, line: 311, type: !900)
!15484 = !DILocation(line: 311, column: 90, scope: !15478)
!15485 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !15478, file: !624, line: 311, type: !902)
!15486 = !DILocation(line: 311, column: 109, scope: !15478)
!15487 = !DILocalVariable(name: "_dst", arg: 5, scope: !15478, file: !624, line: 311, type: !329)
!15488 = !DILocation(line: 311, column: 135, scope: !15478)
!15489 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !15478, file: !624, line: 311, type: !902)
!15490 = !DILocation(line: 311, column: 151, scope: !15478)
!15491 = !DILocalVariable(name: "width", arg: 7, scope: !15478, file: !624, line: 311, type: !902)
!15492 = !DILocation(line: 311, column: 175, scope: !15478)
!15493 = !DILocalVariable(name: "height", arg: 8, scope: !15478, file: !624, line: 311, type: !902)
!15494 = !DILocation(line: 311, column: 192, scope: !15478)
!15495 = !DILocalVariable(name: "param", arg: 9, scope: !15478, file: !624, line: 311, type: !884)
!15496 = !DILocation(line: 311, column: 214, scope: !15478)
!15497 = !DILocalVariable(name: "values", arg: 10, scope: !15478, file: !624, line: 311, type: !544)
!15498 = !DILocation(line: 311, column: 229, scope: !15478)
!15499 = !DILocalVariable(name: "starty", arg: 11, scope: !15478, file: !624, line: 311, type: !238)
!15500 = !DILocation(line: 311, column: 241, scope: !15478)
!15501 = !DILocalVariable(name: "top", scope: !15478, file: !624, line: 311, type: !839)
!15502 = !DILocation(line: 311, column: 267, scope: !15478)
!15503 = !DILocation(line: 311, column: 290, scope: !15478)
!15504 = !DILocation(line: 311, column: 273, scope: !15478)
!15505 = !DILocalVariable(name: "bottom", scope: !15478, file: !624, line: 311, type: !839)
!15506 = !DILocation(line: 311, column: 312, scope: !15478)
!15507 = !DILocation(line: 311, column: 338, scope: !15478)
!15508 = !DILocation(line: 311, column: 321, scope: !15478)
!15509 = !DILocalVariable(name: "dst", scope: !15478, file: !624, line: 311, type: !843)
!15510 = !DILocation(line: 311, column: 357, scope: !15478)
!15511 = !DILocation(line: 311, column: 374, scope: !15478)
!15512 = !DILocation(line: 311, column: 363, scope: !15478)
!15513 = !DILocalVariable(name: "opacity", scope: !15478, file: !624, line: 311, type: !248)
!15514 = !DILocation(line: 311, column: 387, scope: !15478)
!15515 = !DILocation(line: 311, column: 397, scope: !15478)
!15516 = !DILocation(line: 311, column: 404, scope: !15478)
!15517 = !DILocalVariable(name: "i", scope: !15478, file: !624, line: 311, type: !238)
!15518 = !DILocation(line: 311, column: 417, scope: !15478)
!15519 = !DILocalVariable(name: "j", scope: !15478, file: !624, line: 311, type: !238)
!15520 = !DILocation(line: 311, column: 420, scope: !15478)
!15521 = !DILocation(line: 311, column: 436, scope: !15478)
!15522 = !DILocation(line: 311, column: 455, scope: !15478)
!15523 = !DILocation(line: 311, column: 477, scope: !15478)
!15524 = !DILocation(line: 311, column: 490, scope: !15525)
!15525 = distinct !DILexicalBlock(scope: !15478, file: !624, line: 311, column: 483)
!15526 = !DILocation(line: 311, column: 488, scope: !15525)
!15527 = !DILocation(line: 311, column: 495, scope: !15528)
!15528 = !DILexicalBlockFile(scope: !15529, file: !624, discriminator: 1)
!15529 = distinct !DILexicalBlock(scope: !15525, file: !624, line: 311, column: 483)
!15530 = !DILocation(line: 311, column: 499, scope: !15528)
!15531 = !DILocation(line: 311, column: 497, scope: !15528)
!15532 = !DILocation(line: 311, column: 483, scope: !15528)
!15533 = !DILocation(line: 311, column: 521, scope: !15534)
!15534 = !DILexicalBlockFile(scope: !15535, file: !624, discriminator: 2)
!15535 = distinct !DILexicalBlock(scope: !15536, file: !624, line: 311, column: 514)
!15536 = distinct !DILexicalBlock(scope: !15529, file: !624, line: 311, column: 512)
!15537 = !DILocation(line: 311, column: 519, scope: !15534)
!15538 = !DILocation(line: 311, column: 526, scope: !15539)
!15539 = !DILexicalBlockFile(scope: !15540, file: !624, discriminator: 3)
!15540 = distinct !DILexicalBlock(scope: !15535, file: !624, line: 311, column: 514)
!15541 = !DILocation(line: 311, column: 530, scope: !15539)
!15542 = !DILocation(line: 311, column: 528, scope: !15539)
!15543 = !DILocation(line: 311, column: 514, scope: !15539)
!15544 = !DILocation(line: 311, column: 557, scope: !15545)
!15545 = !DILexicalBlockFile(scope: !15546, file: !624, discriminator: 4)
!15546 = distinct !DILexicalBlock(scope: !15540, file: !624, line: 311, column: 542)
!15547 = !DILocation(line: 311, column: 553, scope: !15545)
!15548 = !DILocation(line: 311, column: 569, scope: !15545)
!15549 = !DILocation(line: 311, column: 565, scope: !15545)
!15550 = !DILocation(line: 311, column: 572, scope: !15545)
!15551 = !DILocation(line: 311, column: 564, scope: !15545)
!15552 = !DILocation(line: 311, column: 588, scope: !15553)
!15553 = !DILexicalBlockFile(scope: !15546, file: !624, discriminator: 5)
!15554 = !DILocation(line: 311, column: 584, scope: !15553)
!15555 = !DILocation(line: 311, column: 564, scope: !15553)
!15556 = !DILocation(line: 311, column: 613, scope: !15557)
!15557 = !DILexicalBlockFile(scope: !15546, file: !624, discriminator: 6)
!15558 = !DILocation(line: 311, column: 606, scope: !15557)
!15559 = !DILocation(line: 311, column: 625, scope: !15557)
!15560 = !DILocation(line: 311, column: 618, scope: !15557)
!15561 = !DILocation(line: 311, column: 616, scope: !15557)
!15562 = !DILocation(line: 311, column: 643, scope: !15557)
!15563 = !DILocation(line: 311, column: 639, scope: !15557)
!15564 = !DILocation(line: 311, column: 637, scope: !15557)
!15565 = !DILocation(line: 311, column: 628, scope: !15557)
!15566 = !DILocation(line: 311, column: 602, scope: !15557)
!15567 = !DILocation(line: 311, column: 594, scope: !15557)
!15568 = !DILocation(line: 311, column: 660, scope: !15569)
!15569 = !DILexicalBlockFile(scope: !15546, file: !624, discriminator: 7)
!15570 = !DILocation(line: 311, column: 653, scope: !15569)
!15571 = !DILocation(line: 311, column: 672, scope: !15569)
!15572 = !DILocation(line: 311, column: 665, scope: !15569)
!15573 = !DILocation(line: 311, column: 663, scope: !15569)
!15574 = !DILocation(line: 311, column: 690, scope: !15569)
!15575 = !DILocation(line: 311, column: 686, scope: !15569)
!15576 = !DILocation(line: 311, column: 684, scope: !15569)
!15577 = !DILocation(line: 311, column: 675, scope: !15569)
!15578 = !DILocation(line: 311, column: 594, scope: !15569)
!15579 = !DILocation(line: 311, column: 594, scope: !15580)
!15580 = !DILexicalBlockFile(scope: !15546, file: !624, discriminator: 8)
!15581 = !DILocation(line: 311, column: 594, scope: !15582)
!15582 = !DILexicalBlockFile(scope: !15546, file: !624, discriminator: 9)
!15583 = !DILocation(line: 311, column: 564, scope: !15582)
!15584 = !DILocation(line: 311, column: 564, scope: !15585)
!15585 = !DILexicalBlockFile(scope: !15546, file: !624, discriminator: 10)
!15586 = !DILocation(line: 311, column: 714, scope: !15585)
!15587 = !DILocation(line: 311, column: 710, scope: !15585)
!15588 = !DILocation(line: 311, column: 708, scope: !15585)
!15589 = !DILocation(line: 311, column: 562, scope: !15585)
!15590 = !DILocation(line: 311, column: 720, scope: !15585)
!15591 = !DILocation(line: 311, column: 718, scope: !15585)
!15592 = !DILocation(line: 311, column: 560, scope: !15585)
!15593 = !DILocation(line: 311, column: 553, scope: !15585)
!15594 = !DILocation(line: 311, column: 548, scope: !15585)
!15595 = !DILocation(line: 311, column: 544, scope: !15585)
!15596 = !DILocation(line: 311, column: 551, scope: !15585)
!15597 = !DILocation(line: 311, column: 729, scope: !15585)
!15598 = !DILocation(line: 311, column: 538, scope: !15599)
!15599 = !DILexicalBlockFile(scope: !15540, file: !624, discriminator: 11)
!15600 = !DILocation(line: 311, column: 514, scope: !15599)
!15601 = distinct !{!15601, !15602}
!15602 = !DILocation(line: 311, column: 514, scope: !15536)
!15603 = !DILocation(line: 311, column: 738, scope: !15604)
!15604 = !DILexicalBlockFile(scope: !15536, file: !624, discriminator: 12)
!15605 = !DILocation(line: 311, column: 735, scope: !15604)
!15606 = !DILocation(line: 311, column: 759, scope: !15604)
!15607 = !DILocation(line: 311, column: 756, scope: !15604)
!15608 = !DILocation(line: 311, column: 783, scope: !15604)
!15609 = !DILocation(line: 311, column: 780, scope: !15604)
!15610 = !DILocation(line: 311, column: 800, scope: !15604)
!15611 = !DILocation(line: 311, column: 508, scope: !15612)
!15612 = !DILexicalBlockFile(scope: !15529, file: !624, discriminator: 13)
!15613 = !DILocation(line: 311, column: 483, scope: !15612)
!15614 = distinct !{!15614, !15615}
!15615 = !DILocation(line: 311, column: 483, scope: !15478)
!15616 = !DILocation(line: 311, column: 802, scope: !15617)
!15617 = !DILexicalBlockFile(scope: !15478, file: !624, discriminator: 14)
!15618 = distinct !DISubprogram(name: "blend_hardlight_16bit", scope: !624, file: !624, line: 297, type: !1531, isLocal: true, isDefinition: true, scopeLine: 297, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!15619 = !DILocalVariable(name: "_top", arg: 1, scope: !15618, file: !624, line: 297, type: !900)
!15620 = !DILocation(line: 297, column: 50, scope: !15618)
!15621 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !15618, file: !624, line: 297, type: !902)
!15622 = !DILocation(line: 297, column: 66, scope: !15618)
!15623 = !DILocalVariable(name: "_bottom", arg: 3, scope: !15618, file: !624, line: 297, type: !900)
!15624 = !DILocation(line: 297, column: 95, scope: !15618)
!15625 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !15618, file: !624, line: 297, type: !902)
!15626 = !DILocation(line: 297, column: 114, scope: !15618)
!15627 = !DILocalVariable(name: "_dst", arg: 5, scope: !15618, file: !624, line: 297, type: !329)
!15628 = !DILocation(line: 297, column: 140, scope: !15618)
!15629 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !15618, file: !624, line: 297, type: !902)
!15630 = !DILocation(line: 297, column: 156, scope: !15618)
!15631 = !DILocalVariable(name: "width", arg: 7, scope: !15618, file: !624, line: 297, type: !902)
!15632 = !DILocation(line: 297, column: 180, scope: !15618)
!15633 = !DILocalVariable(name: "height", arg: 8, scope: !15618, file: !624, line: 297, type: !902)
!15634 = !DILocation(line: 297, column: 197, scope: !15618)
!15635 = !DILocalVariable(name: "param", arg: 9, scope: !15618, file: !624, line: 297, type: !884)
!15636 = !DILocation(line: 297, column: 219, scope: !15618)
!15637 = !DILocalVariable(name: "values", arg: 10, scope: !15618, file: !624, line: 297, type: !544)
!15638 = !DILocation(line: 297, column: 234, scope: !15618)
!15639 = !DILocalVariable(name: "starty", arg: 11, scope: !15618, file: !624, line: 297, type: !238)
!15640 = !DILocation(line: 297, column: 246, scope: !15618)
!15641 = !DILocalVariable(name: "top", scope: !15618, file: !624, line: 297, type: !839)
!15642 = !DILocation(line: 297, column: 272, scope: !15618)
!15643 = !DILocation(line: 297, column: 295, scope: !15618)
!15644 = !DILocation(line: 297, column: 278, scope: !15618)
!15645 = !DILocalVariable(name: "bottom", scope: !15618, file: !624, line: 297, type: !839)
!15646 = !DILocation(line: 297, column: 317, scope: !15618)
!15647 = !DILocation(line: 297, column: 343, scope: !15618)
!15648 = !DILocation(line: 297, column: 326, scope: !15618)
!15649 = !DILocalVariable(name: "dst", scope: !15618, file: !624, line: 297, type: !843)
!15650 = !DILocation(line: 297, column: 362, scope: !15618)
!15651 = !DILocation(line: 297, column: 379, scope: !15618)
!15652 = !DILocation(line: 297, column: 368, scope: !15618)
!15653 = !DILocalVariable(name: "opacity", scope: !15618, file: !624, line: 297, type: !248)
!15654 = !DILocation(line: 297, column: 392, scope: !15618)
!15655 = !DILocation(line: 297, column: 402, scope: !15618)
!15656 = !DILocation(line: 297, column: 409, scope: !15618)
!15657 = !DILocalVariable(name: "i", scope: !15618, file: !624, line: 297, type: !238)
!15658 = !DILocation(line: 297, column: 422, scope: !15618)
!15659 = !DILocalVariable(name: "j", scope: !15618, file: !624, line: 297, type: !238)
!15660 = !DILocation(line: 297, column: 425, scope: !15618)
!15661 = !DILocation(line: 297, column: 441, scope: !15618)
!15662 = !DILocation(line: 297, column: 460, scope: !15618)
!15663 = !DILocation(line: 297, column: 482, scope: !15618)
!15664 = !DILocation(line: 297, column: 495, scope: !15665)
!15665 = distinct !DILexicalBlock(scope: !15618, file: !624, line: 297, column: 488)
!15666 = !DILocation(line: 297, column: 493, scope: !15665)
!15667 = !DILocation(line: 297, column: 500, scope: !15668)
!15668 = !DILexicalBlockFile(scope: !15669, file: !624, discriminator: 1)
!15669 = distinct !DILexicalBlock(scope: !15665, file: !624, line: 297, column: 488)
!15670 = !DILocation(line: 297, column: 504, scope: !15668)
!15671 = !DILocation(line: 297, column: 502, scope: !15668)
!15672 = !DILocation(line: 297, column: 488, scope: !15668)
!15673 = !DILocation(line: 297, column: 526, scope: !15674)
!15674 = !DILexicalBlockFile(scope: !15675, file: !624, discriminator: 2)
!15675 = distinct !DILexicalBlock(scope: !15676, file: !624, line: 297, column: 519)
!15676 = distinct !DILexicalBlock(scope: !15669, file: !624, line: 297, column: 517)
!15677 = !DILocation(line: 297, column: 524, scope: !15674)
!15678 = !DILocation(line: 297, column: 531, scope: !15679)
!15679 = !DILexicalBlockFile(scope: !15680, file: !624, discriminator: 3)
!15680 = distinct !DILexicalBlock(scope: !15675, file: !624, line: 297, column: 519)
!15681 = !DILocation(line: 297, column: 535, scope: !15679)
!15682 = !DILocation(line: 297, column: 533, scope: !15679)
!15683 = !DILocation(line: 297, column: 519, scope: !15679)
!15684 = !DILocation(line: 297, column: 562, scope: !15685)
!15685 = !DILexicalBlockFile(scope: !15686, file: !624, discriminator: 4)
!15686 = distinct !DILexicalBlock(scope: !15680, file: !624, line: 297, column: 547)
!15687 = !DILocation(line: 297, column: 558, scope: !15685)
!15688 = !DILocation(line: 297, column: 577, scope: !15685)
!15689 = !DILocation(line: 297, column: 570, scope: !15685)
!15690 = !DILocation(line: 297, column: 580, scope: !15685)
!15691 = !DILocation(line: 297, column: 569, scope: !15685)
!15692 = !DILocation(line: 297, column: 608, scope: !15693)
!15693 = !DILexicalBlockFile(scope: !15686, file: !624, discriminator: 5)
!15694 = !DILocation(line: 297, column: 601, scope: !15693)
!15695 = !DILocation(line: 297, column: 600, scope: !15693)
!15696 = !DILocation(line: 297, column: 619, scope: !15693)
!15697 = !DILocation(line: 297, column: 615, scope: !15693)
!15698 = !DILocation(line: 297, column: 614, scope: !15693)
!15699 = !DILocation(line: 297, column: 612, scope: !15693)
!15700 = !DILocation(line: 297, column: 624, scope: !15693)
!15701 = !DILocation(line: 297, column: 596, scope: !15693)
!15702 = !DILocation(line: 297, column: 569, scope: !15693)
!15703 = !DILocation(line: 297, column: 669, scope: !15704)
!15704 = !DILexicalBlockFile(scope: !15686, file: !624, discriminator: 6)
!15705 = !DILocation(line: 297, column: 662, scope: !15704)
!15706 = !DILocation(line: 297, column: 661, scope: !15704)
!15707 = !DILocation(line: 297, column: 659, scope: !15704)
!15708 = !DILocation(line: 297, column: 690, scope: !15704)
!15709 = !DILocation(line: 297, column: 686, scope: !15704)
!15710 = !DILocation(line: 297, column: 685, scope: !15704)
!15711 = !DILocation(line: 297, column: 683, scope: !15704)
!15712 = !DILocation(line: 297, column: 674, scope: !15704)
!15713 = !DILocation(line: 297, column: 695, scope: !15704)
!15714 = !DILocation(line: 297, column: 649, scope: !15704)
!15715 = !DILocation(line: 297, column: 643, scope: !15704)
!15716 = !DILocation(line: 297, column: 569, scope: !15704)
!15717 = !DILocation(line: 297, column: 569, scope: !15718)
!15718 = !DILexicalBlockFile(scope: !15686, file: !624, discriminator: 7)
!15719 = !DILocation(line: 297, column: 712, scope: !15718)
!15720 = !DILocation(line: 297, column: 708, scope: !15718)
!15721 = !DILocation(line: 297, column: 706, scope: !15718)
!15722 = !DILocation(line: 297, column: 567, scope: !15718)
!15723 = !DILocation(line: 297, column: 718, scope: !15718)
!15724 = !DILocation(line: 297, column: 716, scope: !15718)
!15725 = !DILocation(line: 297, column: 565, scope: !15718)
!15726 = !DILocation(line: 297, column: 558, scope: !15718)
!15727 = !DILocation(line: 297, column: 553, scope: !15718)
!15728 = !DILocation(line: 297, column: 549, scope: !15718)
!15729 = !DILocation(line: 297, column: 556, scope: !15718)
!15730 = !DILocation(line: 297, column: 727, scope: !15718)
!15731 = !DILocation(line: 297, column: 543, scope: !15732)
!15732 = !DILexicalBlockFile(scope: !15680, file: !624, discriminator: 8)
!15733 = !DILocation(line: 297, column: 519, scope: !15732)
!15734 = distinct !{!15734, !15735}
!15735 = !DILocation(line: 297, column: 519, scope: !15676)
!15736 = !DILocation(line: 297, column: 736, scope: !15737)
!15737 = !DILexicalBlockFile(scope: !15676, file: !624, discriminator: 9)
!15738 = !DILocation(line: 297, column: 733, scope: !15737)
!15739 = !DILocation(line: 297, column: 757, scope: !15737)
!15740 = !DILocation(line: 297, column: 754, scope: !15737)
!15741 = !DILocation(line: 297, column: 781, scope: !15737)
!15742 = !DILocation(line: 297, column: 778, scope: !15737)
!15743 = !DILocation(line: 297, column: 798, scope: !15737)
!15744 = !DILocation(line: 297, column: 513, scope: !15745)
!15745 = !DILexicalBlockFile(scope: !15669, file: !624, discriminator: 10)
!15746 = !DILocation(line: 297, column: 488, scope: !15745)
!15747 = distinct !{!15747, !15748}
!15748 = !DILocation(line: 297, column: 488, scope: !15618)
!15749 = !DILocation(line: 297, column: 800, scope: !15750)
!15750 = !DILexicalBlockFile(scope: !15618, file: !624, discriminator: 11)
!15751 = distinct !DISubprogram(name: "blend_hardmix_16bit", scope: !624, file: !624, line: 298, type: !1531, isLocal: true, isDefinition: true, scopeLine: 298, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!15752 = !DILocalVariable(name: "_top", arg: 1, scope: !15751, file: !624, line: 298, type: !900)
!15753 = !DILocation(line: 298, column: 48, scope: !15751)
!15754 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !15751, file: !624, line: 298, type: !902)
!15755 = !DILocation(line: 298, column: 64, scope: !15751)
!15756 = !DILocalVariable(name: "_bottom", arg: 3, scope: !15751, file: !624, line: 298, type: !900)
!15757 = !DILocation(line: 298, column: 93, scope: !15751)
!15758 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !15751, file: !624, line: 298, type: !902)
!15759 = !DILocation(line: 298, column: 112, scope: !15751)
!15760 = !DILocalVariable(name: "_dst", arg: 5, scope: !15751, file: !624, line: 298, type: !329)
!15761 = !DILocation(line: 298, column: 138, scope: !15751)
!15762 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !15751, file: !624, line: 298, type: !902)
!15763 = !DILocation(line: 298, column: 154, scope: !15751)
!15764 = !DILocalVariable(name: "width", arg: 7, scope: !15751, file: !624, line: 298, type: !902)
!15765 = !DILocation(line: 298, column: 178, scope: !15751)
!15766 = !DILocalVariable(name: "height", arg: 8, scope: !15751, file: !624, line: 298, type: !902)
!15767 = !DILocation(line: 298, column: 195, scope: !15751)
!15768 = !DILocalVariable(name: "param", arg: 9, scope: !15751, file: !624, line: 298, type: !884)
!15769 = !DILocation(line: 298, column: 217, scope: !15751)
!15770 = !DILocalVariable(name: "values", arg: 10, scope: !15751, file: !624, line: 298, type: !544)
!15771 = !DILocation(line: 298, column: 232, scope: !15751)
!15772 = !DILocalVariable(name: "starty", arg: 11, scope: !15751, file: !624, line: 298, type: !238)
!15773 = !DILocation(line: 298, column: 244, scope: !15751)
!15774 = !DILocalVariable(name: "top", scope: !15751, file: !624, line: 298, type: !839)
!15775 = !DILocation(line: 298, column: 270, scope: !15751)
!15776 = !DILocation(line: 298, column: 293, scope: !15751)
!15777 = !DILocation(line: 298, column: 276, scope: !15751)
!15778 = !DILocalVariable(name: "bottom", scope: !15751, file: !624, line: 298, type: !839)
!15779 = !DILocation(line: 298, column: 315, scope: !15751)
!15780 = !DILocation(line: 298, column: 341, scope: !15751)
!15781 = !DILocation(line: 298, column: 324, scope: !15751)
!15782 = !DILocalVariable(name: "dst", scope: !15751, file: !624, line: 298, type: !843)
!15783 = !DILocation(line: 298, column: 360, scope: !15751)
!15784 = !DILocation(line: 298, column: 377, scope: !15751)
!15785 = !DILocation(line: 298, column: 366, scope: !15751)
!15786 = !DILocalVariable(name: "opacity", scope: !15751, file: !624, line: 298, type: !248)
!15787 = !DILocation(line: 298, column: 390, scope: !15751)
!15788 = !DILocation(line: 298, column: 400, scope: !15751)
!15789 = !DILocation(line: 298, column: 407, scope: !15751)
!15790 = !DILocalVariable(name: "i", scope: !15751, file: !624, line: 298, type: !238)
!15791 = !DILocation(line: 298, column: 420, scope: !15751)
!15792 = !DILocalVariable(name: "j", scope: !15751, file: !624, line: 298, type: !238)
!15793 = !DILocation(line: 298, column: 423, scope: !15751)
!15794 = !DILocation(line: 298, column: 439, scope: !15751)
!15795 = !DILocation(line: 298, column: 458, scope: !15751)
!15796 = !DILocation(line: 298, column: 480, scope: !15751)
!15797 = !DILocation(line: 298, column: 493, scope: !15798)
!15798 = distinct !DILexicalBlock(scope: !15751, file: !624, line: 298, column: 486)
!15799 = !DILocation(line: 298, column: 491, scope: !15798)
!15800 = !DILocation(line: 298, column: 498, scope: !15801)
!15801 = !DILexicalBlockFile(scope: !15802, file: !624, discriminator: 1)
!15802 = distinct !DILexicalBlock(scope: !15798, file: !624, line: 298, column: 486)
!15803 = !DILocation(line: 298, column: 502, scope: !15801)
!15804 = !DILocation(line: 298, column: 500, scope: !15801)
!15805 = !DILocation(line: 298, column: 486, scope: !15801)
!15806 = !DILocation(line: 298, column: 524, scope: !15807)
!15807 = !DILexicalBlockFile(scope: !15808, file: !624, discriminator: 2)
!15808 = distinct !DILexicalBlock(scope: !15809, file: !624, line: 298, column: 517)
!15809 = distinct !DILexicalBlock(scope: !15802, file: !624, line: 298, column: 515)
!15810 = !DILocation(line: 298, column: 522, scope: !15807)
!15811 = !DILocation(line: 298, column: 529, scope: !15812)
!15812 = !DILexicalBlockFile(scope: !15813, file: !624, discriminator: 3)
!15813 = distinct !DILexicalBlock(scope: !15808, file: !624, line: 298, column: 517)
!15814 = !DILocation(line: 298, column: 533, scope: !15812)
!15815 = !DILocation(line: 298, column: 531, scope: !15812)
!15816 = !DILocation(line: 298, column: 517, scope: !15812)
!15817 = !DILocation(line: 298, column: 560, scope: !15818)
!15818 = !DILexicalBlockFile(scope: !15819, file: !624, discriminator: 4)
!15819 = distinct !DILexicalBlock(scope: !15813, file: !624, line: 298, column: 545)
!15820 = !DILocation(line: 298, column: 556, scope: !15818)
!15821 = !DILocation(line: 298, column: 572, scope: !15818)
!15822 = !DILocation(line: 298, column: 568, scope: !15818)
!15823 = !DILocation(line: 298, column: 593, scope: !15818)
!15824 = !DILocation(line: 298, column: 586, scope: !15818)
!15825 = !DILocation(line: 298, column: 584, scope: !15818)
!15826 = !DILocation(line: 298, column: 575, scope: !15818)
!15827 = !DILocation(line: 298, column: 567, scope: !15818)
!15828 = !DILocation(line: 298, column: 616, scope: !15818)
!15829 = !DILocation(line: 298, column: 612, scope: !15818)
!15830 = !DILocation(line: 298, column: 610, scope: !15818)
!15831 = !DILocation(line: 298, column: 565, scope: !15818)
!15832 = !DILocation(line: 298, column: 622, scope: !15818)
!15833 = !DILocation(line: 298, column: 620, scope: !15818)
!15834 = !DILocation(line: 298, column: 563, scope: !15818)
!15835 = !DILocation(line: 298, column: 551, scope: !15818)
!15836 = !DILocation(line: 298, column: 547, scope: !15818)
!15837 = !DILocation(line: 298, column: 554, scope: !15818)
!15838 = !DILocation(line: 298, column: 631, scope: !15818)
!15839 = !DILocation(line: 298, column: 541, scope: !15840)
!15840 = !DILexicalBlockFile(scope: !15813, file: !624, discriminator: 5)
!15841 = !DILocation(line: 298, column: 517, scope: !15840)
!15842 = distinct !{!15842, !15843}
!15843 = !DILocation(line: 298, column: 517, scope: !15809)
!15844 = !DILocation(line: 298, column: 640, scope: !15845)
!15845 = !DILexicalBlockFile(scope: !15809, file: !624, discriminator: 6)
!15846 = !DILocation(line: 298, column: 637, scope: !15845)
!15847 = !DILocation(line: 298, column: 661, scope: !15845)
!15848 = !DILocation(line: 298, column: 658, scope: !15845)
!15849 = !DILocation(line: 298, column: 685, scope: !15845)
!15850 = !DILocation(line: 298, column: 682, scope: !15845)
!15851 = !DILocation(line: 298, column: 702, scope: !15845)
!15852 = !DILocation(line: 298, column: 511, scope: !15853)
!15853 = !DILexicalBlockFile(scope: !15802, file: !624, discriminator: 7)
!15854 = !DILocation(line: 298, column: 486, scope: !15853)
!15855 = distinct !{!15855, !15856}
!15856 = !DILocation(line: 298, column: 486, scope: !15751)
!15857 = !DILocation(line: 298, column: 704, scope: !15858)
!15858 = !DILexicalBlockFile(scope: !15751, file: !624, discriminator: 8)
!15859 = distinct !DISubprogram(name: "blend_heat_16bit", scope: !624, file: !624, line: 299, type: !1531, isLocal: true, isDefinition: true, scopeLine: 299, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!15860 = !DILocalVariable(name: "_top", arg: 1, scope: !15859, file: !624, line: 299, type: !900)
!15861 = !DILocation(line: 299, column: 45, scope: !15859)
!15862 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !15859, file: !624, line: 299, type: !902)
!15863 = !DILocation(line: 299, column: 61, scope: !15859)
!15864 = !DILocalVariable(name: "_bottom", arg: 3, scope: !15859, file: !624, line: 299, type: !900)
!15865 = !DILocation(line: 299, column: 90, scope: !15859)
!15866 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !15859, file: !624, line: 299, type: !902)
!15867 = !DILocation(line: 299, column: 109, scope: !15859)
!15868 = !DILocalVariable(name: "_dst", arg: 5, scope: !15859, file: !624, line: 299, type: !329)
!15869 = !DILocation(line: 299, column: 135, scope: !15859)
!15870 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !15859, file: !624, line: 299, type: !902)
!15871 = !DILocation(line: 299, column: 151, scope: !15859)
!15872 = !DILocalVariable(name: "width", arg: 7, scope: !15859, file: !624, line: 299, type: !902)
!15873 = !DILocation(line: 299, column: 175, scope: !15859)
!15874 = !DILocalVariable(name: "height", arg: 8, scope: !15859, file: !624, line: 299, type: !902)
!15875 = !DILocation(line: 299, column: 192, scope: !15859)
!15876 = !DILocalVariable(name: "param", arg: 9, scope: !15859, file: !624, line: 299, type: !884)
!15877 = !DILocation(line: 299, column: 214, scope: !15859)
!15878 = !DILocalVariable(name: "values", arg: 10, scope: !15859, file: !624, line: 299, type: !544)
!15879 = !DILocation(line: 299, column: 229, scope: !15859)
!15880 = !DILocalVariable(name: "starty", arg: 11, scope: !15859, file: !624, line: 299, type: !238)
!15881 = !DILocation(line: 299, column: 241, scope: !15859)
!15882 = !DILocalVariable(name: "top", scope: !15859, file: !624, line: 299, type: !839)
!15883 = !DILocation(line: 299, column: 267, scope: !15859)
!15884 = !DILocation(line: 299, column: 290, scope: !15859)
!15885 = !DILocation(line: 299, column: 273, scope: !15859)
!15886 = !DILocalVariable(name: "bottom", scope: !15859, file: !624, line: 299, type: !839)
!15887 = !DILocation(line: 299, column: 312, scope: !15859)
!15888 = !DILocation(line: 299, column: 338, scope: !15859)
!15889 = !DILocation(line: 299, column: 321, scope: !15859)
!15890 = !DILocalVariable(name: "dst", scope: !15859, file: !624, line: 299, type: !843)
!15891 = !DILocation(line: 299, column: 357, scope: !15859)
!15892 = !DILocation(line: 299, column: 374, scope: !15859)
!15893 = !DILocation(line: 299, column: 363, scope: !15859)
!15894 = !DILocalVariable(name: "opacity", scope: !15859, file: !624, line: 299, type: !248)
!15895 = !DILocation(line: 299, column: 387, scope: !15859)
!15896 = !DILocation(line: 299, column: 397, scope: !15859)
!15897 = !DILocation(line: 299, column: 404, scope: !15859)
!15898 = !DILocalVariable(name: "i", scope: !15859, file: !624, line: 299, type: !238)
!15899 = !DILocation(line: 299, column: 417, scope: !15859)
!15900 = !DILocalVariable(name: "j", scope: !15859, file: !624, line: 299, type: !238)
!15901 = !DILocation(line: 299, column: 420, scope: !15859)
!15902 = !DILocation(line: 299, column: 436, scope: !15859)
!15903 = !DILocation(line: 299, column: 455, scope: !15859)
!15904 = !DILocation(line: 299, column: 477, scope: !15859)
!15905 = !DILocation(line: 299, column: 490, scope: !15906)
!15906 = distinct !DILexicalBlock(scope: !15859, file: !624, line: 299, column: 483)
!15907 = !DILocation(line: 299, column: 488, scope: !15906)
!15908 = !DILocation(line: 299, column: 495, scope: !15909)
!15909 = !DILexicalBlockFile(scope: !15910, file: !624, discriminator: 1)
!15910 = distinct !DILexicalBlock(scope: !15906, file: !624, line: 299, column: 483)
!15911 = !DILocation(line: 299, column: 499, scope: !15909)
!15912 = !DILocation(line: 299, column: 497, scope: !15909)
!15913 = !DILocation(line: 299, column: 483, scope: !15909)
!15914 = !DILocation(line: 299, column: 521, scope: !15915)
!15915 = !DILexicalBlockFile(scope: !15916, file: !624, discriminator: 2)
!15916 = distinct !DILexicalBlock(scope: !15917, file: !624, line: 299, column: 514)
!15917 = distinct !DILexicalBlock(scope: !15910, file: !624, line: 299, column: 512)
!15918 = !DILocation(line: 299, column: 519, scope: !15915)
!15919 = !DILocation(line: 299, column: 526, scope: !15920)
!15920 = !DILexicalBlockFile(scope: !15921, file: !624, discriminator: 3)
!15921 = distinct !DILexicalBlock(scope: !15916, file: !624, line: 299, column: 514)
!15922 = !DILocation(line: 299, column: 530, scope: !15920)
!15923 = !DILocation(line: 299, column: 528, scope: !15920)
!15924 = !DILocation(line: 299, column: 514, scope: !15920)
!15925 = !DILocation(line: 299, column: 557, scope: !15926)
!15926 = !DILexicalBlockFile(scope: !15927, file: !624, discriminator: 4)
!15927 = distinct !DILexicalBlock(scope: !15921, file: !624, line: 299, column: 542)
!15928 = !DILocation(line: 299, column: 553, scope: !15926)
!15929 = !DILocation(line: 299, column: 569, scope: !15926)
!15930 = !DILocation(line: 299, column: 565, scope: !15926)
!15931 = !DILocation(line: 299, column: 572, scope: !15926)
!15932 = !DILocation(line: 299, column: 564, scope: !15926)
!15933 = !DILocation(line: 299, column: 564, scope: !15934)
!15934 = !DILexicalBlockFile(scope: !15927, file: !624, discriminator: 5)
!15935 = !DILocation(line: 299, column: 611, scope: !15936)
!15936 = !DILexicalBlockFile(scope: !15927, file: !624, discriminator: 6)
!15937 = !DILocation(line: 299, column: 604, scope: !15936)
!15938 = !DILocation(line: 299, column: 602, scope: !15936)
!15939 = !DILocation(line: 299, column: 633, scope: !15936)
!15940 = !DILocation(line: 299, column: 626, scope: !15936)
!15941 = !DILocation(line: 299, column: 624, scope: !15936)
!15942 = !DILocation(line: 299, column: 615, scope: !15936)
!15943 = !DILocation(line: 299, column: 644, scope: !15936)
!15944 = !DILocation(line: 299, column: 640, scope: !15936)
!15945 = !DILocation(line: 299, column: 638, scope: !15936)
!15946 = !DILocation(line: 299, column: 648, scope: !15936)
!15947 = !DILocation(line: 299, column: 593, scope: !15936)
!15948 = !DILocation(line: 299, column: 593, scope: !15949)
!15949 = !DILexicalBlockFile(scope: !15927, file: !624, discriminator: 7)
!15950 = !DILocation(line: 299, column: 688, scope: !15951)
!15951 = !DILexicalBlockFile(scope: !15927, file: !624, discriminator: 8)
!15952 = !DILocation(line: 299, column: 681, scope: !15951)
!15953 = !DILocation(line: 299, column: 679, scope: !15951)
!15954 = !DILocation(line: 299, column: 710, scope: !15951)
!15955 = !DILocation(line: 299, column: 703, scope: !15951)
!15956 = !DILocation(line: 299, column: 701, scope: !15951)
!15957 = !DILocation(line: 299, column: 692, scope: !15951)
!15958 = !DILocation(line: 299, column: 721, scope: !15951)
!15959 = !DILocation(line: 299, column: 717, scope: !15951)
!15960 = !DILocation(line: 299, column: 715, scope: !15951)
!15961 = !DILocation(line: 299, column: 593, scope: !15951)
!15962 = !DILocation(line: 299, column: 593, scope: !15963)
!15963 = !DILexicalBlockFile(scope: !15927, file: !624, discriminator: 9)
!15964 = !DILocation(line: 299, column: 590, scope: !15963)
!15965 = !DILocation(line: 299, column: 564, scope: !15963)
!15966 = !DILocation(line: 299, column: 564, scope: !15967)
!15967 = !DILexicalBlockFile(scope: !15927, file: !624, discriminator: 10)
!15968 = !DILocation(line: 299, column: 733, scope: !15967)
!15969 = !DILocation(line: 299, column: 729, scope: !15967)
!15970 = !DILocation(line: 299, column: 727, scope: !15967)
!15971 = !DILocation(line: 299, column: 562, scope: !15967)
!15972 = !DILocation(line: 299, column: 739, scope: !15967)
!15973 = !DILocation(line: 299, column: 737, scope: !15967)
!15974 = !DILocation(line: 299, column: 560, scope: !15967)
!15975 = !DILocation(line: 299, column: 553, scope: !15967)
!15976 = !DILocation(line: 299, column: 548, scope: !15967)
!15977 = !DILocation(line: 299, column: 544, scope: !15967)
!15978 = !DILocation(line: 299, column: 551, scope: !15967)
!15979 = !DILocation(line: 299, column: 748, scope: !15967)
!15980 = !DILocation(line: 299, column: 538, scope: !15981)
!15981 = !DILexicalBlockFile(scope: !15921, file: !624, discriminator: 11)
!15982 = !DILocation(line: 299, column: 514, scope: !15981)
!15983 = distinct !{!15983, !15984}
!15984 = !DILocation(line: 299, column: 514, scope: !15917)
!15985 = !DILocation(line: 299, column: 757, scope: !15986)
!15986 = !DILexicalBlockFile(scope: !15917, file: !624, discriminator: 12)
!15987 = !DILocation(line: 299, column: 754, scope: !15986)
!15988 = !DILocation(line: 299, column: 778, scope: !15986)
!15989 = !DILocation(line: 299, column: 775, scope: !15986)
!15990 = !DILocation(line: 299, column: 802, scope: !15986)
!15991 = !DILocation(line: 299, column: 799, scope: !15986)
!15992 = !DILocation(line: 299, column: 819, scope: !15986)
!15993 = !DILocation(line: 299, column: 508, scope: !15994)
!15994 = !DILexicalBlockFile(scope: !15910, file: !624, discriminator: 13)
!15995 = !DILocation(line: 299, column: 483, scope: !15994)
!15996 = distinct !{!15996, !15997}
!15997 = !DILocation(line: 299, column: 483, scope: !15859)
!15998 = !DILocation(line: 299, column: 821, scope: !15999)
!15999 = !DILexicalBlockFile(scope: !15859, file: !624, discriminator: 14)
!16000 = distinct !DISubprogram(name: "blend_lighten_16bit", scope: !624, file: !624, line: 302, type: !1531, isLocal: true, isDefinition: true, scopeLine: 302, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!16001 = !DILocalVariable(name: "_top", arg: 1, scope: !16000, file: !624, line: 302, type: !900)
!16002 = !DILocation(line: 302, column: 48, scope: !16000)
!16003 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !16000, file: !624, line: 302, type: !902)
!16004 = !DILocation(line: 302, column: 64, scope: !16000)
!16005 = !DILocalVariable(name: "_bottom", arg: 3, scope: !16000, file: !624, line: 302, type: !900)
!16006 = !DILocation(line: 302, column: 93, scope: !16000)
!16007 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !16000, file: !624, line: 302, type: !902)
!16008 = !DILocation(line: 302, column: 112, scope: !16000)
!16009 = !DILocalVariable(name: "_dst", arg: 5, scope: !16000, file: !624, line: 302, type: !329)
!16010 = !DILocation(line: 302, column: 138, scope: !16000)
!16011 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !16000, file: !624, line: 302, type: !902)
!16012 = !DILocation(line: 302, column: 154, scope: !16000)
!16013 = !DILocalVariable(name: "width", arg: 7, scope: !16000, file: !624, line: 302, type: !902)
!16014 = !DILocation(line: 302, column: 178, scope: !16000)
!16015 = !DILocalVariable(name: "height", arg: 8, scope: !16000, file: !624, line: 302, type: !902)
!16016 = !DILocation(line: 302, column: 195, scope: !16000)
!16017 = !DILocalVariable(name: "param", arg: 9, scope: !16000, file: !624, line: 302, type: !884)
!16018 = !DILocation(line: 302, column: 217, scope: !16000)
!16019 = !DILocalVariable(name: "values", arg: 10, scope: !16000, file: !624, line: 302, type: !544)
!16020 = !DILocation(line: 302, column: 232, scope: !16000)
!16021 = !DILocalVariable(name: "starty", arg: 11, scope: !16000, file: !624, line: 302, type: !238)
!16022 = !DILocation(line: 302, column: 244, scope: !16000)
!16023 = !DILocalVariable(name: "top", scope: !16000, file: !624, line: 302, type: !839)
!16024 = !DILocation(line: 302, column: 270, scope: !16000)
!16025 = !DILocation(line: 302, column: 293, scope: !16000)
!16026 = !DILocation(line: 302, column: 276, scope: !16000)
!16027 = !DILocalVariable(name: "bottom", scope: !16000, file: !624, line: 302, type: !839)
!16028 = !DILocation(line: 302, column: 315, scope: !16000)
!16029 = !DILocation(line: 302, column: 341, scope: !16000)
!16030 = !DILocation(line: 302, column: 324, scope: !16000)
!16031 = !DILocalVariable(name: "dst", scope: !16000, file: !624, line: 302, type: !843)
!16032 = !DILocation(line: 302, column: 360, scope: !16000)
!16033 = !DILocation(line: 302, column: 377, scope: !16000)
!16034 = !DILocation(line: 302, column: 366, scope: !16000)
!16035 = !DILocalVariable(name: "opacity", scope: !16000, file: !624, line: 302, type: !248)
!16036 = !DILocation(line: 302, column: 390, scope: !16000)
!16037 = !DILocation(line: 302, column: 400, scope: !16000)
!16038 = !DILocation(line: 302, column: 407, scope: !16000)
!16039 = !DILocalVariable(name: "i", scope: !16000, file: !624, line: 302, type: !238)
!16040 = !DILocation(line: 302, column: 420, scope: !16000)
!16041 = !DILocalVariable(name: "j", scope: !16000, file: !624, line: 302, type: !238)
!16042 = !DILocation(line: 302, column: 423, scope: !16000)
!16043 = !DILocation(line: 302, column: 439, scope: !16000)
!16044 = !DILocation(line: 302, column: 458, scope: !16000)
!16045 = !DILocation(line: 302, column: 480, scope: !16000)
!16046 = !DILocation(line: 302, column: 493, scope: !16047)
!16047 = distinct !DILexicalBlock(scope: !16000, file: !624, line: 302, column: 486)
!16048 = !DILocation(line: 302, column: 491, scope: !16047)
!16049 = !DILocation(line: 302, column: 498, scope: !16050)
!16050 = !DILexicalBlockFile(scope: !16051, file: !624, discriminator: 1)
!16051 = distinct !DILexicalBlock(scope: !16047, file: !624, line: 302, column: 486)
!16052 = !DILocation(line: 302, column: 502, scope: !16050)
!16053 = !DILocation(line: 302, column: 500, scope: !16050)
!16054 = !DILocation(line: 302, column: 486, scope: !16050)
!16055 = !DILocation(line: 302, column: 524, scope: !16056)
!16056 = !DILexicalBlockFile(scope: !16057, file: !624, discriminator: 2)
!16057 = distinct !DILexicalBlock(scope: !16058, file: !624, line: 302, column: 517)
!16058 = distinct !DILexicalBlock(scope: !16051, file: !624, line: 302, column: 515)
!16059 = !DILocation(line: 302, column: 522, scope: !16056)
!16060 = !DILocation(line: 302, column: 529, scope: !16061)
!16061 = !DILexicalBlockFile(scope: !16062, file: !624, discriminator: 3)
!16062 = distinct !DILexicalBlock(scope: !16057, file: !624, line: 302, column: 517)
!16063 = !DILocation(line: 302, column: 533, scope: !16061)
!16064 = !DILocation(line: 302, column: 531, scope: !16061)
!16065 = !DILocation(line: 302, column: 517, scope: !16061)
!16066 = !DILocation(line: 302, column: 560, scope: !16067)
!16067 = !DILexicalBlockFile(scope: !16068, file: !624, discriminator: 4)
!16068 = distinct !DILexicalBlock(scope: !16062, file: !624, line: 302, column: 545)
!16069 = !DILocation(line: 302, column: 556, scope: !16067)
!16070 = !DILocation(line: 302, column: 573, scope: !16067)
!16071 = !DILocation(line: 302, column: 569, scope: !16067)
!16072 = !DILocation(line: 302, column: 568, scope: !16067)
!16073 = !DILocation(line: 302, column: 587, scope: !16067)
!16074 = !DILocation(line: 302, column: 580, scope: !16067)
!16075 = !DILocation(line: 302, column: 579, scope: !16067)
!16076 = !DILocation(line: 302, column: 577, scope: !16067)
!16077 = !DILocation(line: 302, column: 598, scope: !16078)
!16078 = !DILexicalBlockFile(scope: !16068, file: !624, discriminator: 5)
!16079 = !DILocation(line: 302, column: 594, scope: !16078)
!16080 = !DILocation(line: 302, column: 593, scope: !16078)
!16081 = !DILocation(line: 302, column: 568, scope: !16078)
!16082 = !DILocation(line: 302, column: 612, scope: !16083)
!16083 = !DILexicalBlockFile(scope: !16068, file: !624, discriminator: 6)
!16084 = !DILocation(line: 302, column: 605, scope: !16083)
!16085 = !DILocation(line: 302, column: 604, scope: !16083)
!16086 = !DILocation(line: 302, column: 568, scope: !16083)
!16087 = !DILocation(line: 302, column: 568, scope: !16088)
!16088 = !DILexicalBlockFile(scope: !16068, file: !624, discriminator: 7)
!16089 = !DILocation(line: 302, column: 624, scope: !16088)
!16090 = !DILocation(line: 302, column: 620, scope: !16088)
!16091 = !DILocation(line: 302, column: 618, scope: !16088)
!16092 = !DILocation(line: 302, column: 565, scope: !16088)
!16093 = !DILocation(line: 302, column: 630, scope: !16088)
!16094 = !DILocation(line: 302, column: 628, scope: !16088)
!16095 = !DILocation(line: 302, column: 563, scope: !16088)
!16096 = !DILocation(line: 302, column: 556, scope: !16088)
!16097 = !DILocation(line: 302, column: 551, scope: !16088)
!16098 = !DILocation(line: 302, column: 547, scope: !16088)
!16099 = !DILocation(line: 302, column: 554, scope: !16088)
!16100 = !DILocation(line: 302, column: 639, scope: !16088)
!16101 = !DILocation(line: 302, column: 541, scope: !16102)
!16102 = !DILexicalBlockFile(scope: !16062, file: !624, discriminator: 8)
!16103 = !DILocation(line: 302, column: 517, scope: !16102)
!16104 = distinct !{!16104, !16105}
!16105 = !DILocation(line: 302, column: 517, scope: !16058)
!16106 = !DILocation(line: 302, column: 648, scope: !16107)
!16107 = !DILexicalBlockFile(scope: !16058, file: !624, discriminator: 9)
!16108 = !DILocation(line: 302, column: 645, scope: !16107)
!16109 = !DILocation(line: 302, column: 669, scope: !16107)
!16110 = !DILocation(line: 302, column: 666, scope: !16107)
!16111 = !DILocation(line: 302, column: 693, scope: !16107)
!16112 = !DILocation(line: 302, column: 690, scope: !16107)
!16113 = !DILocation(line: 302, column: 710, scope: !16107)
!16114 = !DILocation(line: 302, column: 511, scope: !16115)
!16115 = !DILexicalBlockFile(scope: !16051, file: !624, discriminator: 10)
!16116 = !DILocation(line: 302, column: 486, scope: !16115)
!16117 = distinct !{!16117, !16118}
!16118 = !DILocation(line: 302, column: 486, scope: !16000)
!16119 = !DILocation(line: 302, column: 712, scope: !16120)
!16120 = !DILexicalBlockFile(scope: !16000, file: !624, discriminator: 11)
!16121 = distinct !DISubprogram(name: "blend_linearlight_16bit", scope: !624, file: !624, line: 316, type: !1531, isLocal: true, isDefinition: true, scopeLine: 316, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!16122 = !DILocation(line: 181, column: 99, scope: !13968, inlinedAt: !16123)
!16123 = distinct !DILocation(line: 316, column: 571, scope: !16124)
!16124 = !DILexicalBlockFile(scope: !16125, file: !624, discriminator: 7)
!16125 = distinct !DILexicalBlock(scope: !16126, file: !624, line: 316, column: 549)
!16126 = distinct !DILexicalBlock(scope: !16127, file: !624, line: 316, column: 521)
!16127 = distinct !DILexicalBlock(scope: !16128, file: !624, line: 316, column: 521)
!16128 = distinct !DILexicalBlock(scope: !16129, file: !624, line: 316, column: 519)
!16129 = distinct !DILexicalBlock(scope: !16130, file: !624, line: 316, column: 490)
!16130 = distinct !DILexicalBlock(scope: !16121, file: !624, line: 316, column: 490)
!16131 = !DILocalVariable(name: "_top", arg: 1, scope: !16121, file: !624, line: 316, type: !900)
!16132 = !DILocation(line: 316, column: 52, scope: !16121)
!16133 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !16121, file: !624, line: 316, type: !902)
!16134 = !DILocation(line: 316, column: 68, scope: !16121)
!16135 = !DILocalVariable(name: "_bottom", arg: 3, scope: !16121, file: !624, line: 316, type: !900)
!16136 = !DILocation(line: 316, column: 97, scope: !16121)
!16137 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !16121, file: !624, line: 316, type: !902)
!16138 = !DILocation(line: 316, column: 116, scope: !16121)
!16139 = !DILocalVariable(name: "_dst", arg: 5, scope: !16121, file: !624, line: 316, type: !329)
!16140 = !DILocation(line: 316, column: 142, scope: !16121)
!16141 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !16121, file: !624, line: 316, type: !902)
!16142 = !DILocation(line: 316, column: 158, scope: !16121)
!16143 = !DILocalVariable(name: "width", arg: 7, scope: !16121, file: !624, line: 316, type: !902)
!16144 = !DILocation(line: 316, column: 182, scope: !16121)
!16145 = !DILocalVariable(name: "height", arg: 8, scope: !16121, file: !624, line: 316, type: !902)
!16146 = !DILocation(line: 316, column: 199, scope: !16121)
!16147 = !DILocalVariable(name: "param", arg: 9, scope: !16121, file: !624, line: 316, type: !884)
!16148 = !DILocation(line: 316, column: 221, scope: !16121)
!16149 = !DILocalVariable(name: "values", arg: 10, scope: !16121, file: !624, line: 316, type: !544)
!16150 = !DILocation(line: 316, column: 236, scope: !16121)
!16151 = !DILocalVariable(name: "starty", arg: 11, scope: !16121, file: !624, line: 316, type: !238)
!16152 = !DILocation(line: 316, column: 248, scope: !16121)
!16153 = !DILocalVariable(name: "top", scope: !16121, file: !624, line: 316, type: !839)
!16154 = !DILocation(line: 316, column: 274, scope: !16121)
!16155 = !DILocation(line: 316, column: 297, scope: !16121)
!16156 = !DILocation(line: 316, column: 280, scope: !16121)
!16157 = !DILocalVariable(name: "bottom", scope: !16121, file: !624, line: 316, type: !839)
!16158 = !DILocation(line: 316, column: 319, scope: !16121)
!16159 = !DILocation(line: 316, column: 345, scope: !16121)
!16160 = !DILocation(line: 316, column: 328, scope: !16121)
!16161 = !DILocalVariable(name: "dst", scope: !16121, file: !624, line: 316, type: !843)
!16162 = !DILocation(line: 316, column: 364, scope: !16121)
!16163 = !DILocation(line: 316, column: 381, scope: !16121)
!16164 = !DILocation(line: 316, column: 370, scope: !16121)
!16165 = !DILocalVariable(name: "opacity", scope: !16121, file: !624, line: 316, type: !248)
!16166 = !DILocation(line: 316, column: 394, scope: !16121)
!16167 = !DILocation(line: 316, column: 404, scope: !16121)
!16168 = !DILocation(line: 316, column: 411, scope: !16121)
!16169 = !DILocalVariable(name: "i", scope: !16121, file: !624, line: 316, type: !238)
!16170 = !DILocation(line: 316, column: 424, scope: !16121)
!16171 = !DILocalVariable(name: "j", scope: !16121, file: !624, line: 316, type: !238)
!16172 = !DILocation(line: 316, column: 427, scope: !16121)
!16173 = !DILocation(line: 316, column: 443, scope: !16121)
!16174 = !DILocation(line: 316, column: 462, scope: !16121)
!16175 = !DILocation(line: 316, column: 484, scope: !16121)
!16176 = !DILocation(line: 316, column: 497, scope: !16130)
!16177 = !DILocation(line: 316, column: 495, scope: !16130)
!16178 = !DILocation(line: 316, column: 502, scope: !16179)
!16179 = !DILexicalBlockFile(scope: !16129, file: !624, discriminator: 1)
!16180 = !DILocation(line: 316, column: 506, scope: !16179)
!16181 = !DILocation(line: 316, column: 504, scope: !16179)
!16182 = !DILocation(line: 316, column: 490, scope: !16179)
!16183 = !DILocation(line: 316, column: 528, scope: !16184)
!16184 = !DILexicalBlockFile(scope: !16127, file: !624, discriminator: 2)
!16185 = !DILocation(line: 316, column: 526, scope: !16184)
!16186 = !DILocation(line: 316, column: 533, scope: !16187)
!16187 = !DILexicalBlockFile(scope: !16126, file: !624, discriminator: 3)
!16188 = !DILocation(line: 316, column: 537, scope: !16187)
!16189 = !DILocation(line: 316, column: 535, scope: !16187)
!16190 = !DILocation(line: 316, column: 521, scope: !16187)
!16191 = !DILocation(line: 316, column: 564, scope: !16192)
!16192 = !DILexicalBlockFile(scope: !16125, file: !624, discriminator: 4)
!16193 = !DILocation(line: 316, column: 560, scope: !16192)
!16194 = !DILocation(line: 316, column: 596, scope: !16192)
!16195 = !DILocation(line: 316, column: 589, scope: !16192)
!16196 = !DILocation(line: 316, column: 599, scope: !16192)
!16197 = !DILocation(line: 316, column: 588, scope: !16192)
!16198 = !DILocation(line: 316, column: 617, scope: !16199)
!16199 = !DILexicalBlockFile(scope: !16125, file: !624, discriminator: 5)
!16200 = !DILocation(line: 316, column: 610, scope: !16199)
!16201 = !DILocation(line: 316, column: 630, scope: !16199)
!16202 = !DILocation(line: 316, column: 626, scope: !16199)
!16203 = !DILocation(line: 316, column: 624, scope: !16199)
!16204 = !DILocation(line: 316, column: 620, scope: !16199)
!16205 = !DILocation(line: 316, column: 633, scope: !16199)
!16206 = !DILocation(line: 316, column: 588, scope: !16199)
!16207 = !DILocation(line: 316, column: 650, scope: !16208)
!16208 = !DILexicalBlockFile(scope: !16125, file: !624, discriminator: 6)
!16209 = !DILocation(line: 316, column: 643, scope: !16208)
!16210 = !DILocation(line: 316, column: 664, scope: !16208)
!16211 = !DILocation(line: 316, column: 660, scope: !16208)
!16212 = !DILocation(line: 316, column: 667, scope: !16208)
!16213 = !DILocation(line: 316, column: 657, scope: !16208)
!16214 = !DILocation(line: 316, column: 653, scope: !16208)
!16215 = !DILocation(line: 316, column: 588, scope: !16208)
!16216 = !DILocation(line: 316, column: 588, scope: !16124)
!16217 = !DILocation(line: 316, column: 571, scope: !16124)
!16218 = !DILocation(line: 183, column: 9, scope: !14050, inlinedAt: !16123)
!16219 = !DILocation(line: 183, column: 10, scope: !14050, inlinedAt: !16123)
!16220 = !DILocation(line: 183, column: 9, scope: !13968, inlinedAt: !16123)
!16221 = !DILocation(line: 183, column: 31, scope: !14054, inlinedAt: !16123)
!16222 = !DILocation(line: 183, column: 30, scope: !14054, inlinedAt: !16123)
!16223 = !DILocation(line: 183, column: 33, scope: !14054, inlinedAt: !16123)
!16224 = !DILocation(line: 183, column: 29, scope: !14054, inlinedAt: !16123)
!16225 = !DILocation(line: 183, column: 22, scope: !14054, inlinedAt: !16123)
!16226 = !DILocation(line: 184, column: 17, scope: !14050, inlinedAt: !16123)
!16227 = !DILocation(line: 184, column: 10, scope: !14050, inlinedAt: !16123)
!16228 = !DILocation(line: 185, column: 1, scope: !13968, inlinedAt: !16123)
!16229 = !DILocation(line: 316, column: 570, scope: !16124)
!16230 = !DILocation(line: 316, column: 684, scope: !16124)
!16231 = !DILocation(line: 316, column: 680, scope: !16124)
!16232 = !DILocation(line: 316, column: 678, scope: !16124)
!16233 = !DILocation(line: 316, column: 569, scope: !16124)
!16234 = !DILocation(line: 316, column: 690, scope: !16124)
!16235 = !DILocation(line: 316, column: 688, scope: !16124)
!16236 = !DILocation(line: 316, column: 567, scope: !16124)
!16237 = !DILocation(line: 316, column: 560, scope: !16124)
!16238 = !DILocation(line: 316, column: 555, scope: !16124)
!16239 = !DILocation(line: 316, column: 551, scope: !16124)
!16240 = !DILocation(line: 316, column: 558, scope: !16124)
!16241 = !DILocation(line: 316, column: 699, scope: !16124)
!16242 = !DILocation(line: 316, column: 545, scope: !16243)
!16243 = !DILexicalBlockFile(scope: !16126, file: !624, discriminator: 8)
!16244 = !DILocation(line: 316, column: 521, scope: !16243)
!16245 = distinct !{!16245, !16246}
!16246 = !DILocation(line: 316, column: 521, scope: !16128)
!16247 = !DILocation(line: 316, column: 708, scope: !16248)
!16248 = !DILexicalBlockFile(scope: !16128, file: !624, discriminator: 9)
!16249 = !DILocation(line: 316, column: 705, scope: !16248)
!16250 = !DILocation(line: 316, column: 729, scope: !16248)
!16251 = !DILocation(line: 316, column: 726, scope: !16248)
!16252 = !DILocation(line: 316, column: 753, scope: !16248)
!16253 = !DILocation(line: 316, column: 750, scope: !16248)
!16254 = !DILocation(line: 316, column: 770, scope: !16248)
!16255 = !DILocation(line: 316, column: 515, scope: !16256)
!16256 = !DILexicalBlockFile(scope: !16129, file: !624, discriminator: 10)
!16257 = !DILocation(line: 316, column: 490, scope: !16256)
!16258 = distinct !{!16258, !16259}
!16259 = !DILocation(line: 316, column: 490, scope: !16121)
!16260 = !DILocation(line: 316, column: 772, scope: !16261)
!16261 = !DILexicalBlockFile(scope: !16121, file: !624, discriminator: 11)
!16262 = distinct !DISubprogram(name: "blend_multiply_16bit", scope: !624, file: !624, line: 289, type: !1531, isLocal: true, isDefinition: true, scopeLine: 289, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!16263 = !DILocalVariable(name: "_top", arg: 1, scope: !16262, file: !624, line: 289, type: !900)
!16264 = !DILocation(line: 289, column: 49, scope: !16262)
!16265 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !16262, file: !624, line: 289, type: !902)
!16266 = !DILocation(line: 289, column: 65, scope: !16262)
!16267 = !DILocalVariable(name: "_bottom", arg: 3, scope: !16262, file: !624, line: 289, type: !900)
!16268 = !DILocation(line: 289, column: 94, scope: !16262)
!16269 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !16262, file: !624, line: 289, type: !902)
!16270 = !DILocation(line: 289, column: 113, scope: !16262)
!16271 = !DILocalVariable(name: "_dst", arg: 5, scope: !16262, file: !624, line: 289, type: !329)
!16272 = !DILocation(line: 289, column: 139, scope: !16262)
!16273 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !16262, file: !624, line: 289, type: !902)
!16274 = !DILocation(line: 289, column: 155, scope: !16262)
!16275 = !DILocalVariable(name: "width", arg: 7, scope: !16262, file: !624, line: 289, type: !902)
!16276 = !DILocation(line: 289, column: 179, scope: !16262)
!16277 = !DILocalVariable(name: "height", arg: 8, scope: !16262, file: !624, line: 289, type: !902)
!16278 = !DILocation(line: 289, column: 196, scope: !16262)
!16279 = !DILocalVariable(name: "param", arg: 9, scope: !16262, file: !624, line: 289, type: !884)
!16280 = !DILocation(line: 289, column: 218, scope: !16262)
!16281 = !DILocalVariable(name: "values", arg: 10, scope: !16262, file: !624, line: 289, type: !544)
!16282 = !DILocation(line: 289, column: 233, scope: !16262)
!16283 = !DILocalVariable(name: "starty", arg: 11, scope: !16262, file: !624, line: 289, type: !238)
!16284 = !DILocation(line: 289, column: 245, scope: !16262)
!16285 = !DILocalVariable(name: "top", scope: !16262, file: !624, line: 289, type: !839)
!16286 = !DILocation(line: 289, column: 271, scope: !16262)
!16287 = !DILocation(line: 289, column: 294, scope: !16262)
!16288 = !DILocation(line: 289, column: 277, scope: !16262)
!16289 = !DILocalVariable(name: "bottom", scope: !16262, file: !624, line: 289, type: !839)
!16290 = !DILocation(line: 289, column: 316, scope: !16262)
!16291 = !DILocation(line: 289, column: 342, scope: !16262)
!16292 = !DILocation(line: 289, column: 325, scope: !16262)
!16293 = !DILocalVariable(name: "dst", scope: !16262, file: !624, line: 289, type: !843)
!16294 = !DILocation(line: 289, column: 361, scope: !16262)
!16295 = !DILocation(line: 289, column: 378, scope: !16262)
!16296 = !DILocation(line: 289, column: 367, scope: !16262)
!16297 = !DILocalVariable(name: "opacity", scope: !16262, file: !624, line: 289, type: !248)
!16298 = !DILocation(line: 289, column: 391, scope: !16262)
!16299 = !DILocation(line: 289, column: 401, scope: !16262)
!16300 = !DILocation(line: 289, column: 408, scope: !16262)
!16301 = !DILocalVariable(name: "i", scope: !16262, file: !624, line: 289, type: !238)
!16302 = !DILocation(line: 289, column: 421, scope: !16262)
!16303 = !DILocalVariable(name: "j", scope: !16262, file: !624, line: 289, type: !238)
!16304 = !DILocation(line: 289, column: 424, scope: !16262)
!16305 = !DILocation(line: 289, column: 440, scope: !16262)
!16306 = !DILocation(line: 289, column: 459, scope: !16262)
!16307 = !DILocation(line: 289, column: 481, scope: !16262)
!16308 = !DILocation(line: 289, column: 494, scope: !16309)
!16309 = distinct !DILexicalBlock(scope: !16262, file: !624, line: 289, column: 487)
!16310 = !DILocation(line: 289, column: 492, scope: !16309)
!16311 = !DILocation(line: 289, column: 499, scope: !16312)
!16312 = !DILexicalBlockFile(scope: !16313, file: !624, discriminator: 1)
!16313 = distinct !DILexicalBlock(scope: !16309, file: !624, line: 289, column: 487)
!16314 = !DILocation(line: 289, column: 503, scope: !16312)
!16315 = !DILocation(line: 289, column: 501, scope: !16312)
!16316 = !DILocation(line: 289, column: 487, scope: !16312)
!16317 = !DILocation(line: 289, column: 525, scope: !16318)
!16318 = !DILexicalBlockFile(scope: !16319, file: !624, discriminator: 2)
!16319 = distinct !DILexicalBlock(scope: !16320, file: !624, line: 289, column: 518)
!16320 = distinct !DILexicalBlock(scope: !16313, file: !624, line: 289, column: 516)
!16321 = !DILocation(line: 289, column: 523, scope: !16318)
!16322 = !DILocation(line: 289, column: 530, scope: !16323)
!16323 = !DILexicalBlockFile(scope: !16324, file: !624, discriminator: 3)
!16324 = distinct !DILexicalBlock(scope: !16319, file: !624, line: 289, column: 518)
!16325 = !DILocation(line: 289, column: 534, scope: !16323)
!16326 = !DILocation(line: 289, column: 532, scope: !16323)
!16327 = !DILocation(line: 289, column: 518, scope: !16323)
!16328 = !DILocation(line: 289, column: 561, scope: !16329)
!16329 = !DILexicalBlockFile(scope: !16330, file: !624, discriminator: 4)
!16330 = distinct !DILexicalBlock(scope: !16324, file: !624, line: 289, column: 546)
!16331 = !DILocation(line: 289, column: 557, scope: !16329)
!16332 = !DILocation(line: 289, column: 582, scope: !16329)
!16333 = !DILocation(line: 289, column: 578, scope: !16329)
!16334 = !DILocation(line: 289, column: 577, scope: !16329)
!16335 = !DILocation(line: 289, column: 596, scope: !16329)
!16336 = !DILocation(line: 289, column: 589, scope: !16329)
!16337 = !DILocation(line: 289, column: 588, scope: !16329)
!16338 = !DILocation(line: 289, column: 586, scope: !16329)
!16339 = !DILocation(line: 289, column: 601, scope: !16329)
!16340 = !DILocation(line: 289, column: 573, scope: !16329)
!16341 = !DILocation(line: 289, column: 618, scope: !16329)
!16342 = !DILocation(line: 289, column: 614, scope: !16329)
!16343 = !DILocation(line: 289, column: 612, scope: !16329)
!16344 = !DILocation(line: 289, column: 566, scope: !16329)
!16345 = !DILocation(line: 289, column: 624, scope: !16329)
!16346 = !DILocation(line: 289, column: 622, scope: !16329)
!16347 = !DILocation(line: 289, column: 564, scope: !16329)
!16348 = !DILocation(line: 289, column: 552, scope: !16329)
!16349 = !DILocation(line: 289, column: 548, scope: !16329)
!16350 = !DILocation(line: 289, column: 555, scope: !16329)
!16351 = !DILocation(line: 289, column: 633, scope: !16329)
!16352 = !DILocation(line: 289, column: 542, scope: !16353)
!16353 = !DILexicalBlockFile(scope: !16324, file: !624, discriminator: 5)
!16354 = !DILocation(line: 289, column: 518, scope: !16353)
!16355 = distinct !{!16355, !16356}
!16356 = !DILocation(line: 289, column: 518, scope: !16320)
!16357 = !DILocation(line: 289, column: 642, scope: !16358)
!16358 = !DILexicalBlockFile(scope: !16320, file: !624, discriminator: 6)
!16359 = !DILocation(line: 289, column: 639, scope: !16358)
!16360 = !DILocation(line: 289, column: 663, scope: !16358)
!16361 = !DILocation(line: 289, column: 660, scope: !16358)
!16362 = !DILocation(line: 289, column: 687, scope: !16358)
!16363 = !DILocation(line: 289, column: 684, scope: !16358)
!16364 = !DILocation(line: 289, column: 704, scope: !16358)
!16365 = !DILocation(line: 289, column: 512, scope: !16366)
!16366 = !DILexicalBlockFile(scope: !16313, file: !624, discriminator: 7)
!16367 = !DILocation(line: 289, column: 487, scope: !16366)
!16368 = distinct !{!16368, !16369}
!16369 = !DILocation(line: 289, column: 487, scope: !16262)
!16370 = !DILocation(line: 289, column: 706, scope: !16371)
!16371 = !DILexicalBlockFile(scope: !16262, file: !624, discriminator: 8)
!16372 = distinct !DISubprogram(name: "blend_multiply128_16bit", scope: !624, file: !624, line: 290, type: !1531, isLocal: true, isDefinition: true, scopeLine: 290, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!16373 = !DILocation(line: 181, column: 99, scope: !13968, inlinedAt: !16374)
!16374 = distinct !DILocation(line: 290, column: 571, scope: !16375)
!16375 = !DILexicalBlockFile(scope: !16376, file: !624, discriminator: 4)
!16376 = distinct !DILexicalBlock(scope: !16377, file: !624, line: 290, column: 549)
!16377 = distinct !DILexicalBlock(scope: !16378, file: !624, line: 290, column: 521)
!16378 = distinct !DILexicalBlock(scope: !16379, file: !624, line: 290, column: 521)
!16379 = distinct !DILexicalBlock(scope: !16380, file: !624, line: 290, column: 519)
!16380 = distinct !DILexicalBlock(scope: !16381, file: !624, line: 290, column: 490)
!16381 = distinct !DILexicalBlock(scope: !16372, file: !624, line: 290, column: 490)
!16382 = !DILocalVariable(name: "_top", arg: 1, scope: !16372, file: !624, line: 290, type: !900)
!16383 = !DILocation(line: 290, column: 52, scope: !16372)
!16384 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !16372, file: !624, line: 290, type: !902)
!16385 = !DILocation(line: 290, column: 68, scope: !16372)
!16386 = !DILocalVariable(name: "_bottom", arg: 3, scope: !16372, file: !624, line: 290, type: !900)
!16387 = !DILocation(line: 290, column: 97, scope: !16372)
!16388 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !16372, file: !624, line: 290, type: !902)
!16389 = !DILocation(line: 290, column: 116, scope: !16372)
!16390 = !DILocalVariable(name: "_dst", arg: 5, scope: !16372, file: !624, line: 290, type: !329)
!16391 = !DILocation(line: 290, column: 142, scope: !16372)
!16392 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !16372, file: !624, line: 290, type: !902)
!16393 = !DILocation(line: 290, column: 158, scope: !16372)
!16394 = !DILocalVariable(name: "width", arg: 7, scope: !16372, file: !624, line: 290, type: !902)
!16395 = !DILocation(line: 290, column: 182, scope: !16372)
!16396 = !DILocalVariable(name: "height", arg: 8, scope: !16372, file: !624, line: 290, type: !902)
!16397 = !DILocation(line: 290, column: 199, scope: !16372)
!16398 = !DILocalVariable(name: "param", arg: 9, scope: !16372, file: !624, line: 290, type: !884)
!16399 = !DILocation(line: 290, column: 221, scope: !16372)
!16400 = !DILocalVariable(name: "values", arg: 10, scope: !16372, file: !624, line: 290, type: !544)
!16401 = !DILocation(line: 290, column: 236, scope: !16372)
!16402 = !DILocalVariable(name: "starty", arg: 11, scope: !16372, file: !624, line: 290, type: !238)
!16403 = !DILocation(line: 290, column: 248, scope: !16372)
!16404 = !DILocalVariable(name: "top", scope: !16372, file: !624, line: 290, type: !839)
!16405 = !DILocation(line: 290, column: 274, scope: !16372)
!16406 = !DILocation(line: 290, column: 297, scope: !16372)
!16407 = !DILocation(line: 290, column: 280, scope: !16372)
!16408 = !DILocalVariable(name: "bottom", scope: !16372, file: !624, line: 290, type: !839)
!16409 = !DILocation(line: 290, column: 319, scope: !16372)
!16410 = !DILocation(line: 290, column: 345, scope: !16372)
!16411 = !DILocation(line: 290, column: 328, scope: !16372)
!16412 = !DILocalVariable(name: "dst", scope: !16372, file: !624, line: 290, type: !843)
!16413 = !DILocation(line: 290, column: 364, scope: !16372)
!16414 = !DILocation(line: 290, column: 381, scope: !16372)
!16415 = !DILocation(line: 290, column: 370, scope: !16372)
!16416 = !DILocalVariable(name: "opacity", scope: !16372, file: !624, line: 290, type: !248)
!16417 = !DILocation(line: 290, column: 394, scope: !16372)
!16418 = !DILocation(line: 290, column: 404, scope: !16372)
!16419 = !DILocation(line: 290, column: 411, scope: !16372)
!16420 = !DILocalVariable(name: "i", scope: !16372, file: !624, line: 290, type: !238)
!16421 = !DILocation(line: 290, column: 424, scope: !16372)
!16422 = !DILocalVariable(name: "j", scope: !16372, file: !624, line: 290, type: !238)
!16423 = !DILocation(line: 290, column: 427, scope: !16372)
!16424 = !DILocation(line: 290, column: 443, scope: !16372)
!16425 = !DILocation(line: 290, column: 462, scope: !16372)
!16426 = !DILocation(line: 290, column: 484, scope: !16372)
!16427 = !DILocation(line: 290, column: 497, scope: !16381)
!16428 = !DILocation(line: 290, column: 495, scope: !16381)
!16429 = !DILocation(line: 290, column: 502, scope: !16430)
!16430 = !DILexicalBlockFile(scope: !16380, file: !624, discriminator: 1)
!16431 = !DILocation(line: 290, column: 506, scope: !16430)
!16432 = !DILocation(line: 290, column: 504, scope: !16430)
!16433 = !DILocation(line: 290, column: 490, scope: !16430)
!16434 = !DILocation(line: 290, column: 528, scope: !16435)
!16435 = !DILexicalBlockFile(scope: !16378, file: !624, discriminator: 2)
!16436 = !DILocation(line: 290, column: 526, scope: !16435)
!16437 = !DILocation(line: 290, column: 533, scope: !16438)
!16438 = !DILexicalBlockFile(scope: !16377, file: !624, discriminator: 3)
!16439 = !DILocation(line: 290, column: 537, scope: !16438)
!16440 = !DILocation(line: 290, column: 535, scope: !16438)
!16441 = !DILocation(line: 290, column: 521, scope: !16438)
!16442 = !DILocation(line: 290, column: 564, scope: !16375)
!16443 = !DILocation(line: 290, column: 560, scope: !16375)
!16444 = !DILocation(line: 290, column: 593, scope: !16375)
!16445 = !DILocation(line: 290, column: 589, scope: !16375)
!16446 = !DILocation(line: 290, column: 596, scope: !16375)
!16447 = !DILocation(line: 290, column: 614, scope: !16375)
!16448 = !DILocation(line: 290, column: 607, scope: !16375)
!16449 = !DILocation(line: 290, column: 605, scope: !16375)
!16450 = !DILocation(line: 290, column: 588, scope: !16375)
!16451 = !DILocation(line: 290, column: 617, scope: !16375)
!16452 = !DILocation(line: 290, column: 625, scope: !16375)
!16453 = !DILocation(line: 290, column: 571, scope: !16375)
!16454 = !DILocation(line: 183, column: 9, scope: !14050, inlinedAt: !16374)
!16455 = !DILocation(line: 183, column: 10, scope: !14050, inlinedAt: !16374)
!16456 = !DILocation(line: 183, column: 9, scope: !13968, inlinedAt: !16374)
!16457 = !DILocation(line: 183, column: 31, scope: !14054, inlinedAt: !16374)
!16458 = !DILocation(line: 183, column: 30, scope: !14054, inlinedAt: !16374)
!16459 = !DILocation(line: 183, column: 33, scope: !14054, inlinedAt: !16374)
!16460 = !DILocation(line: 183, column: 29, scope: !14054, inlinedAt: !16374)
!16461 = !DILocation(line: 183, column: 22, scope: !14054, inlinedAt: !16374)
!16462 = !DILocation(line: 184, column: 17, scope: !14050, inlinedAt: !16374)
!16463 = !DILocation(line: 184, column: 10, scope: !14050, inlinedAt: !16374)
!16464 = !DILocation(line: 185, column: 1, scope: !13968, inlinedAt: !16374)
!16465 = !DILocation(line: 290, column: 570, scope: !16375)
!16466 = !DILocation(line: 290, column: 641, scope: !16375)
!16467 = !DILocation(line: 290, column: 637, scope: !16375)
!16468 = !DILocation(line: 290, column: 635, scope: !16375)
!16469 = !DILocation(line: 290, column: 569, scope: !16375)
!16470 = !DILocation(line: 290, column: 647, scope: !16375)
!16471 = !DILocation(line: 290, column: 645, scope: !16375)
!16472 = !DILocation(line: 290, column: 567, scope: !16375)
!16473 = !DILocation(line: 290, column: 555, scope: !16375)
!16474 = !DILocation(line: 290, column: 551, scope: !16375)
!16475 = !DILocation(line: 290, column: 558, scope: !16375)
!16476 = !DILocation(line: 290, column: 656, scope: !16375)
!16477 = !DILocation(line: 290, column: 545, scope: !16478)
!16478 = !DILexicalBlockFile(scope: !16377, file: !624, discriminator: 5)
!16479 = !DILocation(line: 290, column: 521, scope: !16478)
!16480 = distinct !{!16480, !16481}
!16481 = !DILocation(line: 290, column: 521, scope: !16379)
!16482 = !DILocation(line: 290, column: 665, scope: !16483)
!16483 = !DILexicalBlockFile(scope: !16379, file: !624, discriminator: 6)
!16484 = !DILocation(line: 290, column: 662, scope: !16483)
!16485 = !DILocation(line: 290, column: 686, scope: !16483)
!16486 = !DILocation(line: 290, column: 683, scope: !16483)
!16487 = !DILocation(line: 290, column: 710, scope: !16483)
!16488 = !DILocation(line: 290, column: 707, scope: !16483)
!16489 = !DILocation(line: 290, column: 727, scope: !16483)
!16490 = !DILocation(line: 290, column: 515, scope: !16491)
!16491 = !DILexicalBlockFile(scope: !16380, file: !624, discriminator: 7)
!16492 = !DILocation(line: 290, column: 490, scope: !16491)
!16493 = distinct !{!16493, !16494}
!16494 = !DILocation(line: 290, column: 490, scope: !16372)
!16495 = !DILocation(line: 290, column: 729, scope: !16496)
!16496 = !DILexicalBlockFile(scope: !16372, file: !624, discriminator: 8)
!16497 = distinct !DISubprogram(name: "blend_negation_16bit", scope: !624, file: !624, line: 291, type: !1531, isLocal: true, isDefinition: true, scopeLine: 291, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!16498 = !DILocalVariable(name: "_top", arg: 1, scope: !16497, file: !624, line: 291, type: !900)
!16499 = !DILocation(line: 291, column: 49, scope: !16497)
!16500 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !16497, file: !624, line: 291, type: !902)
!16501 = !DILocation(line: 291, column: 65, scope: !16497)
!16502 = !DILocalVariable(name: "_bottom", arg: 3, scope: !16497, file: !624, line: 291, type: !900)
!16503 = !DILocation(line: 291, column: 94, scope: !16497)
!16504 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !16497, file: !624, line: 291, type: !902)
!16505 = !DILocation(line: 291, column: 113, scope: !16497)
!16506 = !DILocalVariable(name: "_dst", arg: 5, scope: !16497, file: !624, line: 291, type: !329)
!16507 = !DILocation(line: 291, column: 139, scope: !16497)
!16508 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !16497, file: !624, line: 291, type: !902)
!16509 = !DILocation(line: 291, column: 155, scope: !16497)
!16510 = !DILocalVariable(name: "width", arg: 7, scope: !16497, file: !624, line: 291, type: !902)
!16511 = !DILocation(line: 291, column: 179, scope: !16497)
!16512 = !DILocalVariable(name: "height", arg: 8, scope: !16497, file: !624, line: 291, type: !902)
!16513 = !DILocation(line: 291, column: 196, scope: !16497)
!16514 = !DILocalVariable(name: "param", arg: 9, scope: !16497, file: !624, line: 291, type: !884)
!16515 = !DILocation(line: 291, column: 218, scope: !16497)
!16516 = !DILocalVariable(name: "values", arg: 10, scope: !16497, file: !624, line: 291, type: !544)
!16517 = !DILocation(line: 291, column: 233, scope: !16497)
!16518 = !DILocalVariable(name: "starty", arg: 11, scope: !16497, file: !624, line: 291, type: !238)
!16519 = !DILocation(line: 291, column: 245, scope: !16497)
!16520 = !DILocalVariable(name: "top", scope: !16497, file: !624, line: 291, type: !839)
!16521 = !DILocation(line: 291, column: 271, scope: !16497)
!16522 = !DILocation(line: 291, column: 294, scope: !16497)
!16523 = !DILocation(line: 291, column: 277, scope: !16497)
!16524 = !DILocalVariable(name: "bottom", scope: !16497, file: !624, line: 291, type: !839)
!16525 = !DILocation(line: 291, column: 316, scope: !16497)
!16526 = !DILocation(line: 291, column: 342, scope: !16497)
!16527 = !DILocation(line: 291, column: 325, scope: !16497)
!16528 = !DILocalVariable(name: "dst", scope: !16497, file: !624, line: 291, type: !843)
!16529 = !DILocation(line: 291, column: 361, scope: !16497)
!16530 = !DILocation(line: 291, column: 378, scope: !16497)
!16531 = !DILocation(line: 291, column: 367, scope: !16497)
!16532 = !DILocalVariable(name: "opacity", scope: !16497, file: !624, line: 291, type: !248)
!16533 = !DILocation(line: 291, column: 391, scope: !16497)
!16534 = !DILocation(line: 291, column: 401, scope: !16497)
!16535 = !DILocation(line: 291, column: 408, scope: !16497)
!16536 = !DILocalVariable(name: "i", scope: !16497, file: !624, line: 291, type: !238)
!16537 = !DILocation(line: 291, column: 421, scope: !16497)
!16538 = !DILocalVariable(name: "j", scope: !16497, file: !624, line: 291, type: !238)
!16539 = !DILocation(line: 291, column: 424, scope: !16497)
!16540 = !DILocation(line: 291, column: 440, scope: !16497)
!16541 = !DILocation(line: 291, column: 459, scope: !16497)
!16542 = !DILocation(line: 291, column: 481, scope: !16497)
!16543 = !DILocation(line: 291, column: 494, scope: !16544)
!16544 = distinct !DILexicalBlock(scope: !16497, file: !624, line: 291, column: 487)
!16545 = !DILocation(line: 291, column: 492, scope: !16544)
!16546 = !DILocation(line: 291, column: 499, scope: !16547)
!16547 = !DILexicalBlockFile(scope: !16548, file: !624, discriminator: 1)
!16548 = distinct !DILexicalBlock(scope: !16544, file: !624, line: 291, column: 487)
!16549 = !DILocation(line: 291, column: 503, scope: !16547)
!16550 = !DILocation(line: 291, column: 501, scope: !16547)
!16551 = !DILocation(line: 291, column: 487, scope: !16547)
!16552 = !DILocation(line: 291, column: 525, scope: !16553)
!16553 = !DILexicalBlockFile(scope: !16554, file: !624, discriminator: 2)
!16554 = distinct !DILexicalBlock(scope: !16555, file: !624, line: 291, column: 518)
!16555 = distinct !DILexicalBlock(scope: !16548, file: !624, line: 291, column: 516)
!16556 = !DILocation(line: 291, column: 523, scope: !16553)
!16557 = !DILocation(line: 291, column: 530, scope: !16558)
!16558 = !DILexicalBlockFile(scope: !16559, file: !624, discriminator: 3)
!16559 = distinct !DILexicalBlock(scope: !16554, file: !624, line: 291, column: 518)
!16560 = !DILocation(line: 291, column: 534, scope: !16558)
!16561 = !DILocation(line: 291, column: 532, scope: !16558)
!16562 = !DILocation(line: 291, column: 518, scope: !16558)
!16563 = !DILocation(line: 291, column: 561, scope: !16564)
!16564 = !DILexicalBlockFile(scope: !16565, file: !624, discriminator: 4)
!16565 = distinct !DILexicalBlock(scope: !16559, file: !624, line: 291, column: 546)
!16566 = !DILocation(line: 291, column: 557, scope: !16564)
!16567 = !DILocation(line: 291, column: 590, scope: !16564)
!16568 = !DILocation(line: 291, column: 586, scope: !16564)
!16569 = !DILocation(line: 291, column: 584, scope: !16564)
!16570 = !DILocation(line: 291, column: 602, scope: !16564)
!16571 = !DILocation(line: 291, column: 595, scope: !16564)
!16572 = !DILocation(line: 291, column: 593, scope: !16564)
!16573 = !DILocation(line: 291, column: 606, scope: !16564)
!16574 = !DILocation(line: 291, column: 577, scope: !16564)
!16575 = !DILocation(line: 291, column: 626, scope: !16576)
!16576 = !DILexicalBlockFile(scope: !16565, file: !624, discriminator: 5)
!16577 = !DILocation(line: 291, column: 622, scope: !16576)
!16578 = !DILocation(line: 291, column: 620, scope: !16576)
!16579 = !DILocation(line: 291, column: 638, scope: !16576)
!16580 = !DILocation(line: 291, column: 631, scope: !16576)
!16581 = !DILocation(line: 291, column: 629, scope: !16576)
!16582 = !DILocation(line: 291, column: 577, scope: !16576)
!16583 = !DILocation(line: 291, column: 659, scope: !16584)
!16584 = !DILexicalBlockFile(scope: !16565, file: !624, discriminator: 6)
!16585 = !DILocation(line: 291, column: 655, scope: !16584)
!16586 = !DILocation(line: 291, column: 653, scope: !16584)
!16587 = !DILocation(line: 291, column: 671, scope: !16584)
!16588 = !DILocation(line: 291, column: 664, scope: !16584)
!16589 = !DILocation(line: 291, column: 662, scope: !16584)
!16590 = !DILocation(line: 291, column: 645, scope: !16584)
!16591 = !DILocation(line: 291, column: 577, scope: !16584)
!16592 = !DILocation(line: 291, column: 577, scope: !16593)
!16593 = !DILexicalBlockFile(scope: !16565, file: !624, discriminator: 7)
!16594 = !DILocation(line: 291, column: 574, scope: !16593)
!16595 = !DILocation(line: 291, column: 684, scope: !16593)
!16596 = !DILocation(line: 291, column: 680, scope: !16593)
!16597 = !DILocation(line: 291, column: 678, scope: !16593)
!16598 = !DILocation(line: 291, column: 566, scope: !16593)
!16599 = !DILocation(line: 291, column: 690, scope: !16593)
!16600 = !DILocation(line: 291, column: 688, scope: !16593)
!16601 = !DILocation(line: 291, column: 564, scope: !16593)
!16602 = !DILocation(line: 291, column: 557, scope: !16593)
!16603 = !DILocation(line: 291, column: 552, scope: !16593)
!16604 = !DILocation(line: 291, column: 548, scope: !16593)
!16605 = !DILocation(line: 291, column: 555, scope: !16593)
!16606 = !DILocation(line: 291, column: 699, scope: !16593)
!16607 = !DILocation(line: 291, column: 542, scope: !16608)
!16608 = !DILexicalBlockFile(scope: !16559, file: !624, discriminator: 8)
!16609 = !DILocation(line: 291, column: 518, scope: !16608)
!16610 = distinct !{!16610, !16611}
!16611 = !DILocation(line: 291, column: 518, scope: !16555)
!16612 = !DILocation(line: 291, column: 708, scope: !16613)
!16613 = !DILexicalBlockFile(scope: !16555, file: !624, discriminator: 9)
!16614 = !DILocation(line: 291, column: 705, scope: !16613)
!16615 = !DILocation(line: 291, column: 729, scope: !16613)
!16616 = !DILocation(line: 291, column: 726, scope: !16613)
!16617 = !DILocation(line: 291, column: 753, scope: !16613)
!16618 = !DILocation(line: 291, column: 750, scope: !16613)
!16619 = !DILocation(line: 291, column: 770, scope: !16613)
!16620 = !DILocation(line: 291, column: 512, scope: !16621)
!16621 = !DILexicalBlockFile(scope: !16548, file: !624, discriminator: 10)
!16622 = !DILocation(line: 291, column: 487, scope: !16621)
!16623 = distinct !{!16623, !16624}
!16624 = !DILocation(line: 291, column: 487, scope: !16497)
!16625 = !DILocation(line: 291, column: 772, scope: !16626)
!16626 = !DILexicalBlockFile(scope: !16497, file: !624, discriminator: 11)
!16627 = distinct !DISubprogram(name: "blend_or_16bit", scope: !624, file: !624, line: 313, type: !1531, isLocal: true, isDefinition: true, scopeLine: 313, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!16628 = !DILocalVariable(name: "_top", arg: 1, scope: !16627, file: !624, line: 313, type: !900)
!16629 = !DILocation(line: 313, column: 43, scope: !16627)
!16630 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !16627, file: !624, line: 313, type: !902)
!16631 = !DILocation(line: 313, column: 59, scope: !16627)
!16632 = !DILocalVariable(name: "_bottom", arg: 3, scope: !16627, file: !624, line: 313, type: !900)
!16633 = !DILocation(line: 313, column: 88, scope: !16627)
!16634 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !16627, file: !624, line: 313, type: !902)
!16635 = !DILocation(line: 313, column: 107, scope: !16627)
!16636 = !DILocalVariable(name: "_dst", arg: 5, scope: !16627, file: !624, line: 313, type: !329)
!16637 = !DILocation(line: 313, column: 133, scope: !16627)
!16638 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !16627, file: !624, line: 313, type: !902)
!16639 = !DILocation(line: 313, column: 149, scope: !16627)
!16640 = !DILocalVariable(name: "width", arg: 7, scope: !16627, file: !624, line: 313, type: !902)
!16641 = !DILocation(line: 313, column: 173, scope: !16627)
!16642 = !DILocalVariable(name: "height", arg: 8, scope: !16627, file: !624, line: 313, type: !902)
!16643 = !DILocation(line: 313, column: 190, scope: !16627)
!16644 = !DILocalVariable(name: "param", arg: 9, scope: !16627, file: !624, line: 313, type: !884)
!16645 = !DILocation(line: 313, column: 212, scope: !16627)
!16646 = !DILocalVariable(name: "values", arg: 10, scope: !16627, file: !624, line: 313, type: !544)
!16647 = !DILocation(line: 313, column: 227, scope: !16627)
!16648 = !DILocalVariable(name: "starty", arg: 11, scope: !16627, file: !624, line: 313, type: !238)
!16649 = !DILocation(line: 313, column: 239, scope: !16627)
!16650 = !DILocalVariable(name: "top", scope: !16627, file: !624, line: 313, type: !839)
!16651 = !DILocation(line: 313, column: 265, scope: !16627)
!16652 = !DILocation(line: 313, column: 288, scope: !16627)
!16653 = !DILocation(line: 313, column: 271, scope: !16627)
!16654 = !DILocalVariable(name: "bottom", scope: !16627, file: !624, line: 313, type: !839)
!16655 = !DILocation(line: 313, column: 310, scope: !16627)
!16656 = !DILocation(line: 313, column: 336, scope: !16627)
!16657 = !DILocation(line: 313, column: 319, scope: !16627)
!16658 = !DILocalVariable(name: "dst", scope: !16627, file: !624, line: 313, type: !843)
!16659 = !DILocation(line: 313, column: 355, scope: !16627)
!16660 = !DILocation(line: 313, column: 372, scope: !16627)
!16661 = !DILocation(line: 313, column: 361, scope: !16627)
!16662 = !DILocalVariable(name: "opacity", scope: !16627, file: !624, line: 313, type: !248)
!16663 = !DILocation(line: 313, column: 385, scope: !16627)
!16664 = !DILocation(line: 313, column: 395, scope: !16627)
!16665 = !DILocation(line: 313, column: 402, scope: !16627)
!16666 = !DILocalVariable(name: "i", scope: !16627, file: !624, line: 313, type: !238)
!16667 = !DILocation(line: 313, column: 415, scope: !16627)
!16668 = !DILocalVariable(name: "j", scope: !16627, file: !624, line: 313, type: !238)
!16669 = !DILocation(line: 313, column: 418, scope: !16627)
!16670 = !DILocation(line: 313, column: 434, scope: !16627)
!16671 = !DILocation(line: 313, column: 453, scope: !16627)
!16672 = !DILocation(line: 313, column: 475, scope: !16627)
!16673 = !DILocation(line: 313, column: 488, scope: !16674)
!16674 = distinct !DILexicalBlock(scope: !16627, file: !624, line: 313, column: 481)
!16675 = !DILocation(line: 313, column: 486, scope: !16674)
!16676 = !DILocation(line: 313, column: 493, scope: !16677)
!16677 = !DILexicalBlockFile(scope: !16678, file: !624, discriminator: 1)
!16678 = distinct !DILexicalBlock(scope: !16674, file: !624, line: 313, column: 481)
!16679 = !DILocation(line: 313, column: 497, scope: !16677)
!16680 = !DILocation(line: 313, column: 495, scope: !16677)
!16681 = !DILocation(line: 313, column: 481, scope: !16677)
!16682 = !DILocation(line: 313, column: 519, scope: !16683)
!16683 = !DILexicalBlockFile(scope: !16684, file: !624, discriminator: 2)
!16684 = distinct !DILexicalBlock(scope: !16685, file: !624, line: 313, column: 512)
!16685 = distinct !DILexicalBlock(scope: !16678, file: !624, line: 313, column: 510)
!16686 = !DILocation(line: 313, column: 517, scope: !16683)
!16687 = !DILocation(line: 313, column: 524, scope: !16688)
!16688 = !DILexicalBlockFile(scope: !16689, file: !624, discriminator: 3)
!16689 = distinct !DILexicalBlock(scope: !16684, file: !624, line: 313, column: 512)
!16690 = !DILocation(line: 313, column: 528, scope: !16688)
!16691 = !DILocation(line: 313, column: 526, scope: !16688)
!16692 = !DILocation(line: 313, column: 512, scope: !16688)
!16693 = !DILocation(line: 313, column: 555, scope: !16694)
!16694 = !DILexicalBlockFile(scope: !16695, file: !624, discriminator: 4)
!16695 = distinct !DILexicalBlock(scope: !16689, file: !624, line: 313, column: 540)
!16696 = !DILocation(line: 313, column: 551, scope: !16694)
!16697 = !DILocation(line: 313, column: 566, scope: !16694)
!16698 = !DILocation(line: 313, column: 562, scope: !16694)
!16699 = !DILocation(line: 313, column: 578, scope: !16694)
!16700 = !DILocation(line: 313, column: 571, scope: !16694)
!16701 = !DILocation(line: 313, column: 569, scope: !16694)
!16702 = !DILocation(line: 313, column: 588, scope: !16694)
!16703 = !DILocation(line: 313, column: 584, scope: !16694)
!16704 = !DILocation(line: 313, column: 582, scope: !16694)
!16705 = !DILocation(line: 313, column: 560, scope: !16694)
!16706 = !DILocation(line: 313, column: 594, scope: !16694)
!16707 = !DILocation(line: 313, column: 592, scope: !16694)
!16708 = !DILocation(line: 313, column: 558, scope: !16694)
!16709 = !DILocation(line: 313, column: 546, scope: !16694)
!16710 = !DILocation(line: 313, column: 542, scope: !16694)
!16711 = !DILocation(line: 313, column: 549, scope: !16694)
!16712 = !DILocation(line: 313, column: 603, scope: !16694)
!16713 = !DILocation(line: 313, column: 536, scope: !16714)
!16714 = !DILexicalBlockFile(scope: !16689, file: !624, discriminator: 5)
!16715 = !DILocation(line: 313, column: 512, scope: !16714)
!16716 = distinct !{!16716, !16717}
!16717 = !DILocation(line: 313, column: 512, scope: !16685)
!16718 = !DILocation(line: 313, column: 612, scope: !16719)
!16719 = !DILexicalBlockFile(scope: !16685, file: !624, discriminator: 6)
!16720 = !DILocation(line: 313, column: 609, scope: !16719)
!16721 = !DILocation(line: 313, column: 633, scope: !16719)
!16722 = !DILocation(line: 313, column: 630, scope: !16719)
!16723 = !DILocation(line: 313, column: 657, scope: !16719)
!16724 = !DILocation(line: 313, column: 654, scope: !16719)
!16725 = !DILocation(line: 313, column: 674, scope: !16719)
!16726 = !DILocation(line: 313, column: 506, scope: !16727)
!16727 = !DILexicalBlockFile(scope: !16678, file: !624, discriminator: 7)
!16728 = !DILocation(line: 313, column: 481, scope: !16727)
!16729 = distinct !{!16729, !16730}
!16730 = !DILocation(line: 313, column: 481, scope: !16627)
!16731 = !DILocation(line: 313, column: 676, scope: !16732)
!16732 = !DILexicalBlockFile(scope: !16627, file: !624, discriminator: 8)
!16733 = distinct !DISubprogram(name: "blend_overlay_16bit", scope: !624, file: !624, line: 296, type: !1531, isLocal: true, isDefinition: true, scopeLine: 296, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!16734 = !DILocalVariable(name: "_top", arg: 1, scope: !16733, file: !624, line: 296, type: !900)
!16735 = !DILocation(line: 296, column: 48, scope: !16733)
!16736 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !16733, file: !624, line: 296, type: !902)
!16737 = !DILocation(line: 296, column: 64, scope: !16733)
!16738 = !DILocalVariable(name: "_bottom", arg: 3, scope: !16733, file: !624, line: 296, type: !900)
!16739 = !DILocation(line: 296, column: 93, scope: !16733)
!16740 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !16733, file: !624, line: 296, type: !902)
!16741 = !DILocation(line: 296, column: 112, scope: !16733)
!16742 = !DILocalVariable(name: "_dst", arg: 5, scope: !16733, file: !624, line: 296, type: !329)
!16743 = !DILocation(line: 296, column: 138, scope: !16733)
!16744 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !16733, file: !624, line: 296, type: !902)
!16745 = !DILocation(line: 296, column: 154, scope: !16733)
!16746 = !DILocalVariable(name: "width", arg: 7, scope: !16733, file: !624, line: 296, type: !902)
!16747 = !DILocation(line: 296, column: 178, scope: !16733)
!16748 = !DILocalVariable(name: "height", arg: 8, scope: !16733, file: !624, line: 296, type: !902)
!16749 = !DILocation(line: 296, column: 195, scope: !16733)
!16750 = !DILocalVariable(name: "param", arg: 9, scope: !16733, file: !624, line: 296, type: !884)
!16751 = !DILocation(line: 296, column: 217, scope: !16733)
!16752 = !DILocalVariable(name: "values", arg: 10, scope: !16733, file: !624, line: 296, type: !544)
!16753 = !DILocation(line: 296, column: 232, scope: !16733)
!16754 = !DILocalVariable(name: "starty", arg: 11, scope: !16733, file: !624, line: 296, type: !238)
!16755 = !DILocation(line: 296, column: 244, scope: !16733)
!16756 = !DILocalVariable(name: "top", scope: !16733, file: !624, line: 296, type: !839)
!16757 = !DILocation(line: 296, column: 270, scope: !16733)
!16758 = !DILocation(line: 296, column: 293, scope: !16733)
!16759 = !DILocation(line: 296, column: 276, scope: !16733)
!16760 = !DILocalVariable(name: "bottom", scope: !16733, file: !624, line: 296, type: !839)
!16761 = !DILocation(line: 296, column: 315, scope: !16733)
!16762 = !DILocation(line: 296, column: 341, scope: !16733)
!16763 = !DILocation(line: 296, column: 324, scope: !16733)
!16764 = !DILocalVariable(name: "dst", scope: !16733, file: !624, line: 296, type: !843)
!16765 = !DILocation(line: 296, column: 360, scope: !16733)
!16766 = !DILocation(line: 296, column: 377, scope: !16733)
!16767 = !DILocation(line: 296, column: 366, scope: !16733)
!16768 = !DILocalVariable(name: "opacity", scope: !16733, file: !624, line: 296, type: !248)
!16769 = !DILocation(line: 296, column: 390, scope: !16733)
!16770 = !DILocation(line: 296, column: 400, scope: !16733)
!16771 = !DILocation(line: 296, column: 407, scope: !16733)
!16772 = !DILocalVariable(name: "i", scope: !16733, file: !624, line: 296, type: !238)
!16773 = !DILocation(line: 296, column: 420, scope: !16733)
!16774 = !DILocalVariable(name: "j", scope: !16733, file: !624, line: 296, type: !238)
!16775 = !DILocation(line: 296, column: 423, scope: !16733)
!16776 = !DILocation(line: 296, column: 439, scope: !16733)
!16777 = !DILocation(line: 296, column: 458, scope: !16733)
!16778 = !DILocation(line: 296, column: 480, scope: !16733)
!16779 = !DILocation(line: 296, column: 493, scope: !16780)
!16780 = distinct !DILexicalBlock(scope: !16733, file: !624, line: 296, column: 486)
!16781 = !DILocation(line: 296, column: 491, scope: !16780)
!16782 = !DILocation(line: 296, column: 498, scope: !16783)
!16783 = !DILexicalBlockFile(scope: !16784, file: !624, discriminator: 1)
!16784 = distinct !DILexicalBlock(scope: !16780, file: !624, line: 296, column: 486)
!16785 = !DILocation(line: 296, column: 502, scope: !16783)
!16786 = !DILocation(line: 296, column: 500, scope: !16783)
!16787 = !DILocation(line: 296, column: 486, scope: !16783)
!16788 = !DILocation(line: 296, column: 524, scope: !16789)
!16789 = !DILexicalBlockFile(scope: !16790, file: !624, discriminator: 2)
!16790 = distinct !DILexicalBlock(scope: !16791, file: !624, line: 296, column: 517)
!16791 = distinct !DILexicalBlock(scope: !16784, file: !624, line: 296, column: 515)
!16792 = !DILocation(line: 296, column: 522, scope: !16789)
!16793 = !DILocation(line: 296, column: 529, scope: !16794)
!16794 = !DILexicalBlockFile(scope: !16795, file: !624, discriminator: 3)
!16795 = distinct !DILexicalBlock(scope: !16790, file: !624, line: 296, column: 517)
!16796 = !DILocation(line: 296, column: 533, scope: !16794)
!16797 = !DILocation(line: 296, column: 531, scope: !16794)
!16798 = !DILocation(line: 296, column: 517, scope: !16794)
!16799 = !DILocation(line: 296, column: 560, scope: !16800)
!16800 = !DILexicalBlockFile(scope: !16801, file: !624, discriminator: 4)
!16801 = distinct !DILexicalBlock(scope: !16795, file: !624, line: 296, column: 545)
!16802 = !DILocation(line: 296, column: 556, scope: !16800)
!16803 = !DILocation(line: 296, column: 572, scope: !16800)
!16804 = !DILocation(line: 296, column: 568, scope: !16800)
!16805 = !DILocation(line: 296, column: 575, scope: !16800)
!16806 = !DILocation(line: 296, column: 567, scope: !16800)
!16807 = !DILocation(line: 296, column: 600, scope: !16808)
!16808 = !DILexicalBlockFile(scope: !16801, file: !624, discriminator: 5)
!16809 = !DILocation(line: 296, column: 596, scope: !16808)
!16810 = !DILocation(line: 296, column: 595, scope: !16808)
!16811 = !DILocation(line: 296, column: 614, scope: !16808)
!16812 = !DILocation(line: 296, column: 607, scope: !16808)
!16813 = !DILocation(line: 296, column: 606, scope: !16808)
!16814 = !DILocation(line: 296, column: 604, scope: !16808)
!16815 = !DILocation(line: 296, column: 619, scope: !16808)
!16816 = !DILocation(line: 296, column: 591, scope: !16808)
!16817 = !DILocation(line: 296, column: 567, scope: !16808)
!16818 = !DILocation(line: 296, column: 661, scope: !16819)
!16819 = !DILexicalBlockFile(scope: !16801, file: !624, discriminator: 6)
!16820 = !DILocation(line: 296, column: 657, scope: !16819)
!16821 = !DILocation(line: 296, column: 656, scope: !16819)
!16822 = !DILocation(line: 296, column: 654, scope: !16819)
!16823 = !DILocation(line: 296, column: 685, scope: !16819)
!16824 = !DILocation(line: 296, column: 678, scope: !16819)
!16825 = !DILocation(line: 296, column: 677, scope: !16819)
!16826 = !DILocation(line: 296, column: 675, scope: !16819)
!16827 = !DILocation(line: 296, column: 666, scope: !16819)
!16828 = !DILocation(line: 296, column: 690, scope: !16819)
!16829 = !DILocation(line: 296, column: 644, scope: !16819)
!16830 = !DILocation(line: 296, column: 638, scope: !16819)
!16831 = !DILocation(line: 296, column: 567, scope: !16819)
!16832 = !DILocation(line: 296, column: 567, scope: !16833)
!16833 = !DILexicalBlockFile(scope: !16801, file: !624, discriminator: 7)
!16834 = !DILocation(line: 296, column: 707, scope: !16833)
!16835 = !DILocation(line: 296, column: 703, scope: !16833)
!16836 = !DILocation(line: 296, column: 701, scope: !16833)
!16837 = !DILocation(line: 296, column: 565, scope: !16833)
!16838 = !DILocation(line: 296, column: 713, scope: !16833)
!16839 = !DILocation(line: 296, column: 711, scope: !16833)
!16840 = !DILocation(line: 296, column: 563, scope: !16833)
!16841 = !DILocation(line: 296, column: 556, scope: !16833)
!16842 = !DILocation(line: 296, column: 551, scope: !16833)
!16843 = !DILocation(line: 296, column: 547, scope: !16833)
!16844 = !DILocation(line: 296, column: 554, scope: !16833)
!16845 = !DILocation(line: 296, column: 722, scope: !16833)
!16846 = !DILocation(line: 296, column: 541, scope: !16847)
!16847 = !DILexicalBlockFile(scope: !16795, file: !624, discriminator: 8)
!16848 = !DILocation(line: 296, column: 517, scope: !16847)
!16849 = distinct !{!16849, !16850}
!16850 = !DILocation(line: 296, column: 517, scope: !16791)
!16851 = !DILocation(line: 296, column: 731, scope: !16852)
!16852 = !DILexicalBlockFile(scope: !16791, file: !624, discriminator: 9)
!16853 = !DILocation(line: 296, column: 728, scope: !16852)
!16854 = !DILocation(line: 296, column: 752, scope: !16852)
!16855 = !DILocation(line: 296, column: 749, scope: !16852)
!16856 = !DILocation(line: 296, column: 776, scope: !16852)
!16857 = !DILocation(line: 296, column: 773, scope: !16852)
!16858 = !DILocation(line: 296, column: 793, scope: !16852)
!16859 = !DILocation(line: 296, column: 511, scope: !16860)
!16860 = !DILexicalBlockFile(scope: !16784, file: !624, discriminator: 10)
!16861 = !DILocation(line: 296, column: 486, scope: !16860)
!16862 = distinct !{!16862, !16863}
!16863 = !DILocation(line: 296, column: 486, scope: !16733)
!16864 = !DILocation(line: 296, column: 795, scope: !16865)
!16865 = !DILexicalBlockFile(scope: !16733, file: !624, discriminator: 11)
!16866 = distinct !DISubprogram(name: "blend_phoenix_16bit", scope: !624, file: !624, line: 309, type: !1531, isLocal: true, isDefinition: true, scopeLine: 309, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!16867 = !DILocalVariable(name: "_top", arg: 1, scope: !16866, file: !624, line: 309, type: !900)
!16868 = !DILocation(line: 309, column: 48, scope: !16866)
!16869 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !16866, file: !624, line: 309, type: !902)
!16870 = !DILocation(line: 309, column: 64, scope: !16866)
!16871 = !DILocalVariable(name: "_bottom", arg: 3, scope: !16866, file: !624, line: 309, type: !900)
!16872 = !DILocation(line: 309, column: 93, scope: !16866)
!16873 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !16866, file: !624, line: 309, type: !902)
!16874 = !DILocation(line: 309, column: 112, scope: !16866)
!16875 = !DILocalVariable(name: "_dst", arg: 5, scope: !16866, file: !624, line: 309, type: !329)
!16876 = !DILocation(line: 309, column: 138, scope: !16866)
!16877 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !16866, file: !624, line: 309, type: !902)
!16878 = !DILocation(line: 309, column: 154, scope: !16866)
!16879 = !DILocalVariable(name: "width", arg: 7, scope: !16866, file: !624, line: 309, type: !902)
!16880 = !DILocation(line: 309, column: 178, scope: !16866)
!16881 = !DILocalVariable(name: "height", arg: 8, scope: !16866, file: !624, line: 309, type: !902)
!16882 = !DILocation(line: 309, column: 195, scope: !16866)
!16883 = !DILocalVariable(name: "param", arg: 9, scope: !16866, file: !624, line: 309, type: !884)
!16884 = !DILocation(line: 309, column: 217, scope: !16866)
!16885 = !DILocalVariable(name: "values", arg: 10, scope: !16866, file: !624, line: 309, type: !544)
!16886 = !DILocation(line: 309, column: 232, scope: !16866)
!16887 = !DILocalVariable(name: "starty", arg: 11, scope: !16866, file: !624, line: 309, type: !238)
!16888 = !DILocation(line: 309, column: 244, scope: !16866)
!16889 = !DILocalVariable(name: "top", scope: !16866, file: !624, line: 309, type: !839)
!16890 = !DILocation(line: 309, column: 270, scope: !16866)
!16891 = !DILocation(line: 309, column: 293, scope: !16866)
!16892 = !DILocation(line: 309, column: 276, scope: !16866)
!16893 = !DILocalVariable(name: "bottom", scope: !16866, file: !624, line: 309, type: !839)
!16894 = !DILocation(line: 309, column: 315, scope: !16866)
!16895 = !DILocation(line: 309, column: 341, scope: !16866)
!16896 = !DILocation(line: 309, column: 324, scope: !16866)
!16897 = !DILocalVariable(name: "dst", scope: !16866, file: !624, line: 309, type: !843)
!16898 = !DILocation(line: 309, column: 360, scope: !16866)
!16899 = !DILocation(line: 309, column: 377, scope: !16866)
!16900 = !DILocation(line: 309, column: 366, scope: !16866)
!16901 = !DILocalVariable(name: "opacity", scope: !16866, file: !624, line: 309, type: !248)
!16902 = !DILocation(line: 309, column: 390, scope: !16866)
!16903 = !DILocation(line: 309, column: 400, scope: !16866)
!16904 = !DILocation(line: 309, column: 407, scope: !16866)
!16905 = !DILocalVariable(name: "i", scope: !16866, file: !624, line: 309, type: !238)
!16906 = !DILocation(line: 309, column: 420, scope: !16866)
!16907 = !DILocalVariable(name: "j", scope: !16866, file: !624, line: 309, type: !238)
!16908 = !DILocation(line: 309, column: 423, scope: !16866)
!16909 = !DILocation(line: 309, column: 439, scope: !16866)
!16910 = !DILocation(line: 309, column: 458, scope: !16866)
!16911 = !DILocation(line: 309, column: 480, scope: !16866)
!16912 = !DILocation(line: 309, column: 493, scope: !16913)
!16913 = distinct !DILexicalBlock(scope: !16866, file: !624, line: 309, column: 486)
!16914 = !DILocation(line: 309, column: 491, scope: !16913)
!16915 = !DILocation(line: 309, column: 498, scope: !16916)
!16916 = !DILexicalBlockFile(scope: !16917, file: !624, discriminator: 1)
!16917 = distinct !DILexicalBlock(scope: !16913, file: !624, line: 309, column: 486)
!16918 = !DILocation(line: 309, column: 502, scope: !16916)
!16919 = !DILocation(line: 309, column: 500, scope: !16916)
!16920 = !DILocation(line: 309, column: 486, scope: !16916)
!16921 = !DILocation(line: 309, column: 524, scope: !16922)
!16922 = !DILexicalBlockFile(scope: !16923, file: !624, discriminator: 2)
!16923 = distinct !DILexicalBlock(scope: !16924, file: !624, line: 309, column: 517)
!16924 = distinct !DILexicalBlock(scope: !16917, file: !624, line: 309, column: 515)
!16925 = !DILocation(line: 309, column: 522, scope: !16922)
!16926 = !DILocation(line: 309, column: 529, scope: !16927)
!16927 = !DILexicalBlockFile(scope: !16928, file: !624, discriminator: 3)
!16928 = distinct !DILexicalBlock(scope: !16923, file: !624, line: 309, column: 517)
!16929 = !DILocation(line: 309, column: 533, scope: !16927)
!16930 = !DILocation(line: 309, column: 531, scope: !16927)
!16931 = !DILocation(line: 309, column: 517, scope: !16927)
!16932 = !DILocation(line: 309, column: 560, scope: !16933)
!16933 = !DILexicalBlockFile(scope: !16934, file: !624, discriminator: 4)
!16934 = distinct !DILexicalBlock(scope: !16928, file: !624, line: 309, column: 545)
!16935 = !DILocation(line: 309, column: 556, scope: !16933)
!16936 = !DILocation(line: 309, column: 573, scope: !16933)
!16937 = !DILocation(line: 309, column: 569, scope: !16933)
!16938 = !DILocation(line: 309, column: 568, scope: !16933)
!16939 = !DILocation(line: 309, column: 587, scope: !16933)
!16940 = !DILocation(line: 309, column: 580, scope: !16933)
!16941 = !DILocation(line: 309, column: 579, scope: !16933)
!16942 = !DILocation(line: 309, column: 577, scope: !16933)
!16943 = !DILocation(line: 309, column: 601, scope: !16944)
!16944 = !DILexicalBlockFile(scope: !16934, file: !624, discriminator: 5)
!16945 = !DILocation(line: 309, column: 594, scope: !16944)
!16946 = !DILocation(line: 309, column: 593, scope: !16944)
!16947 = !DILocation(line: 309, column: 568, scope: !16944)
!16948 = !DILocation(line: 309, column: 612, scope: !16949)
!16949 = !DILexicalBlockFile(scope: !16934, file: !624, discriminator: 6)
!16950 = !DILocation(line: 309, column: 608, scope: !16949)
!16951 = !DILocation(line: 309, column: 607, scope: !16949)
!16952 = !DILocation(line: 309, column: 568, scope: !16949)
!16953 = !DILocation(line: 309, column: 568, scope: !16954)
!16954 = !DILexicalBlockFile(scope: !16934, file: !624, discriminator: 7)
!16955 = !DILocation(line: 309, column: 625, scope: !16954)
!16956 = !DILocation(line: 309, column: 621, scope: !16954)
!16957 = !DILocation(line: 309, column: 620, scope: !16954)
!16958 = !DILocation(line: 309, column: 639, scope: !16954)
!16959 = !DILocation(line: 309, column: 632, scope: !16954)
!16960 = !DILocation(line: 309, column: 631, scope: !16954)
!16961 = !DILocation(line: 309, column: 629, scope: !16954)
!16962 = !DILocation(line: 309, column: 650, scope: !16963)
!16963 = !DILexicalBlockFile(scope: !16934, file: !624, discriminator: 8)
!16964 = !DILocation(line: 309, column: 646, scope: !16963)
!16965 = !DILocation(line: 309, column: 645, scope: !16963)
!16966 = !DILocation(line: 309, column: 620, scope: !16963)
!16967 = !DILocation(line: 309, column: 664, scope: !16968)
!16968 = !DILexicalBlockFile(scope: !16934, file: !624, discriminator: 9)
!16969 = !DILocation(line: 309, column: 657, scope: !16968)
!16970 = !DILocation(line: 309, column: 656, scope: !16968)
!16971 = !DILocation(line: 309, column: 620, scope: !16968)
!16972 = !DILocation(line: 309, column: 620, scope: !16973)
!16973 = !DILexicalBlockFile(scope: !16934, file: !624, discriminator: 10)
!16974 = !DILocation(line: 309, column: 617, scope: !16973)
!16975 = !DILocation(line: 309, column: 669, scope: !16973)
!16976 = !DILocation(line: 309, column: 684, scope: !16973)
!16977 = !DILocation(line: 309, column: 680, scope: !16973)
!16978 = !DILocation(line: 309, column: 678, scope: !16973)
!16979 = !DILocation(line: 309, column: 565, scope: !16973)
!16980 = !DILocation(line: 309, column: 690, scope: !16973)
!16981 = !DILocation(line: 309, column: 688, scope: !16973)
!16982 = !DILocation(line: 309, column: 563, scope: !16973)
!16983 = !DILocation(line: 309, column: 556, scope: !16973)
!16984 = !DILocation(line: 309, column: 551, scope: !16973)
!16985 = !DILocation(line: 309, column: 547, scope: !16973)
!16986 = !DILocation(line: 309, column: 554, scope: !16973)
!16987 = !DILocation(line: 309, column: 699, scope: !16973)
!16988 = !DILocation(line: 309, column: 541, scope: !16989)
!16989 = !DILexicalBlockFile(scope: !16928, file: !624, discriminator: 11)
!16990 = !DILocation(line: 309, column: 517, scope: !16989)
!16991 = distinct !{!16991, !16992}
!16992 = !DILocation(line: 309, column: 517, scope: !16924)
!16993 = !DILocation(line: 309, column: 708, scope: !16994)
!16994 = !DILexicalBlockFile(scope: !16924, file: !624, discriminator: 12)
!16995 = !DILocation(line: 309, column: 705, scope: !16994)
!16996 = !DILocation(line: 309, column: 729, scope: !16994)
!16997 = !DILocation(line: 309, column: 726, scope: !16994)
!16998 = !DILocation(line: 309, column: 753, scope: !16994)
!16999 = !DILocation(line: 309, column: 750, scope: !16994)
!17000 = !DILocation(line: 309, column: 770, scope: !16994)
!17001 = !DILocation(line: 309, column: 511, scope: !17002)
!17002 = !DILexicalBlockFile(scope: !16917, file: !624, discriminator: 13)
!17003 = !DILocation(line: 309, column: 486, scope: !17002)
!17004 = distinct !{!17004, !17005}
!17005 = !DILocation(line: 309, column: 486, scope: !16866)
!17006 = !DILocation(line: 309, column: 772, scope: !17007)
!17007 = !DILexicalBlockFile(scope: !16866, file: !624, discriminator: 14)
!17008 = distinct !DISubprogram(name: "blend_pinlight_16bit", scope: !624, file: !624, line: 308, type: !1531, isLocal: true, isDefinition: true, scopeLine: 308, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!17009 = !DILocalVariable(name: "_top", arg: 1, scope: !17008, file: !624, line: 308, type: !900)
!17010 = !DILocation(line: 308, column: 49, scope: !17008)
!17011 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !17008, file: !624, line: 308, type: !902)
!17012 = !DILocation(line: 308, column: 65, scope: !17008)
!17013 = !DILocalVariable(name: "_bottom", arg: 3, scope: !17008, file: !624, line: 308, type: !900)
!17014 = !DILocation(line: 308, column: 94, scope: !17008)
!17015 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !17008, file: !624, line: 308, type: !902)
!17016 = !DILocation(line: 308, column: 113, scope: !17008)
!17017 = !DILocalVariable(name: "_dst", arg: 5, scope: !17008, file: !624, line: 308, type: !329)
!17018 = !DILocation(line: 308, column: 139, scope: !17008)
!17019 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !17008, file: !624, line: 308, type: !902)
!17020 = !DILocation(line: 308, column: 155, scope: !17008)
!17021 = !DILocalVariable(name: "width", arg: 7, scope: !17008, file: !624, line: 308, type: !902)
!17022 = !DILocation(line: 308, column: 179, scope: !17008)
!17023 = !DILocalVariable(name: "height", arg: 8, scope: !17008, file: !624, line: 308, type: !902)
!17024 = !DILocation(line: 308, column: 196, scope: !17008)
!17025 = !DILocalVariable(name: "param", arg: 9, scope: !17008, file: !624, line: 308, type: !884)
!17026 = !DILocation(line: 308, column: 218, scope: !17008)
!17027 = !DILocalVariable(name: "values", arg: 10, scope: !17008, file: !624, line: 308, type: !544)
!17028 = !DILocation(line: 308, column: 233, scope: !17008)
!17029 = !DILocalVariable(name: "starty", arg: 11, scope: !17008, file: !624, line: 308, type: !238)
!17030 = !DILocation(line: 308, column: 245, scope: !17008)
!17031 = !DILocalVariable(name: "top", scope: !17008, file: !624, line: 308, type: !839)
!17032 = !DILocation(line: 308, column: 271, scope: !17008)
!17033 = !DILocation(line: 308, column: 294, scope: !17008)
!17034 = !DILocation(line: 308, column: 277, scope: !17008)
!17035 = !DILocalVariable(name: "bottom", scope: !17008, file: !624, line: 308, type: !839)
!17036 = !DILocation(line: 308, column: 316, scope: !17008)
!17037 = !DILocation(line: 308, column: 342, scope: !17008)
!17038 = !DILocation(line: 308, column: 325, scope: !17008)
!17039 = !DILocalVariable(name: "dst", scope: !17008, file: !624, line: 308, type: !843)
!17040 = !DILocation(line: 308, column: 361, scope: !17008)
!17041 = !DILocation(line: 308, column: 378, scope: !17008)
!17042 = !DILocation(line: 308, column: 367, scope: !17008)
!17043 = !DILocalVariable(name: "opacity", scope: !17008, file: !624, line: 308, type: !248)
!17044 = !DILocation(line: 308, column: 391, scope: !17008)
!17045 = !DILocation(line: 308, column: 401, scope: !17008)
!17046 = !DILocation(line: 308, column: 408, scope: !17008)
!17047 = !DILocalVariable(name: "i", scope: !17008, file: !624, line: 308, type: !238)
!17048 = !DILocation(line: 308, column: 421, scope: !17008)
!17049 = !DILocalVariable(name: "j", scope: !17008, file: !624, line: 308, type: !238)
!17050 = !DILocation(line: 308, column: 424, scope: !17008)
!17051 = !DILocation(line: 308, column: 440, scope: !17008)
!17052 = !DILocation(line: 308, column: 459, scope: !17008)
!17053 = !DILocation(line: 308, column: 481, scope: !17008)
!17054 = !DILocation(line: 308, column: 494, scope: !17055)
!17055 = distinct !DILexicalBlock(scope: !17008, file: !624, line: 308, column: 487)
!17056 = !DILocation(line: 308, column: 492, scope: !17055)
!17057 = !DILocation(line: 308, column: 499, scope: !17058)
!17058 = !DILexicalBlockFile(scope: !17059, file: !624, discriminator: 1)
!17059 = distinct !DILexicalBlock(scope: !17055, file: !624, line: 308, column: 487)
!17060 = !DILocation(line: 308, column: 503, scope: !17058)
!17061 = !DILocation(line: 308, column: 501, scope: !17058)
!17062 = !DILocation(line: 308, column: 487, scope: !17058)
!17063 = !DILocation(line: 308, column: 525, scope: !17064)
!17064 = !DILexicalBlockFile(scope: !17065, file: !624, discriminator: 2)
!17065 = distinct !DILexicalBlock(scope: !17066, file: !624, line: 308, column: 518)
!17066 = distinct !DILexicalBlock(scope: !17059, file: !624, line: 308, column: 516)
!17067 = !DILocation(line: 308, column: 523, scope: !17064)
!17068 = !DILocation(line: 308, column: 530, scope: !17069)
!17069 = !DILexicalBlockFile(scope: !17070, file: !624, discriminator: 3)
!17070 = distinct !DILexicalBlock(scope: !17065, file: !624, line: 308, column: 518)
!17071 = !DILocation(line: 308, column: 534, scope: !17069)
!17072 = !DILocation(line: 308, column: 532, scope: !17069)
!17073 = !DILocation(line: 308, column: 518, scope: !17069)
!17074 = !DILocation(line: 308, column: 561, scope: !17075)
!17075 = !DILexicalBlockFile(scope: !17076, file: !624, discriminator: 4)
!17076 = distinct !DILexicalBlock(scope: !17070, file: !624, line: 308, column: 546)
!17077 = !DILocation(line: 308, column: 557, scope: !17075)
!17078 = !DILocation(line: 308, column: 576, scope: !17075)
!17079 = !DILocation(line: 308, column: 569, scope: !17075)
!17080 = !DILocation(line: 308, column: 579, scope: !17075)
!17081 = !DILocation(line: 308, column: 568, scope: !17075)
!17082 = !DILocation(line: 308, column: 596, scope: !17083)
!17083 = !DILexicalBlockFile(scope: !17076, file: !624, discriminator: 5)
!17084 = !DILocation(line: 308, column: 592, scope: !17083)
!17085 = !DILocation(line: 308, column: 591, scope: !17083)
!17086 = !DILocation(line: 308, column: 614, scope: !17083)
!17087 = !DILocation(line: 308, column: 607, scope: !17083)
!17088 = !DILocation(line: 308, column: 605, scope: !17083)
!17089 = !DILocation(line: 308, column: 600, scope: !17083)
!17090 = !DILocation(line: 308, column: 632, scope: !17091)
!17091 = !DILexicalBlockFile(scope: !17076, file: !624, discriminator: 6)
!17092 = !DILocation(line: 308, column: 625, scope: !17091)
!17093 = !DILocation(line: 308, column: 623, scope: !17091)
!17094 = !DILocation(line: 308, column: 591, scope: !17091)
!17095 = !DILocation(line: 308, column: 643, scope: !17096)
!17096 = !DILexicalBlockFile(scope: !17076, file: !624, discriminator: 7)
!17097 = !DILocation(line: 308, column: 639, scope: !17096)
!17098 = !DILocation(line: 308, column: 638, scope: !17096)
!17099 = !DILocation(line: 308, column: 591, scope: !17096)
!17100 = !DILocation(line: 308, column: 591, scope: !17101)
!17101 = !DILexicalBlockFile(scope: !17076, file: !624, discriminator: 8)
!17102 = !DILocation(line: 308, column: 568, scope: !17101)
!17103 = !DILocation(line: 308, column: 656, scope: !17104)
!17104 = !DILexicalBlockFile(scope: !17076, file: !624, discriminator: 9)
!17105 = !DILocation(line: 308, column: 652, scope: !17104)
!17106 = !DILocation(line: 308, column: 651, scope: !17104)
!17107 = !DILocation(line: 308, column: 675, scope: !17104)
!17108 = !DILocation(line: 308, column: 668, scope: !17104)
!17109 = !DILocation(line: 308, column: 678, scope: !17104)
!17110 = !DILocation(line: 308, column: 665, scope: !17104)
!17111 = !DILocation(line: 308, column: 660, scope: !17104)
!17112 = !DILocation(line: 308, column: 695, scope: !17113)
!17113 = !DILexicalBlockFile(scope: !17076, file: !624, discriminator: 10)
!17114 = !DILocation(line: 308, column: 691, scope: !17113)
!17115 = !DILocation(line: 308, column: 690, scope: !17113)
!17116 = !DILocation(line: 308, column: 651, scope: !17113)
!17117 = !DILocation(line: 308, column: 714, scope: !17118)
!17118 = !DILexicalBlockFile(scope: !17076, file: !624, discriminator: 11)
!17119 = !DILocation(line: 308, column: 707, scope: !17118)
!17120 = !DILocation(line: 308, column: 717, scope: !17118)
!17121 = !DILocation(line: 308, column: 704, scope: !17118)
!17122 = !DILocation(line: 308, column: 651, scope: !17118)
!17123 = !DILocation(line: 308, column: 651, scope: !17124)
!17124 = !DILexicalBlockFile(scope: !17076, file: !624, discriminator: 12)
!17125 = !DILocation(line: 308, column: 568, scope: !17124)
!17126 = !DILocation(line: 308, column: 568, scope: !17127)
!17127 = !DILexicalBlockFile(scope: !17076, file: !624, discriminator: 13)
!17128 = !DILocation(line: 308, column: 735, scope: !17127)
!17129 = !DILocation(line: 308, column: 731, scope: !17127)
!17130 = !DILocation(line: 308, column: 729, scope: !17127)
!17131 = !DILocation(line: 308, column: 566, scope: !17127)
!17132 = !DILocation(line: 308, column: 741, scope: !17127)
!17133 = !DILocation(line: 308, column: 739, scope: !17127)
!17134 = !DILocation(line: 308, column: 564, scope: !17127)
!17135 = !DILocation(line: 308, column: 557, scope: !17127)
!17136 = !DILocation(line: 308, column: 552, scope: !17127)
!17137 = !DILocation(line: 308, column: 548, scope: !17127)
!17138 = !DILocation(line: 308, column: 555, scope: !17127)
!17139 = !DILocation(line: 308, column: 750, scope: !17127)
!17140 = !DILocation(line: 308, column: 542, scope: !17141)
!17141 = !DILexicalBlockFile(scope: !17070, file: !624, discriminator: 14)
!17142 = !DILocation(line: 308, column: 518, scope: !17141)
!17143 = distinct !{!17143, !17144}
!17144 = !DILocation(line: 308, column: 518, scope: !17066)
!17145 = !DILocation(line: 308, column: 759, scope: !17146)
!17146 = !DILexicalBlockFile(scope: !17066, file: !624, discriminator: 15)
!17147 = !DILocation(line: 308, column: 756, scope: !17146)
!17148 = !DILocation(line: 308, column: 780, scope: !17146)
!17149 = !DILocation(line: 308, column: 777, scope: !17146)
!17150 = !DILocation(line: 308, column: 804, scope: !17146)
!17151 = !DILocation(line: 308, column: 801, scope: !17146)
!17152 = !DILocation(line: 308, column: 821, scope: !17146)
!17153 = !DILocation(line: 308, column: 512, scope: !17154)
!17154 = !DILexicalBlockFile(scope: !17059, file: !624, discriminator: 16)
!17155 = !DILocation(line: 308, column: 487, scope: !17154)
!17156 = distinct !{!17156, !17157}
!17157 = !DILocation(line: 308, column: 487, scope: !17008)
!17158 = !DILocation(line: 308, column: 823, scope: !17159)
!17159 = !DILexicalBlockFile(scope: !17008, file: !624, discriminator: 17)
!17160 = distinct !DISubprogram(name: "blend_reflect_16bit", scope: !624, file: !624, line: 310, type: !1531, isLocal: true, isDefinition: true, scopeLine: 310, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!17161 = !DILocalVariable(name: "_top", arg: 1, scope: !17160, file: !624, line: 310, type: !900)
!17162 = !DILocation(line: 310, column: 48, scope: !17160)
!17163 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !17160, file: !624, line: 310, type: !902)
!17164 = !DILocation(line: 310, column: 64, scope: !17160)
!17165 = !DILocalVariable(name: "_bottom", arg: 3, scope: !17160, file: !624, line: 310, type: !900)
!17166 = !DILocation(line: 310, column: 93, scope: !17160)
!17167 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !17160, file: !624, line: 310, type: !902)
!17168 = !DILocation(line: 310, column: 112, scope: !17160)
!17169 = !DILocalVariable(name: "_dst", arg: 5, scope: !17160, file: !624, line: 310, type: !329)
!17170 = !DILocation(line: 310, column: 138, scope: !17160)
!17171 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !17160, file: !624, line: 310, type: !902)
!17172 = !DILocation(line: 310, column: 154, scope: !17160)
!17173 = !DILocalVariable(name: "width", arg: 7, scope: !17160, file: !624, line: 310, type: !902)
!17174 = !DILocation(line: 310, column: 178, scope: !17160)
!17175 = !DILocalVariable(name: "height", arg: 8, scope: !17160, file: !624, line: 310, type: !902)
!17176 = !DILocation(line: 310, column: 195, scope: !17160)
!17177 = !DILocalVariable(name: "param", arg: 9, scope: !17160, file: !624, line: 310, type: !884)
!17178 = !DILocation(line: 310, column: 217, scope: !17160)
!17179 = !DILocalVariable(name: "values", arg: 10, scope: !17160, file: !624, line: 310, type: !544)
!17180 = !DILocation(line: 310, column: 232, scope: !17160)
!17181 = !DILocalVariable(name: "starty", arg: 11, scope: !17160, file: !624, line: 310, type: !238)
!17182 = !DILocation(line: 310, column: 244, scope: !17160)
!17183 = !DILocalVariable(name: "top", scope: !17160, file: !624, line: 310, type: !839)
!17184 = !DILocation(line: 310, column: 270, scope: !17160)
!17185 = !DILocation(line: 310, column: 293, scope: !17160)
!17186 = !DILocation(line: 310, column: 276, scope: !17160)
!17187 = !DILocalVariable(name: "bottom", scope: !17160, file: !624, line: 310, type: !839)
!17188 = !DILocation(line: 310, column: 315, scope: !17160)
!17189 = !DILocation(line: 310, column: 341, scope: !17160)
!17190 = !DILocation(line: 310, column: 324, scope: !17160)
!17191 = !DILocalVariable(name: "dst", scope: !17160, file: !624, line: 310, type: !843)
!17192 = !DILocation(line: 310, column: 360, scope: !17160)
!17193 = !DILocation(line: 310, column: 377, scope: !17160)
!17194 = !DILocation(line: 310, column: 366, scope: !17160)
!17195 = !DILocalVariable(name: "opacity", scope: !17160, file: !624, line: 310, type: !248)
!17196 = !DILocation(line: 310, column: 390, scope: !17160)
!17197 = !DILocation(line: 310, column: 400, scope: !17160)
!17198 = !DILocation(line: 310, column: 407, scope: !17160)
!17199 = !DILocalVariable(name: "i", scope: !17160, file: !624, line: 310, type: !238)
!17200 = !DILocation(line: 310, column: 420, scope: !17160)
!17201 = !DILocalVariable(name: "j", scope: !17160, file: !624, line: 310, type: !238)
!17202 = !DILocation(line: 310, column: 423, scope: !17160)
!17203 = !DILocation(line: 310, column: 439, scope: !17160)
!17204 = !DILocation(line: 310, column: 458, scope: !17160)
!17205 = !DILocation(line: 310, column: 480, scope: !17160)
!17206 = !DILocation(line: 310, column: 493, scope: !17207)
!17207 = distinct !DILexicalBlock(scope: !17160, file: !624, line: 310, column: 486)
!17208 = !DILocation(line: 310, column: 491, scope: !17207)
!17209 = !DILocation(line: 310, column: 498, scope: !17210)
!17210 = !DILexicalBlockFile(scope: !17211, file: !624, discriminator: 1)
!17211 = distinct !DILexicalBlock(scope: !17207, file: !624, line: 310, column: 486)
!17212 = !DILocation(line: 310, column: 502, scope: !17210)
!17213 = !DILocation(line: 310, column: 500, scope: !17210)
!17214 = !DILocation(line: 310, column: 486, scope: !17210)
!17215 = !DILocation(line: 310, column: 524, scope: !17216)
!17216 = !DILexicalBlockFile(scope: !17217, file: !624, discriminator: 2)
!17217 = distinct !DILexicalBlock(scope: !17218, file: !624, line: 310, column: 517)
!17218 = distinct !DILexicalBlock(scope: !17211, file: !624, line: 310, column: 515)
!17219 = !DILocation(line: 310, column: 522, scope: !17216)
!17220 = !DILocation(line: 310, column: 529, scope: !17221)
!17221 = !DILexicalBlockFile(scope: !17222, file: !624, discriminator: 3)
!17222 = distinct !DILexicalBlock(scope: !17217, file: !624, line: 310, column: 517)
!17223 = !DILocation(line: 310, column: 533, scope: !17221)
!17224 = !DILocation(line: 310, column: 531, scope: !17221)
!17225 = !DILocation(line: 310, column: 517, scope: !17221)
!17226 = !DILocation(line: 310, column: 560, scope: !17227)
!17227 = !DILexicalBlockFile(scope: !17228, file: !624, discriminator: 4)
!17228 = distinct !DILexicalBlock(scope: !17222, file: !624, line: 310, column: 545)
!17229 = !DILocation(line: 310, column: 556, scope: !17227)
!17230 = !DILocation(line: 310, column: 575, scope: !17227)
!17231 = !DILocation(line: 310, column: 568, scope: !17227)
!17232 = !DILocation(line: 310, column: 578, scope: !17227)
!17233 = !DILocation(line: 310, column: 567, scope: !17227)
!17234 = !DILocation(line: 310, column: 597, scope: !17235)
!17235 = !DILexicalBlockFile(scope: !17228, file: !624, discriminator: 5)
!17236 = !DILocation(line: 310, column: 590, scope: !17235)
!17237 = !DILocation(line: 310, column: 567, scope: !17235)
!17238 = !DILocation(line: 310, column: 619, scope: !17239)
!17239 = !DILexicalBlockFile(scope: !17228, file: !624, discriminator: 6)
!17240 = !DILocation(line: 310, column: 615, scope: !17239)
!17241 = !DILocation(line: 310, column: 628, scope: !17239)
!17242 = !DILocation(line: 310, column: 624, scope: !17239)
!17243 = !DILocation(line: 310, column: 622, scope: !17239)
!17244 = !DILocation(line: 310, column: 649, scope: !17239)
!17245 = !DILocation(line: 310, column: 642, scope: !17239)
!17246 = !DILocation(line: 310, column: 640, scope: !17239)
!17247 = !DILocation(line: 310, column: 631, scope: !17239)
!17248 = !DILocation(line: 310, column: 611, scope: !17239)
!17249 = !DILocation(line: 310, column: 603, scope: !17239)
!17250 = !DILocation(line: 310, column: 663, scope: !17251)
!17251 = !DILexicalBlockFile(scope: !17228, file: !624, discriminator: 7)
!17252 = !DILocation(line: 310, column: 659, scope: !17251)
!17253 = !DILocation(line: 310, column: 672, scope: !17251)
!17254 = !DILocation(line: 310, column: 668, scope: !17251)
!17255 = !DILocation(line: 310, column: 666, scope: !17251)
!17256 = !DILocation(line: 310, column: 693, scope: !17251)
!17257 = !DILocation(line: 310, column: 686, scope: !17251)
!17258 = !DILocation(line: 310, column: 684, scope: !17251)
!17259 = !DILocation(line: 310, column: 675, scope: !17251)
!17260 = !DILocation(line: 310, column: 603, scope: !17251)
!17261 = !DILocation(line: 310, column: 603, scope: !17262)
!17262 = !DILexicalBlockFile(scope: !17228, file: !624, discriminator: 8)
!17263 = !DILocation(line: 310, column: 603, scope: !17264)
!17264 = !DILexicalBlockFile(scope: !17228, file: !624, discriminator: 9)
!17265 = !DILocation(line: 310, column: 567, scope: !17264)
!17266 = !DILocation(line: 310, column: 567, scope: !17267)
!17267 = !DILexicalBlockFile(scope: !17228, file: !624, discriminator: 10)
!17268 = !DILocation(line: 310, column: 717, scope: !17267)
!17269 = !DILocation(line: 310, column: 713, scope: !17267)
!17270 = !DILocation(line: 310, column: 711, scope: !17267)
!17271 = !DILocation(line: 310, column: 565, scope: !17267)
!17272 = !DILocation(line: 310, column: 723, scope: !17267)
!17273 = !DILocation(line: 310, column: 721, scope: !17267)
!17274 = !DILocation(line: 310, column: 563, scope: !17267)
!17275 = !DILocation(line: 310, column: 556, scope: !17267)
!17276 = !DILocation(line: 310, column: 551, scope: !17267)
!17277 = !DILocation(line: 310, column: 547, scope: !17267)
!17278 = !DILocation(line: 310, column: 554, scope: !17267)
!17279 = !DILocation(line: 310, column: 732, scope: !17267)
!17280 = !DILocation(line: 310, column: 541, scope: !17281)
!17281 = !DILexicalBlockFile(scope: !17222, file: !624, discriminator: 11)
!17282 = !DILocation(line: 310, column: 517, scope: !17281)
!17283 = distinct !{!17283, !17284}
!17284 = !DILocation(line: 310, column: 517, scope: !17218)
!17285 = !DILocation(line: 310, column: 741, scope: !17286)
!17286 = !DILexicalBlockFile(scope: !17218, file: !624, discriminator: 12)
!17287 = !DILocation(line: 310, column: 738, scope: !17286)
!17288 = !DILocation(line: 310, column: 762, scope: !17286)
!17289 = !DILocation(line: 310, column: 759, scope: !17286)
!17290 = !DILocation(line: 310, column: 786, scope: !17286)
!17291 = !DILocation(line: 310, column: 783, scope: !17286)
!17292 = !DILocation(line: 310, column: 803, scope: !17286)
!17293 = !DILocation(line: 310, column: 511, scope: !17294)
!17294 = !DILexicalBlockFile(scope: !17211, file: !624, discriminator: 13)
!17295 = !DILocation(line: 310, column: 486, scope: !17294)
!17296 = distinct !{!17296, !17297}
!17297 = !DILocation(line: 310, column: 486, scope: !17160)
!17298 = !DILocation(line: 310, column: 805, scope: !17299)
!17299 = !DILexicalBlockFile(scope: !17160, file: !624, discriminator: 14)
!17300 = distinct !DISubprogram(name: "blend_screen_16bit", scope: !624, file: !624, line: 295, type: !1531, isLocal: true, isDefinition: true, scopeLine: 295, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!17301 = !DILocalVariable(name: "_top", arg: 1, scope: !17300, file: !624, line: 295, type: !900)
!17302 = !DILocation(line: 295, column: 47, scope: !17300)
!17303 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !17300, file: !624, line: 295, type: !902)
!17304 = !DILocation(line: 295, column: 63, scope: !17300)
!17305 = !DILocalVariable(name: "_bottom", arg: 3, scope: !17300, file: !624, line: 295, type: !900)
!17306 = !DILocation(line: 295, column: 92, scope: !17300)
!17307 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !17300, file: !624, line: 295, type: !902)
!17308 = !DILocation(line: 295, column: 111, scope: !17300)
!17309 = !DILocalVariable(name: "_dst", arg: 5, scope: !17300, file: !624, line: 295, type: !329)
!17310 = !DILocation(line: 295, column: 137, scope: !17300)
!17311 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !17300, file: !624, line: 295, type: !902)
!17312 = !DILocation(line: 295, column: 153, scope: !17300)
!17313 = !DILocalVariable(name: "width", arg: 7, scope: !17300, file: !624, line: 295, type: !902)
!17314 = !DILocation(line: 295, column: 177, scope: !17300)
!17315 = !DILocalVariable(name: "height", arg: 8, scope: !17300, file: !624, line: 295, type: !902)
!17316 = !DILocation(line: 295, column: 194, scope: !17300)
!17317 = !DILocalVariable(name: "param", arg: 9, scope: !17300, file: !624, line: 295, type: !884)
!17318 = !DILocation(line: 295, column: 216, scope: !17300)
!17319 = !DILocalVariable(name: "values", arg: 10, scope: !17300, file: !624, line: 295, type: !544)
!17320 = !DILocation(line: 295, column: 231, scope: !17300)
!17321 = !DILocalVariable(name: "starty", arg: 11, scope: !17300, file: !624, line: 295, type: !238)
!17322 = !DILocation(line: 295, column: 243, scope: !17300)
!17323 = !DILocalVariable(name: "top", scope: !17300, file: !624, line: 295, type: !839)
!17324 = !DILocation(line: 295, column: 269, scope: !17300)
!17325 = !DILocation(line: 295, column: 292, scope: !17300)
!17326 = !DILocation(line: 295, column: 275, scope: !17300)
!17327 = !DILocalVariable(name: "bottom", scope: !17300, file: !624, line: 295, type: !839)
!17328 = !DILocation(line: 295, column: 314, scope: !17300)
!17329 = !DILocation(line: 295, column: 340, scope: !17300)
!17330 = !DILocation(line: 295, column: 323, scope: !17300)
!17331 = !DILocalVariable(name: "dst", scope: !17300, file: !624, line: 295, type: !843)
!17332 = !DILocation(line: 295, column: 359, scope: !17300)
!17333 = !DILocation(line: 295, column: 376, scope: !17300)
!17334 = !DILocation(line: 295, column: 365, scope: !17300)
!17335 = !DILocalVariable(name: "opacity", scope: !17300, file: !624, line: 295, type: !248)
!17336 = !DILocation(line: 295, column: 389, scope: !17300)
!17337 = !DILocation(line: 295, column: 399, scope: !17300)
!17338 = !DILocation(line: 295, column: 406, scope: !17300)
!17339 = !DILocalVariable(name: "i", scope: !17300, file: !624, line: 295, type: !238)
!17340 = !DILocation(line: 295, column: 419, scope: !17300)
!17341 = !DILocalVariable(name: "j", scope: !17300, file: !624, line: 295, type: !238)
!17342 = !DILocation(line: 295, column: 422, scope: !17300)
!17343 = !DILocation(line: 295, column: 438, scope: !17300)
!17344 = !DILocation(line: 295, column: 457, scope: !17300)
!17345 = !DILocation(line: 295, column: 479, scope: !17300)
!17346 = !DILocation(line: 295, column: 492, scope: !17347)
!17347 = distinct !DILexicalBlock(scope: !17300, file: !624, line: 295, column: 485)
!17348 = !DILocation(line: 295, column: 490, scope: !17347)
!17349 = !DILocation(line: 295, column: 497, scope: !17350)
!17350 = !DILexicalBlockFile(scope: !17351, file: !624, discriminator: 1)
!17351 = distinct !DILexicalBlock(scope: !17347, file: !624, line: 295, column: 485)
!17352 = !DILocation(line: 295, column: 501, scope: !17350)
!17353 = !DILocation(line: 295, column: 499, scope: !17350)
!17354 = !DILocation(line: 295, column: 485, scope: !17350)
!17355 = !DILocation(line: 295, column: 523, scope: !17356)
!17356 = !DILexicalBlockFile(scope: !17357, file: !624, discriminator: 2)
!17357 = distinct !DILexicalBlock(scope: !17358, file: !624, line: 295, column: 516)
!17358 = distinct !DILexicalBlock(scope: !17351, file: !624, line: 295, column: 514)
!17359 = !DILocation(line: 295, column: 521, scope: !17356)
!17360 = !DILocation(line: 295, column: 528, scope: !17361)
!17361 = !DILexicalBlockFile(scope: !17362, file: !624, discriminator: 3)
!17362 = distinct !DILexicalBlock(scope: !17357, file: !624, line: 295, column: 516)
!17363 = !DILocation(line: 295, column: 532, scope: !17361)
!17364 = !DILocation(line: 295, column: 530, scope: !17361)
!17365 = !DILocation(line: 295, column: 516, scope: !17361)
!17366 = !DILocation(line: 295, column: 559, scope: !17367)
!17367 = !DILexicalBlockFile(scope: !17368, file: !624, discriminator: 4)
!17368 = distinct !DILexicalBlock(scope: !17362, file: !624, line: 295, column: 544)
!17369 = !DILocation(line: 295, column: 555, scope: !17367)
!17370 = !DILocation(line: 295, column: 596, scope: !17367)
!17371 = !DILocation(line: 295, column: 592, scope: !17367)
!17372 = !DILocation(line: 295, column: 591, scope: !17367)
!17373 = !DILocation(line: 295, column: 589, scope: !17367)
!17374 = !DILocation(line: 295, column: 620, scope: !17367)
!17375 = !DILocation(line: 295, column: 613, scope: !17367)
!17376 = !DILocation(line: 295, column: 612, scope: !17367)
!17377 = !DILocation(line: 295, column: 610, scope: !17367)
!17378 = !DILocation(line: 295, column: 601, scope: !17367)
!17379 = !DILocation(line: 295, column: 625, scope: !17367)
!17380 = !DILocation(line: 295, column: 579, scope: !17367)
!17381 = !DILocation(line: 295, column: 573, scope: !17367)
!17382 = !DILocation(line: 295, column: 642, scope: !17367)
!17383 = !DILocation(line: 295, column: 638, scope: !17367)
!17384 = !DILocation(line: 295, column: 636, scope: !17367)
!17385 = !DILocation(line: 295, column: 564, scope: !17367)
!17386 = !DILocation(line: 295, column: 648, scope: !17367)
!17387 = !DILocation(line: 295, column: 646, scope: !17367)
!17388 = !DILocation(line: 295, column: 562, scope: !17367)
!17389 = !DILocation(line: 295, column: 550, scope: !17367)
!17390 = !DILocation(line: 295, column: 546, scope: !17367)
!17391 = !DILocation(line: 295, column: 553, scope: !17367)
!17392 = !DILocation(line: 295, column: 657, scope: !17367)
!17393 = !DILocation(line: 295, column: 540, scope: !17394)
!17394 = !DILexicalBlockFile(scope: !17362, file: !624, discriminator: 5)
!17395 = !DILocation(line: 295, column: 516, scope: !17394)
!17396 = distinct !{!17396, !17397}
!17397 = !DILocation(line: 295, column: 516, scope: !17358)
!17398 = !DILocation(line: 295, column: 666, scope: !17399)
!17399 = !DILexicalBlockFile(scope: !17358, file: !624, discriminator: 6)
!17400 = !DILocation(line: 295, column: 663, scope: !17399)
!17401 = !DILocation(line: 295, column: 687, scope: !17399)
!17402 = !DILocation(line: 295, column: 684, scope: !17399)
!17403 = !DILocation(line: 295, column: 711, scope: !17399)
!17404 = !DILocation(line: 295, column: 708, scope: !17399)
!17405 = !DILocation(line: 295, column: 728, scope: !17399)
!17406 = !DILocation(line: 295, column: 510, scope: !17407)
!17407 = !DILexicalBlockFile(scope: !17351, file: !624, discriminator: 7)
!17408 = !DILocation(line: 295, column: 485, scope: !17407)
!17409 = distinct !{!17409, !17410}
!17410 = !DILocation(line: 295, column: 485, scope: !17300)
!17411 = !DILocation(line: 295, column: 730, scope: !17412)
!17412 = !DILexicalBlockFile(scope: !17300, file: !624, discriminator: 8)
!17413 = distinct !DISubprogram(name: "blend_softlight_16bit", scope: !624, file: !624, line: 306, type: !1531, isLocal: true, isDefinition: true, scopeLine: 306, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!17414 = !DILocalVariable(name: "_top", arg: 1, scope: !17413, file: !624, line: 306, type: !900)
!17415 = !DILocation(line: 306, column: 50, scope: !17413)
!17416 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !17413, file: !624, line: 306, type: !902)
!17417 = !DILocation(line: 306, column: 66, scope: !17413)
!17418 = !DILocalVariable(name: "_bottom", arg: 3, scope: !17413, file: !624, line: 306, type: !900)
!17419 = !DILocation(line: 306, column: 95, scope: !17413)
!17420 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !17413, file: !624, line: 306, type: !902)
!17421 = !DILocation(line: 306, column: 114, scope: !17413)
!17422 = !DILocalVariable(name: "_dst", arg: 5, scope: !17413, file: !624, line: 306, type: !329)
!17423 = !DILocation(line: 306, column: 140, scope: !17413)
!17424 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !17413, file: !624, line: 306, type: !902)
!17425 = !DILocation(line: 306, column: 156, scope: !17413)
!17426 = !DILocalVariable(name: "width", arg: 7, scope: !17413, file: !624, line: 306, type: !902)
!17427 = !DILocation(line: 306, column: 180, scope: !17413)
!17428 = !DILocalVariable(name: "height", arg: 8, scope: !17413, file: !624, line: 306, type: !902)
!17429 = !DILocation(line: 306, column: 197, scope: !17413)
!17430 = !DILocalVariable(name: "param", arg: 9, scope: !17413, file: !624, line: 306, type: !884)
!17431 = !DILocation(line: 306, column: 219, scope: !17413)
!17432 = !DILocalVariable(name: "values", arg: 10, scope: !17413, file: !624, line: 306, type: !544)
!17433 = !DILocation(line: 306, column: 234, scope: !17413)
!17434 = !DILocalVariable(name: "starty", arg: 11, scope: !17413, file: !624, line: 306, type: !238)
!17435 = !DILocation(line: 306, column: 246, scope: !17413)
!17436 = !DILocalVariable(name: "top", scope: !17413, file: !624, line: 306, type: !839)
!17437 = !DILocation(line: 306, column: 272, scope: !17413)
!17438 = !DILocation(line: 306, column: 295, scope: !17413)
!17439 = !DILocation(line: 306, column: 278, scope: !17413)
!17440 = !DILocalVariable(name: "bottom", scope: !17413, file: !624, line: 306, type: !839)
!17441 = !DILocation(line: 306, column: 317, scope: !17413)
!17442 = !DILocation(line: 306, column: 343, scope: !17413)
!17443 = !DILocation(line: 306, column: 326, scope: !17413)
!17444 = !DILocalVariable(name: "dst", scope: !17413, file: !624, line: 306, type: !843)
!17445 = !DILocation(line: 306, column: 362, scope: !17413)
!17446 = !DILocation(line: 306, column: 379, scope: !17413)
!17447 = !DILocation(line: 306, column: 368, scope: !17413)
!17448 = !DILocalVariable(name: "opacity", scope: !17413, file: !624, line: 306, type: !248)
!17449 = !DILocation(line: 306, column: 392, scope: !17413)
!17450 = !DILocation(line: 306, column: 402, scope: !17413)
!17451 = !DILocation(line: 306, column: 409, scope: !17413)
!17452 = !DILocalVariable(name: "i", scope: !17413, file: !624, line: 306, type: !238)
!17453 = !DILocation(line: 306, column: 422, scope: !17413)
!17454 = !DILocalVariable(name: "j", scope: !17413, file: !624, line: 306, type: !238)
!17455 = !DILocation(line: 306, column: 425, scope: !17413)
!17456 = !DILocation(line: 306, column: 441, scope: !17413)
!17457 = !DILocation(line: 306, column: 460, scope: !17413)
!17458 = !DILocation(line: 306, column: 482, scope: !17413)
!17459 = !DILocation(line: 306, column: 495, scope: !17460)
!17460 = distinct !DILexicalBlock(scope: !17413, file: !624, line: 306, column: 488)
!17461 = !DILocation(line: 306, column: 493, scope: !17460)
!17462 = !DILocation(line: 306, column: 500, scope: !17463)
!17463 = !DILexicalBlockFile(scope: !17464, file: !624, discriminator: 1)
!17464 = distinct !DILexicalBlock(scope: !17460, file: !624, line: 306, column: 488)
!17465 = !DILocation(line: 306, column: 504, scope: !17463)
!17466 = !DILocation(line: 306, column: 502, scope: !17463)
!17467 = !DILocation(line: 306, column: 488, scope: !17463)
!17468 = !DILocation(line: 306, column: 526, scope: !17469)
!17469 = !DILexicalBlockFile(scope: !17470, file: !624, discriminator: 2)
!17470 = distinct !DILexicalBlock(scope: !17471, file: !624, line: 306, column: 519)
!17471 = distinct !DILexicalBlock(scope: !17464, file: !624, line: 306, column: 517)
!17472 = !DILocation(line: 306, column: 524, scope: !17469)
!17473 = !DILocation(line: 306, column: 531, scope: !17474)
!17474 = !DILexicalBlockFile(scope: !17475, file: !624, discriminator: 3)
!17475 = distinct !DILexicalBlock(scope: !17470, file: !624, line: 306, column: 519)
!17476 = !DILocation(line: 306, column: 535, scope: !17474)
!17477 = !DILocation(line: 306, column: 533, scope: !17474)
!17478 = !DILocation(line: 306, column: 519, scope: !17474)
!17479 = !DILocation(line: 306, column: 562, scope: !17480)
!17480 = !DILexicalBlockFile(scope: !17481, file: !624, discriminator: 4)
!17481 = distinct !DILexicalBlock(scope: !17475, file: !624, line: 306, column: 547)
!17482 = !DILocation(line: 306, column: 558, scope: !17480)
!17483 = !DILocation(line: 306, column: 574, scope: !17480)
!17484 = !DILocation(line: 306, column: 570, scope: !17480)
!17485 = !DILocation(line: 306, column: 577, scope: !17480)
!17486 = !DILocation(line: 306, column: 569, scope: !17480)
!17487 = !DILocation(line: 306, column: 595, scope: !17488)
!17488 = !DILexicalBlockFile(scope: !17481, file: !624, discriminator: 5)
!17489 = !DILocation(line: 306, column: 588, scope: !17488)
!17490 = !DILocation(line: 306, column: 616, scope: !17488)
!17491 = !DILocation(line: 306, column: 609, scope: !17488)
!17492 = !DILocation(line: 306, column: 607, scope: !17488)
!17493 = !DILocation(line: 306, column: 600, scope: !17488)
!17494 = !DILocation(line: 306, column: 627, scope: !17488)
!17495 = !DILocation(line: 306, column: 623, scope: !17488)
!17496 = !DILocation(line: 306, column: 630, scope: !17488)
!17497 = !DILocation(line: 306, column: 620, scope: !17488)
!17498 = !DILocation(line: 306, column: 641, scope: !17488)
!17499 = !DILocation(line: 306, column: 672, scope: !17488)
!17500 = !DILocation(line: 306, column: 665, scope: !17488)
!17501 = !DILocation(line: 306, column: 675, scope: !17488)
!17502 = !DILocation(line: 306, column: 660, scope: !17488)
!17503 = !DILocation(line: 306, column: 686, scope: !17488)
!17504 = !DILocation(line: 306, column: 658, scope: !17488)
!17505 = !DILocation(line: 306, column: 651, scope: !17488)
!17506 = !DILocation(line: 306, column: 598, scope: !17488)
!17507 = !DILocation(line: 306, column: 569, scope: !17488)
!17508 = !DILocation(line: 306, column: 703, scope: !17509)
!17509 = !DILexicalBlockFile(scope: !17481, file: !624, discriminator: 6)
!17510 = !DILocation(line: 306, column: 696, scope: !17509)
!17511 = !DILocation(line: 306, column: 715, scope: !17509)
!17512 = !DILocation(line: 306, column: 708, scope: !17509)
!17513 = !DILocation(line: 306, column: 736, scope: !17509)
!17514 = !DILocation(line: 306, column: 732, scope: !17509)
!17515 = !DILocation(line: 306, column: 730, scope: !17509)
!17516 = !DILocation(line: 306, column: 740, scope: !17509)
!17517 = !DILocation(line: 306, column: 718, scope: !17509)
!17518 = !DILocation(line: 306, column: 772, scope: !17509)
!17519 = !DILocation(line: 306, column: 765, scope: !17509)
!17520 = !DILocation(line: 306, column: 775, scope: !17509)
!17521 = !DILocation(line: 306, column: 760, scope: !17509)
!17522 = !DILocation(line: 306, column: 785, scope: !17509)
!17523 = !DILocation(line: 306, column: 758, scope: !17509)
!17524 = !DILocation(line: 306, column: 751, scope: !17509)
!17525 = !DILocation(line: 306, column: 706, scope: !17509)
!17526 = !DILocation(line: 306, column: 569, scope: !17509)
!17527 = !DILocation(line: 306, column: 569, scope: !17528)
!17528 = !DILexicalBlockFile(scope: !17481, file: !624, discriminator: 7)
!17529 = !DILocation(line: 306, column: 800, scope: !17528)
!17530 = !DILocation(line: 306, column: 796, scope: !17528)
!17531 = !DILocation(line: 306, column: 794, scope: !17528)
!17532 = !DILocation(line: 306, column: 806, scope: !17528)
!17533 = !DILocation(line: 306, column: 804, scope: !17528)
!17534 = !DILocation(line: 306, column: 565, scope: !17528)
!17535 = !DILocation(line: 306, column: 558, scope: !17528)
!17536 = !DILocation(line: 306, column: 553, scope: !17528)
!17537 = !DILocation(line: 306, column: 549, scope: !17528)
!17538 = !DILocation(line: 306, column: 556, scope: !17528)
!17539 = !DILocation(line: 306, column: 815, scope: !17528)
!17540 = !DILocation(line: 306, column: 543, scope: !17541)
!17541 = !DILexicalBlockFile(scope: !17475, file: !624, discriminator: 8)
!17542 = !DILocation(line: 306, column: 519, scope: !17541)
!17543 = distinct !{!17543, !17544}
!17544 = !DILocation(line: 306, column: 519, scope: !17471)
!17545 = !DILocation(line: 306, column: 824, scope: !17546)
!17546 = !DILexicalBlockFile(scope: !17471, file: !624, discriminator: 9)
!17547 = !DILocation(line: 306, column: 821, scope: !17546)
!17548 = !DILocation(line: 306, column: 845, scope: !17546)
!17549 = !DILocation(line: 306, column: 842, scope: !17546)
!17550 = !DILocation(line: 306, column: 869, scope: !17546)
!17551 = !DILocation(line: 306, column: 866, scope: !17546)
!17552 = !DILocation(line: 306, column: 886, scope: !17546)
!17553 = !DILocation(line: 306, column: 513, scope: !17554)
!17554 = !DILexicalBlockFile(scope: !17464, file: !624, discriminator: 10)
!17555 = !DILocation(line: 306, column: 488, scope: !17554)
!17556 = distinct !{!17556, !17557}
!17557 = !DILocation(line: 306, column: 488, scope: !17413)
!17558 = !DILocation(line: 306, column: 888, scope: !17559)
!17559 = !DILexicalBlockFile(scope: !17413, file: !624, discriminator: 11)
!17560 = distinct !DISubprogram(name: "blend_subtract_16bit", scope: !624, file: !624, line: 288, type: !1531, isLocal: true, isDefinition: true, scopeLine: 288, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!17561 = !DILocalVariable(name: "_top", arg: 1, scope: !17560, file: !624, line: 288, type: !900)
!17562 = !DILocation(line: 288, column: 49, scope: !17560)
!17563 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !17560, file: !624, line: 288, type: !902)
!17564 = !DILocation(line: 288, column: 65, scope: !17560)
!17565 = !DILocalVariable(name: "_bottom", arg: 3, scope: !17560, file: !624, line: 288, type: !900)
!17566 = !DILocation(line: 288, column: 94, scope: !17560)
!17567 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !17560, file: !624, line: 288, type: !902)
!17568 = !DILocation(line: 288, column: 113, scope: !17560)
!17569 = !DILocalVariable(name: "_dst", arg: 5, scope: !17560, file: !624, line: 288, type: !329)
!17570 = !DILocation(line: 288, column: 139, scope: !17560)
!17571 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !17560, file: !624, line: 288, type: !902)
!17572 = !DILocation(line: 288, column: 155, scope: !17560)
!17573 = !DILocalVariable(name: "width", arg: 7, scope: !17560, file: !624, line: 288, type: !902)
!17574 = !DILocation(line: 288, column: 179, scope: !17560)
!17575 = !DILocalVariable(name: "height", arg: 8, scope: !17560, file: !624, line: 288, type: !902)
!17576 = !DILocation(line: 288, column: 196, scope: !17560)
!17577 = !DILocalVariable(name: "param", arg: 9, scope: !17560, file: !624, line: 288, type: !884)
!17578 = !DILocation(line: 288, column: 218, scope: !17560)
!17579 = !DILocalVariable(name: "values", arg: 10, scope: !17560, file: !624, line: 288, type: !544)
!17580 = !DILocation(line: 288, column: 233, scope: !17560)
!17581 = !DILocalVariable(name: "starty", arg: 11, scope: !17560, file: !624, line: 288, type: !238)
!17582 = !DILocation(line: 288, column: 245, scope: !17560)
!17583 = !DILocalVariable(name: "top", scope: !17560, file: !624, line: 288, type: !839)
!17584 = !DILocation(line: 288, column: 271, scope: !17560)
!17585 = !DILocation(line: 288, column: 294, scope: !17560)
!17586 = !DILocation(line: 288, column: 277, scope: !17560)
!17587 = !DILocalVariable(name: "bottom", scope: !17560, file: !624, line: 288, type: !839)
!17588 = !DILocation(line: 288, column: 316, scope: !17560)
!17589 = !DILocation(line: 288, column: 342, scope: !17560)
!17590 = !DILocation(line: 288, column: 325, scope: !17560)
!17591 = !DILocalVariable(name: "dst", scope: !17560, file: !624, line: 288, type: !843)
!17592 = !DILocation(line: 288, column: 361, scope: !17560)
!17593 = !DILocation(line: 288, column: 378, scope: !17560)
!17594 = !DILocation(line: 288, column: 367, scope: !17560)
!17595 = !DILocalVariable(name: "opacity", scope: !17560, file: !624, line: 288, type: !248)
!17596 = !DILocation(line: 288, column: 391, scope: !17560)
!17597 = !DILocation(line: 288, column: 401, scope: !17560)
!17598 = !DILocation(line: 288, column: 408, scope: !17560)
!17599 = !DILocalVariable(name: "i", scope: !17560, file: !624, line: 288, type: !238)
!17600 = !DILocation(line: 288, column: 421, scope: !17560)
!17601 = !DILocalVariable(name: "j", scope: !17560, file: !624, line: 288, type: !238)
!17602 = !DILocation(line: 288, column: 424, scope: !17560)
!17603 = !DILocation(line: 288, column: 440, scope: !17560)
!17604 = !DILocation(line: 288, column: 459, scope: !17560)
!17605 = !DILocation(line: 288, column: 481, scope: !17560)
!17606 = !DILocation(line: 288, column: 494, scope: !17607)
!17607 = distinct !DILexicalBlock(scope: !17560, file: !624, line: 288, column: 487)
!17608 = !DILocation(line: 288, column: 492, scope: !17607)
!17609 = !DILocation(line: 288, column: 499, scope: !17610)
!17610 = !DILexicalBlockFile(scope: !17611, file: !624, discriminator: 1)
!17611 = distinct !DILexicalBlock(scope: !17607, file: !624, line: 288, column: 487)
!17612 = !DILocation(line: 288, column: 503, scope: !17610)
!17613 = !DILocation(line: 288, column: 501, scope: !17610)
!17614 = !DILocation(line: 288, column: 487, scope: !17610)
!17615 = !DILocation(line: 288, column: 525, scope: !17616)
!17616 = !DILexicalBlockFile(scope: !17617, file: !624, discriminator: 2)
!17617 = distinct !DILexicalBlock(scope: !17618, file: !624, line: 288, column: 518)
!17618 = distinct !DILexicalBlock(scope: !17611, file: !624, line: 288, column: 516)
!17619 = !DILocation(line: 288, column: 523, scope: !17616)
!17620 = !DILocation(line: 288, column: 530, scope: !17621)
!17621 = !DILexicalBlockFile(scope: !17622, file: !624, discriminator: 3)
!17622 = distinct !DILexicalBlock(scope: !17617, file: !624, line: 288, column: 518)
!17623 = !DILocation(line: 288, column: 534, scope: !17621)
!17624 = !DILocation(line: 288, column: 532, scope: !17621)
!17625 = !DILocation(line: 288, column: 518, scope: !17621)
!17626 = !DILocation(line: 288, column: 561, scope: !17627)
!17627 = !DILexicalBlockFile(scope: !17628, file: !624, discriminator: 4)
!17628 = distinct !DILexicalBlock(scope: !17622, file: !624, line: 288, column: 546)
!17629 = !DILocation(line: 288, column: 557, scope: !17627)
!17630 = !DILocation(line: 288, column: 580, scope: !17627)
!17631 = !DILocation(line: 288, column: 576, scope: !17627)
!17632 = !DILocation(line: 288, column: 592, scope: !17627)
!17633 = !DILocation(line: 288, column: 585, scope: !17627)
!17634 = !DILocation(line: 288, column: 583, scope: !17627)
!17635 = !DILocation(line: 288, column: 573, scope: !17627)
!17636 = !DILocation(line: 288, column: 569, scope: !17627)
!17637 = !DILocation(line: 288, column: 569, scope: !17638)
!17638 = !DILexicalBlockFile(scope: !17628, file: !624, discriminator: 5)
!17639 = !DILocation(line: 288, column: 609, scope: !17640)
!17640 = !DILexicalBlockFile(scope: !17628, file: !624, discriminator: 6)
!17641 = !DILocation(line: 288, column: 605, scope: !17640)
!17642 = !DILocation(line: 288, column: 621, scope: !17640)
!17643 = !DILocation(line: 288, column: 614, scope: !17640)
!17644 = !DILocation(line: 288, column: 612, scope: !17640)
!17645 = !DILocation(line: 288, column: 569, scope: !17640)
!17646 = !DILocation(line: 288, column: 569, scope: !17647)
!17647 = !DILexicalBlockFile(scope: !17628, file: !624, discriminator: 7)
!17648 = !DILocation(line: 288, column: 633, scope: !17647)
!17649 = !DILocation(line: 288, column: 629, scope: !17647)
!17650 = !DILocation(line: 288, column: 627, scope: !17647)
!17651 = !DILocation(line: 288, column: 566, scope: !17647)
!17652 = !DILocation(line: 288, column: 639, scope: !17647)
!17653 = !DILocation(line: 288, column: 637, scope: !17647)
!17654 = !DILocation(line: 288, column: 564, scope: !17647)
!17655 = !DILocation(line: 288, column: 557, scope: !17647)
!17656 = !DILocation(line: 288, column: 552, scope: !17647)
!17657 = !DILocation(line: 288, column: 548, scope: !17647)
!17658 = !DILocation(line: 288, column: 555, scope: !17647)
!17659 = !DILocation(line: 288, column: 648, scope: !17647)
!17660 = !DILocation(line: 288, column: 542, scope: !17661)
!17661 = !DILexicalBlockFile(scope: !17622, file: !624, discriminator: 8)
!17662 = !DILocation(line: 288, column: 518, scope: !17661)
!17663 = distinct !{!17663, !17664}
!17664 = !DILocation(line: 288, column: 518, scope: !17618)
!17665 = !DILocation(line: 288, column: 657, scope: !17666)
!17666 = !DILexicalBlockFile(scope: !17618, file: !624, discriminator: 9)
!17667 = !DILocation(line: 288, column: 654, scope: !17666)
!17668 = !DILocation(line: 288, column: 678, scope: !17666)
!17669 = !DILocation(line: 288, column: 675, scope: !17666)
!17670 = !DILocation(line: 288, column: 702, scope: !17666)
!17671 = !DILocation(line: 288, column: 699, scope: !17666)
!17672 = !DILocation(line: 288, column: 719, scope: !17666)
!17673 = !DILocation(line: 288, column: 512, scope: !17674)
!17674 = !DILexicalBlockFile(scope: !17611, file: !624, discriminator: 10)
!17675 = !DILocation(line: 288, column: 487, scope: !17674)
!17676 = distinct !{!17676, !17677}
!17677 = !DILocation(line: 288, column: 487, scope: !17560)
!17678 = !DILocation(line: 288, column: 721, scope: !17679)
!17679 = !DILexicalBlockFile(scope: !17560, file: !624, discriminator: 11)
!17680 = distinct !DISubprogram(name: "blend_vividlight_16bit", scope: !624, file: !624, line: 315, type: !1531, isLocal: true, isDefinition: true, scopeLine: 315, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!17681 = !DILocalVariable(name: "_top", arg: 1, scope: !17680, file: !624, line: 315, type: !900)
!17682 = !DILocation(line: 315, column: 51, scope: !17680)
!17683 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !17680, file: !624, line: 315, type: !902)
!17684 = !DILocation(line: 315, column: 67, scope: !17680)
!17685 = !DILocalVariable(name: "_bottom", arg: 3, scope: !17680, file: !624, line: 315, type: !900)
!17686 = !DILocation(line: 315, column: 96, scope: !17680)
!17687 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !17680, file: !624, line: 315, type: !902)
!17688 = !DILocation(line: 315, column: 115, scope: !17680)
!17689 = !DILocalVariable(name: "_dst", arg: 5, scope: !17680, file: !624, line: 315, type: !329)
!17690 = !DILocation(line: 315, column: 141, scope: !17680)
!17691 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !17680, file: !624, line: 315, type: !902)
!17692 = !DILocation(line: 315, column: 157, scope: !17680)
!17693 = !DILocalVariable(name: "width", arg: 7, scope: !17680, file: !624, line: 315, type: !902)
!17694 = !DILocation(line: 315, column: 181, scope: !17680)
!17695 = !DILocalVariable(name: "height", arg: 8, scope: !17680, file: !624, line: 315, type: !902)
!17696 = !DILocation(line: 315, column: 198, scope: !17680)
!17697 = !DILocalVariable(name: "param", arg: 9, scope: !17680, file: !624, line: 315, type: !884)
!17698 = !DILocation(line: 315, column: 220, scope: !17680)
!17699 = !DILocalVariable(name: "values", arg: 10, scope: !17680, file: !624, line: 315, type: !544)
!17700 = !DILocation(line: 315, column: 235, scope: !17680)
!17701 = !DILocalVariable(name: "starty", arg: 11, scope: !17680, file: !624, line: 315, type: !238)
!17702 = !DILocation(line: 315, column: 247, scope: !17680)
!17703 = !DILocalVariable(name: "top", scope: !17680, file: !624, line: 315, type: !839)
!17704 = !DILocation(line: 315, column: 273, scope: !17680)
!17705 = !DILocation(line: 315, column: 296, scope: !17680)
!17706 = !DILocation(line: 315, column: 279, scope: !17680)
!17707 = !DILocalVariable(name: "bottom", scope: !17680, file: !624, line: 315, type: !839)
!17708 = !DILocation(line: 315, column: 318, scope: !17680)
!17709 = !DILocation(line: 315, column: 344, scope: !17680)
!17710 = !DILocation(line: 315, column: 327, scope: !17680)
!17711 = !DILocalVariable(name: "dst", scope: !17680, file: !624, line: 315, type: !843)
!17712 = !DILocation(line: 315, column: 363, scope: !17680)
!17713 = !DILocation(line: 315, column: 380, scope: !17680)
!17714 = !DILocation(line: 315, column: 369, scope: !17680)
!17715 = !DILocalVariable(name: "opacity", scope: !17680, file: !624, line: 315, type: !248)
!17716 = !DILocation(line: 315, column: 393, scope: !17680)
!17717 = !DILocation(line: 315, column: 403, scope: !17680)
!17718 = !DILocation(line: 315, column: 410, scope: !17680)
!17719 = !DILocalVariable(name: "i", scope: !17680, file: !624, line: 315, type: !238)
!17720 = !DILocation(line: 315, column: 423, scope: !17680)
!17721 = !DILocalVariable(name: "j", scope: !17680, file: !624, line: 315, type: !238)
!17722 = !DILocation(line: 315, column: 426, scope: !17680)
!17723 = !DILocation(line: 315, column: 442, scope: !17680)
!17724 = !DILocation(line: 315, column: 461, scope: !17680)
!17725 = !DILocation(line: 315, column: 483, scope: !17680)
!17726 = !DILocation(line: 315, column: 496, scope: !17727)
!17727 = distinct !DILexicalBlock(scope: !17680, file: !624, line: 315, column: 489)
!17728 = !DILocation(line: 315, column: 494, scope: !17727)
!17729 = !DILocation(line: 315, column: 501, scope: !17730)
!17730 = !DILexicalBlockFile(scope: !17731, file: !624, discriminator: 1)
!17731 = distinct !DILexicalBlock(scope: !17727, file: !624, line: 315, column: 489)
!17732 = !DILocation(line: 315, column: 505, scope: !17730)
!17733 = !DILocation(line: 315, column: 503, scope: !17730)
!17734 = !DILocation(line: 315, column: 489, scope: !17730)
!17735 = !DILocation(line: 315, column: 527, scope: !17736)
!17736 = !DILexicalBlockFile(scope: !17737, file: !624, discriminator: 2)
!17737 = distinct !DILexicalBlock(scope: !17738, file: !624, line: 315, column: 520)
!17738 = distinct !DILexicalBlock(scope: !17731, file: !624, line: 315, column: 518)
!17739 = !DILocation(line: 315, column: 525, scope: !17736)
!17740 = !DILocation(line: 315, column: 532, scope: !17741)
!17741 = !DILexicalBlockFile(scope: !17742, file: !624, discriminator: 3)
!17742 = distinct !DILexicalBlock(scope: !17737, file: !624, line: 315, column: 520)
!17743 = !DILocation(line: 315, column: 536, scope: !17741)
!17744 = !DILocation(line: 315, column: 534, scope: !17741)
!17745 = !DILocation(line: 315, column: 520, scope: !17741)
!17746 = !DILocation(line: 315, column: 563, scope: !17747)
!17747 = !DILexicalBlockFile(scope: !17748, file: !624, discriminator: 4)
!17748 = distinct !DILexicalBlock(scope: !17742, file: !624, line: 315, column: 548)
!17749 = !DILocation(line: 315, column: 559, scope: !17747)
!17750 = !DILocation(line: 315, column: 575, scope: !17747)
!17751 = !DILocation(line: 315, column: 571, scope: !17747)
!17752 = !DILocation(line: 315, column: 578, scope: !17747)
!17753 = !DILocation(line: 315, column: 570, scope: !17747)
!17754 = !DILocation(line: 315, column: 600, scope: !17755)
!17755 = !DILexicalBlockFile(scope: !17748, file: !624, discriminator: 5)
!17756 = !DILocation(line: 315, column: 596, scope: !17755)
!17757 = !DILocation(line: 315, column: 594, scope: !17755)
!17758 = !DILocation(line: 315, column: 604, scope: !17755)
!17759 = !DILocation(line: 315, column: 590, scope: !17755)
!17760 = !DILocation(line: 315, column: 621, scope: !17761)
!17761 = !DILexicalBlockFile(scope: !17748, file: !624, discriminator: 6)
!17762 = !DILocation(line: 315, column: 617, scope: !17761)
!17763 = !DILocation(line: 315, column: 615, scope: !17761)
!17764 = !DILocation(line: 315, column: 590, scope: !17761)
!17765 = !DILocation(line: 315, column: 661, scope: !17766)
!17766 = !DILexicalBlockFile(scope: !17748, file: !624, discriminator: 7)
!17767 = !DILocation(line: 315, column: 654, scope: !17766)
!17768 = !DILocation(line: 315, column: 653, scope: !17766)
!17769 = !DILocation(line: 315, column: 651, scope: !17766)
!17770 = !DILocation(line: 315, column: 666, scope: !17766)
!17771 = !DILocation(line: 315, column: 684, scope: !17766)
!17772 = !DILocation(line: 315, column: 680, scope: !17766)
!17773 = !DILocation(line: 315, column: 678, scope: !17766)
!17774 = !DILocation(line: 315, column: 673, scope: !17766)
!17775 = !DILocation(line: 315, column: 641, scope: !17766)
!17776 = !DILocation(line: 315, column: 632, scope: !17766)
!17777 = !DILocation(line: 315, column: 628, scope: !17766)
!17778 = !DILocation(line: 315, column: 628, scope: !17779)
!17779 = !DILexicalBlockFile(scope: !17748, file: !624, discriminator: 8)
!17780 = !DILocation(line: 315, column: 724, scope: !17781)
!17781 = !DILexicalBlockFile(scope: !17748, file: !624, discriminator: 9)
!17782 = !DILocation(line: 315, column: 717, scope: !17781)
!17783 = !DILocation(line: 315, column: 716, scope: !17781)
!17784 = !DILocation(line: 315, column: 714, scope: !17781)
!17785 = !DILocation(line: 315, column: 729, scope: !17781)
!17786 = !DILocation(line: 315, column: 747, scope: !17781)
!17787 = !DILocation(line: 315, column: 743, scope: !17781)
!17788 = !DILocation(line: 315, column: 741, scope: !17781)
!17789 = !DILocation(line: 315, column: 736, scope: !17781)
!17790 = !DILocation(line: 315, column: 704, scope: !17781)
!17791 = !DILocation(line: 315, column: 628, scope: !17781)
!17792 = !DILocation(line: 315, column: 628, scope: !17793)
!17793 = !DILexicalBlockFile(scope: !17748, file: !624, discriminator: 10)
!17794 = !DILocation(line: 315, column: 590, scope: !17793)
!17795 = !DILocation(line: 315, column: 590, scope: !17796)
!17796 = !DILexicalBlockFile(scope: !17748, file: !624, discriminator: 11)
!17797 = !DILocation(line: 315, column: 570, scope: !17796)
!17798 = !DILocation(line: 315, column: 768, scope: !17799)
!17799 = !DILexicalBlockFile(scope: !17748, file: !624, discriminator: 12)
!17800 = !DILocation(line: 315, column: 764, scope: !17799)
!17801 = !DILocation(line: 315, column: 771, scope: !17799)
!17802 = !DILocation(line: 315, column: 761, scope: !17799)
!17803 = !DILocation(line: 315, column: 781, scope: !17799)
!17804 = !DILocation(line: 315, column: 757, scope: !17799)
!17805 = !DILocation(line: 315, column: 803, scope: !17806)
!17806 = !DILexicalBlockFile(scope: !17748, file: !624, discriminator: 13)
!17807 = !DILocation(line: 315, column: 799, scope: !17806)
!17808 = !DILocation(line: 315, column: 806, scope: !17806)
!17809 = !DILocation(line: 315, column: 796, scope: !17806)
!17810 = !DILocation(line: 315, column: 757, scope: !17806)
!17811 = !DILocation(line: 315, column: 840, scope: !17812)
!17812 = !DILexicalBlockFile(scope: !17748, file: !624, discriminator: 14)
!17813 = !DILocation(line: 315, column: 833, scope: !17812)
!17814 = !DILocation(line: 315, column: 832, scope: !17812)
!17815 = !DILocation(line: 315, column: 844, scope: !17812)
!17816 = !DILocation(line: 315, column: 872, scope: !17812)
!17817 = !DILocation(line: 315, column: 868, scope: !17812)
!17818 = !DILocation(line: 315, column: 875, scope: !17812)
!17819 = !DILocation(line: 315, column: 865, scope: !17812)
!17820 = !DILocation(line: 315, column: 860, scope: !17812)
!17821 = !DILocation(line: 315, column: 851, scope: !17812)
!17822 = !DILocation(line: 315, column: 827, scope: !17812)
!17823 = !DILocation(line: 315, column: 819, scope: !17812)
!17824 = !DILocation(line: 315, column: 901, scope: !17825)
!17825 = !DILexicalBlockFile(scope: !17748, file: !624, discriminator: 15)
!17826 = !DILocation(line: 315, column: 894, scope: !17825)
!17827 = !DILocation(line: 315, column: 893, scope: !17825)
!17828 = !DILocation(line: 315, column: 905, scope: !17825)
!17829 = !DILocation(line: 315, column: 933, scope: !17825)
!17830 = !DILocation(line: 315, column: 929, scope: !17825)
!17831 = !DILocation(line: 315, column: 936, scope: !17825)
!17832 = !DILocation(line: 315, column: 926, scope: !17825)
!17833 = !DILocation(line: 315, column: 921, scope: !17825)
!17834 = !DILocation(line: 315, column: 912, scope: !17825)
!17835 = !DILocation(line: 315, column: 819, scope: !17825)
!17836 = !DILocation(line: 315, column: 819, scope: !17837)
!17837 = !DILexicalBlockFile(scope: !17748, file: !624, discriminator: 16)
!17838 = !DILocation(line: 315, column: 819, scope: !17839)
!17839 = !DILexicalBlockFile(scope: !17748, file: !624, discriminator: 17)
!17840 = !DILocation(line: 315, column: 757, scope: !17839)
!17841 = !DILocation(line: 315, column: 757, scope: !17842)
!17842 = !DILexicalBlockFile(scope: !17748, file: !624, discriminator: 18)
!17843 = !DILocation(line: 315, column: 570, scope: !17842)
!17844 = !DILocation(line: 315, column: 570, scope: !17845)
!17845 = !DILexicalBlockFile(scope: !17748, file: !624, discriminator: 19)
!17846 = !DILocation(line: 315, column: 968, scope: !17845)
!17847 = !DILocation(line: 315, column: 964, scope: !17845)
!17848 = !DILocation(line: 315, column: 962, scope: !17845)
!17849 = !DILocation(line: 315, column: 568, scope: !17845)
!17850 = !DILocation(line: 315, column: 974, scope: !17845)
!17851 = !DILocation(line: 315, column: 972, scope: !17845)
!17852 = !DILocation(line: 315, column: 566, scope: !17845)
!17853 = !DILocation(line: 315, column: 559, scope: !17845)
!17854 = !DILocation(line: 315, column: 554, scope: !17845)
!17855 = !DILocation(line: 315, column: 550, scope: !17845)
!17856 = !DILocation(line: 315, column: 557, scope: !17845)
!17857 = !DILocation(line: 315, column: 983, scope: !17845)
!17858 = !DILocation(line: 315, column: 544, scope: !17859)
!17859 = !DILexicalBlockFile(scope: !17742, file: !624, discriminator: 20)
!17860 = !DILocation(line: 315, column: 520, scope: !17859)
!17861 = distinct !{!17861, !17862}
!17862 = !DILocation(line: 315, column: 520, scope: !17738)
!17863 = !DILocation(line: 315, column: 992, scope: !17864)
!17864 = !DILexicalBlockFile(scope: !17738, file: !624, discriminator: 21)
!17865 = !DILocation(line: 315, column: 989, scope: !17864)
!17866 = !DILocation(line: 315, column: 1013, scope: !17864)
!17867 = !DILocation(line: 315, column: 1010, scope: !17864)
!17868 = !DILocation(line: 315, column: 1037, scope: !17864)
!17869 = !DILocation(line: 315, column: 1034, scope: !17864)
!17870 = !DILocation(line: 315, column: 1054, scope: !17864)
!17871 = !DILocation(line: 315, column: 514, scope: !17872)
!17872 = !DILexicalBlockFile(scope: !17731, file: !624, discriminator: 22)
!17873 = !DILocation(line: 315, column: 489, scope: !17872)
!17874 = distinct !{!17874, !17875}
!17875 = !DILocation(line: 315, column: 489, scope: !17680)
!17876 = !DILocation(line: 315, column: 1056, scope: !17877)
!17877 = !DILexicalBlockFile(scope: !17680, file: !624, discriminator: 23)
!17878 = distinct !DISubprogram(name: "blend_xor_16bit", scope: !624, file: !624, line: 314, type: !1531, isLocal: true, isDefinition: true, scopeLine: 314, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!17879 = !DILocalVariable(name: "_top", arg: 1, scope: !17878, file: !624, line: 314, type: !900)
!17880 = !DILocation(line: 314, column: 44, scope: !17878)
!17881 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !17878, file: !624, line: 314, type: !902)
!17882 = !DILocation(line: 314, column: 60, scope: !17878)
!17883 = !DILocalVariable(name: "_bottom", arg: 3, scope: !17878, file: !624, line: 314, type: !900)
!17884 = !DILocation(line: 314, column: 89, scope: !17878)
!17885 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !17878, file: !624, line: 314, type: !902)
!17886 = !DILocation(line: 314, column: 108, scope: !17878)
!17887 = !DILocalVariable(name: "_dst", arg: 5, scope: !17878, file: !624, line: 314, type: !329)
!17888 = !DILocation(line: 314, column: 134, scope: !17878)
!17889 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !17878, file: !624, line: 314, type: !902)
!17890 = !DILocation(line: 314, column: 150, scope: !17878)
!17891 = !DILocalVariable(name: "width", arg: 7, scope: !17878, file: !624, line: 314, type: !902)
!17892 = !DILocation(line: 314, column: 174, scope: !17878)
!17893 = !DILocalVariable(name: "height", arg: 8, scope: !17878, file: !624, line: 314, type: !902)
!17894 = !DILocation(line: 314, column: 191, scope: !17878)
!17895 = !DILocalVariable(name: "param", arg: 9, scope: !17878, file: !624, line: 314, type: !884)
!17896 = !DILocation(line: 314, column: 213, scope: !17878)
!17897 = !DILocalVariable(name: "values", arg: 10, scope: !17878, file: !624, line: 314, type: !544)
!17898 = !DILocation(line: 314, column: 228, scope: !17878)
!17899 = !DILocalVariable(name: "starty", arg: 11, scope: !17878, file: !624, line: 314, type: !238)
!17900 = !DILocation(line: 314, column: 240, scope: !17878)
!17901 = !DILocalVariable(name: "top", scope: !17878, file: !624, line: 314, type: !839)
!17902 = !DILocation(line: 314, column: 266, scope: !17878)
!17903 = !DILocation(line: 314, column: 289, scope: !17878)
!17904 = !DILocation(line: 314, column: 272, scope: !17878)
!17905 = !DILocalVariable(name: "bottom", scope: !17878, file: !624, line: 314, type: !839)
!17906 = !DILocation(line: 314, column: 311, scope: !17878)
!17907 = !DILocation(line: 314, column: 337, scope: !17878)
!17908 = !DILocation(line: 314, column: 320, scope: !17878)
!17909 = !DILocalVariable(name: "dst", scope: !17878, file: !624, line: 314, type: !843)
!17910 = !DILocation(line: 314, column: 356, scope: !17878)
!17911 = !DILocation(line: 314, column: 373, scope: !17878)
!17912 = !DILocation(line: 314, column: 362, scope: !17878)
!17913 = !DILocalVariable(name: "opacity", scope: !17878, file: !624, line: 314, type: !248)
!17914 = !DILocation(line: 314, column: 386, scope: !17878)
!17915 = !DILocation(line: 314, column: 396, scope: !17878)
!17916 = !DILocation(line: 314, column: 403, scope: !17878)
!17917 = !DILocalVariable(name: "i", scope: !17878, file: !624, line: 314, type: !238)
!17918 = !DILocation(line: 314, column: 416, scope: !17878)
!17919 = !DILocalVariable(name: "j", scope: !17878, file: !624, line: 314, type: !238)
!17920 = !DILocation(line: 314, column: 419, scope: !17878)
!17921 = !DILocation(line: 314, column: 435, scope: !17878)
!17922 = !DILocation(line: 314, column: 454, scope: !17878)
!17923 = !DILocation(line: 314, column: 476, scope: !17878)
!17924 = !DILocation(line: 314, column: 489, scope: !17925)
!17925 = distinct !DILexicalBlock(scope: !17878, file: !624, line: 314, column: 482)
!17926 = !DILocation(line: 314, column: 487, scope: !17925)
!17927 = !DILocation(line: 314, column: 494, scope: !17928)
!17928 = !DILexicalBlockFile(scope: !17929, file: !624, discriminator: 1)
!17929 = distinct !DILexicalBlock(scope: !17925, file: !624, line: 314, column: 482)
!17930 = !DILocation(line: 314, column: 498, scope: !17928)
!17931 = !DILocation(line: 314, column: 496, scope: !17928)
!17932 = !DILocation(line: 314, column: 482, scope: !17928)
!17933 = !DILocation(line: 314, column: 520, scope: !17934)
!17934 = !DILexicalBlockFile(scope: !17935, file: !624, discriminator: 2)
!17935 = distinct !DILexicalBlock(scope: !17936, file: !624, line: 314, column: 513)
!17936 = distinct !DILexicalBlock(scope: !17929, file: !624, line: 314, column: 511)
!17937 = !DILocation(line: 314, column: 518, scope: !17934)
!17938 = !DILocation(line: 314, column: 525, scope: !17939)
!17939 = !DILexicalBlockFile(scope: !17940, file: !624, discriminator: 3)
!17940 = distinct !DILexicalBlock(scope: !17935, file: !624, line: 314, column: 513)
!17941 = !DILocation(line: 314, column: 529, scope: !17939)
!17942 = !DILocation(line: 314, column: 527, scope: !17939)
!17943 = !DILocation(line: 314, column: 513, scope: !17939)
!17944 = !DILocation(line: 314, column: 556, scope: !17945)
!17945 = !DILexicalBlockFile(scope: !17946, file: !624, discriminator: 4)
!17946 = distinct !DILexicalBlock(scope: !17940, file: !624, line: 314, column: 541)
!17947 = !DILocation(line: 314, column: 552, scope: !17945)
!17948 = !DILocation(line: 314, column: 567, scope: !17945)
!17949 = !DILocation(line: 314, column: 563, scope: !17945)
!17950 = !DILocation(line: 314, column: 579, scope: !17945)
!17951 = !DILocation(line: 314, column: 572, scope: !17945)
!17952 = !DILocation(line: 314, column: 570, scope: !17945)
!17953 = !DILocation(line: 314, column: 589, scope: !17945)
!17954 = !DILocation(line: 314, column: 585, scope: !17945)
!17955 = !DILocation(line: 314, column: 583, scope: !17945)
!17956 = !DILocation(line: 314, column: 561, scope: !17945)
!17957 = !DILocation(line: 314, column: 595, scope: !17945)
!17958 = !DILocation(line: 314, column: 593, scope: !17945)
!17959 = !DILocation(line: 314, column: 559, scope: !17945)
!17960 = !DILocation(line: 314, column: 547, scope: !17945)
!17961 = !DILocation(line: 314, column: 543, scope: !17945)
!17962 = !DILocation(line: 314, column: 550, scope: !17945)
!17963 = !DILocation(line: 314, column: 604, scope: !17945)
!17964 = !DILocation(line: 314, column: 537, scope: !17965)
!17965 = !DILexicalBlockFile(scope: !17940, file: !624, discriminator: 5)
!17966 = !DILocation(line: 314, column: 513, scope: !17965)
!17967 = distinct !{!17967, !17968}
!17968 = !DILocation(line: 314, column: 513, scope: !17936)
!17969 = !DILocation(line: 314, column: 613, scope: !17970)
!17970 = !DILexicalBlockFile(scope: !17936, file: !624, discriminator: 6)
!17971 = !DILocation(line: 314, column: 610, scope: !17970)
!17972 = !DILocation(line: 314, column: 634, scope: !17970)
!17973 = !DILocation(line: 314, column: 631, scope: !17970)
!17974 = !DILocation(line: 314, column: 658, scope: !17970)
!17975 = !DILocation(line: 314, column: 655, scope: !17970)
!17976 = !DILocation(line: 314, column: 675, scope: !17970)
!17977 = !DILocation(line: 314, column: 507, scope: !17978)
!17978 = !DILexicalBlockFile(scope: !17929, file: !624, discriminator: 7)
!17979 = !DILocation(line: 314, column: 482, scope: !17978)
!17980 = distinct !{!17980, !17981}
!17981 = !DILocation(line: 314, column: 482, scope: !17878)
!17982 = !DILocation(line: 314, column: 677, scope: !17983)
!17983 = !DILexicalBlockFile(scope: !17878, file: !624, discriminator: 8)
!17984 = distinct !DISubprogram(name: "blend_framesync_preinit", scope: !624, file: !624, line: 123, type: !447, isLocal: true, isDefinition: true, scopeLine: 123, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!17985 = !DILocalVariable(name: "ctx", arg: 1, scope: !17984, file: !624, line: 123, type: !211)
!17986 = !DILocation(line: 123, column: 53, scope: !17984)
!17987 = !DILocalVariable(name: "s", scope: !17984, file: !624, line: 123, type: !17988)
!17988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17989, size: 64, align: 64)
!17989 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlendContext", file: !624, line: 49, baseType: !17990)
!17990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BlendContext", file: !624, line: 36, size: 2624, align: 64, elements: !17991)
!17991 = !{!17992, !17993, !18030, !18031, !18032, !18033, !18034, !18035, !18036, !18037, !18041, !18042}
!17992 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !17990, file: !624, line: 37, baseType: !216, size: 64, align: 64)
!17993 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !17990, file: !624, line: 38, baseType: !17994, size: 768, align: 64, offset: 64)
!17994 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFFrameSync", file: !618, line: 209, baseType: !17995)
!17995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFFrameSync", file: !618, line: 146, size: 768, align: 64, elements: !17996)
!17996 = !{!17997, !17998, !17999, !18000, !18001, !18002, !18007, !18008, !18009, !18010, !18011, !18012, !18027, !18028, !18029}
!17997 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !17995, file: !618, line: 147, baseType: !216, size: 64, align: 64)
!17998 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !17995, file: !618, line: 152, baseType: !211, size: 64, align: 64, offset: 64)
!17999 = !DIDerivedType(tag: DW_TAG_member, name: "nb_in", scope: !17995, file: !618, line: 157, baseType: !480, size: 32, align: 32, offset: 128)
!18000 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !17995, file: !618, line: 162, baseType: !251, size: 64, align: 32, offset: 160)
!18001 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !17995, file: !618, line: 167, baseType: !244, size: 64, align: 64, offset: 256)
!18002 = !DIDerivedType(tag: DW_TAG_member, name: "on_event", scope: !17995, file: !618, line: 172, baseType: !18003, size: 64, align: 64, offset: 320)
!18003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18004, size: 64, align: 64)
!18004 = !DISubroutineType(types: !18005)
!18005 = !{!238, !18006}
!18006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17995, size: 64, align: 64)
!18007 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !17995, file: !618, line: 177, baseType: !229, size: 64, align: 64, offset: 384)
!18008 = !DIDerivedType(tag: DW_TAG_member, name: "in_request", scope: !17995, file: !618, line: 182, baseType: !480, size: 32, align: 32, offset: 448)
!18009 = !DIDerivedType(tag: DW_TAG_member, name: "sync_level", scope: !17995, file: !618, line: 188, baseType: !480, size: 32, align: 32, offset: 480)
!18010 = !DIDerivedType(tag: DW_TAG_member, name: "frame_ready", scope: !17995, file: !618, line: 193, baseType: !330, size: 8, align: 8, offset: 512)
!18011 = !DIDerivedType(tag: DW_TAG_member, name: "eof", scope: !17995, file: !618, line: 198, baseType: !330, size: 8, align: 8, offset: 520)
!18012 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !17995, file: !618, line: 203, baseType: !18013, size: 64, align: 64, offset: 576)
!18013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18014, size: 64, align: 64)
!18014 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFFrameSyncIn", file: !618, line: 141, baseType: !18015)
!18015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFFrameSyncIn", file: !618, line: 81, size: 448, align: 64, elements: !18016)
!18016 = !{!18017, !18018, !18019, !18020, !18021, !18022, !18023, !18024, !18025, !18026}
!18017 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !18015, file: !618, line: 86, baseType: !617, size: 32, align: 32)
!18018 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !18015, file: !618, line: 91, baseType: !617, size: 32, align: 32, offset: 32)
!18019 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !18015, file: !618, line: 96, baseType: !251, size: 64, align: 32, offset: 64)
!18020 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !18015, file: !618, line: 101, baseType: !323, size: 64, align: 64, offset: 128)
!18021 = !DIDerivedType(tag: DW_TAG_member, name: "frame_next", scope: !18015, file: !618, line: 106, baseType: !323, size: 64, align: 64, offset: 192)
!18022 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !18015, file: !618, line: 111, baseType: !244, size: 64, align: 64, offset: 256)
!18023 = !DIDerivedType(tag: DW_TAG_member, name: "pts_next", scope: !18015, file: !618, line: 116, baseType: !244, size: 64, align: 64, offset: 320)
!18024 = !DIDerivedType(tag: DW_TAG_member, name: "have_next", scope: !18015, file: !618, line: 121, baseType: !330, size: 8, align: 8, offset: 384)
!18025 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !18015, file: !618, line: 126, baseType: !330, size: 8, align: 8, offset: 392)
!18026 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !18015, file: !618, line: 139, baseType: !480, size: 32, align: 32, offset: 416)
!18027 = !DIDerivedType(tag: DW_TAG_member, name: "opt_repeatlast", scope: !17995, file: !618, line: 205, baseType: !238, size: 32, align: 32, offset: 640)
!18028 = !DIDerivedType(tag: DW_TAG_member, name: "opt_shortest", scope: !17995, file: !618, line: 206, baseType: !238, size: 32, align: 32, offset: 672)
!18029 = !DIDerivedType(tag: DW_TAG_member, name: "opt_eof_action", scope: !17995, file: !618, line: 207, baseType: !238, size: 32, align: 32, offset: 704)
!18030 = !DIDerivedType(tag: DW_TAG_member, name: "hsub", scope: !17990, file: !624, line: 39, baseType: !238, size: 32, align: 32, offset: 832)
!18031 = !DIDerivedType(tag: DW_TAG_member, name: "vsub", scope: !17990, file: !624, line: 39, baseType: !238, size: 32, align: 32, offset: 864)
!18032 = !DIDerivedType(tag: DW_TAG_member, name: "nb_planes", scope: !17990, file: !624, line: 40, baseType: !238, size: 32, align: 32, offset: 896)
!18033 = !DIDerivedType(tag: DW_TAG_member, name: "all_expr", scope: !17990, file: !624, line: 41, baseType: !468, size: 64, align: 64, offset: 960)
!18034 = !DIDerivedType(tag: DW_TAG_member, name: "all_mode", scope: !17990, file: !624, line: 42, baseType: !3, size: 32, align: 32, offset: 1024)
!18035 = !DIDerivedType(tag: DW_TAG_member, name: "all_opacity", scope: !17990, file: !624, line: 43, baseType: !248, size: 64, align: 64, offset: 1088)
!18036 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !17990, file: !624, line: 45, baseType: !238, size: 32, align: 32, offset: 1152)
!18037 = !DIDerivedType(tag: DW_TAG_member, name: "params", scope: !17990, file: !624, line: 46, baseType: !18038, size: 1280, align: 64, offset: 1216)
!18038 = !DICompositeType(tag: DW_TAG_array_type, baseType: !885, size: 1280, align: 64, elements: !18039)
!18039 = !{!18040}
!18040 = !DISubrange(count: 4)
!18041 = !DIDerivedType(tag: DW_TAG_member, name: "tblend", scope: !17990, file: !624, line: 47, baseType: !238, size: 32, align: 32, offset: 2496)
!18042 = !DIDerivedType(tag: DW_TAG_member, name: "prev_frame", scope: !17990, file: !624, line: 48, baseType: !323, size: 64, align: 64, offset: 2560)
!18043 = !DILocation(line: 123, column: 74, scope: !17984)
!18044 = !DILocation(line: 123, column: 78, scope: !17984)
!18045 = !DILocation(line: 123, column: 83, scope: !17984)
!18046 = !DILocation(line: 123, column: 111, scope: !17984)
!18047 = !DILocation(line: 123, column: 114, scope: !17984)
!18048 = !DILocation(line: 123, column: 89, scope: !17984)
!18049 = !DILocation(line: 123, column: 119, scope: !17984)
!18050 = distinct !DISubprogram(name: "init", scope: !624, file: !624, line: 513, type: !447, isLocal: true, isDefinition: true, scopeLine: 514, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!18051 = !DILocalVariable(name: "ctx", arg: 1, scope: !18050, file: !624, line: 513, type: !211)
!18052 = !DILocation(line: 513, column: 56, scope: !18050)
!18053 = !DILocalVariable(name: "s", scope: !18050, file: !624, line: 515, type: !17988)
!18054 = !DILocation(line: 515, column: 19, scope: !18050)
!18055 = !DILocation(line: 515, column: 23, scope: !18050)
!18056 = !DILocation(line: 515, column: 28, scope: !18050)
!18057 = !DILocation(line: 517, column: 25, scope: !18050)
!18058 = !DILocation(line: 517, column: 30, scope: !18050)
!18059 = !DILocation(line: 517, column: 38, scope: !18050)
!18060 = !DILocation(line: 517, column: 18, scope: !18050)
!18061 = !DILocation(line: 517, column: 17, scope: !18050)
!18062 = !DILocation(line: 517, column: 5, scope: !18050)
!18063 = !DILocation(line: 517, column: 8, scope: !18050)
!18064 = !DILocation(line: 517, column: 15, scope: !18050)
!18065 = !DILocation(line: 519, column: 5, scope: !18050)
!18066 = !DILocation(line: 519, column: 8, scope: !18050)
!18067 = !DILocation(line: 519, column: 11, scope: !18050)
!18068 = !DILocation(line: 519, column: 20, scope: !18050)
!18069 = !DILocation(line: 520, column: 5, scope: !18050)
!18070 = distinct !DISubprogram(name: "uninit", scope: !624, file: !624, line: 547, type: !457, isLocal: true, isDefinition: true, scopeLine: 548, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!18071 = !DILocalVariable(name: "ctx", arg: 1, scope: !18070, file: !624, line: 547, type: !211)
!18072 = !DILocation(line: 547, column: 59, scope: !18070)
!18073 = !DILocalVariable(name: "s", scope: !18070, file: !624, line: 549, type: !17988)
!18074 = !DILocation(line: 549, column: 19, scope: !18070)
!18075 = !DILocation(line: 549, column: 23, scope: !18070)
!18076 = !DILocation(line: 549, column: 28, scope: !18070)
!18077 = !DILocalVariable(name: "i", scope: !18070, file: !624, line: 550, type: !238)
!18078 = !DILocation(line: 550, column: 9, scope: !18070)
!18079 = !DILocation(line: 552, column: 26, scope: !18070)
!18080 = !DILocation(line: 552, column: 29, scope: !18070)
!18081 = !DILocation(line: 552, column: 5, scope: !18070)
!18082 = !DILocation(line: 553, column: 20, scope: !18070)
!18083 = !DILocation(line: 553, column: 23, scope: !18070)
!18084 = !DILocation(line: 553, column: 5, scope: !18070)
!18085 = !DILocation(line: 555, column: 12, scope: !18086)
!18086 = distinct !DILexicalBlock(scope: !18070, file: !624, line: 555, column: 5)
!18087 = !DILocation(line: 555, column: 10, scope: !18086)
!18088 = !DILocation(line: 555, column: 17, scope: !18089)
!18089 = !DILexicalBlockFile(scope: !18090, file: !624, discriminator: 1)
!18090 = distinct !DILexicalBlock(scope: !18086, file: !624, line: 555, column: 5)
!18091 = !DILocation(line: 555, column: 19, scope: !18089)
!18092 = !DILocation(line: 555, column: 5, scope: !18089)
!18093 = !DILocation(line: 556, column: 32, scope: !18090)
!18094 = !DILocation(line: 556, column: 22, scope: !18090)
!18095 = !DILocation(line: 556, column: 25, scope: !18090)
!18096 = !DILocation(line: 556, column: 35, scope: !18090)
!18097 = !DILocation(line: 556, column: 9, scope: !18090)
!18098 = !DILocation(line: 555, column: 68, scope: !18099)
!18099 = !DILexicalBlockFile(scope: !18090, file: !624, discriminator: 2)
!18100 = !DILocation(line: 555, column: 5, scope: !18099)
!18101 = distinct !{!18101, !18102}
!18102 = !DILocation(line: 555, column: 5, scope: !18070)
!18103 = !DILocation(line: 557, column: 1, scope: !18070)
!18104 = !DILocalVariable(name: "ctx", arg: 1, scope: !868, file: !624, line: 523, type: !211)
!18105 = !DILocation(line: 523, column: 43, scope: !868)
!18106 = !DILocalVariable(name: "fmts_list", scope: !868, file: !624, line: 541, type: !562)
!18107 = !DILocation(line: 541, column: 22, scope: !868)
!18108 = !DILocation(line: 541, column: 34, scope: !868)
!18109 = !DILocation(line: 542, column: 10, scope: !18110)
!18110 = distinct !DILexicalBlock(scope: !868, file: !624, line: 542, column: 9)
!18111 = !DILocation(line: 542, column: 9, scope: !868)
!18112 = !DILocation(line: 543, column: 9, scope: !18110)
!18113 = !DILocation(line: 544, column: 34, scope: !868)
!18114 = !DILocation(line: 544, column: 39, scope: !868)
!18115 = !DILocation(line: 544, column: 12, scope: !868)
!18116 = !DILocation(line: 544, column: 5, scope: !868)
!18117 = !DILocation(line: 545, column: 1, scope: !868)
!18118 = distinct !DISubprogram(name: "activate", scope: !624, file: !624, line: 798, type: !447, isLocal: true, isDefinition: true, scopeLine: 799, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!18119 = !DILocalVariable(name: "ctx", arg: 1, scope: !18118, file: !624, line: 798, type: !211)
!18120 = !DILocation(line: 798, column: 38, scope: !18118)
!18121 = !DILocalVariable(name: "s", scope: !18118, file: !624, line: 800, type: !17988)
!18122 = !DILocation(line: 800, column: 19, scope: !18118)
!18123 = !DILocation(line: 800, column: 23, scope: !18118)
!18124 = !DILocation(line: 800, column: 28, scope: !18118)
!18125 = !DILocation(line: 801, column: 35, scope: !18118)
!18126 = !DILocation(line: 801, column: 38, scope: !18118)
!18127 = !DILocation(line: 801, column: 12, scope: !18118)
!18128 = !DILocation(line: 801, column: 5, scope: !18118)
!18129 = distinct !DISubprogram(name: "config_output", scope: !624, file: !624, line: 728, type: !436, isLocal: true, isDefinition: true, scopeLine: 729, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!18130 = !DILocalVariable(name: "outlink", arg: 1, scope: !18129, file: !624, line: 728, type: !424)
!18131 = !DILocation(line: 728, column: 40, scope: !18129)
!18132 = !DILocalVariable(name: "ctx", scope: !18129, file: !624, line: 730, type: !211)
!18133 = !DILocation(line: 730, column: 22, scope: !18129)
!18134 = !DILocation(line: 730, column: 28, scope: !18129)
!18135 = !DILocation(line: 730, column: 37, scope: !18129)
!18136 = !DILocalVariable(name: "toplink", scope: !18129, file: !624, line: 731, type: !424)
!18137 = !DILocation(line: 731, column: 19, scope: !18129)
!18138 = !DILocation(line: 731, column: 29, scope: !18129)
!18139 = !DILocation(line: 731, column: 34, scope: !18129)
!18140 = !DILocalVariable(name: "s", scope: !18129, file: !624, line: 732, type: !17988)
!18141 = !DILocation(line: 732, column: 19, scope: !18129)
!18142 = !DILocation(line: 732, column: 23, scope: !18129)
!18143 = !DILocation(line: 732, column: 28, scope: !18129)
!18144 = !DILocalVariable(name: "pix_desc", scope: !18129, file: !624, line: 733, type: !18145)
!18145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18146, size: 64, align: 64)
!18146 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !18147)
!18147 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPixFmtDescriptor", file: !18148, line: 123, baseType: !18149)
!18148 = !DIFile(filename: "./libavutil/pixdesc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!18149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPixFmtDescriptor", file: !18148, line: 81, size: 1280, align: 64, elements: !18150)
!18150 = !{!18151, !18152, !18153, !18154, !18155, !18156, !18169}
!18151 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !18149, file: !18148, line: 82, baseType: !222, size: 64, align: 64)
!18152 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !18149, file: !18148, line: 83, baseType: !330, size: 8, align: 8, offset: 64)
!18153 = !DIDerivedType(tag: DW_TAG_member, name: "log2_chroma_w", scope: !18149, file: !18148, line: 92, baseType: !330, size: 8, align: 8, offset: 72)
!18154 = !DIDerivedType(tag: DW_TAG_member, name: "log2_chroma_h", scope: !18149, file: !18148, line: 101, baseType: !330, size: 8, align: 8, offset: 80)
!18155 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !18149, file: !18148, line: 106, baseType: !354, size: 64, align: 64, offset: 128)
!18156 = !DIDerivedType(tag: DW_TAG_member, name: "comp", scope: !18149, file: !18148, line: 117, baseType: !18157, size: 1024, align: 32, offset: 192)
!18157 = !DICompositeType(tag: DW_TAG_array_type, baseType: !18158, size: 1024, align: 32, elements: !18039)
!18158 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVComponentDescriptor", file: !18148, line: 70, baseType: !18159)
!18159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVComponentDescriptor", file: !18148, line: 31, size: 256, align: 32, elements: !18160)
!18160 = !{!18161, !18162, !18163, !18164, !18165, !18166, !18167, !18168}
!18161 = !DIDerivedType(tag: DW_TAG_member, name: "plane", scope: !18159, file: !18148, line: 35, baseType: !238, size: 32, align: 32)
!18162 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !18159, file: !18148, line: 41, baseType: !238, size: 32, align: 32, offset: 32)
!18163 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !18159, file: !18148, line: 47, baseType: !238, size: 32, align: 32, offset: 64)
!18164 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !18159, file: !18148, line: 53, baseType: !238, size: 32, align: 32, offset: 96)
!18165 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !18159, file: !18148, line: 58, baseType: !238, size: 32, align: 32, offset: 128)
!18166 = !DIDerivedType(tag: DW_TAG_member, name: "step_minus1", scope: !18159, file: !18148, line: 62, baseType: !238, size: 32, align: 32, offset: 160)
!18167 = !DIDerivedType(tag: DW_TAG_member, name: "depth_minus1", scope: !18159, file: !18148, line: 65, baseType: !238, size: 32, align: 32, offset: 192)
!18168 = !DIDerivedType(tag: DW_TAG_member, name: "offset_plus1", scope: !18159, file: !18148, line: 68, baseType: !238, size: 32, align: 32, offset: 224)
!18169 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !18149, file: !18148, line: 122, baseType: !222, size: 64, align: 64, offset: 1216)
!18170 = !DILocation(line: 733, column: 31, scope: !18129)
!18171 = !DILocation(line: 733, column: 62, scope: !18129)
!18172 = !DILocation(line: 733, column: 71, scope: !18129)
!18173 = !DILocation(line: 733, column: 42, scope: !18129)
!18174 = !DILocalVariable(name: "ret", scope: !18129, file: !624, line: 734, type: !238)
!18175 = !DILocation(line: 734, column: 9, scope: !18129)
!18176 = !DILocalVariable(name: "plane", scope: !18129, file: !624, line: 734, type: !238)
!18177 = !DILocation(line: 734, column: 14, scope: !18129)
!18178 = !DILocation(line: 736, column: 10, scope: !18179)
!18179 = distinct !DILexicalBlock(scope: !18129, file: !624, line: 736, column: 9)
!18180 = !DILocation(line: 736, column: 13, scope: !18179)
!18181 = !DILocation(line: 736, column: 9, scope: !18129)
!18182 = !DILocalVariable(name: "bottomlink", scope: !18183, file: !624, line: 737, type: !424)
!18183 = distinct !DILexicalBlock(scope: !18179, file: !624, line: 736, column: 21)
!18184 = !DILocation(line: 737, column: 23, scope: !18183)
!18185 = !DILocation(line: 737, column: 36, scope: !18183)
!18186 = !DILocation(line: 737, column: 41, scope: !18183)
!18187 = !DILocation(line: 739, column: 13, scope: !18188)
!18188 = distinct !DILexicalBlock(scope: !18183, file: !624, line: 739, column: 13)
!18189 = !DILocation(line: 739, column: 22, scope: !18188)
!18190 = !DILocation(line: 739, column: 32, scope: !18188)
!18191 = !DILocation(line: 739, column: 44, scope: !18188)
!18192 = !DILocation(line: 739, column: 29, scope: !18188)
!18193 = !DILocation(line: 739, column: 13, scope: !18183)
!18194 = !DILocation(line: 740, column: 20, scope: !18195)
!18195 = distinct !DILexicalBlock(scope: !18188, file: !624, line: 739, column: 52)
!18196 = !DILocation(line: 740, column: 13, scope: !18195)
!18197 = !DILocation(line: 741, column: 13, scope: !18195)
!18198 = !DILocation(line: 743, column: 13, scope: !18199)
!18199 = distinct !DILexicalBlock(scope: !18183, file: !624, line: 743, column: 13)
!18200 = !DILocation(line: 743, column: 22, scope: !18199)
!18201 = !DILocation(line: 743, column: 27, scope: !18199)
!18202 = !DILocation(line: 743, column: 39, scope: !18199)
!18203 = !DILocation(line: 743, column: 24, scope: !18199)
!18204 = !DILocation(line: 743, column: 41, scope: !18199)
!18205 = !DILocation(line: 743, column: 44, scope: !18206)
!18206 = !DILexicalBlockFile(scope: !18199, file: !624, discriminator: 1)
!18207 = !DILocation(line: 743, column: 53, scope: !18206)
!18208 = !DILocation(line: 743, column: 58, scope: !18206)
!18209 = !DILocation(line: 743, column: 70, scope: !18206)
!18210 = !DILocation(line: 743, column: 55, scope: !18206)
!18211 = !DILocation(line: 743, column: 13, scope: !18206)
!18212 = !DILocation(line: 744, column: 20, scope: !18213)
!18213 = distinct !DILexicalBlock(scope: !18199, file: !624, line: 743, column: 73)
!18214 = !DILocation(line: 747, column: 20, scope: !18213)
!18215 = !DILocation(line: 747, column: 25, scope: !18213)
!18216 = !DILocation(line: 747, column: 39, scope: !18213)
!18217 = !DILocation(line: 747, column: 45, scope: !18213)
!18218 = !DILocation(line: 747, column: 54, scope: !18213)
!18219 = !DILocation(line: 747, column: 57, scope: !18213)
!18220 = !DILocation(line: 747, column: 66, scope: !18213)
!18221 = !DILocation(line: 748, column: 20, scope: !18213)
!18222 = !DILocation(line: 748, column: 25, scope: !18213)
!18223 = !DILocation(line: 748, column: 39, scope: !18213)
!18224 = !DILocation(line: 748, column: 45, scope: !18213)
!18225 = !DILocation(line: 748, column: 57, scope: !18213)
!18226 = !DILocation(line: 748, column: 60, scope: !18213)
!18227 = !DILocation(line: 748, column: 72, scope: !18213)
!18228 = !DILocation(line: 744, column: 13, scope: !18213)
!18229 = !DILocation(line: 749, column: 13, scope: !18213)
!18230 = !DILocation(line: 751, column: 5, scope: !18183)
!18231 = !DILocation(line: 753, column: 18, scope: !18129)
!18232 = !DILocation(line: 753, column: 27, scope: !18129)
!18233 = !DILocation(line: 753, column: 5, scope: !18129)
!18234 = !DILocation(line: 753, column: 14, scope: !18129)
!18235 = !DILocation(line: 753, column: 16, scope: !18129)
!18236 = !DILocation(line: 754, column: 18, scope: !18129)
!18237 = !DILocation(line: 754, column: 27, scope: !18129)
!18238 = !DILocation(line: 754, column: 5, scope: !18129)
!18239 = !DILocation(line: 754, column: 14, scope: !18129)
!18240 = !DILocation(line: 754, column: 16, scope: !18129)
!18241 = !DILocation(line: 755, column: 5, scope: !18129)
!18242 = !DILocation(line: 755, column: 14, scope: !18129)
!18243 = !DILocation(line: 755, column: 26, scope: !18129)
!18244 = !DILocation(line: 755, column: 35, scope: !18129)
!18245 = !DILocation(line: 756, column: 5, scope: !18129)
!18246 = !DILocation(line: 756, column: 14, scope: !18129)
!18247 = !DILocation(line: 756, column: 36, scope: !18129)
!18248 = !DILocation(line: 756, column: 45, scope: !18129)
!18249 = !DILocation(line: 757, column: 5, scope: !18129)
!18250 = !DILocation(line: 757, column: 14, scope: !18129)
!18251 = !DILocation(line: 757, column: 27, scope: !18129)
!18252 = !DILocation(line: 757, column: 36, scope: !18129)
!18253 = !DILocation(line: 759, column: 15, scope: !18129)
!18254 = !DILocation(line: 759, column: 25, scope: !18129)
!18255 = !DILocation(line: 759, column: 5, scope: !18129)
!18256 = !DILocation(line: 759, column: 8, scope: !18129)
!18257 = !DILocation(line: 759, column: 13, scope: !18129)
!18258 = !DILocation(line: 760, column: 15, scope: !18129)
!18259 = !DILocation(line: 760, column: 25, scope: !18129)
!18260 = !DILocation(line: 760, column: 5, scope: !18129)
!18261 = !DILocation(line: 760, column: 8, scope: !18129)
!18262 = !DILocation(line: 760, column: 13, scope: !18129)
!18263 = !DILocation(line: 762, column: 16, scope: !18129)
!18264 = !DILocation(line: 762, column: 26, scope: !18129)
!18265 = !DILocation(line: 762, column: 34, scope: !18129)
!18266 = !DILocation(line: 762, column: 5, scope: !18129)
!18267 = !DILocation(line: 762, column: 8, scope: !18129)
!18268 = !DILocation(line: 762, column: 14, scope: !18129)
!18269 = !DILocation(line: 763, column: 44, scope: !18129)
!18270 = !DILocation(line: 763, column: 53, scope: !18129)
!18271 = !DILocation(line: 763, column: 20, scope: !18129)
!18272 = !DILocation(line: 763, column: 5, scope: !18129)
!18273 = !DILocation(line: 763, column: 8, scope: !18129)
!18274 = !DILocation(line: 763, column: 18, scope: !18129)
!18275 = !DILocation(line: 765, column: 10, scope: !18276)
!18276 = distinct !DILexicalBlock(scope: !18129, file: !624, line: 765, column: 9)
!18277 = !DILocation(line: 765, column: 13, scope: !18276)
!18278 = !DILocation(line: 765, column: 9, scope: !18129)
!18279 = !DILocation(line: 766, column: 49, scope: !18280)
!18280 = distinct !DILexicalBlock(scope: !18276, file: !624, line: 766, column: 13)
!18281 = !DILocation(line: 766, column: 52, scope: !18280)
!18282 = !DILocation(line: 766, column: 56, scope: !18280)
!18283 = !DILocation(line: 766, column: 20, scope: !18280)
!18284 = !DILocation(line: 766, column: 18, scope: !18280)
!18285 = !DILocation(line: 766, column: 62, scope: !18280)
!18286 = !DILocation(line: 766, column: 13, scope: !18276)
!18287 = !DILocation(line: 767, column: 20, scope: !18280)
!18288 = !DILocation(line: 767, column: 13, scope: !18280)
!18289 = !DILocation(line: 766, column: 64, scope: !18290)
!18290 = !DILexicalBlockFile(scope: !18280, file: !624, discriminator: 1)
!18291 = !DILocation(line: 769, column: 16, scope: !18292)
!18292 = distinct !DILexicalBlock(scope: !18129, file: !624, line: 769, column: 5)
!18293 = !DILocation(line: 769, column: 10, scope: !18292)
!18294 = !DILocation(line: 769, column: 21, scope: !18295)
!18295 = !DILexicalBlockFile(scope: !18296, file: !624, discriminator: 1)
!18296 = distinct !DILexicalBlock(scope: !18292, file: !624, line: 769, column: 5)
!18297 = !DILocation(line: 769, column: 27, scope: !18295)
!18298 = !DILocation(line: 769, column: 5, scope: !18295)
!18299 = !DILocalVariable(name: "param", scope: !18300, file: !624, line: 770, type: !884)
!18300 = distinct !DILexicalBlock(scope: !18296, file: !624, line: 769, column: 84)
!18301 = !DILocation(line: 770, column: 23, scope: !18300)
!18302 = !DILocation(line: 770, column: 42, scope: !18300)
!18303 = !DILocation(line: 770, column: 32, scope: !18300)
!18304 = !DILocation(line: 770, column: 35, scope: !18300)
!18305 = !DILocation(line: 772, column: 13, scope: !18306)
!18306 = distinct !DILexicalBlock(scope: !18300, file: !624, line: 772, column: 13)
!18307 = !DILocation(line: 772, column: 16, scope: !18306)
!18308 = !DILocation(line: 772, column: 25, scope: !18306)
!18309 = !DILocation(line: 772, column: 13, scope: !18300)
!18310 = !DILocation(line: 773, column: 27, scope: !18306)
!18311 = !DILocation(line: 773, column: 30, scope: !18306)
!18312 = !DILocation(line: 773, column: 13, scope: !18306)
!18313 = !DILocation(line: 773, column: 20, scope: !18306)
!18314 = !DILocation(line: 773, column: 25, scope: !18306)
!18315 = !DILocation(line: 774, column: 13, scope: !18316)
!18316 = distinct !DILexicalBlock(scope: !18300, file: !624, line: 774, column: 13)
!18317 = !DILocation(line: 774, column: 16, scope: !18316)
!18318 = !DILocation(line: 774, column: 28, scope: !18316)
!18319 = !DILocation(line: 774, column: 13, scope: !18300)
!18320 = !DILocation(line: 775, column: 30, scope: !18316)
!18321 = !DILocation(line: 775, column: 33, scope: !18316)
!18322 = !DILocation(line: 775, column: 13, scope: !18316)
!18323 = !DILocation(line: 775, column: 20, scope: !18316)
!18324 = !DILocation(line: 775, column: 28, scope: !18316)
!18325 = !DILocation(line: 777, column: 23, scope: !18300)
!18326 = !DILocation(line: 777, column: 30, scope: !18300)
!18327 = !DILocation(line: 777, column: 33, scope: !18300)
!18328 = !DILocation(line: 777, column: 9, scope: !18300)
!18329 = !DILocation(line: 779, column: 13, scope: !18330)
!18330 = distinct !DILexicalBlock(scope: !18300, file: !624, line: 779, column: 13)
!18331 = !DILocation(line: 779, column: 16, scope: !18330)
!18332 = !DILocation(line: 779, column: 25, scope: !18330)
!18333 = !DILocation(line: 779, column: 29, scope: !18334)
!18334 = !DILexicalBlockFile(scope: !18330, file: !624, discriminator: 1)
!18335 = !DILocation(line: 779, column: 36, scope: !18334)
!18336 = !DILocation(line: 779, column: 13, scope: !18334)
!18337 = !DILocation(line: 780, column: 41, scope: !18338)
!18338 = distinct !DILexicalBlock(scope: !18330, file: !624, line: 779, column: 46)
!18339 = !DILocation(line: 780, column: 44, scope: !18338)
!18340 = !DILocation(line: 780, column: 31, scope: !18338)
!18341 = !DILocation(line: 780, column: 13, scope: !18338)
!18342 = !DILocation(line: 780, column: 20, scope: !18338)
!18343 = !DILocation(line: 780, column: 29, scope: !18338)
!18344 = !DILocation(line: 781, column: 18, scope: !18345)
!18345 = distinct !DILexicalBlock(scope: !18338, file: !624, line: 781, column: 17)
!18346 = !DILocation(line: 781, column: 25, scope: !18345)
!18347 = !DILocation(line: 781, column: 17, scope: !18338)
!18348 = !DILocation(line: 782, column: 17, scope: !18345)
!18349 = !DILocation(line: 783, column: 9, scope: !18338)
!18350 = !DILocation(line: 784, column: 13, scope: !18351)
!18351 = distinct !DILexicalBlock(scope: !18300, file: !624, line: 784, column: 13)
!18352 = !DILocation(line: 784, column: 20, scope: !18351)
!18353 = !DILocation(line: 784, column: 13, scope: !18300)
!18354 = !DILocation(line: 785, column: 34, scope: !18355)
!18355 = distinct !DILexicalBlock(scope: !18351, file: !624, line: 784, column: 30)
!18356 = !DILocation(line: 785, column: 41, scope: !18355)
!18357 = !DILocation(line: 785, column: 44, scope: !18355)
!18358 = !DILocation(line: 785, column: 51, scope: !18355)
!18359 = !DILocation(line: 786, column: 59, scope: !18355)
!18360 = !DILocation(line: 785, column: 19, scope: !18355)
!18361 = !DILocation(line: 785, column: 17, scope: !18355)
!18362 = !DILocation(line: 787, column: 17, scope: !18363)
!18363 = distinct !DILexicalBlock(scope: !18355, file: !624, line: 787, column: 17)
!18364 = !DILocation(line: 787, column: 21, scope: !18363)
!18365 = !DILocation(line: 787, column: 17, scope: !18355)
!18366 = !DILocation(line: 788, column: 24, scope: !18363)
!18367 = !DILocation(line: 788, column: 17, scope: !18363)
!18368 = !DILocation(line: 789, column: 28, scope: !18355)
!18369 = !DILocation(line: 789, column: 31, scope: !18355)
!18370 = !DILocation(line: 789, column: 37, scope: !18355)
!18371 = !DILocation(line: 789, column: 13, scope: !18355)
!18372 = !DILocation(line: 789, column: 20, scope: !18355)
!18373 = !DILocation(line: 789, column: 26, scope: !18355)
!18374 = !DILocation(line: 790, column: 9, scope: !18355)
!18375 = !DILocation(line: 791, column: 5, scope: !18300)
!18376 = !DILocation(line: 769, column: 80, scope: !18377)
!18377 = !DILexicalBlockFile(scope: !18296, file: !624, discriminator: 2)
!18378 = !DILocation(line: 769, column: 5, scope: !18377)
!18379 = distinct !{!18379, !18380}
!18380 = !DILocation(line: 769, column: 5, scope: !18129)
!18381 = !DILocation(line: 793, column: 12, scope: !18129)
!18382 = !DILocation(line: 793, column: 15, scope: !18129)
!18383 = !DILocation(line: 793, column: 12, scope: !18384)
!18384 = !DILexicalBlockFile(scope: !18129, file: !624, discriminator: 1)
!18385 = !DILocation(line: 793, column: 52, scope: !18386)
!18386 = !DILexicalBlockFile(scope: !18129, file: !624, discriminator: 2)
!18387 = !DILocation(line: 793, column: 55, scope: !18386)
!18388 = !DILocation(line: 793, column: 28, scope: !18386)
!18389 = !DILocation(line: 793, column: 12, scope: !18386)
!18390 = !DILocation(line: 793, column: 12, scope: !18391)
!18391 = !DILexicalBlockFile(scope: !18129, file: !624, discriminator: 3)
!18392 = !DILocation(line: 793, column: 5, scope: !18391)
!18393 = !DILocation(line: 794, column: 1, scope: !18129)
!18394 = distinct !DISubprogram(name: "blend_expr_16bit", scope: !624, file: !624, line: 435, type: !1531, isLocal: true, isDefinition: true, scopeLine: 435, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!18395 = !DILocalVariable(name: "_top", arg: 1, scope: !18394, file: !624, line: 435, type: !900)
!18396 = !DILocation(line: 435, column: 45, scope: !18394)
!18397 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !18394, file: !624, line: 435, type: !902)
!18398 = !DILocation(line: 435, column: 61, scope: !18394)
!18399 = !DILocalVariable(name: "_bottom", arg: 3, scope: !18394, file: !624, line: 435, type: !900)
!18400 = !DILocation(line: 435, column: 90, scope: !18394)
!18401 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !18394, file: !624, line: 435, type: !902)
!18402 = !DILocation(line: 435, column: 109, scope: !18394)
!18403 = !DILocalVariable(name: "_dst", arg: 5, scope: !18394, file: !624, line: 435, type: !329)
!18404 = !DILocation(line: 435, column: 135, scope: !18394)
!18405 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !18394, file: !624, line: 435, type: !902)
!18406 = !DILocation(line: 435, column: 151, scope: !18394)
!18407 = !DILocalVariable(name: "width", arg: 7, scope: !18394, file: !624, line: 435, type: !902)
!18408 = !DILocation(line: 435, column: 175, scope: !18394)
!18409 = !DILocalVariable(name: "height", arg: 8, scope: !18394, file: !624, line: 435, type: !902)
!18410 = !DILocation(line: 435, column: 192, scope: !18394)
!18411 = !DILocalVariable(name: "param", arg: 9, scope: !18394, file: !624, line: 435, type: !884)
!18412 = !DILocation(line: 435, column: 214, scope: !18394)
!18413 = !DILocalVariable(name: "values", arg: 10, scope: !18394, file: !624, line: 435, type: !544)
!18414 = !DILocation(line: 435, column: 229, scope: !18394)
!18415 = !DILocalVariable(name: "starty", arg: 11, scope: !18394, file: !624, line: 435, type: !238)
!18416 = !DILocation(line: 435, column: 241, scope: !18394)
!18417 = !DILocalVariable(name: "top", scope: !18394, file: !624, line: 435, type: !839)
!18418 = !DILocation(line: 435, column: 267, scope: !18394)
!18419 = !DILocation(line: 435, column: 284, scope: !18394)
!18420 = !DILocation(line: 435, column: 273, scope: !18394)
!18421 = !DILocalVariable(name: "bottom", scope: !18394, file: !624, line: 435, type: !839)
!18422 = !DILocation(line: 435, column: 306, scope: !18394)
!18423 = !DILocation(line: 435, column: 326, scope: !18394)
!18424 = !DILocation(line: 435, column: 315, scope: !18394)
!18425 = !DILocalVariable(name: "dst", scope: !18394, file: !624, line: 435, type: !843)
!18426 = !DILocation(line: 435, column: 345, scope: !18394)
!18427 = !DILocation(line: 435, column: 362, scope: !18394)
!18428 = !DILocation(line: 435, column: 351, scope: !18394)
!18429 = !DILocalVariable(name: "e", scope: !18394, file: !624, line: 435, type: !891)
!18430 = !DILocation(line: 435, column: 376, scope: !18394)
!18431 = !DILocation(line: 435, column: 380, scope: !18394)
!18432 = !DILocation(line: 435, column: 387, scope: !18394)
!18433 = !DILocalVariable(name: "y", scope: !18394, file: !624, line: 435, type: !238)
!18434 = !DILocation(line: 435, column: 394, scope: !18394)
!18435 = !DILocalVariable(name: "x", scope: !18394, file: !624, line: 435, type: !238)
!18436 = !DILocation(line: 435, column: 397, scope: !18394)
!18437 = !DILocation(line: 435, column: 413, scope: !18394)
!18438 = !DILocation(line: 435, column: 432, scope: !18394)
!18439 = !DILocation(line: 435, column: 454, scope: !18394)
!18440 = !DILocation(line: 435, column: 467, scope: !18441)
!18441 = distinct !DILexicalBlock(scope: !18394, file: !624, line: 435, column: 460)
!18442 = !DILocation(line: 435, column: 465, scope: !18441)
!18443 = !DILocation(line: 435, column: 472, scope: !18444)
!18444 = !DILexicalBlockFile(scope: !18445, file: !624, discriminator: 1)
!18445 = distinct !DILexicalBlock(scope: !18441, file: !624, line: 435, column: 460)
!18446 = !DILocation(line: 435, column: 476, scope: !18444)
!18447 = !DILocation(line: 435, column: 474, scope: !18444)
!18448 = !DILocation(line: 435, column: 460, scope: !18444)
!18449 = !DILocation(line: 435, column: 507, scope: !18450)
!18450 = !DILexicalBlockFile(scope: !18451, file: !624, discriminator: 2)
!18451 = distinct !DILexicalBlock(scope: !18445, file: !624, line: 435, column: 489)
!18452 = !DILocation(line: 435, column: 511, scope: !18450)
!18453 = !DILocation(line: 435, column: 509, scope: !18450)
!18454 = !DILocation(line: 435, column: 491, scope: !18450)
!18455 = !DILocation(line: 435, column: 505, scope: !18450)
!18456 = !DILocation(line: 435, column: 526, scope: !18450)
!18457 = !DILocation(line: 435, column: 524, scope: !18450)
!18458 = !DILocation(line: 435, column: 531, scope: !18459)
!18459 = !DILexicalBlockFile(scope: !18460, file: !624, discriminator: 3)
!18460 = distinct !DILexicalBlock(scope: !18461, file: !624, line: 435, column: 519)
!18461 = distinct !DILexicalBlock(scope: !18451, file: !624, line: 435, column: 519)
!18462 = !DILocation(line: 435, column: 535, scope: !18459)
!18463 = !DILocation(line: 435, column: 533, scope: !18459)
!18464 = !DILocation(line: 435, column: 519, scope: !18459)
!18465 = !DILocation(line: 435, column: 565, scope: !18466)
!18466 = !DILexicalBlockFile(scope: !18467, file: !624, discriminator: 4)
!18467 = distinct !DILexicalBlock(scope: !18460, file: !624, line: 435, column: 547)
!18468 = !DILocation(line: 435, column: 549, scope: !18466)
!18469 = !DILocation(line: 435, column: 563, scope: !18466)
!18470 = !DILocation(line: 435, column: 606, scope: !18466)
!18471 = !DILocation(line: 435, column: 602, scope: !18466)
!18472 = !DILocation(line: 435, column: 586, scope: !18466)
!18473 = !DILocation(line: 435, column: 600, scope: !18466)
!18474 = !DILocation(line: 435, column: 568, scope: !18466)
!18475 = !DILocation(line: 435, column: 584, scope: !18466)
!18476 = !DILocation(line: 435, column: 654, scope: !18466)
!18477 = !DILocation(line: 435, column: 647, scope: !18466)
!18478 = !DILocation(line: 435, column: 631, scope: !18466)
!18479 = !DILocation(line: 435, column: 645, scope: !18466)
!18480 = !DILocation(line: 435, column: 610, scope: !18466)
!18481 = !DILocation(line: 435, column: 629, scope: !18466)
!18482 = !DILocation(line: 435, column: 680, scope: !18466)
!18483 = !DILocation(line: 435, column: 683, scope: !18466)
!18484 = !DILocation(line: 435, column: 667, scope: !18466)
!18485 = !DILocation(line: 435, column: 662, scope: !18466)
!18486 = !DILocation(line: 435, column: 658, scope: !18466)
!18487 = !DILocation(line: 435, column: 665, scope: !18466)
!18488 = !DILocation(line: 435, column: 4, scope: !18466)
!18489 = !DILocation(line: 435, column: 543, scope: !18490)
!18490 = !DILexicalBlockFile(scope: !18460, file: !624, discriminator: 5)
!18491 = !DILocation(line: 435, column: 519, scope: !18490)
!18492 = distinct !{!18492, !18493}
!18493 = !DILocation(line: 435, column: 519, scope: !18451)
!18494 = !DILocation(line: 435, column: 13, scope: !18495)
!18495 = !DILexicalBlockFile(scope: !18451, file: !624, discriminator: 6)
!18496 = !DILocation(line: 435, column: 10, scope: !18495)
!18497 = !DILocation(line: 435, column: 34, scope: !18495)
!18498 = !DILocation(line: 435, column: 31, scope: !18495)
!18499 = !DILocation(line: 435, column: 58, scope: !18495)
!18500 = !DILocation(line: 435, column: 55, scope: !18495)
!18501 = !DILocation(line: 435, column: 75, scope: !18495)
!18502 = !DILocation(line: 435, column: 485, scope: !18503)
!18503 = !DILexicalBlockFile(scope: !18445, file: !624, discriminator: 7)
!18504 = !DILocation(line: 435, column: 460, scope: !18503)
!18505 = distinct !{!18505, !18506}
!18506 = !DILocation(line: 435, column: 460, scope: !18394)
!18507 = !DILocation(line: 435, column: 77, scope: !18508)
!18508 = !DILexicalBlockFile(scope: !18394, file: !624, discriminator: 8)
!18509 = distinct !DISubprogram(name: "blend_expr_8bit", scope: !624, file: !624, line: 434, type: !1531, isLocal: true, isDefinition: true, scopeLine: 434, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!18510 = !DILocalVariable(name: "_top", arg: 1, scope: !18509, file: !624, line: 434, type: !900)
!18511 = !DILocation(line: 434, column: 44, scope: !18509)
!18512 = !DILocalVariable(name: "top_linesize", arg: 2, scope: !18509, file: !624, line: 434, type: !902)
!18513 = !DILocation(line: 434, column: 60, scope: !18509)
!18514 = !DILocalVariable(name: "_bottom", arg: 3, scope: !18509, file: !624, line: 434, type: !900)
!18515 = !DILocation(line: 434, column: 89, scope: !18509)
!18516 = !DILocalVariable(name: "bottom_linesize", arg: 4, scope: !18509, file: !624, line: 434, type: !902)
!18517 = !DILocation(line: 434, column: 108, scope: !18509)
!18518 = !DILocalVariable(name: "_dst", arg: 5, scope: !18509, file: !624, line: 434, type: !329)
!18519 = !DILocation(line: 434, column: 134, scope: !18509)
!18520 = !DILocalVariable(name: "dst_linesize", arg: 6, scope: !18509, file: !624, line: 434, type: !902)
!18521 = !DILocation(line: 434, column: 150, scope: !18509)
!18522 = !DILocalVariable(name: "width", arg: 7, scope: !18509, file: !624, line: 434, type: !902)
!18523 = !DILocation(line: 434, column: 174, scope: !18509)
!18524 = !DILocalVariable(name: "height", arg: 8, scope: !18509, file: !624, line: 434, type: !902)
!18525 = !DILocation(line: 434, column: 191, scope: !18509)
!18526 = !DILocalVariable(name: "param", arg: 9, scope: !18509, file: !624, line: 434, type: !884)
!18527 = !DILocation(line: 434, column: 213, scope: !18509)
!18528 = !DILocalVariable(name: "values", arg: 10, scope: !18509, file: !624, line: 434, type: !544)
!18529 = !DILocation(line: 434, column: 228, scope: !18509)
!18530 = !DILocalVariable(name: "starty", arg: 11, scope: !18509, file: !624, line: 434, type: !238)
!18531 = !DILocation(line: 434, column: 240, scope: !18509)
!18532 = !DILocalVariable(name: "top", scope: !18509, file: !624, line: 434, type: !900)
!18533 = !DILocation(line: 434, column: 265, scope: !18509)
!18534 = !DILocation(line: 434, column: 281, scope: !18509)
!18535 = !DILocalVariable(name: "bottom", scope: !18509, file: !624, line: 434, type: !900)
!18536 = !DILocation(line: 434, column: 302, scope: !18509)
!18537 = !DILocation(line: 434, column: 321, scope: !18509)
!18538 = !DILocalVariable(name: "dst", scope: !18509, file: !624, line: 434, type: !329)
!18539 = !DILocation(line: 434, column: 339, scope: !18509)
!18540 = !DILocation(line: 434, column: 355, scope: !18509)
!18541 = !DILocalVariable(name: "e", scope: !18509, file: !624, line: 434, type: !891)
!18542 = !DILocation(line: 434, column: 369, scope: !18509)
!18543 = !DILocation(line: 434, column: 373, scope: !18509)
!18544 = !DILocation(line: 434, column: 380, scope: !18509)
!18545 = !DILocalVariable(name: "y", scope: !18509, file: !624, line: 434, type: !238)
!18546 = !DILocation(line: 434, column: 387, scope: !18509)
!18547 = !DILocalVariable(name: "x", scope: !18509, file: !624, line: 434, type: !238)
!18548 = !DILocation(line: 434, column: 390, scope: !18509)
!18549 = !DILocation(line: 434, column: 406, scope: !18509)
!18550 = !DILocation(line: 434, column: 425, scope: !18509)
!18551 = !DILocation(line: 434, column: 447, scope: !18509)
!18552 = !DILocation(line: 434, column: 460, scope: !18553)
!18553 = distinct !DILexicalBlock(scope: !18509, file: !624, line: 434, column: 453)
!18554 = !DILocation(line: 434, column: 458, scope: !18553)
!18555 = !DILocation(line: 434, column: 465, scope: !18556)
!18556 = !DILexicalBlockFile(scope: !18557, file: !624, discriminator: 1)
!18557 = distinct !DILexicalBlock(scope: !18553, file: !624, line: 434, column: 453)
!18558 = !DILocation(line: 434, column: 469, scope: !18556)
!18559 = !DILocation(line: 434, column: 467, scope: !18556)
!18560 = !DILocation(line: 434, column: 453, scope: !18556)
!18561 = !DILocation(line: 434, column: 500, scope: !18562)
!18562 = !DILexicalBlockFile(scope: !18563, file: !624, discriminator: 2)
!18563 = distinct !DILexicalBlock(scope: !18557, file: !624, line: 434, column: 482)
!18564 = !DILocation(line: 434, column: 504, scope: !18562)
!18565 = !DILocation(line: 434, column: 502, scope: !18562)
!18566 = !DILocation(line: 434, column: 484, scope: !18562)
!18567 = !DILocation(line: 434, column: 498, scope: !18562)
!18568 = !DILocation(line: 434, column: 519, scope: !18562)
!18569 = !DILocation(line: 434, column: 517, scope: !18562)
!18570 = !DILocation(line: 434, column: 524, scope: !18571)
!18571 = !DILexicalBlockFile(scope: !18572, file: !624, discriminator: 3)
!18572 = distinct !DILexicalBlock(scope: !18573, file: !624, line: 434, column: 512)
!18573 = distinct !DILexicalBlock(scope: !18563, file: !624, line: 434, column: 512)
!18574 = !DILocation(line: 434, column: 528, scope: !18571)
!18575 = !DILocation(line: 434, column: 526, scope: !18571)
!18576 = !DILocation(line: 434, column: 512, scope: !18571)
!18577 = !DILocation(line: 434, column: 558, scope: !18578)
!18578 = !DILexicalBlockFile(scope: !18579, file: !624, discriminator: 4)
!18579 = distinct !DILexicalBlock(scope: !18572, file: !624, line: 434, column: 540)
!18580 = !DILocation(line: 434, column: 542, scope: !18578)
!18581 = !DILocation(line: 434, column: 556, scope: !18578)
!18582 = !DILocation(line: 434, column: 599, scope: !18578)
!18583 = !DILocation(line: 434, column: 595, scope: !18578)
!18584 = !DILocation(line: 434, column: 579, scope: !18578)
!18585 = !DILocation(line: 434, column: 593, scope: !18578)
!18586 = !DILocation(line: 434, column: 561, scope: !18578)
!18587 = !DILocation(line: 434, column: 577, scope: !18578)
!18588 = !DILocation(line: 434, column: 647, scope: !18578)
!18589 = !DILocation(line: 434, column: 640, scope: !18578)
!18590 = !DILocation(line: 434, column: 624, scope: !18578)
!18591 = !DILocation(line: 434, column: 638, scope: !18578)
!18592 = !DILocation(line: 434, column: 603, scope: !18578)
!18593 = !DILocation(line: 434, column: 622, scope: !18578)
!18594 = !DILocation(line: 434, column: 673, scope: !18578)
!18595 = !DILocation(line: 434, column: 676, scope: !18578)
!18596 = !DILocation(line: 434, column: 660, scope: !18578)
!18597 = !DILocation(line: 434, column: 655, scope: !18578)
!18598 = !DILocation(line: 434, column: 651, scope: !18578)
!18599 = !DILocation(line: 434, column: 658, scope: !18578)
!18600 = !DILocation(line: 434, column: 4, scope: !18578)
!18601 = !DILocation(line: 434, column: 536, scope: !18602)
!18602 = !DILexicalBlockFile(scope: !18572, file: !624, discriminator: 5)
!18603 = !DILocation(line: 434, column: 512, scope: !18602)
!18604 = distinct !{!18604, !18605}
!18605 = !DILocation(line: 434, column: 512, scope: !18563)
!18606 = !DILocation(line: 434, column: 13, scope: !18607)
!18607 = !DILexicalBlockFile(scope: !18563, file: !624, discriminator: 6)
!18608 = !DILocation(line: 434, column: 10, scope: !18607)
!18609 = !DILocation(line: 434, column: 34, scope: !18607)
!18610 = !DILocation(line: 434, column: 31, scope: !18607)
!18611 = !DILocation(line: 434, column: 58, scope: !18607)
!18612 = !DILocation(line: 434, column: 55, scope: !18607)
!18613 = !DILocation(line: 434, column: 75, scope: !18607)
!18614 = !DILocation(line: 434, column: 478, scope: !18615)
!18615 = !DILexicalBlockFile(scope: !18557, file: !624, discriminator: 7)
!18616 = !DILocation(line: 434, column: 453, scope: !18615)
!18617 = distinct !{!18617, !18618}
!18618 = !DILocation(line: 434, column: 453, scope: !18509)
!18619 = !DILocation(line: 434, column: 77, scope: !18620)
!18620 = !DILexicalBlockFile(scope: !18509, file: !624, discriminator: 8)
!18621 = distinct !DISubprogram(name: "blend_child_next", scope: !624, file: !624, line: 123, type: !266, isLocal: true, isDefinition: true, scopeLine: 123, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!18622 = !DILocalVariable(name: "obj", arg: 1, scope: !18621, file: !624, line: 123, type: !229)
!18623 = !DILocation(line: 123, column: 67, scope: !18621)
!18624 = !DILocalVariable(name: "prev", arg: 2, scope: !18621, file: !624, line: 123, type: !229)
!18625 = !DILocation(line: 123, column: 78, scope: !18621)
!18626 = !DILocalVariable(name: "s", scope: !18621, file: !624, line: 123, type: !17988)
!18627 = !DILocation(line: 123, column: 100, scope: !18621)
!18628 = !DILocation(line: 123, column: 104, scope: !18621)
!18629 = !DILocation(line: 123, column: 123, scope: !18621)
!18630 = !DILocation(line: 123, column: 109, scope: !18621)
!18631 = !DILocation(line: 123, column: 112, scope: !18621)
!18632 = !DILocation(line: 123, column: 115, scope: !18621)
!18633 = !DILocation(line: 123, column: 121, scope: !18621)
!18634 = !DILocation(line: 123, column: 156, scope: !18621)
!18635 = !DILocation(line: 123, column: 156, scope: !18636)
!18636 = !DILexicalBlockFile(scope: !18621, file: !624, discriminator: 1)
!18637 = !DILocation(line: 123, column: 4, scope: !18638)
!18638 = !DILexicalBlockFile(scope: !18621, file: !624, discriminator: 2)
!18639 = !DILocation(line: 123, column: 7, scope: !18638)
!18640 = !DILocation(line: 123, column: 156, scope: !18638)
!18641 = !DILocation(line: 123, column: 156, scope: !18642)
!18642 = !DILexicalBlockFile(scope: !18621, file: !624, discriminator: 3)
!18643 = !DILocation(line: 123, column: 149, scope: !18642)
!18644 = distinct !DISubprogram(name: "blend_child_class_next", scope: !624, file: !624, line: 123, type: !18645, isLocal: true, isDefinition: true, scopeLine: 123, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!18645 = !DISubroutineType(types: !18646)
!18646 = !{!216, !216}
!18647 = !DILocalVariable(name: "prev", arg: 1, scope: !18644, file: !624, line: 123, type: !216)
!18648 = !DILocation(line: 123, column: 191, scope: !18644)
!18649 = !DILocation(line: 123, column: 206, scope: !18644)
!18650 = !DILocation(line: 123, column: 206, scope: !18651)
!18651 = !DILexicalBlockFile(scope: !18644, file: !624, discriminator: 1)
!18652 = !DILocation(line: 123, column: 3, scope: !18653)
!18653 = !DILexicalBlockFile(scope: !18644, file: !624, discriminator: 2)
!18654 = !DILocation(line: 123, column: 206, scope: !18653)
!18655 = !DILocation(line: 123, column: 206, scope: !18656)
!18656 = !DILexicalBlockFile(scope: !18644, file: !624, discriminator: 3)
!18657 = !DILocation(line: 123, column: 199, scope: !18656)
!18658 = distinct !DISubprogram(name: "blend_frame_for_dualinput", scope: !624, file: !624, line: 498, type: !18659, isLocal: true, isDefinition: true, scopeLine: 499, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!18659 = !DISubroutineType(types: !18660)
!18660 = !{!238, !18661}
!18661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17994, size: 64, align: 64)
!18662 = !DILocalVariable(name: "fs", arg: 1, scope: !18658, file: !624, line: 498, type: !18661)
!18663 = !DILocation(line: 498, column: 51, scope: !18658)
!18664 = !DILocalVariable(name: "ctx", scope: !18658, file: !624, line: 500, type: !211)
!18665 = !DILocation(line: 500, column: 22, scope: !18658)
!18666 = !DILocation(line: 500, column: 28, scope: !18658)
!18667 = !DILocation(line: 500, column: 32, scope: !18658)
!18668 = !DILocalVariable(name: "top_buf", scope: !18658, file: !624, line: 501, type: !323)
!18669 = !DILocation(line: 501, column: 14, scope: !18658)
!18670 = !DILocalVariable(name: "bottom_buf", scope: !18658, file: !624, line: 501, type: !323)
!18671 = !DILocation(line: 501, column: 24, scope: !18658)
!18672 = !DILocalVariable(name: "dst_buf", scope: !18658, file: !624, line: 501, type: !323)
!18673 = !DILocation(line: 501, column: 37, scope: !18658)
!18674 = !DILocalVariable(name: "ret", scope: !18658, file: !624, line: 502, type: !238)
!18675 = !DILocation(line: 502, column: 9, scope: !18658)
!18676 = !DILocation(line: 504, column: 38, scope: !18658)
!18677 = !DILocation(line: 504, column: 11, scope: !18658)
!18678 = !DILocation(line: 504, column: 9, scope: !18658)
!18679 = !DILocation(line: 505, column: 9, scope: !18680)
!18680 = distinct !DILexicalBlock(scope: !18658, file: !624, line: 505, column: 9)
!18681 = !DILocation(line: 505, column: 13, scope: !18680)
!18682 = !DILocation(line: 505, column: 9, scope: !18658)
!18683 = !DILocation(line: 506, column: 16, scope: !18680)
!18684 = !DILocation(line: 506, column: 9, scope: !18680)
!18685 = !DILocation(line: 507, column: 10, scope: !18686)
!18686 = distinct !DILexicalBlock(scope: !18658, file: !624, line: 507, column: 9)
!18687 = !DILocation(line: 507, column: 9, scope: !18658)
!18688 = !DILocation(line: 508, column: 32, scope: !18686)
!18689 = !DILocation(line: 508, column: 37, scope: !18686)
!18690 = !DILocation(line: 508, column: 49, scope: !18686)
!18691 = !DILocation(line: 508, column: 16, scope: !18686)
!18692 = !DILocation(line: 508, column: 9, scope: !18686)
!18693 = !DILocation(line: 509, column: 27, scope: !18658)
!18694 = !DILocation(line: 509, column: 32, scope: !18658)
!18695 = !DILocation(line: 509, column: 41, scope: !18658)
!18696 = !DILocation(line: 509, column: 15, scope: !18658)
!18697 = !DILocation(line: 509, column: 13, scope: !18658)
!18698 = !DILocation(line: 510, column: 28, scope: !18658)
!18699 = !DILocation(line: 510, column: 33, scope: !18658)
!18700 = !DILocation(line: 510, column: 45, scope: !18658)
!18701 = !DILocation(line: 510, column: 12, scope: !18658)
!18702 = !DILocation(line: 510, column: 5, scope: !18658)
!18703 = !DILocation(line: 511, column: 1, scope: !18658)
!18704 = distinct !DISubprogram(name: "blend_frame", scope: !624, file: !624, line: 465, type: !18705, isLocal: true, isDefinition: true, scopeLine: 467, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!18705 = !DISubroutineType(types: !18706)
!18706 = !{!323, !211, !323, !18707}
!18707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18708, size: 64, align: 64)
!18708 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !324)
!18709 = !DILocalVariable(name: "ctx", arg: 1, scope: !18704, file: !624, line: 465, type: !211)
!18710 = !DILocation(line: 465, column: 46, scope: !18704)
!18711 = !DILocalVariable(name: "top_buf", arg: 2, scope: !18704, file: !624, line: 465, type: !323)
!18712 = !DILocation(line: 465, column: 60, scope: !18704)
!18713 = !DILocalVariable(name: "bottom_buf", arg: 3, scope: !18704, file: !624, line: 466, type: !18707)
!18714 = !DILocation(line: 466, column: 44, scope: !18704)
!18715 = !DILocalVariable(name: "s", scope: !18704, file: !624, line: 468, type: !17988)
!18716 = !DILocation(line: 468, column: 19, scope: !18704)
!18717 = !DILocation(line: 468, column: 23, scope: !18704)
!18718 = !DILocation(line: 468, column: 28, scope: !18704)
!18719 = !DILocalVariable(name: "inlink", scope: !18704, file: !624, line: 469, type: !424)
!18720 = !DILocation(line: 469, column: 19, scope: !18704)
!18721 = !DILocation(line: 469, column: 28, scope: !18704)
!18722 = !DILocation(line: 469, column: 33, scope: !18704)
!18723 = !DILocalVariable(name: "outlink", scope: !18704, file: !624, line: 470, type: !424)
!18724 = !DILocation(line: 470, column: 19, scope: !18704)
!18725 = !DILocation(line: 470, column: 29, scope: !18704)
!18726 = !DILocation(line: 470, column: 34, scope: !18704)
!18727 = !DILocalVariable(name: "dst_buf", scope: !18704, file: !624, line: 471, type: !323)
!18728 = !DILocation(line: 471, column: 14, scope: !18704)
!18729 = !DILocalVariable(name: "plane", scope: !18704, file: !624, line: 472, type: !238)
!18730 = !DILocation(line: 472, column: 9, scope: !18704)
!18731 = !DILocation(line: 474, column: 35, scope: !18704)
!18732 = !DILocation(line: 474, column: 44, scope: !18704)
!18733 = !DILocation(line: 474, column: 53, scope: !18704)
!18734 = !DILocation(line: 474, column: 56, scope: !18704)
!18735 = !DILocation(line: 474, column: 65, scope: !18704)
!18736 = !DILocation(line: 474, column: 15, scope: !18704)
!18737 = !DILocation(line: 474, column: 13, scope: !18704)
!18738 = !DILocation(line: 475, column: 10, scope: !18739)
!18739 = distinct !DILexicalBlock(scope: !18704, file: !624, line: 475, column: 9)
!18740 = !DILocation(line: 475, column: 9, scope: !18704)
!18741 = !DILocation(line: 476, column: 16, scope: !18739)
!18742 = !DILocation(line: 476, column: 9, scope: !18739)
!18743 = !DILocation(line: 477, column: 25, scope: !18704)
!18744 = !DILocation(line: 477, column: 34, scope: !18704)
!18745 = !DILocation(line: 477, column: 5, scope: !18704)
!18746 = !DILocation(line: 479, column: 16, scope: !18747)
!18747 = distinct !DILexicalBlock(scope: !18704, file: !624, line: 479, column: 5)
!18748 = !DILocation(line: 479, column: 10, scope: !18747)
!18749 = !DILocation(line: 479, column: 21, scope: !18750)
!18750 = !DILexicalBlockFile(scope: !18751, file: !624, discriminator: 1)
!18751 = distinct !DILexicalBlock(scope: !18747, file: !624, line: 479, column: 5)
!18752 = !DILocation(line: 479, column: 29, scope: !18750)
!18753 = !DILocation(line: 479, column: 32, scope: !18750)
!18754 = !DILocation(line: 479, column: 27, scope: !18750)
!18755 = !DILocation(line: 479, column: 5, scope: !18750)
!18756 = !DILocalVariable(name: "hsub", scope: !18757, file: !624, line: 480, type: !238)
!18757 = distinct !DILexicalBlock(scope: !18751, file: !624, line: 479, column: 52)
!18758 = !DILocation(line: 480, column: 13, scope: !18757)
!18759 = !DILocation(line: 480, column: 20, scope: !18757)
!18760 = !DILocation(line: 480, column: 26, scope: !18757)
!18761 = !DILocation(line: 480, column: 31, scope: !18757)
!18762 = !DILocation(line: 480, column: 34, scope: !18763)
!18763 = !DILexicalBlockFile(scope: !18757, file: !624, discriminator: 1)
!18764 = !DILocation(line: 480, column: 40, scope: !18763)
!18765 = !DILocation(line: 480, column: 20, scope: !18763)
!18766 = !DILocation(line: 480, column: 47, scope: !18767)
!18767 = !DILexicalBlockFile(scope: !18757, file: !624, discriminator: 2)
!18768 = !DILocation(line: 480, column: 50, scope: !18767)
!18769 = !DILocation(line: 480, column: 20, scope: !18767)
!18770 = !DILocation(line: 480, column: 20, scope: !18771)
!18771 = !DILexicalBlockFile(scope: !18757, file: !624, discriminator: 3)
!18772 = !DILocation(line: 480, column: 20, scope: !18773)
!18773 = !DILexicalBlockFile(scope: !18757, file: !624, discriminator: 4)
!18774 = !DILocation(line: 480, column: 13, scope: !18773)
!18775 = !DILocalVariable(name: "vsub", scope: !18757, file: !624, line: 481, type: !238)
!18776 = !DILocation(line: 481, column: 13, scope: !18757)
!18777 = !DILocation(line: 481, column: 20, scope: !18757)
!18778 = !DILocation(line: 481, column: 26, scope: !18757)
!18779 = !DILocation(line: 481, column: 31, scope: !18757)
!18780 = !DILocation(line: 481, column: 34, scope: !18763)
!18781 = !DILocation(line: 481, column: 40, scope: !18763)
!18782 = !DILocation(line: 481, column: 20, scope: !18763)
!18783 = !DILocation(line: 481, column: 47, scope: !18767)
!18784 = !DILocation(line: 481, column: 50, scope: !18767)
!18785 = !DILocation(line: 481, column: 20, scope: !18767)
!18786 = !DILocation(line: 481, column: 20, scope: !18771)
!18787 = !DILocation(line: 481, column: 20, scope: !18773)
!18788 = !DILocation(line: 481, column: 13, scope: !18773)
!18789 = !DILocalVariable(name: "outw", scope: !18757, file: !624, line: 482, type: !238)
!18790 = !DILocation(line: 482, column: 13, scope: !18757)
!18791 = !DILocation(line: 482, column: 56, scope: !18757)
!18792 = !DILocation(line: 482, column: 65, scope: !18757)
!18793 = !DILocation(line: 482, column: 54, scope: !18757)
!18794 = !DILocation(line: 482, column: 77, scope: !18757)
!18795 = !DILocation(line: 482, column: 73, scope: !18757)
!18796 = !DILocation(line: 482, column: 51, scope: !18757)
!18797 = !DILocalVariable(name: "outh", scope: !18757, file: !624, line: 483, type: !238)
!18798 = !DILocation(line: 483, column: 13, scope: !18757)
!18799 = !DILocation(line: 483, column: 56, scope: !18757)
!18800 = !DILocation(line: 483, column: 65, scope: !18757)
!18801 = !DILocation(line: 483, column: 54, scope: !18757)
!18802 = !DILocation(line: 483, column: 78, scope: !18757)
!18803 = !DILocation(line: 483, column: 74, scope: !18757)
!18804 = !DILocation(line: 483, column: 51, scope: !18757)
!18805 = !DILocalVariable(name: "param", scope: !18757, file: !624, line: 484, type: !884)
!18806 = !DILocation(line: 484, column: 23, scope: !18757)
!18807 = !DILocation(line: 484, column: 42, scope: !18757)
!18808 = !DILocation(line: 484, column: 32, scope: !18757)
!18809 = !DILocation(line: 484, column: 35, scope: !18757)
!18810 = !DILocalVariable(name: "td", scope: !18757, file: !624, line: 485, type: !18811)
!18811 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThreadData", file: !624, line: 61, baseType: !18812)
!18812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ThreadData", file: !624, line: 54, size: 448, align: 64, elements: !18813)
!18813 = !{!18814, !18815, !18816, !18817, !18818, !18819, !18820, !18821}
!18814 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !18812, file: !624, line: 55, baseType: !18707, size: 64, align: 64)
!18815 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !18812, file: !624, line: 55, baseType: !18707, size: 64, align: 64, offset: 64)
!18816 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !18812, file: !624, line: 56, baseType: !323, size: 64, align: 64, offset: 128)
!18817 = !DIDerivedType(tag: DW_TAG_member, name: "inlink", scope: !18812, file: !624, line: 57, baseType: !424, size: 64, align: 64, offset: 192)
!18818 = !DIDerivedType(tag: DW_TAG_member, name: "plane", scope: !18812, file: !624, line: 58, baseType: !238, size: 32, align: 32, offset: 256)
!18819 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !18812, file: !624, line: 59, baseType: !238, size: 32, align: 32, offset: 288)
!18820 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !18812, file: !624, line: 59, baseType: !238, size: 32, align: 32, offset: 320)
!18821 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !18812, file: !624, line: 60, baseType: !884, size: 64, align: 64, offset: 384)
!18822 = !DILocation(line: 485, column: 20, scope: !18757)
!18823 = !DILocation(line: 485, column: 25, scope: !18757)
!18824 = !DILocation(line: 485, column: 34, scope: !18757)
!18825 = !DILocation(line: 485, column: 53, scope: !18757)
!18826 = !DILocation(line: 485, column: 72, scope: !18757)
!18827 = !DILocation(line: 487, column: 37, scope: !18757)
!18828 = !DILocation(line: 486, column: 74, scope: !18757)
!18829 = !DILocation(line: 486, column: 32, scope: !18757)
!18830 = !DILocation(line: 486, column: 43, scope: !18757)
!18831 = !DILocation(line: 486, column: 58, scope: !18757)
!18832 = !DILocation(line: 489, column: 9, scope: !18757)
!18833 = !DILocation(line: 489, column: 14, scope: !18757)
!18834 = !DILocation(line: 489, column: 24, scope: !18757)
!18835 = !DILocation(line: 489, column: 32, scope: !18757)
!18836 = !DILocation(line: 489, column: 51, scope: !18757)
!18837 = !DILocation(line: 489, column: 63, scope: !18757)
!18838 = !DILocation(line: 489, column: 97, scope: !18757)
!18839 = !DILocation(line: 489, column: 72, scope: !18757)
!18840 = !DILocation(line: 489, column: 69, scope: !18757)
!18841 = !DILocation(line: 489, column: 62, scope: !18757)
!18842 = !DILocation(line: 489, column: 131, scope: !18763)
!18843 = !DILocation(line: 489, column: 106, scope: !18763)
!18844 = !DILocation(line: 489, column: 62, scope: !18763)
!18845 = !DILocation(line: 489, column: 140, scope: !18767)
!18846 = !DILocation(line: 489, column: 62, scope: !18767)
!18847 = !DILocation(line: 489, column: 62, scope: !18771)
!18848 = !DILocation(line: 489, column: 9, scope: !18771)
!18849 = !DILocation(line: 490, column: 5, scope: !18757)
!18850 = !DILocation(line: 479, column: 48, scope: !18851)
!18851 = !DILexicalBlockFile(scope: !18751, file: !624, discriminator: 2)
!18852 = !DILocation(line: 479, column: 5, scope: !18851)
!18853 = distinct !{!18853, !18854}
!18854 = !DILocation(line: 479, column: 5, scope: !18704)
!18855 = !DILocation(line: 492, column: 10, scope: !18856)
!18856 = distinct !DILexicalBlock(scope: !18704, file: !624, line: 492, column: 9)
!18857 = !DILocation(line: 492, column: 13, scope: !18856)
!18858 = !DILocation(line: 492, column: 9, scope: !18704)
!18859 = !DILocation(line: 493, column: 9, scope: !18856)
!18860 = !DILocation(line: 495, column: 12, scope: !18704)
!18861 = !DILocation(line: 495, column: 5, scope: !18704)
!18862 = !DILocation(line: 496, column: 1, scope: !18704)
!18863 = distinct !DISubprogram(name: "filter_slice", scope: !624, file: !624, line: 437, type: !510, isLocal: true, isDefinition: true, scopeLine: 438, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!18864 = !DILocalVariable(name: "ctx", arg: 1, scope: !18863, file: !624, line: 437, type: !211)
!18865 = !DILocation(line: 437, column: 42, scope: !18863)
!18866 = !DILocalVariable(name: "arg", arg: 2, scope: !18863, file: !624, line: 437, type: !229)
!18867 = !DILocation(line: 437, column: 53, scope: !18863)
!18868 = !DILocalVariable(name: "jobnr", arg: 3, scope: !18863, file: !624, line: 437, type: !238)
!18869 = !DILocation(line: 437, column: 62, scope: !18863)
!18870 = !DILocalVariable(name: "nb_jobs", arg: 4, scope: !18863, file: !624, line: 437, type: !238)
!18871 = !DILocation(line: 437, column: 73, scope: !18863)
!18872 = !DILocalVariable(name: "td", scope: !18863, file: !624, line: 439, type: !18873)
!18873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18811, size: 64, align: 64)
!18874 = !DILocation(line: 439, column: 17, scope: !18863)
!18875 = !DILocation(line: 439, column: 22, scope: !18863)
!18876 = !DILocalVariable(name: "slice_start", scope: !18863, file: !624, line: 440, type: !238)
!18877 = !DILocation(line: 440, column: 9, scope: !18863)
!18878 = !DILocation(line: 440, column: 24, scope: !18863)
!18879 = !DILocation(line: 440, column: 28, scope: !18863)
!18880 = !DILocation(line: 440, column: 32, scope: !18863)
!18881 = !DILocation(line: 440, column: 30, scope: !18863)
!18882 = !DILocation(line: 440, column: 42, scope: !18863)
!18883 = !DILocation(line: 440, column: 40, scope: !18863)
!18884 = !DILocalVariable(name: "slice_end", scope: !18863, file: !624, line: 441, type: !238)
!18885 = !DILocation(line: 441, column: 9, scope: !18863)
!18886 = !DILocation(line: 441, column: 22, scope: !18863)
!18887 = !DILocation(line: 441, column: 26, scope: !18863)
!18888 = !DILocation(line: 441, column: 31, scope: !18863)
!18889 = !DILocation(line: 441, column: 36, scope: !18863)
!18890 = !DILocation(line: 441, column: 28, scope: !18863)
!18891 = !DILocation(line: 441, column: 43, scope: !18863)
!18892 = !DILocation(line: 441, column: 41, scope: !18863)
!18893 = !DILocalVariable(name: "height", scope: !18863, file: !624, line: 442, type: !238)
!18894 = !DILocation(line: 442, column: 9, scope: !18863)
!18895 = !DILocation(line: 442, column: 18, scope: !18863)
!18896 = !DILocation(line: 442, column: 30, scope: !18863)
!18897 = !DILocation(line: 442, column: 28, scope: !18863)
!18898 = !DILocalVariable(name: "top", scope: !18863, file: !624, line: 443, type: !900)
!18899 = !DILocation(line: 443, column: 20, scope: !18863)
!18900 = !DILocation(line: 443, column: 40, scope: !18863)
!18901 = !DILocation(line: 443, column: 44, scope: !18863)
!18902 = !DILocation(line: 443, column: 26, scope: !18863)
!18903 = !DILocation(line: 443, column: 30, scope: !18863)
!18904 = !DILocation(line: 443, column: 35, scope: !18863)
!18905 = !DILocalVariable(name: "bottom", scope: !18863, file: !624, line: 444, type: !900)
!18906 = !DILocation(line: 444, column: 20, scope: !18863)
!18907 = !DILocation(line: 444, column: 46, scope: !18863)
!18908 = !DILocation(line: 444, column: 50, scope: !18863)
!18909 = !DILocation(line: 444, column: 29, scope: !18863)
!18910 = !DILocation(line: 444, column: 33, scope: !18863)
!18911 = !DILocation(line: 444, column: 41, scope: !18863)
!18912 = !DILocalVariable(name: "dst", scope: !18863, file: !624, line: 445, type: !329)
!18913 = !DILocation(line: 445, column: 14, scope: !18863)
!18914 = !DILocation(line: 445, column: 34, scope: !18863)
!18915 = !DILocation(line: 445, column: 38, scope: !18863)
!18916 = !DILocation(line: 445, column: 20, scope: !18863)
!18917 = !DILocation(line: 445, column: 24, scope: !18863)
!18918 = !DILocation(line: 445, column: 29, scope: !18863)
!18919 = !DILocalVariable(name: "values", scope: !18863, file: !624, line: 446, type: !18920)
!18920 = !DICompositeType(tag: DW_TAG_array_type, baseType: !248, size: 768, align: 64, elements: !18921)
!18921 = !{!18922}
!18922 = !DISubrange(count: 12)
!18923 = !DILocation(line: 446, column: 12, scope: !18863)
!18924 = !DILocation(line: 448, column: 21, scope: !18863)
!18925 = !DILocation(line: 448, column: 25, scope: !18863)
!18926 = !DILocation(line: 448, column: 33, scope: !18863)
!18927 = !DILocation(line: 448, column: 5, scope: !18863)
!18928 = !DILocation(line: 448, column: 19, scope: !18863)
!18929 = !DILocation(line: 449, column: 21, scope: !18863)
!18930 = !DILocation(line: 449, column: 25, scope: !18863)
!18931 = !DILocation(line: 449, column: 30, scope: !18863)
!18932 = !DILocation(line: 449, column: 34, scope: !18863)
!18933 = !DILocation(line: 449, column: 21, scope: !18934)
!18934 = !DILexicalBlockFile(scope: !18863, file: !624, discriminator: 1)
!18935 = !DILocation(line: 449, column: 60, scope: !18936)
!18936 = !DILexicalBlockFile(scope: !18863, file: !624, discriminator: 2)
!18937 = !DILocation(line: 449, column: 64, scope: !18936)
!18938 = !DILocation(line: 449, column: 69, scope: !18936)
!18939 = !DILocation(line: 449, column: 82, scope: !18936)
!18940 = !DILocation(line: 449, column: 86, scope: !18936)
!18941 = !DILocation(line: 449, column: 94, scope: !18936)
!18942 = !DILocation(line: 449, column: 75, scope: !18936)
!18943 = !DILocation(line: 449, column: 73, scope: !18936)
!18944 = !DILocation(line: 449, column: 21, scope: !18936)
!18945 = !DILocation(line: 449, column: 21, scope: !18946)
!18946 = !DILexicalBlockFile(scope: !18863, file: !624, discriminator: 3)
!18947 = !DILocation(line: 449, column: 5, scope: !18946)
!18948 = !DILocation(line: 449, column: 19, scope: !18946)
!18949 = !DILocation(line: 450, column: 21, scope: !18863)
!18950 = !DILocation(line: 450, column: 25, scope: !18863)
!18951 = !DILocation(line: 450, column: 5, scope: !18863)
!18952 = !DILocation(line: 450, column: 19, scope: !18863)
!18953 = !DILocation(line: 451, column: 21, scope: !18863)
!18954 = !DILocation(line: 451, column: 25, scope: !18863)
!18955 = !DILocation(line: 451, column: 5, scope: !18863)
!18956 = !DILocation(line: 451, column: 19, scope: !18863)
!18957 = !DILocation(line: 452, column: 22, scope: !18863)
!18958 = !DILocation(line: 452, column: 26, scope: !18863)
!18959 = !DILocation(line: 452, column: 38, scope: !18863)
!18960 = !DILocation(line: 452, column: 42, scope: !18863)
!18961 = !DILocation(line: 452, column: 47, scope: !18863)
!18962 = !DILocation(line: 452, column: 30, scope: !18863)
!18963 = !DILocation(line: 452, column: 28, scope: !18863)
!18964 = !DILocation(line: 452, column: 5, scope: !18863)
!18965 = !DILocation(line: 452, column: 20, scope: !18863)
!18966 = !DILocation(line: 453, column: 22, scope: !18863)
!18967 = !DILocation(line: 453, column: 26, scope: !18863)
!18968 = !DILocation(line: 453, column: 38, scope: !18863)
!18969 = !DILocation(line: 453, column: 42, scope: !18863)
!18970 = !DILocation(line: 453, column: 47, scope: !18863)
!18971 = !DILocation(line: 453, column: 30, scope: !18863)
!18972 = !DILocation(line: 453, column: 28, scope: !18863)
!18973 = !DILocation(line: 453, column: 5, scope: !18863)
!18974 = !DILocation(line: 453, column: 20, scope: !18863)
!18975 = !DILocation(line: 455, column: 5, scope: !18863)
!18976 = !DILocation(line: 455, column: 9, scope: !18863)
!18977 = !DILocation(line: 455, column: 16, scope: !18863)
!18978 = !DILocation(line: 455, column: 22, scope: !18863)
!18979 = !DILocation(line: 455, column: 28, scope: !18863)
!18980 = !DILocation(line: 455, column: 60, scope: !18863)
!18981 = !DILocation(line: 455, column: 64, scope: !18863)
!18982 = !DILocation(line: 455, column: 42, scope: !18863)
!18983 = !DILocation(line: 455, column: 46, scope: !18863)
!18984 = !DILocation(line: 455, column: 51, scope: !18863)
!18985 = !DILocation(line: 455, column: 40, scope: !18863)
!18986 = !DILocation(line: 455, column: 26, scope: !18863)
!18987 = !DILocation(line: 456, column: 40, scope: !18863)
!18988 = !DILocation(line: 456, column: 44, scope: !18863)
!18989 = !DILocation(line: 456, column: 22, scope: !18863)
!18990 = !DILocation(line: 456, column: 26, scope: !18863)
!18991 = !DILocation(line: 456, column: 31, scope: !18863)
!18992 = !DILocation(line: 457, column: 22, scope: !18863)
!18993 = !DILocation(line: 457, column: 31, scope: !18863)
!18994 = !DILocation(line: 457, column: 66, scope: !18863)
!18995 = !DILocation(line: 457, column: 70, scope: !18863)
!18996 = !DILocation(line: 457, column: 45, scope: !18863)
!18997 = !DILocation(line: 457, column: 49, scope: !18863)
!18998 = !DILocation(line: 457, column: 57, scope: !18863)
!18999 = !DILocation(line: 457, column: 43, scope: !18863)
!19000 = !DILocation(line: 457, column: 29, scope: !18863)
!19001 = !DILocation(line: 458, column: 43, scope: !18863)
!19002 = !DILocation(line: 458, column: 47, scope: !18863)
!19003 = !DILocation(line: 458, column: 22, scope: !18863)
!19004 = !DILocation(line: 458, column: 26, scope: !18863)
!19005 = !DILocation(line: 458, column: 34, scope: !18863)
!19006 = !DILocation(line: 459, column: 22, scope: !18863)
!19007 = !DILocation(line: 459, column: 28, scope: !18863)
!19008 = !DILocation(line: 459, column: 60, scope: !18863)
!19009 = !DILocation(line: 459, column: 64, scope: !18863)
!19010 = !DILocation(line: 459, column: 42, scope: !18863)
!19011 = !DILocation(line: 459, column: 46, scope: !18863)
!19012 = !DILocation(line: 459, column: 51, scope: !18863)
!19013 = !DILocation(line: 459, column: 40, scope: !18863)
!19014 = !DILocation(line: 459, column: 26, scope: !18863)
!19015 = !DILocation(line: 460, column: 40, scope: !18863)
!19016 = !DILocation(line: 460, column: 44, scope: !18863)
!19017 = !DILocation(line: 460, column: 22, scope: !18863)
!19018 = !DILocation(line: 460, column: 26, scope: !18863)
!19019 = !DILocation(line: 460, column: 31, scope: !18863)
!19020 = !DILocation(line: 461, column: 22, scope: !18863)
!19021 = !DILocation(line: 461, column: 26, scope: !18863)
!19022 = !DILocation(line: 461, column: 29, scope: !18863)
!19023 = !DILocation(line: 461, column: 37, scope: !18863)
!19024 = !DILocation(line: 461, column: 41, scope: !18863)
!19025 = !DILocation(line: 461, column: 49, scope: !18863)
!19026 = !DILocation(line: 461, column: 60, scope: !18863)
!19027 = !DILocation(line: 462, column: 5, scope: !18863)
!19028 = distinct !DISubprogram(name: "av_q2d", scope: !252, file: !252, line: 104, type: !19029, isLocal: true, isDefinition: true, scopeLine: 104, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!19029 = !DISubroutineType(types: !19030)
!19030 = !{!248, !251}
!19031 = !DILocalVariable(name: "a", arg: 1, scope: !19028, file: !252, line: 104, type: !251)
!19032 = !DILocation(line: 104, column: 40, scope: !19028)
!19033 = !DILocation(line: 105, column: 14, scope: !19028)
!19034 = !DILocation(line: 105, column: 12, scope: !19028)
!19035 = !DILocation(line: 105, column: 31, scope: !19028)
!19036 = !DILocation(line: 105, column: 20, scope: !19028)
!19037 = !DILocation(line: 105, column: 18, scope: !19028)
!19038 = !DILocation(line: 105, column: 5, scope: !19028)
!19039 = distinct !DISubprogram(name: "tblend_filter_frame", scope: !624, file: !624, line: 843, type: !432, isLocal: true, isDefinition: true, scopeLine: 844, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !869)
!19040 = !DILocalVariable(name: "inlink", arg: 1, scope: !19039, file: !624, line: 843, type: !424)
!19041 = !DILocation(line: 843, column: 46, scope: !19039)
!19042 = !DILocalVariable(name: "frame", arg: 2, scope: !19039, file: !624, line: 843, type: !323)
!19043 = !DILocation(line: 843, column: 63, scope: !19039)
!19044 = !DILocalVariable(name: "ctx", scope: !19039, file: !624, line: 845, type: !211)
!19045 = !DILocation(line: 845, column: 22, scope: !19039)
!19046 = !DILocation(line: 845, column: 28, scope: !19039)
!19047 = !DILocation(line: 845, column: 36, scope: !19039)
!19048 = !DILocalVariable(name: "s", scope: !19039, file: !624, line: 846, type: !17988)
!19049 = !DILocation(line: 846, column: 19, scope: !19039)
!19050 = !DILocation(line: 846, column: 23, scope: !19039)
!19051 = !DILocation(line: 846, column: 28, scope: !19039)
!19052 = !DILocalVariable(name: "outlink", scope: !19039, file: !624, line: 847, type: !424)
!19053 = !DILocation(line: 847, column: 19, scope: !19039)
!19054 = !DILocation(line: 847, column: 29, scope: !19039)
!19055 = !DILocation(line: 847, column: 34, scope: !19039)
!19056 = !DILocation(line: 849, column: 9, scope: !19057)
!19057 = distinct !DILexicalBlock(scope: !19039, file: !624, line: 849, column: 9)
!19058 = !DILocation(line: 849, column: 12, scope: !19057)
!19059 = !DILocation(line: 849, column: 9, scope: !19039)
!19060 = !DILocalVariable(name: "out", scope: !19061, file: !624, line: 850, type: !323)
!19061 = distinct !DILexicalBlock(scope: !19057, file: !624, line: 849, column: 24)
!19062 = !DILocation(line: 850, column: 18, scope: !19061)
!19063 = !DILocation(line: 852, column: 13, scope: !19064)
!19064 = distinct !DILexicalBlock(scope: !19061, file: !624, line: 852, column: 13)
!19065 = !DILocation(line: 852, column: 18, scope: !19064)
!19066 = !DILocation(line: 852, column: 13, scope: !19061)
!19067 = !DILocation(line: 853, column: 34, scope: !19064)
!19068 = !DILocation(line: 853, column: 19, scope: !19064)
!19069 = !DILocation(line: 853, column: 17, scope: !19064)
!19070 = !DILocation(line: 853, column: 13, scope: !19064)
!19071 = !DILocation(line: 855, column: 31, scope: !19064)
!19072 = !DILocation(line: 855, column: 36, scope: !19064)
!19073 = !DILocation(line: 855, column: 43, scope: !19064)
!19074 = !DILocation(line: 855, column: 46, scope: !19064)
!19075 = !DILocation(line: 855, column: 19, scope: !19064)
!19076 = !DILocation(line: 855, column: 17, scope: !19064)
!19077 = !DILocation(line: 856, column: 24, scope: !19061)
!19078 = !DILocation(line: 856, column: 27, scope: !19061)
!19079 = !DILocation(line: 856, column: 9, scope: !19061)
!19080 = !DILocation(line: 857, column: 25, scope: !19061)
!19081 = !DILocation(line: 857, column: 9, scope: !19061)
!19082 = !DILocation(line: 857, column: 12, scope: !19061)
!19083 = !DILocation(line: 857, column: 23, scope: !19061)
!19084 = !DILocation(line: 858, column: 32, scope: !19061)
!19085 = !DILocation(line: 858, column: 41, scope: !19061)
!19086 = !DILocation(line: 858, column: 16, scope: !19061)
!19087 = !DILocation(line: 858, column: 9, scope: !19061)
!19088 = !DILocation(line: 860, column: 21, scope: !19039)
!19089 = !DILocation(line: 860, column: 5, scope: !19039)
!19090 = !DILocation(line: 860, column: 8, scope: !19039)
!19091 = !DILocation(line: 860, column: 19, scope: !19039)
!19092 = !DILocation(line: 861, column: 5, scope: !19039)
!19093 = !DILocation(line: 862, column: 1, scope: !19039)
