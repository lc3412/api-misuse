; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a/[inter]libavfilter--vsrc_cellauto.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a/[inter]libavfilter--vsrc_cellauto.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVFilterPad = type { i8*, i32, %struct.AVFrame* (%struct.AVFilterLink*, i32, i32)*, %struct.AVFrame* (%struct.AVFilterLink*, i32)*, i32 (%struct.AVFilterLink*, %struct.AVFrame*)*, i32 (%struct.AVFilterLink*)*, i32 (%struct.AVFilterLink*)*, i32 (%struct.AVFilterLink*)*, i32, i32 }
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVRational = type { i32, i32 }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVFilterLink = type { %struct.AVFilterContext*, %struct.AVFilterPad*, %struct.AVFilterContext*, %struct.AVFilterPad*, i32, i32, i32, %struct.AVRational, i64, i32, i32, %struct.AVRational, %struct.AVFilterFormats*, %struct.AVFilterFormats*, %struct.AVFilterFormats*, %struct.AVFilterFormats*, %struct.AVFilterChannelLayouts*, %struct.AVFilterChannelLayouts*, i32, i32, %struct.AVFilterGraph*, i64, i64, i32, %struct.AVRational, %struct.AVFrame*, i32, i32, i32, i32, i32, i64, i64, i8*, i32, %struct.AVBufferRef*, [61440 x i8] }
%struct.AVFilterContext = type { %struct.AVClass*, %struct.AVFilter*, i8*, %struct.AVFilterPad*, %struct.AVFilterLink**, i32, %struct.AVFilterPad*, %struct.AVFilterLink**, i32, i8*, %struct.AVFilterGraph*, i32, %struct.AVFilterInternal*, %struct.AVFilterCommand*, i8*, i8*, double*, i32, %struct.AVBufferRef*, i32, i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVFilter = type { i8*, i8*, %struct.AVFilterPad*, %struct.AVFilterPad*, %struct.AVClass*, i32, i32 (%struct.AVFilterContext*)*, i32 (%struct.AVFilterContext*)*, i32 (%struct.AVFilterContext*, %struct.AVDictionary**)*, void (%struct.AVFilterContext*)*, i32 (%struct.AVFilterContext*)*, i32, i32, %struct.AVFilter*, i32 (%struct.AVFilterContext*, i8*, i8*, i8*, i32, i32)*, i32 (%struct.AVFilterContext*, i8*)*, i32 (%struct.AVFilterContext*)* }
%struct.AVFilterInternal = type { i32 (%struct.AVFilterContext*, i32 (%struct.AVFilterContext*, i8*, i32, i32)*, i8*, i32*, i32)* }
%struct.AVFilterCommand = type { double, i8*, i8*, i32, %struct.AVFilterCommand* }
%struct.AVFilterFormats = type { i32, i32*, i32, %struct.AVFilterFormats*** }
%struct.AVFilterChannelLayouts = type { i64*, i32, i8, i8, i32, %struct.AVFilterChannelLayouts*** }
%struct.AVFilterGraph = type { %struct.AVClass*, %struct.AVFilterContext**, i32, i8*, i8*, i32, i32, %struct.AVFilterGraphInternal*, i8*, i32 (%struct.AVFilterContext*, i32 (%struct.AVFilterContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i8*, %struct.AVFilterLink**, i32, i32 }
%struct.AVFilterGraphInternal = type { i8*, i32 (%struct.AVFilterContext*, i32 (%struct.AVFilterContext*, i8*, i32, i32)*, i8*, i32*, i32)*, %struct.FFFrameQueueGlobal }
%struct.FFFrameQueueGlobal = type { i8 }
%struct.CellAutoContext = type { %struct.AVClass*, i32, i32, i8*, i8*, i8*, i64, i8*, i32, i32, i8, i64, %struct.AVRational, double, i32, i32, i32, i32, i64, %struct.AVLFG, i8* }
%struct.AVLFG = type { [64 x i32], i32 }

@.str = private unnamed_addr constant [9 x i8] c"cellauto\00", align 1
@.str.1 = private unnamed_addr constant [62 x i8] c"Create pattern generated by an elementary cellular automaton.\00", align 1
@cellauto_outputs = internal constant [2 x %struct.AVFilterPad] [%struct.AVFilterPad { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i32 0, i32 0), i32 0, %struct.AVFrame* (%struct.AVFilterLink*, i32, i32)* null, %struct.AVFrame* (%struct.AVFilterLink*, i32)* null, i32 (%struct.AVFilterLink*, %struct.AVFrame*)* null, i32 (%struct.AVFilterLink*)* null, i32 (%struct.AVFilterLink*)* @request_frame, i32 (%struct.AVFilterLink*)* @config_props, i32 0, i32 0 }, %struct.AVFilterPad zeroinitializer], align 16
@cellauto_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* getelementptr inbounds ([18 x %struct.AVOption], [18 x %struct.AVOption]* bitcast (<{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption }>* @cellauto_options to [18 x %struct.AVOption]*), i32 0, i32 0), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 7, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@ff_vsrc_cellauto = global %struct.AVFilter { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i32 0, i32 0), %struct.AVFilterPad* null, %struct.AVFilterPad* getelementptr inbounds ([2 x %struct.AVFilterPad], [2 x %struct.AVFilterPad]* @cellauto_outputs, i32 0, i32 0), %struct.AVClass* @cellauto_class, i32 0, i32 (%struct.AVFilterContext*)* null, i32 (%struct.AVFilterContext*)* @init, i32 (%struct.AVFilterContext*, %struct.AVDictionary**)* null, void (%struct.AVFilterContext*)* @uninit, i32 (%struct.AVFilterContext*)* @query_formats, i32 392, i32 0, %struct.AVFilter* null, i32 (%struct.AVFilterContext*, i8*, i8*, i8*, i32, i32)* null, i32 (%struct.AVFilterContext*, i8*)* null, i32 (%struct.AVFilterContext*)* null }, align 8
@.str.2 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"filename\00", align 1
@.str.4 = private unnamed_addr constant [31 x i8] c"read initial pattern from file\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"f\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"pattern\00", align 1
@.str.7 = private unnamed_addr constant [20 x i8] c"set initial pattern\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"p\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"rate\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"set video rate\00", align 1
@.str.11 = private unnamed_addr constant [3 x i8] c"25\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.14 = private unnamed_addr constant [15 x i8] c"set video size\00", align 1
@.str.15 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"rule\00", align 1
@.str.17 = private unnamed_addr constant [9 x i8] c"set rule\00", align 1
@.str.18 = private unnamed_addr constant [18 x i8] c"random_fill_ratio\00", align 1
@.str.19 = private unnamed_addr constant [49 x i8] c"set fill ratio for filling initial grid randomly\00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"ratio\00", align 1
@.str.21 = private unnamed_addr constant [12 x i8] c"random_seed\00", align 1
@.str.22 = private unnamed_addr constant [51 x i8] c"set the seed for filling the initial grid randomly\00", align 1
@.str.23 = private unnamed_addr constant [5 x i8] c"seed\00", align 1
@.str.24 = private unnamed_addr constant [7 x i8] c"scroll\00", align 1
@.str.25 = private unnamed_addr constant [24 x i8] c"scroll pattern downward\00", align 1
@.str.26 = private unnamed_addr constant [11 x i8] c"start_full\00", align 1
@.str.27 = private unnamed_addr constant [30 x i8] c"start filling the whole video\00", align 1
@.str.28 = private unnamed_addr constant [5 x i8] c"full\00", align 1
@.str.29 = private unnamed_addr constant [7 x i8] c"stitch\00", align 1
@.str.30 = private unnamed_addr constant [18 x i8] c"stitch boundaries\00", align 1
@cellauto_options = internal constant <{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption }> <{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i32 0, i32 0), i32 16, i32 5, { i8* } zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i32 0, i32 0), i32 16, i32 5, { i8* } zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i32 0, i32 0), i32 384, i32 5, { i8* } zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i32 0, i32 0), i32 384, i32 5, { i8* } zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i32 0, i32 0), i32 80, i32 14, { i8* } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i32 0, i32 0) }, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 65552, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i32 0, i32 0), i32 80, i32 14, { i8* } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i32 0, i32 0) }, double 0.000000e+00, double 0x41DFFFFFFFC00000, i32 65552, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i32 0, i32 0), i32 8, i32 11, { i8* } zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* null }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i32 0, i32 0), i32 8, i32 11, { i8* } zeroinitializer, double 0.000000e+00, double 0.000000e+00, i32 65552, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i32 0, i32 0), i32 64, i32 1, %union.anon { i64 110 }, double 0.000000e+00, double 2.550000e+02, i32 65552, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.19, i32 0, i32 0), i32 88, i32 3, { double } { double 0x3FE3C6EF372FE94F }, double 0.000000e+00, double 1.000000e+00, i32 65552, i8* null }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.19, i32 0, i32 0), i32 88, i32 3, { double } { double 0x3FE3C6EF372FE94F }, double 0.000000e+00, double 1.000000e+00, i32 65552, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.22, i32 0, i32 0), i32 96, i32 1, %union.anon { i64 -1 }, double -1.000000e+00, double 0x41EFFFFFFFE00000, i32 65552, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.22, i32 0, i32 0), i32 96, i32 1, %union.anon { i64 -1 }, double -1.000000e+00, double 0x41EFFFFFFFE00000, i32 65552, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.25, i32 0, i32 0), i32 104, i32 18, %union.anon { i64 1 }, double 0.000000e+00, double 1.000000e+00, i32 65552, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.27, i32 0, i32 0), i32 108, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 65552, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.27, i32 0, i32 0), i32 108, i32 18, %union.anon { i64 1 }, double 0.000000e+00, double 1.000000e+00, i32 65552, i8* null }, %struct.AVOption { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.30, i32 0, i32 0), i32 100, i32 18, %union.anon { i64 1 }, double 0.000000e+00, double 1.000000e+00, i32 65552, i8* null }, %struct.AVOption zeroinitializer }>, align 16
@.str.32 = private unnamed_addr constant [8 x i8] c"320x518\00", align 1
@.str.33 = private unnamed_addr constant [57 x i8] c"Only one of the filename or pattern options can be used\0A\00", align 1
@.str.34 = private unnamed_addr constant [61 x i8] c"s:%dx%d r:%d/%d rule:%d stitch:%d scroll:%d full:%d seed:%u\0A\00", align 1
@.str.35 = private unnamed_addr constant [6 x i8] c"w:%d\0A\00", align 1
@.str.36 = private unnamed_addr constant [80 x i8] c"The specified width is %d which cannot contain the provided string width of %d\0A\00", align 1
@.str.37 = private unnamed_addr constant [7 x i8] c"%d %c\0A\00", align 1
@query_formats.pix_fmts = internal constant [2 x i32] [i32 10, i32 -1], align 4

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @init(%struct.AVFilterContext* %ctx) #0 !dbg !807 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.AVFilterContext*, align 8
  %s = alloca %struct.CellAutoContext*, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %r = alloca double, align 8
  store %struct.AVFilterContext* %ctx, %struct.AVFilterContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx.addr, metadata !808, metadata !809), !dbg !810
  call void @llvm.dbg.declare(metadata %struct.CellAutoContext** %s, metadata !811, metadata !809), !dbg !847
  %0 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !848
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %0, i32 0, i32 9, !dbg !849
  %1 = load i8*, i8** %priv, align 8, !dbg !849
  %2 = bitcast i8* %1 to %struct.CellAutoContext*, !dbg !848
  store %struct.CellAutoContext* %2, %struct.CellAutoContext** %s, align 8, !dbg !847
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !850, metadata !809), !dbg !851
  %3 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !852
  %w = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %3, i32 0, i32 1, !dbg !854
  %4 = load i32, i32* %w, align 8, !dbg !854
  %tobool = icmp ne i32 %4, 0, !dbg !852
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !855

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !856
  %filename = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %5, i32 0, i32 3, !dbg !858
  %6 = load i8*, i8** %filename, align 8, !dbg !858
  %tobool1 = icmp ne i8* %6, null, !dbg !856
  br i1 %tobool1, label %if.end, label %land.lhs.true2, !dbg !859

land.lhs.true2:                                   ; preds = %land.lhs.true
  %7 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !860
  %pattern = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %7, i32 0, i32 20, !dbg !862
  %8 = load i8*, i8** %pattern, align 8, !dbg !862
  %tobool3 = icmp ne i8* %8, null, !dbg !860
  br i1 %tobool3, label %if.end, label %if.then, !dbg !863

if.then:                                          ; preds = %land.lhs.true2
  %9 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !864
  %10 = bitcast %struct.CellAutoContext* %9 to i8*, !dbg !864
  %call = call i32 @av_opt_set(i8* %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i32 0, i32 0), i32 0), !dbg !865
  br label %if.end, !dbg !865

if.end:                                           ; preds = %if.then, %land.lhs.true2, %land.lhs.true, %entry
  %11 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !866
  %filename4 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %11, i32 0, i32 3, !dbg !868
  %12 = load i8*, i8** %filename4, align 8, !dbg !868
  %tobool5 = icmp ne i8* %12, null, !dbg !866
  br i1 %tobool5, label %land.lhs.true6, label %if.end10, !dbg !869

land.lhs.true6:                                   ; preds = %if.end
  %13 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !870
  %pattern7 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %13, i32 0, i32 20, !dbg !872
  %14 = load i8*, i8** %pattern7, align 8, !dbg !872
  %tobool8 = icmp ne i8* %14, null, !dbg !870
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !873

if.then9:                                         ; preds = %land.lhs.true6
  %15 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !874
  %16 = bitcast %struct.AVFilterContext* %15 to i8*, !dbg !874
  call void (i8*, i32, i8*, ...) @av_log(i8* %16, i32 16, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.33, i32 0, i32 0)), !dbg !876
  store i32 -22, i32* %retval, align 4, !dbg !877
  br label %return, !dbg !877

if.end10:                                         ; preds = %land.lhs.true6, %if.end
  %17 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !878
  %filename11 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %17, i32 0, i32 3, !dbg !880
  %18 = load i8*, i8** %filename11, align 8, !dbg !880
  %tobool12 = icmp ne i8* %18, null, !dbg !878
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !881

if.then13:                                        ; preds = %if.end10
  %19 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !882
  %call14 = call i32 @init_pattern_from_file(%struct.AVFilterContext* %19), !dbg !885
  store i32 %call14, i32* %ret, align 4, !dbg !886
  %cmp = icmp slt i32 %call14, 0, !dbg !887
  br i1 %cmp, label %if.then15, label %if.end16, !dbg !888

if.then15:                                        ; preds = %if.then13
  %20 = load i32, i32* %ret, align 4, !dbg !889
  store i32 %20, i32* %retval, align 4, !dbg !890
  br label %return, !dbg !890

if.end16:                                         ; preds = %if.then13
  br label %if.end51, !dbg !891

if.else:                                          ; preds = %if.end10
  %21 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !892
  %pattern17 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %21, i32 0, i32 20, !dbg !895
  %22 = load i8*, i8** %pattern17, align 8, !dbg !895
  %tobool18 = icmp ne i8* %22, null, !dbg !892
  br i1 %tobool18, label %if.then19, label %if.else24, !dbg !892

if.then19:                                        ; preds = %if.else
  %23 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !896
  %call20 = call i32 @init_pattern_from_string(%struct.AVFilterContext* %23), !dbg !899
  store i32 %call20, i32* %ret, align 4, !dbg !900
  %cmp21 = icmp slt i32 %call20, 0, !dbg !901
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !902

if.then22:                                        ; preds = %if.then19
  %24 = load i32, i32* %ret, align 4, !dbg !903
  store i32 %24, i32* %retval, align 4, !dbg !904
  br label %return, !dbg !904

if.end23:                                         ; preds = %if.then19
  br label %if.end50, !dbg !905

if.else24:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %i, metadata !906, metadata !809), !dbg !908
  %25 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !909
  %w25 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %25, i32 0, i32 1, !dbg !910
  %26 = load i32, i32* %w25, align 8, !dbg !910
  %conv = sext i32 %26 to i64, !dbg !909
  %mul = mul i64 1, %conv, !dbg !911
  %27 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !912
  %h = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %27, i32 0, i32 2, !dbg !913
  %28 = load i32, i32* %h, align 4, !dbg !913
  %conv26 = sext i32 %28 to i64, !dbg !912
  %call27 = call i8* @av_mallocz_array(i64 %mul, i64 %conv26), !dbg !914
  %29 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !915
  %buf = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %29, i32 0, i32 7, !dbg !916
  store i8* %call27, i8** %buf, align 8, !dbg !917
  %30 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !918
  %buf28 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %30, i32 0, i32 7, !dbg !920
  %31 = load i8*, i8** %buf28, align 8, !dbg !920
  %tobool29 = icmp ne i8* %31, null, !dbg !918
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !921

if.then30:                                        ; preds = %if.else24
  store i32 -12, i32* %retval, align 4, !dbg !922
  br label %return, !dbg !922

if.end31:                                         ; preds = %if.else24
  %32 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !923
  %random_seed = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %32, i32 0, i32 14, !dbg !925
  %33 = load i32, i32* %random_seed, align 8, !dbg !925
  %cmp32 = icmp eq i32 %33, -1, !dbg !926
  br i1 %cmp32, label %if.then34, label %if.end37, !dbg !927

if.then34:                                        ; preds = %if.end31
  %call35 = call i32 @av_get_random_seed(), !dbg !928
  %34 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !929
  %random_seed36 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %34, i32 0, i32 14, !dbg !930
  store i32 %call35, i32* %random_seed36, align 8, !dbg !931
  br label %if.end37, !dbg !929

if.end37:                                         ; preds = %if.then34, %if.end31
  %35 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !932
  %lfg = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %35, i32 0, i32 19, !dbg !933
  %36 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !934
  %random_seed38 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %36, i32 0, i32 14, !dbg !935
  %37 = load i32, i32* %random_seed38, align 8, !dbg !935
  call void @av_lfg_init(%struct.AVLFG* %lfg, i32 %37), !dbg !936
  store i32 0, i32* %i, align 4, !dbg !937
  br label %for.cond, !dbg !939

for.cond:                                         ; preds = %for.inc, %if.end37
  %38 = load i32, i32* %i, align 4, !dbg !940
  %39 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !943
  %w39 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %39, i32 0, i32 1, !dbg !944
  %40 = load i32, i32* %w39, align 8, !dbg !944
  %cmp40 = icmp slt i32 %38, %40, !dbg !945
  br i1 %cmp40, label %for.body, label %for.end, !dbg !946

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata double* %r, metadata !947, metadata !809), !dbg !949
  %41 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !950
  %lfg42 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %41, i32 0, i32 19, !dbg !951
  %call43 = call i32 @av_lfg_get(%struct.AVLFG* %lfg42), !dbg !952
  %conv44 = uitofp i32 %call43 to double, !dbg !953
  %div = fdiv double %conv44, 0x41EFFFFFFFE00000, !dbg !954
  store double %div, double* %r, align 8, !dbg !949
  %42 = load double, double* %r, align 8, !dbg !955
  %43 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !957
  %random_fill_ratio = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %43, i32 0, i32 13, !dbg !958
  %44 = load double, double* %random_fill_ratio, align 8, !dbg !958
  %cmp45 = fcmp ole double %42, %44, !dbg !959
  br i1 %cmp45, label %if.then47, label %if.end49, !dbg !960

if.then47:                                        ; preds = %for.body
  %45 = load i32, i32* %i, align 4, !dbg !961
  %idxprom = sext i32 %45 to i64, !dbg !962
  %46 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !962
  %buf48 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %46, i32 0, i32 7, !dbg !963
  %47 = load i8*, i8** %buf48, align 8, !dbg !963
  %arrayidx = getelementptr inbounds i8, i8* %47, i64 %idxprom, !dbg !962
  store i8 1, i8* %arrayidx, align 1, !dbg !964
  br label %if.end49, !dbg !962

if.end49:                                         ; preds = %if.then47, %for.body
  br label %for.inc, !dbg !965

for.inc:                                          ; preds = %if.end49
  %48 = load i32, i32* %i, align 4, !dbg !966
  %inc = add nsw i32 %48, 1, !dbg !966
  store i32 %inc, i32* %i, align 4, !dbg !966
  br label %for.cond, !dbg !968, !llvm.loop !969

for.end:                                          ; preds = %for.cond
  br label %if.end50

if.end50:                                         ; preds = %for.end, %if.end23
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.end16
  %49 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !971
  %50 = bitcast %struct.AVFilterContext* %49 to i8*, !dbg !971
  %51 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !972
  %w52 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %51, i32 0, i32 1, !dbg !973
  %52 = load i32, i32* %w52, align 8, !dbg !973
  %53 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !974
  %h53 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %53, i32 0, i32 2, !dbg !975
  %54 = load i32, i32* %h53, align 4, !dbg !975
  %55 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !976
  %frame_rate = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %55, i32 0, i32 12, !dbg !977
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %frame_rate, i32 0, i32 0, !dbg !978
  %56 = load i32, i32* %num, align 8, !dbg !978
  %57 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !979
  %frame_rate54 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %57, i32 0, i32 12, !dbg !980
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %frame_rate54, i32 0, i32 1, !dbg !981
  %58 = load i32, i32* %den, align 4, !dbg !981
  %59 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !982
  %rule = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %59, i32 0, i32 10, !dbg !983
  %60 = load i8, i8* %rule, align 8, !dbg !983
  %conv55 = zext i8 %60 to i32, !dbg !982
  %61 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !984
  %stitch = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %61, i32 0, i32 15, !dbg !985
  %62 = load i32, i32* %stitch, align 4, !dbg !985
  %63 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !986
  %scroll = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %63, i32 0, i32 16, !dbg !987
  %64 = load i32, i32* %scroll, align 8, !dbg !987
  %65 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !988
  %start_full = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %65, i32 0, i32 17, !dbg !989
  %66 = load i32, i32* %start_full, align 4, !dbg !989
  %67 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !990
  %random_seed56 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %67, i32 0, i32 14, !dbg !991
  %68 = load i32, i32* %random_seed56, align 8, !dbg !991
  call void (i8*, i32, i8*, ...) @av_log(i8* %50, i32 40, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.34, i32 0, i32 0), i32 %52, i32 %54, i32 %56, i32 %58, i32 %conv55, i32 %62, i32 %64, i32 %66, i32 %68), !dbg !992
  store i32 0, i32* %retval, align 4, !dbg !993
  br label %return, !dbg !993

return:                                           ; preds = %if.end51, %if.then30, %if.then22, %if.then15, %if.then9
  %69 = load i32, i32* %retval, align 4, !dbg !994
  ret i32 %69, !dbg !994
}

; Function Attrs: cold nounwind optsize uwtable
define internal void @uninit(%struct.AVFilterContext* %ctx) #0 !dbg !995 {
entry:
  %ctx.addr = alloca %struct.AVFilterContext*, align 8
  %s = alloca %struct.CellAutoContext*, align 8
  store %struct.AVFilterContext* %ctx, %struct.AVFilterContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx.addr, metadata !996, metadata !809), !dbg !997
  call void @llvm.dbg.declare(metadata %struct.CellAutoContext** %s, metadata !998, metadata !809), !dbg !999
  %0 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !1000
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %0, i32 0, i32 9, !dbg !1001
  %1 = load i8*, i8** %priv, align 8, !dbg !1001
  %2 = bitcast i8* %1 to %struct.CellAutoContext*, !dbg !1000
  store %struct.CellAutoContext* %2, %struct.CellAutoContext** %s, align 8, !dbg !999
  %3 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1002
  %file_buf = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %3, i32 0, i32 5, !dbg !1003
  %4 = load i8*, i8** %file_buf, align 8, !dbg !1003
  %5 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1004
  %file_bufsize = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %5, i32 0, i32 6, !dbg !1005
  %6 = load i64, i64* %file_bufsize, align 8, !dbg !1005
  call void @av_file_unmap(i8* %4, i64 %6), !dbg !1006
  %7 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1007
  %buf = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %7, i32 0, i32 7, !dbg !1008
  %8 = bitcast i8** %buf to i8*, !dbg !1009
  call void @av_freep(i8* %8), !dbg !1010
  %9 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1011
  %pattern = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %9, i32 0, i32 20, !dbg !1012
  %10 = bitcast i8** %pattern to i8*, !dbg !1013
  call void @av_freep(i8* %10), !dbg !1014
  ret void, !dbg !1015
}

; Function Attrs: nounwind uwtable
define internal i32 @query_formats(%struct.AVFilterContext* %ctx) #1 !dbg !801 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.AVFilterContext*, align 8
  %fmts_list = alloca %struct.AVFilterFormats*, align 8
  store %struct.AVFilterContext* %ctx, %struct.AVFilterContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx.addr, metadata !1016, metadata !809), !dbg !1017
  call void @llvm.dbg.declare(metadata %struct.AVFilterFormats** %fmts_list, metadata !1018, metadata !809), !dbg !1019
  %call = call %struct.AVFilterFormats* @ff_make_format_list(i32* getelementptr inbounds ([2 x i32], [2 x i32]* @query_formats.pix_fmts, i32 0, i32 0)), !dbg !1020
  store %struct.AVFilterFormats* %call, %struct.AVFilterFormats** %fmts_list, align 8, !dbg !1019
  %0 = load %struct.AVFilterFormats*, %struct.AVFilterFormats** %fmts_list, align 8, !dbg !1021
  %tobool = icmp ne %struct.AVFilterFormats* %0, null, !dbg !1021
  br i1 %tobool, label %if.end, label %if.then, !dbg !1023

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !1024
  br label %return, !dbg !1024

if.end:                                           ; preds = %entry
  %1 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !1025
  %2 = load %struct.AVFilterFormats*, %struct.AVFilterFormats** %fmts_list, align 8, !dbg !1026
  %call1 = call i32 @ff_set_common_formats(%struct.AVFilterContext* %1, %struct.AVFilterFormats* %2), !dbg !1027
  store i32 %call1, i32* %retval, align 4, !dbg !1028
  br label %return, !dbg !1028

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !1029
  ret i32 %3, !dbg !1029
}

; Function Attrs: nounwind uwtable
define internal i32 @request_frame(%struct.AVFilterLink* %outlink) #1 !dbg !1030 {
entry:
  %retval = alloca i32, align 4
  %outlink.addr = alloca %struct.AVFilterLink*, align 8
  %s = alloca %struct.CellAutoContext*, align 8
  %picref = alloca %struct.AVFrame*, align 8
  %.compoundliteral = alloca %struct.AVRational, align 4
  %i = alloca i32, align 4
  store %struct.AVFilterLink* %outlink, %struct.AVFilterLink** %outlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterLink** %outlink.addr, metadata !1031, metadata !809), !dbg !1032
  call void @llvm.dbg.declare(metadata %struct.CellAutoContext** %s, metadata !1033, metadata !809), !dbg !1034
  %0 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !1035
  %src = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %0, i32 0, i32 0, !dbg !1036
  %1 = load %struct.AVFilterContext*, %struct.AVFilterContext** %src, align 8, !dbg !1036
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %1, i32 0, i32 9, !dbg !1037
  %2 = load i8*, i8** %priv, align 8, !dbg !1037
  %3 = bitcast i8* %2 to %struct.CellAutoContext*, !dbg !1035
  store %struct.CellAutoContext* %3, %struct.CellAutoContext** %s, align 8, !dbg !1034
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %picref, metadata !1038, metadata !809), !dbg !1039
  %4 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !1040
  %5 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1041
  %w = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %5, i32 0, i32 1, !dbg !1042
  %6 = load i32, i32* %w, align 8, !dbg !1042
  %7 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1043
  %h = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %7, i32 0, i32 2, !dbg !1044
  %8 = load i32, i32* %h, align 4, !dbg !1044
  %call = call %struct.AVFrame* @ff_get_video_buffer(%struct.AVFilterLink* %4, i32 %6, i32 %8), !dbg !1045
  store %struct.AVFrame* %call, %struct.AVFrame** %picref, align 8, !dbg !1039
  %9 = load %struct.AVFrame*, %struct.AVFrame** %picref, align 8, !dbg !1046
  %tobool = icmp ne %struct.AVFrame* %9, null, !dbg !1046
  br i1 %tobool, label %if.end, label %if.then, !dbg !1048

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !1049
  br label %return, !dbg !1049

if.end:                                           ; preds = %entry
  %10 = load %struct.AVFrame*, %struct.AVFrame** %picref, align 8, !dbg !1050
  %sample_aspect_ratio = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %10, i32 0, i32 9, !dbg !1051
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 0, !dbg !1052
  store i32 1, i32* %num, align 4, !dbg !1052
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 1, !dbg !1052
  store i32 1, i32* %den, align 4, !dbg !1052
  %11 = bitcast %struct.AVRational* %sample_aspect_ratio to i8*, !dbg !1053
  %12 = bitcast %struct.AVRational* %.compoundliteral to i8*, !dbg !1053
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 4, i1 false), !dbg !1053
  %13 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1054
  %generation = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %13, i32 0, i32 18, !dbg !1056
  %14 = load i64, i64* %generation, align 8, !dbg !1056
  %cmp = icmp eq i64 %14, 0, !dbg !1057
  br i1 %cmp, label %land.lhs.true, label %if.end6, !dbg !1058

land.lhs.true:                                    ; preds = %if.end
  %15 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1059
  %start_full = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %15, i32 0, i32 17, !dbg !1061
  %16 = load i32, i32* %start_full, align 4, !dbg !1061
  %tobool1 = icmp ne i32 %16, 0, !dbg !1059
  br i1 %tobool1, label %if.then2, label %if.end6, !dbg !1062

if.then2:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1063, metadata !809), !dbg !1065
  store i32 0, i32* %i, align 4, !dbg !1066
  br label %for.cond, !dbg !1068

for.cond:                                         ; preds = %for.inc, %if.then2
  %17 = load i32, i32* %i, align 4, !dbg !1069
  %18 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1072
  %h3 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %18, i32 0, i32 2, !dbg !1073
  %19 = load i32, i32* %h3, align 4, !dbg !1073
  %sub = sub nsw i32 %19, 1, !dbg !1074
  %cmp4 = icmp slt i32 %17, %sub, !dbg !1075
  br i1 %cmp4, label %for.body, label %for.end, !dbg !1076

for.body:                                         ; preds = %for.cond
  %20 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !1077
  %src5 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %20, i32 0, i32 0, !dbg !1078
  %21 = load %struct.AVFilterContext*, %struct.AVFilterContext** %src5, align 8, !dbg !1078
  call void @evolve(%struct.AVFilterContext* %21), !dbg !1079
  br label %for.inc, !dbg !1079

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %i, align 4, !dbg !1080
  %inc = add nsw i32 %22, 1, !dbg !1080
  store i32 %inc, i32* %i, align 4, !dbg !1080
  br label %for.cond, !dbg !1082, !llvm.loop !1083

for.end:                                          ; preds = %for.cond
  br label %if.end6, !dbg !1085

if.end6:                                          ; preds = %for.end, %land.lhs.true, %if.end
  %23 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !1086
  %src7 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %23, i32 0, i32 0, !dbg !1087
  %24 = load %struct.AVFilterContext*, %struct.AVFilterContext** %src7, align 8, !dbg !1087
  %25 = load %struct.AVFrame*, %struct.AVFrame** %picref, align 8, !dbg !1088
  call void @fill_picture(%struct.AVFilterContext* %24, %struct.AVFrame* %25), !dbg !1089
  %26 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !1090
  %src8 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %26, i32 0, i32 0, !dbg !1091
  %27 = load %struct.AVFilterContext*, %struct.AVFilterContext** %src8, align 8, !dbg !1091
  call void @evolve(%struct.AVFilterContext* %27), !dbg !1092
  %28 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1093
  %pts = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %28, i32 0, i32 11, !dbg !1094
  %29 = load i64, i64* %pts, align 8, !dbg !1095
  %inc9 = add i64 %29, 1, !dbg !1095
  store i64 %inc9, i64* %pts, align 8, !dbg !1095
  %30 = load %struct.AVFrame*, %struct.AVFrame** %picref, align 8, !dbg !1096
  %pts10 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %30, i32 0, i32 10, !dbg !1097
  store i64 %29, i64* %pts10, align 8, !dbg !1098
  %31 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !1099
  %32 = load %struct.AVFrame*, %struct.AVFrame** %picref, align 8, !dbg !1100
  %call11 = call i32 @ff_filter_frame(%struct.AVFilterLink* %31, %struct.AVFrame* %32), !dbg !1101
  store i32 %call11, i32* %retval, align 4, !dbg !1102
  br label %return, !dbg !1102

return:                                           ; preds = %if.end6, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !1103
  ret i32 %33, !dbg !1103
}

; Function Attrs: nounwind uwtable
define internal i32 @config_props(%struct.AVFilterLink* %outlink) #1 !dbg !1104 {
entry:
  %retval.i = alloca %struct.AVRational, align 4
  %q.i = alloca %struct.AVRational, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %q.i, metadata !1105, metadata !809), !dbg !1109
  %r.i = alloca %struct.AVRational, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %r.i, metadata !1111, metadata !809), !dbg !1112
  %outlink.addr = alloca %struct.AVFilterLink*, align 8
  %s = alloca %struct.CellAutoContext*, align 8
  %coerce = alloca %struct.AVRational, align 4
  store %struct.AVFilterLink* %outlink, %struct.AVFilterLink** %outlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterLink** %outlink.addr, metadata !1113, metadata !809), !dbg !1114
  call void @llvm.dbg.declare(metadata %struct.CellAutoContext** %s, metadata !1115, metadata !809), !dbg !1116
  %0 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !1117
  %src = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %0, i32 0, i32 0, !dbg !1118
  %1 = load %struct.AVFilterContext*, %struct.AVFilterContext** %src, align 8, !dbg !1118
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %1, i32 0, i32 9, !dbg !1119
  %2 = load i8*, i8** %priv, align 8, !dbg !1119
  %3 = bitcast i8* %2 to %struct.CellAutoContext*, !dbg !1117
  store %struct.CellAutoContext* %3, %struct.CellAutoContext** %s, align 8, !dbg !1116
  %4 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1120
  %w = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %4, i32 0, i32 1, !dbg !1121
  %5 = load i32, i32* %w, align 8, !dbg !1121
  %6 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !1122
  %w1 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %6, i32 0, i32 5, !dbg !1123
  store i32 %5, i32* %w1, align 4, !dbg !1124
  %7 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1125
  %h = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %7, i32 0, i32 2, !dbg !1126
  %8 = load i32, i32* %h, align 4, !dbg !1126
  %9 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !1127
  %h2 = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %9, i32 0, i32 6, !dbg !1128
  store i32 %8, i32* %h2, align 8, !dbg !1129
  %10 = load %struct.AVFilterLink*, %struct.AVFilterLink** %outlink.addr, align 8, !dbg !1130
  %time_base = getelementptr inbounds %struct.AVFilterLink, %struct.AVFilterLink* %10, i32 0, i32 11, !dbg !1131
  %11 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1132
  %frame_rate = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %11, i32 0, i32 12, !dbg !1133
  %12 = bitcast %struct.AVRational* %frame_rate to i64*, !dbg !1134
  %13 = load i64, i64* %12, align 8, !dbg !1134
  %14 = bitcast %struct.AVRational* %q.i to i64*, !dbg !1134
  store i64 %13, i64* %14, align 4, !dbg !1134
  %num.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r.i, i32 0, i32 0, !dbg !1135
  %den.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q.i, i32 0, i32 1, !dbg !1136
  %15 = load i32, i32* %den.i, align 4, !dbg !1136
  store i32 %15, i32* %num.i, align 4, !dbg !1135
  %den1.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r.i, i32 0, i32 1, !dbg !1135
  %num2.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q.i, i32 0, i32 0, !dbg !1137
  %16 = load i32, i32* %num2.i, align 4, !dbg !1137
  store i32 %16, i32* %den1.i, align 4, !dbg !1135
  %17 = bitcast %struct.AVRational* %retval.i to i8*, !dbg !1138
  %18 = bitcast %struct.AVRational* %r.i to i8*, !dbg !1138
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 8, i32 4, i1 false) #8, !dbg !1138
  %19 = bitcast %struct.AVRational* %retval.i to i64*, !dbg !1139
  %20 = load i64, i64* %19, align 4, !dbg !1139
  %21 = bitcast %struct.AVRational* %coerce to i64*, !dbg !1134
  store i64 %20, i64* %21, align 4, !dbg !1134
  %22 = bitcast %struct.AVRational* %time_base to i8*, !dbg !1134
  %23 = bitcast %struct.AVRational* %coerce to i8*, !dbg !1134
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 4, i1 false), !dbg !1140
  ret i32 0, !dbg !1142
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

declare %struct.AVFrame* @ff_get_video_buffer(%struct.AVFilterLink*, i32, i32) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define internal void @evolve(%struct.AVFilterContext* %ctx) #1 !dbg !581 {
entry:
  %ctx.addr = alloca %struct.AVFilterContext*, align 8
  %s = alloca %struct.CellAutoContext*, align 8
  %i = alloca i32, align 4
  %v = alloca i32, align 4
  %pos = alloca [3 x i32], align 4
  %row = alloca i8*, align 8
  %prev_row = alloca i8*, align 8
  store %struct.AVFilterContext* %ctx, %struct.AVFilterContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx.addr, metadata !1143, metadata !809), !dbg !1144
  call void @llvm.dbg.declare(metadata %struct.CellAutoContext** %s, metadata !1145, metadata !809), !dbg !1146
  %0 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !1147
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %0, i32 0, i32 9, !dbg !1148
  %1 = load i8*, i8** %priv, align 8, !dbg !1148
  %2 = bitcast i8* %1 to %struct.CellAutoContext*, !dbg !1147
  store %struct.CellAutoContext* %2, %struct.CellAutoContext** %s, align 8, !dbg !1146
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1149, metadata !809), !dbg !1150
  call void @llvm.dbg.declare(metadata i32* %v, metadata !1151, metadata !809), !dbg !1152
  call void @llvm.dbg.declare(metadata [3 x i32]* %pos, metadata !1153, metadata !809), !dbg !1157
  call void @llvm.dbg.declare(metadata i8** %row, metadata !1158, metadata !809), !dbg !1159
  call void @llvm.dbg.declare(metadata i8** %prev_row, metadata !1160, metadata !809), !dbg !1161
  %3 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1162
  %buf = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %3, i32 0, i32 7, !dbg !1163
  %4 = load i8*, i8** %buf, align 8, !dbg !1163
  %5 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1164
  %buf_row_idx = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %5, i32 0, i32 9, !dbg !1165
  %6 = load i32, i32* %buf_row_idx, align 4, !dbg !1165
  %7 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1166
  %w = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %7, i32 0, i32 1, !dbg !1167
  %8 = load i32, i32* %w, align 8, !dbg !1167
  %mul = mul nsw i32 %6, %8, !dbg !1168
  %idx.ext = sext i32 %mul to i64, !dbg !1169
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %idx.ext, !dbg !1169
  store i8* %add.ptr, i8** %prev_row, align 8, !dbg !1161
  %9 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1170
  %buf_row_idx1 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %9, i32 0, i32 9, !dbg !1171
  %10 = load i32, i32* %buf_row_idx1, align 4, !dbg !1171
  %11 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1172
  %buf_prev_row_idx = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %11, i32 0, i32 8, !dbg !1173
  store i32 %10, i32* %buf_prev_row_idx, align 8, !dbg !1174
  %12 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1175
  %buf_row_idx2 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %12, i32 0, i32 9, !dbg !1176
  %13 = load i32, i32* %buf_row_idx2, align 4, !dbg !1176
  %14 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1177
  %h = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %14, i32 0, i32 2, !dbg !1178
  %15 = load i32, i32* %h, align 4, !dbg !1178
  %sub = sub nsw i32 %15, 1, !dbg !1179
  %cmp = icmp eq i32 %13, %sub, !dbg !1180
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !1175

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !1181

cond.false:                                       ; preds = %entry
  %16 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1183
  %buf_row_idx3 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %16, i32 0, i32 9, !dbg !1185
  %17 = load i32, i32* %buf_row_idx3, align 4, !dbg !1185
  %add = add nsw i32 %17, 1, !dbg !1186
  br label %cond.end, !dbg !1187

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %add, %cond.false ], !dbg !1188
  %18 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1190
  %buf_row_idx4 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %18, i32 0, i32 9, !dbg !1191
  store i32 %cond, i32* %buf_row_idx4, align 4, !dbg !1192
  %19 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1193
  %buf5 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %19, i32 0, i32 7, !dbg !1194
  %20 = load i8*, i8** %buf5, align 8, !dbg !1194
  %21 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1195
  %w6 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %21, i32 0, i32 1, !dbg !1196
  %22 = load i32, i32* %w6, align 8, !dbg !1196
  %23 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1197
  %buf_row_idx7 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %23, i32 0, i32 9, !dbg !1198
  %24 = load i32, i32* %buf_row_idx7, align 4, !dbg !1198
  %mul8 = mul nsw i32 %22, %24, !dbg !1199
  %idx.ext9 = sext i32 %mul8 to i64, !dbg !1200
  %add.ptr10 = getelementptr inbounds i8, i8* %20, i64 %idx.ext9, !dbg !1200
  store i8* %add.ptr10, i8** %row, align 8, !dbg !1201
  store i32 0, i32* %i, align 4, !dbg !1202
  br label %for.cond, !dbg !1204

for.cond:                                         ; preds = %for.inc, %cond.end
  %25 = load i32, i32* %i, align 4, !dbg !1205
  %26 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1208
  %w11 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %26, i32 0, i32 1, !dbg !1209
  %27 = load i32, i32* %w11, align 8, !dbg !1209
  %cmp12 = icmp slt i32 %25, %27, !dbg !1210
  br i1 %cmp12, label %for.body, label %for.end, !dbg !1211

for.body:                                         ; preds = %for.cond
  %28 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1212
  %stitch = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %28, i32 0, i32 15, !dbg !1215
  %29 = load i32, i32* %stitch, align 4, !dbg !1215
  %tobool = icmp ne i32 %29, 0, !dbg !1212
  br i1 %tobool, label %if.then, label %if.else, !dbg !1216

if.then:                                          ; preds = %for.body
  %30 = load i32, i32* %i, align 4, !dbg !1217
  %sub13 = sub nsw i32 %30, 1, !dbg !1219
  %cmp14 = icmp slt i32 %sub13, 0, !dbg !1220
  br i1 %cmp14, label %cond.true15, label %cond.false18, !dbg !1217

cond.true15:                                      ; preds = %if.then
  %31 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1221
  %w16 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %31, i32 0, i32 1, !dbg !1223
  %32 = load i32, i32* %w16, align 8, !dbg !1223
  %sub17 = sub nsw i32 %32, 1, !dbg !1224
  br label %cond.end20, !dbg !1225

cond.false18:                                     ; preds = %if.then
  %33 = load i32, i32* %i, align 4, !dbg !1226
  %sub19 = sub nsw i32 %33, 1, !dbg !1228
  br label %cond.end20, !dbg !1229

cond.end20:                                       ; preds = %cond.false18, %cond.true15
  %cond21 = phi i32 [ %sub17, %cond.true15 ], [ %sub19, %cond.false18 ], !dbg !1230
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* %pos, i64 0, i64 0, !dbg !1232
  store i32 %cond21, i32* %arrayidx, align 4, !dbg !1233
  %34 = load i32, i32* %i, align 4, !dbg !1234
  %arrayidx22 = getelementptr inbounds [3 x i32], [3 x i32]* %pos, i64 0, i64 1, !dbg !1235
  store i32 %34, i32* %arrayidx22, align 4, !dbg !1236
  %35 = load i32, i32* %i, align 4, !dbg !1237
  %add23 = add nsw i32 %35, 1, !dbg !1238
  %36 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1239
  %w24 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %36, i32 0, i32 1, !dbg !1240
  %37 = load i32, i32* %w24, align 8, !dbg !1240
  %cmp25 = icmp eq i32 %add23, %37, !dbg !1241
  br i1 %cmp25, label %cond.true26, label %cond.false27, !dbg !1237

cond.true26:                                      ; preds = %cond.end20
  br label %cond.end29, !dbg !1242

cond.false27:                                     ; preds = %cond.end20
  %38 = load i32, i32* %i, align 4, !dbg !1243
  %add28 = add nsw i32 %38, 1, !dbg !1244
  br label %cond.end29, !dbg !1245

cond.end29:                                       ; preds = %cond.false27, %cond.true26
  %cond30 = phi i32 [ 0, %cond.true26 ], [ %add28, %cond.false27 ], !dbg !1246
  %arrayidx31 = getelementptr inbounds [3 x i32], [3 x i32]* %pos, i64 0, i64 2, !dbg !1247
  store i32 %cond30, i32* %arrayidx31, align 4, !dbg !1248
  %arrayidx32 = getelementptr inbounds [3 x i32], [3 x i32]* %pos, i64 0, i64 0, !dbg !1249
  %39 = load i32, i32* %arrayidx32, align 4, !dbg !1249
  %idxprom = sext i32 %39 to i64, !dbg !1250
  %40 = load i8*, i8** %prev_row, align 8, !dbg !1250
  %arrayidx33 = getelementptr inbounds i8, i8* %40, i64 %idxprom, !dbg !1250
  %41 = load i8, i8* %arrayidx33, align 1, !dbg !1250
  %conv = zext i8 %41 to i32, !dbg !1250
  %shl = shl i32 %conv, 2, !dbg !1251
  %arrayidx34 = getelementptr inbounds [3 x i32], [3 x i32]* %pos, i64 0, i64 1, !dbg !1252
  %42 = load i32, i32* %arrayidx34, align 4, !dbg !1252
  %idxprom35 = sext i32 %42 to i64, !dbg !1253
  %43 = load i8*, i8** %prev_row, align 8, !dbg !1253
  %arrayidx36 = getelementptr inbounds i8, i8* %43, i64 %idxprom35, !dbg !1253
  %44 = load i8, i8* %arrayidx36, align 1, !dbg !1253
  %conv37 = zext i8 %44 to i32, !dbg !1253
  %shl38 = shl i32 %conv37, 1, !dbg !1254
  %or = or i32 %shl, %shl38, !dbg !1255
  %arrayidx39 = getelementptr inbounds [3 x i32], [3 x i32]* %pos, i64 0, i64 2, !dbg !1256
  %45 = load i32, i32* %arrayidx39, align 4, !dbg !1256
  %idxprom40 = sext i32 %45 to i64, !dbg !1257
  %46 = load i8*, i8** %prev_row, align 8, !dbg !1257
  %arrayidx41 = getelementptr inbounds i8, i8* %46, i64 %idxprom40, !dbg !1257
  %47 = load i8, i8* %arrayidx41, align 1, !dbg !1257
  %conv42 = zext i8 %47 to i32, !dbg !1257
  %or43 = or i32 %or, %conv42, !dbg !1258
  store i32 %or43, i32* %v, align 4, !dbg !1259
  br label %if.end, !dbg !1260

if.else:                                          ; preds = %for.body
  store i32 0, i32* %v, align 4, !dbg !1261
  %48 = load i32, i32* %i, align 4, !dbg !1263
  %sub44 = sub nsw i32 %48, 1, !dbg !1264
  %cmp45 = icmp sge i32 %sub44, 0, !dbg !1265
  br i1 %cmp45, label %cond.true47, label %cond.false53, !dbg !1263

cond.true47:                                      ; preds = %if.else
  %49 = load i32, i32* %i, align 4, !dbg !1266
  %sub48 = sub nsw i32 %49, 1, !dbg !1268
  %idxprom49 = sext i32 %sub48 to i64, !dbg !1269
  %50 = load i8*, i8** %prev_row, align 8, !dbg !1269
  %arrayidx50 = getelementptr inbounds i8, i8* %50, i64 %idxprom49, !dbg !1269
  %51 = load i8, i8* %arrayidx50, align 1, !dbg !1269
  %conv51 = zext i8 %51 to i32, !dbg !1269
  %shl52 = shl i32 %conv51, 2, !dbg !1270
  br label %cond.end54, !dbg !1271

cond.false53:                                     ; preds = %if.else
  br label %cond.end54, !dbg !1272

cond.end54:                                       ; preds = %cond.false53, %cond.true47
  %cond55 = phi i32 [ %shl52, %cond.true47 ], [ 0, %cond.false53 ], !dbg !1274
  %52 = load i32, i32* %v, align 4, !dbg !1276
  %or56 = or i32 %52, %cond55, !dbg !1276
  store i32 %or56, i32* %v, align 4, !dbg !1276
  %53 = load i32, i32* %i, align 4, !dbg !1277
  %idxprom57 = sext i32 %53 to i64, !dbg !1278
  %54 = load i8*, i8** %prev_row, align 8, !dbg !1278
  %arrayidx58 = getelementptr inbounds i8, i8* %54, i64 %idxprom57, !dbg !1278
  %55 = load i8, i8* %arrayidx58, align 1, !dbg !1278
  %conv59 = zext i8 %55 to i32, !dbg !1278
  %shl60 = shl i32 %conv59, 1, !dbg !1279
  %56 = load i32, i32* %v, align 4, !dbg !1280
  %or61 = or i32 %56, %shl60, !dbg !1280
  store i32 %or61, i32* %v, align 4, !dbg !1280
  %57 = load i32, i32* %i, align 4, !dbg !1281
  %add62 = add nsw i32 %57, 1, !dbg !1282
  %58 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1283
  %w63 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %58, i32 0, i32 1, !dbg !1284
  %59 = load i32, i32* %w63, align 8, !dbg !1284
  %cmp64 = icmp slt i32 %add62, %59, !dbg !1285
  br i1 %cmp64, label %cond.true66, label %cond.false71, !dbg !1281

cond.true66:                                      ; preds = %cond.end54
  %60 = load i32, i32* %i, align 4, !dbg !1286
  %add67 = add nsw i32 %60, 1, !dbg !1287
  %idxprom68 = sext i32 %add67 to i64, !dbg !1288
  %61 = load i8*, i8** %prev_row, align 8, !dbg !1288
  %arrayidx69 = getelementptr inbounds i8, i8* %61, i64 %idxprom68, !dbg !1288
  %62 = load i8, i8* %arrayidx69, align 1, !dbg !1288
  %conv70 = zext i8 %62 to i32, !dbg !1288
  br label %cond.end72, !dbg !1289

cond.false71:                                     ; preds = %cond.end54
  br label %cond.end72, !dbg !1290

cond.end72:                                       ; preds = %cond.false71, %cond.true66
  %cond73 = phi i32 [ %conv70, %cond.true66 ], [ 0, %cond.false71 ], !dbg !1291
  %63 = load i32, i32* %v, align 4, !dbg !1292
  %or74 = or i32 %63, %cond73, !dbg !1292
  store i32 %or74, i32* %v, align 4, !dbg !1292
  br label %if.end

if.end:                                           ; preds = %cond.end72, %cond.end29
  %64 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1293
  %rule = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %64, i32 0, i32 10, !dbg !1294
  %65 = load i8, i8* %rule, align 8, !dbg !1294
  %conv75 = zext i8 %65 to i32, !dbg !1293
  %66 = load i32, i32* %v, align 4, !dbg !1295
  %shl76 = shl i32 1, %66, !dbg !1296
  %and = and i32 %conv75, %shl76, !dbg !1297
  %tobool77 = icmp ne i32 %and, 0, !dbg !1298
  %lnot = xor i1 %tobool77, true, !dbg !1298
  %lnot78 = xor i1 %lnot, true, !dbg !1299
  %lnot.ext = zext i1 %lnot78 to i32, !dbg !1299
  %conv79 = trunc i32 %lnot.ext to i8, !dbg !1299
  %67 = load i32, i32* %i, align 4, !dbg !1300
  %idxprom80 = sext i32 %67 to i64, !dbg !1301
  %68 = load i8*, i8** %row, align 8, !dbg !1301
  %arrayidx81 = getelementptr inbounds i8, i8* %68, i64 %idxprom80, !dbg !1301
  store i8 %conv79, i8* %arrayidx81, align 1, !dbg !1302
  br label %do.body, !dbg !1303, !llvm.loop !1304

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !1305

do.end:                                           ; preds = %do.body
  br label %for.inc, !dbg !1308

for.inc:                                          ; preds = %do.end
  %69 = load i32, i32* %i, align 4, !dbg !1309
  %inc = add nsw i32 %69, 1, !dbg !1309
  store i32 %inc, i32* %i, align 4, !dbg !1309
  br label %for.cond, !dbg !1311, !llvm.loop !1312

for.end:                                          ; preds = %for.cond
  %70 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1314
  %generation = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %70, i32 0, i32 18, !dbg !1315
  %71 = load i64, i64* %generation, align 8, !dbg !1316
  %inc82 = add nsw i64 %71, 1, !dbg !1316
  store i64 %inc82, i64* %generation, align 8, !dbg !1316
  ret void, !dbg !1317
}

; Function Attrs: nounwind uwtable
define internal void @fill_picture(%struct.AVFilterContext* %ctx, %struct.AVFrame* %picref) #1 !dbg !1318 {
entry:
  %ctx.addr = alloca %struct.AVFilterContext*, align 8
  %picref.addr = alloca %struct.AVFrame*, align 8
  %s = alloca %struct.CellAutoContext*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %row_idx = alloca i32, align 4
  %p0 = alloca i8*, align 8
  %byte = alloca i8, align 1
  %row = alloca i8*, align 8
  %p = alloca i8*, align 8
  store %struct.AVFilterContext* %ctx, %struct.AVFilterContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx.addr, metadata !1321, metadata !809), !dbg !1322
  store %struct.AVFrame* %picref, %struct.AVFrame** %picref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %picref.addr, metadata !1323, metadata !809), !dbg !1324
  call void @llvm.dbg.declare(metadata %struct.CellAutoContext** %s, metadata !1325, metadata !809), !dbg !1326
  %0 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !1327
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %0, i32 0, i32 9, !dbg !1328
  %1 = load i8*, i8** %priv, align 8, !dbg !1328
  %2 = bitcast i8* %1 to %struct.CellAutoContext*, !dbg !1327
  store %struct.CellAutoContext* %2, %struct.CellAutoContext** %s, align 8, !dbg !1326
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1329, metadata !809), !dbg !1330
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1331, metadata !809), !dbg !1332
  call void @llvm.dbg.declare(metadata i32* %k, metadata !1333, metadata !809), !dbg !1334
  call void @llvm.dbg.declare(metadata i32* %row_idx, metadata !1335, metadata !809), !dbg !1336
  store i32 0, i32* %row_idx, align 4, !dbg !1336
  call void @llvm.dbg.declare(metadata i8** %p0, metadata !1337, metadata !809), !dbg !1338
  %3 = load %struct.AVFrame*, %struct.AVFrame** %picref.addr, align 8, !dbg !1339
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %3, i32 0, i32 0, !dbg !1340
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 0, !dbg !1339
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !1339
  store i8* %4, i8** %p0, align 8, !dbg !1338
  %5 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1341
  %scroll = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %5, i32 0, i32 16, !dbg !1343
  %6 = load i32, i32* %scroll, align 8, !dbg !1343
  %tobool = icmp ne i32 %6, 0, !dbg !1341
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !1344

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1345
  %generation = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %7, i32 0, i32 18, !dbg !1347
  %8 = load i64, i64* %generation, align 8, !dbg !1347
  %9 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1348
  %h = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %9, i32 0, i32 2, !dbg !1349
  %10 = load i32, i32* %h, align 4, !dbg !1349
  %conv = sext i32 %10 to i64, !dbg !1348
  %cmp = icmp sge i64 %8, %conv, !dbg !1350
  br i1 %cmp, label %if.then, label %if.end, !dbg !1351

if.then:                                          ; preds = %land.lhs.true
  %11 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1352
  %buf_row_idx = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %11, i32 0, i32 9, !dbg !1353
  %12 = load i32, i32* %buf_row_idx, align 4, !dbg !1353
  %add = add nsw i32 %12, 1, !dbg !1354
  %13 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1355
  %h2 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %13, i32 0, i32 2, !dbg !1356
  %14 = load i32, i32* %h2, align 4, !dbg !1356
  %rem = srem i32 %add, %14, !dbg !1357
  store i32 %rem, i32* %row_idx, align 4, !dbg !1358
  br label %if.end, !dbg !1359

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  store i32 0, i32* %i, align 4, !dbg !1360
  br label %for.cond, !dbg !1362

for.cond:                                         ; preds = %for.inc30, %if.end
  %15 = load i32, i32* %i, align 4, !dbg !1363
  %16 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1366
  %h3 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %16, i32 0, i32 2, !dbg !1367
  %17 = load i32, i32* %h3, align 4, !dbg !1367
  %cmp4 = icmp slt i32 %15, %17, !dbg !1368
  br i1 %cmp4, label %for.body, label %for.end32, !dbg !1369

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8* %byte, metadata !1370, metadata !809), !dbg !1372
  store i8 0, i8* %byte, align 1, !dbg !1372
  call void @llvm.dbg.declare(metadata i8** %row, metadata !1373, metadata !809), !dbg !1374
  %18 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1375
  %buf = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %18, i32 0, i32 7, !dbg !1376
  %19 = load i8*, i8** %buf, align 8, !dbg !1376
  %20 = load i32, i32* %row_idx, align 4, !dbg !1377
  %21 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1378
  %w = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %21, i32 0, i32 1, !dbg !1379
  %22 = load i32, i32* %w, align 8, !dbg !1379
  %mul = mul nsw i32 %20, %22, !dbg !1380
  %idx.ext = sext i32 %mul to i64, !dbg !1381
  %add.ptr = getelementptr inbounds i8, i8* %19, i64 %idx.ext, !dbg !1381
  store i8* %add.ptr, i8** %row, align 8, !dbg !1374
  call void @llvm.dbg.declare(metadata i8** %p, metadata !1382, metadata !809), !dbg !1383
  %23 = load i8*, i8** %p0, align 8, !dbg !1384
  store i8* %23, i8** %p, align 8, !dbg !1383
  store i32 0, i32* %k, align 4, !dbg !1385
  store i32 0, i32* %j, align 4, !dbg !1387
  br label %for.cond6, !dbg !1388

for.cond6:                                        ; preds = %for.inc, %for.body
  %24 = load i32, i32* %j, align 4, !dbg !1389
  %25 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1392
  %w7 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %25, i32 0, i32 1, !dbg !1393
  %26 = load i32, i32* %w7, align 8, !dbg !1393
  %cmp8 = icmp slt i32 %24, %26, !dbg !1394
  br i1 %cmp8, label %for.body10, label %for.end, !dbg !1395

for.body10:                                       ; preds = %for.cond6
  %27 = load i32, i32* %j, align 4, !dbg !1396
  %idxprom = sext i32 %27 to i64, !dbg !1398
  %28 = load i8*, i8** %row, align 8, !dbg !1398
  %arrayidx11 = getelementptr inbounds i8, i8* %28, i64 %idxprom, !dbg !1398
  %29 = load i8, i8* %arrayidx11, align 1, !dbg !1398
  %conv12 = zext i8 %29 to i32, !dbg !1398
  %30 = load i32, i32* %k, align 4, !dbg !1399
  %inc = add nsw i32 %30, 1, !dbg !1399
  store i32 %inc, i32* %k, align 4, !dbg !1399
  %sub = sub nsw i32 7, %30, !dbg !1400
  %shl = shl i32 %conv12, %sub, !dbg !1401
  %31 = load i8, i8* %byte, align 1, !dbg !1402
  %conv13 = zext i8 %31 to i32, !dbg !1402
  %or = or i32 %conv13, %shl, !dbg !1402
  %conv14 = trunc i32 %or to i8, !dbg !1402
  store i8 %conv14, i8* %byte, align 1, !dbg !1402
  %32 = load i32, i32* %k, align 4, !dbg !1403
  %cmp15 = icmp eq i32 %32, 8, !dbg !1405
  br i1 %cmp15, label %if.then21, label %lor.lhs.false, !dbg !1406

lor.lhs.false:                                    ; preds = %for.body10
  %33 = load i32, i32* %j, align 4, !dbg !1407
  %34 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1409
  %w17 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %34, i32 0, i32 1, !dbg !1410
  %35 = load i32, i32* %w17, align 8, !dbg !1410
  %sub18 = sub nsw i32 %35, 1, !dbg !1411
  %cmp19 = icmp eq i32 %33, %sub18, !dbg !1412
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !1413

if.then21:                                        ; preds = %lor.lhs.false, %for.body10
  store i32 0, i32* %k, align 4, !dbg !1414
  %36 = load i8, i8* %byte, align 1, !dbg !1416
  %37 = load i8*, i8** %p, align 8, !dbg !1417
  %incdec.ptr = getelementptr inbounds i8, i8* %37, i32 1, !dbg !1417
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !1417
  store i8 %36, i8* %37, align 1, !dbg !1418
  store i8 0, i8* %byte, align 1, !dbg !1419
  br label %if.end22, !dbg !1420

if.end22:                                         ; preds = %if.then21, %lor.lhs.false
  br label %for.inc, !dbg !1421

for.inc:                                          ; preds = %if.end22
  %38 = load i32, i32* %j, align 4, !dbg !1422
  %inc23 = add nsw i32 %38, 1, !dbg !1422
  store i32 %inc23, i32* %j, align 4, !dbg !1422
  br label %for.cond6, !dbg !1424, !llvm.loop !1425

for.end:                                          ; preds = %for.cond6
  %39 = load i32, i32* %row_idx, align 4, !dbg !1427
  %add24 = add nsw i32 %39, 1, !dbg !1428
  %40 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1429
  %h25 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %40, i32 0, i32 2, !dbg !1430
  %41 = load i32, i32* %h25, align 4, !dbg !1430
  %rem26 = srem i32 %add24, %41, !dbg !1431
  store i32 %rem26, i32* %row_idx, align 4, !dbg !1432
  %42 = load %struct.AVFrame*, %struct.AVFrame** %picref.addr, align 8, !dbg !1433
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %42, i32 0, i32 1, !dbg !1434
  %arrayidx27 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 0, !dbg !1433
  %43 = load i32, i32* %arrayidx27, align 8, !dbg !1433
  %44 = load i8*, i8** %p0, align 8, !dbg !1435
  %idx.ext28 = sext i32 %43 to i64, !dbg !1435
  %add.ptr29 = getelementptr inbounds i8, i8* %44, i64 %idx.ext28, !dbg !1435
  store i8* %add.ptr29, i8** %p0, align 8, !dbg !1435
  br label %for.inc30, !dbg !1436

for.inc30:                                        ; preds = %for.end
  %45 = load i32, i32* %i, align 4, !dbg !1437
  %inc31 = add nsw i32 %45, 1, !dbg !1437
  store i32 %inc31, i32* %i, align 4, !dbg !1437
  br label %for.cond, !dbg !1439, !llvm.loop !1440

for.end32:                                        ; preds = %for.cond
  ret void, !dbg !1442
}

declare i32 @ff_filter_frame(%struct.AVFilterLink*, %struct.AVFrame*) #3

declare i8* @av_default_item_name(i8*) #3

declare i32 @av_opt_set(i8*, i8*, i8*, i32) #3

declare void @av_log(i8*, i32, i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal i32 @init_pattern_from_file(%struct.AVFilterContext* %ctx) #1 !dbg !1443 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.AVFilterContext*, align 8
  %s = alloca %struct.CellAutoContext*, align 8
  %ret = alloca i32, align 4
  store %struct.AVFilterContext* %ctx, %struct.AVFilterContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx.addr, metadata !1444, metadata !809), !dbg !1445
  call void @llvm.dbg.declare(metadata %struct.CellAutoContext** %s, metadata !1446, metadata !809), !dbg !1447
  %0 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !1448
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %0, i32 0, i32 9, !dbg !1449
  %1 = load i8*, i8** %priv, align 8, !dbg !1449
  %2 = bitcast i8* %1 to %struct.CellAutoContext*, !dbg !1448
  store %struct.CellAutoContext* %2, %struct.CellAutoContext** %s, align 8, !dbg !1447
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1450, metadata !809), !dbg !1451
  %3 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1452
  %filename = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %3, i32 0, i32 3, !dbg !1453
  %4 = load i8*, i8** %filename, align 8, !dbg !1453
  %5 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1454
  %file_buf = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %5, i32 0, i32 5, !dbg !1455
  %6 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1456
  %file_bufsize = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %6, i32 0, i32 6, !dbg !1457
  %7 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !1458
  %8 = bitcast %struct.AVFilterContext* %7 to i8*, !dbg !1458
  %call = call i32 @av_file_map(i8* %4, i8** %file_buf, i64* %file_bufsize, i32 0, i8* %8), !dbg !1459
  store i32 %call, i32* %ret, align 4, !dbg !1460
  %9 = load i32, i32* %ret, align 4, !dbg !1461
  %cmp = icmp slt i32 %9, 0, !dbg !1463
  br i1 %cmp, label %if.then, label %if.end, !dbg !1464

if.then:                                          ; preds = %entry
  %10 = load i32, i32* %ret, align 4, !dbg !1465
  store i32 %10, i32* %retval, align 4, !dbg !1466
  br label %return, !dbg !1466

if.end:                                           ; preds = %entry
  %11 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1467
  %file_bufsize1 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %11, i32 0, i32 6, !dbg !1468
  %12 = load i64, i64* %file_bufsize1, align 8, !dbg !1468
  %add = add i64 %12, 1, !dbg !1469
  %call2 = call noalias i8* @av_malloc(i64 %add), !dbg !1470
  %13 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1471
  %pattern = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %13, i32 0, i32 20, !dbg !1472
  store i8* %call2, i8** %pattern, align 8, !dbg !1473
  %14 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1474
  %pattern3 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %14, i32 0, i32 20, !dbg !1476
  %15 = load i8*, i8** %pattern3, align 8, !dbg !1476
  %tobool = icmp ne i8* %15, null, !dbg !1474
  br i1 %tobool, label %if.end5, label %if.then4, !dbg !1477

if.then4:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !1478
  br label %return, !dbg !1478

if.end5:                                          ; preds = %if.end
  %16 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1479
  %pattern6 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %16, i32 0, i32 20, !dbg !1480
  %17 = load i8*, i8** %pattern6, align 8, !dbg !1480
  %18 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1481
  %file_buf7 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %18, i32 0, i32 5, !dbg !1482
  %19 = load i8*, i8** %file_buf7, align 8, !dbg !1482
  %20 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1483
  %file_bufsize8 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %20, i32 0, i32 6, !dbg !1484
  %21 = load i64, i64* %file_bufsize8, align 8, !dbg !1484
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %19, i64 %21, i32 1, i1 false), !dbg !1485
  %22 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1486
  %file_bufsize9 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %22, i32 0, i32 6, !dbg !1487
  %23 = load i64, i64* %file_bufsize9, align 8, !dbg !1487
  %24 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1488
  %pattern10 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %24, i32 0, i32 20, !dbg !1489
  %25 = load i8*, i8** %pattern10, align 8, !dbg !1489
  %arrayidx = getelementptr inbounds i8, i8* %25, i64 %23, !dbg !1488
  store i8 0, i8* %arrayidx, align 1, !dbg !1490
  %26 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !1491
  %call11 = call i32 @init_pattern_from_string(%struct.AVFilterContext* %26), !dbg !1492
  store i32 %call11, i32* %retval, align 4, !dbg !1493
  br label %return, !dbg !1493

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !1494
  ret i32 %27, !dbg !1494
}

; Function Attrs: nounwind uwtable
define internal i32 @init_pattern_from_string(%struct.AVFilterContext* %ctx) #1 !dbg !1495 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.AVFilterContext*, align 8
  %s = alloca %struct.CellAutoContext*, align 8
  %p = alloca i8*, align 8
  %i = alloca i32, align 4
  %w = alloca i32, align 4
  store %struct.AVFilterContext* %ctx, %struct.AVFilterContext** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFilterContext** %ctx.addr, metadata !1496, metadata !809), !dbg !1497
  call void @llvm.dbg.declare(metadata %struct.CellAutoContext** %s, metadata !1498, metadata !809), !dbg !1499
  %0 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !1500
  %priv = getelementptr inbounds %struct.AVFilterContext, %struct.AVFilterContext* %0, i32 0, i32 9, !dbg !1501
  %1 = load i8*, i8** %priv, align 8, !dbg !1501
  %2 = bitcast i8* %1 to %struct.CellAutoContext*, !dbg !1500
  store %struct.CellAutoContext* %2, %struct.CellAutoContext** %s, align 8, !dbg !1499
  call void @llvm.dbg.declare(metadata i8** %p, metadata !1502, metadata !809), !dbg !1503
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1504, metadata !809), !dbg !1505
  call void @llvm.dbg.declare(metadata i32* %w, metadata !1506, metadata !809), !dbg !1507
  store i32 0, i32* %w, align 4, !dbg !1507
  %3 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1508
  %pattern = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %3, i32 0, i32 20, !dbg !1509
  %4 = load i8*, i8** %pattern, align 8, !dbg !1509
  %call = call i64 @strlen(i8* %4) #9, !dbg !1510
  %conv = trunc i64 %call to i32, !dbg !1510
  store i32 %conv, i32* %w, align 4, !dbg !1511
  %5 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !1512
  %6 = bitcast %struct.AVFilterContext* %5 to i8*, !dbg !1512
  %7 = load i32, i32* %w, align 4, !dbg !1513
  call void (i8*, i32, i8*, ...) @av_log(i8* %6, i32 48, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i32 0, i32 0), i32 %7), !dbg !1514
  %8 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1515
  %w1 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %8, i32 0, i32 1, !dbg !1517
  %9 = load i32, i32* %w1, align 8, !dbg !1517
  %tobool = icmp ne i32 %9, 0, !dbg !1515
  br i1 %tobool, label %if.then, label %if.else, !dbg !1518

if.then:                                          ; preds = %entry
  %10 = load i32, i32* %w, align 4, !dbg !1519
  %11 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1522
  %w2 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %11, i32 0, i32 1, !dbg !1523
  %12 = load i32, i32* %w2, align 8, !dbg !1523
  %cmp = icmp sgt i32 %10, %12, !dbg !1524
  br i1 %cmp, label %if.then4, label %if.end, !dbg !1525

if.then4:                                         ; preds = %if.then
  %13 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !1526
  %14 = bitcast %struct.AVFilterContext* %13 to i8*, !dbg !1526
  %15 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1528
  %w5 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %15, i32 0, i32 1, !dbg !1529
  %16 = load i32, i32* %w5, align 8, !dbg !1529
  %17 = load i32, i32* %w, align 4, !dbg !1530
  call void (i8*, i32, i8*, ...) @av_log(i8* %14, i32 16, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.36, i32 0, i32 0), i32 %16, i32 %17), !dbg !1531
  store i32 -22, i32* %retval, align 4, !dbg !1532
  br label %return, !dbg !1532

if.end:                                           ; preds = %if.then
  br label %if.end10, !dbg !1533

if.else:                                          ; preds = %entry
  %18 = load i32, i32* %w, align 4, !dbg !1534
  %19 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1536
  %w6 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %19, i32 0, i32 1, !dbg !1537
  store i32 %18, i32* %w6, align 8, !dbg !1538
  %20 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1539
  %w7 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %20, i32 0, i32 1, !dbg !1540
  %21 = load i32, i32* %w7, align 8, !dbg !1540
  %conv8 = sitofp i32 %21 to double, !dbg !1541
  %mul = fmul double %conv8, 0x3FF9E3779B97F4A8, !dbg !1542
  %conv9 = fptosi double %mul to i32, !dbg !1541
  %22 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1543
  %h = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %22, i32 0, i32 2, !dbg !1544
  store i32 %conv9, i32* %h, align 4, !dbg !1545
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.end
  %23 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1546
  %w11 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %23, i32 0, i32 1, !dbg !1547
  %24 = load i32, i32* %w11, align 8, !dbg !1547
  %conv12 = sext i32 %24 to i64, !dbg !1546
  %mul13 = mul i64 1, %conv12, !dbg !1548
  %25 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1549
  %h14 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %25, i32 0, i32 2, !dbg !1550
  %26 = load i32, i32* %h14, align 4, !dbg !1550
  %conv15 = sext i32 %26 to i64, !dbg !1549
  %call16 = call i8* @av_mallocz_array(i64 %mul13, i64 %conv15), !dbg !1551
  %27 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1552
  %buf = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %27, i32 0, i32 7, !dbg !1553
  store i8* %call16, i8** %buf, align 8, !dbg !1554
  %28 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1555
  %buf17 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %28, i32 0, i32 7, !dbg !1557
  %29 = load i8*, i8** %buf17, align 8, !dbg !1557
  %tobool18 = icmp ne i8* %29, null, !dbg !1555
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !1558

if.then19:                                        ; preds = %if.end10
  store i32 -12, i32* %retval, align 4, !dbg !1559
  br label %return, !dbg !1559

if.end20:                                         ; preds = %if.end10
  %30 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1560
  %pattern21 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %30, i32 0, i32 20, !dbg !1561
  %31 = load i8*, i8** %pattern21, align 8, !dbg !1561
  store i8* %31, i8** %p, align 8, !dbg !1562
  %32 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1563
  %w22 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %32, i32 0, i32 1, !dbg !1565
  %33 = load i32, i32* %w22, align 8, !dbg !1565
  %34 = load i32, i32* %w, align 4, !dbg !1566
  %sub = sub nsw i32 %33, %34, !dbg !1567
  %div = sdiv i32 %sub, 2, !dbg !1568
  store i32 %div, i32* %i, align 4, !dbg !1569
  br label %for.cond, !dbg !1570

for.cond:                                         ; preds = %for.inc, %if.end20
  %35 = load %struct.AVFilterContext*, %struct.AVFilterContext** %ctx.addr, align 8, !dbg !1571
  %36 = bitcast %struct.AVFilterContext* %35 to i8*, !dbg !1571
  %37 = load i32, i32* %i, align 4, !dbg !1574
  %38 = load i8*, i8** %p, align 8, !dbg !1575
  %39 = load i8, i8* %38, align 1, !dbg !1576
  %conv23 = sext i8 %39 to i32, !dbg !1576
  %cmp24 = icmp eq i32 %conv23, 10, !dbg !1577
  br i1 %cmp24, label %cond.true, label %cond.false, !dbg !1576

cond.true:                                        ; preds = %for.cond
  br label %cond.end, !dbg !1578

cond.false:                                       ; preds = %for.cond
  %40 = load i8*, i8** %p, align 8, !dbg !1580
  %41 = load i8, i8* %40, align 1, !dbg !1582
  %conv26 = sext i8 %41 to i32, !dbg !1582
  br label %cond.end, !dbg !1583

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 78, %cond.true ], [ %conv26, %cond.false ], !dbg !1584
  call void (i8*, i32, i8*, ...) @av_log(i8* %36, i32 48, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i32 0, i32 0), i32 %37, i32 %cond), !dbg !1586
  %42 = load i8*, i8** %p, align 8, !dbg !1587
  %43 = load i8, i8* %42, align 1, !dbg !1589
  %conv27 = sext i8 %43 to i32, !dbg !1589
  %cmp28 = icmp eq i32 %conv27, 10, !dbg !1590
  br i1 %cmp28, label %if.then31, label %lor.lhs.false, !dbg !1591

lor.lhs.false:                                    ; preds = %cond.end
  %44 = load i8*, i8** %p, align 8, !dbg !1592
  %45 = load i8, i8* %44, align 1, !dbg !1594
  %tobool30 = icmp ne i8 %45, 0, !dbg !1594
  br i1 %tobool30, label %if.else32, label %if.then31, !dbg !1595

if.then31:                                        ; preds = %lor.lhs.false, %cond.end
  br label %for.end, !dbg !1596

if.else32:                                        ; preds = %lor.lhs.false
  %46 = load i8*, i8** %p, align 8, !dbg !1597
  %incdec.ptr = getelementptr inbounds i8, i8* %46, i32 1, !dbg !1597
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !1597
  %47 = load i8, i8* %46, align 1, !dbg !1598
  %conv33 = sext i8 %47 to i32, !dbg !1598
  %call34 = call i32 @av_isgraph(i32 %conv33) #2, !dbg !1599
  %tobool35 = icmp ne i32 %call34, 0, !dbg !1600
  %lnot = xor i1 %tobool35, true, !dbg !1600
  %lnot36 = xor i1 %lnot, true, !dbg !1601
  %lnot.ext = zext i1 %lnot36 to i32, !dbg !1601
  %conv37 = trunc i32 %lnot.ext to i8, !dbg !1601
  %48 = load i32, i32* %i, align 4, !dbg !1602
  %idxprom = sext i32 %48 to i64, !dbg !1603
  %49 = load %struct.CellAutoContext*, %struct.CellAutoContext** %s, align 8, !dbg !1603
  %buf38 = getelementptr inbounds %struct.CellAutoContext, %struct.CellAutoContext* %49, i32 0, i32 7, !dbg !1604
  %50 = load i8*, i8** %buf38, align 8, !dbg !1604
  %arrayidx = getelementptr inbounds i8, i8* %50, i64 %idxprom, !dbg !1603
  store i8 %conv37, i8* %arrayidx, align 1, !dbg !1605
  br label %if.end39

if.end39:                                         ; preds = %if.else32
  br label %for.inc, !dbg !1606

for.inc:                                          ; preds = %if.end39
  %51 = load i32, i32* %i, align 4, !dbg !1607
  %inc = add nsw i32 %51, 1, !dbg !1607
  store i32 %inc, i32* %i, align 4, !dbg !1607
  br label %for.cond, !dbg !1609, !llvm.loop !1610

for.end:                                          ; preds = %if.then31
  store i32 0, i32* %retval, align 4, !dbg !1612
  br label %return, !dbg !1612

return:                                           ; preds = %for.end, %if.then19, %if.then4
  %52 = load i32, i32* %retval, align 4, !dbg !1613
  ret i32 %52, !dbg !1613
}

declare i8* @av_mallocz_array(i64, i64) #3

declare i32 @av_get_random_seed() #3

declare void @av_lfg_init(%struct.AVLFG*, i32) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @av_lfg_get(%struct.AVLFG* %c) #5 !dbg !1614 {
entry:
  %c.addr = alloca %struct.AVLFG*, align 8
  store %struct.AVLFG* %c, %struct.AVLFG** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVLFG** %c.addr, metadata !1618, metadata !809), !dbg !1619
  %0 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !1620
  %index = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %0, i32 0, i32 1, !dbg !1621
  %1 = load i32, i32* %index, align 4, !dbg !1621
  %sub = sub nsw i32 %1, 24, !dbg !1622
  %and = and i32 %sub, 63, !dbg !1623
  %idxprom = sext i32 %and to i64, !dbg !1624
  %2 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !1624
  %state = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %2, i32 0, i32 0, !dbg !1625
  %arrayidx = getelementptr inbounds [64 x i32], [64 x i32]* %state, i64 0, i64 %idxprom, !dbg !1624
  %3 = load i32, i32* %arrayidx, align 4, !dbg !1624
  %4 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !1626
  %index1 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %4, i32 0, i32 1, !dbg !1627
  %5 = load i32, i32* %index1, align 4, !dbg !1627
  %sub2 = sub nsw i32 %5, 55, !dbg !1628
  %and3 = and i32 %sub2, 63, !dbg !1629
  %idxprom4 = sext i32 %and3 to i64, !dbg !1630
  %6 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !1630
  %state5 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %6, i32 0, i32 0, !dbg !1631
  %arrayidx6 = getelementptr inbounds [64 x i32], [64 x i32]* %state5, i64 0, i64 %idxprom4, !dbg !1630
  %7 = load i32, i32* %arrayidx6, align 4, !dbg !1630
  %add = add i32 %3, %7, !dbg !1632
  %8 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !1633
  %index7 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %8, i32 0, i32 1, !dbg !1634
  %9 = load i32, i32* %index7, align 4, !dbg !1634
  %and8 = and i32 %9, 63, !dbg !1635
  %idxprom9 = sext i32 %and8 to i64, !dbg !1636
  %10 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !1636
  %state10 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %10, i32 0, i32 0, !dbg !1637
  %arrayidx11 = getelementptr inbounds [64 x i32], [64 x i32]* %state10, i64 0, i64 %idxprom9, !dbg !1636
  store i32 %add, i32* %arrayidx11, align 4, !dbg !1638
  %11 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !1639
  %index12 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %11, i32 0, i32 1, !dbg !1640
  %12 = load i32, i32* %index12, align 4, !dbg !1641
  %inc = add nsw i32 %12, 1, !dbg !1641
  store i32 %inc, i32* %index12, align 4, !dbg !1641
  %and13 = and i32 %12, 63, !dbg !1642
  %idxprom14 = sext i32 %and13 to i64, !dbg !1643
  %13 = load %struct.AVLFG*, %struct.AVLFG** %c.addr, align 8, !dbg !1643
  %state15 = getelementptr inbounds %struct.AVLFG, %struct.AVLFG* %13, i32 0, i32 0, !dbg !1644
  %arrayidx16 = getelementptr inbounds [64 x i32], [64 x i32]* %state15, i64 0, i64 %idxprom14, !dbg !1643
  %14 = load i32, i32* %arrayidx16, align 4, !dbg !1643
  ret i32 %14, !dbg !1645
}

declare i32 @av_file_map(i8*, i8**, i64*, i32, i8*) #3

declare noalias i8* @av_malloc(i64) #3

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #6

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i32 @av_isgraph(i32 %c) #7 !dbg !1646 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !1650, metadata !809), !dbg !1651
  %0 = load i32, i32* %c.addr, align 4, !dbg !1652
  %cmp = icmp sgt i32 %0, 32, !dbg !1653
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !1654

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !1655
  %cmp1 = icmp slt i32 %1, 127, !dbg !1657
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ]
  %land.ext = zext i1 %2 to i32, !dbg !1658
  ret i32 %land.ext, !dbg !1660
}

declare void @av_file_unmap(i8*, i64) #3

declare void @av_freep(i8*) #3

declare %struct.AVFilterFormats* @ff_make_format_list(i32*) #3

declare i32 @ff_set_common_formats(%struct.AVFilterContext*, %struct.AVFilterFormats*) #3

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind readnone uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!804, !805}
!llvm.ident = !{!806}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !786, globals: !787)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a/[inter]libavfilter--vsrc_cellauto.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!2 = !{!3, !13, !23, !47, !54, !72, !96, !115, !125, !147, !168, !579, !587}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !4, line: 199, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!5 = !{!6, !7, !8, !9, !10, !11, !12}
!6 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!7 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!8 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!9 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!10 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!11 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!12 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !4, line: 272, size: 32, align: 32, elements: !14)
!14 = !{!15, !16, !17, !18, !19, !20, !21, !22}
!15 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!16 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!17 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!18 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!19 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!20 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!21 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!22 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!23 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !24, line: 48, size: 32, align: 32, elements: !25)
!24 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!25 = !{!26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46}
!26 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!27 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!28 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!29 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!30 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!31 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!32 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!33 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!34 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!35 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!36 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!37 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!38 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!39 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!40 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!41 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!42 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!43 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!44 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!45 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!46 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !48, line: 516, size: 32, align: 32, elements: !49)
!48 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!49 = !{!50, !51, !52, !53}
!50 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!51 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!52 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!53 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!54 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !48, line: 440, size: 32, align: 32, elements: !55)
!55 = !{!56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71}
!56 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!57 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!58 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!59 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!60 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!61 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!62 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!63 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!64 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!65 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!66 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!67 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!68 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!69 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!70 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!71 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !48, line: 464, size: 32, align: 32, elements: !73)
!73 = !{!74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95}
!74 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!75 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!76 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!77 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!78 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!79 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!80 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!81 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!82 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!83 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!84 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!85 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!86 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!87 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!88 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!89 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!90 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!91 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!92 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!93 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!94 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!95 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!96 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !48, line: 493, size: 32, align: 32, elements: !97)
!97 = !{!98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114}
!98 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!99 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!100 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!101 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!102 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!103 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!104 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!105 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!106 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!107 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!108 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!109 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!110 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!111 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!112 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!113 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!114 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!115 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !48, line: 538, size: 32, align: 32, elements: !116)
!116 = !{!117, !118, !119, !120, !121, !122, !123, !124}
!117 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!118 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!119 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!120 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!121 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!122 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!123 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!124 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!125 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !126, line: 221, size: 32, align: 32, elements: !127)
!126 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!127 = !{!128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146}
!128 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!129 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!130 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!131 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!132 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!133 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!134 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!135 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!136 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!137 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!138 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!139 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!140 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!141 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!142 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!143 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!144 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!145 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!146 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!147 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !148, line: 29, size: 32, align: 32, elements: !149)
!148 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!149 = !{!150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167}
!150 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!151 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!152 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!153 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!154 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!155 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!156 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!157 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!158 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!159 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!160 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!161 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!162 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!163 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!164 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!165 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!166 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!167 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!168 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !170, file: !169, line: 503, size: 32, align: 32, elements: !575)
!169 = !DIFile(filename: "libavfilter/avfilter.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterLink", file: !169, line: 439, size: 493504, align: 64, elements: !171)
!171 = !{!172, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !536, !537, !538, !539, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !170, file: !169, line: 440, baseType: !173, size: 64, align: 64)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 64, align: 64)
!174 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterContext", file: !169, line: 67, baseType: !175)
!175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterContext", file: !169, line: 338, size: 1344, align: 64, elements: !176)
!176 = !{!177, !264, !436, !437, !439, !441, !443, !444, !445, !446, !447, !487, !488, !494, !503, !504, !505, !507, !508, !509, !510, !511}
!177 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !175, file: !169, line: 339, baseType: !178, size: 64, align: 64)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 64, align: 64)
!179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !180)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !148, line: 143, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !148, line: 67, size: 640, align: 64, elements: !182)
!182 = !{!183, !187, !192, !223, !224, !225, !226, !230, !236, !238, !242}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !181, file: !148, line: 72, baseType: !184, size: 64, align: 64)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64, align: 64)
!185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !186)
!186 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !181, file: !148, line: 78, baseType: !188, size: 64, align: 64, offset: 64)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 64, align: 64)
!189 = !DISubroutineType(types: !190)
!190 = !{!184, !191}
!191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !181, file: !148, line: 85, baseType: !193, size: 64, align: 64, offset: 128)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 64, align: 64)
!194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !126, line: 246, size: 512, align: 64, elements: !196)
!196 = !{!197, !198, !199, !201, !202, !219, !220, !221, !222}
!197 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !195, file: !126, line: 247, baseType: !184, size: 64, align: 64)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !195, file: !126, line: 253, baseType: !184, size: 64, align: 64, offset: 64)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !195, file: !126, line: 259, baseType: !200, size: 32, align: 32, offset: 128)
!200 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !195, file: !126, line: 260, baseType: !125, size: 32, align: 32, offset: 160)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !195, file: !126, line: 271, baseType: !203, size: 64, align: 64, offset: 192)
!203 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !195, file: !126, line: 265, size: 64, align: 64, elements: !204)
!204 = !{!205, !209, !211, !212}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !203, file: !126, line: 266, baseType: !206, size: 64, align: 64)
!206 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !207, line: 40, baseType: !208)
!207 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!208 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !203, file: !126, line: 267, baseType: !210, size: 64, align: 64)
!210 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !203, file: !126, line: 268, baseType: !184, size: 64, align: 64)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !203, file: !126, line: 270, baseType: !213, size: 64, align: 32)
!213 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !214, line: 61, baseType: !215)
!214 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !214, line: 58, size: 64, align: 32, elements: !216)
!216 = !{!217, !218}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !215, file: !214, line: 59, baseType: !200, size: 32, align: 32)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !215, file: !214, line: 60, baseType: !200, size: 32, align: 32, offset: 32)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !195, file: !126, line: 272, baseType: !210, size: 64, align: 64, offset: 256)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !195, file: !126, line: 273, baseType: !210, size: 64, align: 64, offset: 320)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !195, file: !126, line: 275, baseType: !200, size: 32, align: 32, offset: 384)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !195, file: !126, line: 300, baseType: !184, size: 64, align: 64, offset: 448)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !181, file: !148, line: 93, baseType: !200, size: 32, align: 32, offset: 192)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !181, file: !148, line: 99, baseType: !200, size: 32, align: 32, offset: 224)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !181, file: !148, line: 108, baseType: !200, size: 32, align: 32, offset: 256)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !181, file: !148, line: 113, baseType: !227, size: 64, align: 64, offset: 320)
!227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !228, size: 64, align: 64)
!228 = !DISubroutineType(types: !229)
!229 = !{!191, !191, !191}
!230 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !181, file: !148, line: 123, baseType: !231, size: 64, align: 64, offset: 384)
!231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 64, align: 64)
!232 = !DISubroutineType(types: !233)
!233 = !{!234, !234}
!234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 64, align: 64)
!235 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !181)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !181, file: !148, line: 130, baseType: !237, size: 32, align: 32, offset: 448)
!237 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !148, line: 48, baseType: !147)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !181, file: !148, line: 136, baseType: !239, size: 64, align: 64, offset: 512)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64, align: 64)
!240 = !DISubroutineType(types: !241)
!241 = !{!237, !191}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !181, file: !148, line: 142, baseType: !243, size: 64, align: 64, offset: 576)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 64, align: 64)
!244 = !DISubroutineType(types: !245)
!245 = !{!200, !246, !191, !184, !200}
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 64, align: 64)
!247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 64, align: 64)
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !126, line: 329, size: 128, align: 64, elements: !249)
!249 = !{!250, !262, !263}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !248, file: !126, line: 360, baseType: !251, size: 64, align: 64)
!251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64, align: 64)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 64, align: 64)
!253 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOptionRange", file: !126, line: 324, baseType: !254)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRange", file: !126, line: 306, size: 384, align: 64, elements: !255)
!255 = !{!256, !257, !258, !259, !260, !261}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !254, file: !126, line: 307, baseType: !184, size: 64, align: 64)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !254, file: !126, line: 313, baseType: !210, size: 64, align: 64, offset: 64)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !254, file: !126, line: 313, baseType: !210, size: 64, align: 64, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "component_min", scope: !254, file: !126, line: 318, baseType: !210, size: 64, align: 64, offset: 192)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "component_max", scope: !254, file: !126, line: 318, baseType: !210, size: 64, align: 64, offset: 256)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "is_range", scope: !254, file: !126, line: 323, baseType: !200, size: 32, align: 32, offset: 320)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ranges", scope: !248, file: !126, line: 364, baseType: !200, size: 32, align: 32, offset: 64)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !248, file: !126, line: 368, baseType: !200, size: 32, align: 32, offset: 96)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !175, file: !169, line: 341, baseType: !265, size: 64, align: 64, offset: 64)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 64, align: 64)
!266 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !267)
!267 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilter", file: !169, line: 328, baseType: !268)
!268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilter", file: !169, line: 144, size: 1024, align: 64, elements: !269)
!269 = !{!270, !271, !272, !404, !405, !406, !407, !411, !412, !417, !421, !422, !423, !424, !426, !431, !435}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !268, file: !169, line: 148, baseType: !184, size: 64, align: 64)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !268, file: !169, line: 155, baseType: !184, size: 64, align: 64, offset: 64)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !268, file: !169, line: 164, baseType: !273, size: 64, align: 64, offset: 128)
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 64, align: 64)
!274 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !275)
!275 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterPad", file: !169, line: 69, baseType: !276)
!276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterPad", file: !277, line: 54, size: 576, align: 64, elements: !278)
!277 = !DIFile(filename: "libavfilter/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!278 = !{!279, !280, !281, !388, !392, !396, !400, !401, !402, !403}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !276, file: !277, line: 60, baseType: !184, size: 64, align: 64)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !276, file: !277, line: 65, baseType: !3, size: 32, align: 32, offset: 64)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "get_video_buffer", scope: !276, file: !277, line: 73, baseType: !282, size: 64, align: 64, offset: 128)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 64, align: 64)
!283 = !DISubroutineType(types: !284)
!284 = !{!285, !386, !200, !200}
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !286, size: 64, align: 64)
!286 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !24, line: 646, baseType: !287)
!287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !24, line: 268, size: 4288, align: 64, elements: !288)
!288 = !{!289, !296, !298, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !318, !319, !320, !321, !322, !323, !324, !325, !338, !340, !341, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !374, !375, !376, !377, !378, !379, !382, !383, !384, !385}
!289 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !287, file: !24, line: 282, baseType: !290, size: 512, align: 64)
!290 = !DICompositeType(tag: DW_TAG_array_type, baseType: !291, size: 512, align: 64, elements: !294)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 64, align: 64)
!292 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !207, line: 48, baseType: !293)
!293 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!294 = !{!295}
!295 = !DISubrange(count: 8)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !287, file: !24, line: 299, baseType: !297, size: 256, align: 32, offset: 512)
!297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !200, size: 256, align: 32, elements: !294)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !287, file: !24, line: 315, baseType: !299, size: 64, align: 64, offset: 768)
!299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 64, align: 64)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !287, file: !24, line: 326, baseType: !200, size: 32, align: 32, offset: 832)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !287, file: !24, line: 326, baseType: !200, size: 32, align: 32, offset: 864)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !287, file: !24, line: 334, baseType: !200, size: 32, align: 32, offset: 896)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !287, file: !24, line: 341, baseType: !200, size: 32, align: 32, offset: 928)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !287, file: !24, line: 346, baseType: !200, size: 32, align: 32, offset: 960)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !287, file: !24, line: 351, baseType: !13, size: 32, align: 32, offset: 992)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !287, file: !24, line: 356, baseType: !213, size: 64, align: 32, offset: 1024)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !287, file: !24, line: 361, baseType: !206, size: 64, align: 64, offset: 1088)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !287, file: !24, line: 369, baseType: !206, size: 64, align: 64, offset: 1152)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !287, file: !24, line: 377, baseType: !206, size: 64, align: 64, offset: 1216)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !287, file: !24, line: 382, baseType: !200, size: 32, align: 32, offset: 1280)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !287, file: !24, line: 386, baseType: !200, size: 32, align: 32, offset: 1312)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !287, file: !24, line: 391, baseType: !200, size: 32, align: 32, offset: 1344)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !287, file: !24, line: 396, baseType: !191, size: 64, align: 64, offset: 1408)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !287, file: !24, line: 403, baseType: !315, size: 512, align: 64, offset: 1472)
!315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 512, align: 64, elements: !294)
!316 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !207, line: 55, baseType: !317)
!317 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !287, file: !24, line: 410, baseType: !200, size: 32, align: 32, offset: 1984)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !287, file: !24, line: 415, baseType: !200, size: 32, align: 32, offset: 2016)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !287, file: !24, line: 420, baseType: !200, size: 32, align: 32, offset: 2048)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !287, file: !24, line: 425, baseType: !200, size: 32, align: 32, offset: 2080)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !287, file: !24, line: 435, baseType: !206, size: 64, align: 64, offset: 2112)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !287, file: !24, line: 440, baseType: !200, size: 32, align: 32, offset: 2176)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !287, file: !24, line: 445, baseType: !316, size: 64, align: 64, offset: 2240)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !287, file: !24, line: 459, baseType: !326, size: 512, align: 64, offset: 2304)
!326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !327, size: 512, align: 64, elements: !294)
!327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 64, align: 64)
!328 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !329, line: 94, baseType: !330)
!329 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !329, line: 81, size: 192, align: 64, elements: !331)
!331 = !{!332, !336, !337}
!332 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !330, file: !329, line: 82, baseType: !333, size: 64, align: 64)
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 64, align: 64)
!334 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !329, line: 73, baseType: !335)
!335 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !329, line: 73, flags: DIFlagFwdDecl)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !330, file: !329, line: 89, baseType: !291, size: 64, align: 64, offset: 64)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !330, file: !329, line: 93, baseType: !200, size: 32, align: 32, offset: 128)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !287, file: !24, line: 473, baseType: !339, size: 64, align: 64, offset: 2816)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 64, align: 64)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !287, file: !24, line: 477, baseType: !200, size: 32, align: 32, offset: 2880)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !287, file: !24, line: 479, baseType: !342, size: 64, align: 64, offset: 2944)
!342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !343, size: 64, align: 64)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64, align: 64)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !24, line: 207, baseType: !345)
!345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !24, line: 201, size: 320, align: 64, elements: !346)
!346 = !{!347, !348, !349, !350, !355}
!347 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !345, file: !24, line: 202, baseType: !23, size: 32, align: 32)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !345, file: !24, line: 203, baseType: !291, size: 64, align: 64, offset: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !345, file: !24, line: 204, baseType: !200, size: 32, align: 32, offset: 128)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !345, file: !24, line: 205, baseType: !351, size: 64, align: 64, offset: 192)
!351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64, align: 64)
!352 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !353, line: 86, baseType: !354)
!353 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!354 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !353, line: 86, flags: DIFlagFwdDecl)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !345, file: !24, line: 206, baseType: !327, size: 64, align: 64, offset: 256)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !287, file: !24, line: 480, baseType: !200, size: 32, align: 32, offset: 3008)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !287, file: !24, line: 505, baseType: !200, size: 32, align: 32, offset: 3040)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !287, file: !24, line: 512, baseType: !47, size: 32, align: 32, offset: 3072)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !287, file: !24, line: 514, baseType: !54, size: 32, align: 32, offset: 3104)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !287, file: !24, line: 516, baseType: !72, size: 32, align: 32, offset: 3136)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !287, file: !24, line: 523, baseType: !96, size: 32, align: 32, offset: 3168)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !287, file: !24, line: 525, baseType: !115, size: 32, align: 32, offset: 3200)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !287, file: !24, line: 532, baseType: !206, size: 64, align: 64, offset: 3264)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !287, file: !24, line: 539, baseType: !206, size: 64, align: 64, offset: 3328)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !287, file: !24, line: 547, baseType: !206, size: 64, align: 64, offset: 3392)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !287, file: !24, line: 554, baseType: !351, size: 64, align: 64, offset: 3456)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !287, file: !24, line: 563, baseType: !200, size: 32, align: 32, offset: 3520)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !287, file: !24, line: 572, baseType: !200, size: 32, align: 32, offset: 3552)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !287, file: !24, line: 581, baseType: !200, size: 32, align: 32, offset: 3584)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !287, file: !24, line: 588, baseType: !371, size: 64, align: 64, offset: 3648)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 64, align: 64)
!372 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !207, line: 36, baseType: !373)
!373 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !287, file: !24, line: 593, baseType: !200, size: 32, align: 32, offset: 3712)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !287, file: !24, line: 596, baseType: !200, size: 32, align: 32, offset: 3744)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !287, file: !24, line: 599, baseType: !327, size: 64, align: 64, offset: 3776)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !287, file: !24, line: 605, baseType: !327, size: 64, align: 64, offset: 3840)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !287, file: !24, line: 616, baseType: !327, size: 64, align: 64, offset: 3904)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !287, file: !24, line: 626, baseType: !380, size: 64, align: 64, offset: 3968)
!380 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !381, line: 216, baseType: !317)
!381 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!382 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !287, file: !24, line: 627, baseType: !380, size: 64, align: 64, offset: 4032)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !287, file: !24, line: 628, baseType: !380, size: 64, align: 64, offset: 4096)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !287, file: !24, line: 629, baseType: !380, size: 64, align: 64, offset: 4160)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !287, file: !24, line: 645, baseType: !327, size: 64, align: 64, offset: 4224)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64, align: 64)
!387 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterLink", file: !169, line: 68, baseType: !170)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "get_audio_buffer", scope: !276, file: !277, line: 81, baseType: !389, size: 64, align: 64, offset: 192)
!389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64, align: 64)
!390 = !DISubroutineType(types: !391)
!391 = !{!285, !386, !200}
!392 = !DIDerivedType(tag: DW_TAG_member, name: "filter_frame", scope: !276, file: !277, line: 93, baseType: !393, size: 64, align: 64, offset: 256)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64, align: 64)
!394 = !DISubroutineType(types: !395)
!395 = !{!200, !386, !285}
!396 = !DIDerivedType(tag: DW_TAG_member, name: "poll_frame", scope: !276, file: !277, line: 104, baseType: !397, size: 64, align: 64, offset: 320)
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 64, align: 64)
!398 = !DISubroutineType(types: !399)
!399 = !{!200, !386}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "request_frame", scope: !276, file: !277, line: 113, baseType: !397, size: 64, align: 64, offset: 384)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "config_props", scope: !276, file: !277, line: 129, baseType: !397, size: 64, align: 64, offset: 448)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "needs_fifo", scope: !276, file: !277, line: 137, baseType: !200, size: 32, align: 32, offset: 512)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "needs_writable", scope: !276, file: !277, line: 145, baseType: !200, size: 32, align: 32, offset: 544)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !268, file: !169, line: 172, baseType: !273, size: 64, align: 64, offset: 192)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !268, file: !169, line: 182, baseType: !178, size: 64, align: 64, offset: 256)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !268, file: !169, line: 187, baseType: !200, size: 32, align: 32, offset: 320)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "preinit", scope: !268, file: !169, line: 210, baseType: !408, size: 64, align: 64, offset: 384)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 64, align: 64)
!409 = !DISubroutineType(types: !410)
!410 = !{!200, !173}
!411 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !268, file: !169, line: 233, baseType: !408, size: 64, align: 64, offset: 448)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "init_dict", scope: !268, file: !169, line: 246, baseType: !413, size: 64, align: 64, offset: 512)
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 64, align: 64)
!414 = !DISubroutineType(types: !415)
!415 = !{!200, !173, !416}
!416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64, align: 64)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !268, file: !169, line: 258, baseType: !418, size: 64, align: 64, offset: 576)
!418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !419, size: 64, align: 64)
!419 = !DISubroutineType(types: !420)
!420 = !{null, !173}
!421 = !DIDerivedType(tag: DW_TAG_member, name: "query_formats", scope: !268, file: !169, line: 282, baseType: !408, size: 64, align: 64, offset: 640)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !268, file: !169, line: 284, baseType: !200, size: 32, align: 32, offset: 704)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "flags_internal", scope: !268, file: !169, line: 286, baseType: !200, size: 32, align: 32, offset: 736)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !268, file: !169, line: 292, baseType: !425, size: 64, align: 64, offset: 768)
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64, align: 64)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "process_command", scope: !268, file: !169, line: 306, baseType: !427, size: 64, align: 64, offset: 832)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !428, size: 64, align: 64)
!428 = !DISubroutineType(types: !429)
!429 = !{!200, !173, !184, !184, !430, !200, !200}
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 64, align: 64)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "init_opaque", scope: !268, file: !169, line: 313, baseType: !432, size: 64, align: 64, offset: 896)
!432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 64, align: 64)
!433 = !DISubroutineType(types: !434)
!434 = !{!200, !173, !191}
!435 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !268, file: !169, line: 327, baseType: !408, size: 64, align: 64, offset: 960)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !175, file: !169, line: 343, baseType: !430, size: 64, align: 64, offset: 128)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "input_pads", scope: !175, file: !169, line: 345, baseType: !438, size: 64, align: 64, offset: 192)
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 64, align: 64)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !175, file: !169, line: 346, baseType: !440, size: 64, align: 64, offset: 256)
!440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !386, size: 64, align: 64)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inputs", scope: !175, file: !169, line: 347, baseType: !442, size: 32, align: 32, offset: 320)
!442 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "output_pads", scope: !175, file: !169, line: 349, baseType: !438, size: 64, align: 64, offset: 384)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !175, file: !169, line: 350, baseType: !440, size: 64, align: 64, offset: 448)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "nb_outputs", scope: !175, file: !169, line: 351, baseType: !442, size: 32, align: 32, offset: 512)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !175, file: !169, line: 353, baseType: !191, size: 64, align: 64, offset: 576)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "graph", scope: !175, file: !169, line: 355, baseType: !448, size: 64, align: 64, offset: 640)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 64, align: 64)
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterGraph", file: !169, line: 840, size: 768, align: 64, elements: !450)
!450 = !{!451, !452, !454, !455, !456, !457, !458, !459, !481, !482, !483, !484, !485, !486}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !449, file: !169, line: 841, baseType: !178, size: 64, align: 64)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "filters", scope: !449, file: !169, line: 842, baseType: !453, size: 64, align: 64, offset: 64)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 64, align: 64)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "nb_filters", scope: !449, file: !169, line: 843, baseType: !442, size: 32, align: 32, offset: 128)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "scale_sws_opts", scope: !449, file: !169, line: 845, baseType: !430, size: 64, align: 64, offset: 192)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "resample_lavr_opts", scope: !449, file: !169, line: 847, baseType: !430, size: 64, align: 64, offset: 256)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !449, file: !169, line: 862, baseType: !200, size: 32, align: 32, offset: 320)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "nb_threads", scope: !449, file: !169, line: 869, baseType: !200, size: 32, align: 32, offset: 352)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !449, file: !169, line: 874, baseType: !460, size: 64, align: 64, offset: 384)
!460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 64, align: 64)
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterGraphInternal", file: !169, line: 809, baseType: !462)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterGraphInternal", file: !277, line: 148, size: 192, align: 64, elements: !463)
!463 = !{!464, !465, !475}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !462, file: !277, line: 149, baseType: !191, size: 64, align: 64)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "thread_execute", scope: !462, file: !277, line: 150, baseType: !466, size: 64, align: 64, offset: 64)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64, align: 64)
!467 = !DIDerivedType(tag: DW_TAG_typedef, name: "avfilter_execute_func", file: !169, line: 837, baseType: !468)
!468 = !DISubroutineType(types: !469)
!469 = !{!200, !173, !470, !191, !474, !200}
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64, align: 64)
!471 = !DIDerivedType(tag: DW_TAG_typedef, name: "avfilter_action_func", file: !169, line: 823, baseType: !472)
!472 = !DISubroutineType(types: !473)
!473 = !{!200, !173, !191, !200, !200}
!474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 64, align: 64)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "frame_queues", scope: !462, file: !277, line: 151, baseType: !476, size: 8, align: 8, offset: 128)
!476 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFFrameQueueGlobal", file: !477, line: 48, baseType: !478)
!477 = !DIFile(filename: "libavfilter/framequeue.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFFrameQueueGlobal", file: !477, line: 46, size: 8, align: 8, elements: !479)
!479 = !{!480}
!480 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !478, file: !477, line: 47, baseType: !186, size: 8, align: 8)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !449, file: !169, line: 881, baseType: !191, size: 64, align: 64, offset: 448)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !449, file: !169, line: 895, baseType: !466, size: 64, align: 64, offset: 512)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "aresample_swr_opts", scope: !449, file: !169, line: 897, baseType: !430, size: 64, align: 64, offset: 576)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "sink_links", scope: !449, file: !169, line: 906, baseType: !440, size: 64, align: 64, offset: 640)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "sink_links_count", scope: !449, file: !169, line: 907, baseType: !200, size: 32, align: 32, offset: 704)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "disable_auto_convert", scope: !449, file: !169, line: 909, baseType: !442, size: 32, align: 32, offset: 736)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !175, file: !169, line: 373, baseType: !200, size: 32, align: 32, offset: 704)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !175, file: !169, line: 378, baseType: !489, size: 64, align: 64, offset: 768)
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 64, align: 64)
!490 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterInternal", file: !169, line: 335, baseType: !491)
!491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterInternal", file: !277, line: 154, size: 64, align: 64, elements: !492)
!492 = !{!493}
!493 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !491, file: !277, line: 155, baseType: !466, size: 64, align: 64)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "command_queue", scope: !175, file: !169, line: 380, baseType: !495, size: 64, align: 64, offset: 832)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64, align: 64)
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterCommand", file: !277, line: 38, size: 320, align: 64, elements: !497)
!497 = !{!498, !499, !500, !501, !502}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !496, file: !277, line: 39, baseType: !210, size: 64, align: 64)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !496, file: !277, line: 40, baseType: !430, size: 64, align: 64, offset: 64)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !496, file: !277, line: 41, baseType: !430, size: 64, align: 64, offset: 128)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !496, file: !277, line: 42, baseType: !200, size: 32, align: 32, offset: 192)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !496, file: !277, line: 43, baseType: !495, size: 64, align: 64, offset: 256)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "enable_str", scope: !175, file: !169, line: 382, baseType: !430, size: 64, align: 64, offset: 896)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !175, file: !169, line: 383, baseType: !191, size: 64, align: 64, offset: 960)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "var_values", scope: !175, file: !169, line: 384, baseType: !506, size: 64, align: 64, offset: 1024)
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64, align: 64)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "is_disabled", scope: !175, file: !169, line: 385, baseType: !200, size: 32, align: 32, offset: 1088)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !175, file: !169, line: 394, baseType: !327, size: 64, align: 64, offset: 1152)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "nb_threads", scope: !175, file: !169, line: 401, baseType: !200, size: 32, align: 32, offset: 1216)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "ready", scope: !175, file: !169, line: 408, baseType: !442, size: 32, align: 32, offset: 1248)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !175, file: !169, line: 424, baseType: !200, size: 32, align: 32, offset: 1280)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "srcpad", scope: !170, file: !169, line: 441, baseType: !438, size: 64, align: 64, offset: 64)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !170, file: !169, line: 443, baseType: !173, size: 64, align: 64, offset: 128)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "dstpad", scope: !170, file: !169, line: 444, baseType: !438, size: 64, align: 64, offset: 192)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !170, file: !169, line: 446, baseType: !3, size: 32, align: 32, offset: 256)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !170, file: !169, line: 449, baseType: !200, size: 32, align: 32, offset: 288)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !170, file: !169, line: 450, baseType: !200, size: 32, align: 32, offset: 320)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !170, file: !169, line: 451, baseType: !213, size: 64, align: 32, offset: 352)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !170, file: !169, line: 453, baseType: !316, size: 64, align: 64, offset: 448)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !170, file: !169, line: 454, baseType: !200, size: 32, align: 32, offset: 512)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !170, file: !169, line: 456, baseType: !200, size: 32, align: 32, offset: 544)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !170, file: !169, line: 465, baseType: !213, size: 64, align: 32, offset: 576)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "in_formats", scope: !170, file: !169, line: 481, baseType: !524, size: 64, align: 64, offset: 640)
!524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !525, size: 64, align: 64)
!525 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFilterFormats", file: !169, line: 70, baseType: !526)
!526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterFormats", file: !527, line: 64, size: 256, align: 64, elements: !528)
!527 = !DIFile(filename: "libavfilter/formats.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!528 = !{!529, !530, !531, !532}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "nb_formats", scope: !526, file: !527, line: 65, baseType: !442, size: 32, align: 32)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "formats", scope: !526, file: !527, line: 66, baseType: !474, size: 64, align: 64, offset: 64)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !526, file: !527, line: 68, baseType: !442, size: 32, align: 32, offset: 128)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !526, file: !527, line: 69, baseType: !533, size: 64, align: 64, offset: 192)
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 64, align: 64)
!534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !535, size: 64, align: 64)
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64, align: 64)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "out_formats", scope: !170, file: !169, line: 482, baseType: !524, size: 64, align: 64, offset: 704)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "in_samplerates", scope: !170, file: !169, line: 488, baseType: !524, size: 64, align: 64, offset: 768)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "out_samplerates", scope: !170, file: !169, line: 489, baseType: !524, size: 64, align: 64, offset: 832)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "in_channel_layouts", scope: !170, file: !169, line: 490, baseType: !540, size: 64, align: 64, offset: 896)
!540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 64, align: 64)
!541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFilterChannelLayouts", file: !527, line: 85, size: 256, align: 64, elements: !542)
!542 = !{!543, !545, !546, !547, !548, !549}
!543 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !541, file: !527, line: 86, baseType: !544, size: 64, align: 64)
!544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 64, align: 64)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "nb_channel_layouts", scope: !541, file: !527, line: 87, baseType: !200, size: 32, align: 32, offset: 64)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "all_layouts", scope: !541, file: !527, line: 88, baseType: !186, size: 8, align: 8, offset: 96)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "all_counts", scope: !541, file: !527, line: 89, baseType: !186, size: 8, align: 8, offset: 104)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !541, file: !527, line: 91, baseType: !442, size: 32, align: 32, offset: 128)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !541, file: !527, line: 92, baseType: !550, size: 64, align: 64, offset: 192)
!550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 64, align: 64)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 64, align: 64)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "out_channel_layouts", scope: !170, file: !169, line: 491, baseType: !540, size: 64, align: 64, offset: 960)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "request_samples", scope: !170, file: !169, line: 500, baseType: !200, size: 32, align: 32, offset: 1024)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !170, file: !169, line: 507, baseType: !168, size: 32, align: 32, offset: 1056)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "graph", scope: !170, file: !169, line: 512, baseType: !448, size: 64, align: 64, offset: 1088)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "current_pts", scope: !170, file: !169, line: 518, baseType: !206, size: 64, align: 64, offset: 1152)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "current_pts_us", scope: !170, file: !169, line: 524, baseType: !206, size: 64, align: 64, offset: 1216)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "age_index", scope: !170, file: !169, line: 529, baseType: !200, size: 32, align: 32, offset: 1280)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "frame_rate", scope: !170, file: !169, line: 542, baseType: !213, size: 64, align: 32, offset: 1312)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "partial_buf", scope: !170, file: !169, line: 547, baseType: !285, size: 64, align: 64, offset: 1408)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "partial_buf_size", scope: !170, file: !169, line: 553, baseType: !200, size: 32, align: 32, offset: 1472)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "min_samples", scope: !170, file: !169, line: 562, baseType: !200, size: 32, align: 32, offset: 1504)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "max_samples", scope: !170, file: !169, line: 568, baseType: !200, size: 32, align: 32, offset: 1536)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !170, file: !169, line: 573, baseType: !200, size: 32, align: 32, offset: 1568)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !170, file: !169, line: 578, baseType: !442, size: 32, align: 32, offset: 1600)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "frame_count_in", scope: !170, file: !169, line: 583, baseType: !206, size: 64, align: 64, offset: 1664)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "frame_count_out", scope: !170, file: !169, line: 583, baseType: !206, size: 64, align: 64, offset: 1728)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "frame_pool", scope: !170, file: !169, line: 588, baseType: !191, size: 64, align: 64, offset: 1792)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "frame_wanted_out", scope: !170, file: !169, line: 595, baseType: !200, size: 32, align: 32, offset: 1856)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !170, file: !169, line: 601, baseType: !327, size: 64, align: 64, offset: 1920)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !170, file: !169, line: 610, baseType: !572, size: 491520, align: 8, offset: 1984)
!572 = !DICompositeType(tag: DW_TAG_array_type, baseType: !186, size: 491520, align: 8, elements: !573)
!573 = !{!574}
!574 = !DISubrange(count: 61440)
!575 = !{!576, !577, !578}
!576 = !DIEnumerator(name: "AVLINK_UNINIT", value: 0)
!577 = !DIEnumerator(name: "AVLINK_STARTINIT", value: 1)
!578 = !DIEnumerator(name: "AVLINK_INIT", value: 2)
!579 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !581, file: !580, line: 234, size: 32, align: 32, elements: !583)
!580 = !DIFile(filename: "libavfilter/vsrc_cellauto.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!581 = distinct !DISubprogram(name: "evolve", scope: !580, file: !580, line: 229, type: !419, isLocal: true, isDefinition: true, scopeLine: 230, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !582)
!582 = !{}
!583 = !{!584, !585, !586}
!584 = !DIEnumerator(name: "NW", value: 0)
!585 = !DIEnumerator(name: "N", value: 1)
!586 = !DIEnumerator(name: "NE", value: 2)
!587 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !48, line: 64, size: 32, align: 32, elements: !588)
!588 = !{!589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785}
!589 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!590 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!592 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!593 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!594 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!595 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!596 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!597 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!598 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!599 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!600 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!601 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!602 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!603 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!604 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!605 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!606 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!607 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!608 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!609 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!610 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!611 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!612 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!613 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!614 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!615 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!616 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!617 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!618 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!619 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!620 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!622 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!623 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!624 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!625 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!626 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!627 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!628 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!629 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!630 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!631 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!632 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!634 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!635 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!636 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!637 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!638 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!639 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!640 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!641 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!642 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!643 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!644 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!645 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!646 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!647 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!648 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!649 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!650 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!651 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!652 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!653 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!654 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!655 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!656 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!657 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!658 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!659 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!660 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!661 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!662 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!663 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!664 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!665 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!668 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!669 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!670 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!671 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!672 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!673 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!674 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!675 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!676 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!677 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!678 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!679 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!680 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!681 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!682 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!683 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!684 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!685 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!686 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!687 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!688 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!689 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!690 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!691 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!692 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!693 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!694 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!695 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!696 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!697 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!698 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!699 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!700 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!701 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!702 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!703 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!704 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!705 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!706 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!707 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!708 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!709 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!710 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!711 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!712 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!713 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!714 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!715 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!716 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!717 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!718 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!719 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!720 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!721 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!722 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!723 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!724 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!725 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!726 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!727 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!728 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!729 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!730 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!731 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!732 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!733 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!734 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!735 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!736 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!737 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!738 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!739 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!740 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!741 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!742 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!743 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!744 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!745 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!746 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!747 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!748 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!749 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!750 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!751 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!752 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!753 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!754 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!755 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!756 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!757 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!758 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!759 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!760 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!761 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!762 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!763 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!764 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!765 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!766 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!767 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!768 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!769 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!770 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!771 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!772 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!773 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!774 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!775 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!776 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!777 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!778 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!779 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!780 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!781 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!782 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!783 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!784 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!785 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!786 = !{!210}
!787 = !{!788, !789, !793, !794, !800}
!788 = distinct !DIGlobalVariable(name: "ff_vsrc_cellauto", scope: !0, file: !580, line: 330, type: !267, isLocal: false, isDefinition: true, variable: %struct.AVFilter* @ff_vsrc_cellauto)
!789 = distinct !DIGlobalVariable(name: "cellauto_outputs", scope: !0, file: !580, line: 320, type: !790, isLocal: true, isDefinition: true, variable: [2 x %struct.AVFilterPad]* @cellauto_outputs)
!790 = !DICompositeType(tag: DW_TAG_array_type, baseType: !274, size: 1152, align: 64, elements: !791)
!791 = !{!792}
!792 = !DISubrange(count: 2)
!793 = distinct !DIGlobalVariable(name: "cellauto_class", scope: !0, file: !580, line: 84, type: !179, isLocal: true, isDefinition: true, variable: %struct.AVClass* @cellauto_class)
!794 = distinct !DIGlobalVariable(name: "cellauto_options", scope: !0, file: !580, line: 63, type: !795, isLocal: true, isDefinition: true, variable: <{ { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { i8* }, double, double, i32, i8* }, %struct.AVOption, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, { i8*, i8*, i32, i32, { double }, double, double, i32, i8* }, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption, %struct.AVOption }>* @cellauto_options)
!795 = !DICompositeType(tag: DW_TAG_array_type, baseType: !796, size: 9216, align: 64, elements: !798)
!796 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !797)
!797 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOption", file: !126, line: 301, baseType: !195)
!798 = !{!799}
!799 = !DISubrange(count: 18)
!800 = distinct !DIGlobalVariable(name: "pix_fmts", scope: !801, file: !580, line: 313, type: !802, isLocal: true, isDefinition: true, variable: [2 x i32]* @query_formats.pix_fmts)
!801 = distinct !DISubprogram(name: "query_formats", scope: !580, file: !580, line: 311, type: !409, isLocal: true, isDefinition: true, scopeLine: 312, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !582)
!802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !803, size: 64, align: 32, elements: !791)
!803 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !587)
!804 = !{i32 2, !"Dwarf Version", i32 4}
!805 = !{i32 2, !"Debug Info Version", i32 3}
!806 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!807 = distinct !DISubprogram(name: "init", scope: !580, file: !580, line: 163, type: !409, isLocal: true, isDefinition: true, scopeLine: 164, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !582)
!808 = !DILocalVariable(name: "ctx", arg: 1, scope: !807, file: !580, line: 163, type: !173)
!809 = !DIExpression()
!810 = !DILocation(line: 163, column: 56, scope: !807)
!811 = !DILocalVariable(name: "s", scope: !807, file: !580, line: 165, type: !812)
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 64, align: 64)
!813 = !DIDerivedType(tag: DW_TAG_typedef, name: "CellAutoContext", file: !580, line: 58, baseType: !814)
!814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CellAutoContext", file: !580, line: 40, size: 3136, align: 64, elements: !815)
!815 = !{!816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !832, !833, !834, !835, !836, !846}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !814, file: !580, line: 41, baseType: !178, size: 64, align: 64)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !814, file: !580, line: 42, baseType: !200, size: 32, align: 32, offset: 64)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !814, file: !580, line: 42, baseType: !200, size: 32, align: 32, offset: 96)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !814, file: !580, line: 43, baseType: !430, size: 64, align: 64, offset: 128)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "rule_str", scope: !814, file: !580, line: 44, baseType: !430, size: 64, align: 64, offset: 192)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "file_buf", scope: !814, file: !580, line: 45, baseType: !291, size: 64, align: 64, offset: 256)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "file_bufsize", scope: !814, file: !580, line: 46, baseType: !380, size: 64, align: 64, offset: 320)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !814, file: !580, line: 47, baseType: !291, size: 64, align: 64, offset: 384)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "buf_prev_row_idx", scope: !814, file: !580, line: 48, baseType: !200, size: 32, align: 32, offset: 448)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "buf_row_idx", scope: !814, file: !580, line: 48, baseType: !200, size: 32, align: 32, offset: 480)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "rule", scope: !814, file: !580, line: 49, baseType: !292, size: 8, align: 8, offset: 512)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !814, file: !580, line: 50, baseType: !316, size: 64, align: 64, offset: 576)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "frame_rate", scope: !814, file: !580, line: 51, baseType: !213, size: 64, align: 32, offset: 640)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "random_fill_ratio", scope: !814, file: !580, line: 52, baseType: !210, size: 64, align: 64, offset: 704)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "random_seed", scope: !814, file: !580, line: 53, baseType: !831, size: 32, align: 32, offset: 768)
!831 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !207, line: 51, baseType: !442)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "stitch", scope: !814, file: !580, line: 54, baseType: !200, size: 32, align: 32, offset: 800)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !814, file: !580, line: 54, baseType: !200, size: 32, align: 32, offset: 832)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "start_full", scope: !814, file: !580, line: 54, baseType: !200, size: 32, align: 32, offset: 864)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "generation", scope: !814, file: !580, line: 55, baseType: !206, size: 64, align: 64, offset: 896)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "lfg", scope: !814, file: !580, line: 56, baseType: !837, size: 2080, align: 32, offset: 960)
!837 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVLFG", file: !838, line: 30, baseType: !839)
!838 = !DIFile(filename: "./libavutil/lfg.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVLFG", file: !838, line: 27, size: 2080, align: 32, elements: !840)
!840 = !{!841, !845}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !839, file: !838, line: 28, baseType: !842, size: 2048, align: 32)
!842 = !DICompositeType(tag: DW_TAG_array_type, baseType: !442, size: 2048, align: 32, elements: !843)
!843 = !{!844}
!844 = !DISubrange(count: 64)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !839, file: !838, line: 29, baseType: !200, size: 32, align: 32, offset: 2048)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "pattern", scope: !814, file: !580, line: 57, baseType: !430, size: 64, align: 64, offset: 3072)
!847 = !DILocation(line: 165, column: 22, scope: !807)
!848 = !DILocation(line: 165, column: 26, scope: !807)
!849 = !DILocation(line: 165, column: 31, scope: !807)
!850 = !DILocalVariable(name: "ret", scope: !807, file: !580, line: 166, type: !200)
!851 = !DILocation(line: 166, column: 9, scope: !807)
!852 = !DILocation(line: 168, column: 10, scope: !853)
!853 = distinct !DILexicalBlock(scope: !807, file: !580, line: 168, column: 9)
!854 = !DILocation(line: 168, column: 13, scope: !853)
!855 = !DILocation(line: 168, column: 15, scope: !853)
!856 = !DILocation(line: 168, column: 19, scope: !857)
!857 = !DILexicalBlockFile(scope: !853, file: !580, discriminator: 1)
!858 = !DILocation(line: 168, column: 22, scope: !857)
!859 = !DILocation(line: 168, column: 31, scope: !857)
!860 = !DILocation(line: 168, column: 35, scope: !861)
!861 = !DILexicalBlockFile(scope: !853, file: !580, discriminator: 2)
!862 = !DILocation(line: 168, column: 38, scope: !861)
!863 = !DILocation(line: 168, column: 9, scope: !861)
!864 = !DILocation(line: 169, column: 20, scope: !853)
!865 = !DILocation(line: 169, column: 9, scope: !853)
!866 = !DILocation(line: 171, column: 9, scope: !867)
!867 = distinct !DILexicalBlock(scope: !807, file: !580, line: 171, column: 9)
!868 = !DILocation(line: 171, column: 12, scope: !867)
!869 = !DILocation(line: 171, column: 21, scope: !867)
!870 = !DILocation(line: 171, column: 24, scope: !871)
!871 = !DILexicalBlockFile(scope: !867, file: !580, discriminator: 1)
!872 = !DILocation(line: 171, column: 27, scope: !871)
!873 = !DILocation(line: 171, column: 9, scope: !871)
!874 = !DILocation(line: 172, column: 16, scope: !875)
!875 = distinct !DILexicalBlock(scope: !867, file: !580, line: 171, column: 36)
!876 = !DILocation(line: 172, column: 9, scope: !875)
!877 = !DILocation(line: 173, column: 9, scope: !875)
!878 = !DILocation(line: 176, column: 9, scope: !879)
!879 = distinct !DILexicalBlock(scope: !807, file: !580, line: 176, column: 9)
!880 = !DILocation(line: 176, column: 12, scope: !879)
!881 = !DILocation(line: 176, column: 9, scope: !807)
!882 = !DILocation(line: 177, column: 43, scope: !883)
!883 = distinct !DILexicalBlock(scope: !884, file: !580, line: 177, column: 13)
!884 = distinct !DILexicalBlock(scope: !879, file: !580, line: 176, column: 22)
!885 = !DILocation(line: 177, column: 20, scope: !883)
!886 = !DILocation(line: 177, column: 18, scope: !883)
!887 = !DILocation(line: 177, column: 49, scope: !883)
!888 = !DILocation(line: 177, column: 13, scope: !884)
!889 = !DILocation(line: 178, column: 20, scope: !883)
!890 = !DILocation(line: 178, column: 13, scope: !883)
!891 = !DILocation(line: 179, column: 5, scope: !884)
!892 = !DILocation(line: 179, column: 16, scope: !893)
!893 = !DILexicalBlockFile(scope: !894, file: !580, discriminator: 1)
!894 = distinct !DILexicalBlock(scope: !879, file: !580, line: 179, column: 16)
!895 = !DILocation(line: 179, column: 19, scope: !893)
!896 = !DILocation(line: 180, column: 45, scope: !897)
!897 = distinct !DILexicalBlock(scope: !898, file: !580, line: 180, column: 13)
!898 = distinct !DILexicalBlock(scope: !894, file: !580, line: 179, column: 28)
!899 = !DILocation(line: 180, column: 20, scope: !897)
!900 = !DILocation(line: 180, column: 18, scope: !897)
!901 = !DILocation(line: 180, column: 51, scope: !897)
!902 = !DILocation(line: 180, column: 13, scope: !898)
!903 = !DILocation(line: 181, column: 20, scope: !897)
!904 = !DILocation(line: 181, column: 13, scope: !897)
!905 = !DILocation(line: 182, column: 5, scope: !898)
!906 = !DILocalVariable(name: "i", scope: !907, file: !580, line: 184, type: !200)
!907 = distinct !DILexicalBlock(scope: !894, file: !580, line: 182, column: 12)
!908 = !DILocation(line: 184, column: 13, scope: !907)
!909 = !DILocation(line: 186, column: 53, scope: !907)
!910 = !DILocation(line: 186, column: 56, scope: !907)
!911 = !DILocation(line: 186, column: 51, scope: !907)
!912 = !DILocation(line: 186, column: 59, scope: !907)
!913 = !DILocation(line: 186, column: 62, scope: !907)
!914 = !DILocation(line: 186, column: 18, scope: !907)
!915 = !DILocation(line: 186, column: 9, scope: !907)
!916 = !DILocation(line: 186, column: 12, scope: !907)
!917 = !DILocation(line: 186, column: 16, scope: !907)
!918 = !DILocation(line: 187, column: 14, scope: !919)
!919 = distinct !DILexicalBlock(scope: !907, file: !580, line: 187, column: 13)
!920 = !DILocation(line: 187, column: 17, scope: !919)
!921 = !DILocation(line: 187, column: 13, scope: !907)
!922 = !DILocation(line: 188, column: 13, scope: !919)
!923 = !DILocation(line: 189, column: 13, scope: !924)
!924 = distinct !DILexicalBlock(scope: !907, file: !580, line: 189, column: 13)
!925 = !DILocation(line: 189, column: 16, scope: !924)
!926 = !DILocation(line: 189, column: 28, scope: !924)
!927 = !DILocation(line: 189, column: 13, scope: !907)
!928 = !DILocation(line: 190, column: 30, scope: !924)
!929 = !DILocation(line: 190, column: 13, scope: !924)
!930 = !DILocation(line: 190, column: 16, scope: !924)
!931 = !DILocation(line: 190, column: 28, scope: !924)
!932 = !DILocation(line: 192, column: 22, scope: !907)
!933 = !DILocation(line: 192, column: 25, scope: !907)
!934 = !DILocation(line: 192, column: 30, scope: !907)
!935 = !DILocation(line: 192, column: 33, scope: !907)
!936 = !DILocation(line: 192, column: 9, scope: !907)
!937 = !DILocation(line: 194, column: 16, scope: !938)
!938 = distinct !DILexicalBlock(scope: !907, file: !580, line: 194, column: 9)
!939 = !DILocation(line: 194, column: 14, scope: !938)
!940 = !DILocation(line: 194, column: 21, scope: !941)
!941 = !DILexicalBlockFile(scope: !942, file: !580, discriminator: 1)
!942 = distinct !DILexicalBlock(scope: !938, file: !580, line: 194, column: 9)
!943 = !DILocation(line: 194, column: 25, scope: !941)
!944 = !DILocation(line: 194, column: 28, scope: !941)
!945 = !DILocation(line: 194, column: 23, scope: !941)
!946 = !DILocation(line: 194, column: 9, scope: !941)
!947 = !DILocalVariable(name: "r", scope: !948, file: !580, line: 195, type: !210)
!948 = distinct !DILexicalBlock(scope: !942, file: !580, line: 194, column: 36)
!949 = !DILocation(line: 195, column: 20, scope: !948)
!950 = !DILocation(line: 195, column: 44, scope: !948)
!951 = !DILocation(line: 195, column: 47, scope: !948)
!952 = !DILocation(line: 195, column: 32, scope: !948)
!953 = !DILocation(line: 195, column: 24, scope: !948)
!954 = !DILocation(line: 195, column: 52, scope: !948)
!955 = !DILocation(line: 196, column: 17, scope: !956)
!956 = distinct !DILexicalBlock(scope: !948, file: !580, line: 196, column: 17)
!957 = !DILocation(line: 196, column: 22, scope: !956)
!958 = !DILocation(line: 196, column: 25, scope: !956)
!959 = !DILocation(line: 196, column: 19, scope: !956)
!960 = !DILocation(line: 196, column: 17, scope: !948)
!961 = !DILocation(line: 197, column: 24, scope: !956)
!962 = !DILocation(line: 197, column: 17, scope: !956)
!963 = !DILocation(line: 197, column: 20, scope: !956)
!964 = !DILocation(line: 197, column: 27, scope: !956)
!965 = !DILocation(line: 198, column: 9, scope: !948)
!966 = !DILocation(line: 194, column: 32, scope: !967)
!967 = !DILexicalBlockFile(scope: !942, file: !580, discriminator: 2)
!968 = !DILocation(line: 194, column: 9, scope: !967)
!969 = distinct !{!969, !970}
!970 = !DILocation(line: 194, column: 9, scope: !907)
!971 = !DILocation(line: 201, column: 12, scope: !807)
!972 = !DILocation(line: 203, column: 12, scope: !807)
!973 = !DILocation(line: 203, column: 15, scope: !807)
!974 = !DILocation(line: 203, column: 18, scope: !807)
!975 = !DILocation(line: 203, column: 21, scope: !807)
!976 = !DILocation(line: 203, column: 24, scope: !807)
!977 = !DILocation(line: 203, column: 27, scope: !807)
!978 = !DILocation(line: 203, column: 38, scope: !807)
!979 = !DILocation(line: 203, column: 43, scope: !807)
!980 = !DILocation(line: 203, column: 46, scope: !807)
!981 = !DILocation(line: 203, column: 57, scope: !807)
!982 = !DILocation(line: 204, column: 12, scope: !807)
!983 = !DILocation(line: 204, column: 15, scope: !807)
!984 = !DILocation(line: 204, column: 21, scope: !807)
!985 = !DILocation(line: 204, column: 24, scope: !807)
!986 = !DILocation(line: 204, column: 32, scope: !807)
!987 = !DILocation(line: 204, column: 35, scope: !807)
!988 = !DILocation(line: 204, column: 43, scope: !807)
!989 = !DILocation(line: 204, column: 46, scope: !807)
!990 = !DILocation(line: 205, column: 12, scope: !807)
!991 = !DILocation(line: 205, column: 15, scope: !807)
!992 = !DILocation(line: 201, column: 5, scope: !807)
!993 = !DILocation(line: 206, column: 5, scope: !807)
!994 = !DILocation(line: 207, column: 1, scope: !807)
!995 = distinct !DISubprogram(name: "uninit", scope: !580, file: !580, line: 209, type: !419, isLocal: true, isDefinition: true, scopeLine: 210, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !582)
!996 = !DILocalVariable(name: "ctx", arg: 1, scope: !995, file: !580, line: 209, type: !173)
!997 = !DILocation(line: 209, column: 59, scope: !995)
!998 = !DILocalVariable(name: "s", scope: !995, file: !580, line: 211, type: !812)
!999 = !DILocation(line: 211, column: 22, scope: !995)
!1000 = !DILocation(line: 211, column: 26, scope: !995)
!1001 = !DILocation(line: 211, column: 31, scope: !995)
!1002 = !DILocation(line: 213, column: 19, scope: !995)
!1003 = !DILocation(line: 213, column: 22, scope: !995)
!1004 = !DILocation(line: 213, column: 32, scope: !995)
!1005 = !DILocation(line: 213, column: 35, scope: !995)
!1006 = !DILocation(line: 213, column: 5, scope: !995)
!1007 = !DILocation(line: 214, column: 15, scope: !995)
!1008 = !DILocation(line: 214, column: 18, scope: !995)
!1009 = !DILocation(line: 214, column: 14, scope: !995)
!1010 = !DILocation(line: 214, column: 5, scope: !995)
!1011 = !DILocation(line: 215, column: 15, scope: !995)
!1012 = !DILocation(line: 215, column: 18, scope: !995)
!1013 = !DILocation(line: 215, column: 14, scope: !995)
!1014 = !DILocation(line: 215, column: 5, scope: !995)
!1015 = !DILocation(line: 216, column: 1, scope: !995)
!1016 = !DILocalVariable(name: "ctx", arg: 1, scope: !801, file: !580, line: 311, type: !173)
!1017 = !DILocation(line: 311, column: 43, scope: !801)
!1018 = !DILocalVariable(name: "fmts_list", scope: !801, file: !580, line: 314, type: !524)
!1019 = !DILocation(line: 314, column: 22, scope: !801)
!1020 = !DILocation(line: 314, column: 34, scope: !801)
!1021 = !DILocation(line: 315, column: 10, scope: !1022)
!1022 = distinct !DILexicalBlock(scope: !801, file: !580, line: 315, column: 9)
!1023 = !DILocation(line: 315, column: 9, scope: !801)
!1024 = !DILocation(line: 316, column: 9, scope: !1022)
!1025 = !DILocation(line: 317, column: 34, scope: !801)
!1026 = !DILocation(line: 317, column: 39, scope: !801)
!1027 = !DILocation(line: 317, column: 12, scope: !801)
!1028 = !DILocation(line: 317, column: 5, scope: !801)
!1029 = !DILocation(line: 318, column: 1, scope: !801)
!1030 = distinct !DISubprogram(name: "request_frame", scope: !580, file: !580, line: 288, type: !398, isLocal: true, isDefinition: true, scopeLine: 289, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !582)
!1031 = !DILocalVariable(name: "outlink", arg: 1, scope: !1030, file: !580, line: 288, type: !386)
!1032 = !DILocation(line: 288, column: 40, scope: !1030)
!1033 = !DILocalVariable(name: "s", scope: !1030, file: !580, line: 290, type: !812)
!1034 = !DILocation(line: 290, column: 22, scope: !1030)
!1035 = !DILocation(line: 290, column: 26, scope: !1030)
!1036 = !DILocation(line: 290, column: 35, scope: !1030)
!1037 = !DILocation(line: 290, column: 40, scope: !1030)
!1038 = !DILocalVariable(name: "picref", scope: !1030, file: !580, line: 291, type: !285)
!1039 = !DILocation(line: 291, column: 14, scope: !1030)
!1040 = !DILocation(line: 291, column: 43, scope: !1030)
!1041 = !DILocation(line: 291, column: 52, scope: !1030)
!1042 = !DILocation(line: 291, column: 55, scope: !1030)
!1043 = !DILocation(line: 291, column: 58, scope: !1030)
!1044 = !DILocation(line: 291, column: 61, scope: !1030)
!1045 = !DILocation(line: 291, column: 23, scope: !1030)
!1046 = !DILocation(line: 292, column: 10, scope: !1047)
!1047 = distinct !DILexicalBlock(scope: !1030, file: !580, line: 292, column: 9)
!1048 = !DILocation(line: 292, column: 9, scope: !1030)
!1049 = !DILocation(line: 293, column: 9, scope: !1047)
!1050 = !DILocation(line: 294, column: 5, scope: !1030)
!1051 = !DILocation(line: 294, column: 13, scope: !1030)
!1052 = !DILocation(line: 294, column: 48, scope: !1030)
!1053 = !DILocation(line: 294, column: 35, scope: !1030)
!1054 = !DILocation(line: 295, column: 9, scope: !1055)
!1055 = distinct !DILexicalBlock(scope: !1030, file: !580, line: 295, column: 9)
!1056 = !DILocation(line: 295, column: 12, scope: !1055)
!1057 = !DILocation(line: 295, column: 23, scope: !1055)
!1058 = !DILocation(line: 295, column: 28, scope: !1055)
!1059 = !DILocation(line: 295, column: 31, scope: !1060)
!1060 = !DILexicalBlockFile(scope: !1055, file: !580, discriminator: 1)
!1061 = !DILocation(line: 295, column: 34, scope: !1060)
!1062 = !DILocation(line: 295, column: 9, scope: !1060)
!1063 = !DILocalVariable(name: "i", scope: !1064, file: !580, line: 296, type: !200)
!1064 = distinct !DILexicalBlock(scope: !1055, file: !580, line: 295, column: 46)
!1065 = !DILocation(line: 296, column: 13, scope: !1064)
!1066 = !DILocation(line: 297, column: 16, scope: !1067)
!1067 = distinct !DILexicalBlock(scope: !1064, file: !580, line: 297, column: 9)
!1068 = !DILocation(line: 297, column: 14, scope: !1067)
!1069 = !DILocation(line: 297, column: 21, scope: !1070)
!1070 = !DILexicalBlockFile(scope: !1071, file: !580, discriminator: 1)
!1071 = distinct !DILexicalBlock(scope: !1067, file: !580, line: 297, column: 9)
!1072 = !DILocation(line: 297, column: 25, scope: !1070)
!1073 = !DILocation(line: 297, column: 28, scope: !1070)
!1074 = !DILocation(line: 297, column: 29, scope: !1070)
!1075 = !DILocation(line: 297, column: 23, scope: !1070)
!1076 = !DILocation(line: 297, column: 9, scope: !1070)
!1077 = !DILocation(line: 298, column: 20, scope: !1071)
!1078 = !DILocation(line: 298, column: 29, scope: !1071)
!1079 = !DILocation(line: 298, column: 13, scope: !1071)
!1080 = !DILocation(line: 297, column: 34, scope: !1081)
!1081 = !DILexicalBlockFile(scope: !1071, file: !580, discriminator: 2)
!1082 = !DILocation(line: 297, column: 9, scope: !1081)
!1083 = distinct !{!1083, !1084}
!1084 = !DILocation(line: 297, column: 9, scope: !1064)
!1085 = !DILocation(line: 299, column: 5, scope: !1064)
!1086 = !DILocation(line: 300, column: 18, scope: !1030)
!1087 = !DILocation(line: 300, column: 27, scope: !1030)
!1088 = !DILocation(line: 300, column: 32, scope: !1030)
!1089 = !DILocation(line: 300, column: 5, scope: !1030)
!1090 = !DILocation(line: 301, column: 12, scope: !1030)
!1091 = !DILocation(line: 301, column: 21, scope: !1030)
!1092 = !DILocation(line: 301, column: 5, scope: !1030)
!1093 = !DILocation(line: 303, column: 19, scope: !1030)
!1094 = !DILocation(line: 303, column: 22, scope: !1030)
!1095 = !DILocation(line: 303, column: 25, scope: !1030)
!1096 = !DILocation(line: 303, column: 5, scope: !1030)
!1097 = !DILocation(line: 303, column: 13, scope: !1030)
!1098 = !DILocation(line: 303, column: 17, scope: !1030)
!1099 = !DILocation(line: 308, column: 28, scope: !1030)
!1100 = !DILocation(line: 308, column: 37, scope: !1030)
!1101 = !DILocation(line: 308, column: 12, scope: !1030)
!1102 = !DILocation(line: 308, column: 5, scope: !1030)
!1103 = !DILocation(line: 309, column: 1, scope: !1030)
!1104 = distinct !DISubprogram(name: "config_props", scope: !580, file: !580, line: 218, type: !398, isLocal: true, isDefinition: true, scopeLine: 219, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !582)
!1105 = !DILocalVariable(name: "q", arg: 1, scope: !1106, file: !214, line: 159, type: !213)
!1106 = distinct !DISubprogram(name: "av_inv_q", scope: !214, file: !214, line: 159, type: !1107, isLocal: true, isDefinition: true, scopeLine: 160, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !582)
!1107 = !DISubroutineType(types: !1108)
!1108 = !{!213, !213}
!1109 = !DILocation(line: 159, column: 77, scope: !1106, inlinedAt: !1110)
!1110 = distinct !DILocation(line: 224, column: 26, scope: !1104)
!1111 = !DILocalVariable(name: "r", scope: !1106, file: !214, line: 161, type: !213)
!1112 = !DILocation(line: 161, column: 16, scope: !1106, inlinedAt: !1110)
!1113 = !DILocalVariable(name: "outlink", arg: 1, scope: !1104, file: !580, line: 218, type: !386)
!1114 = !DILocation(line: 218, column: 39, scope: !1104)
!1115 = !DILocalVariable(name: "s", scope: !1104, file: !580, line: 220, type: !812)
!1116 = !DILocation(line: 220, column: 22, scope: !1104)
!1117 = !DILocation(line: 220, column: 26, scope: !1104)
!1118 = !DILocation(line: 220, column: 35, scope: !1104)
!1119 = !DILocation(line: 220, column: 40, scope: !1104)
!1120 = !DILocation(line: 222, column: 18, scope: !1104)
!1121 = !DILocation(line: 222, column: 21, scope: !1104)
!1122 = !DILocation(line: 222, column: 5, scope: !1104)
!1123 = !DILocation(line: 222, column: 14, scope: !1104)
!1124 = !DILocation(line: 222, column: 16, scope: !1104)
!1125 = !DILocation(line: 223, column: 18, scope: !1104)
!1126 = !DILocation(line: 223, column: 21, scope: !1104)
!1127 = !DILocation(line: 223, column: 5, scope: !1104)
!1128 = !DILocation(line: 223, column: 14, scope: !1104)
!1129 = !DILocation(line: 223, column: 16, scope: !1104)
!1130 = !DILocation(line: 224, column: 5, scope: !1104)
!1131 = !DILocation(line: 224, column: 14, scope: !1104)
!1132 = !DILocation(line: 224, column: 35, scope: !1104)
!1133 = !DILocation(line: 224, column: 38, scope: !1104)
!1134 = !DILocation(line: 224, column: 26, scope: !1104)
!1135 = !DILocation(line: 161, column: 20, scope: !1106, inlinedAt: !1110)
!1136 = !DILocation(line: 161, column: 24, scope: !1106, inlinedAt: !1110)
!1137 = !DILocation(line: 161, column: 31, scope: !1106, inlinedAt: !1110)
!1138 = !DILocation(line: 162, column: 12, scope: !1106, inlinedAt: !1110)
!1139 = !DILocation(line: 162, column: 5, scope: !1106, inlinedAt: !1110)
!1140 = !DILocation(line: 224, column: 26, scope: !1141)
!1141 = !DILexicalBlockFile(scope: !1104, file: !580, discriminator: 1)
!1142 = !DILocation(line: 226, column: 5, scope: !1104)
!1143 = !DILocalVariable(name: "ctx", arg: 1, scope: !581, file: !580, line: 229, type: !173)
!1144 = !DILocation(line: 229, column: 37, scope: !581)
!1145 = !DILocalVariable(name: "s", scope: !581, file: !580, line: 231, type: !812)
!1146 = !DILocation(line: 231, column: 22, scope: !581)
!1147 = !DILocation(line: 231, column: 26, scope: !581)
!1148 = !DILocation(line: 231, column: 31, scope: !581)
!1149 = !DILocalVariable(name: "i", scope: !581, file: !580, line: 232, type: !200)
!1150 = !DILocation(line: 232, column: 9, scope: !581)
!1151 = !DILocalVariable(name: "v", scope: !581, file: !580, line: 232, type: !200)
!1152 = !DILocation(line: 232, column: 12, scope: !581)
!1153 = !DILocalVariable(name: "pos", scope: !581, file: !580, line: 232, type: !1154)
!1154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !200, size: 96, align: 32, elements: !1155)
!1155 = !{!1156}
!1156 = !DISubrange(count: 3)
!1157 = !DILocation(line: 232, column: 15, scope: !581)
!1158 = !DILocalVariable(name: "row", scope: !581, file: !580, line: 233, type: !291)
!1159 = !DILocation(line: 233, column: 14, scope: !581)
!1160 = !DILocalVariable(name: "prev_row", scope: !581, file: !580, line: 233, type: !291)
!1161 = !DILocation(line: 233, column: 20, scope: !581)
!1162 = !DILocation(line: 233, column: 31, scope: !581)
!1163 = !DILocation(line: 233, column: 34, scope: !581)
!1164 = !DILocation(line: 233, column: 40, scope: !581)
!1165 = !DILocation(line: 233, column: 43, scope: !581)
!1166 = !DILocation(line: 233, column: 57, scope: !581)
!1167 = !DILocation(line: 233, column: 60, scope: !581)
!1168 = !DILocation(line: 233, column: 55, scope: !581)
!1169 = !DILocation(line: 233, column: 38, scope: !581)
!1170 = !DILocation(line: 236, column: 27, scope: !581)
!1171 = !DILocation(line: 236, column: 30, scope: !581)
!1172 = !DILocation(line: 236, column: 5, scope: !581)
!1173 = !DILocation(line: 236, column: 8, scope: !581)
!1174 = !DILocation(line: 236, column: 25, scope: !581)
!1175 = !DILocation(line: 237, column: 22, scope: !581)
!1176 = !DILocation(line: 237, column: 25, scope: !581)
!1177 = !DILocation(line: 237, column: 40, scope: !581)
!1178 = !DILocation(line: 237, column: 43, scope: !581)
!1179 = !DILocation(line: 237, column: 44, scope: !581)
!1180 = !DILocation(line: 237, column: 37, scope: !581)
!1181 = !DILocation(line: 237, column: 22, scope: !1182)
!1182 = !DILexicalBlockFile(scope: !581, file: !580, discriminator: 1)
!1183 = !DILocation(line: 237, column: 53, scope: !1184)
!1184 = !DILexicalBlockFile(scope: !581, file: !580, discriminator: 2)
!1185 = !DILocation(line: 237, column: 56, scope: !1184)
!1186 = !DILocation(line: 237, column: 67, scope: !1184)
!1187 = !DILocation(line: 237, column: 22, scope: !1184)
!1188 = !DILocation(line: 237, column: 22, scope: !1189)
!1189 = !DILexicalBlockFile(scope: !581, file: !580, discriminator: 3)
!1190 = !DILocation(line: 237, column: 5, scope: !1189)
!1191 = !DILocation(line: 237, column: 8, scope: !1189)
!1192 = !DILocation(line: 237, column: 20, scope: !1189)
!1193 = !DILocation(line: 238, column: 11, scope: !581)
!1194 = !DILocation(line: 238, column: 14, scope: !581)
!1195 = !DILocation(line: 238, column: 20, scope: !581)
!1196 = !DILocation(line: 238, column: 23, scope: !581)
!1197 = !DILocation(line: 238, column: 27, scope: !581)
!1198 = !DILocation(line: 238, column: 30, scope: !581)
!1199 = !DILocation(line: 238, column: 25, scope: !581)
!1200 = !DILocation(line: 238, column: 18, scope: !581)
!1201 = !DILocation(line: 238, column: 9, scope: !581)
!1202 = !DILocation(line: 240, column: 12, scope: !1203)
!1203 = distinct !DILexicalBlock(scope: !581, file: !580, line: 240, column: 5)
!1204 = !DILocation(line: 240, column: 10, scope: !1203)
!1205 = !DILocation(line: 240, column: 17, scope: !1206)
!1206 = !DILexicalBlockFile(scope: !1207, file: !580, discriminator: 1)
!1207 = distinct !DILexicalBlock(scope: !1203, file: !580, line: 240, column: 5)
!1208 = !DILocation(line: 240, column: 21, scope: !1206)
!1209 = !DILocation(line: 240, column: 24, scope: !1206)
!1210 = !DILocation(line: 240, column: 19, scope: !1206)
!1211 = !DILocation(line: 240, column: 5, scope: !1206)
!1212 = !DILocation(line: 241, column: 13, scope: !1213)
!1213 = distinct !DILexicalBlock(scope: !1214, file: !580, line: 241, column: 13)
!1214 = distinct !DILexicalBlock(scope: !1207, file: !580, line: 240, column: 32)
!1215 = !DILocation(line: 241, column: 16, scope: !1213)
!1216 = !DILocation(line: 241, column: 13, scope: !1214)
!1217 = !DILocation(line: 242, column: 23, scope: !1218)
!1218 = distinct !DILexicalBlock(scope: !1213, file: !580, line: 241, column: 24)
!1219 = !DILocation(line: 242, column: 24, scope: !1218)
!1220 = !DILocation(line: 242, column: 27, scope: !1218)
!1221 = !DILocation(line: 242, column: 33, scope: !1222)
!1222 = !DILexicalBlockFile(scope: !1218, file: !580, discriminator: 1)
!1223 = !DILocation(line: 242, column: 36, scope: !1222)
!1224 = !DILocation(line: 242, column: 37, scope: !1222)
!1225 = !DILocation(line: 242, column: 23, scope: !1222)
!1226 = !DILocation(line: 242, column: 42, scope: !1227)
!1227 = !DILexicalBlockFile(scope: !1218, file: !580, discriminator: 2)
!1228 = !DILocation(line: 242, column: 43, scope: !1227)
!1229 = !DILocation(line: 242, column: 23, scope: !1227)
!1230 = !DILocation(line: 242, column: 23, scope: !1231)
!1231 = !DILexicalBlockFile(scope: !1218, file: !580, discriminator: 3)
!1232 = !DILocation(line: 242, column: 13, scope: !1231)
!1233 = !DILocation(line: 242, column: 21, scope: !1231)
!1234 = !DILocation(line: 243, column: 22, scope: !1218)
!1235 = !DILocation(line: 243, column: 13, scope: !1218)
!1236 = !DILocation(line: 243, column: 20, scope: !1218)
!1237 = !DILocation(line: 244, column: 23, scope: !1218)
!1238 = !DILocation(line: 244, column: 24, scope: !1218)
!1239 = !DILocation(line: 244, column: 30, scope: !1218)
!1240 = !DILocation(line: 244, column: 33, scope: !1218)
!1241 = !DILocation(line: 244, column: 27, scope: !1218)
!1242 = !DILocation(line: 244, column: 23, scope: !1222)
!1243 = !DILocation(line: 244, column: 41, scope: !1227)
!1244 = !DILocation(line: 244, column: 42, scope: !1227)
!1245 = !DILocation(line: 244, column: 23, scope: !1227)
!1246 = !DILocation(line: 244, column: 23, scope: !1231)
!1247 = !DILocation(line: 244, column: 13, scope: !1231)
!1248 = !DILocation(line: 244, column: 21, scope: !1231)
!1249 = !DILocation(line: 245, column: 26, scope: !1218)
!1250 = !DILocation(line: 245, column: 17, scope: !1218)
!1251 = !DILocation(line: 245, column: 34, scope: !1218)
!1252 = !DILocation(line: 245, column: 49, scope: !1218)
!1253 = !DILocation(line: 245, column: 40, scope: !1218)
!1254 = !DILocation(line: 245, column: 56, scope: !1218)
!1255 = !DILocation(line: 245, column: 38, scope: !1218)
!1256 = !DILocation(line: 245, column: 71, scope: !1218)
!1257 = !DILocation(line: 245, column: 62, scope: !1218)
!1258 = !DILocation(line: 245, column: 60, scope: !1218)
!1259 = !DILocation(line: 245, column: 15, scope: !1218)
!1260 = !DILocation(line: 246, column: 9, scope: !1218)
!1261 = !DILocation(line: 247, column: 15, scope: !1262)
!1262 = distinct !DILexicalBlock(scope: !1213, file: !580, line: 246, column: 16)
!1263 = !DILocation(line: 248, column: 17, scope: !1262)
!1264 = !DILocation(line: 248, column: 18, scope: !1262)
!1265 = !DILocation(line: 248, column: 21, scope: !1262)
!1266 = !DILocation(line: 248, column: 37, scope: !1267)
!1267 = !DILexicalBlockFile(scope: !1262, file: !580, discriminator: 1)
!1268 = !DILocation(line: 248, column: 38, scope: !1267)
!1269 = !DILocation(line: 248, column: 28, scope: !1267)
!1270 = !DILocation(line: 248, column: 41, scope: !1267)
!1271 = !DILocation(line: 248, column: 17, scope: !1267)
!1272 = !DILocation(line: 248, column: 17, scope: !1273)
!1273 = !DILexicalBlockFile(scope: !1262, file: !580, discriminator: 2)
!1274 = !DILocation(line: 248, column: 17, scope: !1275)
!1275 = !DILexicalBlockFile(scope: !1262, file: !580, discriminator: 3)
!1276 = !DILocation(line: 248, column: 14, scope: !1275)
!1277 = !DILocation(line: 249, column: 26, scope: !1262)
!1278 = !DILocation(line: 249, column: 17, scope: !1262)
!1279 = !DILocation(line: 249, column: 29, scope: !1262)
!1280 = !DILocation(line: 249, column: 14, scope: !1262)
!1281 = !DILocation(line: 250, column: 17, scope: !1262)
!1282 = !DILocation(line: 250, column: 18, scope: !1262)
!1283 = !DILocation(line: 250, column: 23, scope: !1262)
!1284 = !DILocation(line: 250, column: 26, scope: !1262)
!1285 = !DILocation(line: 250, column: 21, scope: !1262)
!1286 = !DILocation(line: 250, column: 39, scope: !1267)
!1287 = !DILocation(line: 250, column: 40, scope: !1267)
!1288 = !DILocation(line: 250, column: 30, scope: !1267)
!1289 = !DILocation(line: 250, column: 17, scope: !1267)
!1290 = !DILocation(line: 250, column: 17, scope: !1273)
!1291 = !DILocation(line: 250, column: 17, scope: !1275)
!1292 = !DILocation(line: 250, column: 14, scope: !1275)
!1293 = !DILocation(line: 252, column: 21, scope: !1214)
!1294 = !DILocation(line: 252, column: 24, scope: !1214)
!1295 = !DILocation(line: 252, column: 35, scope: !1214)
!1296 = !DILocation(line: 252, column: 33, scope: !1214)
!1297 = !DILocation(line: 252, column: 29, scope: !1214)
!1298 = !DILocation(line: 252, column: 19, scope: !1214)
!1299 = !DILocation(line: 252, column: 18, scope: !1214)
!1300 = !DILocation(line: 252, column: 13, scope: !1214)
!1301 = !DILocation(line: 252, column: 9, scope: !1214)
!1302 = !DILocation(line: 252, column: 16, scope: !1214)
!1303 = !DILocation(line: 253, column: 9, scope: !1214)
!1304 = distinct !{!1304, !1303}
!1305 = !DILocation(line: 253, column: 124, scope: !1306)
!1306 = !DILexicalBlockFile(scope: !1307, file: !580, discriminator: 1)
!1307 = distinct !DILexicalBlock(scope: !1214, file: !580, line: 253, column: 12)
!1308 = !DILocation(line: 255, column: 5, scope: !1214)
!1309 = !DILocation(line: 240, column: 28, scope: !1310)
!1310 = !DILexicalBlockFile(scope: !1207, file: !580, discriminator: 2)
!1311 = !DILocation(line: 240, column: 5, scope: !1310)
!1312 = distinct !{!1312, !1313}
!1313 = !DILocation(line: 240, column: 5, scope: !581)
!1314 = !DILocation(line: 257, column: 5, scope: !581)
!1315 = !DILocation(line: 257, column: 8, scope: !581)
!1316 = !DILocation(line: 257, column: 18, scope: !581)
!1317 = !DILocation(line: 258, column: 1, scope: !581)
!1318 = distinct !DISubprogram(name: "fill_picture", scope: !580, file: !580, line: 260, type: !1319, isLocal: true, isDefinition: true, scopeLine: 261, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !582)
!1319 = !DISubroutineType(types: !1320)
!1320 = !{null, !173, !285}
!1321 = !DILocalVariable(name: "ctx", arg: 1, scope: !1318, file: !580, line: 260, type: !173)
!1322 = !DILocation(line: 260, column: 43, scope: !1318)
!1323 = !DILocalVariable(name: "picref", arg: 2, scope: !1318, file: !580, line: 260, type: !285)
!1324 = !DILocation(line: 260, column: 57, scope: !1318)
!1325 = !DILocalVariable(name: "s", scope: !1318, file: !580, line: 262, type: !812)
!1326 = !DILocation(line: 262, column: 22, scope: !1318)
!1327 = !DILocation(line: 262, column: 26, scope: !1318)
!1328 = !DILocation(line: 262, column: 31, scope: !1318)
!1329 = !DILocalVariable(name: "i", scope: !1318, file: !580, line: 263, type: !200)
!1330 = !DILocation(line: 263, column: 9, scope: !1318)
!1331 = !DILocalVariable(name: "j", scope: !1318, file: !580, line: 263, type: !200)
!1332 = !DILocation(line: 263, column: 12, scope: !1318)
!1333 = !DILocalVariable(name: "k", scope: !1318, file: !580, line: 263, type: !200)
!1334 = !DILocation(line: 263, column: 15, scope: !1318)
!1335 = !DILocalVariable(name: "row_idx", scope: !1318, file: !580, line: 263, type: !200)
!1336 = !DILocation(line: 263, column: 18, scope: !1318)
!1337 = !DILocalVariable(name: "p0", scope: !1318, file: !580, line: 264, type: !291)
!1338 = !DILocation(line: 264, column: 14, scope: !1318)
!1339 = !DILocation(line: 264, column: 19, scope: !1318)
!1340 = !DILocation(line: 264, column: 27, scope: !1318)
!1341 = !DILocation(line: 266, column: 9, scope: !1342)
!1342 = distinct !DILexicalBlock(scope: !1318, file: !580, line: 266, column: 9)
!1343 = !DILocation(line: 266, column: 12, scope: !1342)
!1344 = !DILocation(line: 266, column: 19, scope: !1342)
!1345 = !DILocation(line: 266, column: 22, scope: !1346)
!1346 = !DILexicalBlockFile(scope: !1342, file: !580, discriminator: 1)
!1347 = !DILocation(line: 266, column: 25, scope: !1346)
!1348 = !DILocation(line: 266, column: 39, scope: !1346)
!1349 = !DILocation(line: 266, column: 42, scope: !1346)
!1350 = !DILocation(line: 266, column: 36, scope: !1346)
!1351 = !DILocation(line: 266, column: 9, scope: !1346)
!1352 = !DILocation(line: 268, column: 20, scope: !1342)
!1353 = !DILocation(line: 268, column: 23, scope: !1342)
!1354 = !DILocation(line: 268, column: 35, scope: !1342)
!1355 = !DILocation(line: 268, column: 42, scope: !1342)
!1356 = !DILocation(line: 268, column: 45, scope: !1342)
!1357 = !DILocation(line: 268, column: 40, scope: !1342)
!1358 = !DILocation(line: 268, column: 17, scope: !1342)
!1359 = !DILocation(line: 268, column: 9, scope: !1342)
!1360 = !DILocation(line: 271, column: 12, scope: !1361)
!1361 = distinct !DILexicalBlock(scope: !1318, file: !580, line: 271, column: 5)
!1362 = !DILocation(line: 271, column: 10, scope: !1361)
!1363 = !DILocation(line: 271, column: 17, scope: !1364)
!1364 = !DILexicalBlockFile(scope: !1365, file: !580, discriminator: 1)
!1365 = distinct !DILexicalBlock(scope: !1361, file: !580, line: 271, column: 5)
!1366 = !DILocation(line: 271, column: 21, scope: !1364)
!1367 = !DILocation(line: 271, column: 24, scope: !1364)
!1368 = !DILocation(line: 271, column: 19, scope: !1364)
!1369 = !DILocation(line: 271, column: 5, scope: !1364)
!1370 = !DILocalVariable(name: "byte", scope: !1371, file: !580, line: 272, type: !292)
!1371 = distinct !DILexicalBlock(scope: !1365, file: !580, line: 271, column: 32)
!1372 = !DILocation(line: 272, column: 17, scope: !1371)
!1373 = !DILocalVariable(name: "row", scope: !1371, file: !580, line: 273, type: !291)
!1374 = !DILocation(line: 273, column: 18, scope: !1371)
!1375 = !DILocation(line: 273, column: 24, scope: !1371)
!1376 = !DILocation(line: 273, column: 27, scope: !1371)
!1377 = !DILocation(line: 273, column: 33, scope: !1371)
!1378 = !DILocation(line: 273, column: 41, scope: !1371)
!1379 = !DILocation(line: 273, column: 44, scope: !1371)
!1380 = !DILocation(line: 273, column: 40, scope: !1371)
!1381 = !DILocation(line: 273, column: 31, scope: !1371)
!1382 = !DILocalVariable(name: "p", scope: !1371, file: !580, line: 274, type: !291)
!1383 = !DILocation(line: 274, column: 18, scope: !1371)
!1384 = !DILocation(line: 274, column: 22, scope: !1371)
!1385 = !DILocation(line: 275, column: 16, scope: !1386)
!1386 = distinct !DILexicalBlock(scope: !1371, file: !580, line: 275, column: 9)
!1387 = !DILocation(line: 275, column: 23, scope: !1386)
!1388 = !DILocation(line: 275, column: 14, scope: !1386)
!1389 = !DILocation(line: 275, column: 28, scope: !1390)
!1390 = !DILexicalBlockFile(scope: !1391, file: !580, discriminator: 1)
!1391 = distinct !DILexicalBlock(scope: !1386, file: !580, line: 275, column: 9)
!1392 = !DILocation(line: 275, column: 32, scope: !1390)
!1393 = !DILocation(line: 275, column: 35, scope: !1390)
!1394 = !DILocation(line: 275, column: 30, scope: !1390)
!1395 = !DILocation(line: 275, column: 9, scope: !1390)
!1396 = !DILocation(line: 276, column: 25, scope: !1397)
!1397 = distinct !DILexicalBlock(scope: !1391, file: !580, line: 275, column: 43)
!1398 = !DILocation(line: 276, column: 21, scope: !1397)
!1399 = !DILocation(line: 276, column: 33, scope: !1397)
!1400 = !DILocation(line: 276, column: 31, scope: !1397)
!1401 = !DILocation(line: 276, column: 27, scope: !1397)
!1402 = !DILocation(line: 276, column: 18, scope: !1397)
!1403 = !DILocation(line: 277, column: 17, scope: !1404)
!1404 = distinct !DILexicalBlock(scope: !1397, file: !580, line: 277, column: 17)
!1405 = !DILocation(line: 277, column: 18, scope: !1404)
!1406 = !DILocation(line: 277, column: 22, scope: !1404)
!1407 = !DILocation(line: 277, column: 25, scope: !1408)
!1408 = !DILexicalBlockFile(scope: !1404, file: !580, discriminator: 1)
!1409 = !DILocation(line: 277, column: 30, scope: !1408)
!1410 = !DILocation(line: 277, column: 33, scope: !1408)
!1411 = !DILocation(line: 277, column: 34, scope: !1408)
!1412 = !DILocation(line: 277, column: 27, scope: !1408)
!1413 = !DILocation(line: 277, column: 17, scope: !1408)
!1414 = !DILocation(line: 278, column: 19, scope: !1415)
!1415 = distinct !DILexicalBlock(scope: !1404, file: !580, line: 277, column: 38)
!1416 = !DILocation(line: 279, column: 24, scope: !1415)
!1417 = !DILocation(line: 279, column: 19, scope: !1415)
!1418 = !DILocation(line: 279, column: 22, scope: !1415)
!1419 = !DILocation(line: 280, column: 22, scope: !1415)
!1420 = !DILocation(line: 281, column: 13, scope: !1415)
!1421 = !DILocation(line: 282, column: 9, scope: !1397)
!1422 = !DILocation(line: 275, column: 39, scope: !1423)
!1423 = !DILexicalBlockFile(scope: !1391, file: !580, discriminator: 2)
!1424 = !DILocation(line: 275, column: 9, scope: !1423)
!1425 = distinct !{!1425, !1426}
!1426 = !DILocation(line: 275, column: 9, scope: !1371)
!1427 = !DILocation(line: 283, column: 20, scope: !1371)
!1428 = !DILocation(line: 283, column: 28, scope: !1371)
!1429 = !DILocation(line: 283, column: 35, scope: !1371)
!1430 = !DILocation(line: 283, column: 38, scope: !1371)
!1431 = !DILocation(line: 283, column: 33, scope: !1371)
!1432 = !DILocation(line: 283, column: 17, scope: !1371)
!1433 = !DILocation(line: 284, column: 15, scope: !1371)
!1434 = !DILocation(line: 284, column: 23, scope: !1371)
!1435 = !DILocation(line: 284, column: 12, scope: !1371)
!1436 = !DILocation(line: 285, column: 5, scope: !1371)
!1437 = !DILocation(line: 271, column: 28, scope: !1438)
!1438 = !DILexicalBlockFile(scope: !1365, file: !580, discriminator: 2)
!1439 = !DILocation(line: 271, column: 5, scope: !1438)
!1440 = distinct !{!1440, !1441}
!1441 = !DILocation(line: 271, column: 5, scope: !1318)
!1442 = !DILocation(line: 286, column: 1, scope: !1318)
!1443 = distinct !DISubprogram(name: "init_pattern_from_file", scope: !580, file: !580, line: 143, type: !409, isLocal: true, isDefinition: true, scopeLine: 144, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !582)
!1444 = !DILocalVariable(name: "ctx", arg: 1, scope: !1443, file: !580, line: 143, type: !173)
!1445 = !DILocation(line: 143, column: 52, scope: !1443)
!1446 = !DILocalVariable(name: "s", scope: !1443, file: !580, line: 145, type: !812)
!1447 = !DILocation(line: 145, column: 22, scope: !1443)
!1448 = !DILocation(line: 145, column: 26, scope: !1443)
!1449 = !DILocation(line: 145, column: 31, scope: !1443)
!1450 = !DILocalVariable(name: "ret", scope: !1443, file: !580, line: 146, type: !200)
!1451 = !DILocation(line: 146, column: 9, scope: !1443)
!1452 = !DILocation(line: 148, column: 23, scope: !1443)
!1453 = !DILocation(line: 148, column: 26, scope: !1443)
!1454 = !DILocation(line: 149, column: 24, scope: !1443)
!1455 = !DILocation(line: 149, column: 27, scope: !1443)
!1456 = !DILocation(line: 149, column: 38, scope: !1443)
!1457 = !DILocation(line: 149, column: 41, scope: !1443)
!1458 = !DILocation(line: 149, column: 58, scope: !1443)
!1459 = !DILocation(line: 148, column: 11, scope: !1443)
!1460 = !DILocation(line: 148, column: 9, scope: !1443)
!1461 = !DILocation(line: 150, column: 9, scope: !1462)
!1462 = distinct !DILexicalBlock(scope: !1443, file: !580, line: 150, column: 9)
!1463 = !DILocation(line: 150, column: 13, scope: !1462)
!1464 = !DILocation(line: 150, column: 9, scope: !1443)
!1465 = !DILocation(line: 151, column: 16, scope: !1462)
!1466 = !DILocation(line: 151, column: 9, scope: !1462)
!1467 = !DILocation(line: 154, column: 28, scope: !1443)
!1468 = !DILocation(line: 154, column: 31, scope: !1443)
!1469 = !DILocation(line: 154, column: 44, scope: !1443)
!1470 = !DILocation(line: 154, column: 18, scope: !1443)
!1471 = !DILocation(line: 154, column: 5, scope: !1443)
!1472 = !DILocation(line: 154, column: 8, scope: !1443)
!1473 = !DILocation(line: 154, column: 16, scope: !1443)
!1474 = !DILocation(line: 155, column: 10, scope: !1475)
!1475 = distinct !DILexicalBlock(scope: !1443, file: !580, line: 155, column: 9)
!1476 = !DILocation(line: 155, column: 13, scope: !1475)
!1477 = !DILocation(line: 155, column: 9, scope: !1443)
!1478 = !DILocation(line: 156, column: 9, scope: !1475)
!1479 = !DILocation(line: 157, column: 12, scope: !1443)
!1480 = !DILocation(line: 157, column: 15, scope: !1443)
!1481 = !DILocation(line: 157, column: 24, scope: !1443)
!1482 = !DILocation(line: 157, column: 27, scope: !1443)
!1483 = !DILocation(line: 157, column: 37, scope: !1443)
!1484 = !DILocation(line: 157, column: 40, scope: !1443)
!1485 = !DILocation(line: 157, column: 5, scope: !1443)
!1486 = !DILocation(line: 158, column: 16, scope: !1443)
!1487 = !DILocation(line: 158, column: 19, scope: !1443)
!1488 = !DILocation(line: 158, column: 5, scope: !1443)
!1489 = !DILocation(line: 158, column: 8, scope: !1443)
!1490 = !DILocation(line: 158, column: 33, scope: !1443)
!1491 = !DILocation(line: 160, column: 37, scope: !1443)
!1492 = !DILocation(line: 160, column: 12, scope: !1443)
!1493 = !DILocation(line: 160, column: 5, scope: !1443)
!1494 = !DILocation(line: 161, column: 1, scope: !1443)
!1495 = distinct !DISubprogram(name: "init_pattern_from_string", scope: !580, file: !580, line: 104, type: !409, isLocal: true, isDefinition: true, scopeLine: 105, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !582)
!1496 = !DILocalVariable(name: "ctx", arg: 1, scope: !1495, file: !580, line: 104, type: !173)
!1497 = !DILocation(line: 104, column: 54, scope: !1495)
!1498 = !DILocalVariable(name: "s", scope: !1495, file: !580, line: 106, type: !812)
!1499 = !DILocation(line: 106, column: 22, scope: !1495)
!1500 = !DILocation(line: 106, column: 26, scope: !1495)
!1501 = !DILocation(line: 106, column: 31, scope: !1495)
!1502 = !DILocalVariable(name: "p", scope: !1495, file: !580, line: 107, type: !430)
!1503 = !DILocation(line: 107, column: 11, scope: !1495)
!1504 = !DILocalVariable(name: "i", scope: !1495, file: !580, line: 108, type: !200)
!1505 = !DILocation(line: 108, column: 9, scope: !1495)
!1506 = !DILocalVariable(name: "w", scope: !1495, file: !580, line: 108, type: !200)
!1507 = !DILocation(line: 108, column: 12, scope: !1495)
!1508 = !DILocation(line: 110, column: 16, scope: !1495)
!1509 = !DILocation(line: 110, column: 19, scope: !1495)
!1510 = !DILocation(line: 110, column: 9, scope: !1495)
!1511 = !DILocation(line: 110, column: 7, scope: !1495)
!1512 = !DILocation(line: 111, column: 12, scope: !1495)
!1513 = !DILocation(line: 111, column: 31, scope: !1495)
!1514 = !DILocation(line: 111, column: 5, scope: !1495)
!1515 = !DILocation(line: 113, column: 9, scope: !1516)
!1516 = distinct !DILexicalBlock(scope: !1495, file: !580, line: 113, column: 9)
!1517 = !DILocation(line: 113, column: 12, scope: !1516)
!1518 = !DILocation(line: 113, column: 9, scope: !1495)
!1519 = !DILocation(line: 114, column: 13, scope: !1520)
!1520 = distinct !DILexicalBlock(scope: !1521, file: !580, line: 114, column: 13)
!1521 = distinct !DILexicalBlock(scope: !1516, file: !580, line: 113, column: 15)
!1522 = !DILocation(line: 114, column: 17, scope: !1520)
!1523 = !DILocation(line: 114, column: 20, scope: !1520)
!1524 = !DILocation(line: 114, column: 15, scope: !1520)
!1525 = !DILocation(line: 114, column: 13, scope: !1521)
!1526 = !DILocation(line: 115, column: 20, scope: !1527)
!1527 = distinct !DILexicalBlock(scope: !1520, file: !580, line: 114, column: 23)
!1528 = !DILocation(line: 117, column: 20, scope: !1527)
!1529 = !DILocation(line: 117, column: 23, scope: !1527)
!1530 = !DILocation(line: 117, column: 26, scope: !1527)
!1531 = !DILocation(line: 115, column: 13, scope: !1527)
!1532 = !DILocation(line: 118, column: 13, scope: !1527)
!1533 = !DILocation(line: 120, column: 5, scope: !1521)
!1534 = !DILocation(line: 122, column: 16, scope: !1535)
!1535 = distinct !DILexicalBlock(scope: !1516, file: !580, line: 120, column: 12)
!1536 = !DILocation(line: 122, column: 9, scope: !1535)
!1537 = !DILocation(line: 122, column: 12, scope: !1535)
!1538 = !DILocation(line: 122, column: 14, scope: !1535)
!1539 = !DILocation(line: 123, column: 24, scope: !1535)
!1540 = !DILocation(line: 123, column: 27, scope: !1535)
!1541 = !DILocation(line: 123, column: 16, scope: !1535)
!1542 = !DILocation(line: 123, column: 29, scope: !1535)
!1543 = !DILocation(line: 123, column: 9, scope: !1535)
!1544 = !DILocation(line: 123, column: 12, scope: !1535)
!1545 = !DILocation(line: 123, column: 14, scope: !1535)
!1546 = !DILocation(line: 126, column: 49, scope: !1495)
!1547 = !DILocation(line: 126, column: 52, scope: !1495)
!1548 = !DILocation(line: 126, column: 47, scope: !1495)
!1549 = !DILocation(line: 126, column: 55, scope: !1495)
!1550 = !DILocation(line: 126, column: 58, scope: !1495)
!1551 = !DILocation(line: 126, column: 14, scope: !1495)
!1552 = !DILocation(line: 126, column: 5, scope: !1495)
!1553 = !DILocation(line: 126, column: 8, scope: !1495)
!1554 = !DILocation(line: 126, column: 12, scope: !1495)
!1555 = !DILocation(line: 127, column: 10, scope: !1556)
!1556 = distinct !DILexicalBlock(scope: !1495, file: !580, line: 127, column: 9)
!1557 = !DILocation(line: 127, column: 13, scope: !1556)
!1558 = !DILocation(line: 127, column: 9, scope: !1495)
!1559 = !DILocation(line: 128, column: 9, scope: !1556)
!1560 = !DILocation(line: 131, column: 9, scope: !1495)
!1561 = !DILocation(line: 131, column: 12, scope: !1495)
!1562 = !DILocation(line: 131, column: 7, scope: !1495)
!1563 = !DILocation(line: 132, column: 15, scope: !1564)
!1564 = distinct !DILexicalBlock(scope: !1495, file: !580, line: 132, column: 5)
!1565 = !DILocation(line: 132, column: 18, scope: !1564)
!1566 = !DILocation(line: 132, column: 22, scope: !1564)
!1567 = !DILocation(line: 132, column: 20, scope: !1564)
!1568 = !DILocation(line: 132, column: 24, scope: !1564)
!1569 = !DILocation(line: 132, column: 12, scope: !1564)
!1570 = !DILocation(line: 132, column: 10, scope: !1564)
!1571 = !DILocation(line: 133, column: 16, scope: !1572)
!1572 = distinct !DILexicalBlock(scope: !1573, file: !580, line: 132, column: 34)
!1573 = distinct !DILexicalBlock(scope: !1564, file: !580, line: 132, column: 5)
!1574 = !DILocation(line: 133, column: 36, scope: !1572)
!1575 = !DILocation(line: 133, column: 40, scope: !1572)
!1576 = !DILocation(line: 133, column: 39, scope: !1572)
!1577 = !DILocation(line: 133, column: 42, scope: !1572)
!1578 = !DILocation(line: 133, column: 39, scope: !1579)
!1579 = !DILexicalBlockFile(scope: !1572, file: !580, discriminator: 1)
!1580 = !DILocation(line: 133, column: 59, scope: !1581)
!1581 = !DILexicalBlockFile(scope: !1572, file: !580, discriminator: 2)
!1582 = !DILocation(line: 133, column: 58, scope: !1581)
!1583 = !DILocation(line: 133, column: 39, scope: !1581)
!1584 = !DILocation(line: 133, column: 39, scope: !1585)
!1585 = !DILexicalBlockFile(scope: !1572, file: !580, discriminator: 3)
!1586 = !DILocation(line: 133, column: 9, scope: !1585)
!1587 = !DILocation(line: 134, column: 14, scope: !1588)
!1588 = distinct !DILexicalBlock(scope: !1572, file: !580, line: 134, column: 13)
!1589 = !DILocation(line: 134, column: 13, scope: !1588)
!1590 = !DILocation(line: 134, column: 16, scope: !1588)
!1591 = !DILocation(line: 134, column: 24, scope: !1588)
!1592 = !DILocation(line: 134, column: 29, scope: !1593)
!1593 = !DILexicalBlockFile(scope: !1588, file: !580, discriminator: 1)
!1594 = !DILocation(line: 134, column: 28, scope: !1593)
!1595 = !DILocation(line: 134, column: 13, scope: !1593)
!1596 = !DILocation(line: 135, column: 13, scope: !1588)
!1597 = !DILocation(line: 137, column: 41, scope: !1588)
!1598 = !DILocation(line: 137, column: 38, scope: !1588)
!1599 = !DILocation(line: 137, column: 27, scope: !1588)
!1600 = !DILocation(line: 137, column: 26, scope: !1588)
!1601 = !DILocation(line: 137, column: 25, scope: !1588)
!1602 = !DILocation(line: 137, column: 20, scope: !1588)
!1603 = !DILocation(line: 137, column: 13, scope: !1588)
!1604 = !DILocation(line: 137, column: 16, scope: !1588)
!1605 = !DILocation(line: 137, column: 23, scope: !1588)
!1606 = !DILocation(line: 138, column: 5, scope: !1572)
!1607 = !DILocation(line: 132, column: 30, scope: !1608)
!1608 = !DILexicalBlockFile(scope: !1573, file: !580, discriminator: 1)
!1609 = !DILocation(line: 132, column: 5, scope: !1608)
!1610 = distinct !{!1610, !1611}
!1611 = !DILocation(line: 132, column: 5, scope: !1495)
!1612 = !DILocation(line: 140, column: 5, scope: !1495)
!1613 = !DILocation(line: 141, column: 1, scope: !1495)
!1614 = distinct !DISubprogram(name: "av_lfg_get", scope: !838, file: !838, line: 47, type: !1615, isLocal: true, isDefinition: true, scopeLine: 47, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !582)
!1615 = !DISubroutineType(types: !1616)
!1616 = !{!442, !1617}
!1617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64, align: 64)
!1618 = !DILocalVariable(name: "c", arg: 1, scope: !1614, file: !838, line: 47, type: !1617)
!1619 = !DILocation(line: 47, column: 46, scope: !1614)
!1620 = !DILocation(line: 48, column: 41, scope: !1614)
!1621 = !DILocation(line: 48, column: 44, scope: !1614)
!1622 = !DILocation(line: 48, column: 49, scope: !1614)
!1623 = !DILocation(line: 48, column: 54, scope: !1614)
!1624 = !DILocation(line: 48, column: 31, scope: !1614)
!1625 = !DILocation(line: 48, column: 34, scope: !1614)
!1626 = !DILocation(line: 48, column: 72, scope: !1614)
!1627 = !DILocation(line: 48, column: 75, scope: !1614)
!1628 = !DILocation(line: 48, column: 80, scope: !1614)
!1629 = !DILocation(line: 48, column: 85, scope: !1614)
!1630 = !DILocation(line: 48, column: 62, scope: !1614)
!1631 = !DILocation(line: 48, column: 65, scope: !1614)
!1632 = !DILocation(line: 48, column: 60, scope: !1614)
!1633 = !DILocation(line: 48, column: 14, scope: !1614)
!1634 = !DILocation(line: 48, column: 17, scope: !1614)
!1635 = !DILocation(line: 48, column: 23, scope: !1614)
!1636 = !DILocation(line: 48, column: 5, scope: !1614)
!1637 = !DILocation(line: 48, column: 8, scope: !1614)
!1638 = !DILocation(line: 48, column: 29, scope: !1614)
!1639 = !DILocation(line: 49, column: 21, scope: !1614)
!1640 = !DILocation(line: 49, column: 24, scope: !1614)
!1641 = !DILocation(line: 49, column: 29, scope: !1614)
!1642 = !DILocation(line: 49, column: 32, scope: !1614)
!1643 = !DILocation(line: 49, column: 12, scope: !1614)
!1644 = !DILocation(line: 49, column: 15, scope: !1614)
!1645 = !DILocation(line: 49, column: 5, scope: !1614)
!1646 = distinct !DISubprogram(name: "av_isgraph", scope: !1647, file: !1647, line: 214, type: !1648, isLocal: true, isDefinition: true, scopeLine: 215, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !582)
!1647 = !DIFile(filename: "./libavutil/avstring.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavfilter--libavfilter.a")
!1648 = !DISubroutineType(types: !1649)
!1649 = !{!200, !200}
!1650 = !DILocalVariable(name: "c", arg: 1, scope: !1646, file: !1647, line: 214, type: !200)
!1651 = !DILocation(line: 214, column: 57, scope: !1646)
!1652 = !DILocation(line: 216, column: 12, scope: !1646)
!1653 = !DILocation(line: 216, column: 14, scope: !1646)
!1654 = !DILocation(line: 216, column: 19, scope: !1646)
!1655 = !DILocation(line: 216, column: 22, scope: !1656)
!1656 = !DILexicalBlockFile(scope: !1646, file: !1647, discriminator: 1)
!1657 = !DILocation(line: 216, column: 24, scope: !1656)
!1658 = !DILocation(line: 216, column: 19, scope: !1659)
!1659 = !DILexicalBlockFile(scope: !1646, file: !1647, discriminator: 2)
!1660 = !DILocation(line: 216, column: 5, scope: !1659)
