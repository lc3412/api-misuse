; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--wmalosslessdec.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--wmalosslessdec.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVRational = type { i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, {}*, i32, void (%struct.MpegEncContext*)*, {}*, {}*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.WmallDecodeCtx = type { %struct.AVCodecContext*, %struct.AVFrame*, %struct.LLAudDSPContext, i8*, i32, %struct.PutBitContext, i32, i32, i32, i8, i16, i16, i8, i8, i8, i8, i8, i16, %struct.GetBitContext, i32, i8, i8, i32, i32, i32, i8, i8, i32, %struct.GetBitContext, i32, [8 x i16*], [8 x i32*], i8, i8, i8, i16, i8, [8 x i8], [8 x %struct.WmallChannelCtx], i8, i8, i8, i8, i8, i8, i8, [16 x i16], [8 x [16 x i32]], i8, i8, [2048 x i16], [64 x i16], [512 x i32], [512 x i32], i32, i32, i32, [8 x i8], [8 x [9 x %struct.anon]], [8 x i32], i32, [8 x i32], [8 x i32], [8 x i32], [8 x i32], i32, [8 x i32], [8 x [16384 x i32]], [8 x [40 x i32]], i32, i32, i32, [12 x i8] }
%struct.LLAudDSPContext = type { i32 (i16*, i16*, i16*, i32, i32)*, i32 (i16*, i32*, i16*, i32, i32)* }
%struct.PutBitContext = type { i32, i32, i8*, i8*, i8*, i32 }
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%struct.WmallChannelCtx = type { i16, i8, i8, [32 x i16], [32 x i16], i8, i16, i32, i32 }
%struct.anon = type { i32, i32, i32, i32, [264 x i16], [520 x i32], [520 x i16], i32, [12 x i8] }
%union.unaligned_16 = type { i16 }
%union.unaligned_32 = type { i32 }
%union.anon = type { i32 }

@.str = private unnamed_addr constant [12 x i8] c"wmalossless\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"Windows Media Audio Lossless\00", align 1
@.compoundliteral = internal constant [3 x i32] [i32 6, i32 7, i32 -1], align 4
@ff_wmalossless_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i32 1, i32 86054, i32 290, %struct.AVRational* null, i32* null, i32* null, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.compoundliteral, i32 0, i32 0), i64* null, i8 0, %struct.AVClass* null, %struct.AVProfile* null, i8* null, i32 801168, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @decode_packet, i32 (%struct.AVCodecContext*)* @decode_close, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* @flush, i32 0, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.2 = private unnamed_addr constant [24 x i8] c"block_align is not set\0A\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"Unknown bit-depth: %u\0A\00", align 1
@.str.4 = private unnamed_addr constant [27 x i8] c"Unsupported extradata size\00", align 1
@.str.5 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.6 = private unnamed_addr constant [34 x i8] c"s->samples_per_frame <= (1 << 14)\00", align 1
@.str.7 = private unnamed_addr constant [28 x i8] c"libavcodec/wmalosslessdec.c\00", align 1
@.str.8 = private unnamed_addr constant [32 x i8] c"invalid number of subframes %u\0A\00", align 1
@.str.9 = private unnamed_addr constant [31 x i8] c"invalid number of channels %d\0A\00", align 1
@.str.10 = private unnamed_addr constant [22 x i8] c"More than %d channels\00", align 1
@.str.11 = private unnamed_addr constant [19 x i8] c"Bitstream splicing\00", align 1
@.str.12 = private unnamed_addr constant [36 x i8] c"Packet loss detected! seq %x vs %x\0A\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"Overread %d\0A\00", align 1
@.str.14 = private unnamed_addr constant [38 x i8] c"frame[%u] would have to skip %i bits\0A\00", align 1
@.str.15 = private unnamed_addr constant [22 x i8] c"Found empty subframe\0A\00", align 1
@.str.16 = private unnamed_addr constant [34 x i8] c"broken frame: num subframes > 31\0A\00", align 1
@.str.17 = private unnamed_addr constant [55 x i8] c"broken frame: channel len(%u) > samples_per_frame(%u)\0A\00", align 1
@.str.18 = private unnamed_addr constant [31 x i8] c"broken frame: subframe_len %i\0A\00", align 1
@.str.19 = private unnamed_addr constant [18 x i8] c"Arithmetic coding\00", align 1
@.str.20 = private unnamed_addr constant [27 x i8] c"Waiting for seekable tile\0A\00", align 1
@.str.21 = private unnamed_addr constant [45 x i8] c"Expect wrong output since inverse LPC filter\00", align 1
@.str.22 = private unnamed_addr constant [48 x i8] c"Invalid number of padding bits in raw PCM tile\0A\00", align 1
@.str.23 = private unnamed_addr constant [17 x i8] c"broken subframe\0A\00", align 1
@.str.24 = private unnamed_addr constant [44 x i8] c"Order[%d][%d] %d > max (%d), not supported\0A\00", align 1
@decode_cdlms.warned = internal global i32 0, align 4
@.str.25 = private unnamed_addr constant [18 x i8] c"CDLMS of order %d\00", align 1
@.str.26 = private unnamed_addr constant [23 x i8] c"Too small input buffer\00", align 1
@.str.27 = private unnamed_addr constant [43 x i8] c"Internal error, put_bits buffer too small\0A\00", align 1
@.str.28 = private unnamed_addr constant [24 x i8] c"s->buf_ptr < s->buf_end\00", align 1
@.str.29 = private unnamed_addr constant [22 x i8] c"libavcodec/put_bits.h\00", align 1

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @decode_init(%struct.AVCodecContext* %avctx) #0 !dbg !1818 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.WmallDecodeCtx*, align 8
  %edata_ptr = alloca i8*, align 8
  %channel_mask = alloca i32, align 4
  %i = alloca i32, align 4
  %log2_max_num_subframes = alloca i32, align 4
  %mask = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !1819, metadata !1820), !dbg !1821
  call void @llvm.dbg.declare(metadata %struct.WmallDecodeCtx** %s, metadata !1822, metadata !1820), !dbg !1823
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1824
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !1825
  %1 = load i8*, i8** %priv_data, align 8, !dbg !1825
  %2 = bitcast i8* %1 to %struct.WmallDecodeCtx*, !dbg !1824
  store %struct.WmallDecodeCtx* %2, %struct.WmallDecodeCtx** %s, align 8, !dbg !1823
  call void @llvm.dbg.declare(metadata i8** %edata_ptr, metadata !1826, metadata !1820), !dbg !1827
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1828
  %extradata = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %3, i32 0, i32 15, !dbg !1829
  %4 = load i8*, i8** %extradata, align 8, !dbg !1829
  store i8* %4, i8** %edata_ptr, align 8, !dbg !1827
  call void @llvm.dbg.declare(metadata i32* %channel_mask, metadata !1830, metadata !1820), !dbg !1831
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1832, metadata !1820), !dbg !1833
  call void @llvm.dbg.declare(metadata i32* %log2_max_num_subframes, metadata !1834, metadata !1820), !dbg !1835
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1836
  %block_align = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %5, i32 0, i32 87, !dbg !1838
  %6 = load i32, i32* %block_align, align 4, !dbg !1838
  %tobool = icmp ne i32 %6, 0, !dbg !1836
  br i1 %tobool, label %if.end, label %if.then, !dbg !1839

if.then:                                          ; preds = %entry
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1840
  %8 = bitcast %struct.AVCodecContext* %7 to i8*, !dbg !1840
  call void (i8*, i32, i8*, ...) @av_log(i8* %8, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i32 0, i32 0)), !dbg !1842
  store i32 -22, i32* %retval, align 4, !dbg !1843
  br label %return, !dbg !1843

if.end:                                           ; preds = %entry
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1844
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %9, i32 0, i32 83, !dbg !1845
  %10 = load i32, i32* %channels, align 4, !dbg !1845
  %mul = mul nsw i32 32768, %10, !dbg !1846
  %11 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !1847
  %max_frame_size = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %11, i32 0, i32 4, !dbg !1848
  store i32 %mul, i32* %max_frame_size, align 8, !dbg !1849
  %12 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !1850
  %max_frame_size1 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %12, i32 0, i32 4, !dbg !1851
  %13 = load i32, i32* %max_frame_size1, align 8, !dbg !1851
  %add = add nsw i32 %13, 64, !dbg !1852
  %conv = sext i32 %add to i64, !dbg !1850
  %call = call noalias i8* @av_mallocz(i64 %conv), !dbg !1853
  %14 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !1854
  %frame_data = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %14, i32 0, i32 3, !dbg !1855
  store i8* %call, i8** %frame_data, align 16, !dbg !1856
  %15 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !1857
  %frame_data2 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %15, i32 0, i32 3, !dbg !1859
  %16 = load i8*, i8** %frame_data2, align 16, !dbg !1859
  %tobool3 = icmp ne i8* %16, null, !dbg !1857
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !1860

if.then4:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !1861
  br label %return, !dbg !1861

if.end5:                                          ; preds = %if.end
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1862
  %18 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !1863
  %avctx6 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %18, i32 0, i32 0, !dbg !1864
  store %struct.AVCodecContext* %17, %struct.AVCodecContext** %avctx6, align 16, !dbg !1865
  %19 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !1866
  %dsp = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %19, i32 0, i32 2, !dbg !1867
  call void @ff_llauddsp_init(%struct.LLAudDSPContext* %dsp), !dbg !1868
  %20 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !1869
  %pb = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %20, i32 0, i32 5, !dbg !1870
  %21 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !1871
  %frame_data7 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %21, i32 0, i32 3, !dbg !1872
  %22 = load i8*, i8** %frame_data7, align 16, !dbg !1872
  %23 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !1873
  %max_frame_size8 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %23, i32 0, i32 4, !dbg !1874
  %24 = load i32, i32* %max_frame_size8, align 8, !dbg !1874
  call void @init_put_bits(%struct.PutBitContext* %pb, i8* %22, i32 %24), !dbg !1875
  %25 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1876
  %extradata_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %25, i32 0, i32 16, !dbg !1878
  %26 = load i32, i32* %extradata_size, align 8, !dbg !1878
  %cmp = icmp sge i32 %26, 18, !dbg !1879
  br i1 %cmp, label %if.then10, label %if.else37, !dbg !1880

if.then10:                                        ; preds = %if.end5
  %27 = load i8*, i8** %edata_ptr, align 8, !dbg !1881
  %add.ptr = getelementptr inbounds i8, i8* %27, i64 14, !dbg !1883
  %28 = bitcast i8* %add.ptr to %union.unaligned_16*, !dbg !1884
  %l = bitcast %union.unaligned_16* %28 to i16*, !dbg !1884
  %29 = load i16, i16* %l, align 1, !dbg !1884
  %conv11 = zext i16 %29 to i32, !dbg !1885
  %30 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !1886
  %decode_flags = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %30, i32 0, i32 6, !dbg !1887
  store i32 %conv11, i32* %decode_flags, align 8, !dbg !1888
  %31 = load i8*, i8** %edata_ptr, align 8, !dbg !1889
  %add.ptr12 = getelementptr inbounds i8, i8* %31, i64 2, !dbg !1890
  %32 = bitcast i8* %add.ptr12 to %union.unaligned_32*, !dbg !1891
  %l13 = bitcast %union.unaligned_32* %32 to i32*, !dbg !1891
  %33 = load i32, i32* %l13, align 1, !dbg !1891
  store i32 %33, i32* %channel_mask, align 4, !dbg !1892
  %34 = load i8*, i8** %edata_ptr, align 8, !dbg !1893
  %35 = bitcast i8* %34 to %union.unaligned_16*, !dbg !1894
  %l14 = bitcast %union.unaligned_16* %35 to i16*, !dbg !1894
  %36 = load i16, i16* %l14, align 1, !dbg !1894
  %conv15 = trunc i16 %36 to i8, !dbg !1895
  %37 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !1896
  %bits_per_sample = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %37, i32 0, i32 9, !dbg !1897
  store i8 %conv15, i8* %bits_per_sample, align 4, !dbg !1898
  %38 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !1899
  %bits_per_sample16 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %38, i32 0, i32 9, !dbg !1901
  %39 = load i8, i8* %bits_per_sample16, align 4, !dbg !1901
  %conv17 = zext i8 %39 to i32, !dbg !1899
  %cmp18 = icmp eq i32 %conv17, 16, !dbg !1902
  br i1 %cmp18, label %if.then20, label %if.else, !dbg !1903

if.then20:                                        ; preds = %if.then10
  %40 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1904
  %sample_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %40, i32 0, i32 84, !dbg !1905
  store i32 6, i32* %sample_fmt, align 8, !dbg !1906
  br label %if.end31, !dbg !1904

if.else:                                          ; preds = %if.then10
  %41 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !1907
  %bits_per_sample21 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %41, i32 0, i32 9, !dbg !1909
  %42 = load i8, i8* %bits_per_sample21, align 4, !dbg !1909
  %conv22 = zext i8 %42 to i32, !dbg !1907
  %cmp23 = icmp eq i32 %conv22, 24, !dbg !1910
  br i1 %cmp23, label %if.then25, label %if.else27, !dbg !1911

if.then25:                                        ; preds = %if.else
  %43 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1912
  %sample_fmt26 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %43, i32 0, i32 84, !dbg !1914
  store i32 7, i32* %sample_fmt26, align 8, !dbg !1915
  %44 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1916
  %bits_per_raw_sample = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %44, i32 0, i32 143, !dbg !1917
  store i32 24, i32* %bits_per_raw_sample, align 4, !dbg !1918
  br label %if.end30, !dbg !1919

if.else27:                                        ; preds = %if.else
  %45 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1920
  %46 = bitcast %struct.AVCodecContext* %45 to i8*, !dbg !1920
  %47 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !1922
  %bits_per_sample28 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %47, i32 0, i32 9, !dbg !1923
  %48 = load i8, i8* %bits_per_sample28, align 4, !dbg !1923
  %conv29 = zext i8 %48 to i32, !dbg !1922
  call void (i8*, i32, i8*, ...) @av_log(i8* %46, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i32 0, i32 0), i32 %conv29), !dbg !1924
  store i32 -1094995529, i32* %retval, align 4, !dbg !1925
  br label %return, !dbg !1925

if.end30:                                         ; preds = %if.then25
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then20
  store i32 0, i32* %i, align 4, !dbg !1926
  br label %for.cond, !dbg !1928

for.cond:                                         ; preds = %for.inc, %if.end31
  %49 = load i32, i32* %i, align 4, !dbg !1929
  %50 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1932
  %extradata_size32 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %50, i32 0, i32 16, !dbg !1933
  %51 = load i32, i32* %extradata_size32, align 8, !dbg !1933
  %cmp33 = icmp slt i32 %49, %51, !dbg !1934
  br i1 %cmp33, label %for.body, label %for.end, !dbg !1935

for.body:                                         ; preds = %for.cond
  br label %do.body, !dbg !1936, !llvm.loop !1937

do.body:                                          ; preds = %for.body
  br label %do.end, !dbg !1938

do.end:                                           ; preds = %do.body
  br label %for.inc, !dbg !1941

for.inc:                                          ; preds = %do.end
  %52 = load i32, i32* %i, align 4, !dbg !1943
  %inc = add nsw i32 %52, 1, !dbg !1943
  store i32 %inc, i32* %i, align 4, !dbg !1943
  br label %for.cond, !dbg !1945, !llvm.loop !1946

for.end:                                          ; preds = %for.cond
  br label %do.body35, !dbg !1948, !llvm.loop !1949

do.body35:                                        ; preds = %for.end
  br label %do.end36, !dbg !1950

do.end36:                                         ; preds = %do.body35
  br label %if.end38, !dbg !1953

if.else37:                                        ; preds = %if.end5
  %53 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1954
  %54 = bitcast %struct.AVCodecContext* %53 to i8*, !dbg !1954
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %54, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i32 0, i32 0)), !dbg !1956
  store i32 -1163346256, i32* %retval, align 4, !dbg !1957
  br label %return, !dbg !1957

if.end38:                                         ; preds = %do.end36
  %55 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1958
  %block_align39 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %55, i32 0, i32 87, !dbg !1959
  %56 = load i32, i32* %block_align39, align 4, !dbg !1959
  %or = or i32 %56, 1, !dbg !1960
  %57 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !1961
  %sub = sub nsw i32 31, %57, !dbg !1962
  %add40 = add nsw i32 %sub, 4, !dbg !1963
  %conv41 = trunc i32 %add40 to i16, !dbg !1964
  %58 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !1965
  %log2_frame_size = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %58, i32 0, i32 11, !dbg !1966
  store i16 %conv41, i16* %log2_frame_size, align 8, !dbg !1967
  %59 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !1968
  %skip_frame = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %59, i32 0, i32 33, !dbg !1969
  store i8 1, i8* %skip_frame, align 1, !dbg !1970
  %60 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !1971
  %packet_loss = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %60, i32 0, i32 25, !dbg !1972
  store i8 1, i8* %packet_loss, align 4, !dbg !1973
  %61 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !1974
  %decode_flags42 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %61, i32 0, i32 6, !dbg !1975
  %62 = load i32, i32* %decode_flags42, align 8, !dbg !1975
  %and = and i32 %62, 64, !dbg !1976
  %63 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !1977
  %len_prefix = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %63, i32 0, i32 7, !dbg !1978
  store i32 %and, i32* %len_prefix, align 4, !dbg !1979
  %64 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1980
  %sample_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %64, i32 0, i32 82, !dbg !1981
  %65 = load i32, i32* %sample_rate, align 8, !dbg !1981
  %66 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !1982
  %decode_flags43 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %66, i32 0, i32 6, !dbg !1983
  %67 = load i32, i32* %decode_flags43, align 8, !dbg !1983
  %call44 = call i32 @ff_wma_get_frame_len_bits(i32 %65, i32 3, i32 %67), !dbg !1984
  %shl = shl i32 1, %call44, !dbg !1985
  %conv45 = trunc i32 %shl to i16, !dbg !1986
  %68 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !1987
  %samples_per_frame = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %68, i32 0, i32 10, !dbg !1988
  store i16 %conv45, i16* %samples_per_frame, align 2, !dbg !1989
  br label %do.body46, !dbg !1990, !llvm.loop !1991

do.body46:                                        ; preds = %if.end38
  %69 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !1992
  %samples_per_frame47 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %69, i32 0, i32 10, !dbg !1996
  %70 = load i16, i16* %samples_per_frame47, align 2, !dbg !1996
  %conv48 = zext i16 %70 to i32, !dbg !1992
  %cmp49 = icmp sle i32 %conv48, 16384, !dbg !1997
  br i1 %cmp49, label %if.end52, label %if.then51, !dbg !1998

if.then51:                                        ; preds = %do.body46
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i32 0, i32 0), i32 236), !dbg !1999
  call void @abort() #8, !dbg !2002
  unreachable, !dbg !2004

if.end52:                                         ; preds = %do.body46
  br label %do.end53, !dbg !2005

do.end53:                                         ; preds = %if.end52
  store i32 0, i32* %i, align 4, !dbg !2007
  br label %for.cond54, !dbg !2009

for.cond54:                                       ; preds = %for.inc60, %do.end53
  %71 = load i32, i32* %i, align 4, !dbg !2010
  %72 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2013
  %channels55 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %72, i32 0, i32 83, !dbg !2014
  %73 = load i32, i32* %channels55, align 4, !dbg !2014
  %cmp56 = icmp slt i32 %71, %73, !dbg !2015
  br i1 %cmp56, label %for.body58, label %for.end62, !dbg !2016

for.body58:                                       ; preds = %for.cond54
  %74 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2017
  %samples_per_frame59 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %74, i32 0, i32 10, !dbg !2018
  %75 = load i16, i16* %samples_per_frame59, align 2, !dbg !2018
  %76 = load i32, i32* %i, align 4, !dbg !2019
  %idxprom = sext i32 %76 to i64, !dbg !2020
  %77 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2020
  %channel = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %77, i32 0, i32 38, !dbg !2021
  %arrayidx = getelementptr inbounds [8 x %struct.WmallChannelCtx], [8 x %struct.WmallChannelCtx]* %channel, i64 0, i64 %idxprom, !dbg !2020
  %prev_block_len = getelementptr inbounds %struct.WmallChannelCtx, %struct.WmallChannelCtx* %arrayidx, i32 0, i32 0, !dbg !2022
  store i16 %75, i16* %prev_block_len, align 16, !dbg !2023
  br label %for.inc60, !dbg !2020

for.inc60:                                        ; preds = %for.body58
  %78 = load i32, i32* %i, align 4, !dbg !2024
  %inc61 = add nsw i32 %78, 1, !dbg !2024
  store i32 %inc61, i32* %i, align 4, !dbg !2024
  br label %for.cond54, !dbg !2026, !llvm.loop !2027

for.end62:                                        ; preds = %for.cond54
  %79 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2029
  %decode_flags63 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %79, i32 0, i32 6, !dbg !2030
  %80 = load i32, i32* %decode_flags63, align 8, !dbg !2030
  %and64 = and i32 %80, 56, !dbg !2031
  %shr = lshr i32 %and64, 3, !dbg !2032
  store i32 %shr, i32* %log2_max_num_subframes, align 4, !dbg !2033
  %81 = load i32, i32* %log2_max_num_subframes, align 4, !dbg !2034
  %shl65 = shl i32 1, %81, !dbg !2035
  %conv66 = trunc i32 %shl65 to i8, !dbg !2036
  %82 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2037
  %max_num_subframes = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %82, i32 0, i32 14, !dbg !2038
  store i8 %conv66, i8* %max_num_subframes, align 4, !dbg !2039
  %83 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2040
  %max_subframe_len_bit = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %83, i32 0, i32 16, !dbg !2041
  store i8 0, i8* %max_subframe_len_bit, align 2, !dbg !2042
  %84 = load i32, i32* %log2_max_num_subframes, align 4, !dbg !2043
  %or67 = or i32 %84, 1, !dbg !2044
  %85 = call i32 @llvm.ctlz.i32(i32 %or67, i1 true), !dbg !2045
  %sub68 = sub nsw i32 31, %85, !dbg !2046
  %add69 = add nsw i32 %sub68, 1, !dbg !2047
  %conv70 = trunc i32 %add69 to i8, !dbg !2048
  %86 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2049
  %subframe_len_bits = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %86, i32 0, i32 15, !dbg !2050
  store i8 %conv70, i8* %subframe_len_bits, align 1, !dbg !2051
  %87 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2052
  %samples_per_frame71 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %87, i32 0, i32 10, !dbg !2053
  %88 = load i16, i16* %samples_per_frame71, align 2, !dbg !2053
  %conv72 = zext i16 %88 to i32, !dbg !2052
  %89 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2054
  %max_num_subframes73 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %89, i32 0, i32 14, !dbg !2055
  %90 = load i8, i8* %max_num_subframes73, align 4, !dbg !2055
  %conv74 = zext i8 %90 to i32, !dbg !2054
  %div = sdiv i32 %conv72, %conv74, !dbg !2056
  %conv75 = trunc i32 %div to i16, !dbg !2052
  %91 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2057
  %min_samples_per_subframe = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %91, i32 0, i32 17, !dbg !2058
  store i16 %conv75, i16* %min_samples_per_subframe, align 16, !dbg !2059
  %92 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2060
  %decode_flags76 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %92, i32 0, i32 6, !dbg !2061
  %93 = load i32, i32* %decode_flags76, align 8, !dbg !2061
  %and77 = and i32 %93, 128, !dbg !2062
  %94 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2063
  %dynamic_range_compression = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %94, i32 0, i32 8, !dbg !2064
  store i32 %and77, i32* %dynamic_range_compression, align 16, !dbg !2065
  %95 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2066
  %decode_flags78 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %95, i32 0, i32 6, !dbg !2067
  %96 = load i32, i32* %decode_flags78, align 8, !dbg !2067
  %and79 = and i32 %96, 256, !dbg !2068
  %97 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2069
  %bV3RTM = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %97, i32 0, i32 60, !dbg !2070
  store i32 %and79, i32* %bV3RTM, align 16, !dbg !2071
  %98 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2072
  %max_num_subframes80 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %98, i32 0, i32 14, !dbg !2074
  %99 = load i8, i8* %max_num_subframes80, align 4, !dbg !2074
  %conv81 = zext i8 %99 to i32, !dbg !2072
  %cmp82 = icmp sgt i32 %conv81, 32, !dbg !2075
  br i1 %cmp82, label %if.then84, label %if.end87, !dbg !2076

if.then84:                                        ; preds = %for.end62
  %100 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2077
  %101 = bitcast %struct.AVCodecContext* %100 to i8*, !dbg !2077
  %102 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2079
  %max_num_subframes85 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %102, i32 0, i32 14, !dbg !2080
  %103 = load i8, i8* %max_num_subframes85, align 4, !dbg !2080
  %conv86 = zext i8 %103 to i32, !dbg !2079
  call void (i8*, i32, i8*, ...) @av_log(i8* %101, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.8, i32 0, i32 0), i32 %conv86), !dbg !2081
  store i32 -1094995529, i32* %retval, align 4, !dbg !2082
  br label %return, !dbg !2082

if.end87:                                         ; preds = %for.end62
  %104 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2083
  %channels88 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %104, i32 0, i32 83, !dbg !2084
  %105 = load i32, i32* %channels88, align 4, !dbg !2084
  %conv89 = trunc i32 %105 to i8, !dbg !2083
  %106 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2085
  %num_channels = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %106, i32 0, i32 12, !dbg !2086
  store i8 %conv89, i8* %num_channels, align 2, !dbg !2087
  %107 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2088
  %lfe_channel = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %107, i32 0, i32 13, !dbg !2089
  store i8 -1, i8* %lfe_channel, align 1, !dbg !2090
  %108 = load i32, i32* %channel_mask, align 4, !dbg !2091
  %and90 = and i32 %108, 8, !dbg !2093
  %tobool91 = icmp ne i32 %and90, 0, !dbg !2093
  br i1 %tobool91, label %if.then92, label %if.end106, !dbg !2094

if.then92:                                        ; preds = %if.end87
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !2095, metadata !1820), !dbg !2097
  store i32 1, i32* %mask, align 4, !dbg !2098
  br label %for.cond93, !dbg !2100

for.cond93:                                       ; preds = %for.inc103, %if.then92
  %109 = load i32, i32* %mask, align 4, !dbg !2101
  %cmp94 = icmp ult i32 %109, 16, !dbg !2104
  br i1 %cmp94, label %for.body96, label %for.end105, !dbg !2105

for.body96:                                       ; preds = %for.cond93
  %110 = load i32, i32* %channel_mask, align 4, !dbg !2106
  %111 = load i32, i32* %mask, align 4, !dbg !2108
  %and97 = and i32 %110, %111, !dbg !2109
  %tobool98 = icmp ne i32 %and97, 0, !dbg !2109
  br i1 %tobool98, label %if.then99, label %if.end102, !dbg !2110

if.then99:                                        ; preds = %for.body96
  %112 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2111
  %lfe_channel100 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %112, i32 0, i32 13, !dbg !2112
  %113 = load i8, i8* %lfe_channel100, align 1, !dbg !2113
  %inc101 = add i8 %113, 1, !dbg !2113
  store i8 %inc101, i8* %lfe_channel100, align 1, !dbg !2113
  br label %if.end102, !dbg !2113

if.end102:                                        ; preds = %if.then99, %for.body96
  br label %for.inc103, !dbg !2114

for.inc103:                                       ; preds = %if.end102
  %114 = load i32, i32* %mask, align 4, !dbg !2116
  %shl104 = shl i32 %114, 1, !dbg !2116
  store i32 %shl104, i32* %mask, align 4, !dbg !2116
  br label %for.cond93, !dbg !2118, !llvm.loop !2119

for.end105:                                       ; preds = %for.cond93
  br label %if.end106, !dbg !2121

if.end106:                                        ; preds = %for.end105, %if.end87
  %115 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2122
  %num_channels107 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %115, i32 0, i32 12, !dbg !2124
  %116 = load i8, i8* %num_channels107, align 2, !dbg !2124
  %conv108 = sext i8 %116 to i32, !dbg !2122
  %cmp109 = icmp slt i32 %conv108, 0, !dbg !2125
  br i1 %cmp109, label %if.then111, label %if.else114, !dbg !2126

if.then111:                                       ; preds = %if.end106
  %117 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2127
  %118 = bitcast %struct.AVCodecContext* %117 to i8*, !dbg !2127
  %119 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2129
  %num_channels112 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %119, i32 0, i32 12, !dbg !2130
  %120 = load i8, i8* %num_channels112, align 2, !dbg !2130
  %conv113 = sext i8 %120 to i32, !dbg !2129
  call void (i8*, i32, i8*, ...) @av_log(i8* %118, i32 16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.9, i32 0, i32 0), i32 %conv113), !dbg !2131
  store i32 -1094995529, i32* %retval, align 4, !dbg !2132
  br label %return, !dbg !2132

if.else114:                                       ; preds = %if.end106
  %121 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2133
  %num_channels115 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %121, i32 0, i32 12, !dbg !2135
  %122 = load i8, i8* %num_channels115, align 2, !dbg !2135
  %conv116 = sext i8 %122 to i32, !dbg !2133
  %cmp117 = icmp sgt i32 %conv116, 8, !dbg !2136
  br i1 %cmp117, label %if.then119, label %if.end120, !dbg !2137

if.then119:                                       ; preds = %if.else114
  %123 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2138
  %124 = bitcast %struct.AVCodecContext* %123 to i8*, !dbg !2138
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %124, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10, i32 0, i32 0), i32 8), !dbg !2140
  store i32 -1163346256, i32* %retval, align 4, !dbg !2141
  br label %return, !dbg !2141

if.end120:                                        ; preds = %if.else114
  br label %if.end121

if.end121:                                        ; preds = %if.end120
  %call122 = call %struct.AVFrame* @av_frame_alloc(), !dbg !2142
  %125 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2143
  %frame = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %125, i32 0, i32 1, !dbg !2144
  store %struct.AVFrame* %call122, %struct.AVFrame** %frame, align 8, !dbg !2145
  %126 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2146
  %frame123 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %126, i32 0, i32 1, !dbg !2148
  %127 = load %struct.AVFrame*, %struct.AVFrame** %frame123, align 8, !dbg !2148
  %tobool124 = icmp ne %struct.AVFrame* %127, null, !dbg !2146
  br i1 %tobool124, label %if.end126, label %if.then125, !dbg !2149

if.then125:                                       ; preds = %if.end121
  store i32 -12, i32* %retval, align 4, !dbg !2150
  br label %return, !dbg !2150

if.end126:                                        ; preds = %if.end121
  %128 = load i32, i32* %channel_mask, align 4, !dbg !2151
  %conv127 = zext i32 %128 to i64, !dbg !2151
  %129 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2152
  %channel_layout = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %129, i32 0, i32 89, !dbg !2153
  store i64 %conv127, i64* %channel_layout, align 8, !dbg !2154
  store i32 0, i32* %retval, align 4, !dbg !2155
  br label %return, !dbg !2155

return:                                           ; preds = %if.end126, %if.then125, %if.then119, %if.then111, %if.then84, %if.else37, %if.else27, %if.then4, %if.then
  %130 = load i32, i32* %retval, align 4, !dbg !2156
  ret i32 %130, !dbg !2156
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_packet(%struct.AVCodecContext* %avctx, i8* %data, i32* %got_frame_ptr, %struct.AVPacket* %avpkt) #1 !dbg !2157 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %data.addr = alloca i8*, align 8
  %got_frame_ptr.addr = alloca i32*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %s = alloca %struct.WmallDecodeCtx*, align 8
  %gb = alloca %struct.GetBitContext*, align 8
  %buf = alloca i8*, align 8
  %buf_size = alloca i32, align 4
  %num_bits_prev_frame = alloca i32, align 4
  %packet_sequence_number = alloca i32, align 4
  %spliced_packet = alloca i32, align 4
  %remaining_packet_bits = alloca i32, align 4
  %frame_size = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2158, metadata !1820), !dbg !2159
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !2160, metadata !1820), !dbg !2161
  store i32* %got_frame_ptr, i32** %got_frame_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame_ptr.addr, metadata !2162, metadata !1820), !dbg !2163
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !2164, metadata !1820), !dbg !2165
  call void @llvm.dbg.declare(metadata %struct.WmallDecodeCtx** %s, metadata !2166, metadata !1820), !dbg !2167
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2168
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2169
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2169
  %2 = bitcast i8* %1 to %struct.WmallDecodeCtx*, !dbg !2168
  store %struct.WmallDecodeCtx* %2, %struct.WmallDecodeCtx** %s, align 8, !dbg !2167
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb, metadata !2170, metadata !1820), !dbg !2172
  %3 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2173
  %pgb = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %3, i32 0, i32 18, !dbg !2174
  store %struct.GetBitContext* %pgb, %struct.GetBitContext** %gb, align 8, !dbg !2172
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !2175, metadata !1820), !dbg !2176
  %4 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2177
  %data1 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %4, i32 0, i32 3, !dbg !2178
  %5 = load i8*, i8** %data1, align 8, !dbg !2178
  store i8* %5, i8** %buf, align 8, !dbg !2176
  call void @llvm.dbg.declare(metadata i32* %buf_size, metadata !2179, metadata !1820), !dbg !2180
  %6 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2181
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %6, i32 0, i32 4, !dbg !2182
  %7 = load i32, i32* %size, align 8, !dbg !2182
  store i32 %7, i32* %buf_size, align 4, !dbg !2180
  call void @llvm.dbg.declare(metadata i32* %num_bits_prev_frame, metadata !2183, metadata !1820), !dbg !2184
  call void @llvm.dbg.declare(metadata i32* %packet_sequence_number, metadata !2185, metadata !1820), !dbg !2186
  call void @llvm.dbg.declare(metadata i32* %spliced_packet, metadata !2187, metadata !1820), !dbg !2188
  %8 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2189
  %frame = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %8, i32 0, i32 1, !dbg !2190
  %9 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2190
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %9, i32 0, i32 5, !dbg !2191
  store i32 0, i32* %nb_samples, align 8, !dbg !2192
  %10 = load i32, i32* %buf_size, align 4, !dbg !2193
  %tobool = icmp ne i32 %10, 0, !dbg !2193
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !2195

land.lhs.true:                                    ; preds = %entry
  %11 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2196
  %num_saved_bits = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %11, i32 0, i32 22, !dbg !2198
  %12 = load i32, i32* %num_saved_bits, align 16, !dbg !2198
  %13 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2199
  %gb2 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %13, i32 0, i32 28, !dbg !2200
  %call = call i32 @get_bits_count(%struct.GetBitContext* %gb2), !dbg !2201
  %cmp = icmp sgt i32 %12, %call, !dbg !2202
  br i1 %cmp, label %if.then, label %if.else, !dbg !2203

if.then:                                          ; preds = %land.lhs.true
  %14 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2204
  %packet_done = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %14, i32 0, i32 26, !dbg !2206
  store i8 0, i8* %packet_done, align 1, !dbg !2207
  %15 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2208
  %call3 = call i32 @decode_frame(%struct.WmallDecodeCtx* %15), !dbg !2210
  %tobool4 = icmp ne i32 %call3, 0, !dbg !2210
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !2211

if.then5:                                         ; preds = %if.then
  %16 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2212
  %num_saved_bits6 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %16, i32 0, i32 22, !dbg !2213
  store i32 0, i32* %num_saved_bits6, align 16, !dbg !2214
  br label %if.end, !dbg !2212

if.end:                                           ; preds = %if.then5, %if.then
  br label %if.end138, !dbg !2215

if.else:                                          ; preds = %land.lhs.true, %entry
  %17 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2216
  %packet_done7 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %17, i32 0, i32 26, !dbg !2219
  %18 = load i8, i8* %packet_done7, align 1, !dbg !2219
  %conv = zext i8 %18 to i32, !dbg !2216
  %tobool8 = icmp ne i32 %conv, 0, !dbg !2216
  br i1 %tobool8, label %if.then11, label %lor.lhs.false, !dbg !2220

lor.lhs.false:                                    ; preds = %if.else
  %19 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2221
  %packet_loss = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %19, i32 0, i32 25, !dbg !2223
  %20 = load i8, i8* %packet_loss, align 4, !dbg !2223
  %conv9 = zext i8 %20 to i32, !dbg !2221
  %tobool10 = icmp ne i32 %conv9, 0, !dbg !2221
  br i1 %tobool10, label %if.then11, label %if.else82, !dbg !2224

if.then11:                                        ; preds = %lor.lhs.false, %if.else
  %21 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2225
  %packet_done12 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %21, i32 0, i32 26, !dbg !2227
  store i8 0, i8* %packet_done12, align 1, !dbg !2228
  %22 = load i32, i32* %buf_size, align 4, !dbg !2229
  %tobool13 = icmp ne i32 %22, 0, !dbg !2229
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !2231

if.then14:                                        ; preds = %if.then11
  store i32 0, i32* %retval, align 4, !dbg !2232
  br label %return, !dbg !2232

if.end15:                                         ; preds = %if.then11
  %23 = load i32, i32* %buf_size, align 4, !dbg !2233
  %24 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2234
  %block_align = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %24, i32 0, i32 87, !dbg !2235
  %25 = load i32, i32* %block_align, align 4, !dbg !2235
  %26 = load i32, i32* %buf_size, align 4, !dbg !2236
  %cmp16 = icmp sgt i32 %25, %26, !dbg !2237
  br i1 %cmp16, label %cond.true, label %cond.false, !dbg !2238

cond.true:                                        ; preds = %if.end15
  %27 = load i32, i32* %buf_size, align 4, !dbg !2239
  br label %cond.end, !dbg !2241

cond.false:                                       ; preds = %if.end15
  %28 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2242
  %block_align18 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %28, i32 0, i32 87, !dbg !2244
  %29 = load i32, i32* %block_align18, align 4, !dbg !2244
  br label %cond.end, !dbg !2245

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %27, %cond.true ], [ %29, %cond.false ], !dbg !2246
  %sub = sub nsw i32 %23, %cond, !dbg !2248
  %30 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2249
  %next_packet_start = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %30, i32 0, i32 19, !dbg !2250
  store i32 %sub, i32* %next_packet_start, align 8, !dbg !2251
  %31 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2252
  %block_align19 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %31, i32 0, i32 87, !dbg !2253
  %32 = load i32, i32* %block_align19, align 4, !dbg !2253
  %33 = load i32, i32* %buf_size, align 4, !dbg !2254
  %cmp20 = icmp sgt i32 %32, %33, !dbg !2255
  br i1 %cmp20, label %cond.true22, label %cond.false23, !dbg !2256

cond.true22:                                      ; preds = %cond.end
  %34 = load i32, i32* %buf_size, align 4, !dbg !2257
  br label %cond.end25, !dbg !2258

cond.false23:                                     ; preds = %cond.end
  %35 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2259
  %block_align24 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %35, i32 0, i32 87, !dbg !2260
  %36 = load i32, i32* %block_align24, align 4, !dbg !2260
  br label %cond.end25, !dbg !2261

cond.end25:                                       ; preds = %cond.false23, %cond.true22
  %cond26 = phi i32 [ %34, %cond.true22 ], [ %36, %cond.false23 ], !dbg !2262
  store i32 %cond26, i32* %buf_size, align 4, !dbg !2263
  %37 = load i32, i32* %buf_size, align 4, !dbg !2264
  %shl = shl i32 %37, 3, !dbg !2265
  %38 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2266
  %buf_bit_size = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %38, i32 0, i32 29, !dbg !2267
  store i32 %shl, i32* %buf_bit_size, align 8, !dbg !2268
  %39 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2269
  %40 = load i8*, i8** %buf, align 8, !dbg !2270
  %41 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2271
  %buf_bit_size27 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %41, i32 0, i32 29, !dbg !2272
  %42 = load i32, i32* %buf_bit_size27, align 8, !dbg !2272
  %call28 = call i32 @init_get_bits(%struct.GetBitContext* %39, i8* %40, i32 %42), !dbg !2273
  %43 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2274
  %call29 = call i32 @get_bits(%struct.GetBitContext* %43, i32 4), !dbg !2275
  store i32 %call29, i32* %packet_sequence_number, align 4, !dbg !2276
  %44 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2277
  call void @skip_bits(%struct.GetBitContext* %44, i32 1), !dbg !2278
  %45 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2279
  %call30 = call i32 @get_bits1(%struct.GetBitContext* %45), !dbg !2280
  store i32 %call30, i32* %spliced_packet, align 4, !dbg !2281
  %46 = load i32, i32* %spliced_packet, align 4, !dbg !2282
  %tobool31 = icmp ne i32 %46, 0, !dbg !2282
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !2284

if.then32:                                        ; preds = %cond.end25
  %47 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2285
  %48 = bitcast %struct.AVCodecContext* %47 to i8*, !dbg !2285
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %48, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i32 0, i32 0)), !dbg !2286
  br label %if.end33, !dbg !2286

if.end33:                                         ; preds = %if.then32, %cond.end25
  %49 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2287
  %50 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2288
  %log2_frame_size = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %50, i32 0, i32 11, !dbg !2289
  %51 = load i16, i16* %log2_frame_size, align 8, !dbg !2289
  %conv34 = zext i16 %51 to i32, !dbg !2288
  %call35 = call i32 @get_bits(%struct.GetBitContext* %49, i32 %conv34), !dbg !2290
  store i32 %call35, i32* %num_bits_prev_frame, align 4, !dbg !2291
  %52 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2292
  %packet_loss36 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %52, i32 0, i32 25, !dbg !2294
  %53 = load i8, i8* %packet_loss36, align 4, !dbg !2294
  %tobool37 = icmp ne i8 %53, 0, !dbg !2292
  br i1 %tobool37, label %if.end47, label %land.lhs.true38, !dbg !2295

land.lhs.true38:                                  ; preds = %if.end33
  %54 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2296
  %packet_sequence_number39 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %54, i32 0, i32 21, !dbg !2297
  %55 = load i8, i8* %packet_sequence_number39, align 1, !dbg !2297
  %conv40 = zext i8 %55 to i32, !dbg !2296
  %add = add nsw i32 %conv40, 1, !dbg !2298
  %and = and i32 %add, 15, !dbg !2299
  %56 = load i32, i32* %packet_sequence_number, align 4, !dbg !2300
  %cmp41 = icmp ne i32 %and, %56, !dbg !2301
  br i1 %cmp41, label %if.then43, label %if.end47, !dbg !2302

if.then43:                                        ; preds = %land.lhs.true38
  %57 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2303
  %packet_loss44 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %57, i32 0, i32 25, !dbg !2305
  store i8 1, i8* %packet_loss44, align 4, !dbg !2306
  %58 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2307
  %59 = bitcast %struct.AVCodecContext* %58 to i8*, !dbg !2307
  %60 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2308
  %packet_sequence_number45 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %60, i32 0, i32 21, !dbg !2309
  %61 = load i8, i8* %packet_sequence_number45, align 1, !dbg !2309
  %conv46 = zext i8 %61 to i32, !dbg !2308
  %62 = load i32, i32* %packet_sequence_number, align 4, !dbg !2310
  call void (i8*, i32, i8*, ...) @av_log(i8* %59, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.12, i32 0, i32 0), i32 %conv46, i32 %62), !dbg !2311
  br label %if.end47, !dbg !2312

if.end47:                                         ; preds = %if.then43, %land.lhs.true38, %if.end33
  %63 = load i32, i32* %packet_sequence_number, align 4, !dbg !2313
  %conv48 = trunc i32 %63 to i8, !dbg !2313
  %64 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2314
  %packet_sequence_number49 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %64, i32 0, i32 21, !dbg !2315
  store i8 %conv48, i8* %packet_sequence_number49, align 1, !dbg !2316
  %65 = load i32, i32* %num_bits_prev_frame, align 4, !dbg !2317
  %cmp50 = icmp sgt i32 %65, 0, !dbg !2319
  br i1 %cmp50, label %if.then52, label %if.else69, !dbg !2320

if.then52:                                        ; preds = %if.end47
  call void @llvm.dbg.declare(metadata i32* %remaining_packet_bits, metadata !2321, metadata !1820), !dbg !2323
  %66 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2324
  %buf_bit_size53 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %66, i32 0, i32 29, !dbg !2325
  %67 = load i32, i32* %buf_bit_size53, align 8, !dbg !2325
  %68 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2326
  %call54 = call i32 @get_bits_count(%struct.GetBitContext* %68), !dbg !2327
  %sub55 = sub nsw i32 %67, %call54, !dbg !2328
  store i32 %sub55, i32* %remaining_packet_bits, align 4, !dbg !2323
  %69 = load i32, i32* %num_bits_prev_frame, align 4, !dbg !2329
  %70 = load i32, i32* %remaining_packet_bits, align 4, !dbg !2331
  %cmp56 = icmp sge i32 %69, %70, !dbg !2332
  br i1 %cmp56, label %if.then58, label %if.end60, !dbg !2333

if.then58:                                        ; preds = %if.then52
  %71 = load i32, i32* %remaining_packet_bits, align 4, !dbg !2334
  store i32 %71, i32* %num_bits_prev_frame, align 4, !dbg !2336
  %72 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2337
  %packet_done59 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %72, i32 0, i32 26, !dbg !2338
  store i8 1, i8* %packet_done59, align 1, !dbg !2339
  br label %if.end60, !dbg !2340

if.end60:                                         ; preds = %if.then58, %if.then52
  %73 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2341
  %74 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2342
  %75 = load i32, i32* %num_bits_prev_frame, align 4, !dbg !2343
  call void @save_bits(%struct.WmallDecodeCtx* %73, %struct.GetBitContext* %74, i32 %75, i32 1), !dbg !2344
  %76 = load i32, i32* %num_bits_prev_frame, align 4, !dbg !2345
  %77 = load i32, i32* %remaining_packet_bits, align 4, !dbg !2347
  %cmp61 = icmp slt i32 %76, %77, !dbg !2348
  br i1 %cmp61, label %land.lhs.true63, label %if.end68, !dbg !2349

land.lhs.true63:                                  ; preds = %if.end60
  %78 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2350
  %packet_loss64 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %78, i32 0, i32 25, !dbg !2352
  %79 = load i8, i8* %packet_loss64, align 4, !dbg !2352
  %tobool65 = icmp ne i8 %79, 0, !dbg !2350
  br i1 %tobool65, label %if.end68, label %if.then66, !dbg !2353

if.then66:                                        ; preds = %land.lhs.true63
  %80 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2354
  %call67 = call i32 @decode_frame(%struct.WmallDecodeCtx* %80), !dbg !2355
  br label %if.end68, !dbg !2355

if.end68:                                         ; preds = %if.then66, %land.lhs.true63, %if.end60
  br label %if.end75, !dbg !2356

if.else69:                                        ; preds = %if.end47
  %81 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2357
  %num_saved_bits70 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %81, i32 0, i32 22, !dbg !2360
  %82 = load i32, i32* %num_saved_bits70, align 16, !dbg !2360
  %83 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2361
  %frame_offset = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %83, i32 0, i32 23, !dbg !2362
  %84 = load i32, i32* %frame_offset, align 4, !dbg !2362
  %sub71 = sub nsw i32 %82, %84, !dbg !2363
  %tobool72 = icmp ne i32 %sub71, 0, !dbg !2363
  br i1 %tobool72, label %if.then73, label %if.end74, !dbg !2357

if.then73:                                        ; preds = %if.else69
  br label %do.body, !dbg !2364, !llvm.loop !2366

do.body:                                          ; preds = %if.then73
  br label %do.end, !dbg !2367

do.end:                                           ; preds = %do.body
  br label %if.end74, !dbg !2370

if.end74:                                         ; preds = %do.end, %if.else69
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.end68
  %85 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2371
  %packet_loss76 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %85, i32 0, i32 25, !dbg !2373
  %86 = load i8, i8* %packet_loss76, align 4, !dbg !2373
  %tobool77 = icmp ne i8 %86, 0, !dbg !2371
  br i1 %tobool77, label %if.then78, label %if.end81, !dbg !2374

if.then78:                                        ; preds = %if.end75
  %87 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2375
  %num_saved_bits79 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %87, i32 0, i32 22, !dbg !2377
  store i32 0, i32* %num_saved_bits79, align 16, !dbg !2378
  %88 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2379
  %packet_loss80 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %88, i32 0, i32 25, !dbg !2380
  store i8 0, i8* %packet_loss80, align 4, !dbg !2381
  %89 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2382
  %pb = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %89, i32 0, i32 5, !dbg !2383
  %90 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2384
  %frame_data = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %90, i32 0, i32 3, !dbg !2385
  %91 = load i8*, i8** %frame_data, align 16, !dbg !2385
  %92 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2386
  %max_frame_size = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %92, i32 0, i32 4, !dbg !2387
  %93 = load i32, i32* %max_frame_size, align 8, !dbg !2387
  call void @init_put_bits(%struct.PutBitContext* %pb, i8* %91, i32 %93), !dbg !2388
  br label %if.end81, !dbg !2389

if.end81:                                         ; preds = %if.then78, %if.end75
  br label %if.end137, !dbg !2390

if.else82:                                        ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i32* %frame_size, metadata !2391, metadata !1820), !dbg !2393
  %94 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2394
  %size83 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %94, i32 0, i32 4, !dbg !2395
  %95 = load i32, i32* %size83, align 8, !dbg !2395
  %96 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2396
  %next_packet_start84 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %96, i32 0, i32 19, !dbg !2397
  %97 = load i32, i32* %next_packet_start84, align 8, !dbg !2397
  %sub85 = sub nsw i32 %95, %97, !dbg !2398
  %shl86 = shl i32 %sub85, 3, !dbg !2399
  %98 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2400
  %buf_bit_size87 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %98, i32 0, i32 29, !dbg !2401
  store i32 %shl86, i32* %buf_bit_size87, align 8, !dbg !2402
  %99 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2403
  %100 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2404
  %data88 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %100, i32 0, i32 3, !dbg !2405
  %101 = load i8*, i8** %data88, align 8, !dbg !2405
  %102 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2406
  %buf_bit_size89 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %102, i32 0, i32 29, !dbg !2407
  %103 = load i32, i32* %buf_bit_size89, align 8, !dbg !2407
  %call90 = call i32 @init_get_bits(%struct.GetBitContext* %99, i8* %101, i32 %103), !dbg !2408
  %104 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2409
  %105 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2410
  %packet_offset = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %105, i32 0, i32 20, !dbg !2411
  %106 = load i8, i8* %packet_offset, align 4, !dbg !2411
  %conv91 = zext i8 %106 to i32, !dbg !2410
  call void @skip_bits(%struct.GetBitContext* %104, i32 %conv91), !dbg !2412
  %107 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2413
  %len_prefix = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %107, i32 0, i32 7, !dbg !2415
  %108 = load i32, i32* %len_prefix, align 4, !dbg !2415
  %tobool92 = icmp ne i32 %108, 0, !dbg !2413
  br i1 %tobool92, label %land.lhs.true93, label %if.else117, !dbg !2416

land.lhs.true93:                                  ; preds = %if.else82
  %109 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2417
  %110 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2419
  %call94 = call i32 @remaining_bits(%struct.WmallDecodeCtx* %109, %struct.GetBitContext* %110), !dbg !2420
  %111 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2421
  %log2_frame_size95 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %111, i32 0, i32 11, !dbg !2422
  %112 = load i16, i16* %log2_frame_size95, align 8, !dbg !2422
  %conv96 = zext i16 %112 to i32, !dbg !2421
  %cmp97 = icmp sgt i32 %call94, %conv96, !dbg !2423
  br i1 %cmp97, label %land.lhs.true99, label %if.else117, !dbg !2424

land.lhs.true99:                                  ; preds = %land.lhs.true93
  %113 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2425
  %114 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2426
  %log2_frame_size100 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %114, i32 0, i32 11, !dbg !2427
  %115 = load i16, i16* %log2_frame_size100, align 8, !dbg !2427
  %conv101 = zext i16 %115 to i32, !dbg !2426
  %call102 = call i32 @show_bits(%struct.GetBitContext* %113, i32 %conv101), !dbg !2428
  store i32 %call102, i32* %frame_size, align 4, !dbg !2429
  %tobool103 = icmp ne i32 %call102, 0, !dbg !2429
  br i1 %tobool103, label %land.lhs.true104, label %if.else117, !dbg !2430

land.lhs.true104:                                 ; preds = %land.lhs.true99
  %116 = load i32, i32* %frame_size, align 4, !dbg !2431
  %117 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2432
  %118 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2433
  %call105 = call i32 @remaining_bits(%struct.WmallDecodeCtx* %117, %struct.GetBitContext* %118), !dbg !2434
  %cmp106 = icmp sle i32 %116, %call105, !dbg !2435
  br i1 %cmp106, label %if.then108, label %if.else117, !dbg !2436

if.then108:                                       ; preds = %land.lhs.true104
  %119 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2438
  %120 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2440
  %121 = load i32, i32* %frame_size, align 4, !dbg !2441
  call void @save_bits(%struct.WmallDecodeCtx* %119, %struct.GetBitContext* %120, i32 %121, i32 0), !dbg !2442
  %122 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2443
  %packet_loss109 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %122, i32 0, i32 25, !dbg !2445
  %123 = load i8, i8* %packet_loss109, align 4, !dbg !2445
  %tobool110 = icmp ne i8 %123, 0, !dbg !2443
  br i1 %tobool110, label %if.end116, label %if.then111, !dbg !2446

if.then111:                                       ; preds = %if.then108
  %124 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2447
  %call112 = call i32 @decode_frame(%struct.WmallDecodeCtx* %124), !dbg !2448
  %tobool113 = icmp ne i32 %call112, 0, !dbg !2449
  %lnot = xor i1 %tobool113, true, !dbg !2449
  %lnot.ext = zext i1 %lnot to i32, !dbg !2449
  %conv114 = trunc i32 %lnot.ext to i8, !dbg !2449
  %125 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2450
  %packet_done115 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %125, i32 0, i32 26, !dbg !2451
  store i8 %conv114, i8* %packet_done115, align 1, !dbg !2452
  br label %if.end116, !dbg !2450

if.end116:                                        ; preds = %if.then111, %if.then108
  br label %if.end136, !dbg !2453

if.else117:                                       ; preds = %land.lhs.true104, %land.lhs.true99, %land.lhs.true93, %if.else82
  %126 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2454
  %len_prefix118 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %126, i32 0, i32 7, !dbg !2457
  %127 = load i32, i32* %len_prefix118, align 4, !dbg !2457
  %tobool119 = icmp ne i32 %127, 0, !dbg !2454
  br i1 %tobool119, label %if.else133, label %land.lhs.true120, !dbg !2458

land.lhs.true120:                                 ; preds = %if.else117
  %128 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2459
  %num_saved_bits121 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %128, i32 0, i32 22, !dbg !2460
  %129 = load i32, i32* %num_saved_bits121, align 16, !dbg !2460
  %130 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2461
  %gb122 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %130, i32 0, i32 28, !dbg !2462
  %call123 = call i32 @get_bits_count(%struct.GetBitContext* %gb122), !dbg !2463
  %cmp124 = icmp sgt i32 %129, %call123, !dbg !2464
  br i1 %cmp124, label %if.then126, label %if.else133, !dbg !2465

if.then126:                                       ; preds = %land.lhs.true120
  %131 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2467
  %call127 = call i32 @decode_frame(%struct.WmallDecodeCtx* %131), !dbg !2469
  %tobool128 = icmp ne i32 %call127, 0, !dbg !2470
  %lnot129 = xor i1 %tobool128, true, !dbg !2470
  %lnot.ext130 = zext i1 %lnot129 to i32, !dbg !2470
  %conv131 = trunc i32 %lnot.ext130 to i8, !dbg !2470
  %132 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2471
  %packet_done132 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %132, i32 0, i32 26, !dbg !2472
  store i8 %conv131, i8* %packet_done132, align 1, !dbg !2473
  br label %if.end135, !dbg !2474

if.else133:                                       ; preds = %land.lhs.true120, %if.else117
  %133 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2475
  %packet_done134 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %133, i32 0, i32 26, !dbg !2477
  store i8 1, i8* %packet_done134, align 1, !dbg !2478
  br label %if.end135

if.end135:                                        ; preds = %if.else133, %if.then126
  br label %if.end136

if.end136:                                        ; preds = %if.end135, %if.end116
  br label %if.end137

if.end137:                                        ; preds = %if.end136, %if.end81
  br label %if.end138

if.end138:                                        ; preds = %if.end137, %if.end
  %134 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2479
  %135 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2481
  %call139 = call i32 @remaining_bits(%struct.WmallDecodeCtx* %134, %struct.GetBitContext* %135), !dbg !2482
  %cmp140 = icmp slt i32 %call139, 0, !dbg !2483
  br i1 %cmp140, label %if.then142, label %if.end146, !dbg !2484

if.then142:                                       ; preds = %if.end138
  %136 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2485
  %137 = bitcast %struct.AVCodecContext* %136 to i8*, !dbg !2485
  %138 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2487
  %139 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2488
  %call143 = call i32 @remaining_bits(%struct.WmallDecodeCtx* %138, %struct.GetBitContext* %139), !dbg !2489
  %sub144 = sub nsw i32 0, %call143, !dbg !2490
  call void (i8*, i32, i8*, ...) @av_log(i8* %137, i32 16, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i32 0, i32 0), i32 %sub144), !dbg !2491
  %140 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2493
  %packet_loss145 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %140, i32 0, i32 25, !dbg !2494
  store i8 1, i8* %packet_loss145, align 4, !dbg !2495
  br label %if.end146, !dbg !2496

if.end146:                                        ; preds = %if.then142, %if.end138
  %141 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2497
  %packet_done147 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %141, i32 0, i32 26, !dbg !2499
  %142 = load i8, i8* %packet_done147, align 1, !dbg !2499
  %conv148 = zext i8 %142 to i32, !dbg !2497
  %tobool149 = icmp ne i32 %conv148, 0, !dbg !2497
  br i1 %tobool149, label %land.lhs.true150, label %if.end159, !dbg !2500

land.lhs.true150:                                 ; preds = %if.end146
  %143 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2501
  %packet_loss151 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %143, i32 0, i32 25, !dbg !2503
  %144 = load i8, i8* %packet_loss151, align 4, !dbg !2503
  %tobool152 = icmp ne i8 %144, 0, !dbg !2501
  br i1 %tobool152, label %if.end159, label %land.lhs.true153, !dbg !2504

land.lhs.true153:                                 ; preds = %land.lhs.true150
  %145 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2505
  %146 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2506
  %call154 = call i32 @remaining_bits(%struct.WmallDecodeCtx* %145, %struct.GetBitContext* %146), !dbg !2507
  %cmp155 = icmp sgt i32 %call154, 0, !dbg !2508
  br i1 %cmp155, label %if.then157, label %if.end159, !dbg !2509

if.then157:                                       ; preds = %land.lhs.true153
  %147 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2511
  %148 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2513
  %149 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2514
  %150 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2515
  %call158 = call i32 @remaining_bits(%struct.WmallDecodeCtx* %149, %struct.GetBitContext* %150), !dbg !2516
  call void @save_bits(%struct.WmallDecodeCtx* %147, %struct.GetBitContext* %148, i32 %call158, i32 0), !dbg !2517
  br label %if.end159, !dbg !2519

if.end159:                                        ; preds = %if.then157, %land.lhs.true153, %land.lhs.true150, %if.end146
  %151 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2520
  %frame160 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %151, i32 0, i32 1, !dbg !2521
  %152 = load %struct.AVFrame*, %struct.AVFrame** %frame160, align 8, !dbg !2521
  %nb_samples161 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %152, i32 0, i32 5, !dbg !2522
  %153 = load i32, i32* %nb_samples161, align 8, !dbg !2522
  %cmp162 = icmp sgt i32 %153, 0, !dbg !2523
  %conv163 = zext i1 %cmp162 to i32, !dbg !2523
  %154 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !2524
  store i32 %conv163, i32* %154, align 4, !dbg !2525
  %155 = load i8*, i8** %data.addr, align 8, !dbg !2526
  %156 = bitcast i8* %155 to %struct.AVFrame*, !dbg !2526
  %157 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2527
  %frame164 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %157, i32 0, i32 1, !dbg !2528
  %158 = load %struct.AVFrame*, %struct.AVFrame** %frame164, align 8, !dbg !2528
  call void @av_frame_move_ref(%struct.AVFrame* %156, %struct.AVFrame* %158), !dbg !2529
  %159 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2530
  %call165 = call i32 @get_bits_count(%struct.GetBitContext* %159), !dbg !2531
  %and166 = and i32 %call165, 7, !dbg !2532
  %conv167 = trunc i32 %and166 to i8, !dbg !2531
  %160 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2533
  %packet_offset168 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %160, i32 0, i32 20, !dbg !2534
  store i8 %conv167, i8* %packet_offset168, align 4, !dbg !2535
  %161 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2536
  %packet_loss169 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %161, i32 0, i32 25, !dbg !2537
  %162 = load i8, i8* %packet_loss169, align 4, !dbg !2537
  %conv170 = zext i8 %162 to i32, !dbg !2538
  %tobool171 = icmp ne i32 %conv170, 0, !dbg !2538
  br i1 %tobool171, label %cond.true172, label %cond.false173, !dbg !2538

cond.true172:                                     ; preds = %if.end159
  br label %cond.end180, !dbg !2539

cond.false173:                                    ; preds = %if.end159
  %163 = load i32, i32* %buf_size, align 4, !dbg !2541
  %tobool174 = icmp ne i32 %163, 0, !dbg !2541
  br i1 %tobool174, label %cond.true175, label %cond.false177, !dbg !2541

cond.true175:                                     ; preds = %cond.false173
  %164 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2542
  %call176 = call i32 @get_bits_count(%struct.GetBitContext* %164), !dbg !2544
  %shr = ashr i32 %call176, 3, !dbg !2545
  br label %cond.end178, !dbg !2546

cond.false177:                                    ; preds = %cond.false173
  br label %cond.end178, !dbg !2547

cond.end178:                                      ; preds = %cond.false177, %cond.true175
  %cond179 = phi i32 [ %shr, %cond.true175 ], [ 0, %cond.false177 ], !dbg !2549
  br label %cond.end180, !dbg !2551

cond.end180:                                      ; preds = %cond.end178, %cond.true172
  %cond181 = phi i32 [ -1094995529, %cond.true172 ], [ %cond179, %cond.end178 ], !dbg !2552
  store i32 %cond181, i32* %retval, align 4, !dbg !2554
  br label %return, !dbg !2554

return:                                           ; preds = %cond.end180, %if.then14
  %165 = load i32, i32* %retval, align 4, !dbg !2555
  ret i32 %165, !dbg !2555
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @decode_close(%struct.AVCodecContext* %avctx) #0 !dbg !2556 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.WmallDecodeCtx*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2557, metadata !1820), !dbg !2558
  call void @llvm.dbg.declare(metadata %struct.WmallDecodeCtx** %s, metadata !2559, metadata !1820), !dbg !2560
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2561
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2562
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2562
  %2 = bitcast i8* %1 to %struct.WmallDecodeCtx*, !dbg !2561
  store %struct.WmallDecodeCtx* %2, %struct.WmallDecodeCtx** %s, align 8, !dbg !2560
  %3 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2563
  %frame = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %3, i32 0, i32 1, !dbg !2564
  call void @av_frame_free(%struct.AVFrame** %frame), !dbg !2565
  %4 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2566
  %frame_data = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %4, i32 0, i32 3, !dbg !2567
  %5 = bitcast i8** %frame_data to i8*, !dbg !2568
  call void @av_freep(i8* %5), !dbg !2569
  ret i32 0, !dbg !2570
}

; Function Attrs: nounwind uwtable
define internal void @flush(%struct.AVCodecContext* %avctx) #1 !dbg !2571 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.WmallDecodeCtx*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2572, metadata !1820), !dbg !2573
  call void @llvm.dbg.declare(metadata %struct.WmallDecodeCtx** %s, metadata !2574, metadata !1820), !dbg !2575
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2576
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2577
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2577
  %2 = bitcast i8* %1 to %struct.WmallDecodeCtx*, !dbg !2576
  store %struct.WmallDecodeCtx* %2, %struct.WmallDecodeCtx** %s, align 8, !dbg !2575
  %3 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2578
  %packet_loss = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %3, i32 0, i32 25, !dbg !2579
  store i8 1, i8* %packet_loss, align 4, !dbg !2580
  %4 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2581
  %packet_done = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %4, i32 0, i32 26, !dbg !2582
  store i8 0, i8* %packet_done, align 1, !dbg !2583
  %5 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2584
  %num_saved_bits = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %5, i32 0, i32 22, !dbg !2585
  store i32 0, i32* %num_saved_bits, align 16, !dbg !2586
  %6 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2587
  %frame_offset = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %6, i32 0, i32 23, !dbg !2588
  store i32 0, i32* %frame_offset, align 4, !dbg !2589
  %7 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2590
  %next_packet_start = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %7, i32 0, i32 19, !dbg !2591
  store i32 0, i32* %next_packet_start, align 8, !dbg !2592
  %8 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2593
  %cdlms = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %8, i32 0, i32 58, !dbg !2594
  %arrayidx = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms, i64 0, i64 0, !dbg !2593
  %arrayidx1 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx, i64 0, i64 0, !dbg !2593
  %order = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx1, i32 0, i32 0, !dbg !2595
  store i32 0, i32* %order, align 16, !dbg !2596
  %9 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2597
  %frame = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %9, i32 0, i32 1, !dbg !2598
  %10 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2598
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %10, i32 0, i32 5, !dbg !2599
  store i32 0, i32* %nb_samples, align 8, !dbg !2600
  %11 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2601
  %pb = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %11, i32 0, i32 5, !dbg !2602
  %12 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2603
  %frame_data = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %12, i32 0, i32 3, !dbg !2604
  %13 = load i8*, i8** %frame_data, align 16, !dbg !2604
  %14 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s, align 8, !dbg !2605
  %max_frame_size = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %14, i32 0, i32 4, !dbg !2606
  %15 = load i32, i32* %max_frame_size, align 8, !dbg !2606
  call void @init_put_bits(%struct.PutBitContext* %pb, i8* %13, i32 %15), !dbg !2607
  ret void, !dbg !2608
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

declare void @av_log(i8*, i32, i8*, ...) #3

declare noalias i8* @av_mallocz(i64) #3

declare void @ff_llauddsp_init(%struct.LLAudDSPContext*) #3

; Function Attrs: inlinehint nounwind uwtable
define internal void @init_put_bits(%struct.PutBitContext* %s, i8* %buffer, i32 %buffer_size) #4 !dbg !2609 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %buffer_size.addr = alloca i32, align 4
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !2613, metadata !1820), !dbg !2614
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !2615, metadata !1820), !dbg !2616
  store i32 %buffer_size, i32* %buffer_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buffer_size.addr, metadata !2617, metadata !1820), !dbg !2618
  %0 = load i32, i32* %buffer_size.addr, align 4, !dbg !2619
  %cmp = icmp slt i32 %0, 0, !dbg !2621
  br i1 %cmp, label %if.then, label %if.end, !dbg !2622

if.then:                                          ; preds = %entry
  store i32 0, i32* %buffer_size.addr, align 4, !dbg !2623
  store i8* null, i8** %buffer.addr, align 8, !dbg !2625
  br label %if.end, !dbg !2626

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* %buffer_size.addr, align 4, !dbg !2627
  %mul = mul nsw i32 8, %1, !dbg !2628
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !2629
  %size_in_bits = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 5, !dbg !2630
  store i32 %mul, i32* %size_in_bits, align 8, !dbg !2631
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !2632
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !2633
  %buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %4, i32 0, i32 2, !dbg !2634
  store i8* %3, i8** %buf, align 8, !dbg !2635
  %5 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !2636
  %buf1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %5, i32 0, i32 2, !dbg !2637
  %6 = load i8*, i8** %buf1, align 8, !dbg !2637
  %7 = load i32, i32* %buffer_size.addr, align 4, !dbg !2638
  %idx.ext = sext i32 %7 to i64, !dbg !2639
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %idx.ext, !dbg !2639
  %8 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !2640
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %8, i32 0, i32 4, !dbg !2641
  store i8* %add.ptr, i8** %buf_end, align 8, !dbg !2642
  %9 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !2643
  %buf2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %9, i32 0, i32 2, !dbg !2644
  %10 = load i8*, i8** %buf2, align 8, !dbg !2644
  %11 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !2645
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %11, i32 0, i32 3, !dbg !2646
  store i8* %10, i8** %buf_ptr, align 8, !dbg !2647
  %12 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !2648
  %bit_left = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %12, i32 0, i32 1, !dbg !2649
  store i32 32, i32* %bit_left, align 4, !dbg !2650
  %13 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !2651
  %bit_buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %13, i32 0, i32 0, !dbg !2652
  store i32 0, i32* %bit_buf, align 8, !dbg !2653
  ret void, !dbg !2654
}

declare void @avpriv_request_sample(i8*, i8*, ...) #3

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #2

declare i32 @ff_wma_get_frame_len_bits(i32, i32, i32) #3

; Function Attrs: noreturn nounwind
declare void @abort() #5

declare %struct.AVFrame* @av_frame_alloc() #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_count(%struct.GetBitContext* %s) #4 !dbg !2655 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !2660, metadata !1820), !dbg !2661
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2662
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !2663
  %1 = load i32, i32* %index, align 8, !dbg !2663
  ret i32 %1, !dbg !2664
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_frame(%struct.WmallDecodeCtx* %s) #1 !dbg !2665 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.WmallDecodeCtx*, align 8
  %gb = alloca %struct.GetBitContext*, align 8
  %more_frames = alloca i32, align 4
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %skip = alloca i32, align 4
  %decoded_samples81 = alloca i32, align 4
  store %struct.WmallDecodeCtx* %s, %struct.WmallDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WmallDecodeCtx** %s.addr, metadata !2666, metadata !1820), !dbg !2667
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb, metadata !2668, metadata !1820), !dbg !2669
  %0 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2670
  %gb1 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %0, i32 0, i32 28, !dbg !2671
  store %struct.GetBitContext* %gb1, %struct.GetBitContext** %gb, align 8, !dbg !2669
  call void @llvm.dbg.declare(metadata i32* %more_frames, metadata !2672, metadata !1820), !dbg !2673
  store i32 0, i32* %more_frames, align 4, !dbg !2673
  call void @llvm.dbg.declare(metadata i32* %len, metadata !2674, metadata !1820), !dbg !2675
  store i32 0, i32* %len, align 4, !dbg !2675
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2676, metadata !1820), !dbg !2677
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2678, metadata !1820), !dbg !2679
  %1 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2680
  %samples_per_frame = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %1, i32 0, i32 10, !dbg !2681
  %2 = load i16, i16* %samples_per_frame, align 2, !dbg !2681
  %conv = zext i16 %2 to i32, !dbg !2680
  %3 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2682
  %frame = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %3, i32 0, i32 1, !dbg !2683
  %4 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2683
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %4, i32 0, i32 5, !dbg !2684
  store i32 %conv, i32* %nb_samples, align 8, !dbg !2685
  %5 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2686
  %avctx = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %5, i32 0, i32 0, !dbg !2688
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 16, !dbg !2688
  %7 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2689
  %frame2 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %7, i32 0, i32 1, !dbg !2690
  %8 = load %struct.AVFrame*, %struct.AVFrame** %frame2, align 8, !dbg !2690
  %call = call i32 @ff_get_buffer(%struct.AVCodecContext* %6, %struct.AVFrame* %8, i32 0), !dbg !2691
  store i32 %call, i32* %ret, align 4, !dbg !2692
  %cmp = icmp slt i32 %call, 0, !dbg !2693
  br i1 %cmp, label %if.then, label %if.end, !dbg !2694

if.then:                                          ; preds = %entry
  %9 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2695
  %packet_loss = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %9, i32 0, i32 25, !dbg !2697
  store i8 1, i8* %packet_loss, align 4, !dbg !2698
  %10 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2699
  %frame4 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %10, i32 0, i32 1, !dbg !2700
  %11 = load %struct.AVFrame*, %struct.AVFrame** %frame4, align 8, !dbg !2700
  %nb_samples5 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %11, i32 0, i32 5, !dbg !2701
  store i32 0, i32* %nb_samples5, align 8, !dbg !2702
  %12 = load i32, i32* %ret, align 4, !dbg !2703
  store i32 %12, i32* %retval, align 4, !dbg !2704
  br label %return, !dbg !2704

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !2705
  br label %for.cond, !dbg !2707

for.cond:                                         ; preds = %for.inc, %if.end
  %13 = load i32, i32* %i, align 4, !dbg !2708
  %14 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2711
  %num_channels = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %14, i32 0, i32 12, !dbg !2712
  %15 = load i8, i8* %num_channels, align 2, !dbg !2712
  %conv6 = sext i8 %15 to i32, !dbg !2711
  %cmp7 = icmp slt i32 %13, %conv6, !dbg !2713
  br i1 %cmp7, label %for.body, label %for.end, !dbg !2714

for.body:                                         ; preds = %for.cond
  %16 = load i32, i32* %i, align 4, !dbg !2715
  %idxprom = sext i32 %16 to i64, !dbg !2717
  %17 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2717
  %frame9 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %17, i32 0, i32 1, !dbg !2718
  %18 = load %struct.AVFrame*, %struct.AVFrame** %frame9, align 8, !dbg !2718
  %extended_data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %18, i32 0, i32 2, !dbg !2719
  %19 = load i8**, i8*** %extended_data, align 8, !dbg !2719
  %arrayidx = getelementptr inbounds i8*, i8** %19, i64 %idxprom, !dbg !2717
  %20 = load i8*, i8** %arrayidx, align 8, !dbg !2717
  %21 = bitcast i8* %20 to i16*, !dbg !2720
  %22 = load i32, i32* %i, align 4, !dbg !2721
  %idxprom10 = sext i32 %22 to i64, !dbg !2722
  %23 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2722
  %samples_16 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %23, i32 0, i32 30, !dbg !2723
  %arrayidx11 = getelementptr inbounds [8 x i16*], [8 x i16*]* %samples_16, i64 0, i64 %idxprom10, !dbg !2722
  store i16* %21, i16** %arrayidx11, align 8, !dbg !2724
  %24 = load i32, i32* %i, align 4, !dbg !2725
  %idxprom12 = sext i32 %24 to i64, !dbg !2726
  %25 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2726
  %frame13 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %25, i32 0, i32 1, !dbg !2727
  %26 = load %struct.AVFrame*, %struct.AVFrame** %frame13, align 8, !dbg !2727
  %extended_data14 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %26, i32 0, i32 2, !dbg !2728
  %27 = load i8**, i8*** %extended_data14, align 8, !dbg !2728
  %arrayidx15 = getelementptr inbounds i8*, i8** %27, i64 %idxprom12, !dbg !2726
  %28 = load i8*, i8** %arrayidx15, align 8, !dbg !2726
  %29 = bitcast i8* %28 to i32*, !dbg !2729
  %30 = load i32, i32* %i, align 4, !dbg !2730
  %idxprom16 = sext i32 %30 to i64, !dbg !2731
  %31 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2731
  %samples_32 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %31, i32 0, i32 31, !dbg !2732
  %arrayidx17 = getelementptr inbounds [8 x i32*], [8 x i32*]* %samples_32, i64 0, i64 %idxprom16, !dbg !2731
  store i32* %29, i32** %arrayidx17, align 8, !dbg !2733
  br label %for.inc, !dbg !2734

for.inc:                                          ; preds = %for.body
  %32 = load i32, i32* %i, align 4, !dbg !2735
  %inc = add nsw i32 %32, 1, !dbg !2735
  store i32 %inc, i32* %i, align 4, !dbg !2735
  br label %for.cond, !dbg !2737, !llvm.loop !2738

for.end:                                          ; preds = %for.cond
  %33 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2740
  %len_prefix = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %33, i32 0, i32 7, !dbg !2742
  %34 = load i32, i32* %len_prefix, align 4, !dbg !2742
  %tobool = icmp ne i32 %34, 0, !dbg !2740
  br i1 %tobool, label %if.then18, label %if.end21, !dbg !2743

if.then18:                                        ; preds = %for.end
  %35 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2744
  %36 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2745
  %log2_frame_size = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %36, i32 0, i32 11, !dbg !2746
  %37 = load i16, i16* %log2_frame_size, align 8, !dbg !2746
  %conv19 = zext i16 %37 to i32, !dbg !2745
  %call20 = call i32 @get_bits(%struct.GetBitContext* %35, i32 %conv19), !dbg !2747
  store i32 %call20, i32* %len, align 4, !dbg !2748
  br label %if.end21, !dbg !2749

if.end21:                                         ; preds = %if.then18, %for.end
  %38 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2750
  %call22 = call i32 @decode_tilehdr(%struct.WmallDecodeCtx* %38), !dbg !2752
  store i32 %call22, i32* %ret, align 4, !dbg !2753
  %tobool23 = icmp ne i32 %call22, 0, !dbg !2753
  br i1 %tobool23, label %if.then24, label %if.end27, !dbg !2754

if.then24:                                        ; preds = %if.end21
  %39 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2755
  %packet_loss25 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %39, i32 0, i32 25, !dbg !2757
  store i8 1, i8* %packet_loss25, align 4, !dbg !2758
  %40 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2759
  %frame26 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %40, i32 0, i32 1, !dbg !2760
  %41 = load %struct.AVFrame*, %struct.AVFrame** %frame26, align 8, !dbg !2760
  call void @av_frame_unref(%struct.AVFrame* %41), !dbg !2761
  %42 = load i32, i32* %ret, align 4, !dbg !2762
  store i32 %42, i32* %retval, align 4, !dbg !2763
  br label %return, !dbg !2763

if.end27:                                         ; preds = %if.end21
  %43 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2764
  %dynamic_range_compression = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %43, i32 0, i32 8, !dbg !2766
  %44 = load i32, i32* %dynamic_range_compression, align 16, !dbg !2766
  %tobool28 = icmp ne i32 %44, 0, !dbg !2764
  br i1 %tobool28, label %if.then29, label %if.end32, !dbg !2767

if.then29:                                        ; preds = %if.end27
  %45 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2768
  %call30 = call i32 @get_bits(%struct.GetBitContext* %45, i32 8), !dbg !2769
  %conv31 = trunc i32 %call30 to i8, !dbg !2769
  %46 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2770
  %drc_gain = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %46, i32 0, i32 32, !dbg !2771
  store i8 %conv31, i8* %drc_gain, align 16, !dbg !2772
  br label %if.end32, !dbg !2770

if.end32:                                         ; preds = %if.then29, %if.end27
  %47 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2773
  %call33 = call i32 @get_bits1(%struct.GetBitContext* %47), !dbg !2775
  %tobool34 = icmp ne i32 %call33, 0, !dbg !2775
  br i1 %tobool34, label %if.then35, label %if.end64, !dbg !2776

if.then35:                                        ; preds = %if.end32
  call void @llvm.dbg.declare(metadata i32* %skip, metadata !2777, metadata !1820), !dbg !2779
  %48 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2780
  %call36 = call i32 @get_bits1(%struct.GetBitContext* %48), !dbg !2782
  %tobool37 = icmp ne i32 %call36, 0, !dbg !2782
  br i1 %tobool37, label %if.then38, label %if.end42, !dbg !2783

if.then38:                                        ; preds = %if.then35
  %49 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2784
  %50 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2786
  %samples_per_frame39 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %50, i32 0, i32 10, !dbg !2787
  %51 = load i16, i16* %samples_per_frame39, align 2, !dbg !2787
  %conv40 = zext i16 %51 to i32, !dbg !2786
  %mul = mul nsw i32 %conv40, 2, !dbg !2788
  %or = or i32 %mul, 1, !dbg !2789
  %52 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !2790
  %sub = sub nsw i32 31, %52, !dbg !2791
  %call41 = call i32 @get_bits(%struct.GetBitContext* %49, i32 %sub), !dbg !2792
  store i32 %call41, i32* %skip, align 4, !dbg !2794
  br label %do.body, !dbg !2795, !llvm.loop !2796

do.body:                                          ; preds = %if.then38
  br label %do.end, !dbg !2797

do.end:                                           ; preds = %do.body
  br label %if.end42, !dbg !2800

if.end42:                                         ; preds = %do.end, %if.then35
  %53 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2801
  %call43 = call i32 @get_bits1(%struct.GetBitContext* %53), !dbg !2803
  %tobool44 = icmp ne i32 %call43, 0, !dbg !2803
  br i1 %tobool44, label %if.then45, label %if.end63, !dbg !2804

if.then45:                                        ; preds = %if.end42
  %54 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2805
  %55 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2807
  %samples_per_frame46 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %55, i32 0, i32 10, !dbg !2808
  %56 = load i16, i16* %samples_per_frame46, align 2, !dbg !2808
  %conv47 = zext i16 %56 to i32, !dbg !2807
  %mul48 = mul nsw i32 %conv47, 2, !dbg !2809
  %or49 = or i32 %mul48, 1, !dbg !2810
  %57 = call i32 @llvm.ctlz.i32(i32 %or49, i1 true), !dbg !2811
  %sub50 = sub nsw i32 31, %57, !dbg !2812
  %call51 = call i32 @get_bits(%struct.GetBitContext* %54, i32 %sub50), !dbg !2813
  store i32 %call51, i32* %skip, align 4, !dbg !2815
  br label %do.body52, !dbg !2816, !llvm.loop !2817

do.body52:                                        ; preds = %if.then45
  br label %do.end53, !dbg !2818

do.end53:                                         ; preds = %do.body52
  %58 = load i32, i32* %skip, align 4, !dbg !2821
  %59 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2822
  %frame54 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %59, i32 0, i32 1, !dbg !2823
  %60 = load %struct.AVFrame*, %struct.AVFrame** %frame54, align 8, !dbg !2823
  %nb_samples55 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %60, i32 0, i32 5, !dbg !2824
  %61 = load i32, i32* %nb_samples55, align 8, !dbg !2825
  %sub56 = sub nsw i32 %61, %58, !dbg !2825
  store i32 %sub56, i32* %nb_samples55, align 8, !dbg !2825
  %62 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2826
  %frame57 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %62, i32 0, i32 1, !dbg !2828
  %63 = load %struct.AVFrame*, %struct.AVFrame** %frame57, align 8, !dbg !2828
  %nb_samples58 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %63, i32 0, i32 5, !dbg !2829
  %64 = load i32, i32* %nb_samples58, align 8, !dbg !2829
  %cmp59 = icmp sle i32 %64, 0, !dbg !2830
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !2831

if.then61:                                        ; preds = %do.end53
  store i32 -1094995529, i32* %retval, align 4, !dbg !2832
  br label %return, !dbg !2832

if.end62:                                         ; preds = %do.end53
  br label %if.end63, !dbg !2833

if.end63:                                         ; preds = %if.end62, %if.end42
  br label %if.end64, !dbg !2834

if.end64:                                         ; preds = %if.end63, %if.end32
  %65 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2835
  %parsed_all_subframes = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %65, i32 0, i32 34, !dbg !2836
  store i8 0, i8* %parsed_all_subframes, align 2, !dbg !2837
  store i32 0, i32* %i, align 4, !dbg !2838
  br label %for.cond65, !dbg !2840

for.cond65:                                       ; preds = %for.inc76, %if.end64
  %66 = load i32, i32* %i, align 4, !dbg !2841
  %67 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2844
  %num_channels66 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %67, i32 0, i32 12, !dbg !2845
  %68 = load i8, i8* %num_channels66, align 2, !dbg !2845
  %conv67 = sext i8 %68 to i32, !dbg !2844
  %cmp68 = icmp slt i32 %66, %conv67, !dbg !2846
  br i1 %cmp68, label %for.body70, label %for.end78, !dbg !2847

for.body70:                                       ; preds = %for.cond65
  %69 = load i32, i32* %i, align 4, !dbg !2848
  %idxprom71 = sext i32 %69 to i64, !dbg !2850
  %70 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2850
  %channel = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %70, i32 0, i32 38, !dbg !2851
  %arrayidx72 = getelementptr inbounds [8 x %struct.WmallChannelCtx], [8 x %struct.WmallChannelCtx]* %channel, i64 0, i64 %idxprom71, !dbg !2850
  %decoded_samples = getelementptr inbounds %struct.WmallChannelCtx, %struct.WmallChannelCtx* %arrayidx72, i32 0, i32 6, !dbg !2852
  store i16 0, i16* %decoded_samples, align 2, !dbg !2853
  %71 = load i32, i32* %i, align 4, !dbg !2854
  %idxprom73 = sext i32 %71 to i64, !dbg !2855
  %72 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2855
  %channel74 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %72, i32 0, i32 38, !dbg !2856
  %arrayidx75 = getelementptr inbounds [8 x %struct.WmallChannelCtx], [8 x %struct.WmallChannelCtx]* %channel74, i64 0, i64 %idxprom73, !dbg !2855
  %cur_subframe = getelementptr inbounds %struct.WmallChannelCtx, %struct.WmallChannelCtx* %arrayidx75, i32 0, i32 5, !dbg !2857
  store i8 0, i8* %cur_subframe, align 4, !dbg !2858
  br label %for.inc76, !dbg !2859

for.inc76:                                        ; preds = %for.body70
  %73 = load i32, i32* %i, align 4, !dbg !2860
  %inc77 = add nsw i32 %73, 1, !dbg !2860
  store i32 %inc77, i32* %i, align 4, !dbg !2860
  br label %for.cond65, !dbg !2862, !llvm.loop !2863

for.end78:                                        ; preds = %for.cond65
  br label %while.cond, !dbg !2865

while.cond:                                       ; preds = %if.end98, %for.end78
  %74 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2866
  %parsed_all_subframes79 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %74, i32 0, i32 34, !dbg !2868
  %75 = load i8, i8* %parsed_all_subframes79, align 2, !dbg !2868
  %tobool80 = icmp ne i8 %75, 0, !dbg !2869
  %lnot = xor i1 %tobool80, true, !dbg !2869
  br i1 %lnot, label %while.body, label %while.end, !dbg !2870

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %decoded_samples81, metadata !2871, metadata !1820), !dbg !2873
  %76 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2874
  %channel82 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %76, i32 0, i32 38, !dbg !2875
  %arrayidx83 = getelementptr inbounds [8 x %struct.WmallChannelCtx], [8 x %struct.WmallChannelCtx]* %channel82, i64 0, i64 0, !dbg !2874
  %decoded_samples84 = getelementptr inbounds %struct.WmallChannelCtx, %struct.WmallChannelCtx* %arrayidx83, i32 0, i32 6, !dbg !2876
  %77 = load i16, i16* %decoded_samples84, align 2, !dbg !2876
  %conv85 = zext i16 %77 to i32, !dbg !2874
  store i32 %conv85, i32* %decoded_samples81, align 4, !dbg !2873
  %78 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2877
  %call86 = call i32 @decode_subframe(%struct.WmallDecodeCtx* %78), !dbg !2879
  %cmp87 = icmp slt i32 %call86, 0, !dbg !2880
  br i1 %cmp87, label %if.then89, label %if.end98, !dbg !2881

if.then89:                                        ; preds = %while.body
  %79 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2882
  %packet_loss90 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %79, i32 0, i32 25, !dbg !2884
  store i8 1, i8* %packet_loss90, align 4, !dbg !2885
  %80 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2886
  %frame91 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %80, i32 0, i32 1, !dbg !2888
  %81 = load %struct.AVFrame*, %struct.AVFrame** %frame91, align 8, !dbg !2888
  %nb_samples92 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %81, i32 0, i32 5, !dbg !2889
  %82 = load i32, i32* %nb_samples92, align 8, !dbg !2889
  %tobool93 = icmp ne i32 %82, 0, !dbg !2886
  br i1 %tobool93, label %if.then94, label %if.end97, !dbg !2890

if.then94:                                        ; preds = %if.then89
  %83 = load i32, i32* %decoded_samples81, align 4, !dbg !2891
  %84 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2892
  %frame95 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %84, i32 0, i32 1, !dbg !2893
  %85 = load %struct.AVFrame*, %struct.AVFrame** %frame95, align 8, !dbg !2893
  %nb_samples96 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %85, i32 0, i32 5, !dbg !2894
  store i32 %83, i32* %nb_samples96, align 8, !dbg !2895
  br label %if.end97, !dbg !2892

if.end97:                                         ; preds = %if.then94, %if.then89
  store i32 0, i32* %retval, align 4, !dbg !2896
  br label %return, !dbg !2896

if.end98:                                         ; preds = %while.body
  br label %while.cond, !dbg !2897, !llvm.loop !2899

while.end:                                        ; preds = %while.cond
  br label %do.body99, !dbg !2900, !llvm.loop !2901

do.body99:                                        ; preds = %while.end
  br label %do.end100, !dbg !2902

do.end100:                                        ; preds = %do.body99
  %86 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2905
  %skip_frame = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %86, i32 0, i32 33, !dbg !2906
  store i8 0, i8* %skip_frame, align 1, !dbg !2907
  %87 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2908
  %len_prefix101 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %87, i32 0, i32 7, !dbg !2910
  %88 = load i32, i32* %len_prefix101, align 4, !dbg !2910
  %tobool102 = icmp ne i32 %88, 0, !dbg !2908
  br i1 %tobool102, label %if.then103, label %if.end122, !dbg !2911

if.then103:                                       ; preds = %do.end100
  %89 = load i32, i32* %len, align 4, !dbg !2912
  %90 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2915
  %call104 = call i32 @get_bits_count(%struct.GetBitContext* %90), !dbg !2916
  %91 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2917
  %frame_offset = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %91, i32 0, i32 23, !dbg !2918
  %92 = load i32, i32* %frame_offset, align 4, !dbg !2918
  %sub105 = sub nsw i32 %call104, %92, !dbg !2919
  %add = add nsw i32 %sub105, 2, !dbg !2920
  %cmp106 = icmp ne i32 %89, %add, !dbg !2921
  br i1 %cmp106, label %if.then108, label %if.end116, !dbg !2922

if.then108:                                       ; preds = %if.then103
  %93 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2923
  %avctx109 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %93, i32 0, i32 0, !dbg !2925
  %94 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx109, align 16, !dbg !2925
  %95 = bitcast %struct.AVCodecContext* %94 to i8*, !dbg !2923
  %96 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2926
  %frame_num = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %96, i32 0, i32 27, !dbg !2927
  %97 = load i32, i32* %frame_num, align 16, !dbg !2927
  %98 = load i32, i32* %len, align 4, !dbg !2928
  %99 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2929
  %call110 = call i32 @get_bits_count(%struct.GetBitContext* %99), !dbg !2930
  %100 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2931
  %frame_offset111 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %100, i32 0, i32 23, !dbg !2932
  %101 = load i32, i32* %frame_offset111, align 4, !dbg !2932
  %sub112 = sub nsw i32 %call110, %101, !dbg !2933
  %sub113 = sub nsw i32 %98, %sub112, !dbg !2934
  %sub114 = sub nsw i32 %sub113, 1, !dbg !2935
  call void (i8*, i32, i8*, ...) @av_log(i8* %95, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.14, i32 0, i32 0), i32 %97, i32 %sub114), !dbg !2936
  %102 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2937
  %packet_loss115 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %102, i32 0, i32 25, !dbg !2938
  store i8 1, i8* %packet_loss115, align 4, !dbg !2939
  store i32 0, i32* %retval, align 4, !dbg !2940
  br label %return, !dbg !2940

if.end116:                                        ; preds = %if.then103
  %103 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2941
  %104 = load i32, i32* %len, align 4, !dbg !2942
  %105 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2943
  %call117 = call i32 @get_bits_count(%struct.GetBitContext* %105), !dbg !2944
  %106 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2945
  %frame_offset118 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %106, i32 0, i32 23, !dbg !2946
  %107 = load i32, i32* %frame_offset118, align 4, !dbg !2946
  %sub119 = sub nsw i32 %call117, %107, !dbg !2947
  %sub120 = sub nsw i32 %104, %sub119, !dbg !2948
  %sub121 = sub nsw i32 %sub120, 1, !dbg !2949
  call void @skip_bits_long(%struct.GetBitContext* %103, i32 %sub121), !dbg !2950
  br label %if.end122, !dbg !2952

if.end122:                                        ; preds = %if.end116, %do.end100
  %108 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !2953
  %call123 = call i32 @get_bits1(%struct.GetBitContext* %108), !dbg !2954
  store i32 %call123, i32* %more_frames, align 4, !dbg !2955
  %109 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !2956
  %frame_num124 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %109, i32 0, i32 27, !dbg !2957
  %110 = load i32, i32* %frame_num124, align 16, !dbg !2958
  %inc125 = add i32 %110, 1, !dbg !2958
  store i32 %inc125, i32* %frame_num124, align 16, !dbg !2958
  %111 = load i32, i32* %more_frames, align 4, !dbg !2959
  store i32 %111, i32* %retval, align 4, !dbg !2960
  br label %return, !dbg !2960

return:                                           ; preds = %if.end122, %if.then108, %if.end97, %if.then61, %if.then24, %if.then
  %112 = load i32, i32* %retval, align 4, !dbg !2961
  ret i32 %112, !dbg !2961
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits(%struct.GetBitContext* %s, i8* %buffer, i32 %bit_size) #4 !dbg !2962 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %bit_size.addr = alloca i32, align 4
  %buffer_size = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !2965, metadata !1820), !dbg !2966
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !2967, metadata !1820), !dbg !2968
  store i32 %bit_size, i32* %bit_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit_size.addr, metadata !2969, metadata !1820), !dbg !2970
  call void @llvm.dbg.declare(metadata i32* %buffer_size, metadata !2971, metadata !1820), !dbg !2972
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2973, metadata !1820), !dbg !2974
  store i32 0, i32* %ret, align 4, !dbg !2974
  %0 = load i32, i32* %bit_size.addr, align 4, !dbg !2975
  %cmp = icmp sge i32 %0, 2147483135, !dbg !2977
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2978

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %bit_size.addr, align 4, !dbg !2979
  %cmp1 = icmp slt i32 %1, 0, !dbg !2981
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !2982

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !2983
  %tobool = icmp ne i8* %2, null, !dbg !2983
  br i1 %tobool, label %if.end, label %if.then, !dbg !2985

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 0, i32* %bit_size.addr, align 4, !dbg !2986
  store i8* null, i8** %buffer.addr, align 8, !dbg !2988
  store i32 -1094995529, i32* %ret, align 4, !dbg !2989
  br label %if.end, !dbg !2990

if.end:                                           ; preds = %if.then, %lor.lhs.false2
  %3 = load i32, i32* %bit_size.addr, align 4, !dbg !2991
  %add = add nsw i32 %3, 7, !dbg !2992
  %shr = ashr i32 %add, 3, !dbg !2993
  store i32 %shr, i32* %buffer_size, align 4, !dbg !2994
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !2995
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !2996
  %buffer3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 0, !dbg !2997
  store i8* %4, i8** %buffer3, align 8, !dbg !2998
  %6 = load i32, i32* %bit_size.addr, align 4, !dbg !2999
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3000
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %7, i32 0, i32 3, !dbg !3001
  store i32 %6, i32* %size_in_bits, align 4, !dbg !3002
  %8 = load i32, i32* %bit_size.addr, align 4, !dbg !3003
  %add4 = add nsw i32 %8, 8, !dbg !3004
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3005
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 4, !dbg !3006
  store i32 %add4, i32* %size_in_bits_plus8, align 8, !dbg !3007
  %10 = load i8*, i8** %buffer.addr, align 8, !dbg !3008
  %11 = load i32, i32* %buffer_size, align 4, !dbg !3009
  %idx.ext = sext i32 %11 to i64, !dbg !3010
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !3010
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3011
  %buffer_end = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %12, i32 0, i32 1, !dbg !3012
  store i8* %add.ptr, i8** %buffer_end, align 8, !dbg !3013
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3014
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %13, i32 0, i32 2, !dbg !3015
  store i32 0, i32* %index, align 8, !dbg !3016
  %14 = load i32, i32* %ret, align 4, !dbg !3017
  ret i32 %14, !dbg !3018
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits(%struct.GetBitContext* %s, i32 %n) #4 !dbg !3019 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !3022, metadata !1820), !dbg !3027
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !3029, metadata !1820), !dbg !3030
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3031, metadata !1820), !dbg !3032
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !3033, metadata !1820), !dbg !3034
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !3035, metadata !1820), !dbg !3036
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3037
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !3038
  %1 = load i32, i32* %index, align 8, !dbg !3038
  store i32 %1, i32* %re_index, align 4, !dbg !3036
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !3039, metadata !1820), !dbg !3040
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !3041, metadata !1820), !dbg !3042
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3043
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !3044
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !3044
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !3042
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3045
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !3046
  %5 = load i8*, i8** %buffer, align 8, !dbg !3046
  %6 = load i32, i32* %re_index, align 4, !dbg !3047
  %shr = lshr i32 %6, 3, !dbg !3048
  %idx.ext = zext i32 %shr to i64, !dbg !3049
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !3049
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !3050
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !3050
  %8 = load i32, i32* %l, align 1, !dbg !3050
  store i32 %8, i32* %x.addr.i, align 4, !dbg !3051
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !3052
  %shl.i = shl i32 %9, 8, !dbg !3053
  %and.i = and i32 %shl.i, 65280, !dbg !3054
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !3055
  %shr.i = lshr i32 %10, 8, !dbg !3056
  %and1.i = and i32 %shr.i, 255, !dbg !3057
  %or.i = or i32 %and.i, %and1.i, !dbg !3058
  %shl2.i = shl i32 %or.i, 16, !dbg !3059
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !3060
  %shr3.i = lshr i32 %11, 16, !dbg !3061
  %shl4.i = shl i32 %shr3.i, 8, !dbg !3062
  %and5.i = and i32 %shl4.i, 65280, !dbg !3063
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !3064
  %shr6.i = lshr i32 %12, 16, !dbg !3065
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !3066
  %and8.i = and i32 %shr7.i, 255, !dbg !3067
  %or9.i = or i32 %and5.i, %and8.i, !dbg !3068
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !3069
  %13 = load i32, i32* %re_index, align 4, !dbg !3070
  %and = and i32 %13, 7, !dbg !3071
  %shl = shl i32 %or10.i, %and, !dbg !3072
  store i32 %shl, i32* %re_cache, align 4, !dbg !3073
  %14 = load i32, i32* %re_cache, align 4, !dbg !3074
  %15 = load i32, i32* %n.addr, align 4, !dbg !3075
  %conv = trunc i32 %15 to i8, !dbg !3075
  %call4 = call i32 @NEG_USR32(i32 %14, i8 signext %conv), !dbg !3076
  store i32 %call4, i32* %tmp, align 4, !dbg !3077
  %16 = load i32, i32* %re_size_plus8, align 4, !dbg !3078
  %17 = load i32, i32* %re_index, align 4, !dbg !3079
  %18 = load i32, i32* %n.addr, align 4, !dbg !3080
  %add = add i32 %17, %18, !dbg !3081
  %cmp = icmp ugt i32 %16, %add, !dbg !3082
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3083

cond.true:                                        ; preds = %entry
  %19 = load i32, i32* %re_index, align 4, !dbg !3084
  %20 = load i32, i32* %n.addr, align 4, !dbg !3086
  %add6 = add i32 %19, %20, !dbg !3087
  br label %cond.end, !dbg !3088

cond.false:                                       ; preds = %entry
  %21 = load i32, i32* %re_size_plus8, align 4, !dbg !3089
  br label %cond.end, !dbg !3091

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add6, %cond.true ], [ %21, %cond.false ], !dbg !3092
  store i32 %cond, i32* %re_index, align 4, !dbg !3094
  %22 = load i32, i32* %re_index, align 4, !dbg !3095
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3096
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 2, !dbg !3097
  store i32 %22, i32* %index7, align 8, !dbg !3098
  %24 = load i32, i32* %tmp, align 4, !dbg !3099
  ret i32 %24, !dbg !3100
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits(%struct.GetBitContext* %s, i32 %n) #4 !dbg !3101 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !3104, metadata !1820), !dbg !3105
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3106, metadata !1820), !dbg !3107
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !3108, metadata !1820), !dbg !3109
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3110
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !3111
  %1 = load i32, i32* %index, align 8, !dbg !3111
  store i32 %1, i32* %re_index, align 4, !dbg !3109
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !3112, metadata !1820), !dbg !3113
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !3114, metadata !1820), !dbg !3115
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3116
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !3117
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !3117
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !3115
  %4 = load i32, i32* %re_size_plus8, align 4, !dbg !3118
  %5 = load i32, i32* %re_index, align 4, !dbg !3119
  %6 = load i32, i32* %n.addr, align 4, !dbg !3120
  %add = add i32 %5, %6, !dbg !3121
  %cmp = icmp ugt i32 %4, %add, !dbg !3122
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3123

cond.true:                                        ; preds = %entry
  %7 = load i32, i32* %re_index, align 4, !dbg !3124
  %8 = load i32, i32* %n.addr, align 4, !dbg !3126
  %add1 = add i32 %7, %8, !dbg !3127
  br label %cond.end, !dbg !3128

cond.false:                                       ; preds = %entry
  %9 = load i32, i32* %re_size_plus8, align 4, !dbg !3129
  br label %cond.end, !dbg !3131

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add1, %cond.true ], [ %9, %cond.false ], !dbg !3132
  store i32 %cond, i32* %re_index, align 4, !dbg !3134
  %10 = load i32, i32* %re_index, align 4, !dbg !3135
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3136
  %index2 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 2, !dbg !3137
  store i32 %10, i32* %index2, align 8, !dbg !3138
  ret void, !dbg !3139
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits1(%struct.GetBitContext* %s) #4 !dbg !3140 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %index = alloca i32, align 4
  %result = alloca i8, align 1
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !3143, metadata !1820), !dbg !3144
  call void @llvm.dbg.declare(metadata i32* %index, metadata !3145, metadata !1820), !dbg !3146
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3147
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !3148
  %1 = load i32, i32* %index1, align 8, !dbg !3148
  store i32 %1, i32* %index, align 4, !dbg !3146
  call void @llvm.dbg.declare(metadata i8* %result, metadata !3149, metadata !1820), !dbg !3150
  %2 = load i32, i32* %index, align 4, !dbg !3151
  %shr = lshr i32 %2, 3, !dbg !3152
  %idxprom = zext i32 %shr to i64, !dbg !3153
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3153
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 0, !dbg !3154
  %4 = load i8*, i8** %buffer, align 8, !dbg !3154
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !3153
  %5 = load i8, i8* %arrayidx, align 1, !dbg !3153
  store i8 %5, i8* %result, align 1, !dbg !3150
  %6 = load i32, i32* %index, align 4, !dbg !3155
  %and = and i32 %6, 7, !dbg !3156
  %7 = load i8, i8* %result, align 1, !dbg !3157
  %conv = zext i8 %7 to i32, !dbg !3157
  %shl = shl i32 %conv, %and, !dbg !3157
  %conv2 = trunc i32 %shl to i8, !dbg !3157
  store i8 %conv2, i8* %result, align 1, !dbg !3157
  %8 = load i8, i8* %result, align 1, !dbg !3158
  %conv3 = zext i8 %8 to i32, !dbg !3158
  %shr4 = ashr i32 %conv3, 7, !dbg !3158
  %conv5 = trunc i32 %shr4 to i8, !dbg !3158
  store i8 %conv5, i8* %result, align 1, !dbg !3158
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3159
  %index6 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 2, !dbg !3161
  %10 = load i32, i32* %index6, align 8, !dbg !3161
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3162
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 4, !dbg !3163
  %12 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !3163
  %cmp = icmp slt i32 %10, %12, !dbg !3164
  br i1 %cmp, label %if.then, label %if.end, !dbg !3165

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %index, align 4, !dbg !3166
  %inc = add i32 %13, 1, !dbg !3166
  store i32 %inc, i32* %index, align 4, !dbg !3166
  br label %if.end, !dbg !3167

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %index, align 4, !dbg !3168
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3169
  %index8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !3170
  store i32 %14, i32* %index8, align 8, !dbg !3171
  %16 = load i8, i8* %result, align 1, !dbg !3172
  %conv9 = zext i8 %16 to i32, !dbg !3172
  ret i32 %conv9, !dbg !3173
}

; Function Attrs: nounwind uwtable
define internal void @save_bits(%struct.WmallDecodeCtx* %s, %struct.GetBitContext* %gb, i32 %len, i32 %append) #1 !dbg !3174 {
entry:
  %s.addr = alloca %struct.WmallDecodeCtx*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %len.addr = alloca i32, align 4
  %append.addr = alloca i32, align 4
  %buflen = alloca i32, align 4
  %tmp = alloca %struct.PutBitContext, align 8
  %align = alloca i32, align 4
  store %struct.WmallDecodeCtx* %s, %struct.WmallDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WmallDecodeCtx** %s.addr, metadata !3177, metadata !1820), !dbg !3178
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !3179, metadata !1820), !dbg !3180
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !3181, metadata !1820), !dbg !3182
  store i32 %append, i32* %append.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %append.addr, metadata !3183, metadata !1820), !dbg !3184
  call void @llvm.dbg.declare(metadata i32* %buflen, metadata !3185, metadata !1820), !dbg !3186
  call void @llvm.dbg.declare(metadata %struct.PutBitContext* %tmp, metadata !3187, metadata !1820), !dbg !3188
  %0 = load i32, i32* %append.addr, align 4, !dbg !3189
  %tobool = icmp ne i32 %0, 0, !dbg !3189
  br i1 %tobool, label %if.end, label %if.then, !dbg !3191

if.then:                                          ; preds = %entry
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3192
  %call = call i32 @get_bits_count(%struct.GetBitContext* %1), !dbg !3194
  %and = and i32 %call, 7, !dbg !3195
  %2 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3196
  %frame_offset = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %2, i32 0, i32 23, !dbg !3197
  store i32 %and, i32* %frame_offset, align 4, !dbg !3198
  %3 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3199
  %frame_offset1 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %3, i32 0, i32 23, !dbg !3200
  %4 = load i32, i32* %frame_offset1, align 4, !dbg !3200
  %5 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3201
  %num_saved_bits = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %5, i32 0, i32 22, !dbg !3202
  store i32 %4, i32* %num_saved_bits, align 16, !dbg !3203
  %6 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3204
  %pb = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %6, i32 0, i32 5, !dbg !3205
  %7 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3206
  %frame_data = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %7, i32 0, i32 3, !dbg !3207
  %8 = load i8*, i8** %frame_data, align 16, !dbg !3207
  %9 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3208
  %max_frame_size = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %9, i32 0, i32 4, !dbg !3209
  %10 = load i32, i32* %max_frame_size, align 8, !dbg !3209
  call void @init_put_bits(%struct.PutBitContext* %pb, i8* %8, i32 %10), !dbg !3210
  br label %if.end, !dbg !3211

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3212
  %num_saved_bits2 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %11, i32 0, i32 22, !dbg !3213
  %12 = load i32, i32* %num_saved_bits2, align 16, !dbg !3213
  %13 = load i32, i32* %len.addr, align 4, !dbg !3214
  %add = add nsw i32 %12, %13, !dbg !3215
  %add3 = add nsw i32 %add, 8, !dbg !3216
  %shr = ashr i32 %add3, 3, !dbg !3217
  store i32 %shr, i32* %buflen, align 4, !dbg !3218
  %14 = load i32, i32* %len.addr, align 4, !dbg !3219
  %cmp = icmp sle i32 %14, 0, !dbg !3221
  br i1 %cmp, label %if.then6, label %lor.lhs.false, !dbg !3222

lor.lhs.false:                                    ; preds = %if.end
  %15 = load i32, i32* %buflen, align 4, !dbg !3223
  %16 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3225
  %max_frame_size4 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %16, i32 0, i32 4, !dbg !3226
  %17 = load i32, i32* %max_frame_size4, align 8, !dbg !3226
  %cmp5 = icmp sgt i32 %15, %17, !dbg !3227
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !3228

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  %18 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3229
  %avctx = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %18, i32 0, i32 0, !dbg !3231
  %19 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 16, !dbg !3231
  %20 = bitcast %struct.AVCodecContext* %19 to i8*, !dbg !3229
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %20, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.26, i32 0, i32 0)), !dbg !3232
  %21 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3233
  %packet_loss = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %21, i32 0, i32 25, !dbg !3234
  store i8 1, i8* %packet_loss, align 4, !dbg !3235
  %22 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3236
  %num_saved_bits7 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %22, i32 0, i32 22, !dbg !3237
  store i32 0, i32* %num_saved_bits7, align 16, !dbg !3238
  br label %return, !dbg !3239

if.end8:                                          ; preds = %lor.lhs.false
  %23 = load i32, i32* %len.addr, align 4, !dbg !3240
  %24 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3241
  %num_saved_bits9 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %24, i32 0, i32 22, !dbg !3242
  %25 = load i32, i32* %num_saved_bits9, align 16, !dbg !3243
  %add10 = add nsw i32 %25, %23, !dbg !3243
  store i32 %add10, i32* %num_saved_bits9, align 16, !dbg !3243
  %26 = load i32, i32* %append.addr, align 4, !dbg !3244
  %tobool11 = icmp ne i32 %26, 0, !dbg !3244
  br i1 %tobool11, label %if.else, label %if.then12, !dbg !3246

if.then12:                                        ; preds = %if.end8
  %27 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3247
  %pb13 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %27, i32 0, i32 5, !dbg !3249
  %28 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3250
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %28, i32 0, i32 0, !dbg !3251
  %29 = load i8*, i8** %buffer, align 8, !dbg !3251
  %30 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3252
  %call14 = call i32 @get_bits_count(%struct.GetBitContext* %30), !dbg !3253
  %shr15 = ashr i32 %call14, 3, !dbg !3254
  %idx.ext = sext i32 %shr15 to i64, !dbg !3255
  %add.ptr = getelementptr inbounds i8, i8* %29, i64 %idx.ext, !dbg !3255
  %31 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3256
  %num_saved_bits16 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %31, i32 0, i32 22, !dbg !3257
  %32 = load i32, i32* %num_saved_bits16, align 16, !dbg !3257
  call void @avpriv_copy_bits(%struct.PutBitContext* %pb13, i8* %add.ptr, i32 %32), !dbg !3258
  br label %if.end30, !dbg !3260

if.else:                                          ; preds = %if.end8
  call void @llvm.dbg.declare(metadata i32* %align, metadata !3261, metadata !1820), !dbg !3263
  %33 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3264
  %call18 = call i32 @get_bits_count(%struct.GetBitContext* %33), !dbg !3265
  %and19 = and i32 %call18, 7, !dbg !3266
  %sub = sub nsw i32 8, %and19, !dbg !3267
  store i32 %sub, i32* %align, align 4, !dbg !3263
  %34 = load i32, i32* %align, align 4, !dbg !3268
  %35 = load i32, i32* %len.addr, align 4, !dbg !3269
  %cmp20 = icmp sgt i32 %34, %35, !dbg !3270
  br i1 %cmp20, label %cond.true, label %cond.false, !dbg !3271

cond.true:                                        ; preds = %if.else
  %36 = load i32, i32* %len.addr, align 4, !dbg !3272
  br label %cond.end, !dbg !3274

cond.false:                                       ; preds = %if.else
  %37 = load i32, i32* %align, align 4, !dbg !3275
  br label %cond.end, !dbg !3277

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %36, %cond.true ], [ %37, %cond.false ], !dbg !3278
  store i32 %cond, i32* %align, align 4, !dbg !3280
  %38 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3281
  %pb21 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %38, i32 0, i32 5, !dbg !3282
  %39 = load i32, i32* %align, align 4, !dbg !3283
  %40 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3284
  %41 = load i32, i32* %align, align 4, !dbg !3285
  %call22 = call i32 @get_bits(%struct.GetBitContext* %40, i32 %41), !dbg !3286
  call void @put_bits(%struct.PutBitContext* %pb21, i32 %39, i32 %call22), !dbg !3287
  %42 = load i32, i32* %align, align 4, !dbg !3288
  %43 = load i32, i32* %len.addr, align 4, !dbg !3289
  %sub23 = sub nsw i32 %43, %42, !dbg !3289
  store i32 %sub23, i32* %len.addr, align 4, !dbg !3289
  %44 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3290
  %pb24 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %44, i32 0, i32 5, !dbg !3291
  %45 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3292
  %buffer25 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %45, i32 0, i32 0, !dbg !3293
  %46 = load i8*, i8** %buffer25, align 8, !dbg !3293
  %47 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3294
  %call26 = call i32 @get_bits_count(%struct.GetBitContext* %47), !dbg !3295
  %shr27 = ashr i32 %call26, 3, !dbg !3296
  %idx.ext28 = sext i32 %shr27 to i64, !dbg !3297
  %add.ptr29 = getelementptr inbounds i8, i8* %46, i64 %idx.ext28, !dbg !3297
  %48 = load i32, i32* %len.addr, align 4, !dbg !3298
  call void @avpriv_copy_bits(%struct.PutBitContext* %pb24, i8* %add.ptr29, i32 %48), !dbg !3299
  br label %if.end30

if.end30:                                         ; preds = %cond.end, %if.then12
  %49 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3300
  %50 = load i32, i32* %len.addr, align 4, !dbg !3301
  call void @skip_bits_long(%struct.GetBitContext* %49, i32 %50), !dbg !3302
  %51 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3303
  %pb31 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %51, i32 0, i32 5, !dbg !3304
  %52 = bitcast %struct.PutBitContext* %tmp to i8*, !dbg !3304
  %53 = bitcast %struct.PutBitContext* %pb31 to i8*, !dbg !3304
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 40, i32 8, i1 false), !dbg !3304
  call void @flush_put_bits(%struct.PutBitContext* %tmp), !dbg !3305
  %54 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3306
  %gb32 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %54, i32 0, i32 28, !dbg !3307
  %55 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3308
  %frame_data33 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %55, i32 0, i32 3, !dbg !3309
  %56 = load i8*, i8** %frame_data33, align 16, !dbg !3309
  %57 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3310
  %num_saved_bits34 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %57, i32 0, i32 22, !dbg !3311
  %58 = load i32, i32* %num_saved_bits34, align 16, !dbg !3311
  %call35 = call i32 @init_get_bits(%struct.GetBitContext* %gb32, i8* %56, i32 %58), !dbg !3312
  %59 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3313
  %gb36 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %59, i32 0, i32 28, !dbg !3314
  %60 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3315
  %frame_offset37 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %60, i32 0, i32 23, !dbg !3316
  %61 = load i32, i32* %frame_offset37, align 4, !dbg !3316
  call void @skip_bits(%struct.GetBitContext* %gb36, i32 %61), !dbg !3317
  br label %return, !dbg !3318

return:                                           ; preds = %if.end30, %if.then6
  ret void, !dbg !3319
}

; Function Attrs: nounwind uwtable
define internal i32 @remaining_bits(%struct.WmallDecodeCtx* %s, %struct.GetBitContext* %gb) #1 !dbg !3321 {
entry:
  %s.addr = alloca %struct.WmallDecodeCtx*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  store %struct.WmallDecodeCtx* %s, %struct.WmallDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WmallDecodeCtx** %s.addr, metadata !3324, metadata !1820), !dbg !3325
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !3326, metadata !1820), !dbg !3327
  %0 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3328
  %buf_bit_size = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %0, i32 0, i32 29, !dbg !3329
  %1 = load i32, i32* %buf_bit_size, align 8, !dbg !3329
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !3330
  %call = call i32 @get_bits_count(%struct.GetBitContext* %2), !dbg !3331
  %sub = sub nsw i32 %1, %call, !dbg !3332
  ret i32 %sub, !dbg !3333
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @show_bits(%struct.GetBitContext* %s, i32 %n) #4 !dbg !3334 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !3022, metadata !1820), !dbg !3335
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !3337, metadata !1820), !dbg !3338
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !3339, metadata !1820), !dbg !3340
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !3341, metadata !1820), !dbg !3342
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !3343, metadata !1820), !dbg !3344
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3345
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !3346
  %1 = load i32, i32* %index, align 8, !dbg !3346
  store i32 %1, i32* %re_index, align 4, !dbg !3344
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !3347, metadata !1820), !dbg !3348
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !3349
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 0, !dbg !3350
  %3 = load i8*, i8** %buffer, align 8, !dbg !3350
  %4 = load i32, i32* %re_index, align 4, !dbg !3351
  %shr = lshr i32 %4, 3, !dbg !3352
  %idx.ext = zext i32 %shr to i64, !dbg !3353
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %idx.ext, !dbg !3353
  %5 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !3354
  %l = bitcast %union.unaligned_32* %5 to i32*, !dbg !3354
  %6 = load i32, i32* %l, align 1, !dbg !3354
  store i32 %6, i32* %x.addr.i, align 4, !dbg !3355
  %7 = load i32, i32* %x.addr.i, align 4, !dbg !3356
  %shl.i = shl i32 %7, 8, !dbg !3357
  %and.i = and i32 %shl.i, 65280, !dbg !3358
  %8 = load i32, i32* %x.addr.i, align 4, !dbg !3359
  %shr.i = lshr i32 %8, 8, !dbg !3360
  %and1.i = and i32 %shr.i, 255, !dbg !3361
  %or.i = or i32 %and.i, %and1.i, !dbg !3362
  %shl2.i = shl i32 %or.i, 16, !dbg !3363
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !3364
  %shr3.i = lshr i32 %9, 16, !dbg !3365
  %shl4.i = shl i32 %shr3.i, 8, !dbg !3366
  %and5.i = and i32 %shl4.i, 65280, !dbg !3367
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !3368
  %shr6.i = lshr i32 %10, 16, !dbg !3369
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !3370
  %and8.i = and i32 %shr7.i, 255, !dbg !3371
  %or9.i = or i32 %and5.i, %and8.i, !dbg !3372
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !3373
  %11 = load i32, i32* %re_index, align 4, !dbg !3374
  %and = and i32 %11, 7, !dbg !3375
  %shl = shl i32 %or10.i, %and, !dbg !3376
  store i32 %shl, i32* %re_cache, align 4, !dbg !3377
  %12 = load i32, i32* %re_cache, align 4, !dbg !3378
  %13 = load i32, i32* %n.addr, align 4, !dbg !3379
  %conv = trunc i32 %13 to i8, !dbg !3379
  %call3 = call i32 @NEG_USR32(i32 %12, i8 signext %conv), !dbg !3380
  store i32 %call3, i32* %tmp, align 4, !dbg !3381
  %14 = load i32, i32* %tmp, align 4, !dbg !3382
  ret i32 %14, !dbg !3383
}

declare void @av_frame_move_ref(%struct.AVFrame*, %struct.AVFrame*) #3

declare i32 @ff_get_buffer(%struct.AVCodecContext*, %struct.AVFrame*, i32) #3

; Function Attrs: nounwind uwtable
define internal i32 @decode_tilehdr(%struct.WmallDecodeCtx* %s) #1 !dbg !3384 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.WmallDecodeCtx*, align 8
  %num_samples = alloca [8 x i16], align 16
  %contains_subframe = alloca [8 x i8], align 1
  %channels_for_cur_subframe = alloca i32, align 4
  %fixed_channel_layout = alloca i32, align 4
  %min_channel_len = alloca i32, align 4
  %c = alloca i32, align 4
  %tile_aligned = alloca i32, align 4
  %subframe_len = alloca i32, align 4
  %in_use = alloca i32, align 4
  %chan = alloca %struct.WmallChannelCtx*, align 8
  %i = alloca i32, align 4
  %offset = alloca i32, align 4
  store %struct.WmallDecodeCtx* %s, %struct.WmallDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WmallDecodeCtx** %s.addr, metadata !3385, metadata !1820), !dbg !3386
  call void @llvm.dbg.declare(metadata [8 x i16]* %num_samples, metadata !3387, metadata !1820), !dbg !3389
  %0 = bitcast [8 x i16]* %num_samples to i8*, !dbg !3389
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 16, i32 16, i1 false), !dbg !3389
  call void @llvm.dbg.declare(metadata [8 x i8]* %contains_subframe, metadata !3390, metadata !1820), !dbg !3392
  call void @llvm.dbg.declare(metadata i32* %channels_for_cur_subframe, metadata !3393, metadata !1820), !dbg !3394
  %1 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3395
  %num_channels = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %1, i32 0, i32 12, !dbg !3396
  %2 = load i8, i8* %num_channels, align 2, !dbg !3396
  %conv = sext i8 %2 to i32, !dbg !3395
  store i32 %conv, i32* %channels_for_cur_subframe, align 4, !dbg !3394
  call void @llvm.dbg.declare(metadata i32* %fixed_channel_layout, metadata !3397, metadata !1820), !dbg !3398
  store i32 0, i32* %fixed_channel_layout, align 4, !dbg !3398
  call void @llvm.dbg.declare(metadata i32* %min_channel_len, metadata !3399, metadata !1820), !dbg !3400
  store i32 0, i32* %min_channel_len, align 4, !dbg !3400
  call void @llvm.dbg.declare(metadata i32* %c, metadata !3401, metadata !1820), !dbg !3402
  call void @llvm.dbg.declare(metadata i32* %tile_aligned, metadata !3403, metadata !1820), !dbg !3404
  store i32 0, i32* %c, align 4, !dbg !3405
  br label %for.cond, !dbg !3407

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %c, align 4, !dbg !3408
  %4 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3411
  %num_channels1 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %4, i32 0, i32 12, !dbg !3412
  %5 = load i8, i8* %num_channels1, align 2, !dbg !3412
  %conv2 = sext i8 %5 to i32, !dbg !3411
  %cmp = icmp slt i32 %3, %conv2, !dbg !3413
  br i1 %cmp, label %for.body, label %for.end, !dbg !3414

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %c, align 4, !dbg !3415
  %idxprom = sext i32 %6 to i64, !dbg !3416
  %7 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3416
  %channel = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %7, i32 0, i32 38, !dbg !3417
  %arrayidx = getelementptr inbounds [8 x %struct.WmallChannelCtx], [8 x %struct.WmallChannelCtx]* %channel, i64 0, i64 %idxprom, !dbg !3416
  %num_subframes = getelementptr inbounds %struct.WmallChannelCtx, %struct.WmallChannelCtx* %arrayidx, i32 0, i32 2, !dbg !3418
  store i8 0, i8* %num_subframes, align 1, !dbg !3419
  br label %for.inc, !dbg !3416

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %c, align 4, !dbg !3420
  %inc = add nsw i32 %8, 1, !dbg !3420
  store i32 %inc, i32* %c, align 4, !dbg !3420
  br label %for.cond, !dbg !3422, !llvm.loop !3423

for.end:                                          ; preds = %for.cond
  %9 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3425
  %gb = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %9, i32 0, i32 28, !dbg !3426
  %call = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !3427
  store i32 %call, i32* %tile_aligned, align 4, !dbg !3428
  %10 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3429
  %max_num_subframes = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %10, i32 0, i32 14, !dbg !3431
  %11 = load i8, i8* %max_num_subframes, align 4, !dbg !3431
  %conv4 = zext i8 %11 to i32, !dbg !3429
  %cmp5 = icmp eq i32 %conv4, 1, !dbg !3432
  br i1 %cmp5, label %if.then, label %lor.lhs.false, !dbg !3433

lor.lhs.false:                                    ; preds = %for.end
  %12 = load i32, i32* %tile_aligned, align 4, !dbg !3434
  %tobool = icmp ne i32 %12, 0, !dbg !3434
  br i1 %tobool, label %if.then, label %if.end, !dbg !3436

if.then:                                          ; preds = %lor.lhs.false, %for.end
  store i32 1, i32* %fixed_channel_layout, align 4, !dbg !3437
  br label %if.end, !dbg !3438

if.end:                                           ; preds = %if.then, %lor.lhs.false
  br label %do.body, !dbg !3439, !llvm.loop !3440

do.body:                                          ; preds = %do.cond, %if.end
  call void @llvm.dbg.declare(metadata i32* %subframe_len, metadata !3441, metadata !1820), !dbg !3443
  call void @llvm.dbg.declare(metadata i32* %in_use, metadata !3444, metadata !1820), !dbg !3445
  store i32 0, i32* %in_use, align 4, !dbg !3445
  store i32 0, i32* %c, align 4, !dbg !3446
  br label %for.cond7, !dbg !3448

for.cond7:                                        ; preds = %for.inc44, %do.body
  %13 = load i32, i32* %c, align 4, !dbg !3449
  %14 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3452
  %num_channels8 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %14, i32 0, i32 12, !dbg !3453
  %15 = load i8, i8* %num_channels8, align 2, !dbg !3453
  %conv9 = sext i8 %15 to i32, !dbg !3452
  %cmp10 = icmp slt i32 %13, %conv9, !dbg !3454
  br i1 %cmp10, label %for.body12, label %for.end46, !dbg !3455

for.body12:                                       ; preds = %for.cond7
  %16 = load i32, i32* %c, align 4, !dbg !3456
  %idxprom13 = sext i32 %16 to i64, !dbg !3459
  %arrayidx14 = getelementptr inbounds [8 x i16], [8 x i16]* %num_samples, i64 0, i64 %idxprom13, !dbg !3459
  %17 = load i16, i16* %arrayidx14, align 2, !dbg !3459
  %conv15 = zext i16 %17 to i32, !dbg !3459
  %18 = load i32, i32* %min_channel_len, align 4, !dbg !3460
  %cmp16 = icmp eq i32 %conv15, %18, !dbg !3461
  br i1 %cmp16, label %if.then18, label %if.else40, !dbg !3462

if.then18:                                        ; preds = %for.body12
  %19 = load i32, i32* %fixed_channel_layout, align 4, !dbg !3463
  %tobool19 = icmp ne i32 %19, 0, !dbg !3463
  br i1 %tobool19, label %if.then28, label %lor.lhs.false20, !dbg !3466

lor.lhs.false20:                                  ; preds = %if.then18
  %20 = load i32, i32* %channels_for_cur_subframe, align 4, !dbg !3467
  %cmp21 = icmp eq i32 %20, 1, !dbg !3469
  br i1 %cmp21, label %if.then28, label %lor.lhs.false23, !dbg !3470

lor.lhs.false23:                                  ; preds = %lor.lhs.false20
  %21 = load i32, i32* %min_channel_len, align 4, !dbg !3471
  %22 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3472
  %samples_per_frame = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %22, i32 0, i32 10, !dbg !3473
  %23 = load i16, i16* %samples_per_frame, align 2, !dbg !3473
  %conv24 = zext i16 %23 to i32, !dbg !3472
  %24 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3474
  %min_samples_per_subframe = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %24, i32 0, i32 17, !dbg !3475
  %25 = load i16, i16* %min_samples_per_subframe, align 16, !dbg !3475
  %conv25 = zext i16 %25 to i32, !dbg !3474
  %sub = sub nsw i32 %conv24, %conv25, !dbg !3476
  %cmp26 = icmp eq i32 %21, %sub, !dbg !3477
  br i1 %cmp26, label %if.then28, label %if.else, !dbg !3478

if.then28:                                        ; preds = %lor.lhs.false23, %lor.lhs.false20, %if.then18
  %26 = load i32, i32* %c, align 4, !dbg !3480
  %idxprom29 = sext i32 %26 to i64, !dbg !3482
  %arrayidx30 = getelementptr inbounds [8 x i8], [8 x i8]* %contains_subframe, i64 0, i64 %idxprom29, !dbg !3482
  store i8 1, i8* %arrayidx30, align 1, !dbg !3483
  br label %if.end36, !dbg !3484

if.else:                                          ; preds = %lor.lhs.false23
  %27 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3485
  %gb31 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %27, i32 0, i32 28, !dbg !3487
  %call32 = call i32 @get_bits1(%struct.GetBitContext* %gb31), !dbg !3488
  %conv33 = trunc i32 %call32 to i8, !dbg !3488
  %28 = load i32, i32* %c, align 4, !dbg !3489
  %idxprom34 = sext i32 %28 to i64, !dbg !3490
  %arrayidx35 = getelementptr inbounds [8 x i8], [8 x i8]* %contains_subframe, i64 0, i64 %idxprom34, !dbg !3490
  store i8 %conv33, i8* %arrayidx35, align 1, !dbg !3491
  br label %if.end36

if.end36:                                         ; preds = %if.else, %if.then28
  %29 = load i32, i32* %c, align 4, !dbg !3492
  %idxprom37 = sext i32 %29 to i64, !dbg !3493
  %arrayidx38 = getelementptr inbounds [8 x i8], [8 x i8]* %contains_subframe, i64 0, i64 %idxprom37, !dbg !3493
  %30 = load i8, i8* %arrayidx38, align 1, !dbg !3493
  %conv39 = zext i8 %30 to i32, !dbg !3493
  %31 = load i32, i32* %in_use, align 4, !dbg !3494
  %or = or i32 %31, %conv39, !dbg !3494
  store i32 %or, i32* %in_use, align 4, !dbg !3494
  br label %if.end43, !dbg !3495

if.else40:                                        ; preds = %for.body12
  %32 = load i32, i32* %c, align 4, !dbg !3496
  %idxprom41 = sext i32 %32 to i64, !dbg !3497
  %arrayidx42 = getelementptr inbounds [8 x i8], [8 x i8]* %contains_subframe, i64 0, i64 %idxprom41, !dbg !3497
  store i8 0, i8* %arrayidx42, align 1, !dbg !3498
  br label %if.end43

if.end43:                                         ; preds = %if.else40, %if.end36
  br label %for.inc44, !dbg !3499

for.inc44:                                        ; preds = %if.end43
  %33 = load i32, i32* %c, align 4, !dbg !3500
  %inc45 = add nsw i32 %33, 1, !dbg !3500
  store i32 %inc45, i32* %c, align 4, !dbg !3500
  br label %for.cond7, !dbg !3502, !llvm.loop !3503

for.end46:                                        ; preds = %for.cond7
  %34 = load i32, i32* %in_use, align 4, !dbg !3505
  %tobool47 = icmp ne i32 %34, 0, !dbg !3505
  br i1 %tobool47, label %if.end49, label %if.then48, !dbg !3507

if.then48:                                        ; preds = %for.end46
  %35 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3508
  %avctx = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %35, i32 0, i32 0, !dbg !3510
  %36 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 16, !dbg !3510
  %37 = bitcast %struct.AVCodecContext* %36 to i8*, !dbg !3508
  call void (i8*, i32, i8*, ...) @av_log(i8* %37, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.15, i32 0, i32 0)), !dbg !3511
  store i32 -1094995529, i32* %retval, align 4, !dbg !3512
  br label %return, !dbg !3512

if.end49:                                         ; preds = %for.end46
  %38 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3513
  %39 = load i32, i32* %min_channel_len, align 4, !dbg !3515
  %call50 = call i32 @decode_subframe_length(%struct.WmallDecodeCtx* %38, i32 %39), !dbg !3516
  store i32 %call50, i32* %subframe_len, align 4, !dbg !3517
  %cmp51 = icmp sle i32 %call50, 0, !dbg !3518
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !3519

if.then53:                                        ; preds = %if.end49
  store i32 -1094995529, i32* %retval, align 4, !dbg !3520
  br label %return, !dbg !3520

if.end54:                                         ; preds = %if.end49
  %40 = load i32, i32* %subframe_len, align 4, !dbg !3521
  %41 = load i32, i32* %min_channel_len, align 4, !dbg !3522
  %add = add nsw i32 %41, %40, !dbg !3522
  store i32 %add, i32* %min_channel_len, align 4, !dbg !3522
  store i32 0, i32* %c, align 4, !dbg !3523
  br label %for.cond55, !dbg !3525

for.cond55:                                       ; preds = %for.inc122, %if.end54
  %42 = load i32, i32* %c, align 4, !dbg !3526
  %43 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3529
  %num_channels56 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %43, i32 0, i32 12, !dbg !3530
  %44 = load i8, i8* %num_channels56, align 2, !dbg !3530
  %conv57 = sext i8 %44 to i32, !dbg !3529
  %cmp58 = icmp slt i32 %42, %conv57, !dbg !3531
  br i1 %cmp58, label %for.body60, label %for.end124, !dbg !3532

for.body60:                                       ; preds = %for.cond55
  call void @llvm.dbg.declare(metadata %struct.WmallChannelCtx** %chan, metadata !3533, metadata !1820), !dbg !3536
  %45 = load i32, i32* %c, align 4, !dbg !3537
  %idxprom61 = sext i32 %45 to i64, !dbg !3538
  %46 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3538
  %channel62 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %46, i32 0, i32 38, !dbg !3539
  %arrayidx63 = getelementptr inbounds [8 x %struct.WmallChannelCtx], [8 x %struct.WmallChannelCtx]* %channel62, i64 0, i64 %idxprom61, !dbg !3538
  store %struct.WmallChannelCtx* %arrayidx63, %struct.WmallChannelCtx** %chan, align 8, !dbg !3536
  %47 = load i32, i32* %c, align 4, !dbg !3540
  %idxprom64 = sext i32 %47 to i64, !dbg !3542
  %arrayidx65 = getelementptr inbounds [8 x i8], [8 x i8]* %contains_subframe, i64 0, i64 %idxprom64, !dbg !3542
  %48 = load i8, i8* %arrayidx65, align 1, !dbg !3542
  %tobool66 = icmp ne i8 %48, 0, !dbg !3542
  br i1 %tobool66, label %if.then67, label %if.else102, !dbg !3543

if.then67:                                        ; preds = %for.body60
  %49 = load %struct.WmallChannelCtx*, %struct.WmallChannelCtx** %chan, align 8, !dbg !3544
  %num_subframes68 = getelementptr inbounds %struct.WmallChannelCtx, %struct.WmallChannelCtx* %49, i32 0, i32 2, !dbg !3547
  %50 = load i8, i8* %num_subframes68, align 1, !dbg !3547
  %conv69 = zext i8 %50 to i32, !dbg !3544
  %cmp70 = icmp sge i32 %conv69, 32, !dbg !3548
  br i1 %cmp70, label %if.then72, label %if.end74, !dbg !3549

if.then72:                                        ; preds = %if.then67
  %51 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3550
  %avctx73 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %51, i32 0, i32 0, !dbg !3552
  %52 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx73, align 16, !dbg !3552
  %53 = bitcast %struct.AVCodecContext* %52 to i8*, !dbg !3550
  call void (i8*, i32, i8*, ...) @av_log(i8* %53, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.16, i32 0, i32 0)), !dbg !3553
  store i32 -1094995529, i32* %retval, align 4, !dbg !3554
  br label %return, !dbg !3554

if.end74:                                         ; preds = %if.then67
  %54 = load i32, i32* %subframe_len, align 4, !dbg !3555
  %conv75 = trunc i32 %54 to i16, !dbg !3555
  %55 = load %struct.WmallChannelCtx*, %struct.WmallChannelCtx** %chan, align 8, !dbg !3556
  %num_subframes76 = getelementptr inbounds %struct.WmallChannelCtx, %struct.WmallChannelCtx* %55, i32 0, i32 2, !dbg !3557
  %56 = load i8, i8* %num_subframes76, align 1, !dbg !3557
  %idxprom77 = zext i8 %56 to i64, !dbg !3558
  %57 = load %struct.WmallChannelCtx*, %struct.WmallChannelCtx** %chan, align 8, !dbg !3558
  %subframe_len78 = getelementptr inbounds %struct.WmallChannelCtx, %struct.WmallChannelCtx* %57, i32 0, i32 3, !dbg !3559
  %arrayidx79 = getelementptr inbounds [32 x i16], [32 x i16]* %subframe_len78, i64 0, i64 %idxprom77, !dbg !3558
  store i16 %conv75, i16* %arrayidx79, align 2, !dbg !3560
  %58 = load i32, i32* %subframe_len, align 4, !dbg !3561
  %59 = load i32, i32* %c, align 4, !dbg !3562
  %idxprom80 = sext i32 %59 to i64, !dbg !3563
  %arrayidx81 = getelementptr inbounds [8 x i16], [8 x i16]* %num_samples, i64 0, i64 %idxprom80, !dbg !3563
  %60 = load i16, i16* %arrayidx81, align 2, !dbg !3564
  %conv82 = zext i16 %60 to i32, !dbg !3564
  %add83 = add nsw i32 %conv82, %58, !dbg !3564
  %conv84 = trunc i32 %add83 to i16, !dbg !3564
  store i16 %conv84, i16* %arrayidx81, align 2, !dbg !3564
  %61 = load %struct.WmallChannelCtx*, %struct.WmallChannelCtx** %chan, align 8, !dbg !3565
  %num_subframes85 = getelementptr inbounds %struct.WmallChannelCtx, %struct.WmallChannelCtx* %61, i32 0, i32 2, !dbg !3566
  %62 = load i8, i8* %num_subframes85, align 1, !dbg !3567
  %inc86 = add i8 %62, 1, !dbg !3567
  store i8 %inc86, i8* %num_subframes85, align 1, !dbg !3567
  %63 = load i32, i32* %c, align 4, !dbg !3568
  %idxprom87 = sext i32 %63 to i64, !dbg !3570
  %arrayidx88 = getelementptr inbounds [8 x i16], [8 x i16]* %num_samples, i64 0, i64 %idxprom87, !dbg !3570
  %64 = load i16, i16* %arrayidx88, align 2, !dbg !3570
  %conv89 = zext i16 %64 to i32, !dbg !3570
  %65 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3571
  %samples_per_frame90 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %65, i32 0, i32 10, !dbg !3572
  %66 = load i16, i16* %samples_per_frame90, align 2, !dbg !3572
  %conv91 = zext i16 %66 to i32, !dbg !3571
  %cmp92 = icmp sgt i32 %conv89, %conv91, !dbg !3573
  br i1 %cmp92, label %if.then94, label %if.end101, !dbg !3574

if.then94:                                        ; preds = %if.end74
  %67 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3575
  %avctx95 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %67, i32 0, i32 0, !dbg !3577
  %68 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx95, align 16, !dbg !3577
  %69 = bitcast %struct.AVCodecContext* %68 to i8*, !dbg !3575
  %70 = load i32, i32* %c, align 4, !dbg !3578
  %idxprom96 = sext i32 %70 to i64, !dbg !3579
  %arrayidx97 = getelementptr inbounds [8 x i16], [8 x i16]* %num_samples, i64 0, i64 %idxprom96, !dbg !3579
  %71 = load i16, i16* %arrayidx97, align 2, !dbg !3579
  %conv98 = zext i16 %71 to i32, !dbg !3579
  %72 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3580
  %samples_per_frame99 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %72, i32 0, i32 10, !dbg !3581
  %73 = load i16, i16* %samples_per_frame99, align 2, !dbg !3581
  %conv100 = zext i16 %73 to i32, !dbg !3580
  call void (i8*, i32, i8*, ...) @av_log(i8* %69, i32 16, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.17, i32 0, i32 0), i32 %conv98, i32 %conv100), !dbg !3582
  store i32 -1094995529, i32* %retval, align 4, !dbg !3583
  br label %return, !dbg !3583

if.end101:                                        ; preds = %if.end74
  br label %if.end121, !dbg !3584

if.else102:                                       ; preds = %for.body60
  %74 = load i32, i32* %c, align 4, !dbg !3585
  %idxprom103 = sext i32 %74 to i64, !dbg !3588
  %arrayidx104 = getelementptr inbounds [8 x i16], [8 x i16]* %num_samples, i64 0, i64 %idxprom103, !dbg !3588
  %75 = load i16, i16* %arrayidx104, align 2, !dbg !3588
  %conv105 = zext i16 %75 to i32, !dbg !3588
  %76 = load i32, i32* %min_channel_len, align 4, !dbg !3589
  %cmp106 = icmp sle i32 %conv105, %76, !dbg !3590
  br i1 %cmp106, label %if.then108, label %if.end120, !dbg !3588

if.then108:                                       ; preds = %if.else102
  %77 = load i32, i32* %c, align 4, !dbg !3591
  %idxprom109 = sext i32 %77 to i64, !dbg !3594
  %arrayidx110 = getelementptr inbounds [8 x i16], [8 x i16]* %num_samples, i64 0, i64 %idxprom109, !dbg !3594
  %78 = load i16, i16* %arrayidx110, align 2, !dbg !3594
  %conv111 = zext i16 %78 to i32, !dbg !3594
  %79 = load i32, i32* %min_channel_len, align 4, !dbg !3595
  %cmp112 = icmp slt i32 %conv111, %79, !dbg !3596
  br i1 %cmp112, label %if.then114, label %if.end118, !dbg !3597

if.then114:                                       ; preds = %if.then108
  store i32 0, i32* %channels_for_cur_subframe, align 4, !dbg !3598
  %80 = load i32, i32* %c, align 4, !dbg !3600
  %idxprom115 = sext i32 %80 to i64, !dbg !3601
  %arrayidx116 = getelementptr inbounds [8 x i16], [8 x i16]* %num_samples, i64 0, i64 %idxprom115, !dbg !3601
  %81 = load i16, i16* %arrayidx116, align 2, !dbg !3601
  %conv117 = zext i16 %81 to i32, !dbg !3601
  store i32 %conv117, i32* %min_channel_len, align 4, !dbg !3602
  br label %if.end118, !dbg !3603

if.end118:                                        ; preds = %if.then114, %if.then108
  %82 = load i32, i32* %channels_for_cur_subframe, align 4, !dbg !3604
  %inc119 = add nsw i32 %82, 1, !dbg !3604
  store i32 %inc119, i32* %channels_for_cur_subframe, align 4, !dbg !3604
  br label %if.end120, !dbg !3605

if.end120:                                        ; preds = %if.end118, %if.else102
  br label %if.end121

if.end121:                                        ; preds = %if.end120, %if.end101
  br label %for.inc122, !dbg !3606

for.inc122:                                       ; preds = %if.end121
  %83 = load i32, i32* %c, align 4, !dbg !3607
  %inc123 = add nsw i32 %83, 1, !dbg !3607
  store i32 %inc123, i32* %c, align 4, !dbg !3607
  br label %for.cond55, !dbg !3609, !llvm.loop !3610

for.end124:                                       ; preds = %for.cond55
  br label %do.cond, !dbg !3612

do.cond:                                          ; preds = %for.end124
  %84 = load i32, i32* %min_channel_len, align 4, !dbg !3613
  %85 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3615
  %samples_per_frame125 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %85, i32 0, i32 10, !dbg !3616
  %86 = load i16, i16* %samples_per_frame125, align 2, !dbg !3616
  %conv126 = zext i16 %86 to i32, !dbg !3615
  %cmp127 = icmp slt i32 %84, %conv126, !dbg !3617
  br i1 %cmp127, label %do.body, label %do.end, !dbg !3618, !llvm.loop !3440

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %c, align 4, !dbg !3619
  br label %for.cond129, !dbg !3621

for.cond129:                                      ; preds = %for.inc161, %do.end
  %87 = load i32, i32* %c, align 4, !dbg !3622
  %88 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3625
  %num_channels130 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %88, i32 0, i32 12, !dbg !3626
  %89 = load i8, i8* %num_channels130, align 2, !dbg !3626
  %conv131 = sext i8 %89 to i32, !dbg !3625
  %cmp132 = icmp slt i32 %87, %conv131, !dbg !3627
  br i1 %cmp132, label %for.body134, label %for.end163, !dbg !3628

for.body134:                                      ; preds = %for.cond129
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3629, metadata !1820), !dbg !3631
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !3632, metadata !1820), !dbg !3633
  store i32 0, i32* %offset, align 4, !dbg !3633
  store i32 0, i32* %i, align 4, !dbg !3634
  br label %for.cond135, !dbg !3636

for.cond135:                                      ; preds = %for.inc158, %for.body134
  %90 = load i32, i32* %i, align 4, !dbg !3637
  %91 = load i32, i32* %c, align 4, !dbg !3640
  %idxprom136 = sext i32 %91 to i64, !dbg !3641
  %92 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3641
  %channel137 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %92, i32 0, i32 38, !dbg !3642
  %arrayidx138 = getelementptr inbounds [8 x %struct.WmallChannelCtx], [8 x %struct.WmallChannelCtx]* %channel137, i64 0, i64 %idxprom136, !dbg !3641
  %num_subframes139 = getelementptr inbounds %struct.WmallChannelCtx, %struct.WmallChannelCtx* %arrayidx138, i32 0, i32 2, !dbg !3643
  %93 = load i8, i8* %num_subframes139, align 1, !dbg !3643
  %conv140 = zext i8 %93 to i32, !dbg !3641
  %cmp141 = icmp slt i32 %90, %conv140, !dbg !3644
  br i1 %cmp141, label %for.body143, label %for.end160, !dbg !3645

for.body143:                                      ; preds = %for.cond135
  %94 = load i32, i32* %offset, align 4, !dbg !3646
  %conv144 = trunc i32 %94 to i16, !dbg !3646
  %95 = load i32, i32* %i, align 4, !dbg !3648
  %idxprom145 = sext i32 %95 to i64, !dbg !3649
  %96 = load i32, i32* %c, align 4, !dbg !3650
  %idxprom146 = sext i32 %96 to i64, !dbg !3649
  %97 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3649
  %channel147 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %97, i32 0, i32 38, !dbg !3651
  %arrayidx148 = getelementptr inbounds [8 x %struct.WmallChannelCtx], [8 x %struct.WmallChannelCtx]* %channel147, i64 0, i64 %idxprom146, !dbg !3649
  %subframe_offsets = getelementptr inbounds %struct.WmallChannelCtx, %struct.WmallChannelCtx* %arrayidx148, i32 0, i32 4, !dbg !3652
  %arrayidx149 = getelementptr inbounds [32 x i16], [32 x i16]* %subframe_offsets, i64 0, i64 %idxprom145, !dbg !3649
  store i16 %conv144, i16* %arrayidx149, align 2, !dbg !3653
  %98 = load i32, i32* %i, align 4, !dbg !3654
  %idxprom150 = sext i32 %98 to i64, !dbg !3655
  %99 = load i32, i32* %c, align 4, !dbg !3656
  %idxprom151 = sext i32 %99 to i64, !dbg !3655
  %100 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3655
  %channel152 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %100, i32 0, i32 38, !dbg !3657
  %arrayidx153 = getelementptr inbounds [8 x %struct.WmallChannelCtx], [8 x %struct.WmallChannelCtx]* %channel152, i64 0, i64 %idxprom151, !dbg !3655
  %subframe_len154 = getelementptr inbounds %struct.WmallChannelCtx, %struct.WmallChannelCtx* %arrayidx153, i32 0, i32 3, !dbg !3658
  %arrayidx155 = getelementptr inbounds [32 x i16], [32 x i16]* %subframe_len154, i64 0, i64 %idxprom150, !dbg !3655
  %101 = load i16, i16* %arrayidx155, align 2, !dbg !3655
  %conv156 = zext i16 %101 to i32, !dbg !3655
  %102 = load i32, i32* %offset, align 4, !dbg !3659
  %add157 = add nsw i32 %102, %conv156, !dbg !3659
  store i32 %add157, i32* %offset, align 4, !dbg !3659
  br label %for.inc158, !dbg !3660

for.inc158:                                       ; preds = %for.body143
  %103 = load i32, i32* %i, align 4, !dbg !3661
  %inc159 = add nsw i32 %103, 1, !dbg !3661
  store i32 %inc159, i32* %i, align 4, !dbg !3661
  br label %for.cond135, !dbg !3663, !llvm.loop !3664

for.end160:                                       ; preds = %for.cond135
  br label %for.inc161, !dbg !3666

for.inc161:                                       ; preds = %for.end160
  %104 = load i32, i32* %c, align 4, !dbg !3667
  %inc162 = add nsw i32 %104, 1, !dbg !3667
  store i32 %inc162, i32* %c, align 4, !dbg !3667
  br label %for.cond129, !dbg !3669, !llvm.loop !3670

for.end163:                                       ; preds = %for.cond129
  store i32 0, i32* %retval, align 4, !dbg !3672
  br label %return, !dbg !3672

return:                                           ; preds = %for.end163, %if.then94, %if.then72, %if.then53, %if.then48
  %105 = load i32, i32* %retval, align 4, !dbg !3673
  ret i32 %105, !dbg !3673
}

declare void @av_frame_unref(%struct.AVFrame*) #3

; Function Attrs: nounwind uwtable
define internal i32 @decode_subframe(%struct.WmallDecodeCtx* %s) #1 !dbg !3674 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.WmallDecodeCtx*, align 8
  %offset = alloca i32, align 4
  %subframe_len = alloca i32, align 4
  %total_samples = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %rawpcm_tile = alloca i32, align 4
  %padding_zeroes = alloca i32, align 4
  %res = alloca i32, align 4
  %cur_subframe33 = alloca i32, align 4
  %bits = alloca i32, align 4
  %c = alloca i32, align 4
  %subframe_len309 = alloca i32, align 4
  %c364 = alloca i32, align 4
  store %struct.WmallDecodeCtx* %s, %struct.WmallDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WmallDecodeCtx** %s.addr, metadata !3675, metadata !1820), !dbg !3676
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !3677, metadata !1820), !dbg !3678
  %0 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3679
  %samples_per_frame = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %0, i32 0, i32 10, !dbg !3680
  %1 = load i16, i16* %samples_per_frame, align 2, !dbg !3680
  %conv = zext i16 %1 to i32, !dbg !3679
  store i32 %conv, i32* %offset, align 4, !dbg !3678
  call void @llvm.dbg.declare(metadata i32* %subframe_len, metadata !3681, metadata !1820), !dbg !3682
  %2 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3683
  %samples_per_frame1 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %2, i32 0, i32 10, !dbg !3684
  %3 = load i16, i16* %samples_per_frame1, align 2, !dbg !3684
  %conv2 = zext i16 %3 to i32, !dbg !3683
  store i32 %conv2, i32* %subframe_len, align 4, !dbg !3682
  call void @llvm.dbg.declare(metadata i32* %total_samples, metadata !3685, metadata !1820), !dbg !3686
  %4 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3687
  %samples_per_frame3 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %4, i32 0, i32 10, !dbg !3688
  %5 = load i16, i16* %samples_per_frame3, align 2, !dbg !3688
  %conv4 = zext i16 %5 to i32, !dbg !3687
  %6 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3689
  %num_channels = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %6, i32 0, i32 12, !dbg !3690
  %7 = load i8, i8* %num_channels, align 2, !dbg !3690
  %conv5 = sext i8 %7 to i32, !dbg !3689
  %mul = mul nsw i32 %conv4, %conv5, !dbg !3691
  store i32 %mul, i32* %total_samples, align 4, !dbg !3686
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3692, metadata !1820), !dbg !3693
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3694, metadata !1820), !dbg !3695
  call void @llvm.dbg.declare(metadata i32* %rawpcm_tile, metadata !3696, metadata !1820), !dbg !3697
  call void @llvm.dbg.declare(metadata i32* %padding_zeroes, metadata !3698, metadata !1820), !dbg !3699
  call void @llvm.dbg.declare(metadata i32* %res, metadata !3700, metadata !1820), !dbg !3701
  %8 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3702
  %gb = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %8, i32 0, i32 28, !dbg !3703
  %call = call i32 @get_bits_count(%struct.GetBitContext* %gb), !dbg !3704
  %9 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3705
  %subframe_offset = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %9, i32 0, i32 24, !dbg !3706
  store i32 %call, i32* %subframe_offset, align 8, !dbg !3707
  store i32 0, i32* %i, align 4, !dbg !3708
  br label %for.cond, !dbg !3710

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load i32, i32* %i, align 4, !dbg !3711
  %11 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3714
  %num_channels6 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %11, i32 0, i32 12, !dbg !3715
  %12 = load i8, i8* %num_channels6, align 2, !dbg !3715
  %conv7 = sext i8 %12 to i32, !dbg !3714
  %cmp = icmp slt i32 %10, %conv7, !dbg !3716
  br i1 %cmp, label %for.body, label %for.end, !dbg !3717

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %offset, align 4, !dbg !3718
  %14 = load i32, i32* %i, align 4, !dbg !3721
  %idxprom = sext i32 %14 to i64, !dbg !3722
  %15 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3722
  %channel = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %15, i32 0, i32 38, !dbg !3723
  %arrayidx = getelementptr inbounds [8 x %struct.WmallChannelCtx], [8 x %struct.WmallChannelCtx]* %channel, i64 0, i64 %idxprom, !dbg !3722
  %decoded_samples = getelementptr inbounds %struct.WmallChannelCtx, %struct.WmallChannelCtx* %arrayidx, i32 0, i32 6, !dbg !3724
  %16 = load i16, i16* %decoded_samples, align 2, !dbg !3724
  %conv9 = zext i16 %16 to i32, !dbg !3722
  %cmp10 = icmp sgt i32 %13, %conv9, !dbg !3725
  br i1 %cmp10, label %if.then, label %if.end, !dbg !3726

if.then:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !3727
  %idxprom12 = sext i32 %17 to i64, !dbg !3729
  %18 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3729
  %channel13 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %18, i32 0, i32 38, !dbg !3730
  %arrayidx14 = getelementptr inbounds [8 x %struct.WmallChannelCtx], [8 x %struct.WmallChannelCtx]* %channel13, i64 0, i64 %idxprom12, !dbg !3729
  %decoded_samples15 = getelementptr inbounds %struct.WmallChannelCtx, %struct.WmallChannelCtx* %arrayidx14, i32 0, i32 6, !dbg !3731
  %19 = load i16, i16* %decoded_samples15, align 2, !dbg !3731
  %conv16 = zext i16 %19 to i32, !dbg !3729
  store i32 %conv16, i32* %offset, align 4, !dbg !3732
  %20 = load i32, i32* %i, align 4, !dbg !3733
  %idxprom17 = sext i32 %20 to i64, !dbg !3734
  %21 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3734
  %channel18 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %21, i32 0, i32 38, !dbg !3735
  %arrayidx19 = getelementptr inbounds [8 x %struct.WmallChannelCtx], [8 x %struct.WmallChannelCtx]* %channel18, i64 0, i64 %idxprom17, !dbg !3734
  %cur_subframe = getelementptr inbounds %struct.WmallChannelCtx, %struct.WmallChannelCtx* %arrayidx19, i32 0, i32 5, !dbg !3736
  %22 = load i8, i8* %cur_subframe, align 4, !dbg !3736
  %idxprom20 = zext i8 %22 to i64, !dbg !3737
  %23 = load i32, i32* %i, align 4, !dbg !3738
  %idxprom21 = sext i32 %23 to i64, !dbg !3737
  %24 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3737
  %channel22 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %24, i32 0, i32 38, !dbg !3739
  %arrayidx23 = getelementptr inbounds [8 x %struct.WmallChannelCtx], [8 x %struct.WmallChannelCtx]* %channel22, i64 0, i64 %idxprom21, !dbg !3737
  %subframe_len24 = getelementptr inbounds %struct.WmallChannelCtx, %struct.WmallChannelCtx* %arrayidx23, i32 0, i32 3, !dbg !3740
  %arrayidx25 = getelementptr inbounds [32 x i16], [32 x i16]* %subframe_len24, i64 0, i64 %idxprom20, !dbg !3737
  %25 = load i16, i16* %arrayidx25, align 2, !dbg !3737
  %conv26 = zext i16 %25 to i32, !dbg !3737
  store i32 %conv26, i32* %subframe_len, align 4, !dbg !3741
  br label %if.end, !dbg !3742

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !3743

for.inc:                                          ; preds = %if.end
  %26 = load i32, i32* %i, align 4, !dbg !3744
  %inc = add nsw i32 %26, 1, !dbg !3744
  store i32 %inc, i32* %i, align 4, !dbg !3744
  br label %for.cond, !dbg !3746, !llvm.loop !3747

for.end:                                          ; preds = %for.cond
  %27 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3749
  %channels_for_cur_subframe = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %27, i32 0, i32 36, !dbg !3750
  store i8 0, i8* %channels_for_cur_subframe, align 2, !dbg !3751
  store i32 0, i32* %i, align 4, !dbg !3752
  br label %for.cond27, !dbg !3754

for.cond27:                                       ; preds = %for.inc89, %for.end
  %28 = load i32, i32* %i, align 4, !dbg !3755
  %29 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3758
  %num_channels28 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %29, i32 0, i32 12, !dbg !3759
  %30 = load i8, i8* %num_channels28, align 2, !dbg !3759
  %conv29 = sext i8 %30 to i32, !dbg !3758
  %cmp30 = icmp slt i32 %28, %conv29, !dbg !3760
  br i1 %cmp30, label %for.body32, label %for.end91, !dbg !3761

for.body32:                                       ; preds = %for.cond27
  call void @llvm.dbg.declare(metadata i32* %cur_subframe33, metadata !3762, metadata !1820), !dbg !3764
  %31 = load i32, i32* %i, align 4, !dbg !3765
  %idxprom34 = sext i32 %31 to i64, !dbg !3766
  %32 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3766
  %channel35 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %32, i32 0, i32 38, !dbg !3767
  %arrayidx36 = getelementptr inbounds [8 x %struct.WmallChannelCtx], [8 x %struct.WmallChannelCtx]* %channel35, i64 0, i64 %idxprom34, !dbg !3766
  %cur_subframe37 = getelementptr inbounds %struct.WmallChannelCtx, %struct.WmallChannelCtx* %arrayidx36, i32 0, i32 5, !dbg !3768
  %33 = load i8, i8* %cur_subframe37, align 4, !dbg !3768
  %conv38 = zext i8 %33 to i32, !dbg !3766
  store i32 %conv38, i32* %cur_subframe33, align 4, !dbg !3764
  %34 = load i32, i32* %i, align 4, !dbg !3769
  %idxprom39 = sext i32 %34 to i64, !dbg !3770
  %35 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3770
  %channel40 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %35, i32 0, i32 38, !dbg !3771
  %arrayidx41 = getelementptr inbounds [8 x %struct.WmallChannelCtx], [8 x %struct.WmallChannelCtx]* %channel40, i64 0, i64 %idxprom39, !dbg !3770
  %decoded_samples42 = getelementptr inbounds %struct.WmallChannelCtx, %struct.WmallChannelCtx* %arrayidx41, i32 0, i32 6, !dbg !3772
  %36 = load i16, i16* %decoded_samples42, align 2, !dbg !3772
  %conv43 = zext i16 %36 to i32, !dbg !3770
  %37 = load i32, i32* %total_samples, align 4, !dbg !3773
  %sub = sub nsw i32 %37, %conv43, !dbg !3773
  store i32 %sub, i32* %total_samples, align 4, !dbg !3773
  %38 = load i32, i32* %offset, align 4, !dbg !3774
  %39 = load i32, i32* %i, align 4, !dbg !3776
  %idxprom44 = sext i32 %39 to i64, !dbg !3777
  %40 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3777
  %channel45 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %40, i32 0, i32 38, !dbg !3778
  %arrayidx46 = getelementptr inbounds [8 x %struct.WmallChannelCtx], [8 x %struct.WmallChannelCtx]* %channel45, i64 0, i64 %idxprom44, !dbg !3777
  %decoded_samples47 = getelementptr inbounds %struct.WmallChannelCtx, %struct.WmallChannelCtx* %arrayidx46, i32 0, i32 6, !dbg !3779
  %41 = load i16, i16* %decoded_samples47, align 2, !dbg !3779
  %conv48 = zext i16 %41 to i32, !dbg !3777
  %cmp49 = icmp eq i32 %38, %conv48, !dbg !3780
  br i1 %cmp49, label %land.lhs.true, label %if.end88, !dbg !3781

land.lhs.true:                                    ; preds = %for.body32
  %42 = load i32, i32* %subframe_len, align 4, !dbg !3782
  %43 = load i32, i32* %cur_subframe33, align 4, !dbg !3783
  %idxprom51 = sext i32 %43 to i64, !dbg !3784
  %44 = load i32, i32* %i, align 4, !dbg !3785
  %idxprom52 = sext i32 %44 to i64, !dbg !3784
  %45 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3784
  %channel53 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %45, i32 0, i32 38, !dbg !3786
  %arrayidx54 = getelementptr inbounds [8 x %struct.WmallChannelCtx], [8 x %struct.WmallChannelCtx]* %channel53, i64 0, i64 %idxprom52, !dbg !3784
  %subframe_len55 = getelementptr inbounds %struct.WmallChannelCtx, %struct.WmallChannelCtx* %arrayidx54, i32 0, i32 3, !dbg !3787
  %arrayidx56 = getelementptr inbounds [32 x i16], [32 x i16]* %subframe_len55, i64 0, i64 %idxprom51, !dbg !3784
  %46 = load i16, i16* %arrayidx56, align 2, !dbg !3784
  %conv57 = zext i16 %46 to i32, !dbg !3784
  %cmp58 = icmp eq i32 %42, %conv57, !dbg !3788
  br i1 %cmp58, label %if.then60, label %if.end88, !dbg !3789

if.then60:                                        ; preds = %land.lhs.true
  %47 = load i32, i32* %cur_subframe33, align 4, !dbg !3791
  %idxprom61 = sext i32 %47 to i64, !dbg !3793
  %48 = load i32, i32* %i, align 4, !dbg !3794
  %idxprom62 = sext i32 %48 to i64, !dbg !3793
  %49 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3793
  %channel63 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %49, i32 0, i32 38, !dbg !3795
  %arrayidx64 = getelementptr inbounds [8 x %struct.WmallChannelCtx], [8 x %struct.WmallChannelCtx]* %channel63, i64 0, i64 %idxprom62, !dbg !3793
  %subframe_len65 = getelementptr inbounds %struct.WmallChannelCtx, %struct.WmallChannelCtx* %arrayidx64, i32 0, i32 3, !dbg !3796
  %arrayidx66 = getelementptr inbounds [32 x i16], [32 x i16]* %subframe_len65, i64 0, i64 %idxprom61, !dbg !3793
  %50 = load i16, i16* %arrayidx66, align 2, !dbg !3793
  %conv67 = zext i16 %50 to i32, !dbg !3793
  %51 = load i32, i32* %total_samples, align 4, !dbg !3797
  %sub68 = sub nsw i32 %51, %conv67, !dbg !3797
  store i32 %sub68, i32* %total_samples, align 4, !dbg !3797
  %52 = load i32, i32* %cur_subframe33, align 4, !dbg !3798
  %idxprom69 = sext i32 %52 to i64, !dbg !3799
  %53 = load i32, i32* %i, align 4, !dbg !3800
  %idxprom70 = sext i32 %53 to i64, !dbg !3799
  %54 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3799
  %channel71 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %54, i32 0, i32 38, !dbg !3801
  %arrayidx72 = getelementptr inbounds [8 x %struct.WmallChannelCtx], [8 x %struct.WmallChannelCtx]* %channel71, i64 0, i64 %idxprom70, !dbg !3799
  %subframe_len73 = getelementptr inbounds %struct.WmallChannelCtx, %struct.WmallChannelCtx* %arrayidx72, i32 0, i32 3, !dbg !3802
  %arrayidx74 = getelementptr inbounds [32 x i16], [32 x i16]* %subframe_len73, i64 0, i64 %idxprom69, !dbg !3799
  %55 = load i16, i16* %arrayidx74, align 2, !dbg !3799
  %conv75 = zext i16 %55 to i32, !dbg !3799
  %56 = load i32, i32* %i, align 4, !dbg !3803
  %idxprom76 = sext i32 %56 to i64, !dbg !3804
  %57 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3804
  %channel77 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %57, i32 0, i32 38, !dbg !3805
  %arrayidx78 = getelementptr inbounds [8 x %struct.WmallChannelCtx], [8 x %struct.WmallChannelCtx]* %channel77, i64 0, i64 %idxprom76, !dbg !3804
  %decoded_samples79 = getelementptr inbounds %struct.WmallChannelCtx, %struct.WmallChannelCtx* %arrayidx78, i32 0, i32 6, !dbg !3806
  %58 = load i16, i16* %decoded_samples79, align 2, !dbg !3807
  %conv80 = zext i16 %58 to i32, !dbg !3807
  %add = add nsw i32 %conv80, %conv75, !dbg !3807
  %conv81 = trunc i32 %add to i16, !dbg !3807
  store i16 %conv81, i16* %decoded_samples79, align 2, !dbg !3807
  %59 = load i32, i32* %i, align 4, !dbg !3808
  %conv82 = trunc i32 %59 to i8, !dbg !3808
  %60 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3809
  %channels_for_cur_subframe83 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %60, i32 0, i32 36, !dbg !3810
  %61 = load i8, i8* %channels_for_cur_subframe83, align 2, !dbg !3810
  %idxprom84 = sext i8 %61 to i64, !dbg !3811
  %62 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3811
  %channel_indexes_for_cur_subframe = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %62, i32 0, i32 37, !dbg !3812
  %arrayidx85 = getelementptr inbounds [8 x i8], [8 x i8]* %channel_indexes_for_cur_subframe, i64 0, i64 %idxprom84, !dbg !3811
  store i8 %conv82, i8* %arrayidx85, align 1, !dbg !3813
  %63 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3814
  %channels_for_cur_subframe86 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %63, i32 0, i32 36, !dbg !3815
  %64 = load i8, i8* %channels_for_cur_subframe86, align 2, !dbg !3816
  %inc87 = add i8 %64, 1, !dbg !3816
  store i8 %inc87, i8* %channels_for_cur_subframe86, align 2, !dbg !3816
  br label %if.end88, !dbg !3817

if.end88:                                         ; preds = %if.then60, %land.lhs.true, %for.body32
  br label %for.inc89, !dbg !3818

for.inc89:                                        ; preds = %if.end88
  %65 = load i32, i32* %i, align 4, !dbg !3819
  %inc90 = add nsw i32 %65, 1, !dbg !3819
  store i32 %inc90, i32* %i, align 4, !dbg !3819
  br label %for.cond27, !dbg !3821, !llvm.loop !3822

for.end91:                                        ; preds = %for.cond27
  %66 = load i32, i32* %total_samples, align 4, !dbg !3824
  %tobool = icmp ne i32 %66, 0, !dbg !3824
  br i1 %tobool, label %if.end93, label %if.then92, !dbg !3826

if.then92:                                        ; preds = %for.end91
  %67 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3827
  %parsed_all_subframes = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %67, i32 0, i32 34, !dbg !3828
  store i8 1, i8* %parsed_all_subframes, align 2, !dbg !3829
  br label %if.end93, !dbg !3827

if.end93:                                         ; preds = %if.then92, %for.end91
  %68 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3830
  %gb94 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %68, i32 0, i32 28, !dbg !3831
  %call95 = call i32 @get_bits1(%struct.GetBitContext* %gb94), !dbg !3832
  %69 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3833
  %seekable_tile = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %69, i32 0, i32 65, !dbg !3834
  store i32 %call95, i32* %seekable_tile, align 4, !dbg !3835
  %70 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3836
  %seekable_tile96 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %70, i32 0, i32 65, !dbg !3838
  %71 = load i32, i32* %seekable_tile96, align 4, !dbg !3838
  %tobool97 = icmp ne i32 %71, 0, !dbg !3836
  br i1 %tobool97, label %if.then98, label %if.end133, !dbg !3839

if.then98:                                        ; preds = %if.end93
  %72 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3840
  call void @clear_codec_buffers(%struct.WmallDecodeCtx* %72), !dbg !3842
  %73 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3843
  %gb99 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %73, i32 0, i32 28, !dbg !3844
  %call100 = call i32 @get_bits1(%struct.GetBitContext* %gb99), !dbg !3845
  %conv101 = trunc i32 %call100 to i8, !dbg !3845
  %74 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3846
  %do_arith_coding = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %74, i32 0, i32 39, !dbg !3847
  store i8 %conv101, i8* %do_arith_coding, align 16, !dbg !3848
  %75 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3849
  %do_arith_coding102 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %75, i32 0, i32 39, !dbg !3851
  %76 = load i8, i8* %do_arith_coding102, align 16, !dbg !3851
  %tobool103 = icmp ne i8 %76, 0, !dbg !3849
  br i1 %tobool103, label %if.then104, label %if.end105, !dbg !3852

if.then104:                                       ; preds = %if.then98
  %77 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3853
  %avctx = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %77, i32 0, i32 0, !dbg !3855
  %78 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 16, !dbg !3855
  %79 = bitcast %struct.AVCodecContext* %78 to i8*, !dbg !3853
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %79, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i32 0, i32 0)), !dbg !3856
  store i32 -1163346256, i32* %retval, align 4, !dbg !3857
  br label %return, !dbg !3857

if.end105:                                        ; preds = %if.then98
  %80 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3858
  %gb106 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %80, i32 0, i32 28, !dbg !3859
  %call107 = call i32 @get_bits1(%struct.GetBitContext* %gb106), !dbg !3860
  %conv108 = trunc i32 %call107 to i8, !dbg !3860
  %81 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3861
  %do_ac_filter = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %81, i32 0, i32 40, !dbg !3862
  store i8 %conv108, i8* %do_ac_filter, align 1, !dbg !3863
  %82 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3864
  %gb109 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %82, i32 0, i32 28, !dbg !3865
  %call110 = call i32 @get_bits1(%struct.GetBitContext* %gb109), !dbg !3866
  %conv111 = trunc i32 %call110 to i8, !dbg !3866
  %83 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3867
  %do_inter_ch_decorr = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %83, i32 0, i32 41, !dbg !3868
  store i8 %conv111, i8* %do_inter_ch_decorr, align 2, !dbg !3869
  %84 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3870
  %gb112 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %84, i32 0, i32 28, !dbg !3871
  %call113 = call i32 @get_bits1(%struct.GetBitContext* %gb112), !dbg !3872
  %conv114 = trunc i32 %call113 to i8, !dbg !3872
  %85 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3873
  %do_mclms = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %85, i32 0, i32 42, !dbg !3874
  store i8 %conv114, i8* %do_mclms, align 1, !dbg !3875
  %86 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3876
  %do_ac_filter115 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %86, i32 0, i32 40, !dbg !3878
  %87 = load i8, i8* %do_ac_filter115, align 1, !dbg !3878
  %tobool116 = icmp ne i8 %87, 0, !dbg !3876
  br i1 %tobool116, label %if.then117, label %if.end118, !dbg !3879

if.then117:                                       ; preds = %if.end105
  %88 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3880
  call void @decode_ac_filter(%struct.WmallDecodeCtx* %88), !dbg !3881
  br label %if.end118, !dbg !3881

if.end118:                                        ; preds = %if.then117, %if.end105
  %89 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3882
  %do_mclms119 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %89, i32 0, i32 42, !dbg !3884
  %90 = load i8, i8* %do_mclms119, align 1, !dbg !3884
  %tobool120 = icmp ne i8 %90, 0, !dbg !3882
  br i1 %tobool120, label %if.then121, label %if.end122, !dbg !3885

if.then121:                                       ; preds = %if.end118
  %91 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3886
  call void @decode_mclms(%struct.WmallDecodeCtx* %91), !dbg !3887
  br label %if.end122, !dbg !3887

if.end122:                                        ; preds = %if.then121, %if.end118
  %92 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3888
  %call123 = call i32 @decode_cdlms(%struct.WmallDecodeCtx* %92), !dbg !3890
  store i32 %call123, i32* %res, align 4, !dbg !3891
  %cmp124 = icmp slt i32 %call123, 0, !dbg !3892
  br i1 %cmp124, label %if.then126, label %if.end127, !dbg !3893

if.then126:                                       ; preds = %if.end122
  %93 = load i32, i32* %res, align 4, !dbg !3894
  store i32 %93, i32* %retval, align 4, !dbg !3895
  br label %return, !dbg !3895

if.end127:                                        ; preds = %if.end122
  %94 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3896
  %gb128 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %94, i32 0, i32 28, !dbg !3897
  %call129 = call i32 @get_bits(%struct.GetBitContext* %gb128, i32 3), !dbg !3898
  %95 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3899
  %movave_scaling = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %95, i32 0, i32 55, !dbg !3900
  store i32 %call129, i32* %movave_scaling, align 16, !dbg !3901
  %96 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3902
  %gb130 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %96, i32 0, i32 28, !dbg !3903
  %call131 = call i32 @get_bits(%struct.GetBitContext* %gb130, i32 8), !dbg !3904
  %add132 = add i32 %call131, 1, !dbg !3905
  %97 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3906
  %quant_stepsize = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %97, i32 0, i32 56, !dbg !3907
  store i32 %add132, i32* %quant_stepsize, align 4, !dbg !3908
  %98 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3909
  call void @reset_codec(%struct.WmallDecodeCtx* %98), !dbg !3910
  br label %if.end133, !dbg !3911

if.end133:                                        ; preds = %if.end127, %if.end93
  %99 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3912
  %gb134 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %99, i32 0, i32 28, !dbg !3913
  %call135 = call i32 @get_bits1(%struct.GetBitContext* %gb134), !dbg !3914
  store i32 %call135, i32* %rawpcm_tile, align 4, !dbg !3915
  %100 = load i32, i32* %rawpcm_tile, align 4, !dbg !3916
  %tobool136 = icmp ne i32 %100, 0, !dbg !3916
  br i1 %tobool136, label %if.end143, label %land.lhs.true137, !dbg !3918

land.lhs.true137:                                 ; preds = %if.end133
  %101 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3919
  %cdlms = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %101, i32 0, i32 58, !dbg !3921
  %arrayidx138 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms, i64 0, i64 0, !dbg !3919
  %arrayidx139 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx138, i64 0, i64 0, !dbg !3919
  %order = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx139, i32 0, i32 0, !dbg !3922
  %102 = load i32, i32* %order, align 16, !dbg !3922
  %tobool140 = icmp ne i32 %102, 0, !dbg !3919
  br i1 %tobool140, label %if.end143, label %if.then141, !dbg !3923

if.then141:                                       ; preds = %land.lhs.true137
  %103 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3924
  %avctx142 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %103, i32 0, i32 0, !dbg !3926
  %104 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx142, align 16, !dbg !3926
  %105 = bitcast %struct.AVCodecContext* %104 to i8*, !dbg !3924
  call void (i8*, i32, i8*, ...) @av_log(i8* %105, i32 48, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i32 0, i32 0)), !dbg !3927
  %106 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3928
  %frame = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %106, i32 0, i32 1, !dbg !3929
  %107 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !3929
  call void @av_frame_unref(%struct.AVFrame* %107), !dbg !3930
  store i32 -1, i32* %retval, align 4, !dbg !3931
  br label %return, !dbg !3931

if.end143:                                        ; preds = %land.lhs.true137, %if.end133
  store i32 0, i32* %i, align 4, !dbg !3932
  br label %for.cond144, !dbg !3934

for.cond144:                                      ; preds = %for.inc152, %if.end143
  %108 = load i32, i32* %i, align 4, !dbg !3935
  %109 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3938
  %num_channels145 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %109, i32 0, i32 12, !dbg !3939
  %110 = load i8, i8* %num_channels145, align 2, !dbg !3939
  %conv146 = sext i8 %110 to i32, !dbg !3938
  %cmp147 = icmp slt i32 %108, %conv146, !dbg !3940
  br i1 %cmp147, label %for.body149, label %for.end154, !dbg !3941

for.body149:                                      ; preds = %for.cond144
  %111 = load i32, i32* %i, align 4, !dbg !3942
  %idxprom150 = sext i32 %111 to i64, !dbg !3943
  %112 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3943
  %is_channel_coded = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %112, i32 0, i32 61, !dbg !3944
  %arrayidx151 = getelementptr inbounds [8 x i32], [8 x i32]* %is_channel_coded, i64 0, i64 %idxprom150, !dbg !3943
  store i32 1, i32* %arrayidx151, align 4, !dbg !3945
  br label %for.inc152, !dbg !3943

for.inc152:                                       ; preds = %for.body149
  %113 = load i32, i32* %i, align 4, !dbg !3946
  %inc153 = add nsw i32 %113, 1, !dbg !3946
  store i32 %inc153, i32* %i, align 4, !dbg !3946
  br label %for.cond144, !dbg !3948, !llvm.loop !3949

for.end154:                                       ; preds = %for.cond144
  %114 = load i32, i32* %rawpcm_tile, align 4, !dbg !3951
  %tobool155 = icmp ne i32 %114, 0, !dbg !3951
  br i1 %tobool155, label %if.end183, label %if.then156, !dbg !3953

if.then156:                                       ; preds = %for.end154
  store i32 0, i32* %i, align 4, !dbg !3954
  br label %for.cond157, !dbg !3957

for.cond157:                                      ; preds = %for.inc168, %if.then156
  %115 = load i32, i32* %i, align 4, !dbg !3958
  %116 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3961
  %num_channels158 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %116, i32 0, i32 12, !dbg !3962
  %117 = load i8, i8* %num_channels158, align 2, !dbg !3962
  %conv159 = sext i8 %117 to i32, !dbg !3961
  %cmp160 = icmp slt i32 %115, %conv159, !dbg !3963
  br i1 %cmp160, label %for.body162, label %for.end170, !dbg !3964

for.body162:                                      ; preds = %for.cond157
  %118 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3965
  %gb163 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %118, i32 0, i32 28, !dbg !3966
  %call164 = call i32 @get_bits1(%struct.GetBitContext* %gb163), !dbg !3967
  %119 = load i32, i32* %i, align 4, !dbg !3968
  %idxprom165 = sext i32 %119 to i64, !dbg !3969
  %120 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3969
  %is_channel_coded166 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %120, i32 0, i32 61, !dbg !3970
  %arrayidx167 = getelementptr inbounds [8 x i32], [8 x i32]* %is_channel_coded166, i64 0, i64 %idxprom165, !dbg !3969
  store i32 %call164, i32* %arrayidx167, align 4, !dbg !3971
  br label %for.inc168, !dbg !3969

for.inc168:                                       ; preds = %for.body162
  %121 = load i32, i32* %i, align 4, !dbg !3972
  %inc169 = add nsw i32 %121, 1, !dbg !3972
  store i32 %inc169, i32* %i, align 4, !dbg !3972
  br label %for.cond157, !dbg !3974, !llvm.loop !3975

for.end170:                                       ; preds = %for.cond157
  %122 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3977
  %bV3RTM = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %122, i32 0, i32 60, !dbg !3979
  %123 = load i32, i32* %bV3RTM, align 16, !dbg !3979
  %tobool171 = icmp ne i32 %123, 0, !dbg !3977
  br i1 %tobool171, label %if.then172, label %if.else, !dbg !3980

if.then172:                                       ; preds = %for.end170
  %124 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3981
  %gb173 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %124, i32 0, i32 28, !dbg !3983
  %call174 = call i32 @get_bits1(%struct.GetBitContext* %gb173), !dbg !3984
  %conv175 = trunc i32 %call174 to i8, !dbg !3984
  %125 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3985
  %do_lpc = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %125, i32 0, i32 43, !dbg !3986
  store i8 %conv175, i8* %do_lpc, align 4, !dbg !3987
  %126 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3988
  %do_lpc176 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %126, i32 0, i32 43, !dbg !3990
  %127 = load i8, i8* %do_lpc176, align 4, !dbg !3990
  %tobool177 = icmp ne i8 %127, 0, !dbg !3988
  br i1 %tobool177, label %if.then178, label %if.end180, !dbg !3991

if.then178:                                       ; preds = %if.then172
  %128 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3992
  call void @decode_lpc(%struct.WmallDecodeCtx* %128), !dbg !3994
  %129 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !3995
  %avctx179 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %129, i32 0, i32 0, !dbg !3996
  %130 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx179, align 16, !dbg !3996
  %131 = bitcast %struct.AVCodecContext* %130 to i8*, !dbg !3995
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %131, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.21, i32 0, i32 0)), !dbg !3997
  br label %if.end180, !dbg !3998

if.end180:                                        ; preds = %if.then178, %if.then172
  br label %if.end182, !dbg !3999

if.else:                                          ; preds = %for.end170
  %132 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4000
  %do_lpc181 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %132, i32 0, i32 43, !dbg !4001
  store i8 0, i8* %do_lpc181, align 4, !dbg !4002
  br label %if.end182

if.end182:                                        ; preds = %if.else, %if.end180
  br label %if.end183, !dbg !4003

if.end183:                                        ; preds = %if.end182, %for.end154
  %133 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4004
  %gb184 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %133, i32 0, i32 28, !dbg !4006
  %call185 = call i32 @get_bits1(%struct.GetBitContext* %gb184), !dbg !4007
  %tobool186 = icmp ne i32 %call185, 0, !dbg !4007
  br i1 %tobool186, label %if.then187, label %if.else190, !dbg !4008

if.then187:                                       ; preds = %if.end183
  %134 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4009
  %gb188 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %134, i32 0, i32 28, !dbg !4010
  %call189 = call i32 @get_bits(%struct.GetBitContext* %gb188, i32 5), !dbg !4011
  store i32 %call189, i32* %padding_zeroes, align 4, !dbg !4012
  br label %if.end191, !dbg !4013

if.else190:                                       ; preds = %if.end183
  store i32 0, i32* %padding_zeroes, align 4, !dbg !4014
  br label %if.end191

if.end191:                                        ; preds = %if.else190, %if.then187
  %135 = load i32, i32* %rawpcm_tile, align 4, !dbg !4015
  %tobool192 = icmp ne i32 %135, 0, !dbg !4015
  br i1 %tobool192, label %if.then193, label %if.else223, !dbg !4017

if.then193:                                       ; preds = %if.end191
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !4018, metadata !1820), !dbg !4020
  %136 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4021
  %bits_per_sample = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %136, i32 0, i32 9, !dbg !4022
  %137 = load i8, i8* %bits_per_sample, align 4, !dbg !4022
  %conv194 = zext i8 %137 to i32, !dbg !4021
  %138 = load i32, i32* %padding_zeroes, align 4, !dbg !4023
  %sub195 = sub nsw i32 %conv194, %138, !dbg !4024
  store i32 %sub195, i32* %bits, align 4, !dbg !4020
  %139 = load i32, i32* %bits, align 4, !dbg !4025
  %cmp196 = icmp sle i32 %139, 0, !dbg !4027
  br i1 %cmp196, label %if.then198, label %if.end200, !dbg !4028

if.then198:                                       ; preds = %if.then193
  %140 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4029
  %avctx199 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %140, i32 0, i32 0, !dbg !4031
  %141 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx199, align 16, !dbg !4031
  %142 = bitcast %struct.AVCodecContext* %141 to i8*, !dbg !4029
  call void (i8*, i32, i8*, ...) @av_log(i8* %142, i32 16, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.22, i32 0, i32 0)), !dbg !4032
  store i32 -1094995529, i32* %retval, align 4, !dbg !4033
  br label %return, !dbg !4033

if.end200:                                        ; preds = %if.then193
  br label %do.body, !dbg !4034, !llvm.loop !4035

do.body:                                          ; preds = %if.end200
  br label %do.end, !dbg !4036

do.end:                                           ; preds = %do.body
  store i32 0, i32* %i, align 4, !dbg !4039
  br label %for.cond201, !dbg !4041

for.cond201:                                      ; preds = %for.inc220, %do.end
  %143 = load i32, i32* %i, align 4, !dbg !4042
  %144 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4045
  %num_channels202 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %144, i32 0, i32 12, !dbg !4046
  %145 = load i8, i8* %num_channels202, align 2, !dbg !4046
  %conv203 = sext i8 %145 to i32, !dbg !4045
  %cmp204 = icmp slt i32 %143, %conv203, !dbg !4047
  br i1 %cmp204, label %for.body206, label %for.end222, !dbg !4048

for.body206:                                      ; preds = %for.cond201
  store i32 0, i32* %j, align 4, !dbg !4049
  br label %for.cond207, !dbg !4051

for.cond207:                                      ; preds = %for.inc217, %for.body206
  %146 = load i32, i32* %j, align 4, !dbg !4052
  %147 = load i32, i32* %subframe_len, align 4, !dbg !4055
  %cmp208 = icmp slt i32 %146, %147, !dbg !4056
  br i1 %cmp208, label %for.body210, label %for.end219, !dbg !4057

for.body210:                                      ; preds = %for.cond207
  %148 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4058
  %gb211 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %148, i32 0, i32 28, !dbg !4059
  %149 = load i32, i32* %bits, align 4, !dbg !4060
  %call212 = call i32 @get_sbits_long(%struct.GetBitContext* %gb211, i32 %149), !dbg !4061
  %150 = load i32, i32* %j, align 4, !dbg !4062
  %idxprom213 = sext i32 %150 to i64, !dbg !4063
  %151 = load i32, i32* %i, align 4, !dbg !4064
  %idxprom214 = sext i32 %151 to i64, !dbg !4063
  %152 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4063
  %channel_residues = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %152, i32 0, i32 67, !dbg !4065
  %arrayidx215 = getelementptr inbounds [8 x [16384 x i32]], [8 x [16384 x i32]]* %channel_residues, i64 0, i64 %idxprom214, !dbg !4063
  %arrayidx216 = getelementptr inbounds [16384 x i32], [16384 x i32]* %arrayidx215, i64 0, i64 %idxprom213, !dbg !4063
  store i32 %call212, i32* %arrayidx216, align 4, !dbg !4066
  br label %for.inc217, !dbg !4063

for.inc217:                                       ; preds = %for.body210
  %153 = load i32, i32* %j, align 4, !dbg !4067
  %inc218 = add nsw i32 %153, 1, !dbg !4067
  store i32 %inc218, i32* %j, align 4, !dbg !4067
  br label %for.cond207, !dbg !4069, !llvm.loop !4070

for.end219:                                       ; preds = %for.cond207
  br label %for.inc220, !dbg !4072

for.inc220:                                       ; preds = %for.end219
  %154 = load i32, i32* %i, align 4, !dbg !4074
  %inc221 = add nsw i32 %154, 1, !dbg !4074
  store i32 %inc221, i32* %i, align 4, !dbg !4074
  br label %for.cond201, !dbg !4076, !llvm.loop !4077

for.end222:                                       ; preds = %for.cond201
  br label %if.end298, !dbg !4079

if.else223:                                       ; preds = %if.end191
  store i32 0, i32* %i, align 4, !dbg !4080
  br label %for.cond224, !dbg !4083

for.cond224:                                      ; preds = %for.inc255, %if.else223
  %155 = load i32, i32* %i, align 4, !dbg !4084
  %156 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4087
  %num_channels225 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %156, i32 0, i32 12, !dbg !4088
  %157 = load i8, i8* %num_channels225, align 2, !dbg !4088
  %conv226 = sext i8 %157 to i32, !dbg !4087
  %cmp227 = icmp slt i32 %155, %conv226, !dbg !4089
  br i1 %cmp227, label %for.body229, label %for.end257, !dbg !4090

for.body229:                                      ; preds = %for.cond224
  %158 = load i32, i32* %i, align 4, !dbg !4091
  %idxprom230 = sext i32 %158 to i64, !dbg !4094
  %159 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4094
  %is_channel_coded231 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %159, i32 0, i32 61, !dbg !4095
  %arrayidx232 = getelementptr inbounds [8 x i32], [8 x i32]* %is_channel_coded231, i64 0, i64 %idxprom230, !dbg !4094
  %160 = load i32, i32* %arrayidx232, align 4, !dbg !4094
  %tobool233 = icmp ne i32 %160, 0, !dbg !4094
  br i1 %tobool233, label %if.then234, label %if.else248, !dbg !4096

if.then234:                                       ; preds = %for.body229
  %161 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4097
  %162 = load i32, i32* %i, align 4, !dbg !4099
  %163 = load i32, i32* %subframe_len, align 4, !dbg !4100
  %call235 = call i32 @decode_channel_residues(%struct.WmallDecodeCtx* %161, i32 %162, i32 %163), !dbg !4101
  %164 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4102
  %seekable_tile236 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %164, i32 0, i32 65, !dbg !4104
  %165 = load i32, i32* %seekable_tile236, align 4, !dbg !4104
  %tobool237 = icmp ne i32 %165, 0, !dbg !4102
  br i1 %tobool237, label %if.then238, label %if.else239, !dbg !4105

if.then238:                                       ; preds = %if.then234
  %166 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4106
  %167 = load i32, i32* %i, align 4, !dbg !4107
  call void @use_high_update_speed(%struct.WmallDecodeCtx* %166, i32 %167), !dbg !4108
  br label %if.end240, !dbg !4108

if.else239:                                       ; preds = %if.then234
  %168 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4109
  %169 = load i32, i32* %i, align 4, !dbg !4110
  call void @use_normal_update_speed(%struct.WmallDecodeCtx* %168, i32 %169), !dbg !4111
  br label %if.end240

if.end240:                                        ; preds = %if.else239, %if.then238
  %170 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4112
  %bits_per_sample241 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %170, i32 0, i32 9, !dbg !4114
  %171 = load i8, i8* %bits_per_sample241, align 4, !dbg !4114
  %conv242 = zext i8 %171 to i32, !dbg !4112
  %cmp243 = icmp sgt i32 %conv242, 16, !dbg !4115
  br i1 %cmp243, label %if.then245, label %if.else246, !dbg !4116

if.then245:                                       ; preds = %if.end240
  %172 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4117
  %173 = load i32, i32* %i, align 4, !dbg !4118
  %174 = load i32, i32* %subframe_len, align 4, !dbg !4119
  call void @revert_cdlms32(%struct.WmallDecodeCtx* %172, i32 %173, i32 0, i32 %174), !dbg !4120
  br label %if.end247, !dbg !4120

if.else246:                                       ; preds = %if.end240
  %175 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4121
  %176 = load i32, i32* %i, align 4, !dbg !4122
  %177 = load i32, i32* %subframe_len, align 4, !dbg !4123
  call void @revert_cdlms16(%struct.WmallDecodeCtx* %175, i32 %176, i32 0, i32 %177), !dbg !4124
  br label %if.end247

if.end247:                                        ; preds = %if.else246, %if.then245
  br label %if.end254, !dbg !4125

if.else248:                                       ; preds = %for.body229
  %178 = load i32, i32* %i, align 4, !dbg !4126
  %idxprom249 = sext i32 %178 to i64, !dbg !4128
  %179 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4128
  %channel_residues250 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %179, i32 0, i32 67, !dbg !4129
  %arrayidx251 = getelementptr inbounds [8 x [16384 x i32]], [8 x [16384 x i32]]* %channel_residues250, i64 0, i64 %idxprom249, !dbg !4128
  %arraydecay = getelementptr inbounds [16384 x i32], [16384 x i32]* %arrayidx251, i32 0, i32 0, !dbg !4130
  %180 = bitcast i32* %arraydecay to i8*, !dbg !4130
  %181 = load i32, i32* %subframe_len, align 4, !dbg !4131
  %conv252 = sext i32 %181 to i64, !dbg !4131
  %mul253 = mul i64 4, %conv252, !dbg !4132
  call void @llvm.memset.p0i8.i64(i8* %180, i8 0, i64 %mul253, i32 8, i1 false), !dbg !4130
  br label %if.end254

if.end254:                                        ; preds = %if.else248, %if.end247
  br label %for.inc255, !dbg !4133

for.inc255:                                       ; preds = %if.end254
  %182 = load i32, i32* %i, align 4, !dbg !4134
  %inc256 = add nsw i32 %182, 1, !dbg !4134
  store i32 %inc256, i32* %i, align 4, !dbg !4134
  br label %for.cond224, !dbg !4136, !llvm.loop !4137

for.end257:                                       ; preds = %for.cond224
  %183 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4139
  %do_mclms258 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %183, i32 0, i32 42, !dbg !4141
  %184 = load i8, i8* %do_mclms258, align 1, !dbg !4141
  %tobool259 = icmp ne i8 %184, 0, !dbg !4139
  br i1 %tobool259, label %if.then260, label %if.end261, !dbg !4142

if.then260:                                       ; preds = %for.end257
  %185 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4143
  %186 = load i32, i32* %subframe_len, align 4, !dbg !4144
  call void @revert_mclms(%struct.WmallDecodeCtx* %185, i32 %186), !dbg !4145
  br label %if.end261, !dbg !4145

if.end261:                                        ; preds = %if.then260, %for.end257
  %187 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4146
  %do_inter_ch_decorr262 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %187, i32 0, i32 41, !dbg !4148
  %188 = load i8, i8* %do_inter_ch_decorr262, align 2, !dbg !4148
  %tobool263 = icmp ne i8 %188, 0, !dbg !4146
  br i1 %tobool263, label %if.then264, label %if.end265, !dbg !4149

if.then264:                                       ; preds = %if.end261
  %189 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4150
  %190 = load i32, i32* %subframe_len, align 4, !dbg !4151
  call void @revert_inter_ch_decorr(%struct.WmallDecodeCtx* %189, i32 %190), !dbg !4152
  br label %if.end265, !dbg !4152

if.end265:                                        ; preds = %if.then264, %if.end261
  %191 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4153
  %do_ac_filter266 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %191, i32 0, i32 40, !dbg !4155
  %192 = load i8, i8* %do_ac_filter266, align 1, !dbg !4155
  %tobool267 = icmp ne i8 %192, 0, !dbg !4153
  br i1 %tobool267, label %if.then268, label %if.end269, !dbg !4156

if.then268:                                       ; preds = %if.end265
  %193 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4157
  %194 = load i32, i32* %subframe_len, align 4, !dbg !4158
  call void @revert_acfilter(%struct.WmallDecodeCtx* %193, i32 %194), !dbg !4159
  br label %if.end269, !dbg !4159

if.end269:                                        ; preds = %if.then268, %if.end265
  %195 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4160
  %quant_stepsize270 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %195, i32 0, i32 56, !dbg !4162
  %196 = load i32, i32* %quant_stepsize270, align 4, !dbg !4162
  %cmp271 = icmp ne i32 %196, 1, !dbg !4163
  br i1 %cmp271, label %if.then273, label %if.end297, !dbg !4164

if.then273:                                       ; preds = %if.end269
  store i32 0, i32* %i, align 4, !dbg !4165
  br label %for.cond274, !dbg !4167

for.cond274:                                      ; preds = %for.inc294, %if.then273
  %197 = load i32, i32* %i, align 4, !dbg !4168
  %198 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4171
  %num_channels275 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %198, i32 0, i32 12, !dbg !4172
  %199 = load i8, i8* %num_channels275, align 2, !dbg !4172
  %conv276 = sext i8 %199 to i32, !dbg !4171
  %cmp277 = icmp slt i32 %197, %conv276, !dbg !4173
  br i1 %cmp277, label %for.body279, label %for.end296, !dbg !4174

for.body279:                                      ; preds = %for.cond274
  store i32 0, i32* %j, align 4, !dbg !4175
  br label %for.cond280, !dbg !4177

for.cond280:                                      ; preds = %for.inc291, %for.body279
  %200 = load i32, i32* %j, align 4, !dbg !4178
  %201 = load i32, i32* %subframe_len, align 4, !dbg !4181
  %cmp281 = icmp slt i32 %200, %201, !dbg !4182
  br i1 %cmp281, label %for.body283, label %for.end293, !dbg !4183

for.body283:                                      ; preds = %for.cond280
  %202 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4184
  %quant_stepsize284 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %202, i32 0, i32 56, !dbg !4185
  %203 = load i32, i32* %quant_stepsize284, align 4, !dbg !4185
  %204 = load i32, i32* %j, align 4, !dbg !4186
  %idxprom285 = sext i32 %204 to i64, !dbg !4187
  %205 = load i32, i32* %i, align 4, !dbg !4188
  %idxprom286 = sext i32 %205 to i64, !dbg !4187
  %206 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4187
  %channel_residues287 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %206, i32 0, i32 67, !dbg !4189
  %arrayidx288 = getelementptr inbounds [8 x [16384 x i32]], [8 x [16384 x i32]]* %channel_residues287, i64 0, i64 %idxprom286, !dbg !4187
  %arrayidx289 = getelementptr inbounds [16384 x i32], [16384 x i32]* %arrayidx288, i64 0, i64 %idxprom285, !dbg !4187
  %207 = load i32, i32* %arrayidx289, align 4, !dbg !4190
  %mul290 = mul nsw i32 %207, %203, !dbg !4190
  store i32 %mul290, i32* %arrayidx289, align 4, !dbg !4190
  br label %for.inc291, !dbg !4187

for.inc291:                                       ; preds = %for.body283
  %208 = load i32, i32* %j, align 4, !dbg !4191
  %inc292 = add nsw i32 %208, 1, !dbg !4191
  store i32 %inc292, i32* %j, align 4, !dbg !4191
  br label %for.cond280, !dbg !4193, !llvm.loop !4194

for.end293:                                       ; preds = %for.cond280
  br label %for.inc294, !dbg !4196

for.inc294:                                       ; preds = %for.end293
  %209 = load i32, i32* %i, align 4, !dbg !4198
  %inc295 = add nsw i32 %209, 1, !dbg !4198
  store i32 %inc295, i32* %i, align 4, !dbg !4198
  br label %for.cond274, !dbg !4200, !llvm.loop !4201

for.end296:                                       ; preds = %for.cond274
  br label %if.end297, !dbg !4203

if.end297:                                        ; preds = %for.end296, %if.end269
  br label %if.end298

if.end298:                                        ; preds = %if.end297, %for.end222
  store i32 0, i32* %i, align 4, !dbg !4205
  br label %for.cond299, !dbg !4207

for.cond299:                                      ; preds = %for.inc355, %if.end298
  %210 = load i32, i32* %i, align 4, !dbg !4208
  %211 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4211
  %channels_for_cur_subframe300 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %211, i32 0, i32 36, !dbg !4212
  %212 = load i8, i8* %channels_for_cur_subframe300, align 2, !dbg !4212
  %conv301 = sext i8 %212 to i32, !dbg !4211
  %cmp302 = icmp slt i32 %210, %conv301, !dbg !4213
  br i1 %cmp302, label %for.body304, label %for.end357, !dbg !4214

for.body304:                                      ; preds = %for.cond299
  call void @llvm.dbg.declare(metadata i32* %c, metadata !4215, metadata !1820), !dbg !4217
  %213 = load i32, i32* %i, align 4, !dbg !4218
  %idxprom305 = sext i32 %213 to i64, !dbg !4219
  %214 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4219
  %channel_indexes_for_cur_subframe306 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %214, i32 0, i32 37, !dbg !4220
  %arrayidx307 = getelementptr inbounds [8 x i8], [8 x i8]* %channel_indexes_for_cur_subframe306, i64 0, i64 %idxprom305, !dbg !4219
  %215 = load i8, i8* %arrayidx307, align 1, !dbg !4219
  %conv308 = sext i8 %215 to i32, !dbg !4219
  store i32 %conv308, i32* %c, align 4, !dbg !4217
  call void @llvm.dbg.declare(metadata i32* %subframe_len309, metadata !4221, metadata !1820), !dbg !4222
  %216 = load i32, i32* %c, align 4, !dbg !4223
  %idxprom310 = sext i32 %216 to i64, !dbg !4224
  %217 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4224
  %channel311 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %217, i32 0, i32 38, !dbg !4225
  %arrayidx312 = getelementptr inbounds [8 x %struct.WmallChannelCtx], [8 x %struct.WmallChannelCtx]* %channel311, i64 0, i64 %idxprom310, !dbg !4224
  %cur_subframe313 = getelementptr inbounds %struct.WmallChannelCtx, %struct.WmallChannelCtx* %arrayidx312, i32 0, i32 5, !dbg !4226
  %218 = load i8, i8* %cur_subframe313, align 4, !dbg !4226
  %idxprom314 = zext i8 %218 to i64, !dbg !4227
  %219 = load i32, i32* %c, align 4, !dbg !4228
  %idxprom315 = sext i32 %219 to i64, !dbg !4227
  %220 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4227
  %channel316 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %220, i32 0, i32 38, !dbg !4229
  %arrayidx317 = getelementptr inbounds [8 x %struct.WmallChannelCtx], [8 x %struct.WmallChannelCtx]* %channel316, i64 0, i64 %idxprom315, !dbg !4227
  %subframe_len318 = getelementptr inbounds %struct.WmallChannelCtx, %struct.WmallChannelCtx* %arrayidx317, i32 0, i32 3, !dbg !4230
  %arrayidx319 = getelementptr inbounds [32 x i16], [32 x i16]* %subframe_len318, i64 0, i64 %idxprom314, !dbg !4227
  %221 = load i16, i16* %arrayidx319, align 2, !dbg !4227
  %conv320 = zext i16 %221 to i32, !dbg !4227
  store i32 %conv320, i32* %subframe_len309, align 4, !dbg !4222
  store i32 0, i32* %j, align 4, !dbg !4231
  br label %for.cond321, !dbg !4233

for.cond321:                                      ; preds = %for.inc352, %for.body304
  %222 = load i32, i32* %j, align 4, !dbg !4234
  %223 = load i32, i32* %subframe_len309, align 4, !dbg !4237
  %cmp322 = icmp slt i32 %222, %223, !dbg !4238
  br i1 %cmp322, label %for.body324, label %for.end354, !dbg !4239

for.body324:                                      ; preds = %for.cond321
  %224 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4240
  %bits_per_sample325 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %224, i32 0, i32 9, !dbg !4243
  %225 = load i8, i8* %bits_per_sample325, align 4, !dbg !4243
  %conv326 = zext i8 %225 to i32, !dbg !4240
  %cmp327 = icmp eq i32 %conv326, 16, !dbg !4244
  br i1 %cmp327, label %if.then329, label %if.else340, !dbg !4245

if.then329:                                       ; preds = %for.body324
  %226 = load i32, i32* %j, align 4, !dbg !4246
  %idxprom330 = sext i32 %226 to i64, !dbg !4248
  %227 = load i32, i32* %c, align 4, !dbg !4249
  %idxprom331 = sext i32 %227 to i64, !dbg !4248
  %228 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4248
  %channel_residues332 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %228, i32 0, i32 67, !dbg !4250
  %arrayidx333 = getelementptr inbounds [8 x [16384 x i32]], [8 x [16384 x i32]]* %channel_residues332, i64 0, i64 %idxprom331, !dbg !4248
  %arrayidx334 = getelementptr inbounds [16384 x i32], [16384 x i32]* %arrayidx333, i64 0, i64 %idxprom330, !dbg !4248
  %229 = load i32, i32* %arrayidx334, align 4, !dbg !4248
  %conv335 = trunc i32 %229 to i16, !dbg !4251
  %conv336 = sext i16 %conv335 to i32, !dbg !4251
  %230 = load i32, i32* %padding_zeroes, align 4, !dbg !4252
  %shl = shl i32 %conv336, %230, !dbg !4253
  %conv337 = trunc i32 %shl to i16, !dbg !4251
  %231 = load i32, i32* %c, align 4, !dbg !4254
  %idxprom338 = sext i32 %231 to i64, !dbg !4255
  %232 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4255
  %samples_16 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %232, i32 0, i32 30, !dbg !4256
  %arrayidx339 = getelementptr inbounds [8 x i16*], [8 x i16*]* %samples_16, i64 0, i64 %idxprom338, !dbg !4255
  %233 = load i16*, i16** %arrayidx339, align 8, !dbg !4257
  %incdec.ptr = getelementptr inbounds i16, i16* %233, i32 1, !dbg !4257
  store i16* %incdec.ptr, i16** %arrayidx339, align 8, !dbg !4257
  store i16 %conv337, i16* %233, align 2, !dbg !4258
  br label %if.end351, !dbg !4259

if.else340:                                       ; preds = %for.body324
  %234 = load i32, i32* %j, align 4, !dbg !4260
  %idxprom341 = sext i32 %234 to i64, !dbg !4262
  %235 = load i32, i32* %c, align 4, !dbg !4263
  %idxprom342 = sext i32 %235 to i64, !dbg !4262
  %236 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4262
  %channel_residues343 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %236, i32 0, i32 67, !dbg !4264
  %arrayidx344 = getelementptr inbounds [8 x [16384 x i32]], [8 x [16384 x i32]]* %channel_residues343, i64 0, i64 %idxprom342, !dbg !4262
  %arrayidx345 = getelementptr inbounds [16384 x i32], [16384 x i32]* %arrayidx344, i64 0, i64 %idxprom341, !dbg !4262
  %237 = load i32, i32* %arrayidx345, align 4, !dbg !4262
  %238 = load i32, i32* %padding_zeroes, align 4, !dbg !4265
  %add346 = add nsw i32 %238, 8, !dbg !4266
  %shl347 = shl i32 %237, %add346, !dbg !4267
  %239 = load i32, i32* %c, align 4, !dbg !4268
  %idxprom348 = sext i32 %239 to i64, !dbg !4269
  %240 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4269
  %samples_32 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %240, i32 0, i32 31, !dbg !4270
  %arrayidx349 = getelementptr inbounds [8 x i32*], [8 x i32*]* %samples_32, i64 0, i64 %idxprom348, !dbg !4269
  %241 = load i32*, i32** %arrayidx349, align 8, !dbg !4271
  %incdec.ptr350 = getelementptr inbounds i32, i32* %241, i32 1, !dbg !4271
  store i32* %incdec.ptr350, i32** %arrayidx349, align 8, !dbg !4271
  store i32 %shl347, i32* %241, align 4, !dbg !4272
  br label %if.end351

if.end351:                                        ; preds = %if.else340, %if.then329
  br label %for.inc352, !dbg !4273

for.inc352:                                       ; preds = %if.end351
  %242 = load i32, i32* %j, align 4, !dbg !4274
  %inc353 = add nsw i32 %242, 1, !dbg !4274
  store i32 %inc353, i32* %j, align 4, !dbg !4274
  br label %for.cond321, !dbg !4276, !llvm.loop !4277

for.end354:                                       ; preds = %for.cond321
  br label %for.inc355, !dbg !4279

for.inc355:                                       ; preds = %for.end354
  %243 = load i32, i32* %i, align 4, !dbg !4280
  %inc356 = add nsw i32 %243, 1, !dbg !4280
  store i32 %inc356, i32* %i, align 4, !dbg !4280
  br label %for.cond299, !dbg !4282, !llvm.loop !4283

for.end357:                                       ; preds = %for.cond299
  store i32 0, i32* %i, align 4, !dbg !4285
  br label %for.cond358, !dbg !4287

for.cond358:                                      ; preds = %for.inc388, %for.end357
  %244 = load i32, i32* %i, align 4, !dbg !4288
  %245 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4291
  %channels_for_cur_subframe359 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %245, i32 0, i32 36, !dbg !4292
  %246 = load i8, i8* %channels_for_cur_subframe359, align 2, !dbg !4292
  %conv360 = sext i8 %246 to i32, !dbg !4291
  %cmp361 = icmp slt i32 %244, %conv360, !dbg !4293
  br i1 %cmp361, label %for.body363, label %for.end390, !dbg !4294

for.body363:                                      ; preds = %for.cond358
  call void @llvm.dbg.declare(metadata i32* %c364, metadata !4295, metadata !1820), !dbg !4297
  %247 = load i32, i32* %i, align 4, !dbg !4298
  %idxprom365 = sext i32 %247 to i64, !dbg !4299
  %248 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4299
  %channel_indexes_for_cur_subframe366 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %248, i32 0, i32 37, !dbg !4300
  %arrayidx367 = getelementptr inbounds [8 x i8], [8 x i8]* %channel_indexes_for_cur_subframe366, i64 0, i64 %idxprom365, !dbg !4299
  %249 = load i8, i8* %arrayidx367, align 1, !dbg !4299
  %conv368 = sext i8 %249 to i32, !dbg !4299
  store i32 %conv368, i32* %c364, align 4, !dbg !4297
  %250 = load i32, i32* %c364, align 4, !dbg !4301
  %idxprom369 = sext i32 %250 to i64, !dbg !4303
  %251 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4303
  %channel370 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %251, i32 0, i32 38, !dbg !4304
  %arrayidx371 = getelementptr inbounds [8 x %struct.WmallChannelCtx], [8 x %struct.WmallChannelCtx]* %channel370, i64 0, i64 %idxprom369, !dbg !4303
  %cur_subframe372 = getelementptr inbounds %struct.WmallChannelCtx, %struct.WmallChannelCtx* %arrayidx371, i32 0, i32 5, !dbg !4305
  %252 = load i8, i8* %cur_subframe372, align 4, !dbg !4305
  %conv373 = zext i8 %252 to i32, !dbg !4303
  %253 = load i32, i32* %c364, align 4, !dbg !4306
  %idxprom374 = sext i32 %253 to i64, !dbg !4307
  %254 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4307
  %channel375 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %254, i32 0, i32 38, !dbg !4308
  %arrayidx376 = getelementptr inbounds [8 x %struct.WmallChannelCtx], [8 x %struct.WmallChannelCtx]* %channel375, i64 0, i64 %idxprom374, !dbg !4307
  %num_subframes = getelementptr inbounds %struct.WmallChannelCtx, %struct.WmallChannelCtx* %arrayidx376, i32 0, i32 2, !dbg !4309
  %255 = load i8, i8* %num_subframes, align 1, !dbg !4309
  %conv377 = zext i8 %255 to i32, !dbg !4307
  %cmp378 = icmp sge i32 %conv373, %conv377, !dbg !4310
  br i1 %cmp378, label %if.then380, label %if.end382, !dbg !4311

if.then380:                                       ; preds = %for.body363
  %256 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4312
  %avctx381 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %256, i32 0, i32 0, !dbg !4314
  %257 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx381, align 16, !dbg !4314
  %258 = bitcast %struct.AVCodecContext* %257 to i8*, !dbg !4312
  call void (i8*, i32, i8*, ...) @av_log(i8* %258, i32 16, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i32 0, i32 0)), !dbg !4315
  store i32 -1094995529, i32* %retval, align 4, !dbg !4316
  br label %return, !dbg !4316

if.end382:                                        ; preds = %for.body363
  %259 = load i32, i32* %c364, align 4, !dbg !4317
  %idxprom383 = sext i32 %259 to i64, !dbg !4318
  %260 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4318
  %channel384 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %260, i32 0, i32 38, !dbg !4319
  %arrayidx385 = getelementptr inbounds [8 x %struct.WmallChannelCtx], [8 x %struct.WmallChannelCtx]* %channel384, i64 0, i64 %idxprom383, !dbg !4318
  %cur_subframe386 = getelementptr inbounds %struct.WmallChannelCtx, %struct.WmallChannelCtx* %arrayidx385, i32 0, i32 5, !dbg !4320
  %261 = load i8, i8* %cur_subframe386, align 4, !dbg !4321
  %inc387 = add i8 %261, 1, !dbg !4321
  store i8 %inc387, i8* %cur_subframe386, align 4, !dbg !4321
  br label %for.inc388, !dbg !4322

for.inc388:                                       ; preds = %if.end382
  %262 = load i32, i32* %i, align 4, !dbg !4323
  %inc389 = add nsw i32 %262, 1, !dbg !4323
  store i32 %inc389, i32* %i, align 4, !dbg !4323
  br label %for.cond358, !dbg !4325, !llvm.loop !4326

for.end390:                                       ; preds = %for.cond358
  store i32 0, i32* %retval, align 4, !dbg !4328
  br label %return, !dbg !4328

return:                                           ; preds = %for.end390, %if.then380, %if.then198, %if.then141, %if.then126, %if.then104
  %263 = load i32, i32* %retval, align 4, !dbg !4329
  ret i32 %263, !dbg !4329
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits_long(%struct.GetBitContext* %s, i32 %n) #4 !dbg !4330 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4331, metadata !1820), !dbg !4336
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !4338, metadata !1820), !dbg !4339
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !4340, metadata !1820), !dbg !4341
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !4342, metadata !1820), !dbg !4343
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !4344, metadata !1820), !dbg !4345
  %0 = load i32, i32* %n.addr, align 4, !dbg !4346
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4347
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %1, i32 0, i32 2, !dbg !4348
  %2 = load i32, i32* %index, align 8, !dbg !4348
  %sub = sub nsw i32 0, %2, !dbg !4349
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4350
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 4, !dbg !4351
  %4 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !4351
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4352
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 2, !dbg !4353
  %6 = load i32, i32* %index1, align 8, !dbg !4353
  %sub2 = sub nsw i32 %4, %6, !dbg !4354
  store i32 %0, i32* %a.addr.i, align 4, !dbg !4355
  store i32 %sub, i32* %amin.addr.i, align 4, !dbg !4355
  store i32 %sub2, i32* %amax.addr.i, align 4, !dbg !4355
  %7 = load i32, i32* %a.addr.i, align 4, !dbg !4356
  %8 = load i32, i32* %amin.addr.i, align 4, !dbg !4358
  %cmp.i = icmp slt i32 %7, %8, !dbg !4359
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !4360

if.then.i:                                        ; preds = %entry
  %9 = load i32, i32* %amin.addr.i, align 4, !dbg !4361
  store i32 %9, i32* %retval.i, align 4, !dbg !4363
  br label %av_clip_c.exit, !dbg !4363

if.else.i:                                        ; preds = %entry
  %10 = load i32, i32* %a.addr.i, align 4, !dbg !4364
  %11 = load i32, i32* %amax.addr.i, align 4, !dbg !4366
  %cmp1.i = icmp sgt i32 %10, %11, !dbg !4367
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !4368

if.then2.i:                                       ; preds = %if.else.i
  %12 = load i32, i32* %amax.addr.i, align 4, !dbg !4369
  store i32 %12, i32* %retval.i, align 4, !dbg !4371
  br label %av_clip_c.exit, !dbg !4371

if.else3.i:                                       ; preds = %if.else.i
  %13 = load i32, i32* %a.addr.i, align 4, !dbg !4372
  store i32 %13, i32* %retval.i, align 4, !dbg !4373
  br label %av_clip_c.exit, !dbg !4373

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %14 = load i32, i32* %retval.i, align 4, !dbg !4374
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4375
  %index3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !4376
  %16 = load i32, i32* %index3, align 8, !dbg !4377
  %add = add nsw i32 %16, %14, !dbg !4377
  store i32 %add, i32* %index3, align 8, !dbg !4377
  ret void, !dbg !4378
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #6

; Function Attrs: nounwind uwtable
define internal i32 @decode_subframe_length(%struct.WmallDecodeCtx* %s, i32 %offset) #1 !dbg !4379 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.WmallDecodeCtx*, align 8
  %offset.addr = alloca i32, align 4
  %frame_len_ratio = alloca i32, align 4
  %subframe_len = alloca i32, align 4
  %len = alloca i32, align 4
  store %struct.WmallDecodeCtx* %s, %struct.WmallDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WmallDecodeCtx** %s.addr, metadata !4382, metadata !1820), !dbg !4383
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !4384, metadata !1820), !dbg !4385
  call void @llvm.dbg.declare(metadata i32* %frame_len_ratio, metadata !4386, metadata !1820), !dbg !4387
  call void @llvm.dbg.declare(metadata i32* %subframe_len, metadata !4388, metadata !1820), !dbg !4389
  call void @llvm.dbg.declare(metadata i32* %len, metadata !4390, metadata !1820), !dbg !4391
  %0 = load i32, i32* %offset.addr, align 4, !dbg !4392
  %1 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4394
  %samples_per_frame = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %1, i32 0, i32 10, !dbg !4395
  %2 = load i16, i16* %samples_per_frame, align 2, !dbg !4395
  %conv = zext i16 %2 to i32, !dbg !4394
  %3 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4396
  %min_samples_per_subframe = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %3, i32 0, i32 17, !dbg !4397
  %4 = load i16, i16* %min_samples_per_subframe, align 16, !dbg !4397
  %conv1 = zext i16 %4 to i32, !dbg !4396
  %sub = sub nsw i32 %conv, %conv1, !dbg !4398
  %cmp = icmp eq i32 %0, %sub, !dbg !4399
  br i1 %cmp, label %if.then, label %if.end, !dbg !4400

if.then:                                          ; preds = %entry
  %5 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4401
  %min_samples_per_subframe3 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %5, i32 0, i32 17, !dbg !4402
  %6 = load i16, i16* %min_samples_per_subframe3, align 16, !dbg !4402
  %conv4 = zext i16 %6 to i32, !dbg !4401
  store i32 %conv4, i32* %retval, align 4, !dbg !4403
  br label %return, !dbg !4403

if.end:                                           ; preds = %entry
  %7 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4404
  %max_num_subframes = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %7, i32 0, i32 14, !dbg !4405
  %8 = load i8, i8* %max_num_subframes, align 4, !dbg !4405
  %conv5 = zext i8 %8 to i32, !dbg !4404
  %sub6 = sub nsw i32 %conv5, 1, !dbg !4406
  %or = or i32 %sub6, 1, !dbg !4407
  %9 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !4408
  %sub7 = sub nsw i32 31, %9, !dbg !4409
  %add = add nsw i32 %sub7, 1, !dbg !4410
  store i32 %add, i32* %len, align 4, !dbg !4411
  %10 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4412
  %gb = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %10, i32 0, i32 28, !dbg !4413
  %11 = load i32, i32* %len, align 4, !dbg !4414
  %call = call i32 @get_bits(%struct.GetBitContext* %gb, i32 %11), !dbg !4415
  store i32 %call, i32* %frame_len_ratio, align 4, !dbg !4416
  %12 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4417
  %min_samples_per_subframe8 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %12, i32 0, i32 17, !dbg !4418
  %13 = load i16, i16* %min_samples_per_subframe8, align 16, !dbg !4418
  %conv9 = zext i16 %13 to i32, !dbg !4417
  %14 = load i32, i32* %frame_len_ratio, align 4, !dbg !4419
  %add10 = add nsw i32 %14, 1, !dbg !4420
  %mul = mul nsw i32 %conv9, %add10, !dbg !4421
  store i32 %mul, i32* %subframe_len, align 4, !dbg !4422
  %15 = load i32, i32* %subframe_len, align 4, !dbg !4423
  %16 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4425
  %min_samples_per_subframe11 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %16, i32 0, i32 17, !dbg !4426
  %17 = load i16, i16* %min_samples_per_subframe11, align 16, !dbg !4426
  %conv12 = zext i16 %17 to i32, !dbg !4425
  %cmp13 = icmp slt i32 %15, %conv12, !dbg !4427
  br i1 %cmp13, label %if.then19, label %lor.lhs.false, !dbg !4428

lor.lhs.false:                                    ; preds = %if.end
  %18 = load i32, i32* %subframe_len, align 4, !dbg !4429
  %19 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4430
  %samples_per_frame15 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %19, i32 0, i32 10, !dbg !4431
  %20 = load i16, i16* %samples_per_frame15, align 2, !dbg !4431
  %conv16 = zext i16 %20 to i32, !dbg !4430
  %cmp17 = icmp sgt i32 %18, %conv16, !dbg !4432
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !4433

if.then19:                                        ; preds = %lor.lhs.false, %if.end
  %21 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4435
  %avctx = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %21, i32 0, i32 0, !dbg !4437
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 16, !dbg !4437
  %23 = bitcast %struct.AVCodecContext* %22 to i8*, !dbg !4435
  %24 = load i32, i32* %subframe_len, align 4, !dbg !4438
  call void (i8*, i32, i8*, ...) @av_log(i8* %23, i32 16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18, i32 0, i32 0), i32 %24), !dbg !4439
  store i32 -1094995529, i32* %retval, align 4, !dbg !4440
  br label %return, !dbg !4440

if.end20:                                         ; preds = %lor.lhs.false
  %25 = load i32, i32* %subframe_len, align 4, !dbg !4441
  store i32 %25, i32* %retval, align 4, !dbg !4442
  br label %return, !dbg !4442

return:                                           ; preds = %if.end20, %if.then19, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !4443
  ret i32 %26, !dbg !4443
}

; Function Attrs: nounwind uwtable
define internal void @clear_codec_buffers(%struct.WmallDecodeCtx* %s) #1 !dbg !4444 {
entry:
  %s.addr = alloca %struct.WmallDecodeCtx*, align 8
  %ich = alloca i32, align 4
  %ilms = alloca i32, align 4
  store %struct.WmallDecodeCtx* %s, %struct.WmallDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WmallDecodeCtx** %s.addr, metadata !4447, metadata !1820), !dbg !4448
  call void @llvm.dbg.declare(metadata i32* %ich, metadata !4449, metadata !1820), !dbg !4450
  call void @llvm.dbg.declare(metadata i32* %ilms, metadata !4451, metadata !1820), !dbg !4452
  %0 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4453
  %acfilter_coeffs = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %0, i32 0, i32 46, !dbg !4454
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %acfilter_coeffs, i32 0, i32 0, !dbg !4455
  %1 = bitcast i16* %arraydecay to i8*, !dbg !4455
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 32, i32 8, i1 false), !dbg !4455
  %2 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4456
  %acfilter_prevvalues = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %2, i32 0, i32 47, !dbg !4457
  %arraydecay1 = getelementptr inbounds [8 x [16 x i32]], [8 x [16 x i32]]* %acfilter_prevvalues, i32 0, i32 0, !dbg !4458
  %3 = bitcast [16 x i32]* %arraydecay1 to i8*, !dbg !4458
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 512, i32 8, i1 false), !dbg !4458
  %4 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4459
  %lpc_coefs = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %4, i32 0, i32 68, !dbg !4460
  %arraydecay2 = getelementptr inbounds [8 x [40 x i32]], [8 x [40 x i32]]* %lpc_coefs, i32 0, i32 0, !dbg !4461
  %5 = bitcast [40 x i32]* %arraydecay2 to i8*, !dbg !4461
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 1280, i32 8, i1 false), !dbg !4461
  %6 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4462
  %mclms_coeffs = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %6, i32 0, i32 50, !dbg !4463
  %arraydecay3 = getelementptr inbounds [2048 x i16], [2048 x i16]* %mclms_coeffs, i32 0, i32 0, !dbg !4464
  %7 = bitcast i16* %arraydecay3 to i8*, !dbg !4464
  call void @llvm.memset.p0i8.i64(i8* %7, i8 0, i64 4096, i32 2, i1 false), !dbg !4464
  %8 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4465
  %mclms_coeffs_cur = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %8, i32 0, i32 51, !dbg !4466
  %arraydecay4 = getelementptr inbounds [64 x i16], [64 x i16]* %mclms_coeffs_cur, i32 0, i32 0, !dbg !4467
  %9 = bitcast i16* %arraydecay4 to i8*, !dbg !4467
  call void @llvm.memset.p0i8.i64(i8* %9, i8 0, i64 128, i32 2, i1 false), !dbg !4467
  %10 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4468
  %mclms_prevvalues = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %10, i32 0, i32 52, !dbg !4469
  %arraydecay5 = getelementptr inbounds [512 x i32], [512 x i32]* %mclms_prevvalues, i32 0, i32 0, !dbg !4470
  %11 = bitcast i32* %arraydecay5 to i8*, !dbg !4470
  call void @llvm.memset.p0i8.i64(i8* %11, i8 0, i64 2048, i32 4, i1 false), !dbg !4470
  %12 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4471
  %mclms_updates = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %12, i32 0, i32 53, !dbg !4472
  %arraydecay6 = getelementptr inbounds [512 x i32], [512 x i32]* %mclms_updates, i32 0, i32 0, !dbg !4473
  %13 = bitcast i32* %arraydecay6 to i8*, !dbg !4473
  call void @llvm.memset.p0i8.i64(i8* %13, i8 0, i64 2048, i32 4, i1 false), !dbg !4473
  store i32 0, i32* %ich, align 4, !dbg !4474
  br label %for.cond, !dbg !4476

for.cond:                                         ; preds = %for.inc31, %entry
  %14 = load i32, i32* %ich, align 4, !dbg !4477
  %15 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4480
  %num_channels = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %15, i32 0, i32 12, !dbg !4481
  %16 = load i8, i8* %num_channels, align 2, !dbg !4481
  %conv = sext i8 %16 to i32, !dbg !4480
  %cmp = icmp slt i32 %14, %conv, !dbg !4482
  br i1 %cmp, label %for.body, label %for.end33, !dbg !4483

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %ilms, align 4, !dbg !4484
  br label %for.cond8, !dbg !4487

for.cond8:                                        ; preds = %for.inc, %for.body
  %17 = load i32, i32* %ilms, align 4, !dbg !4488
  %18 = load i32, i32* %ich, align 4, !dbg !4491
  %idxprom = sext i32 %18 to i64, !dbg !4492
  %19 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4492
  %cdlms_ttl = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %19, i32 0, i32 59, !dbg !4493
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %cdlms_ttl, i64 0, i64 %idxprom, !dbg !4492
  %20 = load i32, i32* %arrayidx, align 4, !dbg !4492
  %cmp9 = icmp slt i32 %17, %20, !dbg !4494
  br i1 %cmp9, label %for.body11, label %for.end, !dbg !4495

for.body11:                                       ; preds = %for.cond8
  %21 = load i32, i32* %ilms, align 4, !dbg !4496
  %idxprom12 = sext i32 %21 to i64, !dbg !4498
  %22 = load i32, i32* %ich, align 4, !dbg !4499
  %idxprom13 = sext i32 %22 to i64, !dbg !4498
  %23 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4498
  %cdlms = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %23, i32 0, i32 58, !dbg !4500
  %arrayidx14 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms, i64 0, i64 %idxprom13, !dbg !4498
  %arrayidx15 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx14, i64 0, i64 %idxprom12, !dbg !4498
  %coefs = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx15, i32 0, i32 4, !dbg !4501
  %arraydecay16 = getelementptr inbounds [264 x i16], [264 x i16]* %coefs, i32 0, i32 0, !dbg !4502
  %24 = bitcast i16* %arraydecay16 to i8*, !dbg !4502
  call void @llvm.memset.p0i8.i64(i8* %24, i8 0, i64 528, i32 16, i1 false), !dbg !4502
  %25 = load i32, i32* %ilms, align 4, !dbg !4503
  %idxprom17 = sext i32 %25 to i64, !dbg !4504
  %26 = load i32, i32* %ich, align 4, !dbg !4505
  %idxprom18 = sext i32 %26 to i64, !dbg !4504
  %27 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4504
  %cdlms19 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %27, i32 0, i32 58, !dbg !4506
  %arrayidx20 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms19, i64 0, i64 %idxprom18, !dbg !4504
  %arrayidx21 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx20, i64 0, i64 %idxprom17, !dbg !4504
  %lms_prevvalues = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx21, i32 0, i32 5, !dbg !4507
  %arraydecay22 = getelementptr inbounds [520 x i32], [520 x i32]* %lms_prevvalues, i32 0, i32 0, !dbg !4508
  %28 = bitcast i32* %arraydecay22 to i8*, !dbg !4508
  call void @llvm.memset.p0i8.i64(i8* %28, i8 0, i64 2080, i32 16, i1 false), !dbg !4508
  %29 = load i32, i32* %ilms, align 4, !dbg !4509
  %idxprom23 = sext i32 %29 to i64, !dbg !4510
  %30 = load i32, i32* %ich, align 4, !dbg !4511
  %idxprom24 = sext i32 %30 to i64, !dbg !4510
  %31 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4510
  %cdlms25 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %31, i32 0, i32 58, !dbg !4512
  %arrayidx26 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms25, i64 0, i64 %idxprom24, !dbg !4510
  %arrayidx27 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx26, i64 0, i64 %idxprom23, !dbg !4510
  %lms_updates = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx27, i32 0, i32 6, !dbg !4513
  %arraydecay28 = getelementptr inbounds [520 x i16], [520 x i16]* %lms_updates, i32 0, i32 0, !dbg !4514
  %32 = bitcast i16* %arraydecay28 to i8*, !dbg !4514
  call void @llvm.memset.p0i8.i64(i8* %32, i8 0, i64 1040, i32 16, i1 false), !dbg !4514
  br label %for.inc, !dbg !4515

for.inc:                                          ; preds = %for.body11
  %33 = load i32, i32* %ilms, align 4, !dbg !4516
  %inc = add nsw i32 %33, 1, !dbg !4516
  store i32 %inc, i32* %ilms, align 4, !dbg !4516
  br label %for.cond8, !dbg !4518, !llvm.loop !4519

for.end:                                          ; preds = %for.cond8
  %34 = load i32, i32* %ich, align 4, !dbg !4521
  %idxprom29 = sext i32 %34 to i64, !dbg !4522
  %35 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4522
  %ave_sum = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %35, i32 0, i32 66, !dbg !4523
  %arrayidx30 = getelementptr inbounds [8 x i32], [8 x i32]* %ave_sum, i64 0, i64 %idxprom29, !dbg !4522
  store i32 0, i32* %arrayidx30, align 4, !dbg !4524
  br label %for.inc31, !dbg !4525

for.inc31:                                        ; preds = %for.end
  %36 = load i32, i32* %ich, align 4, !dbg !4526
  %inc32 = add nsw i32 %36, 1, !dbg !4526
  store i32 %inc32, i32* %ich, align 4, !dbg !4526
  br label %for.cond, !dbg !4528, !llvm.loop !4529

for.end33:                                        ; preds = %for.cond
  ret void, !dbg !4531
}

; Function Attrs: nounwind uwtable
define internal void @decode_ac_filter(%struct.WmallDecodeCtx* %s) #1 !dbg !4532 {
entry:
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !4533, metadata !1820), !dbg !4537
  %n.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr.i, metadata !4541, metadata !1820), !dbg !4542
  %s.addr = alloca %struct.WmallDecodeCtx*, align 8
  %i = alloca i32, align 4
  store %struct.WmallDecodeCtx* %s, %struct.WmallDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WmallDecodeCtx** %s.addr, metadata !4543, metadata !1820), !dbg !4544
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4545, metadata !1820), !dbg !4546
  %0 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4547
  %gb = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %0, i32 0, i32 28, !dbg !4548
  %call = call i32 @get_bits(%struct.GetBitContext* %gb, i32 4), !dbg !4549
  %add = add i32 %call, 1, !dbg !4550
  %conv = trunc i32 %add to i8, !dbg !4549
  %1 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4551
  %acfilter_order = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %1, i32 0, i32 44, !dbg !4552
  store i8 %conv, i8* %acfilter_order, align 1, !dbg !4553
  %2 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4554
  %gb1 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %2, i32 0, i32 28, !dbg !4555
  %call2 = call i32 @get_bits(%struct.GetBitContext* %gb1, i32 4), !dbg !4556
  %conv3 = trunc i32 %call2 to i8, !dbg !4556
  %3 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4557
  %acfilter_scaling = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %3, i32 0, i32 45, !dbg !4558
  store i8 %conv3, i8* %acfilter_scaling, align 2, !dbg !4559
  store i32 0, i32* %i, align 4, !dbg !4560
  br label %for.cond, !dbg !4561

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !4562
  %5 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4564
  %acfilter_order4 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %5, i32 0, i32 44, !dbg !4565
  %6 = load i8, i8* %acfilter_order4, align 1, !dbg !4565
  %conv5 = sext i8 %6 to i32, !dbg !4564
  %cmp = icmp slt i32 %4, %conv5, !dbg !4566
  br i1 %cmp, label %for.body, label %for.end, !dbg !4567

for.body:                                         ; preds = %for.cond
  %7 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4568
  %gb7 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %7, i32 0, i32 28, !dbg !4569
  %8 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4570
  %acfilter_scaling8 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %8, i32 0, i32 45, !dbg !4571
  %9 = load i8, i8* %acfilter_scaling8, align 2, !dbg !4571
  %conv9 = sext i8 %9 to i32, !dbg !4570
  store %struct.GetBitContext* %gb7, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4572
  store i32 %conv9, i32* %n.addr.i, align 4, !dbg !4572
  %10 = load i32, i32* %n.addr.i, align 4, !dbg !4573
  %tobool.i = icmp ne i32 %10, 0, !dbg !4573
  br i1 %tobool.i, label %cond.true.i, label %cond.false.i, !dbg !4573

cond.true.i:                                      ; preds = %for.body
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4574
  %12 = load i32, i32* %n.addr.i, align 4, !dbg !4576
  %call.i = call i32 @get_bits(%struct.GetBitContext* %11, i32 %12) #9, !dbg !4577
  br label %get_bitsz.exit, !dbg !4578

cond.false.i:                                     ; preds = %for.body
  br label %get_bitsz.exit, !dbg !4579

get_bitsz.exit:                                   ; preds = %cond.true.i, %cond.false.i
  %cond.i = phi i32 [ %call.i, %cond.true.i ], [ 0, %cond.false.i ], !dbg !4581
  %add11 = add nsw i32 %cond.i, 1, !dbg !4583
  %conv12 = trunc i32 %add11 to i16, !dbg !4572
  %13 = load i32, i32* %i, align 4, !dbg !4584
  %idxprom = sext i32 %13 to i64, !dbg !4585
  %14 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4585
  %acfilter_coeffs = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %14, i32 0, i32 46, !dbg !4586
  %arrayidx = getelementptr inbounds [16 x i16], [16 x i16]* %acfilter_coeffs, i64 0, i64 %idxprom, !dbg !4585
  store i16 %conv12, i16* %arrayidx, align 2, !dbg !4587
  br label %for.inc, !dbg !4585

for.inc:                                          ; preds = %get_bitsz.exit
  %15 = load i32, i32* %i, align 4, !dbg !4588
  %inc = add nsw i32 %15, 1, !dbg !4588
  store i32 %inc, i32* %i, align 4, !dbg !4588
  br label %for.cond, !dbg !4590, !llvm.loop !4591

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4593
}

; Function Attrs: nounwind uwtable
define internal void @decode_mclms(%struct.WmallDecodeCtx* %s) #1 !dbg !4594 {
entry:
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !4533, metadata !1820), !dbg !4595
  %n.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr.i, metadata !4541, metadata !1820), !dbg !4599
  %s.addr = alloca %struct.WmallDecodeCtx*, align 8
  %i = alloca i32, align 4
  %send_coef_bits = alloca i32, align 4
  %cbits = alloca i32, align 4
  %c = alloca i32, align 4
  store %struct.WmallDecodeCtx* %s, %struct.WmallDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WmallDecodeCtx** %s.addr, metadata !4600, metadata !1820), !dbg !4601
  %0 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4602
  %gb = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %0, i32 0, i32 28, !dbg !4603
  %call = call i32 @get_bits(%struct.GetBitContext* %gb, i32 4), !dbg !4604
  %add = add i32 %call, 1, !dbg !4605
  %mul = mul i32 %add, 2, !dbg !4606
  %conv = trunc i32 %mul to i8, !dbg !4607
  %1 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4608
  %mclms_order = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %1, i32 0, i32 48, !dbg !4609
  store i8 %conv, i8* %mclms_order, align 8, !dbg !4610
  %2 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4611
  %gb1 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %2, i32 0, i32 28, !dbg !4612
  %call2 = call i32 @get_bits(%struct.GetBitContext* %gb1, i32 4), !dbg !4613
  %conv3 = trunc i32 %call2 to i8, !dbg !4613
  %3 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4614
  %mclms_scaling = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %3, i32 0, i32 49, !dbg !4615
  store i8 %conv3, i8* %mclms_scaling, align 1, !dbg !4616
  %4 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4617
  %gb4 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %4, i32 0, i32 28, !dbg !4618
  %call5 = call i32 @get_bits1(%struct.GetBitContext* %gb4), !dbg !4619
  %tobool = icmp ne i32 %call5, 0, !dbg !4619
  br i1 %tobool, label %if.then, label %if.end55, !dbg !4620

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4621, metadata !1820), !dbg !4622
  call void @llvm.dbg.declare(metadata i32* %send_coef_bits, metadata !4623, metadata !1820), !dbg !4624
  call void @llvm.dbg.declare(metadata i32* %cbits, metadata !4625, metadata !1820), !dbg !4626
  %5 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4627
  %mclms_scaling6 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %5, i32 0, i32 49, !dbg !4628
  %6 = load i8, i8* %mclms_scaling6, align 1, !dbg !4628
  %conv7 = sext i8 %6 to i32, !dbg !4627
  %add8 = add nsw i32 %conv7, 1, !dbg !4629
  %or = or i32 %add8, 1, !dbg !4630
  %7 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !4631
  %sub = sub nsw i32 31, %7, !dbg !4632
  store i32 %sub, i32* %cbits, align 4, !dbg !4626
  %8 = load i32, i32* %cbits, align 4, !dbg !4633
  %shl = shl i32 1, %8, !dbg !4635
  %9 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4636
  %mclms_scaling9 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %9, i32 0, i32 49, !dbg !4637
  %10 = load i8, i8* %mclms_scaling9, align 1, !dbg !4637
  %conv10 = sext i8 %10 to i32, !dbg !4636
  %add11 = add nsw i32 %conv10, 1, !dbg !4638
  %cmp = icmp slt i32 %shl, %add11, !dbg !4639
  br i1 %cmp, label %if.then13, label %if.end, !dbg !4640

if.then13:                                        ; preds = %if.then
  %11 = load i32, i32* %cbits, align 4, !dbg !4641
  %inc = add nsw i32 %11, 1, !dbg !4641
  store i32 %inc, i32* %cbits, align 4, !dbg !4641
  br label %if.end, !dbg !4642

if.end:                                           ; preds = %if.then13, %if.then
  %12 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4643
  %gb14 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %12, i32 0, i32 28, !dbg !4644
  %13 = load i32, i32* %cbits, align 4, !dbg !4645
  store %struct.GetBitContext* %gb14, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4646
  store i32 %13, i32* %n.addr.i, align 4, !dbg !4646
  %14 = load i32, i32* %n.addr.i, align 4, !dbg !4647
  %tobool.i = icmp ne i32 %14, 0, !dbg !4647
  br i1 %tobool.i, label %cond.true.i, label %cond.false.i, !dbg !4647

cond.true.i:                                      ; preds = %if.end
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4648
  %16 = load i32, i32* %n.addr.i, align 4, !dbg !4649
  %call.i = call i32 @get_bits(%struct.GetBitContext* %15, i32 %16) #9, !dbg !4650
  br label %get_bitsz.exit, !dbg !4651

cond.false.i:                                     ; preds = %if.end
  br label %get_bitsz.exit, !dbg !4652

get_bitsz.exit:                                   ; preds = %cond.true.i, %cond.false.i
  %cond.i = phi i32 [ %call.i, %cond.true.i ], [ 0, %cond.false.i ], !dbg !4653
  %add16 = add nsw i32 %cond.i, 2, !dbg !4654
  store i32 %add16, i32* %send_coef_bits, align 4, !dbg !4655
  store i32 0, i32* %i, align 4, !dbg !4656
  br label %for.cond, !dbg !4658

for.cond:                                         ; preds = %for.inc, %get_bitsz.exit
  %17 = load i32, i32* %i, align 4, !dbg !4659
  %18 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4662
  %mclms_order17 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %18, i32 0, i32 48, !dbg !4663
  %19 = load i8, i8* %mclms_order17, align 8, !dbg !4663
  %conv18 = sext i8 %19 to i32, !dbg !4662
  %20 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4664
  %num_channels = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %20, i32 0, i32 12, !dbg !4665
  %21 = load i8, i8* %num_channels, align 2, !dbg !4665
  %conv19 = sext i8 %21 to i32, !dbg !4664
  %mul20 = mul nsw i32 %conv18, %conv19, !dbg !4666
  %22 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4667
  %num_channels21 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %22, i32 0, i32 12, !dbg !4668
  %23 = load i8, i8* %num_channels21, align 2, !dbg !4668
  %conv22 = sext i8 %23 to i32, !dbg !4667
  %mul23 = mul nsw i32 %mul20, %conv22, !dbg !4669
  %cmp24 = icmp slt i32 %17, %mul23, !dbg !4670
  br i1 %cmp24, label %for.body, label %for.end, !dbg !4671

for.body:                                         ; preds = %for.cond
  %24 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4672
  %gb26 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %24, i32 0, i32 28, !dbg !4673
  %25 = load i32, i32* %send_coef_bits, align 4, !dbg !4674
  %call27 = call i32 @get_bits(%struct.GetBitContext* %gb26, i32 %25), !dbg !4675
  %conv28 = trunc i32 %call27 to i16, !dbg !4675
  %26 = load i32, i32* %i, align 4, !dbg !4676
  %idxprom = sext i32 %26 to i64, !dbg !4677
  %27 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4677
  %mclms_coeffs = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %27, i32 0, i32 50, !dbg !4678
  %arrayidx = getelementptr inbounds [2048 x i16], [2048 x i16]* %mclms_coeffs, i64 0, i64 %idxprom, !dbg !4677
  store i16 %conv28, i16* %arrayidx, align 2, !dbg !4679
  br label %for.inc, !dbg !4677

for.inc:                                          ; preds = %for.body
  %28 = load i32, i32* %i, align 4, !dbg !4680
  %inc29 = add nsw i32 %28, 1, !dbg !4680
  store i32 %inc29, i32* %i, align 4, !dbg !4680
  br label %for.cond, !dbg !4682, !llvm.loop !4683

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !4685
  br label %for.cond30, !dbg !4687

for.cond30:                                       ; preds = %for.inc52, %for.end
  %29 = load i32, i32* %i, align 4, !dbg !4688
  %30 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4691
  %num_channels31 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %30, i32 0, i32 12, !dbg !4692
  %31 = load i8, i8* %num_channels31, align 2, !dbg !4692
  %conv32 = sext i8 %31 to i32, !dbg !4691
  %cmp33 = icmp slt i32 %29, %conv32, !dbg !4693
  br i1 %cmp33, label %for.body35, label %for.end54, !dbg !4694

for.body35:                                       ; preds = %for.cond30
  call void @llvm.dbg.declare(metadata i32* %c, metadata !4695, metadata !1820), !dbg !4697
  store i32 0, i32* %c, align 4, !dbg !4698
  br label %for.cond36, !dbg !4700

for.cond36:                                       ; preds = %for.inc49, %for.body35
  %32 = load i32, i32* %c, align 4, !dbg !4701
  %33 = load i32, i32* %i, align 4, !dbg !4704
  %cmp37 = icmp slt i32 %32, %33, !dbg !4705
  br i1 %cmp37, label %for.body39, label %for.end51, !dbg !4706

for.body39:                                       ; preds = %for.cond36
  %34 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4707
  %gb40 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %34, i32 0, i32 28, !dbg !4708
  %35 = load i32, i32* %send_coef_bits, align 4, !dbg !4709
  %call41 = call i32 @get_bits(%struct.GetBitContext* %gb40, i32 %35), !dbg !4710
  %conv42 = trunc i32 %call41 to i16, !dbg !4710
  %36 = load i32, i32* %i, align 4, !dbg !4711
  %37 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4712
  %num_channels43 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %37, i32 0, i32 12, !dbg !4713
  %38 = load i8, i8* %num_channels43, align 2, !dbg !4713
  %conv44 = sext i8 %38 to i32, !dbg !4712
  %mul45 = mul nsw i32 %36, %conv44, !dbg !4714
  %39 = load i32, i32* %c, align 4, !dbg !4715
  %add46 = add nsw i32 %mul45, %39, !dbg !4716
  %idxprom47 = sext i32 %add46 to i64, !dbg !4717
  %40 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4717
  %mclms_coeffs_cur = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %40, i32 0, i32 51, !dbg !4718
  %arrayidx48 = getelementptr inbounds [64 x i16], [64 x i16]* %mclms_coeffs_cur, i64 0, i64 %idxprom47, !dbg !4717
  store i16 %conv42, i16* %arrayidx48, align 2, !dbg !4719
  br label %for.inc49, !dbg !4717

for.inc49:                                        ; preds = %for.body39
  %41 = load i32, i32* %c, align 4, !dbg !4720
  %inc50 = add nsw i32 %41, 1, !dbg !4720
  store i32 %inc50, i32* %c, align 4, !dbg !4720
  br label %for.cond36, !dbg !4722, !llvm.loop !4723

for.end51:                                        ; preds = %for.cond36
  br label %for.inc52, !dbg !4725

for.inc52:                                        ; preds = %for.end51
  %42 = load i32, i32* %i, align 4, !dbg !4726
  %inc53 = add nsw i32 %42, 1, !dbg !4726
  store i32 %inc53, i32* %i, align 4, !dbg !4726
  br label %for.cond30, !dbg !4728, !llvm.loop !4729

for.end54:                                        ; preds = %for.cond30
  br label %if.end55, !dbg !4731

if.end55:                                         ; preds = %for.end54, %entry
  ret void, !dbg !4732
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_cdlms(%struct.WmallDecodeCtx* %s) #1 !dbg !1642 {
entry:
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !4533, metadata !1820), !dbg !4733
  %n.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr.i, metadata !4541, metadata !1820), !dbg !4743
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.WmallDecodeCtx*, align 8
  %c = alloca i32, align 4
  %i = alloca i32, align 4
  %cdlms_send_coef = alloca i32, align 4
  %cbits = alloca i32, align 4
  %shift_l = alloca i32, align 4
  %shift_r = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.WmallDecodeCtx* %s, %struct.WmallDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WmallDecodeCtx** %s.addr, metadata !4744, metadata !1820), !dbg !4745
  call void @llvm.dbg.declare(metadata i32* %c, metadata !4746, metadata !1820), !dbg !4747
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4748, metadata !1820), !dbg !4749
  call void @llvm.dbg.declare(metadata i32* %cdlms_send_coef, metadata !4750, metadata !1820), !dbg !4751
  %0 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4752
  %gb = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %0, i32 0, i32 28, !dbg !4753
  %call = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !4754
  store i32 %call, i32* %cdlms_send_coef, align 4, !dbg !4751
  store i32 0, i32* %c, align 4, !dbg !4755
  br label %for.cond, !dbg !4756

for.cond:                                         ; preds = %for.inc209, %entry
  %1 = load i32, i32* %c, align 4, !dbg !4757
  %2 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4759
  %num_channels = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %2, i32 0, i32 12, !dbg !4760
  %3 = load i8, i8* %num_channels, align 2, !dbg !4760
  %conv = sext i8 %3 to i32, !dbg !4759
  %cmp = icmp slt i32 %1, %conv, !dbg !4761
  br i1 %cmp, label %for.body, label %for.end211, !dbg !4762

for.body:                                         ; preds = %for.cond
  %4 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4763
  %gb2 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %4, i32 0, i32 28, !dbg !4764
  %call3 = call i32 @get_bits(%struct.GetBitContext* %gb2, i32 3), !dbg !4765
  %add = add i32 %call3, 1, !dbg !4766
  %5 = load i32, i32* %c, align 4, !dbg !4767
  %idxprom = sext i32 %5 to i64, !dbg !4768
  %6 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4768
  %cdlms_ttl = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %6, i32 0, i32 59, !dbg !4769
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %cdlms_ttl, i64 0, i64 %idxprom, !dbg !4768
  store i32 %add, i32* %arrayidx, align 4, !dbg !4770
  store i32 0, i32* %i, align 4, !dbg !4771
  br label %for.cond4, !dbg !4773

for.cond4:                                        ; preds = %for.inc, %for.body
  %7 = load i32, i32* %i, align 4, !dbg !4774
  %8 = load i32, i32* %c, align 4, !dbg !4777
  %idxprom5 = sext i32 %8 to i64, !dbg !4778
  %9 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4778
  %cdlms_ttl6 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %9, i32 0, i32 59, !dbg !4779
  %arrayidx7 = getelementptr inbounds [8 x i32], [8 x i32]* %cdlms_ttl6, i64 0, i64 %idxprom5, !dbg !4778
  %10 = load i32, i32* %arrayidx7, align 4, !dbg !4778
  %cmp8 = icmp slt i32 %7, %10, !dbg !4780
  br i1 %cmp8, label %for.body10, label %for.end, !dbg !4781

for.body10:                                       ; preds = %for.cond4
  %11 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4782
  %gb11 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %11, i32 0, i32 28, !dbg !4784
  %call12 = call i32 @get_bits(%struct.GetBitContext* %gb11, i32 7), !dbg !4785
  %add13 = add i32 %call12, 1, !dbg !4786
  %mul = mul i32 %add13, 8, !dbg !4787
  %12 = load i32, i32* %i, align 4, !dbg !4788
  %idxprom14 = sext i32 %12 to i64, !dbg !4789
  %13 = load i32, i32* %c, align 4, !dbg !4790
  %idxprom15 = sext i32 %13 to i64, !dbg !4789
  %14 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4789
  %cdlms = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %14, i32 0, i32 58, !dbg !4791
  %arrayidx16 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms, i64 0, i64 %idxprom15, !dbg !4789
  %arrayidx17 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx16, i64 0, i64 %idxprom14, !dbg !4789
  %order = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx17, i32 0, i32 0, !dbg !4792
  store i32 %mul, i32* %order, align 16, !dbg !4793
  %15 = load i32, i32* %i, align 4, !dbg !4794
  %idxprom18 = sext i32 %15 to i64, !dbg !4796
  %16 = load i32, i32* %c, align 4, !dbg !4797
  %idxprom19 = sext i32 %16 to i64, !dbg !4796
  %17 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4796
  %cdlms20 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %17, i32 0, i32 58, !dbg !4798
  %arrayidx21 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms20, i64 0, i64 %idxprom19, !dbg !4796
  %arrayidx22 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx21, i64 0, i64 %idxprom18, !dbg !4796
  %order23 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx22, i32 0, i32 0, !dbg !4799
  %18 = load i32, i32* %order23, align 16, !dbg !4799
  %cmp24 = icmp sgt i32 %18, 256, !dbg !4800
  br i1 %cmp24, label %if.then, label %if.end, !dbg !4801

if.then:                                          ; preds = %for.body10
  %19 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4802
  %avctx = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %19, i32 0, i32 0, !dbg !4804
  %20 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 16, !dbg !4804
  %21 = bitcast %struct.AVCodecContext* %20 to i8*, !dbg !4802
  %22 = load i32, i32* %c, align 4, !dbg !4805
  %23 = load i32, i32* %i, align 4, !dbg !4806
  %24 = load i32, i32* %i, align 4, !dbg !4807
  %idxprom26 = sext i32 %24 to i64, !dbg !4808
  %25 = load i32, i32* %c, align 4, !dbg !4809
  %idxprom27 = sext i32 %25 to i64, !dbg !4808
  %26 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4808
  %cdlms28 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %26, i32 0, i32 58, !dbg !4810
  %arrayidx29 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms28, i64 0, i64 %idxprom27, !dbg !4808
  %arrayidx30 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx29, i64 0, i64 %idxprom26, !dbg !4808
  %order31 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx30, i32 0, i32 0, !dbg !4811
  %27 = load i32, i32* %order31, align 16, !dbg !4811
  call void (i8*, i32, i8*, ...) @av_log(i8* %21, i32 16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.24, i32 0, i32 0), i32 %22, i32 %23, i32 %27, i32 256), !dbg !4812
  %28 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4813
  %cdlms32 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %28, i32 0, i32 58, !dbg !4814
  %arrayidx33 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms32, i64 0, i64 0, !dbg !4813
  %arrayidx34 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx33, i64 0, i64 0, !dbg !4813
  %order35 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx34, i32 0, i32 0, !dbg !4815
  store i32 0, i32* %order35, align 16, !dbg !4816
  store i32 -1094995529, i32* %retval, align 4, !dbg !4817
  br label %return, !dbg !4817

if.end:                                           ; preds = %for.body10
  %29 = load i32, i32* %i, align 4, !dbg !4818
  %idxprom36 = sext i32 %29 to i64, !dbg !4820
  %30 = load i32, i32* %c, align 4, !dbg !4821
  %idxprom37 = sext i32 %30 to i64, !dbg !4820
  %31 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4820
  %cdlms38 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %31, i32 0, i32 58, !dbg !4822
  %arrayidx39 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms38, i64 0, i64 %idxprom37, !dbg !4820
  %arrayidx40 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx39, i64 0, i64 %idxprom36, !dbg !4820
  %order41 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx40, i32 0, i32 0, !dbg !4823
  %32 = load i32, i32* %order41, align 16, !dbg !4823
  %and = and i32 %32, 8, !dbg !4824
  %tobool = icmp ne i32 %and, 0, !dbg !4824
  br i1 %tobool, label %land.lhs.true, label %if.end56, !dbg !4825

land.lhs.true:                                    ; preds = %if.end
  %33 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4826
  %bits_per_sample = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %33, i32 0, i32 9, !dbg !4828
  %34 = load i8, i8* %bits_per_sample, align 4, !dbg !4828
  %conv42 = zext i8 %34 to i32, !dbg !4826
  %cmp43 = icmp eq i32 %conv42, 16, !dbg !4829
  br i1 %cmp43, label %if.then45, label %if.end56, !dbg !4830

if.then45:                                        ; preds = %land.lhs.true
  %35 = load i32, i32* @decode_cdlms.warned, align 4, !dbg !4831
  %tobool46 = icmp ne i32 %35, 0, !dbg !4831
  br i1 %tobool46, label %if.end55, label %if.then47, !dbg !4834

if.then47:                                        ; preds = %if.then45
  %36 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4835
  %avctx48 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %36, i32 0, i32 0, !dbg !4836
  %37 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx48, align 16, !dbg !4836
  %38 = bitcast %struct.AVCodecContext* %37 to i8*, !dbg !4835
  %39 = load i32, i32* %i, align 4, !dbg !4837
  %idxprom49 = sext i32 %39 to i64, !dbg !4838
  %40 = load i32, i32* %c, align 4, !dbg !4839
  %idxprom50 = sext i32 %40 to i64, !dbg !4838
  %41 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4838
  %cdlms51 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %41, i32 0, i32 58, !dbg !4840
  %arrayidx52 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms51, i64 0, i64 %idxprom50, !dbg !4838
  %arrayidx53 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx52, i64 0, i64 %idxprom49, !dbg !4838
  %order54 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx53, i32 0, i32 0, !dbg !4841
  %42 = load i32, i32* %order54, align 16, !dbg !4841
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %38, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i32 0, i32 0), i32 %42), !dbg !4842
  br label %if.end55, !dbg !4842

if.end55:                                         ; preds = %if.then47, %if.then45
  store i32 1, i32* @decode_cdlms.warned, align 4, !dbg !4843
  br label %if.end56, !dbg !4844

if.end56:                                         ; preds = %if.end55, %land.lhs.true, %if.end
  br label %for.inc, !dbg !4845

for.inc:                                          ; preds = %if.end56
  %43 = load i32, i32* %i, align 4, !dbg !4846
  %inc = add nsw i32 %43, 1, !dbg !4846
  store i32 %inc, i32* %i, align 4, !dbg !4846
  br label %for.cond4, !dbg !4848, !llvm.loop !4849

for.end:                                          ; preds = %for.cond4
  store i32 0, i32* %i, align 4, !dbg !4851
  br label %for.cond57, !dbg !4853

for.cond57:                                       ; preds = %for.inc71, %for.end
  %44 = load i32, i32* %i, align 4, !dbg !4854
  %45 = load i32, i32* %c, align 4, !dbg !4857
  %idxprom58 = sext i32 %45 to i64, !dbg !4858
  %46 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4858
  %cdlms_ttl59 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %46, i32 0, i32 59, !dbg !4859
  %arrayidx60 = getelementptr inbounds [8 x i32], [8 x i32]* %cdlms_ttl59, i64 0, i64 %idxprom58, !dbg !4858
  %47 = load i32, i32* %arrayidx60, align 4, !dbg !4858
  %cmp61 = icmp slt i32 %44, %47, !dbg !4860
  br i1 %cmp61, label %for.body63, label %for.end73, !dbg !4861

for.body63:                                       ; preds = %for.cond57
  %48 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4862
  %gb64 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %48, i32 0, i32 28, !dbg !4863
  %call65 = call i32 @get_bits(%struct.GetBitContext* %gb64, i32 4), !dbg !4864
  %49 = load i32, i32* %i, align 4, !dbg !4865
  %idxprom66 = sext i32 %49 to i64, !dbg !4866
  %50 = load i32, i32* %c, align 4, !dbg !4867
  %idxprom67 = sext i32 %50 to i64, !dbg !4866
  %51 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4866
  %cdlms68 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %51, i32 0, i32 58, !dbg !4868
  %arrayidx69 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms68, i64 0, i64 %idxprom67, !dbg !4866
  %arrayidx70 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx69, i64 0, i64 %idxprom66, !dbg !4866
  %scaling = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx70, i32 0, i32 1, !dbg !4869
  store i32 %call65, i32* %scaling, align 4, !dbg !4870
  br label %for.inc71, !dbg !4866

for.inc71:                                        ; preds = %for.body63
  %52 = load i32, i32* %i, align 4, !dbg !4871
  %inc72 = add nsw i32 %52, 1, !dbg !4871
  store i32 %inc72, i32* %i, align 4, !dbg !4871
  br label %for.cond57, !dbg !4873, !llvm.loop !4874

for.end73:                                        ; preds = %for.cond57
  %53 = load i32, i32* %cdlms_send_coef, align 4, !dbg !4876
  %tobool74 = icmp ne i32 %53, 0, !dbg !4876
  br i1 %tobool74, label %if.then75, label %if.end186, !dbg !4877

if.then75:                                        ; preds = %for.end73
  store i32 0, i32* %i, align 4, !dbg !4878
  br label %for.cond76, !dbg !4879

for.cond76:                                       ; preds = %for.inc183, %if.then75
  %54 = load i32, i32* %i, align 4, !dbg !4880
  %55 = load i32, i32* %c, align 4, !dbg !4882
  %idxprom77 = sext i32 %55 to i64, !dbg !4883
  %56 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4883
  %cdlms_ttl78 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %56, i32 0, i32 59, !dbg !4884
  %arrayidx79 = getelementptr inbounds [8 x i32], [8 x i32]* %cdlms_ttl78, i64 0, i64 %idxprom77, !dbg !4883
  %57 = load i32, i32* %arrayidx79, align 4, !dbg !4883
  %cmp80 = icmp slt i32 %54, %57, !dbg !4885
  br i1 %cmp80, label %for.body82, label %for.end185, !dbg !4886

for.body82:                                       ; preds = %for.cond76
  call void @llvm.dbg.declare(metadata i32* %cbits, metadata !4887, metadata !1820), !dbg !4888
  call void @llvm.dbg.declare(metadata i32* %shift_l, metadata !4889, metadata !1820), !dbg !4890
  call void @llvm.dbg.declare(metadata i32* %shift_r, metadata !4891, metadata !1820), !dbg !4892
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4893, metadata !1820), !dbg !4894
  %58 = load i32, i32* %i, align 4, !dbg !4895
  %idxprom83 = sext i32 %58 to i64, !dbg !4896
  %59 = load i32, i32* %c, align 4, !dbg !4897
  %idxprom84 = sext i32 %59 to i64, !dbg !4896
  %60 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4896
  %cdlms85 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %60, i32 0, i32 58, !dbg !4898
  %arrayidx86 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms85, i64 0, i64 %idxprom84, !dbg !4896
  %arrayidx87 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx86, i64 0, i64 %idxprom83, !dbg !4896
  %order88 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx87, i32 0, i32 0, !dbg !4899
  %61 = load i32, i32* %order88, align 16, !dbg !4899
  %or = or i32 %61, 1, !dbg !4900
  %62 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !4901
  %sub = sub nsw i32 31, %62, !dbg !4902
  store i32 %sub, i32* %cbits, align 4, !dbg !4903
  %63 = load i32, i32* %cbits, align 4, !dbg !4904
  %shl = shl i32 1, %63, !dbg !4906
  %64 = load i32, i32* %i, align 4, !dbg !4907
  %idxprom89 = sext i32 %64 to i64, !dbg !4908
  %65 = load i32, i32* %c, align 4, !dbg !4909
  %idxprom90 = sext i32 %65 to i64, !dbg !4908
  %66 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4908
  %cdlms91 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %66, i32 0, i32 58, !dbg !4910
  %arrayidx92 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms91, i64 0, i64 %idxprom90, !dbg !4908
  %arrayidx93 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx92, i64 0, i64 %idxprom89, !dbg !4908
  %order94 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx93, i32 0, i32 0, !dbg !4911
  %67 = load i32, i32* %order94, align 16, !dbg !4911
  %cmp95 = icmp slt i32 %shl, %67, !dbg !4912
  br i1 %cmp95, label %if.then97, label %if.end99, !dbg !4913

if.then97:                                        ; preds = %for.body82
  %68 = load i32, i32* %cbits, align 4, !dbg !4914
  %inc98 = add nsw i32 %68, 1, !dbg !4914
  store i32 %inc98, i32* %cbits, align 4, !dbg !4914
  br label %if.end99, !dbg !4915

if.end99:                                         ; preds = %if.then97, %for.body82
  %69 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4916
  %gb100 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %69, i32 0, i32 28, !dbg !4917
  %70 = load i32, i32* %cbits, align 4, !dbg !4918
  %call101 = call i32 @get_bits(%struct.GetBitContext* %gb100, i32 %70), !dbg !4919
  %add102 = add i32 %call101, 1, !dbg !4920
  %71 = load i32, i32* %i, align 4, !dbg !4921
  %idxprom103 = sext i32 %71 to i64, !dbg !4922
  %72 = load i32, i32* %c, align 4, !dbg !4923
  %idxprom104 = sext i32 %72 to i64, !dbg !4922
  %73 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4922
  %cdlms105 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %73, i32 0, i32 58, !dbg !4924
  %arrayidx106 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms105, i64 0, i64 %idxprom104, !dbg !4922
  %arrayidx107 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx106, i64 0, i64 %idxprom103, !dbg !4922
  %coefsend = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx107, i32 0, i32 2, !dbg !4925
  store i32 %add102, i32* %coefsend, align 8, !dbg !4926
  %74 = load i32, i32* %i, align 4, !dbg !4927
  %idxprom108 = sext i32 %74 to i64, !dbg !4928
  %75 = load i32, i32* %c, align 4, !dbg !4929
  %idxprom109 = sext i32 %75 to i64, !dbg !4928
  %76 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4928
  %cdlms110 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %76, i32 0, i32 58, !dbg !4930
  %arrayidx111 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms110, i64 0, i64 %idxprom109, !dbg !4928
  %arrayidx112 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx111, i64 0, i64 %idxprom108, !dbg !4928
  %scaling113 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx112, i32 0, i32 1, !dbg !4931
  %77 = load i32, i32* %scaling113, align 4, !dbg !4931
  %add114 = add nsw i32 %77, 1, !dbg !4932
  %or115 = or i32 %add114, 1, !dbg !4933
  %78 = call i32 @llvm.ctlz.i32(i32 %or115, i1 true), !dbg !4934
  %sub116 = sub nsw i32 31, %78, !dbg !4935
  store i32 %sub116, i32* %cbits, align 4, !dbg !4936
  %79 = load i32, i32* %cbits, align 4, !dbg !4937
  %shl117 = shl i32 1, %79, !dbg !4939
  %80 = load i32, i32* %i, align 4, !dbg !4940
  %idxprom118 = sext i32 %80 to i64, !dbg !4941
  %81 = load i32, i32* %c, align 4, !dbg !4942
  %idxprom119 = sext i32 %81 to i64, !dbg !4941
  %82 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4941
  %cdlms120 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %82, i32 0, i32 58, !dbg !4943
  %arrayidx121 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms120, i64 0, i64 %idxprom119, !dbg !4941
  %arrayidx122 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx121, i64 0, i64 %idxprom118, !dbg !4941
  %scaling123 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx122, i32 0, i32 1, !dbg !4944
  %83 = load i32, i32* %scaling123, align 4, !dbg !4944
  %add124 = add nsw i32 %83, 1, !dbg !4945
  %cmp125 = icmp slt i32 %shl117, %add124, !dbg !4946
  br i1 %cmp125, label %if.then127, label %if.end129, !dbg !4947

if.then127:                                       ; preds = %if.end99
  %84 = load i32, i32* %cbits, align 4, !dbg !4948
  %inc128 = add nsw i32 %84, 1, !dbg !4948
  store i32 %inc128, i32* %cbits, align 4, !dbg !4948
  br label %if.end129, !dbg !4949

if.end129:                                        ; preds = %if.then127, %if.end99
  %85 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4950
  %gb130 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %85, i32 0, i32 28, !dbg !4951
  %86 = load i32, i32* %cbits, align 4, !dbg !4952
  store %struct.GetBitContext* %gb130, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4953
  store i32 %86, i32* %n.addr.i, align 4, !dbg !4953
  %87 = load i32, i32* %n.addr.i, align 4, !dbg !4954
  %tobool.i = icmp ne i32 %87, 0, !dbg !4954
  br i1 %tobool.i, label %cond.true.i, label %cond.false.i, !dbg !4954

cond.true.i:                                      ; preds = %if.end129
  %88 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !4955
  %89 = load i32, i32* %n.addr.i, align 4, !dbg !4956
  %call.i = call i32 @get_bits(%struct.GetBitContext* %88, i32 %89) #9, !dbg !4957
  br label %get_bitsz.exit, !dbg !4958

cond.false.i:                                     ; preds = %if.end129
  br label %get_bitsz.exit, !dbg !4959

get_bitsz.exit:                                   ; preds = %cond.true.i, %cond.false.i
  %cond.i = phi i32 [ %call.i, %cond.true.i ], [ 0, %cond.false.i ], !dbg !4960
  %add132 = add nsw i32 %cond.i, 2, !dbg !4961
  %90 = load i32, i32* %i, align 4, !dbg !4962
  %idxprom133 = sext i32 %90 to i64, !dbg !4963
  %91 = load i32, i32* %c, align 4, !dbg !4964
  %idxprom134 = sext i32 %91 to i64, !dbg !4963
  %92 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4963
  %cdlms135 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %92, i32 0, i32 58, !dbg !4965
  %arrayidx136 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms135, i64 0, i64 %idxprom134, !dbg !4963
  %arrayidx137 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx136, i64 0, i64 %idxprom133, !dbg !4963
  %bitsend = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx137, i32 0, i32 3, !dbg !4966
  store i32 %add132, i32* %bitsend, align 4, !dbg !4967
  %93 = load i32, i32* %i, align 4, !dbg !4968
  %idxprom138 = sext i32 %93 to i64, !dbg !4969
  %94 = load i32, i32* %c, align 4, !dbg !4970
  %idxprom139 = sext i32 %94 to i64, !dbg !4969
  %95 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4969
  %cdlms140 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %95, i32 0, i32 58, !dbg !4971
  %arrayidx141 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms140, i64 0, i64 %idxprom139, !dbg !4969
  %arrayidx142 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx141, i64 0, i64 %idxprom138, !dbg !4969
  %bitsend143 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx142, i32 0, i32 3, !dbg !4972
  %96 = load i32, i32* %bitsend143, align 4, !dbg !4972
  %sub144 = sub nsw i32 32, %96, !dbg !4973
  store i32 %sub144, i32* %shift_l, align 4, !dbg !4974
  %97 = load i32, i32* %i, align 4, !dbg !4975
  %idxprom145 = sext i32 %97 to i64, !dbg !4976
  %98 = load i32, i32* %c, align 4, !dbg !4977
  %idxprom146 = sext i32 %98 to i64, !dbg !4976
  %99 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4976
  %cdlms147 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %99, i32 0, i32 58, !dbg !4978
  %arrayidx148 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms147, i64 0, i64 %idxprom146, !dbg !4976
  %arrayidx149 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx148, i64 0, i64 %idxprom145, !dbg !4976
  %scaling150 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx149, i32 0, i32 1, !dbg !4979
  %100 = load i32, i32* %scaling150, align 4, !dbg !4979
  %sub151 = sub nsw i32 32, %100, !dbg !4980
  %sub152 = sub nsw i32 %sub151, 2, !dbg !4981
  store i32 %sub152, i32* %shift_r, align 4, !dbg !4982
  store i32 0, i32* %j, align 4, !dbg !4983
  br label %for.cond153, !dbg !4985

for.cond153:                                      ; preds = %for.inc180, %get_bitsz.exit
  %101 = load i32, i32* %j, align 4, !dbg !4986
  %102 = load i32, i32* %i, align 4, !dbg !4989
  %idxprom154 = sext i32 %102 to i64, !dbg !4990
  %103 = load i32, i32* %c, align 4, !dbg !4991
  %idxprom155 = sext i32 %103 to i64, !dbg !4990
  %104 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4990
  %cdlms156 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %104, i32 0, i32 58, !dbg !4992
  %arrayidx157 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms156, i64 0, i64 %idxprom155, !dbg !4990
  %arrayidx158 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx157, i64 0, i64 %idxprom154, !dbg !4990
  %coefsend159 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx158, i32 0, i32 2, !dbg !4993
  %105 = load i32, i32* %coefsend159, align 8, !dbg !4993
  %cmp160 = icmp slt i32 %101, %105, !dbg !4994
  br i1 %cmp160, label %for.body162, label %for.end182, !dbg !4995

for.body162:                                      ; preds = %for.cond153
  %106 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4996
  %gb163 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %106, i32 0, i32 28, !dbg !4997
  %107 = load i32, i32* %i, align 4, !dbg !4998
  %idxprom164 = sext i32 %107 to i64, !dbg !4999
  %108 = load i32, i32* %c, align 4, !dbg !5000
  %idxprom165 = sext i32 %108 to i64, !dbg !4999
  %109 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !4999
  %cdlms166 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %109, i32 0, i32 58, !dbg !5001
  %arrayidx167 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms166, i64 0, i64 %idxprom165, !dbg !4999
  %arrayidx168 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx167, i64 0, i64 %idxprom164, !dbg !4999
  %bitsend169 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx168, i32 0, i32 3, !dbg !5002
  %110 = load i32, i32* %bitsend169, align 4, !dbg !5002
  %call170 = call i32 @get_bits(%struct.GetBitContext* %gb163, i32 %110), !dbg !5003
  %111 = load i32, i32* %shift_l, align 4, !dbg !5004
  %shl171 = shl i32 %call170, %111, !dbg !5005
  %112 = load i32, i32* %shift_r, align 4, !dbg !5006
  %shr = lshr i32 %shl171, %112, !dbg !5007
  %conv172 = trunc i32 %shr to i16, !dbg !5008
  %113 = load i32, i32* %j, align 4, !dbg !5009
  %idxprom173 = sext i32 %113 to i64, !dbg !5010
  %114 = load i32, i32* %i, align 4, !dbg !5011
  %idxprom174 = sext i32 %114 to i64, !dbg !5010
  %115 = load i32, i32* %c, align 4, !dbg !5012
  %idxprom175 = sext i32 %115 to i64, !dbg !5010
  %116 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5010
  %cdlms176 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %116, i32 0, i32 58, !dbg !5013
  %arrayidx177 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms176, i64 0, i64 %idxprom175, !dbg !5010
  %arrayidx178 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx177, i64 0, i64 %idxprom174, !dbg !5010
  %coefs = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx178, i32 0, i32 4, !dbg !5014
  %arrayidx179 = getelementptr inbounds [264 x i16], [264 x i16]* %coefs, i64 0, i64 %idxprom173, !dbg !5010
  store i16 %conv172, i16* %arrayidx179, align 2, !dbg !5015
  br label %for.inc180, !dbg !5010

for.inc180:                                       ; preds = %for.body162
  %117 = load i32, i32* %j, align 4, !dbg !5016
  %inc181 = add nsw i32 %117, 1, !dbg !5016
  store i32 %inc181, i32* %j, align 4, !dbg !5016
  br label %for.cond153, !dbg !5018, !llvm.loop !5019

for.end182:                                       ; preds = %for.cond153
  br label %for.inc183, !dbg !5021

for.inc183:                                       ; preds = %for.end182
  %118 = load i32, i32* %i, align 4, !dbg !5022
  %inc184 = add nsw i32 %118, 1, !dbg !5022
  store i32 %inc184, i32* %i, align 4, !dbg !5022
  br label %for.cond76, !dbg !5024, !llvm.loop !5025

for.end185:                                       ; preds = %for.cond76
  br label %if.end186, !dbg !5027

if.end186:                                        ; preds = %for.end185, %for.end73
  store i32 0, i32* %i, align 4, !dbg !5028
  br label %for.cond187, !dbg !5030

for.cond187:                                      ; preds = %for.inc206, %if.end186
  %119 = load i32, i32* %i, align 4, !dbg !5031
  %120 = load i32, i32* %c, align 4, !dbg !5034
  %idxprom188 = sext i32 %120 to i64, !dbg !5035
  %121 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5035
  %cdlms_ttl189 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %121, i32 0, i32 59, !dbg !5036
  %arrayidx190 = getelementptr inbounds [8 x i32], [8 x i32]* %cdlms_ttl189, i64 0, i64 %idxprom188, !dbg !5035
  %122 = load i32, i32* %arrayidx190, align 4, !dbg !5035
  %cmp191 = icmp slt i32 %119, %122, !dbg !5037
  br i1 %cmp191, label %for.body193, label %for.end208, !dbg !5038

for.body193:                                      ; preds = %for.cond187
  %123 = load i32, i32* %i, align 4, !dbg !5039
  %idxprom194 = sext i32 %123 to i64, !dbg !5040
  %124 = load i32, i32* %c, align 4, !dbg !5041
  %idxprom195 = sext i32 %124 to i64, !dbg !5040
  %125 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5040
  %cdlms196 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %125, i32 0, i32 58, !dbg !5042
  %arrayidx197 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms196, i64 0, i64 %idxprom195, !dbg !5040
  %arrayidx198 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx197, i64 0, i64 %idxprom194, !dbg !5040
  %coefs199 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx198, i32 0, i32 4, !dbg !5043
  %arraydecay = getelementptr inbounds [264 x i16], [264 x i16]* %coefs199, i32 0, i32 0, !dbg !5040
  %126 = load i32, i32* %i, align 4, !dbg !5044
  %idxprom200 = sext i32 %126 to i64, !dbg !5045
  %127 = load i32, i32* %c, align 4, !dbg !5046
  %idxprom201 = sext i32 %127 to i64, !dbg !5045
  %128 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5045
  %cdlms202 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %128, i32 0, i32 58, !dbg !5047
  %arrayidx203 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms202, i64 0, i64 %idxprom201, !dbg !5045
  %arrayidx204 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx203, i64 0, i64 %idxprom200, !dbg !5045
  %order205 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx204, i32 0, i32 0, !dbg !5048
  %129 = load i32, i32* %order205, align 16, !dbg !5048
  %idx.ext = sext i32 %129 to i64, !dbg !5049
  %add.ptr = getelementptr inbounds i16, i16* %arraydecay, i64 %idx.ext, !dbg !5049
  %130 = bitcast i16* %add.ptr to i8*, !dbg !5050
  call void @llvm.memset.p0i8.i64(i8* %130, i8 0, i64 16, i32 2, i1 false), !dbg !5050
  br label %for.inc206, !dbg !5050

for.inc206:                                       ; preds = %for.body193
  %131 = load i32, i32* %i, align 4, !dbg !5051
  %inc207 = add nsw i32 %131, 1, !dbg !5051
  store i32 %inc207, i32* %i, align 4, !dbg !5051
  br label %for.cond187, !dbg !5053, !llvm.loop !5054

for.end208:                                       ; preds = %for.cond187
  br label %for.inc209, !dbg !5056

for.inc209:                                       ; preds = %for.end208
  %132 = load i32, i32* %c, align 4, !dbg !5057
  %inc210 = add nsw i32 %132, 1, !dbg !5057
  store i32 %inc210, i32* %c, align 4, !dbg !5057
  br label %for.cond, !dbg !5059, !llvm.loop !5060

for.end211:                                       ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !5062
  br label %return, !dbg !5062

return:                                           ; preds = %for.end211, %if.then
  %133 = load i32, i32* %retval, align 4, !dbg !5063
  ret i32 %133, !dbg !5063
}

; Function Attrs: nounwind uwtable
define internal void @reset_codec(%struct.WmallDecodeCtx* %s) #1 !dbg !5064 {
entry:
  %s.addr = alloca %struct.WmallDecodeCtx*, align 8
  %ich = alloca i32, align 4
  %ilms = alloca i32, align 4
  store %struct.WmallDecodeCtx* %s, %struct.WmallDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WmallDecodeCtx** %s.addr, metadata !5065, metadata !1820), !dbg !5066
  call void @llvm.dbg.declare(metadata i32* %ich, metadata !5067, metadata !1820), !dbg !5068
  call void @llvm.dbg.declare(metadata i32* %ilms, metadata !5069, metadata !1820), !dbg !5070
  %0 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5071
  %mclms_order = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %0, i32 0, i32 48, !dbg !5072
  %1 = load i8, i8* %mclms_order, align 8, !dbg !5072
  %conv = sext i8 %1 to i32, !dbg !5071
  %2 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5073
  %num_channels = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %2, i32 0, i32 12, !dbg !5074
  %3 = load i8, i8* %num_channels, align 2, !dbg !5074
  %conv1 = sext i8 %3 to i32, !dbg !5073
  %mul = mul nsw i32 %conv, %conv1, !dbg !5075
  %4 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5076
  %mclms_recent = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %4, i32 0, i32 54, !dbg !5077
  store i32 %mul, i32* %mclms_recent, align 4, !dbg !5078
  store i32 0, i32* %ich, align 4, !dbg !5079
  br label %for.cond, !dbg !5081

for.cond:                                         ; preds = %for.inc25, %entry
  %5 = load i32, i32* %ich, align 4, !dbg !5082
  %6 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5085
  %num_channels2 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %6, i32 0, i32 12, !dbg !5086
  %7 = load i8, i8* %num_channels2, align 2, !dbg !5086
  %conv3 = sext i8 %7 to i32, !dbg !5085
  %cmp = icmp slt i32 %5, %conv3, !dbg !5087
  br i1 %cmp, label %for.body, label %for.end27, !dbg !5088

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %ilms, align 4, !dbg !5089
  br label %for.cond5, !dbg !5092

for.cond5:                                        ; preds = %for.inc, %for.body
  %8 = load i32, i32* %ilms, align 4, !dbg !5093
  %9 = load i32, i32* %ich, align 4, !dbg !5096
  %idxprom = sext i32 %9 to i64, !dbg !5097
  %10 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5097
  %cdlms_ttl = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %10, i32 0, i32 59, !dbg !5098
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %cdlms_ttl, i64 0, i64 %idxprom, !dbg !5097
  %11 = load i32, i32* %arrayidx, align 4, !dbg !5097
  %cmp6 = icmp slt i32 %8, %11, !dbg !5099
  br i1 %cmp6, label %for.body8, label %for.end, !dbg !5100

for.body8:                                        ; preds = %for.cond5
  %12 = load i32, i32* %ilms, align 4, !dbg !5101
  %idxprom9 = sext i32 %12 to i64, !dbg !5102
  %13 = load i32, i32* %ich, align 4, !dbg !5103
  %idxprom10 = sext i32 %13 to i64, !dbg !5102
  %14 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5102
  %cdlms = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %14, i32 0, i32 58, !dbg !5104
  %arrayidx11 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms, i64 0, i64 %idxprom10, !dbg !5102
  %arrayidx12 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx11, i64 0, i64 %idxprom9, !dbg !5102
  %order = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx12, i32 0, i32 0, !dbg !5105
  %15 = load i32, i32* %order, align 16, !dbg !5105
  %16 = load i32, i32* %ilms, align 4, !dbg !5106
  %idxprom13 = sext i32 %16 to i64, !dbg !5107
  %17 = load i32, i32* %ich, align 4, !dbg !5108
  %idxprom14 = sext i32 %17 to i64, !dbg !5107
  %18 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5107
  %cdlms15 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %18, i32 0, i32 58, !dbg !5109
  %arrayidx16 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms15, i64 0, i64 %idxprom14, !dbg !5107
  %arrayidx17 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx16, i64 0, i64 %idxprom13, !dbg !5107
  %recent = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx17, i32 0, i32 7, !dbg !5110
  store i32 %15, i32* %recent, align 16, !dbg !5111
  br label %for.inc, !dbg !5107

for.inc:                                          ; preds = %for.body8
  %19 = load i32, i32* %ilms, align 4, !dbg !5112
  %inc = add nsw i32 %19, 1, !dbg !5112
  store i32 %inc, i32* %ilms, align 4, !dbg !5112
  br label %for.cond5, !dbg !5114, !llvm.loop !5115

for.end:                                          ; preds = %for.cond5
  %20 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5117
  %samples_per_frame = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %20, i32 0, i32 10, !dbg !5118
  %21 = load i16, i16* %samples_per_frame, align 2, !dbg !5118
  %conv18 = zext i16 %21 to i32, !dbg !5117
  %22 = load i32, i32* %ich, align 4, !dbg !5119
  %idxprom19 = sext i32 %22 to i64, !dbg !5120
  %23 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5120
  %channel = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %23, i32 0, i32 38, !dbg !5121
  %arrayidx20 = getelementptr inbounds [8 x %struct.WmallChannelCtx], [8 x %struct.WmallChannelCtx]* %channel, i64 0, i64 %idxprom19, !dbg !5120
  %transient_counter = getelementptr inbounds %struct.WmallChannelCtx, %struct.WmallChannelCtx* %arrayidx20, i32 0, i32 8, !dbg !5122
  store i32 %conv18, i32* %transient_counter, align 4, !dbg !5123
  %24 = load i32, i32* %ich, align 4, !dbg !5124
  %idxprom21 = sext i32 %24 to i64, !dbg !5125
  %25 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5125
  %transient = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %25, i32 0, i32 63, !dbg !5126
  %arrayidx22 = getelementptr inbounds [8 x i32], [8 x i32]* %transient, i64 0, i64 %idxprom21, !dbg !5125
  store i32 1, i32* %arrayidx22, align 4, !dbg !5127
  %26 = load i32, i32* %ich, align 4, !dbg !5128
  %idxprom23 = sext i32 %26 to i64, !dbg !5129
  %27 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5129
  %transient_pos = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %27, i32 0, i32 64, !dbg !5130
  %arrayidx24 = getelementptr inbounds [8 x i32], [8 x i32]* %transient_pos, i64 0, i64 %idxprom23, !dbg !5129
  store i32 0, i32* %arrayidx24, align 4, !dbg !5131
  br label %for.inc25, !dbg !5132

for.inc25:                                        ; preds = %for.end
  %28 = load i32, i32* %ich, align 4, !dbg !5133
  %inc26 = add nsw i32 %28, 1, !dbg !5133
  store i32 %inc26, i32* %ich, align 4, !dbg !5133
  br label %for.cond, !dbg !5135, !llvm.loop !5136

for.end27:                                        ; preds = %for.cond
  ret void, !dbg !5138
}

; Function Attrs: nounwind uwtable
define internal void @decode_lpc(%struct.WmallDecodeCtx* %s) #1 !dbg !5139 {
entry:
  %s.addr = alloca %struct.WmallDecodeCtx*, align 8
  %ch = alloca i32, align 4
  %i = alloca i32, align 4
  %cbits = alloca i32, align 4
  store %struct.WmallDecodeCtx* %s, %struct.WmallDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WmallDecodeCtx** %s.addr, metadata !5140, metadata !1820), !dbg !5141
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !5142, metadata !1820), !dbg !5143
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5144, metadata !1820), !dbg !5145
  call void @llvm.dbg.declare(metadata i32* %cbits, metadata !5146, metadata !1820), !dbg !5147
  %0 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5148
  %gb = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %0, i32 0, i32 28, !dbg !5149
  %call = call i32 @get_bits(%struct.GetBitContext* %gb, i32 5), !dbg !5150
  %add = add i32 %call, 1, !dbg !5151
  %1 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5152
  %lpc_order = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %1, i32 0, i32 69, !dbg !5153
  store i32 %add, i32* %lpc_order, align 8, !dbg !5154
  %2 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5155
  %gb1 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %2, i32 0, i32 28, !dbg !5156
  %call2 = call i32 @get_bits(%struct.GetBitContext* %gb1, i32 4), !dbg !5157
  %3 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5158
  %lpc_scaling = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %3, i32 0, i32 70, !dbg !5159
  store i32 %call2, i32* %lpc_scaling, align 4, !dbg !5160
  %4 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5161
  %gb3 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %4, i32 0, i32 28, !dbg !5162
  %call4 = call i32 @get_bits(%struct.GetBitContext* %gb3, i32 3), !dbg !5163
  %add5 = add i32 %call4, 1, !dbg !5164
  %5 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5165
  %lpc_intbits = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %5, i32 0, i32 71, !dbg !5166
  store i32 %add5, i32* %lpc_intbits, align 16, !dbg !5167
  %6 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5168
  %lpc_scaling6 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %6, i32 0, i32 70, !dbg !5169
  %7 = load i32, i32* %lpc_scaling6, align 4, !dbg !5169
  %8 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5170
  %lpc_intbits7 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %8, i32 0, i32 71, !dbg !5171
  %9 = load i32, i32* %lpc_intbits7, align 16, !dbg !5171
  %add8 = add nsw i32 %7, %9, !dbg !5172
  store i32 %add8, i32* %cbits, align 4, !dbg !5173
  store i32 0, i32* %ch, align 4, !dbg !5174
  br label %for.cond, !dbg !5176

for.cond:                                         ; preds = %for.inc19, %entry
  %10 = load i32, i32* %ch, align 4, !dbg !5177
  %11 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5180
  %num_channels = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %11, i32 0, i32 12, !dbg !5181
  %12 = load i8, i8* %num_channels, align 2, !dbg !5181
  %conv = sext i8 %12 to i32, !dbg !5180
  %cmp = icmp slt i32 %10, %conv, !dbg !5182
  br i1 %cmp, label %for.body, label %for.end21, !dbg !5183

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !5184
  br label %for.cond10, !dbg !5186

for.cond10:                                       ; preds = %for.inc, %for.body
  %13 = load i32, i32* %i, align 4, !dbg !5187
  %14 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5190
  %lpc_order11 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %14, i32 0, i32 69, !dbg !5191
  %15 = load i32, i32* %lpc_order11, align 8, !dbg !5191
  %cmp12 = icmp slt i32 %13, %15, !dbg !5192
  br i1 %cmp12, label %for.body14, label %for.end, !dbg !5193

for.body14:                                       ; preds = %for.cond10
  %16 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5194
  %gb15 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %16, i32 0, i32 28, !dbg !5195
  %17 = load i32, i32* %cbits, align 4, !dbg !5196
  %call16 = call i32 @get_sbits(%struct.GetBitContext* %gb15, i32 %17), !dbg !5197
  %18 = load i32, i32* %i, align 4, !dbg !5198
  %idxprom = sext i32 %18 to i64, !dbg !5199
  %19 = load i32, i32* %ch, align 4, !dbg !5200
  %idxprom17 = sext i32 %19 to i64, !dbg !5199
  %20 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5199
  %lpc_coefs = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %20, i32 0, i32 68, !dbg !5201
  %arrayidx = getelementptr inbounds [8 x [40 x i32]], [8 x [40 x i32]]* %lpc_coefs, i64 0, i64 %idxprom17, !dbg !5199
  %arrayidx18 = getelementptr inbounds [40 x i32], [40 x i32]* %arrayidx, i64 0, i64 %idxprom, !dbg !5199
  store i32 %call16, i32* %arrayidx18, align 4, !dbg !5202
  br label %for.inc, !dbg !5199

for.inc:                                          ; preds = %for.body14
  %21 = load i32, i32* %i, align 4, !dbg !5203
  %inc = add nsw i32 %21, 1, !dbg !5203
  store i32 %inc, i32* %i, align 4, !dbg !5203
  br label %for.cond10, !dbg !5205, !llvm.loop !5206

for.end:                                          ; preds = %for.cond10
  br label %for.inc19, !dbg !5208

for.inc19:                                        ; preds = %for.end
  %22 = load i32, i32* %ch, align 4, !dbg !5210
  %inc20 = add nsw i32 %22, 1, !dbg !5210
  store i32 %inc20, i32* %ch, align 4, !dbg !5210
  br label %for.cond, !dbg !5212, !llvm.loop !5213

for.end21:                                        ; preds = %for.cond
  ret void, !dbg !5215
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_sbits_long(%struct.GetBitContext* %s, i32 %n) #4 !dbg !5216 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !5217, metadata !1820), !dbg !5218
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !5219, metadata !1820), !dbg !5220
  %0 = load i32, i32* %n.addr, align 4, !dbg !5221
  %tobool = icmp ne i32 %0, 0, !dbg !5221
  br i1 %tobool, label %if.end, label %if.then, !dbg !5223

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5224
  br label %return, !dbg !5224

if.end:                                           ; preds = %entry
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5225
  %2 = load i32, i32* %n.addr, align 4, !dbg !5226
  %call = call i32 @get_bits_long(%struct.GetBitContext* %1, i32 %2), !dbg !5227
  %3 = load i32, i32* %n.addr, align 4, !dbg !5228
  %call1 = call i32 @sign_extend(i32 %call, i32 %3) #2, !dbg !5229
  store i32 %call1, i32* %retval, align 4, !dbg !5231
  br label %return, !dbg !5231

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !5232
  ret i32 %4, !dbg !5232
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_channel_residues(%struct.WmallDecodeCtx* %s, i32 %ch, i32 %tile_size) #1 !dbg !5233 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !5236, metadata !1820), !dbg !5240
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.WmallDecodeCtx*, align 8
  %ch.addr = alloca i32, align 4
  %tile_size.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %ave_mean = alloca i32, align 4
  %quo = alloca i32, align 4
  %rem = alloca i32, align 4
  %rem_bits = alloca i32, align 4
  %residue = alloca i32, align 4
  store %struct.WmallDecodeCtx* %s, %struct.WmallDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WmallDecodeCtx** %s.addr, metadata !5247, metadata !1820), !dbg !5248
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !5249, metadata !1820), !dbg !5250
  store i32 %tile_size, i32* %tile_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tile_size.addr, metadata !5251, metadata !1820), !dbg !5252
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5253, metadata !1820), !dbg !5254
  store i32 0, i32* %i, align 4, !dbg !5254
  call void @llvm.dbg.declare(metadata i32* %ave_mean, metadata !5255, metadata !1820), !dbg !5256
  %0 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5257
  %gb = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %0, i32 0, i32 28, !dbg !5258
  %call = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !5259
  %1 = load i32, i32* %ch.addr, align 4, !dbg !5260
  %idxprom = sext i32 %1 to i64, !dbg !5261
  %2 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5261
  %transient = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %2, i32 0, i32 63, !dbg !5262
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %transient, i64 0, i64 %idxprom, !dbg !5261
  store i32 %call, i32* %arrayidx, align 4, !dbg !5263
  %3 = load i32, i32* %ch.addr, align 4, !dbg !5264
  %idxprom1 = sext i32 %3 to i64, !dbg !5266
  %4 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5266
  %transient2 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %4, i32 0, i32 63, !dbg !5267
  %arrayidx3 = getelementptr inbounds [8 x i32], [8 x i32]* %transient2, i64 0, i64 %idxprom1, !dbg !5266
  %5 = load i32, i32* %arrayidx3, align 4, !dbg !5266
  %tobool = icmp ne i32 %5, 0, !dbg !5266
  br i1 %tobool, label %if.then, label %if.else, !dbg !5268

if.then:                                          ; preds = %entry
  %6 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5269
  %gb4 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %6, i32 0, i32 28, !dbg !5271
  %7 = load i32, i32* %tile_size.addr, align 4, !dbg !5272
  %or = or i32 %7, 1, !dbg !5273
  %8 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !5274
  %sub = sub nsw i32 31, %8, !dbg !5275
  %call5 = call i32 @get_bits(%struct.GetBitContext* %gb4, i32 %sub), !dbg !5276
  %9 = load i32, i32* %ch.addr, align 4, !dbg !5278
  %idxprom6 = sext i32 %9 to i64, !dbg !5279
  %10 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5279
  %transient_pos = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %10, i32 0, i32 64, !dbg !5280
  %arrayidx7 = getelementptr inbounds [8 x i32], [8 x i32]* %transient_pos, i64 0, i64 %idxprom6, !dbg !5279
  store i32 %call5, i32* %arrayidx7, align 4, !dbg !5281
  %11 = load i32, i32* %ch.addr, align 4, !dbg !5282
  %idxprom8 = sext i32 %11 to i64, !dbg !5284
  %12 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5284
  %transient_pos9 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %12, i32 0, i32 64, !dbg !5285
  %arrayidx10 = getelementptr inbounds [8 x i32], [8 x i32]* %transient_pos9, i64 0, i64 %idxprom8, !dbg !5284
  %13 = load i32, i32* %arrayidx10, align 4, !dbg !5284
  %tobool11 = icmp ne i32 %13, 0, !dbg !5284
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !5286

if.then12:                                        ; preds = %if.then
  %14 = load i32, i32* %ch.addr, align 4, !dbg !5287
  %idxprom13 = sext i32 %14 to i64, !dbg !5288
  %15 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5288
  %transient14 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %15, i32 0, i32 63, !dbg !5289
  %arrayidx15 = getelementptr inbounds [8 x i32], [8 x i32]* %transient14, i64 0, i64 %idxprom13, !dbg !5288
  store i32 0, i32* %arrayidx15, align 4, !dbg !5290
  br label %if.end, !dbg !5288

if.end:                                           ; preds = %if.then12, %if.then
  %16 = load i32, i32* %ch.addr, align 4, !dbg !5291
  %idxprom16 = sext i32 %16 to i64, !dbg !5292
  %17 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5292
  %channel = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %17, i32 0, i32 38, !dbg !5293
  %arrayidx17 = getelementptr inbounds [8 x %struct.WmallChannelCtx], [8 x %struct.WmallChannelCtx]* %channel, i64 0, i64 %idxprom16, !dbg !5292
  %transient_counter = getelementptr inbounds %struct.WmallChannelCtx, %struct.WmallChannelCtx* %arrayidx17, i32 0, i32 8, !dbg !5294
  %18 = load i32, i32* %transient_counter, align 4, !dbg !5294
  %19 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5295
  %samples_per_frame = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %19, i32 0, i32 10, !dbg !5296
  %20 = load i16, i16* %samples_per_frame, align 2, !dbg !5296
  %conv = zext i16 %20 to i32, !dbg !5295
  %div = sdiv i32 %conv, 2, !dbg !5297
  %cmp = icmp sgt i32 %18, %div, !dbg !5298
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5299

cond.true:                                        ; preds = %if.end
  %21 = load i32, i32* %ch.addr, align 4, !dbg !5300
  %idxprom19 = sext i32 %21 to i64, !dbg !5301
  %22 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5301
  %channel20 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %22, i32 0, i32 38, !dbg !5302
  %arrayidx21 = getelementptr inbounds [8 x %struct.WmallChannelCtx], [8 x %struct.WmallChannelCtx]* %channel20, i64 0, i64 %idxprom19, !dbg !5301
  %transient_counter22 = getelementptr inbounds %struct.WmallChannelCtx, %struct.WmallChannelCtx* %arrayidx21, i32 0, i32 8, !dbg !5303
  %23 = load i32, i32* %transient_counter22, align 4, !dbg !5303
  br label %cond.end, !dbg !5304

cond.false:                                       ; preds = %if.end
  %24 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5305
  %samples_per_frame23 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %24, i32 0, i32 10, !dbg !5307
  %25 = load i16, i16* %samples_per_frame23, align 2, !dbg !5307
  %conv24 = zext i16 %25 to i32, !dbg !5305
  %div25 = sdiv i32 %conv24, 2, !dbg !5308
  br label %cond.end, !dbg !5309

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %23, %cond.true ], [ %div25, %cond.false ], !dbg !5310
  %26 = load i32, i32* %ch.addr, align 4, !dbg !5312
  %idxprom26 = sext i32 %26 to i64, !dbg !5313
  %27 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5313
  %channel27 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %27, i32 0, i32 38, !dbg !5314
  %arrayidx28 = getelementptr inbounds [8 x %struct.WmallChannelCtx], [8 x %struct.WmallChannelCtx]* %channel27, i64 0, i64 %idxprom26, !dbg !5313
  %transient_counter29 = getelementptr inbounds %struct.WmallChannelCtx, %struct.WmallChannelCtx* %arrayidx28, i32 0, i32 8, !dbg !5315
  store i32 %cond, i32* %transient_counter29, align 4, !dbg !5316
  br label %if.end40, !dbg !5317

if.else:                                          ; preds = %entry
  %28 = load i32, i32* %ch.addr, align 4, !dbg !5318
  %idxprom30 = sext i32 %28 to i64, !dbg !5321
  %29 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5321
  %channel31 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %29, i32 0, i32 38, !dbg !5322
  %arrayidx32 = getelementptr inbounds [8 x %struct.WmallChannelCtx], [8 x %struct.WmallChannelCtx]* %channel31, i64 0, i64 %idxprom30, !dbg !5321
  %transient_counter33 = getelementptr inbounds %struct.WmallChannelCtx, %struct.WmallChannelCtx* %arrayidx32, i32 0, i32 8, !dbg !5323
  %30 = load i32, i32* %transient_counter33, align 4, !dbg !5323
  %tobool34 = icmp ne i32 %30, 0, !dbg !5321
  br i1 %tobool34, label %if.then35, label %if.end39, !dbg !5321

if.then35:                                        ; preds = %if.else
  %31 = load i32, i32* %ch.addr, align 4, !dbg !5324
  %idxprom36 = sext i32 %31 to i64, !dbg !5325
  %32 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5325
  %transient37 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %32, i32 0, i32 63, !dbg !5326
  %arrayidx38 = getelementptr inbounds [8 x i32], [8 x i32]* %transient37, i64 0, i64 %idxprom36, !dbg !5325
  store i32 1, i32* %arrayidx38, align 4, !dbg !5327
  br label %if.end39, !dbg !5325

if.end39:                                         ; preds = %if.then35, %if.else
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %cond.end
  %33 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5328
  %seekable_tile = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %33, i32 0, i32 65, !dbg !5330
  %34 = load i32, i32* %seekable_tile, align 4, !dbg !5330
  %tobool41 = icmp ne i32 %34, 0, !dbg !5328
  br i1 %tobool41, label %if.then42, label %if.end48, !dbg !5331

if.then42:                                        ; preds = %if.end40
  %35 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5332
  %gb43 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %35, i32 0, i32 28, !dbg !5334
  %36 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5335
  %bits_per_sample = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %36, i32 0, i32 9, !dbg !5336
  %37 = load i8, i8* %bits_per_sample, align 4, !dbg !5336
  %conv44 = zext i8 %37 to i32, !dbg !5335
  %call45 = call i32 @get_bits(%struct.GetBitContext* %gb43, i32 %conv44), !dbg !5337
  store i32 %call45, i32* %ave_mean, align 4, !dbg !5338
  %38 = load i32, i32* %ave_mean, align 4, !dbg !5339
  %39 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5340
  %movave_scaling = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %39, i32 0, i32 55, !dbg !5341
  %40 = load i32, i32* %movave_scaling, align 16, !dbg !5341
  %add = add nsw i32 %40, 1, !dbg !5342
  %shl = shl i32 %38, %add, !dbg !5343
  %41 = load i32, i32* %ch.addr, align 4, !dbg !5344
  %idxprom46 = sext i32 %41 to i64, !dbg !5345
  %42 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5345
  %ave_sum = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %42, i32 0, i32 66, !dbg !5346
  %arrayidx47 = getelementptr inbounds [8 x i32], [8 x i32]* %ave_sum, i64 0, i64 %idxprom46, !dbg !5345
  store i32 %shl, i32* %arrayidx47, align 4, !dbg !5347
  br label %if.end48, !dbg !5348

if.end48:                                         ; preds = %if.then42, %if.end40
  %43 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5349
  %seekable_tile49 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %43, i32 0, i32 65, !dbg !5351
  %44 = load i32, i32* %seekable_tile49, align 4, !dbg !5351
  %tobool50 = icmp ne i32 %44, 0, !dbg !5349
  br i1 %tobool50, label %if.then51, label %if.end72, !dbg !5352

if.then51:                                        ; preds = %if.end48
  %45 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5353
  %do_inter_ch_decorr = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %45, i32 0, i32 41, !dbg !5356
  %46 = load i8, i8* %do_inter_ch_decorr, align 2, !dbg !5356
  %tobool52 = icmp ne i8 %46, 0, !dbg !5353
  br i1 %tobool52, label %if.then53, label %if.else62, !dbg !5357

if.then53:                                        ; preds = %if.then51
  %47 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5358
  %gb54 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %47, i32 0, i32 28, !dbg !5359
  %48 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5360
  %bits_per_sample55 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %48, i32 0, i32 9, !dbg !5361
  %49 = load i8, i8* %bits_per_sample55, align 4, !dbg !5361
  %conv56 = zext i8 %49 to i32, !dbg !5360
  %add57 = add nsw i32 %conv56, 1, !dbg !5362
  %call58 = call i32 @get_sbits_long(%struct.GetBitContext* %gb54, i32 %add57), !dbg !5363
  %50 = load i32, i32* %ch.addr, align 4, !dbg !5364
  %idxprom59 = sext i32 %50 to i64, !dbg !5365
  %51 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5365
  %channel_residues = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %51, i32 0, i32 67, !dbg !5366
  %arrayidx60 = getelementptr inbounds [8 x [16384 x i32]], [8 x [16384 x i32]]* %channel_residues, i64 0, i64 %idxprom59, !dbg !5365
  %arrayidx61 = getelementptr inbounds [16384 x i32], [16384 x i32]* %arrayidx60, i64 0, i64 0, !dbg !5365
  store i32 %call58, i32* %arrayidx61, align 8, !dbg !5367
  br label %if.end71, !dbg !5365

if.else62:                                        ; preds = %if.then51
  %52 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5368
  %gb63 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %52, i32 0, i32 28, !dbg !5369
  %53 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5370
  %bits_per_sample64 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %53, i32 0, i32 9, !dbg !5371
  %54 = load i8, i8* %bits_per_sample64, align 4, !dbg !5371
  %conv65 = zext i8 %54 to i32, !dbg !5370
  %call66 = call i32 @get_sbits_long(%struct.GetBitContext* %gb63, i32 %conv65), !dbg !5372
  %55 = load i32, i32* %ch.addr, align 4, !dbg !5373
  %idxprom67 = sext i32 %55 to i64, !dbg !5374
  %56 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5374
  %channel_residues68 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %56, i32 0, i32 67, !dbg !5375
  %arrayidx69 = getelementptr inbounds [8 x [16384 x i32]], [8 x [16384 x i32]]* %channel_residues68, i64 0, i64 %idxprom67, !dbg !5374
  %arrayidx70 = getelementptr inbounds [16384 x i32], [16384 x i32]* %arrayidx69, i64 0, i64 0, !dbg !5374
  store i32 %call66, i32* %arrayidx70, align 8, !dbg !5376
  br label %if.end71

if.end71:                                         ; preds = %if.else62, %if.then53
  %57 = load i32, i32* %i, align 4, !dbg !5377
  %inc = add nsw i32 %57, 1, !dbg !5377
  store i32 %inc, i32* %i, align 4, !dbg !5377
  br label %if.end72, !dbg !5378

if.end72:                                         ; preds = %if.end71, %if.end48
  br label %for.cond, !dbg !5379

for.cond:                                         ; preds = %for.inc, %if.end72
  %58 = load i32, i32* %i, align 4, !dbg !5380
  %59 = load i32, i32* %tile_size.addr, align 4, !dbg !5382
  %cmp73 = icmp slt i32 %58, %59, !dbg !5383
  br i1 %cmp73, label %for.body, label %for.end, !dbg !5384

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %quo, metadata !5385, metadata !1820), !dbg !5386
  store i32 0, i32* %quo, align 4, !dbg !5386
  call void @llvm.dbg.declare(metadata i32* %rem, metadata !5387, metadata !1820), !dbg !5388
  call void @llvm.dbg.declare(metadata i32* %rem_bits, metadata !5389, metadata !1820), !dbg !5390
  call void @llvm.dbg.declare(metadata i32* %residue, metadata !5391, metadata !1820), !dbg !5392
  br label %while.cond, !dbg !5393

while.cond:                                       ; preds = %if.end84, %for.body
  %60 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5394
  %gb75 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %60, i32 0, i32 28, !dbg !5396
  %call76 = call i32 @get_bits1(%struct.GetBitContext* %gb75), !dbg !5397
  %tobool77 = icmp ne i32 %call76, 0, !dbg !5398
  br i1 %tobool77, label %while.body, label %while.end, !dbg !5398

while.body:                                       ; preds = %while.cond
  %61 = load i32, i32* %quo, align 4, !dbg !5399
  %inc78 = add nsw i32 %61, 1, !dbg !5399
  store i32 %inc78, i32* %quo, align 4, !dbg !5399
  %62 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5401
  %gb79 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %62, i32 0, i32 28, !dbg !5403
  %call80 = call i32 @get_bits_left(%struct.GetBitContext* %gb79), !dbg !5404
  %cmp81 = icmp sle i32 %call80, 0, !dbg !5405
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !5406

if.then83:                                        ; preds = %while.body
  store i32 -1, i32* %retval, align 4, !dbg !5407
  br label %return, !dbg !5407

if.end84:                                         ; preds = %while.body
  br label %while.cond, !dbg !5408, !llvm.loop !5410

while.end:                                        ; preds = %while.cond
  %63 = load i32, i32* %quo, align 4, !dbg !5411
  %cmp85 = icmp sge i32 %63, 32, !dbg !5413
  br i1 %cmp85, label %if.then87, label %if.end94, !dbg !5414

if.then87:                                        ; preds = %while.end
  %64 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5415
  %gb88 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %64, i32 0, i32 28, !dbg !5416
  %65 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5417
  %gb89 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %65, i32 0, i32 28, !dbg !5418
  %call90 = call i32 @get_bits(%struct.GetBitContext* %gb89, i32 5), !dbg !5419
  %add91 = add i32 %call90, 1, !dbg !5420
  %call92 = call i32 @get_bits_long(%struct.GetBitContext* %gb88, i32 %add91), !dbg !5421
  %66 = load i32, i32* %quo, align 4, !dbg !5423
  %add93 = add i32 %66, %call92, !dbg !5423
  store i32 %add93, i32* %quo, align 4, !dbg !5423
  br label %if.end94, !dbg !5424

if.end94:                                         ; preds = %if.then87, %while.end
  %67 = load i32, i32* %ch.addr, align 4, !dbg !5425
  %idxprom95 = sext i32 %67 to i64, !dbg !5426
  %68 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5426
  %ave_sum96 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %68, i32 0, i32 66, !dbg !5427
  %arrayidx97 = getelementptr inbounds [8 x i32], [8 x i32]* %ave_sum96, i64 0, i64 %idxprom95, !dbg !5426
  %69 = load i32, i32* %arrayidx97, align 4, !dbg !5426
  %70 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5428
  %movave_scaling98 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %70, i32 0, i32 55, !dbg !5429
  %71 = load i32, i32* %movave_scaling98, align 16, !dbg !5429
  %shl99 = shl i32 1, %71, !dbg !5430
  %add100 = add nsw i32 %69, %shl99, !dbg !5431
  %72 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5432
  %movave_scaling101 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %72, i32 0, i32 55, !dbg !5433
  %73 = load i32, i32* %movave_scaling101, align 16, !dbg !5433
  %add102 = add nsw i32 %73, 1, !dbg !5434
  %shr = ashr i32 %add100, %add102, !dbg !5435
  store i32 %shr, i32* %ave_mean, align 4, !dbg !5436
  %74 = load i32, i32* %ave_mean, align 4, !dbg !5437
  %cmp103 = icmp ule i32 %74, 1, !dbg !5438
  br i1 %cmp103, label %if.then105, label %if.else106, !dbg !5439

if.then105:                                       ; preds = %if.end94
  %75 = load i32, i32* %quo, align 4, !dbg !5440
  store i32 %75, i32* %residue, align 4, !dbg !5441
  br label %if.end112, !dbg !5442

if.else106:                                       ; preds = %if.end94
  %76 = load i32, i32* %ave_mean, align 4, !dbg !5443
  store i32 %76, i32* %x.addr.i, align 4, !dbg !5444
  %77 = load i32, i32* %x.addr.i, align 4, !dbg !5445
  %sub.i = sub nsw i32 %77, 1, !dbg !5446
  %shl.i = shl i32 %sub.i, 1, !dbg !5447
  %or.i = or i32 %shl.i, 1, !dbg !5448
  %78 = call i32 @llvm.ctlz.i32(i32 %or.i, i1 true) #9, !dbg !5449
  %sub1.i = sub nsw i32 31, %78, !dbg !5450
  store i32 %sub1.i, i32* %rem_bits, align 4, !dbg !5451
  %79 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5452
  %gb108 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %79, i32 0, i32 28, !dbg !5453
  %80 = load i32, i32* %rem_bits, align 4, !dbg !5454
  %call109 = call i32 @get_bits_long(%struct.GetBitContext* %gb108, i32 %80), !dbg !5455
  store i32 %call109, i32* %rem, align 4, !dbg !5456
  %81 = load i32, i32* %quo, align 4, !dbg !5457
  %82 = load i32, i32* %rem_bits, align 4, !dbg !5458
  %shl110 = shl i32 %81, %82, !dbg !5459
  %83 = load i32, i32* %rem, align 4, !dbg !5460
  %add111 = add nsw i32 %shl110, %83, !dbg !5461
  store i32 %add111, i32* %residue, align 4, !dbg !5462
  br label %if.end112

if.end112:                                        ; preds = %if.else106, %if.then105
  %84 = load i32, i32* %residue, align 4, !dbg !5463
  %85 = load i32, i32* %ch.addr, align 4, !dbg !5464
  %idxprom113 = sext i32 %85 to i64, !dbg !5465
  %86 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5465
  %ave_sum114 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %86, i32 0, i32 66, !dbg !5466
  %arrayidx115 = getelementptr inbounds [8 x i32], [8 x i32]* %ave_sum114, i64 0, i64 %idxprom113, !dbg !5465
  %87 = load i32, i32* %arrayidx115, align 4, !dbg !5465
  %add116 = add nsw i32 %84, %87, !dbg !5467
  %88 = load i32, i32* %ch.addr, align 4, !dbg !5468
  %idxprom117 = sext i32 %88 to i64, !dbg !5469
  %89 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5469
  %ave_sum118 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %89, i32 0, i32 66, !dbg !5470
  %arrayidx119 = getelementptr inbounds [8 x i32], [8 x i32]* %ave_sum118, i64 0, i64 %idxprom117, !dbg !5469
  %90 = load i32, i32* %arrayidx119, align 4, !dbg !5469
  %91 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5471
  %movave_scaling120 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %91, i32 0, i32 55, !dbg !5472
  %92 = load i32, i32* %movave_scaling120, align 16, !dbg !5472
  %shr121 = ashr i32 %90, %92, !dbg !5473
  %sub122 = sub nsw i32 %add116, %shr121, !dbg !5474
  %93 = load i32, i32* %ch.addr, align 4, !dbg !5475
  %idxprom123 = sext i32 %93 to i64, !dbg !5476
  %94 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5476
  %ave_sum124 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %94, i32 0, i32 66, !dbg !5477
  %arrayidx125 = getelementptr inbounds [8 x i32], [8 x i32]* %ave_sum124, i64 0, i64 %idxprom123, !dbg !5476
  store i32 %sub122, i32* %arrayidx125, align 4, !dbg !5478
  %95 = load i32, i32* %residue, align 4, !dbg !5479
  %shr126 = ashr i32 %95, 1, !dbg !5480
  %96 = load i32, i32* %residue, align 4, !dbg !5481
  %and = and i32 %96, 1, !dbg !5482
  %sub127 = sub nsw i32 0, %and, !dbg !5483
  %xor = xor i32 %shr126, %sub127, !dbg !5484
  store i32 %xor, i32* %residue, align 4, !dbg !5485
  %97 = load i32, i32* %residue, align 4, !dbg !5486
  %98 = load i32, i32* %i, align 4, !dbg !5487
  %idxprom128 = sext i32 %98 to i64, !dbg !5488
  %99 = load i32, i32* %ch.addr, align 4, !dbg !5489
  %idxprom129 = sext i32 %99 to i64, !dbg !5488
  %100 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5488
  %channel_residues130 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %100, i32 0, i32 67, !dbg !5490
  %arrayidx131 = getelementptr inbounds [8 x [16384 x i32]], [8 x [16384 x i32]]* %channel_residues130, i64 0, i64 %idxprom129, !dbg !5488
  %arrayidx132 = getelementptr inbounds [16384 x i32], [16384 x i32]* %arrayidx131, i64 0, i64 %idxprom128, !dbg !5488
  store i32 %97, i32* %arrayidx132, align 4, !dbg !5491
  br label %for.inc, !dbg !5492

for.inc:                                          ; preds = %if.end112
  %101 = load i32, i32* %i, align 4, !dbg !5493
  %inc133 = add nsw i32 %101, 1, !dbg !5493
  store i32 %inc133, i32* %i, align 4, !dbg !5493
  br label %for.cond, !dbg !5495, !llvm.loop !5496

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !5497
  br label %return, !dbg !5497

return:                                           ; preds = %for.end, %if.then83
  %102 = load i32, i32* %retval, align 4, !dbg !5498
  ret i32 %102, !dbg !5498
}

; Function Attrs: nounwind uwtable
define internal void @use_high_update_speed(%struct.WmallDecodeCtx* %s, i32 %ich) #1 !dbg !5499 {
entry:
  %s.addr = alloca %struct.WmallDecodeCtx*, align 8
  %ich.addr = alloca i32, align 4
  %ilms = alloca i32, align 4
  %recent = alloca i32, align 4
  %icoef = alloca i32, align 4
  store %struct.WmallDecodeCtx* %s, %struct.WmallDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WmallDecodeCtx** %s.addr, metadata !5502, metadata !1820), !dbg !5503
  store i32 %ich, i32* %ich.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ich.addr, metadata !5504, metadata !1820), !dbg !5505
  call void @llvm.dbg.declare(metadata i32* %ilms, metadata !5506, metadata !1820), !dbg !5507
  call void @llvm.dbg.declare(metadata i32* %recent, metadata !5508, metadata !1820), !dbg !5509
  call void @llvm.dbg.declare(metadata i32* %icoef, metadata !5510, metadata !1820), !dbg !5511
  %0 = load i32, i32* %ich.addr, align 4, !dbg !5512
  %idxprom = sext i32 %0 to i64, !dbg !5514
  %1 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5514
  %cdlms_ttl = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %1, i32 0, i32 59, !dbg !5515
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %cdlms_ttl, i64 0, i64 %idxprom, !dbg !5514
  %2 = load i32, i32* %arrayidx, align 4, !dbg !5514
  %sub = sub nsw i32 %2, 1, !dbg !5516
  store i32 %sub, i32* %ilms, align 4, !dbg !5517
  br label %for.cond, !dbg !5518

for.cond:                                         ; preds = %for.inc51, %entry
  %3 = load i32, i32* %ilms, align 4, !dbg !5519
  %cmp = icmp sge i32 %3, 0, !dbg !5522
  br i1 %cmp, label %for.body, label %for.end52, !dbg !5523

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %ilms, align 4, !dbg !5524
  %idxprom1 = sext i32 %4 to i64, !dbg !5526
  %5 = load i32, i32* %ich.addr, align 4, !dbg !5527
  %idxprom2 = sext i32 %5 to i64, !dbg !5526
  %6 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5526
  %cdlms = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %6, i32 0, i32 58, !dbg !5528
  %arrayidx3 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms, i64 0, i64 %idxprom2, !dbg !5526
  %arrayidx4 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx3, i64 0, i64 %idxprom1, !dbg !5526
  %recent5 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx4, i32 0, i32 7, !dbg !5529
  %7 = load i32, i32* %recent5, align 16, !dbg !5529
  store i32 %7, i32* %recent, align 4, !dbg !5530
  %8 = load i32, i32* %ich.addr, align 4, !dbg !5531
  %idxprom6 = sext i32 %8 to i64, !dbg !5533
  %9 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5533
  %update_speed = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %9, i32 0, i32 62, !dbg !5534
  %arrayidx7 = getelementptr inbounds [8 x i32], [8 x i32]* %update_speed, i64 0, i64 %idxprom6, !dbg !5533
  %10 = load i32, i32* %arrayidx7, align 4, !dbg !5533
  %cmp8 = icmp eq i32 %10, 16, !dbg !5535
  br i1 %cmp8, label %if.then, label %if.end, !dbg !5536

if.then:                                          ; preds = %for.body
  br label %for.inc51, !dbg !5537

if.end:                                           ; preds = %for.body
  %11 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5538
  %bV3RTM = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %11, i32 0, i32 60, !dbg !5540
  %12 = load i32, i32* %bV3RTM, align 16, !dbg !5540
  %tobool = icmp ne i32 %12, 0, !dbg !5538
  br i1 %tobool, label %if.then9, label %if.else, !dbg !5541

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %icoef, align 4, !dbg !5542
  br label %for.cond10, !dbg !5545

for.cond10:                                       ; preds = %for.inc, %if.then9
  %13 = load i32, i32* %icoef, align 4, !dbg !5546
  %14 = load i32, i32* %ilms, align 4, !dbg !5549
  %idxprom11 = sext i32 %14 to i64, !dbg !5550
  %15 = load i32, i32* %ich.addr, align 4, !dbg !5551
  %idxprom12 = sext i32 %15 to i64, !dbg !5550
  %16 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5550
  %cdlms13 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %16, i32 0, i32 58, !dbg !5552
  %arrayidx14 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms13, i64 0, i64 %idxprom12, !dbg !5550
  %arrayidx15 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx14, i64 0, i64 %idxprom11, !dbg !5550
  %order = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx15, i32 0, i32 0, !dbg !5553
  %17 = load i32, i32* %order, align 16, !dbg !5553
  %cmp16 = icmp slt i32 %13, %17, !dbg !5554
  br i1 %cmp16, label %for.body17, label %for.end, !dbg !5555

for.body17:                                       ; preds = %for.cond10
  %18 = load i32, i32* %icoef, align 4, !dbg !5556
  %19 = load i32, i32* %recent, align 4, !dbg !5557
  %add = add nsw i32 %18, %19, !dbg !5558
  %idxprom18 = sext i32 %add to i64, !dbg !5559
  %20 = load i32, i32* %ilms, align 4, !dbg !5560
  %idxprom19 = sext i32 %20 to i64, !dbg !5559
  %21 = load i32, i32* %ich.addr, align 4, !dbg !5561
  %idxprom20 = sext i32 %21 to i64, !dbg !5559
  %22 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5559
  %cdlms21 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %22, i32 0, i32 58, !dbg !5562
  %arrayidx22 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms21, i64 0, i64 %idxprom20, !dbg !5559
  %arrayidx23 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx22, i64 0, i64 %idxprom19, !dbg !5559
  %lms_updates = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx23, i32 0, i32 6, !dbg !5563
  %arrayidx24 = getelementptr inbounds [520 x i16], [520 x i16]* %lms_updates, i64 0, i64 %idxprom18, !dbg !5559
  %23 = load i16, i16* %arrayidx24, align 2, !dbg !5564
  %conv = sext i16 %23 to i32, !dbg !5564
  %mul = mul nsw i32 %conv, 2, !dbg !5564
  %conv25 = trunc i32 %mul to i16, !dbg !5564
  store i16 %conv25, i16* %arrayidx24, align 2, !dbg !5564
  br label %for.inc, !dbg !5559

for.inc:                                          ; preds = %for.body17
  %24 = load i32, i32* %icoef, align 4, !dbg !5565
  %inc = add nsw i32 %24, 1, !dbg !5565
  store i32 %inc, i32* %icoef, align 4, !dbg !5565
  br label %for.cond10, !dbg !5567, !llvm.loop !5568

for.end:                                          ; preds = %for.cond10
  br label %if.end50, !dbg !5570

if.else:                                          ; preds = %if.end
  store i32 0, i32* %icoef, align 4, !dbg !5571
  br label %for.cond26, !dbg !5574

for.cond26:                                       ; preds = %for.inc47, %if.else
  %25 = load i32, i32* %icoef, align 4, !dbg !5575
  %26 = load i32, i32* %ilms, align 4, !dbg !5578
  %idxprom27 = sext i32 %26 to i64, !dbg !5579
  %27 = load i32, i32* %ich.addr, align 4, !dbg !5580
  %idxprom28 = sext i32 %27 to i64, !dbg !5579
  %28 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5579
  %cdlms29 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %28, i32 0, i32 58, !dbg !5581
  %arrayidx30 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms29, i64 0, i64 %idxprom28, !dbg !5579
  %arrayidx31 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx30, i64 0, i64 %idxprom27, !dbg !5579
  %order32 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx31, i32 0, i32 0, !dbg !5582
  %29 = load i32, i32* %order32, align 16, !dbg !5582
  %cmp33 = icmp slt i32 %25, %29, !dbg !5583
  br i1 %cmp33, label %for.body35, label %for.end49, !dbg !5584

for.body35:                                       ; preds = %for.cond26
  %30 = load i32, i32* %icoef, align 4, !dbg !5585
  %idxprom36 = sext i32 %30 to i64, !dbg !5586
  %31 = load i32, i32* %ilms, align 4, !dbg !5587
  %idxprom37 = sext i32 %31 to i64, !dbg !5586
  %32 = load i32, i32* %ich.addr, align 4, !dbg !5588
  %idxprom38 = sext i32 %32 to i64, !dbg !5586
  %33 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5586
  %cdlms39 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %33, i32 0, i32 58, !dbg !5589
  %arrayidx40 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms39, i64 0, i64 %idxprom38, !dbg !5586
  %arrayidx41 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx40, i64 0, i64 %idxprom37, !dbg !5586
  %lms_updates42 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx41, i32 0, i32 6, !dbg !5590
  %arrayidx43 = getelementptr inbounds [520 x i16], [520 x i16]* %lms_updates42, i64 0, i64 %idxprom36, !dbg !5586
  %34 = load i16, i16* %arrayidx43, align 2, !dbg !5591
  %conv44 = sext i16 %34 to i32, !dbg !5591
  %mul45 = mul nsw i32 %conv44, 2, !dbg !5591
  %conv46 = trunc i32 %mul45 to i16, !dbg !5591
  store i16 %conv46, i16* %arrayidx43, align 2, !dbg !5591
  br label %for.inc47, !dbg !5586

for.inc47:                                        ; preds = %for.body35
  %35 = load i32, i32* %icoef, align 4, !dbg !5592
  %inc48 = add nsw i32 %35, 1, !dbg !5592
  store i32 %inc48, i32* %icoef, align 4, !dbg !5592
  br label %for.cond26, !dbg !5594, !llvm.loop !5595

for.end49:                                        ; preds = %for.cond26
  br label %if.end50

if.end50:                                         ; preds = %for.end49, %for.end
  br label %for.inc51, !dbg !5597

for.inc51:                                        ; preds = %if.end50, %if.then
  %36 = load i32, i32* %ilms, align 4, !dbg !5598
  %dec = add nsw i32 %36, -1, !dbg !5598
  store i32 %dec, i32* %ilms, align 4, !dbg !5598
  br label %for.cond, !dbg !5600, !llvm.loop !5601

for.end52:                                        ; preds = %for.cond
  %37 = load i32, i32* %ich.addr, align 4, !dbg !5603
  %idxprom53 = sext i32 %37 to i64, !dbg !5604
  %38 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5604
  %update_speed54 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %38, i32 0, i32 62, !dbg !5605
  %arrayidx55 = getelementptr inbounds [8 x i32], [8 x i32]* %update_speed54, i64 0, i64 %idxprom53, !dbg !5604
  store i32 16, i32* %arrayidx55, align 4, !dbg !5606
  ret void, !dbg !5607
}

; Function Attrs: nounwind uwtable
define internal void @use_normal_update_speed(%struct.WmallDecodeCtx* %s, i32 %ich) #1 !dbg !5608 {
entry:
  %s.addr = alloca %struct.WmallDecodeCtx*, align 8
  %ich.addr = alloca i32, align 4
  %ilms = alloca i32, align 4
  %recent = alloca i32, align 4
  %icoef = alloca i32, align 4
  store %struct.WmallDecodeCtx* %s, %struct.WmallDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WmallDecodeCtx** %s.addr, metadata !5609, metadata !1820), !dbg !5610
  store i32 %ich, i32* %ich.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ich.addr, metadata !5611, metadata !1820), !dbg !5612
  call void @llvm.dbg.declare(metadata i32* %ilms, metadata !5613, metadata !1820), !dbg !5614
  call void @llvm.dbg.declare(metadata i32* %recent, metadata !5615, metadata !1820), !dbg !5616
  call void @llvm.dbg.declare(metadata i32* %icoef, metadata !5617, metadata !1820), !dbg !5618
  %0 = load i32, i32* %ich.addr, align 4, !dbg !5619
  %idxprom = sext i32 %0 to i64, !dbg !5621
  %1 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5621
  %cdlms_ttl = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %1, i32 0, i32 59, !dbg !5622
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %cdlms_ttl, i64 0, i64 %idxprom, !dbg !5621
  %2 = load i32, i32* %arrayidx, align 4, !dbg !5621
  %sub = sub nsw i32 %2, 1, !dbg !5623
  store i32 %sub, i32* %ilms, align 4, !dbg !5624
  br label %for.cond, !dbg !5625

for.cond:                                         ; preds = %for.inc51, %entry
  %3 = load i32, i32* %ilms, align 4, !dbg !5626
  %cmp = icmp sge i32 %3, 0, !dbg !5629
  br i1 %cmp, label %for.body, label %for.end52, !dbg !5630

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %ilms, align 4, !dbg !5631
  %idxprom1 = sext i32 %4 to i64, !dbg !5633
  %5 = load i32, i32* %ich.addr, align 4, !dbg !5634
  %idxprom2 = sext i32 %5 to i64, !dbg !5633
  %6 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5633
  %cdlms = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %6, i32 0, i32 58, !dbg !5635
  %arrayidx3 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms, i64 0, i64 %idxprom2, !dbg !5633
  %arrayidx4 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx3, i64 0, i64 %idxprom1, !dbg !5633
  %recent5 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx4, i32 0, i32 7, !dbg !5636
  %7 = load i32, i32* %recent5, align 16, !dbg !5636
  store i32 %7, i32* %recent, align 4, !dbg !5637
  %8 = load i32, i32* %ich.addr, align 4, !dbg !5638
  %idxprom6 = sext i32 %8 to i64, !dbg !5640
  %9 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5640
  %update_speed = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %9, i32 0, i32 62, !dbg !5641
  %arrayidx7 = getelementptr inbounds [8 x i32], [8 x i32]* %update_speed, i64 0, i64 %idxprom6, !dbg !5640
  %10 = load i32, i32* %arrayidx7, align 4, !dbg !5640
  %cmp8 = icmp eq i32 %10, 8, !dbg !5642
  br i1 %cmp8, label %if.then, label %if.end, !dbg !5643

if.then:                                          ; preds = %for.body
  br label %for.inc51, !dbg !5644

if.end:                                           ; preds = %for.body
  %11 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5645
  %bV3RTM = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %11, i32 0, i32 60, !dbg !5647
  %12 = load i32, i32* %bV3RTM, align 16, !dbg !5647
  %tobool = icmp ne i32 %12, 0, !dbg !5645
  br i1 %tobool, label %if.then9, label %if.else, !dbg !5648

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %icoef, align 4, !dbg !5649
  br label %for.cond10, !dbg !5651

for.cond10:                                       ; preds = %for.inc, %if.then9
  %13 = load i32, i32* %icoef, align 4, !dbg !5652
  %14 = load i32, i32* %ilms, align 4, !dbg !5655
  %idxprom11 = sext i32 %14 to i64, !dbg !5656
  %15 = load i32, i32* %ich.addr, align 4, !dbg !5657
  %idxprom12 = sext i32 %15 to i64, !dbg !5656
  %16 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5656
  %cdlms13 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %16, i32 0, i32 58, !dbg !5658
  %arrayidx14 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms13, i64 0, i64 %idxprom12, !dbg !5656
  %arrayidx15 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx14, i64 0, i64 %idxprom11, !dbg !5656
  %order = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx15, i32 0, i32 0, !dbg !5659
  %17 = load i32, i32* %order, align 16, !dbg !5659
  %cmp16 = icmp slt i32 %13, %17, !dbg !5660
  br i1 %cmp16, label %for.body17, label %for.end, !dbg !5661

for.body17:                                       ; preds = %for.cond10
  %18 = load i32, i32* %icoef, align 4, !dbg !5662
  %19 = load i32, i32* %recent, align 4, !dbg !5663
  %add = add nsw i32 %18, %19, !dbg !5664
  %idxprom18 = sext i32 %add to i64, !dbg !5665
  %20 = load i32, i32* %ilms, align 4, !dbg !5666
  %idxprom19 = sext i32 %20 to i64, !dbg !5665
  %21 = load i32, i32* %ich.addr, align 4, !dbg !5667
  %idxprom20 = sext i32 %21 to i64, !dbg !5665
  %22 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5665
  %cdlms21 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %22, i32 0, i32 58, !dbg !5668
  %arrayidx22 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms21, i64 0, i64 %idxprom20, !dbg !5665
  %arrayidx23 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx22, i64 0, i64 %idxprom19, !dbg !5665
  %lms_updates = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx23, i32 0, i32 6, !dbg !5669
  %arrayidx24 = getelementptr inbounds [520 x i16], [520 x i16]* %lms_updates, i64 0, i64 %idxprom18, !dbg !5665
  %23 = load i16, i16* %arrayidx24, align 2, !dbg !5670
  %conv = sext i16 %23 to i32, !dbg !5670
  %div = sdiv i32 %conv, 2, !dbg !5670
  %conv25 = trunc i32 %div to i16, !dbg !5670
  store i16 %conv25, i16* %arrayidx24, align 2, !dbg !5670
  br label %for.inc, !dbg !5665

for.inc:                                          ; preds = %for.body17
  %24 = load i32, i32* %icoef, align 4, !dbg !5671
  %inc = add nsw i32 %24, 1, !dbg !5671
  store i32 %inc, i32* %icoef, align 4, !dbg !5671
  br label %for.cond10, !dbg !5673, !llvm.loop !5674

for.end:                                          ; preds = %for.cond10
  br label %if.end50, !dbg !5676

if.else:                                          ; preds = %if.end
  store i32 0, i32* %icoef, align 4, !dbg !5678
  br label %for.cond26, !dbg !5680

for.cond26:                                       ; preds = %for.inc47, %if.else
  %25 = load i32, i32* %icoef, align 4, !dbg !5681
  %26 = load i32, i32* %ilms, align 4, !dbg !5684
  %idxprom27 = sext i32 %26 to i64, !dbg !5685
  %27 = load i32, i32* %ich.addr, align 4, !dbg !5686
  %idxprom28 = sext i32 %27 to i64, !dbg !5685
  %28 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5685
  %cdlms29 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %28, i32 0, i32 58, !dbg !5687
  %arrayidx30 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms29, i64 0, i64 %idxprom28, !dbg !5685
  %arrayidx31 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx30, i64 0, i64 %idxprom27, !dbg !5685
  %order32 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx31, i32 0, i32 0, !dbg !5688
  %29 = load i32, i32* %order32, align 16, !dbg !5688
  %cmp33 = icmp slt i32 %25, %29, !dbg !5689
  br i1 %cmp33, label %for.body35, label %for.end49, !dbg !5690

for.body35:                                       ; preds = %for.cond26
  %30 = load i32, i32* %icoef, align 4, !dbg !5691
  %idxprom36 = sext i32 %30 to i64, !dbg !5692
  %31 = load i32, i32* %ilms, align 4, !dbg !5693
  %idxprom37 = sext i32 %31 to i64, !dbg !5692
  %32 = load i32, i32* %ich.addr, align 4, !dbg !5694
  %idxprom38 = sext i32 %32 to i64, !dbg !5692
  %33 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5692
  %cdlms39 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %33, i32 0, i32 58, !dbg !5695
  %arrayidx40 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms39, i64 0, i64 %idxprom38, !dbg !5692
  %arrayidx41 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx40, i64 0, i64 %idxprom37, !dbg !5692
  %lms_updates42 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx41, i32 0, i32 6, !dbg !5696
  %arrayidx43 = getelementptr inbounds [520 x i16], [520 x i16]* %lms_updates42, i64 0, i64 %idxprom36, !dbg !5692
  %34 = load i16, i16* %arrayidx43, align 2, !dbg !5697
  %conv44 = sext i16 %34 to i32, !dbg !5697
  %div45 = sdiv i32 %conv44, 2, !dbg !5697
  %conv46 = trunc i32 %div45 to i16, !dbg !5697
  store i16 %conv46, i16* %arrayidx43, align 2, !dbg !5697
  br label %for.inc47, !dbg !5692

for.inc47:                                        ; preds = %for.body35
  %35 = load i32, i32* %icoef, align 4, !dbg !5698
  %inc48 = add nsw i32 %35, 1, !dbg !5698
  store i32 %inc48, i32* %icoef, align 4, !dbg !5698
  br label %for.cond26, !dbg !5700, !llvm.loop !5701

for.end49:                                        ; preds = %for.cond26
  br label %if.end50

if.end50:                                         ; preds = %for.end49, %for.end
  br label %for.inc51, !dbg !5703

for.inc51:                                        ; preds = %if.end50, %if.then
  %36 = load i32, i32* %ilms, align 4, !dbg !5704
  %dec = add nsw i32 %36, -1, !dbg !5704
  store i32 %dec, i32* %ilms, align 4, !dbg !5704
  br label %for.cond, !dbg !5706, !llvm.loop !5707

for.end52:                                        ; preds = %for.cond
  %37 = load i32, i32* %ich.addr, align 4, !dbg !5709
  %idxprom53 = sext i32 %37 to i64, !dbg !5710
  %38 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5710
  %update_speed54 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %38, i32 0, i32 62, !dbg !5711
  %arrayidx55 = getelementptr inbounds [8 x i32], [8 x i32]* %update_speed54, i64 0, i64 %idxprom53, !dbg !5710
  store i32 8, i32* %arrayidx55, align 4, !dbg !5712
  ret void, !dbg !5713
}

; Function Attrs: nounwind uwtable
define internal void @revert_cdlms32(%struct.WmallDecodeCtx* %s, i32 %ch, i32 %coef_begin, i32 %coef_end) #1 !dbg !5714 {
entry:
  %s.addr = alloca %struct.WmallDecodeCtx*, align 8
  %ch.addr = alloca i32, align 4
  %coef_begin.addr = alloca i32, align 4
  %coef_end.addr = alloca i32, align 4
  %icoef = alloca i32, align 4
  %pred = alloca i32, align 4
  %ilms = alloca i32, align 4
  %num_lms = alloca i32, align 4
  %residue = alloca i32, align 4
  %input = alloca i32, align 4
  %prevvalues = alloca i32*, align 8
  store %struct.WmallDecodeCtx* %s, %struct.WmallDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WmallDecodeCtx** %s.addr, metadata !5717, metadata !1820), !dbg !5718
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !5719, metadata !1820), !dbg !5720
  store i32 %coef_begin, i32* %coef_begin.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %coef_begin.addr, metadata !5721, metadata !1820), !dbg !5722
  store i32 %coef_end, i32* %coef_end.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %coef_end.addr, metadata !5723, metadata !1820), !dbg !5724
  call void @llvm.dbg.declare(metadata i32* %icoef, metadata !5725, metadata !1820), !dbg !5726
  call void @llvm.dbg.declare(metadata i32* %pred, metadata !5727, metadata !1820), !dbg !5728
  call void @llvm.dbg.declare(metadata i32* %ilms, metadata !5729, metadata !1820), !dbg !5730
  call void @llvm.dbg.declare(metadata i32* %num_lms, metadata !5731, metadata !1820), !dbg !5732
  call void @llvm.dbg.declare(metadata i32* %residue, metadata !5733, metadata !1820), !dbg !5734
  call void @llvm.dbg.declare(metadata i32* %input, metadata !5735, metadata !1820), !dbg !5736
  %0 = load i32, i32* %ch.addr, align 4, !dbg !5737
  %idxprom = sext i32 %0 to i64, !dbg !5738
  %1 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5738
  %cdlms_ttl = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %1, i32 0, i32 59, !dbg !5739
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %cdlms_ttl, i64 0, i64 %idxprom, !dbg !5738
  %2 = load i32, i32* %arrayidx, align 4, !dbg !5738
  store i32 %2, i32* %num_lms, align 4, !dbg !5740
  %3 = load i32, i32* %num_lms, align 4, !dbg !5741
  %sub = sub nsw i32 %3, 1, !dbg !5743
  store i32 %sub, i32* %ilms, align 4, !dbg !5744
  br label %for.cond, !dbg !5745

for.cond:                                         ; preds = %for.inc66, %entry
  %4 = load i32, i32* %ilms, align 4, !dbg !5746
  %cmp = icmp sge i32 %4, 0, !dbg !5749
  br i1 %cmp, label %for.body, label %for.end67, !dbg !5750

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %coef_begin.addr, align 4, !dbg !5751
  store i32 %5, i32* %icoef, align 4, !dbg !5755
  br label %for.cond1, !dbg !5756

for.cond1:                                        ; preds = %for.inc, %for.body
  %6 = load i32, i32* %icoef, align 4, !dbg !5757
  %7 = load i32, i32* %coef_end.addr, align 4, !dbg !5760
  %cmp2 = icmp slt i32 %6, %7, !dbg !5761
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !5762

for.body3:                                        ; preds = %for.cond1
  call void @llvm.dbg.declare(metadata i32** %prevvalues, metadata !5763, metadata !1820), !dbg !5765
  %8 = load i32, i32* %ilms, align 4, !dbg !5766
  %idxprom4 = sext i32 %8 to i64, !dbg !5768
  %9 = load i32, i32* %ch.addr, align 4, !dbg !5769
  %idxprom5 = sext i32 %9 to i64, !dbg !5768
  %10 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5768
  %cdlms = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %10, i32 0, i32 58, !dbg !5770
  %arrayidx6 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms, i64 0, i64 %idxprom5, !dbg !5768
  %arrayidx7 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx6, i64 0, i64 %idxprom4, !dbg !5768
  %lms_prevvalues = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx7, i32 0, i32 5, !dbg !5771
  %arraydecay = getelementptr inbounds [520 x i32], [520 x i32]* %lms_prevvalues, i32 0, i32 0, !dbg !5768
  store i32* %arraydecay, i32** %prevvalues, align 8, !dbg !5772
  %11 = load i32, i32* %ilms, align 4, !dbg !5773
  %idxprom8 = sext i32 %11 to i64, !dbg !5774
  %12 = load i32, i32* %ch.addr, align 4, !dbg !5775
  %idxprom9 = sext i32 %12 to i64, !dbg !5774
  %13 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5774
  %cdlms10 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %13, i32 0, i32 58, !dbg !5776
  %arrayidx11 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms10, i64 0, i64 %idxprom9, !dbg !5774
  %arrayidx12 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx11, i64 0, i64 %idxprom8, !dbg !5774
  %scaling = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx12, i32 0, i32 1, !dbg !5777
  %14 = load i32, i32* %scaling, align 4, !dbg !5777
  %sub13 = sub nsw i32 %14, 1, !dbg !5778
  %shl = shl i32 1, %sub13, !dbg !5779
  store i32 %shl, i32* %pred, align 4, !dbg !5780
  %15 = load i32, i32* %icoef, align 4, !dbg !5781
  %idxprom14 = sext i32 %15 to i64, !dbg !5782
  %16 = load i32, i32* %ch.addr, align 4, !dbg !5783
  %idxprom15 = sext i32 %16 to i64, !dbg !5782
  %17 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5782
  %channel_residues = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %17, i32 0, i32 67, !dbg !5784
  %arrayidx16 = getelementptr inbounds [8 x [16384 x i32]], [8 x [16384 x i32]]* %channel_residues, i64 0, i64 %idxprom15, !dbg !5782
  %arrayidx17 = getelementptr inbounds [16384 x i32], [16384 x i32]* %arrayidx16, i64 0, i64 %idxprom14, !dbg !5782
  %18 = load i32, i32* %arrayidx17, align 4, !dbg !5782
  store i32 %18, i32* %residue, align 4, !dbg !5785
  %19 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5786
  %dsp = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %19, i32 0, i32 2, !dbg !5787
  %scalarproduct_and_madd_int32 = getelementptr inbounds %struct.LLAudDSPContext, %struct.LLAudDSPContext* %dsp, i32 0, i32 1, !dbg !5788
  %20 = load i32 (i16*, i32*, i16*, i32, i32)*, i32 (i16*, i32*, i16*, i32, i32)** %scalarproduct_and_madd_int32, align 8, !dbg !5788
  %21 = load i32, i32* %ilms, align 4, !dbg !5789
  %idxprom18 = sext i32 %21 to i64, !dbg !5790
  %22 = load i32, i32* %ch.addr, align 4, !dbg !5791
  %idxprom19 = sext i32 %22 to i64, !dbg !5790
  %23 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5790
  %cdlms20 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %23, i32 0, i32 58, !dbg !5792
  %arrayidx21 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms20, i64 0, i64 %idxprom19, !dbg !5790
  %arrayidx22 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx21, i64 0, i64 %idxprom18, !dbg !5790
  %coefs = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx22, i32 0, i32 4, !dbg !5793
  %arraydecay23 = getelementptr inbounds [264 x i16], [264 x i16]* %coefs, i32 0, i32 0, !dbg !5790
  %24 = load i32*, i32** %prevvalues, align 8, !dbg !5794
  %25 = load i32, i32* %ilms, align 4, !dbg !5795
  %idxprom24 = sext i32 %25 to i64, !dbg !5796
  %26 = load i32, i32* %ch.addr, align 4, !dbg !5797
  %idxprom25 = sext i32 %26 to i64, !dbg !5796
  %27 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5796
  %cdlms26 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %27, i32 0, i32 58, !dbg !5798
  %arrayidx27 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms26, i64 0, i64 %idxprom25, !dbg !5796
  %arrayidx28 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx27, i64 0, i64 %idxprom24, !dbg !5796
  %recent = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx28, i32 0, i32 7, !dbg !5799
  %28 = load i32, i32* %recent, align 16, !dbg !5799
  %idx.ext = sext i32 %28 to i64, !dbg !5800
  %add.ptr = getelementptr inbounds i32, i32* %24, i64 %idx.ext, !dbg !5800
  %29 = load i32, i32* %ilms, align 4, !dbg !5801
  %idxprom29 = sext i32 %29 to i64, !dbg !5802
  %30 = load i32, i32* %ch.addr, align 4, !dbg !5803
  %idxprom30 = sext i32 %30 to i64, !dbg !5802
  %31 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5802
  %cdlms31 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %31, i32 0, i32 58, !dbg !5804
  %arrayidx32 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms31, i64 0, i64 %idxprom30, !dbg !5802
  %arrayidx33 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx32, i64 0, i64 %idxprom29, !dbg !5802
  %lms_updates = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx33, i32 0, i32 6, !dbg !5805
  %arraydecay34 = getelementptr inbounds [520 x i16], [520 x i16]* %lms_updates, i32 0, i32 0, !dbg !5802
  %32 = load i32, i32* %ilms, align 4, !dbg !5806
  %idxprom35 = sext i32 %32 to i64, !dbg !5807
  %33 = load i32, i32* %ch.addr, align 4, !dbg !5808
  %idxprom36 = sext i32 %33 to i64, !dbg !5807
  %34 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5807
  %cdlms37 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %34, i32 0, i32 58, !dbg !5809
  %arrayidx38 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms37, i64 0, i64 %idxprom36, !dbg !5807
  %arrayidx39 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx38, i64 0, i64 %idxprom35, !dbg !5807
  %recent40 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx39, i32 0, i32 7, !dbg !5810
  %35 = load i32, i32* %recent40, align 16, !dbg !5810
  %idx.ext41 = sext i32 %35 to i64, !dbg !5811
  %add.ptr42 = getelementptr inbounds i16, i16* %arraydecay34, i64 %idx.ext41, !dbg !5811
  %36 = load i32, i32* %ilms, align 4, !dbg !5812
  %idxprom43 = sext i32 %36 to i64, !dbg !5813
  %37 = load i32, i32* %ch.addr, align 4, !dbg !5814
  %idxprom44 = sext i32 %37 to i64, !dbg !5813
  %38 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5813
  %cdlms45 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %38, i32 0, i32 58, !dbg !5815
  %arrayidx46 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms45, i64 0, i64 %idxprom44, !dbg !5813
  %arrayidx47 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx46, i64 0, i64 %idxprom43, !dbg !5813
  %order = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx47, i32 0, i32 0, !dbg !5816
  %39 = load i32, i32* %order, align 16, !dbg !5816
  %add = add nsw i32 %39, 8, !dbg !5817
  %sub48 = sub nsw i32 %add, 1, !dbg !5818
  %and = and i32 %sub48, -8, !dbg !5819
  %40 = load i32, i32* %residue, align 4, !dbg !5820
  %cmp49 = icmp sgt i32 %40, 0, !dbg !5821
  %conv = zext i1 %cmp49 to i32, !dbg !5821
  %41 = load i32, i32* %residue, align 4, !dbg !5822
  %cmp50 = icmp slt i32 %41, 0, !dbg !5823
  %conv51 = zext i1 %cmp50 to i32, !dbg !5823
  %sub52 = sub nsw i32 %conv, %conv51, !dbg !5824
  %call = call i32 %20(i16* %arraydecay23, i32* %add.ptr, i16* %add.ptr42, i32 %and, i32 %sub52), !dbg !5786
  %42 = load i32, i32* %pred, align 4, !dbg !5825
  %add53 = add nsw i32 %42, %call, !dbg !5825
  store i32 %add53, i32* %pred, align 4, !dbg !5825
  %43 = load i32, i32* %residue, align 4, !dbg !5826
  %44 = load i32, i32* %pred, align 4, !dbg !5827
  %45 = load i32, i32* %ilms, align 4, !dbg !5828
  %idxprom54 = sext i32 %45 to i64, !dbg !5829
  %46 = load i32, i32* %ch.addr, align 4, !dbg !5830
  %idxprom55 = sext i32 %46 to i64, !dbg !5829
  %47 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5829
  %cdlms56 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %47, i32 0, i32 58, !dbg !5831
  %arrayidx57 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms56, i64 0, i64 %idxprom55, !dbg !5829
  %arrayidx58 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx57, i64 0, i64 %idxprom54, !dbg !5829
  %scaling59 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx58, i32 0, i32 1, !dbg !5832
  %48 = load i32, i32* %scaling59, align 4, !dbg !5832
  %shr = ashr i32 %44, %48, !dbg !5833
  %add60 = add nsw i32 %43, %shr, !dbg !5834
  store i32 %add60, i32* %input, align 4, !dbg !5835
  %49 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5836
  %50 = load i32, i32* %ch.addr, align 4, !dbg !5837
  %51 = load i32, i32* %ilms, align 4, !dbg !5838
  %52 = load i32, i32* %input, align 4, !dbg !5839
  call void @lms_update32(%struct.WmallDecodeCtx* %49, i32 %50, i32 %51, i32 %52), !dbg !5840
  %53 = load i32, i32* %input, align 4, !dbg !5842
  %54 = load i32, i32* %icoef, align 4, !dbg !5843
  %idxprom61 = sext i32 %54 to i64, !dbg !5844
  %55 = load i32, i32* %ch.addr, align 4, !dbg !5845
  %idxprom62 = sext i32 %55 to i64, !dbg !5844
  %56 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5844
  %channel_residues63 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %56, i32 0, i32 67, !dbg !5846
  %arrayidx64 = getelementptr inbounds [8 x [16384 x i32]], [8 x [16384 x i32]]* %channel_residues63, i64 0, i64 %idxprom62, !dbg !5844
  %arrayidx65 = getelementptr inbounds [16384 x i32], [16384 x i32]* %arrayidx64, i64 0, i64 %idxprom61, !dbg !5844
  store i32 %53, i32* %arrayidx65, align 4, !dbg !5847
  br label %for.inc, !dbg !5848

for.inc:                                          ; preds = %for.body3
  %57 = load i32, i32* %icoef, align 4, !dbg !5849
  %inc = add nsw i32 %57, 1, !dbg !5849
  store i32 %inc, i32* %icoef, align 4, !dbg !5849
  br label %for.cond1, !dbg !5851, !llvm.loop !5852

for.end:                                          ; preds = %for.cond1
  br label %for.inc66, !dbg !5854

for.inc66:                                        ; preds = %for.end
  %58 = load i32, i32* %ilms, align 4, !dbg !5856
  %dec = add nsw i32 %58, -1, !dbg !5856
  store i32 %dec, i32* %ilms, align 4, !dbg !5856
  br label %for.cond, !dbg !5858, !llvm.loop !5859

for.end67:                                        ; preds = %for.cond
  ret void, !dbg !5861
}

; Function Attrs: nounwind uwtable
define internal void @revert_cdlms16(%struct.WmallDecodeCtx* %s, i32 %ch, i32 %coef_begin, i32 %coef_end) #1 !dbg !5863 {
entry:
  %s.addr = alloca %struct.WmallDecodeCtx*, align 8
  %ch.addr = alloca i32, align 4
  %coef_begin.addr = alloca i32, align 4
  %coef_end.addr = alloca i32, align 4
  %icoef = alloca i32, align 4
  %pred = alloca i32, align 4
  %ilms = alloca i32, align 4
  %num_lms = alloca i32, align 4
  %residue = alloca i32, align 4
  %input = alloca i32, align 4
  %prevvalues = alloca i16*, align 8
  store %struct.WmallDecodeCtx* %s, %struct.WmallDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WmallDecodeCtx** %s.addr, metadata !5864, metadata !1820), !dbg !5865
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !5866, metadata !1820), !dbg !5867
  store i32 %coef_begin, i32* %coef_begin.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %coef_begin.addr, metadata !5868, metadata !1820), !dbg !5869
  store i32 %coef_end, i32* %coef_end.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %coef_end.addr, metadata !5870, metadata !1820), !dbg !5871
  call void @llvm.dbg.declare(metadata i32* %icoef, metadata !5872, metadata !1820), !dbg !5873
  call void @llvm.dbg.declare(metadata i32* %pred, metadata !5874, metadata !1820), !dbg !5875
  call void @llvm.dbg.declare(metadata i32* %ilms, metadata !5876, metadata !1820), !dbg !5877
  call void @llvm.dbg.declare(metadata i32* %num_lms, metadata !5878, metadata !1820), !dbg !5879
  call void @llvm.dbg.declare(metadata i32* %residue, metadata !5880, metadata !1820), !dbg !5881
  call void @llvm.dbg.declare(metadata i32* %input, metadata !5882, metadata !1820), !dbg !5883
  %0 = load i32, i32* %ch.addr, align 4, !dbg !5884
  %idxprom = sext i32 %0 to i64, !dbg !5885
  %1 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5885
  %cdlms_ttl = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %1, i32 0, i32 59, !dbg !5886
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %cdlms_ttl, i64 0, i64 %idxprom, !dbg !5885
  %2 = load i32, i32* %arrayidx, align 4, !dbg !5885
  store i32 %2, i32* %num_lms, align 4, !dbg !5887
  %3 = load i32, i32* %num_lms, align 4, !dbg !5888
  %sub = sub nsw i32 %3, 1, !dbg !5890
  store i32 %sub, i32* %ilms, align 4, !dbg !5891
  br label %for.cond, !dbg !5892

for.cond:                                         ; preds = %for.inc66, %entry
  %4 = load i32, i32* %ilms, align 4, !dbg !5893
  %cmp = icmp sge i32 %4, 0, !dbg !5896
  br i1 %cmp, label %for.body, label %for.end67, !dbg !5897

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %coef_begin.addr, align 4, !dbg !5898
  store i32 %5, i32* %icoef, align 4, !dbg !5902
  br label %for.cond1, !dbg !5903

for.cond1:                                        ; preds = %for.inc, %for.body
  %6 = load i32, i32* %icoef, align 4, !dbg !5904
  %7 = load i32, i32* %coef_end.addr, align 4, !dbg !5907
  %cmp2 = icmp slt i32 %6, %7, !dbg !5908
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !5909

for.body3:                                        ; preds = %for.cond1
  call void @llvm.dbg.declare(metadata i16** %prevvalues, metadata !5910, metadata !1820), !dbg !5912
  %8 = load i32, i32* %ilms, align 4, !dbg !5913
  %idxprom4 = sext i32 %8 to i64, !dbg !5915
  %9 = load i32, i32* %ch.addr, align 4, !dbg !5916
  %idxprom5 = sext i32 %9 to i64, !dbg !5915
  %10 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5915
  %cdlms = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %10, i32 0, i32 58, !dbg !5917
  %arrayidx6 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms, i64 0, i64 %idxprom5, !dbg !5915
  %arrayidx7 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx6, i64 0, i64 %idxprom4, !dbg !5915
  %lms_prevvalues = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx7, i32 0, i32 5, !dbg !5918
  %arraydecay = getelementptr inbounds [520 x i32], [520 x i32]* %lms_prevvalues, i32 0, i32 0, !dbg !5915
  %11 = bitcast i32* %arraydecay to i16*, !dbg !5919
  store i16* %11, i16** %prevvalues, align 8, !dbg !5920
  %12 = load i32, i32* %ilms, align 4, !dbg !5921
  %idxprom8 = sext i32 %12 to i64, !dbg !5922
  %13 = load i32, i32* %ch.addr, align 4, !dbg !5923
  %idxprom9 = sext i32 %13 to i64, !dbg !5922
  %14 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5922
  %cdlms10 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %14, i32 0, i32 58, !dbg !5924
  %arrayidx11 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms10, i64 0, i64 %idxprom9, !dbg !5922
  %arrayidx12 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx11, i64 0, i64 %idxprom8, !dbg !5922
  %scaling = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx12, i32 0, i32 1, !dbg !5925
  %15 = load i32, i32* %scaling, align 4, !dbg !5925
  %sub13 = sub nsw i32 %15, 1, !dbg !5926
  %shl = shl i32 1, %sub13, !dbg !5927
  store i32 %shl, i32* %pred, align 4, !dbg !5928
  %16 = load i32, i32* %icoef, align 4, !dbg !5929
  %idxprom14 = sext i32 %16 to i64, !dbg !5930
  %17 = load i32, i32* %ch.addr, align 4, !dbg !5931
  %idxprom15 = sext i32 %17 to i64, !dbg !5930
  %18 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5930
  %channel_residues = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %18, i32 0, i32 67, !dbg !5932
  %arrayidx16 = getelementptr inbounds [8 x [16384 x i32]], [8 x [16384 x i32]]* %channel_residues, i64 0, i64 %idxprom15, !dbg !5930
  %arrayidx17 = getelementptr inbounds [16384 x i32], [16384 x i32]* %arrayidx16, i64 0, i64 %idxprom14, !dbg !5930
  %19 = load i32, i32* %arrayidx17, align 4, !dbg !5930
  store i32 %19, i32* %residue, align 4, !dbg !5933
  %20 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5934
  %dsp = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %20, i32 0, i32 2, !dbg !5935
  %scalarproduct_and_madd_int16 = getelementptr inbounds %struct.LLAudDSPContext, %struct.LLAudDSPContext* %dsp, i32 0, i32 0, !dbg !5936
  %21 = load i32 (i16*, i16*, i16*, i32, i32)*, i32 (i16*, i16*, i16*, i32, i32)** %scalarproduct_and_madd_int16, align 16, !dbg !5936
  %22 = load i32, i32* %ilms, align 4, !dbg !5937
  %idxprom18 = sext i32 %22 to i64, !dbg !5938
  %23 = load i32, i32* %ch.addr, align 4, !dbg !5939
  %idxprom19 = sext i32 %23 to i64, !dbg !5938
  %24 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5938
  %cdlms20 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %24, i32 0, i32 58, !dbg !5940
  %arrayidx21 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms20, i64 0, i64 %idxprom19, !dbg !5938
  %arrayidx22 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx21, i64 0, i64 %idxprom18, !dbg !5938
  %coefs = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx22, i32 0, i32 4, !dbg !5941
  %arraydecay23 = getelementptr inbounds [264 x i16], [264 x i16]* %coefs, i32 0, i32 0, !dbg !5938
  %25 = load i16*, i16** %prevvalues, align 8, !dbg !5942
  %26 = load i32, i32* %ilms, align 4, !dbg !5943
  %idxprom24 = sext i32 %26 to i64, !dbg !5944
  %27 = load i32, i32* %ch.addr, align 4, !dbg !5945
  %idxprom25 = sext i32 %27 to i64, !dbg !5944
  %28 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5944
  %cdlms26 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %28, i32 0, i32 58, !dbg !5946
  %arrayidx27 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms26, i64 0, i64 %idxprom25, !dbg !5944
  %arrayidx28 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx27, i64 0, i64 %idxprom24, !dbg !5944
  %recent = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx28, i32 0, i32 7, !dbg !5947
  %29 = load i32, i32* %recent, align 16, !dbg !5947
  %idx.ext = sext i32 %29 to i64, !dbg !5948
  %add.ptr = getelementptr inbounds i16, i16* %25, i64 %idx.ext, !dbg !5948
  %30 = load i32, i32* %ilms, align 4, !dbg !5949
  %idxprom29 = sext i32 %30 to i64, !dbg !5950
  %31 = load i32, i32* %ch.addr, align 4, !dbg !5951
  %idxprom30 = sext i32 %31 to i64, !dbg !5950
  %32 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5950
  %cdlms31 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %32, i32 0, i32 58, !dbg !5952
  %arrayidx32 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms31, i64 0, i64 %idxprom30, !dbg !5950
  %arrayidx33 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx32, i64 0, i64 %idxprom29, !dbg !5950
  %lms_updates = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx33, i32 0, i32 6, !dbg !5953
  %arraydecay34 = getelementptr inbounds [520 x i16], [520 x i16]* %lms_updates, i32 0, i32 0, !dbg !5950
  %33 = load i32, i32* %ilms, align 4, !dbg !5954
  %idxprom35 = sext i32 %33 to i64, !dbg !5955
  %34 = load i32, i32* %ch.addr, align 4, !dbg !5956
  %idxprom36 = sext i32 %34 to i64, !dbg !5955
  %35 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5955
  %cdlms37 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %35, i32 0, i32 58, !dbg !5957
  %arrayidx38 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms37, i64 0, i64 %idxprom36, !dbg !5955
  %arrayidx39 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx38, i64 0, i64 %idxprom35, !dbg !5955
  %recent40 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx39, i32 0, i32 7, !dbg !5958
  %36 = load i32, i32* %recent40, align 16, !dbg !5958
  %idx.ext41 = sext i32 %36 to i64, !dbg !5959
  %add.ptr42 = getelementptr inbounds i16, i16* %arraydecay34, i64 %idx.ext41, !dbg !5959
  %37 = load i32, i32* %ilms, align 4, !dbg !5960
  %idxprom43 = sext i32 %37 to i64, !dbg !5961
  %38 = load i32, i32* %ch.addr, align 4, !dbg !5962
  %idxprom44 = sext i32 %38 to i64, !dbg !5961
  %39 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5961
  %cdlms45 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %39, i32 0, i32 58, !dbg !5963
  %arrayidx46 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms45, i64 0, i64 %idxprom44, !dbg !5961
  %arrayidx47 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx46, i64 0, i64 %idxprom43, !dbg !5961
  %order = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx47, i32 0, i32 0, !dbg !5964
  %40 = load i32, i32* %order, align 16, !dbg !5964
  %add = add nsw i32 %40, 16, !dbg !5965
  %sub48 = sub nsw i32 %add, 1, !dbg !5966
  %and = and i32 %sub48, -16, !dbg !5967
  %41 = load i32, i32* %residue, align 4, !dbg !5968
  %cmp49 = icmp sgt i32 %41, 0, !dbg !5969
  %conv = zext i1 %cmp49 to i32, !dbg !5969
  %42 = load i32, i32* %residue, align 4, !dbg !5970
  %cmp50 = icmp slt i32 %42, 0, !dbg !5971
  %conv51 = zext i1 %cmp50 to i32, !dbg !5971
  %sub52 = sub nsw i32 %conv, %conv51, !dbg !5972
  %call = call i32 %21(i16* %arraydecay23, i16* %add.ptr, i16* %add.ptr42, i32 %and, i32 %sub52), !dbg !5934
  %43 = load i32, i32* %pred, align 4, !dbg !5973
  %add53 = add nsw i32 %43, %call, !dbg !5973
  store i32 %add53, i32* %pred, align 4, !dbg !5973
  %44 = load i32, i32* %residue, align 4, !dbg !5974
  %45 = load i32, i32* %pred, align 4, !dbg !5975
  %46 = load i32, i32* %ilms, align 4, !dbg !5976
  %idxprom54 = sext i32 %46 to i64, !dbg !5977
  %47 = load i32, i32* %ch.addr, align 4, !dbg !5978
  %idxprom55 = sext i32 %47 to i64, !dbg !5977
  %48 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5977
  %cdlms56 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %48, i32 0, i32 58, !dbg !5979
  %arrayidx57 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms56, i64 0, i64 %idxprom55, !dbg !5977
  %arrayidx58 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx57, i64 0, i64 %idxprom54, !dbg !5977
  %scaling59 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx58, i32 0, i32 1, !dbg !5980
  %49 = load i32, i32* %scaling59, align 4, !dbg !5980
  %shr = ashr i32 %45, %49, !dbg !5981
  %add60 = add nsw i32 %44, %shr, !dbg !5982
  store i32 %add60, i32* %input, align 4, !dbg !5983
  %50 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5984
  %51 = load i32, i32* %ch.addr, align 4, !dbg !5985
  %52 = load i32, i32* %ilms, align 4, !dbg !5986
  %53 = load i32, i32* %input, align 4, !dbg !5987
  call void @lms_update16(%struct.WmallDecodeCtx* %50, i32 %51, i32 %52, i32 %53), !dbg !5988
  %54 = load i32, i32* %input, align 4, !dbg !5990
  %55 = load i32, i32* %icoef, align 4, !dbg !5991
  %idxprom61 = sext i32 %55 to i64, !dbg !5992
  %56 = load i32, i32* %ch.addr, align 4, !dbg !5993
  %idxprom62 = sext i32 %56 to i64, !dbg !5992
  %57 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !5992
  %channel_residues63 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %57, i32 0, i32 67, !dbg !5994
  %arrayidx64 = getelementptr inbounds [8 x [16384 x i32]], [8 x [16384 x i32]]* %channel_residues63, i64 0, i64 %idxprom62, !dbg !5992
  %arrayidx65 = getelementptr inbounds [16384 x i32], [16384 x i32]* %arrayidx64, i64 0, i64 %idxprom61, !dbg !5992
  store i32 %54, i32* %arrayidx65, align 4, !dbg !5995
  br label %for.inc, !dbg !5996

for.inc:                                          ; preds = %for.body3
  %58 = load i32, i32* %icoef, align 4, !dbg !5997
  %inc = add nsw i32 %58, 1, !dbg !5997
  store i32 %inc, i32* %icoef, align 4, !dbg !5997
  br label %for.cond1, !dbg !5999, !llvm.loop !6000

for.end:                                          ; preds = %for.cond1
  br label %for.inc66, !dbg !6002

for.inc66:                                        ; preds = %for.end
  %59 = load i32, i32* %ilms, align 4, !dbg !6004
  %dec = add nsw i32 %59, -1, !dbg !6004
  store i32 %dec, i32* %ilms, align 4, !dbg !6004
  br label %for.cond, !dbg !6006, !llvm.loop !6007

for.end67:                                        ; preds = %for.cond
  call void asm sideeffect "emms", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !6009, !srcloc !6017
  ret void, !dbg !6018
}

; Function Attrs: nounwind uwtable
define internal void @revert_mclms(%struct.WmallDecodeCtx* %s, i32 %tile_size) #1 !dbg !6019 {
entry:
  %s.addr = alloca %struct.WmallDecodeCtx*, align 8
  %tile_size.addr = alloca i32, align 4
  %icoef = alloca i32, align 4
  %pred = alloca [8 x i32], align 16
  store %struct.WmallDecodeCtx* %s, %struct.WmallDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WmallDecodeCtx** %s.addr, metadata !6020, metadata !1820), !dbg !6021
  store i32 %tile_size, i32* %tile_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tile_size.addr, metadata !6022, metadata !1820), !dbg !6023
  call void @llvm.dbg.declare(metadata i32* %icoef, metadata !6024, metadata !1820), !dbg !6025
  call void @llvm.dbg.declare(metadata [8 x i32]* %pred, metadata !6026, metadata !1820), !dbg !6027
  %0 = bitcast [8 x i32]* %pred to i8*, !dbg !6027
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 32, i32 16, i1 false), !dbg !6027
  store i32 0, i32* %icoef, align 4, !dbg !6028
  br label %for.cond, !dbg !6030

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %icoef, align 4, !dbg !6031
  %2 = load i32, i32* %tile_size.addr, align 4, !dbg !6034
  %cmp = icmp slt i32 %1, %2, !dbg !6035
  br i1 %cmp, label %for.body, label %for.end, !dbg !6036

for.body:                                         ; preds = %for.cond
  %3 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6037
  %4 = load i32, i32* %icoef, align 4, !dbg !6039
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %pred, i32 0, i32 0, !dbg !6040
  call void @mclms_predict(%struct.WmallDecodeCtx* %3, i32 %4, i32* %arraydecay), !dbg !6041
  %5 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6042
  %6 = load i32, i32* %icoef, align 4, !dbg !6043
  %arraydecay1 = getelementptr inbounds [8 x i32], [8 x i32]* %pred, i32 0, i32 0, !dbg !6044
  call void @mclms_update(%struct.WmallDecodeCtx* %5, i32 %6, i32* %arraydecay1), !dbg !6045
  br label %for.inc, !dbg !6046

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %icoef, align 4, !dbg !6047
  %inc = add nsw i32 %7, 1, !dbg !6047
  store i32 %inc, i32* %icoef, align 4, !dbg !6047
  br label %for.cond, !dbg !6049, !llvm.loop !6050

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6052
}

; Function Attrs: nounwind uwtable
define internal void @revert_inter_ch_decorr(%struct.WmallDecodeCtx* %s, i32 %tile_size) #1 !dbg !6053 {
entry:
  %s.addr = alloca %struct.WmallDecodeCtx*, align 8
  %tile_size.addr = alloca i32, align 4
  %icoef = alloca i32, align 4
  store %struct.WmallDecodeCtx* %s, %struct.WmallDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WmallDecodeCtx** %s.addr, metadata !6054, metadata !1820), !dbg !6055
  store i32 %tile_size, i32* %tile_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tile_size.addr, metadata !6056, metadata !1820), !dbg !6057
  %0 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6058
  %num_channels = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %0, i32 0, i32 12, !dbg !6060
  %1 = load i8, i8* %num_channels, align 2, !dbg !6060
  %conv = sext i8 %1 to i32, !dbg !6058
  %cmp = icmp ne i32 %conv, 2, !dbg !6061
  br i1 %cmp, label %if.then, label %if.else, !dbg !6062

if.then:                                          ; preds = %entry
  br label %if.end22, !dbg !6063

if.else:                                          ; preds = %entry
  %2 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6064
  %is_channel_coded = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %2, i32 0, i32 61, !dbg !6066
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %is_channel_coded, i64 0, i64 0, !dbg !6064
  %3 = load i32, i32* %arrayidx, align 4, !dbg !6064
  %tobool = icmp ne i32 %3, 0, !dbg !6064
  br i1 %tobool, label %if.then5, label %lor.lhs.false, !dbg !6067

lor.lhs.false:                                    ; preds = %if.else
  %4 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6068
  %is_channel_coded2 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %4, i32 0, i32 61, !dbg !6070
  %arrayidx3 = getelementptr inbounds [8 x i32], [8 x i32]* %is_channel_coded2, i64 0, i64 1, !dbg !6068
  %5 = load i32, i32* %arrayidx3, align 4, !dbg !6068
  %tobool4 = icmp ne i32 %5, 0, !dbg !6068
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !6071

if.then5:                                         ; preds = %lor.lhs.false, %if.else
  call void @llvm.dbg.declare(metadata i32* %icoef, metadata !6072, metadata !1820), !dbg !6074
  store i32 0, i32* %icoef, align 4, !dbg !6075
  br label %for.cond, !dbg !6077

for.cond:                                         ; preds = %for.inc, %if.then5
  %6 = load i32, i32* %icoef, align 4, !dbg !6078
  %7 = load i32, i32* %tile_size.addr, align 4, !dbg !6081
  %cmp6 = icmp slt i32 %6, %7, !dbg !6082
  br i1 %cmp6, label %for.body, label %for.end, !dbg !6083

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %icoef, align 4, !dbg !6084
  %idxprom = sext i32 %8 to i64, !dbg !6086
  %9 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6086
  %channel_residues = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %9, i32 0, i32 67, !dbg !6087
  %arrayidx8 = getelementptr inbounds [8 x [16384 x i32]], [8 x [16384 x i32]]* %channel_residues, i64 0, i64 1, !dbg !6086
  %arrayidx9 = getelementptr inbounds [16384 x i32], [16384 x i32]* %arrayidx8, i64 0, i64 %idxprom, !dbg !6086
  %10 = load i32, i32* %arrayidx9, align 4, !dbg !6086
  %shr = ashr i32 %10, 1, !dbg !6088
  %11 = load i32, i32* %icoef, align 4, !dbg !6089
  %idxprom10 = sext i32 %11 to i64, !dbg !6090
  %12 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6090
  %channel_residues11 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %12, i32 0, i32 67, !dbg !6091
  %arrayidx12 = getelementptr inbounds [8 x [16384 x i32]], [8 x [16384 x i32]]* %channel_residues11, i64 0, i64 0, !dbg !6090
  %arrayidx13 = getelementptr inbounds [16384 x i32], [16384 x i32]* %arrayidx12, i64 0, i64 %idxprom10, !dbg !6090
  %13 = load i32, i32* %arrayidx13, align 4, !dbg !6092
  %sub = sub nsw i32 %13, %shr, !dbg !6092
  store i32 %sub, i32* %arrayidx13, align 4, !dbg !6092
  %14 = load i32, i32* %icoef, align 4, !dbg !6093
  %idxprom14 = sext i32 %14 to i64, !dbg !6094
  %15 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6094
  %channel_residues15 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %15, i32 0, i32 67, !dbg !6095
  %arrayidx16 = getelementptr inbounds [8 x [16384 x i32]], [8 x [16384 x i32]]* %channel_residues15, i64 0, i64 0, !dbg !6094
  %arrayidx17 = getelementptr inbounds [16384 x i32], [16384 x i32]* %arrayidx16, i64 0, i64 %idxprom14, !dbg !6094
  %16 = load i32, i32* %arrayidx17, align 4, !dbg !6094
  %17 = load i32, i32* %icoef, align 4, !dbg !6096
  %idxprom18 = sext i32 %17 to i64, !dbg !6097
  %18 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6097
  %channel_residues19 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %18, i32 0, i32 67, !dbg !6098
  %arrayidx20 = getelementptr inbounds [8 x [16384 x i32]], [8 x [16384 x i32]]* %channel_residues19, i64 0, i64 1, !dbg !6097
  %arrayidx21 = getelementptr inbounds [16384 x i32], [16384 x i32]* %arrayidx20, i64 0, i64 %idxprom18, !dbg !6097
  %19 = load i32, i32* %arrayidx21, align 4, !dbg !6099
  %add = add nsw i32 %19, %16, !dbg !6099
  store i32 %add, i32* %arrayidx21, align 4, !dbg !6099
  br label %for.inc, !dbg !6100

for.inc:                                          ; preds = %for.body
  %20 = load i32, i32* %icoef, align 4, !dbg !6101
  %inc = add nsw i32 %20, 1, !dbg !6101
  store i32 %inc, i32* %icoef, align 4, !dbg !6101
  br label %for.cond, !dbg !6103, !llvm.loop !6104

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !6106

if.end:                                           ; preds = %for.end, %lor.lhs.false
  br label %if.end22

if.end22:                                         ; preds = %if.then, %if.end
  ret void, !dbg !6107
}

; Function Attrs: nounwind uwtable
define internal void @revert_acfilter(%struct.WmallDecodeCtx* %s, i32 %tile_size) #1 !dbg !6108 {
entry:
  %s.addr = alloca %struct.WmallDecodeCtx*, align 8
  %tile_size.addr = alloca i32, align 4
  %ich = alloca i32, align 4
  %pred = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %filter_coeffs = alloca i16*, align 8
  %scaling = alloca i32, align 4
  %order = alloca i32, align 4
  %prevvalues = alloca i32*, align 8
  store %struct.WmallDecodeCtx* %s, %struct.WmallDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WmallDecodeCtx** %s.addr, metadata !6109, metadata !1820), !dbg !6110
  store i32 %tile_size, i32* %tile_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tile_size.addr, metadata !6111, metadata !1820), !dbg !6112
  call void @llvm.dbg.declare(metadata i32* %ich, metadata !6113, metadata !1820), !dbg !6114
  call void @llvm.dbg.declare(metadata i32* %pred, metadata !6115, metadata !1820), !dbg !6116
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6117, metadata !1820), !dbg !6118
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6119, metadata !1820), !dbg !6120
  call void @llvm.dbg.declare(metadata i16** %filter_coeffs, metadata !6121, metadata !1820), !dbg !6122
  %0 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6123
  %acfilter_coeffs = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %0, i32 0, i32 46, !dbg !6124
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %acfilter_coeffs, i32 0, i32 0, !dbg !6123
  store i16* %arraydecay, i16** %filter_coeffs, align 8, !dbg !6122
  call void @llvm.dbg.declare(metadata i32* %scaling, metadata !6125, metadata !1820), !dbg !6126
  %1 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6127
  %acfilter_scaling = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %1, i32 0, i32 45, !dbg !6128
  %2 = load i8, i8* %acfilter_scaling, align 2, !dbg !6128
  %conv = sext i8 %2 to i32, !dbg !6127
  store i32 %conv, i32* %scaling, align 4, !dbg !6126
  call void @llvm.dbg.declare(metadata i32* %order, metadata !6129, metadata !1820), !dbg !6130
  %3 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6131
  %acfilter_order = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %3, i32 0, i32 44, !dbg !6132
  %4 = load i8, i8* %acfilter_order, align 1, !dbg !6132
  %conv1 = sext i8 %4 to i32, !dbg !6131
  store i32 %conv1, i32* %order, align 4, !dbg !6130
  store i32 0, i32* %ich, align 4, !dbg !6133
  br label %for.cond, !dbg !6135

for.cond:                                         ; preds = %for.inc89, %entry
  %5 = load i32, i32* %ich, align 4, !dbg !6136
  %6 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6139
  %num_channels = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %6, i32 0, i32 12, !dbg !6140
  %7 = load i8, i8* %num_channels, align 2, !dbg !6140
  %conv2 = sext i8 %7 to i32, !dbg !6139
  %cmp = icmp slt i32 %5, %conv2, !dbg !6141
  br i1 %cmp, label %for.body, label %for.end91, !dbg !6142

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32** %prevvalues, metadata !6143, metadata !1820), !dbg !6145
  %8 = load i32, i32* %ich, align 4, !dbg !6146
  %idxprom = sext i32 %8 to i64, !dbg !6147
  %9 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6147
  %acfilter_prevvalues = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %9, i32 0, i32 47, !dbg !6148
  %arrayidx = getelementptr inbounds [8 x [16 x i32]], [8 x [16 x i32]]* %acfilter_prevvalues, i64 0, i64 %idxprom, !dbg !6147
  %arraydecay4 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx, i32 0, i32 0, !dbg !6147
  store i32* %arraydecay4, i32** %prevvalues, align 8, !dbg !6145
  store i32 0, i32* %i, align 4, !dbg !6149
  br label %for.cond5, !dbg !6151

for.cond5:                                        ; preds = %for.inc37, %for.body
  %10 = load i32, i32* %i, align 4, !dbg !6152
  %11 = load i32, i32* %order, align 4, !dbg !6155
  %cmp6 = icmp slt i32 %10, %11, !dbg !6156
  br i1 %cmp6, label %for.body8, label %for.end39, !dbg !6157

for.body8:                                        ; preds = %for.cond5
  store i32 0, i32* %pred, align 4, !dbg !6158
  store i32 0, i32* %j, align 4, !dbg !6160
  br label %for.cond9, !dbg !6162

for.cond9:                                        ; preds = %for.inc, %for.body8
  %12 = load i32, i32* %j, align 4, !dbg !6163
  %13 = load i32, i32* %order, align 4, !dbg !6166
  %cmp10 = icmp slt i32 %12, %13, !dbg !6167
  br i1 %cmp10, label %for.body12, label %for.end, !dbg !6168

for.body12:                                       ; preds = %for.cond9
  %14 = load i32, i32* %i, align 4, !dbg !6169
  %15 = load i32, i32* %j, align 4, !dbg !6172
  %cmp13 = icmp sle i32 %14, %15, !dbg !6173
  br i1 %cmp13, label %if.then, label %if.else, !dbg !6174

if.then:                                          ; preds = %for.body12
  %16 = load i32, i32* %j, align 4, !dbg !6175
  %idxprom15 = sext i32 %16 to i64, !dbg !6176
  %17 = load i16*, i16** %filter_coeffs, align 8, !dbg !6176
  %arrayidx16 = getelementptr inbounds i16, i16* %17, i64 %idxprom15, !dbg !6176
  %18 = load i16, i16* %arrayidx16, align 2, !dbg !6176
  %conv17 = sext i16 %18 to i32, !dbg !6176
  %19 = load i32, i32* %j, align 4, !dbg !6177
  %20 = load i32, i32* %i, align 4, !dbg !6178
  %sub = sub nsw i32 %19, %20, !dbg !6179
  %idxprom18 = sext i32 %sub to i64, !dbg !6180
  %21 = load i32*, i32** %prevvalues, align 8, !dbg !6180
  %arrayidx19 = getelementptr inbounds i32, i32* %21, i64 %idxprom18, !dbg !6180
  %22 = load i32, i32* %arrayidx19, align 4, !dbg !6180
  %mul = mul nsw i32 %conv17, %22, !dbg !6181
  %23 = load i32, i32* %pred, align 4, !dbg !6182
  %add = add nsw i32 %23, %mul, !dbg !6182
  store i32 %add, i32* %pred, align 4, !dbg !6182
  br label %if.end, !dbg !6183

if.else:                                          ; preds = %for.body12
  %24 = load i32, i32* %i, align 4, !dbg !6184
  %25 = load i32, i32* %j, align 4, !dbg !6185
  %sub20 = sub nsw i32 %24, %25, !dbg !6186
  %sub21 = sub nsw i32 %sub20, 1, !dbg !6187
  %idxprom22 = sext i32 %sub21 to i64, !dbg !6188
  %26 = load i32, i32* %ich, align 4, !dbg !6189
  %idxprom23 = sext i32 %26 to i64, !dbg !6188
  %27 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6188
  %channel_residues = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %27, i32 0, i32 67, !dbg !6190
  %arrayidx24 = getelementptr inbounds [8 x [16384 x i32]], [8 x [16384 x i32]]* %channel_residues, i64 0, i64 %idxprom23, !dbg !6188
  %arrayidx25 = getelementptr inbounds [16384 x i32], [16384 x i32]* %arrayidx24, i64 0, i64 %idxprom22, !dbg !6188
  %28 = load i32, i32* %arrayidx25, align 4, !dbg !6188
  %29 = load i32, i32* %j, align 4, !dbg !6191
  %idxprom26 = sext i32 %29 to i64, !dbg !6192
  %30 = load i16*, i16** %filter_coeffs, align 8, !dbg !6192
  %arrayidx27 = getelementptr inbounds i16, i16* %30, i64 %idxprom26, !dbg !6192
  %31 = load i16, i16* %arrayidx27, align 2, !dbg !6192
  %conv28 = sext i16 %31 to i32, !dbg !6192
  %mul29 = mul nsw i32 %28, %conv28, !dbg !6193
  %32 = load i32, i32* %pred, align 4, !dbg !6194
  %add30 = add nsw i32 %32, %mul29, !dbg !6194
  store i32 %add30, i32* %pred, align 4, !dbg !6194
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !6195

for.inc:                                          ; preds = %if.end
  %33 = load i32, i32* %j, align 4, !dbg !6196
  %inc = add nsw i32 %33, 1, !dbg !6196
  store i32 %inc, i32* %j, align 4, !dbg !6196
  br label %for.cond9, !dbg !6198, !llvm.loop !6199

for.end:                                          ; preds = %for.cond9
  %34 = load i32, i32* %scaling, align 4, !dbg !6201
  %35 = load i32, i32* %pred, align 4, !dbg !6202
  %shr = ashr i32 %35, %34, !dbg !6202
  store i32 %shr, i32* %pred, align 4, !dbg !6202
  %36 = load i32, i32* %pred, align 4, !dbg !6203
  %37 = load i32, i32* %i, align 4, !dbg !6204
  %idxprom31 = sext i32 %37 to i64, !dbg !6205
  %38 = load i32, i32* %ich, align 4, !dbg !6206
  %idxprom32 = sext i32 %38 to i64, !dbg !6205
  %39 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6205
  %channel_residues33 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %39, i32 0, i32 67, !dbg !6207
  %arrayidx34 = getelementptr inbounds [8 x [16384 x i32]], [8 x [16384 x i32]]* %channel_residues33, i64 0, i64 %idxprom32, !dbg !6205
  %arrayidx35 = getelementptr inbounds [16384 x i32], [16384 x i32]* %arrayidx34, i64 0, i64 %idxprom31, !dbg !6205
  %40 = load i32, i32* %arrayidx35, align 4, !dbg !6208
  %add36 = add nsw i32 %40, %36, !dbg !6208
  store i32 %add36, i32* %arrayidx35, align 4, !dbg !6208
  br label %for.inc37, !dbg !6209

for.inc37:                                        ; preds = %for.end
  %41 = load i32, i32* %i, align 4, !dbg !6210
  %inc38 = add nsw i32 %41, 1, !dbg !6210
  store i32 %inc38, i32* %i, align 4, !dbg !6210
  br label %for.cond5, !dbg !6212, !llvm.loop !6213

for.end39:                                        ; preds = %for.cond5
  %42 = load i32, i32* %order, align 4, !dbg !6215
  store i32 %42, i32* %i, align 4, !dbg !6217
  br label %for.cond40, !dbg !6218

for.cond40:                                       ; preds = %for.inc70, %for.end39
  %43 = load i32, i32* %i, align 4, !dbg !6219
  %44 = load i32, i32* %tile_size.addr, align 4, !dbg !6222
  %cmp41 = icmp slt i32 %43, %44, !dbg !6223
  br i1 %cmp41, label %for.body43, label %for.end72, !dbg !6224

for.body43:                                       ; preds = %for.cond40
  store i32 0, i32* %pred, align 4, !dbg !6225
  store i32 0, i32* %j, align 4, !dbg !6227
  br label %for.cond44, !dbg !6229

for.cond44:                                       ; preds = %for.inc60, %for.body43
  %45 = load i32, i32* %j, align 4, !dbg !6230
  %46 = load i32, i32* %order, align 4, !dbg !6233
  %cmp45 = icmp slt i32 %45, %46, !dbg !6234
  br i1 %cmp45, label %for.body47, label %for.end62, !dbg !6235

for.body47:                                       ; preds = %for.cond44
  %47 = load i32, i32* %i, align 4, !dbg !6236
  %48 = load i32, i32* %j, align 4, !dbg !6237
  %sub48 = sub nsw i32 %47, %48, !dbg !6238
  %sub49 = sub nsw i32 %sub48, 1, !dbg !6239
  %idxprom50 = sext i32 %sub49 to i64, !dbg !6240
  %49 = load i32, i32* %ich, align 4, !dbg !6241
  %idxprom51 = sext i32 %49 to i64, !dbg !6240
  %50 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6240
  %channel_residues52 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %50, i32 0, i32 67, !dbg !6242
  %arrayidx53 = getelementptr inbounds [8 x [16384 x i32]], [8 x [16384 x i32]]* %channel_residues52, i64 0, i64 %idxprom51, !dbg !6240
  %arrayidx54 = getelementptr inbounds [16384 x i32], [16384 x i32]* %arrayidx53, i64 0, i64 %idxprom50, !dbg !6240
  %51 = load i32, i32* %arrayidx54, align 4, !dbg !6240
  %52 = load i32, i32* %j, align 4, !dbg !6243
  %idxprom55 = sext i32 %52 to i64, !dbg !6244
  %53 = load i16*, i16** %filter_coeffs, align 8, !dbg !6244
  %arrayidx56 = getelementptr inbounds i16, i16* %53, i64 %idxprom55, !dbg !6244
  %54 = load i16, i16* %arrayidx56, align 2, !dbg !6244
  %conv57 = sext i16 %54 to i32, !dbg !6244
  %mul58 = mul i32 %51, %conv57, !dbg !6245
  %55 = load i32, i32* %pred, align 4, !dbg !6246
  %add59 = add i32 %55, %mul58, !dbg !6246
  store i32 %add59, i32* %pred, align 4, !dbg !6246
  br label %for.inc60, !dbg !6247

for.inc60:                                        ; preds = %for.body47
  %56 = load i32, i32* %j, align 4, !dbg !6248
  %inc61 = add nsw i32 %56, 1, !dbg !6248
  store i32 %inc61, i32* %j, align 4, !dbg !6248
  br label %for.cond44, !dbg !6250, !llvm.loop !6251

for.end62:                                        ; preds = %for.cond44
  %57 = load i32, i32* %scaling, align 4, !dbg !6253
  %58 = load i32, i32* %pred, align 4, !dbg !6254
  %shr63 = ashr i32 %58, %57, !dbg !6254
  store i32 %shr63, i32* %pred, align 4, !dbg !6254
  %59 = load i32, i32* %pred, align 4, !dbg !6255
  %60 = load i32, i32* %i, align 4, !dbg !6256
  %idxprom64 = sext i32 %60 to i64, !dbg !6257
  %61 = load i32, i32* %ich, align 4, !dbg !6258
  %idxprom65 = sext i32 %61 to i64, !dbg !6257
  %62 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6257
  %channel_residues66 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %62, i32 0, i32 67, !dbg !6259
  %arrayidx67 = getelementptr inbounds [8 x [16384 x i32]], [8 x [16384 x i32]]* %channel_residues66, i64 0, i64 %idxprom65, !dbg !6257
  %arrayidx68 = getelementptr inbounds [16384 x i32], [16384 x i32]* %arrayidx67, i64 0, i64 %idxprom64, !dbg !6257
  %63 = load i32, i32* %arrayidx68, align 4, !dbg !6260
  %add69 = add nsw i32 %63, %59, !dbg !6260
  store i32 %add69, i32* %arrayidx68, align 4, !dbg !6260
  br label %for.inc70, !dbg !6261

for.inc70:                                        ; preds = %for.end62
  %64 = load i32, i32* %i, align 4, !dbg !6262
  %inc71 = add nsw i32 %64, 1, !dbg !6262
  store i32 %inc71, i32* %i, align 4, !dbg !6262
  br label %for.cond40, !dbg !6264, !llvm.loop !6265

for.end72:                                        ; preds = %for.cond40
  store i32 0, i32* %j, align 4, !dbg !6267
  br label %for.cond73, !dbg !6269

for.cond73:                                       ; preds = %for.inc86, %for.end72
  %65 = load i32, i32* %j, align 4, !dbg !6270
  %66 = load i32, i32* %order, align 4, !dbg !6273
  %cmp74 = icmp slt i32 %65, %66, !dbg !6274
  br i1 %cmp74, label %for.body76, label %for.end88, !dbg !6275

for.body76:                                       ; preds = %for.cond73
  %67 = load i32, i32* %tile_size.addr, align 4, !dbg !6276
  %68 = load i32, i32* %j, align 4, !dbg !6277
  %sub77 = sub nsw i32 %67, %68, !dbg !6278
  %sub78 = sub nsw i32 %sub77, 1, !dbg !6279
  %idxprom79 = sext i32 %sub78 to i64, !dbg !6280
  %69 = load i32, i32* %ich, align 4, !dbg !6281
  %idxprom80 = sext i32 %69 to i64, !dbg !6280
  %70 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6280
  %channel_residues81 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %70, i32 0, i32 67, !dbg !6282
  %arrayidx82 = getelementptr inbounds [8 x [16384 x i32]], [8 x [16384 x i32]]* %channel_residues81, i64 0, i64 %idxprom80, !dbg !6280
  %arrayidx83 = getelementptr inbounds [16384 x i32], [16384 x i32]* %arrayidx82, i64 0, i64 %idxprom79, !dbg !6280
  %71 = load i32, i32* %arrayidx83, align 4, !dbg !6280
  %72 = load i32, i32* %j, align 4, !dbg !6283
  %idxprom84 = sext i32 %72 to i64, !dbg !6284
  %73 = load i32*, i32** %prevvalues, align 8, !dbg !6284
  %arrayidx85 = getelementptr inbounds i32, i32* %73, i64 %idxprom84, !dbg !6284
  store i32 %71, i32* %arrayidx85, align 4, !dbg !6285
  br label %for.inc86, !dbg !6284

for.inc86:                                        ; preds = %for.body76
  %74 = load i32, i32* %j, align 4, !dbg !6286
  %inc87 = add nsw i32 %74, 1, !dbg !6286
  store i32 %inc87, i32* %j, align 4, !dbg !6286
  br label %for.cond73, !dbg !6288, !llvm.loop !6289

for.end88:                                        ; preds = %for.cond73
  br label %for.inc89, !dbg !6291

for.inc89:                                        ; preds = %for.end88
  %75 = load i32, i32* %ich, align 4, !dbg !6292
  %inc90 = add nsw i32 %75, 1, !dbg !6292
  store i32 %inc90, i32* %ich, align 4, !dbg !6292
  br label %for.cond, !dbg !6294, !llvm.loop !6295

for.end91:                                        ; preds = %for.cond
  ret void, !dbg !6297
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_sbits(%struct.GetBitContext* %s, i32 %n) #4 !dbg !6298 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !3022, metadata !1820), !dbg !6299
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !6301, metadata !1820), !dbg !6302
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6303, metadata !1820), !dbg !6304
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !6305, metadata !1820), !dbg !6306
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !6307, metadata !1820), !dbg !6308
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6309
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !6310
  %1 = load i32, i32* %index, align 8, !dbg !6310
  store i32 %1, i32* %re_index, align 4, !dbg !6308
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !6311, metadata !1820), !dbg !6312
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !6313, metadata !1820), !dbg !6314
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6315
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !6316
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !6316
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !6314
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6317
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !6318
  %5 = load i8*, i8** %buffer, align 8, !dbg !6318
  %6 = load i32, i32* %re_index, align 4, !dbg !6319
  %shr = lshr i32 %6, 3, !dbg !6320
  %idx.ext = zext i32 %shr to i64, !dbg !6321
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !6321
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !6322
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !6322
  %8 = load i32, i32* %l, align 1, !dbg !6322
  store i32 %8, i32* %x.addr.i, align 4, !dbg !6323
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !6324
  %shl.i = shl i32 %9, 8, !dbg !6325
  %and.i = and i32 %shl.i, 65280, !dbg !6326
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !6327
  %shr.i = lshr i32 %10, 8, !dbg !6328
  %and1.i = and i32 %shr.i, 255, !dbg !6329
  %or.i = or i32 %and.i, %and1.i, !dbg !6330
  %shl2.i = shl i32 %or.i, 16, !dbg !6331
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !6332
  %shr3.i = lshr i32 %11, 16, !dbg !6333
  %shl4.i = shl i32 %shr3.i, 8, !dbg !6334
  %and5.i = and i32 %shl4.i, 65280, !dbg !6335
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !6336
  %shr6.i = lshr i32 %12, 16, !dbg !6337
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !6338
  %and8.i = and i32 %shr7.i, 255, !dbg !6339
  %or9.i = or i32 %and5.i, %and8.i, !dbg !6340
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !6341
  %13 = load i32, i32* %re_index, align 4, !dbg !6342
  %and = and i32 %13, 7, !dbg !6343
  %shl = shl i32 %or10.i, %and, !dbg !6344
  store i32 %shl, i32* %re_cache, align 4, !dbg !6345
  %14 = load i32, i32* %re_cache, align 4, !dbg !6346
  %15 = load i32, i32* %n.addr, align 4, !dbg !6347
  %conv = trunc i32 %15 to i8, !dbg !6347
  %call4 = call i32 @NEG_SSR32(i32 %14, i8 signext %conv), !dbg !6348
  store i32 %call4, i32* %tmp, align 4, !dbg !6349
  %16 = load i32, i32* %re_size_plus8, align 4, !dbg !6350
  %17 = load i32, i32* %re_index, align 4, !dbg !6351
  %18 = load i32, i32* %n.addr, align 4, !dbg !6352
  %add = add i32 %17, %18, !dbg !6353
  %cmp = icmp ugt i32 %16, %add, !dbg !6354
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6355

cond.true:                                        ; preds = %entry
  %19 = load i32, i32* %re_index, align 4, !dbg !6356
  %20 = load i32, i32* %n.addr, align 4, !dbg !6358
  %add6 = add i32 %19, %20, !dbg !6359
  br label %cond.end, !dbg !6360

cond.false:                                       ; preds = %entry
  %21 = load i32, i32* %re_size_plus8, align 4, !dbg !6361
  br label %cond.end, !dbg !6363

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add6, %cond.true ], [ %21, %cond.false ], !dbg !6364
  store i32 %cond, i32* %re_index, align 4, !dbg !6366
  %22 = load i32, i32* %re_index, align 4, !dbg !6367
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6368
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 2, !dbg !6369
  store i32 %22, i32* %index7, align 8, !dbg !6370
  %24 = load i32, i32* %tmp, align 4, !dbg !6371
  ret i32 %24, !dbg !6372
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @NEG_SSR32(i32 %a, i8 signext %s) #4 !dbg !6373 {
entry:
  %a.addr = alloca i32, align 4
  %s.addr = alloca i8, align 1
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !6377, metadata !1820), !dbg !6378
  store i8 %s, i8* %s.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %s.addr, metadata !6379, metadata !1820), !dbg !6380
  %0 = load i32, i32* %a.addr, align 4, !dbg !6381
  %1 = load i8, i8* %s.addr, align 1, !dbg !6382
  %conv = sext i8 %1 to i32, !dbg !6382
  %sub = sub nsw i32 0, %conv, !dbg !6383
  %conv1 = trunc i32 %sub to i8, !dbg !6384
  %2 = call i32 asm "sarl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %conv1, i32 %0) #2, !dbg !6381, !srcloc !6385
  store i32 %2, i32* %a.addr, align 4, !dbg !6381
  %3 = load i32, i32* %a.addr, align 4, !dbg !6386
  ret i32 %3, !dbg !6387
}

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i32 @sign_extend(i32 %val, i32 %bits) #7 !dbg !6388 {
entry:
  %val.addr = alloca i32, align 4
  %bits.addr = alloca i32, align 4
  %shift = alloca i32, align 4
  %v = alloca %union.anon, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !6392, metadata !1820), !dbg !6393
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !6394, metadata !1820), !dbg !6395
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !6396, metadata !1820), !dbg !6397
  %0 = load i32, i32* %bits.addr, align 4, !dbg !6398
  %conv = zext i32 %0 to i64, !dbg !6398
  %sub = sub i64 32, %conv, !dbg !6399
  %conv1 = trunc i64 %sub to i32, !dbg !6400
  store i32 %conv1, i32* %shift, align 4, !dbg !6397
  call void @llvm.dbg.declare(metadata %union.anon* %v, metadata !6401, metadata !1820), !dbg !6406
  %u = bitcast %union.anon* %v to i32*, !dbg !6407
  %1 = load i32, i32* %val.addr, align 4, !dbg !6408
  %2 = load i32, i32* %shift, align 4, !dbg !6409
  %shl = shl i32 %1, %2, !dbg !6410
  store i32 %shl, i32* %u, align 4, !dbg !6407
  %s = bitcast %union.anon* %v to i32*, !dbg !6411
  %3 = load i32, i32* %s, align 4, !dbg !6411
  %4 = load i32, i32* %shift, align 4, !dbg !6412
  %shr = ashr i32 %3, %4, !dbg !6413
  ret i32 %shr, !dbg !6414
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_long(%struct.GetBitContext* %s, i32 %n) #4 !dbg !6415 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !6416, metadata !1820), !dbg !6417
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6418, metadata !1820), !dbg !6419
  %0 = load i32, i32* %n.addr, align 4, !dbg !6420
  %tobool = icmp ne i32 %0, 0, !dbg !6420
  br i1 %tobool, label %if.else, label %if.then, !dbg !6422

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6423
  br label %return, !dbg !6423

if.else:                                          ; preds = %entry
  %1 = load i32, i32* %n.addr, align 4, !dbg !6425
  %cmp = icmp sle i32 %1, 25, !dbg !6427
  br i1 %cmp, label %if.then1, label %if.else2, !dbg !6428

if.then1:                                         ; preds = %if.else
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6429
  %3 = load i32, i32* %n.addr, align 4, !dbg !6431
  %call = call i32 @get_bits(%struct.GetBitContext* %2, i32 %3), !dbg !6432
  store i32 %call, i32* %retval, align 4, !dbg !6433
  br label %return, !dbg !6433

if.else2:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6434, metadata !1820), !dbg !6436
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6437
  %call3 = call i32 @get_bits(%struct.GetBitContext* %4, i32 16), !dbg !6438
  %5 = load i32, i32* %n.addr, align 4, !dbg !6439
  %sub = sub nsw i32 %5, 16, !dbg !6440
  %shl = shl i32 %call3, %sub, !dbg !6441
  store i32 %shl, i32* %ret, align 4, !dbg !6436
  %6 = load i32, i32* %ret, align 4, !dbg !6442
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6443
  %8 = load i32, i32* %n.addr, align 4, !dbg !6444
  %sub4 = sub nsw i32 %8, 16, !dbg !6445
  %call5 = call i32 @get_bits(%struct.GetBitContext* %7, i32 %sub4), !dbg !6446
  %or = or i32 %6, %call5, !dbg !6447
  store i32 %or, i32* %retval, align 4, !dbg !6448
  br label %return, !dbg !6448

return:                                           ; preds = %if.else2, %if.then1, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !6449
  ret i32 %9, !dbg !6449
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_left(%struct.GetBitContext* %gb) #4 !dbg !6450 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !6453, metadata !1820), !dbg !6454
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6455
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 3, !dbg !6456
  %1 = load i32, i32* %size_in_bits, align 4, !dbg !6456
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6457
  %call = call i32 @get_bits_count(%struct.GetBitContext* %2), !dbg !6458
  %sub = sub nsw i32 %1, %call, !dbg !6459
  ret i32 %sub, !dbg !6460
}

; Function Attrs: nounwind uwtable
define internal void @lms_update32(%struct.WmallDecodeCtx* %s, i32 %ich, i32 %ilms, i32 %input) #1 !dbg !6461 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4331, metadata !1820), !dbg !6462
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !4338, metadata !1820), !dbg !6465
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !4340, metadata !1820), !dbg !6466
  %s.addr = alloca %struct.WmallDecodeCtx*, align 8
  %ich.addr = alloca i32, align 4
  %ilms.addr = alloca i32, align 4
  %input.addr = alloca i32, align 4
  %recent = alloca i32, align 4
  %range = alloca i32, align 4
  %order = alloca i32, align 4
  %prev = alloca i32*, align 8
  store %struct.WmallDecodeCtx* %s, %struct.WmallDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WmallDecodeCtx** %s.addr, metadata !6467, metadata !1820), !dbg !6468
  store i32 %ich, i32* %ich.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ich.addr, metadata !6469, metadata !1820), !dbg !6470
  store i32 %ilms, i32* %ilms.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ilms.addr, metadata !6471, metadata !1820), !dbg !6472
  store i32 %input, i32* %input.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %input.addr, metadata !6473, metadata !1820), !dbg !6474
  call void @llvm.dbg.declare(metadata i32* %recent, metadata !6475, metadata !1820), !dbg !6476
  %0 = load i32, i32* %ilms.addr, align 4, !dbg !6477
  %idxprom = sext i32 %0 to i64, !dbg !6478
  %1 = load i32, i32* %ich.addr, align 4, !dbg !6479
  %idxprom1 = sext i32 %1 to i64, !dbg !6478
  %2 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6478
  %cdlms = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %2, i32 0, i32 58, !dbg !6480
  %arrayidx = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms, i64 0, i64 %idxprom1, !dbg !6478
  %arrayidx2 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx, i64 0, i64 %idxprom, !dbg !6478
  %recent3 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx2, i32 0, i32 7, !dbg !6481
  %3 = load i32, i32* %recent3, align 16, !dbg !6481
  store i32 %3, i32* %recent, align 4, !dbg !6476
  call void @llvm.dbg.declare(metadata i32* %range, metadata !6482, metadata !1820), !dbg !6483
  %4 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6484
  %bits_per_sample = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %4, i32 0, i32 9, !dbg !6485
  %5 = load i8, i8* %bits_per_sample, align 4, !dbg !6485
  %conv = zext i8 %5 to i32, !dbg !6484
  %sub = sub nsw i32 %conv, 1, !dbg !6486
  %shl = shl i32 1, %sub, !dbg !6487
  store i32 %shl, i32* %range, align 4, !dbg !6483
  call void @llvm.dbg.declare(metadata i32* %order, metadata !6488, metadata !1820), !dbg !6489
  %6 = load i32, i32* %ilms.addr, align 4, !dbg !6490
  %idxprom4 = sext i32 %6 to i64, !dbg !6491
  %7 = load i32, i32* %ich.addr, align 4, !dbg !6492
  %idxprom5 = sext i32 %7 to i64, !dbg !6491
  %8 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6491
  %cdlms6 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %8, i32 0, i32 58, !dbg !6493
  %arrayidx7 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms6, i64 0, i64 %idxprom5, !dbg !6491
  %arrayidx8 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx7, i64 0, i64 %idxprom4, !dbg !6491
  %order9 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx8, i32 0, i32 0, !dbg !6494
  %9 = load i32, i32* %order9, align 16, !dbg !6494
  store i32 %9, i32* %order, align 4, !dbg !6489
  call void @llvm.dbg.declare(metadata i32** %prev, metadata !6495, metadata !1820), !dbg !6496
  %10 = load i32, i32* %ilms.addr, align 4, !dbg !6497
  %idxprom10 = sext i32 %10 to i64, !dbg !6498
  %11 = load i32, i32* %ich.addr, align 4, !dbg !6499
  %idxprom11 = sext i32 %11 to i64, !dbg !6498
  %12 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6498
  %cdlms12 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %12, i32 0, i32 58, !dbg !6500
  %arrayidx13 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms12, i64 0, i64 %idxprom11, !dbg !6498
  %arrayidx14 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx13, i64 0, i64 %idxprom10, !dbg !6498
  %lms_prevvalues = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx14, i32 0, i32 5, !dbg !6501
  %arraydecay = getelementptr inbounds [520 x i32], [520 x i32]* %lms_prevvalues, i32 0, i32 0, !dbg !6498
  store i32* %arraydecay, i32** %prev, align 8, !dbg !6496
  %13 = load i32, i32* %recent, align 4, !dbg !6502
  %tobool = icmp ne i32 %13, 0, !dbg !6502
  br i1 %tobool, label %if.then, label %if.else, !dbg !6504

if.then:                                          ; preds = %entry
  %14 = load i32, i32* %recent, align 4, !dbg !6505
  %dec = add nsw i32 %14, -1, !dbg !6505
  store i32 %dec, i32* %recent, align 4, !dbg !6505
  br label %if.end, !dbg !6507

if.else:                                          ; preds = %entry
  %15 = load i32*, i32** %prev, align 8, !dbg !6508
  %16 = load i32, i32* %order, align 4, !dbg !6511
  %idx.ext = sext i32 %16 to i64, !dbg !6512
  %add.ptr = getelementptr inbounds i32, i32* %15, i64 %idx.ext, !dbg !6512
  %17 = bitcast i32* %add.ptr to i8*, !dbg !6513
  %18 = load i32*, i32** %prev, align 8, !dbg !6514
  %19 = bitcast i32* %18 to i8*, !dbg !6513
  %20 = load i32, i32* %order, align 4, !dbg !6515
  %mul = mul nsw i32 4, %20, !dbg !6516
  %conv15 = sext i32 %mul to i64, !dbg !6517
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %19, i64 %conv15, i32 4, i1 false), !dbg !6513
  %21 = load i32, i32* %ilms.addr, align 4, !dbg !6518
  %idxprom16 = sext i32 %21 to i64, !dbg !6519
  %22 = load i32, i32* %ich.addr, align 4, !dbg !6520
  %idxprom17 = sext i32 %22 to i64, !dbg !6519
  %23 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6519
  %cdlms18 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %23, i32 0, i32 58, !dbg !6521
  %arrayidx19 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms18, i64 0, i64 %idxprom17, !dbg !6519
  %arrayidx20 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx19, i64 0, i64 %idxprom16, !dbg !6519
  %lms_updates = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx20, i32 0, i32 6, !dbg !6522
  %arraydecay21 = getelementptr inbounds [520 x i16], [520 x i16]* %lms_updates, i32 0, i32 0, !dbg !6519
  %24 = load i32, i32* %order, align 4, !dbg !6523
  %idx.ext22 = sext i32 %24 to i64, !dbg !6524
  %add.ptr23 = getelementptr inbounds i16, i16* %arraydecay21, i64 %idx.ext22, !dbg !6524
  %25 = bitcast i16* %add.ptr23 to i8*, !dbg !6525
  %26 = load i32, i32* %ilms.addr, align 4, !dbg !6526
  %idxprom24 = sext i32 %26 to i64, !dbg !6527
  %27 = load i32, i32* %ich.addr, align 4, !dbg !6528
  %idxprom25 = sext i32 %27 to i64, !dbg !6527
  %28 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6527
  %cdlms26 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %28, i32 0, i32 58, !dbg !6529
  %arrayidx27 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms26, i64 0, i64 %idxprom25, !dbg !6527
  %arrayidx28 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx27, i64 0, i64 %idxprom24, !dbg !6527
  %lms_updates29 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx28, i32 0, i32 6, !dbg !6530
  %arraydecay30 = getelementptr inbounds [520 x i16], [520 x i16]* %lms_updates29, i32 0, i32 0, !dbg !6525
  %29 = bitcast i16* %arraydecay30 to i8*, !dbg !6525
  %30 = load i32, i32* %order, align 4, !dbg !6531
  %conv31 = sext i32 %30 to i64, !dbg !6531
  %mul32 = mul i64 2, %conv31, !dbg !6532
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %29, i64 %mul32, i32 2, i1 false), !dbg !6533
  %31 = load i32, i32* %order, align 4, !dbg !6535
  %sub33 = sub nsw i32 %31, 1, !dbg !6536
  store i32 %sub33, i32* %recent, align 4, !dbg !6537
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %32 = load i32, i32* %input.addr, align 4, !dbg !6538
  %33 = load i32, i32* %range, align 4, !dbg !6539
  %sub34 = sub nsw i32 0, %33, !dbg !6540
  %34 = load i32, i32* %range, align 4, !dbg !6541
  %sub35 = sub nsw i32 %34, 1, !dbg !6542
  store i32 %32, i32* %a.addr.i, align 4, !dbg !6543
  store i32 %sub34, i32* %amin.addr.i, align 4, !dbg !6543
  store i32 %sub35, i32* %amax.addr.i, align 4, !dbg !6543
  %35 = load i32, i32* %a.addr.i, align 4, !dbg !6544
  %36 = load i32, i32* %amin.addr.i, align 4, !dbg !6545
  %cmp.i = icmp slt i32 %35, %36, !dbg !6546
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !6547

if.then.i:                                        ; preds = %if.end
  %37 = load i32, i32* %amin.addr.i, align 4, !dbg !6548
  store i32 %37, i32* %retval.i, align 4, !dbg !6549
  br label %av_clip_c.exit, !dbg !6549

if.else.i:                                        ; preds = %if.end
  %38 = load i32, i32* %a.addr.i, align 4, !dbg !6550
  %39 = load i32, i32* %amax.addr.i, align 4, !dbg !6551
  %cmp1.i = icmp sgt i32 %38, %39, !dbg !6552
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !6553

if.then2.i:                                       ; preds = %if.else.i
  %40 = load i32, i32* %amax.addr.i, align 4, !dbg !6554
  store i32 %40, i32* %retval.i, align 4, !dbg !6555
  br label %av_clip_c.exit, !dbg !6555

if.else3.i:                                       ; preds = %if.else.i
  %41 = load i32, i32* %a.addr.i, align 4, !dbg !6556
  store i32 %41, i32* %retval.i, align 4, !dbg !6557
  br label %av_clip_c.exit, !dbg !6557

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %42 = load i32, i32* %retval.i, align 4, !dbg !6558
  %43 = load i32, i32* %recent, align 4, !dbg !6559
  %idxprom36 = sext i32 %43 to i64, !dbg !6560
  %44 = load i32*, i32** %prev, align 8, !dbg !6560
  %arrayidx37 = getelementptr inbounds i32, i32* %44, i64 %idxprom36, !dbg !6560
  store i32 %42, i32* %arrayidx37, align 4, !dbg !6561
  %45 = load i32, i32* %input.addr, align 4, !dbg !6562
  %cmp = icmp sgt i32 %45, 0, !dbg !6563
  %conv38 = zext i1 %cmp to i32, !dbg !6563
  %46 = load i32, i32* %input.addr, align 4, !dbg !6564
  %cmp39 = icmp slt i32 %46, 0, !dbg !6565
  %conv40 = zext i1 %cmp39 to i32, !dbg !6565
  %sub41 = sub nsw i32 %conv38, %conv40, !dbg !6566
  %47 = load i32, i32* %ich.addr, align 4, !dbg !6567
  %idxprom42 = sext i32 %47 to i64, !dbg !6568
  %48 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6568
  %update_speed = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %48, i32 0, i32 62, !dbg !6569
  %arrayidx43 = getelementptr inbounds [8 x i32], [8 x i32]* %update_speed, i64 0, i64 %idxprom42, !dbg !6568
  %49 = load i32, i32* %arrayidx43, align 4, !dbg !6568
  %mul44 = mul nsw i32 %sub41, %49, !dbg !6570
  %conv45 = trunc i32 %mul44 to i16, !dbg !6571
  %50 = load i32, i32* %recent, align 4, !dbg !6572
  %idxprom46 = sext i32 %50 to i64, !dbg !6573
  %51 = load i32, i32* %ilms.addr, align 4, !dbg !6574
  %idxprom47 = sext i32 %51 to i64, !dbg !6573
  %52 = load i32, i32* %ich.addr, align 4, !dbg !6575
  %idxprom48 = sext i32 %52 to i64, !dbg !6573
  %53 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6573
  %cdlms49 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %53, i32 0, i32 58, !dbg !6576
  %arrayidx50 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms49, i64 0, i64 %idxprom48, !dbg !6573
  %arrayidx51 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx50, i64 0, i64 %idxprom47, !dbg !6573
  %lms_updates52 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx51, i32 0, i32 6, !dbg !6577
  %arrayidx53 = getelementptr inbounds [520 x i16], [520 x i16]* %lms_updates52, i64 0, i64 %idxprom46, !dbg !6573
  store i16 %conv45, i16* %arrayidx53, align 2, !dbg !6578
  %54 = load i32, i32* %recent, align 4, !dbg !6579
  %55 = load i32, i32* %order, align 4, !dbg !6580
  %shr = ashr i32 %55, 4, !dbg !6581
  %add = add nsw i32 %54, %shr, !dbg !6582
  %idxprom54 = sext i32 %add to i64, !dbg !6583
  %56 = load i32, i32* %ilms.addr, align 4, !dbg !6584
  %idxprom55 = sext i32 %56 to i64, !dbg !6583
  %57 = load i32, i32* %ich.addr, align 4, !dbg !6585
  %idxprom56 = sext i32 %57 to i64, !dbg !6583
  %58 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6583
  %cdlms57 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %58, i32 0, i32 58, !dbg !6586
  %arrayidx58 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms57, i64 0, i64 %idxprom56, !dbg !6583
  %arrayidx59 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx58, i64 0, i64 %idxprom55, !dbg !6583
  %lms_updates60 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx59, i32 0, i32 6, !dbg !6587
  %arrayidx61 = getelementptr inbounds [520 x i16], [520 x i16]* %lms_updates60, i64 0, i64 %idxprom54, !dbg !6583
  %59 = load i16, i16* %arrayidx61, align 2, !dbg !6588
  %conv62 = sext i16 %59 to i32, !dbg !6588
  %shr63 = ashr i32 %conv62, 2, !dbg !6588
  %conv64 = trunc i32 %shr63 to i16, !dbg !6588
  store i16 %conv64, i16* %arrayidx61, align 2, !dbg !6588
  %60 = load i32, i32* %recent, align 4, !dbg !6589
  %61 = load i32, i32* %order, align 4, !dbg !6590
  %shr65 = ashr i32 %61, 3, !dbg !6591
  %add66 = add nsw i32 %60, %shr65, !dbg !6592
  %idxprom67 = sext i32 %add66 to i64, !dbg !6593
  %62 = load i32, i32* %ilms.addr, align 4, !dbg !6594
  %idxprom68 = sext i32 %62 to i64, !dbg !6593
  %63 = load i32, i32* %ich.addr, align 4, !dbg !6595
  %idxprom69 = sext i32 %63 to i64, !dbg !6593
  %64 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6593
  %cdlms70 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %64, i32 0, i32 58, !dbg !6596
  %arrayidx71 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms70, i64 0, i64 %idxprom69, !dbg !6593
  %arrayidx72 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx71, i64 0, i64 %idxprom68, !dbg !6593
  %lms_updates73 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx72, i32 0, i32 6, !dbg !6597
  %arrayidx74 = getelementptr inbounds [520 x i16], [520 x i16]* %lms_updates73, i64 0, i64 %idxprom67, !dbg !6593
  %65 = load i16, i16* %arrayidx74, align 2, !dbg !6598
  %conv75 = sext i16 %65 to i32, !dbg !6598
  %shr76 = ashr i32 %conv75, 1, !dbg !6598
  %conv77 = trunc i32 %shr76 to i16, !dbg !6598
  store i16 %conv77, i16* %arrayidx74, align 2, !dbg !6598
  %66 = load i32, i32* %recent, align 4, !dbg !6599
  %67 = load i32, i32* %ilms.addr, align 4, !dbg !6600
  %idxprom78 = sext i32 %67 to i64, !dbg !6601
  %68 = load i32, i32* %ich.addr, align 4, !dbg !6602
  %idxprom79 = sext i32 %68 to i64, !dbg !6601
  %69 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6601
  %cdlms80 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %69, i32 0, i32 58, !dbg !6603
  %arrayidx81 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms80, i64 0, i64 %idxprom79, !dbg !6601
  %arrayidx82 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx81, i64 0, i64 %idxprom78, !dbg !6601
  %recent83 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx82, i32 0, i32 7, !dbg !6604
  store i32 %66, i32* %recent83, align 16, !dbg !6605
  %70 = load i32, i32* %ilms.addr, align 4, !dbg !6606
  %idxprom84 = sext i32 %70 to i64, !dbg !6607
  %71 = load i32, i32* %ich.addr, align 4, !dbg !6608
  %idxprom85 = sext i32 %71 to i64, !dbg !6607
  %72 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6607
  %cdlms86 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %72, i32 0, i32 58, !dbg !6609
  %arrayidx87 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms86, i64 0, i64 %idxprom85, !dbg !6607
  %arrayidx88 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx87, i64 0, i64 %idxprom84, !dbg !6607
  %lms_updates89 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx88, i32 0, i32 6, !dbg !6610
  %arraydecay90 = getelementptr inbounds [520 x i16], [520 x i16]* %lms_updates89, i32 0, i32 0, !dbg !6607
  %73 = load i32, i32* %recent, align 4, !dbg !6611
  %idx.ext91 = sext i32 %73 to i64, !dbg !6612
  %add.ptr92 = getelementptr inbounds i16, i16* %arraydecay90, i64 %idx.ext91, !dbg !6612
  %74 = load i32, i32* %order, align 4, !dbg !6613
  %idx.ext93 = sext i32 %74 to i64, !dbg !6614
  %add.ptr94 = getelementptr inbounds i16, i16* %add.ptr92, i64 %idx.ext93, !dbg !6614
  %75 = bitcast i16* %add.ptr94 to i8*, !dbg !6615
  %76 = load i32, i32* %recent, align 4, !dbg !6616
  %77 = load i32, i32* %order, align 4, !dbg !6617
  %add95 = add nsw i32 %76, %77, !dbg !6618
  %conv96 = sext i32 %add95 to i64, !dbg !6619
  %mul97 = mul i64 2, %conv96, !dbg !6620
  %sub98 = sub i64 1040, %mul97, !dbg !6621
  call void @llvm.memset.p0i8.i64(i8* %75, i8 0, i64 %sub98, i32 2, i1 false), !dbg !6622
  ret void, !dbg !6624
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #6

; Function Attrs: nounwind uwtable
define internal void @lms_update16(%struct.WmallDecodeCtx* %s, i32 %ich, i32 %ilms, i32 %input) #1 !dbg !6625 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4331, metadata !1820), !dbg !6626
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !4338, metadata !1820), !dbg !6629
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !4340, metadata !1820), !dbg !6630
  %s.addr = alloca %struct.WmallDecodeCtx*, align 8
  %ich.addr = alloca i32, align 4
  %ilms.addr = alloca i32, align 4
  %input.addr = alloca i32, align 4
  %recent = alloca i32, align 4
  %range = alloca i32, align 4
  %order = alloca i32, align 4
  %prev = alloca i16*, align 8
  store %struct.WmallDecodeCtx* %s, %struct.WmallDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WmallDecodeCtx** %s.addr, metadata !6631, metadata !1820), !dbg !6632
  store i32 %ich, i32* %ich.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ich.addr, metadata !6633, metadata !1820), !dbg !6634
  store i32 %ilms, i32* %ilms.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ilms.addr, metadata !6635, metadata !1820), !dbg !6636
  store i32 %input, i32* %input.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %input.addr, metadata !6637, metadata !1820), !dbg !6638
  call void @llvm.dbg.declare(metadata i32* %recent, metadata !6639, metadata !1820), !dbg !6640
  %0 = load i32, i32* %ilms.addr, align 4, !dbg !6641
  %idxprom = sext i32 %0 to i64, !dbg !6642
  %1 = load i32, i32* %ich.addr, align 4, !dbg !6643
  %idxprom1 = sext i32 %1 to i64, !dbg !6642
  %2 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6642
  %cdlms = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %2, i32 0, i32 58, !dbg !6644
  %arrayidx = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms, i64 0, i64 %idxprom1, !dbg !6642
  %arrayidx2 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx, i64 0, i64 %idxprom, !dbg !6642
  %recent3 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx2, i32 0, i32 7, !dbg !6645
  %3 = load i32, i32* %recent3, align 16, !dbg !6645
  store i32 %3, i32* %recent, align 4, !dbg !6640
  call void @llvm.dbg.declare(metadata i32* %range, metadata !6646, metadata !1820), !dbg !6647
  %4 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6648
  %bits_per_sample = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %4, i32 0, i32 9, !dbg !6649
  %5 = load i8, i8* %bits_per_sample, align 4, !dbg !6649
  %conv = zext i8 %5 to i32, !dbg !6648
  %sub = sub nsw i32 %conv, 1, !dbg !6650
  %shl = shl i32 1, %sub, !dbg !6651
  store i32 %shl, i32* %range, align 4, !dbg !6647
  call void @llvm.dbg.declare(metadata i32* %order, metadata !6652, metadata !1820), !dbg !6653
  %6 = load i32, i32* %ilms.addr, align 4, !dbg !6654
  %idxprom4 = sext i32 %6 to i64, !dbg !6655
  %7 = load i32, i32* %ich.addr, align 4, !dbg !6656
  %idxprom5 = sext i32 %7 to i64, !dbg !6655
  %8 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6655
  %cdlms6 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %8, i32 0, i32 58, !dbg !6657
  %arrayidx7 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms6, i64 0, i64 %idxprom5, !dbg !6655
  %arrayidx8 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx7, i64 0, i64 %idxprom4, !dbg !6655
  %order9 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx8, i32 0, i32 0, !dbg !6658
  %9 = load i32, i32* %order9, align 16, !dbg !6658
  store i32 %9, i32* %order, align 4, !dbg !6653
  call void @llvm.dbg.declare(metadata i16** %prev, metadata !6659, metadata !1820), !dbg !6660
  %10 = load i32, i32* %ilms.addr, align 4, !dbg !6661
  %idxprom10 = sext i32 %10 to i64, !dbg !6662
  %11 = load i32, i32* %ich.addr, align 4, !dbg !6663
  %idxprom11 = sext i32 %11 to i64, !dbg !6662
  %12 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6662
  %cdlms12 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %12, i32 0, i32 58, !dbg !6664
  %arrayidx13 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms12, i64 0, i64 %idxprom11, !dbg !6662
  %arrayidx14 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx13, i64 0, i64 %idxprom10, !dbg !6662
  %lms_prevvalues = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx14, i32 0, i32 5, !dbg !6665
  %arraydecay = getelementptr inbounds [520 x i32], [520 x i32]* %lms_prevvalues, i32 0, i32 0, !dbg !6662
  %13 = bitcast i32* %arraydecay to i16*, !dbg !6666
  store i16* %13, i16** %prev, align 8, !dbg !6660
  %14 = load i32, i32* %recent, align 4, !dbg !6667
  %tobool = icmp ne i32 %14, 0, !dbg !6667
  br i1 %tobool, label %if.then, label %if.else, !dbg !6669

if.then:                                          ; preds = %entry
  %15 = load i32, i32* %recent, align 4, !dbg !6670
  %dec = add nsw i32 %15, -1, !dbg !6670
  store i32 %dec, i32* %recent, align 4, !dbg !6670
  br label %if.end, !dbg !6672

if.else:                                          ; preds = %entry
  %16 = load i16*, i16** %prev, align 8, !dbg !6673
  %17 = load i32, i32* %order, align 4, !dbg !6676
  %idx.ext = sext i32 %17 to i64, !dbg !6677
  %add.ptr = getelementptr inbounds i16, i16* %16, i64 %idx.ext, !dbg !6677
  %18 = bitcast i16* %add.ptr to i8*, !dbg !6678
  %19 = load i16*, i16** %prev, align 8, !dbg !6679
  %20 = bitcast i16* %19 to i8*, !dbg !6678
  %21 = load i32, i32* %order, align 4, !dbg !6680
  %mul = mul nsw i32 2, %21, !dbg !6681
  %conv15 = sext i32 %mul to i64, !dbg !6682
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %20, i64 %conv15, i32 2, i1 false), !dbg !6678
  %22 = load i32, i32* %ilms.addr, align 4, !dbg !6683
  %idxprom16 = sext i32 %22 to i64, !dbg !6684
  %23 = load i32, i32* %ich.addr, align 4, !dbg !6685
  %idxprom17 = sext i32 %23 to i64, !dbg !6684
  %24 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6684
  %cdlms18 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %24, i32 0, i32 58, !dbg !6686
  %arrayidx19 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms18, i64 0, i64 %idxprom17, !dbg !6684
  %arrayidx20 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx19, i64 0, i64 %idxprom16, !dbg !6684
  %lms_updates = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx20, i32 0, i32 6, !dbg !6687
  %arraydecay21 = getelementptr inbounds [520 x i16], [520 x i16]* %lms_updates, i32 0, i32 0, !dbg !6684
  %25 = load i32, i32* %order, align 4, !dbg !6688
  %idx.ext22 = sext i32 %25 to i64, !dbg !6689
  %add.ptr23 = getelementptr inbounds i16, i16* %arraydecay21, i64 %idx.ext22, !dbg !6689
  %26 = bitcast i16* %add.ptr23 to i8*, !dbg !6690
  %27 = load i32, i32* %ilms.addr, align 4, !dbg !6691
  %idxprom24 = sext i32 %27 to i64, !dbg !6692
  %28 = load i32, i32* %ich.addr, align 4, !dbg !6693
  %idxprom25 = sext i32 %28 to i64, !dbg !6692
  %29 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6692
  %cdlms26 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %29, i32 0, i32 58, !dbg !6694
  %arrayidx27 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms26, i64 0, i64 %idxprom25, !dbg !6692
  %arrayidx28 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx27, i64 0, i64 %idxprom24, !dbg !6692
  %lms_updates29 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx28, i32 0, i32 6, !dbg !6695
  %arraydecay30 = getelementptr inbounds [520 x i16], [520 x i16]* %lms_updates29, i32 0, i32 0, !dbg !6690
  %30 = bitcast i16* %arraydecay30 to i8*, !dbg !6690
  %31 = load i32, i32* %order, align 4, !dbg !6696
  %conv31 = sext i32 %31 to i64, !dbg !6696
  %mul32 = mul i64 2, %conv31, !dbg !6697
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %30, i64 %mul32, i32 2, i1 false), !dbg !6698
  %32 = load i32, i32* %order, align 4, !dbg !6700
  %sub33 = sub nsw i32 %32, 1, !dbg !6701
  store i32 %sub33, i32* %recent, align 4, !dbg !6702
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %33 = load i32, i32* %input.addr, align 4, !dbg !6703
  %34 = load i32, i32* %range, align 4, !dbg !6704
  %sub34 = sub nsw i32 0, %34, !dbg !6705
  %35 = load i32, i32* %range, align 4, !dbg !6706
  %sub35 = sub nsw i32 %35, 1, !dbg !6707
  store i32 %33, i32* %a.addr.i, align 4, !dbg !6708
  store i32 %sub34, i32* %amin.addr.i, align 4, !dbg !6708
  store i32 %sub35, i32* %amax.addr.i, align 4, !dbg !6708
  %36 = load i32, i32* %a.addr.i, align 4, !dbg !6709
  %37 = load i32, i32* %amin.addr.i, align 4, !dbg !6710
  %cmp.i = icmp slt i32 %36, %37, !dbg !6711
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !6712

if.then.i:                                        ; preds = %if.end
  %38 = load i32, i32* %amin.addr.i, align 4, !dbg !6713
  store i32 %38, i32* %retval.i, align 4, !dbg !6714
  br label %av_clip_c.exit, !dbg !6714

if.else.i:                                        ; preds = %if.end
  %39 = load i32, i32* %a.addr.i, align 4, !dbg !6715
  %40 = load i32, i32* %amax.addr.i, align 4, !dbg !6716
  %cmp1.i = icmp sgt i32 %39, %40, !dbg !6717
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !6718

if.then2.i:                                       ; preds = %if.else.i
  %41 = load i32, i32* %amax.addr.i, align 4, !dbg !6719
  store i32 %41, i32* %retval.i, align 4, !dbg !6720
  br label %av_clip_c.exit, !dbg !6720

if.else3.i:                                       ; preds = %if.else.i
  %42 = load i32, i32* %a.addr.i, align 4, !dbg !6721
  store i32 %42, i32* %retval.i, align 4, !dbg !6722
  br label %av_clip_c.exit, !dbg !6722

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %43 = load i32, i32* %retval.i, align 4, !dbg !6723
  %conv36 = trunc i32 %43 to i16, !dbg !6708
  %44 = load i32, i32* %recent, align 4, !dbg !6724
  %idxprom37 = sext i32 %44 to i64, !dbg !6725
  %45 = load i16*, i16** %prev, align 8, !dbg !6725
  %arrayidx38 = getelementptr inbounds i16, i16* %45, i64 %idxprom37, !dbg !6725
  store i16 %conv36, i16* %arrayidx38, align 2, !dbg !6726
  %46 = load i32, i32* %input.addr, align 4, !dbg !6727
  %cmp = icmp sgt i32 %46, 0, !dbg !6728
  %conv39 = zext i1 %cmp to i32, !dbg !6728
  %47 = load i32, i32* %input.addr, align 4, !dbg !6729
  %cmp40 = icmp slt i32 %47, 0, !dbg !6730
  %conv41 = zext i1 %cmp40 to i32, !dbg !6730
  %sub42 = sub nsw i32 %conv39, %conv41, !dbg !6731
  %48 = load i32, i32* %ich.addr, align 4, !dbg !6732
  %idxprom43 = sext i32 %48 to i64, !dbg !6733
  %49 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6733
  %update_speed = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %49, i32 0, i32 62, !dbg !6734
  %arrayidx44 = getelementptr inbounds [8 x i32], [8 x i32]* %update_speed, i64 0, i64 %idxprom43, !dbg !6733
  %50 = load i32, i32* %arrayidx44, align 4, !dbg !6733
  %mul45 = mul nsw i32 %sub42, %50, !dbg !6735
  %conv46 = trunc i32 %mul45 to i16, !dbg !6736
  %51 = load i32, i32* %recent, align 4, !dbg !6737
  %idxprom47 = sext i32 %51 to i64, !dbg !6738
  %52 = load i32, i32* %ilms.addr, align 4, !dbg !6739
  %idxprom48 = sext i32 %52 to i64, !dbg !6738
  %53 = load i32, i32* %ich.addr, align 4, !dbg !6740
  %idxprom49 = sext i32 %53 to i64, !dbg !6738
  %54 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6738
  %cdlms50 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %54, i32 0, i32 58, !dbg !6741
  %arrayidx51 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms50, i64 0, i64 %idxprom49, !dbg !6738
  %arrayidx52 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx51, i64 0, i64 %idxprom48, !dbg !6738
  %lms_updates53 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx52, i32 0, i32 6, !dbg !6742
  %arrayidx54 = getelementptr inbounds [520 x i16], [520 x i16]* %lms_updates53, i64 0, i64 %idxprom47, !dbg !6738
  store i16 %conv46, i16* %arrayidx54, align 2, !dbg !6743
  %55 = load i32, i32* %recent, align 4, !dbg !6744
  %56 = load i32, i32* %order, align 4, !dbg !6745
  %shr = ashr i32 %56, 4, !dbg !6746
  %add = add nsw i32 %55, %shr, !dbg !6747
  %idxprom55 = sext i32 %add to i64, !dbg !6748
  %57 = load i32, i32* %ilms.addr, align 4, !dbg !6749
  %idxprom56 = sext i32 %57 to i64, !dbg !6748
  %58 = load i32, i32* %ich.addr, align 4, !dbg !6750
  %idxprom57 = sext i32 %58 to i64, !dbg !6748
  %59 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6748
  %cdlms58 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %59, i32 0, i32 58, !dbg !6751
  %arrayidx59 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms58, i64 0, i64 %idxprom57, !dbg !6748
  %arrayidx60 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx59, i64 0, i64 %idxprom56, !dbg !6748
  %lms_updates61 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx60, i32 0, i32 6, !dbg !6752
  %arrayidx62 = getelementptr inbounds [520 x i16], [520 x i16]* %lms_updates61, i64 0, i64 %idxprom55, !dbg !6748
  %60 = load i16, i16* %arrayidx62, align 2, !dbg !6753
  %conv63 = sext i16 %60 to i32, !dbg !6753
  %shr64 = ashr i32 %conv63, 2, !dbg !6753
  %conv65 = trunc i32 %shr64 to i16, !dbg !6753
  store i16 %conv65, i16* %arrayidx62, align 2, !dbg !6753
  %61 = load i32, i32* %recent, align 4, !dbg !6754
  %62 = load i32, i32* %order, align 4, !dbg !6755
  %shr66 = ashr i32 %62, 3, !dbg !6756
  %add67 = add nsw i32 %61, %shr66, !dbg !6757
  %idxprom68 = sext i32 %add67 to i64, !dbg !6758
  %63 = load i32, i32* %ilms.addr, align 4, !dbg !6759
  %idxprom69 = sext i32 %63 to i64, !dbg !6758
  %64 = load i32, i32* %ich.addr, align 4, !dbg !6760
  %idxprom70 = sext i32 %64 to i64, !dbg !6758
  %65 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6758
  %cdlms71 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %65, i32 0, i32 58, !dbg !6761
  %arrayidx72 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms71, i64 0, i64 %idxprom70, !dbg !6758
  %arrayidx73 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx72, i64 0, i64 %idxprom69, !dbg !6758
  %lms_updates74 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx73, i32 0, i32 6, !dbg !6762
  %arrayidx75 = getelementptr inbounds [520 x i16], [520 x i16]* %lms_updates74, i64 0, i64 %idxprom68, !dbg !6758
  %66 = load i16, i16* %arrayidx75, align 2, !dbg !6763
  %conv76 = sext i16 %66 to i32, !dbg !6763
  %shr77 = ashr i32 %conv76, 1, !dbg !6763
  %conv78 = trunc i32 %shr77 to i16, !dbg !6763
  store i16 %conv78, i16* %arrayidx75, align 2, !dbg !6763
  %67 = load i32, i32* %recent, align 4, !dbg !6764
  %68 = load i32, i32* %ilms.addr, align 4, !dbg !6765
  %idxprom79 = sext i32 %68 to i64, !dbg !6766
  %69 = load i32, i32* %ich.addr, align 4, !dbg !6767
  %idxprom80 = sext i32 %69 to i64, !dbg !6766
  %70 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6766
  %cdlms81 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %70, i32 0, i32 58, !dbg !6768
  %arrayidx82 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms81, i64 0, i64 %idxprom80, !dbg !6766
  %arrayidx83 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx82, i64 0, i64 %idxprom79, !dbg !6766
  %recent84 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx83, i32 0, i32 7, !dbg !6769
  store i32 %67, i32* %recent84, align 16, !dbg !6770
  %71 = load i32, i32* %ilms.addr, align 4, !dbg !6771
  %idxprom85 = sext i32 %71 to i64, !dbg !6772
  %72 = load i32, i32* %ich.addr, align 4, !dbg !6773
  %idxprom86 = sext i32 %72 to i64, !dbg !6772
  %73 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6772
  %cdlms87 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %73, i32 0, i32 58, !dbg !6774
  %arrayidx88 = getelementptr inbounds [8 x [9 x %struct.anon]], [8 x [9 x %struct.anon]]* %cdlms87, i64 0, i64 %idxprom86, !dbg !6772
  %arrayidx89 = getelementptr inbounds [9 x %struct.anon], [9 x %struct.anon]* %arrayidx88, i64 0, i64 %idxprom85, !dbg !6772
  %lms_updates90 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx89, i32 0, i32 6, !dbg !6775
  %arraydecay91 = getelementptr inbounds [520 x i16], [520 x i16]* %lms_updates90, i32 0, i32 0, !dbg !6772
  %74 = load i32, i32* %recent, align 4, !dbg !6776
  %idx.ext92 = sext i32 %74 to i64, !dbg !6777
  %add.ptr93 = getelementptr inbounds i16, i16* %arraydecay91, i64 %idx.ext92, !dbg !6777
  %75 = load i32, i32* %order, align 4, !dbg !6778
  %idx.ext94 = sext i32 %75 to i64, !dbg !6779
  %add.ptr95 = getelementptr inbounds i16, i16* %add.ptr93, i64 %idx.ext94, !dbg !6779
  %76 = bitcast i16* %add.ptr95 to i8*, !dbg !6780
  %77 = load i32, i32* %recent, align 4, !dbg !6781
  %78 = load i32, i32* %order, align 4, !dbg !6782
  %add96 = add nsw i32 %77, %78, !dbg !6783
  %conv97 = sext i32 %add96 to i64, !dbg !6784
  %mul98 = mul i64 2, %conv97, !dbg !6785
  %sub99 = sub i64 1040, %mul98, !dbg !6786
  call void @llvm.memset.p0i8.i64(i8* %76, i8 0, i64 %sub99, i32 2, i1 false), !dbg !6787
  ret void, !dbg !6789
}

; Function Attrs: nounwind uwtable
define internal void @mclms_predict(%struct.WmallDecodeCtx* %s, i32 %icoef, i32* %pred) #1 !dbg !6790 {
entry:
  %s.addr = alloca %struct.WmallDecodeCtx*, align 8
  %icoef.addr = alloca i32, align 4
  %pred.addr = alloca i32*, align 8
  %ich = alloca i32, align 4
  %i = alloca i32, align 4
  %order = alloca i32, align 4
  %num_channels = alloca i32, align 4
  store %struct.WmallDecodeCtx* %s, %struct.WmallDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WmallDecodeCtx** %s.addr, metadata !6793, metadata !1820), !dbg !6794
  store i32 %icoef, i32* %icoef.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icoef.addr, metadata !6795, metadata !1820), !dbg !6796
  store i32* %pred, i32** %pred.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pred.addr, metadata !6797, metadata !1820), !dbg !6798
  call void @llvm.dbg.declare(metadata i32* %ich, metadata !6799, metadata !1820), !dbg !6800
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6801, metadata !1820), !dbg !6802
  call void @llvm.dbg.declare(metadata i32* %order, metadata !6803, metadata !1820), !dbg !6804
  %0 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6805
  %mclms_order = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %0, i32 0, i32 48, !dbg !6806
  %1 = load i8, i8* %mclms_order, align 8, !dbg !6806
  %conv = sext i8 %1 to i32, !dbg !6805
  store i32 %conv, i32* %order, align 4, !dbg !6804
  call void @llvm.dbg.declare(metadata i32* %num_channels, metadata !6807, metadata !1820), !dbg !6808
  %2 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6809
  %num_channels1 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %2, i32 0, i32 12, !dbg !6810
  %3 = load i8, i8* %num_channels1, align 2, !dbg !6810
  %conv2 = sext i8 %3 to i32, !dbg !6809
  store i32 %conv2, i32* %num_channels, align 4, !dbg !6808
  store i32 0, i32* %ich, align 4, !dbg !6811
  br label %for.cond, !dbg !6813

for.cond:                                         ; preds = %for.inc58, %entry
  %4 = load i32, i32* %ich, align 4, !dbg !6814
  %5 = load i32, i32* %num_channels, align 4, !dbg !6817
  %cmp = icmp slt i32 %4, %5, !dbg !6818
  br i1 %cmp, label %for.body, label %for.end60, !dbg !6819

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %ich, align 4, !dbg !6820
  %idxprom = sext i32 %6 to i64, !dbg !6822
  %7 = load i32*, i32** %pred.addr, align 8, !dbg !6822
  %arrayidx = getelementptr inbounds i32, i32* %7, i64 %idxprom, !dbg !6822
  store i32 0, i32* %arrayidx, align 4, !dbg !6823
  %8 = load i32, i32* %ich, align 4, !dbg !6824
  %idxprom4 = sext i32 %8 to i64, !dbg !6826
  %9 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6826
  %is_channel_coded = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %9, i32 0, i32 61, !dbg !6827
  %arrayidx5 = getelementptr inbounds [8 x i32], [8 x i32]* %is_channel_coded, i64 0, i64 %idxprom4, !dbg !6826
  %10 = load i32, i32* %arrayidx5, align 4, !dbg !6826
  %tobool = icmp ne i32 %10, 0, !dbg !6826
  br i1 %tobool, label %if.end, label %if.then, !dbg !6828

if.then:                                          ; preds = %for.body
  br label %for.inc58, !dbg !6829

if.end:                                           ; preds = %for.body
  store i32 0, i32* %i, align 4, !dbg !6830
  br label %for.cond6, !dbg !6832

for.cond6:                                        ; preds = %for.inc, %if.end
  %11 = load i32, i32* %i, align 4, !dbg !6833
  %12 = load i32, i32* %order, align 4, !dbg !6836
  %13 = load i32, i32* %num_channels, align 4, !dbg !6837
  %mul = mul nsw i32 %12, %13, !dbg !6838
  %cmp7 = icmp slt i32 %11, %mul, !dbg !6839
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !6840

for.body9:                                        ; preds = %for.cond6
  %14 = load i32, i32* %i, align 4, !dbg !6841
  %15 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6842
  %mclms_recent = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %15, i32 0, i32 54, !dbg !6843
  %16 = load i32, i32* %mclms_recent, align 4, !dbg !6843
  %add = add nsw i32 %14, %16, !dbg !6844
  %idxprom10 = sext i32 %add to i64, !dbg !6845
  %17 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6845
  %mclms_prevvalues = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %17, i32 0, i32 52, !dbg !6846
  %arrayidx11 = getelementptr inbounds [512 x i32], [512 x i32]* %mclms_prevvalues, i64 0, i64 %idxprom10, !dbg !6845
  %18 = load i32, i32* %arrayidx11, align 4, !dbg !6845
  %19 = load i32, i32* %i, align 4, !dbg !6847
  %20 = load i32, i32* %order, align 4, !dbg !6848
  %21 = load i32, i32* %num_channels, align 4, !dbg !6849
  %mul12 = mul nsw i32 %20, %21, !dbg !6850
  %22 = load i32, i32* %ich, align 4, !dbg !6851
  %mul13 = mul nsw i32 %mul12, %22, !dbg !6852
  %add14 = add nsw i32 %19, %mul13, !dbg !6853
  %idxprom15 = sext i32 %add14 to i64, !dbg !6854
  %23 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6854
  %mclms_coeffs = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %23, i32 0, i32 50, !dbg !6855
  %arrayidx16 = getelementptr inbounds [2048 x i16], [2048 x i16]* %mclms_coeffs, i64 0, i64 %idxprom15, !dbg !6854
  %24 = load i16, i16* %arrayidx16, align 2, !dbg !6854
  %conv17 = sext i16 %24 to i32, !dbg !6854
  %mul18 = mul i32 %18, %conv17, !dbg !6856
  %25 = load i32, i32* %ich, align 4, !dbg !6857
  %idxprom19 = sext i32 %25 to i64, !dbg !6858
  %26 = load i32*, i32** %pred.addr, align 8, !dbg !6858
  %arrayidx20 = getelementptr inbounds i32, i32* %26, i64 %idxprom19, !dbg !6858
  %27 = load i32, i32* %arrayidx20, align 4, !dbg !6859
  %add21 = add i32 %27, %mul18, !dbg !6859
  store i32 %add21, i32* %arrayidx20, align 4, !dbg !6859
  br label %for.inc, !dbg !6858

for.inc:                                          ; preds = %for.body9
  %28 = load i32, i32* %i, align 4, !dbg !6860
  %inc = add nsw i32 %28, 1, !dbg !6860
  store i32 %inc, i32* %i, align 4, !dbg !6860
  br label %for.cond6, !dbg !6862, !llvm.loop !6863

for.end:                                          ; preds = %for.cond6
  store i32 0, i32* %i, align 4, !dbg !6865
  br label %for.cond22, !dbg !6867

for.cond22:                                       ; preds = %for.inc39, %for.end
  %29 = load i32, i32* %i, align 4, !dbg !6868
  %30 = load i32, i32* %ich, align 4, !dbg !6871
  %cmp23 = icmp slt i32 %29, %30, !dbg !6872
  br i1 %cmp23, label %for.body25, label %for.end41, !dbg !6873

for.body25:                                       ; preds = %for.cond22
  %31 = load i32, i32* %icoef.addr, align 4, !dbg !6874
  %idxprom26 = sext i32 %31 to i64, !dbg !6875
  %32 = load i32, i32* %i, align 4, !dbg !6876
  %idxprom27 = sext i32 %32 to i64, !dbg !6875
  %33 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6875
  %channel_residues = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %33, i32 0, i32 67, !dbg !6877
  %arrayidx28 = getelementptr inbounds [8 x [16384 x i32]], [8 x [16384 x i32]]* %channel_residues, i64 0, i64 %idxprom27, !dbg !6875
  %arrayidx29 = getelementptr inbounds [16384 x i32], [16384 x i32]* %arrayidx28, i64 0, i64 %idxprom26, !dbg !6875
  %34 = load i32, i32* %arrayidx29, align 4, !dbg !6875
  %35 = load i32, i32* %i, align 4, !dbg !6878
  %36 = load i32, i32* %num_channels, align 4, !dbg !6879
  %37 = load i32, i32* %ich, align 4, !dbg !6880
  %mul30 = mul nsw i32 %36, %37, !dbg !6881
  %add31 = add nsw i32 %35, %mul30, !dbg !6882
  %idxprom32 = sext i32 %add31 to i64, !dbg !6883
  %38 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6883
  %mclms_coeffs_cur = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %38, i32 0, i32 51, !dbg !6884
  %arrayidx33 = getelementptr inbounds [64 x i16], [64 x i16]* %mclms_coeffs_cur, i64 0, i64 %idxprom32, !dbg !6883
  %39 = load i16, i16* %arrayidx33, align 2, !dbg !6883
  %conv34 = sext i16 %39 to i32, !dbg !6883
  %mul35 = mul i32 %34, %conv34, !dbg !6885
  %40 = load i32, i32* %ich, align 4, !dbg !6886
  %idxprom36 = sext i32 %40 to i64, !dbg !6887
  %41 = load i32*, i32** %pred.addr, align 8, !dbg !6887
  %arrayidx37 = getelementptr inbounds i32, i32* %41, i64 %idxprom36, !dbg !6887
  %42 = load i32, i32* %arrayidx37, align 4, !dbg !6888
  %add38 = add i32 %42, %mul35, !dbg !6888
  store i32 %add38, i32* %arrayidx37, align 4, !dbg !6888
  br label %for.inc39, !dbg !6887

for.inc39:                                        ; preds = %for.body25
  %43 = load i32, i32* %i, align 4, !dbg !6889
  %inc40 = add nsw i32 %43, 1, !dbg !6889
  store i32 %inc40, i32* %i, align 4, !dbg !6889
  br label %for.cond22, !dbg !6891, !llvm.loop !6892

for.end41:                                        ; preds = %for.cond22
  %44 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6894
  %mclms_scaling = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %44, i32 0, i32 49, !dbg !6895
  %45 = load i8, i8* %mclms_scaling, align 1, !dbg !6895
  %conv42 = sext i8 %45 to i32, !dbg !6894
  %sub = sub nsw i32 %conv42, 1, !dbg !6896
  %shl = shl i32 1, %sub, !dbg !6897
  %46 = load i32, i32* %ich, align 4, !dbg !6898
  %idxprom43 = sext i32 %46 to i64, !dbg !6899
  %47 = load i32*, i32** %pred.addr, align 8, !dbg !6899
  %arrayidx44 = getelementptr inbounds i32, i32* %47, i64 %idxprom43, !dbg !6899
  %48 = load i32, i32* %arrayidx44, align 4, !dbg !6900
  %add45 = add nsw i32 %48, %shl, !dbg !6900
  store i32 %add45, i32* %arrayidx44, align 4, !dbg !6900
  %49 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6901
  %mclms_scaling46 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %49, i32 0, i32 49, !dbg !6902
  %50 = load i8, i8* %mclms_scaling46, align 1, !dbg !6902
  %conv47 = sext i8 %50 to i32, !dbg !6901
  %51 = load i32, i32* %ich, align 4, !dbg !6903
  %idxprom48 = sext i32 %51 to i64, !dbg !6904
  %52 = load i32*, i32** %pred.addr, align 8, !dbg !6904
  %arrayidx49 = getelementptr inbounds i32, i32* %52, i64 %idxprom48, !dbg !6904
  %53 = load i32, i32* %arrayidx49, align 4, !dbg !6905
  %shr = ashr i32 %53, %conv47, !dbg !6905
  store i32 %shr, i32* %arrayidx49, align 4, !dbg !6905
  %54 = load i32, i32* %ich, align 4, !dbg !6906
  %idxprom50 = sext i32 %54 to i64, !dbg !6907
  %55 = load i32*, i32** %pred.addr, align 8, !dbg !6907
  %arrayidx51 = getelementptr inbounds i32, i32* %55, i64 %idxprom50, !dbg !6907
  %56 = load i32, i32* %arrayidx51, align 4, !dbg !6907
  %57 = load i32, i32* %icoef.addr, align 4, !dbg !6908
  %idxprom52 = sext i32 %57 to i64, !dbg !6909
  %58 = load i32, i32* %ich, align 4, !dbg !6910
  %idxprom53 = sext i32 %58 to i64, !dbg !6909
  %59 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6909
  %channel_residues54 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %59, i32 0, i32 67, !dbg !6911
  %arrayidx55 = getelementptr inbounds [8 x [16384 x i32]], [8 x [16384 x i32]]* %channel_residues54, i64 0, i64 %idxprom53, !dbg !6909
  %arrayidx56 = getelementptr inbounds [16384 x i32], [16384 x i32]* %arrayidx55, i64 0, i64 %idxprom52, !dbg !6909
  %60 = load i32, i32* %arrayidx56, align 4, !dbg !6912
  %add57 = add nsw i32 %60, %56, !dbg !6912
  store i32 %add57, i32* %arrayidx56, align 4, !dbg !6912
  br label %for.inc58, !dbg !6913

for.inc58:                                        ; preds = %for.end41, %if.then
  %61 = load i32, i32* %ich, align 4, !dbg !6914
  %inc59 = add nsw i32 %61, 1, !dbg !6914
  store i32 %inc59, i32* %ich, align 4, !dbg !6914
  br label %for.cond, !dbg !6916, !llvm.loop !6917

for.end60:                                        ; preds = %for.cond
  ret void, !dbg !6919
}

; Function Attrs: nounwind uwtable
define internal void @mclms_update(%struct.WmallDecodeCtx* %s, i32 %icoef, i32* %pred) #1 !dbg !6920 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !4331, metadata !1820), !dbg !6921
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !4338, metadata !1820), !dbg !6926
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !4340, metadata !1820), !dbg !6927
  %s.addr = alloca %struct.WmallDecodeCtx*, align 8
  %icoef.addr = alloca i32, align 4
  %pred.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %ich = alloca i32, align 4
  %pred_error = alloca i32, align 4
  %order = alloca i32, align 4
  %num_channels = alloca i32, align 4
  %range = alloca i32, align 4
  store %struct.WmallDecodeCtx* %s, %struct.WmallDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WmallDecodeCtx** %s.addr, metadata !6928, metadata !1820), !dbg !6929
  store i32 %icoef, i32* %icoef.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icoef.addr, metadata !6930, metadata !1820), !dbg !6931
  store i32* %pred, i32** %pred.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pred.addr, metadata !6932, metadata !1820), !dbg !6933
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6934, metadata !1820), !dbg !6935
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6936, metadata !1820), !dbg !6937
  call void @llvm.dbg.declare(metadata i32* %ich, metadata !6938, metadata !1820), !dbg !6939
  call void @llvm.dbg.declare(metadata i32* %pred_error, metadata !6940, metadata !1820), !dbg !6941
  call void @llvm.dbg.declare(metadata i32* %order, metadata !6942, metadata !1820), !dbg !6943
  %0 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6944
  %mclms_order = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %0, i32 0, i32 48, !dbg !6945
  %1 = load i8, i8* %mclms_order, align 8, !dbg !6945
  %conv = sext i8 %1 to i32, !dbg !6944
  store i32 %conv, i32* %order, align 4, !dbg !6943
  call void @llvm.dbg.declare(metadata i32* %num_channels, metadata !6946, metadata !1820), !dbg !6947
  %2 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6948
  %num_channels1 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %2, i32 0, i32 12, !dbg !6949
  %3 = load i8, i8* %num_channels1, align 2, !dbg !6949
  %conv2 = sext i8 %3 to i32, !dbg !6948
  store i32 %conv2, i32* %num_channels, align 4, !dbg !6947
  call void @llvm.dbg.declare(metadata i32* %range, metadata !6950, metadata !1820), !dbg !6951
  %4 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6952
  %bits_per_sample = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %4, i32 0, i32 9, !dbg !6953
  %5 = load i8, i8* %bits_per_sample, align 4, !dbg !6953
  %conv3 = zext i8 %5 to i32, !dbg !6952
  %sub = sub nsw i32 %conv3, 1, !dbg !6954
  %shl = shl i32 1, %sub, !dbg !6955
  store i32 %shl, i32* %range, align 4, !dbg !6951
  store i32 0, i32* %ich, align 4, !dbg !6956
  br label %for.cond, !dbg !6958

for.cond:                                         ; preds = %for.inc111, %entry
  %6 = load i32, i32* %ich, align 4, !dbg !6959
  %7 = load i32, i32* %num_channels, align 4, !dbg !6962
  %cmp = icmp slt i32 %6, %7, !dbg !6963
  br i1 %cmp, label %for.body, label %for.end113, !dbg !6964

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %icoef.addr, align 4, !dbg !6965
  %idxprom = sext i32 %8 to i64, !dbg !6967
  %9 = load i32, i32* %ich, align 4, !dbg !6968
  %idxprom5 = sext i32 %9 to i64, !dbg !6967
  %10 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6967
  %channel_residues = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %10, i32 0, i32 67, !dbg !6969
  %arrayidx = getelementptr inbounds [8 x [16384 x i32]], [8 x [16384 x i32]]* %channel_residues, i64 0, i64 %idxprom5, !dbg !6967
  %arrayidx6 = getelementptr inbounds [16384 x i32], [16384 x i32]* %arrayidx, i64 0, i64 %idxprom, !dbg !6967
  %11 = load i32, i32* %arrayidx6, align 4, !dbg !6967
  %12 = load i32, i32* %ich, align 4, !dbg !6970
  %idxprom7 = sext i32 %12 to i64, !dbg !6971
  %13 = load i32*, i32** %pred.addr, align 8, !dbg !6971
  %arrayidx8 = getelementptr inbounds i32, i32* %13, i64 %idxprom7, !dbg !6971
  %14 = load i32, i32* %arrayidx8, align 4, !dbg !6971
  %sub9 = sub nsw i32 %11, %14, !dbg !6972
  store i32 %sub9, i32* %pred_error, align 4, !dbg !6973
  %15 = load i32, i32* %pred_error, align 4, !dbg !6974
  %cmp10 = icmp sgt i32 %15, 0, !dbg !6976
  br i1 %cmp10, label %if.then, label %if.else, !dbg !6977

if.then:                                          ; preds = %for.body
  store i32 0, i32* %i, align 4, !dbg !6978
  br label %for.cond12, !dbg !6981

for.cond12:                                       ; preds = %for.inc, %if.then
  %16 = load i32, i32* %i, align 4, !dbg !6982
  %17 = load i32, i32* %order, align 4, !dbg !6985
  %18 = load i32, i32* %num_channels, align 4, !dbg !6986
  %mul = mul nsw i32 %17, %18, !dbg !6987
  %cmp13 = icmp slt i32 %16, %mul, !dbg !6988
  br i1 %cmp13, label %for.body15, label %for.end, !dbg !6989

for.body15:                                       ; preds = %for.cond12
  %19 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6990
  %mclms_recent = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %19, i32 0, i32 54, !dbg !6991
  %20 = load i32, i32* %mclms_recent, align 4, !dbg !6991
  %21 = load i32, i32* %i, align 4, !dbg !6992
  %add = add nsw i32 %20, %21, !dbg !6993
  %idxprom16 = sext i32 %add to i64, !dbg !6994
  %22 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !6994
  %mclms_updates = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %22, i32 0, i32 53, !dbg !6995
  %arrayidx17 = getelementptr inbounds [512 x i32], [512 x i32]* %mclms_updates, i64 0, i64 %idxprom16, !dbg !6994
  %23 = load i32, i32* %arrayidx17, align 4, !dbg !6994
  %24 = load i32, i32* %i, align 4, !dbg !6996
  %25 = load i32, i32* %ich, align 4, !dbg !6997
  %26 = load i32, i32* %order, align 4, !dbg !6998
  %mul18 = mul nsw i32 %25, %26, !dbg !6999
  %27 = load i32, i32* %num_channels, align 4, !dbg !7000
  %mul19 = mul nsw i32 %mul18, %27, !dbg !7001
  %add20 = add nsw i32 %24, %mul19, !dbg !7002
  %idxprom21 = sext i32 %add20 to i64, !dbg !7003
  %28 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !7003
  %mclms_coeffs = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %28, i32 0, i32 50, !dbg !7004
  %arrayidx22 = getelementptr inbounds [2048 x i16], [2048 x i16]* %mclms_coeffs, i64 0, i64 %idxprom21, !dbg !7003
  %29 = load i16, i16* %arrayidx22, align 2, !dbg !7005
  %conv23 = sext i16 %29 to i32, !dbg !7005
  %add24 = add nsw i32 %conv23, %23, !dbg !7005
  %conv25 = trunc i32 %add24 to i16, !dbg !7005
  store i16 %conv25, i16* %arrayidx22, align 2, !dbg !7005
  br label %for.inc, !dbg !7003

for.inc:                                          ; preds = %for.body15
  %30 = load i32, i32* %i, align 4, !dbg !7006
  %inc = add nsw i32 %30, 1, !dbg !7006
  store i32 %inc, i32* %i, align 4, !dbg !7006
  br label %for.cond12, !dbg !7008, !llvm.loop !7009

for.end:                                          ; preds = %for.cond12
  store i32 0, i32* %j, align 4, !dbg !7011
  br label %for.cond26, !dbg !7013

for.cond26:                                       ; preds = %for.inc52, %for.end
  %31 = load i32, i32* %j, align 4, !dbg !7014
  %32 = load i32, i32* %ich, align 4, !dbg !7017
  %cmp27 = icmp slt i32 %31, %32, !dbg !7018
  br i1 %cmp27, label %for.body29, label %for.end54, !dbg !7019

for.body29:                                       ; preds = %for.cond26
  %33 = load i32, i32* %icoef.addr, align 4, !dbg !7020
  %idxprom30 = sext i32 %33 to i64, !dbg !7021
  %34 = load i32, i32* %j, align 4, !dbg !7022
  %idxprom31 = sext i32 %34 to i64, !dbg !7021
  %35 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !7021
  %channel_residues32 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %35, i32 0, i32 67, !dbg !7023
  %arrayidx33 = getelementptr inbounds [8 x [16384 x i32]], [8 x [16384 x i32]]* %channel_residues32, i64 0, i64 %idxprom31, !dbg !7021
  %arrayidx34 = getelementptr inbounds [16384 x i32], [16384 x i32]* %arrayidx33, i64 0, i64 %idxprom30, !dbg !7021
  %36 = load i32, i32* %arrayidx34, align 4, !dbg !7021
  %cmp35 = icmp sgt i32 %36, 0, !dbg !7024
  %conv36 = zext i1 %cmp35 to i32, !dbg !7024
  %37 = load i32, i32* %icoef.addr, align 4, !dbg !7025
  %idxprom37 = sext i32 %37 to i64, !dbg !7026
  %38 = load i32, i32* %j, align 4, !dbg !7027
  %idxprom38 = sext i32 %38 to i64, !dbg !7026
  %39 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !7026
  %channel_residues39 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %39, i32 0, i32 67, !dbg !7028
  %arrayidx40 = getelementptr inbounds [8 x [16384 x i32]], [8 x [16384 x i32]]* %channel_residues39, i64 0, i64 %idxprom38, !dbg !7026
  %arrayidx41 = getelementptr inbounds [16384 x i32], [16384 x i32]* %arrayidx40, i64 0, i64 %idxprom37, !dbg !7026
  %40 = load i32, i32* %arrayidx41, align 4, !dbg !7026
  %cmp42 = icmp slt i32 %40, 0, !dbg !7029
  %conv43 = zext i1 %cmp42 to i32, !dbg !7029
  %sub44 = sub nsw i32 %conv36, %conv43, !dbg !7030
  %41 = load i32, i32* %ich, align 4, !dbg !7031
  %42 = load i32, i32* %num_channels, align 4, !dbg !7032
  %mul45 = mul nsw i32 %41, %42, !dbg !7033
  %43 = load i32, i32* %j, align 4, !dbg !7034
  %add46 = add nsw i32 %mul45, %43, !dbg !7035
  %idxprom47 = sext i32 %add46 to i64, !dbg !7036
  %44 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !7036
  %mclms_coeffs_cur = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %44, i32 0, i32 51, !dbg !7037
  %arrayidx48 = getelementptr inbounds [64 x i16], [64 x i16]* %mclms_coeffs_cur, i64 0, i64 %idxprom47, !dbg !7036
  %45 = load i16, i16* %arrayidx48, align 2, !dbg !7038
  %conv49 = sext i16 %45 to i32, !dbg !7038
  %add50 = add nsw i32 %conv49, %sub44, !dbg !7038
  %conv51 = trunc i32 %add50 to i16, !dbg !7038
  store i16 %conv51, i16* %arrayidx48, align 2, !dbg !7038
  br label %for.inc52, !dbg !7036

for.inc52:                                        ; preds = %for.body29
  %46 = load i32, i32* %j, align 4, !dbg !7039
  %inc53 = add nsw i32 %46, 1, !dbg !7039
  store i32 %inc53, i32* %j, align 4, !dbg !7039
  br label %for.cond26, !dbg !7041, !llvm.loop !7042

for.end54:                                        ; preds = %for.cond26
  br label %if.end110, !dbg !7044

if.else:                                          ; preds = %for.body
  %47 = load i32, i32* %pred_error, align 4, !dbg !7045
  %cmp55 = icmp slt i32 %47, 0, !dbg !7048
  br i1 %cmp55, label %if.then57, label %if.end, !dbg !7045

if.then57:                                        ; preds = %if.else
  store i32 0, i32* %i, align 4, !dbg !7049
  br label %for.cond58, !dbg !7052

for.cond58:                                       ; preds = %for.inc77, %if.then57
  %48 = load i32, i32* %i, align 4, !dbg !7053
  %49 = load i32, i32* %order, align 4, !dbg !7056
  %50 = load i32, i32* %num_channels, align 4, !dbg !7057
  %mul59 = mul nsw i32 %49, %50, !dbg !7058
  %cmp60 = icmp slt i32 %48, %mul59, !dbg !7059
  br i1 %cmp60, label %for.body62, label %for.end79, !dbg !7060

for.body62:                                       ; preds = %for.cond58
  %51 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !7061
  %mclms_recent63 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %51, i32 0, i32 54, !dbg !7062
  %52 = load i32, i32* %mclms_recent63, align 4, !dbg !7062
  %53 = load i32, i32* %i, align 4, !dbg !7063
  %add64 = add nsw i32 %52, %53, !dbg !7064
  %idxprom65 = sext i32 %add64 to i64, !dbg !7065
  %54 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !7065
  %mclms_updates66 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %54, i32 0, i32 53, !dbg !7066
  %arrayidx67 = getelementptr inbounds [512 x i32], [512 x i32]* %mclms_updates66, i64 0, i64 %idxprom65, !dbg !7065
  %55 = load i32, i32* %arrayidx67, align 4, !dbg !7065
  %56 = load i32, i32* %i, align 4, !dbg !7067
  %57 = load i32, i32* %ich, align 4, !dbg !7068
  %58 = load i32, i32* %order, align 4, !dbg !7069
  %mul68 = mul nsw i32 %57, %58, !dbg !7070
  %59 = load i32, i32* %num_channels, align 4, !dbg !7071
  %mul69 = mul nsw i32 %mul68, %59, !dbg !7072
  %add70 = add nsw i32 %56, %mul69, !dbg !7073
  %idxprom71 = sext i32 %add70 to i64, !dbg !7074
  %60 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !7074
  %mclms_coeffs72 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %60, i32 0, i32 50, !dbg !7075
  %arrayidx73 = getelementptr inbounds [2048 x i16], [2048 x i16]* %mclms_coeffs72, i64 0, i64 %idxprom71, !dbg !7074
  %61 = load i16, i16* %arrayidx73, align 2, !dbg !7076
  %conv74 = sext i16 %61 to i32, !dbg !7076
  %sub75 = sub nsw i32 %conv74, %55, !dbg !7076
  %conv76 = trunc i32 %sub75 to i16, !dbg !7076
  store i16 %conv76, i16* %arrayidx73, align 2, !dbg !7076
  br label %for.inc77, !dbg !7074

for.inc77:                                        ; preds = %for.body62
  %62 = load i32, i32* %i, align 4, !dbg !7077
  %inc78 = add nsw i32 %62, 1, !dbg !7077
  store i32 %inc78, i32* %i, align 4, !dbg !7077
  br label %for.cond58, !dbg !7079, !llvm.loop !7080

for.end79:                                        ; preds = %for.cond58
  store i32 0, i32* %j, align 4, !dbg !7082
  br label %for.cond80, !dbg !7084

for.cond80:                                       ; preds = %for.inc107, %for.end79
  %63 = load i32, i32* %j, align 4, !dbg !7085
  %64 = load i32, i32* %ich, align 4, !dbg !7088
  %cmp81 = icmp slt i32 %63, %64, !dbg !7089
  br i1 %cmp81, label %for.body83, label %for.end109, !dbg !7090

for.body83:                                       ; preds = %for.cond80
  %65 = load i32, i32* %icoef.addr, align 4, !dbg !7091
  %idxprom84 = sext i32 %65 to i64, !dbg !7092
  %66 = load i32, i32* %j, align 4, !dbg !7093
  %idxprom85 = sext i32 %66 to i64, !dbg !7092
  %67 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !7092
  %channel_residues86 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %67, i32 0, i32 67, !dbg !7094
  %arrayidx87 = getelementptr inbounds [8 x [16384 x i32]], [8 x [16384 x i32]]* %channel_residues86, i64 0, i64 %idxprom85, !dbg !7092
  %arrayidx88 = getelementptr inbounds [16384 x i32], [16384 x i32]* %arrayidx87, i64 0, i64 %idxprom84, !dbg !7092
  %68 = load i32, i32* %arrayidx88, align 4, !dbg !7092
  %cmp89 = icmp sgt i32 %68, 0, !dbg !7095
  %conv90 = zext i1 %cmp89 to i32, !dbg !7095
  %69 = load i32, i32* %icoef.addr, align 4, !dbg !7096
  %idxprom91 = sext i32 %69 to i64, !dbg !7097
  %70 = load i32, i32* %j, align 4, !dbg !7098
  %idxprom92 = sext i32 %70 to i64, !dbg !7097
  %71 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !7097
  %channel_residues93 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %71, i32 0, i32 67, !dbg !7099
  %arrayidx94 = getelementptr inbounds [8 x [16384 x i32]], [8 x [16384 x i32]]* %channel_residues93, i64 0, i64 %idxprom92, !dbg !7097
  %arrayidx95 = getelementptr inbounds [16384 x i32], [16384 x i32]* %arrayidx94, i64 0, i64 %idxprom91, !dbg !7097
  %72 = load i32, i32* %arrayidx95, align 4, !dbg !7097
  %cmp96 = icmp slt i32 %72, 0, !dbg !7100
  %conv97 = zext i1 %cmp96 to i32, !dbg !7100
  %sub98 = sub nsw i32 %conv90, %conv97, !dbg !7101
  %73 = load i32, i32* %ich, align 4, !dbg !7102
  %74 = load i32, i32* %num_channels, align 4, !dbg !7103
  %mul99 = mul nsw i32 %73, %74, !dbg !7104
  %75 = load i32, i32* %j, align 4, !dbg !7105
  %add100 = add nsw i32 %mul99, %75, !dbg !7106
  %idxprom101 = sext i32 %add100 to i64, !dbg !7107
  %76 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !7107
  %mclms_coeffs_cur102 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %76, i32 0, i32 51, !dbg !7108
  %arrayidx103 = getelementptr inbounds [64 x i16], [64 x i16]* %mclms_coeffs_cur102, i64 0, i64 %idxprom101, !dbg !7107
  %77 = load i16, i16* %arrayidx103, align 2, !dbg !7109
  %conv104 = sext i16 %77 to i32, !dbg !7109
  %sub105 = sub nsw i32 %conv104, %sub98, !dbg !7109
  %conv106 = trunc i32 %sub105 to i16, !dbg !7109
  store i16 %conv106, i16* %arrayidx103, align 2, !dbg !7109
  br label %for.inc107, !dbg !7107

for.inc107:                                       ; preds = %for.body83
  %78 = load i32, i32* %j, align 4, !dbg !7110
  %inc108 = add nsw i32 %78, 1, !dbg !7110
  store i32 %inc108, i32* %j, align 4, !dbg !7110
  br label %for.cond80, !dbg !7112, !llvm.loop !7113

for.end109:                                       ; preds = %for.cond80
  br label %if.end, !dbg !7115

if.end:                                           ; preds = %for.end109, %if.else
  br label %if.end110

if.end110:                                        ; preds = %if.end, %for.end54
  br label %for.inc111, !dbg !7116

for.inc111:                                       ; preds = %if.end110
  %79 = load i32, i32* %ich, align 4, !dbg !7117
  %inc112 = add nsw i32 %79, 1, !dbg !7117
  store i32 %inc112, i32* %ich, align 4, !dbg !7117
  br label %for.cond, !dbg !7119, !llvm.loop !7120

for.end113:                                       ; preds = %for.cond
  %80 = load i32, i32* %num_channels, align 4, !dbg !7122
  %sub114 = sub nsw i32 %80, 1, !dbg !7123
  store i32 %sub114, i32* %ich, align 4, !dbg !7124
  br label %for.cond115, !dbg !7125

for.cond115:                                      ; preds = %for.inc149, %for.end113
  %81 = load i32, i32* %ich, align 4, !dbg !7126
  %cmp116 = icmp sge i32 %81, 0, !dbg !7128
  br i1 %cmp116, label %for.body118, label %for.end151, !dbg !7129

for.body118:                                      ; preds = %for.cond115
  %82 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !7130
  %mclms_recent119 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %82, i32 0, i32 54, !dbg !7131
  %83 = load i32, i32* %mclms_recent119, align 4, !dbg !7132
  %dec = add nsw i32 %83, -1, !dbg !7132
  store i32 %dec, i32* %mclms_recent119, align 4, !dbg !7132
  %84 = load i32, i32* %icoef.addr, align 4, !dbg !7133
  %idxprom120 = sext i32 %84 to i64, !dbg !7134
  %85 = load i32, i32* %ich, align 4, !dbg !7135
  %idxprom121 = sext i32 %85 to i64, !dbg !7134
  %86 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !7134
  %channel_residues122 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %86, i32 0, i32 67, !dbg !7136
  %arrayidx123 = getelementptr inbounds [8 x [16384 x i32]], [8 x [16384 x i32]]* %channel_residues122, i64 0, i64 %idxprom121, !dbg !7134
  %arrayidx124 = getelementptr inbounds [16384 x i32], [16384 x i32]* %arrayidx123, i64 0, i64 %idxprom120, !dbg !7134
  %87 = load i32, i32* %arrayidx124, align 4, !dbg !7134
  %88 = load i32, i32* %range, align 4, !dbg !7137
  %sub125 = sub nsw i32 0, %88, !dbg !7138
  %89 = load i32, i32* %range, align 4, !dbg !7139
  %sub126 = sub nsw i32 %89, 1, !dbg !7140
  store i32 %87, i32* %a.addr.i, align 4, !dbg !7141
  store i32 %sub125, i32* %amin.addr.i, align 4, !dbg !7141
  store i32 %sub126, i32* %amax.addr.i, align 4, !dbg !7141
  %90 = load i32, i32* %a.addr.i, align 4, !dbg !7142
  %91 = load i32, i32* %amin.addr.i, align 4, !dbg !7143
  %cmp.i = icmp slt i32 %90, %91, !dbg !7144
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !7145

if.then.i:                                        ; preds = %for.body118
  %92 = load i32, i32* %amin.addr.i, align 4, !dbg !7146
  store i32 %92, i32* %retval.i, align 4, !dbg !7147
  br label %av_clip_c.exit, !dbg !7147

if.else.i:                                        ; preds = %for.body118
  %93 = load i32, i32* %a.addr.i, align 4, !dbg !7148
  %94 = load i32, i32* %amax.addr.i, align 4, !dbg !7149
  %cmp1.i = icmp sgt i32 %93, %94, !dbg !7150
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !7151

if.then2.i:                                       ; preds = %if.else.i
  %95 = load i32, i32* %amax.addr.i, align 4, !dbg !7152
  store i32 %95, i32* %retval.i, align 4, !dbg !7153
  br label %av_clip_c.exit, !dbg !7153

if.else3.i:                                       ; preds = %if.else.i
  %96 = load i32, i32* %a.addr.i, align 4, !dbg !7154
  store i32 %96, i32* %retval.i, align 4, !dbg !7155
  br label %av_clip_c.exit, !dbg !7155

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %97 = load i32, i32* %retval.i, align 4, !dbg !7156
  %98 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !7157
  %mclms_recent127 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %98, i32 0, i32 54, !dbg !7158
  %99 = load i32, i32* %mclms_recent127, align 4, !dbg !7158
  %idxprom128 = sext i32 %99 to i64, !dbg !7159
  %100 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !7159
  %mclms_prevvalues = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %100, i32 0, i32 52, !dbg !7160
  %arrayidx129 = getelementptr inbounds [512 x i32], [512 x i32]* %mclms_prevvalues, i64 0, i64 %idxprom128, !dbg !7159
  store i32 %97, i32* %arrayidx129, align 4, !dbg !7161
  %101 = load i32, i32* %icoef.addr, align 4, !dbg !7162
  %idxprom130 = sext i32 %101 to i64, !dbg !7163
  %102 = load i32, i32* %ich, align 4, !dbg !7164
  %idxprom131 = sext i32 %102 to i64, !dbg !7163
  %103 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !7163
  %channel_residues132 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %103, i32 0, i32 67, !dbg !7165
  %arrayidx133 = getelementptr inbounds [8 x [16384 x i32]], [8 x [16384 x i32]]* %channel_residues132, i64 0, i64 %idxprom131, !dbg !7163
  %arrayidx134 = getelementptr inbounds [16384 x i32], [16384 x i32]* %arrayidx133, i64 0, i64 %idxprom130, !dbg !7163
  %104 = load i32, i32* %arrayidx134, align 4, !dbg !7163
  %cmp135 = icmp sgt i32 %104, 0, !dbg !7166
  %conv136 = zext i1 %cmp135 to i32, !dbg !7166
  %105 = load i32, i32* %icoef.addr, align 4, !dbg !7167
  %idxprom137 = sext i32 %105 to i64, !dbg !7168
  %106 = load i32, i32* %ich, align 4, !dbg !7169
  %idxprom138 = sext i32 %106 to i64, !dbg !7168
  %107 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !7168
  %channel_residues139 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %107, i32 0, i32 67, !dbg !7170
  %arrayidx140 = getelementptr inbounds [8 x [16384 x i32]], [8 x [16384 x i32]]* %channel_residues139, i64 0, i64 %idxprom138, !dbg !7168
  %arrayidx141 = getelementptr inbounds [16384 x i32], [16384 x i32]* %arrayidx140, i64 0, i64 %idxprom137, !dbg !7168
  %108 = load i32, i32* %arrayidx141, align 4, !dbg !7168
  %cmp142 = icmp slt i32 %108, 0, !dbg !7171
  %conv143 = zext i1 %cmp142 to i32, !dbg !7171
  %sub144 = sub nsw i32 %conv136, %conv143, !dbg !7172
  %109 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !7173
  %mclms_recent145 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %109, i32 0, i32 54, !dbg !7174
  %110 = load i32, i32* %mclms_recent145, align 4, !dbg !7174
  %idxprom146 = sext i32 %110 to i64, !dbg !7175
  %111 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !7175
  %mclms_updates147 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %111, i32 0, i32 53, !dbg !7176
  %arrayidx148 = getelementptr inbounds [512 x i32], [512 x i32]* %mclms_updates147, i64 0, i64 %idxprom146, !dbg !7175
  store i32 %sub144, i32* %arrayidx148, align 4, !dbg !7177
  br label %for.inc149, !dbg !7178

for.inc149:                                       ; preds = %av_clip_c.exit
  %112 = load i32, i32* %ich, align 4, !dbg !7179
  %dec150 = add nsw i32 %112, -1, !dbg !7179
  store i32 %dec150, i32* %ich, align 4, !dbg !7179
  br label %for.cond115, !dbg !7181, !llvm.loop !7182

for.end151:                                       ; preds = %for.cond115
  %113 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !7184
  %mclms_recent152 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %113, i32 0, i32 54, !dbg !7186
  %114 = load i32, i32* %mclms_recent152, align 4, !dbg !7186
  %cmp153 = icmp eq i32 %114, 0, !dbg !7187
  br i1 %cmp153, label %if.then155, label %if.end177, !dbg !7188

if.then155:                                       ; preds = %for.end151
  %115 = load i32, i32* %order, align 4, !dbg !7189
  %116 = load i32, i32* %num_channels, align 4, !dbg !7191
  %mul156 = mul nsw i32 %115, %116, !dbg !7192
  %idxprom157 = sext i32 %mul156 to i64, !dbg !7193
  %117 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !7193
  %mclms_prevvalues158 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %117, i32 0, i32 52, !dbg !7194
  %arrayidx159 = getelementptr inbounds [512 x i32], [512 x i32]* %mclms_prevvalues158, i64 0, i64 %idxprom157, !dbg !7193
  %118 = bitcast i32* %arrayidx159 to i8*, !dbg !7195
  %119 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !7196
  %mclms_prevvalues160 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %119, i32 0, i32 52, !dbg !7197
  %arraydecay = getelementptr inbounds [512 x i32], [512 x i32]* %mclms_prevvalues160, i32 0, i32 0, !dbg !7195
  %120 = bitcast i32* %arraydecay to i8*, !dbg !7195
  %121 = load i32, i32* %order, align 4, !dbg !7198
  %conv161 = sext i32 %121 to i64, !dbg !7198
  %mul162 = mul i64 4, %conv161, !dbg !7199
  %122 = load i32, i32* %num_channels, align 4, !dbg !7200
  %conv163 = sext i32 %122 to i64, !dbg !7200
  %mul164 = mul i64 %mul162, %conv163, !dbg !7201
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %118, i8* %120, i64 %mul164, i32 4, i1 false), !dbg !7195
  %123 = load i32, i32* %order, align 4, !dbg !7202
  %124 = load i32, i32* %num_channels, align 4, !dbg !7203
  %mul165 = mul nsw i32 %123, %124, !dbg !7204
  %idxprom166 = sext i32 %mul165 to i64, !dbg !7205
  %125 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !7205
  %mclms_updates167 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %125, i32 0, i32 53, !dbg !7206
  %arrayidx168 = getelementptr inbounds [512 x i32], [512 x i32]* %mclms_updates167, i64 0, i64 %idxprom166, !dbg !7205
  %126 = bitcast i32* %arrayidx168 to i8*, !dbg !7207
  %127 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !7208
  %mclms_updates169 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %127, i32 0, i32 53, !dbg !7209
  %arraydecay170 = getelementptr inbounds [512 x i32], [512 x i32]* %mclms_updates169, i32 0, i32 0, !dbg !7207
  %128 = bitcast i32* %arraydecay170 to i8*, !dbg !7207
  %129 = load i32, i32* %order, align 4, !dbg !7210
  %conv171 = sext i32 %129 to i64, !dbg !7210
  %mul172 = mul i64 4, %conv171, !dbg !7211
  %130 = load i32, i32* %num_channels, align 4, !dbg !7212
  %conv173 = sext i32 %130 to i64, !dbg !7212
  %mul174 = mul i64 %mul172, %conv173, !dbg !7213
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %126, i8* %128, i64 %mul174, i32 4, i1 false), !dbg !7207
  %131 = load i32, i32* %num_channels, align 4, !dbg !7214
  %132 = load i32, i32* %order, align 4, !dbg !7215
  %mul175 = mul nsw i32 %131, %132, !dbg !7216
  %133 = load %struct.WmallDecodeCtx*, %struct.WmallDecodeCtx** %s.addr, align 8, !dbg !7217
  %mclms_recent176 = getelementptr inbounds %struct.WmallDecodeCtx, %struct.WmallDecodeCtx* %133, i32 0, i32 54, !dbg !7218
  store i32 %mul175, i32* %mclms_recent176, align 4, !dbg !7219
  br label %if.end177, !dbg !7220

if.end177:                                        ; preds = %if.then155, %for.end151
  ret void, !dbg !7221
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @NEG_USR32(i32 %a, i8 signext %s) #4 !dbg !7222 {
entry:
  %a.addr = alloca i32, align 4
  %s.addr = alloca i8, align 1
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !7225, metadata !1820), !dbg !7226
  store i8 %s, i8* %s.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %s.addr, metadata !7227, metadata !1820), !dbg !7228
  %0 = load i32, i32* %a.addr, align 4, !dbg !7229
  %1 = load i8, i8* %s.addr, align 1, !dbg !7230
  %conv = sext i8 %1 to i32, !dbg !7230
  %sub = sub nsw i32 0, %conv, !dbg !7231
  %conv1 = trunc i32 %sub to i8, !dbg !7232
  %2 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %conv1, i32 %0) #2, !dbg !7229, !srcloc !7233
  store i32 %2, i32* %a.addr, align 4, !dbg !7229
  %3 = load i32, i32* %a.addr, align 4, !dbg !7234
  ret i32 %3, !dbg !7235
}

declare void @avpriv_copy_bits(%struct.PutBitContext*, i8*, i32) #3

; Function Attrs: inlinehint nounwind uwtable
define internal void @put_bits(%struct.PutBitContext* %s, i32 %n, i32 %value) #4 !dbg !7236 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !3022, metadata !1820), !dbg !7239
  %s.addr = alloca %struct.PutBitContext*, align 8
  %n.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %bit_buf = alloca i32, align 4
  %bit_left = alloca i32, align 4
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !7245, metadata !1820), !dbg !7246
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !7247, metadata !1820), !dbg !7248
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !7249, metadata !1820), !dbg !7250
  call void @llvm.dbg.declare(metadata i32* %bit_buf, metadata !7251, metadata !1820), !dbg !7252
  call void @llvm.dbg.declare(metadata i32* %bit_left, metadata !7253, metadata !1820), !dbg !7254
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !7255
  %bit_buf1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 0, !dbg !7256
  %1 = load i32, i32* %bit_buf1, align 8, !dbg !7256
  store i32 %1, i32* %bit_buf, align 4, !dbg !7257
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !7258
  %bit_left2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 1, !dbg !7259
  %3 = load i32, i32* %bit_left2, align 4, !dbg !7259
  store i32 %3, i32* %bit_left, align 4, !dbg !7260
  %4 = load i32, i32* %n.addr, align 4, !dbg !7261
  %5 = load i32, i32* %bit_left, align 4, !dbg !7262
  %cmp = icmp slt i32 %4, %5, !dbg !7263
  br i1 %cmp, label %if.then, label %if.else, !dbg !7264

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %bit_buf, align 4, !dbg !7265
  %7 = load i32, i32* %n.addr, align 4, !dbg !7267
  %shl = shl i32 %6, %7, !dbg !7268
  %8 = load i32, i32* %value.addr, align 4, !dbg !7269
  %or = or i32 %shl, %8, !dbg !7270
  store i32 %or, i32* %bit_buf, align 4, !dbg !7271
  %9 = load i32, i32* %n.addr, align 4, !dbg !7272
  %10 = load i32, i32* %bit_left, align 4, !dbg !7273
  %sub = sub nsw i32 %10, %9, !dbg !7273
  store i32 %sub, i32* %bit_left, align 4, !dbg !7273
  br label %if.end12, !dbg !7274

if.else:                                          ; preds = %entry
  %11 = load i32, i32* %bit_left, align 4, !dbg !7275
  %12 = load i32, i32* %bit_buf, align 4, !dbg !7276
  %shl3 = shl i32 %12, %11, !dbg !7276
  store i32 %shl3, i32* %bit_buf, align 4, !dbg !7276
  %13 = load i32, i32* %value.addr, align 4, !dbg !7277
  %14 = load i32, i32* %n.addr, align 4, !dbg !7278
  %15 = load i32, i32* %bit_left, align 4, !dbg !7279
  %sub4 = sub nsw i32 %14, %15, !dbg !7280
  %shr = lshr i32 %13, %sub4, !dbg !7281
  %16 = load i32, i32* %bit_buf, align 4, !dbg !7282
  %or5 = or i32 %16, %shr, !dbg !7282
  store i32 %or5, i32* %bit_buf, align 4, !dbg !7282
  %17 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !7283
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %17, i32 0, i32 4, !dbg !7284
  %18 = load i8*, i8** %buf_end, align 8, !dbg !7284
  %19 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !7285
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %19, i32 0, i32 3, !dbg !7286
  %20 = load i8*, i8** %buf_ptr, align 8, !dbg !7286
  %sub.ptr.lhs.cast = ptrtoint i8* %18 to i64, !dbg !7287
  %sub.ptr.rhs.cast = ptrtoint i8* %20 to i64, !dbg !7287
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7287
  %cmp6 = icmp slt i64 3, %sub.ptr.sub, !dbg !7288
  br i1 %cmp6, label %if.then7, label %if.else10, !dbg !7289

if.then7:                                         ; preds = %if.else
  %21 = load i32, i32* %bit_buf, align 4, !dbg !7290
  store i32 %21, i32* %x.addr.i, align 4, !dbg !7291
  %22 = load i32, i32* %x.addr.i, align 4, !dbg !7292
  %shl.i = shl i32 %22, 8, !dbg !7293
  %and.i = and i32 %shl.i, 65280, !dbg !7294
  %23 = load i32, i32* %x.addr.i, align 4, !dbg !7295
  %shr.i = lshr i32 %23, 8, !dbg !7296
  %and1.i = and i32 %shr.i, 255, !dbg !7297
  %or.i = or i32 %and.i, %and1.i, !dbg !7298
  %shl2.i = shl i32 %or.i, 16, !dbg !7299
  %24 = load i32, i32* %x.addr.i, align 4, !dbg !7300
  %shr3.i = lshr i32 %24, 16, !dbg !7301
  %shl4.i = shl i32 %shr3.i, 8, !dbg !7302
  %and5.i = and i32 %shl4.i, 65280, !dbg !7303
  %25 = load i32, i32* %x.addr.i, align 4, !dbg !7304
  %shr6.i = lshr i32 %25, 16, !dbg !7305
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !7306
  %and8.i = and i32 %shr7.i, 255, !dbg !7307
  %or9.i = or i32 %and5.i, %and8.i, !dbg !7308
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !7309
  %26 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !7310
  %buf_ptr8 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %26, i32 0, i32 3, !dbg !7311
  %27 = load i8*, i8** %buf_ptr8, align 8, !dbg !7311
  %28 = bitcast i8* %27 to %union.unaligned_32*, !dbg !7312
  %l = bitcast %union.unaligned_32* %28 to i32*, !dbg !7312
  store i32 %or10.i, i32* %l, align 1, !dbg !7313
  %29 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !7314
  %buf_ptr9 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %29, i32 0, i32 3, !dbg !7315
  %30 = load i8*, i8** %buf_ptr9, align 8, !dbg !7316
  %add.ptr = getelementptr inbounds i8, i8* %30, i64 4, !dbg !7316
  store i8* %add.ptr, i8** %buf_ptr9, align 8, !dbg !7316
  br label %if.end, !dbg !7317

if.else10:                                        ; preds = %if.else
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.27, i32 0, i32 0)), !dbg !7318
  br label %if.end

if.end:                                           ; preds = %if.else10, %if.then7
  %31 = load i32, i32* %n.addr, align 4, !dbg !7320
  %sub11 = sub nsw i32 32, %31, !dbg !7321
  %32 = load i32, i32* %bit_left, align 4, !dbg !7322
  %add = add nsw i32 %32, %sub11, !dbg !7322
  store i32 %add, i32* %bit_left, align 4, !dbg !7322
  %33 = load i32, i32* %value.addr, align 4, !dbg !7323
  store i32 %33, i32* %bit_buf, align 4, !dbg !7324
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then
  %34 = load i32, i32* %bit_buf, align 4, !dbg !7325
  %35 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !7326
  %bit_buf13 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %35, i32 0, i32 0, !dbg !7327
  store i32 %34, i32* %bit_buf13, align 8, !dbg !7328
  %36 = load i32, i32* %bit_left, align 4, !dbg !7329
  %37 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !7330
  %bit_left14 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %37, i32 0, i32 1, !dbg !7331
  store i32 %36, i32* %bit_left14, align 4, !dbg !7332
  ret void, !dbg !7333
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @flush_put_bits(%struct.PutBitContext* %s) #4 !dbg !7334 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !7337, metadata !1820), !dbg !7338
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !7339
  %bit_left = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 1, !dbg !7341
  %1 = load i32, i32* %bit_left, align 4, !dbg !7341
  %cmp = icmp slt i32 %1, 32, !dbg !7342
  br i1 %cmp, label %if.then, label %if.end, !dbg !7343

if.then:                                          ; preds = %entry
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !7344
  %bit_left1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 1, !dbg !7345
  %3 = load i32, i32* %bit_left1, align 4, !dbg !7345
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !7346
  %bit_buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %4, i32 0, i32 0, !dbg !7347
  %5 = load i32, i32* %bit_buf, align 8, !dbg !7348
  %shl = shl i32 %5, %3, !dbg !7348
  store i32 %shl, i32* %bit_buf, align 8, !dbg !7348
  br label %if.end, !dbg !7346

if.end:                                           ; preds = %if.then, %entry
  br label %while.cond, !dbg !7349

while.cond:                                       ; preds = %do.end, %if.end
  %6 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !7350
  %bit_left2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %6, i32 0, i32 1, !dbg !7352
  %7 = load i32, i32* %bit_left2, align 4, !dbg !7352
  %cmp3 = icmp slt i32 %7, 32, !dbg !7353
  br i1 %cmp3, label %while.body, label %while.end, !dbg !7354

while.body:                                       ; preds = %while.cond
  br label %do.body, !dbg !7355, !llvm.loop !7357

do.body:                                          ; preds = %while.body
  %8 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !7358
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %8, i32 0, i32 3, !dbg !7362
  %9 = load i8*, i8** %buf_ptr, align 8, !dbg !7362
  %10 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !7363
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %10, i32 0, i32 4, !dbg !7364
  %11 = load i8*, i8** %buf_end, align 8, !dbg !7364
  %cmp4 = icmp ult i8* %9, %11, !dbg !7365
  br i1 %cmp4, label %if.end6, label %if.then5, !dbg !7366

if.then5:                                         ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.29, i32 0, i32 0), i32 108), !dbg !7367
  call void @abort() #8, !dbg !7370
  unreachable, !dbg !7372

if.end6:                                          ; preds = %do.body
  br label %do.end, !dbg !7373

do.end:                                           ; preds = %if.end6
  %12 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !7375
  %bit_buf7 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %12, i32 0, i32 0, !dbg !7376
  %13 = load i32, i32* %bit_buf7, align 8, !dbg !7376
  %shr = lshr i32 %13, 24, !dbg !7377
  %conv = trunc i32 %shr to i8, !dbg !7375
  %14 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !7378
  %buf_ptr8 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %14, i32 0, i32 3, !dbg !7379
  %15 = load i8*, i8** %buf_ptr8, align 8, !dbg !7380
  %incdec.ptr = getelementptr inbounds i8, i8* %15, i32 1, !dbg !7380
  store i8* %incdec.ptr, i8** %buf_ptr8, align 8, !dbg !7380
  store i8 %conv, i8* %15, align 1, !dbg !7381
  %16 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !7382
  %bit_buf9 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %16, i32 0, i32 0, !dbg !7383
  %17 = load i32, i32* %bit_buf9, align 8, !dbg !7384
  %shl10 = shl i32 %17, 8, !dbg !7384
  store i32 %shl10, i32* %bit_buf9, align 8, !dbg !7384
  %18 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !7385
  %bit_left11 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %18, i32 0, i32 1, !dbg !7386
  %19 = load i32, i32* %bit_left11, align 4, !dbg !7387
  %add = add nsw i32 %19, 8, !dbg !7387
  store i32 %add, i32* %bit_left11, align 4, !dbg !7387
  br label %while.cond, !dbg !7388, !llvm.loop !7390

while.end:                                        ; preds = %while.cond
  %20 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !7391
  %bit_left12 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %20, i32 0, i32 1, !dbg !7392
  store i32 32, i32* %bit_left12, align 4, !dbg !7393
  %21 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !7394
  %bit_buf13 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %21, i32 0, i32 0, !dbg !7395
  store i32 0, i32* %bit_buf13, align 8, !dbg !7396
  ret void, !dbg !7397
}

declare void @av_frame_free(%struct.AVFrame**) #3

declare void @av_freep(i8*) #3

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { inlinehint nounwind readnone uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }
attributes #9 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1815, !1816}
!llvm.ident = !{!1817}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !887, globals: !914)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--wmalosslessdec.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2 = !{!3, !13, !473, !673, !690, !711, !721, !745, !751, !769, !793, !812, !822, !852, !860, !872, !881}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !4, line: 199, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5 = !{!6, !7, !8, !9, !10, !11, !12}
!6 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!7 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!8 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!9 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!10 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!11 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!12 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !14, line: 215, size: 32, align: 32, elements: !15)
!14 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472}
!16 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!17 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!18 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!19 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!20 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!21 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!22 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!23 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!24 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!25 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!26 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!27 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!28 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!29 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!30 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!31 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!32 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!33 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!34 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!35 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!36 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!37 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!38 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!39 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!40 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!41 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!42 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!43 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!44 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!45 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!46 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!47 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!48 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!49 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!50 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!51 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!52 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!54 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!55 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!56 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!57 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!58 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!59 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!60 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!61 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!62 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!63 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!64 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!65 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!66 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!67 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!68 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!69 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!70 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!71 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!72 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!73 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!74 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!75 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!76 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!77 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!78 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!79 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!80 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!81 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!82 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!83 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!84 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!85 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!86 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!87 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!88 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!89 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!90 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!91 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!94 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!95 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!96 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!97 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!98 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!99 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!100 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!101 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!102 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!103 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!104 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!105 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!106 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!108 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!109 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!110 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!111 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!112 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!113 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!114 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!115 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!116 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!117 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!118 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!119 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!120 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!121 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!122 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!123 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!124 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!125 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!126 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!127 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!128 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!129 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!130 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!131 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!132 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!133 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!134 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!135 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!136 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!137 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!138 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!139 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!140 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!141 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!143 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!144 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!145 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!146 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!147 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!148 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!149 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!150 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!151 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!152 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!153 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!154 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!155 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!156 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!157 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!158 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!159 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!160 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!161 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!162 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!163 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!164 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!166 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!167 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!168 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!169 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!170 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!171 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!172 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!173 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!174 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!175 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!176 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!177 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!178 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!179 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!180 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!181 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!183 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!184 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!185 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!186 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!188 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!189 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!190 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!191 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!192 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!193 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!194 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!195 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!196 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!197 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!200 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!201 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!202 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!203 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!204 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!205 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!206 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!207 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!208 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!209 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!210 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!211 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!212 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!213 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!214 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!215 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!216 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!217 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!218 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!219 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!220 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!221 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!222 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!223 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!224 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!225 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!226 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!227 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!228 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!229 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!230 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!231 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!232 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!233 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!234 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!235 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!236 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!237 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!238 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!239 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!240 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!241 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!243 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!244 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!245 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!246 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!247 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!248 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!249 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!250 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!251 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!252 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!254 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!255 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!256 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!257 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!258 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!259 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!260 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!261 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!262 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!263 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!264 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!265 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!266 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!268 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!269 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!270 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!271 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!272 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!273 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!279 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!289 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!290 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!291 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!292 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!293 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!295 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!296 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!297 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!298 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!299 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!300 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!301 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!302 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!303 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!304 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!305 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!306 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!307 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!308 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!309 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!330 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!331 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!332 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!333 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!335 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!336 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!337 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!338 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!339 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!340 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!341 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!342 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!343 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!344 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!345 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!346 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!347 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!348 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!349 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!350 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!351 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!352 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!353 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!354 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!355 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!356 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!357 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!358 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!359 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!360 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!361 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!362 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!363 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!364 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!365 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!366 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!367 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!368 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!369 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!370 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!371 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!372 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!373 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!375 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!376 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!377 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!379 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!380 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!381 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!382 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!384 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!385 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!386 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!387 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!388 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!389 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!390 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!391 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!392 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!393 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!394 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!395 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!396 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!397 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!398 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!400 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!401 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!402 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!403 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!404 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!405 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!406 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!407 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!408 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!409 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!410 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!411 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!412 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!413 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!414 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!415 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!416 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!417 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!418 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!419 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!420 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!421 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!422 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!423 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!424 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!425 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!426 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!427 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!428 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!429 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!430 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!431 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!432 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!433 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!434 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!435 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!436 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!437 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!438 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!439 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!440 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!441 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!442 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!443 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!444 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!445 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!446 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!447 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!449 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!450 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!451 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!452 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!453 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!454 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!455 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!456 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!457 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!458 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!459 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!460 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!461 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!462 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!463 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!465 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!466 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!467 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!468 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!469 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!470 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!471 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!472 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !474, line: 64, size: 32, align: 32, elements: !475)
!474 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!475 = !{!476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672}
!476 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!477 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!478 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!479 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!480 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!481 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!482 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!483 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!484 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!485 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!486 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!487 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!488 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!489 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!490 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!491 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!492 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!493 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!494 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!495 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!496 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!497 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!498 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!499 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!500 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!501 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!502 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!503 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!504 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!505 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!507 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!508 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!509 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!511 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!512 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!513 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!514 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!515 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!516 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!518 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!519 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!520 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!521 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!522 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!523 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!524 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!525 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!526 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!527 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!528 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!531 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!534 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!535 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!536 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!537 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!538 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!541 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!542 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!543 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!544 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!545 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!552 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!553 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!554 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!555 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!556 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!557 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!558 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!560 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!561 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!574 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!575 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!576 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!577 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!578 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!579 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!580 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!581 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!582 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!583 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!584 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!585 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!586 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!587 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!588 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!589 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!590 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!594 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!595 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!596 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!597 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!598 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!599 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!600 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!601 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!602 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!603 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!604 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!605 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!606 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!616 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!618 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!619 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!620 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!622 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!623 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!624 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!626 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!627 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!628 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!629 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!630 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!631 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!632 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!634 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!638 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!639 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!640 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!641 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!642 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!643 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!644 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!645 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!646 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!647 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!648 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!649 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!650 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!651 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!652 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!653 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!654 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!655 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!656 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!657 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!658 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!659 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!660 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!661 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!662 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!663 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!664 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!668 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!669 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!670 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!671 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!672 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!673 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !674, line: 58, size: 32, align: 32, elements: !675)
!674 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!675 = !{!676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689}
!676 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!677 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!678 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!679 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!680 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!681 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!682 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!683 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!684 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!685 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!686 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!687 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!688 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!689 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!690 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !691, line: 29, size: 32, align: 32, elements: !692)
!691 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!692 = !{!693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710}
!693 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!694 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!695 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!696 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!697 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!698 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!699 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!700 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!701 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!702 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!703 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!704 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!705 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!706 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!707 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!708 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!709 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!710 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !4, line: 272, size: 32, align: 32, elements: !712)
!712 = !{!713, !714, !715, !716, !717, !718, !719, !720}
!713 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!714 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!715 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!716 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!717 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!718 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!719 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!720 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!721 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !722, line: 48, size: 32, align: 32, elements: !723)
!722 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!723 = !{!724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744}
!724 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!725 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!726 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!727 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!728 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!729 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!730 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!731 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!732 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!733 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!734 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!735 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!736 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!737 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!738 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!739 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!740 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!741 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!742 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!743 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!744 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!745 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !474, line: 516, size: 32, align: 32, elements: !746)
!746 = !{!747, !748, !749, !750}
!747 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!748 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!749 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!750 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!751 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !474, line: 440, size: 32, align: 32, elements: !752)
!752 = !{!753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768}
!753 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!754 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!755 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!756 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!757 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!758 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!759 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!760 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!761 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!762 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!763 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!764 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!765 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!766 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!767 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!768 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!769 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !474, line: 464, size: 32, align: 32, elements: !770)
!770 = !{!771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792}
!771 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!772 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!773 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!774 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!775 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!776 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!777 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!778 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!779 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!780 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!781 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!782 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!783 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!784 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!785 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!786 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!787 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!788 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!789 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!790 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!791 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!792 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!793 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !474, line: 493, size: 32, align: 32, elements: !794)
!794 = !{!795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811}
!795 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!796 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!797 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!798 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!799 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!800 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!801 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!802 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!803 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!804 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!805 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!806 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!807 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!808 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!809 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!810 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!811 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!812 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !474, line: 538, size: 32, align: 32, elements: !813)
!813 = !{!814, !815, !816, !817, !818, !819, !820, !821}
!814 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!815 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!816 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!817 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!818 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!819 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!820 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!821 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!822 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !14, line: 1175, size: 32, align: 32, elements: !823)
!823 = !{!824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851}
!824 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!825 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!826 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!827 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!828 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!829 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!830 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!831 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!832 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!833 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!834 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!835 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!836 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!837 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!838 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!839 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!840 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!841 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!842 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!843 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!844 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!845 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!846 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!847 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!848 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!849 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!850 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!851 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!852 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !14, line: 1534, size: 32, align: 32, elements: !853)
!853 = !{!854, !855, !856, !857, !858, !859}
!854 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!855 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!856 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!857 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!858 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!859 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!860 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !14, line: 810, size: 32, align: 32, elements: !861)
!861 = !{!862, !863, !864, !865, !866, !867, !868, !869, !870, !871}
!862 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!863 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!864 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!865 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!866 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!867 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!868 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!869 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!870 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!871 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!872 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !14, line: 798, size: 32, align: 32, elements: !873)
!873 = !{!874, !875, !876, !877, !878, !879, !880}
!874 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!875 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!876 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!877 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!878 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!879 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!880 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!881 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !14, line: 3865, size: 32, align: 32, elements: !882)
!882 = !{!883, !884, !885, !886}
!883 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!884 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!885 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!886 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!887 = !{!888, !897, !904, !903, !905, !906, !909, !907, !911, !902, !913}
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64, align: 64)
!889 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !890)
!890 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_16", file: !891, line: 222, size: 16, align: 8, elements: !892)
!891 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!892 = !{!893}
!893 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !890, file: !891, line: 222, baseType: !894, size: 16, align: 16)
!894 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !895, line: 49, baseType: !896)
!895 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!896 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 64, align: 64)
!898 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !899)
!899 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !891, line: 221, size: 32, align: 8, elements: !900)
!900 = !{!901}
!901 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !899, file: !891, line: 221, baseType: !902, size: 32, align: 32)
!902 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !895, line: 51, baseType: !903)
!903 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!904 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64, align: 64)
!907 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !895, line: 37, baseType: !908)
!908 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 64, align: 64)
!910 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !895, line: 38, baseType: !904)
!911 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !895, line: 48, baseType: !912)
!912 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 64, align: 64)
!914 = !{!915, !1641}
!915 = distinct !DIGlobalVariable(name: "ff_wmalossless_decoder", scope: !0, file: !916, line: 1319, type: !917, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_wmalossless_decoder)
!916 = !DIFile(filename: "libavcodec/wmalosslessdec.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!917 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !14, line: 3610, baseType: !918)
!918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !14, line: 3468, size: 1984, align: 64, elements: !919)
!919 = !{!920, !924, !925, !926, !927, !928, !937, !940, !943, !946, !951, !952, !993, !1001, !1002, !1003, !1005, !1556, !1562, !1570, !1574, !1575, !1612, !1616, !1620, !1621, !1625, !1629, !1630, !1634, !1635, !1636}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !918, file: !14, line: 3475, baseType: !921, size: 64, align: 64)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64, align: 64)
!922 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !923)
!923 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !918, file: !14, line: 3480, baseType: !921, size: 64, align: 64, offset: 64)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !918, file: !14, line: 3481, baseType: !3, size: 32, align: 32, offset: 128)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !918, file: !14, line: 3482, baseType: !13, size: 32, align: 32, offset: 160)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !918, file: !14, line: 3487, baseType: !904, size: 32, align: 32, offset: 192)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !918, file: !14, line: 3488, baseType: !929, size: 64, align: 64, offset: 256)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64, align: 64)
!930 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !931)
!931 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !932, line: 61, baseType: !933)
!932 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !932, line: 58, size: 64, align: 32, elements: !934)
!934 = !{!935, !936}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !933, file: !932, line: 59, baseType: !904, size: 32, align: 32)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !933, file: !932, line: 60, baseType: !904, size: 32, align: 32, offset: 32)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !918, file: !14, line: 3489, baseType: !938, size: 64, align: 64, offset: 320)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64, align: 64)
!939 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !918, file: !14, line: 3490, baseType: !941, size: 64, align: 64, offset: 384)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64, align: 64)
!942 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !904)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !918, file: !14, line: 3491, baseType: !944, size: 64, align: 64, offset: 448)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 64, align: 64)
!945 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !918, file: !14, line: 3492, baseType: !947, size: 64, align: 64, offset: 512)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 64, align: 64)
!948 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !949)
!949 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !895, line: 55, baseType: !950)
!950 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !918, file: !14, line: 3493, baseType: !911, size: 8, align: 8, offset: 576)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !918, file: !14, line: 3494, baseType: !953, size: 64, align: 64, offset: 640)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64, align: 64)
!954 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !955)
!955 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !691, line: 143, baseType: !956)
!956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !691, line: 67, size: 640, align: 64, elements: !957)
!957 = !{!958, !959, !963, !967, !968, !969, !970, !974, !980, !982, !986}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !956, file: !691, line: 72, baseType: !921, size: 64, align: 64)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !956, file: !691, line: 78, baseType: !960, size: 64, align: 64, offset: 64)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64, align: 64)
!961 = !DISubroutineType(types: !962)
!962 = !{!921, !905}
!963 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !956, file: !691, line: 85, baseType: !964, size: 64, align: 64, offset: 128)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 64, align: 64)
!965 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !966)
!966 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !691, line: 85, flags: DIFlagFwdDecl)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !956, file: !691, line: 93, baseType: !904, size: 32, align: 32, offset: 192)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !956, file: !691, line: 99, baseType: !904, size: 32, align: 32, offset: 224)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !956, file: !691, line: 108, baseType: !904, size: 32, align: 32, offset: 256)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !956, file: !691, line: 113, baseType: !971, size: 64, align: 64, offset: 320)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64, align: 64)
!972 = !DISubroutineType(types: !973)
!973 = !{!905, !905, !905}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !956, file: !691, line: 123, baseType: !975, size: 64, align: 64, offset: 384)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64, align: 64)
!976 = !DISubroutineType(types: !977)
!977 = !{!978, !978}
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64, align: 64)
!979 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !956)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !956, file: !691, line: 130, baseType: !981, size: 32, align: 32, offset: 448)
!981 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !691, line: 48, baseType: !690)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !956, file: !691, line: 136, baseType: !983, size: 64, align: 64, offset: 512)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 64, align: 64)
!984 = !DISubroutineType(types: !985)
!985 = !{!981, !905}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !956, file: !691, line: 142, baseType: !987, size: 64, align: 64, offset: 576)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64, align: 64)
!988 = !DISubroutineType(types: !989)
!989 = !{!904, !990, !905, !921, !904}
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64, align: 64)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64, align: 64)
!992 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !691, line: 60, flags: DIFlagFwdDecl)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !918, file: !14, line: 3495, baseType: !994, size: 64, align: 64, offset: 704)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 64, align: 64)
!995 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !996)
!996 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !14, line: 3404, baseType: !997)
!997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !14, line: 3401, size: 128, align: 64, elements: !998)
!998 = !{!999, !1000}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !997, file: !14, line: 3402, baseType: !904, size: 32, align: 32)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !997, file: !14, line: 3403, baseType: !921, size: 64, align: 64, offset: 64)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !918, file: !14, line: 3507, baseType: !921, size: 64, align: 64, offset: 768)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !918, file: !14, line: 3516, baseType: !904, size: 32, align: 32, offset: 832)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !918, file: !14, line: 3517, baseType: !1004, size: 64, align: 64, offset: 896)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64, align: 64)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !918, file: !14, line: 3527, baseType: !1006, size: 64, align: 64, offset: 960)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64, align: 64)
!1007 = !DISubroutineType(types: !1008)
!1008 = !{!904, !1009}
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64, align: 64)
!1010 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !14, line: 3360, baseType: !1011)
!1011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !14, line: 1556, size: 8448, align: 64, elements: !1012)
!1012 = !{!1013, !1014, !1015, !1016, !1019, !1020, !1021, !1022, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1304, !1308, !1309, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1494, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1011, file: !14, line: 1561, baseType: !953, size: 64, align: 64)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1011, file: !14, line: 1562, baseType: !904, size: 32, align: 32, offset: 64)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1011, file: !14, line: 1564, baseType: !3, size: 32, align: 32, offset: 96)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1011, file: !14, line: 1565, baseType: !1017, size: 64, align: 64, offset: 128)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64, align: 64)
!1018 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !918)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1011, file: !14, line: 1566, baseType: !13, size: 32, align: 32, offset: 192)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1011, file: !14, line: 1581, baseType: !903, size: 32, align: 32, offset: 224)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1011, file: !14, line: 1583, baseType: !905, size: 64, align: 64, offset: 256)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1011, file: !14, line: 1591, baseType: !1023, size: 64, align: 64, offset: 320)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 64, align: 64)
!1024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1025, line: 129, size: 1664, align: 64, elements: !1026)
!1025 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1026 = !{!1027, !1028, !1029, !1030, !1130, !1151, !1152, !1181, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1024, file: !1025, line: 136, baseType: !904, size: 32, align: 32)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1024, file: !1025, line: 151, baseType: !904, size: 32, align: 32, offset: 32)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1024, file: !1025, line: 157, baseType: !904, size: 32, align: 32, offset: 64)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1024, file: !1025, line: 159, baseType: !1031, size: 64, align: 64, offset: 128)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64, align: 64)
!1032 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !722, line: 646, baseType: !1033)
!1033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !722, line: 268, size: 4288, align: 64, elements: !1034)
!1034 = !{!1035, !1040, !1042, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1082, !1084, !1085, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1118, !1119, !1120, !1121, !1122, !1123, !1126, !1127, !1128, !1129}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1033, file: !722, line: 282, baseType: !1036, size: 512, align: 64)
!1036 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1037, size: 512, align: 64, elements: !1038)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 64, align: 64)
!1038 = !{!1039}
!1039 = !DISubrange(count: 8)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1033, file: !722, line: 299, baseType: !1041, size: 256, align: 32, offset: 512)
!1041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !904, size: 256, align: 32, elements: !1038)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1033, file: !722, line: 315, baseType: !1043, size: 64, align: 64, offset: 768)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64, align: 64)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1033, file: !722, line: 326, baseType: !904, size: 32, align: 32, offset: 832)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1033, file: !722, line: 326, baseType: !904, size: 32, align: 32, offset: 864)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1033, file: !722, line: 334, baseType: !904, size: 32, align: 32, offset: 896)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1033, file: !722, line: 341, baseType: !904, size: 32, align: 32, offset: 928)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1033, file: !722, line: 346, baseType: !904, size: 32, align: 32, offset: 960)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1033, file: !722, line: 351, baseType: !711, size: 32, align: 32, offset: 992)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1033, file: !722, line: 356, baseType: !931, size: 64, align: 32, offset: 1024)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1033, file: !722, line: 361, baseType: !1052, size: 64, align: 64, offset: 1088)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !895, line: 40, baseType: !1053)
!1053 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1033, file: !722, line: 369, baseType: !1052, size: 64, align: 64, offset: 1152)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1033, file: !722, line: 377, baseType: !1052, size: 64, align: 64, offset: 1216)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1033, file: !722, line: 382, baseType: !904, size: 32, align: 32, offset: 1280)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1033, file: !722, line: 386, baseType: !904, size: 32, align: 32, offset: 1312)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1033, file: !722, line: 391, baseType: !904, size: 32, align: 32, offset: 1344)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1033, file: !722, line: 396, baseType: !905, size: 64, align: 64, offset: 1408)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1033, file: !722, line: 403, baseType: !1061, size: 512, align: 64, offset: 1472)
!1061 = !DICompositeType(tag: DW_TAG_array_type, baseType: !949, size: 512, align: 64, elements: !1038)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1033, file: !722, line: 410, baseType: !904, size: 32, align: 32, offset: 1984)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1033, file: !722, line: 415, baseType: !904, size: 32, align: 32, offset: 2016)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1033, file: !722, line: 420, baseType: !904, size: 32, align: 32, offset: 2048)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1033, file: !722, line: 425, baseType: !904, size: 32, align: 32, offset: 2080)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1033, file: !722, line: 435, baseType: !1052, size: 64, align: 64, offset: 2112)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1033, file: !722, line: 440, baseType: !904, size: 32, align: 32, offset: 2176)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1033, file: !722, line: 445, baseType: !949, size: 64, align: 64, offset: 2240)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1033, file: !722, line: 459, baseType: !1070, size: 512, align: 64, offset: 2304)
!1070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1071, size: 512, align: 64, elements: !1038)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64, align: 64)
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1073, line: 94, baseType: !1074)
!1073 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1073, line: 81, size: 192, align: 64, elements: !1075)
!1075 = !{!1076, !1080, !1081}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1074, file: !1073, line: 82, baseType: !1077, size: 64, align: 64)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64, align: 64)
!1078 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1073, line: 73, baseType: !1079)
!1079 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1073, line: 73, flags: DIFlagFwdDecl)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1074, file: !1073, line: 89, baseType: !1037, size: 64, align: 64, offset: 64)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1074, file: !1073, line: 93, baseType: !904, size: 32, align: 32, offset: 128)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1033, file: !722, line: 473, baseType: !1083, size: 64, align: 64, offset: 2816)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 64, align: 64)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1033, file: !722, line: 477, baseType: !904, size: 32, align: 32, offset: 2880)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1033, file: !722, line: 479, baseType: !1086, size: 64, align: 64, offset: 2944)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64, align: 64)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64, align: 64)
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !722, line: 207, baseType: !1089)
!1089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !722, line: 201, size: 320, align: 64, elements: !1090)
!1090 = !{!1091, !1092, !1093, !1094, !1099}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1089, file: !722, line: 202, baseType: !721, size: 32, align: 32)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1089, file: !722, line: 203, baseType: !1037, size: 64, align: 64, offset: 64)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1089, file: !722, line: 204, baseType: !904, size: 32, align: 32, offset: 128)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1089, file: !722, line: 205, baseType: !1095, size: 64, align: 64, offset: 192)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64, align: 64)
!1096 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1097, line: 86, baseType: !1098)
!1097 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1098 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1097, line: 86, flags: DIFlagFwdDecl)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1089, file: !722, line: 206, baseType: !1071, size: 64, align: 64, offset: 256)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1033, file: !722, line: 480, baseType: !904, size: 32, align: 32, offset: 3008)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1033, file: !722, line: 505, baseType: !904, size: 32, align: 32, offset: 3040)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1033, file: !722, line: 512, baseType: !745, size: 32, align: 32, offset: 3072)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1033, file: !722, line: 514, baseType: !751, size: 32, align: 32, offset: 3104)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1033, file: !722, line: 516, baseType: !769, size: 32, align: 32, offset: 3136)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1033, file: !722, line: 523, baseType: !793, size: 32, align: 32, offset: 3168)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1033, file: !722, line: 525, baseType: !812, size: 32, align: 32, offset: 3200)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1033, file: !722, line: 532, baseType: !1052, size: 64, align: 64, offset: 3264)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1033, file: !722, line: 539, baseType: !1052, size: 64, align: 64, offset: 3328)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1033, file: !722, line: 547, baseType: !1052, size: 64, align: 64, offset: 3392)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1033, file: !722, line: 554, baseType: !1095, size: 64, align: 64, offset: 3456)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1033, file: !722, line: 563, baseType: !904, size: 32, align: 32, offset: 3520)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1033, file: !722, line: 572, baseType: !904, size: 32, align: 32, offset: 3552)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1033, file: !722, line: 581, baseType: !904, size: 32, align: 32, offset: 3584)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1033, file: !722, line: 588, baseType: !1115, size: 64, align: 64, offset: 3648)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64, align: 64)
!1116 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !895, line: 36, baseType: !1117)
!1117 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1033, file: !722, line: 593, baseType: !904, size: 32, align: 32, offset: 3712)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1033, file: !722, line: 596, baseType: !904, size: 32, align: 32, offset: 3744)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1033, file: !722, line: 599, baseType: !1071, size: 64, align: 64, offset: 3776)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1033, file: !722, line: 605, baseType: !1071, size: 64, align: 64, offset: 3840)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1033, file: !722, line: 616, baseType: !1071, size: 64, align: 64, offset: 3904)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1033, file: !722, line: 626, baseType: !1124, size: 64, align: 64, offset: 3968)
!1124 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1125, line: 216, baseType: !950)
!1125 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1033, file: !722, line: 627, baseType: !1124, size: 64, align: 64, offset: 4032)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1033, file: !722, line: 628, baseType: !1124, size: 64, align: 64, offset: 4096)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1033, file: !722, line: 629, baseType: !1124, size: 64, align: 64, offset: 4160)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1033, file: !722, line: 645, baseType: !1071, size: 64, align: 64, offset: 4224)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1024, file: !1025, line: 161, baseType: !1131, size: 64, align: 64, offset: 192)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64, align: 64)
!1132 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1025, line: 117, baseType: !1133)
!1133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1025, line: 100, size: 832, align: 64, elements: !1134)
!1134 = !{!1135, !1142, !1143, !1144, !1145, !1146, !1148, !1149, !1150}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1133, file: !1025, line: 105, baseType: !1136, size: 256, align: 64)
!1136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1137, size: 256, align: 64, elements: !1140)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64, align: 64)
!1138 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1073, line: 238, baseType: !1139)
!1139 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1073, line: 238, flags: DIFlagFwdDecl)
!1140 = !{!1141}
!1141 = !DISubrange(count: 4)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1133, file: !1025, line: 110, baseType: !904, size: 32, align: 32, offset: 256)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1133, file: !1025, line: 111, baseType: !904, size: 32, align: 32, offset: 288)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1133, file: !1025, line: 111, baseType: !904, size: 32, align: 32, offset: 320)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1133, file: !1025, line: 112, baseType: !1041, size: 256, align: 32, offset: 352)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1133, file: !1025, line: 113, baseType: !1147, size: 128, align: 32, offset: 608)
!1147 = !DICompositeType(tag: DW_TAG_array_type, baseType: !904, size: 128, align: 32, elements: !1140)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1133, file: !1025, line: 114, baseType: !904, size: 32, align: 32, offset: 736)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1133, file: !1025, line: 115, baseType: !904, size: 32, align: 32, offset: 768)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1133, file: !1025, line: 116, baseType: !904, size: 32, align: 32, offset: 800)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1024, file: !1025, line: 163, baseType: !905, size: 64, align: 64, offset: 256)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1024, file: !1025, line: 165, baseType: !1153, size: 128, align: 64, offset: 320)
!1153 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1025, line: 122, baseType: !1154)
!1154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1025, line: 119, size: 128, align: 64, elements: !1155)
!1155 = !{!1156, !1180}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1154, file: !1025, line: 120, baseType: !1157, size: 64, align: 64)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 64, align: 64)
!1158 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !14, line: 1499, baseType: !1159)
!1159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !14, line: 1445, size: 704, align: 64, elements: !1160)
!1160 = !{!1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1176, !1177, !1178, !1179}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1159, file: !14, line: 1451, baseType: !1071, size: 64, align: 64)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1159, file: !14, line: 1461, baseType: !1052, size: 64, align: 64, offset: 64)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1159, file: !14, line: 1467, baseType: !1052, size: 64, align: 64, offset: 128)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1159, file: !14, line: 1468, baseType: !1037, size: 64, align: 64, offset: 192)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1159, file: !14, line: 1469, baseType: !904, size: 32, align: 32, offset: 256)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1159, file: !14, line: 1470, baseType: !904, size: 32, align: 32, offset: 288)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1159, file: !14, line: 1474, baseType: !904, size: 32, align: 32, offset: 320)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1159, file: !14, line: 1479, baseType: !1169, size: 64, align: 64, offset: 384)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 64, align: 64)
!1170 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !14, line: 1415, baseType: !1171)
!1171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !14, line: 1411, size: 128, align: 64, elements: !1172)
!1172 = !{!1173, !1174, !1175}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1171, file: !14, line: 1412, baseType: !1037, size: 64, align: 64)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1171, file: !14, line: 1413, baseType: !904, size: 32, align: 32, offset: 64)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1171, file: !14, line: 1414, baseType: !822, size: 32, align: 32, offset: 96)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1159, file: !14, line: 1480, baseType: !904, size: 32, align: 32, offset: 448)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1159, file: !14, line: 1486, baseType: !1052, size: 64, align: 64, offset: 512)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1159, file: !14, line: 1488, baseType: !1052, size: 64, align: 64, offset: 576)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1159, file: !14, line: 1497, baseType: !1052, size: 64, align: 64, offset: 640)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1154, file: !1025, line: 121, baseType: !1031, size: 64, align: 64, offset: 64)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1024, file: !1025, line: 166, baseType: !1182, size: 128, align: 64, offset: 448)
!1182 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1025, line: 127, baseType: !1183)
!1183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1025, line: 124, size: 128, align: 64, elements: !1184)
!1184 = !{!1185, !1258}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1183, file: !1025, line: 125, baseType: !1186, size: 64, align: 64)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 64, align: 64)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64, align: 64)
!1188 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !14, line: 5794, baseType: !1189)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !14, line: 5747, size: 512, align: 64, elements: !1190)
!1190 = !{!1191, !1192, !1216, !1220, !1221, !1255, !1256, !1257}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1189, file: !14, line: 5751, baseType: !953, size: 64, align: 64)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1189, file: !14, line: 5756, baseType: !1193, size: 64, align: 64, offset: 64)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 64, align: 64)
!1194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1195)
!1195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !14, line: 5796, size: 512, align: 64, elements: !1196)
!1196 = !{!1197, !1198, !1201, !1202, !1203, !1207, !1211, !1215}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1195, file: !14, line: 5797, baseType: !921, size: 64, align: 64)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1195, file: !14, line: 5804, baseType: !1199, size: 64, align: 64, offset: 64)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 64, align: 64)
!1200 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1195, file: !14, line: 5815, baseType: !953, size: 64, align: 64, offset: 128)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1195, file: !14, line: 5825, baseType: !904, size: 32, align: 32, offset: 192)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1195, file: !14, line: 5826, baseType: !1204, size: 64, align: 64, offset: 256)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 64, align: 64)
!1205 = !DISubroutineType(types: !1206)
!1206 = !{!904, !1187}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1195, file: !14, line: 5827, baseType: !1208, size: 64, align: 64, offset: 320)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 64, align: 64)
!1209 = !DISubroutineType(types: !1210)
!1210 = !{!904, !1187, !1157}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1195, file: !14, line: 5828, baseType: !1212, size: 64, align: 64, offset: 384)
!1212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1213, size: 64, align: 64)
!1213 = !DISubroutineType(types: !1214)
!1214 = !{null, !1187}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1195, file: !14, line: 5829, baseType: !1212, size: 64, align: 64, offset: 448)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1189, file: !14, line: 5762, baseType: !1217, size: 64, align: 64, offset: 128)
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 64, align: 64)
!1218 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !14, line: 5735, baseType: !1219)
!1219 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !14, line: 5735, flags: DIFlagFwdDecl)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1189, file: !14, line: 5768, baseType: !905, size: 64, align: 64, offset: 192)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1189, file: !14, line: 5775, baseType: !1222, size: 64, align: 64, offset: 256)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64, align: 64)
!1223 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !14, line: 4085, baseType: !1224)
!1224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !14, line: 3936, size: 1152, align: 64, elements: !1225)
!1225 = !{!1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1224, file: !14, line: 3940, baseType: !3, size: 32, align: 32)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1224, file: !14, line: 3944, baseType: !13, size: 32, align: 32, offset: 32)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1224, file: !14, line: 3948, baseType: !902, size: 32, align: 32, offset: 64)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1224, file: !14, line: 3958, baseType: !1037, size: 64, align: 64, offset: 128)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1224, file: !14, line: 3962, baseType: !904, size: 32, align: 32, offset: 192)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1224, file: !14, line: 3968, baseType: !904, size: 32, align: 32, offset: 224)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1224, file: !14, line: 3973, baseType: !1052, size: 64, align: 64, offset: 256)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1224, file: !14, line: 3986, baseType: !904, size: 32, align: 32, offset: 320)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1224, file: !14, line: 3999, baseType: !904, size: 32, align: 32, offset: 352)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1224, file: !14, line: 4004, baseType: !904, size: 32, align: 32, offset: 384)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1224, file: !14, line: 4005, baseType: !904, size: 32, align: 32, offset: 416)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1224, file: !14, line: 4010, baseType: !904, size: 32, align: 32, offset: 448)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1224, file: !14, line: 4011, baseType: !904, size: 32, align: 32, offset: 480)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1224, file: !14, line: 4020, baseType: !931, size: 64, align: 32, offset: 512)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1224, file: !14, line: 4025, baseType: !852, size: 32, align: 32, offset: 576)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1224, file: !14, line: 4030, baseType: !745, size: 32, align: 32, offset: 608)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1224, file: !14, line: 4031, baseType: !751, size: 32, align: 32, offset: 640)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1224, file: !14, line: 4032, baseType: !769, size: 32, align: 32, offset: 672)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1224, file: !14, line: 4033, baseType: !793, size: 32, align: 32, offset: 704)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1224, file: !14, line: 4034, baseType: !812, size: 32, align: 32, offset: 736)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1224, file: !14, line: 4039, baseType: !904, size: 32, align: 32, offset: 768)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1224, file: !14, line: 4046, baseType: !949, size: 64, align: 64, offset: 832)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1224, file: !14, line: 4050, baseType: !904, size: 32, align: 32, offset: 896)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1224, file: !14, line: 4054, baseType: !904, size: 32, align: 32, offset: 928)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1224, file: !14, line: 4061, baseType: !904, size: 32, align: 32, offset: 960)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1224, file: !14, line: 4065, baseType: !904, size: 32, align: 32, offset: 992)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1224, file: !14, line: 4073, baseType: !904, size: 32, align: 32, offset: 1024)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1224, file: !14, line: 4080, baseType: !904, size: 32, align: 32, offset: 1056)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1224, file: !14, line: 4084, baseType: !904, size: 32, align: 32, offset: 1088)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1189, file: !14, line: 5781, baseType: !1222, size: 64, align: 64, offset: 320)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1189, file: !14, line: 5787, baseType: !931, size: 64, align: 32, offset: 384)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1189, file: !14, line: 5793, baseType: !931, size: 64, align: 32, offset: 448)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1183, file: !1025, line: 126, baseType: !904, size: 32, align: 32, offset: 64)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1024, file: !1025, line: 172, baseType: !1157, size: 64, align: 64, offset: 576)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1024, file: !1025, line: 177, baseType: !1037, size: 64, align: 64, offset: 640)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1024, file: !1025, line: 178, baseType: !903, size: 32, align: 32, offset: 704)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1024, file: !1025, line: 180, baseType: !905, size: 64, align: 64, offset: 768)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1024, file: !1025, line: 185, baseType: !904, size: 32, align: 32, offset: 832)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1024, file: !1025, line: 190, baseType: !905, size: 64, align: 64, offset: 896)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1024, file: !1025, line: 195, baseType: !904, size: 32, align: 32, offset: 960)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1024, file: !1025, line: 200, baseType: !1157, size: 64, align: 64, offset: 1024)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1024, file: !1025, line: 201, baseType: !904, size: 32, align: 32, offset: 1088)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1024, file: !1025, line: 202, baseType: !1031, size: 64, align: 64, offset: 1152)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1024, file: !1025, line: 203, baseType: !904, size: 32, align: 32, offset: 1216)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1024, file: !1025, line: 205, baseType: !904, size: 32, align: 32, offset: 1248)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1024, file: !1025, line: 206, baseType: !904, size: 32, align: 32, offset: 1280)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1024, file: !1025, line: 209, baseType: !1124, size: 64, align: 64, offset: 1344)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1024, file: !1025, line: 212, baseType: !1124, size: 64, align: 64, offset: 1408)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1024, file: !1025, line: 213, baseType: !1031, size: 64, align: 64, offset: 1472)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1024, file: !1025, line: 215, baseType: !904, size: 32, align: 32, offset: 1536)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1024, file: !1025, line: 217, baseType: !904, size: 32, align: 32, offset: 1568)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1024, file: !1025, line: 220, baseType: !904, size: 32, align: 32, offset: 1600)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1011, file: !14, line: 1598, baseType: !905, size: 64, align: 64, offset: 384)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1011, file: !14, line: 1606, baseType: !1052, size: 64, align: 64, offset: 448)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1011, file: !14, line: 1614, baseType: !904, size: 32, align: 32, offset: 512)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1011, file: !14, line: 1622, baseType: !904, size: 32, align: 32, offset: 544)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1011, file: !14, line: 1628, baseType: !904, size: 32, align: 32, offset: 576)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1011, file: !14, line: 1636, baseType: !904, size: 32, align: 32, offset: 608)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1011, file: !14, line: 1643, baseType: !904, size: 32, align: 32, offset: 640)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1011, file: !14, line: 1657, baseType: !1037, size: 64, align: 64, offset: 704)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1011, file: !14, line: 1658, baseType: !904, size: 32, align: 32, offset: 768)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1011, file: !14, line: 1679, baseType: !931, size: 64, align: 32, offset: 800)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1011, file: !14, line: 1688, baseType: !904, size: 32, align: 32, offset: 864)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1011, file: !14, line: 1712, baseType: !904, size: 32, align: 32, offset: 896)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1011, file: !14, line: 1729, baseType: !904, size: 32, align: 32, offset: 928)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1011, file: !14, line: 1729, baseType: !904, size: 32, align: 32, offset: 960)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1011, file: !14, line: 1744, baseType: !904, size: 32, align: 32, offset: 992)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1011, file: !14, line: 1744, baseType: !904, size: 32, align: 32, offset: 1024)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1011, file: !14, line: 1751, baseType: !904, size: 32, align: 32, offset: 1056)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1011, file: !14, line: 1766, baseType: !473, size: 32, align: 32, offset: 1088)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1011, file: !14, line: 1791, baseType: !1297, size: 64, align: 64, offset: 1152)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 64, align: 64)
!1298 = !DISubroutineType(types: !1299)
!1299 = !{null, !1300, !1301, !1303, !904, !904, !904}
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64, align: 64)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 64, align: 64)
!1302 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1032)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64, align: 64)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1011, file: !14, line: 1808, baseType: !1305, size: 64, align: 64, offset: 1216)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64, align: 64)
!1306 = !DISubroutineType(types: !1307)
!1307 = !{!473, !1300, !938}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1011, file: !14, line: 1816, baseType: !904, size: 32, align: 32, offset: 1280)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1011, file: !14, line: 1825, baseType: !1310, size: 32, align: 32, offset: 1312)
!1310 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1011, file: !14, line: 1830, baseType: !904, size: 32, align: 32, offset: 1344)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1011, file: !14, line: 1838, baseType: !1310, size: 32, align: 32, offset: 1376)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1011, file: !14, line: 1846, baseType: !904, size: 32, align: 32, offset: 1408)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1011, file: !14, line: 1851, baseType: !904, size: 32, align: 32, offset: 1440)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1011, file: !14, line: 1861, baseType: !1310, size: 32, align: 32, offset: 1472)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1011, file: !14, line: 1868, baseType: !1310, size: 32, align: 32, offset: 1504)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1011, file: !14, line: 1875, baseType: !1310, size: 32, align: 32, offset: 1536)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1011, file: !14, line: 1882, baseType: !1310, size: 32, align: 32, offset: 1568)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1011, file: !14, line: 1889, baseType: !1310, size: 32, align: 32, offset: 1600)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1011, file: !14, line: 1896, baseType: !1310, size: 32, align: 32, offset: 1632)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1011, file: !14, line: 1903, baseType: !1310, size: 32, align: 32, offset: 1664)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1011, file: !14, line: 1910, baseType: !904, size: 32, align: 32, offset: 1696)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1011, file: !14, line: 1915, baseType: !904, size: 32, align: 32, offset: 1728)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1011, file: !14, line: 1926, baseType: !1303, size: 64, align: 64, offset: 1792)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1011, file: !14, line: 1935, baseType: !931, size: 64, align: 32, offset: 1856)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1011, file: !14, line: 1942, baseType: !904, size: 32, align: 32, offset: 1920)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1011, file: !14, line: 1948, baseType: !904, size: 32, align: 32, offset: 1952)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1011, file: !14, line: 1954, baseType: !904, size: 32, align: 32, offset: 1984)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1011, file: !14, line: 1960, baseType: !904, size: 32, align: 32, offset: 2016)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1011, file: !14, line: 1984, baseType: !904, size: 32, align: 32, offset: 2048)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1011, file: !14, line: 1991, baseType: !904, size: 32, align: 32, offset: 2080)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1011, file: !14, line: 1996, baseType: !904, size: 32, align: 32, offset: 2112)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1011, file: !14, line: 2004, baseType: !904, size: 32, align: 32, offset: 2144)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1011, file: !14, line: 2011, baseType: !904, size: 32, align: 32, offset: 2176)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1011, file: !14, line: 2018, baseType: !904, size: 32, align: 32, offset: 2208)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1011, file: !14, line: 2027, baseType: !904, size: 32, align: 32, offset: 2240)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1011, file: !14, line: 2034, baseType: !904, size: 32, align: 32, offset: 2272)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1011, file: !14, line: 2044, baseType: !904, size: 32, align: 32, offset: 2304)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1011, file: !14, line: 2054, baseType: !1340, size: 64, align: 64, offset: 2368)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 64, align: 64)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1011, file: !14, line: 2061, baseType: !1340, size: 64, align: 64, offset: 2432)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1011, file: !14, line: 2066, baseType: !904, size: 32, align: 32, offset: 2496)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1011, file: !14, line: 2070, baseType: !904, size: 32, align: 32, offset: 2528)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1011, file: !14, line: 2078, baseType: !904, size: 32, align: 32, offset: 2560)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1011, file: !14, line: 2085, baseType: !904, size: 32, align: 32, offset: 2592)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1011, file: !14, line: 2092, baseType: !904, size: 32, align: 32, offset: 2624)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1011, file: !14, line: 2099, baseType: !904, size: 32, align: 32, offset: 2656)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1011, file: !14, line: 2106, baseType: !904, size: 32, align: 32, offset: 2688)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1011, file: !14, line: 2113, baseType: !904, size: 32, align: 32, offset: 2720)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1011, file: !14, line: 2120, baseType: !904, size: 32, align: 32, offset: 2752)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1011, file: !14, line: 2125, baseType: !904, size: 32, align: 32, offset: 2784)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1011, file: !14, line: 2133, baseType: !904, size: 32, align: 32, offset: 2816)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1011, file: !14, line: 2140, baseType: !904, size: 32, align: 32, offset: 2848)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1011, file: !14, line: 2145, baseType: !904, size: 32, align: 32, offset: 2880)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1011, file: !14, line: 2153, baseType: !904, size: 32, align: 32, offset: 2912)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1011, file: !14, line: 2158, baseType: !904, size: 32, align: 32, offset: 2944)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1011, file: !14, line: 2166, baseType: !751, size: 32, align: 32, offset: 2976)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1011, file: !14, line: 2173, baseType: !769, size: 32, align: 32, offset: 3008)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1011, file: !14, line: 2180, baseType: !793, size: 32, align: 32, offset: 3040)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1011, file: !14, line: 2187, baseType: !745, size: 32, align: 32, offset: 3072)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1011, file: !14, line: 2194, baseType: !812, size: 32, align: 32, offset: 3104)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1011, file: !14, line: 2203, baseType: !904, size: 32, align: 32, offset: 3136)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1011, file: !14, line: 2209, baseType: !852, size: 32, align: 32, offset: 3168)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1011, file: !14, line: 2212, baseType: !904, size: 32, align: 32, offset: 3200)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1011, file: !14, line: 2213, baseType: !904, size: 32, align: 32, offset: 3232)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1011, file: !14, line: 2220, baseType: !673, size: 32, align: 32, offset: 3264)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1011, file: !14, line: 2232, baseType: !904, size: 32, align: 32, offset: 3296)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1011, file: !14, line: 2243, baseType: !904, size: 32, align: 32, offset: 3328)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1011, file: !14, line: 2249, baseType: !904, size: 32, align: 32, offset: 3360)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1011, file: !14, line: 2256, baseType: !904, size: 32, align: 32, offset: 3392)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1011, file: !14, line: 2263, baseType: !949, size: 64, align: 64, offset: 3456)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1011, file: !14, line: 2270, baseType: !949, size: 64, align: 64, offset: 3520)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1011, file: !14, line: 2277, baseType: !860, size: 32, align: 32, offset: 3584)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1011, file: !14, line: 2285, baseType: !673, size: 32, align: 32, offset: 3616)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1011, file: !14, line: 2367, baseType: !1376, size: 64, align: 64, offset: 3648)
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1377, size: 64, align: 64)
!1377 = !DISubroutineType(types: !1378)
!1378 = !{!904, !1300, !1031, !904}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1011, file: !14, line: 2383, baseType: !904, size: 32, align: 32, offset: 3712)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1011, file: !14, line: 2386, baseType: !1310, size: 32, align: 32, offset: 3744)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1011, file: !14, line: 2387, baseType: !1310, size: 32, align: 32, offset: 3776)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1011, file: !14, line: 2394, baseType: !904, size: 32, align: 32, offset: 3808)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1011, file: !14, line: 2401, baseType: !904, size: 32, align: 32, offset: 3840)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1011, file: !14, line: 2408, baseType: !904, size: 32, align: 32, offset: 3872)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1011, file: !14, line: 2415, baseType: !904, size: 32, align: 32, offset: 3904)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1011, file: !14, line: 2422, baseType: !904, size: 32, align: 32, offset: 3936)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1011, file: !14, line: 2423, baseType: !1388, size: 64, align: 64, offset: 3968)
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 64, align: 64)
!1389 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !14, line: 831, baseType: !1390)
!1390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !14, line: 826, size: 128, align: 32, elements: !1391)
!1391 = !{!1392, !1393, !1394, !1395}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1390, file: !14, line: 827, baseType: !904, size: 32, align: 32)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1390, file: !14, line: 828, baseType: !904, size: 32, align: 32, offset: 32)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1390, file: !14, line: 829, baseType: !904, size: 32, align: 32, offset: 64)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1390, file: !14, line: 830, baseType: !1310, size: 32, align: 32, offset: 96)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1011, file: !14, line: 2430, baseType: !1052, size: 64, align: 64, offset: 4032)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1011, file: !14, line: 2437, baseType: !1052, size: 64, align: 64, offset: 4096)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1011, file: !14, line: 2444, baseType: !1310, size: 32, align: 32, offset: 4160)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1011, file: !14, line: 2451, baseType: !1310, size: 32, align: 32, offset: 4192)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1011, file: !14, line: 2458, baseType: !904, size: 32, align: 32, offset: 4224)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1011, file: !14, line: 2469, baseType: !904, size: 32, align: 32, offset: 4256)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1011, file: !14, line: 2475, baseType: !904, size: 32, align: 32, offset: 4288)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1011, file: !14, line: 2481, baseType: !904, size: 32, align: 32, offset: 4320)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1011, file: !14, line: 2485, baseType: !904, size: 32, align: 32, offset: 4352)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1011, file: !14, line: 2489, baseType: !904, size: 32, align: 32, offset: 4384)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1011, file: !14, line: 2493, baseType: !904, size: 32, align: 32, offset: 4416)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1011, file: !14, line: 2501, baseType: !904, size: 32, align: 32, offset: 4448)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1011, file: !14, line: 2506, baseType: !904, size: 32, align: 32, offset: 4480)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1011, file: !14, line: 2510, baseType: !904, size: 32, align: 32, offset: 4512)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1011, file: !14, line: 2514, baseType: !1052, size: 64, align: 64, offset: 4544)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1011, file: !14, line: 2528, baseType: !1412, size: 64, align: 64, offset: 4608)
!1412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1413, size: 64, align: 64)
!1413 = !DISubroutineType(types: !1414)
!1414 = !{null, !1300, !905, !904, !904}
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1011, file: !14, line: 2534, baseType: !904, size: 32, align: 32, offset: 4672)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1011, file: !14, line: 2545, baseType: !904, size: 32, align: 32, offset: 4704)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1011, file: !14, line: 2547, baseType: !904, size: 32, align: 32, offset: 4736)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1011, file: !14, line: 2549, baseType: !904, size: 32, align: 32, offset: 4768)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1011, file: !14, line: 2551, baseType: !904, size: 32, align: 32, offset: 4800)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1011, file: !14, line: 2553, baseType: !904, size: 32, align: 32, offset: 4832)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1011, file: !14, line: 2555, baseType: !904, size: 32, align: 32, offset: 4864)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1011, file: !14, line: 2557, baseType: !904, size: 32, align: 32, offset: 4896)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1011, file: !14, line: 2559, baseType: !904, size: 32, align: 32, offset: 4928)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1011, file: !14, line: 2563, baseType: !904, size: 32, align: 32, offset: 4960)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1011, file: !14, line: 2571, baseType: !1426, size: 64, align: 64, offset: 4992)
!1426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 64, align: 64)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1011, file: !14, line: 2579, baseType: !1426, size: 64, align: 64, offset: 5056)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1011, file: !14, line: 2586, baseType: !904, size: 32, align: 32, offset: 5120)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1011, file: !14, line: 2615, baseType: !904, size: 32, align: 32, offset: 5152)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1011, file: !14, line: 2627, baseType: !904, size: 32, align: 32, offset: 5184)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1011, file: !14, line: 2637, baseType: !904, size: 32, align: 32, offset: 5216)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1011, file: !14, line: 2681, baseType: !904, size: 32, align: 32, offset: 5248)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1011, file: !14, line: 2709, baseType: !1052, size: 64, align: 64, offset: 5312)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1011, file: !14, line: 2716, baseType: !1435, size: 64, align: 64, offset: 5376)
!1435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1436, size: 64, align: 64)
!1436 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1437)
!1437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !14, line: 3636, size: 896, align: 64, elements: !1438)
!1438 = !{!1439, !1440, !1441, !1442, !1443, !1444, !1448, !1454, !1458, !1459, !1460, !1461, !1467, !1468, !1469, !1470, !1471}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1437, file: !14, line: 3642, baseType: !921, size: 64, align: 64)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1437, file: !14, line: 3649, baseType: !3, size: 32, align: 32, offset: 64)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1437, file: !14, line: 3656, baseType: !13, size: 32, align: 32, offset: 96)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1437, file: !14, line: 3663, baseType: !473, size: 32, align: 32, offset: 128)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1437, file: !14, line: 3669, baseType: !904, size: 32, align: 32, offset: 160)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1437, file: !14, line: 3682, baseType: !1445, size: 64, align: 64, offset: 192)
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 64, align: 64)
!1446 = !DISubroutineType(types: !1447)
!1447 = !{!904, !1009, !1031}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1437, file: !14, line: 3698, baseType: !1449, size: 64, align: 64, offset: 256)
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 64, align: 64)
!1450 = !DISubroutineType(types: !1451)
!1451 = !{!904, !1009, !1452, !902}
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 64, align: 64)
!1453 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !911)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1437, file: !14, line: 3712, baseType: !1455, size: 64, align: 64, offset: 320)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 64, align: 64)
!1456 = !DISubroutineType(types: !1457)
!1457 = !{!904, !1009, !904, !1452, !902}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1437, file: !14, line: 3726, baseType: !1449, size: 64, align: 64, offset: 384)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1437, file: !14, line: 3737, baseType: !1006, size: 64, align: 64, offset: 448)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1437, file: !14, line: 3746, baseType: !904, size: 32, align: 32, offset: 512)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1437, file: !14, line: 3757, baseType: !1462, size: 64, align: 64, offset: 576)
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1463, size: 64, align: 64)
!1463 = !DISubroutineType(types: !1464)
!1464 = !{null, !1465}
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64, align: 64)
!1466 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !14, line: 3617, flags: DIFlagFwdDecl)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1437, file: !14, line: 3766, baseType: !1006, size: 64, align: 64, offset: 640)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1437, file: !14, line: 3774, baseType: !1006, size: 64, align: 64, offset: 704)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1437, file: !14, line: 3780, baseType: !904, size: 32, align: 32, offset: 768)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1437, file: !14, line: 3785, baseType: !904, size: 32, align: 32, offset: 800)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1437, file: !14, line: 3795, baseType: !1472, size: 64, align: 64, offset: 832)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 64, align: 64)
!1473 = !DISubroutineType(types: !1474)
!1474 = !{!904, !1009, !1071}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1011, file: !14, line: 2728, baseType: !905, size: 64, align: 64, offset: 5440)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1011, file: !14, line: 2735, baseType: !1061, size: 512, align: 64, offset: 5504)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1011, file: !14, line: 2742, baseType: !904, size: 32, align: 32, offset: 6016)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1011, file: !14, line: 2755, baseType: !904, size: 32, align: 32, offset: 6048)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1011, file: !14, line: 2776, baseType: !904, size: 32, align: 32, offset: 6080)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1011, file: !14, line: 2783, baseType: !904, size: 32, align: 32, offset: 6112)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1011, file: !14, line: 2791, baseType: !904, size: 32, align: 32, offset: 6144)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1011, file: !14, line: 2802, baseType: !1031, size: 64, align: 64, offset: 6208)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1011, file: !14, line: 2811, baseType: !904, size: 32, align: 32, offset: 6272)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1011, file: !14, line: 2821, baseType: !904, size: 32, align: 32, offset: 6304)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1011, file: !14, line: 2830, baseType: !904, size: 32, align: 32, offset: 6336)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1011, file: !14, line: 2840, baseType: !904, size: 32, align: 32, offset: 6368)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1011, file: !14, line: 2851, baseType: !1488, size: 64, align: 64, offset: 6400)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 64, align: 64)
!1489 = !DISubroutineType(types: !1490)
!1490 = !{!904, !1300, !1491, !905, !1303, !904, !904}
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 64, align: 64)
!1492 = !DISubroutineType(types: !1493)
!1493 = !{!904, !1300, !905}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1011, file: !14, line: 2871, baseType: !1495, size: 64, align: 64, offset: 6464)
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 64, align: 64)
!1496 = !DISubroutineType(types: !1497)
!1497 = !{!904, !1300, !1498, !905, !1303, !904}
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 64, align: 64)
!1499 = !DISubroutineType(types: !1500)
!1500 = !{!904, !1300, !905, !904, !904}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1011, file: !14, line: 2878, baseType: !904, size: 32, align: 32, offset: 6528)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1011, file: !14, line: 2885, baseType: !904, size: 32, align: 32, offset: 6560)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1011, file: !14, line: 3005, baseType: !904, size: 32, align: 32, offset: 6592)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1011, file: !14, line: 3013, baseType: !872, size: 32, align: 32, offset: 6624)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1011, file: !14, line: 3020, baseType: !872, size: 32, align: 32, offset: 6656)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1011, file: !14, line: 3027, baseType: !872, size: 32, align: 32, offset: 6688)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1011, file: !14, line: 3037, baseType: !1037, size: 64, align: 64, offset: 6720)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1011, file: !14, line: 3038, baseType: !904, size: 32, align: 32, offset: 6784)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1011, file: !14, line: 3050, baseType: !949, size: 64, align: 64, offset: 6848)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1011, file: !14, line: 3065, baseType: !904, size: 32, align: 32, offset: 6912)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1011, file: !14, line: 3083, baseType: !904, size: 32, align: 32, offset: 6944)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1011, file: !14, line: 3092, baseType: !931, size: 64, align: 32, offset: 6976)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1011, file: !14, line: 3099, baseType: !473, size: 32, align: 32, offset: 7040)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1011, file: !14, line: 3106, baseType: !931, size: 64, align: 32, offset: 7072)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1011, file: !14, line: 3113, baseType: !1516, size: 64, align: 64, offset: 7168)
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 64, align: 64)
!1517 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1518)
!1518 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !14, line: 740, baseType: !1519)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !14, line: 712, size: 384, align: 64, elements: !1520)
!1520 = !{!1521, !1522, !1523, !1524, !1525, !1526, !1529}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1519, file: !14, line: 713, baseType: !13, size: 32, align: 32)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1519, file: !14, line: 714, baseType: !3, size: 32, align: 32, offset: 32)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1519, file: !14, line: 720, baseType: !921, size: 64, align: 64, offset: 64)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1519, file: !14, line: 724, baseType: !921, size: 64, align: 64, offset: 128)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1519, file: !14, line: 728, baseType: !904, size: 32, align: 32, offset: 192)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1519, file: !14, line: 734, baseType: !1527, size: 64, align: 64, offset: 256)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 64, align: 64)
!1528 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !921)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1519, file: !14, line: 739, baseType: !1530, size: 64, align: 64, offset: 320)
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 64, align: 64)
!1531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !997)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1011, file: !14, line: 3129, baseType: !1052, size: 64, align: 64, offset: 7232)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1011, file: !14, line: 3130, baseType: !1052, size: 64, align: 64, offset: 7296)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1011, file: !14, line: 3131, baseType: !1052, size: 64, align: 64, offset: 7360)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1011, file: !14, line: 3132, baseType: !1052, size: 64, align: 64, offset: 7424)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1011, file: !14, line: 3139, baseType: !1426, size: 64, align: 64, offset: 7488)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1011, file: !14, line: 3147, baseType: !904, size: 32, align: 32, offset: 7552)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1011, file: !14, line: 3165, baseType: !904, size: 32, align: 32, offset: 7584)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1011, file: !14, line: 3172, baseType: !904, size: 32, align: 32, offset: 7616)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1011, file: !14, line: 3180, baseType: !904, size: 32, align: 32, offset: 7648)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1011, file: !14, line: 3191, baseType: !1340, size: 64, align: 64, offset: 7680)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1011, file: !14, line: 3199, baseType: !1037, size: 64, align: 64, offset: 7744)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1011, file: !14, line: 3207, baseType: !1426, size: 64, align: 64, offset: 7808)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1011, file: !14, line: 3214, baseType: !903, size: 32, align: 32, offset: 7872)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1011, file: !14, line: 3224, baseType: !1169, size: 64, align: 64, offset: 7936)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1011, file: !14, line: 3225, baseType: !904, size: 32, align: 32, offset: 8000)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1011, file: !14, line: 3249, baseType: !1071, size: 64, align: 64, offset: 8064)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1011, file: !14, line: 3256, baseType: !904, size: 32, align: 32, offset: 8128)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1011, file: !14, line: 3271, baseType: !904, size: 32, align: 32, offset: 8160)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1011, file: !14, line: 3279, baseType: !1052, size: 64, align: 64, offset: 8192)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1011, file: !14, line: 3301, baseType: !1071, size: 64, align: 64, offset: 8256)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1011, file: !14, line: 3310, baseType: !904, size: 32, align: 32, offset: 8320)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1011, file: !14, line: 3337, baseType: !904, size: 32, align: 32, offset: 8352)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1011, file: !14, line: 3351, baseType: !904, size: 32, align: 32, offset: 8384)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1011, file: !14, line: 3359, baseType: !904, size: 32, align: 32, offset: 8416)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !918, file: !14, line: 3535, baseType: !1557, size: 64, align: 64, offset: 1024)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 64, align: 64)
!1558 = !DISubroutineType(types: !1559)
!1559 = !{!904, !1009, !1560}
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 64, align: 64)
!1561 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1010)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !918, file: !14, line: 3541, baseType: !1563, size: 64, align: 64, offset: 1088)
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 64, align: 64)
!1564 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1565)
!1565 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !14, line: 3461, baseType: !1566)
!1566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1025, line: 223, size: 128, align: 64, elements: !1567)
!1567 = !{!1568, !1569}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1566, file: !1025, line: 224, baseType: !1452, size: 64, align: 64)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1566, file: !1025, line: 225, baseType: !1452, size: 64, align: 64, offset: 64)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !918, file: !14, line: 3549, baseType: !1571, size: 64, align: 64, offset: 1152)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64, align: 64)
!1572 = !DISubroutineType(types: !1573)
!1573 = !{null, !1004}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !918, file: !14, line: 3551, baseType: !1006, size: 64, align: 64, offset: 1216)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !918, file: !14, line: 3552, baseType: !1576, size: 64, align: 64, offset: 1280)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 64, align: 64)
!1577 = !DISubroutineType(types: !1578)
!1578 = !{!904, !1009, !1037, !904, !1579}
!1579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1580, size: 64, align: 64)
!1580 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1581)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !14, line: 3920, size: 256, align: 64, elements: !1582)
!1582 = !{!1583, !1584, !1585, !1586, !1587, !1611}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1581, file: !14, line: 3921, baseType: !894, size: 16, align: 16)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1581, file: !14, line: 3922, baseType: !902, size: 32, align: 32, offset: 32)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1581, file: !14, line: 3923, baseType: !902, size: 32, align: 32, offset: 64)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1581, file: !14, line: 3924, baseType: !903, size: 32, align: 32, offset: 96)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1581, file: !14, line: 3925, baseType: !1588, size: 64, align: 64, offset: 128)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 64, align: 64)
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1590, size: 64, align: 64)
!1590 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !14, line: 3918, baseType: !1591)
!1591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !14, line: 3885, size: 1600, align: 64, elements: !1592)
!1592 = !{!1593, !1594, !1595, !1596, !1597, !1598, !1604, !1606, !1607, !1608, !1609, !1610}
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1591, file: !14, line: 3886, baseType: !904, size: 32, align: 32)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1591, file: !14, line: 3887, baseType: !904, size: 32, align: 32, offset: 32)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1591, file: !14, line: 3888, baseType: !904, size: 32, align: 32, offset: 64)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1591, file: !14, line: 3889, baseType: !904, size: 32, align: 32, offset: 96)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1591, file: !14, line: 3890, baseType: !904, size: 32, align: 32, offset: 128)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1591, file: !14, line: 3897, baseType: !1599, size: 768, align: 64, offset: 192)
!1599 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !14, line: 3858, baseType: !1600)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !14, line: 3853, size: 768, align: 64, elements: !1601)
!1601 = !{!1602, !1603}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1600, file: !14, line: 3855, baseType: !1036, size: 512, align: 64)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1600, file: !14, line: 3857, baseType: !1041, size: 256, align: 32, offset: 512)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1591, file: !14, line: 3903, baseType: !1605, size: 256, align: 64, offset: 960)
!1605 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1037, size: 256, align: 64, elements: !1140)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1591, file: !14, line: 3904, baseType: !1147, size: 128, align: 32, offset: 1216)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1591, file: !14, line: 3906, baseType: !881, size: 32, align: 32, offset: 1344)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1591, file: !14, line: 3908, baseType: !1426, size: 64, align: 64, offset: 1408)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1591, file: !14, line: 3915, baseType: !1426, size: 64, align: 64, offset: 1472)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1591, file: !14, line: 3917, baseType: !904, size: 32, align: 32, offset: 1536)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1581, file: !14, line: 3926, baseType: !1052, size: 64, align: 64, offset: 192)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !918, file: !14, line: 3564, baseType: !1613, size: 64, align: 64, offset: 1344)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 64, align: 64)
!1614 = !DISubroutineType(types: !1615)
!1615 = !{!904, !1009, !1157, !1301, !1303}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !918, file: !14, line: 3566, baseType: !1617, size: 64, align: 64, offset: 1408)
!1617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1618, size: 64, align: 64)
!1618 = !DISubroutineType(types: !1619)
!1619 = !{!904, !1009, !905, !1303, !1157}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !918, file: !14, line: 3567, baseType: !1006, size: 64, align: 64, offset: 1472)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !918, file: !14, line: 3576, baseType: !1622, size: 64, align: 64, offset: 1536)
!1622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1623, size: 64, align: 64)
!1623 = !DISubroutineType(types: !1624)
!1624 = !{!904, !1009, !1301}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !918, file: !14, line: 3577, baseType: !1626, size: 64, align: 64, offset: 1600)
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 64, align: 64)
!1627 = !DISubroutineType(types: !1628)
!1628 = !{!904, !1009, !1157}
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !918, file: !14, line: 3584, baseType: !1445, size: 64, align: 64, offset: 1664)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !918, file: !14, line: 3589, baseType: !1631, size: 64, align: 64, offset: 1728)
!1631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1632, size: 64, align: 64)
!1632 = !DISubroutineType(types: !1633)
!1633 = !{null, !1009}
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !918, file: !14, line: 3594, baseType: !904, size: 32, align: 32, offset: 1792)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !918, file: !14, line: 3600, baseType: !921, size: 64, align: 64, offset: 1856)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !918, file: !14, line: 3609, baseType: !1637, size: 64, align: 64, offset: 1920)
!1637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 64, align: 64)
!1638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1639, size: 64, align: 64)
!1639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1640)
!1640 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !14, line: 3609, flags: DIFlagFwdDecl)
!1641 = distinct !DIGlobalVariable(name: "warned", scope: !1642, file: !916, line: 471, type: !904, isLocal: true, isDefinition: true, variable: i32* @decode_cdlms.warned)
!1642 = distinct !DISubprogram(name: "decode_cdlms", scope: !916, file: !916, line: 454, type: !1643, isLocal: true, isDefinition: true, scopeLine: 455, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!1643 = !DISubroutineType(types: !1644)
!1644 = !{!904, !1645}
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 64, align: 64)
!1646 = !DIDerivedType(tag: DW_TAG_typedef, name: "WmallDecodeCtx", file: !916, line: 175, baseType: !1647)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "WmallDecodeCtx", file: !916, line: 70, size: 6409344, align: 128, elements: !1648)
!1648 = !{!1649, !1650, !1651, !1668, !1669, !1670, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1716, !1718, !1719, !1720, !1721, !1722, !1723, !1725, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1753, !1756, !1757, !1758, !1762, !1766, !1770, !1771, !1772, !1773, !1774, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1807, !1811, !1812, !1813}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !1647, file: !916, line: 72, baseType: !1009, size: 64, align: 64)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !1647, file: !916, line: 73, baseType: !1031, size: 64, align: 64, offset: 64)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "dsp", scope: !1647, file: !916, line: 74, baseType: !1652, size: 128, align: 64, offset: 128)
!1652 = !DIDerivedType(tag: DW_TAG_typedef, name: "LLAudDSPContext", file: !1653, line: 44, baseType: !1654)
!1653 = !DIFile(filename: "libavcodec/lossless_audiodsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LLAudDSPContext", file: !1653, line: 28, size: 128, align: 64, elements: !1655)
!1655 = !{!1656, !1662}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "scalarproduct_and_madd_int16", scope: !1654, file: !1653, line: 35, baseType: !1657, size: 64, align: 64)
!1657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1658, size: 64, align: 64)
!1658 = !DISubroutineType(types: !1659)
!1659 = !{!910, !906, !1660, !1660, !904, !904}
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 64, align: 64)
!1661 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !907)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "scalarproduct_and_madd_int32", scope: !1654, file: !1653, line: 40, baseType: !1663, size: 64, align: 64, offset: 64)
!1663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1664, size: 64, align: 64)
!1664 = !DISubroutineType(types: !1665)
!1665 = !{!910, !906, !1666, !1660, !904, !904}
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 64, align: 64)
!1667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !910)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "frame_data", scope: !1647, file: !916, line: 75, baseType: !1037, size: 64, align: 64, offset: 256)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "max_frame_size", scope: !1647, file: !916, line: 76, baseType: !904, size: 32, align: 32, offset: 320)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "pb", scope: !1647, file: !916, line: 77, baseType: !1671, size: 320, align: 64, offset: 384)
!1671 = !DIDerivedType(tag: DW_TAG_typedef, name: "PutBitContext", file: !1672, line: 40, baseType: !1673)
!1672 = !DIFile(filename: "libavcodec/put_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PutBitContext", file: !1672, line: 35, size: 320, align: 64, elements: !1674)
!1674 = !{!1675, !1676, !1677, !1678, !1679, !1680}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "bit_buf", scope: !1673, file: !1672, line: 36, baseType: !902, size: 32, align: 32)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "bit_left", scope: !1673, file: !1672, line: 37, baseType: !904, size: 32, align: 32, offset: 32)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1673, file: !1672, line: 38, baseType: !1037, size: 64, align: 64, offset: 64)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr", scope: !1673, file: !1672, line: 38, baseType: !1037, size: 64, align: 64, offset: 128)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "buf_end", scope: !1673, file: !1672, line: 38, baseType: !1037, size: 64, align: 64, offset: 192)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1673, file: !1672, line: 39, baseType: !904, size: 32, align: 32, offset: 256)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "decode_flags", scope: !1647, file: !916, line: 80, baseType: !902, size: 32, align: 32, offset: 704)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "len_prefix", scope: !1647, file: !916, line: 81, baseType: !904, size: 32, align: 32, offset: 736)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "dynamic_range_compression", scope: !1647, file: !916, line: 82, baseType: !904, size: 32, align: 32, offset: 768)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_sample", scope: !1647, file: !916, line: 83, baseType: !911, size: 8, align: 8, offset: 800)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "samples_per_frame", scope: !1647, file: !916, line: 84, baseType: !894, size: 16, align: 16, offset: 816)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "log2_frame_size", scope: !1647, file: !916, line: 85, baseType: !894, size: 16, align: 16, offset: 832)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "num_channels", scope: !1647, file: !916, line: 86, baseType: !1116, size: 8, align: 8, offset: 848)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_channel", scope: !1647, file: !916, line: 87, baseType: !1116, size: 8, align: 8, offset: 856)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "max_num_subframes", scope: !1647, file: !916, line: 88, baseType: !911, size: 8, align: 8, offset: 864)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "subframe_len_bits", scope: !1647, file: !916, line: 89, baseType: !911, size: 8, align: 8, offset: 872)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "max_subframe_len_bit", scope: !1647, file: !916, line: 90, baseType: !911, size: 8, align: 8, offset: 880)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "min_samples_per_subframe", scope: !1647, file: !916, line: 91, baseType: !894, size: 16, align: 16, offset: 896)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "pgb", scope: !1647, file: !916, line: 94, baseType: !1694, size: 256, align: 64, offset: 960)
!1694 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !1695, line: 70, baseType: !1696)
!1695 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !1695, line: 61, size: 256, align: 64, elements: !1697)
!1697 = !{!1698, !1699, !1700, !1701, !1702}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1696, file: !1695, line: 62, baseType: !1452, size: 64, align: 64)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !1696, file: !1695, line: 62, baseType: !1452, size: 64, align: 64, offset: 64)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1696, file: !1695, line: 67, baseType: !904, size: 32, align: 32, offset: 128)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1696, file: !1695, line: 68, baseType: !904, size: 32, align: 32, offset: 160)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !1696, file: !1695, line: 69, baseType: !904, size: 32, align: 32, offset: 192)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "next_packet_start", scope: !1647, file: !916, line: 95, baseType: !904, size: 32, align: 32, offset: 1216)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "packet_offset", scope: !1647, file: !916, line: 96, baseType: !911, size: 8, align: 8, offset: 1248)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "packet_sequence_number", scope: !1647, file: !916, line: 97, baseType: !911, size: 8, align: 8, offset: 1256)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "num_saved_bits", scope: !1647, file: !916, line: 98, baseType: !904, size: 32, align: 32, offset: 1280)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !1647, file: !916, line: 99, baseType: !904, size: 32, align: 32, offset: 1312)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "subframe_offset", scope: !1647, file: !916, line: 100, baseType: !904, size: 32, align: 32, offset: 1344)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "packet_loss", scope: !1647, file: !916, line: 101, baseType: !911, size: 8, align: 8, offset: 1376)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "packet_done", scope: !1647, file: !916, line: 102, baseType: !911, size: 8, align: 8, offset: 1384)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "frame_num", scope: !1647, file: !916, line: 105, baseType: !902, size: 32, align: 32, offset: 1408)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "gb", scope: !1647, file: !916, line: 106, baseType: !1694, size: 256, align: 64, offset: 1472)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "buf_bit_size", scope: !1647, file: !916, line: 107, baseType: !904, size: 32, align: 32, offset: 1728)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "samples_16", scope: !1647, file: !916, line: 108, baseType: !1715, size: 512, align: 64, offset: 1792)
!1715 = !DICompositeType(tag: DW_TAG_array_type, baseType: !906, size: 512, align: 64, elements: !1038)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "samples_32", scope: !1647, file: !916, line: 109, baseType: !1717, size: 512, align: 64, offset: 2304)
!1717 = !DICompositeType(tag: DW_TAG_array_type, baseType: !909, size: 512, align: 64, elements: !1038)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "drc_gain", scope: !1647, file: !916, line: 110, baseType: !911, size: 8, align: 8, offset: 2816)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1647, file: !916, line: 111, baseType: !1116, size: 8, align: 8, offset: 2824)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "parsed_all_subframes", scope: !1647, file: !916, line: 112, baseType: !1116, size: 8, align: 8, offset: 2832)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "subframe_len", scope: !1647, file: !916, line: 115, baseType: !907, size: 16, align: 16, offset: 2848)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "channels_for_cur_subframe", scope: !1647, file: !916, line: 116, baseType: !1116, size: 8, align: 8, offset: 2864)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "channel_indexes_for_cur_subframe", scope: !1647, file: !916, line: 117, baseType: !1724, size: 64, align: 8, offset: 2872)
!1724 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1116, size: 64, align: 8, elements: !1038)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !1647, file: !916, line: 119, baseType: !1726, size: 9216, align: 32, offset: 2944)
!1726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1727, size: 9216, align: 32, elements: !1038)
!1727 = !DIDerivedType(tag: DW_TAG_typedef, name: "WmallChannelCtx", file: !916, line: 65, baseType: !1728)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "WmallChannelCtx", file: !916, line: 55, size: 1152, align: 32, elements: !1729)
!1729 = !{!1730, !1731, !1732, !1733, !1737, !1738, !1739, !1740, !1741}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "prev_block_len", scope: !1728, file: !916, line: 56, baseType: !907, size: 16, align: 16)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "transmit_coefs", scope: !1728, file: !916, line: 57, baseType: !911, size: 8, align: 8, offset: 16)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "num_subframes", scope: !1728, file: !916, line: 58, baseType: !911, size: 8, align: 8, offset: 24)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "subframe_len", scope: !1728, file: !916, line: 59, baseType: !1734, size: 512, align: 16, offset: 32)
!1734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !894, size: 512, align: 16, elements: !1735)
!1735 = !{!1736}
!1736 = !DISubrange(count: 32)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "subframe_offsets", scope: !1728, file: !916, line: 60, baseType: !1734, size: 512, align: 16, offset: 544)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "cur_subframe", scope: !1728, file: !916, line: 61, baseType: !911, size: 8, align: 8, offset: 1056)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "decoded_samples", scope: !1728, file: !916, line: 62, baseType: !894, size: 16, align: 16, offset: 1072)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "quant_step", scope: !1728, file: !916, line: 63, baseType: !904, size: 32, align: 32, offset: 1088)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "transient_counter", scope: !1728, file: !916, line: 64, baseType: !904, size: 32, align: 32, offset: 1120)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "do_arith_coding", scope: !1647, file: !916, line: 123, baseType: !911, size: 8, align: 8, offset: 12160)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "do_ac_filter", scope: !1647, file: !916, line: 124, baseType: !911, size: 8, align: 8, offset: 12168)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "do_inter_ch_decorr", scope: !1647, file: !916, line: 125, baseType: !911, size: 8, align: 8, offset: 12176)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "do_mclms", scope: !1647, file: !916, line: 126, baseType: !911, size: 8, align: 8, offset: 12184)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "do_lpc", scope: !1647, file: !916, line: 127, baseType: !911, size: 8, align: 8, offset: 12192)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "acfilter_order", scope: !1647, file: !916, line: 129, baseType: !1116, size: 8, align: 8, offset: 12200)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "acfilter_scaling", scope: !1647, file: !916, line: 130, baseType: !1116, size: 8, align: 8, offset: 12208)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "acfilter_coeffs", scope: !1647, file: !916, line: 131, baseType: !1750, size: 256, align: 16, offset: 12224)
!1750 = !DICompositeType(tag: DW_TAG_array_type, baseType: !907, size: 256, align: 16, elements: !1751)
!1751 = !{!1752}
!1752 = !DISubrange(count: 16)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "acfilter_prevvalues", scope: !1647, file: !916, line: 132, baseType: !1754, size: 4096, align: 32, offset: 12480)
!1754 = !DICompositeType(tag: DW_TAG_array_type, baseType: !904, size: 4096, align: 32, elements: !1755)
!1755 = !{!1039, !1752}
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "mclms_order", scope: !1647, file: !916, line: 134, baseType: !1116, size: 8, align: 8, offset: 16576)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "mclms_scaling", scope: !1647, file: !916, line: 135, baseType: !1116, size: 8, align: 8, offset: 16584)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "mclms_coeffs", scope: !1647, file: !916, line: 136, baseType: !1759, size: 32768, align: 16, offset: 16592)
!1759 = !DICompositeType(tag: DW_TAG_array_type, baseType: !907, size: 32768, align: 16, elements: !1760)
!1760 = !{!1761}
!1761 = !DISubrange(count: 2048)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "mclms_coeffs_cur", scope: !1647, file: !916, line: 137, baseType: !1763, size: 1024, align: 16, offset: 49360)
!1763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !907, size: 1024, align: 16, elements: !1764)
!1764 = !{!1765}
!1765 = !DISubrange(count: 64)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "mclms_prevvalues", scope: !1647, file: !916, line: 138, baseType: !1767, size: 16384, align: 32, offset: 50400)
!1767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !910, size: 16384, align: 32, elements: !1768)
!1768 = !{!1769}
!1769 = !DISubrange(count: 512)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "mclms_updates", scope: !1647, file: !916, line: 139, baseType: !1767, size: 16384, align: 32, offset: 66784)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "mclms_recent", scope: !1647, file: !916, line: 140, baseType: !904, size: 32, align: 32, offset: 83168)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "movave_scaling", scope: !1647, file: !916, line: 142, baseType: !904, size: 32, align: 32, offset: 83200)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "quant_stepsize", scope: !1647, file: !916, line: 143, baseType: !904, size: 32, align: 32, offset: 83232)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "cdlms", scope: !1647, file: !916, line: 154, baseType: !1775, size: 2119680, align: 128, offset: 83328)
!1775 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1776, size: 2119680, align: 128, elements: !1793)
!1776 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1647, file: !916, line: 145, size: 29440, align: 128, elements: !1777)
!1777 = !{!1778, !1779, !1780, !1781, !1782, !1786, !1790, !1792}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !1776, file: !916, line: 146, baseType: !904, size: 32, align: 32)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "scaling", scope: !1776, file: !916, line: 147, baseType: !904, size: 32, align: 32, offset: 32)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "coefsend", scope: !1776, file: !916, line: 148, baseType: !904, size: 32, align: 32, offset: 64)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "bitsend", scope: !1776, file: !916, line: 149, baseType: !904, size: 32, align: 32, offset: 96)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "coefs", scope: !1776, file: !916, line: 150, baseType: !1783, size: 4224, align: 16, offset: 128)
!1783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !907, size: 4224, align: 16, elements: !1784)
!1784 = !{!1785}
!1785 = !DISubrange(count: 264)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "lms_prevvalues", scope: !1776, file: !916, line: 151, baseType: !1787, size: 16640, align: 32, offset: 4352)
!1787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !910, size: 16640, align: 32, elements: !1788)
!1788 = !{!1789}
!1789 = !DISubrange(count: 520)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "lms_updates", scope: !1776, file: !916, line: 152, baseType: !1791, size: 8320, align: 16, offset: 20992)
!1791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !907, size: 8320, align: 16, elements: !1788)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "recent", scope: !1776, file: !916, line: 153, baseType: !904, size: 32, align: 32, offset: 29312)
!1793 = !{!1039, !1794}
!1794 = !DISubrange(count: 9)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "cdlms_ttl", scope: !1647, file: !916, line: 156, baseType: !1041, size: 256, align: 32, offset: 2203008)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "bV3RTM", scope: !1647, file: !916, line: 158, baseType: !904, size: 32, align: 32, offset: 2203264)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "is_channel_coded", scope: !1647, file: !916, line: 160, baseType: !1041, size: 256, align: 32, offset: 2203296)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "update_speed", scope: !1647, file: !916, line: 161, baseType: !1041, size: 256, align: 32, offset: 2203552)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "transient", scope: !1647, file: !916, line: 163, baseType: !1041, size: 256, align: 32, offset: 2203808)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "transient_pos", scope: !1647, file: !916, line: 164, baseType: !1041, size: 256, align: 32, offset: 2204064)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "seekable_tile", scope: !1647, file: !916, line: 165, baseType: !904, size: 32, align: 32, offset: 2204320)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "ave_sum", scope: !1647, file: !916, line: 167, baseType: !1041, size: 256, align: 32, offset: 2204352)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "channel_residues", scope: !1647, file: !916, line: 169, baseType: !1804, size: 4194304, align: 32, offset: 2204608)
!1804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !904, size: 4194304, align: 32, elements: !1805)
!1805 = !{!1039, !1806}
!1806 = !DISubrange(count: 16384)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_coefs", scope: !1647, file: !916, line: 171, baseType: !1808, size: 10240, align: 32, offset: 6398912)
!1808 = !DICompositeType(tag: DW_TAG_array_type, baseType: !904, size: 10240, align: 32, elements: !1809)
!1809 = !{!1039, !1810}
!1810 = !DISubrange(count: 40)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_order", scope: !1647, file: !916, line: 172, baseType: !904, size: 32, align: 32, offset: 6409152)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_scaling", scope: !1647, file: !916, line: 173, baseType: !904, size: 32, align: 32, offset: 6409184)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_intbits", scope: !1647, file: !916, line: 174, baseType: !904, size: 32, align: 32, offset: 6409216)
!1814 = !{}
!1815 = !{i32 2, !"Dwarf Version", i32 4}
!1816 = !{i32 2, !"Debug Info Version", i32 3}
!1817 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!1818 = distinct !DISubprogram(name: "decode_init", scope: !916, file: !916, line: 180, type: !1007, isLocal: true, isDefinition: true, scopeLine: 181, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!1819 = !DILocalVariable(name: "avctx", arg: 1, scope: !1818, file: !916, line: 180, type: !1009)
!1820 = !DIExpression()
!1821 = !DILocation(line: 180, column: 62, scope: !1818)
!1822 = !DILocalVariable(name: "s", scope: !1818, file: !916, line: 182, type: !1645)
!1823 = !DILocation(line: 182, column: 21, scope: !1818)
!1824 = !DILocation(line: 182, column: 25, scope: !1818)
!1825 = !DILocation(line: 182, column: 32, scope: !1818)
!1826 = !DILocalVariable(name: "edata_ptr", scope: !1818, file: !916, line: 183, type: !1037)
!1827 = !DILocation(line: 183, column: 14, scope: !1818)
!1828 = !DILocation(line: 183, column: 26, scope: !1818)
!1829 = !DILocation(line: 183, column: 33, scope: !1818)
!1830 = !DILocalVariable(name: "channel_mask", scope: !1818, file: !916, line: 184, type: !903)
!1831 = !DILocation(line: 184, column: 18, scope: !1818)
!1832 = !DILocalVariable(name: "i", scope: !1818, file: !916, line: 185, type: !904)
!1833 = !DILocation(line: 185, column: 9, scope: !1818)
!1834 = !DILocalVariable(name: "log2_max_num_subframes", scope: !1818, file: !916, line: 185, type: !904)
!1835 = !DILocation(line: 185, column: 12, scope: !1818)
!1836 = !DILocation(line: 187, column: 10, scope: !1837)
!1837 = distinct !DILexicalBlock(scope: !1818, file: !916, line: 187, column: 9)
!1838 = !DILocation(line: 187, column: 17, scope: !1837)
!1839 = !DILocation(line: 187, column: 9, scope: !1818)
!1840 = !DILocation(line: 188, column: 16, scope: !1841)
!1841 = distinct !DILexicalBlock(scope: !1837, file: !916, line: 187, column: 30)
!1842 = !DILocation(line: 188, column: 9, scope: !1841)
!1843 = !DILocation(line: 189, column: 9, scope: !1841)
!1844 = !DILocation(line: 192, column: 33, scope: !1818)
!1845 = !DILocation(line: 192, column: 40, scope: !1818)
!1846 = !DILocation(line: 192, column: 31, scope: !1818)
!1847 = !DILocation(line: 192, column: 5, scope: !1818)
!1848 = !DILocation(line: 192, column: 8, scope: !1818)
!1849 = !DILocation(line: 192, column: 23, scope: !1818)
!1850 = !DILocation(line: 193, column: 32, scope: !1818)
!1851 = !DILocation(line: 193, column: 35, scope: !1818)
!1852 = !DILocation(line: 193, column: 50, scope: !1818)
!1853 = !DILocation(line: 193, column: 21, scope: !1818)
!1854 = !DILocation(line: 193, column: 5, scope: !1818)
!1855 = !DILocation(line: 193, column: 8, scope: !1818)
!1856 = !DILocation(line: 193, column: 19, scope: !1818)
!1857 = !DILocation(line: 194, column: 10, scope: !1858)
!1858 = distinct !DILexicalBlock(scope: !1818, file: !916, line: 194, column: 9)
!1859 = !DILocation(line: 194, column: 13, scope: !1858)
!1860 = !DILocation(line: 194, column: 9, scope: !1818)
!1861 = !DILocation(line: 195, column: 9, scope: !1858)
!1862 = !DILocation(line: 197, column: 16, scope: !1818)
!1863 = !DILocation(line: 197, column: 5, scope: !1818)
!1864 = !DILocation(line: 197, column: 8, scope: !1818)
!1865 = !DILocation(line: 197, column: 14, scope: !1818)
!1866 = !DILocation(line: 198, column: 23, scope: !1818)
!1867 = !DILocation(line: 198, column: 26, scope: !1818)
!1868 = !DILocation(line: 198, column: 5, scope: !1818)
!1869 = !DILocation(line: 199, column: 20, scope: !1818)
!1870 = !DILocation(line: 199, column: 23, scope: !1818)
!1871 = !DILocation(line: 199, column: 27, scope: !1818)
!1872 = !DILocation(line: 199, column: 30, scope: !1818)
!1873 = !DILocation(line: 199, column: 42, scope: !1818)
!1874 = !DILocation(line: 199, column: 45, scope: !1818)
!1875 = !DILocation(line: 199, column: 5, scope: !1818)
!1876 = !DILocation(line: 201, column: 9, scope: !1877)
!1877 = distinct !DILexicalBlock(scope: !1818, file: !916, line: 201, column: 9)
!1878 = !DILocation(line: 201, column: 16, scope: !1877)
!1879 = !DILocation(line: 201, column: 31, scope: !1877)
!1880 = !DILocation(line: 201, column: 9, scope: !1818)
!1881 = !DILocation(line: 202, column: 59, scope: !1882)
!1882 = distinct !DILexicalBlock(scope: !1877, file: !916, line: 201, column: 38)
!1883 = !DILocation(line: 202, column: 69, scope: !1882)
!1884 = !DILocation(line: 202, column: 77, scope: !1882)
!1885 = !DILocation(line: 202, column: 27, scope: !1882)
!1886 = !DILocation(line: 202, column: 9, scope: !1882)
!1887 = !DILocation(line: 202, column: 12, scope: !1882)
!1888 = !DILocation(line: 202, column: 25, scope: !1882)
!1889 = !DILocation(line: 203, column: 56, scope: !1882)
!1890 = !DILocation(line: 203, column: 66, scope: !1882)
!1891 = !DILocation(line: 203, column: 73, scope: !1882)
!1892 = !DILocation(line: 203, column: 22, scope: !1882)
!1893 = !DILocation(line: 204, column: 62, scope: !1882)
!1894 = !DILocation(line: 204, column: 75, scope: !1882)
!1895 = !DILocation(line: 204, column: 30, scope: !1882)
!1896 = !DILocation(line: 204, column: 9, scope: !1882)
!1897 = !DILocation(line: 204, column: 12, scope: !1882)
!1898 = !DILocation(line: 204, column: 28, scope: !1882)
!1899 = !DILocation(line: 205, column: 13, scope: !1900)
!1900 = distinct !DILexicalBlock(scope: !1882, file: !916, line: 205, column: 13)
!1901 = !DILocation(line: 205, column: 16, scope: !1900)
!1902 = !DILocation(line: 205, column: 32, scope: !1900)
!1903 = !DILocation(line: 205, column: 13, scope: !1882)
!1904 = !DILocation(line: 206, column: 13, scope: !1900)
!1905 = !DILocation(line: 206, column: 20, scope: !1900)
!1906 = !DILocation(line: 206, column: 31, scope: !1900)
!1907 = !DILocation(line: 207, column: 18, scope: !1908)
!1908 = distinct !DILexicalBlock(scope: !1900, file: !916, line: 207, column: 18)
!1909 = !DILocation(line: 207, column: 21, scope: !1908)
!1910 = !DILocation(line: 207, column: 37, scope: !1908)
!1911 = !DILocation(line: 207, column: 18, scope: !1900)
!1912 = !DILocation(line: 208, column: 13, scope: !1913)
!1913 = distinct !DILexicalBlock(scope: !1908, file: !916, line: 207, column: 44)
!1914 = !DILocation(line: 208, column: 20, scope: !1913)
!1915 = !DILocation(line: 208, column: 31, scope: !1913)
!1916 = !DILocation(line: 209, column: 13, scope: !1913)
!1917 = !DILocation(line: 209, column: 20, scope: !1913)
!1918 = !DILocation(line: 209, column: 40, scope: !1913)
!1919 = !DILocation(line: 210, column: 9, scope: !1913)
!1920 = !DILocation(line: 211, column: 20, scope: !1921)
!1921 = distinct !DILexicalBlock(scope: !1908, file: !916, line: 210, column: 16)
!1922 = !DILocation(line: 212, column: 20, scope: !1921)
!1923 = !DILocation(line: 212, column: 23, scope: !1921)
!1924 = !DILocation(line: 211, column: 13, scope: !1921)
!1925 = !DILocation(line: 213, column: 13, scope: !1921)
!1926 = !DILocation(line: 216, column: 16, scope: !1927)
!1927 = distinct !DILexicalBlock(scope: !1882, file: !916, line: 216, column: 9)
!1928 = !DILocation(line: 216, column: 14, scope: !1927)
!1929 = !DILocation(line: 216, column: 21, scope: !1930)
!1930 = !DILexicalBlockFile(scope: !1931, file: !916, discriminator: 1)
!1931 = distinct !DILexicalBlock(scope: !1927, file: !916, line: 216, column: 9)
!1932 = !DILocation(line: 216, column: 25, scope: !1930)
!1933 = !DILocation(line: 216, column: 32, scope: !1930)
!1934 = !DILocation(line: 216, column: 23, scope: !1930)
!1935 = !DILocation(line: 216, column: 9, scope: !1930)
!1936 = !DILocation(line: 217, column: 13, scope: !1931)
!1937 = distinct !{!1937, !1936}
!1938 = !DILocation(line: 217, column: 74, scope: !1939)
!1939 = !DILexicalBlockFile(scope: !1940, file: !916, discriminator: 1)
!1940 = distinct !DILexicalBlock(scope: !1931, file: !916, line: 217, column: 16)
!1941 = !DILocation(line: 217, column: 74, scope: !1942)
!1942 = !DILexicalBlockFile(scope: !1940, file: !916, discriminator: 2)
!1943 = !DILocation(line: 216, column: 49, scope: !1944)
!1944 = !DILexicalBlockFile(scope: !1931, file: !916, discriminator: 2)
!1945 = !DILocation(line: 216, column: 9, scope: !1944)
!1946 = distinct !{!1946, !1947}
!1947 = !DILocation(line: 216, column: 9, scope: !1882)
!1948 = !DILocation(line: 218, column: 9, scope: !1882)
!1949 = distinct !{!1949, !1948}
!1950 = !DILocation(line: 218, column: 46, scope: !1951)
!1951 = !DILexicalBlockFile(scope: !1952, file: !916, discriminator: 1)
!1952 = distinct !DILexicalBlock(scope: !1882, file: !916, line: 218, column: 12)
!1953 = !DILocation(line: 220, column: 5, scope: !1882)
!1954 = !DILocation(line: 221, column: 31, scope: !1955)
!1955 = distinct !DILexicalBlock(scope: !1877, file: !916, line: 220, column: 12)
!1956 = !DILocation(line: 221, column: 9, scope: !1955)
!1957 = !DILocation(line: 222, column: 9, scope: !1955)
!1958 = !DILocation(line: 226, column: 47, scope: !1818)
!1959 = !DILocation(line: 226, column: 54, scope: !1818)
!1960 = !DILocation(line: 226, column: 66, scope: !1818)
!1961 = !DILocation(line: 226, column: 32, scope: !1818)
!1962 = !DILocation(line: 226, column: 30, scope: !1818)
!1963 = !DILocation(line: 226, column: 71, scope: !1818)
!1964 = !DILocation(line: 226, column: 26, scope: !1818)
!1965 = !DILocation(line: 226, column: 5, scope: !1818)
!1966 = !DILocation(line: 226, column: 8, scope: !1818)
!1967 = !DILocation(line: 226, column: 24, scope: !1818)
!1968 = !DILocation(line: 229, column: 5, scope: !1818)
!1969 = !DILocation(line: 229, column: 8, scope: !1818)
!1970 = !DILocation(line: 229, column: 19, scope: !1818)
!1971 = !DILocation(line: 230, column: 5, scope: !1818)
!1972 = !DILocation(line: 230, column: 8, scope: !1818)
!1973 = !DILocation(line: 230, column: 20, scope: !1818)
!1974 = !DILocation(line: 231, column: 21, scope: !1818)
!1975 = !DILocation(line: 231, column: 24, scope: !1818)
!1976 = !DILocation(line: 231, column: 37, scope: !1818)
!1977 = !DILocation(line: 231, column: 5, scope: !1818)
!1978 = !DILocation(line: 231, column: 8, scope: !1818)
!1979 = !DILocation(line: 231, column: 19, scope: !1818)
!1980 = !DILocation(line: 234, column: 59, scope: !1818)
!1981 = !DILocation(line: 234, column: 66, scope: !1818)
!1982 = !DILocation(line: 235, column: 62, scope: !1818)
!1983 = !DILocation(line: 235, column: 65, scope: !1818)
!1984 = !DILocation(line: 234, column: 33, scope: !1818)
!1985 = !DILocation(line: 234, column: 30, scope: !1818)
!1986 = !DILocation(line: 234, column: 28, scope: !1818)
!1987 = !DILocation(line: 234, column: 5, scope: !1818)
!1988 = !DILocation(line: 234, column: 8, scope: !1818)
!1989 = !DILocation(line: 234, column: 26, scope: !1818)
!1990 = !DILocation(line: 236, column: 5, scope: !1818)
!1991 = distinct !{!1991, !1990}
!1992 = !DILocation(line: 236, column: 16, scope: !1993)
!1993 = !DILexicalBlockFile(scope: !1994, file: !916, discriminator: 1)
!1994 = distinct !DILexicalBlock(scope: !1995, file: !916, line: 236, column: 14)
!1995 = distinct !DILexicalBlock(scope: !1818, file: !916, line: 236, column: 8)
!1996 = !DILocation(line: 236, column: 19, scope: !1993)
!1997 = !DILocation(line: 236, column: 37, scope: !1993)
!1998 = !DILocation(line: 236, column: 14, scope: !1993)
!1999 = !DILocation(line: 236, column: 54, scope: !2000)
!2000 = !DILexicalBlockFile(scope: !2001, file: !916, discriminator: 2)
!2001 = distinct !DILexicalBlock(scope: !1994, file: !916, line: 236, column: 52)
!2002 = !DILocation(line: 236, column: 117, scope: !2003)
!2003 = !DILexicalBlockFile(scope: !2000, file: !916, discriminator: 4)
!2004 = !DILocation(line: 236, column: 117, scope: !2000)
!2005 = !DILocation(line: 236, column: 128, scope: !2006)
!2006 = !DILexicalBlockFile(scope: !1995, file: !916, discriminator: 3)
!2007 = !DILocation(line: 239, column: 12, scope: !2008)
!2008 = distinct !DILexicalBlock(scope: !1818, file: !916, line: 239, column: 5)
!2009 = !DILocation(line: 239, column: 10, scope: !2008)
!2010 = !DILocation(line: 239, column: 17, scope: !2011)
!2011 = !DILexicalBlockFile(scope: !2012, file: !916, discriminator: 1)
!2012 = distinct !DILexicalBlock(scope: !2008, file: !916, line: 239, column: 5)
!2013 = !DILocation(line: 239, column: 21, scope: !2011)
!2014 = !DILocation(line: 239, column: 28, scope: !2011)
!2015 = !DILocation(line: 239, column: 19, scope: !2011)
!2016 = !DILocation(line: 239, column: 5, scope: !2011)
!2017 = !DILocation(line: 240, column: 40, scope: !2012)
!2018 = !DILocation(line: 240, column: 43, scope: !2012)
!2019 = !DILocation(line: 240, column: 20, scope: !2012)
!2020 = !DILocation(line: 240, column: 9, scope: !2012)
!2021 = !DILocation(line: 240, column: 12, scope: !2012)
!2022 = !DILocation(line: 240, column: 23, scope: !2012)
!2023 = !DILocation(line: 240, column: 38, scope: !2012)
!2024 = !DILocation(line: 239, column: 39, scope: !2025)
!2025 = !DILexicalBlockFile(scope: !2012, file: !916, discriminator: 2)
!2026 = !DILocation(line: 239, column: 5, scope: !2025)
!2027 = distinct !{!2027, !2028}
!2028 = !DILocation(line: 239, column: 5, scope: !1818)
!2029 = !DILocation(line: 243, column: 31, scope: !1818)
!2030 = !DILocation(line: 243, column: 34, scope: !1818)
!2031 = !DILocation(line: 243, column: 47, scope: !1818)
!2032 = !DILocation(line: 243, column: 55, scope: !1818)
!2033 = !DILocation(line: 243, column: 28, scope: !1818)
!2034 = !DILocation(line: 244, column: 33, scope: !1818)
!2035 = !DILocation(line: 244, column: 30, scope: !1818)
!2036 = !DILocation(line: 244, column: 28, scope: !1818)
!2037 = !DILocation(line: 244, column: 5, scope: !1818)
!2038 = !DILocation(line: 244, column: 8, scope: !1818)
!2039 = !DILocation(line: 244, column: 26, scope: !1818)
!2040 = !DILocation(line: 245, column: 5, scope: !1818)
!2041 = !DILocation(line: 245, column: 8, scope: !1818)
!2042 = !DILocation(line: 245, column: 29, scope: !1818)
!2043 = !DILocation(line: 246, column: 49, scope: !1818)
!2044 = !DILocation(line: 246, column: 72, scope: !1818)
!2045 = !DILocation(line: 246, column: 34, scope: !1818)
!2046 = !DILocation(line: 246, column: 32, scope: !1818)
!2047 = !DILocation(line: 246, column: 77, scope: !1818)
!2048 = !DILocation(line: 246, column: 28, scope: !1818)
!2049 = !DILocation(line: 246, column: 5, scope: !1818)
!2050 = !DILocation(line: 246, column: 8, scope: !1818)
!2051 = !DILocation(line: 246, column: 26, scope: !1818)
!2052 = !DILocation(line: 248, column: 35, scope: !1818)
!2053 = !DILocation(line: 248, column: 38, scope: !1818)
!2054 = !DILocation(line: 248, column: 58, scope: !1818)
!2055 = !DILocation(line: 248, column: 61, scope: !1818)
!2056 = !DILocation(line: 248, column: 56, scope: !1818)
!2057 = !DILocation(line: 248, column: 5, scope: !1818)
!2058 = !DILocation(line: 248, column: 8, scope: !1818)
!2059 = !DILocation(line: 248, column: 33, scope: !1818)
!2060 = !DILocation(line: 249, column: 36, scope: !1818)
!2061 = !DILocation(line: 249, column: 39, scope: !1818)
!2062 = !DILocation(line: 249, column: 52, scope: !1818)
!2063 = !DILocation(line: 249, column: 5, scope: !1818)
!2064 = !DILocation(line: 249, column: 8, scope: !1818)
!2065 = !DILocation(line: 249, column: 34, scope: !1818)
!2066 = !DILocation(line: 250, column: 17, scope: !1818)
!2067 = !DILocation(line: 250, column: 20, scope: !1818)
!2068 = !DILocation(line: 250, column: 33, scope: !1818)
!2069 = !DILocation(line: 250, column: 5, scope: !1818)
!2070 = !DILocation(line: 250, column: 8, scope: !1818)
!2071 = !DILocation(line: 250, column: 15, scope: !1818)
!2072 = !DILocation(line: 252, column: 9, scope: !2073)
!2073 = distinct !DILexicalBlock(scope: !1818, file: !916, line: 252, column: 9)
!2074 = !DILocation(line: 252, column: 12, scope: !2073)
!2075 = !DILocation(line: 252, column: 30, scope: !2073)
!2076 = !DILocation(line: 252, column: 9, scope: !1818)
!2077 = !DILocation(line: 253, column: 16, scope: !2078)
!2078 = distinct !DILexicalBlock(scope: !2073, file: !916, line: 252, column: 36)
!2079 = !DILocation(line: 254, column: 16, scope: !2078)
!2080 = !DILocation(line: 254, column: 19, scope: !2078)
!2081 = !DILocation(line: 253, column: 9, scope: !2078)
!2082 = !DILocation(line: 255, column: 9, scope: !2078)
!2083 = !DILocation(line: 258, column: 23, scope: !1818)
!2084 = !DILocation(line: 258, column: 30, scope: !1818)
!2085 = !DILocation(line: 258, column: 5, scope: !1818)
!2086 = !DILocation(line: 258, column: 8, scope: !1818)
!2087 = !DILocation(line: 258, column: 21, scope: !1818)
!2088 = !DILocation(line: 261, column: 5, scope: !1818)
!2089 = !DILocation(line: 261, column: 8, scope: !1818)
!2090 = !DILocation(line: 261, column: 20, scope: !1818)
!2091 = !DILocation(line: 263, column: 9, scope: !2092)
!2092 = distinct !DILexicalBlock(scope: !1818, file: !916, line: 263, column: 9)
!2093 = !DILocation(line: 263, column: 22, scope: !2092)
!2094 = !DILocation(line: 263, column: 9, scope: !1818)
!2095 = !DILocalVariable(name: "mask", scope: !2096, file: !916, line: 264, type: !903)
!2096 = distinct !DILexicalBlock(scope: !2092, file: !916, line: 263, column: 27)
!2097 = !DILocation(line: 264, column: 22, scope: !2096)
!2098 = !DILocation(line: 265, column: 19, scope: !2099)
!2099 = distinct !DILexicalBlock(scope: !2096, file: !916, line: 265, column: 9)
!2100 = !DILocation(line: 265, column: 14, scope: !2099)
!2101 = !DILocation(line: 265, column: 24, scope: !2102)
!2102 = !DILexicalBlockFile(scope: !2103, file: !916, discriminator: 1)
!2103 = distinct !DILexicalBlock(scope: !2099, file: !916, line: 265, column: 9)
!2104 = !DILocation(line: 265, column: 29, scope: !2102)
!2105 = !DILocation(line: 265, column: 9, scope: !2102)
!2106 = !DILocation(line: 266, column: 17, scope: !2107)
!2107 = distinct !DILexicalBlock(scope: !2103, file: !916, line: 266, column: 17)
!2108 = !DILocation(line: 266, column: 32, scope: !2107)
!2109 = !DILocation(line: 266, column: 30, scope: !2107)
!2110 = !DILocation(line: 266, column: 17, scope: !2103)
!2111 = !DILocation(line: 267, column: 19, scope: !2107)
!2112 = !DILocation(line: 267, column: 22, scope: !2107)
!2113 = !DILocation(line: 267, column: 17, scope: !2107)
!2114 = !DILocation(line: 266, column: 32, scope: !2115)
!2115 = !DILexicalBlockFile(scope: !2107, file: !916, discriminator: 1)
!2116 = !DILocation(line: 265, column: 40, scope: !2117)
!2117 = !DILexicalBlockFile(scope: !2103, file: !916, discriminator: 2)
!2118 = !DILocation(line: 265, column: 9, scope: !2117)
!2119 = distinct !{!2119, !2120}
!2120 = !DILocation(line: 265, column: 9, scope: !2096)
!2121 = !DILocation(line: 268, column: 5, scope: !2096)
!2122 = !DILocation(line: 270, column: 9, scope: !2123)
!2123 = distinct !DILexicalBlock(scope: !1818, file: !916, line: 270, column: 9)
!2124 = !DILocation(line: 270, column: 12, scope: !2123)
!2125 = !DILocation(line: 270, column: 25, scope: !2123)
!2126 = !DILocation(line: 270, column: 9, scope: !1818)
!2127 = !DILocation(line: 271, column: 16, scope: !2128)
!2128 = distinct !DILexicalBlock(scope: !2123, file: !916, line: 270, column: 30)
!2129 = !DILocation(line: 272, column: 16, scope: !2128)
!2130 = !DILocation(line: 272, column: 19, scope: !2128)
!2131 = !DILocation(line: 271, column: 9, scope: !2128)
!2132 = !DILocation(line: 273, column: 9, scope: !2128)
!2133 = !DILocation(line: 274, column: 16, scope: !2134)
!2134 = distinct !DILexicalBlock(scope: !2123, file: !916, line: 274, column: 16)
!2135 = !DILocation(line: 274, column: 19, scope: !2134)
!2136 = !DILocation(line: 274, column: 32, scope: !2134)
!2137 = !DILocation(line: 274, column: 16, scope: !2123)
!2138 = !DILocation(line: 275, column: 31, scope: !2139)
!2139 = distinct !DILexicalBlock(scope: !2134, file: !916, line: 274, column: 37)
!2140 = !DILocation(line: 275, column: 9, scope: !2139)
!2141 = !DILocation(line: 277, column: 9, scope: !2139)
!2142 = !DILocation(line: 280, column: 16, scope: !1818)
!2143 = !DILocation(line: 280, column: 5, scope: !1818)
!2144 = !DILocation(line: 280, column: 8, scope: !1818)
!2145 = !DILocation(line: 280, column: 14, scope: !1818)
!2146 = !DILocation(line: 281, column: 10, scope: !2147)
!2147 = distinct !DILexicalBlock(scope: !1818, file: !916, line: 281, column: 9)
!2148 = !DILocation(line: 281, column: 13, scope: !2147)
!2149 = !DILocation(line: 281, column: 9, scope: !1818)
!2150 = !DILocation(line: 282, column: 9, scope: !2147)
!2151 = !DILocation(line: 284, column: 29, scope: !1818)
!2152 = !DILocation(line: 284, column: 5, scope: !1818)
!2153 = !DILocation(line: 284, column: 12, scope: !1818)
!2154 = !DILocation(line: 284, column: 27, scope: !1818)
!2155 = !DILocation(line: 285, column: 5, scope: !1818)
!2156 = !DILocation(line: 286, column: 1, scope: !1818)
!2157 = distinct !DISubprogram(name: "decode_packet", scope: !916, file: !916, line: 1175, type: !1618, isLocal: true, isDefinition: true, scopeLine: 1177, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!2158 = !DILocalVariable(name: "avctx", arg: 1, scope: !2157, file: !916, line: 1175, type: !1009)
!2159 = !DILocation(line: 1175, column: 42, scope: !2157)
!2160 = !DILocalVariable(name: "data", arg: 2, scope: !2157, file: !916, line: 1175, type: !905)
!2161 = !DILocation(line: 1175, column: 55, scope: !2157)
!2162 = !DILocalVariable(name: "got_frame_ptr", arg: 3, scope: !2157, file: !916, line: 1175, type: !1303)
!2163 = !DILocation(line: 1175, column: 66, scope: !2157)
!2164 = !DILocalVariable(name: "avpkt", arg: 4, scope: !2157, file: !916, line: 1176, type: !1157)
!2165 = !DILocation(line: 1176, column: 36, scope: !2157)
!2166 = !DILocalVariable(name: "s", scope: !2157, file: !916, line: 1178, type: !1645)
!2167 = !DILocation(line: 1178, column: 21, scope: !2157)
!2168 = !DILocation(line: 1178, column: 25, scope: !2157)
!2169 = !DILocation(line: 1178, column: 32, scope: !2157)
!2170 = !DILocalVariable(name: "gb", scope: !2157, file: !916, line: 1179, type: !2171)
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1694, size: 64, align: 64)
!2172 = !DILocation(line: 1179, column: 20, scope: !2157)
!2173 = !DILocation(line: 1179, column: 26, scope: !2157)
!2174 = !DILocation(line: 1179, column: 29, scope: !2157)
!2175 = !DILocalVariable(name: "buf", scope: !2157, file: !916, line: 1180, type: !1452)
!2176 = !DILocation(line: 1180, column: 20, scope: !2157)
!2177 = !DILocation(line: 1180, column: 26, scope: !2157)
!2178 = !DILocation(line: 1180, column: 33, scope: !2157)
!2179 = !DILocalVariable(name: "buf_size", scope: !2157, file: !916, line: 1181, type: !904)
!2180 = !DILocation(line: 1181, column: 9, scope: !2157)
!2181 = !DILocation(line: 1181, column: 20, scope: !2157)
!2182 = !DILocation(line: 1181, column: 27, scope: !2157)
!2183 = !DILocalVariable(name: "num_bits_prev_frame", scope: !2157, file: !916, line: 1182, type: !904)
!2184 = !DILocation(line: 1182, column: 9, scope: !2157)
!2185 = !DILocalVariable(name: "packet_sequence_number", scope: !2157, file: !916, line: 1182, type: !904)
!2186 = !DILocation(line: 1182, column: 30, scope: !2157)
!2187 = !DILocalVariable(name: "spliced_packet", scope: !2157, file: !916, line: 1182, type: !904)
!2188 = !DILocation(line: 1182, column: 54, scope: !2157)
!2189 = !DILocation(line: 1184, column: 5, scope: !2157)
!2190 = !DILocation(line: 1184, column: 8, scope: !2157)
!2191 = !DILocation(line: 1184, column: 15, scope: !2157)
!2192 = !DILocation(line: 1184, column: 26, scope: !2157)
!2193 = !DILocation(line: 1186, column: 10, scope: !2194)
!2194 = distinct !DILexicalBlock(scope: !2157, file: !916, line: 1186, column: 9)
!2195 = !DILocation(line: 1186, column: 19, scope: !2194)
!2196 = !DILocation(line: 1186, column: 22, scope: !2197)
!2197 = !DILexicalBlockFile(scope: !2194, file: !916, discriminator: 1)
!2198 = !DILocation(line: 1186, column: 25, scope: !2197)
!2199 = !DILocation(line: 1186, column: 58, scope: !2197)
!2200 = !DILocation(line: 1186, column: 61, scope: !2197)
!2201 = !DILocation(line: 1186, column: 42, scope: !2197)
!2202 = !DILocation(line: 1186, column: 40, scope: !2197)
!2203 = !DILocation(line: 1186, column: 9, scope: !2197)
!2204 = !DILocation(line: 1187, column: 9, scope: !2205)
!2205 = distinct !DILexicalBlock(scope: !2194, file: !916, line: 1186, column: 66)
!2206 = !DILocation(line: 1187, column: 12, scope: !2205)
!2207 = !DILocation(line: 1187, column: 24, scope: !2205)
!2208 = !DILocation(line: 1188, column: 27, scope: !2209)
!2209 = distinct !DILexicalBlock(scope: !2205, file: !916, line: 1188, column: 13)
!2210 = !DILocation(line: 1188, column: 14, scope: !2209)
!2211 = !DILocation(line: 1188, column: 13, scope: !2205)
!2212 = !DILocation(line: 1189, column: 13, scope: !2209)
!2213 = !DILocation(line: 1189, column: 16, scope: !2209)
!2214 = !DILocation(line: 1189, column: 31, scope: !2209)
!2215 = !DILocation(line: 1190, column: 5, scope: !2205)
!2216 = !DILocation(line: 1190, column: 16, scope: !2217)
!2217 = !DILexicalBlockFile(scope: !2218, file: !916, discriminator: 1)
!2218 = distinct !DILexicalBlock(scope: !2194, file: !916, line: 1190, column: 16)
!2219 = !DILocation(line: 1190, column: 19, scope: !2217)
!2220 = !DILocation(line: 1190, column: 31, scope: !2217)
!2221 = !DILocation(line: 1190, column: 34, scope: !2222)
!2222 = !DILexicalBlockFile(scope: !2218, file: !916, discriminator: 2)
!2223 = !DILocation(line: 1190, column: 37, scope: !2222)
!2224 = !DILocation(line: 1190, column: 16, scope: !2222)
!2225 = !DILocation(line: 1191, column: 9, scope: !2226)
!2226 = distinct !DILexicalBlock(scope: !2218, file: !916, line: 1190, column: 50)
!2227 = !DILocation(line: 1191, column: 12, scope: !2226)
!2228 = !DILocation(line: 1191, column: 24, scope: !2226)
!2229 = !DILocation(line: 1193, column: 14, scope: !2230)
!2230 = distinct !DILexicalBlock(scope: !2226, file: !916, line: 1193, column: 13)
!2231 = !DILocation(line: 1193, column: 13, scope: !2226)
!2232 = !DILocation(line: 1194, column: 13, scope: !2230)
!2233 = !DILocation(line: 1196, column: 32, scope: !2226)
!2234 = !DILocation(line: 1196, column: 45, scope: !2226)
!2235 = !DILocation(line: 1196, column: 52, scope: !2226)
!2236 = !DILocation(line: 1196, column: 68, scope: !2226)
!2237 = !DILocation(line: 1196, column: 65, scope: !2226)
!2238 = !DILocation(line: 1196, column: 44, scope: !2226)
!2239 = !DILocation(line: 1196, column: 81, scope: !2240)
!2240 = !DILexicalBlockFile(scope: !2226, file: !916, discriminator: 1)
!2241 = !DILocation(line: 1196, column: 44, scope: !2240)
!2242 = !DILocation(line: 1196, column: 94, scope: !2243)
!2243 = !DILexicalBlockFile(scope: !2226, file: !916, discriminator: 2)
!2244 = !DILocation(line: 1196, column: 101, scope: !2243)
!2245 = !DILocation(line: 1196, column: 44, scope: !2243)
!2246 = !DILocation(line: 1196, column: 44, scope: !2247)
!2247 = !DILexicalBlockFile(scope: !2226, file: !916, discriminator: 3)
!2248 = !DILocation(line: 1196, column: 41, scope: !2247)
!2249 = !DILocation(line: 1196, column: 9, scope: !2247)
!2250 = !DILocation(line: 1196, column: 12, scope: !2247)
!2251 = !DILocation(line: 1196, column: 30, scope: !2247)
!2252 = !DILocation(line: 1197, column: 22, scope: !2226)
!2253 = !DILocation(line: 1197, column: 29, scope: !2226)
!2254 = !DILocation(line: 1197, column: 45, scope: !2226)
!2255 = !DILocation(line: 1197, column: 42, scope: !2226)
!2256 = !DILocation(line: 1197, column: 21, scope: !2226)
!2257 = !DILocation(line: 1197, column: 58, scope: !2240)
!2258 = !DILocation(line: 1197, column: 21, scope: !2240)
!2259 = !DILocation(line: 1197, column: 71, scope: !2243)
!2260 = !DILocation(line: 1197, column: 78, scope: !2243)
!2261 = !DILocation(line: 1197, column: 21, scope: !2243)
!2262 = !DILocation(line: 1197, column: 21, scope: !2247)
!2263 = !DILocation(line: 1197, column: 18, scope: !2247)
!2264 = !DILocation(line: 1198, column: 27, scope: !2226)
!2265 = !DILocation(line: 1198, column: 36, scope: !2226)
!2266 = !DILocation(line: 1198, column: 9, scope: !2226)
!2267 = !DILocation(line: 1198, column: 12, scope: !2226)
!2268 = !DILocation(line: 1198, column: 25, scope: !2226)
!2269 = !DILocation(line: 1201, column: 23, scope: !2226)
!2270 = !DILocation(line: 1201, column: 27, scope: !2226)
!2271 = !DILocation(line: 1201, column: 32, scope: !2226)
!2272 = !DILocation(line: 1201, column: 35, scope: !2226)
!2273 = !DILocation(line: 1201, column: 9, scope: !2226)
!2274 = !DILocation(line: 1202, column: 43, scope: !2226)
!2275 = !DILocation(line: 1202, column: 34, scope: !2226)
!2276 = !DILocation(line: 1202, column: 32, scope: !2226)
!2277 = !DILocation(line: 1203, column: 19, scope: !2226)
!2278 = !DILocation(line: 1203, column: 9, scope: !2226)
!2279 = !DILocation(line: 1204, column: 36, scope: !2226)
!2280 = !DILocation(line: 1204, column: 26, scope: !2226)
!2281 = !DILocation(line: 1204, column: 24, scope: !2226)
!2282 = !DILocation(line: 1205, column: 13, scope: !2283)
!2283 = distinct !DILexicalBlock(scope: !2226, file: !916, line: 1205, column: 13)
!2284 = !DILocation(line: 1205, column: 13, scope: !2226)
!2285 = !DILocation(line: 1206, column: 35, scope: !2283)
!2286 = !DILocation(line: 1206, column: 13, scope: !2283)
!2287 = !DILocation(line: 1209, column: 40, scope: !2226)
!2288 = !DILocation(line: 1209, column: 44, scope: !2226)
!2289 = !DILocation(line: 1209, column: 47, scope: !2226)
!2290 = !DILocation(line: 1209, column: 31, scope: !2226)
!2291 = !DILocation(line: 1209, column: 29, scope: !2226)
!2292 = !DILocation(line: 1212, column: 14, scope: !2293)
!2293 = distinct !DILexicalBlock(scope: !2226, file: !916, line: 1212, column: 13)
!2294 = !DILocation(line: 1212, column: 17, scope: !2293)
!2295 = !DILocation(line: 1212, column: 29, scope: !2293)
!2296 = !DILocation(line: 1213, column: 15, scope: !2293)
!2297 = !DILocation(line: 1213, column: 18, scope: !2293)
!2298 = !DILocation(line: 1213, column: 41, scope: !2293)
!2299 = !DILocation(line: 1213, column: 46, scope: !2293)
!2300 = !DILocation(line: 1213, column: 56, scope: !2293)
!2301 = !DILocation(line: 1213, column: 53, scope: !2293)
!2302 = !DILocation(line: 1212, column: 13, scope: !2240)
!2303 = !DILocation(line: 1214, column: 13, scope: !2304)
!2304 = distinct !DILexicalBlock(scope: !2293, file: !916, line: 1213, column: 80)
!2305 = !DILocation(line: 1214, column: 16, scope: !2304)
!2306 = !DILocation(line: 1214, column: 28, scope: !2304)
!2307 = !DILocation(line: 1215, column: 20, scope: !2304)
!2308 = !DILocation(line: 1217, column: 20, scope: !2304)
!2309 = !DILocation(line: 1217, column: 23, scope: !2304)
!2310 = !DILocation(line: 1217, column: 47, scope: !2304)
!2311 = !DILocation(line: 1215, column: 13, scope: !2304)
!2312 = !DILocation(line: 1218, column: 9, scope: !2304)
!2313 = !DILocation(line: 1219, column: 37, scope: !2226)
!2314 = !DILocation(line: 1219, column: 9, scope: !2226)
!2315 = !DILocation(line: 1219, column: 12, scope: !2226)
!2316 = !DILocation(line: 1219, column: 35, scope: !2226)
!2317 = !DILocation(line: 1221, column: 13, scope: !2318)
!2318 = distinct !DILexicalBlock(scope: !2226, file: !916, line: 1221, column: 13)
!2319 = !DILocation(line: 1221, column: 33, scope: !2318)
!2320 = !DILocation(line: 1221, column: 13, scope: !2226)
!2321 = !DILocalVariable(name: "remaining_packet_bits", scope: !2322, file: !916, line: 1222, type: !904)
!2322 = distinct !DILexicalBlock(scope: !2318, file: !916, line: 1221, column: 38)
!2323 = !DILocation(line: 1222, column: 17, scope: !2322)
!2324 = !DILocation(line: 1222, column: 41, scope: !2322)
!2325 = !DILocation(line: 1222, column: 44, scope: !2322)
!2326 = !DILocation(line: 1222, column: 74, scope: !2322)
!2327 = !DILocation(line: 1222, column: 59, scope: !2322)
!2328 = !DILocation(line: 1222, column: 57, scope: !2322)
!2329 = !DILocation(line: 1223, column: 17, scope: !2330)
!2330 = distinct !DILexicalBlock(scope: !2322, file: !916, line: 1223, column: 17)
!2331 = !DILocation(line: 1223, column: 40, scope: !2330)
!2332 = !DILocation(line: 1223, column: 37, scope: !2330)
!2333 = !DILocation(line: 1223, column: 17, scope: !2322)
!2334 = !DILocation(line: 1224, column: 39, scope: !2335)
!2335 = distinct !DILexicalBlock(scope: !2330, file: !916, line: 1223, column: 63)
!2336 = !DILocation(line: 1224, column: 37, scope: !2335)
!2337 = !DILocation(line: 1225, column: 17, scope: !2335)
!2338 = !DILocation(line: 1225, column: 20, scope: !2335)
!2339 = !DILocation(line: 1225, column: 32, scope: !2335)
!2340 = !DILocation(line: 1226, column: 13, scope: !2335)
!2341 = !DILocation(line: 1230, column: 23, scope: !2322)
!2342 = !DILocation(line: 1230, column: 26, scope: !2322)
!2343 = !DILocation(line: 1230, column: 30, scope: !2322)
!2344 = !DILocation(line: 1230, column: 13, scope: !2322)
!2345 = !DILocation(line: 1233, column: 17, scope: !2346)
!2346 = distinct !DILexicalBlock(scope: !2322, file: !916, line: 1233, column: 17)
!2347 = !DILocation(line: 1233, column: 39, scope: !2346)
!2348 = !DILocation(line: 1233, column: 37, scope: !2346)
!2349 = !DILocation(line: 1233, column: 61, scope: !2346)
!2350 = !DILocation(line: 1233, column: 65, scope: !2351)
!2351 = !DILexicalBlockFile(scope: !2346, file: !916, discriminator: 1)
!2352 = !DILocation(line: 1233, column: 68, scope: !2351)
!2353 = !DILocation(line: 1233, column: 17, scope: !2351)
!2354 = !DILocation(line: 1234, column: 30, scope: !2346)
!2355 = !DILocation(line: 1234, column: 17, scope: !2346)
!2356 = !DILocation(line: 1235, column: 9, scope: !2322)
!2357 = !DILocation(line: 1235, column: 20, scope: !2358)
!2358 = !DILexicalBlockFile(scope: !2359, file: !916, discriminator: 1)
!2359 = distinct !DILexicalBlock(scope: !2318, file: !916, line: 1235, column: 20)
!2360 = !DILocation(line: 1235, column: 23, scope: !2358)
!2361 = !DILocation(line: 1235, column: 40, scope: !2358)
!2362 = !DILocation(line: 1235, column: 43, scope: !2358)
!2363 = !DILocation(line: 1235, column: 38, scope: !2358)
!2364 = !DILocation(line: 1236, column: 13, scope: !2365)
!2365 = distinct !DILexicalBlock(scope: !2359, file: !916, line: 1235, column: 57)
!2366 = distinct !{!2366, !2364}
!2367 = !DILocation(line: 1236, column: 120, scope: !2368)
!2368 = !DILexicalBlockFile(scope: !2369, file: !916, discriminator: 1)
!2369 = distinct !DILexicalBlock(scope: !2365, file: !916, line: 1236, column: 16)
!2370 = !DILocation(line: 1238, column: 9, scope: !2365)
!2371 = !DILocation(line: 1240, column: 13, scope: !2372)
!2372 = distinct !DILexicalBlock(scope: !2226, file: !916, line: 1240, column: 13)
!2373 = !DILocation(line: 1240, column: 16, scope: !2372)
!2374 = !DILocation(line: 1240, column: 13, scope: !2226)
!2375 = !DILocation(line: 1243, column: 13, scope: !2376)
!2376 = distinct !DILexicalBlock(scope: !2372, file: !916, line: 1240, column: 29)
!2377 = !DILocation(line: 1243, column: 16, scope: !2376)
!2378 = !DILocation(line: 1243, column: 31, scope: !2376)
!2379 = !DILocation(line: 1244, column: 13, scope: !2376)
!2380 = !DILocation(line: 1244, column: 16, scope: !2376)
!2381 = !DILocation(line: 1244, column: 28, scope: !2376)
!2382 = !DILocation(line: 1245, column: 28, scope: !2376)
!2383 = !DILocation(line: 1245, column: 31, scope: !2376)
!2384 = !DILocation(line: 1245, column: 35, scope: !2376)
!2385 = !DILocation(line: 1245, column: 38, scope: !2376)
!2386 = !DILocation(line: 1245, column: 50, scope: !2376)
!2387 = !DILocation(line: 1245, column: 53, scope: !2376)
!2388 = !DILocation(line: 1245, column: 13, scope: !2376)
!2389 = !DILocation(line: 1246, column: 9, scope: !2376)
!2390 = !DILocation(line: 1248, column: 5, scope: !2226)
!2391 = !DILocalVariable(name: "frame_size", scope: !2392, file: !916, line: 1249, type: !904)
!2392 = distinct !DILexicalBlock(scope: !2218, file: !916, line: 1248, column: 12)
!2393 = !DILocation(line: 1249, column: 13, scope: !2392)
!2394 = !DILocation(line: 1251, column: 28, scope: !2392)
!2395 = !DILocation(line: 1251, column: 35, scope: !2392)
!2396 = !DILocation(line: 1251, column: 42, scope: !2392)
!2397 = !DILocation(line: 1251, column: 45, scope: !2392)
!2398 = !DILocation(line: 1251, column: 40, scope: !2392)
!2399 = !DILocation(line: 1251, column: 64, scope: !2392)
!2400 = !DILocation(line: 1251, column: 9, scope: !2392)
!2401 = !DILocation(line: 1251, column: 12, scope: !2392)
!2402 = !DILocation(line: 1251, column: 25, scope: !2392)
!2403 = !DILocation(line: 1252, column: 23, scope: !2392)
!2404 = !DILocation(line: 1252, column: 27, scope: !2392)
!2405 = !DILocation(line: 1252, column: 34, scope: !2392)
!2406 = !DILocation(line: 1252, column: 40, scope: !2392)
!2407 = !DILocation(line: 1252, column: 43, scope: !2392)
!2408 = !DILocation(line: 1252, column: 9, scope: !2392)
!2409 = !DILocation(line: 1253, column: 19, scope: !2392)
!2410 = !DILocation(line: 1253, column: 23, scope: !2392)
!2411 = !DILocation(line: 1253, column: 26, scope: !2392)
!2412 = !DILocation(line: 1253, column: 9, scope: !2392)
!2413 = !DILocation(line: 1255, column: 13, scope: !2414)
!2414 = distinct !DILexicalBlock(scope: !2392, file: !916, line: 1255, column: 13)
!2415 = !DILocation(line: 1255, column: 16, scope: !2414)
!2416 = !DILocation(line: 1255, column: 27, scope: !2414)
!2417 = !DILocation(line: 1255, column: 45, scope: !2418)
!2418 = !DILexicalBlockFile(scope: !2414, file: !916, discriminator: 1)
!2419 = !DILocation(line: 1255, column: 48, scope: !2418)
!2420 = !DILocation(line: 1255, column: 30, scope: !2418)
!2421 = !DILocation(line: 1255, column: 54, scope: !2418)
!2422 = !DILocation(line: 1255, column: 57, scope: !2418)
!2423 = !DILocation(line: 1255, column: 52, scope: !2418)
!2424 = !DILocation(line: 1255, column: 73, scope: !2418)
!2425 = !DILocation(line: 1256, column: 37, scope: !2414)
!2426 = !DILocation(line: 1256, column: 41, scope: !2414)
!2427 = !DILocation(line: 1256, column: 44, scope: !2414)
!2428 = !DILocation(line: 1256, column: 27, scope: !2414)
!2429 = !DILocation(line: 1256, column: 25, scope: !2414)
!2430 = !DILocation(line: 1256, column: 62, scope: !2414)
!2431 = !DILocation(line: 1257, column: 13, scope: !2414)
!2432 = !DILocation(line: 1257, column: 42, scope: !2414)
!2433 = !DILocation(line: 1257, column: 45, scope: !2414)
!2434 = !DILocation(line: 1257, column: 27, scope: !2414)
!2435 = !DILocation(line: 1257, column: 24, scope: !2414)
!2436 = !DILocation(line: 1255, column: 13, scope: !2437)
!2437 = !DILexicalBlockFile(scope: !2392, file: !916, discriminator: 2)
!2438 = !DILocation(line: 1258, column: 23, scope: !2439)
!2439 = distinct !DILexicalBlock(scope: !2414, file: !916, line: 1257, column: 50)
!2440 = !DILocation(line: 1258, column: 26, scope: !2439)
!2441 = !DILocation(line: 1258, column: 30, scope: !2439)
!2442 = !DILocation(line: 1258, column: 13, scope: !2439)
!2443 = !DILocation(line: 1260, column: 18, scope: !2444)
!2444 = distinct !DILexicalBlock(scope: !2439, file: !916, line: 1260, column: 17)
!2445 = !DILocation(line: 1260, column: 21, scope: !2444)
!2446 = !DILocation(line: 1260, column: 17, scope: !2439)
!2447 = !DILocation(line: 1261, column: 48, scope: !2444)
!2448 = !DILocation(line: 1261, column: 35, scope: !2444)
!2449 = !DILocation(line: 1261, column: 34, scope: !2444)
!2450 = !DILocation(line: 1261, column: 17, scope: !2444)
!2451 = !DILocation(line: 1261, column: 20, scope: !2444)
!2452 = !DILocation(line: 1261, column: 32, scope: !2444)
!2453 = !DILocation(line: 1262, column: 9, scope: !2439)
!2454 = !DILocation(line: 1262, column: 21, scope: !2455)
!2455 = !DILexicalBlockFile(scope: !2456, file: !916, discriminator: 1)
!2456 = distinct !DILexicalBlock(scope: !2414, file: !916, line: 1262, column: 20)
!2457 = !DILocation(line: 1262, column: 24, scope: !2455)
!2458 = !DILocation(line: 1263, column: 20, scope: !2456)
!2459 = !DILocation(line: 1263, column: 23, scope: !2455)
!2460 = !DILocation(line: 1263, column: 26, scope: !2455)
!2461 = !DILocation(line: 1263, column: 59, scope: !2455)
!2462 = !DILocation(line: 1263, column: 62, scope: !2455)
!2463 = !DILocation(line: 1263, column: 43, scope: !2455)
!2464 = !DILocation(line: 1263, column: 41, scope: !2455)
!2465 = !DILocation(line: 1262, column: 20, scope: !2466)
!2466 = !DILexicalBlockFile(scope: !2414, file: !916, discriminator: 2)
!2467 = !DILocation(line: 1270, column: 44, scope: !2468)
!2468 = distinct !DILexicalBlock(scope: !2456, file: !916, line: 1263, column: 67)
!2469 = !DILocation(line: 1270, column: 31, scope: !2468)
!2470 = !DILocation(line: 1270, column: 30, scope: !2468)
!2471 = !DILocation(line: 1270, column: 13, scope: !2468)
!2472 = !DILocation(line: 1270, column: 16, scope: !2468)
!2473 = !DILocation(line: 1270, column: 28, scope: !2468)
!2474 = !DILocation(line: 1271, column: 9, scope: !2468)
!2475 = !DILocation(line: 1272, column: 13, scope: !2476)
!2476 = distinct !DILexicalBlock(scope: !2456, file: !916, line: 1271, column: 16)
!2477 = !DILocation(line: 1272, column: 16, scope: !2476)
!2478 = !DILocation(line: 1272, column: 28, scope: !2476)
!2479 = !DILocation(line: 1276, column: 24, scope: !2480)
!2480 = distinct !DILexicalBlock(scope: !2157, file: !916, line: 1276, column: 9)
!2481 = !DILocation(line: 1276, column: 27, scope: !2480)
!2482 = !DILocation(line: 1276, column: 9, scope: !2480)
!2483 = !DILocation(line: 1276, column: 31, scope: !2480)
!2484 = !DILocation(line: 1276, column: 9, scope: !2157)
!2485 = !DILocation(line: 1277, column: 16, scope: !2486)
!2486 = distinct !DILexicalBlock(scope: !2480, file: !916, line: 1276, column: 36)
!2487 = !DILocation(line: 1277, column: 60, scope: !2486)
!2488 = !DILocation(line: 1277, column: 63, scope: !2486)
!2489 = !DILocation(line: 1277, column: 45, scope: !2486)
!2490 = !DILocation(line: 1277, column: 44, scope: !2486)
!2491 = !DILocation(line: 1277, column: 9, scope: !2492)
!2492 = !DILexicalBlockFile(scope: !2486, file: !916, discriminator: 1)
!2493 = !DILocation(line: 1278, column: 9, scope: !2486)
!2494 = !DILocation(line: 1278, column: 12, scope: !2486)
!2495 = !DILocation(line: 1278, column: 24, scope: !2486)
!2496 = !DILocation(line: 1279, column: 5, scope: !2486)
!2497 = !DILocation(line: 1281, column: 9, scope: !2498)
!2498 = distinct !DILexicalBlock(scope: !2157, file: !916, line: 1281, column: 9)
!2499 = !DILocation(line: 1281, column: 12, scope: !2498)
!2500 = !DILocation(line: 1281, column: 24, scope: !2498)
!2501 = !DILocation(line: 1281, column: 28, scope: !2502)
!2502 = !DILexicalBlockFile(scope: !2498, file: !916, discriminator: 1)
!2503 = !DILocation(line: 1281, column: 31, scope: !2502)
!2504 = !DILocation(line: 1281, column: 43, scope: !2502)
!2505 = !DILocation(line: 1282, column: 24, scope: !2498)
!2506 = !DILocation(line: 1282, column: 27, scope: !2498)
!2507 = !DILocation(line: 1282, column: 9, scope: !2498)
!2508 = !DILocation(line: 1282, column: 31, scope: !2498)
!2509 = !DILocation(line: 1281, column: 9, scope: !2510)
!2510 = !DILexicalBlockFile(scope: !2157, file: !916, discriminator: 2)
!2511 = !DILocation(line: 1285, column: 19, scope: !2512)
!2512 = distinct !DILexicalBlock(scope: !2498, file: !916, line: 1282, column: 36)
!2513 = !DILocation(line: 1285, column: 22, scope: !2512)
!2514 = !DILocation(line: 1285, column: 41, scope: !2512)
!2515 = !DILocation(line: 1285, column: 44, scope: !2512)
!2516 = !DILocation(line: 1285, column: 26, scope: !2512)
!2517 = !DILocation(line: 1285, column: 9, scope: !2518)
!2518 = !DILexicalBlockFile(scope: !2512, file: !916, discriminator: 1)
!2519 = !DILocation(line: 1286, column: 5, scope: !2512)
!2520 = !DILocation(line: 1288, column: 22, scope: !2157)
!2521 = !DILocation(line: 1288, column: 25, scope: !2157)
!2522 = !DILocation(line: 1288, column: 32, scope: !2157)
!2523 = !DILocation(line: 1288, column: 43, scope: !2157)
!2524 = !DILocation(line: 1288, column: 6, scope: !2157)
!2525 = !DILocation(line: 1288, column: 20, scope: !2157)
!2526 = !DILocation(line: 1289, column: 23, scope: !2157)
!2527 = !DILocation(line: 1289, column: 29, scope: !2157)
!2528 = !DILocation(line: 1289, column: 32, scope: !2157)
!2529 = !DILocation(line: 1289, column: 5, scope: !2157)
!2530 = !DILocation(line: 1291, column: 39, scope: !2157)
!2531 = !DILocation(line: 1291, column: 24, scope: !2157)
!2532 = !DILocation(line: 1291, column: 43, scope: !2157)
!2533 = !DILocation(line: 1291, column: 5, scope: !2157)
!2534 = !DILocation(line: 1291, column: 8, scope: !2157)
!2535 = !DILocation(line: 1291, column: 22, scope: !2157)
!2536 = !DILocation(line: 1293, column: 13, scope: !2157)
!2537 = !DILocation(line: 1293, column: 16, scope: !2157)
!2538 = !DILocation(line: 1293, column: 12, scope: !2157)
!2539 = !DILocation(line: 1293, column: 12, scope: !2540)
!2540 = !DILexicalBlockFile(scope: !2157, file: !916, discriminator: 1)
!2541 = !DILocation(line: 1293, column: 106, scope: !2510)
!2542 = !DILocation(line: 1293, column: 132, scope: !2543)
!2543 = !DILexicalBlockFile(scope: !2157, file: !916, discriminator: 3)
!2544 = !DILocation(line: 1293, column: 117, scope: !2543)
!2545 = !DILocation(line: 1293, column: 136, scope: !2543)
!2546 = !DILocation(line: 1293, column: 106, scope: !2543)
!2547 = !DILocation(line: 1293, column: 106, scope: !2548)
!2548 = !DILexicalBlockFile(scope: !2157, file: !916, discriminator: 4)
!2549 = !DILocation(line: 1293, column: 106, scope: !2550)
!2550 = !DILexicalBlockFile(scope: !2157, file: !916, discriminator: 5)
!2551 = !DILocation(line: 1293, column: 12, scope: !2550)
!2552 = !DILocation(line: 1293, column: 12, scope: !2553)
!2553 = !DILexicalBlockFile(scope: !2157, file: !916, discriminator: 6)
!2554 = !DILocation(line: 1293, column: 5, scope: !2553)
!2555 = !DILocation(line: 1294, column: 1, scope: !2157)
!2556 = distinct !DISubprogram(name: "decode_close", scope: !916, file: !916, line: 1309, type: !1007, isLocal: true, isDefinition: true, scopeLine: 1310, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!2557 = !DILocalVariable(name: "avctx", arg: 1, scope: !2556, file: !916, line: 1309, type: !1009)
!2558 = !DILocation(line: 1309, column: 63, scope: !2556)
!2559 = !DILocalVariable(name: "s", scope: !2556, file: !916, line: 1311, type: !1645)
!2560 = !DILocation(line: 1311, column: 21, scope: !2556)
!2561 = !DILocation(line: 1311, column: 25, scope: !2556)
!2562 = !DILocation(line: 1311, column: 32, scope: !2556)
!2563 = !DILocation(line: 1313, column: 20, scope: !2556)
!2564 = !DILocation(line: 1313, column: 23, scope: !2556)
!2565 = !DILocation(line: 1313, column: 5, scope: !2556)
!2566 = !DILocation(line: 1314, column: 15, scope: !2556)
!2567 = !DILocation(line: 1314, column: 18, scope: !2556)
!2568 = !DILocation(line: 1314, column: 14, scope: !2556)
!2569 = !DILocation(line: 1314, column: 5, scope: !2556)
!2570 = !DILocation(line: 1316, column: 5, scope: !2556)
!2571 = distinct !DISubprogram(name: "flush", scope: !916, file: !916, line: 1296, type: !1632, isLocal: true, isDefinition: true, scopeLine: 1297, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!2572 = !DILocalVariable(name: "avctx", arg: 1, scope: !2571, file: !916, line: 1296, type: !1009)
!2573 = !DILocation(line: 1296, column: 35, scope: !2571)
!2574 = !DILocalVariable(name: "s", scope: !2571, file: !916, line: 1298, type: !1645)
!2575 = !DILocation(line: 1298, column: 21, scope: !2571)
!2576 = !DILocation(line: 1298, column: 25, scope: !2571)
!2577 = !DILocation(line: 1298, column: 32, scope: !2571)
!2578 = !DILocation(line: 1299, column: 5, scope: !2571)
!2579 = !DILocation(line: 1299, column: 8, scope: !2571)
!2580 = !DILocation(line: 1299, column: 20, scope: !2571)
!2581 = !DILocation(line: 1300, column: 5, scope: !2571)
!2582 = !DILocation(line: 1300, column: 8, scope: !2571)
!2583 = !DILocation(line: 1300, column: 20, scope: !2571)
!2584 = !DILocation(line: 1301, column: 5, scope: !2571)
!2585 = !DILocation(line: 1301, column: 8, scope: !2571)
!2586 = !DILocation(line: 1301, column: 23, scope: !2571)
!2587 = !DILocation(line: 1302, column: 5, scope: !2571)
!2588 = !DILocation(line: 1302, column: 8, scope: !2571)
!2589 = !DILocation(line: 1302, column: 21, scope: !2571)
!2590 = !DILocation(line: 1303, column: 5, scope: !2571)
!2591 = !DILocation(line: 1303, column: 8, scope: !2571)
!2592 = !DILocation(line: 1303, column: 26, scope: !2571)
!2593 = !DILocation(line: 1304, column: 5, scope: !2571)
!2594 = !DILocation(line: 1304, column: 8, scope: !2571)
!2595 = !DILocation(line: 1304, column: 20, scope: !2571)
!2596 = !DILocation(line: 1304, column: 26, scope: !2571)
!2597 = !DILocation(line: 1305, column: 5, scope: !2571)
!2598 = !DILocation(line: 1305, column: 8, scope: !2571)
!2599 = !DILocation(line: 1305, column: 15, scope: !2571)
!2600 = !DILocation(line: 1305, column: 26, scope: !2571)
!2601 = !DILocation(line: 1306, column: 20, scope: !2571)
!2602 = !DILocation(line: 1306, column: 23, scope: !2571)
!2603 = !DILocation(line: 1306, column: 27, scope: !2571)
!2604 = !DILocation(line: 1306, column: 30, scope: !2571)
!2605 = !DILocation(line: 1306, column: 42, scope: !2571)
!2606 = !DILocation(line: 1306, column: 45, scope: !2571)
!2607 = !DILocation(line: 1306, column: 5, scope: !2571)
!2608 = !DILocation(line: 1307, column: 1, scope: !2571)
!2609 = distinct !DISubprogram(name: "init_put_bits", scope: !1672, file: !1672, line: 48, type: !2610, isLocal: true, isDefinition: true, scopeLine: 50, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!2610 = !DISubroutineType(types: !2611)
!2611 = !{null, !2612, !1037, !904}
!2612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1671, size: 64, align: 64)
!2613 = !DILocalVariable(name: "s", arg: 1, scope: !2609, file: !1672, line: 48, type: !2612)
!2614 = !DILocation(line: 48, column: 49, scope: !2609)
!2615 = !DILocalVariable(name: "buffer", arg: 2, scope: !2609, file: !1672, line: 48, type: !1037)
!2616 = !DILocation(line: 48, column: 61, scope: !2609)
!2617 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !2609, file: !1672, line: 49, type: !904)
!2618 = !DILocation(line: 49, column: 38, scope: !2609)
!2619 = !DILocation(line: 51, column: 9, scope: !2620)
!2620 = distinct !DILexicalBlock(scope: !2609, file: !1672, line: 51, column: 9)
!2621 = !DILocation(line: 51, column: 21, scope: !2620)
!2622 = !DILocation(line: 51, column: 9, scope: !2609)
!2623 = !DILocation(line: 52, column: 21, scope: !2624)
!2624 = distinct !DILexicalBlock(scope: !2620, file: !1672, line: 51, column: 26)
!2625 = !DILocation(line: 53, column: 16, scope: !2624)
!2626 = !DILocation(line: 54, column: 5, scope: !2624)
!2627 = !DILocation(line: 56, column: 27, scope: !2609)
!2628 = !DILocation(line: 56, column: 25, scope: !2609)
!2629 = !DILocation(line: 56, column: 5, scope: !2609)
!2630 = !DILocation(line: 56, column: 8, scope: !2609)
!2631 = !DILocation(line: 56, column: 21, scope: !2609)
!2632 = !DILocation(line: 57, column: 14, scope: !2609)
!2633 = !DILocation(line: 57, column: 5, scope: !2609)
!2634 = !DILocation(line: 57, column: 8, scope: !2609)
!2635 = !DILocation(line: 57, column: 12, scope: !2609)
!2636 = !DILocation(line: 58, column: 18, scope: !2609)
!2637 = !DILocation(line: 58, column: 21, scope: !2609)
!2638 = !DILocation(line: 58, column: 27, scope: !2609)
!2639 = !DILocation(line: 58, column: 25, scope: !2609)
!2640 = !DILocation(line: 58, column: 5, scope: !2609)
!2641 = !DILocation(line: 58, column: 8, scope: !2609)
!2642 = !DILocation(line: 58, column: 16, scope: !2609)
!2643 = !DILocation(line: 59, column: 18, scope: !2609)
!2644 = !DILocation(line: 59, column: 21, scope: !2609)
!2645 = !DILocation(line: 59, column: 5, scope: !2609)
!2646 = !DILocation(line: 59, column: 8, scope: !2609)
!2647 = !DILocation(line: 59, column: 16, scope: !2609)
!2648 = !DILocation(line: 60, column: 5, scope: !2609)
!2649 = !DILocation(line: 60, column: 8, scope: !2609)
!2650 = !DILocation(line: 60, column: 17, scope: !2609)
!2651 = !DILocation(line: 61, column: 5, scope: !2609)
!2652 = !DILocation(line: 61, column: 8, scope: !2609)
!2653 = !DILocation(line: 61, column: 16, scope: !2609)
!2654 = !DILocation(line: 62, column: 1, scope: !2609)
!2655 = distinct !DISubprogram(name: "get_bits_count", scope: !1695, file: !1695, line: 219, type: !2656, isLocal: true, isDefinition: true, scopeLine: 220, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!2656 = !DISubroutineType(types: !2657)
!2657 = !{!904, !2658}
!2658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2659, size: 64, align: 64)
!2659 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1694)
!2660 = !DILocalVariable(name: "s", arg: 1, scope: !2655, file: !1695, line: 219, type: !2658)
!2661 = !DILocation(line: 219, column: 55, scope: !2655)
!2662 = !DILocation(line: 224, column: 12, scope: !2655)
!2663 = !DILocation(line: 224, column: 15, scope: !2655)
!2664 = !DILocation(line: 224, column: 5, scope: !2655)
!2665 = distinct !DISubprogram(name: "decode_frame", scope: !916, file: !916, line: 1015, type: !1643, isLocal: true, isDefinition: true, scopeLine: 1016, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!2666 = !DILocalVariable(name: "s", arg: 1, scope: !2665, file: !916, line: 1015, type: !1645)
!2667 = !DILocation(line: 1015, column: 41, scope: !2665)
!2668 = !DILocalVariable(name: "gb", scope: !2665, file: !916, line: 1017, type: !2171)
!2669 = !DILocation(line: 1017, column: 20, scope: !2665)
!2670 = !DILocation(line: 1017, column: 26, scope: !2665)
!2671 = !DILocation(line: 1017, column: 29, scope: !2665)
!2672 = !DILocalVariable(name: "more_frames", scope: !2665, file: !916, line: 1018, type: !904)
!2673 = !DILocation(line: 1018, column: 9, scope: !2665)
!2674 = !DILocalVariable(name: "len", scope: !2665, file: !916, line: 1018, type: !904)
!2675 = !DILocation(line: 1018, column: 26, scope: !2665)
!2676 = !DILocalVariable(name: "i", scope: !2665, file: !916, line: 1018, type: !904)
!2677 = !DILocation(line: 1018, column: 35, scope: !2665)
!2678 = !DILocalVariable(name: "ret", scope: !2665, file: !916, line: 1018, type: !904)
!2679 = !DILocation(line: 1018, column: 38, scope: !2665)
!2680 = !DILocation(line: 1020, column: 28, scope: !2665)
!2681 = !DILocation(line: 1020, column: 31, scope: !2665)
!2682 = !DILocation(line: 1020, column: 5, scope: !2665)
!2683 = !DILocation(line: 1020, column: 8, scope: !2665)
!2684 = !DILocation(line: 1020, column: 15, scope: !2665)
!2685 = !DILocation(line: 1020, column: 26, scope: !2665)
!2686 = !DILocation(line: 1021, column: 30, scope: !2687)
!2687 = distinct !DILexicalBlock(scope: !2665, file: !916, line: 1021, column: 9)
!2688 = !DILocation(line: 1021, column: 33, scope: !2687)
!2689 = !DILocation(line: 1021, column: 40, scope: !2687)
!2690 = !DILocation(line: 1021, column: 43, scope: !2687)
!2691 = !DILocation(line: 1021, column: 16, scope: !2687)
!2692 = !DILocation(line: 1021, column: 14, scope: !2687)
!2693 = !DILocation(line: 1021, column: 54, scope: !2687)
!2694 = !DILocation(line: 1021, column: 9, scope: !2665)
!2695 = !DILocation(line: 1023, column: 9, scope: !2696)
!2696 = distinct !DILexicalBlock(scope: !2687, file: !916, line: 1021, column: 59)
!2697 = !DILocation(line: 1023, column: 12, scope: !2696)
!2698 = !DILocation(line: 1023, column: 24, scope: !2696)
!2699 = !DILocation(line: 1024, column: 9, scope: !2696)
!2700 = !DILocation(line: 1024, column: 12, scope: !2696)
!2701 = !DILocation(line: 1024, column: 19, scope: !2696)
!2702 = !DILocation(line: 1024, column: 30, scope: !2696)
!2703 = !DILocation(line: 1025, column: 16, scope: !2696)
!2704 = !DILocation(line: 1025, column: 9, scope: !2696)
!2705 = !DILocation(line: 1027, column: 12, scope: !2706)
!2706 = distinct !DILexicalBlock(scope: !2665, file: !916, line: 1027, column: 5)
!2707 = !DILocation(line: 1027, column: 10, scope: !2706)
!2708 = !DILocation(line: 1027, column: 17, scope: !2709)
!2709 = !DILexicalBlockFile(scope: !2710, file: !916, discriminator: 1)
!2710 = distinct !DILexicalBlock(scope: !2706, file: !916, line: 1027, column: 5)
!2711 = !DILocation(line: 1027, column: 21, scope: !2709)
!2712 = !DILocation(line: 1027, column: 24, scope: !2709)
!2713 = !DILocation(line: 1027, column: 19, scope: !2709)
!2714 = !DILocation(line: 1027, column: 5, scope: !2709)
!2715 = !DILocation(line: 1028, column: 63, scope: !2716)
!2716 = distinct !DILexicalBlock(scope: !2710, file: !916, line: 1027, column: 43)
!2717 = !DILocation(line: 1028, column: 39, scope: !2716)
!2718 = !DILocation(line: 1028, column: 42, scope: !2716)
!2719 = !DILocation(line: 1028, column: 49, scope: !2716)
!2720 = !DILocation(line: 1028, column: 28, scope: !2716)
!2721 = !DILocation(line: 1028, column: 23, scope: !2716)
!2722 = !DILocation(line: 1028, column: 9, scope: !2716)
!2723 = !DILocation(line: 1028, column: 12, scope: !2716)
!2724 = !DILocation(line: 1028, column: 26, scope: !2716)
!2725 = !DILocation(line: 1029, column: 63, scope: !2716)
!2726 = !DILocation(line: 1029, column: 39, scope: !2716)
!2727 = !DILocation(line: 1029, column: 42, scope: !2716)
!2728 = !DILocation(line: 1029, column: 49, scope: !2716)
!2729 = !DILocation(line: 1029, column: 28, scope: !2716)
!2730 = !DILocation(line: 1029, column: 23, scope: !2716)
!2731 = !DILocation(line: 1029, column: 9, scope: !2716)
!2732 = !DILocation(line: 1029, column: 12, scope: !2716)
!2733 = !DILocation(line: 1029, column: 26, scope: !2716)
!2734 = !DILocation(line: 1030, column: 5, scope: !2716)
!2735 = !DILocation(line: 1027, column: 39, scope: !2736)
!2736 = !DILexicalBlockFile(scope: !2710, file: !916, discriminator: 2)
!2737 = !DILocation(line: 1027, column: 5, scope: !2736)
!2738 = distinct !{!2738, !2739}
!2739 = !DILocation(line: 1027, column: 5, scope: !2665)
!2740 = !DILocation(line: 1033, column: 9, scope: !2741)
!2741 = distinct !DILexicalBlock(scope: !2665, file: !916, line: 1033, column: 9)
!2742 = !DILocation(line: 1033, column: 12, scope: !2741)
!2743 = !DILocation(line: 1033, column: 9, scope: !2665)
!2744 = !DILocation(line: 1034, column: 24, scope: !2741)
!2745 = !DILocation(line: 1034, column: 28, scope: !2741)
!2746 = !DILocation(line: 1034, column: 31, scope: !2741)
!2747 = !DILocation(line: 1034, column: 15, scope: !2741)
!2748 = !DILocation(line: 1034, column: 13, scope: !2741)
!2749 = !DILocation(line: 1034, column: 9, scope: !2741)
!2750 = !DILocation(line: 1037, column: 31, scope: !2751)
!2751 = distinct !DILexicalBlock(scope: !2665, file: !916, line: 1037, column: 9)
!2752 = !DILocation(line: 1037, column: 16, scope: !2751)
!2753 = !DILocation(line: 1037, column: 14, scope: !2751)
!2754 = !DILocation(line: 1037, column: 9, scope: !2665)
!2755 = !DILocation(line: 1038, column: 9, scope: !2756)
!2756 = distinct !DILexicalBlock(scope: !2751, file: !916, line: 1037, column: 36)
!2757 = !DILocation(line: 1038, column: 12, scope: !2756)
!2758 = !DILocation(line: 1038, column: 24, scope: !2756)
!2759 = !DILocation(line: 1039, column: 24, scope: !2756)
!2760 = !DILocation(line: 1039, column: 27, scope: !2756)
!2761 = !DILocation(line: 1039, column: 9, scope: !2756)
!2762 = !DILocation(line: 1040, column: 16, scope: !2756)
!2763 = !DILocation(line: 1040, column: 9, scope: !2756)
!2764 = !DILocation(line: 1044, column: 9, scope: !2765)
!2765 = distinct !DILexicalBlock(scope: !2665, file: !916, line: 1044, column: 9)
!2766 = !DILocation(line: 1044, column: 12, scope: !2765)
!2767 = !DILocation(line: 1044, column: 9, scope: !2665)
!2768 = !DILocation(line: 1045, column: 32, scope: !2765)
!2769 = !DILocation(line: 1045, column: 23, scope: !2765)
!2770 = !DILocation(line: 1045, column: 9, scope: !2765)
!2771 = !DILocation(line: 1045, column: 12, scope: !2765)
!2772 = !DILocation(line: 1045, column: 21, scope: !2765)
!2773 = !DILocation(line: 1049, column: 19, scope: !2774)
!2774 = distinct !DILexicalBlock(scope: !2665, file: !916, line: 1049, column: 9)
!2775 = !DILocation(line: 1049, column: 9, scope: !2774)
!2776 = !DILocation(line: 1049, column: 9, scope: !2665)
!2777 = !DILocalVariable(name: "skip", scope: !2778, file: !916, line: 1050, type: !904)
!2778 = distinct !DILexicalBlock(scope: !2774, file: !916, line: 1049, column: 24)
!2779 = !DILocation(line: 1050, column: 37, scope: !2778)
!2780 = !DILocation(line: 1053, column: 23, scope: !2781)
!2781 = distinct !DILexicalBlock(scope: !2778, file: !916, line: 1053, column: 13)
!2782 = !DILocation(line: 1053, column: 13, scope: !2781)
!2783 = !DILocation(line: 1053, column: 13, scope: !2778)
!2784 = !DILocation(line: 1054, column: 29, scope: !2785)
!2785 = distinct !DILexicalBlock(scope: !2781, file: !916, line: 1053, column: 28)
!2786 = !DILocation(line: 1054, column: 54, scope: !2785)
!2787 = !DILocation(line: 1054, column: 57, scope: !2785)
!2788 = !DILocation(line: 1054, column: 75, scope: !2785)
!2789 = !DILocation(line: 1054, column: 79, scope: !2785)
!2790 = !DILocation(line: 1054, column: 39, scope: !2785)
!2791 = !DILocation(line: 1054, column: 37, scope: !2785)
!2792 = !DILocation(line: 1054, column: 20, scope: !2793)
!2793 = !DILexicalBlockFile(scope: !2785, file: !916, discriminator: 1)
!2794 = !DILocation(line: 1054, column: 18, scope: !2785)
!2795 = !DILocation(line: 1055, column: 13, scope: !2785)
!2796 = distinct !{!2796, !2795}
!2797 = !DILocation(line: 1055, column: 73, scope: !2798)
!2798 = !DILexicalBlockFile(scope: !2799, file: !916, discriminator: 1)
!2799 = distinct !DILexicalBlock(scope: !2785, file: !916, line: 1055, column: 16)
!2800 = !DILocation(line: 1056, column: 9, scope: !2785)
!2801 = !DILocation(line: 1059, column: 23, scope: !2802)
!2802 = distinct !DILexicalBlock(scope: !2778, file: !916, line: 1059, column: 13)
!2803 = !DILocation(line: 1059, column: 13, scope: !2802)
!2804 = !DILocation(line: 1059, column: 13, scope: !2778)
!2805 = !DILocation(line: 1060, column: 29, scope: !2806)
!2806 = distinct !DILexicalBlock(scope: !2802, file: !916, line: 1059, column: 28)
!2807 = !DILocation(line: 1060, column: 54, scope: !2806)
!2808 = !DILocation(line: 1060, column: 57, scope: !2806)
!2809 = !DILocation(line: 1060, column: 75, scope: !2806)
!2810 = !DILocation(line: 1060, column: 79, scope: !2806)
!2811 = !DILocation(line: 1060, column: 39, scope: !2806)
!2812 = !DILocation(line: 1060, column: 37, scope: !2806)
!2813 = !DILocation(line: 1060, column: 20, scope: !2814)
!2814 = !DILexicalBlockFile(scope: !2806, file: !916, discriminator: 1)
!2815 = !DILocation(line: 1060, column: 18, scope: !2806)
!2816 = !DILocation(line: 1061, column: 13, scope: !2806)
!2817 = distinct !{!2817, !2816}
!2818 = !DILocation(line: 1061, column: 71, scope: !2819)
!2819 = !DILexicalBlockFile(scope: !2820, file: !916, discriminator: 1)
!2820 = distinct !DILexicalBlock(scope: !2806, file: !916, line: 1061, column: 16)
!2821 = !DILocation(line: 1062, column: 37, scope: !2806)
!2822 = !DILocation(line: 1062, column: 13, scope: !2806)
!2823 = !DILocation(line: 1062, column: 16, scope: !2806)
!2824 = !DILocation(line: 1062, column: 23, scope: !2806)
!2825 = !DILocation(line: 1062, column: 34, scope: !2806)
!2826 = !DILocation(line: 1063, column: 17, scope: !2827)
!2827 = distinct !DILexicalBlock(scope: !2806, file: !916, line: 1063, column: 17)
!2828 = !DILocation(line: 1063, column: 20, scope: !2827)
!2829 = !DILocation(line: 1063, column: 27, scope: !2827)
!2830 = !DILocation(line: 1063, column: 38, scope: !2827)
!2831 = !DILocation(line: 1063, column: 17, scope: !2806)
!2832 = !DILocation(line: 1064, column: 17, scope: !2827)
!2833 = !DILocation(line: 1065, column: 9, scope: !2806)
!2834 = !DILocation(line: 1067, column: 5, scope: !2778)
!2835 = !DILocation(line: 1070, column: 5, scope: !2665)
!2836 = !DILocation(line: 1070, column: 8, scope: !2665)
!2837 = !DILocation(line: 1070, column: 29, scope: !2665)
!2838 = !DILocation(line: 1071, column: 12, scope: !2839)
!2839 = distinct !DILexicalBlock(scope: !2665, file: !916, line: 1071, column: 5)
!2840 = !DILocation(line: 1071, column: 10, scope: !2839)
!2841 = !DILocation(line: 1071, column: 17, scope: !2842)
!2842 = !DILexicalBlockFile(scope: !2843, file: !916, discriminator: 1)
!2843 = distinct !DILexicalBlock(scope: !2839, file: !916, line: 1071, column: 5)
!2844 = !DILocation(line: 1071, column: 21, scope: !2842)
!2845 = !DILocation(line: 1071, column: 24, scope: !2842)
!2846 = !DILocation(line: 1071, column: 19, scope: !2842)
!2847 = !DILocation(line: 1071, column: 5, scope: !2842)
!2848 = !DILocation(line: 1072, column: 20, scope: !2849)
!2849 = distinct !DILexicalBlock(scope: !2843, file: !916, line: 1071, column: 43)
!2850 = !DILocation(line: 1072, column: 9, scope: !2849)
!2851 = !DILocation(line: 1072, column: 12, scope: !2849)
!2852 = !DILocation(line: 1072, column: 23, scope: !2849)
!2853 = !DILocation(line: 1072, column: 39, scope: !2849)
!2854 = !DILocation(line: 1073, column: 20, scope: !2849)
!2855 = !DILocation(line: 1073, column: 9, scope: !2849)
!2856 = !DILocation(line: 1073, column: 12, scope: !2849)
!2857 = !DILocation(line: 1073, column: 23, scope: !2849)
!2858 = !DILocation(line: 1073, column: 36, scope: !2849)
!2859 = !DILocation(line: 1074, column: 5, scope: !2849)
!2860 = !DILocation(line: 1071, column: 39, scope: !2861)
!2861 = !DILexicalBlockFile(scope: !2843, file: !916, discriminator: 2)
!2862 = !DILocation(line: 1071, column: 5, scope: !2861)
!2863 = distinct !{!2863, !2864}
!2864 = !DILocation(line: 1071, column: 5, scope: !2665)
!2865 = !DILocation(line: 1077, column: 5, scope: !2665)
!2866 = !DILocation(line: 1077, column: 13, scope: !2867)
!2867 = !DILexicalBlockFile(scope: !2665, file: !916, discriminator: 1)
!2868 = !DILocation(line: 1077, column: 16, scope: !2867)
!2869 = !DILocation(line: 1077, column: 12, scope: !2867)
!2870 = !DILocation(line: 1077, column: 5, scope: !2867)
!2871 = !DILocalVariable(name: "decoded_samples", scope: !2872, file: !916, line: 1078, type: !904)
!2872 = distinct !DILexicalBlock(scope: !2665, file: !916, line: 1077, column: 38)
!2873 = !DILocation(line: 1078, column: 13, scope: !2872)
!2874 = !DILocation(line: 1078, column: 31, scope: !2872)
!2875 = !DILocation(line: 1078, column: 34, scope: !2872)
!2876 = !DILocation(line: 1078, column: 45, scope: !2872)
!2877 = !DILocation(line: 1079, column: 29, scope: !2878)
!2878 = distinct !DILexicalBlock(scope: !2872, file: !916, line: 1079, column: 13)
!2879 = !DILocation(line: 1079, column: 13, scope: !2878)
!2880 = !DILocation(line: 1079, column: 32, scope: !2878)
!2881 = !DILocation(line: 1079, column: 13, scope: !2872)
!2882 = !DILocation(line: 1080, column: 13, scope: !2883)
!2883 = distinct !DILexicalBlock(scope: !2878, file: !916, line: 1079, column: 37)
!2884 = !DILocation(line: 1080, column: 16, scope: !2883)
!2885 = !DILocation(line: 1080, column: 28, scope: !2883)
!2886 = !DILocation(line: 1081, column: 17, scope: !2887)
!2887 = distinct !DILexicalBlock(scope: !2883, file: !916, line: 1081, column: 17)
!2888 = !DILocation(line: 1081, column: 20, scope: !2887)
!2889 = !DILocation(line: 1081, column: 27, scope: !2887)
!2890 = !DILocation(line: 1081, column: 17, scope: !2883)
!2891 = !DILocation(line: 1082, column: 40, scope: !2887)
!2892 = !DILocation(line: 1082, column: 17, scope: !2887)
!2893 = !DILocation(line: 1082, column: 20, scope: !2887)
!2894 = !DILocation(line: 1082, column: 27, scope: !2887)
!2895 = !DILocation(line: 1082, column: 38, scope: !2887)
!2896 = !DILocation(line: 1083, column: 13, scope: !2883)
!2897 = !DILocation(line: 1077, column: 5, scope: !2898)
!2898 = !DILexicalBlockFile(scope: !2665, file: !916, discriminator: 2)
!2899 = distinct !{!2899, !2865}
!2900 = !DILocation(line: 1087, column: 5, scope: !2665)
!2901 = distinct !{!2901, !2900}
!2902 = !DILocation(line: 1087, column: 55, scope: !2903)
!2903 = !DILexicalBlockFile(scope: !2904, file: !916, discriminator: 1)
!2904 = distinct !DILexicalBlock(scope: !2665, file: !916, line: 1087, column: 8)
!2905 = !DILocation(line: 1089, column: 5, scope: !2665)
!2906 = !DILocation(line: 1089, column: 8, scope: !2665)
!2907 = !DILocation(line: 1089, column: 19, scope: !2665)
!2908 = !DILocation(line: 1091, column: 9, scope: !2909)
!2909 = distinct !DILexicalBlock(scope: !2665, file: !916, line: 1091, column: 9)
!2910 = !DILocation(line: 1091, column: 12, scope: !2909)
!2911 = !DILocation(line: 1091, column: 9, scope: !2665)
!2912 = !DILocation(line: 1092, column: 13, scope: !2913)
!2913 = distinct !DILexicalBlock(scope: !2914, file: !916, line: 1092, column: 13)
!2914 = distinct !DILexicalBlock(scope: !2909, file: !916, line: 1091, column: 24)
!2915 = !DILocation(line: 1092, column: 36, scope: !2913)
!2916 = !DILocation(line: 1092, column: 21, scope: !2913)
!2917 = !DILocation(line: 1092, column: 42, scope: !2913)
!2918 = !DILocation(line: 1092, column: 45, scope: !2913)
!2919 = !DILocation(line: 1092, column: 40, scope: !2913)
!2920 = !DILocation(line: 1092, column: 59, scope: !2913)
!2921 = !DILocation(line: 1092, column: 17, scope: !2913)
!2922 = !DILocation(line: 1092, column: 13, scope: !2914)
!2923 = !DILocation(line: 1094, column: 20, scope: !2924)
!2924 = distinct !DILexicalBlock(scope: !2913, file: !916, line: 1092, column: 64)
!2925 = !DILocation(line: 1094, column: 23, scope: !2924)
!2926 = !DILocation(line: 1096, column: 20, scope: !2924)
!2927 = !DILocation(line: 1096, column: 23, scope: !2924)
!2928 = !DILocation(line: 1097, column: 20, scope: !2924)
!2929 = !DILocation(line: 1097, column: 42, scope: !2924)
!2930 = !DILocation(line: 1097, column: 27, scope: !2924)
!2931 = !DILocation(line: 1097, column: 48, scope: !2924)
!2932 = !DILocation(line: 1097, column: 51, scope: !2924)
!2933 = !DILocation(line: 1097, column: 46, scope: !2924)
!2934 = !DILocation(line: 1097, column: 24, scope: !2924)
!2935 = !DILocation(line: 1097, column: 65, scope: !2924)
!2936 = !DILocation(line: 1094, column: 13, scope: !2924)
!2937 = !DILocation(line: 1098, column: 13, scope: !2924)
!2938 = !DILocation(line: 1098, column: 16, scope: !2924)
!2939 = !DILocation(line: 1098, column: 28, scope: !2924)
!2940 = !DILocation(line: 1099, column: 13, scope: !2924)
!2941 = !DILocation(line: 1103, column: 24, scope: !2914)
!2942 = !DILocation(line: 1103, column: 28, scope: !2914)
!2943 = !DILocation(line: 1103, column: 50, scope: !2914)
!2944 = !DILocation(line: 1103, column: 35, scope: !2914)
!2945 = !DILocation(line: 1103, column: 56, scope: !2914)
!2946 = !DILocation(line: 1103, column: 59, scope: !2914)
!2947 = !DILocation(line: 1103, column: 54, scope: !2914)
!2948 = !DILocation(line: 1103, column: 32, scope: !2914)
!2949 = !DILocation(line: 1103, column: 73, scope: !2914)
!2950 = !DILocation(line: 1103, column: 9, scope: !2951)
!2951 = !DILexicalBlockFile(scope: !2914, file: !916, discriminator: 1)
!2952 = !DILocation(line: 1104, column: 5, scope: !2914)
!2953 = !DILocation(line: 1107, column: 29, scope: !2665)
!2954 = !DILocation(line: 1107, column: 19, scope: !2665)
!2955 = !DILocation(line: 1107, column: 17, scope: !2665)
!2956 = !DILocation(line: 1108, column: 7, scope: !2665)
!2957 = !DILocation(line: 1108, column: 10, scope: !2665)
!2958 = !DILocation(line: 1108, column: 5, scope: !2665)
!2959 = !DILocation(line: 1109, column: 12, scope: !2665)
!2960 = !DILocation(line: 1109, column: 5, scope: !2665)
!2961 = !DILocation(line: 1110, column: 1, scope: !2665)
!2962 = distinct !DISubprogram(name: "init_get_bits", scope: !1695, file: !1695, line: 615, type: !2963, isLocal: true, isDefinition: true, scopeLine: 617, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!2963 = !DISubroutineType(types: !2964)
!2964 = !{!904, !2171, !1452, !904}
!2965 = !DILocalVariable(name: "s", arg: 1, scope: !2962, file: !1695, line: 615, type: !2171)
!2966 = !DILocation(line: 615, column: 48, scope: !2962)
!2967 = !DILocalVariable(name: "buffer", arg: 2, scope: !2962, file: !1695, line: 615, type: !1452)
!2968 = !DILocation(line: 615, column: 66, scope: !2962)
!2969 = !DILocalVariable(name: "bit_size", arg: 3, scope: !2962, file: !1695, line: 616, type: !904)
!2970 = !DILocation(line: 616, column: 37, scope: !2962)
!2971 = !DILocalVariable(name: "buffer_size", scope: !2962, file: !1695, line: 618, type: !904)
!2972 = !DILocation(line: 618, column: 9, scope: !2962)
!2973 = !DILocalVariable(name: "ret", scope: !2962, file: !1695, line: 619, type: !904)
!2974 = !DILocation(line: 619, column: 9, scope: !2962)
!2975 = !DILocation(line: 621, column: 9, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !2962, file: !1695, line: 621, column: 9)
!2977 = !DILocation(line: 621, column: 18, scope: !2976)
!2978 = !DILocation(line: 621, column: 64, scope: !2976)
!2979 = !DILocation(line: 621, column: 67, scope: !2980)
!2980 = !DILexicalBlockFile(scope: !2976, file: !1695, discriminator: 1)
!2981 = !DILocation(line: 621, column: 76, scope: !2980)
!2982 = !DILocation(line: 621, column: 80, scope: !2980)
!2983 = !DILocation(line: 621, column: 84, scope: !2984)
!2984 = !DILexicalBlockFile(scope: !2976, file: !1695, discriminator: 2)
!2985 = !DILocation(line: 621, column: 9, scope: !2984)
!2986 = !DILocation(line: 622, column: 18, scope: !2987)
!2987 = distinct !DILexicalBlock(scope: !2976, file: !1695, line: 621, column: 92)
!2988 = !DILocation(line: 623, column: 16, scope: !2987)
!2989 = !DILocation(line: 624, column: 13, scope: !2987)
!2990 = !DILocation(line: 625, column: 5, scope: !2987)
!2991 = !DILocation(line: 627, column: 20, scope: !2962)
!2992 = !DILocation(line: 627, column: 29, scope: !2962)
!2993 = !DILocation(line: 627, column: 34, scope: !2962)
!2994 = !DILocation(line: 627, column: 17, scope: !2962)
!2995 = !DILocation(line: 629, column: 17, scope: !2962)
!2996 = !DILocation(line: 629, column: 5, scope: !2962)
!2997 = !DILocation(line: 629, column: 8, scope: !2962)
!2998 = !DILocation(line: 629, column: 15, scope: !2962)
!2999 = !DILocation(line: 630, column: 23, scope: !2962)
!3000 = !DILocation(line: 630, column: 5, scope: !2962)
!3001 = !DILocation(line: 630, column: 8, scope: !2962)
!3002 = !DILocation(line: 630, column: 21, scope: !2962)
!3003 = !DILocation(line: 631, column: 29, scope: !2962)
!3004 = !DILocation(line: 631, column: 38, scope: !2962)
!3005 = !DILocation(line: 631, column: 5, scope: !2962)
!3006 = !DILocation(line: 631, column: 8, scope: !2962)
!3007 = !DILocation(line: 631, column: 27, scope: !2962)
!3008 = !DILocation(line: 632, column: 21, scope: !2962)
!3009 = !DILocation(line: 632, column: 30, scope: !2962)
!3010 = !DILocation(line: 632, column: 28, scope: !2962)
!3011 = !DILocation(line: 632, column: 5, scope: !2962)
!3012 = !DILocation(line: 632, column: 8, scope: !2962)
!3013 = !DILocation(line: 632, column: 19, scope: !2962)
!3014 = !DILocation(line: 633, column: 5, scope: !2962)
!3015 = !DILocation(line: 633, column: 8, scope: !2962)
!3016 = !DILocation(line: 633, column: 14, scope: !2962)
!3017 = !DILocation(line: 639, column: 12, scope: !2962)
!3018 = !DILocation(line: 639, column: 5, scope: !2962)
!3019 = distinct !DISubprogram(name: "get_bits", scope: !1695, file: !1695, line: 381, type: !3020, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!3020 = !DISubroutineType(types: !3021)
!3021 = !{!903, !2171, !904}
!3022 = !DILocalVariable(name: "x", arg: 1, scope: !3023, file: !3024, line: 66, type: !902)
!3023 = distinct !DISubprogram(name: "av_bswap32", scope: !3024, file: !3024, line: 66, type: !3025, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!3024 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!3025 = !DISubroutineType(types: !3026)
!3026 = !{!902, !902}
!3027 = !DILocation(line: 66, column: 98, scope: !3023, inlinedAt: !3028)
!3028 = distinct !DILocation(line: 401, column: 16, scope: !3019)
!3029 = !DILocalVariable(name: "s", arg: 1, scope: !3019, file: !1695, line: 381, type: !2171)
!3030 = !DILocation(line: 381, column: 52, scope: !3019)
!3031 = !DILocalVariable(name: "n", arg: 2, scope: !3019, file: !1695, line: 381, type: !904)
!3032 = !DILocation(line: 381, column: 59, scope: !3019)
!3033 = !DILocalVariable(name: "tmp", scope: !3019, file: !1695, line: 383, type: !904)
!3034 = !DILocation(line: 383, column: 18, scope: !3019)
!3035 = !DILocalVariable(name: "re_index", scope: !3019, file: !1695, line: 399, type: !903)
!3036 = !DILocation(line: 399, column: 18, scope: !3019)
!3037 = !DILocation(line: 399, column: 30, scope: !3019)
!3038 = !DILocation(line: 399, column: 34, scope: !3019)
!3039 = !DILocalVariable(name: "re_cache", scope: !3019, file: !1695, line: 399, type: !903)
!3040 = !DILocation(line: 399, column: 78, scope: !3019)
!3041 = !DILocalVariable(name: "re_size_plus8", scope: !3019, file: !1695, line: 399, type: !903)
!3042 = !DILocation(line: 399, column: 101, scope: !3019)
!3043 = !DILocation(line: 399, column: 118, scope: !3019)
!3044 = !DILocation(line: 399, column: 122, scope: !3019)
!3045 = !DILocation(line: 401, column: 60, scope: !3019)
!3046 = !DILocation(line: 401, column: 64, scope: !3019)
!3047 = !DILocation(line: 401, column: 74, scope: !3019)
!3048 = !DILocation(line: 401, column: 83, scope: !3019)
!3049 = !DILocation(line: 401, column: 71, scope: !3019)
!3050 = !DILocation(line: 401, column: 92, scope: !3019)
!3051 = !DILocation(line: 401, column: 16, scope: !3019)
!3052 = !DILocation(line: 68, column: 16, scope: !3023, inlinedAt: !3028)
!3053 = !DILocation(line: 68, column: 19, scope: !3023, inlinedAt: !3028)
!3054 = !DILocation(line: 68, column: 24, scope: !3023, inlinedAt: !3028)
!3055 = !DILocation(line: 68, column: 38, scope: !3023, inlinedAt: !3028)
!3056 = !DILocation(line: 68, column: 41, scope: !3023, inlinedAt: !3028)
!3057 = !DILocation(line: 68, column: 46, scope: !3023, inlinedAt: !3028)
!3058 = !DILocation(line: 68, column: 34, scope: !3023, inlinedAt: !3028)
!3059 = !DILocation(line: 68, column: 57, scope: !3023, inlinedAt: !3028)
!3060 = !DILocation(line: 68, column: 69, scope: !3023, inlinedAt: !3028)
!3061 = !DILocation(line: 68, column: 72, scope: !3023, inlinedAt: !3028)
!3062 = !DILocation(line: 68, column: 79, scope: !3023, inlinedAt: !3028)
!3063 = !DILocation(line: 68, column: 84, scope: !3023, inlinedAt: !3028)
!3064 = !DILocation(line: 68, column: 99, scope: !3023, inlinedAt: !3028)
!3065 = !DILocation(line: 68, column: 102, scope: !3023, inlinedAt: !3028)
!3066 = !DILocation(line: 68, column: 109, scope: !3023, inlinedAt: !3028)
!3067 = !DILocation(line: 68, column: 114, scope: !3023, inlinedAt: !3028)
!3068 = !DILocation(line: 68, column: 94, scope: !3023, inlinedAt: !3028)
!3069 = !DILocation(line: 68, column: 63, scope: !3023, inlinedAt: !3028)
!3070 = !DILocation(line: 401, column: 100, scope: !3019)
!3071 = !DILocation(line: 401, column: 109, scope: !3019)
!3072 = !DILocation(line: 401, column: 96, scope: !3019)
!3073 = !DILocation(line: 401, column: 14, scope: !3019)
!3074 = !DILocation(line: 402, column: 21, scope: !3019)
!3075 = !DILocation(line: 402, column: 31, scope: !3019)
!3076 = !DILocation(line: 402, column: 11, scope: !3019)
!3077 = !DILocation(line: 402, column: 9, scope: !3019)
!3078 = !DILocation(line: 403, column: 18, scope: !3019)
!3079 = !DILocation(line: 403, column: 36, scope: !3019)
!3080 = !DILocation(line: 403, column: 48, scope: !3019)
!3081 = !DILocation(line: 403, column: 45, scope: !3019)
!3082 = !DILocation(line: 403, column: 33, scope: !3019)
!3083 = !DILocation(line: 403, column: 17, scope: !3019)
!3084 = !DILocation(line: 403, column: 55, scope: !3085)
!3085 = !DILexicalBlockFile(scope: !3019, file: !1695, discriminator: 1)
!3086 = !DILocation(line: 403, column: 67, scope: !3085)
!3087 = !DILocation(line: 403, column: 64, scope: !3085)
!3088 = !DILocation(line: 403, column: 17, scope: !3085)
!3089 = !DILocation(line: 403, column: 74, scope: !3090)
!3090 = !DILexicalBlockFile(scope: !3019, file: !1695, discriminator: 2)
!3091 = !DILocation(line: 403, column: 17, scope: !3090)
!3092 = !DILocation(line: 403, column: 17, scope: !3093)
!3093 = !DILexicalBlockFile(scope: !3019, file: !1695, discriminator: 3)
!3094 = !DILocation(line: 403, column: 14, scope: !3093)
!3095 = !DILocation(line: 404, column: 18, scope: !3019)
!3096 = !DILocation(line: 404, column: 6, scope: !3019)
!3097 = !DILocation(line: 404, column: 10, scope: !3019)
!3098 = !DILocation(line: 404, column: 16, scope: !3019)
!3099 = !DILocation(line: 406, column: 12, scope: !3019)
!3100 = !DILocation(line: 406, column: 5, scope: !3019)
!3101 = distinct !DISubprogram(name: "skip_bits", scope: !1695, file: !1695, line: 460, type: !3102, isLocal: true, isDefinition: true, scopeLine: 461, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!3102 = !DISubroutineType(types: !3103)
!3103 = !{null, !2171, !904}
!3104 = !DILocalVariable(name: "s", arg: 1, scope: !3101, file: !1695, line: 460, type: !2171)
!3105 = !DILocation(line: 460, column: 45, scope: !3101)
!3106 = !DILocalVariable(name: "n", arg: 2, scope: !3101, file: !1695, line: 460, type: !904)
!3107 = !DILocation(line: 460, column: 52, scope: !3101)
!3108 = !DILocalVariable(name: "re_index", scope: !3101, file: !1695, line: 481, type: !903)
!3109 = !DILocation(line: 481, column: 18, scope: !3101)
!3110 = !DILocation(line: 481, column: 30, scope: !3101)
!3111 = !DILocation(line: 481, column: 34, scope: !3101)
!3112 = !DILocalVariable(name: "re_cache", scope: !3101, file: !1695, line: 481, type: !903)
!3113 = !DILocation(line: 481, column: 78, scope: !3101)
!3114 = !DILocalVariable(name: "re_size_plus8", scope: !3101, file: !1695, line: 481, type: !903)
!3115 = !DILocation(line: 481, column: 101, scope: !3101)
!3116 = !DILocation(line: 481, column: 118, scope: !3101)
!3117 = !DILocation(line: 481, column: 122, scope: !3101)
!3118 = !DILocation(line: 482, column: 18, scope: !3101)
!3119 = !DILocation(line: 482, column: 36, scope: !3101)
!3120 = !DILocation(line: 482, column: 48, scope: !3101)
!3121 = !DILocation(line: 482, column: 45, scope: !3101)
!3122 = !DILocation(line: 482, column: 33, scope: !3101)
!3123 = !DILocation(line: 482, column: 17, scope: !3101)
!3124 = !DILocation(line: 482, column: 55, scope: !3125)
!3125 = !DILexicalBlockFile(scope: !3101, file: !1695, discriminator: 1)
!3126 = !DILocation(line: 482, column: 67, scope: !3125)
!3127 = !DILocation(line: 482, column: 64, scope: !3125)
!3128 = !DILocation(line: 482, column: 17, scope: !3125)
!3129 = !DILocation(line: 482, column: 74, scope: !3130)
!3130 = !DILexicalBlockFile(scope: !3101, file: !1695, discriminator: 2)
!3131 = !DILocation(line: 482, column: 17, scope: !3130)
!3132 = !DILocation(line: 482, column: 17, scope: !3133)
!3133 = !DILexicalBlockFile(scope: !3101, file: !1695, discriminator: 3)
!3134 = !DILocation(line: 482, column: 14, scope: !3133)
!3135 = !DILocation(line: 483, column: 18, scope: !3101)
!3136 = !DILocation(line: 483, column: 6, scope: !3101)
!3137 = !DILocation(line: 483, column: 10, scope: !3101)
!3138 = !DILocation(line: 483, column: 16, scope: !3101)
!3139 = !DILocation(line: 485, column: 1, scope: !3101)
!3140 = distinct !DISubprogram(name: "get_bits1", scope: !1695, file: !1695, line: 487, type: !3141, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!3141 = !DISubroutineType(types: !3142)
!3142 = !{!903, !2171}
!3143 = !DILocalVariable(name: "s", arg: 1, scope: !3140, file: !1695, line: 487, type: !2171)
!3144 = !DILocation(line: 487, column: 53, scope: !3140)
!3145 = !DILocalVariable(name: "index", scope: !3140, file: !1695, line: 499, type: !903)
!3146 = !DILocation(line: 499, column: 18, scope: !3140)
!3147 = !DILocation(line: 499, column: 26, scope: !3140)
!3148 = !DILocation(line: 499, column: 29, scope: !3140)
!3149 = !DILocalVariable(name: "result", scope: !3140, file: !1695, line: 500, type: !911)
!3150 = !DILocation(line: 500, column: 13, scope: !3140)
!3151 = !DILocation(line: 500, column: 32, scope: !3140)
!3152 = !DILocation(line: 500, column: 38, scope: !3140)
!3153 = !DILocation(line: 500, column: 22, scope: !3140)
!3154 = !DILocation(line: 500, column: 25, scope: !3140)
!3155 = !DILocation(line: 505, column: 16, scope: !3140)
!3156 = !DILocation(line: 505, column: 22, scope: !3140)
!3157 = !DILocation(line: 505, column: 12, scope: !3140)
!3158 = !DILocation(line: 506, column: 12, scope: !3140)
!3159 = !DILocation(line: 509, column: 9, scope: !3160)
!3160 = distinct !DILexicalBlock(scope: !3140, file: !1695, line: 509, column: 9)
!3161 = !DILocation(line: 509, column: 12, scope: !3160)
!3162 = !DILocation(line: 509, column: 20, scope: !3160)
!3163 = !DILocation(line: 509, column: 23, scope: !3160)
!3164 = !DILocation(line: 509, column: 18, scope: !3160)
!3165 = !DILocation(line: 509, column: 9, scope: !3140)
!3166 = !DILocation(line: 511, column: 14, scope: !3160)
!3167 = !DILocation(line: 511, column: 9, scope: !3160)
!3168 = !DILocation(line: 512, column: 16, scope: !3140)
!3169 = !DILocation(line: 512, column: 5, scope: !3140)
!3170 = !DILocation(line: 512, column: 8, scope: !3140)
!3171 = !DILocation(line: 512, column: 14, scope: !3140)
!3172 = !DILocation(line: 514, column: 12, scope: !3140)
!3173 = !DILocation(line: 514, column: 5, scope: !3140)
!3174 = distinct !DISubprogram(name: "save_bits", scope: !916, file: !916, line: 1130, type: !3175, isLocal: true, isDefinition: true, scopeLine: 1132, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!3175 = !DISubroutineType(types: !3176)
!3176 = !{null, !1645, !2171, !904, !904}
!3177 = !DILocalVariable(name: "s", arg: 1, scope: !3174, file: !916, line: 1130, type: !1645)
!3178 = !DILocation(line: 1130, column: 39, scope: !3174)
!3179 = !DILocalVariable(name: "gb", arg: 2, scope: !3174, file: !916, line: 1130, type: !2171)
!3180 = !DILocation(line: 1130, column: 57, scope: !3174)
!3181 = !DILocalVariable(name: "len", arg: 3, scope: !3174, file: !916, line: 1130, type: !904)
!3182 = !DILocation(line: 1130, column: 65, scope: !3174)
!3183 = !DILocalVariable(name: "append", arg: 4, scope: !3174, file: !916, line: 1131, type: !904)
!3184 = !DILocation(line: 1131, column: 27, scope: !3174)
!3185 = !DILocalVariable(name: "buflen", scope: !3174, file: !916, line: 1133, type: !904)
!3186 = !DILocation(line: 1133, column: 9, scope: !3174)
!3187 = !DILocalVariable(name: "tmp", scope: !3174, file: !916, line: 1134, type: !1671)
!3188 = !DILocation(line: 1134, column: 19, scope: !3174)
!3189 = !DILocation(line: 1140, column: 10, scope: !3190)
!3190 = distinct !DILexicalBlock(scope: !3174, file: !916, line: 1140, column: 9)
!3191 = !DILocation(line: 1140, column: 9, scope: !3174)
!3192 = !DILocation(line: 1141, column: 42, scope: !3193)
!3193 = distinct !DILexicalBlock(scope: !3190, file: !916, line: 1140, column: 18)
!3194 = !DILocation(line: 1141, column: 27, scope: !3193)
!3195 = !DILocation(line: 1141, column: 46, scope: !3193)
!3196 = !DILocation(line: 1141, column: 9, scope: !3193)
!3197 = !DILocation(line: 1141, column: 12, scope: !3193)
!3198 = !DILocation(line: 1141, column: 25, scope: !3193)
!3199 = !DILocation(line: 1142, column: 29, scope: !3193)
!3200 = !DILocation(line: 1142, column: 32, scope: !3193)
!3201 = !DILocation(line: 1142, column: 9, scope: !3193)
!3202 = !DILocation(line: 1142, column: 12, scope: !3193)
!3203 = !DILocation(line: 1142, column: 27, scope: !3193)
!3204 = !DILocation(line: 1143, column: 24, scope: !3193)
!3205 = !DILocation(line: 1143, column: 27, scope: !3193)
!3206 = !DILocation(line: 1143, column: 31, scope: !3193)
!3207 = !DILocation(line: 1143, column: 34, scope: !3193)
!3208 = !DILocation(line: 1143, column: 46, scope: !3193)
!3209 = !DILocation(line: 1143, column: 49, scope: !3193)
!3210 = !DILocation(line: 1143, column: 9, scope: !3193)
!3211 = !DILocation(line: 1144, column: 5, scope: !3193)
!3212 = !DILocation(line: 1146, column: 15, scope: !3174)
!3213 = !DILocation(line: 1146, column: 18, scope: !3174)
!3214 = !DILocation(line: 1146, column: 35, scope: !3174)
!3215 = !DILocation(line: 1146, column: 33, scope: !3174)
!3216 = !DILocation(line: 1146, column: 39, scope: !3174)
!3217 = !DILocation(line: 1146, column: 44, scope: !3174)
!3218 = !DILocation(line: 1146, column: 12, scope: !3174)
!3219 = !DILocation(line: 1148, column: 9, scope: !3220)
!3220 = distinct !DILexicalBlock(scope: !3174, file: !916, line: 1148, column: 9)
!3221 = !DILocation(line: 1148, column: 13, scope: !3220)
!3222 = !DILocation(line: 1148, column: 18, scope: !3220)
!3223 = !DILocation(line: 1148, column: 21, scope: !3224)
!3224 = !DILexicalBlockFile(scope: !3220, file: !916, discriminator: 1)
!3225 = !DILocation(line: 1148, column: 30, scope: !3224)
!3226 = !DILocation(line: 1148, column: 33, scope: !3224)
!3227 = !DILocation(line: 1148, column: 28, scope: !3224)
!3228 = !DILocation(line: 1148, column: 9, scope: !3224)
!3229 = !DILocation(line: 1149, column: 31, scope: !3230)
!3230 = distinct !DILexicalBlock(scope: !3220, file: !916, line: 1148, column: 49)
!3231 = !DILocation(line: 1149, column: 34, scope: !3230)
!3232 = !DILocation(line: 1149, column: 9, scope: !3230)
!3233 = !DILocation(line: 1150, column: 9, scope: !3230)
!3234 = !DILocation(line: 1150, column: 12, scope: !3230)
!3235 = !DILocation(line: 1150, column: 24, scope: !3230)
!3236 = !DILocation(line: 1151, column: 9, scope: !3230)
!3237 = !DILocation(line: 1151, column: 12, scope: !3230)
!3238 = !DILocation(line: 1151, column: 27, scope: !3230)
!3239 = !DILocation(line: 1152, column: 9, scope: !3230)
!3240 = !DILocation(line: 1155, column: 26, scope: !3174)
!3241 = !DILocation(line: 1155, column: 5, scope: !3174)
!3242 = !DILocation(line: 1155, column: 8, scope: !3174)
!3243 = !DILocation(line: 1155, column: 23, scope: !3174)
!3244 = !DILocation(line: 1156, column: 10, scope: !3245)
!3245 = distinct !DILexicalBlock(scope: !3174, file: !916, line: 1156, column: 9)
!3246 = !DILocation(line: 1156, column: 9, scope: !3174)
!3247 = !DILocation(line: 1157, column: 27, scope: !3248)
!3248 = distinct !DILexicalBlock(scope: !3245, file: !916, line: 1156, column: 18)
!3249 = !DILocation(line: 1157, column: 30, scope: !3248)
!3250 = !DILocation(line: 1157, column: 34, scope: !3248)
!3251 = !DILocation(line: 1157, column: 38, scope: !3248)
!3252 = !DILocation(line: 1157, column: 63, scope: !3248)
!3253 = !DILocation(line: 1157, column: 48, scope: !3248)
!3254 = !DILocation(line: 1157, column: 67, scope: !3248)
!3255 = !DILocation(line: 1157, column: 45, scope: !3248)
!3256 = !DILocation(line: 1158, column: 26, scope: !3248)
!3257 = !DILocation(line: 1158, column: 29, scope: !3248)
!3258 = !DILocation(line: 1157, column: 9, scope: !3259)
!3259 = !DILexicalBlockFile(scope: !3248, file: !916, discriminator: 1)
!3260 = !DILocation(line: 1159, column: 5, scope: !3248)
!3261 = !DILocalVariable(name: "align", scope: !3262, file: !916, line: 1160, type: !904)
!3262 = distinct !DILexicalBlock(scope: !3245, file: !916, line: 1159, column: 12)
!3263 = !DILocation(line: 1160, column: 13, scope: !3262)
!3264 = !DILocation(line: 1160, column: 41, scope: !3262)
!3265 = !DILocation(line: 1160, column: 26, scope: !3262)
!3266 = !DILocation(line: 1160, column: 45, scope: !3262)
!3267 = !DILocation(line: 1160, column: 23, scope: !3262)
!3268 = !DILocation(line: 1161, column: 19, scope: !3262)
!3269 = !DILocation(line: 1161, column: 29, scope: !3262)
!3270 = !DILocation(line: 1161, column: 26, scope: !3262)
!3271 = !DILocation(line: 1161, column: 18, scope: !3262)
!3272 = !DILocation(line: 1161, column: 37, scope: !3273)
!3273 = !DILexicalBlockFile(scope: !3262, file: !916, discriminator: 1)
!3274 = !DILocation(line: 1161, column: 18, scope: !3273)
!3275 = !DILocation(line: 1161, column: 45, scope: !3276)
!3276 = !DILexicalBlockFile(scope: !3262, file: !916, discriminator: 2)
!3277 = !DILocation(line: 1161, column: 18, scope: !3276)
!3278 = !DILocation(line: 1161, column: 18, scope: !3279)
!3279 = !DILexicalBlockFile(scope: !3262, file: !916, discriminator: 3)
!3280 = !DILocation(line: 1161, column: 15, scope: !3279)
!3281 = !DILocation(line: 1162, column: 19, scope: !3262)
!3282 = !DILocation(line: 1162, column: 22, scope: !3262)
!3283 = !DILocation(line: 1162, column: 26, scope: !3262)
!3284 = !DILocation(line: 1162, column: 42, scope: !3262)
!3285 = !DILocation(line: 1162, column: 46, scope: !3262)
!3286 = !DILocation(line: 1162, column: 33, scope: !3262)
!3287 = !DILocation(line: 1162, column: 9, scope: !3273)
!3288 = !DILocation(line: 1163, column: 16, scope: !3262)
!3289 = !DILocation(line: 1163, column: 13, scope: !3262)
!3290 = !DILocation(line: 1164, column: 27, scope: !3262)
!3291 = !DILocation(line: 1164, column: 30, scope: !3262)
!3292 = !DILocation(line: 1164, column: 34, scope: !3262)
!3293 = !DILocation(line: 1164, column: 38, scope: !3262)
!3294 = !DILocation(line: 1164, column: 63, scope: !3262)
!3295 = !DILocation(line: 1164, column: 48, scope: !3262)
!3296 = !DILocation(line: 1164, column: 67, scope: !3262)
!3297 = !DILocation(line: 1164, column: 45, scope: !3262)
!3298 = !DILocation(line: 1164, column: 74, scope: !3262)
!3299 = !DILocation(line: 1164, column: 9, scope: !3273)
!3300 = !DILocation(line: 1166, column: 20, scope: !3174)
!3301 = !DILocation(line: 1166, column: 24, scope: !3174)
!3302 = !DILocation(line: 1166, column: 5, scope: !3174)
!3303 = !DILocation(line: 1168, column: 11, scope: !3174)
!3304 = !DILocation(line: 1168, column: 14, scope: !3174)
!3305 = !DILocation(line: 1169, column: 5, scope: !3174)
!3306 = !DILocation(line: 1171, column: 20, scope: !3174)
!3307 = !DILocation(line: 1171, column: 23, scope: !3174)
!3308 = !DILocation(line: 1171, column: 27, scope: !3174)
!3309 = !DILocation(line: 1171, column: 30, scope: !3174)
!3310 = !DILocation(line: 1171, column: 42, scope: !3174)
!3311 = !DILocation(line: 1171, column: 45, scope: !3174)
!3312 = !DILocation(line: 1171, column: 5, scope: !3174)
!3313 = !DILocation(line: 1172, column: 16, scope: !3174)
!3314 = !DILocation(line: 1172, column: 19, scope: !3174)
!3315 = !DILocation(line: 1172, column: 23, scope: !3174)
!3316 = !DILocation(line: 1172, column: 26, scope: !3174)
!3317 = !DILocation(line: 1172, column: 5, scope: !3174)
!3318 = !DILocation(line: 1173, column: 1, scope: !3174)
!3319 = !DILocation(line: 1173, column: 1, scope: !3320)
!3320 = !DILexicalBlockFile(scope: !3174, file: !916, discriminator: 1)
!3321 = distinct !DISubprogram(name: "remaining_bits", scope: !916, file: !916, line: 1118, type: !3322, isLocal: true, isDefinition: true, scopeLine: 1119, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!3322 = !DISubroutineType(types: !3323)
!3323 = !{!904, !1645, !2171}
!3324 = !DILocalVariable(name: "s", arg: 1, scope: !3321, file: !916, line: 1118, type: !1645)
!3325 = !DILocation(line: 1118, column: 43, scope: !3321)
!3326 = !DILocalVariable(name: "gb", arg: 2, scope: !3321, file: !916, line: 1118, type: !2171)
!3327 = !DILocation(line: 1118, column: 61, scope: !3321)
!3328 = !DILocation(line: 1120, column: 12, scope: !3321)
!3329 = !DILocation(line: 1120, column: 15, scope: !3321)
!3330 = !DILocation(line: 1120, column: 45, scope: !3321)
!3331 = !DILocation(line: 1120, column: 30, scope: !3321)
!3332 = !DILocation(line: 1120, column: 28, scope: !3321)
!3333 = !DILocation(line: 1120, column: 5, scope: !3321)
!3334 = distinct !DISubprogram(name: "show_bits", scope: !1695, file: !1695, line: 443, type: !3020, isLocal: true, isDefinition: true, scopeLine: 444, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!3335 = !DILocation(line: 66, column: 98, scope: !3023, inlinedAt: !3336)
!3336 = distinct !DILocation(line: 454, column: 16, scope: !3334)
!3337 = !DILocalVariable(name: "s", arg: 1, scope: !3334, file: !1695, line: 443, type: !2171)
!3338 = !DILocation(line: 443, column: 53, scope: !3334)
!3339 = !DILocalVariable(name: "n", arg: 2, scope: !3334, file: !1695, line: 443, type: !904)
!3340 = !DILocation(line: 443, column: 60, scope: !3334)
!3341 = !DILocalVariable(name: "tmp", scope: !3334, file: !1695, line: 445, type: !904)
!3342 = !DILocation(line: 445, column: 18, scope: !3334)
!3343 = !DILocalVariable(name: "re_index", scope: !3334, file: !1695, line: 452, type: !903)
!3344 = !DILocation(line: 452, column: 18, scope: !3334)
!3345 = !DILocation(line: 452, column: 30, scope: !3334)
!3346 = !DILocation(line: 452, column: 34, scope: !3334)
!3347 = !DILocalVariable(name: "re_cache", scope: !3334, file: !1695, line: 452, type: !903)
!3348 = !DILocation(line: 452, column: 78, scope: !3334)
!3349 = !DILocation(line: 454, column: 60, scope: !3334)
!3350 = !DILocation(line: 454, column: 64, scope: !3334)
!3351 = !DILocation(line: 454, column: 74, scope: !3334)
!3352 = !DILocation(line: 454, column: 83, scope: !3334)
!3353 = !DILocation(line: 454, column: 71, scope: !3334)
!3354 = !DILocation(line: 454, column: 92, scope: !3334)
!3355 = !DILocation(line: 454, column: 16, scope: !3334)
!3356 = !DILocation(line: 68, column: 16, scope: !3023, inlinedAt: !3336)
!3357 = !DILocation(line: 68, column: 19, scope: !3023, inlinedAt: !3336)
!3358 = !DILocation(line: 68, column: 24, scope: !3023, inlinedAt: !3336)
!3359 = !DILocation(line: 68, column: 38, scope: !3023, inlinedAt: !3336)
!3360 = !DILocation(line: 68, column: 41, scope: !3023, inlinedAt: !3336)
!3361 = !DILocation(line: 68, column: 46, scope: !3023, inlinedAt: !3336)
!3362 = !DILocation(line: 68, column: 34, scope: !3023, inlinedAt: !3336)
!3363 = !DILocation(line: 68, column: 57, scope: !3023, inlinedAt: !3336)
!3364 = !DILocation(line: 68, column: 69, scope: !3023, inlinedAt: !3336)
!3365 = !DILocation(line: 68, column: 72, scope: !3023, inlinedAt: !3336)
!3366 = !DILocation(line: 68, column: 79, scope: !3023, inlinedAt: !3336)
!3367 = !DILocation(line: 68, column: 84, scope: !3023, inlinedAt: !3336)
!3368 = !DILocation(line: 68, column: 99, scope: !3023, inlinedAt: !3336)
!3369 = !DILocation(line: 68, column: 102, scope: !3023, inlinedAt: !3336)
!3370 = !DILocation(line: 68, column: 109, scope: !3023, inlinedAt: !3336)
!3371 = !DILocation(line: 68, column: 114, scope: !3023, inlinedAt: !3336)
!3372 = !DILocation(line: 68, column: 94, scope: !3023, inlinedAt: !3336)
!3373 = !DILocation(line: 68, column: 63, scope: !3023, inlinedAt: !3336)
!3374 = !DILocation(line: 454, column: 100, scope: !3334)
!3375 = !DILocation(line: 454, column: 109, scope: !3334)
!3376 = !DILocation(line: 454, column: 96, scope: !3334)
!3377 = !DILocation(line: 454, column: 14, scope: !3334)
!3378 = !DILocation(line: 455, column: 21, scope: !3334)
!3379 = !DILocation(line: 455, column: 31, scope: !3334)
!3380 = !DILocation(line: 455, column: 11, scope: !3334)
!3381 = !DILocation(line: 455, column: 9, scope: !3334)
!3382 = !DILocation(line: 457, column: 12, scope: !3334)
!3383 = !DILocation(line: 457, column: 5, scope: !3334)
!3384 = distinct !DISubprogram(name: "decode_tilehdr", scope: !916, file: !916, line: 336, type: !1643, isLocal: true, isDefinition: true, scopeLine: 337, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!3385 = !DILocalVariable(name: "s", arg: 1, scope: !3384, file: !916, line: 336, type: !1645)
!3386 = !DILocation(line: 336, column: 43, scope: !3384)
!3387 = !DILocalVariable(name: "num_samples", scope: !3384, file: !916, line: 338, type: !3388)
!3388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !894, size: 128, align: 16, elements: !1038)
!3389 = !DILocation(line: 338, column: 14, scope: !3384)
!3390 = !DILocalVariable(name: "contains_subframe", scope: !3384, file: !916, line: 339, type: !3391)
!3391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !911, size: 64, align: 8, elements: !1038)
!3392 = !DILocation(line: 339, column: 13, scope: !3384)
!3393 = !DILocalVariable(name: "channels_for_cur_subframe", scope: !3384, file: !916, line: 340, type: !904)
!3394 = !DILocation(line: 340, column: 9, scope: !3384)
!3395 = !DILocation(line: 340, column: 37, scope: !3384)
!3396 = !DILocation(line: 340, column: 40, scope: !3384)
!3397 = !DILocalVariable(name: "fixed_channel_layout", scope: !3384, file: !916, line: 341, type: !904)
!3398 = !DILocation(line: 341, column: 9, scope: !3384)
!3399 = !DILocalVariable(name: "min_channel_len", scope: !3384, file: !916, line: 342, type: !904)
!3400 = !DILocation(line: 342, column: 9, scope: !3384)
!3401 = !DILocalVariable(name: "c", scope: !3384, file: !916, line: 343, type: !904)
!3402 = !DILocation(line: 343, column: 9, scope: !3384)
!3403 = !DILocalVariable(name: "tile_aligned", scope: !3384, file: !916, line: 343, type: !904)
!3404 = !DILocation(line: 343, column: 12, scope: !3384)
!3405 = !DILocation(line: 346, column: 12, scope: !3406)
!3406 = distinct !DILexicalBlock(scope: !3384, file: !916, line: 346, column: 5)
!3407 = !DILocation(line: 346, column: 10, scope: !3406)
!3408 = !DILocation(line: 346, column: 17, scope: !3409)
!3409 = !DILexicalBlockFile(scope: !3410, file: !916, discriminator: 1)
!3410 = distinct !DILexicalBlock(scope: !3406, file: !916, line: 346, column: 5)
!3411 = !DILocation(line: 346, column: 21, scope: !3409)
!3412 = !DILocation(line: 346, column: 24, scope: !3409)
!3413 = !DILocation(line: 346, column: 19, scope: !3409)
!3414 = !DILocation(line: 346, column: 5, scope: !3409)
!3415 = !DILocation(line: 347, column: 20, scope: !3410)
!3416 = !DILocation(line: 347, column: 9, scope: !3410)
!3417 = !DILocation(line: 347, column: 12, scope: !3410)
!3418 = !DILocation(line: 347, column: 23, scope: !3410)
!3419 = !DILocation(line: 347, column: 37, scope: !3410)
!3420 = !DILocation(line: 346, column: 39, scope: !3421)
!3421 = !DILexicalBlockFile(scope: !3410, file: !916, discriminator: 2)
!3422 = !DILocation(line: 346, column: 5, scope: !3421)
!3423 = distinct !{!3423, !3424}
!3424 = !DILocation(line: 346, column: 5, scope: !3384)
!3425 = !DILocation(line: 349, column: 31, scope: !3384)
!3426 = !DILocation(line: 349, column: 34, scope: !3384)
!3427 = !DILocation(line: 349, column: 20, scope: !3384)
!3428 = !DILocation(line: 349, column: 18, scope: !3384)
!3429 = !DILocation(line: 350, column: 9, scope: !3430)
!3430 = distinct !DILexicalBlock(scope: !3384, file: !916, line: 350, column: 9)
!3431 = !DILocation(line: 350, column: 12, scope: !3430)
!3432 = !DILocation(line: 350, column: 30, scope: !3430)
!3433 = !DILocation(line: 350, column: 35, scope: !3430)
!3434 = !DILocation(line: 350, column: 38, scope: !3435)
!3435 = !DILexicalBlockFile(scope: !3430, file: !916, discriminator: 1)
!3436 = !DILocation(line: 350, column: 9, scope: !3435)
!3437 = !DILocation(line: 351, column: 30, scope: !3430)
!3438 = !DILocation(line: 351, column: 9, scope: !3430)
!3439 = !DILocation(line: 354, column: 5, scope: !3384)
!3440 = distinct !{!3440, !3439}
!3441 = !DILocalVariable(name: "subframe_len", scope: !3442, file: !916, line: 355, type: !904)
!3442 = distinct !DILexicalBlock(scope: !3384, file: !916, line: 354, column: 8)
!3443 = !DILocation(line: 355, column: 13, scope: !3442)
!3444 = !DILocalVariable(name: "in_use", scope: !3442, file: !916, line: 355, type: !904)
!3445 = !DILocation(line: 355, column: 27, scope: !3442)
!3446 = !DILocation(line: 358, column: 16, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3442, file: !916, line: 358, column: 9)
!3448 = !DILocation(line: 358, column: 14, scope: !3447)
!3449 = !DILocation(line: 358, column: 21, scope: !3450)
!3450 = !DILexicalBlockFile(scope: !3451, file: !916, discriminator: 1)
!3451 = distinct !DILexicalBlock(scope: !3447, file: !916, line: 358, column: 9)
!3452 = !DILocation(line: 358, column: 25, scope: !3450)
!3453 = !DILocation(line: 358, column: 28, scope: !3450)
!3454 = !DILocation(line: 358, column: 23, scope: !3450)
!3455 = !DILocation(line: 358, column: 9, scope: !3450)
!3456 = !DILocation(line: 359, column: 29, scope: !3457)
!3457 = distinct !DILexicalBlock(scope: !3458, file: !916, line: 359, column: 17)
!3458 = distinct !DILexicalBlock(scope: !3451, file: !916, line: 358, column: 47)
!3459 = !DILocation(line: 359, column: 17, scope: !3457)
!3460 = !DILocation(line: 359, column: 35, scope: !3457)
!3461 = !DILocation(line: 359, column: 32, scope: !3457)
!3462 = !DILocation(line: 359, column: 17, scope: !3458)
!3463 = !DILocation(line: 360, column: 21, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3465, file: !916, line: 360, column: 21)
!3465 = distinct !DILexicalBlock(scope: !3457, file: !916, line: 359, column: 52)
!3466 = !DILocation(line: 360, column: 42, scope: !3464)
!3467 = !DILocation(line: 360, column: 45, scope: !3468)
!3468 = !DILexicalBlockFile(scope: !3464, file: !916, discriminator: 1)
!3469 = !DILocation(line: 360, column: 71, scope: !3468)
!3470 = !DILocation(line: 360, column: 76, scope: !3468)
!3471 = !DILocation(line: 361, column: 21, scope: !3464)
!3472 = !DILocation(line: 361, column: 40, scope: !3464)
!3473 = !DILocation(line: 361, column: 43, scope: !3464)
!3474 = !DILocation(line: 361, column: 63, scope: !3464)
!3475 = !DILocation(line: 361, column: 66, scope: !3464)
!3476 = !DILocation(line: 361, column: 61, scope: !3464)
!3477 = !DILocation(line: 361, column: 37, scope: !3464)
!3478 = !DILocation(line: 360, column: 21, scope: !3479)
!3479 = !DILexicalBlockFile(scope: !3465, file: !916, discriminator: 2)
!3480 = !DILocation(line: 362, column: 39, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3464, file: !916, line: 361, column: 93)
!3482 = !DILocation(line: 362, column: 21, scope: !3481)
!3483 = !DILocation(line: 362, column: 42, scope: !3481)
!3484 = !DILocation(line: 363, column: 17, scope: !3481)
!3485 = !DILocation(line: 364, column: 55, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !3464, file: !916, line: 363, column: 24)
!3487 = !DILocation(line: 364, column: 58, scope: !3486)
!3488 = !DILocation(line: 364, column: 44, scope: !3486)
!3489 = !DILocation(line: 364, column: 39, scope: !3486)
!3490 = !DILocation(line: 364, column: 21, scope: !3486)
!3491 = !DILocation(line: 364, column: 42, scope: !3486)
!3492 = !DILocation(line: 366, column: 45, scope: !3465)
!3493 = !DILocation(line: 366, column: 27, scope: !3465)
!3494 = !DILocation(line: 366, column: 24, scope: !3465)
!3495 = !DILocation(line: 367, column: 13, scope: !3465)
!3496 = !DILocation(line: 368, column: 35, scope: !3457)
!3497 = !DILocation(line: 368, column: 17, scope: !3457)
!3498 = !DILocation(line: 368, column: 38, scope: !3457)
!3499 = !DILocation(line: 369, column: 9, scope: !3458)
!3500 = !DILocation(line: 358, column: 43, scope: !3501)
!3501 = !DILexicalBlockFile(scope: !3451, file: !916, discriminator: 2)
!3502 = !DILocation(line: 358, column: 9, scope: !3501)
!3503 = distinct !{!3503, !3504}
!3504 = !DILocation(line: 358, column: 9, scope: !3442)
!3505 = !DILocation(line: 371, column: 14, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !3442, file: !916, line: 371, column: 13)
!3507 = !DILocation(line: 371, column: 13, scope: !3442)
!3508 = !DILocation(line: 372, column: 20, scope: !3509)
!3509 = distinct !DILexicalBlock(scope: !3506, file: !916, line: 371, column: 22)
!3510 = !DILocation(line: 372, column: 23, scope: !3509)
!3511 = !DILocation(line: 372, column: 13, scope: !3509)
!3512 = !DILocation(line: 374, column: 13, scope: !3509)
!3513 = !DILocation(line: 378, column: 52, scope: !3514)
!3514 = distinct !DILexicalBlock(scope: !3442, file: !916, line: 378, column: 13)
!3515 = !DILocation(line: 378, column: 55, scope: !3514)
!3516 = !DILocation(line: 378, column: 29, scope: !3514)
!3517 = !DILocation(line: 378, column: 27, scope: !3514)
!3518 = !DILocation(line: 378, column: 73, scope: !3514)
!3519 = !DILocation(line: 378, column: 13, scope: !3442)
!3520 = !DILocation(line: 379, column: 13, scope: !3514)
!3521 = !DILocation(line: 381, column: 28, scope: !3442)
!3522 = !DILocation(line: 381, column: 25, scope: !3442)
!3523 = !DILocation(line: 382, column: 16, scope: !3524)
!3524 = distinct !DILexicalBlock(scope: !3442, file: !916, line: 382, column: 9)
!3525 = !DILocation(line: 382, column: 14, scope: !3524)
!3526 = !DILocation(line: 382, column: 21, scope: !3527)
!3527 = !DILexicalBlockFile(scope: !3528, file: !916, discriminator: 1)
!3528 = distinct !DILexicalBlock(scope: !3524, file: !916, line: 382, column: 9)
!3529 = !DILocation(line: 382, column: 25, scope: !3527)
!3530 = !DILocation(line: 382, column: 28, scope: !3527)
!3531 = !DILocation(line: 382, column: 23, scope: !3527)
!3532 = !DILocation(line: 382, column: 9, scope: !3527)
!3533 = !DILocalVariable(name: "chan", scope: !3534, file: !916, line: 383, type: !3535)
!3534 = distinct !DILexicalBlock(scope: !3528, file: !916, line: 382, column: 47)
!3535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 64, align: 64)
!3536 = !DILocation(line: 383, column: 30, scope: !3534)
!3537 = !DILocation(line: 383, column: 49, scope: !3534)
!3538 = !DILocation(line: 383, column: 38, scope: !3534)
!3539 = !DILocation(line: 383, column: 41, scope: !3534)
!3540 = !DILocation(line: 385, column: 35, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3534, file: !916, line: 385, column: 17)
!3542 = !DILocation(line: 385, column: 17, scope: !3541)
!3543 = !DILocation(line: 385, column: 17, scope: !3534)
!3544 = !DILocation(line: 386, column: 21, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3546, file: !916, line: 386, column: 21)
!3546 = distinct !DILexicalBlock(scope: !3541, file: !916, line: 385, column: 39)
!3547 = !DILocation(line: 386, column: 27, scope: !3545)
!3548 = !DILocation(line: 386, column: 41, scope: !3545)
!3549 = !DILocation(line: 386, column: 21, scope: !3546)
!3550 = !DILocation(line: 387, column: 28, scope: !3551)
!3551 = distinct !DILexicalBlock(scope: !3545, file: !916, line: 386, column: 48)
!3552 = !DILocation(line: 387, column: 31, scope: !3551)
!3553 = !DILocation(line: 387, column: 21, scope: !3551)
!3554 = !DILocation(line: 389, column: 21, scope: !3551)
!3555 = !DILocation(line: 391, column: 59, scope: !3546)
!3556 = !DILocation(line: 391, column: 36, scope: !3546)
!3557 = !DILocation(line: 391, column: 42, scope: !3546)
!3558 = !DILocation(line: 391, column: 17, scope: !3546)
!3559 = !DILocation(line: 391, column: 23, scope: !3546)
!3560 = !DILocation(line: 391, column: 57, scope: !3546)
!3561 = !DILocation(line: 392, column: 35, scope: !3546)
!3562 = !DILocation(line: 392, column: 29, scope: !3546)
!3563 = !DILocation(line: 392, column: 17, scope: !3546)
!3564 = !DILocation(line: 392, column: 32, scope: !3546)
!3565 = !DILocation(line: 393, column: 19, scope: !3546)
!3566 = !DILocation(line: 393, column: 25, scope: !3546)
!3567 = !DILocation(line: 393, column: 17, scope: !3546)
!3568 = !DILocation(line: 394, column: 33, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3546, file: !916, line: 394, column: 21)
!3570 = !DILocation(line: 394, column: 21, scope: !3569)
!3571 = !DILocation(line: 394, column: 38, scope: !3569)
!3572 = !DILocation(line: 394, column: 41, scope: !3569)
!3573 = !DILocation(line: 394, column: 36, scope: !3569)
!3574 = !DILocation(line: 394, column: 21, scope: !3546)
!3575 = !DILocation(line: 395, column: 28, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !3569, file: !916, line: 394, column: 60)
!3577 = !DILocation(line: 395, column: 31, scope: !3576)
!3578 = !DILocation(line: 397, column: 40, scope: !3576)
!3579 = !DILocation(line: 397, column: 28, scope: !3576)
!3580 = !DILocation(line: 397, column: 44, scope: !3576)
!3581 = !DILocation(line: 397, column: 47, scope: !3576)
!3582 = !DILocation(line: 395, column: 21, scope: !3576)
!3583 = !DILocation(line: 398, column: 21, scope: !3576)
!3584 = !DILocation(line: 400, column: 13, scope: !3546)
!3585 = !DILocation(line: 400, column: 36, scope: !3586)
!3586 = !DILexicalBlockFile(scope: !3587, file: !916, discriminator: 1)
!3587 = distinct !DILexicalBlock(scope: !3541, file: !916, line: 400, column: 24)
!3588 = !DILocation(line: 400, column: 24, scope: !3586)
!3589 = !DILocation(line: 400, column: 42, scope: !3586)
!3590 = !DILocation(line: 400, column: 39, scope: !3586)
!3591 = !DILocation(line: 401, column: 33, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3593, file: !916, line: 401, column: 21)
!3593 = distinct !DILexicalBlock(scope: !3587, file: !916, line: 400, column: 59)
!3594 = !DILocation(line: 401, column: 21, scope: !3592)
!3595 = !DILocation(line: 401, column: 38, scope: !3592)
!3596 = !DILocation(line: 401, column: 36, scope: !3592)
!3597 = !DILocation(line: 401, column: 21, scope: !3593)
!3598 = !DILocation(line: 402, column: 47, scope: !3599)
!3599 = distinct !DILexicalBlock(scope: !3592, file: !916, line: 401, column: 55)
!3600 = !DILocation(line: 403, column: 51, scope: !3599)
!3601 = !DILocation(line: 403, column: 39, scope: !3599)
!3602 = !DILocation(line: 403, column: 37, scope: !3599)
!3603 = !DILocation(line: 404, column: 17, scope: !3599)
!3604 = !DILocation(line: 405, column: 17, scope: !3593)
!3605 = !DILocation(line: 406, column: 13, scope: !3593)
!3606 = !DILocation(line: 407, column: 9, scope: !3534)
!3607 = !DILocation(line: 382, column: 43, scope: !3608)
!3608 = !DILexicalBlockFile(scope: !3528, file: !916, discriminator: 2)
!3609 = !DILocation(line: 382, column: 9, scope: !3608)
!3610 = distinct !{!3610, !3611}
!3611 = !DILocation(line: 382, column: 9, scope: !3442)
!3612 = !DILocation(line: 408, column: 5, scope: !3442)
!3613 = !DILocation(line: 408, column: 14, scope: !3614)
!3614 = !DILexicalBlockFile(scope: !3384, file: !916, discriminator: 1)
!3615 = !DILocation(line: 408, column: 32, scope: !3614)
!3616 = !DILocation(line: 408, column: 35, scope: !3614)
!3617 = !DILocation(line: 408, column: 30, scope: !3614)
!3618 = !DILocation(line: 408, column: 5, scope: !3614)
!3619 = !DILocation(line: 410, column: 12, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3384, file: !916, line: 410, column: 5)
!3621 = !DILocation(line: 410, column: 10, scope: !3620)
!3622 = !DILocation(line: 410, column: 17, scope: !3623)
!3623 = !DILexicalBlockFile(scope: !3624, file: !916, discriminator: 1)
!3624 = distinct !DILexicalBlock(scope: !3620, file: !916, line: 410, column: 5)
!3625 = !DILocation(line: 410, column: 21, scope: !3623)
!3626 = !DILocation(line: 410, column: 24, scope: !3623)
!3627 = !DILocation(line: 410, column: 19, scope: !3623)
!3628 = !DILocation(line: 410, column: 5, scope: !3623)
!3629 = !DILocalVariable(name: "i", scope: !3630, file: !916, line: 411, type: !904)
!3630 = distinct !DILexicalBlock(scope: !3624, file: !916, line: 410, column: 43)
!3631 = !DILocation(line: 411, column: 13, scope: !3630)
!3632 = !DILocalVariable(name: "offset", scope: !3630, file: !916, line: 411, type: !904)
!3633 = !DILocation(line: 411, column: 16, scope: !3630)
!3634 = !DILocation(line: 412, column: 16, scope: !3635)
!3635 = distinct !DILexicalBlock(scope: !3630, file: !916, line: 412, column: 9)
!3636 = !DILocation(line: 412, column: 14, scope: !3635)
!3637 = !DILocation(line: 412, column: 21, scope: !3638)
!3638 = !DILexicalBlockFile(scope: !3639, file: !916, discriminator: 1)
!3639 = distinct !DILexicalBlock(scope: !3635, file: !916, line: 412, column: 9)
!3640 = !DILocation(line: 412, column: 36, scope: !3638)
!3641 = !DILocation(line: 412, column: 25, scope: !3638)
!3642 = !DILocation(line: 412, column: 28, scope: !3638)
!3643 = !DILocation(line: 412, column: 39, scope: !3638)
!3644 = !DILocation(line: 412, column: 23, scope: !3638)
!3645 = !DILocation(line: 412, column: 9, scope: !3638)
!3646 = !DILocation(line: 413, column: 49, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !3639, file: !916, line: 412, column: 59)
!3648 = !DILocation(line: 413, column: 44, scope: !3647)
!3649 = !DILocation(line: 413, column: 13, scope: !3647)
!3650 = !DILocation(line: 413, column: 24, scope: !3647)
!3651 = !DILocation(line: 413, column: 16, scope: !3647)
!3652 = !DILocation(line: 413, column: 27, scope: !3647)
!3653 = !DILocation(line: 413, column: 47, scope: !3647)
!3654 = !DILocation(line: 414, column: 50, scope: !3647)
!3655 = !DILocation(line: 414, column: 23, scope: !3647)
!3656 = !DILocation(line: 414, column: 34, scope: !3647)
!3657 = !DILocation(line: 414, column: 26, scope: !3647)
!3658 = !DILocation(line: 414, column: 37, scope: !3647)
!3659 = !DILocation(line: 414, column: 20, scope: !3647)
!3660 = !DILocation(line: 415, column: 9, scope: !3647)
!3661 = !DILocation(line: 412, column: 55, scope: !3662)
!3662 = !DILexicalBlockFile(scope: !3639, file: !916, discriminator: 2)
!3663 = !DILocation(line: 412, column: 9, scope: !3662)
!3664 = distinct !{!3664, !3665}
!3665 = !DILocation(line: 412, column: 9, scope: !3630)
!3666 = !DILocation(line: 416, column: 5, scope: !3630)
!3667 = !DILocation(line: 410, column: 39, scope: !3668)
!3668 = !DILexicalBlockFile(scope: !3624, file: !916, discriminator: 2)
!3669 = !DILocation(line: 410, column: 5, scope: !3668)
!3670 = distinct !{!3670, !3671}
!3671 = !DILocation(line: 410, column: 5, scope: !3384)
!3672 = !DILocation(line: 418, column: 5, scope: !3384)
!3673 = !DILocation(line: 419, column: 1, scope: !3384)
!3674 = distinct !DISubprogram(name: "decode_subframe", scope: !916, file: !916, line: 833, type: !1643, isLocal: true, isDefinition: true, scopeLine: 834, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!3675 = !DILocalVariable(name: "s", arg: 1, scope: !3674, file: !916, line: 833, type: !1645)
!3676 = !DILocation(line: 833, column: 44, scope: !3674)
!3677 = !DILocalVariable(name: "offset", scope: !3674, file: !916, line: 835, type: !904)
!3678 = !DILocation(line: 835, column: 9, scope: !3674)
!3679 = !DILocation(line: 835, column: 18, scope: !3674)
!3680 = !DILocation(line: 835, column: 21, scope: !3674)
!3681 = !DILocalVariable(name: "subframe_len", scope: !3674, file: !916, line: 836, type: !904)
!3682 = !DILocation(line: 836, column: 9, scope: !3674)
!3683 = !DILocation(line: 836, column: 24, scope: !3674)
!3684 = !DILocation(line: 836, column: 27, scope: !3674)
!3685 = !DILocalVariable(name: "total_samples", scope: !3674, file: !916, line: 837, type: !904)
!3686 = !DILocation(line: 837, column: 9, scope: !3674)
!3687 = !DILocation(line: 837, column: 25, scope: !3674)
!3688 = !DILocation(line: 837, column: 28, scope: !3674)
!3689 = !DILocation(line: 837, column: 48, scope: !3674)
!3690 = !DILocation(line: 837, column: 51, scope: !3674)
!3691 = !DILocation(line: 837, column: 46, scope: !3674)
!3692 = !DILocalVariable(name: "i", scope: !3674, file: !916, line: 838, type: !904)
!3693 = !DILocation(line: 838, column: 9, scope: !3674)
!3694 = !DILocalVariable(name: "j", scope: !3674, file: !916, line: 838, type: !904)
!3695 = !DILocation(line: 838, column: 12, scope: !3674)
!3696 = !DILocalVariable(name: "rawpcm_tile", scope: !3674, file: !916, line: 838, type: !904)
!3697 = !DILocation(line: 838, column: 15, scope: !3674)
!3698 = !DILocalVariable(name: "padding_zeroes", scope: !3674, file: !916, line: 838, type: !904)
!3699 = !DILocation(line: 838, column: 28, scope: !3674)
!3700 = !DILocalVariable(name: "res", scope: !3674, file: !916, line: 838, type: !904)
!3701 = !DILocation(line: 838, column: 44, scope: !3674)
!3702 = !DILocation(line: 840, column: 42, scope: !3674)
!3703 = !DILocation(line: 840, column: 45, scope: !3674)
!3704 = !DILocation(line: 840, column: 26, scope: !3674)
!3705 = !DILocation(line: 840, column: 5, scope: !3674)
!3706 = !DILocation(line: 840, column: 8, scope: !3674)
!3707 = !DILocation(line: 840, column: 24, scope: !3674)
!3708 = !DILocation(line: 845, column: 12, scope: !3709)
!3709 = distinct !DILexicalBlock(scope: !3674, file: !916, line: 845, column: 5)
!3710 = !DILocation(line: 845, column: 10, scope: !3709)
!3711 = !DILocation(line: 845, column: 17, scope: !3712)
!3712 = !DILexicalBlockFile(scope: !3713, file: !916, discriminator: 1)
!3713 = distinct !DILexicalBlock(scope: !3709, file: !916, line: 845, column: 5)
!3714 = !DILocation(line: 845, column: 21, scope: !3712)
!3715 = !DILocation(line: 845, column: 24, scope: !3712)
!3716 = !DILocation(line: 845, column: 19, scope: !3712)
!3717 = !DILocation(line: 845, column: 5, scope: !3712)
!3718 = !DILocation(line: 846, column: 13, scope: !3719)
!3719 = distinct !DILexicalBlock(scope: !3720, file: !916, line: 846, column: 13)
!3720 = distinct !DILexicalBlock(scope: !3713, file: !916, line: 845, column: 43)
!3721 = !DILocation(line: 846, column: 33, scope: !3719)
!3722 = !DILocation(line: 846, column: 22, scope: !3719)
!3723 = !DILocation(line: 846, column: 25, scope: !3719)
!3724 = !DILocation(line: 846, column: 36, scope: !3719)
!3725 = !DILocation(line: 846, column: 20, scope: !3719)
!3726 = !DILocation(line: 846, column: 13, scope: !3720)
!3727 = !DILocation(line: 847, column: 33, scope: !3728)
!3728 = distinct !DILexicalBlock(scope: !3719, file: !916, line: 846, column: 53)
!3729 = !DILocation(line: 847, column: 22, scope: !3728)
!3730 = !DILocation(line: 847, column: 25, scope: !3728)
!3731 = !DILocation(line: 847, column: 36, scope: !3728)
!3732 = !DILocation(line: 847, column: 20, scope: !3728)
!3733 = !DILocation(line: 849, column: 55, scope: !3728)
!3734 = !DILocation(line: 849, column: 44, scope: !3728)
!3735 = !DILocation(line: 849, column: 47, scope: !3728)
!3736 = !DILocation(line: 849, column: 58, scope: !3728)
!3737 = !DILocation(line: 849, column: 17, scope: !3728)
!3738 = !DILocation(line: 849, column: 28, scope: !3728)
!3739 = !DILocation(line: 849, column: 20, scope: !3728)
!3740 = !DILocation(line: 849, column: 31, scope: !3728)
!3741 = !DILocation(line: 848, column: 26, scope: !3728)
!3742 = !DILocation(line: 850, column: 9, scope: !3728)
!3743 = !DILocation(line: 851, column: 5, scope: !3720)
!3744 = !DILocation(line: 845, column: 39, scope: !3745)
!3745 = !DILexicalBlockFile(scope: !3713, file: !916, discriminator: 2)
!3746 = !DILocation(line: 845, column: 5, scope: !3745)
!3747 = distinct !{!3747, !3748}
!3748 = !DILocation(line: 845, column: 5, scope: !3674)
!3749 = !DILocation(line: 854, column: 5, scope: !3674)
!3750 = !DILocation(line: 854, column: 8, scope: !3674)
!3751 = !DILocation(line: 854, column: 34, scope: !3674)
!3752 = !DILocation(line: 855, column: 12, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3674, file: !916, line: 855, column: 5)
!3754 = !DILocation(line: 855, column: 10, scope: !3753)
!3755 = !DILocation(line: 855, column: 17, scope: !3756)
!3756 = !DILexicalBlockFile(scope: !3757, file: !916, discriminator: 1)
!3757 = distinct !DILexicalBlock(scope: !3753, file: !916, line: 855, column: 5)
!3758 = !DILocation(line: 855, column: 21, scope: !3756)
!3759 = !DILocation(line: 855, column: 24, scope: !3756)
!3760 = !DILocation(line: 855, column: 19, scope: !3756)
!3761 = !DILocation(line: 855, column: 5, scope: !3756)
!3762 = !DILocalVariable(name: "cur_subframe", scope: !3763, file: !916, line: 856, type: !942)
!3763 = distinct !DILexicalBlock(scope: !3757, file: !916, line: 855, column: 43)
!3764 = !DILocation(line: 856, column: 19, scope: !3763)
!3765 = !DILocation(line: 856, column: 45, scope: !3763)
!3766 = !DILocation(line: 856, column: 34, scope: !3763)
!3767 = !DILocation(line: 856, column: 37, scope: !3763)
!3768 = !DILocation(line: 856, column: 48, scope: !3763)
!3769 = !DILocation(line: 858, column: 37, scope: !3763)
!3770 = !DILocation(line: 858, column: 26, scope: !3763)
!3771 = !DILocation(line: 858, column: 29, scope: !3763)
!3772 = !DILocation(line: 858, column: 40, scope: !3763)
!3773 = !DILocation(line: 858, column: 23, scope: !3763)
!3774 = !DILocation(line: 861, column: 13, scope: !3775)
!3775 = distinct !DILexicalBlock(scope: !3763, file: !916, line: 861, column: 13)
!3776 = !DILocation(line: 861, column: 34, scope: !3775)
!3777 = !DILocation(line: 861, column: 23, scope: !3775)
!3778 = !DILocation(line: 861, column: 26, scope: !3775)
!3779 = !DILocation(line: 861, column: 37, scope: !3775)
!3780 = !DILocation(line: 861, column: 20, scope: !3775)
!3781 = !DILocation(line: 861, column: 53, scope: !3775)
!3782 = !DILocation(line: 862, column: 13, scope: !3775)
!3783 = !DILocation(line: 862, column: 56, scope: !3775)
!3784 = !DILocation(line: 862, column: 29, scope: !3775)
!3785 = !DILocation(line: 862, column: 40, scope: !3775)
!3786 = !DILocation(line: 862, column: 32, scope: !3775)
!3787 = !DILocation(line: 862, column: 43, scope: !3775)
!3788 = !DILocation(line: 862, column: 26, scope: !3775)
!3789 = !DILocation(line: 861, column: 13, scope: !3790)
!3790 = !DILexicalBlockFile(scope: !3763, file: !916, discriminator: 1)
!3791 = !DILocation(line: 863, column: 57, scope: !3792)
!3792 = distinct !DILexicalBlock(scope: !3775, file: !916, line: 862, column: 71)
!3793 = !DILocation(line: 863, column: 30, scope: !3792)
!3794 = !DILocation(line: 863, column: 41, scope: !3792)
!3795 = !DILocation(line: 863, column: 33, scope: !3792)
!3796 = !DILocation(line: 863, column: 44, scope: !3792)
!3797 = !DILocation(line: 863, column: 27, scope: !3792)
!3798 = !DILocation(line: 865, column: 44, scope: !3792)
!3799 = !DILocation(line: 865, column: 17, scope: !3792)
!3800 = !DILocation(line: 865, column: 28, scope: !3792)
!3801 = !DILocation(line: 865, column: 20, scope: !3792)
!3802 = !DILocation(line: 865, column: 31, scope: !3792)
!3803 = !DILocation(line: 864, column: 24, scope: !3792)
!3804 = !DILocation(line: 864, column: 13, scope: !3792)
!3805 = !DILocation(line: 864, column: 16, scope: !3792)
!3806 = !DILocation(line: 864, column: 27, scope: !3792)
!3807 = !DILocation(line: 864, column: 43, scope: !3792)
!3808 = !DILocation(line: 866, column: 81, scope: !3792)
!3809 = !DILocation(line: 866, column: 49, scope: !3792)
!3810 = !DILocation(line: 866, column: 52, scope: !3792)
!3811 = !DILocation(line: 866, column: 13, scope: !3792)
!3812 = !DILocation(line: 866, column: 16, scope: !3792)
!3813 = !DILocation(line: 866, column: 79, scope: !3792)
!3814 = !DILocation(line: 867, column: 15, scope: !3792)
!3815 = !DILocation(line: 867, column: 18, scope: !3792)
!3816 = !DILocation(line: 867, column: 13, scope: !3792)
!3817 = !DILocation(line: 868, column: 9, scope: !3792)
!3818 = !DILocation(line: 869, column: 5, scope: !3763)
!3819 = !DILocation(line: 855, column: 39, scope: !3820)
!3820 = !DILexicalBlockFile(scope: !3757, file: !916, discriminator: 2)
!3821 = !DILocation(line: 855, column: 5, scope: !3820)
!3822 = distinct !{!3822, !3823}
!3823 = !DILocation(line: 855, column: 5, scope: !3674)
!3824 = !DILocation(line: 873, column: 10, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !3674, file: !916, line: 873, column: 9)
!3826 = !DILocation(line: 873, column: 9, scope: !3674)
!3827 = !DILocation(line: 874, column: 9, scope: !3825)
!3828 = !DILocation(line: 874, column: 12, scope: !3825)
!3829 = !DILocation(line: 874, column: 33, scope: !3825)
!3830 = !DILocation(line: 877, column: 35, scope: !3674)
!3831 = !DILocation(line: 877, column: 38, scope: !3674)
!3832 = !DILocation(line: 877, column: 24, scope: !3674)
!3833 = !DILocation(line: 877, column: 5, scope: !3674)
!3834 = !DILocation(line: 877, column: 8, scope: !3674)
!3835 = !DILocation(line: 877, column: 22, scope: !3674)
!3836 = !DILocation(line: 878, column: 9, scope: !3837)
!3837 = distinct !DILexicalBlock(scope: !3674, file: !916, line: 878, column: 9)
!3838 = !DILocation(line: 878, column: 12, scope: !3837)
!3839 = !DILocation(line: 878, column: 9, scope: !3674)
!3840 = !DILocation(line: 879, column: 29, scope: !3841)
!3841 = distinct !DILexicalBlock(scope: !3837, file: !916, line: 878, column: 27)
!3842 = !DILocation(line: 879, column: 9, scope: !3841)
!3843 = !DILocation(line: 881, column: 41, scope: !3841)
!3844 = !DILocation(line: 881, column: 44, scope: !3841)
!3845 = !DILocation(line: 881, column: 30, scope: !3841)
!3846 = !DILocation(line: 881, column: 9, scope: !3841)
!3847 = !DILocation(line: 881, column: 12, scope: !3841)
!3848 = !DILocation(line: 881, column: 28, scope: !3841)
!3849 = !DILocation(line: 882, column: 13, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3841, file: !916, line: 882, column: 13)
!3851 = !DILocation(line: 882, column: 16, scope: !3850)
!3852 = !DILocation(line: 882, column: 13, scope: !3841)
!3853 = !DILocation(line: 883, column: 35, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !3850, file: !916, line: 882, column: 33)
!3855 = !DILocation(line: 883, column: 38, scope: !3854)
!3856 = !DILocation(line: 883, column: 13, scope: !3854)
!3857 = !DILocation(line: 884, column: 13, scope: !3854)
!3858 = !DILocation(line: 886, column: 38, scope: !3841)
!3859 = !DILocation(line: 886, column: 41, scope: !3841)
!3860 = !DILocation(line: 886, column: 27, scope: !3841)
!3861 = !DILocation(line: 886, column: 9, scope: !3841)
!3862 = !DILocation(line: 886, column: 12, scope: !3841)
!3863 = !DILocation(line: 886, column: 25, scope: !3841)
!3864 = !DILocation(line: 887, column: 44, scope: !3841)
!3865 = !DILocation(line: 887, column: 47, scope: !3841)
!3866 = !DILocation(line: 887, column: 33, scope: !3841)
!3867 = !DILocation(line: 887, column: 9, scope: !3841)
!3868 = !DILocation(line: 887, column: 12, scope: !3841)
!3869 = !DILocation(line: 887, column: 31, scope: !3841)
!3870 = !DILocation(line: 888, column: 34, scope: !3841)
!3871 = !DILocation(line: 888, column: 37, scope: !3841)
!3872 = !DILocation(line: 888, column: 23, scope: !3841)
!3873 = !DILocation(line: 888, column: 9, scope: !3841)
!3874 = !DILocation(line: 888, column: 12, scope: !3841)
!3875 = !DILocation(line: 888, column: 21, scope: !3841)
!3876 = !DILocation(line: 890, column: 13, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !3841, file: !916, line: 890, column: 13)
!3878 = !DILocation(line: 890, column: 16, scope: !3877)
!3879 = !DILocation(line: 890, column: 13, scope: !3841)
!3880 = !DILocation(line: 891, column: 30, scope: !3877)
!3881 = !DILocation(line: 891, column: 13, scope: !3877)
!3882 = !DILocation(line: 893, column: 13, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3841, file: !916, line: 893, column: 13)
!3884 = !DILocation(line: 893, column: 16, scope: !3883)
!3885 = !DILocation(line: 893, column: 13, scope: !3841)
!3886 = !DILocation(line: 894, column: 26, scope: !3883)
!3887 = !DILocation(line: 894, column: 13, scope: !3883)
!3888 = !DILocation(line: 896, column: 33, scope: !3889)
!3889 = distinct !DILexicalBlock(scope: !3841, file: !916, line: 896, column: 13)
!3890 = !DILocation(line: 896, column: 20, scope: !3889)
!3891 = !DILocation(line: 896, column: 18, scope: !3889)
!3892 = !DILocation(line: 896, column: 37, scope: !3889)
!3893 = !DILocation(line: 896, column: 13, scope: !3841)
!3894 = !DILocation(line: 897, column: 20, scope: !3889)
!3895 = !DILocation(line: 897, column: 13, scope: !3889)
!3896 = !DILocation(line: 898, column: 39, scope: !3841)
!3897 = !DILocation(line: 898, column: 42, scope: !3841)
!3898 = !DILocation(line: 898, column: 29, scope: !3841)
!3899 = !DILocation(line: 898, column: 9, scope: !3841)
!3900 = !DILocation(line: 898, column: 12, scope: !3841)
!3901 = !DILocation(line: 898, column: 27, scope: !3841)
!3902 = !DILocation(line: 899, column: 39, scope: !3841)
!3903 = !DILocation(line: 899, column: 42, scope: !3841)
!3904 = !DILocation(line: 899, column: 29, scope: !3841)
!3905 = !DILocation(line: 899, column: 49, scope: !3841)
!3906 = !DILocation(line: 899, column: 9, scope: !3841)
!3907 = !DILocation(line: 899, column: 12, scope: !3841)
!3908 = !DILocation(line: 899, column: 27, scope: !3841)
!3909 = !DILocation(line: 901, column: 21, scope: !3841)
!3910 = !DILocation(line: 901, column: 9, scope: !3841)
!3911 = !DILocation(line: 902, column: 5, scope: !3841)
!3912 = !DILocation(line: 904, column: 30, scope: !3674)
!3913 = !DILocation(line: 904, column: 33, scope: !3674)
!3914 = !DILocation(line: 904, column: 19, scope: !3674)
!3915 = !DILocation(line: 904, column: 17, scope: !3674)
!3916 = !DILocation(line: 906, column: 10, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3674, file: !916, line: 906, column: 9)
!3918 = !DILocation(line: 906, column: 22, scope: !3917)
!3919 = !DILocation(line: 906, column: 26, scope: !3920)
!3920 = !DILexicalBlockFile(scope: !3917, file: !916, discriminator: 1)
!3921 = !DILocation(line: 906, column: 29, scope: !3920)
!3922 = !DILocation(line: 906, column: 41, scope: !3920)
!3923 = !DILocation(line: 906, column: 9, scope: !3920)
!3924 = !DILocation(line: 907, column: 16, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3917, file: !916, line: 906, column: 48)
!3926 = !DILocation(line: 907, column: 19, scope: !3925)
!3927 = !DILocation(line: 907, column: 9, scope: !3925)
!3928 = !DILocation(line: 909, column: 24, scope: !3925)
!3929 = !DILocation(line: 909, column: 27, scope: !3925)
!3930 = !DILocation(line: 909, column: 9, scope: !3925)
!3931 = !DILocation(line: 910, column: 9, scope: !3925)
!3932 = !DILocation(line: 914, column: 12, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3674, file: !916, line: 914, column: 5)
!3934 = !DILocation(line: 914, column: 10, scope: !3933)
!3935 = !DILocation(line: 914, column: 17, scope: !3936)
!3936 = !DILexicalBlockFile(scope: !3937, file: !916, discriminator: 1)
!3937 = distinct !DILexicalBlock(scope: !3933, file: !916, line: 914, column: 5)
!3938 = !DILocation(line: 914, column: 21, scope: !3936)
!3939 = !DILocation(line: 914, column: 24, scope: !3936)
!3940 = !DILocation(line: 914, column: 19, scope: !3936)
!3941 = !DILocation(line: 914, column: 5, scope: !3936)
!3942 = !DILocation(line: 915, column: 29, scope: !3937)
!3943 = !DILocation(line: 915, column: 9, scope: !3937)
!3944 = !DILocation(line: 915, column: 12, scope: !3937)
!3945 = !DILocation(line: 915, column: 32, scope: !3937)
!3946 = !DILocation(line: 914, column: 39, scope: !3947)
!3947 = !DILexicalBlockFile(scope: !3937, file: !916, discriminator: 2)
!3948 = !DILocation(line: 914, column: 5, scope: !3947)
!3949 = distinct !{!3949, !3950}
!3950 = !DILocation(line: 914, column: 5, scope: !3674)
!3951 = !DILocation(line: 917, column: 10, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3674, file: !916, line: 917, column: 9)
!3953 = !DILocation(line: 917, column: 9, scope: !3674)
!3954 = !DILocation(line: 918, column: 16, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !3956, file: !916, line: 918, column: 9)
!3956 = distinct !DILexicalBlock(scope: !3952, file: !916, line: 917, column: 23)
!3957 = !DILocation(line: 918, column: 14, scope: !3955)
!3958 = !DILocation(line: 918, column: 21, scope: !3959)
!3959 = !DILexicalBlockFile(scope: !3960, file: !916, discriminator: 1)
!3960 = distinct !DILexicalBlock(scope: !3955, file: !916, line: 918, column: 9)
!3961 = !DILocation(line: 918, column: 25, scope: !3959)
!3962 = !DILocation(line: 918, column: 28, scope: !3959)
!3963 = !DILocation(line: 918, column: 23, scope: !3959)
!3964 = !DILocation(line: 918, column: 9, scope: !3959)
!3965 = !DILocation(line: 919, column: 49, scope: !3960)
!3966 = !DILocation(line: 919, column: 52, scope: !3960)
!3967 = !DILocation(line: 919, column: 38, scope: !3960)
!3968 = !DILocation(line: 919, column: 33, scope: !3960)
!3969 = !DILocation(line: 919, column: 13, scope: !3960)
!3970 = !DILocation(line: 919, column: 16, scope: !3960)
!3971 = !DILocation(line: 919, column: 36, scope: !3960)
!3972 = !DILocation(line: 918, column: 43, scope: !3973)
!3973 = !DILexicalBlockFile(scope: !3960, file: !916, discriminator: 2)
!3974 = !DILocation(line: 918, column: 9, scope: !3973)
!3975 = distinct !{!3975, !3976}
!3976 = !DILocation(line: 918, column: 9, scope: !3956)
!3977 = !DILocation(line: 921, column: 13, scope: !3978)
!3978 = distinct !DILexicalBlock(scope: !3956, file: !916, line: 921, column: 13)
!3979 = !DILocation(line: 921, column: 16, scope: !3978)
!3980 = !DILocation(line: 921, column: 13, scope: !3956)
!3981 = !DILocation(line: 923, column: 36, scope: !3982)
!3982 = distinct !DILexicalBlock(scope: !3978, file: !916, line: 921, column: 24)
!3983 = !DILocation(line: 923, column: 39, scope: !3982)
!3984 = !DILocation(line: 923, column: 25, scope: !3982)
!3985 = !DILocation(line: 923, column: 13, scope: !3982)
!3986 = !DILocation(line: 923, column: 16, scope: !3982)
!3987 = !DILocation(line: 923, column: 23, scope: !3982)
!3988 = !DILocation(line: 924, column: 17, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3982, file: !916, line: 924, column: 17)
!3990 = !DILocation(line: 924, column: 20, scope: !3989)
!3991 = !DILocation(line: 924, column: 17, scope: !3982)
!3992 = !DILocation(line: 925, column: 28, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3989, file: !916, line: 924, column: 28)
!3994 = !DILocation(line: 925, column: 17, scope: !3993)
!3995 = !DILocation(line: 926, column: 39, scope: !3993)
!3996 = !DILocation(line: 926, column: 42, scope: !3993)
!3997 = !DILocation(line: 926, column: 17, scope: !3993)
!3998 = !DILocation(line: 928, column: 13, scope: !3993)
!3999 = !DILocation(line: 929, column: 9, scope: !3982)
!4000 = !DILocation(line: 930, column: 13, scope: !3978)
!4001 = !DILocation(line: 930, column: 16, scope: !3978)
!4002 = !DILocation(line: 930, column: 23, scope: !3978)
!4003 = !DILocation(line: 931, column: 5, scope: !3956)
!4004 = !DILocation(line: 934, column: 20, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !3674, file: !916, line: 934, column: 9)
!4006 = !DILocation(line: 934, column: 23, scope: !4005)
!4007 = !DILocation(line: 934, column: 9, scope: !4005)
!4008 = !DILocation(line: 934, column: 9, scope: !3674)
!4009 = !DILocation(line: 935, column: 36, scope: !4005)
!4010 = !DILocation(line: 935, column: 39, scope: !4005)
!4011 = !DILocation(line: 935, column: 26, scope: !4005)
!4012 = !DILocation(line: 935, column: 24, scope: !4005)
!4013 = !DILocation(line: 935, column: 9, scope: !4005)
!4014 = !DILocation(line: 937, column: 24, scope: !4005)
!4015 = !DILocation(line: 939, column: 9, scope: !4016)
!4016 = distinct !DILexicalBlock(scope: !3674, file: !916, line: 939, column: 9)
!4017 = !DILocation(line: 939, column: 9, scope: !3674)
!4018 = !DILocalVariable(name: "bits", scope: !4019, file: !916, line: 940, type: !904)
!4019 = distinct !DILexicalBlock(scope: !4016, file: !916, line: 939, column: 22)
!4020 = !DILocation(line: 940, column: 13, scope: !4019)
!4021 = !DILocation(line: 940, column: 20, scope: !4019)
!4022 = !DILocation(line: 940, column: 23, scope: !4019)
!4023 = !DILocation(line: 940, column: 41, scope: !4019)
!4024 = !DILocation(line: 940, column: 39, scope: !4019)
!4025 = !DILocation(line: 941, column: 13, scope: !4026)
!4026 = distinct !DILexicalBlock(scope: !4019, file: !916, line: 941, column: 13)
!4027 = !DILocation(line: 941, column: 18, scope: !4026)
!4028 = !DILocation(line: 941, column: 13, scope: !4019)
!4029 = !DILocation(line: 942, column: 20, scope: !4030)
!4030 = distinct !DILexicalBlock(scope: !4026, file: !916, line: 941, column: 24)
!4031 = !DILocation(line: 942, column: 23, scope: !4030)
!4032 = !DILocation(line: 942, column: 13, scope: !4030)
!4033 = !DILocation(line: 944, column: 13, scope: !4030)
!4034 = !DILocation(line: 946, column: 9, scope: !4019)
!4035 = distinct !{!4035, !4034}
!4036 = !DILocation(line: 946, column: 172, scope: !4037)
!4037 = !DILexicalBlockFile(scope: !4038, file: !916, discriminator: 1)
!4038 = distinct !DILexicalBlock(scope: !4019, file: !916, line: 946, column: 12)
!4039 = !DILocation(line: 949, column: 16, scope: !4040)
!4040 = distinct !DILexicalBlock(scope: !4019, file: !916, line: 949, column: 9)
!4041 = !DILocation(line: 949, column: 14, scope: !4040)
!4042 = !DILocation(line: 949, column: 21, scope: !4043)
!4043 = !DILexicalBlockFile(scope: !4044, file: !916, discriminator: 1)
!4044 = distinct !DILexicalBlock(scope: !4040, file: !916, line: 949, column: 9)
!4045 = !DILocation(line: 949, column: 25, scope: !4043)
!4046 = !DILocation(line: 949, column: 28, scope: !4043)
!4047 = !DILocation(line: 949, column: 23, scope: !4043)
!4048 = !DILocation(line: 949, column: 9, scope: !4043)
!4049 = !DILocation(line: 950, column: 20, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !4044, file: !916, line: 950, column: 13)
!4051 = !DILocation(line: 950, column: 18, scope: !4050)
!4052 = !DILocation(line: 950, column: 25, scope: !4053)
!4053 = !DILexicalBlockFile(scope: !4054, file: !916, discriminator: 1)
!4054 = distinct !DILexicalBlock(scope: !4050, file: !916, line: 950, column: 13)
!4055 = !DILocation(line: 950, column: 29, scope: !4053)
!4056 = !DILocation(line: 950, column: 27, scope: !4053)
!4057 = !DILocation(line: 950, column: 13, scope: !4053)
!4058 = !DILocation(line: 951, column: 61, scope: !4054)
!4059 = !DILocation(line: 951, column: 64, scope: !4054)
!4060 = !DILocation(line: 951, column: 68, scope: !4054)
!4061 = !DILocation(line: 951, column: 45, scope: !4054)
!4062 = !DILocation(line: 951, column: 40, scope: !4054)
!4063 = !DILocation(line: 951, column: 17, scope: !4054)
!4064 = !DILocation(line: 951, column: 37, scope: !4054)
!4065 = !DILocation(line: 951, column: 20, scope: !4054)
!4066 = !DILocation(line: 951, column: 43, scope: !4054)
!4067 = !DILocation(line: 950, column: 44, scope: !4068)
!4068 = !DILexicalBlockFile(scope: !4054, file: !916, discriminator: 2)
!4069 = !DILocation(line: 950, column: 13, scope: !4068)
!4070 = distinct !{!4070, !4071}
!4071 = !DILocation(line: 950, column: 13, scope: !4044)
!4072 = !DILocation(line: 951, column: 72, scope: !4073)
!4073 = !DILexicalBlockFile(scope: !4050, file: !916, discriminator: 1)
!4074 = !DILocation(line: 949, column: 43, scope: !4075)
!4075 = !DILexicalBlockFile(scope: !4044, file: !916, discriminator: 2)
!4076 = !DILocation(line: 949, column: 9, scope: !4075)
!4077 = distinct !{!4077, !4078}
!4078 = !DILocation(line: 949, column: 9, scope: !4019)
!4079 = !DILocation(line: 952, column: 5, scope: !4019)
!4080 = !DILocation(line: 953, column: 16, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4082, file: !916, line: 953, column: 9)
!4082 = distinct !DILexicalBlock(scope: !4016, file: !916, line: 952, column: 12)
!4083 = !DILocation(line: 953, column: 14, scope: !4081)
!4084 = !DILocation(line: 953, column: 21, scope: !4085)
!4085 = !DILexicalBlockFile(scope: !4086, file: !916, discriminator: 1)
!4086 = distinct !DILexicalBlock(scope: !4081, file: !916, line: 953, column: 9)
!4087 = !DILocation(line: 953, column: 25, scope: !4085)
!4088 = !DILocation(line: 953, column: 28, scope: !4085)
!4089 = !DILocation(line: 953, column: 23, scope: !4085)
!4090 = !DILocation(line: 953, column: 9, scope: !4085)
!4091 = !DILocation(line: 954, column: 37, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4093, file: !916, line: 954, column: 17)
!4093 = distinct !DILexicalBlock(scope: !4086, file: !916, line: 953, column: 47)
!4094 = !DILocation(line: 954, column: 17, scope: !4092)
!4095 = !DILocation(line: 954, column: 20, scope: !4092)
!4096 = !DILocation(line: 954, column: 17, scope: !4093)
!4097 = !DILocation(line: 955, column: 41, scope: !4098)
!4098 = distinct !DILexicalBlock(scope: !4092, file: !916, line: 954, column: 41)
!4099 = !DILocation(line: 955, column: 44, scope: !4098)
!4100 = !DILocation(line: 955, column: 47, scope: !4098)
!4101 = !DILocation(line: 955, column: 17, scope: !4098)
!4102 = !DILocation(line: 956, column: 21, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4098, file: !916, line: 956, column: 21)
!4104 = !DILocation(line: 956, column: 24, scope: !4103)
!4105 = !DILocation(line: 956, column: 21, scope: !4098)
!4106 = !DILocation(line: 957, column: 43, scope: !4103)
!4107 = !DILocation(line: 957, column: 46, scope: !4103)
!4108 = !DILocation(line: 957, column: 21, scope: !4103)
!4109 = !DILocation(line: 959, column: 45, scope: !4103)
!4110 = !DILocation(line: 959, column: 48, scope: !4103)
!4111 = !DILocation(line: 959, column: 21, scope: !4103)
!4112 = !DILocation(line: 960, column: 21, scope: !4113)
!4113 = distinct !DILexicalBlock(scope: !4098, file: !916, line: 960, column: 21)
!4114 = !DILocation(line: 960, column: 24, scope: !4113)
!4115 = !DILocation(line: 960, column: 40, scope: !4113)
!4116 = !DILocation(line: 960, column: 21, scope: !4098)
!4117 = !DILocation(line: 961, column: 36, scope: !4113)
!4118 = !DILocation(line: 961, column: 39, scope: !4113)
!4119 = !DILocation(line: 961, column: 45, scope: !4113)
!4120 = !DILocation(line: 961, column: 21, scope: !4113)
!4121 = !DILocation(line: 963, column: 36, scope: !4113)
!4122 = !DILocation(line: 963, column: 39, scope: !4113)
!4123 = !DILocation(line: 963, column: 45, scope: !4113)
!4124 = !DILocation(line: 963, column: 21, scope: !4113)
!4125 = !DILocation(line: 964, column: 13, scope: !4098)
!4126 = !DILocation(line: 965, column: 44, scope: !4127)
!4127 = distinct !DILexicalBlock(scope: !4092, file: !916, line: 964, column: 20)
!4128 = !DILocation(line: 965, column: 24, scope: !4127)
!4129 = !DILocation(line: 965, column: 27, scope: !4127)
!4130 = !DILocation(line: 965, column: 17, scope: !4127)
!4131 = !DILocation(line: 965, column: 83, scope: !4127)
!4132 = !DILocation(line: 965, column: 81, scope: !4127)
!4133 = !DILocation(line: 967, column: 9, scope: !4093)
!4134 = !DILocation(line: 953, column: 43, scope: !4135)
!4135 = !DILexicalBlockFile(scope: !4086, file: !916, discriminator: 2)
!4136 = !DILocation(line: 953, column: 9, scope: !4135)
!4137 = distinct !{!4137, !4138}
!4138 = !DILocation(line: 953, column: 9, scope: !4082)
!4139 = !DILocation(line: 969, column: 13, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !4082, file: !916, line: 969, column: 13)
!4141 = !DILocation(line: 969, column: 16, scope: !4140)
!4142 = !DILocation(line: 969, column: 13, scope: !4082)
!4143 = !DILocation(line: 970, column: 26, scope: !4140)
!4144 = !DILocation(line: 970, column: 29, scope: !4140)
!4145 = !DILocation(line: 970, column: 13, scope: !4140)
!4146 = !DILocation(line: 971, column: 13, scope: !4147)
!4147 = distinct !DILexicalBlock(scope: !4082, file: !916, line: 971, column: 13)
!4148 = !DILocation(line: 971, column: 16, scope: !4147)
!4149 = !DILocation(line: 971, column: 13, scope: !4082)
!4150 = !DILocation(line: 972, column: 36, scope: !4147)
!4151 = !DILocation(line: 972, column: 39, scope: !4147)
!4152 = !DILocation(line: 972, column: 13, scope: !4147)
!4153 = !DILocation(line: 973, column: 13, scope: !4154)
!4154 = distinct !DILexicalBlock(scope: !4082, file: !916, line: 973, column: 13)
!4155 = !DILocation(line: 973, column: 16, scope: !4154)
!4156 = !DILocation(line: 973, column: 13, scope: !4082)
!4157 = !DILocation(line: 974, column: 29, scope: !4154)
!4158 = !DILocation(line: 974, column: 32, scope: !4154)
!4159 = !DILocation(line: 974, column: 13, scope: !4154)
!4160 = !DILocation(line: 977, column: 13, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4082, file: !916, line: 977, column: 13)
!4162 = !DILocation(line: 977, column: 16, scope: !4161)
!4163 = !DILocation(line: 977, column: 31, scope: !4161)
!4164 = !DILocation(line: 977, column: 13, scope: !4082)
!4165 = !DILocation(line: 978, column: 20, scope: !4166)
!4166 = distinct !DILexicalBlock(scope: !4161, file: !916, line: 978, column: 13)
!4167 = !DILocation(line: 978, column: 18, scope: !4166)
!4168 = !DILocation(line: 978, column: 25, scope: !4169)
!4169 = !DILexicalBlockFile(scope: !4170, file: !916, discriminator: 1)
!4170 = distinct !DILexicalBlock(scope: !4166, file: !916, line: 978, column: 13)
!4171 = !DILocation(line: 978, column: 29, scope: !4169)
!4172 = !DILocation(line: 978, column: 32, scope: !4169)
!4173 = !DILocation(line: 978, column: 27, scope: !4169)
!4174 = !DILocation(line: 978, column: 13, scope: !4169)
!4175 = !DILocation(line: 979, column: 24, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !4170, file: !916, line: 979, column: 17)
!4177 = !DILocation(line: 979, column: 22, scope: !4176)
!4178 = !DILocation(line: 979, column: 29, scope: !4179)
!4179 = !DILexicalBlockFile(scope: !4180, file: !916, discriminator: 1)
!4180 = distinct !DILexicalBlock(scope: !4176, file: !916, line: 979, column: 17)
!4181 = !DILocation(line: 979, column: 33, scope: !4179)
!4182 = !DILocation(line: 979, column: 31, scope: !4179)
!4183 = !DILocation(line: 979, column: 17, scope: !4179)
!4184 = !DILocation(line: 980, column: 50, scope: !4180)
!4185 = !DILocation(line: 980, column: 53, scope: !4180)
!4186 = !DILocation(line: 980, column: 44, scope: !4180)
!4187 = !DILocation(line: 980, column: 21, scope: !4180)
!4188 = !DILocation(line: 980, column: 41, scope: !4180)
!4189 = !DILocation(line: 980, column: 24, scope: !4180)
!4190 = !DILocation(line: 980, column: 47, scope: !4180)
!4191 = !DILocation(line: 979, column: 48, scope: !4192)
!4192 = !DILexicalBlockFile(scope: !4180, file: !916, discriminator: 2)
!4193 = !DILocation(line: 979, column: 17, scope: !4192)
!4194 = distinct !{!4194, !4195}
!4195 = !DILocation(line: 979, column: 17, scope: !4170)
!4196 = !DILocation(line: 980, column: 53, scope: !4197)
!4197 = !DILexicalBlockFile(scope: !4176, file: !916, discriminator: 1)
!4198 = !DILocation(line: 978, column: 47, scope: !4199)
!4199 = !DILexicalBlockFile(scope: !4170, file: !916, discriminator: 2)
!4200 = !DILocation(line: 978, column: 13, scope: !4199)
!4201 = distinct !{!4201, !4202}
!4202 = !DILocation(line: 978, column: 13, scope: !4161)
!4203 = !DILocation(line: 980, column: 53, scope: !4204)
!4204 = !DILexicalBlockFile(scope: !4166, file: !916, discriminator: 2)
!4205 = !DILocation(line: 984, column: 12, scope: !4206)
!4206 = distinct !DILexicalBlock(scope: !3674, file: !916, line: 984, column: 5)
!4207 = !DILocation(line: 984, column: 10, scope: !4206)
!4208 = !DILocation(line: 984, column: 17, scope: !4209)
!4209 = !DILexicalBlockFile(scope: !4210, file: !916, discriminator: 1)
!4210 = distinct !DILexicalBlock(scope: !4206, file: !916, line: 984, column: 5)
!4211 = !DILocation(line: 984, column: 21, scope: !4209)
!4212 = !DILocation(line: 984, column: 24, scope: !4209)
!4213 = !DILocation(line: 984, column: 19, scope: !4209)
!4214 = !DILocation(line: 984, column: 5, scope: !4209)
!4215 = !DILocalVariable(name: "c", scope: !4216, file: !916, line: 985, type: !904)
!4216 = distinct !DILexicalBlock(scope: !4210, file: !916, line: 984, column: 56)
!4217 = !DILocation(line: 985, column: 13, scope: !4216)
!4218 = !DILocation(line: 985, column: 53, scope: !4216)
!4219 = !DILocation(line: 985, column: 17, scope: !4216)
!4220 = !DILocation(line: 985, column: 20, scope: !4216)
!4221 = !DILocalVariable(name: "subframe_len", scope: !4216, file: !916, line: 986, type: !904)
!4222 = !DILocation(line: 986, column: 13, scope: !4216)
!4223 = !DILocation(line: 986, column: 66, scope: !4216)
!4224 = !DILocation(line: 986, column: 55, scope: !4216)
!4225 = !DILocation(line: 986, column: 58, scope: !4216)
!4226 = !DILocation(line: 986, column: 69, scope: !4216)
!4227 = !DILocation(line: 986, column: 28, scope: !4216)
!4228 = !DILocation(line: 986, column: 39, scope: !4216)
!4229 = !DILocation(line: 986, column: 31, scope: !4216)
!4230 = !DILocation(line: 986, column: 42, scope: !4216)
!4231 = !DILocation(line: 988, column: 16, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4216, file: !916, line: 988, column: 9)
!4233 = !DILocation(line: 988, column: 14, scope: !4232)
!4234 = !DILocation(line: 988, column: 21, scope: !4235)
!4235 = !DILexicalBlockFile(scope: !4236, file: !916, discriminator: 1)
!4236 = distinct !DILexicalBlock(scope: !4232, file: !916, line: 988, column: 9)
!4237 = !DILocation(line: 988, column: 25, scope: !4235)
!4238 = !DILocation(line: 988, column: 23, scope: !4235)
!4239 = !DILocation(line: 988, column: 9, scope: !4235)
!4240 = !DILocation(line: 989, column: 17, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4242, file: !916, line: 989, column: 17)
!4242 = distinct !DILexicalBlock(scope: !4236, file: !916, line: 988, column: 44)
!4243 = !DILocation(line: 989, column: 20, scope: !4241)
!4244 = !DILocation(line: 989, column: 36, scope: !4241)
!4245 = !DILocation(line: 989, column: 17, scope: !4242)
!4246 = !DILocation(line: 990, column: 72, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4241, file: !916, line: 989, column: 43)
!4248 = !DILocation(line: 990, column: 49, scope: !4247)
!4249 = !DILocation(line: 990, column: 69, scope: !4247)
!4250 = !DILocation(line: 990, column: 52, scope: !4247)
!4251 = !DILocation(line: 990, column: 39, scope: !4247)
!4252 = !DILocation(line: 990, column: 78, scope: !4247)
!4253 = !DILocation(line: 990, column: 75, scope: !4247)
!4254 = !DILocation(line: 990, column: 32, scope: !4247)
!4255 = !DILocation(line: 990, column: 18, scope: !4247)
!4256 = !DILocation(line: 990, column: 21, scope: !4247)
!4257 = !DILocation(line: 990, column: 34, scope: !4247)
!4258 = !DILocation(line: 990, column: 37, scope: !4247)
!4259 = !DILocation(line: 991, column: 13, scope: !4247)
!4260 = !DILocation(line: 992, column: 62, scope: !4261)
!4261 = distinct !DILexicalBlock(scope: !4241, file: !916, line: 991, column: 20)
!4262 = !DILocation(line: 992, column: 39, scope: !4261)
!4263 = !DILocation(line: 992, column: 59, scope: !4261)
!4264 = !DILocation(line: 992, column: 42, scope: !4261)
!4265 = !DILocation(line: 992, column: 69, scope: !4261)
!4266 = !DILocation(line: 992, column: 84, scope: !4261)
!4267 = !DILocation(line: 992, column: 65, scope: !4261)
!4268 = !DILocation(line: 992, column: 32, scope: !4261)
!4269 = !DILocation(line: 992, column: 18, scope: !4261)
!4270 = !DILocation(line: 992, column: 21, scope: !4261)
!4271 = !DILocation(line: 992, column: 34, scope: !4261)
!4272 = !DILocation(line: 992, column: 37, scope: !4261)
!4273 = !DILocation(line: 994, column: 9, scope: !4242)
!4274 = !DILocation(line: 988, column: 40, scope: !4275)
!4275 = !DILexicalBlockFile(scope: !4236, file: !916, discriminator: 2)
!4276 = !DILocation(line: 988, column: 9, scope: !4275)
!4277 = distinct !{!4277, !4278}
!4278 = !DILocation(line: 988, column: 9, scope: !4216)
!4279 = !DILocation(line: 995, column: 5, scope: !4216)
!4280 = !DILocation(line: 984, column: 52, scope: !4281)
!4281 = !DILexicalBlockFile(scope: !4210, file: !916, discriminator: 2)
!4282 = !DILocation(line: 984, column: 5, scope: !4281)
!4283 = distinct !{!4283, !4284}
!4284 = !DILocation(line: 984, column: 5, scope: !3674)
!4285 = !DILocation(line: 998, column: 12, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !3674, file: !916, line: 998, column: 5)
!4287 = !DILocation(line: 998, column: 10, scope: !4286)
!4288 = !DILocation(line: 998, column: 17, scope: !4289)
!4289 = !DILexicalBlockFile(scope: !4290, file: !916, discriminator: 1)
!4290 = distinct !DILexicalBlock(scope: !4286, file: !916, line: 998, column: 5)
!4291 = !DILocation(line: 998, column: 21, scope: !4289)
!4292 = !DILocation(line: 998, column: 24, scope: !4289)
!4293 = !DILocation(line: 998, column: 19, scope: !4289)
!4294 = !DILocation(line: 998, column: 5, scope: !4289)
!4295 = !DILocalVariable(name: "c", scope: !4296, file: !916, line: 999, type: !904)
!4296 = distinct !DILexicalBlock(scope: !4290, file: !916, line: 998, column: 56)
!4297 = !DILocation(line: 999, column: 13, scope: !4296)
!4298 = !DILocation(line: 999, column: 53, scope: !4296)
!4299 = !DILocation(line: 999, column: 17, scope: !4296)
!4300 = !DILocation(line: 999, column: 20, scope: !4296)
!4301 = !DILocation(line: 1000, column: 24, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4296, file: !916, line: 1000, column: 13)
!4303 = !DILocation(line: 1000, column: 13, scope: !4302)
!4304 = !DILocation(line: 1000, column: 16, scope: !4302)
!4305 = !DILocation(line: 1000, column: 27, scope: !4302)
!4306 = !DILocation(line: 1000, column: 54, scope: !4302)
!4307 = !DILocation(line: 1000, column: 43, scope: !4302)
!4308 = !DILocation(line: 1000, column: 46, scope: !4302)
!4309 = !DILocation(line: 1000, column: 57, scope: !4302)
!4310 = !DILocation(line: 1000, column: 40, scope: !4302)
!4311 = !DILocation(line: 1000, column: 13, scope: !4296)
!4312 = !DILocation(line: 1001, column: 20, scope: !4313)
!4313 = distinct !DILexicalBlock(scope: !4302, file: !916, line: 1000, column: 72)
!4314 = !DILocation(line: 1001, column: 23, scope: !4313)
!4315 = !DILocation(line: 1001, column: 13, scope: !4313)
!4316 = !DILocation(line: 1002, column: 13, scope: !4313)
!4317 = !DILocation(line: 1004, column: 22, scope: !4296)
!4318 = !DILocation(line: 1004, column: 11, scope: !4296)
!4319 = !DILocation(line: 1004, column: 14, scope: !4296)
!4320 = !DILocation(line: 1004, column: 25, scope: !4296)
!4321 = !DILocation(line: 1004, column: 9, scope: !4296)
!4322 = !DILocation(line: 1005, column: 5, scope: !4296)
!4323 = !DILocation(line: 998, column: 52, scope: !4324)
!4324 = !DILexicalBlockFile(scope: !4290, file: !916, discriminator: 2)
!4325 = !DILocation(line: 998, column: 5, scope: !4324)
!4326 = distinct !{!4326, !4327}
!4327 = !DILocation(line: 998, column: 5, scope: !3674)
!4328 = !DILocation(line: 1006, column: 5, scope: !3674)
!4329 = !DILocation(line: 1007, column: 1, scope: !3674)
!4330 = distinct !DISubprogram(name: "skip_bits_long", scope: !1695, file: !1695, line: 293, type: !3102, isLocal: true, isDefinition: true, scopeLine: 294, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!4331 = !DILocalVariable(name: "a", arg: 1, scope: !4332, file: !4333, line: 127, type: !904)
!4332 = distinct !DISubprogram(name: "av_clip_c", scope: !4333, file: !4333, line: 127, type: !4334, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!4333 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!4334 = !DISubroutineType(types: !4335)
!4335 = !{!904, !904, !904, !904}
!4336 = !DILocation(line: 127, column: 87, scope: !4332, inlinedAt: !4337)
!4337 = distinct !DILocation(line: 301, column: 17, scope: !4330)
!4338 = !DILocalVariable(name: "amin", arg: 2, scope: !4332, file: !4333, line: 127, type: !904)
!4339 = !DILocation(line: 127, column: 94, scope: !4332, inlinedAt: !4337)
!4340 = !DILocalVariable(name: "amax", arg: 3, scope: !4332, file: !4333, line: 127, type: !904)
!4341 = !DILocation(line: 127, column: 104, scope: !4332, inlinedAt: !4337)
!4342 = !DILocalVariable(name: "s", arg: 1, scope: !4330, file: !1695, line: 293, type: !2171)
!4343 = !DILocation(line: 293, column: 50, scope: !4330)
!4344 = !DILocalVariable(name: "n", arg: 2, scope: !4330, file: !1695, line: 293, type: !904)
!4345 = !DILocation(line: 293, column: 57, scope: !4330)
!4346 = !DILocation(line: 301, column: 27, scope: !4330)
!4347 = !DILocation(line: 301, column: 31, scope: !4330)
!4348 = !DILocation(line: 301, column: 34, scope: !4330)
!4349 = !DILocation(line: 301, column: 30, scope: !4330)
!4350 = !DILocation(line: 301, column: 41, scope: !4330)
!4351 = !DILocation(line: 301, column: 44, scope: !4330)
!4352 = !DILocation(line: 301, column: 65, scope: !4330)
!4353 = !DILocation(line: 301, column: 68, scope: !4330)
!4354 = !DILocation(line: 301, column: 63, scope: !4330)
!4355 = !DILocation(line: 301, column: 17, scope: !4330)
!4356 = !DILocation(line: 132, column: 9, scope: !4357, inlinedAt: !4337)
!4357 = distinct !DILexicalBlock(scope: !4332, file: !4333, line: 132, column: 9)
!4358 = !DILocation(line: 132, column: 13, scope: !4357, inlinedAt: !4337)
!4359 = !DILocation(line: 132, column: 11, scope: !4357, inlinedAt: !4337)
!4360 = !DILocation(line: 132, column: 9, scope: !4332, inlinedAt: !4337)
!4361 = !DILocation(line: 132, column: 26, scope: !4362, inlinedAt: !4337)
!4362 = !DILexicalBlockFile(scope: !4357, file: !4333, discriminator: 1)
!4363 = !DILocation(line: 132, column: 19, scope: !4362, inlinedAt: !4337)
!4364 = !DILocation(line: 133, column: 14, scope: !4365, inlinedAt: !4337)
!4365 = distinct !DILexicalBlock(scope: !4357, file: !4333, line: 133, column: 14)
!4366 = !DILocation(line: 133, column: 18, scope: !4365, inlinedAt: !4337)
!4367 = !DILocation(line: 133, column: 16, scope: !4365, inlinedAt: !4337)
!4368 = !DILocation(line: 133, column: 14, scope: !4357, inlinedAt: !4337)
!4369 = !DILocation(line: 133, column: 31, scope: !4370, inlinedAt: !4337)
!4370 = !DILexicalBlockFile(scope: !4365, file: !4333, discriminator: 1)
!4371 = !DILocation(line: 133, column: 24, scope: !4370, inlinedAt: !4337)
!4372 = !DILocation(line: 134, column: 17, scope: !4365, inlinedAt: !4337)
!4373 = !DILocation(line: 134, column: 10, scope: !4365, inlinedAt: !4337)
!4374 = !DILocation(line: 135, column: 1, scope: !4332, inlinedAt: !4337)
!4375 = !DILocation(line: 301, column: 5, scope: !4330)
!4376 = !DILocation(line: 301, column: 8, scope: !4330)
!4377 = !DILocation(line: 301, column: 14, scope: !4330)
!4378 = !DILocation(line: 304, column: 1, scope: !4330)
!4379 = distinct !DISubprogram(name: "decode_subframe_length", scope: !916, file: !916, line: 294, type: !4380, isLocal: true, isDefinition: true, scopeLine: 295, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!4380 = !DISubroutineType(types: !4381)
!4381 = !{!904, !1645, !904}
!4382 = !DILocalVariable(name: "s", arg: 1, scope: !4379, file: !916, line: 294, type: !1645)
!4383 = !DILocation(line: 294, column: 51, scope: !4379)
!4384 = !DILocalVariable(name: "offset", arg: 2, scope: !4379, file: !916, line: 294, type: !904)
!4385 = !DILocation(line: 294, column: 58, scope: !4379)
!4386 = !DILocalVariable(name: "frame_len_ratio", scope: !4379, file: !916, line: 296, type: !904)
!4387 = !DILocation(line: 296, column: 9, scope: !4379)
!4388 = !DILocalVariable(name: "subframe_len", scope: !4379, file: !916, line: 296, type: !904)
!4389 = !DILocation(line: 296, column: 26, scope: !4379)
!4390 = !DILocalVariable(name: "len", scope: !4379, file: !916, line: 296, type: !904)
!4391 = !DILocation(line: 296, column: 40, scope: !4379)
!4392 = !DILocation(line: 299, column: 9, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4379, file: !916, line: 299, column: 9)
!4394 = !DILocation(line: 299, column: 19, scope: !4393)
!4395 = !DILocation(line: 299, column: 22, scope: !4393)
!4396 = !DILocation(line: 299, column: 42, scope: !4393)
!4397 = !DILocation(line: 299, column: 45, scope: !4393)
!4398 = !DILocation(line: 299, column: 40, scope: !4393)
!4399 = !DILocation(line: 299, column: 16, scope: !4393)
!4400 = !DILocation(line: 299, column: 9, scope: !4379)
!4401 = !DILocation(line: 300, column: 16, scope: !4393)
!4402 = !DILocation(line: 300, column: 19, scope: !4393)
!4403 = !DILocation(line: 300, column: 9, scope: !4393)
!4404 = !DILocation(line: 302, column: 32, scope: !4379)
!4405 = !DILocation(line: 302, column: 35, scope: !4379)
!4406 = !DILocation(line: 302, column: 53, scope: !4379)
!4407 = !DILocation(line: 302, column: 57, scope: !4379)
!4408 = !DILocation(line: 302, column: 17, scope: !4379)
!4409 = !DILocation(line: 302, column: 15, scope: !4379)
!4410 = !DILocation(line: 302, column: 62, scope: !4379)
!4411 = !DILocation(line: 302, column: 9, scope: !4379)
!4412 = !DILocation(line: 303, column: 33, scope: !4379)
!4413 = !DILocation(line: 303, column: 36, scope: !4379)
!4414 = !DILocation(line: 303, column: 40, scope: !4379)
!4415 = !DILocation(line: 303, column: 23, scope: !4379)
!4416 = !DILocation(line: 303, column: 21, scope: !4379)
!4417 = !DILocation(line: 304, column: 20, scope: !4379)
!4418 = !DILocation(line: 304, column: 23, scope: !4379)
!4419 = !DILocation(line: 304, column: 51, scope: !4379)
!4420 = !DILocation(line: 304, column: 67, scope: !4379)
!4421 = !DILocation(line: 304, column: 48, scope: !4379)
!4422 = !DILocation(line: 304, column: 18, scope: !4379)
!4423 = !DILocation(line: 307, column: 9, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !4379, file: !916, line: 307, column: 9)
!4425 = !DILocation(line: 307, column: 24, scope: !4424)
!4426 = !DILocation(line: 307, column: 27, scope: !4424)
!4427 = !DILocation(line: 307, column: 22, scope: !4424)
!4428 = !DILocation(line: 307, column: 52, scope: !4424)
!4429 = !DILocation(line: 308, column: 9, scope: !4424)
!4430 = !DILocation(line: 308, column: 24, scope: !4424)
!4431 = !DILocation(line: 308, column: 27, scope: !4424)
!4432 = !DILocation(line: 308, column: 22, scope: !4424)
!4433 = !DILocation(line: 307, column: 9, scope: !4434)
!4434 = !DILexicalBlockFile(scope: !4379, file: !916, discriminator: 1)
!4435 = !DILocation(line: 309, column: 16, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4424, file: !916, line: 308, column: 46)
!4437 = !DILocation(line: 309, column: 19, scope: !4436)
!4438 = !DILocation(line: 310, column: 16, scope: !4436)
!4439 = !DILocation(line: 309, column: 9, scope: !4436)
!4440 = !DILocation(line: 311, column: 9, scope: !4436)
!4441 = !DILocation(line: 313, column: 12, scope: !4379)
!4442 = !DILocation(line: 313, column: 5, scope: !4379)
!4443 = !DILocation(line: 314, column: 1, scope: !4379)
!4444 = distinct !DISubprogram(name: "clear_codec_buffers", scope: !916, file: !916, line: 579, type: !4445, isLocal: true, isDefinition: true, scopeLine: 580, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!4445 = !DISubroutineType(types: !4446)
!4446 = !{null, !1645}
!4447 = !DILocalVariable(name: "s", arg: 1, scope: !4444, file: !916, line: 579, type: !1645)
!4448 = !DILocation(line: 579, column: 49, scope: !4444)
!4449 = !DILocalVariable(name: "ich", scope: !4444, file: !916, line: 581, type: !904)
!4450 = !DILocation(line: 581, column: 9, scope: !4444)
!4451 = !DILocalVariable(name: "ilms", scope: !4444, file: !916, line: 581, type: !904)
!4452 = !DILocation(line: 581, column: 14, scope: !4444)
!4453 = !DILocation(line: 583, column: 12, scope: !4444)
!4454 = !DILocation(line: 583, column: 15, scope: !4444)
!4455 = !DILocation(line: 583, column: 5, scope: !4444)
!4456 = !DILocation(line: 584, column: 12, scope: !4444)
!4457 = !DILocation(line: 584, column: 15, scope: !4444)
!4458 = !DILocation(line: 584, column: 5, scope: !4444)
!4459 = !DILocation(line: 585, column: 12, scope: !4444)
!4460 = !DILocation(line: 585, column: 15, scope: !4444)
!4461 = !DILocation(line: 585, column: 5, scope: !4444)
!4462 = !DILocation(line: 587, column: 12, scope: !4444)
!4463 = !DILocation(line: 587, column: 15, scope: !4444)
!4464 = !DILocation(line: 587, column: 5, scope: !4444)
!4465 = !DILocation(line: 588, column: 12, scope: !4444)
!4466 = !DILocation(line: 588, column: 15, scope: !4444)
!4467 = !DILocation(line: 588, column: 5, scope: !4444)
!4468 = !DILocation(line: 589, column: 12, scope: !4444)
!4469 = !DILocation(line: 589, column: 15, scope: !4444)
!4470 = !DILocation(line: 589, column: 5, scope: !4444)
!4471 = !DILocation(line: 590, column: 12, scope: !4444)
!4472 = !DILocation(line: 590, column: 15, scope: !4444)
!4473 = !DILocation(line: 590, column: 5, scope: !4444)
!4474 = !DILocation(line: 592, column: 14, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !4444, file: !916, line: 592, column: 5)
!4476 = !DILocation(line: 592, column: 10, scope: !4475)
!4477 = !DILocation(line: 592, column: 19, scope: !4478)
!4478 = !DILexicalBlockFile(scope: !4479, file: !916, discriminator: 1)
!4479 = distinct !DILexicalBlock(scope: !4475, file: !916, line: 592, column: 5)
!4480 = !DILocation(line: 592, column: 25, scope: !4478)
!4481 = !DILocation(line: 592, column: 28, scope: !4478)
!4482 = !DILocation(line: 592, column: 23, scope: !4478)
!4483 = !DILocation(line: 592, column: 5, scope: !4478)
!4484 = !DILocation(line: 593, column: 19, scope: !4485)
!4485 = distinct !DILexicalBlock(scope: !4486, file: !916, line: 593, column: 9)
!4486 = distinct !DILexicalBlock(scope: !4479, file: !916, line: 592, column: 49)
!4487 = !DILocation(line: 593, column: 14, scope: !4485)
!4488 = !DILocation(line: 593, column: 24, scope: !4489)
!4489 = !DILexicalBlockFile(scope: !4490, file: !916, discriminator: 1)
!4490 = distinct !DILexicalBlock(scope: !4485, file: !916, line: 593, column: 9)
!4491 = !DILocation(line: 593, column: 44, scope: !4489)
!4492 = !DILocation(line: 593, column: 31, scope: !4489)
!4493 = !DILocation(line: 593, column: 34, scope: !4489)
!4494 = !DILocation(line: 593, column: 29, scope: !4489)
!4495 = !DILocation(line: 593, column: 9, scope: !4489)
!4496 = !DILocation(line: 594, column: 34, scope: !4497)
!4497 = distinct !DILexicalBlock(scope: !4490, file: !916, line: 593, column: 58)
!4498 = !DILocation(line: 594, column: 20, scope: !4497)
!4499 = !DILocation(line: 594, column: 29, scope: !4497)
!4500 = !DILocation(line: 594, column: 23, scope: !4497)
!4501 = !DILocation(line: 594, column: 40, scope: !4497)
!4502 = !DILocation(line: 594, column: 13, scope: !4497)
!4503 = !DILocation(line: 596, column: 34, scope: !4497)
!4504 = !DILocation(line: 596, column: 20, scope: !4497)
!4505 = !DILocation(line: 596, column: 29, scope: !4497)
!4506 = !DILocation(line: 596, column: 23, scope: !4497)
!4507 = !DILocation(line: 596, column: 40, scope: !4497)
!4508 = !DILocation(line: 596, column: 13, scope: !4497)
!4509 = !DILocation(line: 598, column: 34, scope: !4497)
!4510 = !DILocation(line: 598, column: 20, scope: !4497)
!4511 = !DILocation(line: 598, column: 29, scope: !4497)
!4512 = !DILocation(line: 598, column: 23, scope: !4497)
!4513 = !DILocation(line: 598, column: 40, scope: !4497)
!4514 = !DILocation(line: 598, column: 13, scope: !4497)
!4515 = !DILocation(line: 600, column: 9, scope: !4497)
!4516 = !DILocation(line: 593, column: 54, scope: !4517)
!4517 = !DILexicalBlockFile(scope: !4490, file: !916, discriminator: 2)
!4518 = !DILocation(line: 593, column: 9, scope: !4517)
!4519 = distinct !{!4519, !4520}
!4520 = !DILocation(line: 593, column: 9, scope: !4486)
!4521 = !DILocation(line: 601, column: 20, scope: !4486)
!4522 = !DILocation(line: 601, column: 9, scope: !4486)
!4523 = !DILocation(line: 601, column: 12, scope: !4486)
!4524 = !DILocation(line: 601, column: 25, scope: !4486)
!4525 = !DILocation(line: 602, column: 5, scope: !4486)
!4526 = !DILocation(line: 592, column: 45, scope: !4527)
!4527 = !DILexicalBlockFile(scope: !4479, file: !916, discriminator: 2)
!4528 = !DILocation(line: 592, column: 5, scope: !4527)
!4529 = distinct !{!4529, !4530}
!4530 = !DILocation(line: 592, column: 5, scope: !4444)
!4531 = !DILocation(line: 603, column: 1, scope: !4444)
!4532 = distinct !DISubprogram(name: "decode_ac_filter", scope: !916, file: !916, line: 421, type: !4445, isLocal: true, isDefinition: true, scopeLine: 422, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!4533 = !DILocalVariable(name: "s", arg: 1, scope: !4534, file: !1695, line: 412, type: !2171)
!4534 = distinct !DISubprogram(name: "get_bitsz", scope: !1695, file: !1695, line: 412, type: !4535, isLocal: true, isDefinition: true, scopeLine: 413, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!4535 = !DISubroutineType(types: !4536)
!4536 = !{!904, !2171, !904}
!4537 = !DILocation(line: 412, column: 75, scope: !4534, inlinedAt: !4538)
!4538 = distinct !DILocation(line: 428, column: 33, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4540, file: !916, line: 427, column: 5)
!4540 = distinct !DILexicalBlock(scope: !4532, file: !916, line: 427, column: 5)
!4541 = !DILocalVariable(name: "n", arg: 2, scope: !4534, file: !1695, line: 412, type: !904)
!4542 = !DILocation(line: 412, column: 82, scope: !4534, inlinedAt: !4538)
!4543 = !DILocalVariable(name: "s", arg: 1, scope: !4532, file: !916, line: 421, type: !1645)
!4544 = !DILocation(line: 421, column: 46, scope: !4532)
!4545 = !DILocalVariable(name: "i", scope: !4532, file: !916, line: 423, type: !904)
!4546 = !DILocation(line: 423, column: 9, scope: !4532)
!4547 = !DILocation(line: 424, column: 35, scope: !4532)
!4548 = !DILocation(line: 424, column: 38, scope: !4532)
!4549 = !DILocation(line: 424, column: 25, scope: !4532)
!4550 = !DILocation(line: 424, column: 45, scope: !4532)
!4551 = !DILocation(line: 424, column: 5, scope: !4532)
!4552 = !DILocation(line: 424, column: 8, scope: !4532)
!4553 = !DILocation(line: 424, column: 23, scope: !4532)
!4554 = !DILocation(line: 425, column: 37, scope: !4532)
!4555 = !DILocation(line: 425, column: 40, scope: !4532)
!4556 = !DILocation(line: 425, column: 27, scope: !4532)
!4557 = !DILocation(line: 425, column: 5, scope: !4532)
!4558 = !DILocation(line: 425, column: 8, scope: !4532)
!4559 = !DILocation(line: 425, column: 25, scope: !4532)
!4560 = !DILocation(line: 427, column: 12, scope: !4540)
!4561 = !DILocation(line: 427, column: 10, scope: !4540)
!4562 = !DILocation(line: 427, column: 17, scope: !4563)
!4563 = !DILexicalBlockFile(scope: !4539, file: !916, discriminator: 1)
!4564 = !DILocation(line: 427, column: 21, scope: !4563)
!4565 = !DILocation(line: 427, column: 24, scope: !4563)
!4566 = !DILocation(line: 427, column: 19, scope: !4563)
!4567 = !DILocation(line: 427, column: 5, scope: !4563)
!4568 = !DILocation(line: 428, column: 44, scope: !4539)
!4569 = !DILocation(line: 428, column: 47, scope: !4539)
!4570 = !DILocation(line: 428, column: 51, scope: !4539)
!4571 = !DILocation(line: 428, column: 54, scope: !4539)
!4572 = !DILocation(line: 428, column: 33, scope: !4539)
!4573 = !DILocation(line: 414, column: 12, scope: !4534, inlinedAt: !4538)
!4574 = !DILocation(line: 414, column: 25, scope: !4575, inlinedAt: !4538)
!4575 = !DILexicalBlockFile(scope: !4534, file: !1695, discriminator: 1)
!4576 = !DILocation(line: 414, column: 28, scope: !4575, inlinedAt: !4538)
!4577 = !DILocation(line: 414, column: 16, scope: !4575, inlinedAt: !4538)
!4578 = !DILocation(line: 414, column: 12, scope: !4575, inlinedAt: !4538)
!4579 = !DILocation(line: 414, column: 12, scope: !4580, inlinedAt: !4538)
!4580 = !DILexicalBlockFile(scope: !4534, file: !1695, discriminator: 2)
!4581 = !DILocation(line: 414, column: 12, scope: !4582, inlinedAt: !4538)
!4582 = !DILexicalBlockFile(scope: !4534, file: !1695, discriminator: 3)
!4583 = !DILocation(line: 428, column: 72, scope: !4539)
!4584 = !DILocation(line: 428, column: 28, scope: !4539)
!4585 = !DILocation(line: 428, column: 9, scope: !4539)
!4586 = !DILocation(line: 428, column: 12, scope: !4539)
!4587 = !DILocation(line: 428, column: 31, scope: !4539)
!4588 = !DILocation(line: 427, column: 41, scope: !4589)
!4589 = !DILexicalBlockFile(scope: !4539, file: !916, discriminator: 2)
!4590 = !DILocation(line: 427, column: 5, scope: !4589)
!4591 = distinct !{!4591, !4592}
!4592 = !DILocation(line: 427, column: 5, scope: !4532)
!4593 = !DILocation(line: 429, column: 1, scope: !4532)
!4594 = distinct !DISubprogram(name: "decode_mclms", scope: !916, file: !916, line: 431, type: !4445, isLocal: true, isDefinition: true, scopeLine: 432, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!4595 = !DILocation(line: 412, column: 75, scope: !4534, inlinedAt: !4596)
!4596 = distinct !DILocation(line: 441, column: 26, scope: !4597)
!4597 = distinct !DILexicalBlock(scope: !4598, file: !916, line: 435, column: 28)
!4598 = distinct !DILexicalBlock(scope: !4594, file: !916, line: 435, column: 9)
!4599 = !DILocation(line: 412, column: 82, scope: !4534, inlinedAt: !4596)
!4600 = !DILocalVariable(name: "s", arg: 1, scope: !4594, file: !916, line: 431, type: !1645)
!4601 = !DILocation(line: 431, column: 42, scope: !4594)
!4602 = !DILocation(line: 433, column: 33, scope: !4594)
!4603 = !DILocation(line: 433, column: 36, scope: !4594)
!4604 = !DILocation(line: 433, column: 23, scope: !4594)
!4605 = !DILocation(line: 433, column: 43, scope: !4594)
!4606 = !DILocation(line: 433, column: 48, scope: !4594)
!4607 = !DILocation(line: 433, column: 22, scope: !4594)
!4608 = !DILocation(line: 433, column: 5, scope: !4594)
!4609 = !DILocation(line: 433, column: 8, scope: !4594)
!4610 = !DILocation(line: 433, column: 20, scope: !4594)
!4611 = !DILocation(line: 434, column: 34, scope: !4594)
!4612 = !DILocation(line: 434, column: 37, scope: !4594)
!4613 = !DILocation(line: 434, column: 24, scope: !4594)
!4614 = !DILocation(line: 434, column: 5, scope: !4594)
!4615 = !DILocation(line: 434, column: 8, scope: !4594)
!4616 = !DILocation(line: 434, column: 22, scope: !4594)
!4617 = !DILocation(line: 435, column: 20, scope: !4598)
!4618 = !DILocation(line: 435, column: 23, scope: !4598)
!4619 = !DILocation(line: 435, column: 9, scope: !4598)
!4620 = !DILocation(line: 435, column: 9, scope: !4594)
!4621 = !DILocalVariable(name: "i", scope: !4597, file: !916, line: 436, type: !904)
!4622 = !DILocation(line: 436, column: 13, scope: !4597)
!4623 = !DILocalVariable(name: "send_coef_bits", scope: !4597, file: !916, line: 436, type: !904)
!4624 = !DILocation(line: 436, column: 16, scope: !4597)
!4625 = !DILocalVariable(name: "cbits", scope: !4597, file: !916, line: 437, type: !904)
!4626 = !DILocation(line: 437, column: 13, scope: !4597)
!4627 = !DILocation(line: 437, column: 42, scope: !4597)
!4628 = !DILocation(line: 437, column: 45, scope: !4597)
!4629 = !DILocation(line: 437, column: 59, scope: !4597)
!4630 = !DILocation(line: 437, column: 63, scope: !4597)
!4631 = !DILocation(line: 437, column: 27, scope: !4597)
!4632 = !DILocation(line: 437, column: 25, scope: !4597)
!4633 = !DILocation(line: 438, column: 18, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4597, file: !916, line: 438, column: 13)
!4635 = !DILocation(line: 438, column: 15, scope: !4634)
!4636 = !DILocation(line: 438, column: 26, scope: !4634)
!4637 = !DILocation(line: 438, column: 29, scope: !4634)
!4638 = !DILocation(line: 438, column: 43, scope: !4634)
!4639 = !DILocation(line: 438, column: 24, scope: !4634)
!4640 = !DILocation(line: 438, column: 13, scope: !4597)
!4641 = !DILocation(line: 439, column: 18, scope: !4634)
!4642 = !DILocation(line: 439, column: 13, scope: !4634)
!4643 = !DILocation(line: 441, column: 37, scope: !4597)
!4644 = !DILocation(line: 441, column: 40, scope: !4597)
!4645 = !DILocation(line: 441, column: 44, scope: !4597)
!4646 = !DILocation(line: 441, column: 26, scope: !4597)
!4647 = !DILocation(line: 414, column: 12, scope: !4534, inlinedAt: !4596)
!4648 = !DILocation(line: 414, column: 25, scope: !4575, inlinedAt: !4596)
!4649 = !DILocation(line: 414, column: 28, scope: !4575, inlinedAt: !4596)
!4650 = !DILocation(line: 414, column: 16, scope: !4575, inlinedAt: !4596)
!4651 = !DILocation(line: 414, column: 12, scope: !4575, inlinedAt: !4596)
!4652 = !DILocation(line: 414, column: 12, scope: !4580, inlinedAt: !4596)
!4653 = !DILocation(line: 414, column: 12, scope: !4582, inlinedAt: !4596)
!4654 = !DILocation(line: 441, column: 51, scope: !4597)
!4655 = !DILocation(line: 441, column: 24, scope: !4597)
!4656 = !DILocation(line: 443, column: 16, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4597, file: !916, line: 443, column: 9)
!4658 = !DILocation(line: 443, column: 14, scope: !4657)
!4659 = !DILocation(line: 443, column: 21, scope: !4660)
!4660 = !DILexicalBlockFile(scope: !4661, file: !916, discriminator: 1)
!4661 = distinct !DILexicalBlock(scope: !4657, file: !916, line: 443, column: 9)
!4662 = !DILocation(line: 443, column: 25, scope: !4660)
!4663 = !DILocation(line: 443, column: 28, scope: !4660)
!4664 = !DILocation(line: 443, column: 42, scope: !4660)
!4665 = !DILocation(line: 443, column: 45, scope: !4660)
!4666 = !DILocation(line: 443, column: 40, scope: !4660)
!4667 = !DILocation(line: 443, column: 60, scope: !4660)
!4668 = !DILocation(line: 443, column: 63, scope: !4660)
!4669 = !DILocation(line: 443, column: 58, scope: !4660)
!4670 = !DILocation(line: 443, column: 23, scope: !4660)
!4671 = !DILocation(line: 443, column: 9, scope: !4660)
!4672 = !DILocation(line: 444, column: 44, scope: !4661)
!4673 = !DILocation(line: 444, column: 47, scope: !4661)
!4674 = !DILocation(line: 444, column: 51, scope: !4661)
!4675 = !DILocation(line: 444, column: 34, scope: !4661)
!4676 = !DILocation(line: 444, column: 29, scope: !4661)
!4677 = !DILocation(line: 444, column: 13, scope: !4661)
!4678 = !DILocation(line: 444, column: 16, scope: !4661)
!4679 = !DILocation(line: 444, column: 32, scope: !4661)
!4680 = !DILocation(line: 443, column: 78, scope: !4681)
!4681 = !DILexicalBlockFile(scope: !4661, file: !916, discriminator: 2)
!4682 = !DILocation(line: 443, column: 9, scope: !4681)
!4683 = distinct !{!4683, !4684}
!4684 = !DILocation(line: 443, column: 9, scope: !4597)
!4685 = !DILocation(line: 446, column: 16, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4597, file: !916, line: 446, column: 9)
!4687 = !DILocation(line: 446, column: 14, scope: !4686)
!4688 = !DILocation(line: 446, column: 21, scope: !4689)
!4689 = !DILexicalBlockFile(scope: !4690, file: !916, discriminator: 1)
!4690 = distinct !DILexicalBlock(scope: !4686, file: !916, line: 446, column: 9)
!4691 = !DILocation(line: 446, column: 25, scope: !4689)
!4692 = !DILocation(line: 446, column: 28, scope: !4689)
!4693 = !DILocation(line: 446, column: 23, scope: !4689)
!4694 = !DILocation(line: 446, column: 9, scope: !4689)
!4695 = !DILocalVariable(name: "c", scope: !4696, file: !916, line: 447, type: !904)
!4696 = distinct !DILexicalBlock(scope: !4690, file: !916, line: 446, column: 47)
!4697 = !DILocation(line: 447, column: 17, scope: !4696)
!4698 = !DILocation(line: 448, column: 20, scope: !4699)
!4699 = distinct !DILexicalBlock(scope: !4696, file: !916, line: 448, column: 13)
!4700 = !DILocation(line: 448, column: 18, scope: !4699)
!4701 = !DILocation(line: 448, column: 25, scope: !4702)
!4702 = !DILexicalBlockFile(scope: !4703, file: !916, discriminator: 1)
!4703 = distinct !DILexicalBlock(scope: !4699, file: !916, line: 448, column: 13)
!4704 = !DILocation(line: 448, column: 29, scope: !4702)
!4705 = !DILocation(line: 448, column: 27, scope: !4702)
!4706 = !DILocation(line: 448, column: 13, scope: !4702)
!4707 = !DILocation(line: 449, column: 74, scope: !4703)
!4708 = !DILocation(line: 449, column: 77, scope: !4703)
!4709 = !DILocation(line: 449, column: 81, scope: !4703)
!4710 = !DILocation(line: 449, column: 64, scope: !4703)
!4711 = !DILocation(line: 449, column: 37, scope: !4703)
!4712 = !DILocation(line: 449, column: 41, scope: !4703)
!4713 = !DILocation(line: 449, column: 44, scope: !4703)
!4714 = !DILocation(line: 449, column: 39, scope: !4703)
!4715 = !DILocation(line: 449, column: 59, scope: !4703)
!4716 = !DILocation(line: 449, column: 57, scope: !4703)
!4717 = !DILocation(line: 449, column: 17, scope: !4703)
!4718 = !DILocation(line: 449, column: 20, scope: !4703)
!4719 = !DILocation(line: 449, column: 62, scope: !4703)
!4720 = !DILocation(line: 448, column: 33, scope: !4721)
!4721 = !DILexicalBlockFile(scope: !4703, file: !916, discriminator: 2)
!4722 = !DILocation(line: 448, column: 13, scope: !4721)
!4723 = distinct !{!4723, !4724}
!4724 = !DILocation(line: 448, column: 13, scope: !4696)
!4725 = !DILocation(line: 450, column: 9, scope: !4696)
!4726 = !DILocation(line: 446, column: 43, scope: !4727)
!4727 = !DILexicalBlockFile(scope: !4690, file: !916, discriminator: 2)
!4728 = !DILocation(line: 446, column: 9, scope: !4727)
!4729 = distinct !{!4729, !4730}
!4730 = !DILocation(line: 446, column: 9, scope: !4597)
!4731 = !DILocation(line: 451, column: 5, scope: !4597)
!4732 = !DILocation(line: 452, column: 1, scope: !4594)
!4733 = !DILocation(line: 412, column: 75, scope: !4534, inlinedAt: !4734)
!4734 = distinct !DILocation(line: 494, column: 42, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4736, file: !916, line: 483, column: 51)
!4736 = distinct !DILexicalBlock(scope: !4737, file: !916, line: 483, column: 13)
!4737 = distinct !DILexicalBlock(scope: !4738, file: !916, line: 483, column: 13)
!4738 = distinct !DILexicalBlock(scope: !4739, file: !916, line: 482, column: 30)
!4739 = distinct !DILexicalBlock(scope: !4740, file: !916, line: 482, column: 13)
!4740 = distinct !DILexicalBlock(scope: !4741, file: !916, line: 459, column: 43)
!4741 = distinct !DILexicalBlock(scope: !4742, file: !916, line: 459, column: 5)
!4742 = distinct !DILexicalBlock(scope: !1642, file: !916, line: 459, column: 5)
!4743 = !DILocation(line: 412, column: 82, scope: !4534, inlinedAt: !4734)
!4744 = !DILocalVariable(name: "s", arg: 1, scope: !1642, file: !916, line: 454, type: !1645)
!4745 = !DILocation(line: 454, column: 41, scope: !1642)
!4746 = !DILocalVariable(name: "c", scope: !1642, file: !916, line: 456, type: !904)
!4747 = !DILocation(line: 456, column: 9, scope: !1642)
!4748 = !DILocalVariable(name: "i", scope: !1642, file: !916, line: 456, type: !904)
!4749 = !DILocation(line: 456, column: 12, scope: !1642)
!4750 = !DILocalVariable(name: "cdlms_send_coef", scope: !1642, file: !916, line: 457, type: !904)
!4751 = !DILocation(line: 457, column: 9, scope: !1642)
!4752 = !DILocation(line: 457, column: 38, scope: !1642)
!4753 = !DILocation(line: 457, column: 41, scope: !1642)
!4754 = !DILocation(line: 457, column: 27, scope: !1642)
!4755 = !DILocation(line: 459, column: 12, scope: !4742)
!4756 = !DILocation(line: 459, column: 10, scope: !4742)
!4757 = !DILocation(line: 459, column: 17, scope: !4758)
!4758 = !DILexicalBlockFile(scope: !4741, file: !916, discriminator: 1)
!4759 = !DILocation(line: 459, column: 21, scope: !4758)
!4760 = !DILocation(line: 459, column: 24, scope: !4758)
!4761 = !DILocation(line: 459, column: 19, scope: !4758)
!4762 = !DILocation(line: 459, column: 5, scope: !4758)
!4763 = !DILocation(line: 460, column: 37, scope: !4740)
!4764 = !DILocation(line: 460, column: 40, scope: !4740)
!4765 = !DILocation(line: 460, column: 27, scope: !4740)
!4766 = !DILocation(line: 460, column: 47, scope: !4740)
!4767 = !DILocation(line: 460, column: 22, scope: !4740)
!4768 = !DILocation(line: 460, column: 9, scope: !4740)
!4769 = !DILocation(line: 460, column: 12, scope: !4740)
!4770 = !DILocation(line: 460, column: 25, scope: !4740)
!4771 = !DILocation(line: 461, column: 16, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4740, file: !916, line: 461, column: 9)
!4773 = !DILocation(line: 461, column: 14, scope: !4772)
!4774 = !DILocation(line: 461, column: 21, scope: !4775)
!4775 = !DILexicalBlockFile(scope: !4776, file: !916, discriminator: 1)
!4776 = distinct !DILexicalBlock(scope: !4772, file: !916, line: 461, column: 9)
!4777 = !DILocation(line: 461, column: 38, scope: !4775)
!4778 = !DILocation(line: 461, column: 25, scope: !4775)
!4779 = !DILocation(line: 461, column: 28, scope: !4775)
!4780 = !DILocation(line: 461, column: 23, scope: !4775)
!4781 = !DILocation(line: 461, column: 9, scope: !4775)
!4782 = !DILocation(line: 462, column: 47, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4776, file: !916, line: 461, column: 47)
!4784 = !DILocation(line: 462, column: 50, scope: !4783)
!4785 = !DILocation(line: 462, column: 37, scope: !4783)
!4786 = !DILocation(line: 462, column: 57, scope: !4783)
!4787 = !DILocation(line: 462, column: 62, scope: !4783)
!4788 = !DILocation(line: 462, column: 25, scope: !4783)
!4789 = !DILocation(line: 462, column: 13, scope: !4783)
!4790 = !DILocation(line: 462, column: 22, scope: !4783)
!4791 = !DILocation(line: 462, column: 16, scope: !4783)
!4792 = !DILocation(line: 462, column: 28, scope: !4783)
!4793 = !DILocation(line: 462, column: 34, scope: !4783)
!4794 = !DILocation(line: 463, column: 29, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4783, file: !916, line: 463, column: 17)
!4796 = !DILocation(line: 463, column: 17, scope: !4795)
!4797 = !DILocation(line: 463, column: 26, scope: !4795)
!4798 = !DILocation(line: 463, column: 20, scope: !4795)
!4799 = !DILocation(line: 463, column: 32, scope: !4795)
!4800 = !DILocation(line: 463, column: 38, scope: !4795)
!4801 = !DILocation(line: 463, column: 17, scope: !4783)
!4802 = !DILocation(line: 464, column: 24, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4795, file: !916, line: 463, column: 45)
!4804 = !DILocation(line: 464, column: 27, scope: !4803)
!4805 = !DILocation(line: 466, column: 24, scope: !4803)
!4806 = !DILocation(line: 466, column: 27, scope: !4803)
!4807 = !DILocation(line: 466, column: 42, scope: !4803)
!4808 = !DILocation(line: 466, column: 30, scope: !4803)
!4809 = !DILocation(line: 466, column: 39, scope: !4803)
!4810 = !DILocation(line: 466, column: 33, scope: !4803)
!4811 = !DILocation(line: 466, column: 45, scope: !4803)
!4812 = !DILocation(line: 464, column: 17, scope: !4803)
!4813 = !DILocation(line: 467, column: 17, scope: !4803)
!4814 = !DILocation(line: 467, column: 20, scope: !4803)
!4815 = !DILocation(line: 467, column: 32, scope: !4803)
!4816 = !DILocation(line: 467, column: 38, scope: !4803)
!4817 = !DILocation(line: 468, column: 17, scope: !4803)
!4818 = !DILocation(line: 470, column: 28, scope: !4819)
!4819 = distinct !DILexicalBlock(scope: !4783, file: !916, line: 470, column: 16)
!4820 = !DILocation(line: 470, column: 16, scope: !4819)
!4821 = !DILocation(line: 470, column: 25, scope: !4819)
!4822 = !DILocation(line: 470, column: 19, scope: !4819)
!4823 = !DILocation(line: 470, column: 31, scope: !4819)
!4824 = !DILocation(line: 470, column: 37, scope: !4819)
!4825 = !DILocation(line: 470, column: 41, scope: !4819)
!4826 = !DILocation(line: 470, column: 44, scope: !4827)
!4827 = !DILexicalBlockFile(scope: !4819, file: !916, discriminator: 1)
!4828 = !DILocation(line: 470, column: 47, scope: !4827)
!4829 = !DILocation(line: 470, column: 63, scope: !4827)
!4830 = !DILocation(line: 470, column: 16, scope: !4827)
!4831 = !DILocation(line: 472, column: 21, scope: !4832)
!4832 = distinct !DILexicalBlock(scope: !4833, file: !916, line: 472, column: 20)
!4833 = distinct !DILexicalBlock(scope: !4819, file: !916, line: 470, column: 70)
!4834 = !DILocation(line: 472, column: 20, scope: !4833)
!4835 = !DILocation(line: 473, column: 43, scope: !4832)
!4836 = !DILocation(line: 473, column: 46, scope: !4832)
!4837 = !DILocation(line: 474, column: 55, scope: !4832)
!4838 = !DILocation(line: 474, column: 43, scope: !4832)
!4839 = !DILocation(line: 474, column: 52, scope: !4832)
!4840 = !DILocation(line: 474, column: 46, scope: !4832)
!4841 = !DILocation(line: 474, column: 58, scope: !4832)
!4842 = !DILocation(line: 473, column: 21, scope: !4832)
!4843 = !DILocation(line: 475, column: 24, scope: !4833)
!4844 = !DILocation(line: 476, column: 13, scope: !4833)
!4845 = !DILocation(line: 477, column: 9, scope: !4783)
!4846 = !DILocation(line: 461, column: 43, scope: !4847)
!4847 = !DILexicalBlockFile(scope: !4776, file: !916, discriminator: 2)
!4848 = !DILocation(line: 461, column: 9, scope: !4847)
!4849 = distinct !{!4849, !4850}
!4850 = !DILocation(line: 461, column: 9, scope: !4740)
!4851 = !DILocation(line: 479, column: 16, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4740, file: !916, line: 479, column: 9)
!4853 = !DILocation(line: 479, column: 14, scope: !4852)
!4854 = !DILocation(line: 479, column: 21, scope: !4855)
!4855 = !DILexicalBlockFile(scope: !4856, file: !916, discriminator: 1)
!4856 = distinct !DILexicalBlock(scope: !4852, file: !916, line: 479, column: 9)
!4857 = !DILocation(line: 479, column: 38, scope: !4855)
!4858 = !DILocation(line: 479, column: 25, scope: !4855)
!4859 = !DILocation(line: 479, column: 28, scope: !4855)
!4860 = !DILocation(line: 479, column: 23, scope: !4855)
!4861 = !DILocation(line: 479, column: 9, scope: !4855)
!4862 = !DILocation(line: 480, column: 48, scope: !4856)
!4863 = !DILocation(line: 480, column: 51, scope: !4856)
!4864 = !DILocation(line: 480, column: 38, scope: !4856)
!4865 = !DILocation(line: 480, column: 25, scope: !4856)
!4866 = !DILocation(line: 480, column: 13, scope: !4856)
!4867 = !DILocation(line: 480, column: 22, scope: !4856)
!4868 = !DILocation(line: 480, column: 16, scope: !4856)
!4869 = !DILocation(line: 480, column: 28, scope: !4856)
!4870 = !DILocation(line: 480, column: 36, scope: !4856)
!4871 = !DILocation(line: 479, column: 43, scope: !4872)
!4872 = !DILexicalBlockFile(scope: !4856, file: !916, discriminator: 2)
!4873 = !DILocation(line: 479, column: 9, scope: !4872)
!4874 = distinct !{!4874, !4875}
!4875 = !DILocation(line: 479, column: 9, scope: !4740)
!4876 = !DILocation(line: 482, column: 13, scope: !4739)
!4877 = !DILocation(line: 482, column: 13, scope: !4740)
!4878 = !DILocation(line: 483, column: 20, scope: !4737)
!4879 = !DILocation(line: 483, column: 18, scope: !4737)
!4880 = !DILocation(line: 483, column: 25, scope: !4881)
!4881 = !DILexicalBlockFile(scope: !4736, file: !916, discriminator: 1)
!4882 = !DILocation(line: 483, column: 42, scope: !4881)
!4883 = !DILocation(line: 483, column: 29, scope: !4881)
!4884 = !DILocation(line: 483, column: 32, scope: !4881)
!4885 = !DILocation(line: 483, column: 27, scope: !4881)
!4886 = !DILocation(line: 483, column: 13, scope: !4881)
!4887 = !DILocalVariable(name: "cbits", scope: !4735, file: !916, line: 484, type: !904)
!4888 = !DILocation(line: 484, column: 21, scope: !4735)
!4889 = !DILocalVariable(name: "shift_l", scope: !4735, file: !916, line: 484, type: !904)
!4890 = !DILocation(line: 484, column: 28, scope: !4735)
!4891 = !DILocalVariable(name: "shift_r", scope: !4735, file: !916, line: 484, type: !904)
!4892 = !DILocation(line: 484, column: 37, scope: !4735)
!4893 = !DILocalVariable(name: "j", scope: !4735, file: !916, line: 484, type: !904)
!4894 = !DILocation(line: 484, column: 46, scope: !4735)
!4895 = !DILocation(line: 485, column: 58, scope: !4735)
!4896 = !DILocation(line: 485, column: 46, scope: !4735)
!4897 = !DILocation(line: 485, column: 55, scope: !4735)
!4898 = !DILocation(line: 485, column: 49, scope: !4735)
!4899 = !DILocation(line: 485, column: 61, scope: !4735)
!4900 = !DILocation(line: 485, column: 67, scope: !4735)
!4901 = !DILocation(line: 485, column: 31, scope: !4735)
!4902 = !DILocation(line: 485, column: 29, scope: !4735)
!4903 = !DILocation(line: 485, column: 23, scope: !4735)
!4904 = !DILocation(line: 486, column: 27, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4735, file: !916, line: 486, column: 21)
!4906 = !DILocation(line: 486, column: 24, scope: !4905)
!4907 = !DILocation(line: 486, column: 48, scope: !4905)
!4908 = !DILocation(line: 486, column: 36, scope: !4905)
!4909 = !DILocation(line: 486, column: 45, scope: !4905)
!4910 = !DILocation(line: 486, column: 39, scope: !4905)
!4911 = !DILocation(line: 486, column: 51, scope: !4905)
!4912 = !DILocation(line: 486, column: 34, scope: !4905)
!4913 = !DILocation(line: 486, column: 21, scope: !4735)
!4914 = !DILocation(line: 487, column: 26, scope: !4905)
!4915 = !DILocation(line: 487, column: 21, scope: !4905)
!4916 = !DILocation(line: 488, column: 53, scope: !4735)
!4917 = !DILocation(line: 488, column: 56, scope: !4735)
!4918 = !DILocation(line: 488, column: 60, scope: !4735)
!4919 = !DILocation(line: 488, column: 43, scope: !4735)
!4920 = !DILocation(line: 488, column: 67, scope: !4735)
!4921 = !DILocation(line: 488, column: 29, scope: !4735)
!4922 = !DILocation(line: 488, column: 17, scope: !4735)
!4923 = !DILocation(line: 488, column: 26, scope: !4735)
!4924 = !DILocation(line: 488, column: 20, scope: !4735)
!4925 = !DILocation(line: 488, column: 32, scope: !4735)
!4926 = !DILocation(line: 488, column: 41, scope: !4735)
!4927 = !DILocation(line: 490, column: 58, scope: !4735)
!4928 = !DILocation(line: 490, column: 46, scope: !4735)
!4929 = !DILocation(line: 490, column: 55, scope: !4735)
!4930 = !DILocation(line: 490, column: 49, scope: !4735)
!4931 = !DILocation(line: 490, column: 61, scope: !4735)
!4932 = !DILocation(line: 490, column: 69, scope: !4735)
!4933 = !DILocation(line: 490, column: 73, scope: !4735)
!4934 = !DILocation(line: 490, column: 31, scope: !4735)
!4935 = !DILocation(line: 490, column: 29, scope: !4735)
!4936 = !DILocation(line: 490, column: 23, scope: !4735)
!4937 = !DILocation(line: 491, column: 27, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4735, file: !916, line: 491, column: 21)
!4939 = !DILocation(line: 491, column: 24, scope: !4938)
!4940 = !DILocation(line: 491, column: 48, scope: !4938)
!4941 = !DILocation(line: 491, column: 36, scope: !4938)
!4942 = !DILocation(line: 491, column: 45, scope: !4938)
!4943 = !DILocation(line: 491, column: 39, scope: !4938)
!4944 = !DILocation(line: 491, column: 51, scope: !4938)
!4945 = !DILocation(line: 491, column: 59, scope: !4938)
!4946 = !DILocation(line: 491, column: 34, scope: !4938)
!4947 = !DILocation(line: 491, column: 21, scope: !4735)
!4948 = !DILocation(line: 492, column: 26, scope: !4938)
!4949 = !DILocation(line: 492, column: 21, scope: !4938)
!4950 = !DILocation(line: 494, column: 53, scope: !4735)
!4951 = !DILocation(line: 494, column: 56, scope: !4735)
!4952 = !DILocation(line: 494, column: 60, scope: !4735)
!4953 = !DILocation(line: 494, column: 42, scope: !4735)
!4954 = !DILocation(line: 414, column: 12, scope: !4534, inlinedAt: !4734)
!4955 = !DILocation(line: 414, column: 25, scope: !4575, inlinedAt: !4734)
!4956 = !DILocation(line: 414, column: 28, scope: !4575, inlinedAt: !4734)
!4957 = !DILocation(line: 414, column: 16, scope: !4575, inlinedAt: !4734)
!4958 = !DILocation(line: 414, column: 12, scope: !4575, inlinedAt: !4734)
!4959 = !DILocation(line: 414, column: 12, scope: !4580, inlinedAt: !4734)
!4960 = !DILocation(line: 414, column: 12, scope: !4582, inlinedAt: !4734)
!4961 = !DILocation(line: 494, column: 67, scope: !4735)
!4962 = !DILocation(line: 494, column: 29, scope: !4735)
!4963 = !DILocation(line: 494, column: 17, scope: !4735)
!4964 = !DILocation(line: 494, column: 26, scope: !4735)
!4965 = !DILocation(line: 494, column: 20, scope: !4735)
!4966 = !DILocation(line: 494, column: 32, scope: !4735)
!4967 = !DILocation(line: 494, column: 40, scope: !4735)
!4968 = !DILocation(line: 495, column: 44, scope: !4735)
!4969 = !DILocation(line: 495, column: 32, scope: !4735)
!4970 = !DILocation(line: 495, column: 41, scope: !4735)
!4971 = !DILocation(line: 495, column: 35, scope: !4735)
!4972 = !DILocation(line: 495, column: 47, scope: !4735)
!4973 = !DILocation(line: 495, column: 30, scope: !4735)
!4974 = !DILocation(line: 495, column: 25, scope: !4735)
!4975 = !DILocation(line: 496, column: 44, scope: !4735)
!4976 = !DILocation(line: 496, column: 32, scope: !4735)
!4977 = !DILocation(line: 496, column: 41, scope: !4735)
!4978 = !DILocation(line: 496, column: 35, scope: !4735)
!4979 = !DILocation(line: 496, column: 47, scope: !4735)
!4980 = !DILocation(line: 496, column: 30, scope: !4735)
!4981 = !DILocation(line: 496, column: 55, scope: !4735)
!4982 = !DILocation(line: 496, column: 25, scope: !4735)
!4983 = !DILocation(line: 497, column: 24, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4735, file: !916, line: 497, column: 17)
!4985 = !DILocation(line: 497, column: 22, scope: !4984)
!4986 = !DILocation(line: 497, column: 29, scope: !4987)
!4987 = !DILexicalBlockFile(scope: !4988, file: !916, discriminator: 1)
!4988 = distinct !DILexicalBlock(scope: !4984, file: !916, line: 497, column: 17)
!4989 = !DILocation(line: 497, column: 45, scope: !4987)
!4990 = !DILocation(line: 497, column: 33, scope: !4987)
!4991 = !DILocation(line: 497, column: 42, scope: !4987)
!4992 = !DILocation(line: 497, column: 36, scope: !4987)
!4993 = !DILocation(line: 497, column: 48, scope: !4987)
!4994 = !DILocation(line: 497, column: 31, scope: !4987)
!4995 = !DILocation(line: 497, column: 17, scope: !4987)
!4996 = !DILocation(line: 499, column: 36, scope: !4988)
!4997 = !DILocation(line: 499, column: 39, scope: !4988)
!4998 = !DILocation(line: 499, column: 55, scope: !4988)
!4999 = !DILocation(line: 499, column: 43, scope: !4988)
!5000 = !DILocation(line: 499, column: 52, scope: !4988)
!5001 = !DILocation(line: 499, column: 46, scope: !4988)
!5002 = !DILocation(line: 499, column: 58, scope: !4988)
!5003 = !DILocation(line: 499, column: 26, scope: !4988)
!5004 = !DILocation(line: 499, column: 70, scope: !4988)
!5005 = !DILocation(line: 499, column: 67, scope: !4988)
!5006 = !DILocation(line: 499, column: 82, scope: !4988)
!5007 = !DILocation(line: 499, column: 79, scope: !4988)
!5008 = !DILocation(line: 499, column: 25, scope: !4988)
!5009 = !DILocation(line: 498, column: 42, scope: !4988)
!5010 = !DILocation(line: 498, column: 21, scope: !4988)
!5011 = !DILocation(line: 498, column: 33, scope: !4988)
!5012 = !DILocation(line: 498, column: 30, scope: !4988)
!5013 = !DILocation(line: 498, column: 24, scope: !4988)
!5014 = !DILocation(line: 498, column: 36, scope: !4988)
!5015 = !DILocation(line: 498, column: 45, scope: !4988)
!5016 = !DILocation(line: 497, column: 59, scope: !5017)
!5017 = !DILexicalBlockFile(scope: !4988, file: !916, discriminator: 2)
!5018 = !DILocation(line: 497, column: 17, scope: !5017)
!5019 = distinct !{!5019, !5020}
!5020 = !DILocation(line: 497, column: 17, scope: !4735)
!5021 = !DILocation(line: 500, column: 13, scope: !4735)
!5022 = !DILocation(line: 483, column: 47, scope: !5023)
!5023 = !DILexicalBlockFile(scope: !4736, file: !916, discriminator: 2)
!5024 = !DILocation(line: 483, column: 13, scope: !5023)
!5025 = distinct !{!5025, !5026}
!5026 = !DILocation(line: 483, column: 13, scope: !4738)
!5027 = !DILocation(line: 501, column: 9, scope: !4738)
!5028 = !DILocation(line: 503, column: 16, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !4740, file: !916, line: 503, column: 9)
!5030 = !DILocation(line: 503, column: 14, scope: !5029)
!5031 = !DILocation(line: 503, column: 21, scope: !5032)
!5032 = !DILexicalBlockFile(scope: !5033, file: !916, discriminator: 1)
!5033 = distinct !DILexicalBlock(scope: !5029, file: !916, line: 503, column: 9)
!5034 = !DILocation(line: 503, column: 38, scope: !5032)
!5035 = !DILocation(line: 503, column: 25, scope: !5032)
!5036 = !DILocation(line: 503, column: 28, scope: !5032)
!5037 = !DILocation(line: 503, column: 23, scope: !5032)
!5038 = !DILocation(line: 503, column: 9, scope: !5032)
!5039 = !DILocation(line: 504, column: 32, scope: !5033)
!5040 = !DILocation(line: 504, column: 20, scope: !5033)
!5041 = !DILocation(line: 504, column: 29, scope: !5033)
!5042 = !DILocation(line: 504, column: 23, scope: !5033)
!5043 = !DILocation(line: 504, column: 35, scope: !5033)
!5044 = !DILocation(line: 504, column: 55, scope: !5033)
!5045 = !DILocation(line: 504, column: 43, scope: !5033)
!5046 = !DILocation(line: 504, column: 52, scope: !5033)
!5047 = !DILocation(line: 504, column: 46, scope: !5033)
!5048 = !DILocation(line: 504, column: 58, scope: !5033)
!5049 = !DILocation(line: 504, column: 41, scope: !5033)
!5050 = !DILocation(line: 504, column: 13, scope: !5033)
!5051 = !DILocation(line: 503, column: 43, scope: !5052)
!5052 = !DILexicalBlockFile(scope: !5033, file: !916, discriminator: 2)
!5053 = !DILocation(line: 503, column: 9, scope: !5052)
!5054 = distinct !{!5054, !5055}
!5055 = !DILocation(line: 503, column: 9, scope: !4740)
!5056 = !DILocation(line: 506, column: 5, scope: !4740)
!5057 = !DILocation(line: 459, column: 39, scope: !5058)
!5058 = !DILexicalBlockFile(scope: !4741, file: !916, discriminator: 2)
!5059 = !DILocation(line: 459, column: 5, scope: !5058)
!5060 = distinct !{!5060, !5061}
!5061 = !DILocation(line: 459, column: 5, scope: !1642)
!5062 = !DILocation(line: 508, column: 5, scope: !1642)
!5063 = !DILocation(line: 509, column: 1, scope: !1642)
!5064 = distinct !DISubprogram(name: "reset_codec", scope: !916, file: !916, line: 608, type: !4445, isLocal: true, isDefinition: true, scopeLine: 609, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!5065 = !DILocalVariable(name: "s", arg: 1, scope: !5064, file: !916, line: 608, type: !1645)
!5066 = !DILocation(line: 608, column: 41, scope: !5064)
!5067 = !DILocalVariable(name: "ich", scope: !5064, file: !916, line: 610, type: !904)
!5068 = !DILocation(line: 610, column: 9, scope: !5064)
!5069 = !DILocalVariable(name: "ilms", scope: !5064, file: !916, line: 610, type: !904)
!5070 = !DILocation(line: 610, column: 14, scope: !5064)
!5071 = !DILocation(line: 611, column: 23, scope: !5064)
!5072 = !DILocation(line: 611, column: 26, scope: !5064)
!5073 = !DILocation(line: 611, column: 40, scope: !5064)
!5074 = !DILocation(line: 611, column: 43, scope: !5064)
!5075 = !DILocation(line: 611, column: 38, scope: !5064)
!5076 = !DILocation(line: 611, column: 5, scope: !5064)
!5077 = !DILocation(line: 611, column: 8, scope: !5064)
!5078 = !DILocation(line: 611, column: 21, scope: !5064)
!5079 = !DILocation(line: 612, column: 14, scope: !5080)
!5080 = distinct !DILexicalBlock(scope: !5064, file: !916, line: 612, column: 5)
!5081 = !DILocation(line: 612, column: 10, scope: !5080)
!5082 = !DILocation(line: 612, column: 19, scope: !5083)
!5083 = !DILexicalBlockFile(scope: !5084, file: !916, discriminator: 1)
!5084 = distinct !DILexicalBlock(scope: !5080, file: !916, line: 612, column: 5)
!5085 = !DILocation(line: 612, column: 25, scope: !5083)
!5086 = !DILocation(line: 612, column: 28, scope: !5083)
!5087 = !DILocation(line: 612, column: 23, scope: !5083)
!5088 = !DILocation(line: 612, column: 5, scope: !5083)
!5089 = !DILocation(line: 613, column: 19, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !5091, file: !916, line: 613, column: 9)
!5091 = distinct !DILexicalBlock(scope: !5084, file: !916, line: 612, column: 49)
!5092 = !DILocation(line: 613, column: 14, scope: !5090)
!5093 = !DILocation(line: 613, column: 24, scope: !5094)
!5094 = !DILexicalBlockFile(scope: !5095, file: !916, discriminator: 1)
!5095 = distinct !DILexicalBlock(scope: !5090, file: !916, line: 613, column: 9)
!5096 = !DILocation(line: 613, column: 44, scope: !5094)
!5097 = !DILocation(line: 613, column: 31, scope: !5094)
!5098 = !DILocation(line: 613, column: 34, scope: !5094)
!5099 = !DILocation(line: 613, column: 29, scope: !5094)
!5100 = !DILocation(line: 613, column: 9, scope: !5094)
!5101 = !DILocation(line: 614, column: 56, scope: !5095)
!5102 = !DILocation(line: 614, column: 42, scope: !5095)
!5103 = !DILocation(line: 614, column: 51, scope: !5095)
!5104 = !DILocation(line: 614, column: 45, scope: !5095)
!5105 = !DILocation(line: 614, column: 62, scope: !5095)
!5106 = !DILocation(line: 614, column: 27, scope: !5095)
!5107 = !DILocation(line: 614, column: 13, scope: !5095)
!5108 = !DILocation(line: 614, column: 22, scope: !5095)
!5109 = !DILocation(line: 614, column: 16, scope: !5095)
!5110 = !DILocation(line: 614, column: 33, scope: !5095)
!5111 = !DILocation(line: 614, column: 40, scope: !5095)
!5112 = !DILocation(line: 613, column: 54, scope: !5113)
!5113 = !DILexicalBlockFile(scope: !5095, file: !916, discriminator: 2)
!5114 = !DILocation(line: 613, column: 9, scope: !5113)
!5115 = distinct !{!5115, !5116}
!5116 = !DILocation(line: 613, column: 9, scope: !5091)
!5117 = !DILocation(line: 617, column: 45, scope: !5091)
!5118 = !DILocation(line: 617, column: 48, scope: !5091)
!5119 = !DILocation(line: 617, column: 20, scope: !5091)
!5120 = !DILocation(line: 617, column: 9, scope: !5091)
!5121 = !DILocation(line: 617, column: 12, scope: !5091)
!5122 = !DILocation(line: 617, column: 25, scope: !5091)
!5123 = !DILocation(line: 617, column: 43, scope: !5091)
!5124 = !DILocation(line: 618, column: 22, scope: !5091)
!5125 = !DILocation(line: 618, column: 9, scope: !5091)
!5126 = !DILocation(line: 618, column: 12, scope: !5091)
!5127 = !DILocation(line: 618, column: 27, scope: !5091)
!5128 = !DILocation(line: 619, column: 26, scope: !5091)
!5129 = !DILocation(line: 619, column: 9, scope: !5091)
!5130 = !DILocation(line: 619, column: 12, scope: !5091)
!5131 = !DILocation(line: 619, column: 31, scope: !5091)
!5132 = !DILocation(line: 620, column: 5, scope: !5091)
!5133 = !DILocation(line: 612, column: 45, scope: !5134)
!5134 = !DILexicalBlockFile(scope: !5084, file: !916, discriminator: 2)
!5135 = !DILocation(line: 612, column: 5, scope: !5134)
!5136 = distinct !{!5136, !5137}
!5137 = !DILocation(line: 612, column: 5, scope: !5064)
!5138 = !DILocation(line: 621, column: 1, scope: !5064)
!5139 = distinct !DISubprogram(name: "decode_lpc", scope: !916, file: !916, line: 567, type: !4445, isLocal: true, isDefinition: true, scopeLine: 568, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!5140 = !DILocalVariable(name: "s", arg: 1, scope: !5139, file: !916, line: 567, type: !1645)
!5141 = !DILocation(line: 567, column: 40, scope: !5139)
!5142 = !DILocalVariable(name: "ch", scope: !5139, file: !916, line: 569, type: !904)
!5143 = !DILocation(line: 569, column: 9, scope: !5139)
!5144 = !DILocalVariable(name: "i", scope: !5139, file: !916, line: 569, type: !904)
!5145 = !DILocation(line: 569, column: 13, scope: !5139)
!5146 = !DILocalVariable(name: "cbits", scope: !5139, file: !916, line: 569, type: !904)
!5147 = !DILocation(line: 569, column: 16, scope: !5139)
!5148 = !DILocation(line: 570, column: 30, scope: !5139)
!5149 = !DILocation(line: 570, column: 33, scope: !5139)
!5150 = !DILocation(line: 570, column: 20, scope: !5139)
!5151 = !DILocation(line: 570, column: 40, scope: !5139)
!5152 = !DILocation(line: 570, column: 5, scope: !5139)
!5153 = !DILocation(line: 570, column: 8, scope: !5139)
!5154 = !DILocation(line: 570, column: 18, scope: !5139)
!5155 = !DILocation(line: 571, column: 32, scope: !5139)
!5156 = !DILocation(line: 571, column: 35, scope: !5139)
!5157 = !DILocation(line: 571, column: 22, scope: !5139)
!5158 = !DILocation(line: 571, column: 5, scope: !5139)
!5159 = !DILocation(line: 571, column: 8, scope: !5139)
!5160 = !DILocation(line: 571, column: 20, scope: !5139)
!5161 = !DILocation(line: 572, column: 32, scope: !5139)
!5162 = !DILocation(line: 572, column: 35, scope: !5139)
!5163 = !DILocation(line: 572, column: 22, scope: !5139)
!5164 = !DILocation(line: 572, column: 42, scope: !5139)
!5165 = !DILocation(line: 572, column: 5, scope: !5139)
!5166 = !DILocation(line: 572, column: 8, scope: !5139)
!5167 = !DILocation(line: 572, column: 20, scope: !5139)
!5168 = !DILocation(line: 573, column: 13, scope: !5139)
!5169 = !DILocation(line: 573, column: 16, scope: !5139)
!5170 = !DILocation(line: 573, column: 30, scope: !5139)
!5171 = !DILocation(line: 573, column: 33, scope: !5139)
!5172 = !DILocation(line: 573, column: 28, scope: !5139)
!5173 = !DILocation(line: 573, column: 11, scope: !5139)
!5174 = !DILocation(line: 574, column: 13, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5139, file: !916, line: 574, column: 5)
!5176 = !DILocation(line: 574, column: 10, scope: !5175)
!5177 = !DILocation(line: 574, column: 18, scope: !5178)
!5178 = !DILexicalBlockFile(scope: !5179, file: !916, discriminator: 1)
!5179 = distinct !DILexicalBlock(scope: !5175, file: !916, line: 574, column: 5)
!5180 = !DILocation(line: 574, column: 23, scope: !5178)
!5181 = !DILocation(line: 574, column: 26, scope: !5178)
!5182 = !DILocation(line: 574, column: 21, scope: !5178)
!5183 = !DILocation(line: 574, column: 5, scope: !5178)
!5184 = !DILocation(line: 575, column: 16, scope: !5185)
!5185 = distinct !DILexicalBlock(scope: !5179, file: !916, line: 575, column: 9)
!5186 = !DILocation(line: 575, column: 14, scope: !5185)
!5187 = !DILocation(line: 575, column: 21, scope: !5188)
!5188 = !DILexicalBlockFile(scope: !5189, file: !916, discriminator: 1)
!5189 = distinct !DILexicalBlock(scope: !5185, file: !916, line: 575, column: 9)
!5190 = !DILocation(line: 575, column: 25, scope: !5188)
!5191 = !DILocation(line: 575, column: 28, scope: !5188)
!5192 = !DILocation(line: 575, column: 23, scope: !5188)
!5193 = !DILocation(line: 575, column: 9, scope: !5188)
!5194 = !DILocation(line: 576, column: 46, scope: !5189)
!5195 = !DILocation(line: 576, column: 49, scope: !5189)
!5196 = !DILocation(line: 576, column: 53, scope: !5189)
!5197 = !DILocation(line: 576, column: 35, scope: !5189)
!5198 = !DILocation(line: 576, column: 30, scope: !5189)
!5199 = !DILocation(line: 576, column: 13, scope: !5189)
!5200 = !DILocation(line: 576, column: 26, scope: !5189)
!5201 = !DILocation(line: 576, column: 16, scope: !5189)
!5202 = !DILocation(line: 576, column: 33, scope: !5189)
!5203 = !DILocation(line: 575, column: 40, scope: !5204)
!5204 = !DILexicalBlockFile(scope: !5189, file: !916, discriminator: 2)
!5205 = !DILocation(line: 575, column: 9, scope: !5204)
!5206 = distinct !{!5206, !5207}
!5207 = !DILocation(line: 575, column: 9, scope: !5179)
!5208 = !DILocation(line: 576, column: 58, scope: !5209)
!5209 = !DILexicalBlockFile(scope: !5185, file: !916, discriminator: 1)
!5210 = !DILocation(line: 574, column: 42, scope: !5211)
!5211 = !DILexicalBlockFile(scope: !5179, file: !916, discriminator: 2)
!5212 = !DILocation(line: 574, column: 5, scope: !5211)
!5213 = distinct !{!5213, !5214}
!5214 = !DILocation(line: 574, column: 5, scope: !5139)
!5215 = !DILocation(line: 577, column: 1, scope: !5139)
!5216 = distinct !DISubprogram(name: "get_sbits_long", scope: !1695, file: !1695, line: 575, type: !4535, isLocal: true, isDefinition: true, scopeLine: 576, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!5217 = !DILocalVariable(name: "s", arg: 1, scope: !5216, file: !1695, line: 575, type: !2171)
!5218 = !DILocation(line: 575, column: 49, scope: !5216)
!5219 = !DILocalVariable(name: "n", arg: 2, scope: !5216, file: !1695, line: 575, type: !904)
!5220 = !DILocation(line: 575, column: 56, scope: !5216)
!5221 = !DILocation(line: 578, column: 10, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5216, file: !1695, line: 578, column: 9)
!5223 = !DILocation(line: 578, column: 9, scope: !5216)
!5224 = !DILocation(line: 579, column: 9, scope: !5222)
!5225 = !DILocation(line: 581, column: 38, scope: !5216)
!5226 = !DILocation(line: 581, column: 41, scope: !5216)
!5227 = !DILocation(line: 581, column: 24, scope: !5216)
!5228 = !DILocation(line: 581, column: 45, scope: !5216)
!5229 = !DILocation(line: 581, column: 12, scope: !5230)
!5230 = !DILexicalBlockFile(scope: !5216, file: !1695, discriminator: 1)
!5231 = !DILocation(line: 581, column: 5, scope: !5216)
!5232 = !DILocation(line: 582, column: 1, scope: !5216)
!5233 = distinct !DISubprogram(name: "decode_channel_residues", scope: !916, file: !916, line: 511, type: !5234, isLocal: true, isDefinition: true, scopeLine: 512, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!5234 = !DISubroutineType(types: !5235)
!5235 = !{!904, !1645, !904, !904}
!5236 = !DILocalVariable(name: "x", arg: 1, scope: !5237, file: !4333, line: 332, type: !904)
!5237 = distinct !DISubprogram(name: "av_ceil_log2_c", scope: !4333, file: !4333, line: 332, type: !5238, isLocal: true, isDefinition: true, scopeLine: 333, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!5238 = !DISubroutineType(types: !5239)
!5239 = !{!904, !904}
!5240 = !DILocation(line: 332, column: 92, scope: !5237, inlinedAt: !5241)
!5241 = distinct !DILocation(line: 551, column: 24, scope: !5242)
!5242 = distinct !DILexicalBlock(scope: !5243, file: !916, line: 550, column: 14)
!5243 = distinct !DILexicalBlock(scope: !5244, file: !916, line: 548, column: 13)
!5244 = distinct !DILexicalBlock(scope: !5245, file: !916, line: 537, column: 32)
!5245 = distinct !DILexicalBlock(scope: !5246, file: !916, line: 537, column: 5)
!5246 = distinct !DILexicalBlock(scope: !5233, file: !916, line: 537, column: 5)
!5247 = !DILocalVariable(name: "s", arg: 1, scope: !5233, file: !916, line: 511, type: !1645)
!5248 = !DILocation(line: 511, column: 52, scope: !5233)
!5249 = !DILocalVariable(name: "ch", arg: 2, scope: !5233, file: !916, line: 511, type: !904)
!5250 = !DILocation(line: 511, column: 59, scope: !5233)
!5251 = !DILocalVariable(name: "tile_size", arg: 3, scope: !5233, file: !916, line: 511, type: !904)
!5252 = !DILocation(line: 511, column: 67, scope: !5233)
!5253 = !DILocalVariable(name: "i", scope: !5233, file: !916, line: 513, type: !904)
!5254 = !DILocation(line: 513, column: 9, scope: !5233)
!5255 = !DILocalVariable(name: "ave_mean", scope: !5233, file: !916, line: 514, type: !903)
!5256 = !DILocation(line: 514, column: 18, scope: !5233)
!5257 = !DILocation(line: 515, column: 35, scope: !5233)
!5258 = !DILocation(line: 515, column: 38, scope: !5233)
!5259 = !DILocation(line: 515, column: 24, scope: !5233)
!5260 = !DILocation(line: 515, column: 18, scope: !5233)
!5261 = !DILocation(line: 515, column: 5, scope: !5233)
!5262 = !DILocation(line: 515, column: 8, scope: !5233)
!5263 = !DILocation(line: 515, column: 22, scope: !5233)
!5264 = !DILocation(line: 516, column: 22, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !5233, file: !916, line: 516, column: 9)
!5266 = !DILocation(line: 516, column: 9, scope: !5265)
!5267 = !DILocation(line: 516, column: 12, scope: !5265)
!5268 = !DILocation(line: 516, column: 9, scope: !5233)
!5269 = !DILocation(line: 517, column: 42, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5265, file: !916, line: 516, column: 27)
!5271 = !DILocation(line: 517, column: 45, scope: !5270)
!5272 = !DILocation(line: 517, column: 70, scope: !5270)
!5273 = !DILocation(line: 517, column: 80, scope: !5270)
!5274 = !DILocation(line: 517, column: 55, scope: !5270)
!5275 = !DILocation(line: 517, column: 53, scope: !5270)
!5276 = !DILocation(line: 517, column: 32, scope: !5277)
!5277 = !DILexicalBlockFile(scope: !5270, file: !916, discriminator: 1)
!5278 = !DILocation(line: 517, column: 26, scope: !5270)
!5279 = !DILocation(line: 517, column: 9, scope: !5270)
!5280 = !DILocation(line: 517, column: 12, scope: !5270)
!5281 = !DILocation(line: 517, column: 30, scope: !5270)
!5282 = !DILocation(line: 518, column: 30, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5270, file: !916, line: 518, column: 13)
!5284 = !DILocation(line: 518, column: 13, scope: !5283)
!5285 = !DILocation(line: 518, column: 16, scope: !5283)
!5286 = !DILocation(line: 518, column: 13, scope: !5270)
!5287 = !DILocation(line: 519, column: 26, scope: !5283)
!5288 = !DILocation(line: 519, column: 13, scope: !5283)
!5289 = !DILocation(line: 519, column: 16, scope: !5283)
!5290 = !DILocation(line: 519, column: 30, scope: !5283)
!5291 = !DILocation(line: 521, column: 26, scope: !5270)
!5292 = !DILocation(line: 521, column: 15, scope: !5270)
!5293 = !DILocation(line: 521, column: 18, scope: !5270)
!5294 = !DILocation(line: 521, column: 30, scope: !5270)
!5295 = !DILocation(line: 521, column: 52, scope: !5270)
!5296 = !DILocation(line: 521, column: 55, scope: !5270)
!5297 = !DILocation(line: 521, column: 73, scope: !5270)
!5298 = !DILocation(line: 521, column: 49, scope: !5270)
!5299 = !DILocation(line: 521, column: 14, scope: !5270)
!5300 = !DILocation(line: 521, column: 92, scope: !5277)
!5301 = !DILocation(line: 521, column: 81, scope: !5277)
!5302 = !DILocation(line: 521, column: 84, scope: !5277)
!5303 = !DILocation(line: 521, column: 96, scope: !5277)
!5304 = !DILocation(line: 521, column: 14, scope: !5277)
!5305 = !DILocation(line: 521, column: 118, scope: !5306)
!5306 = !DILexicalBlockFile(scope: !5270, file: !916, discriminator: 2)
!5307 = !DILocation(line: 521, column: 121, scope: !5306)
!5308 = !DILocation(line: 521, column: 139, scope: !5306)
!5309 = !DILocation(line: 521, column: 14, scope: !5306)
!5310 = !DILocation(line: 521, column: 14, scope: !5311)
!5311 = !DILexicalBlockFile(scope: !5270, file: !916, discriminator: 3)
!5312 = !DILocation(line: 520, column: 20, scope: !5270)
!5313 = !DILocation(line: 520, column: 9, scope: !5270)
!5314 = !DILocation(line: 520, column: 12, scope: !5270)
!5315 = !DILocation(line: 520, column: 24, scope: !5270)
!5316 = !DILocation(line: 520, column: 42, scope: !5270)
!5317 = !DILocation(line: 522, column: 5, scope: !5270)
!5318 = !DILocation(line: 522, column: 27, scope: !5319)
!5319 = !DILexicalBlockFile(scope: !5320, file: !916, discriminator: 1)
!5320 = distinct !DILexicalBlock(scope: !5265, file: !916, line: 522, column: 16)
!5321 = !DILocation(line: 522, column: 16, scope: !5319)
!5322 = !DILocation(line: 522, column: 19, scope: !5319)
!5323 = !DILocation(line: 522, column: 31, scope: !5319)
!5324 = !DILocation(line: 523, column: 22, scope: !5320)
!5325 = !DILocation(line: 523, column: 9, scope: !5320)
!5326 = !DILocation(line: 523, column: 12, scope: !5320)
!5327 = !DILocation(line: 523, column: 26, scope: !5320)
!5328 = !DILocation(line: 525, column: 9, scope: !5329)
!5329 = distinct !DILexicalBlock(scope: !5233, file: !916, line: 525, column: 9)
!5330 = !DILocation(line: 525, column: 12, scope: !5329)
!5331 = !DILocation(line: 525, column: 9, scope: !5233)
!5332 = !DILocation(line: 526, column: 30, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5329, file: !916, line: 525, column: 27)
!5334 = !DILocation(line: 526, column: 33, scope: !5333)
!5335 = !DILocation(line: 526, column: 37, scope: !5333)
!5336 = !DILocation(line: 526, column: 40, scope: !5333)
!5337 = !DILocation(line: 526, column: 20, scope: !5333)
!5338 = !DILocation(line: 526, column: 18, scope: !5333)
!5339 = !DILocation(line: 527, column: 26, scope: !5333)
!5340 = !DILocation(line: 527, column: 39, scope: !5333)
!5341 = !DILocation(line: 527, column: 42, scope: !5333)
!5342 = !DILocation(line: 527, column: 57, scope: !5333)
!5343 = !DILocation(line: 527, column: 35, scope: !5333)
!5344 = !DILocation(line: 527, column: 20, scope: !5333)
!5345 = !DILocation(line: 527, column: 9, scope: !5333)
!5346 = !DILocation(line: 527, column: 12, scope: !5333)
!5347 = !DILocation(line: 527, column: 24, scope: !5333)
!5348 = !DILocation(line: 528, column: 5, scope: !5333)
!5349 = !DILocation(line: 530, column: 9, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5233, file: !916, line: 530, column: 9)
!5351 = !DILocation(line: 530, column: 12, scope: !5350)
!5352 = !DILocation(line: 530, column: 9, scope: !5233)
!5353 = !DILocation(line: 531, column: 13, scope: !5354)
!5354 = distinct !DILexicalBlock(scope: !5355, file: !916, line: 531, column: 13)
!5355 = distinct !DILexicalBlock(scope: !5350, file: !916, line: 530, column: 27)
!5356 = !DILocation(line: 531, column: 16, scope: !5354)
!5357 = !DILocation(line: 531, column: 13, scope: !5355)
!5358 = !DILocation(line: 532, column: 58, scope: !5354)
!5359 = !DILocation(line: 532, column: 61, scope: !5354)
!5360 = !DILocation(line: 532, column: 65, scope: !5354)
!5361 = !DILocation(line: 532, column: 68, scope: !5354)
!5362 = !DILocation(line: 532, column: 84, scope: !5354)
!5363 = !DILocation(line: 532, column: 42, scope: !5354)
!5364 = !DILocation(line: 532, column: 33, scope: !5354)
!5365 = !DILocation(line: 532, column: 13, scope: !5354)
!5366 = !DILocation(line: 532, column: 16, scope: !5354)
!5367 = !DILocation(line: 532, column: 40, scope: !5354)
!5368 = !DILocation(line: 534, column: 58, scope: !5354)
!5369 = !DILocation(line: 534, column: 61, scope: !5354)
!5370 = !DILocation(line: 534, column: 65, scope: !5354)
!5371 = !DILocation(line: 534, column: 68, scope: !5354)
!5372 = !DILocation(line: 534, column: 42, scope: !5354)
!5373 = !DILocation(line: 534, column: 33, scope: !5354)
!5374 = !DILocation(line: 534, column: 13, scope: !5354)
!5375 = !DILocation(line: 534, column: 16, scope: !5354)
!5376 = !DILocation(line: 534, column: 40, scope: !5354)
!5377 = !DILocation(line: 535, column: 10, scope: !5355)
!5378 = !DILocation(line: 536, column: 5, scope: !5355)
!5379 = !DILocation(line: 537, column: 5, scope: !5233)
!5380 = !DILocation(line: 537, column: 12, scope: !5381)
!5381 = !DILexicalBlockFile(scope: !5245, file: !916, discriminator: 1)
!5382 = !DILocation(line: 537, column: 16, scope: !5381)
!5383 = !DILocation(line: 537, column: 14, scope: !5381)
!5384 = !DILocation(line: 537, column: 5, scope: !5381)
!5385 = !DILocalVariable(name: "quo", scope: !5244, file: !916, line: 538, type: !904)
!5386 = !DILocation(line: 538, column: 13, scope: !5244)
!5387 = !DILocalVariable(name: "rem", scope: !5244, file: !916, line: 538, type: !904)
!5388 = !DILocation(line: 538, column: 22, scope: !5244)
!5389 = !DILocalVariable(name: "rem_bits", scope: !5244, file: !916, line: 538, type: !904)
!5390 = !DILocation(line: 538, column: 27, scope: !5244)
!5391 = !DILocalVariable(name: "residue", scope: !5244, file: !916, line: 538, type: !904)
!5392 = !DILocation(line: 538, column: 37, scope: !5244)
!5393 = !DILocation(line: 539, column: 9, scope: !5244)
!5394 = !DILocation(line: 539, column: 26, scope: !5395)
!5395 = !DILexicalBlockFile(scope: !5244, file: !916, discriminator: 1)
!5396 = !DILocation(line: 539, column: 29, scope: !5395)
!5397 = !DILocation(line: 539, column: 15, scope: !5395)
!5398 = !DILocation(line: 539, column: 9, scope: !5395)
!5399 = !DILocation(line: 540, column: 16, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !5244, file: !916, line: 539, column: 34)
!5401 = !DILocation(line: 541, column: 32, scope: !5402)
!5402 = distinct !DILexicalBlock(scope: !5400, file: !916, line: 541, column: 17)
!5403 = !DILocation(line: 541, column: 35, scope: !5402)
!5404 = !DILocation(line: 541, column: 17, scope: !5402)
!5405 = !DILocation(line: 541, column: 39, scope: !5402)
!5406 = !DILocation(line: 541, column: 17, scope: !5400)
!5407 = !DILocation(line: 542, column: 17, scope: !5402)
!5408 = !DILocation(line: 539, column: 9, scope: !5409)
!5409 = !DILexicalBlockFile(scope: !5244, file: !916, discriminator: 2)
!5410 = distinct !{!5410, !5393}
!5411 = !DILocation(line: 544, column: 13, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !5244, file: !916, line: 544, column: 13)
!5413 = !DILocation(line: 544, column: 17, scope: !5412)
!5414 = !DILocation(line: 544, column: 13, scope: !5244)
!5415 = !DILocation(line: 545, column: 35, scope: !5412)
!5416 = !DILocation(line: 545, column: 38, scope: !5412)
!5417 = !DILocation(line: 545, column: 52, scope: !5412)
!5418 = !DILocation(line: 545, column: 55, scope: !5412)
!5419 = !DILocation(line: 545, column: 42, scope: !5412)
!5420 = !DILocation(line: 545, column: 62, scope: !5412)
!5421 = !DILocation(line: 545, column: 20, scope: !5422)
!5422 = !DILexicalBlockFile(scope: !5412, file: !916, discriminator: 1)
!5423 = !DILocation(line: 545, column: 17, scope: !5412)
!5424 = !DILocation(line: 545, column: 13, scope: !5412)
!5425 = !DILocation(line: 547, column: 32, scope: !5244)
!5426 = !DILocation(line: 547, column: 21, scope: !5244)
!5427 = !DILocation(line: 547, column: 24, scope: !5244)
!5428 = !DILocation(line: 547, column: 44, scope: !5244)
!5429 = !DILocation(line: 547, column: 47, scope: !5244)
!5430 = !DILocation(line: 547, column: 41, scope: !5244)
!5431 = !DILocation(line: 547, column: 36, scope: !5244)
!5432 = !DILocation(line: 547, column: 68, scope: !5244)
!5433 = !DILocation(line: 547, column: 71, scope: !5244)
!5434 = !DILocation(line: 547, column: 86, scope: !5244)
!5435 = !DILocation(line: 547, column: 64, scope: !5244)
!5436 = !DILocation(line: 547, column: 18, scope: !5244)
!5437 = !DILocation(line: 548, column: 13, scope: !5243)
!5438 = !DILocation(line: 548, column: 22, scope: !5243)
!5439 = !DILocation(line: 548, column: 13, scope: !5244)
!5440 = !DILocation(line: 549, column: 23, scope: !5243)
!5441 = !DILocation(line: 549, column: 21, scope: !5243)
!5442 = !DILocation(line: 549, column: 13, scope: !5243)
!5443 = !DILocation(line: 551, column: 39, scope: !5242)
!5444 = !DILocation(line: 551, column: 24, scope: !5242)
!5445 = !DILocation(line: 334, column: 34, scope: !5237, inlinedAt: !5241)
!5446 = !DILocation(line: 334, column: 36, scope: !5237, inlinedAt: !5241)
!5447 = !DILocation(line: 334, column: 41, scope: !5237, inlinedAt: !5241)
!5448 = !DILocation(line: 334, column: 46, scope: !5237, inlinedAt: !5241)
!5449 = !DILocation(line: 334, column: 18, scope: !5237, inlinedAt: !5241)
!5450 = !DILocation(line: 334, column: 16, scope: !5237, inlinedAt: !5241)
!5451 = !DILocation(line: 551, column: 22, scope: !5242)
!5452 = !DILocation(line: 552, column: 34, scope: !5242)
!5453 = !DILocation(line: 552, column: 37, scope: !5242)
!5454 = !DILocation(line: 552, column: 41, scope: !5242)
!5455 = !DILocation(line: 552, column: 19, scope: !5242)
!5456 = !DILocation(line: 552, column: 17, scope: !5242)
!5457 = !DILocation(line: 553, column: 24, scope: !5242)
!5458 = !DILocation(line: 553, column: 31, scope: !5242)
!5459 = !DILocation(line: 553, column: 28, scope: !5242)
!5460 = !DILocation(line: 553, column: 43, scope: !5242)
!5461 = !DILocation(line: 553, column: 41, scope: !5242)
!5462 = !DILocation(line: 553, column: 21, scope: !5242)
!5463 = !DILocation(line: 556, column: 26, scope: !5244)
!5464 = !DILocation(line: 556, column: 47, scope: !5244)
!5465 = !DILocation(line: 556, column: 36, scope: !5244)
!5466 = !DILocation(line: 556, column: 39, scope: !5244)
!5467 = !DILocation(line: 556, column: 34, scope: !5244)
!5468 = !DILocation(line: 557, column: 38, scope: !5244)
!5469 = !DILocation(line: 557, column: 27, scope: !5244)
!5470 = !DILocation(line: 557, column: 30, scope: !5244)
!5471 = !DILocation(line: 557, column: 45, scope: !5244)
!5472 = !DILocation(line: 557, column: 48, scope: !5244)
!5473 = !DILocation(line: 557, column: 42, scope: !5244)
!5474 = !DILocation(line: 556, column: 51, scope: !5244)
!5475 = !DILocation(line: 556, column: 20, scope: !5244)
!5476 = !DILocation(line: 556, column: 9, scope: !5244)
!5477 = !DILocation(line: 556, column: 12, scope: !5244)
!5478 = !DILocation(line: 556, column: 24, scope: !5244)
!5479 = !DILocation(line: 559, column: 20, scope: !5244)
!5480 = !DILocation(line: 559, column: 28, scope: !5244)
!5481 = !DILocation(line: 559, column: 38, scope: !5244)
!5482 = !DILocation(line: 559, column: 46, scope: !5244)
!5483 = !DILocation(line: 559, column: 36, scope: !5244)
!5484 = !DILocation(line: 559, column: 34, scope: !5244)
!5485 = !DILocation(line: 559, column: 17, scope: !5244)
!5486 = !DILocation(line: 560, column: 38, scope: !5244)
!5487 = !DILocation(line: 560, column: 33, scope: !5244)
!5488 = !DILocation(line: 560, column: 9, scope: !5244)
!5489 = !DILocation(line: 560, column: 29, scope: !5244)
!5490 = !DILocation(line: 560, column: 12, scope: !5244)
!5491 = !DILocation(line: 560, column: 36, scope: !5244)
!5492 = !DILocation(line: 561, column: 5, scope: !5244)
!5493 = !DILocation(line: 537, column: 28, scope: !5494)
!5494 = !DILexicalBlockFile(scope: !5245, file: !916, discriminator: 2)
!5495 = !DILocation(line: 537, column: 5, scope: !5494)
!5496 = distinct !{!5496, !5379}
!5497 = !DILocation(line: 563, column: 5, scope: !5233)
!5498 = !DILocation(line: 565, column: 1, scope: !5233)
!5499 = distinct !DISubprogram(name: "use_high_update_speed", scope: !916, file: !916, line: 696, type: !5500, isLocal: true, isDefinition: true, scopeLine: 697, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!5500 = !DISubroutineType(types: !5501)
!5501 = !{null, !1645, !904}
!5502 = !DILocalVariable(name: "s", arg: 1, scope: !5499, file: !916, line: 696, type: !1645)
!5503 = !DILocation(line: 696, column: 51, scope: !5499)
!5504 = !DILocalVariable(name: "ich", arg: 2, scope: !5499, file: !916, line: 696, type: !904)
!5505 = !DILocation(line: 696, column: 58, scope: !5499)
!5506 = !DILocalVariable(name: "ilms", scope: !5499, file: !916, line: 698, type: !904)
!5507 = !DILocation(line: 698, column: 9, scope: !5499)
!5508 = !DILocalVariable(name: "recent", scope: !5499, file: !916, line: 698, type: !904)
!5509 = !DILocation(line: 698, column: 15, scope: !5499)
!5510 = !DILocalVariable(name: "icoef", scope: !5499, file: !916, line: 698, type: !904)
!5511 = !DILocation(line: 698, column: 23, scope: !5499)
!5512 = !DILocation(line: 699, column: 30, scope: !5513)
!5513 = distinct !DILexicalBlock(scope: !5499, file: !916, line: 699, column: 5)
!5514 = !DILocation(line: 699, column: 17, scope: !5513)
!5515 = !DILocation(line: 699, column: 20, scope: !5513)
!5516 = !DILocation(line: 699, column: 35, scope: !5513)
!5517 = !DILocation(line: 699, column: 15, scope: !5513)
!5518 = !DILocation(line: 699, column: 10, scope: !5513)
!5519 = !DILocation(line: 699, column: 40, scope: !5520)
!5520 = !DILexicalBlockFile(scope: !5521, file: !916, discriminator: 1)
!5521 = distinct !DILexicalBlock(scope: !5513, file: !916, line: 699, column: 5)
!5522 = !DILocation(line: 699, column: 45, scope: !5520)
!5523 = !DILocation(line: 699, column: 5, scope: !5520)
!5524 = !DILocation(line: 700, column: 32, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5521, file: !916, line: 699, column: 59)
!5526 = !DILocation(line: 700, column: 18, scope: !5525)
!5527 = !DILocation(line: 700, column: 27, scope: !5525)
!5528 = !DILocation(line: 700, column: 21, scope: !5525)
!5529 = !DILocation(line: 700, column: 38, scope: !5525)
!5530 = !DILocation(line: 700, column: 16, scope: !5525)
!5531 = !DILocation(line: 701, column: 29, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5525, file: !916, line: 701, column: 13)
!5533 = !DILocation(line: 701, column: 13, scope: !5532)
!5534 = !DILocation(line: 701, column: 16, scope: !5532)
!5535 = !DILocation(line: 701, column: 34, scope: !5532)
!5536 = !DILocation(line: 701, column: 13, scope: !5525)
!5537 = !DILocation(line: 702, column: 13, scope: !5532)
!5538 = !DILocation(line: 703, column: 13, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5525, file: !916, line: 703, column: 13)
!5540 = !DILocation(line: 703, column: 16, scope: !5539)
!5541 = !DILocation(line: 703, column: 13, scope: !5525)
!5542 = !DILocation(line: 704, column: 24, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5544, file: !916, line: 704, column: 13)
!5544 = distinct !DILexicalBlock(scope: !5539, file: !916, line: 703, column: 24)
!5545 = !DILocation(line: 704, column: 18, scope: !5543)
!5546 = !DILocation(line: 704, column: 29, scope: !5547)
!5547 = !DILexicalBlockFile(scope: !5548, file: !916, discriminator: 1)
!5548 = distinct !DILexicalBlock(scope: !5543, file: !916, line: 704, column: 13)
!5549 = !DILocation(line: 704, column: 51, scope: !5547)
!5550 = !DILocation(line: 704, column: 37, scope: !5547)
!5551 = !DILocation(line: 704, column: 46, scope: !5547)
!5552 = !DILocation(line: 704, column: 40, scope: !5547)
!5553 = !DILocation(line: 704, column: 57, scope: !5547)
!5554 = !DILocation(line: 704, column: 35, scope: !5547)
!5555 = !DILocation(line: 704, column: 13, scope: !5547)
!5556 = !DILocation(line: 705, column: 49, scope: !5548)
!5557 = !DILocation(line: 705, column: 57, scope: !5548)
!5558 = !DILocation(line: 705, column: 55, scope: !5548)
!5559 = !DILocation(line: 705, column: 17, scope: !5548)
!5560 = !DILocation(line: 705, column: 31, scope: !5548)
!5561 = !DILocation(line: 705, column: 26, scope: !5548)
!5562 = !DILocation(line: 705, column: 20, scope: !5548)
!5563 = !DILocation(line: 705, column: 37, scope: !5548)
!5564 = !DILocation(line: 705, column: 65, scope: !5548)
!5565 = !DILocation(line: 704, column: 69, scope: !5566)
!5566 = !DILexicalBlockFile(scope: !5548, file: !916, discriminator: 2)
!5567 = !DILocation(line: 704, column: 13, scope: !5566)
!5568 = distinct !{!5568, !5569}
!5569 = !DILocation(line: 704, column: 13, scope: !5544)
!5570 = !DILocation(line: 706, column: 9, scope: !5544)
!5571 = !DILocation(line: 707, column: 24, scope: !5572)
!5572 = distinct !DILexicalBlock(scope: !5573, file: !916, line: 707, column: 13)
!5573 = distinct !DILexicalBlock(scope: !5539, file: !916, line: 706, column: 16)
!5574 = !DILocation(line: 707, column: 18, scope: !5572)
!5575 = !DILocation(line: 707, column: 29, scope: !5576)
!5576 = !DILexicalBlockFile(scope: !5577, file: !916, discriminator: 1)
!5577 = distinct !DILexicalBlock(scope: !5572, file: !916, line: 707, column: 13)
!5578 = !DILocation(line: 707, column: 51, scope: !5576)
!5579 = !DILocation(line: 707, column: 37, scope: !5576)
!5580 = !DILocation(line: 707, column: 46, scope: !5576)
!5581 = !DILocation(line: 707, column: 40, scope: !5576)
!5582 = !DILocation(line: 707, column: 57, scope: !5576)
!5583 = !DILocation(line: 707, column: 35, scope: !5576)
!5584 = !DILocation(line: 707, column: 13, scope: !5576)
!5585 = !DILocation(line: 708, column: 49, scope: !5577)
!5586 = !DILocation(line: 708, column: 17, scope: !5577)
!5587 = !DILocation(line: 708, column: 31, scope: !5577)
!5588 = !DILocation(line: 708, column: 26, scope: !5577)
!5589 = !DILocation(line: 708, column: 20, scope: !5577)
!5590 = !DILocation(line: 708, column: 37, scope: !5577)
!5591 = !DILocation(line: 708, column: 56, scope: !5577)
!5592 = !DILocation(line: 707, column: 69, scope: !5593)
!5593 = !DILexicalBlockFile(scope: !5577, file: !916, discriminator: 2)
!5594 = !DILocation(line: 707, column: 13, scope: !5593)
!5595 = distinct !{!5595, !5596}
!5596 = !DILocation(line: 707, column: 13, scope: !5573)
!5597 = !DILocation(line: 710, column: 5, scope: !5525)
!5598 = !DILocation(line: 699, column: 55, scope: !5599)
!5599 = !DILexicalBlockFile(scope: !5521, file: !916, discriminator: 2)
!5600 = !DILocation(line: 699, column: 5, scope: !5599)
!5601 = distinct !{!5601, !5602}
!5602 = !DILocation(line: 699, column: 5, scope: !5499)
!5603 = !DILocation(line: 711, column: 21, scope: !5499)
!5604 = !DILocation(line: 711, column: 5, scope: !5499)
!5605 = !DILocation(line: 711, column: 8, scope: !5499)
!5606 = !DILocation(line: 711, column: 26, scope: !5499)
!5607 = !DILocation(line: 712, column: 1, scope: !5499)
!5608 = distinct !DISubprogram(name: "use_normal_update_speed", scope: !916, file: !916, line: 714, type: !5500, isLocal: true, isDefinition: true, scopeLine: 715, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!5609 = !DILocalVariable(name: "s", arg: 1, scope: !5608, file: !916, line: 714, type: !1645)
!5610 = !DILocation(line: 714, column: 53, scope: !5608)
!5611 = !DILocalVariable(name: "ich", arg: 2, scope: !5608, file: !916, line: 714, type: !904)
!5612 = !DILocation(line: 714, column: 60, scope: !5608)
!5613 = !DILocalVariable(name: "ilms", scope: !5608, file: !916, line: 716, type: !904)
!5614 = !DILocation(line: 716, column: 9, scope: !5608)
!5615 = !DILocalVariable(name: "recent", scope: !5608, file: !916, line: 716, type: !904)
!5616 = !DILocation(line: 716, column: 15, scope: !5608)
!5617 = !DILocalVariable(name: "icoef", scope: !5608, file: !916, line: 716, type: !904)
!5618 = !DILocation(line: 716, column: 23, scope: !5608)
!5619 = !DILocation(line: 717, column: 30, scope: !5620)
!5620 = distinct !DILexicalBlock(scope: !5608, file: !916, line: 717, column: 5)
!5621 = !DILocation(line: 717, column: 17, scope: !5620)
!5622 = !DILocation(line: 717, column: 20, scope: !5620)
!5623 = !DILocation(line: 717, column: 35, scope: !5620)
!5624 = !DILocation(line: 717, column: 15, scope: !5620)
!5625 = !DILocation(line: 717, column: 10, scope: !5620)
!5626 = !DILocation(line: 717, column: 40, scope: !5627)
!5627 = !DILexicalBlockFile(scope: !5628, file: !916, discriminator: 1)
!5628 = distinct !DILexicalBlock(scope: !5620, file: !916, line: 717, column: 5)
!5629 = !DILocation(line: 717, column: 45, scope: !5627)
!5630 = !DILocation(line: 717, column: 5, scope: !5627)
!5631 = !DILocation(line: 718, column: 32, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !5628, file: !916, line: 717, column: 59)
!5633 = !DILocation(line: 718, column: 18, scope: !5632)
!5634 = !DILocation(line: 718, column: 27, scope: !5632)
!5635 = !DILocation(line: 718, column: 21, scope: !5632)
!5636 = !DILocation(line: 718, column: 38, scope: !5632)
!5637 = !DILocation(line: 718, column: 16, scope: !5632)
!5638 = !DILocation(line: 719, column: 29, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5632, file: !916, line: 719, column: 13)
!5640 = !DILocation(line: 719, column: 13, scope: !5639)
!5641 = !DILocation(line: 719, column: 16, scope: !5639)
!5642 = !DILocation(line: 719, column: 34, scope: !5639)
!5643 = !DILocation(line: 719, column: 13, scope: !5632)
!5644 = !DILocation(line: 720, column: 13, scope: !5639)
!5645 = !DILocation(line: 721, column: 13, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !5632, file: !916, line: 721, column: 13)
!5647 = !DILocation(line: 721, column: 16, scope: !5646)
!5648 = !DILocation(line: 721, column: 13, scope: !5632)
!5649 = !DILocation(line: 722, column: 24, scope: !5650)
!5650 = distinct !DILexicalBlock(scope: !5646, file: !916, line: 722, column: 13)
!5651 = !DILocation(line: 722, column: 18, scope: !5650)
!5652 = !DILocation(line: 722, column: 29, scope: !5653)
!5653 = !DILexicalBlockFile(scope: !5654, file: !916, discriminator: 1)
!5654 = distinct !DILexicalBlock(scope: !5650, file: !916, line: 722, column: 13)
!5655 = !DILocation(line: 722, column: 51, scope: !5653)
!5656 = !DILocation(line: 722, column: 37, scope: !5653)
!5657 = !DILocation(line: 722, column: 46, scope: !5653)
!5658 = !DILocation(line: 722, column: 40, scope: !5653)
!5659 = !DILocation(line: 722, column: 57, scope: !5653)
!5660 = !DILocation(line: 722, column: 35, scope: !5653)
!5661 = !DILocation(line: 722, column: 13, scope: !5653)
!5662 = !DILocation(line: 723, column: 49, scope: !5654)
!5663 = !DILocation(line: 723, column: 57, scope: !5654)
!5664 = !DILocation(line: 723, column: 55, scope: !5654)
!5665 = !DILocation(line: 723, column: 17, scope: !5654)
!5666 = !DILocation(line: 723, column: 31, scope: !5654)
!5667 = !DILocation(line: 723, column: 26, scope: !5654)
!5668 = !DILocation(line: 723, column: 20, scope: !5654)
!5669 = !DILocation(line: 723, column: 37, scope: !5654)
!5670 = !DILocation(line: 723, column: 65, scope: !5654)
!5671 = !DILocation(line: 722, column: 69, scope: !5672)
!5672 = !DILexicalBlockFile(scope: !5654, file: !916, discriminator: 2)
!5673 = !DILocation(line: 722, column: 13, scope: !5672)
!5674 = distinct !{!5674, !5675}
!5675 = !DILocation(line: 722, column: 13, scope: !5646)
!5676 = !DILocation(line: 723, column: 68, scope: !5677)
!5677 = !DILexicalBlockFile(scope: !5650, file: !916, discriminator: 1)
!5678 = !DILocation(line: 725, column: 24, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !5646, file: !916, line: 725, column: 13)
!5680 = !DILocation(line: 725, column: 18, scope: !5679)
!5681 = !DILocation(line: 725, column: 29, scope: !5682)
!5682 = !DILexicalBlockFile(scope: !5683, file: !916, discriminator: 1)
!5683 = distinct !DILexicalBlock(scope: !5679, file: !916, line: 725, column: 13)
!5684 = !DILocation(line: 725, column: 51, scope: !5682)
!5685 = !DILocation(line: 725, column: 37, scope: !5682)
!5686 = !DILocation(line: 725, column: 46, scope: !5682)
!5687 = !DILocation(line: 725, column: 40, scope: !5682)
!5688 = !DILocation(line: 725, column: 57, scope: !5682)
!5689 = !DILocation(line: 725, column: 35, scope: !5682)
!5690 = !DILocation(line: 725, column: 13, scope: !5682)
!5691 = !DILocation(line: 726, column: 49, scope: !5683)
!5692 = !DILocation(line: 726, column: 17, scope: !5683)
!5693 = !DILocation(line: 726, column: 31, scope: !5683)
!5694 = !DILocation(line: 726, column: 26, scope: !5683)
!5695 = !DILocation(line: 726, column: 20, scope: !5683)
!5696 = !DILocation(line: 726, column: 37, scope: !5683)
!5697 = !DILocation(line: 726, column: 56, scope: !5683)
!5698 = !DILocation(line: 725, column: 69, scope: !5699)
!5699 = !DILexicalBlockFile(scope: !5683, file: !916, discriminator: 2)
!5700 = !DILocation(line: 725, column: 13, scope: !5699)
!5701 = distinct !{!5701, !5702}
!5702 = !DILocation(line: 725, column: 13, scope: !5646)
!5703 = !DILocation(line: 727, column: 5, scope: !5632)
!5704 = !DILocation(line: 717, column: 55, scope: !5705)
!5705 = !DILexicalBlockFile(scope: !5628, file: !916, discriminator: 2)
!5706 = !DILocation(line: 717, column: 5, scope: !5705)
!5707 = distinct !{!5707, !5708}
!5708 = !DILocation(line: 717, column: 5, scope: !5608)
!5709 = !DILocation(line: 728, column: 21, scope: !5608)
!5710 = !DILocation(line: 728, column: 5, scope: !5608)
!5711 = !DILocation(line: 728, column: 8, scope: !5608)
!5712 = !DILocation(line: 728, column: 26, scope: !5608)
!5713 = !DILocation(line: 729, column: 1, scope: !5608)
!5714 = distinct !DISubprogram(name: "revert_cdlms32", scope: !916, file: !916, line: 786, type: !5715, isLocal: true, isDefinition: true, scopeLine: 786, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!5715 = !DISubroutineType(types: !5716)
!5716 = !{null, !1645, !904, !904, !904}
!5717 = !DILocalVariable(name: "s", arg: 1, scope: !5714, file: !916, line: 786, type: !1645)
!5718 = !DILocation(line: 786, column: 1006, scope: !5714)
!5719 = !DILocalVariable(name: "ch", arg: 2, scope: !5714, file: !916, line: 786, type: !904)
!5720 = !DILocation(line: 786, column: 1013, scope: !5714)
!5721 = !DILocalVariable(name: "coef_begin", arg: 3, scope: !5714, file: !916, line: 786, type: !904)
!5722 = !DILocation(line: 786, column: 1021, scope: !5714)
!5723 = !DILocalVariable(name: "coef_end", arg: 4, scope: !5714, file: !916, line: 786, type: !904)
!5724 = !DILocation(line: 786, column: 1037, scope: !5714)
!5725 = !DILocalVariable(name: "icoef", scope: !5714, file: !916, line: 786, type: !904)
!5726 = !DILocation(line: 786, column: 1053, scope: !5714)
!5727 = !DILocalVariable(name: "pred", scope: !5714, file: !916, line: 786, type: !904)
!5728 = !DILocation(line: 786, column: 1060, scope: !5714)
!5729 = !DILocalVariable(name: "ilms", scope: !5714, file: !916, line: 786, type: !904)
!5730 = !DILocation(line: 786, column: 1066, scope: !5714)
!5731 = !DILocalVariable(name: "num_lms", scope: !5714, file: !916, line: 786, type: !904)
!5732 = !DILocation(line: 786, column: 1072, scope: !5714)
!5733 = !DILocalVariable(name: "residue", scope: !5714, file: !916, line: 786, type: !904)
!5734 = !DILocation(line: 786, column: 1081, scope: !5714)
!5735 = !DILocalVariable(name: "input", scope: !5714, file: !916, line: 786, type: !904)
!5736 = !DILocation(line: 786, column: 1090, scope: !5714)
!5737 = !DILocation(line: 786, column: 1120, scope: !5714)
!5738 = !DILocation(line: 786, column: 1107, scope: !5714)
!5739 = !DILocation(line: 786, column: 1110, scope: !5714)
!5740 = !DILocation(line: 786, column: 1105, scope: !5714)
!5741 = !DILocation(line: 786, column: 1137, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5714, file: !916, line: 786, column: 1125)
!5743 = !DILocation(line: 786, column: 1145, scope: !5742)
!5744 = !DILocation(line: 786, column: 1135, scope: !5742)
!5745 = !DILocation(line: 786, column: 1130, scope: !5742)
!5746 = !DILocation(line: 786, column: 1150, scope: !5747)
!5747 = !DILexicalBlockFile(scope: !5748, file: !916, discriminator: 1)
!5748 = distinct !DILexicalBlock(scope: !5742, file: !916, line: 786, column: 1125)
!5749 = !DILocation(line: 786, column: 1155, scope: !5747)
!5750 = !DILocation(line: 786, column: 1125, scope: !5747)
!5751 = !DILocation(line: 786, column: 1184, scope: !5752)
!5752 = !DILexicalBlockFile(scope: !5753, file: !916, discriminator: 2)
!5753 = distinct !DILexicalBlock(scope: !5754, file: !916, line: 786, column: 1171)
!5754 = distinct !DILexicalBlock(scope: !5748, file: !916, line: 786, column: 1169)
!5755 = !DILocation(line: 786, column: 1182, scope: !5752)
!5756 = !DILocation(line: 786, column: 1176, scope: !5752)
!5757 = !DILocation(line: 786, column: 1196, scope: !5758)
!5758 = !DILexicalBlockFile(scope: !5759, file: !916, discriminator: 3)
!5759 = distinct !DILexicalBlock(scope: !5753, file: !916, line: 786, column: 1171)
!5760 = !DILocation(line: 786, column: 1204, scope: !5758)
!5761 = !DILocation(line: 786, column: 1202, scope: !5758)
!5762 = !DILocation(line: 786, column: 1171, scope: !5758)
!5763 = !DILocalVariable(name: "prevvalues", scope: !5764, file: !916, line: 786, type: !909)
!5764 = distinct !DILexicalBlock(scope: !5759, file: !916, line: 786, column: 1223)
!5765 = !DILocation(line: 786, column: 1234, scope: !5764)
!5766 = !DILocation(line: 786, column: 1271, scope: !5767)
!5767 = !DILexicalBlockFile(scope: !5764, file: !916, discriminator: 4)
!5768 = !DILocation(line: 786, column: 1258, scope: !5767)
!5769 = !DILocation(line: 786, column: 1267, scope: !5767)
!5770 = !DILocation(line: 786, column: 1261, scope: !5767)
!5771 = !DILocation(line: 786, column: 1277, scope: !5767)
!5772 = !DILocation(line: 786, column: 1234, scope: !5767)
!5773 = !DILocation(line: 786, column: 1319, scope: !5767)
!5774 = !DILocation(line: 786, column: 1306, scope: !5767)
!5775 = !DILocation(line: 786, column: 1315, scope: !5767)
!5776 = !DILocation(line: 786, column: 1309, scope: !5767)
!5777 = !DILocation(line: 786, column: 1325, scope: !5767)
!5778 = !DILocation(line: 786, column: 1333, scope: !5767)
!5779 = !DILocation(line: 786, column: 1302, scope: !5767)
!5780 = !DILocation(line: 786, column: 1298, scope: !5767)
!5781 = !DILocation(line: 786, column: 1373, scope: !5767)
!5782 = !DILocation(line: 786, column: 1349, scope: !5767)
!5783 = !DILocation(line: 786, column: 1369, scope: !5767)
!5784 = !DILocation(line: 786, column: 1352, scope: !5767)
!5785 = !DILocation(line: 786, column: 1347, scope: !5767)
!5786 = !DILocation(line: 786, column: 1389, scope: !5767)
!5787 = !DILocation(line: 786, column: 1392, scope: !5767)
!5788 = !DILocation(line: 786, column: 1396, scope: !5767)
!5789 = !DILocation(line: 786, column: 1439, scope: !5767)
!5790 = !DILocation(line: 786, column: 1426, scope: !5767)
!5791 = !DILocation(line: 786, column: 1435, scope: !5767)
!5792 = !DILocation(line: 786, column: 1429, scope: !5767)
!5793 = !DILocation(line: 786, column: 1445, scope: !5767)
!5794 = !DILocation(line: 786, column: 1452, scope: !5767)
!5795 = !DILocation(line: 786, column: 1478, scope: !5767)
!5796 = !DILocation(line: 786, column: 1465, scope: !5767)
!5797 = !DILocation(line: 786, column: 1474, scope: !5767)
!5798 = !DILocation(line: 786, column: 1468, scope: !5767)
!5799 = !DILocation(line: 786, column: 1484, scope: !5767)
!5800 = !DILocation(line: 786, column: 1463, scope: !5767)
!5801 = !DILocation(line: 786, column: 1505, scope: !5767)
!5802 = !DILocation(line: 786, column: 1492, scope: !5767)
!5803 = !DILocation(line: 786, column: 1501, scope: !5767)
!5804 = !DILocation(line: 786, column: 1495, scope: !5767)
!5805 = !DILocation(line: 786, column: 1511, scope: !5767)
!5806 = !DILocation(line: 786, column: 1538, scope: !5767)
!5807 = !DILocation(line: 786, column: 1525, scope: !5767)
!5808 = !DILocation(line: 786, column: 1534, scope: !5767)
!5809 = !DILocation(line: 786, column: 1528, scope: !5767)
!5810 = !DILocation(line: 786, column: 1544, scope: !5767)
!5811 = !DILocation(line: 786, column: 1523, scope: !5767)
!5812 = !DILocation(line: 786, column: 1568, scope: !5767)
!5813 = !DILocation(line: 786, column: 1555, scope: !5767)
!5814 = !DILocation(line: 786, column: 1564, scope: !5767)
!5815 = !DILocation(line: 786, column: 1558, scope: !5767)
!5816 = !DILocation(line: 786, column: 1574, scope: !5767)
!5817 = !DILocation(line: 786, column: 1580, scope: !5767)
!5818 = !DILocation(line: 786, column: 1584, scope: !5767)
!5819 = !DILocation(line: 786, column: 1587, scope: !5767)
!5820 = !DILocation(line: 786, column: 1602, scope: !5767)
!5821 = !DILocation(line: 786, column: 1611, scope: !5767)
!5822 = !DILocation(line: 786, column: 1620, scope: !5767)
!5823 = !DILocation(line: 786, column: 1629, scope: !5767)
!5824 = !DILocation(line: 786, column: 1616, scope: !5767)
!5825 = !DILocation(line: 786, column: 1386, scope: !5767)
!5826 = !DILocation(line: 786, column: 1645, scope: !5767)
!5827 = !DILocation(line: 786, column: 1656, scope: !5767)
!5828 = !DILocation(line: 786, column: 1677, scope: !5767)
!5829 = !DILocation(line: 786, column: 1664, scope: !5767)
!5830 = !DILocation(line: 786, column: 1673, scope: !5767)
!5831 = !DILocation(line: 786, column: 1667, scope: !5767)
!5832 = !DILocation(line: 786, column: 1683, scope: !5767)
!5833 = !DILocation(line: 786, column: 1661, scope: !5767)
!5834 = !DILocation(line: 786, column: 1653, scope: !5767)
!5835 = !DILocation(line: 786, column: 1643, scope: !5767)
!5836 = !DILocation(line: 786, column: 1706, scope: !5767)
!5837 = !DILocation(line: 786, column: 1709, scope: !5767)
!5838 = !DILocation(line: 786, column: 1713, scope: !5767)
!5839 = !DILocation(line: 786, column: 1719, scope: !5767)
!5840 = !DILocation(line: 786, column: 1693, scope: !5841)
!5841 = !DILexicalBlockFile(scope: !5767, file: !916, discriminator: 9)
!5842 = !DILocation(line: 786, column: 1760, scope: !5767)
!5843 = !DILocation(line: 786, column: 1751, scope: !5767)
!5844 = !DILocation(line: 786, column: 1727, scope: !5767)
!5845 = !DILocation(line: 786, column: 1747, scope: !5767)
!5846 = !DILocation(line: 786, column: 1730, scope: !5767)
!5847 = !DILocation(line: 786, column: 1758, scope: !5767)
!5848 = !DILocation(line: 786, column: 1767, scope: !5767)
!5849 = !DILocation(line: 786, column: 1219, scope: !5850)
!5850 = !DILexicalBlockFile(scope: !5759, file: !916, discriminator: 5)
!5851 = !DILocation(line: 786, column: 1171, scope: !5850)
!5852 = distinct !{!5852, !5853}
!5853 = !DILocation(line: 786, column: 1171, scope: !5754)
!5854 = !DILocation(line: 786, column: 1769, scope: !5855)
!5855 = !DILexicalBlockFile(scope: !5754, file: !916, discriminator: 6)
!5856 = !DILocation(line: 786, column: 1165, scope: !5857)
!5857 = !DILexicalBlockFile(scope: !5748, file: !916, discriminator: 7)
!5858 = !DILocation(line: 786, column: 1125, scope: !5857)
!5859 = distinct !{!5859, !5860}
!5860 = !DILocation(line: 786, column: 1125, scope: !5714)
!5861 = !DILocation(line: 786, column: 1795, scope: !5862)
!5862 = !DILexicalBlockFile(scope: !5714, file: !916, discriminator: 8)
!5863 = distinct !DISubprogram(name: "revert_cdlms16", scope: !916, file: !916, line: 785, type: !5715, isLocal: true, isDefinition: true, scopeLine: 785, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!5864 = !DILocalVariable(name: "s", arg: 1, scope: !5863, file: !916, line: 785, type: !1645)
!5865 = !DILocation(line: 785, column: 1006, scope: !5863)
!5866 = !DILocalVariable(name: "ch", arg: 2, scope: !5863, file: !916, line: 785, type: !904)
!5867 = !DILocation(line: 785, column: 1013, scope: !5863)
!5868 = !DILocalVariable(name: "coef_begin", arg: 3, scope: !5863, file: !916, line: 785, type: !904)
!5869 = !DILocation(line: 785, column: 1021, scope: !5863)
!5870 = !DILocalVariable(name: "coef_end", arg: 4, scope: !5863, file: !916, line: 785, type: !904)
!5871 = !DILocation(line: 785, column: 1037, scope: !5863)
!5872 = !DILocalVariable(name: "icoef", scope: !5863, file: !916, line: 785, type: !904)
!5873 = !DILocation(line: 785, column: 1053, scope: !5863)
!5874 = !DILocalVariable(name: "pred", scope: !5863, file: !916, line: 785, type: !904)
!5875 = !DILocation(line: 785, column: 1060, scope: !5863)
!5876 = !DILocalVariable(name: "ilms", scope: !5863, file: !916, line: 785, type: !904)
!5877 = !DILocation(line: 785, column: 1066, scope: !5863)
!5878 = !DILocalVariable(name: "num_lms", scope: !5863, file: !916, line: 785, type: !904)
!5879 = !DILocation(line: 785, column: 1072, scope: !5863)
!5880 = !DILocalVariable(name: "residue", scope: !5863, file: !916, line: 785, type: !904)
!5881 = !DILocation(line: 785, column: 1081, scope: !5863)
!5882 = !DILocalVariable(name: "input", scope: !5863, file: !916, line: 785, type: !904)
!5883 = !DILocation(line: 785, column: 1090, scope: !5863)
!5884 = !DILocation(line: 785, column: 1120, scope: !5863)
!5885 = !DILocation(line: 785, column: 1107, scope: !5863)
!5886 = !DILocation(line: 785, column: 1110, scope: !5863)
!5887 = !DILocation(line: 785, column: 1105, scope: !5863)
!5888 = !DILocation(line: 785, column: 1137, scope: !5889)
!5889 = distinct !DILexicalBlock(scope: !5863, file: !916, line: 785, column: 1125)
!5890 = !DILocation(line: 785, column: 1145, scope: !5889)
!5891 = !DILocation(line: 785, column: 1135, scope: !5889)
!5892 = !DILocation(line: 785, column: 1130, scope: !5889)
!5893 = !DILocation(line: 785, column: 1150, scope: !5894)
!5894 = !DILexicalBlockFile(scope: !5895, file: !916, discriminator: 1)
!5895 = distinct !DILexicalBlock(scope: !5889, file: !916, line: 785, column: 1125)
!5896 = !DILocation(line: 785, column: 1155, scope: !5894)
!5897 = !DILocation(line: 785, column: 1125, scope: !5894)
!5898 = !DILocation(line: 785, column: 1184, scope: !5899)
!5899 = !DILexicalBlockFile(scope: !5900, file: !916, discriminator: 2)
!5900 = distinct !DILexicalBlock(scope: !5901, file: !916, line: 785, column: 1171)
!5901 = distinct !DILexicalBlock(scope: !5895, file: !916, line: 785, column: 1169)
!5902 = !DILocation(line: 785, column: 1182, scope: !5899)
!5903 = !DILocation(line: 785, column: 1176, scope: !5899)
!5904 = !DILocation(line: 785, column: 1196, scope: !5905)
!5905 = !DILexicalBlockFile(scope: !5906, file: !916, discriminator: 3)
!5906 = distinct !DILexicalBlock(scope: !5900, file: !916, line: 785, column: 1171)
!5907 = !DILocation(line: 785, column: 1204, scope: !5905)
!5908 = !DILocation(line: 785, column: 1202, scope: !5905)
!5909 = !DILocation(line: 785, column: 1171, scope: !5905)
!5910 = !DILocalVariable(name: "prevvalues", scope: !5911, file: !916, line: 785, type: !906)
!5911 = distinct !DILexicalBlock(scope: !5906, file: !916, line: 785, column: 1223)
!5912 = !DILocation(line: 785, column: 1234, scope: !5911)
!5913 = !DILocation(line: 785, column: 1271, scope: !5914)
!5914 = !DILexicalBlockFile(scope: !5911, file: !916, discriminator: 4)
!5915 = !DILocation(line: 785, column: 1258, scope: !5914)
!5916 = !DILocation(line: 785, column: 1267, scope: !5914)
!5917 = !DILocation(line: 785, column: 1261, scope: !5914)
!5918 = !DILocation(line: 785, column: 1277, scope: !5914)
!5919 = !DILocation(line: 785, column: 1247, scope: !5914)
!5920 = !DILocation(line: 785, column: 1234, scope: !5914)
!5921 = !DILocation(line: 785, column: 1319, scope: !5914)
!5922 = !DILocation(line: 785, column: 1306, scope: !5914)
!5923 = !DILocation(line: 785, column: 1315, scope: !5914)
!5924 = !DILocation(line: 785, column: 1309, scope: !5914)
!5925 = !DILocation(line: 785, column: 1325, scope: !5914)
!5926 = !DILocation(line: 785, column: 1333, scope: !5914)
!5927 = !DILocation(line: 785, column: 1302, scope: !5914)
!5928 = !DILocation(line: 785, column: 1298, scope: !5914)
!5929 = !DILocation(line: 785, column: 1373, scope: !5914)
!5930 = !DILocation(line: 785, column: 1349, scope: !5914)
!5931 = !DILocation(line: 785, column: 1369, scope: !5914)
!5932 = !DILocation(line: 785, column: 1352, scope: !5914)
!5933 = !DILocation(line: 785, column: 1347, scope: !5914)
!5934 = !DILocation(line: 785, column: 1389, scope: !5914)
!5935 = !DILocation(line: 785, column: 1392, scope: !5914)
!5936 = !DILocation(line: 785, column: 1396, scope: !5914)
!5937 = !DILocation(line: 785, column: 1439, scope: !5914)
!5938 = !DILocation(line: 785, column: 1426, scope: !5914)
!5939 = !DILocation(line: 785, column: 1435, scope: !5914)
!5940 = !DILocation(line: 785, column: 1429, scope: !5914)
!5941 = !DILocation(line: 785, column: 1445, scope: !5914)
!5942 = !DILocation(line: 785, column: 1452, scope: !5914)
!5943 = !DILocation(line: 785, column: 1478, scope: !5914)
!5944 = !DILocation(line: 785, column: 1465, scope: !5914)
!5945 = !DILocation(line: 785, column: 1474, scope: !5914)
!5946 = !DILocation(line: 785, column: 1468, scope: !5914)
!5947 = !DILocation(line: 785, column: 1484, scope: !5914)
!5948 = !DILocation(line: 785, column: 1463, scope: !5914)
!5949 = !DILocation(line: 785, column: 1505, scope: !5914)
!5950 = !DILocation(line: 785, column: 1492, scope: !5914)
!5951 = !DILocation(line: 785, column: 1501, scope: !5914)
!5952 = !DILocation(line: 785, column: 1495, scope: !5914)
!5953 = !DILocation(line: 785, column: 1511, scope: !5914)
!5954 = !DILocation(line: 785, column: 1538, scope: !5914)
!5955 = !DILocation(line: 785, column: 1525, scope: !5914)
!5956 = !DILocation(line: 785, column: 1534, scope: !5914)
!5957 = !DILocation(line: 785, column: 1528, scope: !5914)
!5958 = !DILocation(line: 785, column: 1544, scope: !5914)
!5959 = !DILocation(line: 785, column: 1523, scope: !5914)
!5960 = !DILocation(line: 785, column: 1568, scope: !5914)
!5961 = !DILocation(line: 785, column: 1555, scope: !5914)
!5962 = !DILocation(line: 785, column: 1564, scope: !5914)
!5963 = !DILocation(line: 785, column: 1558, scope: !5914)
!5964 = !DILocation(line: 785, column: 1574, scope: !5914)
!5965 = !DILocation(line: 785, column: 1580, scope: !5914)
!5966 = !DILocation(line: 785, column: 1585, scope: !5914)
!5967 = !DILocation(line: 785, column: 1588, scope: !5914)
!5968 = !DILocation(line: 785, column: 1604, scope: !5914)
!5969 = !DILocation(line: 785, column: 1613, scope: !5914)
!5970 = !DILocation(line: 785, column: 1622, scope: !5914)
!5971 = !DILocation(line: 785, column: 1631, scope: !5914)
!5972 = !DILocation(line: 785, column: 1618, scope: !5914)
!5973 = !DILocation(line: 785, column: 1386, scope: !5914)
!5974 = !DILocation(line: 785, column: 1647, scope: !5914)
!5975 = !DILocation(line: 785, column: 1658, scope: !5914)
!5976 = !DILocation(line: 785, column: 1679, scope: !5914)
!5977 = !DILocation(line: 785, column: 1666, scope: !5914)
!5978 = !DILocation(line: 785, column: 1675, scope: !5914)
!5979 = !DILocation(line: 785, column: 1669, scope: !5914)
!5980 = !DILocation(line: 785, column: 1685, scope: !5914)
!5981 = !DILocation(line: 785, column: 1663, scope: !5914)
!5982 = !DILocation(line: 785, column: 1655, scope: !5914)
!5983 = !DILocation(line: 785, column: 1645, scope: !5914)
!5984 = !DILocation(line: 785, column: 1708, scope: !5914)
!5985 = !DILocation(line: 785, column: 1711, scope: !5914)
!5986 = !DILocation(line: 785, column: 1715, scope: !5914)
!5987 = !DILocation(line: 785, column: 1721, scope: !5914)
!5988 = !DILocation(line: 785, column: 1695, scope: !5989)
!5989 = !DILexicalBlockFile(scope: !5914, file: !916, discriminator: 9)
!5990 = !DILocation(line: 785, column: 1762, scope: !5914)
!5991 = !DILocation(line: 785, column: 1753, scope: !5914)
!5992 = !DILocation(line: 785, column: 1729, scope: !5914)
!5993 = !DILocation(line: 785, column: 1749, scope: !5914)
!5994 = !DILocation(line: 785, column: 1732, scope: !5914)
!5995 = !DILocation(line: 785, column: 1760, scope: !5914)
!5996 = !DILocation(line: 785, column: 1769, scope: !5914)
!5997 = !DILocation(line: 785, column: 1219, scope: !5998)
!5998 = !DILexicalBlockFile(scope: !5906, file: !916, discriminator: 5)
!5999 = !DILocation(line: 785, column: 1171, scope: !5998)
!6000 = distinct !{!6000, !6001}
!6001 = !DILocation(line: 785, column: 1171, scope: !5901)
!6002 = !DILocation(line: 785, column: 1771, scope: !6003)
!6003 = !DILexicalBlockFile(scope: !5901, file: !916, discriminator: 6)
!6004 = !DILocation(line: 785, column: 1165, scope: !6005)
!6005 = !DILexicalBlockFile(scope: !5895, file: !916, discriminator: 7)
!6006 = !DILocation(line: 785, column: 1125, scope: !6005)
!6007 = distinct !{!6007, !6008}
!6008 = !DILocation(line: 785, column: 1125, scope: !5863)
!6009 = !DILocation(line: 46, column: 9, scope: !6010, inlinedAt: !6014)
!6010 = distinct !DISubprogram(name: "emms_c", scope: !6011, file: !6011, line: 37, type: !6012, isLocal: true, isDefinition: true, scopeLine: 38, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!6011 = !DIFile(filename: "./libavutil/x86/emms.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!6012 = !DISubroutineType(types: !6013)
!6013 = !{null}
!6014 = distinct !DILocation(line: 785, column: 1787, scope: !6015)
!6015 = !DILexicalBlockFile(scope: !6016, file: !916, discriminator: 8)
!6016 = distinct !DILexicalBlock(scope: !5863, file: !916, line: 785, column: 1777)
!6017 = !{i32 100494}
!6018 = !DILocation(line: 785, column: 1797, scope: !6015)
!6019 = distinct !DISubprogram(name: "revert_mclms", scope: !916, file: !916, line: 687, type: !5500, isLocal: true, isDefinition: true, scopeLine: 688, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!6020 = !DILocalVariable(name: "s", arg: 1, scope: !6019, file: !916, line: 687, type: !1645)
!6021 = !DILocation(line: 687, column: 42, scope: !6019)
!6022 = !DILocalVariable(name: "tile_size", arg: 2, scope: !6019, file: !916, line: 687, type: !904)
!6023 = !DILocation(line: 687, column: 49, scope: !6019)
!6024 = !DILocalVariable(name: "icoef", scope: !6019, file: !916, line: 689, type: !904)
!6025 = !DILocation(line: 689, column: 9, scope: !6019)
!6026 = !DILocalVariable(name: "pred", scope: !6019, file: !916, line: 689, type: !1041)
!6027 = !DILocation(line: 689, column: 16, scope: !6019)
!6028 = !DILocation(line: 690, column: 16, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !6019, file: !916, line: 690, column: 5)
!6030 = !DILocation(line: 690, column: 10, scope: !6029)
!6031 = !DILocation(line: 690, column: 21, scope: !6032)
!6032 = !DILexicalBlockFile(scope: !6033, file: !916, discriminator: 1)
!6033 = distinct !DILexicalBlock(scope: !6029, file: !916, line: 690, column: 5)
!6034 = !DILocation(line: 690, column: 29, scope: !6032)
!6035 = !DILocation(line: 690, column: 27, scope: !6032)
!6036 = !DILocation(line: 690, column: 5, scope: !6032)
!6037 = !DILocation(line: 691, column: 23, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6033, file: !916, line: 690, column: 49)
!6039 = !DILocation(line: 691, column: 26, scope: !6038)
!6040 = !DILocation(line: 691, column: 33, scope: !6038)
!6041 = !DILocation(line: 691, column: 9, scope: !6038)
!6042 = !DILocation(line: 692, column: 22, scope: !6038)
!6043 = !DILocation(line: 692, column: 25, scope: !6038)
!6044 = !DILocation(line: 692, column: 32, scope: !6038)
!6045 = !DILocation(line: 692, column: 9, scope: !6038)
!6046 = !DILocation(line: 693, column: 5, scope: !6038)
!6047 = !DILocation(line: 690, column: 45, scope: !6048)
!6048 = !DILexicalBlockFile(scope: !6033, file: !916, discriminator: 2)
!6049 = !DILocation(line: 690, column: 5, scope: !6048)
!6050 = distinct !{!6050, !6051}
!6051 = !DILocation(line: 690, column: 5, scope: !6019)
!6052 = !DILocation(line: 694, column: 1, scope: !6019)
!6053 = distinct !DISubprogram(name: "revert_inter_ch_decorr", scope: !916, file: !916, line: 788, type: !5500, isLocal: true, isDefinition: true, scopeLine: 789, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!6054 = !DILocalVariable(name: "s", arg: 1, scope: !6053, file: !916, line: 788, type: !1645)
!6055 = !DILocation(line: 788, column: 52, scope: !6053)
!6056 = !DILocalVariable(name: "tile_size", arg: 2, scope: !6053, file: !916, line: 788, type: !904)
!6057 = !DILocation(line: 788, column: 59, scope: !6053)
!6058 = !DILocation(line: 790, column: 9, scope: !6059)
!6059 = distinct !DILexicalBlock(scope: !6053, file: !916, line: 790, column: 9)
!6060 = !DILocation(line: 790, column: 12, scope: !6059)
!6061 = !DILocation(line: 790, column: 25, scope: !6059)
!6062 = !DILocation(line: 790, column: 9, scope: !6053)
!6063 = !DILocation(line: 791, column: 9, scope: !6059)
!6064 = !DILocation(line: 792, column: 14, scope: !6065)
!6065 = distinct !DILexicalBlock(scope: !6059, file: !916, line: 792, column: 14)
!6066 = !DILocation(line: 792, column: 17, scope: !6065)
!6067 = !DILocation(line: 792, column: 37, scope: !6065)
!6068 = !DILocation(line: 792, column: 40, scope: !6069)
!6069 = !DILexicalBlockFile(scope: !6065, file: !916, discriminator: 1)
!6070 = !DILocation(line: 792, column: 43, scope: !6069)
!6071 = !DILocation(line: 792, column: 14, scope: !6069)
!6072 = !DILocalVariable(name: "icoef", scope: !6073, file: !916, line: 793, type: !904)
!6073 = distinct !DILexicalBlock(scope: !6065, file: !916, line: 792, column: 64)
!6074 = !DILocation(line: 793, column: 13, scope: !6073)
!6075 = !DILocation(line: 794, column: 20, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !6073, file: !916, line: 794, column: 9)
!6077 = !DILocation(line: 794, column: 14, scope: !6076)
!6078 = !DILocation(line: 794, column: 25, scope: !6079)
!6079 = !DILexicalBlockFile(scope: !6080, file: !916, discriminator: 1)
!6080 = distinct !DILexicalBlock(scope: !6076, file: !916, line: 794, column: 9)
!6081 = !DILocation(line: 794, column: 33, scope: !6079)
!6082 = !DILocation(line: 794, column: 31, scope: !6079)
!6083 = !DILocation(line: 794, column: 9, scope: !6079)
!6084 = !DILocation(line: 795, column: 69, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6080, file: !916, line: 794, column: 53)
!6086 = !DILocation(line: 795, column: 46, scope: !6085)
!6087 = !DILocation(line: 795, column: 49, scope: !6085)
!6088 = !DILocation(line: 795, column: 76, scope: !6085)
!6089 = !DILocation(line: 795, column: 36, scope: !6085)
!6090 = !DILocation(line: 795, column: 13, scope: !6085)
!6091 = !DILocation(line: 795, column: 16, scope: !6085)
!6092 = !DILocation(line: 795, column: 43, scope: !6085)
!6093 = !DILocation(line: 796, column: 69, scope: !6085)
!6094 = !DILocation(line: 796, column: 46, scope: !6085)
!6095 = !DILocation(line: 796, column: 49, scope: !6085)
!6096 = !DILocation(line: 796, column: 36, scope: !6085)
!6097 = !DILocation(line: 796, column: 13, scope: !6085)
!6098 = !DILocation(line: 796, column: 16, scope: !6085)
!6099 = !DILocation(line: 796, column: 43, scope: !6085)
!6100 = !DILocation(line: 797, column: 9, scope: !6085)
!6101 = !DILocation(line: 794, column: 49, scope: !6102)
!6102 = !DILexicalBlockFile(scope: !6080, file: !916, discriminator: 2)
!6103 = !DILocation(line: 794, column: 9, scope: !6102)
!6104 = distinct !{!6104, !6105}
!6105 = !DILocation(line: 794, column: 9, scope: !6073)
!6106 = !DILocation(line: 798, column: 5, scope: !6073)
!6107 = !DILocation(line: 799, column: 1, scope: !6053)
!6108 = distinct !DISubprogram(name: "revert_acfilter", scope: !916, file: !916, line: 801, type: !5500, isLocal: true, isDefinition: true, scopeLine: 802, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!6109 = !DILocalVariable(name: "s", arg: 1, scope: !6108, file: !916, line: 801, type: !1645)
!6110 = !DILocation(line: 801, column: 45, scope: !6108)
!6111 = !DILocalVariable(name: "tile_size", arg: 2, scope: !6108, file: !916, line: 801, type: !904)
!6112 = !DILocation(line: 801, column: 52, scope: !6108)
!6113 = !DILocalVariable(name: "ich", scope: !6108, file: !916, line: 803, type: !904)
!6114 = !DILocation(line: 803, column: 9, scope: !6108)
!6115 = !DILocalVariable(name: "pred", scope: !6108, file: !916, line: 803, type: !904)
!6116 = !DILocation(line: 803, column: 14, scope: !6108)
!6117 = !DILocalVariable(name: "i", scope: !6108, file: !916, line: 803, type: !904)
!6118 = !DILocation(line: 803, column: 20, scope: !6108)
!6119 = !DILocalVariable(name: "j", scope: !6108, file: !916, line: 803, type: !904)
!6120 = !DILocation(line: 803, column: 23, scope: !6108)
!6121 = !DILocalVariable(name: "filter_coeffs", scope: !6108, file: !916, line: 804, type: !906)
!6122 = !DILocation(line: 804, column: 14, scope: !6108)
!6123 = !DILocation(line: 804, column: 30, scope: !6108)
!6124 = !DILocation(line: 804, column: 33, scope: !6108)
!6125 = !DILocalVariable(name: "scaling", scope: !6108, file: !916, line: 805, type: !904)
!6126 = !DILocation(line: 805, column: 9, scope: !6108)
!6127 = !DILocation(line: 805, column: 19, scope: !6108)
!6128 = !DILocation(line: 805, column: 22, scope: !6108)
!6129 = !DILocalVariable(name: "order", scope: !6108, file: !916, line: 806, type: !904)
!6130 = !DILocation(line: 806, column: 9, scope: !6108)
!6131 = !DILocation(line: 806, column: 17, scope: !6108)
!6132 = !DILocation(line: 806, column: 20, scope: !6108)
!6133 = !DILocation(line: 808, column: 14, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6108, file: !916, line: 808, column: 5)
!6135 = !DILocation(line: 808, column: 10, scope: !6134)
!6136 = !DILocation(line: 808, column: 19, scope: !6137)
!6137 = !DILexicalBlockFile(scope: !6138, file: !916, discriminator: 1)
!6138 = distinct !DILexicalBlock(scope: !6134, file: !916, line: 808, column: 5)
!6139 = !DILocation(line: 808, column: 25, scope: !6137)
!6140 = !DILocation(line: 808, column: 28, scope: !6137)
!6141 = !DILocation(line: 808, column: 23, scope: !6137)
!6142 = !DILocation(line: 808, column: 5, scope: !6137)
!6143 = !DILocalVariable(name: "prevvalues", scope: !6144, file: !916, line: 809, type: !1303)
!6144 = distinct !DILexicalBlock(scope: !6138, file: !916, line: 808, column: 49)
!6145 = !DILocation(line: 809, column: 14, scope: !6144)
!6146 = !DILocation(line: 809, column: 50, scope: !6144)
!6147 = !DILocation(line: 809, column: 27, scope: !6144)
!6148 = !DILocation(line: 809, column: 30, scope: !6144)
!6149 = !DILocation(line: 810, column: 16, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6144, file: !916, line: 810, column: 9)
!6151 = !DILocation(line: 810, column: 14, scope: !6150)
!6152 = !DILocation(line: 810, column: 21, scope: !6153)
!6153 = !DILexicalBlockFile(scope: !6154, file: !916, discriminator: 1)
!6154 = distinct !DILexicalBlock(scope: !6150, file: !916, line: 810, column: 9)
!6155 = !DILocation(line: 810, column: 25, scope: !6153)
!6156 = !DILocation(line: 810, column: 23, scope: !6153)
!6157 = !DILocation(line: 810, column: 9, scope: !6153)
!6158 = !DILocation(line: 811, column: 18, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6154, file: !916, line: 810, column: 37)
!6160 = !DILocation(line: 812, column: 20, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6159, file: !916, line: 812, column: 13)
!6162 = !DILocation(line: 812, column: 18, scope: !6161)
!6163 = !DILocation(line: 812, column: 25, scope: !6164)
!6164 = !DILexicalBlockFile(scope: !6165, file: !916, discriminator: 1)
!6165 = distinct !DILexicalBlock(scope: !6161, file: !916, line: 812, column: 13)
!6166 = !DILocation(line: 812, column: 29, scope: !6164)
!6167 = !DILocation(line: 812, column: 27, scope: !6164)
!6168 = !DILocation(line: 812, column: 13, scope: !6164)
!6169 = !DILocation(line: 813, column: 21, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6171, file: !916, line: 813, column: 21)
!6171 = distinct !DILexicalBlock(scope: !6165, file: !916, line: 812, column: 41)
!6172 = !DILocation(line: 813, column: 26, scope: !6170)
!6173 = !DILocation(line: 813, column: 23, scope: !6170)
!6174 = !DILocation(line: 813, column: 21, scope: !6171)
!6175 = !DILocation(line: 814, column: 43, scope: !6170)
!6176 = !DILocation(line: 814, column: 29, scope: !6170)
!6177 = !DILocation(line: 814, column: 59, scope: !6170)
!6178 = !DILocation(line: 814, column: 63, scope: !6170)
!6179 = !DILocation(line: 814, column: 61, scope: !6170)
!6180 = !DILocation(line: 814, column: 48, scope: !6170)
!6181 = !DILocation(line: 814, column: 46, scope: !6170)
!6182 = !DILocation(line: 814, column: 26, scope: !6170)
!6183 = !DILocation(line: 814, column: 21, scope: !6170)
!6184 = !DILocation(line: 816, column: 54, scope: !6170)
!6185 = !DILocation(line: 816, column: 58, scope: !6170)
!6186 = !DILocation(line: 816, column: 56, scope: !6170)
!6187 = !DILocation(line: 816, column: 60, scope: !6170)
!6188 = !DILocation(line: 816, column: 29, scope: !6170)
!6189 = !DILocation(line: 816, column: 49, scope: !6170)
!6190 = !DILocation(line: 816, column: 32, scope: !6170)
!6191 = !DILocation(line: 816, column: 81, scope: !6170)
!6192 = !DILocation(line: 816, column: 67, scope: !6170)
!6193 = !DILocation(line: 816, column: 65, scope: !6170)
!6194 = !DILocation(line: 816, column: 26, scope: !6170)
!6195 = !DILocation(line: 817, column: 13, scope: !6171)
!6196 = !DILocation(line: 812, column: 37, scope: !6197)
!6197 = !DILexicalBlockFile(scope: !6165, file: !916, discriminator: 2)
!6198 = !DILocation(line: 812, column: 13, scope: !6197)
!6199 = distinct !{!6199, !6200}
!6200 = !DILocation(line: 812, column: 13, scope: !6159)
!6201 = !DILocation(line: 818, column: 22, scope: !6159)
!6202 = !DILocation(line: 818, column: 18, scope: !6159)
!6203 = !DILocation(line: 819, column: 44, scope: !6159)
!6204 = !DILocation(line: 819, column: 38, scope: !6159)
!6205 = !DILocation(line: 819, column: 13, scope: !6159)
!6206 = !DILocation(line: 819, column: 33, scope: !6159)
!6207 = !DILocation(line: 819, column: 16, scope: !6159)
!6208 = !DILocation(line: 819, column: 41, scope: !6159)
!6209 = !DILocation(line: 820, column: 9, scope: !6159)
!6210 = !DILocation(line: 810, column: 33, scope: !6211)
!6211 = !DILexicalBlockFile(scope: !6154, file: !916, discriminator: 2)
!6212 = !DILocation(line: 810, column: 9, scope: !6211)
!6213 = distinct !{!6213, !6214}
!6214 = !DILocation(line: 810, column: 9, scope: !6144)
!6215 = !DILocation(line: 821, column: 18, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6144, file: !916, line: 821, column: 9)
!6217 = !DILocation(line: 821, column: 16, scope: !6216)
!6218 = !DILocation(line: 821, column: 14, scope: !6216)
!6219 = !DILocation(line: 821, column: 25, scope: !6220)
!6220 = !DILexicalBlockFile(scope: !6221, file: !916, discriminator: 1)
!6221 = distinct !DILexicalBlock(scope: !6216, file: !916, line: 821, column: 9)
!6222 = !DILocation(line: 821, column: 29, scope: !6220)
!6223 = !DILocation(line: 821, column: 27, scope: !6220)
!6224 = !DILocation(line: 821, column: 9, scope: !6220)
!6225 = !DILocation(line: 822, column: 18, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6221, file: !916, line: 821, column: 45)
!6227 = !DILocation(line: 823, column: 20, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6226, file: !916, line: 823, column: 13)
!6229 = !DILocation(line: 823, column: 18, scope: !6228)
!6230 = !DILocation(line: 823, column: 25, scope: !6231)
!6231 = !DILexicalBlockFile(scope: !6232, file: !916, discriminator: 1)
!6232 = distinct !DILexicalBlock(scope: !6228, file: !916, line: 823, column: 13)
!6233 = !DILocation(line: 823, column: 29, scope: !6231)
!6234 = !DILocation(line: 823, column: 27, scope: !6231)
!6235 = !DILocation(line: 823, column: 13, scope: !6231)
!6236 = !DILocation(line: 824, column: 60, scope: !6232)
!6237 = !DILocation(line: 824, column: 64, scope: !6232)
!6238 = !DILocation(line: 824, column: 62, scope: !6232)
!6239 = !DILocation(line: 824, column: 66, scope: !6232)
!6240 = !DILocation(line: 824, column: 35, scope: !6232)
!6241 = !DILocation(line: 824, column: 55, scope: !6232)
!6242 = !DILocation(line: 824, column: 38, scope: !6232)
!6243 = !DILocation(line: 824, column: 87, scope: !6232)
!6244 = !DILocation(line: 824, column: 73, scope: !6232)
!6245 = !DILocation(line: 824, column: 71, scope: !6232)
!6246 = !DILocation(line: 824, column: 22, scope: !6232)
!6247 = !DILocation(line: 824, column: 17, scope: !6232)
!6248 = !DILocation(line: 823, column: 37, scope: !6249)
!6249 = !DILexicalBlockFile(scope: !6232, file: !916, discriminator: 2)
!6250 = !DILocation(line: 823, column: 13, scope: !6249)
!6251 = distinct !{!6251, !6252}
!6252 = !DILocation(line: 823, column: 13, scope: !6226)
!6253 = !DILocation(line: 825, column: 22, scope: !6226)
!6254 = !DILocation(line: 825, column: 18, scope: !6226)
!6255 = !DILocation(line: 826, column: 44, scope: !6226)
!6256 = !DILocation(line: 826, column: 38, scope: !6226)
!6257 = !DILocation(line: 826, column: 13, scope: !6226)
!6258 = !DILocation(line: 826, column: 33, scope: !6226)
!6259 = !DILocation(line: 826, column: 16, scope: !6226)
!6260 = !DILocation(line: 826, column: 41, scope: !6226)
!6261 = !DILocation(line: 827, column: 9, scope: !6226)
!6262 = !DILocation(line: 821, column: 41, scope: !6263)
!6263 = !DILexicalBlockFile(scope: !6221, file: !916, discriminator: 2)
!6264 = !DILocation(line: 821, column: 9, scope: !6263)
!6265 = distinct !{!6265, !6266}
!6266 = !DILocation(line: 821, column: 9, scope: !6144)
!6267 = !DILocation(line: 828, column: 16, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !6144, file: !916, line: 828, column: 9)
!6269 = !DILocation(line: 828, column: 14, scope: !6268)
!6270 = !DILocation(line: 828, column: 21, scope: !6271)
!6271 = !DILexicalBlockFile(scope: !6272, file: !916, discriminator: 1)
!6272 = distinct !DILexicalBlock(scope: !6268, file: !916, line: 828, column: 9)
!6273 = !DILocation(line: 828, column: 25, scope: !6271)
!6274 = !DILocation(line: 828, column: 23, scope: !6271)
!6275 = !DILocation(line: 828, column: 9, scope: !6271)
!6276 = !DILocation(line: 829, column: 54, scope: !6272)
!6277 = !DILocation(line: 829, column: 66, scope: !6272)
!6278 = !DILocation(line: 829, column: 64, scope: !6272)
!6279 = !DILocation(line: 829, column: 68, scope: !6272)
!6280 = !DILocation(line: 829, column: 29, scope: !6272)
!6281 = !DILocation(line: 829, column: 49, scope: !6272)
!6282 = !DILocation(line: 829, column: 32, scope: !6272)
!6283 = !DILocation(line: 829, column: 24, scope: !6272)
!6284 = !DILocation(line: 829, column: 13, scope: !6272)
!6285 = !DILocation(line: 829, column: 27, scope: !6272)
!6286 = !DILocation(line: 828, column: 33, scope: !6287)
!6287 = !DILexicalBlockFile(scope: !6272, file: !916, discriminator: 2)
!6288 = !DILocation(line: 828, column: 9, scope: !6287)
!6289 = distinct !{!6289, !6290}
!6290 = !DILocation(line: 828, column: 9, scope: !6144)
!6291 = !DILocation(line: 830, column: 5, scope: !6144)
!6292 = !DILocation(line: 808, column: 45, scope: !6293)
!6293 = !DILexicalBlockFile(scope: !6138, file: !916, discriminator: 2)
!6294 = !DILocation(line: 808, column: 5, scope: !6293)
!6295 = distinct !{!6295, !6296}
!6296 = !DILocation(line: 808, column: 5, scope: !6108)
!6297 = !DILocation(line: 831, column: 1, scope: !6108)
!6298 = distinct !DISubprogram(name: "get_sbits", scope: !1695, file: !1695, line: 361, type: !4535, isLocal: true, isDefinition: true, scopeLine: 362, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!6299 = !DILocation(line: 66, column: 98, scope: !3023, inlinedAt: !6300)
!6300 = distinct !DILocation(line: 370, column: 16, scope: !6298)
!6301 = !DILocalVariable(name: "s", arg: 1, scope: !6298, file: !1695, line: 361, type: !2171)
!6302 = !DILocation(line: 361, column: 44, scope: !6298)
!6303 = !DILocalVariable(name: "n", arg: 2, scope: !6298, file: !1695, line: 361, type: !904)
!6304 = !DILocation(line: 361, column: 51, scope: !6298)
!6305 = !DILocalVariable(name: "tmp", scope: !6298, file: !1695, line: 363, type: !904)
!6306 = !DILocation(line: 363, column: 18, scope: !6298)
!6307 = !DILocalVariable(name: "re_index", scope: !6298, file: !1695, line: 368, type: !903)
!6308 = !DILocation(line: 368, column: 18, scope: !6298)
!6309 = !DILocation(line: 368, column: 30, scope: !6298)
!6310 = !DILocation(line: 368, column: 34, scope: !6298)
!6311 = !DILocalVariable(name: "re_cache", scope: !6298, file: !1695, line: 368, type: !903)
!6312 = !DILocation(line: 368, column: 78, scope: !6298)
!6313 = !DILocalVariable(name: "re_size_plus8", scope: !6298, file: !1695, line: 368, type: !903)
!6314 = !DILocation(line: 368, column: 101, scope: !6298)
!6315 = !DILocation(line: 368, column: 118, scope: !6298)
!6316 = !DILocation(line: 368, column: 122, scope: !6298)
!6317 = !DILocation(line: 370, column: 60, scope: !6298)
!6318 = !DILocation(line: 370, column: 64, scope: !6298)
!6319 = !DILocation(line: 370, column: 74, scope: !6298)
!6320 = !DILocation(line: 370, column: 83, scope: !6298)
!6321 = !DILocation(line: 370, column: 71, scope: !6298)
!6322 = !DILocation(line: 370, column: 92, scope: !6298)
!6323 = !DILocation(line: 370, column: 16, scope: !6298)
!6324 = !DILocation(line: 68, column: 16, scope: !3023, inlinedAt: !6300)
!6325 = !DILocation(line: 68, column: 19, scope: !3023, inlinedAt: !6300)
!6326 = !DILocation(line: 68, column: 24, scope: !3023, inlinedAt: !6300)
!6327 = !DILocation(line: 68, column: 38, scope: !3023, inlinedAt: !6300)
!6328 = !DILocation(line: 68, column: 41, scope: !3023, inlinedAt: !6300)
!6329 = !DILocation(line: 68, column: 46, scope: !3023, inlinedAt: !6300)
!6330 = !DILocation(line: 68, column: 34, scope: !3023, inlinedAt: !6300)
!6331 = !DILocation(line: 68, column: 57, scope: !3023, inlinedAt: !6300)
!6332 = !DILocation(line: 68, column: 69, scope: !3023, inlinedAt: !6300)
!6333 = !DILocation(line: 68, column: 72, scope: !3023, inlinedAt: !6300)
!6334 = !DILocation(line: 68, column: 79, scope: !3023, inlinedAt: !6300)
!6335 = !DILocation(line: 68, column: 84, scope: !3023, inlinedAt: !6300)
!6336 = !DILocation(line: 68, column: 99, scope: !3023, inlinedAt: !6300)
!6337 = !DILocation(line: 68, column: 102, scope: !3023, inlinedAt: !6300)
!6338 = !DILocation(line: 68, column: 109, scope: !3023, inlinedAt: !6300)
!6339 = !DILocation(line: 68, column: 114, scope: !3023, inlinedAt: !6300)
!6340 = !DILocation(line: 68, column: 94, scope: !3023, inlinedAt: !6300)
!6341 = !DILocation(line: 68, column: 63, scope: !3023, inlinedAt: !6300)
!6342 = !DILocation(line: 370, column: 100, scope: !6298)
!6343 = !DILocation(line: 370, column: 109, scope: !6298)
!6344 = !DILocation(line: 370, column: 96, scope: !6298)
!6345 = !DILocation(line: 370, column: 14, scope: !6298)
!6346 = !DILocation(line: 371, column: 21, scope: !6298)
!6347 = !DILocation(line: 371, column: 31, scope: !6298)
!6348 = !DILocation(line: 371, column: 11, scope: !6298)
!6349 = !DILocation(line: 371, column: 9, scope: !6298)
!6350 = !DILocation(line: 372, column: 18, scope: !6298)
!6351 = !DILocation(line: 372, column: 36, scope: !6298)
!6352 = !DILocation(line: 372, column: 48, scope: !6298)
!6353 = !DILocation(line: 372, column: 45, scope: !6298)
!6354 = !DILocation(line: 372, column: 33, scope: !6298)
!6355 = !DILocation(line: 372, column: 17, scope: !6298)
!6356 = !DILocation(line: 372, column: 55, scope: !6357)
!6357 = !DILexicalBlockFile(scope: !6298, file: !1695, discriminator: 1)
!6358 = !DILocation(line: 372, column: 67, scope: !6357)
!6359 = !DILocation(line: 372, column: 64, scope: !6357)
!6360 = !DILocation(line: 372, column: 17, scope: !6357)
!6361 = !DILocation(line: 372, column: 74, scope: !6362)
!6362 = !DILexicalBlockFile(scope: !6298, file: !1695, discriminator: 2)
!6363 = !DILocation(line: 372, column: 17, scope: !6362)
!6364 = !DILocation(line: 372, column: 17, scope: !6365)
!6365 = !DILexicalBlockFile(scope: !6298, file: !1695, discriminator: 3)
!6366 = !DILocation(line: 372, column: 14, scope: !6365)
!6367 = !DILocation(line: 373, column: 18, scope: !6298)
!6368 = !DILocation(line: 373, column: 6, scope: !6298)
!6369 = !DILocation(line: 373, column: 10, scope: !6298)
!6370 = !DILocation(line: 373, column: 16, scope: !6298)
!6371 = !DILocation(line: 375, column: 12, scope: !6298)
!6372 = !DILocation(line: 375, column: 5, scope: !6298)
!6373 = distinct !DISubprogram(name: "NEG_SSR32", scope: !6374, file: !6374, line: 115, type: !6375, isLocal: true, isDefinition: true, scopeLine: 115, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!6374 = !DIFile(filename: "libavcodec/x86/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!6375 = !DISubroutineType(types: !6376)
!6376 = !{!910, !910, !1116}
!6377 = !DILocalVariable(name: "a", arg: 1, scope: !6373, file: !6374, line: 115, type: !910)
!6378 = !DILocation(line: 115, column: 42, scope: !6373)
!6379 = !DILocalVariable(name: "s", arg: 2, scope: !6373, file: !6374, line: 115, type: !1116)
!6380 = !DILocation(line: 115, column: 52, scope: !6373)
!6381 = !DILocation(line: 116, column: 5, scope: !6373)
!6382 = !DILocation(line: 118, column: 29, scope: !6373)
!6383 = !DILocation(line: 118, column: 28, scope: !6373)
!6384 = !DILocation(line: 118, column: 18, scope: !6373)
!6385 = !{i32 183044, i32 183058}
!6386 = !DILocation(line: 120, column: 12, scope: !6373)
!6387 = !DILocation(line: 120, column: 5, scope: !6373)
!6388 = distinct !DISubprogram(name: "sign_extend", scope: !6389, file: !6389, line: 130, type: !6390, isLocal: true, isDefinition: true, scopeLine: 131, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!6389 = !DIFile(filename: "libavcodec/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!6390 = !DISubroutineType(types: !6391)
!6391 = !{!904, !904, !903}
!6392 = !DILocalVariable(name: "val", arg: 1, scope: !6388, file: !6389, line: 130, type: !904)
!6393 = !DILocation(line: 130, column: 58, scope: !6388)
!6394 = !DILocalVariable(name: "bits", arg: 2, scope: !6388, file: !6389, line: 130, type: !903)
!6395 = !DILocation(line: 130, column: 72, scope: !6388)
!6396 = !DILocalVariable(name: "shift", scope: !6388, file: !6389, line: 132, type: !903)
!6397 = !DILocation(line: 132, column: 14, scope: !6388)
!6398 = !DILocation(line: 132, column: 40, scope: !6388)
!6399 = !DILocation(line: 132, column: 38, scope: !6388)
!6400 = !DILocation(line: 132, column: 22, scope: !6388)
!6401 = !DILocalVariable(name: "v", scope: !6388, file: !6389, line: 133, type: !6402)
!6402 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6388, file: !6389, line: 133, size: 32, align: 32, elements: !6403)
!6403 = !{!6404, !6405}
!6404 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !6402, file: !6389, line: 133, baseType: !903, size: 32, align: 32)
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !6402, file: !6389, line: 133, baseType: !904, size: 32, align: 32)
!6406 = !DILocation(line: 133, column: 34, scope: !6388)
!6407 = !DILocation(line: 133, column: 38, scope: !6388)
!6408 = !DILocation(line: 133, column: 51, scope: !6388)
!6409 = !DILocation(line: 133, column: 58, scope: !6388)
!6410 = !DILocation(line: 133, column: 55, scope: !6388)
!6411 = !DILocation(line: 134, column: 14, scope: !6388)
!6412 = !DILocation(line: 134, column: 19, scope: !6388)
!6413 = !DILocation(line: 134, column: 16, scope: !6388)
!6414 = !DILocation(line: 134, column: 5, scope: !6388)
!6415 = distinct !DISubprogram(name: "get_bits_long", scope: !1695, file: !1695, line: 531, type: !3020, isLocal: true, isDefinition: true, scopeLine: 532, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!6416 = !DILocalVariable(name: "s", arg: 1, scope: !6415, file: !1695, line: 531, type: !2171)
!6417 = !DILocation(line: 531, column: 57, scope: !6415)
!6418 = !DILocalVariable(name: "n", arg: 2, scope: !6415, file: !1695, line: 531, type: !904)
!6419 = !DILocation(line: 531, column: 64, scope: !6415)
!6420 = !DILocation(line: 534, column: 10, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6415, file: !1695, line: 534, column: 9)
!6422 = !DILocation(line: 534, column: 9, scope: !6415)
!6423 = !DILocation(line: 535, column: 9, scope: !6424)
!6424 = distinct !DILexicalBlock(scope: !6421, file: !1695, line: 534, column: 13)
!6425 = !DILocation(line: 540, column: 16, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6421, file: !1695, line: 540, column: 16)
!6427 = !DILocation(line: 540, column: 18, scope: !6426)
!6428 = !DILocation(line: 540, column: 16, scope: !6421)
!6429 = !DILocation(line: 541, column: 25, scope: !6430)
!6430 = distinct !DILexicalBlock(scope: !6426, file: !1695, line: 540, column: 25)
!6431 = !DILocation(line: 541, column: 28, scope: !6430)
!6432 = !DILocation(line: 541, column: 16, scope: !6430)
!6433 = !DILocation(line: 541, column: 9, scope: !6430)
!6434 = !DILocalVariable(name: "ret", scope: !6435, file: !1695, line: 547, type: !903)
!6435 = distinct !DILexicalBlock(scope: !6426, file: !1695, line: 542, column: 12)
!6436 = !DILocation(line: 547, column: 18, scope: !6435)
!6437 = !DILocation(line: 547, column: 33, scope: !6435)
!6438 = !DILocation(line: 547, column: 24, scope: !6435)
!6439 = !DILocation(line: 547, column: 44, scope: !6435)
!6440 = !DILocation(line: 547, column: 46, scope: !6435)
!6441 = !DILocation(line: 547, column: 40, scope: !6435)
!6442 = !DILocation(line: 548, column: 16, scope: !6435)
!6443 = !DILocation(line: 548, column: 31, scope: !6435)
!6444 = !DILocation(line: 548, column: 34, scope: !6435)
!6445 = !DILocation(line: 548, column: 36, scope: !6435)
!6446 = !DILocation(line: 548, column: 22, scope: !6435)
!6447 = !DILocation(line: 548, column: 20, scope: !6435)
!6448 = !DILocation(line: 548, column: 9, scope: !6435)
!6449 = !DILocation(line: 552, column: 1, scope: !6415)
!6450 = distinct !DISubprogram(name: "get_bits_left", scope: !1695, file: !1695, line: 814, type: !6451, isLocal: true, isDefinition: true, scopeLine: 815, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!6451 = !DISubroutineType(types: !6452)
!6452 = !{!904, !2171}
!6453 = !DILocalVariable(name: "gb", arg: 1, scope: !6450, file: !1695, line: 814, type: !2171)
!6454 = !DILocation(line: 814, column: 48, scope: !6450)
!6455 = !DILocation(line: 816, column: 12, scope: !6450)
!6456 = !DILocation(line: 816, column: 16, scope: !6450)
!6457 = !DILocation(line: 816, column: 46, scope: !6450)
!6458 = !DILocation(line: 816, column: 31, scope: !6450)
!6459 = !DILocation(line: 816, column: 29, scope: !6450)
!6460 = !DILocation(line: 816, column: 5, scope: !6450)
!6461 = distinct !DISubprogram(name: "lms_update32", scope: !916, file: !916, line: 786, type: !5715, isLocal: true, isDefinition: true, scopeLine: 786, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!6462 = !DILocation(line: 127, column: 87, scope: !4332, inlinedAt: !6463)
!6463 = distinct !DILocation(line: 786, column: 504, scope: !6464)
!6464 = !DILexicalBlockFile(scope: !6461, file: !916, discriminator: 3)
!6465 = !DILocation(line: 127, column: 94, scope: !4332, inlinedAt: !6463)
!6466 = !DILocation(line: 127, column: 104, scope: !4332, inlinedAt: !6463)
!6467 = !DILocalVariable(name: "s", arg: 1, scope: !6461, file: !916, line: 786, type: !1645)
!6468 = !DILocation(line: 786, column: 43, scope: !6461)
!6469 = !DILocalVariable(name: "ich", arg: 2, scope: !6461, file: !916, line: 786, type: !904)
!6470 = !DILocation(line: 786, column: 50, scope: !6461)
!6471 = !DILocalVariable(name: "ilms", arg: 3, scope: !6461, file: !916, line: 786, type: !904)
!6472 = !DILocation(line: 786, column: 59, scope: !6461)
!6473 = !DILocalVariable(name: "input", arg: 4, scope: !6461, file: !916, line: 786, type: !904)
!6474 = !DILocation(line: 786, column: 69, scope: !6461)
!6475 = !DILocalVariable(name: "recent", scope: !6461, file: !916, line: 786, type: !904)
!6476 = !DILocation(line: 786, column: 82, scope: !6461)
!6477 = !DILocation(line: 786, column: 105, scope: !6461)
!6478 = !DILocation(line: 786, column: 91, scope: !6461)
!6479 = !DILocation(line: 786, column: 100, scope: !6461)
!6480 = !DILocation(line: 786, column: 94, scope: !6461)
!6481 = !DILocation(line: 786, column: 111, scope: !6461)
!6482 = !DILocalVariable(name: "range", scope: !6461, file: !916, line: 786, type: !904)
!6483 = !DILocation(line: 786, column: 123, scope: !6461)
!6484 = !DILocation(line: 786, column: 136, scope: !6461)
!6485 = !DILocation(line: 786, column: 139, scope: !6461)
!6486 = !DILocation(line: 786, column: 155, scope: !6461)
!6487 = !DILocation(line: 786, column: 133, scope: !6461)
!6488 = !DILocalVariable(name: "order", scope: !6461, file: !916, line: 786, type: !904)
!6489 = !DILocation(line: 786, column: 164, scope: !6461)
!6490 = !DILocation(line: 786, column: 186, scope: !6461)
!6491 = !DILocation(line: 786, column: 172, scope: !6461)
!6492 = !DILocation(line: 786, column: 181, scope: !6461)
!6493 = !DILocation(line: 786, column: 175, scope: !6461)
!6494 = !DILocation(line: 786, column: 192, scope: !6461)
!6495 = !DILocalVariable(name: "prev", scope: !6461, file: !916, line: 786, type: !909)
!6496 = !DILocation(line: 786, column: 208, scope: !6461)
!6497 = !DILocation(line: 786, column: 240, scope: !6461)
!6498 = !DILocation(line: 786, column: 226, scope: !6461)
!6499 = !DILocation(line: 786, column: 235, scope: !6461)
!6500 = !DILocation(line: 786, column: 229, scope: !6461)
!6501 = !DILocation(line: 786, column: 246, scope: !6461)
!6502 = !DILocation(line: 786, column: 266, scope: !6503)
!6503 = distinct !DILexicalBlock(scope: !6461, file: !916, line: 786, column: 266)
!6504 = !DILocation(line: 786, column: 266, scope: !6461)
!6505 = !DILocation(line: 786, column: 280, scope: !6506)
!6506 = !DILexicalBlockFile(scope: !6503, file: !916, discriminator: 1)
!6507 = !DILocation(line: 786, column: 274, scope: !6506)
!6508 = !DILocation(line: 786, column: 298, scope: !6509)
!6509 = !DILexicalBlockFile(scope: !6510, file: !916, discriminator: 2)
!6510 = distinct !DILexicalBlock(scope: !6503, file: !916, line: 786, column: 289)
!6511 = !DILocation(line: 786, column: 305, scope: !6509)
!6512 = !DILocation(line: 786, column: 303, scope: !6509)
!6513 = !DILocation(line: 786, column: 291, scope: !6509)
!6514 = !DILocation(line: 786, column: 312, scope: !6509)
!6515 = !DILocation(line: 786, column: 327, scope: !6509)
!6516 = !DILocation(line: 786, column: 325, scope: !6509)
!6517 = !DILocation(line: 786, column: 318, scope: !6509)
!6518 = !DILocation(line: 786, column: 356, scope: !6509)
!6519 = !DILocation(line: 786, column: 342, scope: !6509)
!6520 = !DILocation(line: 786, column: 351, scope: !6509)
!6521 = !DILocation(line: 786, column: 345, scope: !6509)
!6522 = !DILocation(line: 786, column: 362, scope: !6509)
!6523 = !DILocation(line: 786, column: 376, scope: !6509)
!6524 = !DILocation(line: 786, column: 374, scope: !6509)
!6525 = !DILocation(line: 786, column: 335, scope: !6509)
!6526 = !DILocation(line: 786, column: 397, scope: !6509)
!6527 = !DILocation(line: 786, column: 383, scope: !6509)
!6528 = !DILocation(line: 786, column: 392, scope: !6509)
!6529 = !DILocation(line: 786, column: 386, scope: !6509)
!6530 = !DILocation(line: 786, column: 403, scope: !6509)
!6531 = !DILocation(line: 786, column: 459, scope: !6509)
!6532 = !DILocation(line: 786, column: 457, scope: !6509)
!6533 = !DILocation(line: 786, column: 335, scope: !6534)
!6534 = !DILexicalBlockFile(scope: !6509, file: !916, discriminator: 4)
!6535 = !DILocation(line: 786, column: 476, scope: !6509)
!6536 = !DILocation(line: 786, column: 482, scope: !6509)
!6537 = !DILocation(line: 786, column: 474, scope: !6509)
!6538 = !DILocation(line: 786, column: 514, scope: !6464)
!6539 = !DILocation(line: 786, column: 522, scope: !6464)
!6540 = !DILocation(line: 786, column: 521, scope: !6464)
!6541 = !DILocation(line: 786, column: 529, scope: !6464)
!6542 = !DILocation(line: 786, column: 535, scope: !6464)
!6543 = !DILocation(line: 786, column: 504, scope: !6464)
!6544 = !DILocation(line: 132, column: 9, scope: !4357, inlinedAt: !6463)
!6545 = !DILocation(line: 132, column: 13, scope: !4357, inlinedAt: !6463)
!6546 = !DILocation(line: 132, column: 11, scope: !4357, inlinedAt: !6463)
!6547 = !DILocation(line: 132, column: 9, scope: !4332, inlinedAt: !6463)
!6548 = !DILocation(line: 132, column: 26, scope: !4362, inlinedAt: !6463)
!6549 = !DILocation(line: 132, column: 19, scope: !4362, inlinedAt: !6463)
!6550 = !DILocation(line: 133, column: 14, scope: !4365, inlinedAt: !6463)
!6551 = !DILocation(line: 133, column: 18, scope: !4365, inlinedAt: !6463)
!6552 = !DILocation(line: 133, column: 16, scope: !4365, inlinedAt: !6463)
!6553 = !DILocation(line: 133, column: 14, scope: !4357, inlinedAt: !6463)
!6554 = !DILocation(line: 133, column: 31, scope: !4370, inlinedAt: !6463)
!6555 = !DILocation(line: 133, column: 24, scope: !4370, inlinedAt: !6463)
!6556 = !DILocation(line: 134, column: 17, scope: !4365, inlinedAt: !6463)
!6557 = !DILocation(line: 134, column: 10, scope: !4365, inlinedAt: !6463)
!6558 = !DILocation(line: 135, column: 1, scope: !4332, inlinedAt: !6463)
!6559 = !DILocation(line: 786, column: 494, scope: !6464)
!6560 = !DILocation(line: 786, column: 489, scope: !6464)
!6561 = !DILocation(line: 786, column: 502, scope: !6464)
!6562 = !DILocation(line: 786, column: 586, scope: !6464)
!6563 = !DILocation(line: 786, column: 593, scope: !6464)
!6564 = !DILocation(line: 786, column: 602, scope: !6464)
!6565 = !DILocation(line: 786, column: 609, scope: !6464)
!6566 = !DILocation(line: 786, column: 598, scope: !6464)
!6567 = !DILocation(line: 786, column: 633, scope: !6464)
!6568 = !DILocation(line: 786, column: 617, scope: !6464)
!6569 = !DILocation(line: 786, column: 620, scope: !6464)
!6570 = !DILocation(line: 786, column: 615, scope: !6464)
!6571 = !DILocation(line: 786, column: 583, scope: !6464)
!6572 = !DILocation(line: 786, column: 573, scope: !6464)
!6573 = !DILocation(line: 786, column: 541, scope: !6464)
!6574 = !DILocation(line: 786, column: 555, scope: !6464)
!6575 = !DILocation(line: 786, column: 550, scope: !6464)
!6576 = !DILocation(line: 786, column: 544, scope: !6464)
!6577 = !DILocation(line: 786, column: 561, scope: !6464)
!6578 = !DILocation(line: 786, column: 581, scope: !6464)
!6579 = !DILocation(line: 786, column: 671, scope: !6464)
!6580 = !DILocation(line: 786, column: 681, scope: !6464)
!6581 = !DILocation(line: 786, column: 687, scope: !6464)
!6582 = !DILocation(line: 786, column: 678, scope: !6464)
!6583 = !DILocation(line: 786, column: 639, scope: !6464)
!6584 = !DILocation(line: 786, column: 653, scope: !6464)
!6585 = !DILocation(line: 786, column: 648, scope: !6464)
!6586 = !DILocation(line: 786, column: 642, scope: !6464)
!6587 = !DILocation(line: 786, column: 659, scope: !6464)
!6588 = !DILocation(line: 786, column: 694, scope: !6464)
!6589 = !DILocation(line: 786, column: 733, scope: !6464)
!6590 = !DILocation(line: 786, column: 743, scope: !6464)
!6591 = !DILocation(line: 786, column: 749, scope: !6464)
!6592 = !DILocation(line: 786, column: 740, scope: !6464)
!6593 = !DILocation(line: 786, column: 701, scope: !6464)
!6594 = !DILocation(line: 786, column: 715, scope: !6464)
!6595 = !DILocation(line: 786, column: 710, scope: !6464)
!6596 = !DILocation(line: 786, column: 704, scope: !6464)
!6597 = !DILocation(line: 786, column: 721, scope: !6464)
!6598 = !DILocation(line: 786, column: 756, scope: !6464)
!6599 = !DILocation(line: 786, column: 792, scope: !6464)
!6600 = !DILocation(line: 786, column: 777, scope: !6464)
!6601 = !DILocation(line: 786, column: 763, scope: !6464)
!6602 = !DILocation(line: 786, column: 772, scope: !6464)
!6603 = !DILocation(line: 786, column: 766, scope: !6464)
!6604 = !DILocation(line: 786, column: 783, scope: !6464)
!6605 = !DILocation(line: 786, column: 790, scope: !6464)
!6606 = !DILocation(line: 786, column: 821, scope: !6464)
!6607 = !DILocation(line: 786, column: 807, scope: !6464)
!6608 = !DILocation(line: 786, column: 816, scope: !6464)
!6609 = !DILocation(line: 786, column: 810, scope: !6464)
!6610 = !DILocation(line: 786, column: 827, scope: !6464)
!6611 = !DILocation(line: 786, column: 841, scope: !6464)
!6612 = !DILocation(line: 786, column: 839, scope: !6464)
!6613 = !DILocation(line: 786, column: 850, scope: !6464)
!6614 = !DILocation(line: 786, column: 848, scope: !6464)
!6615 = !DILocation(line: 786, column: 800, scope: !6464)
!6616 = !DILocation(line: 786, column: 944, scope: !6464)
!6617 = !DILocation(line: 786, column: 951, scope: !6464)
!6618 = !DILocation(line: 786, column: 950, scope: !6464)
!6619 = !DILocation(line: 786, column: 943, scope: !6464)
!6620 = !DILocation(line: 786, column: 942, scope: !6464)
!6621 = !DILocation(line: 786, column: 900, scope: !6464)
!6622 = !DILocation(line: 786, column: 800, scope: !6623)
!6623 = !DILexicalBlockFile(scope: !6464, file: !916, discriminator: 5)
!6624 = !DILocation(line: 786, column: 960, scope: !6464)
!6625 = distinct !DISubprogram(name: "lms_update16", scope: !916, file: !916, line: 785, type: !5715, isLocal: true, isDefinition: true, scopeLine: 785, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!6626 = !DILocation(line: 127, column: 87, scope: !4332, inlinedAt: !6627)
!6627 = distinct !DILocation(line: 785, column: 504, scope: !6628)
!6628 = !DILexicalBlockFile(scope: !6625, file: !916, discriminator: 3)
!6629 = !DILocation(line: 127, column: 94, scope: !4332, inlinedAt: !6627)
!6630 = !DILocation(line: 127, column: 104, scope: !4332, inlinedAt: !6627)
!6631 = !DILocalVariable(name: "s", arg: 1, scope: !6625, file: !916, line: 785, type: !1645)
!6632 = !DILocation(line: 785, column: 43, scope: !6625)
!6633 = !DILocalVariable(name: "ich", arg: 2, scope: !6625, file: !916, line: 785, type: !904)
!6634 = !DILocation(line: 785, column: 50, scope: !6625)
!6635 = !DILocalVariable(name: "ilms", arg: 3, scope: !6625, file: !916, line: 785, type: !904)
!6636 = !DILocation(line: 785, column: 59, scope: !6625)
!6637 = !DILocalVariable(name: "input", arg: 4, scope: !6625, file: !916, line: 785, type: !904)
!6638 = !DILocation(line: 785, column: 69, scope: !6625)
!6639 = !DILocalVariable(name: "recent", scope: !6625, file: !916, line: 785, type: !904)
!6640 = !DILocation(line: 785, column: 82, scope: !6625)
!6641 = !DILocation(line: 785, column: 105, scope: !6625)
!6642 = !DILocation(line: 785, column: 91, scope: !6625)
!6643 = !DILocation(line: 785, column: 100, scope: !6625)
!6644 = !DILocation(line: 785, column: 94, scope: !6625)
!6645 = !DILocation(line: 785, column: 111, scope: !6625)
!6646 = !DILocalVariable(name: "range", scope: !6625, file: !916, line: 785, type: !904)
!6647 = !DILocation(line: 785, column: 123, scope: !6625)
!6648 = !DILocation(line: 785, column: 136, scope: !6625)
!6649 = !DILocation(line: 785, column: 139, scope: !6625)
!6650 = !DILocation(line: 785, column: 155, scope: !6625)
!6651 = !DILocation(line: 785, column: 133, scope: !6625)
!6652 = !DILocalVariable(name: "order", scope: !6625, file: !916, line: 785, type: !904)
!6653 = !DILocation(line: 785, column: 164, scope: !6625)
!6654 = !DILocation(line: 785, column: 186, scope: !6625)
!6655 = !DILocation(line: 785, column: 172, scope: !6625)
!6656 = !DILocation(line: 785, column: 181, scope: !6625)
!6657 = !DILocation(line: 785, column: 175, scope: !6625)
!6658 = !DILocation(line: 785, column: 192, scope: !6625)
!6659 = !DILocalVariable(name: "prev", scope: !6625, file: !916, line: 785, type: !906)
!6660 = !DILocation(line: 785, column: 208, scope: !6625)
!6661 = !DILocation(line: 785, column: 240, scope: !6625)
!6662 = !DILocation(line: 785, column: 226, scope: !6625)
!6663 = !DILocation(line: 785, column: 235, scope: !6625)
!6664 = !DILocation(line: 785, column: 229, scope: !6625)
!6665 = !DILocation(line: 785, column: 246, scope: !6625)
!6666 = !DILocation(line: 785, column: 215, scope: !6625)
!6667 = !DILocation(line: 785, column: 266, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6625, file: !916, line: 785, column: 266)
!6669 = !DILocation(line: 785, column: 266, scope: !6625)
!6670 = !DILocation(line: 785, column: 280, scope: !6671)
!6671 = !DILexicalBlockFile(scope: !6668, file: !916, discriminator: 1)
!6672 = !DILocation(line: 785, column: 274, scope: !6671)
!6673 = !DILocation(line: 785, column: 298, scope: !6674)
!6674 = !DILexicalBlockFile(scope: !6675, file: !916, discriminator: 2)
!6675 = distinct !DILexicalBlock(scope: !6668, file: !916, line: 785, column: 289)
!6676 = !DILocation(line: 785, column: 305, scope: !6674)
!6677 = !DILocation(line: 785, column: 303, scope: !6674)
!6678 = !DILocation(line: 785, column: 291, scope: !6674)
!6679 = !DILocation(line: 785, column: 312, scope: !6674)
!6680 = !DILocation(line: 785, column: 327, scope: !6674)
!6681 = !DILocation(line: 785, column: 325, scope: !6674)
!6682 = !DILocation(line: 785, column: 318, scope: !6674)
!6683 = !DILocation(line: 785, column: 356, scope: !6674)
!6684 = !DILocation(line: 785, column: 342, scope: !6674)
!6685 = !DILocation(line: 785, column: 351, scope: !6674)
!6686 = !DILocation(line: 785, column: 345, scope: !6674)
!6687 = !DILocation(line: 785, column: 362, scope: !6674)
!6688 = !DILocation(line: 785, column: 376, scope: !6674)
!6689 = !DILocation(line: 785, column: 374, scope: !6674)
!6690 = !DILocation(line: 785, column: 335, scope: !6674)
!6691 = !DILocation(line: 785, column: 397, scope: !6674)
!6692 = !DILocation(line: 785, column: 383, scope: !6674)
!6693 = !DILocation(line: 785, column: 392, scope: !6674)
!6694 = !DILocation(line: 785, column: 386, scope: !6674)
!6695 = !DILocation(line: 785, column: 403, scope: !6674)
!6696 = !DILocation(line: 785, column: 459, scope: !6674)
!6697 = !DILocation(line: 785, column: 457, scope: !6674)
!6698 = !DILocation(line: 785, column: 335, scope: !6699)
!6699 = !DILexicalBlockFile(scope: !6674, file: !916, discriminator: 4)
!6700 = !DILocation(line: 785, column: 476, scope: !6674)
!6701 = !DILocation(line: 785, column: 482, scope: !6674)
!6702 = !DILocation(line: 785, column: 474, scope: !6674)
!6703 = !DILocation(line: 785, column: 514, scope: !6628)
!6704 = !DILocation(line: 785, column: 522, scope: !6628)
!6705 = !DILocation(line: 785, column: 521, scope: !6628)
!6706 = !DILocation(line: 785, column: 529, scope: !6628)
!6707 = !DILocation(line: 785, column: 535, scope: !6628)
!6708 = !DILocation(line: 785, column: 504, scope: !6628)
!6709 = !DILocation(line: 132, column: 9, scope: !4357, inlinedAt: !6627)
!6710 = !DILocation(line: 132, column: 13, scope: !4357, inlinedAt: !6627)
!6711 = !DILocation(line: 132, column: 11, scope: !4357, inlinedAt: !6627)
!6712 = !DILocation(line: 132, column: 9, scope: !4332, inlinedAt: !6627)
!6713 = !DILocation(line: 132, column: 26, scope: !4362, inlinedAt: !6627)
!6714 = !DILocation(line: 132, column: 19, scope: !4362, inlinedAt: !6627)
!6715 = !DILocation(line: 133, column: 14, scope: !4365, inlinedAt: !6627)
!6716 = !DILocation(line: 133, column: 18, scope: !4365, inlinedAt: !6627)
!6717 = !DILocation(line: 133, column: 16, scope: !4365, inlinedAt: !6627)
!6718 = !DILocation(line: 133, column: 14, scope: !4357, inlinedAt: !6627)
!6719 = !DILocation(line: 133, column: 31, scope: !4370, inlinedAt: !6627)
!6720 = !DILocation(line: 133, column: 24, scope: !4370, inlinedAt: !6627)
!6721 = !DILocation(line: 134, column: 17, scope: !4365, inlinedAt: !6627)
!6722 = !DILocation(line: 134, column: 10, scope: !4365, inlinedAt: !6627)
!6723 = !DILocation(line: 135, column: 1, scope: !4332, inlinedAt: !6627)
!6724 = !DILocation(line: 785, column: 494, scope: !6628)
!6725 = !DILocation(line: 785, column: 489, scope: !6628)
!6726 = !DILocation(line: 785, column: 502, scope: !6628)
!6727 = !DILocation(line: 785, column: 586, scope: !6628)
!6728 = !DILocation(line: 785, column: 593, scope: !6628)
!6729 = !DILocation(line: 785, column: 602, scope: !6628)
!6730 = !DILocation(line: 785, column: 609, scope: !6628)
!6731 = !DILocation(line: 785, column: 598, scope: !6628)
!6732 = !DILocation(line: 785, column: 633, scope: !6628)
!6733 = !DILocation(line: 785, column: 617, scope: !6628)
!6734 = !DILocation(line: 785, column: 620, scope: !6628)
!6735 = !DILocation(line: 785, column: 615, scope: !6628)
!6736 = !DILocation(line: 785, column: 583, scope: !6628)
!6737 = !DILocation(line: 785, column: 573, scope: !6628)
!6738 = !DILocation(line: 785, column: 541, scope: !6628)
!6739 = !DILocation(line: 785, column: 555, scope: !6628)
!6740 = !DILocation(line: 785, column: 550, scope: !6628)
!6741 = !DILocation(line: 785, column: 544, scope: !6628)
!6742 = !DILocation(line: 785, column: 561, scope: !6628)
!6743 = !DILocation(line: 785, column: 581, scope: !6628)
!6744 = !DILocation(line: 785, column: 671, scope: !6628)
!6745 = !DILocation(line: 785, column: 681, scope: !6628)
!6746 = !DILocation(line: 785, column: 687, scope: !6628)
!6747 = !DILocation(line: 785, column: 678, scope: !6628)
!6748 = !DILocation(line: 785, column: 639, scope: !6628)
!6749 = !DILocation(line: 785, column: 653, scope: !6628)
!6750 = !DILocation(line: 785, column: 648, scope: !6628)
!6751 = !DILocation(line: 785, column: 642, scope: !6628)
!6752 = !DILocation(line: 785, column: 659, scope: !6628)
!6753 = !DILocation(line: 785, column: 694, scope: !6628)
!6754 = !DILocation(line: 785, column: 733, scope: !6628)
!6755 = !DILocation(line: 785, column: 743, scope: !6628)
!6756 = !DILocation(line: 785, column: 749, scope: !6628)
!6757 = !DILocation(line: 785, column: 740, scope: !6628)
!6758 = !DILocation(line: 785, column: 701, scope: !6628)
!6759 = !DILocation(line: 785, column: 715, scope: !6628)
!6760 = !DILocation(line: 785, column: 710, scope: !6628)
!6761 = !DILocation(line: 785, column: 704, scope: !6628)
!6762 = !DILocation(line: 785, column: 721, scope: !6628)
!6763 = !DILocation(line: 785, column: 756, scope: !6628)
!6764 = !DILocation(line: 785, column: 792, scope: !6628)
!6765 = !DILocation(line: 785, column: 777, scope: !6628)
!6766 = !DILocation(line: 785, column: 763, scope: !6628)
!6767 = !DILocation(line: 785, column: 772, scope: !6628)
!6768 = !DILocation(line: 785, column: 766, scope: !6628)
!6769 = !DILocation(line: 785, column: 783, scope: !6628)
!6770 = !DILocation(line: 785, column: 790, scope: !6628)
!6771 = !DILocation(line: 785, column: 821, scope: !6628)
!6772 = !DILocation(line: 785, column: 807, scope: !6628)
!6773 = !DILocation(line: 785, column: 816, scope: !6628)
!6774 = !DILocation(line: 785, column: 810, scope: !6628)
!6775 = !DILocation(line: 785, column: 827, scope: !6628)
!6776 = !DILocation(line: 785, column: 841, scope: !6628)
!6777 = !DILocation(line: 785, column: 839, scope: !6628)
!6778 = !DILocation(line: 785, column: 850, scope: !6628)
!6779 = !DILocation(line: 785, column: 848, scope: !6628)
!6780 = !DILocation(line: 785, column: 800, scope: !6628)
!6781 = !DILocation(line: 785, column: 944, scope: !6628)
!6782 = !DILocation(line: 785, column: 951, scope: !6628)
!6783 = !DILocation(line: 785, column: 950, scope: !6628)
!6784 = !DILocation(line: 785, column: 943, scope: !6628)
!6785 = !DILocation(line: 785, column: 942, scope: !6628)
!6786 = !DILocation(line: 785, column: 900, scope: !6628)
!6787 = !DILocation(line: 785, column: 800, scope: !6788)
!6788 = !DILexicalBlockFile(scope: !6628, file: !916, discriminator: 5)
!6789 = !DILocation(line: 785, column: 960, scope: !6628)
!6790 = distinct !DISubprogram(name: "mclms_predict", scope: !916, file: !916, line: 665, type: !6791, isLocal: true, isDefinition: true, scopeLine: 666, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!6791 = !DISubroutineType(types: !6792)
!6792 = !{null, !1645, !904, !1303}
!6793 = !DILocalVariable(name: "s", arg: 1, scope: !6790, file: !916, line: 665, type: !1645)
!6794 = !DILocation(line: 665, column: 43, scope: !6790)
!6795 = !DILocalVariable(name: "icoef", arg: 2, scope: !6790, file: !916, line: 665, type: !904)
!6796 = !DILocation(line: 665, column: 50, scope: !6790)
!6797 = !DILocalVariable(name: "pred", arg: 3, scope: !6790, file: !916, line: 665, type: !1303)
!6798 = !DILocation(line: 665, column: 62, scope: !6790)
!6799 = !DILocalVariable(name: "ich", scope: !6790, file: !916, line: 667, type: !904)
!6800 = !DILocation(line: 667, column: 9, scope: !6790)
!6801 = !DILocalVariable(name: "i", scope: !6790, file: !916, line: 667, type: !904)
!6802 = !DILocation(line: 667, column: 14, scope: !6790)
!6803 = !DILocalVariable(name: "order", scope: !6790, file: !916, line: 668, type: !904)
!6804 = !DILocation(line: 668, column: 9, scope: !6790)
!6805 = !DILocation(line: 668, column: 17, scope: !6790)
!6806 = !DILocation(line: 668, column: 20, scope: !6790)
!6807 = !DILocalVariable(name: "num_channels", scope: !6790, file: !916, line: 669, type: !904)
!6808 = !DILocation(line: 669, column: 9, scope: !6790)
!6809 = !DILocation(line: 669, column: 24, scope: !6790)
!6810 = !DILocation(line: 669, column: 27, scope: !6790)
!6811 = !DILocation(line: 671, column: 14, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6790, file: !916, line: 671, column: 5)
!6813 = !DILocation(line: 671, column: 10, scope: !6812)
!6814 = !DILocation(line: 671, column: 19, scope: !6815)
!6815 = !DILexicalBlockFile(scope: !6816, file: !916, discriminator: 1)
!6816 = distinct !DILexicalBlock(scope: !6812, file: !916, line: 671, column: 5)
!6817 = !DILocation(line: 671, column: 25, scope: !6815)
!6818 = !DILocation(line: 671, column: 23, scope: !6815)
!6819 = !DILocation(line: 671, column: 5, scope: !6815)
!6820 = !DILocation(line: 672, column: 14, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6816, file: !916, line: 671, column: 46)
!6822 = !DILocation(line: 672, column: 9, scope: !6821)
!6823 = !DILocation(line: 672, column: 19, scope: !6821)
!6824 = !DILocation(line: 673, column: 34, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6821, file: !916, line: 673, column: 13)
!6826 = !DILocation(line: 673, column: 14, scope: !6825)
!6827 = !DILocation(line: 673, column: 17, scope: !6825)
!6828 = !DILocation(line: 673, column: 13, scope: !6821)
!6829 = !DILocation(line: 674, column: 13, scope: !6825)
!6830 = !DILocation(line: 675, column: 16, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6821, file: !916, line: 675, column: 9)
!6832 = !DILocation(line: 675, column: 14, scope: !6831)
!6833 = !DILocation(line: 675, column: 21, scope: !6834)
!6834 = !DILexicalBlockFile(scope: !6835, file: !916, discriminator: 1)
!6835 = distinct !DILexicalBlock(scope: !6831, file: !916, line: 675, column: 9)
!6836 = !DILocation(line: 675, column: 25, scope: !6834)
!6837 = !DILocation(line: 675, column: 33, scope: !6834)
!6838 = !DILocation(line: 675, column: 31, scope: !6834)
!6839 = !DILocation(line: 675, column: 23, scope: !6834)
!6840 = !DILocation(line: 675, column: 9, scope: !6834)
!6841 = !DILocation(line: 676, column: 56, scope: !6835)
!6842 = !DILocation(line: 676, column: 60, scope: !6835)
!6843 = !DILocation(line: 676, column: 63, scope: !6835)
!6844 = !DILocation(line: 676, column: 58, scope: !6835)
!6845 = !DILocation(line: 676, column: 36, scope: !6835)
!6846 = !DILocation(line: 676, column: 39, scope: !6835)
!6847 = !DILocation(line: 677, column: 42, scope: !6835)
!6848 = !DILocation(line: 677, column: 46, scope: !6835)
!6849 = !DILocation(line: 677, column: 54, scope: !6835)
!6850 = !DILocation(line: 677, column: 52, scope: !6835)
!6851 = !DILocation(line: 677, column: 69, scope: !6835)
!6852 = !DILocation(line: 677, column: 67, scope: !6835)
!6853 = !DILocation(line: 677, column: 44, scope: !6835)
!6854 = !DILocation(line: 677, column: 26, scope: !6835)
!6855 = !DILocation(line: 677, column: 29, scope: !6835)
!6856 = !DILocation(line: 676, column: 77, scope: !6835)
!6857 = !DILocation(line: 676, column: 18, scope: !6835)
!6858 = !DILocation(line: 676, column: 13, scope: !6835)
!6859 = !DILocation(line: 676, column: 23, scope: !6835)
!6860 = !DILocation(line: 675, column: 48, scope: !6861)
!6861 = !DILexicalBlockFile(scope: !6835, file: !916, discriminator: 2)
!6862 = !DILocation(line: 675, column: 9, scope: !6861)
!6863 = distinct !{!6863, !6864}
!6864 = !DILocation(line: 675, column: 9, scope: !6821)
!6865 = !DILocation(line: 678, column: 16, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6821, file: !916, line: 678, column: 9)
!6867 = !DILocation(line: 678, column: 14, scope: !6866)
!6868 = !DILocation(line: 678, column: 21, scope: !6869)
!6869 = !DILexicalBlockFile(scope: !6870, file: !916, discriminator: 1)
!6870 = distinct !DILexicalBlock(scope: !6866, file: !916, line: 678, column: 9)
!6871 = !DILocation(line: 678, column: 25, scope: !6869)
!6872 = !DILocation(line: 678, column: 23, scope: !6869)
!6873 = !DILocation(line: 678, column: 9, scope: !6869)
!6874 = !DILocation(line: 679, column: 59, scope: !6870)
!6875 = !DILocation(line: 679, column: 36, scope: !6870)
!6876 = !DILocation(line: 679, column: 56, scope: !6870)
!6877 = !DILocation(line: 679, column: 39, scope: !6870)
!6878 = !DILocation(line: 680, column: 46, scope: !6870)
!6879 = !DILocation(line: 680, column: 50, scope: !6870)
!6880 = !DILocation(line: 680, column: 65, scope: !6870)
!6881 = !DILocation(line: 680, column: 63, scope: !6870)
!6882 = !DILocation(line: 680, column: 48, scope: !6870)
!6883 = !DILocation(line: 680, column: 26, scope: !6870)
!6884 = !DILocation(line: 680, column: 29, scope: !6870)
!6885 = !DILocation(line: 679, column: 66, scope: !6870)
!6886 = !DILocation(line: 679, column: 18, scope: !6870)
!6887 = !DILocation(line: 679, column: 13, scope: !6870)
!6888 = !DILocation(line: 679, column: 23, scope: !6870)
!6889 = !DILocation(line: 678, column: 31, scope: !6890)
!6890 = !DILexicalBlockFile(scope: !6870, file: !916, discriminator: 2)
!6891 = !DILocation(line: 678, column: 9, scope: !6890)
!6892 = distinct !{!6892, !6893}
!6893 = !DILocation(line: 678, column: 9, scope: !6821)
!6894 = !DILocation(line: 681, column: 27, scope: !6821)
!6895 = !DILocation(line: 681, column: 30, scope: !6821)
!6896 = !DILocation(line: 681, column: 44, scope: !6821)
!6897 = !DILocation(line: 681, column: 24, scope: !6821)
!6898 = !DILocation(line: 681, column: 14, scope: !6821)
!6899 = !DILocation(line: 681, column: 9, scope: !6821)
!6900 = !DILocation(line: 681, column: 19, scope: !6821)
!6901 = !DILocation(line: 682, column: 23, scope: !6821)
!6902 = !DILocation(line: 682, column: 26, scope: !6821)
!6903 = !DILocation(line: 682, column: 14, scope: !6821)
!6904 = !DILocation(line: 682, column: 9, scope: !6821)
!6905 = !DILocation(line: 682, column: 19, scope: !6821)
!6906 = !DILocation(line: 683, column: 49, scope: !6821)
!6907 = !DILocation(line: 683, column: 44, scope: !6821)
!6908 = !DILocation(line: 683, column: 34, scope: !6821)
!6909 = !DILocation(line: 683, column: 9, scope: !6821)
!6910 = !DILocation(line: 683, column: 29, scope: !6821)
!6911 = !DILocation(line: 683, column: 12, scope: !6821)
!6912 = !DILocation(line: 683, column: 41, scope: !6821)
!6913 = !DILocation(line: 684, column: 5, scope: !6821)
!6914 = !DILocation(line: 671, column: 42, scope: !6915)
!6915 = !DILexicalBlockFile(scope: !6816, file: !916, discriminator: 2)
!6916 = !DILocation(line: 671, column: 5, scope: !6915)
!6917 = distinct !{!6917, !6918}
!6918 = !DILocation(line: 671, column: 5, scope: !6790)
!6919 = !DILocation(line: 685, column: 1, scope: !6790)
!6920 = distinct !DISubprogram(name: "mclms_update", scope: !916, file: !916, line: 623, type: !6791, isLocal: true, isDefinition: true, scopeLine: 624, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!6921 = !DILocation(line: 127, column: 87, scope: !4332, inlinedAt: !6922)
!6922 = distinct !DILocation(line: 649, column: 48, scope: !6923)
!6923 = distinct !DILexicalBlock(scope: !6924, file: !916, line: 647, column: 51)
!6924 = distinct !DILexicalBlock(scope: !6925, file: !916, line: 647, column: 5)
!6925 = distinct !DILexicalBlock(scope: !6920, file: !916, line: 647, column: 5)
!6926 = !DILocation(line: 127, column: 94, scope: !4332, inlinedAt: !6922)
!6927 = !DILocation(line: 127, column: 104, scope: !4332, inlinedAt: !6922)
!6928 = !DILocalVariable(name: "s", arg: 1, scope: !6920, file: !916, line: 623, type: !1645)
!6929 = !DILocation(line: 623, column: 42, scope: !6920)
!6930 = !DILocalVariable(name: "icoef", arg: 2, scope: !6920, file: !916, line: 623, type: !904)
!6931 = !DILocation(line: 623, column: 49, scope: !6920)
!6932 = !DILocalVariable(name: "pred", arg: 3, scope: !6920, file: !916, line: 623, type: !1303)
!6933 = !DILocation(line: 623, column: 61, scope: !6920)
!6934 = !DILocalVariable(name: "i", scope: !6920, file: !916, line: 625, type: !904)
!6935 = !DILocation(line: 625, column: 9, scope: !6920)
!6936 = !DILocalVariable(name: "j", scope: !6920, file: !916, line: 625, type: !904)
!6937 = !DILocation(line: 625, column: 12, scope: !6920)
!6938 = !DILocalVariable(name: "ich", scope: !6920, file: !916, line: 625, type: !904)
!6939 = !DILocation(line: 625, column: 15, scope: !6920)
!6940 = !DILocalVariable(name: "pred_error", scope: !6920, file: !916, line: 625, type: !904)
!6941 = !DILocation(line: 625, column: 20, scope: !6920)
!6942 = !DILocalVariable(name: "order", scope: !6920, file: !916, line: 626, type: !904)
!6943 = !DILocation(line: 626, column: 9, scope: !6920)
!6944 = !DILocation(line: 626, column: 17, scope: !6920)
!6945 = !DILocation(line: 626, column: 20, scope: !6920)
!6946 = !DILocalVariable(name: "num_channels", scope: !6920, file: !916, line: 627, type: !904)
!6947 = !DILocation(line: 627, column: 9, scope: !6920)
!6948 = !DILocation(line: 627, column: 24, scope: !6920)
!6949 = !DILocation(line: 627, column: 27, scope: !6920)
!6950 = !DILocalVariable(name: "range", scope: !6920, file: !916, line: 628, type: !904)
!6951 = !DILocation(line: 628, column: 9, scope: !6920)
!6952 = !DILocation(line: 628, column: 23, scope: !6920)
!6953 = !DILocation(line: 628, column: 26, scope: !6920)
!6954 = !DILocation(line: 628, column: 42, scope: !6920)
!6955 = !DILocation(line: 628, column: 19, scope: !6920)
!6956 = !DILocation(line: 630, column: 14, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6920, file: !916, line: 630, column: 5)
!6958 = !DILocation(line: 630, column: 10, scope: !6957)
!6959 = !DILocation(line: 630, column: 19, scope: !6960)
!6960 = !DILexicalBlockFile(scope: !6961, file: !916, discriminator: 1)
!6961 = distinct !DILexicalBlock(scope: !6957, file: !916, line: 630, column: 5)
!6962 = !DILocation(line: 630, column: 25, scope: !6960)
!6963 = !DILocation(line: 630, column: 23, scope: !6960)
!6964 = !DILocation(line: 630, column: 5, scope: !6960)
!6965 = !DILocation(line: 631, column: 47, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6961, file: !916, line: 630, column: 46)
!6967 = !DILocation(line: 631, column: 22, scope: !6966)
!6968 = !DILocation(line: 631, column: 42, scope: !6966)
!6969 = !DILocation(line: 631, column: 25, scope: !6966)
!6970 = !DILocation(line: 631, column: 61, scope: !6966)
!6971 = !DILocation(line: 631, column: 56, scope: !6966)
!6972 = !DILocation(line: 631, column: 54, scope: !6966)
!6973 = !DILocation(line: 631, column: 20, scope: !6966)
!6974 = !DILocation(line: 632, column: 13, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6966, file: !916, line: 632, column: 13)
!6976 = !DILocation(line: 632, column: 24, scope: !6975)
!6977 = !DILocation(line: 632, column: 13, scope: !6966)
!6978 = !DILocation(line: 633, column: 20, scope: !6979)
!6979 = distinct !DILexicalBlock(scope: !6980, file: !916, line: 633, column: 13)
!6980 = distinct !DILexicalBlock(scope: !6975, file: !916, line: 632, column: 29)
!6981 = !DILocation(line: 633, column: 18, scope: !6979)
!6982 = !DILocation(line: 633, column: 25, scope: !6983)
!6983 = !DILexicalBlockFile(scope: !6984, file: !916, discriminator: 1)
!6984 = distinct !DILexicalBlock(scope: !6979, file: !916, line: 633, column: 13)
!6985 = !DILocation(line: 633, column: 29, scope: !6983)
!6986 = !DILocation(line: 633, column: 37, scope: !6983)
!6987 = !DILocation(line: 633, column: 35, scope: !6983)
!6988 = !DILocation(line: 633, column: 27, scope: !6983)
!6989 = !DILocation(line: 633, column: 13, scope: !6983)
!6990 = !DILocation(line: 635, column: 38, scope: !6984)
!6991 = !DILocation(line: 635, column: 41, scope: !6984)
!6992 = !DILocation(line: 635, column: 56, scope: !6984)
!6993 = !DILocation(line: 635, column: 54, scope: !6984)
!6994 = !DILocation(line: 635, column: 21, scope: !6984)
!6995 = !DILocation(line: 635, column: 24, scope: !6984)
!6996 = !DILocation(line: 634, column: 33, scope: !6984)
!6997 = !DILocation(line: 634, column: 37, scope: !6984)
!6998 = !DILocation(line: 634, column: 43, scope: !6984)
!6999 = !DILocation(line: 634, column: 41, scope: !6984)
!7000 = !DILocation(line: 634, column: 51, scope: !6984)
!7001 = !DILocation(line: 634, column: 49, scope: !6984)
!7002 = !DILocation(line: 634, column: 35, scope: !6984)
!7003 = !DILocation(line: 634, column: 17, scope: !6984)
!7004 = !DILocation(line: 634, column: 20, scope: !6984)
!7005 = !DILocation(line: 634, column: 65, scope: !6984)
!7006 = !DILocation(line: 633, column: 52, scope: !7007)
!7007 = !DILexicalBlockFile(scope: !6984, file: !916, discriminator: 2)
!7008 = !DILocation(line: 633, column: 13, scope: !7007)
!7009 = distinct !{!7009, !7010}
!7010 = !DILocation(line: 633, column: 13, scope: !6980)
!7011 = !DILocation(line: 636, column: 20, scope: !7012)
!7012 = distinct !DILexicalBlock(scope: !6980, file: !916, line: 636, column: 13)
!7013 = !DILocation(line: 636, column: 18, scope: !7012)
!7014 = !DILocation(line: 636, column: 25, scope: !7015)
!7015 = !DILexicalBlockFile(scope: !7016, file: !916, discriminator: 1)
!7016 = distinct !DILexicalBlock(scope: !7012, file: !916, line: 636, column: 13)
!7017 = !DILocation(line: 636, column: 29, scope: !7015)
!7018 = !DILocation(line: 636, column: 27, scope: !7015)
!7019 = !DILocation(line: 636, column: 13, scope: !7015)
!7020 = !DILocation(line: 637, column: 90, scope: !7016)
!7021 = !DILocation(line: 637, column: 67, scope: !7016)
!7022 = !DILocation(line: 637, column: 87, scope: !7016)
!7023 = !DILocation(line: 637, column: 70, scope: !7016)
!7024 = !DILocation(line: 637, column: 98, scope: !7016)
!7025 = !DILocation(line: 637, column: 130, scope: !7016)
!7026 = !DILocation(line: 637, column: 107, scope: !7016)
!7027 = !DILocation(line: 637, column: 127, scope: !7016)
!7028 = !DILocation(line: 637, column: 110, scope: !7016)
!7029 = !DILocation(line: 637, column: 138, scope: !7016)
!7030 = !DILocation(line: 637, column: 103, scope: !7016)
!7031 = !DILocation(line: 637, column: 37, scope: !7016)
!7032 = !DILocation(line: 637, column: 43, scope: !7016)
!7033 = !DILocation(line: 637, column: 41, scope: !7016)
!7034 = !DILocation(line: 637, column: 58, scope: !7016)
!7035 = !DILocation(line: 637, column: 56, scope: !7016)
!7036 = !DILocation(line: 637, column: 17, scope: !7016)
!7037 = !DILocation(line: 637, column: 20, scope: !7016)
!7038 = !DILocation(line: 637, column: 61, scope: !7016)
!7039 = !DILocation(line: 636, column: 35, scope: !7040)
!7040 = !DILexicalBlockFile(scope: !7016, file: !916, discriminator: 2)
!7041 = !DILocation(line: 636, column: 13, scope: !7040)
!7042 = distinct !{!7042, !7043}
!7043 = !DILocation(line: 636, column: 13, scope: !6980)
!7044 = !DILocation(line: 638, column: 9, scope: !6980)
!7045 = !DILocation(line: 638, column: 20, scope: !7046)
!7046 = !DILexicalBlockFile(scope: !7047, file: !916, discriminator: 1)
!7047 = distinct !DILexicalBlock(scope: !6975, file: !916, line: 638, column: 20)
!7048 = !DILocation(line: 638, column: 31, scope: !7046)
!7049 = !DILocation(line: 639, column: 20, scope: !7050)
!7050 = distinct !DILexicalBlock(scope: !7051, file: !916, line: 639, column: 13)
!7051 = distinct !DILexicalBlock(scope: !7047, file: !916, line: 638, column: 36)
!7052 = !DILocation(line: 639, column: 18, scope: !7050)
!7053 = !DILocation(line: 639, column: 25, scope: !7054)
!7054 = !DILexicalBlockFile(scope: !7055, file: !916, discriminator: 1)
!7055 = distinct !DILexicalBlock(scope: !7050, file: !916, line: 639, column: 13)
!7056 = !DILocation(line: 639, column: 29, scope: !7054)
!7057 = !DILocation(line: 639, column: 37, scope: !7054)
!7058 = !DILocation(line: 639, column: 35, scope: !7054)
!7059 = !DILocation(line: 639, column: 27, scope: !7054)
!7060 = !DILocation(line: 639, column: 13, scope: !7054)
!7061 = !DILocation(line: 641, column: 38, scope: !7055)
!7062 = !DILocation(line: 641, column: 41, scope: !7055)
!7063 = !DILocation(line: 641, column: 56, scope: !7055)
!7064 = !DILocation(line: 641, column: 54, scope: !7055)
!7065 = !DILocation(line: 641, column: 21, scope: !7055)
!7066 = !DILocation(line: 641, column: 24, scope: !7055)
!7067 = !DILocation(line: 640, column: 33, scope: !7055)
!7068 = !DILocation(line: 640, column: 37, scope: !7055)
!7069 = !DILocation(line: 640, column: 43, scope: !7055)
!7070 = !DILocation(line: 640, column: 41, scope: !7055)
!7071 = !DILocation(line: 640, column: 51, scope: !7055)
!7072 = !DILocation(line: 640, column: 49, scope: !7055)
!7073 = !DILocation(line: 640, column: 35, scope: !7055)
!7074 = !DILocation(line: 640, column: 17, scope: !7055)
!7075 = !DILocation(line: 640, column: 20, scope: !7055)
!7076 = !DILocation(line: 640, column: 65, scope: !7055)
!7077 = !DILocation(line: 639, column: 52, scope: !7078)
!7078 = !DILexicalBlockFile(scope: !7055, file: !916, discriminator: 2)
!7079 = !DILocation(line: 639, column: 13, scope: !7078)
!7080 = distinct !{!7080, !7081}
!7081 = !DILocation(line: 639, column: 13, scope: !7051)
!7082 = !DILocation(line: 642, column: 20, scope: !7083)
!7083 = distinct !DILexicalBlock(scope: !7051, file: !916, line: 642, column: 13)
!7084 = !DILocation(line: 642, column: 18, scope: !7083)
!7085 = !DILocation(line: 642, column: 25, scope: !7086)
!7086 = !DILexicalBlockFile(scope: !7087, file: !916, discriminator: 1)
!7087 = distinct !DILexicalBlock(scope: !7083, file: !916, line: 642, column: 13)
!7088 = !DILocation(line: 642, column: 29, scope: !7086)
!7089 = !DILocation(line: 642, column: 27, scope: !7086)
!7090 = !DILocation(line: 642, column: 13, scope: !7086)
!7091 = !DILocation(line: 643, column: 90, scope: !7087)
!7092 = !DILocation(line: 643, column: 67, scope: !7087)
!7093 = !DILocation(line: 643, column: 87, scope: !7087)
!7094 = !DILocation(line: 643, column: 70, scope: !7087)
!7095 = !DILocation(line: 643, column: 98, scope: !7087)
!7096 = !DILocation(line: 643, column: 130, scope: !7087)
!7097 = !DILocation(line: 643, column: 107, scope: !7087)
!7098 = !DILocation(line: 643, column: 127, scope: !7087)
!7099 = !DILocation(line: 643, column: 110, scope: !7087)
!7100 = !DILocation(line: 643, column: 138, scope: !7087)
!7101 = !DILocation(line: 643, column: 103, scope: !7087)
!7102 = !DILocation(line: 643, column: 37, scope: !7087)
!7103 = !DILocation(line: 643, column: 43, scope: !7087)
!7104 = !DILocation(line: 643, column: 41, scope: !7087)
!7105 = !DILocation(line: 643, column: 58, scope: !7087)
!7106 = !DILocation(line: 643, column: 56, scope: !7087)
!7107 = !DILocation(line: 643, column: 17, scope: !7087)
!7108 = !DILocation(line: 643, column: 20, scope: !7087)
!7109 = !DILocation(line: 643, column: 61, scope: !7087)
!7110 = !DILocation(line: 642, column: 35, scope: !7111)
!7111 = !DILexicalBlockFile(scope: !7087, file: !916, discriminator: 2)
!7112 = !DILocation(line: 642, column: 13, scope: !7111)
!7113 = distinct !{!7113, !7114}
!7114 = !DILocation(line: 642, column: 13, scope: !7051)
!7115 = !DILocation(line: 644, column: 9, scope: !7051)
!7116 = !DILocation(line: 645, column: 5, scope: !6966)
!7117 = !DILocation(line: 630, column: 42, scope: !7118)
!7118 = !DILexicalBlockFile(scope: !6961, file: !916, discriminator: 2)
!7119 = !DILocation(line: 630, column: 5, scope: !7118)
!7120 = distinct !{!7120, !7121}
!7121 = !DILocation(line: 630, column: 5, scope: !6920)
!7122 = !DILocation(line: 647, column: 16, scope: !6925)
!7123 = !DILocation(line: 647, column: 29, scope: !6925)
!7124 = !DILocation(line: 647, column: 14, scope: !6925)
!7125 = !DILocation(line: 647, column: 10, scope: !6925)
!7126 = !DILocation(line: 647, column: 34, scope: !7127)
!7127 = !DILexicalBlockFile(scope: !6924, file: !916, discriminator: 1)
!7128 = !DILocation(line: 647, column: 38, scope: !7127)
!7129 = !DILocation(line: 647, column: 5, scope: !7127)
!7130 = !DILocation(line: 648, column: 9, scope: !6923)
!7131 = !DILocation(line: 648, column: 12, scope: !6923)
!7132 = !DILocation(line: 648, column: 24, scope: !6923)
!7133 = !DILocation(line: 649, column: 83, scope: !6923)
!7134 = !DILocation(line: 649, column: 58, scope: !6923)
!7135 = !DILocation(line: 649, column: 78, scope: !6923)
!7136 = !DILocation(line: 649, column: 61, scope: !6923)
!7137 = !DILocation(line: 650, column: 14, scope: !6923)
!7138 = !DILocation(line: 650, column: 13, scope: !6923)
!7139 = !DILocation(line: 650, column: 21, scope: !6923)
!7140 = !DILocation(line: 650, column: 27, scope: !6923)
!7141 = !DILocation(line: 649, column: 48, scope: !6923)
!7142 = !DILocation(line: 132, column: 9, scope: !4357, inlinedAt: !6922)
!7143 = !DILocation(line: 132, column: 13, scope: !4357, inlinedAt: !6922)
!7144 = !DILocation(line: 132, column: 11, scope: !4357, inlinedAt: !6922)
!7145 = !DILocation(line: 132, column: 9, scope: !4332, inlinedAt: !6922)
!7146 = !DILocation(line: 132, column: 26, scope: !4362, inlinedAt: !6922)
!7147 = !DILocation(line: 132, column: 19, scope: !4362, inlinedAt: !6922)
!7148 = !DILocation(line: 133, column: 14, scope: !4365, inlinedAt: !6922)
!7149 = !DILocation(line: 133, column: 18, scope: !4365, inlinedAt: !6922)
!7150 = !DILocation(line: 133, column: 16, scope: !4365, inlinedAt: !6922)
!7151 = !DILocation(line: 133, column: 14, scope: !4357, inlinedAt: !6922)
!7152 = !DILocation(line: 133, column: 31, scope: !4370, inlinedAt: !6922)
!7153 = !DILocation(line: 133, column: 24, scope: !4370, inlinedAt: !6922)
!7154 = !DILocation(line: 134, column: 17, scope: !4365, inlinedAt: !6922)
!7155 = !DILocation(line: 134, column: 10, scope: !4365, inlinedAt: !6922)
!7156 = !DILocation(line: 135, column: 1, scope: !4332, inlinedAt: !6922)
!7157 = !DILocation(line: 649, column: 29, scope: !6923)
!7158 = !DILocation(line: 649, column: 32, scope: !6923)
!7159 = !DILocation(line: 649, column: 9, scope: !6923)
!7160 = !DILocation(line: 649, column: 12, scope: !6923)
!7161 = !DILocation(line: 649, column: 46, scope: !6923)
!7162 = !DILocation(line: 651, column: 73, scope: !6923)
!7163 = !DILocation(line: 651, column: 48, scope: !6923)
!7164 = !DILocation(line: 651, column: 68, scope: !6923)
!7165 = !DILocation(line: 651, column: 51, scope: !6923)
!7166 = !DILocation(line: 651, column: 81, scope: !6923)
!7167 = !DILocation(line: 651, column: 115, scope: !6923)
!7168 = !DILocation(line: 651, column: 90, scope: !6923)
!7169 = !DILocation(line: 651, column: 110, scope: !6923)
!7170 = !DILocation(line: 651, column: 93, scope: !6923)
!7171 = !DILocation(line: 651, column: 123, scope: !6923)
!7172 = !DILocation(line: 651, column: 86, scope: !6923)
!7173 = !DILocation(line: 651, column: 26, scope: !6923)
!7174 = !DILocation(line: 651, column: 29, scope: !6923)
!7175 = !DILocation(line: 651, column: 9, scope: !6923)
!7176 = !DILocation(line: 651, column: 12, scope: !6923)
!7177 = !DILocation(line: 651, column: 43, scope: !6923)
!7178 = !DILocation(line: 652, column: 5, scope: !6923)
!7179 = !DILocation(line: 647, column: 47, scope: !7180)
!7180 = !DILexicalBlockFile(scope: !6924, file: !916, discriminator: 2)
!7181 = !DILocation(line: 647, column: 5, scope: !7180)
!7182 = distinct !{!7182, !7183}
!7183 = !DILocation(line: 647, column: 5, scope: !6920)
!7184 = !DILocation(line: 654, column: 9, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !6920, file: !916, line: 654, column: 9)
!7186 = !DILocation(line: 654, column: 12, scope: !7185)
!7187 = !DILocation(line: 654, column: 25, scope: !7185)
!7188 = !DILocation(line: 654, column: 9, scope: !6920)
!7189 = !DILocation(line: 655, column: 37, scope: !7190)
!7190 = distinct !DILexicalBlock(scope: !7185, file: !916, line: 654, column: 31)
!7191 = !DILocation(line: 655, column: 45, scope: !7190)
!7192 = !DILocation(line: 655, column: 43, scope: !7190)
!7193 = !DILocation(line: 655, column: 17, scope: !7190)
!7194 = !DILocation(line: 655, column: 20, scope: !7190)
!7195 = !DILocation(line: 655, column: 9, scope: !7190)
!7196 = !DILocation(line: 656, column: 16, scope: !7190)
!7197 = !DILocation(line: 656, column: 19, scope: !7190)
!7198 = !DILocation(line: 657, column: 34, scope: !7190)
!7199 = !DILocation(line: 657, column: 32, scope: !7190)
!7200 = !DILocation(line: 657, column: 42, scope: !7190)
!7201 = !DILocation(line: 657, column: 40, scope: !7190)
!7202 = !DILocation(line: 658, column: 34, scope: !7190)
!7203 = !DILocation(line: 658, column: 42, scope: !7190)
!7204 = !DILocation(line: 658, column: 40, scope: !7190)
!7205 = !DILocation(line: 658, column: 17, scope: !7190)
!7206 = !DILocation(line: 658, column: 20, scope: !7190)
!7207 = !DILocation(line: 658, column: 9, scope: !7190)
!7208 = !DILocation(line: 659, column: 16, scope: !7190)
!7209 = !DILocation(line: 659, column: 19, scope: !7190)
!7210 = !DILocation(line: 660, column: 34, scope: !7190)
!7211 = !DILocation(line: 660, column: 32, scope: !7190)
!7212 = !DILocation(line: 660, column: 42, scope: !7190)
!7213 = !DILocation(line: 660, column: 40, scope: !7190)
!7214 = !DILocation(line: 661, column: 27, scope: !7190)
!7215 = !DILocation(line: 661, column: 42, scope: !7190)
!7216 = !DILocation(line: 661, column: 40, scope: !7190)
!7217 = !DILocation(line: 661, column: 9, scope: !7190)
!7218 = !DILocation(line: 661, column: 12, scope: !7190)
!7219 = !DILocation(line: 661, column: 25, scope: !7190)
!7220 = !DILocation(line: 662, column: 5, scope: !7190)
!7221 = !DILocation(line: 663, column: 1, scope: !6920)
!7222 = distinct !DISubprogram(name: "NEG_USR32", scope: !6374, file: !6374, line: 124, type: !7223, isLocal: true, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!7223 = !DISubroutineType(types: !7224)
!7224 = !{!902, !902, !1116}
!7225 = !DILocalVariable(name: "a", arg: 1, scope: !7222, file: !6374, line: 124, type: !902)
!7226 = !DILocation(line: 124, column: 43, scope: !7222)
!7227 = !DILocalVariable(name: "s", arg: 2, scope: !7222, file: !6374, line: 124, type: !1116)
!7228 = !DILocation(line: 124, column: 53, scope: !7222)
!7229 = !DILocation(line: 125, column: 5, scope: !7222)
!7230 = !DILocation(line: 127, column: 29, scope: !7222)
!7231 = !DILocation(line: 127, column: 28, scope: !7222)
!7232 = !DILocation(line: 127, column: 18, scope: !7222)
!7233 = !{i32 183208, i32 183222}
!7234 = !DILocation(line: 129, column: 12, scope: !7222)
!7235 = !DILocation(line: 129, column: 5, scope: !7222)
!7236 = distinct !DISubprogram(name: "put_bits", scope: !1672, file: !1672, line: 164, type: !7237, isLocal: true, isDefinition: true, scopeLine: 165, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!7237 = !DISubroutineType(types: !7238)
!7238 = !{null, !2612, !904, !903}
!7239 = !DILocation(line: 66, column: 98, scope: !3023, inlinedAt: !7240)
!7240 = distinct !DILocation(line: 197, column: 60, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7242, file: !1672, line: 196, column: 42)
!7242 = distinct !DILexicalBlock(scope: !7243, file: !1672, line: 196, column: 13)
!7243 = distinct !DILexicalBlock(scope: !7244, file: !1672, line: 193, column: 12)
!7244 = distinct !DILexicalBlock(scope: !7236, file: !1672, line: 190, column: 9)
!7245 = !DILocalVariable(name: "s", arg: 1, scope: !7236, file: !1672, line: 164, type: !2612)
!7246 = !DILocation(line: 164, column: 44, scope: !7236)
!7247 = !DILocalVariable(name: "n", arg: 2, scope: !7236, file: !1672, line: 164, type: !904)
!7248 = !DILocation(line: 164, column: 51, scope: !7236)
!7249 = !DILocalVariable(name: "value", arg: 3, scope: !7236, file: !1672, line: 164, type: !903)
!7250 = !DILocation(line: 164, column: 67, scope: !7236)
!7251 = !DILocalVariable(name: "bit_buf", scope: !7236, file: !1672, line: 166, type: !903)
!7252 = !DILocation(line: 166, column: 18, scope: !7236)
!7253 = !DILocalVariable(name: "bit_left", scope: !7236, file: !1672, line: 167, type: !904)
!7254 = !DILocation(line: 167, column: 9, scope: !7236)
!7255 = !DILocation(line: 171, column: 15, scope: !7236)
!7256 = !DILocation(line: 171, column: 18, scope: !7236)
!7257 = !DILocation(line: 171, column: 13, scope: !7236)
!7258 = !DILocation(line: 172, column: 16, scope: !7236)
!7259 = !DILocation(line: 172, column: 19, scope: !7236)
!7260 = !DILocation(line: 172, column: 14, scope: !7236)
!7261 = !DILocation(line: 190, column: 9, scope: !7244)
!7262 = !DILocation(line: 190, column: 13, scope: !7244)
!7263 = !DILocation(line: 190, column: 11, scope: !7244)
!7264 = !DILocation(line: 190, column: 9, scope: !7236)
!7265 = !DILocation(line: 191, column: 20, scope: !7266)
!7266 = distinct !DILexicalBlock(scope: !7244, file: !1672, line: 190, column: 23)
!7267 = !DILocation(line: 191, column: 31, scope: !7266)
!7268 = !DILocation(line: 191, column: 28, scope: !7266)
!7269 = !DILocation(line: 191, column: 36, scope: !7266)
!7270 = !DILocation(line: 191, column: 34, scope: !7266)
!7271 = !DILocation(line: 191, column: 17, scope: !7266)
!7272 = !DILocation(line: 192, column: 21, scope: !7266)
!7273 = !DILocation(line: 192, column: 18, scope: !7266)
!7274 = !DILocation(line: 193, column: 5, scope: !7266)
!7275 = !DILocation(line: 194, column: 21, scope: !7243)
!7276 = !DILocation(line: 194, column: 17, scope: !7243)
!7277 = !DILocation(line: 195, column: 20, scope: !7243)
!7278 = !DILocation(line: 195, column: 30, scope: !7243)
!7279 = !DILocation(line: 195, column: 34, scope: !7243)
!7280 = !DILocation(line: 195, column: 32, scope: !7243)
!7281 = !DILocation(line: 195, column: 26, scope: !7243)
!7282 = !DILocation(line: 195, column: 17, scope: !7243)
!7283 = !DILocation(line: 196, column: 17, scope: !7242)
!7284 = !DILocation(line: 196, column: 20, scope: !7242)
!7285 = !DILocation(line: 196, column: 30, scope: !7242)
!7286 = !DILocation(line: 196, column: 33, scope: !7242)
!7287 = !DILocation(line: 196, column: 28, scope: !7242)
!7288 = !DILocation(line: 196, column: 15, scope: !7242)
!7289 = !DILocation(line: 196, column: 13, scope: !7243)
!7290 = !DILocation(line: 197, column: 71, scope: !7241)
!7291 = !DILocation(line: 197, column: 60, scope: !7241)
!7292 = !DILocation(line: 68, column: 16, scope: !3023, inlinedAt: !7240)
!7293 = !DILocation(line: 68, column: 19, scope: !3023, inlinedAt: !7240)
!7294 = !DILocation(line: 68, column: 24, scope: !3023, inlinedAt: !7240)
!7295 = !DILocation(line: 68, column: 38, scope: !3023, inlinedAt: !7240)
!7296 = !DILocation(line: 68, column: 41, scope: !3023, inlinedAt: !7240)
!7297 = !DILocation(line: 68, column: 46, scope: !3023, inlinedAt: !7240)
!7298 = !DILocation(line: 68, column: 34, scope: !3023, inlinedAt: !7240)
!7299 = !DILocation(line: 68, column: 57, scope: !3023, inlinedAt: !7240)
!7300 = !DILocation(line: 68, column: 69, scope: !3023, inlinedAt: !7240)
!7301 = !DILocation(line: 68, column: 72, scope: !3023, inlinedAt: !7240)
!7302 = !DILocation(line: 68, column: 79, scope: !3023, inlinedAt: !7240)
!7303 = !DILocation(line: 68, column: 84, scope: !3023, inlinedAt: !7240)
!7304 = !DILocation(line: 68, column: 99, scope: !3023, inlinedAt: !7240)
!7305 = !DILocation(line: 68, column: 102, scope: !3023, inlinedAt: !7240)
!7306 = !DILocation(line: 68, column: 109, scope: !3023, inlinedAt: !7240)
!7307 = !DILocation(line: 68, column: 114, scope: !3023, inlinedAt: !7240)
!7308 = !DILocation(line: 68, column: 94, scope: !3023, inlinedAt: !7240)
!7309 = !DILocation(line: 68, column: 63, scope: !3023, inlinedAt: !7240)
!7310 = !DILocation(line: 197, column: 40, scope: !7241)
!7311 = !DILocation(line: 197, column: 43, scope: !7241)
!7312 = !DILocation(line: 197, column: 54, scope: !7241)
!7313 = !DILocation(line: 197, column: 57, scope: !7241)
!7314 = !DILocation(line: 198, column: 13, scope: !7241)
!7315 = !DILocation(line: 198, column: 16, scope: !7241)
!7316 = !DILocation(line: 198, column: 24, scope: !7241)
!7317 = !DILocation(line: 199, column: 9, scope: !7241)
!7318 = !DILocation(line: 200, column: 13, scope: !7319)
!7319 = distinct !DILexicalBlock(scope: !7242, file: !1672, line: 199, column: 16)
!7320 = !DILocation(line: 203, column: 26, scope: !7243)
!7321 = !DILocation(line: 203, column: 24, scope: !7243)
!7322 = !DILocation(line: 203, column: 18, scope: !7243)
!7323 = !DILocation(line: 204, column: 19, scope: !7243)
!7324 = !DILocation(line: 204, column: 17, scope: !7243)
!7325 = !DILocation(line: 208, column: 18, scope: !7236)
!7326 = !DILocation(line: 208, column: 5, scope: !7236)
!7327 = !DILocation(line: 208, column: 8, scope: !7236)
!7328 = !DILocation(line: 208, column: 16, scope: !7236)
!7329 = !DILocation(line: 209, column: 19, scope: !7236)
!7330 = !DILocation(line: 209, column: 5, scope: !7236)
!7331 = !DILocation(line: 209, column: 8, scope: !7236)
!7332 = !DILocation(line: 209, column: 17, scope: !7236)
!7333 = !DILocation(line: 210, column: 1, scope: !7236)
!7334 = distinct !DISubprogram(name: "flush_put_bits", scope: !1672, file: !1672, line: 101, type: !7335, isLocal: true, isDefinition: true, scopeLine: 102, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1814)
!7335 = !DISubroutineType(types: !7336)
!7336 = !{null, !2612}
!7337 = !DILocalVariable(name: "s", arg: 1, scope: !7334, file: !1672, line: 101, type: !2612)
!7338 = !DILocation(line: 101, column: 50, scope: !7334)
!7339 = !DILocation(line: 104, column: 9, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7334, file: !1672, line: 104, column: 9)
!7341 = !DILocation(line: 104, column: 12, scope: !7340)
!7342 = !DILocation(line: 104, column: 21, scope: !7340)
!7343 = !DILocation(line: 104, column: 9, scope: !7334)
!7344 = !DILocation(line: 105, column: 24, scope: !7340)
!7345 = !DILocation(line: 105, column: 27, scope: !7340)
!7346 = !DILocation(line: 105, column: 9, scope: !7340)
!7347 = !DILocation(line: 105, column: 12, scope: !7340)
!7348 = !DILocation(line: 105, column: 20, scope: !7340)
!7349 = !DILocation(line: 107, column: 5, scope: !7334)
!7350 = !DILocation(line: 107, column: 12, scope: !7351)
!7351 = !DILexicalBlockFile(scope: !7334, file: !1672, discriminator: 1)
!7352 = !DILocation(line: 107, column: 15, scope: !7351)
!7353 = !DILocation(line: 107, column: 24, scope: !7351)
!7354 = !DILocation(line: 107, column: 5, scope: !7351)
!7355 = !DILocation(line: 108, column: 9, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7334, file: !1672, line: 107, column: 30)
!7357 = distinct !{!7357, !7355}
!7358 = !DILocation(line: 108, column: 20, scope: !7359)
!7359 = !DILexicalBlockFile(scope: !7360, file: !1672, discriminator: 1)
!7360 = distinct !DILexicalBlock(scope: !7361, file: !1672, line: 108, column: 18)
!7361 = distinct !DILexicalBlock(scope: !7356, file: !1672, line: 108, column: 12)
!7362 = !DILocation(line: 108, column: 23, scope: !7359)
!7363 = !DILocation(line: 108, column: 33, scope: !7359)
!7364 = !DILocation(line: 108, column: 36, scope: !7359)
!7365 = !DILocation(line: 108, column: 31, scope: !7359)
!7366 = !DILocation(line: 108, column: 18, scope: !7359)
!7367 = !DILocation(line: 108, column: 48, scope: !7368)
!7368 = !DILexicalBlockFile(scope: !7369, file: !1672, discriminator: 2)
!7369 = distinct !DILexicalBlock(scope: !7360, file: !1672, line: 108, column: 46)
!7370 = !DILocation(line: 108, column: 105, scope: !7371)
!7371 = !DILexicalBlockFile(scope: !7368, file: !1672, discriminator: 4)
!7372 = !DILocation(line: 108, column: 105, scope: !7368)
!7373 = !DILocation(line: 108, column: 116, scope: !7374)
!7374 = !DILexicalBlockFile(scope: !7361, file: !1672, discriminator: 3)
!7375 = !DILocation(line: 113, column: 25, scope: !7356)
!7376 = !DILocation(line: 113, column: 28, scope: !7356)
!7377 = !DILocation(line: 113, column: 36, scope: !7356)
!7378 = !DILocation(line: 113, column: 10, scope: !7356)
!7379 = !DILocation(line: 113, column: 13, scope: !7356)
!7380 = !DILocation(line: 113, column: 20, scope: !7356)
!7381 = !DILocation(line: 113, column: 23, scope: !7356)
!7382 = !DILocation(line: 114, column: 9, scope: !7356)
!7383 = !DILocation(line: 114, column: 12, scope: !7356)
!7384 = !DILocation(line: 114, column: 20, scope: !7356)
!7385 = !DILocation(line: 116, column: 9, scope: !7356)
!7386 = !DILocation(line: 116, column: 12, scope: !7356)
!7387 = !DILocation(line: 116, column: 21, scope: !7356)
!7388 = !DILocation(line: 107, column: 5, scope: !7389)
!7389 = !DILexicalBlockFile(scope: !7334, file: !1672, discriminator: 2)
!7390 = distinct !{!7390, !7349}
!7391 = !DILocation(line: 118, column: 5, scope: !7334)
!7392 = !DILocation(line: 118, column: 8, scope: !7334)
!7393 = !DILocation(line: 118, column: 17, scope: !7334)
!7394 = !DILocation(line: 119, column: 5, scope: !7334)
!7395 = !DILocation(line: 119, column: 8, scope: !7334)
!7396 = !DILocation(line: 119, column: 16, scope: !7334)
!7397 = !DILocation(line: 120, column: 1, scope: !7334)
