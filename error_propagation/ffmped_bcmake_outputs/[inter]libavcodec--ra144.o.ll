; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--ra144.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--ra144.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecDefault = type opaque
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVCodecInternal = type opaque
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVRational = type { i32, i32 }
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.RA144Context = type { %struct.AVCodecContext*, %struct.AudioDSPContext, %struct.LPCContext, %struct.AudioFrameQueue, i32, i32, [2 x [10 x i32]], [2 x i32*], [2 x i32], [160 x i16], [50 x i16], [148 x i16], [4 x i8], [48 x i16] }
%struct.AudioDSPContext = type { i32 (i16*, i16*, i32)*, void (i32*, i32*, i32, i32, i32)*, void (float*, float*, i32, float, float)* }
%struct.LPCContext = type { i32, i32, i32, double*, double*, void (i32*, i32, double*)*, void (double*, i32, i32, double*)*, [16 x i8], [2 x %struct.LLSModel] }
%struct.LLSModel = type { [36 x [36 x double]], [32 x [32 x double]], [32 x double], i32, void (%struct.LLSModel*, double*)*, double (%struct.LLSModel*, double*, i32)*, [8 x i8] }
%struct.AudioFrameQueue = type { %struct.AVCodecContext*, i32, i32, %struct.AudioFrame*, i32, i32 }
%struct.AudioFrame = type { i64, i32 }

@ff_gain_val_tab = constant [256 x [3 x i16]] [[3 x i16] [i16 541, i16 956, i16 768], [3 x i16] [i16 877, i16 581, i16 568], [3 x i16] [i16 675, i16 1574, i16 635], [3 x i16] [i16 1248, i16 1464, i16 668], [3 x i16] [i16 1246, i16 839, i16 1394], [3 x i16] [i16 2560, i16 1386, i16 991], [3 x i16] [i16 925, i16 687, i16 608], [3 x i16] [i16 2208, i16 797, i16 1144], [3 x i16] [i16 535, i16 832, i16 799], [3 x i16] [i16 762, i16 605, i16 1154], [3 x i16] [i16 832, i16 1122, i16 1003], [3 x i16] [i16 1180, i16 687, i16 1176], [3 x i16] [i16 1292, i16 901, i16 732], [3 x i16] [i16 1656, i16 689, i16 896], [3 x i16] [i16 1750, i16 1248, i16 848], [3 x i16] [i16 2284, i16 942, i16 1022], [3 x i16] [i16 824, i16 1472, i16 643], [3 x i16] [i16 517, i16 765, i16 512], [3 x i16] [i16 562, i16 1816, i16 1522], [3 x i16] [i16 694, i16 1826, i16 2700], [3 x i16] [i16 704, i16 524, i16 672], [3 x i16] [i16 1442, i16 757, i16 2232], [3 x i16] [i16 884, i16 551, i16 1266], [3 x i16] [i16 2232, i16 1007, i16 1692], [3 x i16] [i16 932, i16 746, i16 777], [3 x i16] [i16 1132, i16 822, i16 926], [3 x i16] [i16 1226, i16 771, i16 611], [3 x i16] [i16 2948, i16 1342, i16 1008], [3 x i16] [i16 1302, i16 594, i16 1158], [3 x i16] [i16 1602, i16 636, i16 1128], [3 x i16] [i16 3408, i16 910, i16 1438], [3 x i16] [i16 1996, i16 614, i16 575], [3 x i16] [i16 665, i16 935, i16 628], [3 x i16] [i16 631, i16 1192, i16 829], [3 x i16] [i16 644, i16 926, i16 1052], [3 x i16] [i16 879, i16 988, i16 1226], [3 x i16] [i16 941, i16 2768, i16 2772], [3 x i16] [i16 565, i16 1344, i16 2304], [3 x i16] [i16 547, i16 628, i16 740], [3 x i16] [i16 639, i16 532, i16 1074], [3 x i16] [i16 955, i16 1208, i16 598], [3 x i16] [i16 1124, i16 1160, i16 900], [3 x i16] [i16 1206, i16 899, i16 1242], [3 x i16] [i16 746, i16 533, i16 624], [3 x i16] [i16 1458, i16 1028, i16 735], [3 x i16] [i16 1706, i16 1102, i16 692], [3 x i16] [i16 1898, i16 1018, i16 1004], [3 x i16] [i16 2176, i16 988, i16 735], [3 x i16] [i16 1578, i16 782, i16 1642], [3 x i16] [i16 897, i16 516, i16 754], [3 x i16] [i16 2068, i16 702, i16 1656], [3 x i16] [i16 2344, i16 818, i16 1526], [3 x i16] [i16 907, i16 652, i16 592], [3 x i16] [i16 1056, i16 652, i16 642], [3 x i16] [i16 2124, i16 1416, i16 780], [3 x i16] [i16 2664, i16 1250, i16 727], [3 x i16] [i16 1894, i16 727, i16 1108], [3 x i16] [i16 2196, i16 657, i16 981], [3 x i16] [i16 4840, i16 920, i16 1704], [3 x i16] [i16 4992, i16 1238, i16 983], [3 x i16] [i16 2420, i16 909, i16 1094], [3 x i16] [i16 2760, i16 935, i16 1032], [3 x i16] [i16 2800, i16 612, i16 853], [3 x i16] [i16 3068, i16 832, i16 574], [3 x i16] [i16 523, i16 1796, i16 923], [3 x i16] [i16 722, i16 1916, i16 1382], [3 x i16] [i16 1226, i16 1542, i16 928], [3 x i16] [i16 758, i16 757, i16 584], [3 x i16] [i16 512, i16 1134, i16 577], [3 x i16] [i16 615, i16 1276, i16 698], [3 x i16] [i16 574, i16 2568, i16 2356], [3 x i16] [i16 993, i16 2728, i16 3512], [3 x i16] [i16 539, i16 890, i16 913], [3 x i16] [i16 694, i16 928, i16 1088], [3 x i16] [i16 805, i16 600, i16 1360], [3 x i16] [i16 2160, i16 951, i16 3128], [3 x i16] [i16 816, i16 950, i16 590], [3 x i16] [i16 955, i16 847, i16 811], [3 x i16] [i16 1094, i16 883, i16 556], [3 x i16] [i16 1304, i16 888, i16 604], [3 x i16] [i16 863, i16 1170, i16 855], [3 x i16] [i16 1023, i16 997, i16 1032], [3 x i16] [i16 932, i16 1228, i16 1280], [3 x i16] [i16 627, i16 564, i16 573], [3 x i16] [i16 876, i16 900, i16 1448], [3 x i16] [i16 1030, i16 857, i16 1792], [3 x i16] [i16 1294, i16 953, i16 1758], [3 x i16] [i16 1612, i16 854, i16 1714], [3 x i16] [i16 1090, i16 1166, i16 631], [3 x i16] [i16 1314, i16 1202, i16 751], [3 x i16] [i16 1480, i16 905, i16 795], [3 x i16] [i16 1682, i16 1016, i16 568], [3 x i16] [i16 1494, i16 1178, i16 983], [3 x i16] [i16 878, i16 613, i16 526], [3 x i16] [i16 1728, i16 1446, i16 779], [3 x i16] [i16 2136, i16 1348, i16 774], [3 x i16] [i16 950, i16 649, i16 939], [3 x i16] [i16 1180, i16 703, i16 899], [3 x i16] [i16 1236, i16 527, i16 1158], [3 x i16] [i16 1450, i16 647, i16 972], [3 x i16] [i16 1282, i16 647, i16 707], [3 x i16] [i16 1460, i16 663, i16 644], [3 x i16] [i16 1614, i16 572, i16 578], [3 x i16] [i16 3516, i16 1222, i16 821], [3 x i16] [i16 2668, i16 729, i16 1682], [3 x i16] [i16 3128, i16 585, i16 1502], [3 x i16] [i16 3208, i16 733, i16 976], [3 x i16] [i16 6800, i16 871, i16 1416], [3 x i16] [i16 3480, i16 743, i16 1408], [3 x i16] [i16 3764, i16 899, i16 1170], [3 x i16] [i16 3772, i16 632, i16 875], [3 x i16] [i16 4092, i16 732, i16 638], [3 x i16] [i16 3112, i16 753, i16 2620], [3 x i16] [i16 3372, i16 945, i16 1890], [3 x i16] [i16 3768, i16 969, i16 2288], [3 x i16] [i16 2016, i16 559, i16 854], [3 x i16] [i16 1736, i16 729, i16 787], [3 x i16] [i16 1940, i16 686, i16 547], [3 x i16] [i16 2140, i16 635, i16 674], [3 x i16] [i16 4480, i16 1272, i16 828], [3 x i16] [i16 3976, i16 592, i16 1666], [3 x i16] [i16 4384, i16 621, i16 1388], [3 x i16] [i16 4400, i16 801, i16 955], [3 x i16] [i16 4656, i16 522, i16 646], [3 x i16] [i16 4848, i16 625, i16 1636], [3 x i16] [i16 4984, i16 591, i16 874], [3 x i16] [i16 5352, i16 535, i16 1001], [3 x i16] [i16 11216, i16 938, i16 1184], [3 x i16] [i16 925, i16 3280, i16 1476], [3 x i16] [i16 735, i16 1580, i16 1088], [3 x i16] [i16 1150, i16 1576, i16 674], [3 x i16] [i16 655, i16 783, i16 528], [3 x i16] [i16 527, i16 2052, i16 1354], [3 x i16] [i16 782, i16 1704, i16 1880], [3 x i16] [i16 578, i16 910, i16 1026], [3 x i16] [i16 692, i16 882, i16 1468], [3 x i16] [i16 586, i16 683, i16 715], [3 x i16] [i16 739, i16 609, i16 717], [3 x i16] [i16 778, i16 773, i16 697], [3 x i16] [i16 922, i16 785, i16 813], [3 x i16] [i16 766, i16 651, i16 984], [3 x i16] [i16 978, i16 596, i16 1030], [3 x i16] [i16 1070, i16 757, i16 1080], [3 x i16] [i16 1324, i16 687, i16 1178], [3 x i16] [i16 1108, i16 2144, i16 979], [3 x i16] [i16 723, i16 982, i16 690], [3 x i16] [i16 936, i16 956, i16 527], [3 x i16] [i16 1180, i16 1002, i16 547], [3 x i16] [i16 517, i16 1306, i16 825], [3 x i16] [i16 832, i16 1184, i16 974], [3 x i16] [i16 1024, i16 957, i16 903], [3 x i16] [i16 1262, i16 1090, i16 906], [3 x i16] [i16 1028, i16 720, i16 649], [3 x i16] [i16 1192, i16 679, i16 694], [3 x i16] [i16 2468, i16 1480, i16 979], [3 x i16] [i16 2844, i16 1370, i16 877], [3 x i16] [i16 1310, i16 835, i16 848], [3 x i16] [i16 1508, i16 839, i16 698], [3 x i16] [i16 1742, i16 1030, i16 769], [3 x i16] [i16 1910, i16 852, i16 573], [3 x i16] [i16 1280, i16 859, i16 1174], [3 x i16] [i16 1584, i16 863, i16 1108], [3 x i16] [i16 1686, i16 708, i16 1364], [3 x i16] [i16 1942, i16 768, i16 1104], [3 x i16] [i16 891, i16 536, i16 690], [3 x i16] [i16 1016, i16 560, i16 663], [3 x i16] [i16 2172, i16 870, i16 1348], [3 x i16] [i16 2404, i16 999, i16 1170], [3 x i16] [i16 1890, i16 966, i16 889], [3 x i16] [i16 2116, i16 912, i16 777], [3 x i16] [i16 2296, i16 1020, i16 714], [3 x i16] [i16 4872, i16 1844, i16 932], [3 x i16] [i16 2392, i16 778, i16 929], [3 x i16] [i16 2604, i16 772, i16 744], [3 x i16] [i16 2764, i16 957, i16 722], [3 x i16] [i16 5832, i16 1532, i16 984], [3 x i16] [i16 2188, i16 519, i16 1264], [3 x i16] [i16 2332, i16 532, i16 922], [3 x i16] [i16 5064, i16 995, i16 2412], [3 x i16] [i16 2708, i16 571, i16 874], [3 x i16] [i16 2408, i16 545, i16 666], [3 x i16] [i16 5016, i16 1084, i16 875], [3 x i16] [i16 5376, i16 983, i16 1196], [3 x i16] [i16 5536, i16 979, i16 730], [3 x i16] [i16 5344, i16 634, i16 1744], [3 x i16] [i16 5688, i16 706, i16 1348], [3 x i16] [i16 5912, i16 977, i16 1190], [3 x i16] [i16 6072, i16 905, i16 763], [3 x i16] [i16 6048, i16 582, i16 1526], [3 x i16] [i16 11968, i16 1013, i16 1816], [3 x i16] [i16 12864, i16 937, i16 1900], [3 x i16] [i16 12560, i16 1086, i16 998], [3 x i16] [i16 1998, i16 684, i16 1884], [3 x i16] [i16 2504, i16 633, i16 1992], [3 x i16] [i16 1252, i16 567, i16 835], [3 x i16] [i16 1478, i16 571, i16 973], [3 x i16] [i16 2620, i16 769, i16 1414], [3 x i16] [i16 2808, i16 952, i16 1142], [3 x i16] [i16 2908, i16 712, i16 1028], [3 x i16] [i16 2976, i16 686, i16 741], [3 x i16] [i16 1462, i16 552, i16 714], [3 x i16] [i16 3296, i16 991, i16 1452], [3 x i16] [i16 1590, i16 615, i16 544], [3 x i16] [i16 3480, i16 1150, i16 824], [3 x i16] [i16 3212, i16 832, i16 923], [3 x i16] [i16 3276, i16 839, i16 531], [3 x i16] [i16 3548, i16 786, i16 852], [3 x i16] [i16 3732, i16 764, i16 570], [3 x i16] [i16 5728, i16 906, i16 2616], [3 x i16] [i16 6272, i16 804, i16 2252], [3 x i16] [i16 3096, i16 535, i16 876], [3 x i16] [i16 3228, i16 598, i16 649], [3 x i16] [i16 6536, i16 759, i16 1436], [3 x i16] [i16 6648, i16 993, i16 846], [3 x i16] [i16 6864, i16 567, i16 1210], [3 x i16] [i16 14016, i16 1012, i16 1302], [3 x i16] [i16 3408, i16 548, i16 1098], [3 x i16] [i16 7160, i16 1008, i16 1742], [3 x i16] [i16 7136, i16 1000, i16 1182], [3 x i16] [i16 7480, i16 1032, i16 836], [3 x i16] [i16 7448, i16 612, i16 1552], [3 x i16] [i16 7744, i16 614, i16 816], [3 x i16] [i16 8384, i16 777, i16 1438], [3 x i16] [i16 8784, i16 694, i16 786], [3 x i16] [i16 882, i16 1508, i16 1068], [3 x i16] [i16 597, i16 837, i16 766], [3 x i16] [i16 1270, i16 954, i16 1408], [3 x i16] [i16 803, i16 550, i16 798], [3 x i16] [i16 1398, i16 1308, i16 798], [3 x i16] [i16 1848, i16 1534, i16 738], [3 x i16] [i16 970, i16 675, i16 608], [3 x i16] [i16 1264, i16 706, i16 684], [3 x i16] [i16 1716, i16 767, i16 1126], [3 x i16] [i16 2108, i16 765, i16 1404], [3 x i16] [i16 2236, i16 924, i16 1003], [3 x i16] [i16 2472, i16 1048, i16 611], [3 x i16] [i16 999, i16 942, i16 963], [3 x i16] [i16 1094, i16 857, i16 935], [3 x i16] [i16 2936, i16 926, i16 1138], [3 x i16] [i16 1934, i16 746, i16 551], [3 x i16] [i16 3336, i16 633, i16 1762], [3 x i16] [i16 3764, i16 701, i16 1454], [3 x i16] [i16 1890, i16 564, i16 636], [3 x i16] [i16 4096, i16 1126, i16 793], [3 x i16] [i16 3936, i16 556, i16 1140], [3 x i16] [i16 3936, i16 540, i16 740], [3 x i16] [i16 4216, i16 764, i16 874], [3 x i16] [i16 8480, i16 1328, i16 1014], [3 x i16] [i16 2184, i16 515, i16 1042], [3 x i16] [i16 4432, i16 934, i16 1344], [3 x i16] [i16 4784, i16 945, i16 1112], [3 x i16] [i16 5016, i16 1062, i16 733], [3 x i16] [i16 9216, i16 1020, i16 2028], [3 x i16] [i16 9968, i16 924, i16 1188], [3 x i16] [i16 5424, i16 909, i16 1206], [3 x i16] [i16 6512, i16 744, i16 1086]], align 16
@ff_gain_exp_tab = constant [256 x i8] c"\0F\0F\0F\0F\0F\10\0E\0F\0E\0E\0E\0E\0E\0E\0E\0E\0E\0D\0E\0E\0D\0E\0D\0E\0D\0D\0D\0E\0D\0D\0E\0D\0D\0D\0D\0D\0E\0D\0C\0C\0D\0D\0D\0C\0D\0D\0D\0D\0D\0C\0D\0D\0C\0C\0D\0D\0D\0D\0E\0E\0D\0D\0D\0D\0D\0D\0D\0C\0C\0C\0D\0D\0C\0C\0C\0D\0C\0C\0C\0C\0C\0C\0C\0B\0C\0C\0C\0C\0C\0C\0C\0C\0C\0B\0C\0C\0C\0C\0C\0C\0C\0C\0C\0D\0D\0D\0D\0E\0D\0D\0D\0D\0D\0D\0D\0C\0C\0C\0C\0D\0D\0D\0D\0D\0D\0D\0D\0E\0D\0C\0C\0B\0C\0C\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0C\0B\0B\0B\0B\0B\0B\0B\0B\0B\0C\0C\0B\0B\0B\0B\0C\0C\0C\0C\0B\0B\0C\0C\0C\0C\0C\0D\0C\0C\0C\0D\0C\0C\0D\0C\0C\0D\0D\0D\0D\0D\0D\0D\0D\0E\0E\0E\0C\0C\0B\0B\0C\0C\0C\0C\0B\0C\0B\0C\0C\0C\0C\0C\0D\0D\0C\0C\0D\0D\0D\0E\0C\0D\0D\0D\0D\0D\0D\0D\0B\0A\0B\0A\0B\0B\0A\0A\0B\0B\0B\0B\0A\09\0B\0A\0C\0C\0B\0C\0C\0C\0C\0D\0B\0C\0C\0C\0D\0D\0C\0C", align 16
@ff_cb1_vects = constant [128 x [40 x i8]] [[40 x i8] c"&\FC\0F\FC\0E\F3\0C\F5\FE\FA\FA\F5\D3\F0\F5\F3\F9\06\F4\04\EC\03\F0\0C\FF\0C.\18\00!\FD\09\F4\F4\F8\F9\11\FA\00\FE", [40 x i8] c"<\F0\03\EA\0A\E0\00\E4\EF\EE\FD\E7\DB\E9\F6\03\02\03\00\03\F2\00\F2\FF\00\02 \09\FF\19\07\0D\FB\0D\08\01\02\08\F6\06", [40 x i8] c"\1B\F4\1C\FE\06\F9\0F\09\F5\01\F3\F5\D8\04\E3\F2\ED\FB\E9\F8\E2\F3\EF\00\F2\0C\22\14\FE\19\02\F0\FC\F4\0F\10\1D\07\18\0A", [40 x i8] c"1\E8\10\EC\02\E6\02\F9\E7\F6\F5\E7\E0\FD\E5\02\F8\F8\F5\F7\E8\EF\F0\F2\F3\02\14\05\FC\11\0E\F4\03\0D!\19\0E\17\0F\13", [40 x i8] c".\FA\15\08\FE\F0\FB\F8\F5\04\08\0F\E8\04\FE\E6\FD\F0\F0\F2\F7\FE\FF\04\13\07$\11\09\0D\00\1F\FB\F4\07\F8\0B\F1\F3\FC", [40 x i8] c"D\EE\09\F7\FA\DD\EE\E7\E6\F9\0A\01\F0\FD\FF\F7\06\ED\FC\F1\FC\FA\00\F8\14\FE\17\02\07\05\0C#\01\0D\18\00\FD\00\EA\04", [40 x i8] c"#\F2\22\0A\F6\F6\FF\0C\EC\0C\00\0F\EE\18\EC\E5\F2\E4\E5\E5\EC\ED\FE\F8\05\07\19\0D\05\05\06\05\02\F4\1F\0F\17\FF\0C\08", [40 x i8] c"9\E6\16\F9\F2\E4\F2\FD\DD\00\03\01\F5\10\EE\F6\FC\E1\F1\E4\F2\E9\FF\EB\07\FE\0B\FF\03\FF\12\09\0A\0D1\18\08\0E\02\10", [40 x i8] c"\19\0F\16\0B\12\04\0F\EA\08\FE\EF\F7\D0\EC\E2\EF\F0\0B\FF\10\02\0A\FB\1A\FE\FC\16\00\02\0A\FA\0D\F2\0A\E9\00\0A\FE\01\00", [40 x i8] c"/\03\0B\FA\0F\F3\02\DA\FA\F3\F1\EA\D8\E4\E4\00\FB\08\0A\0F\07\07\FC\0D\FF\F2\09\F2\00\02\04\12\F9$\FA\08\FD\0D\F9\08", [40 x i8] c"\0E\07$\0D\0A\0A\12\00\00\05\E7\F8\D5\00\D0\EE\E5\00\F4\03\F9\FA\F9\0D\F1\FB\0B\FD\00\02\00\F4\FA\0A\00\17\16\0B\1A\0C", [40 x i8] c"$\FB\18\FC\07\F9\06\EF\F2\FB\EA\EA\DD\F8\D2\FF\EF\FD\00\02\FE\F6\FB\00\F2\F1\FE\EE\FE\FC\0B\F9\01$\12 \07\1B\11\14", [40 x i8] c"!\0D\1D\18\01\01\FE\EE\00\09\FD\11\E5\00\EB\E2\F4\F5\FB\FE\0C\04\09\13\12\F7\0D\FA\0B\F8\FE#\F8\0A\F9\FF\04\F5\F6\FE", [40 x i8] c"7\01\11\06\FF\F0\F1\DD\F1\FE\00\04\ED\F8\EC\F3\FF\F2\07\FD\12\00\0A\05\13\ED\00\EB\08\F0\09'\00$\0A\07\F7\04\EC\05", [40 x i8] c"\16\05*\1A\FA\08\01\02\F7\11\F6\12\EB\13\D9\E1\E9\E9\F0\F1\02\F4\07\06\05\F7\01\F6\07\F0\04\09\00\0A\11\16\10\02\0E\09", [40 x i8] c",\FA\1E\08\F7\F6\F5\F2\E9\05\F8\04\F2\0C\DB\F2\F4\E6\FC\F0\08\F0\09\F9\06\ED\F4\E7\05\E8\0F\0D\08$\22\1F\01\12\04\12", [40 x i8] c"\FD\FB\F7\F9\0F\FF\05\0D\02\0C\05\02\EB\E9\FE\F0\00\05\FA\0D\E9\03\E0\0A\F1\08,\1C\09%\FE\0D\F7\F1\F4\E5\F9\F4\00\F5", [40 x i8] c"\12\EF\EB\E7\0B\ED\FA\FD\F5\00\07\F5\F3\E1\FF\00\09\01\05\0C\EE\00\E1\FE\F3\FF\1E\0E\07\1D\09\12\FF\0A\04\EE\EA\03\F6\FE", [40 x i8] c"\F3\F3\03\FB\07\04\09\22\FB\14\FE\03\F0\FD\EC\EF\F5\F9\EF\00\DE\F3\DF\FE\E4\08 \18\05\1D\03\F4\00\F1\0B\FD\03\02\18\01", [40 x i8] c"\08\E7\F8\E9\03\F3\FD\11\EC\08\00\F6\F8\F5\EE\00\FF\F6\FB\00\E4\EF\E0\F1\E6\FF\13\09\03\15\0F\F9\06\09\1D\05\F6\11\0F\09", [40 x i8] c"\04\FA\FD\05\FF\FC\F5\10\FA\17\13\1D\00\FD\06\E2\03\EF\F6\FB\F3\FE\EF\03\05\03#\15\11\11\02#\FE\F1\03\E4\F3\EB\F3\F3", [40 x i8] c"\1A\ED\F1\F4\FB\EA\E8\00\EB\0C\15\0F\08\F5\07\F4\0E\EC\02\FA\F9\FA\F0\F7\06\FB\15\07\0F\0A\0D'\05\0A\14\ED\E4\FB\EA\FB", [40 x i8] c"\FB\F1\09\07\F7\02\F8%\F2\1F\0B\1D\05\10\F5\E2\F9\E3\EB\EE\E9\ED\EE\F7\F9\03\17\11\0E\09\08\09\06\F1\1B\FC\FE\FA\0C\FF", [40 x i8] c"\10\E5\FE\F6\F3\F0\EC\14\E3\14\0E\10\0D\08\F7\F3\02\DF\F7\ED\EF\E9\EF\EA\FA\FA\09\02\0C\02\14\0D\0D\0A-\04\F0\08\02\07", [40 x i8] c"\F0\0E\FE\08\14\11\09\02\0E\10\FA\05\E8\E4\EB\EC\F8\09\04\19\FF\0B\EA\18\F1\F8\15\05\0B\0E\FB\12\F5\07\E5\EC\F2\F9\01\F7", [40 x i8] c"\06\02\F2\F7\10\FF\FD\F2\00\05\FD\F8\F0\DC\ED\FD\01\06\11\18\04\07\EB\0B\F2\EE\07\F7\09\07\06\16\FD!\F6\F5\E4\07\F9\00", [40 x i8] c"\E6\06\0B\0A\0C\17\0C\17\05\18\F3\05\ED\F8\DA\EB\EC\FE\FA\0C\F5\FB\E9\0B\E3\F7\09\00\07\06\01\F9\FE\07\FD\03\FE\06\1B\03", [40 x i8] c"\FC\FA\00\F9\08\04\00\06\F7\0D\F5\F9\F5\F1\DB\FC\F7\FB\05\0B\FB\F7\EA\FF\E5\EE\FC\F2\05\00\0C\FD\04 \0E\0C\EF\16\11\0B", [40 x i8] c"\F8\0C\03\15\03\0E\F8\05\04\1C\07 \FE\F8\F4\DE\FC\F4\01\06\09\04\F9\11\04\F3\0B\FF\13\FC\00'\FC\07\F5\EB\EC\F0\F6\F5", [40 x i8] c"\0D\00\F8\03\00\FC\EB\F5\F7\10\0A\12\05\F0\F6\F0\05\F1\0D\05\0F\01\FA\04\06\E9\FE\F0\11\F4\0A,\03!\06\F4\DE\FF\EC\FD", [40 x i8] c"\EE\04\11\17\FC\14\FC\1A\FD$\00 \02\0C\E3\DE\F0\E8\F6\FA\00\F4\F8\04\F8\F3\00\FA\10\F4\05\0D\03\07\0D\03\F8\FE\0E\00", [40 x i8] c"\03\F9\05\05\F8\02\EF\09\EE\18\02\13\0A\04\E4\EF\FB\E4\02\F9\04\F1\F9\F8\FA\E9\F3\EB\0E\EC\11\12\0B!\1E\0B\E9\0D\05\09", [40 x i8] c"<\0A\07\FF\09\F8\06\F3\02\F1\FF\F6\F3\F5\0F\00\06\09\FF\00\F3\01\F5\FD\F3\15\0D\1A\F9\1F\F6\F9\F0\DF\E1\F6\16\F8\01\FE", [40 x i8] c"R\FF\FC\ED\06\E5\FA\E3\F4\E6\01\E8\FB\EE\11\11\11\06\0A\00\F9\FE\F7\F0\F4\0B\00\0B\F7\17\00\FD\F8\F8\F3\FF\08\07\F9\06", [40 x i8] c"1\02\15\00\01\FE\09\08\FA\FA\F8\F6\F8\09\FE\00\FC\FE\F3\F4\E9\F1\F4\F0\E6\15\02\15\F5\17\FC\DF\F9\DF\FA\0D\22\05\1B\0A", [40 x i8] c"G\F6\09\EF\FF\EC\FD\F8\EB\EE\FA\E8\00\01\00\10\06\FB\00\F3\EF\ED\F5\E3\E7\0B\F5\06\F3\0F\07\E3\00\F8\0B\16\14\15\11\12", [40 x i8] c"C\08\0E\0B\F9\F5\F5\F7\F9\FD\0D\10\08\09\18\F4\0A\F3\FB\EF\FE\FC\03\F6\06\11\04\13\00\0B\FA\0D\F7\DF\F2\F6\10\EF\F6\FC", [40 x i8] c"Z\FD\02\FA\F6\E3\E8\E6\EB\F1\0F\02\10\01\19\04\15\F0\06\EE\03\F8\05\E8\08\07\F7\04\FF\03\05\12\FF\F9\02\FF\02\FF\ED\03", [40 x i8] c"9\00\1B\0D\F2\FB\F9\0B\F1\04\05\10\0D\1D\06\F3\00\E7\F0\E1\F4\EA\02\E9\FA\10\F9\0E\FE\03\00\F4\00\DF\09\0D\1C\FD\0E\07", [40 x i8] c"O\F5\0F\FC\EE\E9\EC\FB\E2\F9\07\02\15\15\08\03\0A\E4\FC\E1\FA\E7\03\DB\FC\07\EC\00\FC\FC\0B\F9\06\F8\1B\16\0E\0C\05\10", [40 x i8] c"/\1E\0F\0E\0E\09\09\E9\0D\F6\F4\F9\F0\F1\FD\FD\FF\0E\09\0C\09\08\00\0A\F2\04\F7\02\FB\08\F3\FD\EE\F6\D3\FD\10\FC\04\00", [40 x i8] c"E\11\03\FD\0A\F8\FD\D8\FF\EB\F6\EB\F8\E9\FF\0D\08\0B\15\0B\0F\04\00\FE\F3\FB\E9\F4\F9\00\FF\00\F6\0E\E4\05\01\0B\FB\07", [40 x i8] c"$\15\1C\10\06\10\0C\FE\04\FE\EC\F9\F5\04\EC\FC\F4\02\FF\00\00\F8\FE\FE\E5\04\EB\FE\F7\00\FA\E3\F7\F6\EB\15\1C\0A\1D\0B", [40 x i8] c":\09\10\FF\02\FE\00\ED\F6\F3\EF\EB\FD\FD\ED\0C\FE\00\0A\FF\05\F4\00\F1\E6\FB\DE\F0\F5\F9\04\E7\FE\0E\FD\1D\0D\19\14\14", [40 x i8] c"7\1C\15\1B\FE\07\F8\EC\04\01\01\12\05\04\05\F0\02\F8\05\FB\13\02\0E\03\06\00\EE\FC\02\F5\F8\12\F5\F6\E3\FD\0A\F3\F8\FD", [40 x i8] c"M\10\09\09\FA\F5\EB\DB\F6\F6\04\05\0D\FD\07\00\0D\F5\11\FA\19\FF\0F\F7\07\F7\E0\ED\00\EE\02\16\FD\0F\F4\05\FC\02\EF\05", [40 x i8] c",\14\22\1D\F6\0D\FC\00\FC\09\FB\13\0A\18\F5\EF\F8\EC\FB\ED\09\F2\0C\F7\FA\00\E2\F7\00\ED\FE\F9\FE\F6\FB\14\15\01\11\09", [40 x i8] c"B\08\17\0B\F2\FB\EF\F0\ED\FE\FD\05\12\11\F6\00\01\E9\06\EC\0F\EE\0E\EA\FB\F6\D4\E9\FE\E6\09\FD\04\0E\0C\1D\07\10\07\12", [40 x i8] c"\12\09\EF\FC\0B\03\00\0B\07\04\0A\03\0A\EE\18\FD\0E\07\04\0A\F0\01\E5\FC\E5\11\0C\1E\00#\F7\FD\F4\DC\DD\E2\FE\F3\02\F5", [40 x i8] c"(\FE\E3\EA\07\F2\F4\FB\F9\F9\0C\F7\12\E6\1A\0E\18\04\10\09\F6\FE\E6\EE\E6\07\FF\0F\FF\1B\02\00\FC\F5\EF\EB\F0\01\F9\FD", [40 x i8] c"\08\01\FD\FE\03\0A\03 \FF\0C\02\04\0F\01\07\FD\02\FC\FA\FD\E6\F1\E3\EF\D8\11\00\1A\FE\1B\FE\E3\FC\DC\F6\FA\09\00\1B\00", [40 x i8] c"\1E\F5\F1\EC\00\F8\F7\0F\F1\00\05\F7\17\FA\08\0D\0D\F9\05\FD\EC\ED\E5\E1\D9\07\F3\0B\FC\13\08\E7\03\F5\07\02\FC\10\12\09", [40 x i8] c"\1A\07\F5\08\FB\01\EF\0E\FF\0F\18\1E \01!\F0\12\F2\00\F8\FA\FC\F4\F4\FA\0D\02\17\08\0F\FC\11\FB\DC\EE\E2\F8\EA\F6\F2", [40 x i8] c"0\FC\E9\F7\F7\EF\E2\FE\F0\03\1A\10(\FA#\01\1C\EF\0C\F7\00\F8\F5\E7\FB\03\F6\08\06\07\06\16\01\F5\FF\EB\EA\F9\ED\FB", [40 x i8] c"\0F\00\02\0A\F3\07\F2#\F6\17\10\1F%\15\10\EF\06\E6\F6\EB\F0\EB\F3\E7\ED\0D\F8\13\05\07\01\F8\02\DC\05\FA\03\F8\0F\FF", [40 x i8] c"%\F4\F7\F9\EF\F5\E6\12\E7\0C\13\11-\0E\11\00\11\E2\01\EA\F6\E7\F4\DA\EE\03\EA\04\03\00\0D\FD\0A\F5\17\02\F6\07\05\07", [40 x i8] c"\05\1D\F7\0B\0F\16\03\00\12\08\FF\06\07\E9\06\FA\05\0C\0F\15\05\08\EF\09\E4\00\F5\06\02\0C\F5\00\F2\F3\CF\EA\F8\F7\04\F7", [40 x i8] c"\1B\10\EB\FA\0C\03\F7\F0\03\FE\01\F9\0F\E1\07\0A\10\09\1B\15\0B\05\F0\FD\E6\F7\E8\F9\00\04\00\04\FA\0B\E0\F2\E9\06\FB\FF", [40 x i8] c"\FC\14\03\0D\08\1C\06\15\0A\10\F8\07\0C\FD\F5\F9\FB\00\04\08\FC\F8\EE\FD\D7\00\EA\02\00\04\FB\E7\FA\F2\E7\01\02\04\1D\02", [40 x i8] c"\11\08\F8\FC\04\0A\FA\05\FC\05\FA\FA\14\F6\F7\09\04\FE\10\07\01\F4\EF\F0\D9\F7\DC\F4\FE\FD\06\EB\01\0B\F9\0A\F5\14\14\0B", [40 x i8] c"\0D\1B\FD\18\FF\13\F2\03\09\14\0C!\1D\FD\0F\EC\09\F7\0B\03\10\02\FE\02\F9\FD\EC\00\0A\F9\F9\16\F9\F3\DF\E9\F2\EE\F9\F4", [40 x i8] c"#\0F\F1\06\FC\01\E5\F4\FB\08\0F\13%\F5\10\FE\14\F4\17\02\16\FF\FF\F5\FB\F3\DE\F2\08\F2\04\1A\00\0B\F0\F2\E3\FE\EF\FD", [40 x i8] c"\03\13\09\1A\F8\1A\F6\18\00\1C\05!\22\11\FE\EC\FF\EA\00\F6\06\F2\FD\F6\EC\FC\E0\FC\07\F1\00\FD\00\F3\F7\00\FD\FC\11\00", [40 x i8] c"\19\07\FE\08\F4\07\E9\08\F3\10\07\14*\09\00\FD\09\E7\0C\F6\0C\EE\FE\E8\ED\F3\D2\ED\05\EA\0A\00\08\0B\08\09\EF\0B\07\08", [40 x i8] c"\E7\F9\02\F8\0C\F9\17\F8\0D\F0\F9\EC\D6\F7\00\03\F7\19\F4\0A\F4\12\02\18\13\0D.\13\FB\16\F6\00\F8\F5\F8\F7\11\F5\F9\F8", [40 x i8] c"\FD\ED\F7\E6\08\E6\0A\E8\00\E4\FB\DF\DE\EF\02\14\01\16\00\0A\FA\0E\03\0A\14\04 \04\F9\0F\00\03\00\0D\09\00\03\04\EF\00", [40 x i8] c"\DD\F1\0F\FA\04\FF\1B\0C\05\F8\F1\ED\DB\0B\F0\02\EC\0C\E9\FE\EA\01\01\0B\05\0D\22\0E\F8\0E\FC\E6\00\F5\10\0E\1D\02\11\03", [40 x i8] c"\F3\E5\03\E8\01\ED\0E\FD\F7\EC\F4\DF\E3\03\F1\14\F7\09\F5\FD\F0\FE\02\FE\07\03\14\00\F6\07\07\EA\07\0D!\17\0E\12\07\0C", [40 x i8] c"\EF\F8\08\04\FC\F6\06\FB\04\FB\06\06\EC\0A\09\F7\FC\02\F0\F9\FF\0C\11\10'\09$\0C\02\03\FA\15\FF\F5\07\F6\0B\EC\EC\F5", [40 x i8] c"\04\EC\FD\F3\F8\E4\FA\EB\F6\F0\08\F9\F4\03\0B\07\05\00\FC\F8\04\08\12\03)\00\16\FE\00\FC\05\19\06\0E\19\FF\FE\FC\E3\FE", [40 x i8] c"\E5\F0\15\06\F4\FD\09\10\FD\02\FF\07\F1\1F\F9\F6\F0\F7\E5\EB\F5\FB\10\03\1A\09\18\07\00\FC\00\FC\06\F5 \0E\17\FA\05\01", [40 x i8] c"\FB\E3\09\F5\F1\EA\FD\00\EE\F8\01\FA\F9\17\FA\06\FB\F4\F1\EB\FB\F8\11\F7\1C\00\0B\FA\FE\F4\0B\00\0E\0D1\16\08\09\FC\09", [40 x i8] c"\DB\0C\09\07\11\0B\1A\EE\19\F4\ED\EF\D3\F2\EF\00\EF\1E\FF\16\0A\19\0C&\12\FD\16\FC\FD\00\F3\03\F6\0B\E9\FE\0A\F9\FB\F9", [40 x i8] c"\F1\00\FE\F6\0D\F9\0E\DD\0A\E9\F0\E1\DB\EB\F0\11\FA\1A\0A\15\10\15\0D\19\13\F3\08\ED\FB\F9\FF\08\FE$\FB\06\FD\08\F1\01", [40 x i8] c"\D0\04\17\09\09\11\1E\02\10\FD\E6\F0\D8\06\DD\FF\E4\11\F4\09\00\08\0B\19\05\FD\0A\F8\FA\F9\FA\EA\FF\0B\01\15\16\07\13\05", [40 x i8] c"\E6\F9\0B\F8\05\FF\11\F2\01\F1\E8\E2\E0\FF\DF\10\EE\0E\00\08\06\04\0C\0C\06\F3\FE\E9\F8\F1\04\EF\05$\12\1E\08\16\0A\0E", [40 x i8] c"\E2\0B\0F\14\00\08\09\F1\0F\00\FB\09\E9\06\F8\F3\F3\07\FB\03\14\13\1B\1F'\F9\0D\F5\04\ED\F8\19\FD\0B\F9\FE\04\F0\EE\F7", [40 x i8] c"\F8\FF\03\02\FD\F6\FD\E0\01\F4\FE\FC\F1\FF\F9\03\FE\04\06\03\1A\0F\1D\11(\EF\00\E6\02\E5\02\1D\04$\0A\06\F7\00\E5\00", [40 x i8] c"\D8\02\1D\16\F9\0E\0C\05\07\07\F4\09\EE\1A\E6\F2\E8\FC\F0\F7\0A\02\1A\12\1A\F9\01\F1\01\E5\FE\00\04\0B\11\15\10\FF\07\03", [40 x i8] c"\EE\F7\11\04\F5\FD\00\F5\F9\FC\F6\FD\F6\12\E8\03\F2\F9\FC\F6\10\FF\1B\04\1B\EF\F4\E2\00\DD\09\03\0C$#\1E\02\0D\FE\0B", [40 x i8] c"\BE\F8\E9\F5\0E\05\11\10\13\02\03\FB\EE\EF\0A\00\FF\17\FA\14\F1\12\F2\16\05\0A,\17\02\1A\F7\03\FC\F2\F4\E3\F9\F0\F9\EE", [40 x i8] c"\D4\EC\DE\E3\0A\F3\04\00\04\F7\05\ED\F6\E8\0B\11\08\14\05\13\F7\0E\F4\09\06\00\1E\09\00\13\02\07\02\0A\05\EC\EB\FF\EF\F7", [40 x i8] c"\B3\F0\F7\F7\06\0B\15%\0A\0A\FC\FB\F3\03\F9\00\F3\0B\EF\06\E7\01\F1\09\F9\09 \13\00\12\FE\EA\03\F1\0C\FB\04\FE\11\FB", [40 x i8] c"\C9\E4\EB\E5\02\F9\08\14\FC\FF\FF\EE\FB\FC\FB\10\FE\08\FB\05\ED\FE\F2\FD\FA\00\12\04\FE\0B\08\EE\0B\0A\1D\03\F6\0D\08\03", [40 x i8] c"\C6\F7\F0\01\FE\02\00\13\0A\0D\11\15\03\03\13\F4\02\00\F6\01\FB\0C\00\0F\1A\05\22\10\0B\07\FC\19\02\F2\03\E3\F3\E7\EC\EC", [40 x i8] c"\DC\EB\E4\F0\FA\F0\F4\02\FC\02\14\07\0B\FC\14\04\0C\FE\01\00\00\08\02\02\1B\FC\15\02\09\00\06\1D\09\0A\15\EB\E4\F6\E3\F5", [40 x i8] c"\BB\EF\FD\03\F6\08\03(\01\15\0A\15\08\17\01\F3\F8\F5\EB\F5\F1\FC\00\02\0D\05\17\0C\07\00\01\00\0A\F2\1C\FB\FF\F5\05\F9", [40 x i8] c"\D1\E2\F1\F2\F2\F7\F7\17\F3\0A\0C\07\10\0F\03\03\01\F2\F7\F4\F7\F8\00\F6\0E\FC\09\FE\05\F8\0D\03\12\0A-\03\F0\04\FC\00", [40 x i8] c"\B1\0B\F1\04\12\17\14\05\1E\07\F9\FE\EB\EB\F8\FD\F6\1C\04\1F\06\19\FD%\04\F9\14\00\04\04\F5\07\FA\08\E5\EA\F2\F4\FB\F0", [40 x i8] c"\C7\00\E5\F3\0E\05\07\F5\0F\FC\FB\F0\F3\E3\FA\0D\00\19\10\1F\0C\16\FE\17\06\F0\07\F2\02\FD\00\0C\00!\F7\F3\E4\03\F2\F9", [40 x i8] c"\A6\03\FE\06\0A\1D\18\1A\15\0F\F1\FE\F0\FF\E7\FC\EB\10\FA\12\FD\08\FB\18\F8\F9\09\FC\01\FD\FB\EE\01\07\FE\01\FE\01\13\FD", [40 x i8] c"\BD\F8\F2\F5\07\0B\0B\09\07\03\F3\F0\F8\F7\E8\0C\F6\0D\05\11\02\04\FD\0A\FA\EF\FC\ED\00\F5\06\F3\09!\0E\0A\F0\11\0A\04", [40 x i8] c"\B9\0A\F7\11\01\14\03\08\15\12\06\18\00\FF\00\F0\FA\05\00\0D\11\13\0B\1D\19\F5\0B\FA\0D\F1\F9\1D\00\08\F5\EA\EC\EB\EF\EE", [40 x i8] c"\CF\FE\EB\00\FF\02\F7\F8\06\06\08\0A\08\F7\02\00\04\02\0D\0C\17\0F\0C\10\1A\EB\FE\EB\0B\E9\04!\07!\06\F3\DE\FB\E5\F6", [40 x i8] c"\AE\01\04\13\FA\1B\06\1D\0C\1A\FF\18\05\12\EF\EF\EF\FA\F6\00\07\02\09\10\0C\F5\00\F5\09\E9\00\03\08\08\0D\01\F8\F9\07\FA", [40 x i8] c"\C4\F6\F9\01\F7\08\FA\0D\FE\0F\01\0A\0D\0B\F1\00\FA\F7\01\00\0D\FF\0B\03\0D\EB\F3\E6\07\E1\0A\07\10!\1F\0A\EA\08\FF\02", [40 x i8] c"\FD\07\FB\FB\08\FE\11\F7\12\E8\FE\ED\F6\FC\1C\11\05\1C\FE\07\FC\0F\07\08\06\17\0D\15\F2\14\EF\EE\F5\DF\E2\F5\17\F3\FB\F7", [40 x i8] c"\12\FC\EF\E9\04\EC\04\E6\03\DC\00\E0\FE\F4\1D\22\10\18\0A\06\00\0C\08\FC\08\0D\00\06\F0\0C\FB\F3\FD\F9\F3\FD\08\02\F2\00", [40 x i8] c"\F3\00\08\FD\00\04\15\0B\09\F0\F6\EE\FB\10\0A\10\FB\0F\F3\FB\F1\FF\06\FC\FA\17\02\10\EF\0C\F6\D4\FD\DF\FA\0C\22\01\14\03", [40 x i8] c"\08\F4\FD\EB\FD\F2\08\FB\FC\E4\F9\E0\02\08\0C\22\04\0C\FF\FA\F7\FC\07\EF\FC\0D\F5\01\ED\04\00\D9\04\F9\0B\15\14\10\0A\0B", [40 x i8] c"\04\06\00\07\F8\FC\00\FA\09\F3\0B\07\0B\0F%\04\09\05\FB\F5\05\09\16\01\1B\12\04\0E\FB\00\F4\03\FC\E0\F2\F4\11\EA\EF\F5", [40 x i8] c"\1A\FA\F5\F6\F4\E9\F4\E9\FB\E8\0D\FB\13\08&\15\14\02\06\F4\0B\05\17\F5\1D\09\F7\00\F9\FA\FF\07\02\F9\03\FD\02\FA\E5\FD", [40 x i8] c"\FA\FE\0E\09\F0\01\03\0E\00\FB\03\08\10$\13\03\FF\FA\EF\E8\FC\F9\15\F5\0E\12\F9\09\F7\F9\FA\EA\03\DF\0A\0B\1C\F9\07\00", [40 x i8] c"\10\F2\02\F8\EC\EF\F7\FE\F2\F0\06\FB\18\1C\15\14\08\F7\FC\E7\01\F5\16\E8\0F\08\EB\FB\F5\F2\05\EE\0B\F9\1B\14\0E\07\FF\09", [40 x i8] c"\F0\1B\02\0A\0D\10\14\EC\1D\EC\F2\F0\F3\F8\09\0D\FE!\09\13\11\17\11\16\06\06\F7\FE\F4\FE\EC\F3\F3\F6\D3\FC\10\F8\FE\F9", [40 x i8] c"\05\0F\F7\F9\09\FE\08\DB\0E\E1\F5\E3\FB\F0\0B\1E\07\1D\15\12\17\13\12\09\07\FD\E9\EF\F2\F7\F8\F7\FA\0F\E5\04\02\06\F4\01", [40 x i8] c"\E6\13\0F\0C\05\16\18\00\15\F4\EB\F1\F8\0B\F9\0C\F2\14\FE\06\07\06\10\09\FA\05\EB\F9\F1\F6\F3\D9\FB\F6\EC\13\1C\05\16\05", [40 x i8] c"\FC\06\03\FB\01\04\0B\F0\06\E9\ED\E3\00\03\FA\1E\FD\11\0A\05\0D\02\11\FD\FB\FD\DD\EB\EF\EF\FE\DD\02\0F\FD\1C\0D\15\0D\0D", [40 x i8] c"\F8\19\08\17\FD\0D\03\EF\14\F8\00\0A\08\0B\12\00\01\0A\05\00\1C\11 \0F\1A\01\ED\F7\FD\EB\F1\07\FA\F7\E3\FB\0A\EF\F1\F7", [40 x i8] c"\0D\0D\FD\05\F9\FC\F7\DE\05\EC\02\FD\10\03\14\11\0B\07\11\00\22\0D!\02\1C\F8\E0\E8\FB\E3\FD\0C\00\0F\F5\03\FD\FE\E8\FF", [40 x i8] c"\EE\11\15\19\F5\13\06\03\0B\00\F9\0B\0D\1F\01\00\F7\FF\FB\F4\12\00\1F\02\0D\01\E2\F2\F9\E3\F7\EE\01\F6\FC\12\16\FD\0A\02", [40 x i8] c"\03\05\09\07\F1\01\FB\F3\FE\F4\FB\FE\15\17\02\10\00\FB\06\F3\17\FD \F6\0F\F8\D4\E4\F7\DB\02\F3\09\0F\0C\1B\07\0C\00\0B", [40 x i8] c"\D4\06\E2\F8\09\0A\0B\0E\17\FB\08\FC\0E\F4%\0E\0C\1A\04\10\F8\10\F7\07\FA\13\0C\19\FB\18\F1\F3\F8\DC\DE\E1\FF\EE\FC\EE", [40 x i8] c"\EA\FB\D6\E6\06\F8\FF\FE\09\EF\0A\EE\15\ED'\1F\17\17\10\0F\FE\0C\F9\FA\FB\09\FF\0A\F9\10\FC\F7\00\F6\EF\EA\F0\FE\F2\F7", [40 x i8] c"\C9\FF\EF\FA\01\10\0F#\0F\02\00\FC\13\08\14\0D\01\0E\F9\03\EE\00\F6\FB\ED\13\00\15\F8\10\F7\D9\00\DC\F6\F9\09\FC\14\FB", [40 x i8] c"\DF\F3\E3\E8\FF\FF\02\12\00\F7\03\EF\1B\00\15\1E\0C\0B\05\02\F4\FC\F7\ED\EE\09\F3\06\F5\08\02\DD\08\F6\07\01\FC\0B\0A\02", [40 x i8] c"\DC\05\E8\04\F9\07\FA\11\0E\05\16\16#\08.\01\11\03\00\FE\02\0A\05\00\0E\0F\02\12\02\04\F5\07\FF\DC\EE\E0\F9\E5\EF\EC", [40 x i8] c"\F2\F9\DC\F3\F6\F6\EE\00\00\FB\19\08+\000\12\1B\00\0C\FD\07\06\07\F3\0F\05\F5\03\00\FE\00\0C\06\F6\00\E9\EA\F5\E6\F4", [40 x i8] c"\D1\FD\F5\06\F1\0D\FE&\06\0D\0F\16(\1C\1C\00\05\F8\F6\F1\F9\F9\04\F3\01\0E\F7\0E\00\FE\FC\EE\07\DC\06\F8\03\F3\07\F8", [40 x i8] c"\E7\F1\EA\F5\EE\FC\F1\16\F8\02\11\090\14\1E\11\10\F5\01\F0\FE\F6\05\E6\02\04\EA\00\FE\F6\06\F3\0E\F6\17\00\F6\02\FF\00", [40 x i8] c"\C7\1A\EA\07\0E\1C\0E\03#\00\FD\FF\0B\F0\12\0A\04\1F\0F\1C\0E\17\01\15\F9\02\F5\01\FD\01\EE\F7\F6\F3\CF\E8\F8\F2\FE\F0", [40 x i8] c"\DD\0E\DE\F6\0A\0A\01\F4\14\F4\00\F1\12\E8\14\1B\0E\1C\1B\1B\14\13\02\08\FB\F9\E7\F3\FB\FB\FA\FB\FE\0C\E1\F1\E9\01\F4\F8", [40 x i8] c"\BC\12\F7\09\06#\12\19\1A\07\F6\FF\10\03\01\09\FA\13\04\0F\04\06\00\08\EC\02\E9\FE\F9\FB\F4\DD\FF\F3\E8\00\03\00\16\FC", [40 x i8] c"\D2\06\EB\F8\02\10\05\08\0B\FC\F8\F1\18\FC\02\1A\03\10\10\0E\09\02\01\FC\ED\F9\DC\EF\F7\F3\00\E1\05\0C\F9\08\F5\0F\0D\04", [40 x i8] c"\CF\18\F0\14\FE\1A\FE\07\19\0A\0B\19 \03\1B\FE\08\08\0B\09\18\11\10\0E\0D\FE\EC\FB\04\EF\F2\0C\FD\F3\DF\E7\F2\E9\F1\ED", [40 x i8] c"\E5\0C\E4\02\FA\07\F1\F7\0B\FF\0D\0B(\FC\1D\0E\13\05\17\08\1E\0D\11\00\0E\F4\DE\EC\02\E7\FE\10\04\0C\F1\F0\E3\F9\E8\F6", [40 x i8] c"\C4\10\FD\16\F6 \00\1C\11\12\03\19%\17\0A\FD\FE\FD\00\FD\0E\00\0E\01\00\FE\E0\F7\01\E7\F9\F3\05\F3\F8\FF\FE\F8\0A\FA", [40 x i8] c"\DA\04\F1\04\F2\0D\F4\0B\02\06\06\0B-\10\0B\0D\07\FA\0C\FC\14\FD\10\F4\01\F4\D2\E8\00\DF\03\F7\0C\0C\08\07\EF\06\00\02"], align 16
@ff_cb2_vects = constant [128 x [40 x i8]] [[40 x i8] c"I\E0\C4\F1\E6;\02\DF\1E\F6\FD\EF\08\1E\FF\E6\FC\EA\0A\10\DC\FB\F58%\06\F6\FB\F3\FD\06\FB\0B\04\ED\FB\F0)\18\0D", [40 x i8] c"\04\F5\DB\17\FB.\FE\E3\FB\D9\EB\F7\001\0C\F7\F0\E6\16\0F\D3\EC\FB(\16\11\E6\1F\F2\02\F2\0A\1E\14\E5\F7\D9'\12\05", [40 x i8] c"\22\E7\D0\E4\F5\22\FE\D7\09\F9\EF\15\14\18\EF\DF\00\E8\0A*\03\FB\0A*\0B\08\FD\03\10\09\16\FE\00\DF\F6\12\07:\0A\1C", [40 x i8] c"\DE\FC\E7\0A\09\15\F9\DC\E6\DC\DD\1C\0C*\FD\F0\F4\E4\15*\FB\EB\10\1A\FC\13\ED'\0F\0F\01\0D\13\EF\EF\0E\F17\04\13", [40 x i8] c"\1C\EC\CD\F2\FA\07\00\E6\1B\FC\12\D8\FA\10\FF\F1\00\C9\FB\F0\ED\0E\FD1\0E\01\EA\E2\F4\00\18\0F\09\EF\D3\E3\04\1C3#", [40 x i8] c"\D8\00\E4\18\0E\FB\FC\EB\F9\DF\00\E0\F1#\0C\01\F5\C6\05\F0\E4\00\01!\00\0B\D9\05\F2\06\03\1F\1C\FF\CB\DF\ED\19.\1A", [40 x i8] c"\F5\F2\D9\E5\09\EF\FC\DF\06\00\04\FF\05\0A\EF\EA\05\C7\FB\09\14\0D\12#\F5\03\F0\EA\11\0D(\13\FF\C9\DD\FB\1B,%1", [40 x i8] c"\B0\06\F0\0B\1E\E2\F7\E4\E4\E3\F3\06\FE\1C\FD\FB\F9\C4\05\09\0B\FF\18\13\E5\0D\E0\0D\0F\13\13#\11\D9\D5\F7\04* )", [40 x i8] c"N\EB\D5\04\DA\11\11\FB7\18\F1\DC\0E\04\18\E8\0C\05\11\1F\CA\FB\FE\1B+\F4\02\09\F7\F1\16\FD\1C\15\EC\03\14\1C\09\FB", [40 x i8] c"\09\FF\EC+\EF\03\0C\00\14\FC\DF\E3\06\16&\F9\00\01\1D\1E\C1\EB\03\0B\1B\FF\F2-\F6\F7\01\0C/%\E4\00\FE\1A\04\F3", [40 x i8] c"'\F2\E2\F8\EA\F8\0C\F4\22\1B\E3\02\1A\FE\08\E1\10\03\119\F2\FA\13\0D\10\F6\08\11\14\FE&\00\11\F0\F5\1B,-\FC\08", [40 x i8] c"\E3\05\F9\1E\FF\EB\07\F9\00\00\D1\09\12\0F\16\F2\04\00\1C9\E9\EB\19\FE\01\00\F95\13\03\11\0F$\00\ED\18\15+\F7\00", [40 x i8] c"!\F6\DE\05\EF\DD\0F\015\1E\06\C5\00\F6\18\F3\11\E5\01\FF\DB\0D\04\14\14\EE\F6\F0\F8\F5'\12\1A\00\D2\EC)\0F%\0F", [40 x i8] c"\DD\0A\F5,\03\D0\0A\06\11\02\F5\CD\F8\08&\03\04\E1\0C\FE\D2\FF\0A\04\05\F9\E6\13\F6\FB\12\22-\0F\CA\E8\12\0D\1F\07", [40 x i8] c"\FB\FD\EB\F9\FE\C4\0A\FB \22\F9\EC\0B\F0\08\EC\15\E3\01\18\02\0D\1B\06\FB\F1\FD\F8\15\017\15\0F\DA\DB\03A \17\1E", [40 x i8] c"\B6\11\00\1F\12\B7\05\00\FD\05\E7\F4\03\01\16\FD\09\DF\0C\18\FA\FE!\F7\EB\FB\EC\1B\13\07\22%\22\EA\D4\00)\1D\11\15", [40 x i8] c"L\DD\E1\E4\CF+\D8\00\1D\F2\08\05\0A\12\E6\D2\00\07\06\03\E7\F9\FE(\1C\0E\12\FD\E5\E4\F8\D3\F3\22\F3\E5\F1\1F\0C\03", [40 x i8] c"\07\F1\F7\09\E4\1D\D3\05\FA\D5\F7\0C\02$\F4\E2\F5\03\11\03\DE\EA\03\18\0C\18\02 \E4\EA\E3\E3\052\EB\E1\DA\1D\07\FB", [40 x i8] c"$\E3\ED\D7\DE\12\D3\FA\08\F6\FB+\17\0B\D6\CB\05\05\06\1E\0E\F8\14\1A\01\10\19\04\03\F1\07\D7\E9\FD\FC\FD\080\FF\11", [40 x i8] c"\E0\F8\03\FE\F3\04\CE\FF\E5\D9\E93\0F\1E\E5\DB\F9\01\11\1D\05\E9\19\0A\F2\1A\08)\01\F7\F3\E6\FB\0C\F4\F9\F2-\FA\09", [40 x i8] c"\1F\E8\E9\E5\E3\F7\D5\08\1A\F9\1E\EF\FC\03\E6\DD\05\E8\F6\E4\F7\0C\05!\05\08\05\E3\E6\E8\09\E9\F2\0C\D9\CC\05\12'\18", [40 x i8] c"\DB\FD\00\0A\F9\EA\D0\0C\F8\DC\0C\F7\F4\16\F4\ED\FA\E4\00\E3\EE\FD\0B\11\F6\12\F6\07\E5\EE\F5\F9\03\1C\D1\C9\EE\0F\22\10", [40 x i8] c"\F8\EF\F6\D8\F3\DE\D1\00\05\FC\10\15\08\FE\D6\D5\0A\E6\F6\FE\1F\0B\1B\13\EB\0A\0C\EC\03\F5\19\EC\E7\E7\E3\E4\1C\22\19&", [40 x i8] c"\B3\02\0B\FF\07\D1\CC\05\E3\DF\FF\1C\00\0F\E4\E6\FE\E2\00\FE\16\FC!\03\DC\15\FD\0F\02\FB\04\FC\FA\F7\DB\E1\05 \14\1E", [40 x i8] c"Q\E7\F2\F8\C3\00\E7\1C6\14\FD\F2\11\F8\00\D4\10#\0D\12\D5\F9\06\0B!\FC\1E\0B\EA\D8\06\D5\032\F2\EE\16\12\FF\F0", [40 x i8] c"\0C\FC\08\1D\D9\F4\E2!\13\F8\EB\FA\08\09\0D\E4\04\1F\18\12\CC\E9\0C\FC\12\05\0E/\E8\DE\F2\E5\16B\EA\EA\FF\10\FA\E8", [40 x i8] c")\EE\FE\EB\D3\E8\E2\15!\18\EF\18\1D\F1\F0\CD\15!\0D-\FD\F8\1C\FE\07\FE%\13\07\E5\16\D9\F9\0C\FB\05-#\F1\FF", [40 x i8] c"\E5\01\14\11\E8\DA\DD\1A\FF\FC\DD \15\03\FE\DD\08\1D\18,\F4\E8\22\EE\F8\07\157\05\EB\02\E9\0B\1C\F3\01\16!\EB\F6", [40 x i8] c"$\F3\FB\F9\D8\CD\E4$4\1B\12\DC\02\EA\00\DF\15\02\FD\F3\E6\0B\0E\04\0A\F6\12\F2\EA\DC\18\EB\01\1C\D8\D6*\05\19\05", [40 x i8] c"\E0\06\11\1F\ED\BF\DF)\10\FF\00\E3\FA\FC\0D\EF\09\FF\08\F2\DD\FD\13\F5\FC\00\01\15\E9\E2\03\FB\14,\D0\D2\13\03\14\FD", [40 x i8] c"\FD\F9\06\EC\E7\B3\E0\1D\1F\1E\04\02\0E\E3\F0\D8\1A\00\FD\0C\0D\0A$\F7\F1\F8\18\FA\07\EA(\EF\F8\F7\E1\EEB\16\0B\13", [40 x i8] c"\B8\0D\1D\12\FC\A6\DB\22\FC\01\F3\09\06\F5\FE\E8\0D\FD\07\0B\04\FC*\E7\E1\01\08\1D\06\EF\13\FE\0A\06\DA\EA*\13\06\0B", [40 x i8] c"t\EC\BC\E2\E4S\1C\EE \EA\F3\EB\05\1C\05\F9\E8\F8\EA\11\E9\1E\E7-\0F\F7\F5\EE\16\F6\04\FE\13\F4\17\03\D5\02\0C\FC", [40 x i8] c"/\00\D3\07\F9E\17\F3\FE\CD\E0\F2\FD/\13\08\DB\F5\F6\10\E0\0F\ED\1D\00\01\E4\12\14\FC\F0\0D&\03\0F\00\BE\00\07\F3", [40 x i8] c"M\F3\C8\D5\F39\17\E6\0B\ED\E5\10\11\16\F6\F1\ED\F6\EA+\10\1E\FE\1F\F5\FA\FB\F74\02\14\00\08\CE!\1B\ED\13\FF\09", [40 x i8] c"\08\06\DF\FC\07,\12\EB\E9\D0\D2\18\09(\03\01\E0\F3\F5+\07\0E\03\0F\E6\03\EB\1A2\08\00\10\1B\DE\19\17\D5\11\FA\01", [40 x i8] c"G\F7\C5\E3\F8\1E\1A\F5\1E\F0\08\D4\F7\0E\05\02\ED\D8\DA\F1\F92\EF&\F9\F2\E8\D5\16\FA\16\13\11\DE\FE\EC\E9\F6'\10", [40 x i8] c"\02\0B\DC\09\0D\11\15\FA\FB\D3\F6\DC\EE!\13\13\E1\D4\E5\F1\F0\22\F5\16\EA\FC\D8\F9\15\00\01#$\EE\F6\E8\D2\F4\22\08", [40 x i8] c" \FE\D1\D6\07\05\15\EE\09\F4\FB\FB\02\08\F6\FC\F2\D6\DA\0A!1\05\18\DF\F4\EF\DD4\06&\16\07\B8\07\03\00\06\19\1E", [40 x i8] c"\DC\12\E8\FD\1C\F9\10\F3\E6\D7\E8\01\FB\1A\03\0C\E5\D2\E5\0A\18\22\0A\08\CF\FE\DE\003\0C\11&\19\C8\00\00\EA\03\14\16", [40 x i8] c"y\F7\CE\F6\D8(+\09:\0C\E7\D7\0B\02\1F\FB\F8\13\F1 \D7\1E\F0\10\14\E4\00\FD\1A\EA\13\00$\04\16\0C\FA\F7\FF\E8", [40 x i8] c"4\0A\E5\1B\EE\1A&\0E\17\F0\D4\DF\03\14-\0A\EC\0F\FD\1F\CE\0E\F6\00\05\EF\F1 \18\F0\FF\0F7\14\0E\08\E3\F4\F9\E0", [40 x i8] c"R\FD\DA\E9\E8\0F&\02%\0F\D9\FE\17\FC\0F\F4\FD\11\F1:\FF\1D\06\02\FB\E6\07\048\F7#\03\19\DF $\11\07\F1\F7", [40 x i8] c"\0D\11\F1\0F\FD\01!\07\01\F4\C6\05\0F\0D\1D\03\F0\0D\FC9\F6\0D\0B\F3\EB\F1\F7(7\FD\0E\13,\EF\18 \FB\04\EB\EE", [40 x i8] c"L\01\D7\F7\ED\F4)\117\12\FD\C1\FD\F4\1E\05\FD\F4\E1\00\E81\F8\09\FF\DF\F4\E3\1B\EE%\15\22\EF\FD\F5\0E\E9\19\FE", [40 x i8] c"\07\16\EE\1D\01\E7$\15\14\F7\EA\C8\F5\06-\15\F1\F0\EC\FF\DF\22\FE\FA\EF\E9\E4\06\19\F4\10%5\FF\F5\F1\F8\E7\14\F5", [40 x i8] c"%\08\E3\EA\FC\DB$\09\22\16\EF\E8\08\EE\0F\FE\01\F2\E1\19\0F0\0D\FC\E4\E1\FB\EB9\FC5\18\17\C9\06\0C%\FA\0B\0B", [40 x i8] c"\E1\1C\FA\10\10\CE\1F\0E\00\FA\DC\EF\00\00\1D\0E\F5\EE\EC\19\06!\13\EC\D5\EB\EB\0E7\00 (*\D9\FF\08\0E\F8\06\03", [40 x i8] c"w\E8\D9\D4\CDB\F2\0F\1F\E6\FF\00\07\10\ED\E4\ED\16\E6\04\F3\1C\F0\1D\05\FF\10\F0\08\DD\F6\D6\FC\11\1D\ED\D6\F9\00\F1", [40 x i8] c"2\FD\F0\FB\E25\ED\14\FD\C9\ED\08\00\22\FB\F5\E0\12\F1\04\EA\0D\F6\0D\F7\08\00\13\07\E3\E1\E6\0D!\15\EA\BF\F7\FC\E9", [40 x i8] c"O\EF\E5\C8\DC)\ED\08\0A\EA\F1'\14\09\DD\DD\F1\14\E6\1F\1A\1B\06\0F\EC\00\17\F8&\EA\05\DA\F1\EC'\04\EE\09\F3\FF", [40 x i8] c"\0A\03\FC\EE\F1\1B\E8\0D\E8\CD\DE/\0C\1C\EB\ED\E5\10\F1\1E\11\0C\0C\00\DC\0A\07\1B%\F0\F1\EA\03\FC\1F\01\D6\07\EE\F7", [40 x i8] c"J\F4\E2\D6\E2\0E\F0\17\1D\ED\14\EB\F9\01\ED\EF\F2\F6\D5\E5\030\F8\16\F0\F9\04\D6\09\E1\06\EC\FA\FC\03\D5\EA\EC\1C\05", [40 x i8] c"\05\07\F9\FC\F7\00\EB\1C\FA\D0\02\F2\F1\14\FB\00\E5\F2\E0\E4\FB \FE\06\E0\03\F4\FB\08\E7\F2\FC\0C\0B\FC\D1\D3\EA\16\FE", [40 x i8] c"\22\FA\EE\C9\F1\F5\EB\10\08\F0\06\10\05\FC\DD\E8\F6\F4\D5\FF+/\0E\08\D5\FB\0A\DE'\EE\16\F0\EF\D6\0D\ED\01\FD\0E\14", [40 x i8] c"\DE\0E\04\EF\05\E8\E6\14\E5\D3\F4\18\FE\0D\EB\F8\EA\F0\E0\FE\22\1F\14\F9\C6\05\FB\02&\F4\02\FF\01\E6\05\E9\EB\FA\08\0B", [40 x i8] c"|\F3\EB\E9\C2\17\00+9\08\F3\EE\0E\F6\06\E6\FD1\ED\13\E1\1B\F9\00\0B\EC\1D\FF\0C\D1\04\D9\0B\22\1C\F7\FB\ED\F3\DE", [40 x i8] c"7\06\01\0E\D7\0A\FC0\16\EC\E1\F6\05\07\14\F7\F0-\F8\13\D8\0C\FF\F1\FC\F6\0C\22\0B\D7\F0\E8\1E1\14\F3\E4\EA\EE\D5", [40 x i8] c"T\FA\F7\DC\D1\FF\FC$$\0C\E5\14\1A\EF\F7\DF\01/\ED.\09\1B\0F\F3\F1\EE#\06*\DF\14\DC\01\FC&\0E\12\FE\E5\EC", [40 x i8] c"\0F\0D\0D\01\E6\F2\F7)\01\F0\D2\1B\12\01\04\F0\F5+\F8-\00\0B\15\E3\E2\F8\13*)\E4\00\EC\14\0B\1E\0A\FC\FB\E0\E4", [40 x i8] c"O\FE\F4\EA\D6\E4\FF36\0F\08\D7\00\E8\06\F1\01\11\DC\F4\F2/\00\FA\F5\E6\10\E5\0D\D5\16\EE\0A\0C\02\DE\0F\DF\0D\F3", [40 x i8] c"\0A\12\0A\0F\EB\D7\FA8\13\F3\F7\DF\F7\FA\14\01\F5\0D\E8\F3\E9 \06\EA\E6\F1\00\08\0C\DB\01\FE\1C\1B\FB\DB\F9\DD\08\EB", [40 x i8] c"'\04\00\DD\E5\CB\FA,!\12\FB\FE\0B\E1\F7\EA\06\0F\DC\0D\19.\17\EC\DB\E8\17\ED+\E3&\F2\00\E6\0C\F6&\F0\00\00", [40 x i8] c"\E3\19\16\02\FA\BD\F51\FF\F6\E8\05\03\F3\04\FB\FA\0B\E7\0C\10\1F\1C\DC\CB\F3\06\10*\E8\11\01\12\F6\04\F3\0F\EE\FB\F9", [40 x i8] c"\1D\E7\EA\FE\06C\0B\CF\01\0A\18\FB\FD\0D\FC\05\06\F5\19\F4\F0\E1\E4$5\0D\FA\F0\D6\18\EF\FF\EE\0A\FC\0D\F1\12\05\07", [40 x i8] c"\D9\FC\00#\1B5\06\D4\DF\EE\05\02\F5\1F\09\16\FA\F1$\F3\E7\D2\E9\14%\18\E9\13\D5\1D\DA\0E\00\1A\F4\0A\DA\10\00\00", [40 x i8] c"\F6\EE\F6\F1\15)\06\C8\ED\0D\09!\09\06\EC\FF\0B\F3\18\0D\17\E0\FA\16\1A\0F\00\F8\F4%\FF\02\E4\E5\05%\07#\F8\15", [40 x i8] c"\B1\02\0C\16*\1C\01\CD\CA\F1\F8)\00\18\FA\0F\FF\EF$\0C\0E\D1\00\06\0B\1A\F0\1B\F3+\EA\12\F6\F4\FE\22\F1!\F3\0D", [40 x i8] c"\F1\F3\F3\FF\1A\0E\09\D7\FF\10.\E5\EE\FF\FC\10\0B\D5\08\D3\00\F5\EB\1D\1E\08\ED\D6\D7\1C\00\14\EC\F5\E2\F6\04\05 \1C", [40 x i8] c"\AC\06\09$/\01\04\DC\DC\F4\1B\EC\E6\11\09!\FF\D1\13\D2\F7\E5\F1\0D\0F\12\DD\FA\D6!\EC$\FF\04\DA\F2\EE\02\1B\14", [40 x i8] c"\C9\FA\FF\F2)\F6\04\D0\EA\14\1F\0A\FB\F9\EC\09\10\D3\08\ED(\F4\01\0F\04\0A\F4\DE\F5)\10\18\E2\CF\EC\0D\1C\16\12+", [40 x i8] c"\84\0D\15\17>\E9\00\D5\C7\F8\0D\12\F2\0A\FA\1A\03\CF\13\ED\1F\E5\07\00\F5\14\E3\01\F4/\FC'\F5\DE\E4\09\05\13\0D\22", [40 x i8] c"\22\F2\FC\11\FB\18\1A\EC\1B-\0C\E8\02\F3\15\08\16\10 \02\DE\E1\EC\07:\FB\05\FE\DA\0C\FE\01\FF\1A\FB\17\15\06\F8\F5", [40 x i8] c"\DE\06\127\0F\0B\15\F0\F8\10\FA\F0\FB\04#\18\0A\0C+\01\D5\D1\F2\F8+\05\F6\22\D9\12\EA\10\11*\F3\13\FF\03\F2\EC", [40 x i8] c"\FB\F9\07\04\09\00\15\E4\060\FE\0E\0F\EC\05\00\1B\0E \1C\05\E0\02\FA \FD\0C\05\F8\19\0E\04\F4\F5\04/-\16\EA\02", [40 x i8] c"\B6\0C\1E*\1E\F2\10\E9\E3\13\EC\15\07\FF\13\11\0E\0A+\1B\FD\D0\08\EA\10\07\FC*\F7\1F\FA\14\06\04\FD+\16\14\E4\FB", [40 x i8] c"\F6\FD\04\12\0F\E5\18\F3\183\22\D1\F4\E4\15\13\1B\F0\0F\E2\EF\F4\F4\00$\F6\F9\E5\DB\10\0F\16\FD\04\E1\FF*\F9\12\09", [40 x i8] c"\B1\11\1B8$\D7\13\F8\F6\16\0F\D9\EC\F7##\0F\EC\1A\E1\E6\E5\FA\F1\14\00\E9\08\DA\16\FB&\0F\14\D9\FC\12\F7\0D\01", [40 x i8] c"\CE\03\10\05\1E\CB\13\EC\037\13\F8\00\DE\05\0B \EE\0F\FC\16\F3\0A\F3\09\F8\00\ED\F9\1D\1F\1A\F3\DF\EB\16A\09\04\17", [40 x i8] c"\89\18',3\BE\0E\F1\E1\1A\01\00\F9\F0\13\1C\13\EA\1A\FC\0D\E4\10\E3\FB\01\F0\10\F8#\0A*\04\EF\E3\13*\07\00\0F", [40 x i8] c"\1F\E4\06\F0\F02\E1\F2\00\06$\11\00\00\E3\F2\0B\12\14\E7\FA\DF\ED\14+\15\15\F2\C9\00\E0\D8\D6'\01\F8\F2\08\FA\FD", [40 x i8] c"\DB\F8\1D\16\04%\DC\F7\DE\EA\11\18\F8\12\F1\02\FF\0E\1F\E7\F1\D0\F3\04\1C\1F\05\15\C7\04\CB\E8\E97\FA\F4\DB\06\F5\F5", [40 x i8] c"\F9\EA\12\E3\FF\19\DC\EB\EC\09\168\0B\FA\D3\EB\0F\10\14\01!\DE\02\06\11\17\1C\FA\E7\0C\F0\DB\CB\01\0B\0F\08\19\EC\0B", [40 x i8] c"\B4\FF)\09\13\0C\D7\EF\C9\EE\03?\03\0C\E2\FB\03\0C\1F\00\18\CF\08\F7\01!\0C\1D\E5\12\DB\EB\DE\11\03\0B\F2\17\E7\02", [40 x i8] c"\F3\EF\0F\F1\03\FF\DF\F9\FF\0C:\FB\F1\F3\E3\FD\10\F3\04\C7\0A\F3\F5\0D\15\0F\09\D8\C9\03\F2\ED\D4\11\E8\E0\05\FC\15\12", [40 x i8] c"\AE\03&\17\18\F1\DA\FE\DB\F1'\02\E9\04\F1\0C\03\EF\0F\C6\01\E3\FA\FE\05\1A\F9\FC\C8\09\DD\FD\E7!\E0\DC\EF\F9\0F\09", [40 x i8] c"\CC\F6\1B\E5\12\E6\DA\F2\E9\10,!\FD\EC\D3\F6\14\F1\03\E12\F2\0A\00\FB\11\0F\E0\E8\10\01\F1\C9\EC\F2\F8\1D\0C\07 ", [40 x i8] c"\87\092\0A(\D8\D5\F7\C6\F4\19)\F5\FE\E1\05\08\ED\0F\E0)\E2\10\F0\EC\1C\00\03\E6\16\ED\00\DC\FC\EA\F4\06\09\01\18", [40 x i8] c"$\EE\18\03\E4\07\F0\0D\1A)\18\FF\05\E6\FD\F4\1B.\1B\F6\E8\DE\F6\F81\02\22\00\CD\F4\EF\DA\E78\00\00\16\FD\EC\EA", [40 x i8] c"\E0\02/*\F9\FB\EB\12\F7\0C\05\05\FE\F8\0A\04\0E*&\F6\DF\CF\FB\E8!\0C\11#\CC\FA\DA\EA\F9H\F9\FD\00\FA\E7\E2", [40 x i8] c"\FE\F5$\F7\F3\EF\EB\06\05-\0A$\12\DF\ED\ED\1F,\1B\0F\10\DE\0B\EA\16\04(\07\EB\00\FF\DD\DC\12\0A\18.\0C\DE\F8", [40 x i8] c"\B9\09;\1D\08\E2\E6\0B\E2\10\F8,\09\F2\FB\FE\13(&\0F\07\CE\11\DA\07\0E\18+\EA\06\EA\ED\EF\22\02\14\17\0A\D9\F0", [40 x i8] c"\F8\FA!\04\F9\D4\EE\15\170.\E8\F7\D8\FD\FF \0D\0B\D5\F9\F2\FD\F1\1A\FD\15\E6\CE\F8\00\F0\E5\22\E7\E9+\EF\06\FF", [40 x i8] c"\B3\0D8+\0D\C7\E9\1A\F5\13\1B\F0\EF\EA\0A\0F\13\0A\16\D5\F0\E2\02\E1\0B\06\05\09\CC\FE\EC\00\F82\DF\E5\13\ED\01\F7", [40 x i8] c"\D1\00-\F9\07\BB\E9\0D\023 \0E\03\D1\ED\F8%\0B\0A\F0 \F1\13\E3\00\FF\1C\EE\EC\04\10\F3\DA\FD\F1\00B\00\F9\0D", [40 x i8] c"\8C\14D\1E\1C\AD\E4\12\E0\16\0D\15\FB\E4\FB\07\18\08\16\EF\17\E2\19\D3\F1\09\0B\12\EA\0A\FC\02\ED\0C\E9\FD+\FE\F4\04", [40 x i8] c"H\F3\E3\EE\04Z%\DE\04\FF\0D\F7\FA\0B\02\18\F3\03\F9\F5\FC\04\D6\19\1F\FF\F8\E3\FA\11\ED\02\F6\FA&\16\D6\ED\FA\F5", [40 x i8] c"\03\07\FA\14\19M \E3\E1\E2\FC\FE\F2\1D\10(\E6\00\03\F4\F3\F6\DC\09\0F\08\E8\06\F9\16\D8\11\08\09\1F\12\BE\EA\F5\ED", [40 x i8] c" \FA\EF\E1\13A!\D7\F0\01\00\1D\06\04\F3\11\F7\01\F8\0E#\03\ED\0B\04\00\FF\EB\17\1E\FD\05\EC\D40.\ED\FD\EC\03", [40 x i8] c"\DC\0D\05\07(3\1C\DC\CC\E5\EE$\FE\16\00!\EB\FE\03\0D\1A\F5\F2\FC\F6\0A\EE\0E\16$\E8\15\FF\E4(*\D6\FB\E7\FB", [40 x i8] c"\1B\FF\EC\EF\18&#\E6\01\04#\E0\EB\FD\02#\F8\E3\E8\D4\0C\18\DE\12\08\F9\EB\C9\FB\15\FE\17\F5\E4\0D\FF\EA\DF\15\0A", [40 x i8] c"\D7\12\02\15-\18\1E\EB\DF\E8\11\E8\E3\0F\103\EB\DF\F3\D3\03\08\E4\02\F9\02\DB\ED\F9\1B\EA'\07\F4\05\FB\D3\DD\0F\01", [40 x i8] c"\F4\04\F8\E3'\0C\1E\DF\ED\08\15\06\F8\F7\F3\1C\FC\E1\E8\EE4\17\F4\04\EE\FB\F2\D1\18\22\0E\1B\EA\BE\16\16\01\F0\06\18", [40 x i8] c"\AF\19\0E\08=\00\19\E4\CA\EC\03\0E\EF\08\00,\F0\DD\F3\EE+\07\FA\F5\DF\04\E2\F5\16(\FA+\FD\CE\0E\12\EA\EE\01\10", [40 x i8] c"M\FE\F5\01\F9/4\FB\1D!\01\E4\00\F1\1C\1A\02\1E\00\02\EA\04\DF\FD$\EB\03\F1\FE\05\FC\04\06\09%\1F\FB\E0\EC\E2", [40 x i8] c"\08\11\0A(\0D\22/\00\FB\04\F0\EB\F8\02*+\F6\1A\0A\02\E1\F5\E5\ED\15\F6\F4\14\FD\0B\E7\14\19\19\1D\1C\E4\DE\E7\DA", [40 x i8] c"%\03\00\F6\07\160\F4\08$\F4\09\0C\EA\0C\13\06\1C\00\1D\12\03\F5\EF\0A\EE\0A\F9\1B\12\0B\07\FD\E4/7\12\F1\DE\F0", [40 x i8] c"\E1\18\17\1B\1D\09+\F8\E6\07\E2\11\04\FD\1A#\FB\18\0A\1C\09\F4\FB\DF\FB\F8\FB\1D\1A\18\F7\17\0E\F4'4\FB\EE\D9\E8", [40 x i8] c" \08\FD\02\0D\FC2\01\1B'\17\CD\F1\E2\1B%\07\FF\EF\E3\FB\17\E7\F6\0E\E6\F8\D7\FF\09\0D\1A\05\F4\0C\07\0E\D3\06\F7", [40 x i8] c"\DC\1D\13)\22\EE-\06\F8\0A\05\D5\E9\F5*5\FB\FB\FA\E2\F2\08\EC\E6\FF\F0\E7\FC\FD\0F\F9)\17\03\04\03\F8\D0\01\EF", [40 x i8] c"\F9\0F\09\F7\1C\E3-\FB\06+\09\F4\FE\DC\0C\1E\0B\FD\EF\FD\22\16\FD\E8\F4\E8\FE\E0\1C\16\1D\1D\FB\CE\15\1F&\E3\F9\05", [40 x i8] c"\B4#\1F\1C1\D5(\00\E3\0E\F8\FB\F6\EE\1A.\00\F9\FA\FD\19\07\02\D8\E4\F2\EE\03\1B\1C\08-\0D\DE\0D\1B\0F\E1\F4\FD", [40 x i8] c"J\EF\00\E1\EEI\FB\00\03\FB\19\0C\FD\FF\EA\03\F7!\F4\E8\06\02\DF\09\15\05\14\E5\ED\F9\DE\DB\DE\16,\00\D7\E3\EF\EB", [40 x i8] c"\05\03\15\07\02<\F6\05\E0\DE\07\14\F5\10\F8\14\EB\1D\FF\E8\FE\F3\E5\FA\05\0F\03\08\EB\FF\C9\EB\F1&%\FD\BF\E0\E9\E2", [40 x i8] c"#\F6\0B\D4\FD0\F6\FA\EF\FE\0B3\08\F8\DA\FD\FC\1F\F4\02.\01\F6\FC\FB\07\1A\ED\0A\05\EE\DE\D3\F16\18\EE\F3\E1\F9", [40 x i8] c"\DF\0A\22\FB\11#\F1\FF\CB\E2\FA;\00\0A\E8\0D\EF\1B\FF\01%\F3\FC\EC\EC\12\0A\10\08\0B\D9\EE\E6\00.\14\D7\F1\DB\F1", [40 x i8] c"\1D\FB\07\E2\01\15\F9\07\00\00/\F7\EE\F1\EA\0E\FC\00\E4\C7\17\15\E7\02\FF\00\07\CB\ED\FD\EF\F1\DC\00\13\E8\EB\D5\09\00", [40 x i8] c"\D9\0E\1E\08\16\08\F4\0C\DE\E5\1D\FE\E6\02\F8\1F\F0\FD\EF\C7\0E\06\ED\F3\F0\0A\F8\EF\EC\02\DA\00\EF\10\0B\E5\D4\D3\04\F8", [40 x i8] c"\F7\01\14\D5\11\FD\F4\00\EC\04!\1D\FA\EA\DA\07\00\FF\E3\E2?\15\FD\F5\E5\01\0E\D3\0A\09\FF\F4\D1\DB\1C\00\02\E6\FC\0D", [40 x i8] c"\B2\15+\FC&\EF\EF\05\C9\E8\0F$\F2\FC\E8\18\F4\FB\EF\E16\05\02\E5\D5\0C\FE\F7\09\0F\EA\03\E4\EB\14\FD\EC\E4\F7\05", [40 x i8] c"P\FA\10\F5\E2\1E\09\1C\1C\1D\0D\FA\02\E4\03\05\07<\FB\F7\F5\01\E8\ED\1B\F3 \F3\F1\ED\ED\DD\EF'+\09\FC\D6\E0\D7", [40 x i8] c"\0B\0E'\1B\F7\11\04!\FA\00\FC\01\FB\F6\11\16\FB9\05\F7\EC\F3\EE\DD\0B\FD\10\16\EF\F3\D8\ED\017#\05\E5\D4\DB\CF", [40 x i8] c"(\00\1C\E8\F2\05\04\15\07!\00 \0F\DD\F4\FF\0B:\FB\10\1C\00\FF\DF\00\F5'\FB\0E\FA\FD\E1\E4\015!\13\E7\D2\E6", [40 x i8] c"\E4\143\0E\06\F9\00\1A\E5\04\EE(\06\F0\01\0F\007\05\10\13\F2\03\CF\F2\FF\16\1E\0C\00\E8\F1\F7\11-\1D\FC\E4\CD\DD", [40 x i8] c"\22\04\19\F6\F7\EB\07$\1A$#\E4\F4\D6\03\10\0C\1C\EB\D6\05\15\F0\E6\04\ED\13\D9\F1\F1\FF\F3\ED\11\11\F2\0F\C9\FC\ED", [40 x i8] c"\DE\190\1C\0B\DE\02)\F7\07\11\EB\EC\E8\11!\00\18\F6\D6\FD\05\F6\D6\F5\F8\03\FD\F0\F7\EA\02\00!\0A\EE\F9\C6\F6\E4", [40 x i8] c"\FC\0B%\E9\05\D2\02\1D\05'\15\09\00\CF\F4\09\10\1A\EA\F1-\14\05\D8\EA\EF\1A\E1\0E\FE\0E\F6\E2\EC\1B\09'\D9\EE\FB", [40 x i8] c"\B7 <\0F\1A\C5\FE!\E2\0A\03\11\F8\E2\01\1A\04\16\F6\F0$\05\0B\C8\DB\FA\0A\05\0D\03\FA\05\F5\FC\13\05\10\D7\E8\F3"], align 16
@ff_cb1_base = constant [128 x i16] [i16 19657, i16 18474, i16 18365, i16 17520, i16 21048, i16 18231, i16 18584, i16 16671, i16 20363, i16 19069, i16 19409, i16 18430, i16 21844, i16 18753, i16 19613, i16 17411, i16 20389, i16 21772, i16 20129, i16 21702, i16 20978, i16 20472, i16 19627, i16 19387, i16 21477, i16 23134, i16 21841, i16 23919, i16 22089, i16 21519, i16 21134, i16 20852, i16 19675, i16 17821, i16 19044, i16 17477, i16 19986, i16 16955, i16 18446, i16 16086, i16 21138, i16 18899, i16 20952, i16 18929, i16 21452, i16 17833, i16 20104, i16 17159, i16 19770, i16 20056, i16 20336, i16 20866, i16 19329, i16 18217, i16 18908, i16 18004, i16 21556, i16 21948, i16 23079, i16 23889, i16 20922, i16 19544, i16 20984, i16 19781, i16 19781, i16 20984, i16 19544, i16 20922, i16 23889, i16 23079, i16 21948, i16 21556, i16 18004, i16 18908, i16 18217, i16 19329, i16 20866, i16 20336, i16 20056, i16 19770, i16 17159, i16 20104, i16 17833, i16 21452, i16 18929, i16 20952, i16 18899, i16 21138, i16 16086, i16 18446, i16 16955, i16 19986, i16 17477, i16 19044, i16 17821, i16 19675, i16 20852, i16 21134, i16 21519, i16 22089, i16 23919, i16 21841, i16 23134, i16 21477, i16 19387, i16 19627, i16 20472, i16 20978, i16 21702, i16 20129, i16 21772, i16 20389, i16 17411, i16 19613, i16 18753, i16 21844, i16 18430, i16 19409, i16 19069, i16 20363, i16 16671, i16 18584, i16 18231, i16 21048, i16 17520, i16 18365, i16 18474, i16 19657], align 16
@ff_cb2_base = constant [128 x i16] [i16 12174, i16 13380, i16 13879, i16 13832, i16 13170, i16 13227, i16 13204, i16 12053, i16 12410, i16 13988, i16 14348, i16 14631, i16 13100, i16 13415, i16 13224, i16 12268, i16 11982, i16 13825, i16 13499, i16 14210, i16 13877, i16 14788, i16 13811, i16 13109, i16 11449, i16 13275, i16 12833, i16 13717, i16 12728, i16 13696, i16 12759, i16 12405, i16 10230, i16 12185, i16 11628, i16 13161, i16 11762, i16 13458, i16 12312, i16 12818, i16 10443, i16 12773, i16 12011, i16 14020, i16 11818, i16 13825, i16 12453, i16 13226, i16 10446, i16 13162, i16 11881, i16 14300, i16 12859, i16 16288, i16 13490, i16 15053, i16 10155, i16 12820, i16 11519, i16 13973, i16 12041, i16 15081, i16 12635, i16 14198, i16 14198, i16 12635, i16 15081, i16 12041, i16 13973, i16 11519, i16 12820, i16 10155, i16 15053, i16 13490, i16 16288, i16 12859, i16 14300, i16 11881, i16 13162, i16 10446, i16 13226, i16 12453, i16 13825, i16 11818, i16 14020, i16 12011, i16 12773, i16 10443, i16 12818, i16 12312, i16 13458, i16 11762, i16 13161, i16 11628, i16 12185, i16 10230, i16 12405, i16 12759, i16 13696, i16 12728, i16 13717, i16 12833, i16 13275, i16 11449, i16 13109, i16 13811, i16 14788, i16 13877, i16 14210, i16 13499, i16 13825, i16 11982, i16 12268, i16 13224, i16 13415, i16 13100, i16 14631, i16 14348, i16 13988, i16 12410, i16 12053, i16 13204, i16 13227, i16 13170, i16 13832, i16 13879, i16 13380, i16 12174], align 16
@ff_energy_tab = constant [32 x i16] [i16 0, i16 16, i16 20, i16 25, i16 32, i16 41, i16 51, i16 65, i16 81, i16 103, i16 129, i16 163, i16 205, i16 259, i16 326, i16 410, i16 516, i16 650, i16 819, i16 1031, i16 1298, i16 1634, i16 2057, i16 2590, i16 3261, i16 4105, i16 5168, i16 6507, i16 8192, i16 10313, i16 12983, i16 16345], align 16
@lpc_refl_cb1 = internal constant [64 x i16] [i16 -4041, i16 -4018, i16 -3998, i16 -3977, i16 -3954, i16 -3930, i16 -3906, i16 -3879, i16 -3852, i16 -3825, i16 -3795, i16 -3764, i16 -3731, i16 -3699, i16 -3666, i16 -3631, i16 -3594, i16 -3555, i16 -3513, i16 -3468, i16 -3420, i16 -3372, i16 -3321, i16 -3268, i16 -3212, i16 -3153, i16 -3090, i16 -3021, i16 -2944, i16 -2863, i16 -2772, i16 -2676, i16 -2565, i16 -2445, i16 -2328, i16 -2202, i16 -2072, i16 -1941, i16 -1808, i16 -1660, i16 -1508, i16 -1348, i16 -1185, i16 -994, i16 -798, i16 -600, i16 -374, i16 -110, i16 152, i16 447, i16 720, i16 982, i16 1229, i16 1456, i16 1682, i16 1916, i16 2130, i16 2353, i16 2595, i16 2853, i16 3118, i16 3363, i16 3588, i16 3814], align 16
@lpc_refl_cb2 = internal constant [32 x i16] [i16 -3091, i16 -2386, i16 -1871, i16 -1425, i16 -1021, i16 -649, i16 -316, i16 -20, i16 267, i16 544, i16 810, i16 1065, i16 1305, i16 1534, i16 1756, i16 1970, i16 2171, i16 2359, i16 2536, i16 2700, i16 2854, i16 2996, i16 3133, i16 3263, i16 3386, i16 3499, i16 3603, i16 3701, i16 3789, i16 3870, i16 3947, i16 4020], align 16
@lpc_refl_cb3 = internal constant [32 x i16] [i16 -3525, i16 -3295, i16 -3081, i16 -2890, i16 -2696, i16 -2511, i16 -2328, i16 -2149, i16 -1979, i16 -1817, i16 -1658, i16 -1498, i16 -1341, i16 -1188, i16 -1032, i16 -876, i16 -721, i16 -561, i16 -394, i16 -228, i16 -54, i16 119, i16 296, i16 484, i16 683, i16 895, i16 1123, i16 1373, i16 1651, i16 1965, i16 2360, i16 2854], align 16
@lpc_refl_cb4 = internal constant [16 x i16] [i16 -1845, i16 -1057, i16 -522, i16 -77, i16 301, i16 647, i16 975, i16 1285, i16 1582, i16 1873, i16 2163, i16 2452, i16 2735, i16 3017, i16 3299, i16 3569], align 16
@lpc_refl_cb5 = internal constant [16 x i16] [i16 -2691, i16 -2187, i16 -1788, i16 -1435, i16 -1118, i16 -837, i16 -571, i16 -316, i16 -59, i16 201, i16 470, i16 759, i16 1077, i16 1457, i16 1908, i16 2495], align 16
@lpc_refl_cb6 = internal constant [8 x i16] [i16 -1372, i16 -474, i16 133, i16 632, i16 1100, i16 1571, i16 2075, i16 2672], align 16
@lpc_refl_cb7 = internal constant [8 x i16] [i16 -2389, i16 -1787, i16 -1231, i16 -717, i16 -239, i16 234, i16 770, i16 1474], align 16
@lpc_refl_cb8 = internal constant [8 x i16] [i16 -1569, i16 -864, i16 -296, i16 200, i16 670, i16 1151, i16 1709, i16 2385], align 16
@lpc_refl_cb9 = internal constant [8 x i16] [i16 -2200, i16 -1608, i16 -1062, i16 -569, i16 -120, i16 338, i16 863, i16 1621], align 16
@lpc_refl_cb10 = internal constant [4 x i16] [i16 -617, i16 190, i16 802, i16 1483], align 2
@ff_lpc_refl_cb = constant [10 x i16*] [i16* getelementptr inbounds ([64 x i16], [64 x i16]* @lpc_refl_cb1, i32 0, i32 0), i16* getelementptr inbounds ([32 x i16], [32 x i16]* @lpc_refl_cb2, i32 0, i32 0), i16* getelementptr inbounds ([32 x i16], [32 x i16]* @lpc_refl_cb3, i32 0, i32 0), i16* getelementptr inbounds ([16 x i16], [16 x i16]* @lpc_refl_cb4, i32 0, i32 0), i16* getelementptr inbounds ([16 x i16], [16 x i16]* @lpc_refl_cb5, i32 0, i32 0), i16* getelementptr inbounds ([8 x i16], [8 x i16]* @lpc_refl_cb6, i32 0, i32 0), i16* getelementptr inbounds ([8 x i16], [8 x i16]* @lpc_refl_cb7, i32 0, i32 0), i16* getelementptr inbounds ([8 x i16], [8 x i16]* @lpc_refl_cb8, i32 0, i32 0), i16* getelementptr inbounds ([8 x i16], [8 x i16]* @lpc_refl_cb9, i32 0, i32 0), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @lpc_refl_cb10, i32 0, i32 0)], align 16
@.str = private unnamed_addr constant [26 x i8] c"Overflow. Broken sample?\0A\00", align 1
@ff_sqrt_tab = external constant [256 x i8], align 16
@ff_inverse = external constant [257 x i32], align 16

; Function Attrs: nounwind uwtable
define void @ff_copy_and_dup(i16* %target, i16* %source, i32 %offset) #0 !dbg !970 {
entry:
  %target.addr = alloca i16*, align 8
  %source.addr = alloca i16*, align 8
  %offset.addr = alloca i32, align 4
  store i16* %target, i16** %target.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %target.addr, metadata !975, metadata !976), !dbg !977
  store i16* %source, i16** %source.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %source.addr, metadata !978, metadata !976), !dbg !979
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !980, metadata !976), !dbg !981
  %0 = load i32, i32* %offset.addr, align 4, !dbg !982
  %sub = sub nsw i32 146, %0, !dbg !983
  %1 = load i16*, i16** %source.addr, align 8, !dbg !984
  %idx.ext = sext i32 %sub to i64, !dbg !984
  %add.ptr = getelementptr inbounds i16, i16* %1, i64 %idx.ext, !dbg !984
  store i16* %add.ptr, i16** %source.addr, align 8, !dbg !984
  %2 = load i16*, i16** %target.addr, align 8, !dbg !985
  %3 = bitcast i16* %2 to i8*, !dbg !986
  %4 = load i16*, i16** %source.addr, align 8, !dbg !987
  %5 = bitcast i16* %4 to i8*, !dbg !986
  %6 = load i32, i32* %offset.addr, align 4, !dbg !988
  %cmp = icmp sgt i32 40, %6, !dbg !989
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !990

cond.true:                                        ; preds = %entry
  %7 = load i32, i32* %offset.addr, align 4, !dbg !991
  br label %cond.end, !dbg !993

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !994

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %7, %cond.true ], [ 40, %cond.false ], !dbg !996
  %conv = sext i32 %cond to i64, !dbg !998
  %mul = mul i64 %conv, 2, !dbg !999
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* %5, i64 %mul, i32 2, i1 false), !dbg !1000
  %8 = load i32, i32* %offset.addr, align 4, !dbg !1001
  %cmp1 = icmp slt i32 %8, 40, !dbg !1003
  br i1 %cmp1, label %if.then, label %if.end, !dbg !1004

if.then:                                          ; preds = %cond.end
  %9 = load i16*, i16** %target.addr, align 8, !dbg !1005
  %10 = load i32, i32* %offset.addr, align 4, !dbg !1006
  %idx.ext3 = sext i32 %10 to i64, !dbg !1007
  %add.ptr4 = getelementptr inbounds i16, i16* %9, i64 %idx.ext3, !dbg !1007
  %11 = bitcast i16* %add.ptr4 to i8*, !dbg !1008
  %12 = load i16*, i16** %source.addr, align 8, !dbg !1009
  %13 = bitcast i16* %12 to i8*, !dbg !1008
  %14 = load i32, i32* %offset.addr, align 4, !dbg !1010
  %sub5 = sub nsw i32 40, %14, !dbg !1011
  %conv6 = sext i32 %sub5 to i64, !dbg !1012
  %mul7 = mul i64 %conv6, 2, !dbg !1013
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %13, i64 %mul7, i32 2, i1 false), !dbg !1008
  br label %if.end, !dbg !1008

if.end:                                           ; preds = %if.then, %cond.end
  ret void, !dbg !1014
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: nounwind uwtable
define i32 @ff_eval_refl(i32* %refl, i16* %coefs, %struct.AVCodecContext* %avctx) #0 !dbg !1015 {
entry:
  %retval = alloca i32, align 4
  %refl.addr = alloca i32*, align 8
  %coefs.addr = alloca i16*, align 8
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %b = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %buffer1 = alloca [10 x i32], align 16
  %buffer2 = alloca [10 x i32], align 16
  %bp1 = alloca i32*, align 8
  %bp2 = alloca i32*, align 8
  %SWAP_tmp = alloca i32*, align 8
  store i32* %refl, i32** %refl.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %refl.addr, metadata !1602, metadata !976), !dbg !1603
  store i16* %coefs, i16** %coefs.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %coefs.addr, metadata !1604, metadata !976), !dbg !1605
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !1606, metadata !976), !dbg !1607
  call void @llvm.dbg.declare(metadata i32* %b, metadata !1608, metadata !976), !dbg !1609
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1610, metadata !976), !dbg !1611
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1612, metadata !976), !dbg !1613
  call void @llvm.dbg.declare(metadata [10 x i32]* %buffer1, metadata !1614, metadata !976), !dbg !1616
  call void @llvm.dbg.declare(metadata [10 x i32]* %buffer2, metadata !1617, metadata !976), !dbg !1618
  call void @llvm.dbg.declare(metadata i32** %bp1, metadata !1619, metadata !976), !dbg !1620
  %arraydecay = getelementptr inbounds [10 x i32], [10 x i32]* %buffer1, i32 0, i32 0, !dbg !1621
  store i32* %arraydecay, i32** %bp1, align 8, !dbg !1620
  call void @llvm.dbg.declare(metadata i32** %bp2, metadata !1622, metadata !976), !dbg !1623
  %arraydecay1 = getelementptr inbounds [10 x i32], [10 x i32]* %buffer2, i32 0, i32 0, !dbg !1624
  store i32* %arraydecay1, i32** %bp2, align 8, !dbg !1623
  store i32 0, i32* %i, align 4, !dbg !1625
  br label %for.cond, !dbg !1627

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !1628
  %cmp = icmp slt i32 %0, 10, !dbg !1631
  br i1 %cmp, label %for.body, label %for.end, !dbg !1632

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !1633
  %idxprom = sext i32 %1 to i64, !dbg !1634
  %2 = load i16*, i16** %coefs.addr, align 8, !dbg !1634
  %arrayidx = getelementptr inbounds i16, i16* %2, i64 %idxprom, !dbg !1634
  %3 = load i16, i16* %arrayidx, align 2, !dbg !1634
  %conv = sext i16 %3 to i32, !dbg !1634
  %4 = load i32, i32* %i, align 4, !dbg !1635
  %idxprom2 = sext i32 %4 to i64, !dbg !1636
  %arrayidx3 = getelementptr inbounds [10 x i32], [10 x i32]* %buffer2, i64 0, i64 %idxprom2, !dbg !1636
  store i32 %conv, i32* %arrayidx3, align 4, !dbg !1637
  br label %for.inc, !dbg !1636

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !1638
  %inc = add nsw i32 %5, 1, !dbg !1638
  store i32 %inc, i32* %i, align 4, !dbg !1638
  br label %for.cond, !dbg !1640, !llvm.loop !1641

for.end:                                          ; preds = %for.cond
  %6 = load i32*, i32** %bp2, align 8, !dbg !1643
  %arrayidx4 = getelementptr inbounds i32, i32* %6, i64 9, !dbg !1643
  %7 = load i32, i32* %arrayidx4, align 4, !dbg !1643
  %8 = load i32*, i32** %refl.addr, align 8, !dbg !1644
  %arrayidx5 = getelementptr inbounds i32, i32* %8, i64 9, !dbg !1644
  store i32 %7, i32* %arrayidx5, align 4, !dbg !1645
  %9 = load i32*, i32** %bp2, align 8, !dbg !1646
  %arrayidx6 = getelementptr inbounds i32, i32* %9, i64 9, !dbg !1646
  %10 = load i32, i32* %arrayidx6, align 4, !dbg !1646
  %add = add i32 %10, 4096, !dbg !1648
  %cmp7 = icmp ugt i32 %add, 8191, !dbg !1649
  br i1 %cmp7, label %if.then, label %if.end, !dbg !1650

if.then:                                          ; preds = %for.end
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1651
  %12 = bitcast %struct.AVCodecContext* %11 to i8*, !dbg !1651
  call void (i8*, i32, i8*, ...) @av_log(i8* %12, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i32 0, i32 0)), !dbg !1653
  store i32 1, i32* %retval, align 4, !dbg !1654
  br label %return, !dbg !1654

if.end:                                           ; preds = %for.end
  store i32 8, i32* %i, align 4, !dbg !1655
  br label %for.cond9, !dbg !1657

for.cond9:                                        ; preds = %for.inc54, %if.end
  %13 = load i32, i32* %i, align 4, !dbg !1658
  %cmp10 = icmp sge i32 %13, 0, !dbg !1661
  br i1 %cmp10, label %for.body12, label %for.end55, !dbg !1662

for.body12:                                       ; preds = %for.cond9
  %14 = load i32, i32* %i, align 4, !dbg !1663
  %add13 = add nsw i32 %14, 1, !dbg !1665
  %idxprom14 = sext i32 %add13 to i64, !dbg !1666
  %15 = load i32*, i32** %bp2, align 8, !dbg !1666
  %arrayidx15 = getelementptr inbounds i32, i32* %15, i64 %idxprom14, !dbg !1666
  %16 = load i32, i32* %arrayidx15, align 4, !dbg !1666
  %17 = load i32, i32* %i, align 4, !dbg !1667
  %add16 = add nsw i32 %17, 1, !dbg !1668
  %idxprom17 = sext i32 %add16 to i64, !dbg !1669
  %18 = load i32*, i32** %bp2, align 8, !dbg !1669
  %arrayidx18 = getelementptr inbounds i32, i32* %18, i64 %idxprom17, !dbg !1669
  %19 = load i32, i32* %arrayidx18, align 4, !dbg !1669
  %mul = mul nsw i32 %16, %19, !dbg !1670
  %shr = ashr i32 %mul, 12, !dbg !1671
  %sub = sub nsw i32 4096, %shr, !dbg !1672
  store i32 %sub, i32* %b, align 4, !dbg !1673
  %20 = load i32, i32* %b, align 4, !dbg !1674
  %tobool = icmp ne i32 %20, 0, !dbg !1674
  br i1 %tobool, label %if.end20, label %if.then19, !dbg !1676

if.then19:                                        ; preds = %for.body12
  store i32 -2, i32* %b, align 4, !dbg !1677
  br label %if.end20, !dbg !1678

if.end20:                                         ; preds = %if.then19, %for.body12
  %21 = load i32, i32* %b, align 4, !dbg !1679
  %div = sdiv i32 16777216, %21, !dbg !1680
  store i32 %div, i32* %b, align 4, !dbg !1681
  store i32 0, i32* %j, align 4, !dbg !1682
  br label %for.cond21, !dbg !1684

for.cond21:                                       ; preds = %for.inc40, %if.end20
  %22 = load i32, i32* %j, align 4, !dbg !1685
  %23 = load i32, i32* %i, align 4, !dbg !1688
  %cmp22 = icmp sle i32 %22, %23, !dbg !1689
  br i1 %cmp22, label %for.body24, label %for.end42, !dbg !1690

for.body24:                                       ; preds = %for.cond21
  %24 = load i32, i32* %j, align 4, !dbg !1691
  %idxprom25 = sext i32 %24 to i64, !dbg !1693
  %25 = load i32*, i32** %bp2, align 8, !dbg !1693
  %arrayidx26 = getelementptr inbounds i32, i32* %25, i64 %idxprom25, !dbg !1693
  %26 = load i32, i32* %arrayidx26, align 4, !dbg !1693
  %27 = load i32, i32* %i, align 4, !dbg !1694
  %add27 = add nsw i32 %27, 1, !dbg !1695
  %idxprom28 = sext i32 %add27 to i64, !dbg !1696
  %28 = load i32*, i32** %refl.addr, align 8, !dbg !1696
  %arrayidx29 = getelementptr inbounds i32, i32* %28, i64 %idxprom28, !dbg !1696
  %29 = load i32, i32* %arrayidx29, align 4, !dbg !1696
  %30 = load i32, i32* %i, align 4, !dbg !1697
  %31 = load i32, i32* %j, align 4, !dbg !1698
  %sub30 = sub nsw i32 %30, %31, !dbg !1699
  %idxprom31 = sext i32 %sub30 to i64, !dbg !1700
  %32 = load i32*, i32** %bp2, align 8, !dbg !1700
  %arrayidx32 = getelementptr inbounds i32, i32* %32, i64 %idxprom31, !dbg !1700
  %33 = load i32, i32* %arrayidx32, align 4, !dbg !1700
  %mul33 = mul i32 %29, %33, !dbg !1701
  %shr34 = ashr i32 %mul33, 12, !dbg !1702
  %sub35 = sub nsw i32 %26, %shr34, !dbg !1703
  %34 = load i32, i32* %b, align 4, !dbg !1704
  %mul36 = mul i32 %sub35, %34, !dbg !1705
  %shr37 = ashr i32 %mul36, 12, !dbg !1706
  %35 = load i32, i32* %j, align 4, !dbg !1707
  %idxprom38 = sext i32 %35 to i64, !dbg !1708
  %36 = load i32*, i32** %bp1, align 8, !dbg !1708
  %arrayidx39 = getelementptr inbounds i32, i32* %36, i64 %idxprom38, !dbg !1708
  store i32 %shr37, i32* %arrayidx39, align 4, !dbg !1709
  br label %for.inc40, !dbg !1710

for.inc40:                                        ; preds = %for.body24
  %37 = load i32, i32* %j, align 4, !dbg !1711
  %inc41 = add nsw i32 %37, 1, !dbg !1711
  store i32 %inc41, i32* %j, align 4, !dbg !1711
  br label %for.cond21, !dbg !1713, !llvm.loop !1714

for.end42:                                        ; preds = %for.cond21
  %38 = load i32, i32* %i, align 4, !dbg !1716
  %idxprom43 = sext i32 %38 to i64, !dbg !1718
  %39 = load i32*, i32** %bp1, align 8, !dbg !1718
  %arrayidx44 = getelementptr inbounds i32, i32* %39, i64 %idxprom43, !dbg !1718
  %40 = load i32, i32* %arrayidx44, align 4, !dbg !1718
  %add45 = add i32 %40, 4096, !dbg !1719
  %cmp46 = icmp ugt i32 %add45, 8191, !dbg !1720
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !1721

if.then48:                                        ; preds = %for.end42
  store i32 1, i32* %retval, align 4, !dbg !1722
  br label %return, !dbg !1722

if.end49:                                         ; preds = %for.end42
  %41 = load i32, i32* %i, align 4, !dbg !1723
  %idxprom50 = sext i32 %41 to i64, !dbg !1724
  %42 = load i32*, i32** %bp1, align 8, !dbg !1724
  %arrayidx51 = getelementptr inbounds i32, i32* %42, i64 %idxprom50, !dbg !1724
  %43 = load i32, i32* %arrayidx51, align 4, !dbg !1724
  %44 = load i32, i32* %i, align 4, !dbg !1725
  %idxprom52 = sext i32 %44 to i64, !dbg !1726
  %45 = load i32*, i32** %refl.addr, align 8, !dbg !1726
  %arrayidx53 = getelementptr inbounds i32, i32* %45, i64 %idxprom52, !dbg !1726
  store i32 %43, i32* %arrayidx53, align 4, !dbg !1727
  br label %do.body, !dbg !1728, !llvm.loop !1729

do.body:                                          ; preds = %if.end49
  call void @llvm.dbg.declare(metadata i32** %SWAP_tmp, metadata !1730, metadata !976), !dbg !1732
  %46 = load i32*, i32** %bp2, align 8, !dbg !1733
  store i32* %46, i32** %SWAP_tmp, align 8, !dbg !1735
  %47 = load i32*, i32** %bp1, align 8, !dbg !1736
  store i32* %47, i32** %bp2, align 8, !dbg !1737
  %48 = load i32*, i32** %SWAP_tmp, align 8, !dbg !1738
  store i32* %48, i32** %bp1, align 8, !dbg !1739
  br label %do.end, !dbg !1740

do.end:                                           ; preds = %do.body
  br label %for.inc54, !dbg !1741

for.inc54:                                        ; preds = %do.end
  %49 = load i32, i32* %i, align 4, !dbg !1742
  %dec = add nsw i32 %49, -1, !dbg !1742
  store i32 %dec, i32* %i, align 4, !dbg !1742
  br label %for.cond9, !dbg !1744, !llvm.loop !1745

for.end55:                                        ; preds = %for.cond9
  store i32 0, i32* %retval, align 4, !dbg !1747
  br label %return, !dbg !1747

return:                                           ; preds = %for.end55, %if.then48, %if.then
  %50 = load i32, i32* %retval, align 4, !dbg !1748
  ret i32 %50, !dbg !1748
}

declare void @av_log(i8*, i32, i8*, ...) #3

; Function Attrs: nounwind uwtable
define void @ff_eval_coefs(i32* %coefs, i32* %refl) #0 !dbg !1749 {
entry:
  %coefs.addr = alloca i32*, align 8
  %refl.addr = alloca i32*, align 8
  %buffer = alloca [10 x i32], align 16
  %b1 = alloca i32*, align 8
  %b2 = alloca i32*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %SWAP_tmp = alloca i32*, align 8
  store i32* %coefs, i32** %coefs.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %coefs.addr, metadata !1752, metadata !976), !dbg !1753
  store i32* %refl, i32** %refl.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %refl.addr, metadata !1754, metadata !976), !dbg !1755
  call void @llvm.dbg.declare(metadata [10 x i32]* %buffer, metadata !1756, metadata !976), !dbg !1757
  call void @llvm.dbg.declare(metadata i32** %b1, metadata !1758, metadata !976), !dbg !1759
  %arraydecay = getelementptr inbounds [10 x i32], [10 x i32]* %buffer, i32 0, i32 0, !dbg !1760
  store i32* %arraydecay, i32** %b1, align 8, !dbg !1759
  call void @llvm.dbg.declare(metadata i32** %b2, metadata !1761, metadata !976), !dbg !1762
  %0 = load i32*, i32** %coefs.addr, align 8, !dbg !1763
  store i32* %0, i32** %b2, align 8, !dbg !1762
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1764, metadata !976), !dbg !1765
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1766, metadata !976), !dbg !1767
  store i32 0, i32* %i, align 4, !dbg !1768
  br label %for.cond, !dbg !1770

for.cond:                                         ; preds = %for.inc16, %entry
  %1 = load i32, i32* %i, align 4, !dbg !1771
  %cmp = icmp slt i32 %1, 10, !dbg !1774
  br i1 %cmp, label %for.body, label %for.end18, !dbg !1775

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !1776
  %idxprom = sext i32 %2 to i64, !dbg !1778
  %3 = load i32*, i32** %refl.addr, align 8, !dbg !1778
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom, !dbg !1778
  %4 = load i32, i32* %arrayidx, align 4, !dbg !1778
  %mul = mul nsw i32 %4, 16, !dbg !1779
  %5 = load i32, i32* %i, align 4, !dbg !1780
  %idxprom1 = sext i32 %5 to i64, !dbg !1781
  %6 = load i32*, i32** %b1, align 8, !dbg !1781
  %arrayidx2 = getelementptr inbounds i32, i32* %6, i64 %idxprom1, !dbg !1781
  store i32 %mul, i32* %arrayidx2, align 4, !dbg !1782
  store i32 0, i32* %j, align 4, !dbg !1783
  br label %for.cond3, !dbg !1785

for.cond3:                                        ; preds = %for.inc, %for.body
  %7 = load i32, i32* %j, align 4, !dbg !1786
  %8 = load i32, i32* %i, align 4, !dbg !1789
  %cmp4 = icmp slt i32 %7, %8, !dbg !1790
  br i1 %cmp4, label %for.body5, label %for.end, !dbg !1791

for.body5:                                        ; preds = %for.cond3
  %9 = load i32, i32* %i, align 4, !dbg !1792
  %idxprom6 = sext i32 %9 to i64, !dbg !1793
  %10 = load i32*, i32** %refl.addr, align 8, !dbg !1793
  %arrayidx7 = getelementptr inbounds i32, i32* %10, i64 %idxprom6, !dbg !1793
  %11 = load i32, i32* %arrayidx7, align 4, !dbg !1793
  %12 = load i32, i32* %i, align 4, !dbg !1794
  %13 = load i32, i32* %j, align 4, !dbg !1795
  %sub = sub nsw i32 %12, %13, !dbg !1796
  %sub8 = sub nsw i32 %sub, 1, !dbg !1797
  %idxprom9 = sext i32 %sub8 to i64, !dbg !1798
  %14 = load i32*, i32** %b2, align 8, !dbg !1798
  %arrayidx10 = getelementptr inbounds i32, i32* %14, i64 %idxprom9, !dbg !1798
  %15 = load i32, i32* %arrayidx10, align 4, !dbg !1798
  %mul11 = mul i32 %11, %15, !dbg !1799
  %shr = ashr i32 %mul11, 12, !dbg !1800
  %16 = load i32, i32* %j, align 4, !dbg !1801
  %idxprom12 = sext i32 %16 to i64, !dbg !1802
  %17 = load i32*, i32** %b2, align 8, !dbg !1802
  %arrayidx13 = getelementptr inbounds i32, i32* %17, i64 %idxprom12, !dbg !1802
  %18 = load i32, i32* %arrayidx13, align 4, !dbg !1802
  %add = add nsw i32 %shr, %18, !dbg !1803
  %19 = load i32, i32* %j, align 4, !dbg !1804
  %idxprom14 = sext i32 %19 to i64, !dbg !1805
  %20 = load i32*, i32** %b1, align 8, !dbg !1805
  %arrayidx15 = getelementptr inbounds i32, i32* %20, i64 %idxprom14, !dbg !1805
  store i32 %add, i32* %arrayidx15, align 4, !dbg !1806
  br label %for.inc, !dbg !1805

for.inc:                                          ; preds = %for.body5
  %21 = load i32, i32* %j, align 4, !dbg !1807
  %inc = add nsw i32 %21, 1, !dbg !1807
  store i32 %inc, i32* %j, align 4, !dbg !1807
  br label %for.cond3, !dbg !1809, !llvm.loop !1810

for.end:                                          ; preds = %for.cond3
  br label %do.body, !dbg !1812, !llvm.loop !1813

do.body:                                          ; preds = %for.end
  call void @llvm.dbg.declare(metadata i32** %SWAP_tmp, metadata !1814, metadata !976), !dbg !1816
  %22 = load i32*, i32** %b2, align 8, !dbg !1817
  store i32* %22, i32** %SWAP_tmp, align 8, !dbg !1819
  %23 = load i32*, i32** %b1, align 8, !dbg !1820
  store i32* %23, i32** %b2, align 8, !dbg !1821
  %24 = load i32*, i32** %SWAP_tmp, align 8, !dbg !1822
  store i32* %24, i32** %b1, align 8, !dbg !1823
  br label %do.end, !dbg !1824

do.end:                                           ; preds = %do.body
  br label %for.inc16, !dbg !1825

for.inc16:                                        ; preds = %do.end
  %25 = load i32, i32* %i, align 4, !dbg !1826
  %inc17 = add nsw i32 %25, 1, !dbg !1826
  store i32 %inc17, i32* %i, align 4, !dbg !1826
  br label %for.cond, !dbg !1828, !llvm.loop !1829

for.end18:                                        ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !1831
  br label %for.cond19, !dbg !1833

for.cond19:                                       ; preds = %for.inc25, %for.end18
  %26 = load i32, i32* %i, align 4, !dbg !1834
  %cmp20 = icmp slt i32 %26, 10, !dbg !1837
  br i1 %cmp20, label %for.body21, label %for.end27, !dbg !1838

for.body21:                                       ; preds = %for.cond19
  %27 = load i32, i32* %i, align 4, !dbg !1839
  %idxprom22 = sext i32 %27 to i64, !dbg !1840
  %28 = load i32*, i32** %coefs.addr, align 8, !dbg !1840
  %arrayidx23 = getelementptr inbounds i32, i32* %28, i64 %idxprom22, !dbg !1840
  %29 = load i32, i32* %arrayidx23, align 4, !dbg !1841
  %shr24 = ashr i32 %29, 4, !dbg !1841
  store i32 %shr24, i32* %arrayidx23, align 4, !dbg !1841
  br label %for.inc25, !dbg !1840

for.inc25:                                        ; preds = %for.body21
  %30 = load i32, i32* %i, align 4, !dbg !1842
  %inc26 = add nsw i32 %30, 1, !dbg !1842
  store i32 %inc26, i32* %i, align 4, !dbg !1842
  br label %for.cond19, !dbg !1844, !llvm.loop !1845

for.end27:                                        ; preds = %for.cond19
  ret void, !dbg !1847
}

; Function Attrs: nounwind uwtable
define void @ff_int_to_int16(i16* %out, i32* %inp) #0 !dbg !1848 {
entry:
  %out.addr = alloca i16*, align 8
  %inp.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  store i16* %out, i16** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %out.addr, metadata !1851, metadata !976), !dbg !1852
  store i32* %inp, i32** %inp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %inp.addr, metadata !1853, metadata !976), !dbg !1854
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1855, metadata !976), !dbg !1856
  store i32 0, i32* %i, align 4, !dbg !1857
  br label %for.cond, !dbg !1859

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !1860
  %cmp = icmp slt i32 %0, 10, !dbg !1863
  br i1 %cmp, label %for.body, label %for.end, !dbg !1864

for.body:                                         ; preds = %for.cond
  %1 = load i32*, i32** %inp.addr, align 8, !dbg !1865
  %incdec.ptr = getelementptr inbounds i32, i32* %1, i32 1, !dbg !1865
  store i32* %incdec.ptr, i32** %inp.addr, align 8, !dbg !1865
  %2 = load i32, i32* %1, align 4, !dbg !1866
  %conv = trunc i32 %2 to i16, !dbg !1866
  %3 = load i16*, i16** %out.addr, align 8, !dbg !1867
  %incdec.ptr1 = getelementptr inbounds i16, i16* %3, i32 1, !dbg !1867
  store i16* %incdec.ptr1, i16** %out.addr, align 8, !dbg !1867
  store i16 %conv, i16* %3, align 2, !dbg !1868
  br label %for.inc, !dbg !1869

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !1870
  %inc = add nsw i32 %4, 1, !dbg !1870
  store i32 %inc, i32* %i, align 4, !dbg !1870
  br label %for.cond, !dbg !1872, !llvm.loop !1873

for.end:                                          ; preds = %for.cond
  ret void, !dbg !1875
}

; Function Attrs: nounwind uwtable
define i32 @ff_t_sqrt(i32 %x) #0 !dbg !1876 {
entry:
  %x.addr = alloca i32, align 4
  %s = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !1879, metadata !976), !dbg !1880
  call void @llvm.dbg.declare(metadata i32* %s, metadata !1881, metadata !976), !dbg !1882
  store i32 2, i32* %s, align 4, !dbg !1882
  br label %while.cond, !dbg !1883

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %x.addr, align 4, !dbg !1884
  %cmp = icmp ugt i32 %0, 4095, !dbg !1886
  br i1 %cmp, label %while.body, label %while.end, !dbg !1887

while.body:                                       ; preds = %while.cond
  %1 = load i32, i32* %s, align 4, !dbg !1888
  %inc = add nsw i32 %1, 1, !dbg !1888
  store i32 %inc, i32* %s, align 4, !dbg !1888
  %2 = load i32, i32* %x.addr, align 4, !dbg !1890
  %shr = lshr i32 %2, 2, !dbg !1890
  store i32 %shr, i32* %x.addr, align 4, !dbg !1890
  br label %while.cond, !dbg !1891, !llvm.loop !1893

while.end:                                        ; preds = %while.cond
  %3 = load i32, i32* %x.addr, align 4, !dbg !1894
  %shl = shl i32 %3, 20, !dbg !1895
  %call = call i32 @ff_sqrt(i32 %shl) #1, !dbg !1896
  %4 = load i32, i32* %s, align 4, !dbg !1897
  %shl1 = shl i32 %call, %4, !dbg !1898
  ret i32 %shl1, !dbg !1899
}

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i32 @ff_sqrt(i32 %a) #4 !dbg !1900 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i32, align 4
  %b = alloca i32, align 4
  %s = alloca i32, align 4
  %c = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !1904, metadata !976), !dbg !1905
  call void @llvm.dbg.declare(metadata i32* %b, metadata !1906, metadata !976), !dbg !1907
  %0 = load i32, i32* %a.addr, align 4, !dbg !1908
  %cmp = icmp ult i32 %0, 255, !dbg !1910
  br i1 %cmp, label %if.then, label %if.else, !dbg !1911

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %a.addr, align 4, !dbg !1912
  %add = add i32 %1, 1, !dbg !1914
  %idxprom = zext i32 %add to i64, !dbg !1915
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @ff_sqrt_tab, i64 0, i64 %idxprom, !dbg !1915
  %2 = load i8, i8* %arrayidx, align 1, !dbg !1915
  %conv = zext i8 %2 to i32, !dbg !1915
  %sub = sub nsw i32 %conv, 1, !dbg !1916
  %shr = ashr i32 %sub, 4, !dbg !1917
  store i32 %shr, i32* %retval, align 4, !dbg !1918
  br label %return, !dbg !1918

if.else:                                          ; preds = %entry
  %3 = load i32, i32* %a.addr, align 4, !dbg !1919
  %cmp1 = icmp ult i32 %3, 4096, !dbg !1921
  br i1 %cmp1, label %if.then3, label %if.else9, !dbg !1922

if.then3:                                         ; preds = %if.else
  %4 = load i32, i32* %a.addr, align 4, !dbg !1923
  %shr4 = lshr i32 %4, 4, !dbg !1925
  %idxprom5 = zext i32 %shr4 to i64, !dbg !1926
  %arrayidx6 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_sqrt_tab, i64 0, i64 %idxprom5, !dbg !1926
  %5 = load i8, i8* %arrayidx6, align 1, !dbg !1926
  %conv7 = zext i8 %5 to i32, !dbg !1926
  %shr8 = ashr i32 %conv7, 2, !dbg !1927
  store i32 %shr8, i32* %b, align 4, !dbg !1928
  br label %if.end45, !dbg !1929

if.else9:                                         ; preds = %if.else
  %6 = load i32, i32* %a.addr, align 4, !dbg !1930
  %cmp10 = icmp ult i32 %6, 16384, !dbg !1932
  br i1 %cmp10, label %if.then12, label %if.else18, !dbg !1933

if.then12:                                        ; preds = %if.else9
  %7 = load i32, i32* %a.addr, align 4, !dbg !1934
  %shr13 = lshr i32 %7, 6, !dbg !1936
  %idxprom14 = zext i32 %shr13 to i64, !dbg !1937
  %arrayidx15 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_sqrt_tab, i64 0, i64 %idxprom14, !dbg !1937
  %8 = load i8, i8* %arrayidx15, align 1, !dbg !1937
  %conv16 = zext i8 %8 to i32, !dbg !1937
  %shr17 = ashr i32 %conv16, 1, !dbg !1938
  store i32 %shr17, i32* %b, align 4, !dbg !1939
  br label %if.end44, !dbg !1940

if.else18:                                        ; preds = %if.else9
  %9 = load i32, i32* %a.addr, align 4, !dbg !1941
  %cmp19 = icmp ult i32 %9, 65536, !dbg !1943
  br i1 %cmp19, label %if.then21, label %if.else26, !dbg !1944

if.then21:                                        ; preds = %if.else18
  %10 = load i32, i32* %a.addr, align 4, !dbg !1945
  %shr22 = lshr i32 %10, 8, !dbg !1947
  %idxprom23 = zext i32 %shr22 to i64, !dbg !1948
  %arrayidx24 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_sqrt_tab, i64 0, i64 %idxprom23, !dbg !1948
  %11 = load i8, i8* %arrayidx24, align 1, !dbg !1948
  %conv25 = zext i8 %11 to i32, !dbg !1948
  store i32 %conv25, i32* %b, align 4, !dbg !1949
  br label %if.end, !dbg !1950

if.else26:                                        ; preds = %if.else18
  call void @llvm.dbg.declare(metadata i32* %s, metadata !1951, metadata !976), !dbg !1953
  %12 = load i32, i32* %a.addr, align 4, !dbg !1954
  %shr27 = lshr i32 %12, 16, !dbg !1955
  %or = or i32 %shr27, 1, !dbg !1956
  %13 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !1957
  %sub28 = sub nsw i32 31, %13, !dbg !1958
  %shr29 = ashr i32 %sub28, 1, !dbg !1959
  store i32 %shr29, i32* %s, align 4, !dbg !1953
  call void @llvm.dbg.declare(metadata i32* %c, metadata !1960, metadata !976), !dbg !1961
  %14 = load i32, i32* %a.addr, align 4, !dbg !1962
  %15 = load i32, i32* %s, align 4, !dbg !1963
  %add30 = add nsw i32 %15, 2, !dbg !1964
  %shr31 = lshr i32 %14, %add30, !dbg !1965
  store i32 %shr31, i32* %c, align 4, !dbg !1961
  %16 = load i32, i32* %c, align 4, !dbg !1966
  %17 = load i32, i32* %s, align 4, !dbg !1967
  %add32 = add nsw i32 %17, 8, !dbg !1968
  %shr33 = lshr i32 %16, %add32, !dbg !1969
  %idxprom34 = zext i32 %shr33 to i64, !dbg !1970
  %arrayidx35 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_sqrt_tab, i64 0, i64 %idxprom34, !dbg !1970
  %18 = load i8, i8* %arrayidx35, align 1, !dbg !1970
  %conv36 = zext i8 %18 to i32, !dbg !1970
  store i32 %conv36, i32* %b, align 4, !dbg !1971
  %19 = load i32, i32* %c, align 4, !dbg !1972
  %conv37 = zext i32 %19 to i64, !dbg !1973
  %20 = load i32, i32* %b, align 4, !dbg !1974
  %idxprom38 = zext i32 %20 to i64, !dbg !1975
  %arrayidx39 = getelementptr inbounds [257 x i32], [257 x i32]* @ff_inverse, i64 0, i64 %idxprom38, !dbg !1975
  %21 = load i32, i32* %arrayidx39, align 4, !dbg !1975
  %conv40 = zext i32 %21 to i64, !dbg !1975
  %mul = mul i64 %conv37, %conv40, !dbg !1976
  %shr41 = lshr i64 %mul, 32, !dbg !1977
  %conv42 = trunc i64 %shr41 to i32, !dbg !1978
  %22 = load i32, i32* %b, align 4, !dbg !1979
  %23 = load i32, i32* %s, align 4, !dbg !1980
  %shl = shl i32 %22, %23, !dbg !1981
  %add43 = add i32 %conv42, %shl, !dbg !1982
  store i32 %add43, i32* %b, align 4, !dbg !1983
  br label %if.end

if.end:                                           ; preds = %if.else26, %if.then21
  br label %if.end44

if.end44:                                         ; preds = %if.end, %if.then12
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.then3
  br label %if.end46

if.end46:                                         ; preds = %if.end45
  %24 = load i32, i32* %b, align 4, !dbg !1984
  %25 = load i32, i32* %a.addr, align 4, !dbg !1985
  %26 = load i32, i32* %b, align 4, !dbg !1986
  %27 = load i32, i32* %b, align 4, !dbg !1987
  %mul47 = mul i32 %26, %27, !dbg !1988
  %cmp48 = icmp ult i32 %25, %mul47, !dbg !1989
  %conv49 = zext i1 %cmp48 to i32, !dbg !1989
  %sub50 = sub i32 %24, %conv49, !dbg !1990
  store i32 %sub50, i32* %retval, align 4, !dbg !1991
  br label %return, !dbg !1991

return:                                           ; preds = %if.end46, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !1992
  ret i32 %28, !dbg !1992
}

; Function Attrs: nounwind uwtable
define i32 @ff_rms(i32* %data) #0 !dbg !1993 {
entry:
  %retval = alloca i32, align 4
  %data.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %res = alloca i32, align 4
  %b = alloca i32, align 4
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !1996, metadata !976), !dbg !1997
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1998, metadata !976), !dbg !1999
  call void @llvm.dbg.declare(metadata i32* %res, metadata !2000, metadata !976), !dbg !2001
  store i32 65536, i32* %res, align 4, !dbg !2001
  call void @llvm.dbg.declare(metadata i32* %b, metadata !2002, metadata !976), !dbg !2003
  store i32 10, i32* %b, align 4, !dbg !2003
  store i32 0, i32* %i, align 4, !dbg !2004
  br label %for.cond, !dbg !2006

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !2007
  %cmp = icmp slt i32 %0, 10, !dbg !2010
  br i1 %cmp, label %for.body, label %for.end, !dbg !2011

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !2012
  %idxprom = sext i32 %1 to i64, !dbg !2014
  %2 = load i32*, i32** %data.addr, align 8, !dbg !2014
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom, !dbg !2014
  %3 = load i32, i32* %arrayidx, align 4, !dbg !2014
  %4 = load i32, i32* %i, align 4, !dbg !2015
  %idxprom1 = sext i32 %4 to i64, !dbg !2016
  %5 = load i32*, i32** %data.addr, align 8, !dbg !2016
  %arrayidx2 = getelementptr inbounds i32, i32* %5, i64 %idxprom1, !dbg !2016
  %6 = load i32, i32* %arrayidx2, align 4, !dbg !2016
  %mul = mul nsw i32 %3, %6, !dbg !2017
  %sub = sub nsw i32 16777216, %mul, !dbg !2018
  %shr = ashr i32 %sub, 12, !dbg !2019
  %7 = load i32, i32* %res, align 4, !dbg !2020
  %mul3 = mul i32 %shr, %7, !dbg !2021
  %shr4 = lshr i32 %mul3, 12, !dbg !2022
  store i32 %shr4, i32* %res, align 4, !dbg !2023
  %8 = load i32, i32* %res, align 4, !dbg !2024
  %cmp5 = icmp eq i32 %8, 0, !dbg !2026
  br i1 %cmp5, label %if.then, label %if.end, !dbg !2027

if.then:                                          ; preds = %for.body
  store i32 0, i32* %retval, align 4, !dbg !2028
  br label %return, !dbg !2028

if.end:                                           ; preds = %for.body
  br label %while.cond, !dbg !2029

while.cond:                                       ; preds = %while.body, %if.end
  %9 = load i32, i32* %res, align 4, !dbg !2030
  %cmp6 = icmp ule i32 %9, 16383, !dbg !2032
  br i1 %cmp6, label %while.body, label %while.end, !dbg !2033

while.body:                                       ; preds = %while.cond
  %10 = load i32, i32* %b, align 4, !dbg !2034
  %inc = add nsw i32 %10, 1, !dbg !2034
  store i32 %inc, i32* %b, align 4, !dbg !2034
  %11 = load i32, i32* %res, align 4, !dbg !2036
  %shl = shl i32 %11, 2, !dbg !2036
  store i32 %shl, i32* %res, align 4, !dbg !2036
  br label %while.cond, !dbg !2037, !llvm.loop !2039

while.end:                                        ; preds = %while.cond
  br label %for.inc, !dbg !2040

for.inc:                                          ; preds = %while.end
  %12 = load i32, i32* %i, align 4, !dbg !2041
  %inc7 = add nsw i32 %12, 1, !dbg !2041
  store i32 %inc7, i32* %i, align 4, !dbg !2041
  br label %for.cond, !dbg !2043, !llvm.loop !2044

for.end:                                          ; preds = %for.cond
  %13 = load i32, i32* %res, align 4, !dbg !2046
  %call = call i32 @ff_t_sqrt(i32 %13), !dbg !2047
  %14 = load i32, i32* %b, align 4, !dbg !2048
  %shr8 = ashr i32 %call, %14, !dbg !2049
  store i32 %shr8, i32* %retval, align 4, !dbg !2050
  br label %return, !dbg !2050

return:                                           ; preds = %for.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !2051
  ret i32 %15, !dbg !2051
}

; Function Attrs: nounwind uwtable
define i32 @ff_interp(%struct.RA144Context* %ractx, i16* %out, i32 %a, i32 %copyold, i32 %energy) #0 !dbg !2052 {
entry:
  %retval = alloca i32, align 4
  %ractx.addr = alloca %struct.RA144Context*, align 8
  %out.addr = alloca i16*, align 8
  %a.addr = alloca i32, align 4
  %copyold.addr = alloca i32, align 4
  %energy.addr = alloca i32, align 4
  %work = alloca [10 x i32], align 16
  %b = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.RA144Context* %ractx, %struct.RA144Context** %ractx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RA144Context** %ractx.addr, metadata !2176, metadata !976), !dbg !2177
  store i16* %out, i16** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %out.addr, metadata !2178, metadata !976), !dbg !2179
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !2180, metadata !976), !dbg !2181
  store i32 %copyold, i32* %copyold.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %copyold.addr, metadata !2182, metadata !976), !dbg !2183
  store i32 %energy, i32* %energy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %energy.addr, metadata !2184, metadata !976), !dbg !2185
  call void @llvm.dbg.declare(metadata [10 x i32]* %work, metadata !2186, metadata !976), !dbg !2187
  call void @llvm.dbg.declare(metadata i32* %b, metadata !2188, metadata !976), !dbg !2189
  %0 = load i32, i32* %a.addr, align 4, !dbg !2190
  %sub = sub nsw i32 4, %0, !dbg !2191
  store i32 %sub, i32* %b, align 4, !dbg !2189
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2192, metadata !976), !dbg !2193
  store i32 0, i32* %i, align 4, !dbg !2194
  br label %for.cond, !dbg !2196

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !2197
  %cmp = icmp slt i32 %1, 10, !dbg !2200
  br i1 %cmp, label %for.body, label %for.end, !dbg !2201

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %a.addr, align 4, !dbg !2202
  %3 = load i32, i32* %i, align 4, !dbg !2203
  %idxprom = sext i32 %3 to i64, !dbg !2204
  %4 = load %struct.RA144Context*, %struct.RA144Context** %ractx.addr, align 8, !dbg !2204
  %lpc_coef = getelementptr inbounds %struct.RA144Context, %struct.RA144Context* %4, i32 0, i32 7, !dbg !2205
  %arrayidx = getelementptr inbounds [2 x i32*], [2 x i32*]* %lpc_coef, i64 0, i64 0, !dbg !2204
  %5 = load i32*, i32** %arrayidx, align 8, !dbg !2204
  %arrayidx1 = getelementptr inbounds i32, i32* %5, i64 %idxprom, !dbg !2204
  %6 = load i32, i32* %arrayidx1, align 4, !dbg !2204
  %mul = mul i32 %2, %6, !dbg !2206
  %7 = load i32, i32* %b, align 4, !dbg !2207
  %8 = load i32, i32* %i, align 4, !dbg !2208
  %idxprom2 = sext i32 %8 to i64, !dbg !2209
  %9 = load %struct.RA144Context*, %struct.RA144Context** %ractx.addr, align 8, !dbg !2209
  %lpc_coef3 = getelementptr inbounds %struct.RA144Context, %struct.RA144Context* %9, i32 0, i32 7, !dbg !2210
  %arrayidx4 = getelementptr inbounds [2 x i32*], [2 x i32*]* %lpc_coef3, i64 0, i64 1, !dbg !2209
  %10 = load i32*, i32** %arrayidx4, align 8, !dbg !2209
  %arrayidx5 = getelementptr inbounds i32, i32* %10, i64 %idxprom2, !dbg !2209
  %11 = load i32, i32* %arrayidx5, align 4, !dbg !2209
  %mul6 = mul i32 %7, %11, !dbg !2211
  %add = add i32 %mul, %mul6, !dbg !2212
  %shr = lshr i32 %add, 2, !dbg !2213
  %conv = trunc i32 %shr to i16, !dbg !2214
  %12 = load i32, i32* %i, align 4, !dbg !2215
  %idxprom7 = sext i32 %12 to i64, !dbg !2216
  %13 = load i16*, i16** %out.addr, align 8, !dbg !2216
  %arrayidx8 = getelementptr inbounds i16, i16* %13, i64 %idxprom7, !dbg !2216
  store i16 %conv, i16* %arrayidx8, align 2, !dbg !2217
  br label %for.inc, !dbg !2216

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !2218
  %inc = add nsw i32 %14, 1, !dbg !2218
  store i32 %inc, i32* %i, align 4, !dbg !2218
  br label %for.cond, !dbg !2220, !llvm.loop !2221

for.end:                                          ; preds = %for.cond
  %arraydecay = getelementptr inbounds [10 x i32], [10 x i32]* %work, i32 0, i32 0, !dbg !2223
  %15 = load i16*, i16** %out.addr, align 8, !dbg !2225
  %16 = load %struct.RA144Context*, %struct.RA144Context** %ractx.addr, align 8, !dbg !2226
  %avctx = getelementptr inbounds %struct.RA144Context, %struct.RA144Context* %16, i32 0, i32 0, !dbg !2227
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !2227
  %call = call i32 @ff_eval_refl(i32* %arraydecay, i16* %15, %struct.AVCodecContext* %17), !dbg !2228
  %tobool = icmp ne i32 %call, 0, !dbg !2228
  br i1 %tobool, label %if.then, label %if.else, !dbg !2229

if.then:                                          ; preds = %for.end
  %18 = load i16*, i16** %out.addr, align 8, !dbg !2230
  %19 = load i32, i32* %copyold.addr, align 4, !dbg !2232
  %idxprom9 = sext i32 %19 to i64, !dbg !2233
  %20 = load %struct.RA144Context*, %struct.RA144Context** %ractx.addr, align 8, !dbg !2233
  %lpc_coef10 = getelementptr inbounds %struct.RA144Context, %struct.RA144Context* %20, i32 0, i32 7, !dbg !2234
  %arrayidx11 = getelementptr inbounds [2 x i32*], [2 x i32*]* %lpc_coef10, i64 0, i64 %idxprom9, !dbg !2233
  %21 = load i32*, i32** %arrayidx11, align 8, !dbg !2233
  call void @ff_int_to_int16(i16* %18, i32* %21), !dbg !2235
  %22 = load i32, i32* %copyold.addr, align 4, !dbg !2236
  %idxprom12 = sext i32 %22 to i64, !dbg !2237
  %23 = load %struct.RA144Context*, %struct.RA144Context** %ractx.addr, align 8, !dbg !2237
  %lpc_refl_rms = getelementptr inbounds %struct.RA144Context, %struct.RA144Context* %23, i32 0, i32 8, !dbg !2238
  %arrayidx13 = getelementptr inbounds [2 x i32], [2 x i32]* %lpc_refl_rms, i64 0, i64 %idxprom12, !dbg !2237
  %24 = load i32, i32* %arrayidx13, align 4, !dbg !2237
  %25 = load i32, i32* %energy.addr, align 4, !dbg !2239
  %call14 = call i32 @ff_rescale_rms(i32 %24, i32 %25), !dbg !2240
  store i32 %call14, i32* %retval, align 4, !dbg !2241
  br label %return, !dbg !2241

if.else:                                          ; preds = %for.end
  %arraydecay15 = getelementptr inbounds [10 x i32], [10 x i32]* %work, i32 0, i32 0, !dbg !2242
  %call16 = call i32 @ff_rms(i32* %arraydecay15), !dbg !2244
  %26 = load i32, i32* %energy.addr, align 4, !dbg !2245
  %call17 = call i32 @ff_rescale_rms(i32 %call16, i32 %26), !dbg !2246
  store i32 %call17, i32* %retval, align 4, !dbg !2248
  br label %return, !dbg !2248

return:                                           ; preds = %if.else, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !2249
  ret i32 %27, !dbg !2249
}

; Function Attrs: nounwind uwtable
define i32 @ff_rescale_rms(i32 %rms, i32 %energy) #0 !dbg !2250 {
entry:
  %rms.addr = alloca i32, align 4
  %energy.addr = alloca i32, align 4
  store i32 %rms, i32* %rms.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rms.addr, metadata !2253, metadata !976), !dbg !2254
  store i32 %energy, i32* %energy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %energy.addr, metadata !2255, metadata !976), !dbg !2256
  %0 = load i32, i32* %rms.addr, align 4, !dbg !2257
  %1 = load i32, i32* %energy.addr, align 4, !dbg !2258
  %mul = mul i32 %0, %1, !dbg !2259
  %shr = lshr i32 %mul, 10, !dbg !2260
  ret i32 %shr, !dbg !2261
}

; Function Attrs: nounwind uwtable
define i32 @ff_irms(%struct.AudioDSPContext* %adsp, i16* %data) #0 !dbg !2262 {
entry:
  %retval = alloca i32, align 4
  %adsp.addr = alloca %struct.AudioDSPContext*, align 8
  %data.addr = alloca i16*, align 8
  %sum = alloca i32, align 4
  store %struct.AudioDSPContext* %adsp, %struct.AudioDSPContext** %adsp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AudioDSPContext** %adsp.addr, metadata !2266, metadata !976), !dbg !2267
  store i16* %data, i16** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %data.addr, metadata !2268, metadata !976), !dbg !2269
  call void @llvm.dbg.declare(metadata i32* %sum, metadata !2270, metadata !976), !dbg !2271
  %0 = load %struct.AudioDSPContext*, %struct.AudioDSPContext** %adsp.addr, align 8, !dbg !2272
  %scalarproduct_int16 = getelementptr inbounds %struct.AudioDSPContext, %struct.AudioDSPContext* %0, i32 0, i32 0, !dbg !2273
  %1 = load i32 (i16*, i16*, i32)*, i32 (i16*, i16*, i32)** %scalarproduct_int16, align 8, !dbg !2273
  %2 = load i16*, i16** %data.addr, align 8, !dbg !2274
  %3 = load i16*, i16** %data.addr, align 8, !dbg !2275
  %call = call i32 %1(i16* %2, i16* %3, i32 40), !dbg !2272
  store i32 %call, i32* %sum, align 4, !dbg !2271
  %4 = load i32, i32* %sum, align 4, !dbg !2276
  %cmp = icmp eq i32 %4, 0, !dbg !2278
  br i1 %cmp, label %if.then, label %if.end, !dbg !2279

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !2280
  br label %return, !dbg !2280

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %sum, align 4, !dbg !2281
  %call1 = call i32 @ff_t_sqrt(i32 %5), !dbg !2282
  %shr = ashr i32 %call1, 8, !dbg !2283
  %div = sdiv i32 536870912, %shr, !dbg !2284
  store i32 %div, i32* %retval, align 4, !dbg !2285
  br label %return, !dbg !2285

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !2286
  ret i32 %6, !dbg !2286
}

; Function Attrs: nounwind uwtable
define void @ff_subblock_synthesis(%struct.RA144Context* %ractx, i16* %lpc_coefs, i32 %cba_idx, i32 %cb1_idx, i32 %cb2_idx, i32 %gval, i32 %gain) #0 !dbg !2287 {
entry:
  %ractx.addr = alloca %struct.RA144Context*, align 8
  %lpc_coefs.addr = alloca i16*, align 8
  %cba_idx.addr = alloca i32, align 4
  %cb1_idx.addr = alloca i32, align 4
  %cb2_idx.addr = alloca i32, align 4
  %gval.addr = alloca i32, align 4
  %gain.addr = alloca i32, align 4
  %block = alloca i16*, align 8
  %m = alloca [3 x i32], align 4
  store %struct.RA144Context* %ractx, %struct.RA144Context** %ractx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RA144Context** %ractx.addr, metadata !2290, metadata !976), !dbg !2291
  store i16* %lpc_coefs, i16** %lpc_coefs.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %lpc_coefs.addr, metadata !2292, metadata !976), !dbg !2293
  store i32 %cba_idx, i32* %cba_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cba_idx.addr, metadata !2294, metadata !976), !dbg !2295
  store i32 %cb1_idx, i32* %cb1_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cb1_idx.addr, metadata !2296, metadata !976), !dbg !2297
  store i32 %cb2_idx, i32* %cb2_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cb2_idx.addr, metadata !2298, metadata !976), !dbg !2299
  store i32 %gval, i32* %gval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gval.addr, metadata !2300, metadata !976), !dbg !2301
  store i32 %gain, i32* %gain.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gain.addr, metadata !2302, metadata !976), !dbg !2303
  call void @llvm.dbg.declare(metadata i16** %block, metadata !2304, metadata !976), !dbg !2305
  call void @llvm.dbg.declare(metadata [3 x i32]* %m, metadata !2306, metadata !976), !dbg !2309
  %0 = load i32, i32* %cba_idx.addr, align 4, !dbg !2310
  %tobool = icmp ne i32 %0, 0, !dbg !2310
  br i1 %tobool, label %if.then, label %if.else, !dbg !2312

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %cba_idx.addr, align 4, !dbg !2313
  %add = add nsw i32 %1, 19, !dbg !2313
  store i32 %add, i32* %cba_idx.addr, align 4, !dbg !2313
  %2 = load %struct.RA144Context*, %struct.RA144Context** %ractx.addr, align 8, !dbg !2315
  %buffer_a = getelementptr inbounds %struct.RA144Context, %struct.RA144Context* %2, i32 0, i32 13, !dbg !2316
  %arraydecay = getelementptr inbounds [48 x i16], [48 x i16]* %buffer_a, i32 0, i32 0, !dbg !2315
  %3 = load %struct.RA144Context*, %struct.RA144Context** %ractx.addr, align 8, !dbg !2317
  %adapt_cb = getelementptr inbounds %struct.RA144Context, %struct.RA144Context* %3, i32 0, i32 11, !dbg !2318
  %arraydecay1 = getelementptr inbounds [148 x i16], [148 x i16]* %adapt_cb, i32 0, i32 0, !dbg !2317
  %4 = load i32, i32* %cba_idx.addr, align 4, !dbg !2319
  call void @ff_copy_and_dup(i16* %arraydecay, i16* %arraydecay1, i32 %4), !dbg !2320
  %5 = load %struct.RA144Context*, %struct.RA144Context** %ractx.addr, align 8, !dbg !2321
  %adsp = getelementptr inbounds %struct.RA144Context, %struct.RA144Context* %5, i32 0, i32 1, !dbg !2322
  %6 = load %struct.RA144Context*, %struct.RA144Context** %ractx.addr, align 8, !dbg !2323
  %buffer_a2 = getelementptr inbounds %struct.RA144Context, %struct.RA144Context* %6, i32 0, i32 13, !dbg !2324
  %arraydecay3 = getelementptr inbounds [48 x i16], [48 x i16]* %buffer_a2, i32 0, i32 0, !dbg !2323
  %call = call i32 @ff_irms(%struct.AudioDSPContext* %adsp, i16* %arraydecay3), !dbg !2325
  %7 = load i32, i32* %gval.addr, align 4, !dbg !2326
  %mul = mul i32 %call, %7, !dbg !2327
  %shr = lshr i32 %mul, 12, !dbg !2328
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* %m, i64 0, i64 0, !dbg !2329
  store i32 %shr, i32* %arrayidx, align 4, !dbg !2330
  br label %if.end, !dbg !2331

if.else:                                          ; preds = %entry
  %arrayidx4 = getelementptr inbounds [3 x i32], [3 x i32]* %m, i64 0, i64 0, !dbg !2332
  store i32 0, i32* %arrayidx4, align 4, !dbg !2334
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load i32, i32* %cb1_idx.addr, align 4, !dbg !2335
  %idxprom = sext i32 %8 to i64, !dbg !2336
  %arrayidx5 = getelementptr inbounds [128 x i16], [128 x i16]* @ff_cb1_base, i64 0, i64 %idxprom, !dbg !2336
  %9 = load i16, i16* %arrayidx5, align 2, !dbg !2336
  %conv = zext i16 %9 to i32, !dbg !2336
  %10 = load i32, i32* %gval.addr, align 4, !dbg !2337
  %mul6 = mul nsw i32 %conv, %10, !dbg !2338
  %shr7 = ashr i32 %mul6, 8, !dbg !2339
  %arrayidx8 = getelementptr inbounds [3 x i32], [3 x i32]* %m, i64 0, i64 1, !dbg !2340
  store i32 %shr7, i32* %arrayidx8, align 4, !dbg !2341
  %11 = load i32, i32* %cb2_idx.addr, align 4, !dbg !2342
  %idxprom9 = sext i32 %11 to i64, !dbg !2343
  %arrayidx10 = getelementptr inbounds [128 x i16], [128 x i16]* @ff_cb2_base, i64 0, i64 %idxprom9, !dbg !2343
  %12 = load i16, i16* %arrayidx10, align 2, !dbg !2343
  %conv11 = zext i16 %12 to i32, !dbg !2343
  %13 = load i32, i32* %gval.addr, align 4, !dbg !2344
  %mul12 = mul nsw i32 %conv11, %13, !dbg !2345
  %shr13 = ashr i32 %mul12, 8, !dbg !2346
  %arrayidx14 = getelementptr inbounds [3 x i32], [3 x i32]* %m, i64 0, i64 2, !dbg !2347
  store i32 %shr13, i32* %arrayidx14, align 4, !dbg !2348
  %14 = load %struct.RA144Context*, %struct.RA144Context** %ractx.addr, align 8, !dbg !2349
  %adapt_cb15 = getelementptr inbounds %struct.RA144Context, %struct.RA144Context* %14, i32 0, i32 11, !dbg !2350
  %arraydecay16 = getelementptr inbounds [148 x i16], [148 x i16]* %adapt_cb15, i32 0, i32 0, !dbg !2351
  %15 = bitcast i16* %arraydecay16 to i8*, !dbg !2351
  %16 = load %struct.RA144Context*, %struct.RA144Context** %ractx.addr, align 8, !dbg !2352
  %adapt_cb17 = getelementptr inbounds %struct.RA144Context, %struct.RA144Context* %16, i32 0, i32 11, !dbg !2353
  %arraydecay18 = getelementptr inbounds [148 x i16], [148 x i16]* %adapt_cb17, i32 0, i32 0, !dbg !2352
  %add.ptr = getelementptr inbounds i16, i16* %arraydecay18, i64 40, !dbg !2354
  %17 = bitcast i16* %add.ptr to i8*, !dbg !2351
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %15, i8* %17, i64 212, i32 2, i1 false), !dbg !2351
  %18 = load %struct.RA144Context*, %struct.RA144Context** %ractx.addr, align 8, !dbg !2355
  %adapt_cb19 = getelementptr inbounds %struct.RA144Context, %struct.RA144Context* %18, i32 0, i32 11, !dbg !2356
  %arraydecay20 = getelementptr inbounds [148 x i16], [148 x i16]* %adapt_cb19, i32 0, i32 0, !dbg !2355
  %add.ptr21 = getelementptr inbounds i16, i16* %arraydecay20, i64 146, !dbg !2357
  %add.ptr22 = getelementptr inbounds i16, i16* %add.ptr21, i64 -40, !dbg !2358
  store i16* %add.ptr22, i16** %block, align 8, !dbg !2359
  %19 = load i16*, i16** %block, align 8, !dbg !2360
  %20 = load i32, i32* %gain.addr, align 4, !dbg !2361
  %21 = load i32, i32* %cba_idx.addr, align 4, !dbg !2362
  %arraydecay23 = getelementptr inbounds [3 x i32], [3 x i32]* %m, i32 0, i32 0, !dbg !2363
  %22 = load i32, i32* %cba_idx.addr, align 4, !dbg !2364
  %tobool24 = icmp ne i32 %22, 0, !dbg !2364
  br i1 %tobool24, label %cond.true, label %cond.false, !dbg !2364

cond.true:                                        ; preds = %if.end
  %23 = load %struct.RA144Context*, %struct.RA144Context** %ractx.addr, align 8, !dbg !2365
  %buffer_a25 = getelementptr inbounds %struct.RA144Context, %struct.RA144Context* %23, i32 0, i32 13, !dbg !2367
  %arraydecay26 = getelementptr inbounds [48 x i16], [48 x i16]* %buffer_a25, i32 0, i32 0, !dbg !2365
  br label %cond.end, !dbg !2368

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !2369

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i16* [ %arraydecay26, %cond.true ], [ null, %cond.false ], !dbg !2371
  %24 = load i32, i32* %cb1_idx.addr, align 4, !dbg !2373
  %idxprom27 = sext i32 %24 to i64, !dbg !2374
  %arrayidx28 = getelementptr inbounds [128 x [40 x i8]], [128 x [40 x i8]]* @ff_cb1_vects, i64 0, i64 %idxprom27, !dbg !2374
  %arraydecay29 = getelementptr inbounds [40 x i8], [40 x i8]* %arrayidx28, i32 0, i32 0, !dbg !2374
  %25 = load i32, i32* %cb2_idx.addr, align 4, !dbg !2375
  %idxprom30 = sext i32 %25 to i64, !dbg !2376
  %arrayidx31 = getelementptr inbounds [128 x [40 x i8]], [128 x [40 x i8]]* @ff_cb2_vects, i64 0, i64 %idxprom30, !dbg !2376
  %arraydecay32 = getelementptr inbounds [40 x i8], [40 x i8]* %arrayidx31, i32 0, i32 0, !dbg !2376
  call void @add_wav(i16* %19, i32 %20, i32 %21, i32* %arraydecay23, i16* %cond, i8* %arraydecay29, i8* %arraydecay32), !dbg !2377
  %26 = load %struct.RA144Context*, %struct.RA144Context** %ractx.addr, align 8, !dbg !2378
  %curr_sblock = getelementptr inbounds %struct.RA144Context, %struct.RA144Context* %26, i32 0, i32 10, !dbg !2379
  %arraydecay33 = getelementptr inbounds [50 x i16], [50 x i16]* %curr_sblock, i32 0, i32 0, !dbg !2380
  %27 = bitcast i16* %arraydecay33 to i8*, !dbg !2380
  %28 = load %struct.RA144Context*, %struct.RA144Context** %ractx.addr, align 8, !dbg !2381
  %curr_sblock34 = getelementptr inbounds %struct.RA144Context, %struct.RA144Context* %28, i32 0, i32 10, !dbg !2382
  %arraydecay35 = getelementptr inbounds [50 x i16], [50 x i16]* %curr_sblock34, i32 0, i32 0, !dbg !2381
  %add.ptr36 = getelementptr inbounds i16, i16* %arraydecay35, i64 40, !dbg !2383
  %29 = bitcast i16* %add.ptr36 to i8*, !dbg !2380
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %29, i64 20, i32 2, i1 false), !dbg !2380
  %30 = load %struct.RA144Context*, %struct.RA144Context** %ractx.addr, align 8, !dbg !2384
  %curr_sblock37 = getelementptr inbounds %struct.RA144Context, %struct.RA144Context* %30, i32 0, i32 10, !dbg !2386
  %arraydecay38 = getelementptr inbounds [50 x i16], [50 x i16]* %curr_sblock37, i32 0, i32 0, !dbg !2384
  %add.ptr39 = getelementptr inbounds i16, i16* %arraydecay38, i64 10, !dbg !2387
  %31 = load i16*, i16** %lpc_coefs.addr, align 8, !dbg !2388
  %32 = load i16*, i16** %block, align 8, !dbg !2389
  %call40 = call i32 @ff_celp_lp_synthesis_filter(i16* %add.ptr39, i16* %31, i16* %32, i32 40, i32 10, i32 1, i32 0, i32 4095), !dbg !2390
  %tobool41 = icmp ne i32 %call40, 0, !dbg !2390
  br i1 %tobool41, label %if.then42, label %if.end45, !dbg !2391

if.then42:                                        ; preds = %cond.end
  %33 = load %struct.RA144Context*, %struct.RA144Context** %ractx.addr, align 8, !dbg !2392
  %curr_sblock43 = getelementptr inbounds %struct.RA144Context, %struct.RA144Context* %33, i32 0, i32 10, !dbg !2393
  %arraydecay44 = getelementptr inbounds [50 x i16], [50 x i16]* %curr_sblock43, i32 0, i32 0, !dbg !2394
  %34 = bitcast i16* %arraydecay44 to i8*, !dbg !2394
  call void @llvm.memset.p0i8.i64(i8* %34, i8 0, i64 100, i32 16, i1 false), !dbg !2394
  br label %if.end45, !dbg !2394

if.end45:                                         ; preds = %if.then42, %cond.end
  ret void, !dbg !2395
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: nounwind uwtable
define internal void @add_wav(i16* %dest, i32 %n, i32 %skip_first, i32* %m, i16* %s1, i8* %s2, i8* %s3) #0 !dbg !2396 {
entry:
  %dest.addr = alloca i16*, align 8
  %n.addr = alloca i32, align 4
  %skip_first.addr = alloca i32, align 4
  %m.addr = alloca i32*, align 8
  %s1.addr = alloca i16*, align 8
  %s2.addr = alloca i8*, align 8
  %s3.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %v = alloca [3 x i32], align 4
  store i16* %dest, i16** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %dest.addr, metadata !2400, metadata !976), !dbg !2401
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !2402, metadata !976), !dbg !2403
  store i32 %skip_first, i32* %skip_first.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %skip_first.addr, metadata !2404, metadata !976), !dbg !2405
  store i32* %m, i32** %m.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %m.addr, metadata !2406, metadata !976), !dbg !2407
  store i16* %s1, i16** %s1.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %s1.addr, metadata !2408, metadata !976), !dbg !2409
  store i8* %s2, i8** %s2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !2410, metadata !976), !dbg !2411
  store i8* %s3, i8** %s3.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s3.addr, metadata !2412, metadata !976), !dbg !2413
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2414, metadata !976), !dbg !2415
  call void @llvm.dbg.declare(metadata [3 x i32]* %v, metadata !2416, metadata !976), !dbg !2417
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* %v, i64 0, i64 0, !dbg !2418
  store i32 0, i32* %arrayidx, align 4, !dbg !2419
  %0 = load i32, i32* %skip_first.addr, align 4, !dbg !2420
  %tobool = icmp ne i32 %0, 0, !dbg !2422
  %lnot = xor i1 %tobool, true, !dbg !2422
  %lnot.ext = zext i1 %lnot to i32, !dbg !2422
  store i32 %lnot.ext, i32* %i, align 4, !dbg !2423
  br label %for.cond, !dbg !2424

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !2425
  %cmp = icmp slt i32 %1, 3, !dbg !2428
  br i1 %cmp, label %for.body, label %for.end, !dbg !2429

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !2430
  %idxprom = sext i32 %2 to i64, !dbg !2431
  %3 = load i32, i32* %n.addr, align 4, !dbg !2432
  %idxprom1 = sext i32 %3 to i64, !dbg !2431
  %arrayidx2 = getelementptr inbounds [256 x [3 x i16]], [256 x [3 x i16]]* @ff_gain_val_tab, i64 0, i64 %idxprom1, !dbg !2431
  %arrayidx3 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx2, i64 0, i64 %idxprom, !dbg !2431
  %4 = load i16, i16* %arrayidx3, align 2, !dbg !2431
  %conv = sext i16 %4 to i32, !dbg !2431
  %5 = load i32, i32* %i, align 4, !dbg !2433
  %idxprom4 = sext i32 %5 to i64, !dbg !2434
  %6 = load i32*, i32** %m.addr, align 8, !dbg !2434
  %arrayidx5 = getelementptr inbounds i32, i32* %6, i64 %idxprom4, !dbg !2434
  %7 = load i32, i32* %arrayidx5, align 4, !dbg !2434
  %mul = mul i32 %conv, %7, !dbg !2435
  %8 = load i32, i32* %n.addr, align 4, !dbg !2436
  %idxprom6 = sext i32 %8 to i64, !dbg !2437
  %arrayidx7 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_gain_exp_tab, i64 0, i64 %idxprom6, !dbg !2437
  %9 = load i8, i8* %arrayidx7, align 1, !dbg !2437
  %conv8 = zext i8 %9 to i32, !dbg !2437
  %shr = lshr i32 %mul, %conv8, !dbg !2438
  %10 = load i32, i32* %i, align 4, !dbg !2439
  %idxprom9 = sext i32 %10 to i64, !dbg !2440
  %arrayidx10 = getelementptr inbounds [3 x i32], [3 x i32]* %v, i64 0, i64 %idxprom9, !dbg !2440
  store i32 %shr, i32* %arrayidx10, align 4, !dbg !2441
  br label %for.inc, !dbg !2440

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !2442
  %inc = add nsw i32 %11, 1, !dbg !2442
  store i32 %inc, i32* %i, align 4, !dbg !2442
  br label %for.cond, !dbg !2444, !llvm.loop !2445

for.end:                                          ; preds = %for.cond
  %arrayidx11 = getelementptr inbounds [3 x i32], [3 x i32]* %v, i64 0, i64 0, !dbg !2447
  %12 = load i32, i32* %arrayidx11, align 4, !dbg !2447
  %tobool12 = icmp ne i32 %12, 0, !dbg !2447
  br i1 %tobool12, label %if.then, label %if.else, !dbg !2449

if.then:                                          ; preds = %for.end
  store i32 0, i32* %i, align 4, !dbg !2450
  br label %for.cond13, !dbg !2453

for.cond13:                                       ; preds = %for.inc37, %if.then
  %13 = load i32, i32* %i, align 4, !dbg !2454
  %cmp14 = icmp slt i32 %13, 40, !dbg !2457
  br i1 %cmp14, label %for.body16, label %for.end39, !dbg !2458

for.body16:                                       ; preds = %for.cond13
  %14 = load i32, i32* %i, align 4, !dbg !2459
  %idxprom17 = sext i32 %14 to i64, !dbg !2460
  %15 = load i16*, i16** %s1.addr, align 8, !dbg !2460
  %arrayidx18 = getelementptr inbounds i16, i16* %15, i64 %idxprom17, !dbg !2460
  %16 = load i16, i16* %arrayidx18, align 2, !dbg !2460
  %conv19 = sext i16 %16 to i32, !dbg !2460
  %arrayidx20 = getelementptr inbounds [3 x i32], [3 x i32]* %v, i64 0, i64 0, !dbg !2461
  %17 = load i32, i32* %arrayidx20, align 4, !dbg !2461
  %mul21 = mul i32 %conv19, %17, !dbg !2462
  %18 = load i32, i32* %i, align 4, !dbg !2463
  %idxprom22 = sext i32 %18 to i64, !dbg !2464
  %19 = load i8*, i8** %s2.addr, align 8, !dbg !2464
  %arrayidx23 = getelementptr inbounds i8, i8* %19, i64 %idxprom22, !dbg !2464
  %20 = load i8, i8* %arrayidx23, align 1, !dbg !2464
  %conv24 = sext i8 %20 to i32, !dbg !2464
  %arrayidx25 = getelementptr inbounds [3 x i32], [3 x i32]* %v, i64 0, i64 1, !dbg !2465
  %21 = load i32, i32* %arrayidx25, align 4, !dbg !2465
  %mul26 = mul nsw i32 %conv24, %21, !dbg !2466
  %add = add i32 %mul21, %mul26, !dbg !2467
  %22 = load i32, i32* %i, align 4, !dbg !2468
  %idxprom27 = sext i32 %22 to i64, !dbg !2469
  %23 = load i8*, i8** %s3.addr, align 8, !dbg !2469
  %arrayidx28 = getelementptr inbounds i8, i8* %23, i64 %idxprom27, !dbg !2469
  %24 = load i8, i8* %arrayidx28, align 1, !dbg !2469
  %conv29 = sext i8 %24 to i32, !dbg !2469
  %arrayidx30 = getelementptr inbounds [3 x i32], [3 x i32]* %v, i64 0, i64 2, !dbg !2470
  %25 = load i32, i32* %arrayidx30, align 4, !dbg !2470
  %mul31 = mul nsw i32 %conv29, %25, !dbg !2471
  %add32 = add i32 %add, %mul31, !dbg !2472
  %shr33 = ashr i32 %add32, 12, !dbg !2473
  %conv34 = trunc i32 %shr33 to i16, !dbg !2474
  %26 = load i32, i32* %i, align 4, !dbg !2475
  %idxprom35 = sext i32 %26 to i64, !dbg !2476
  %27 = load i16*, i16** %dest.addr, align 8, !dbg !2476
  %arrayidx36 = getelementptr inbounds i16, i16* %27, i64 %idxprom35, !dbg !2476
  store i16 %conv34, i16* %arrayidx36, align 2, !dbg !2477
  br label %for.inc37, !dbg !2476

for.inc37:                                        ; preds = %for.body16
  %28 = load i32, i32* %i, align 4, !dbg !2478
  %inc38 = add nsw i32 %28, 1, !dbg !2478
  store i32 %inc38, i32* %i, align 4, !dbg !2478
  br label %for.cond13, !dbg !2480, !llvm.loop !2481

for.end39:                                        ; preds = %for.cond13
  br label %if.end, !dbg !2483

if.else:                                          ; preds = %for.end
  store i32 0, i32* %i, align 4, !dbg !2484
  br label %for.cond40, !dbg !2487

for.cond40:                                       ; preds = %for.inc59, %if.else
  %29 = load i32, i32* %i, align 4, !dbg !2488
  %cmp41 = icmp slt i32 %29, 40, !dbg !2491
  br i1 %cmp41, label %for.body43, label %for.end61, !dbg !2492

for.body43:                                       ; preds = %for.cond40
  %30 = load i32, i32* %i, align 4, !dbg !2493
  %idxprom44 = sext i32 %30 to i64, !dbg !2494
  %31 = load i8*, i8** %s2.addr, align 8, !dbg !2494
  %arrayidx45 = getelementptr inbounds i8, i8* %31, i64 %idxprom44, !dbg !2494
  %32 = load i8, i8* %arrayidx45, align 1, !dbg !2494
  %conv46 = sext i8 %32 to i32, !dbg !2494
  %arrayidx47 = getelementptr inbounds [3 x i32], [3 x i32]* %v, i64 0, i64 1, !dbg !2495
  %33 = load i32, i32* %arrayidx47, align 4, !dbg !2495
  %mul48 = mul nsw i32 %conv46, %33, !dbg !2496
  %34 = load i32, i32* %i, align 4, !dbg !2497
  %idxprom49 = sext i32 %34 to i64, !dbg !2498
  %35 = load i8*, i8** %s3.addr, align 8, !dbg !2498
  %arrayidx50 = getelementptr inbounds i8, i8* %35, i64 %idxprom49, !dbg !2498
  %36 = load i8, i8* %arrayidx50, align 1, !dbg !2498
  %conv51 = sext i8 %36 to i32, !dbg !2498
  %arrayidx52 = getelementptr inbounds [3 x i32], [3 x i32]* %v, i64 0, i64 2, !dbg !2499
  %37 = load i32, i32* %arrayidx52, align 4, !dbg !2499
  %mul53 = mul nsw i32 %conv51, %37, !dbg !2500
  %add54 = add nsw i32 %mul48, %mul53, !dbg !2501
  %shr55 = ashr i32 %add54, 12, !dbg !2502
  %conv56 = trunc i32 %shr55 to i16, !dbg !2503
  %38 = load i32, i32* %i, align 4, !dbg !2504
  %idxprom57 = sext i32 %38 to i64, !dbg !2505
  %39 = load i16*, i16** %dest.addr, align 8, !dbg !2505
  %arrayidx58 = getelementptr inbounds i16, i16* %39, i64 %idxprom57, !dbg !2505
  store i16 %conv56, i16* %arrayidx58, align 2, !dbg !2506
  br label %for.inc59, !dbg !2505

for.inc59:                                        ; preds = %for.body43
  %40 = load i32, i32* %i, align 4, !dbg !2507
  %inc60 = add nsw i32 %40, 1, !dbg !2507
  store i32 %inc60, i32* %i, align 4, !dbg !2507
  br label %for.cond40, !dbg !2509, !llvm.loop !2510

for.end61:                                        ; preds = %for.cond40
  br label %if.end

if.end:                                           ; preds = %for.end61, %for.end39
  ret void, !dbg !2512
}

declare i32 @ff_celp_lp_synthesis_filter(i16*, i16*, i16*, i32, i32, i32, i32, i32) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #2

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind readnone uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!967, !968}
!llvm.ident = !{!969}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !896, globals: !903)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--ra144.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2 = !{!3, !24, !34, !494, !694, !711, !717, !747, !757, !781, !787, !805, !829, !848, !858, !866, !878, !887}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 29, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23}
!6 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!7 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!8 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!9 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!10 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!11 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!12 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!13 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!14 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!15 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!16 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!17 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!18 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!19 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!20 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!21 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!22 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!23 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !25, line: 199, size: 32, align: 32, elements: !26)
!25 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!26 = !{!27, !28, !29, !30, !31, !32, !33}
!27 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!28 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!29 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!30 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!31 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!32 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!33 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!34 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !35, line: 215, size: 32, align: 32, elements: !36)
!35 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!36 = !{!37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493}
!37 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!38 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!39 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!40 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!41 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!42 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!43 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!44 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!45 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!46 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!47 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!48 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!49 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!50 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!51 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!52 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!54 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!55 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!56 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!57 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!58 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!59 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!60 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!61 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!62 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!63 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!64 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!65 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!66 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!67 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!68 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!69 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!70 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!71 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!72 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!73 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!74 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!75 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!76 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!77 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!78 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!79 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!80 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!81 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!82 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!83 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!84 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!85 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!86 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!87 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!88 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!89 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!90 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!91 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!92 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!94 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!95 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!96 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!97 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!98 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!99 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!100 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!101 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!102 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!103 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!104 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!105 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!106 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!108 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!109 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!110 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!111 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!112 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!113 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!114 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!115 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!116 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!117 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!118 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!119 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!120 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!121 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!122 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!123 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!124 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!125 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!126 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!127 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!128 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!129 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!130 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!131 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!132 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!133 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!134 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!135 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!136 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!137 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!138 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!139 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!140 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!141 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!143 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!144 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!145 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!146 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!147 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!148 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!149 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!150 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!151 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!152 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!153 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!154 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!155 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!156 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!157 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!158 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!159 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!160 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!161 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!162 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!163 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!164 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!166 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!167 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!168 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!169 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!170 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!171 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!172 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!173 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!174 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!175 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!176 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!177 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!178 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!179 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!180 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!181 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!183 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!184 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!185 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!186 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!188 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!189 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!190 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!191 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!192 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!193 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!194 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!195 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!196 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!197 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!200 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!201 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!202 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!203 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!204 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!205 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!206 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!207 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!208 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!209 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!210 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!211 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!212 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!213 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!214 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!215 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!216 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!217 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!218 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!219 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!220 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!221 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!222 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!223 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!224 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!225 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!226 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!227 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!228 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!229 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!230 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!231 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!232 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!233 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!234 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!235 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!236 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!237 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!238 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!239 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!240 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!241 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!243 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!244 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!245 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!246 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!247 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!248 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!249 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!250 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!251 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!252 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!254 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!255 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!256 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!257 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!258 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!259 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!260 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!261 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!262 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!263 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!264 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!265 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!266 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!268 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!269 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!270 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!271 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!272 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!273 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!279 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!289 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!290 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!291 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!292 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!293 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!294 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!295 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!296 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!297 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!298 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!299 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!300 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!301 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!302 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!303 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!304 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!305 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!306 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!307 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!308 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!309 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!330 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!331 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!332 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!333 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!335 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!336 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!337 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!338 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!339 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!340 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!341 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!342 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!343 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!344 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!345 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!346 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!347 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!348 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!349 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!350 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!351 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!352 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!353 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!354 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!355 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!356 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!357 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!358 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!359 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!360 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!361 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!362 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!363 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!364 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!365 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!366 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!367 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!368 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!369 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!370 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!371 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!372 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!373 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!375 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!376 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!377 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!379 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!380 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!381 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!382 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!384 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!385 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!386 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!387 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!388 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!389 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!390 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!391 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!392 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!393 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!394 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!395 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!396 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!397 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!398 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!399 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!400 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!401 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!402 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!403 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!404 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!405 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!406 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!407 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!408 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!409 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!410 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!411 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!412 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!413 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!414 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!415 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!416 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!417 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!418 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!419 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!420 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!421 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!422 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!423 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!424 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!425 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!426 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!427 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!428 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!429 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!430 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!431 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!432 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!433 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!434 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!435 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!436 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!437 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!438 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!439 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!440 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!441 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!442 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!443 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!444 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!445 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!446 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!447 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!449 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!450 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!451 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!452 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!453 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!454 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!455 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!456 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!457 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!458 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!459 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!460 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!461 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!462 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!463 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!465 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!466 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!467 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!468 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!469 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!470 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!471 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!472 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!473 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!474 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!475 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!476 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!477 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!478 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!479 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!480 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!481 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!482 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!483 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!484 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!485 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!486 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!487 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!488 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!489 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!490 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!491 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!492 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!493 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!494 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !495, line: 64, size: 32, align: 32, elements: !496)
!495 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!496 = !{!497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693}
!497 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!498 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!499 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!500 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!501 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!502 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!503 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!504 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!505 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!507 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!508 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!509 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!511 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!512 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!513 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!514 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!515 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!516 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!518 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!519 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!520 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!521 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!522 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!523 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!524 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!525 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!526 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!527 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!528 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!531 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!534 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!535 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!536 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!537 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!538 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!541 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!542 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!543 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!544 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!545 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!552 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!553 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!554 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!555 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!556 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!557 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!558 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!560 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!561 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!574 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!575 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!576 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!577 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!578 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!579 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!580 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!581 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!582 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!583 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!584 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!585 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!586 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!587 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!588 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!589 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!590 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!594 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!595 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!596 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!597 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!598 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!599 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!600 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!601 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!602 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!603 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!604 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!605 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!606 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!607 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!608 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!609 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!610 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!611 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!615 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!616 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!618 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!619 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!620 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!621 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!622 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!623 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!624 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!626 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!627 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!628 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!629 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!630 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!631 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!632 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!633 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!634 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!638 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!639 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!640 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!641 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!642 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!643 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!644 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!645 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!646 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!647 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!648 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!649 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!650 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!651 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!652 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!653 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!654 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!655 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!656 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!657 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!658 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!659 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!660 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!661 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!662 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!663 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!664 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!668 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!669 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!670 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!671 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!672 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!673 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!674 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!675 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!676 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!677 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!678 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!679 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!680 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!681 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!682 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!683 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!684 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!685 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!686 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!687 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!688 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!689 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!690 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!691 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!692 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!693 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!694 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !695, line: 58, size: 32, align: 32, elements: !696)
!695 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!696 = !{!697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710}
!697 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!698 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!699 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!700 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!701 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!702 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!703 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!704 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!705 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!706 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!707 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!708 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!709 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!710 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !35, line: 3865, size: 32, align: 32, elements: !712)
!712 = !{!713, !714, !715, !716}
!713 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!714 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!715 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!716 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!717 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !35, line: 1175, size: 32, align: 32, elements: !718)
!718 = !{!719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746}
!719 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!720 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!721 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!722 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!723 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!724 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!725 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!726 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!727 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!728 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!729 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!730 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!731 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!732 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!733 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!734 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!735 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!736 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!737 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!738 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!739 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!740 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!741 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!742 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!743 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!744 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!745 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!746 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!747 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !25, line: 272, size: 32, align: 32, elements: !748)
!748 = !{!749, !750, !751, !752, !753, !754, !755, !756}
!749 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!750 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!751 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!752 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!753 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!754 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!755 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!756 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!757 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !758, line: 48, size: 32, align: 32, elements: !759)
!758 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!759 = !{!760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780}
!760 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!761 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!762 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!763 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!764 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!765 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!766 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!767 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!768 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!769 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!770 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!771 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!772 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!773 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!774 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!775 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!776 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!777 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!778 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!779 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!780 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!781 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !495, line: 516, size: 32, align: 32, elements: !782)
!782 = !{!783, !784, !785, !786}
!783 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!784 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!785 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!786 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!787 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !495, line: 440, size: 32, align: 32, elements: !788)
!788 = !{!789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804}
!789 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!790 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!791 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!792 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!793 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!794 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!795 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!796 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!797 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!798 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!799 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!800 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!801 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!802 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!803 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!804 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!805 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !495, line: 464, size: 32, align: 32, elements: !806)
!806 = !{!807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828}
!807 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!808 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!809 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!810 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!811 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!812 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!813 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!814 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!815 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!816 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!817 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!818 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!819 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!820 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!821 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!822 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!823 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!824 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!825 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!826 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!827 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!828 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!829 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !495, line: 493, size: 32, align: 32, elements: !830)
!830 = !{!831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847}
!831 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!832 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!833 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!834 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!835 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!836 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!837 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!838 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!839 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!840 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!841 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!842 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!843 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!844 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!845 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!846 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!847 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!848 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !495, line: 538, size: 32, align: 32, elements: !849)
!849 = !{!850, !851, !852, !853, !854, !855, !856, !857}
!850 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!851 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!852 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!853 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!854 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!855 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!856 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!857 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!858 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !35, line: 1534, size: 32, align: 32, elements: !859)
!859 = !{!860, !861, !862, !863, !864, !865}
!860 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!861 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!862 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!863 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!864 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!865 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!866 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !35, line: 810, size: 32, align: 32, elements: !867)
!867 = !{!868, !869, !870, !871, !872, !873, !874, !875, !876, !877}
!868 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!869 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!870 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!871 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!872 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!873 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!874 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!875 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!876 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!877 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!878 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !35, line: 798, size: 32, align: 32, elements: !879)
!879 = !{!880, !881, !882, !883, !884, !885, !886}
!880 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!881 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!882 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!883 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!884 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!885 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!886 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!887 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "FFLPCType", file: !888, line: 43, size: 32, align: 32, elements: !889)
!888 = !DIFile(filename: "libavcodec/lpc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!889 = !{!890, !891, !892, !893, !894, !895}
!890 = !DIEnumerator(name: "FF_LPC_TYPE_DEFAULT", value: -1)
!891 = !DIEnumerator(name: "FF_LPC_TYPE_NONE", value: 0)
!892 = !DIEnumerator(name: "FF_LPC_TYPE_FIXED", value: 1)
!893 = !DIEnumerator(name: "FF_LPC_TYPE_LEVINSON", value: 2)
!894 = !DIEnumerator(name: "FF_LPC_TYPE_CHOLESKY", value: 3)
!895 = !DIEnumerator(name: "FF_LPC_TYPE_NB", value: 4)
!896 = !{!897, !898, !899, !901}
!897 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!898 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!899 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !900, line: 51, baseType: !897)
!900 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!901 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !900, line: 55, baseType: !902)
!902 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!903 = !{!904, !913, !919, !927, !928, !934, !935, !939, !945, !949, !950, !951, !955, !956, !960, !961, !962, !963}
!904 = distinct !DIGlobalVariable(name: "ff_gain_val_tab", scope: !0, file: !905, line: 28, type: !906, isLocal: false, isDefinition: true, variable: [256 x [3 x i16]]* @ff_gain_val_tab)
!905 = !DIFile(filename: "libavcodec/ra144.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!906 = !DICompositeType(tag: DW_TAG_array_type, baseType: !907, size: 12288, align: 16, elements: !910)
!907 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !908)
!908 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !900, line: 37, baseType: !909)
!909 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!910 = !{!911, !912}
!911 = !DISubrange(count: 256)
!912 = !DISubrange(count: 3)
!913 = distinct !DIGlobalVariable(name: "ff_gain_exp_tab", scope: !0, file: !905, line: 95, type: !914, isLocal: false, isDefinition: true, variable: [256 x i8]* @ff_gain_exp_tab)
!914 = !DICompositeType(tag: DW_TAG_array_type, baseType: !915, size: 2048, align: 8, elements: !918)
!915 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !916)
!916 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !900, line: 48, baseType: !917)
!917 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!918 = !{!911}
!919 = distinct !DIGlobalVariable(name: "ff_cb1_vects", scope: !0, file: !905, line: 114, type: !920, isLocal: false, isDefinition: true, variable: [128 x [40 x i8]]* @ff_cb1_vects)
!920 = !DICompositeType(tag: DW_TAG_array_type, baseType: !921, size: 40960, align: 8, elements: !924)
!921 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !922)
!922 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !900, line: 36, baseType: !923)
!923 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!924 = !{!925, !926}
!925 = !DISubrange(count: 128)
!926 = !DISubrange(count: 40)
!927 = distinct !DIGlobalVariable(name: "ff_cb2_vects", scope: !0, file: !905, line: 758, type: !920, isLocal: false, isDefinition: true, variable: [128 x [40 x i8]]* @ff_cb2_vects)
!928 = distinct !DIGlobalVariable(name: "ff_cb1_base", scope: !0, file: !905, line: 1402, type: !929, isLocal: false, isDefinition: true, variable: [128 x i16]* @ff_cb1_base)
!929 = !DICompositeType(tag: DW_TAG_array_type, baseType: !930, size: 2048, align: 16, elements: !933)
!930 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !931)
!931 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !900, line: 49, baseType: !932)
!932 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!933 = !{!925}
!934 = distinct !DIGlobalVariable(name: "ff_cb2_base", scope: !0, file: !905, line: 1421, type: !929, isLocal: false, isDefinition: true, variable: [128 x i16]* @ff_cb2_base)
!935 = distinct !DIGlobalVariable(name: "ff_energy_tab", scope: !0, file: !905, line: 1440, type: !936, isLocal: false, isDefinition: true, variable: [32 x i16]* @ff_energy_tab)
!936 = !DICompositeType(tag: DW_TAG_array_type, baseType: !907, size: 512, align: 16, elements: !937)
!937 = !{!938}
!938 = !DISubrange(count: 32)
!939 = distinct !DIGlobalVariable(name: "ff_lpc_refl_cb", scope: !0, file: !905, line: 1502, type: !940, isLocal: false, isDefinition: true, variable: [10 x i16*]* @ff_lpc_refl_cb)
!940 = !DICompositeType(tag: DW_TAG_array_type, baseType: !941, size: 640, align: 64, elements: !943)
!941 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !942)
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64, align: 64)
!943 = !{!944}
!944 = !DISubrange(count: 10)
!945 = distinct !DIGlobalVariable(name: "lpc_refl_cb1", scope: !0, file: !905, line: 1447, type: !946, isLocal: true, isDefinition: true, variable: [64 x i16]* @lpc_refl_cb1)
!946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !907, size: 1024, align: 16, elements: !947)
!947 = !{!948}
!948 = !DISubrange(count: 64)
!949 = distinct !DIGlobalVariable(name: "lpc_refl_cb2", scope: !0, file: !905, line: 1458, type: !936, isLocal: true, isDefinition: true, variable: [32 x i16]* @lpc_refl_cb2)
!950 = distinct !DIGlobalVariable(name: "lpc_refl_cb3", scope: !0, file: !905, line: 1465, type: !936, isLocal: true, isDefinition: true, variable: [32 x i16]* @lpc_refl_cb3)
!951 = distinct !DIGlobalVariable(name: "lpc_refl_cb4", scope: !0, file: !905, line: 1472, type: !952, isLocal: true, isDefinition: true, variable: [16 x i16]* @lpc_refl_cb4)
!952 = !DICompositeType(tag: DW_TAG_array_type, baseType: !907, size: 256, align: 16, elements: !953)
!953 = !{!954}
!954 = !DISubrange(count: 16)
!955 = distinct !DIGlobalVariable(name: "lpc_refl_cb5", scope: !0, file: !905, line: 1477, type: !952, isLocal: true, isDefinition: true, variable: [16 x i16]* @lpc_refl_cb5)
!956 = distinct !DIGlobalVariable(name: "lpc_refl_cb6", scope: !0, file: !905, line: 1482, type: !957, isLocal: true, isDefinition: true, variable: [8 x i16]* @lpc_refl_cb6)
!957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !907, size: 128, align: 16, elements: !958)
!958 = !{!959}
!959 = !DISubrange(count: 8)
!960 = distinct !DIGlobalVariable(name: "lpc_refl_cb7", scope: !0, file: !905, line: 1486, type: !957, isLocal: true, isDefinition: true, variable: [8 x i16]* @lpc_refl_cb7)
!961 = distinct !DIGlobalVariable(name: "lpc_refl_cb8", scope: !0, file: !905, line: 1490, type: !957, isLocal: true, isDefinition: true, variable: [8 x i16]* @lpc_refl_cb8)
!962 = distinct !DIGlobalVariable(name: "lpc_refl_cb9", scope: !0, file: !905, line: 1494, type: !957, isLocal: true, isDefinition: true, variable: [8 x i16]* @lpc_refl_cb9)
!963 = distinct !DIGlobalVariable(name: "lpc_refl_cb10", scope: !0, file: !905, line: 1498, type: !964, isLocal: true, isDefinition: true, variable: [4 x i16]* @lpc_refl_cb10)
!964 = !DICompositeType(tag: DW_TAG_array_type, baseType: !907, size: 64, align: 16, elements: !965)
!965 = !{!966}
!966 = !DISubrange(count: 4)
!967 = !{i32 2, !"Dwarf Version", i32 4}
!968 = !{i32 2, !"Debug Info Version", i32 3}
!969 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!970 = distinct !DISubprogram(name: "ff_copy_and_dup", scope: !905, file: !905, line: 1530, type: !971, isLocal: false, isDefinition: true, scopeLine: 1531, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !974)
!971 = !DISubroutineType(types: !972)
!972 = !{null, !973, !942, !898}
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64, align: 64)
!974 = !{}
!975 = !DILocalVariable(name: "target", arg: 1, scope: !970, file: !905, line: 1530, type: !973)
!976 = !DIExpression()
!977 = !DILocation(line: 1530, column: 31, scope: !970)
!978 = !DILocalVariable(name: "source", arg: 2, scope: !970, file: !905, line: 1530, type: !942)
!979 = !DILocation(line: 1530, column: 54, scope: !970)
!980 = !DILocalVariable(name: "offset", arg: 3, scope: !970, file: !905, line: 1530, type: !898)
!981 = !DILocation(line: 1530, column: 66, scope: !970)
!982 = !DILocation(line: 1532, column: 21, scope: !970)
!983 = !DILocation(line: 1532, column: 19, scope: !970)
!984 = !DILocation(line: 1532, column: 12, scope: !970)
!985 = !DILocation(line: 1534, column: 12, scope: !970)
!986 = !DILocation(line: 1534, column: 5, scope: !970)
!987 = !DILocation(line: 1534, column: 20, scope: !970)
!988 = !DILocation(line: 1534, column: 37, scope: !970)
!989 = !DILocation(line: 1534, column: 34, scope: !970)
!990 = !DILocation(line: 1534, column: 29, scope: !970)
!991 = !DILocation(line: 1534, column: 48, scope: !992)
!992 = !DILexicalBlockFile(scope: !970, file: !905, discriminator: 1)
!993 = !DILocation(line: 1534, column: 29, scope: !992)
!994 = !DILocation(line: 1534, column: 29, scope: !995)
!995 = !DILexicalBlockFile(scope: !970, file: !905, discriminator: 2)
!996 = !DILocation(line: 1534, column: 29, scope: !997)
!997 = !DILexicalBlockFile(scope: !970, file: !905, discriminator: 3)
!998 = !DILocation(line: 1534, column: 28, scope: !997)
!999 = !DILocation(line: 1534, column: 63, scope: !997)
!1000 = !DILocation(line: 1534, column: 5, scope: !997)
!1001 = !DILocation(line: 1535, column: 9, scope: !1002)
!1002 = distinct !DILexicalBlock(scope: !970, file: !905, line: 1535, column: 9)
!1003 = !DILocation(line: 1535, column: 16, scope: !1002)
!1004 = !DILocation(line: 1535, column: 9, scope: !970)
!1005 = !DILocation(line: 1536, column: 16, scope: !1002)
!1006 = !DILocation(line: 1536, column: 25, scope: !1002)
!1007 = !DILocation(line: 1536, column: 23, scope: !1002)
!1008 = !DILocation(line: 1536, column: 9, scope: !1002)
!1009 = !DILocation(line: 1536, column: 33, scope: !1002)
!1010 = !DILocation(line: 1536, column: 47, scope: !1002)
!1011 = !DILocation(line: 1536, column: 45, scope: !1002)
!1012 = !DILocation(line: 1536, column: 41, scope: !1002)
!1013 = !DILocation(line: 1536, column: 54, scope: !1002)
!1014 = !DILocation(line: 1537, column: 1, scope: !970)
!1015 = distinct !DISubprogram(name: "ff_eval_refl", scope: !905, file: !905, line: 1545, type: !1016, isLocal: false, isDefinition: true, scopeLine: 1546, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !974)
!1016 = !DISubroutineType(types: !1017)
!1017 = !{!898, !1018, !942, !1019}
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 64, align: 64)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 64, align: 64)
!1020 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !35, line: 3360, baseType: !1021)
!1021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !35, line: 1556, size: 8448, align: 64, elements: !1022)
!1022 = !{!1023, !1068, !1069, !1070, !1326, !1327, !1328, !1329, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1355, !1359, !1360, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1540, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1021, file: !35, line: 1561, baseType: !1024, size: 64, align: 64)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64, align: 64)
!1025 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1026)
!1026 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !4, line: 143, baseType: !1027)
!1027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !4, line: 67, size: 640, align: 64, elements: !1028)
!1028 = !{!1029, !1033, !1038, !1042, !1043, !1044, !1045, !1049, !1055, !1057, !1061}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !1027, file: !4, line: 72, baseType: !1030, size: 64, align: 64)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64, align: 64)
!1031 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1032)
!1032 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !1027, file: !4, line: 78, baseType: !1034, size: 64, align: 64, offset: 64)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 64, align: 64)
!1035 = !DISubroutineType(types: !1036)
!1036 = !{!1030, !1037}
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !1027, file: !4, line: 85, baseType: !1039, size: 64, align: 64, offset: 128)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 64, align: 64)
!1040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1041)
!1041 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !4, line: 85, flags: DIFlagFwdDecl)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1027, file: !4, line: 93, baseType: !898, size: 32, align: 32, offset: 192)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !1027, file: !4, line: 99, baseType: !898, size: 32, align: 32, offset: 224)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !1027, file: !4, line: 108, baseType: !898, size: 32, align: 32, offset: 256)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !1027, file: !4, line: 113, baseType: !1046, size: 64, align: 64, offset: 320)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 64, align: 64)
!1047 = !DISubroutineType(types: !1048)
!1048 = !{!1037, !1037, !1037}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !1027, file: !4, line: 123, baseType: !1050, size: 64, align: 64, offset: 384)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 64, align: 64)
!1051 = !DISubroutineType(types: !1052)
!1052 = !{!1053, !1053}
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 64, align: 64)
!1054 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1027)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !1027, file: !4, line: 130, baseType: !1056, size: 32, align: 32, offset: 448)
!1056 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !4, line: 48, baseType: !3)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !1027, file: !4, line: 136, baseType: !1058, size: 64, align: 64, offset: 512)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 64, align: 64)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{!1056, !1037}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !1027, file: !4, line: 142, baseType: !1062, size: 64, align: 64, offset: 576)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 64, align: 64)
!1063 = !DISubroutineType(types: !1064)
!1064 = !{!898, !1065, !1037, !1030, !898}
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 64, align: 64)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64, align: 64)
!1067 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !4, line: 60, flags: DIFlagFwdDecl)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1021, file: !35, line: 1562, baseType: !898, size: 32, align: 32, offset: 64)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1021, file: !35, line: 1564, baseType: !24, size: 32, align: 32, offset: 96)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1021, file: !35, line: 1565, baseType: !1071, size: 64, align: 64, offset: 128)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64, align: 64)
!1072 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1073)
!1073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !35, line: 3468, size: 1984, align: 64, elements: !1074)
!1074 = !{!1075, !1076, !1077, !1078, !1079, !1080, !1089, !1092, !1095, !1098, !1101, !1102, !1103, !1111, !1112, !1113, !1115, !1119, !1125, !1130, !1134, !1135, !1179, !1297, !1301, !1302, !1306, !1310, !1315, !1319, !1320, !1321}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1073, file: !35, line: 3475, baseType: !1030, size: 64, align: 64)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1073, file: !35, line: 3480, baseType: !1030, size: 64, align: 64, offset: 64)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1073, file: !35, line: 3481, baseType: !24, size: 32, align: 32, offset: 128)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1073, file: !35, line: 3482, baseType: !34, size: 32, align: 32, offset: 160)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1073, file: !35, line: 3487, baseType: !898, size: 32, align: 32, offset: 192)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1073, file: !35, line: 3488, baseType: !1081, size: 64, align: 64, offset: 256)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64, align: 64)
!1082 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1083)
!1083 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !1084, line: 61, baseType: !1085)
!1084 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !1084, line: 58, size: 64, align: 32, elements: !1086)
!1086 = !{!1087, !1088}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1085, file: !1084, line: 59, baseType: !898, size: 32, align: 32)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !1085, file: !1084, line: 60, baseType: !898, size: 32, align: 32, offset: 32)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1073, file: !35, line: 3489, baseType: !1090, size: 64, align: 64, offset: 320)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 64, align: 64)
!1091 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1073, file: !35, line: 3490, baseType: !1093, size: 64, align: 64, offset: 384)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64, align: 64)
!1094 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !898)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1073, file: !35, line: 3491, baseType: !1096, size: 64, align: 64, offset: 448)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64, align: 64)
!1097 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !694)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1073, file: !35, line: 3492, baseType: !1099, size: 64, align: 64, offset: 512)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64, align: 64)
!1100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !901)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1073, file: !35, line: 3493, baseType: !916, size: 8, align: 8, offset: 576)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1073, file: !35, line: 3494, baseType: !1024, size: 64, align: 64, offset: 640)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1073, file: !35, line: 3495, baseType: !1104, size: 64, align: 64, offset: 704)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 64, align: 64)
!1105 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1106)
!1106 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !35, line: 3404, baseType: !1107)
!1107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !35, line: 3401, size: 128, align: 64, elements: !1108)
!1108 = !{!1109, !1110}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1107, file: !35, line: 3402, baseType: !898, size: 32, align: 32)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1107, file: !35, line: 3403, baseType: !1030, size: 64, align: 64, offset: 64)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1073, file: !35, line: 3507, baseType: !1030, size: 64, align: 64, offset: 768)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1073, file: !35, line: 3516, baseType: !898, size: 32, align: 32, offset: 832)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1073, file: !35, line: 3517, baseType: !1114, size: 64, align: 64, offset: 896)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64, align: 64)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1073, file: !35, line: 3527, baseType: !1116, size: 64, align: 64, offset: 960)
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 64, align: 64)
!1117 = !DISubroutineType(types: !1118)
!1118 = !{!898, !1019}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1073, file: !35, line: 3535, baseType: !1120, size: 64, align: 64, offset: 1024)
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 64, align: 64)
!1121 = !DISubroutineType(types: !1122)
!1122 = !{!898, !1019, !1123}
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 64, align: 64)
!1124 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1020)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1073, file: !35, line: 3541, baseType: !1126, size: 64, align: 64, offset: 1088)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64, align: 64)
!1127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1128)
!1128 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !35, line: 3461, baseType: !1129)
!1129 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !35, line: 3461, flags: DIFlagFwdDecl)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1073, file: !35, line: 3549, baseType: !1131, size: 64, align: 64, offset: 1152)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64, align: 64)
!1132 = !DISubroutineType(types: !1133)
!1133 = !{null, !1114}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1073, file: !35, line: 3551, baseType: !1116, size: 64, align: 64, offset: 1216)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1073, file: !35, line: 3552, baseType: !1136, size: 64, align: 64, offset: 1280)
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 64, align: 64)
!1137 = !DISubroutineType(types: !1138)
!1138 = !{!898, !1019, !1139, !898, !1140}
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64, align: 64)
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 64, align: 64)
!1141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1142)
!1142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !35, line: 3920, size: 256, align: 64, elements: !1143)
!1143 = !{!1144, !1145, !1146, !1147, !1148, !1176}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1142, file: !35, line: 3921, baseType: !931, size: 16, align: 16)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1142, file: !35, line: 3922, baseType: !899, size: 32, align: 32, offset: 32)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1142, file: !35, line: 3923, baseType: !899, size: 32, align: 32, offset: 64)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1142, file: !35, line: 3924, baseType: !897, size: 32, align: 32, offset: 96)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1142, file: !35, line: 3925, baseType: !1149, size: 64, align: 64, offset: 128)
!1149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1150, size: 64, align: 64)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 64, align: 64)
!1151 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !35, line: 3918, baseType: !1152)
!1152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !35, line: 3885, size: 1600, align: 64, elements: !1153)
!1153 = !{!1154, !1155, !1156, !1157, !1158, !1159, !1167, !1169, !1171, !1172, !1174, !1175}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1152, file: !35, line: 3886, baseType: !898, size: 32, align: 32)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1152, file: !35, line: 3887, baseType: !898, size: 32, align: 32, offset: 32)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1152, file: !35, line: 3888, baseType: !898, size: 32, align: 32, offset: 64)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1152, file: !35, line: 3889, baseType: !898, size: 32, align: 32, offset: 96)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1152, file: !35, line: 3890, baseType: !898, size: 32, align: 32, offset: 128)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1152, file: !35, line: 3897, baseType: !1160, size: 768, align: 64, offset: 192)
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !35, line: 3858, baseType: !1161)
!1161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !35, line: 3853, size: 768, align: 64, elements: !1162)
!1162 = !{!1163, !1165}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1161, file: !35, line: 3855, baseType: !1164, size: 512, align: 64)
!1164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1139, size: 512, align: 64, elements: !958)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1161, file: !35, line: 3857, baseType: !1166, size: 256, align: 32, offset: 512)
!1166 = !DICompositeType(tag: DW_TAG_array_type, baseType: !898, size: 256, align: 32, elements: !958)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1152, file: !35, line: 3903, baseType: !1168, size: 256, align: 64, offset: 960)
!1168 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1139, size: 256, align: 64, elements: !965)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1152, file: !35, line: 3904, baseType: !1170, size: 128, align: 32, offset: 1216)
!1170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !898, size: 128, align: 32, elements: !965)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1152, file: !35, line: 3906, baseType: !711, size: 32, align: 32, offset: 1344)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1152, file: !35, line: 3908, baseType: !1173, size: 64, align: 64, offset: 1408)
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64, align: 64)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1152, file: !35, line: 3915, baseType: !1173, size: 64, align: 64, offset: 1472)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1152, file: !35, line: 3917, baseType: !898, size: 32, align: 32, offset: 1536)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1142, file: !35, line: 3926, baseType: !1177, size: 64, align: 64, offset: 192)
!1177 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !900, line: 40, baseType: !1178)
!1178 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1073, file: !35, line: 3564, baseType: !1180, size: 64, align: 64, offset: 1344)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64, align: 64)
!1181 = !DISubroutineType(types: !1182)
!1182 = !{!898, !1019, !1183, !1217, !1018}
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 64, align: 64)
!1184 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !35, line: 1499, baseType: !1185)
!1185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !35, line: 1445, size: 704, align: 64, elements: !1186)
!1186 = !{!1187, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1213, !1214, !1215, !1216}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1185, file: !35, line: 1451, baseType: !1188, size: 64, align: 64)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64, align: 64)
!1189 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1190, line: 94, baseType: !1191)
!1190 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1190, line: 81, size: 192, align: 64, elements: !1192)
!1192 = !{!1193, !1197, !1198}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1191, file: !1190, line: 82, baseType: !1194, size: 64, align: 64)
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 64, align: 64)
!1195 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1190, line: 73, baseType: !1196)
!1196 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1190, line: 73, flags: DIFlagFwdDecl)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1191, file: !1190, line: 89, baseType: !1139, size: 64, align: 64, offset: 64)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1191, file: !1190, line: 93, baseType: !898, size: 32, align: 32, offset: 128)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1185, file: !35, line: 1461, baseType: !1177, size: 64, align: 64, offset: 64)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1185, file: !35, line: 1467, baseType: !1177, size: 64, align: 64, offset: 128)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1185, file: !35, line: 1468, baseType: !1139, size: 64, align: 64, offset: 192)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1185, file: !35, line: 1469, baseType: !898, size: 32, align: 32, offset: 256)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1185, file: !35, line: 1470, baseType: !898, size: 32, align: 32, offset: 288)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1185, file: !35, line: 1474, baseType: !898, size: 32, align: 32, offset: 320)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1185, file: !35, line: 1479, baseType: !1206, size: 64, align: 64, offset: 384)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 64, align: 64)
!1207 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !35, line: 1415, baseType: !1208)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !35, line: 1411, size: 128, align: 64, elements: !1209)
!1209 = !{!1210, !1211, !1212}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1208, file: !35, line: 1412, baseType: !1139, size: 64, align: 64)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1208, file: !35, line: 1413, baseType: !898, size: 32, align: 32, offset: 64)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1208, file: !35, line: 1414, baseType: !717, size: 32, align: 32, offset: 96)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1185, file: !35, line: 1480, baseType: !898, size: 32, align: 32, offset: 448)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1185, file: !35, line: 1486, baseType: !1177, size: 64, align: 64, offset: 512)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1185, file: !35, line: 1488, baseType: !1177, size: 64, align: 64, offset: 576)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1185, file: !35, line: 1497, baseType: !1177, size: 64, align: 64, offset: 640)
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 64, align: 64)
!1218 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1219)
!1219 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !758, line: 646, baseType: !1220)
!1220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !758, line: 268, size: 4288, align: 64, elements: !1221)
!1221 = !{!1222, !1223, !1224, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1251, !1253, !1254, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1285, !1286, !1287, !1288, !1289, !1290, !1293, !1294, !1295, !1296}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1220, file: !758, line: 282, baseType: !1164, size: 512, align: 64)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1220, file: !758, line: 299, baseType: !1166, size: 256, align: 32, offset: 512)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1220, file: !758, line: 315, baseType: !1225, size: 64, align: 64, offset: 768)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 64, align: 64)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1220, file: !758, line: 326, baseType: !898, size: 32, align: 32, offset: 832)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1220, file: !758, line: 326, baseType: !898, size: 32, align: 32, offset: 864)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1220, file: !758, line: 334, baseType: !898, size: 32, align: 32, offset: 896)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1220, file: !758, line: 341, baseType: !898, size: 32, align: 32, offset: 928)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1220, file: !758, line: 346, baseType: !898, size: 32, align: 32, offset: 960)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1220, file: !758, line: 351, baseType: !747, size: 32, align: 32, offset: 992)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1220, file: !758, line: 356, baseType: !1083, size: 64, align: 32, offset: 1024)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1220, file: !758, line: 361, baseType: !1177, size: 64, align: 64, offset: 1088)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1220, file: !758, line: 369, baseType: !1177, size: 64, align: 64, offset: 1152)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1220, file: !758, line: 377, baseType: !1177, size: 64, align: 64, offset: 1216)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1220, file: !758, line: 382, baseType: !898, size: 32, align: 32, offset: 1280)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1220, file: !758, line: 386, baseType: !898, size: 32, align: 32, offset: 1312)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1220, file: !758, line: 391, baseType: !898, size: 32, align: 32, offset: 1344)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1220, file: !758, line: 396, baseType: !1037, size: 64, align: 64, offset: 1408)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1220, file: !758, line: 403, baseType: !1241, size: 512, align: 64, offset: 1472)
!1241 = !DICompositeType(tag: DW_TAG_array_type, baseType: !901, size: 512, align: 64, elements: !958)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1220, file: !758, line: 410, baseType: !898, size: 32, align: 32, offset: 1984)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1220, file: !758, line: 415, baseType: !898, size: 32, align: 32, offset: 2016)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1220, file: !758, line: 420, baseType: !898, size: 32, align: 32, offset: 2048)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1220, file: !758, line: 425, baseType: !898, size: 32, align: 32, offset: 2080)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1220, file: !758, line: 435, baseType: !1177, size: 64, align: 64, offset: 2112)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1220, file: !758, line: 440, baseType: !898, size: 32, align: 32, offset: 2176)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1220, file: !758, line: 445, baseType: !901, size: 64, align: 64, offset: 2240)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1220, file: !758, line: 459, baseType: !1250, size: 512, align: 64, offset: 2304)
!1250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1188, size: 512, align: 64, elements: !958)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1220, file: !758, line: 473, baseType: !1252, size: 64, align: 64, offset: 2816)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64, align: 64)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1220, file: !758, line: 477, baseType: !898, size: 32, align: 32, offset: 2880)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1220, file: !758, line: 479, baseType: !1255, size: 64, align: 64, offset: 2944)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 64, align: 64)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 64, align: 64)
!1257 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !758, line: 207, baseType: !1258)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !758, line: 201, size: 320, align: 64, elements: !1259)
!1259 = !{!1260, !1261, !1262, !1263, !1268}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1258, file: !758, line: 202, baseType: !757, size: 32, align: 32)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1258, file: !758, line: 203, baseType: !1139, size: 64, align: 64, offset: 64)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1258, file: !758, line: 204, baseType: !898, size: 32, align: 32, offset: 128)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1258, file: !758, line: 205, baseType: !1264, size: 64, align: 64, offset: 192)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64, align: 64)
!1265 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1266, line: 86, baseType: !1267)
!1266 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1267 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1266, line: 86, flags: DIFlagFwdDecl)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1258, file: !758, line: 206, baseType: !1188, size: 64, align: 64, offset: 256)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1220, file: !758, line: 480, baseType: !898, size: 32, align: 32, offset: 3008)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1220, file: !758, line: 505, baseType: !898, size: 32, align: 32, offset: 3040)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1220, file: !758, line: 512, baseType: !781, size: 32, align: 32, offset: 3072)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1220, file: !758, line: 514, baseType: !787, size: 32, align: 32, offset: 3104)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1220, file: !758, line: 516, baseType: !805, size: 32, align: 32, offset: 3136)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1220, file: !758, line: 523, baseType: !829, size: 32, align: 32, offset: 3168)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1220, file: !758, line: 525, baseType: !848, size: 32, align: 32, offset: 3200)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1220, file: !758, line: 532, baseType: !1177, size: 64, align: 64, offset: 3264)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1220, file: !758, line: 539, baseType: !1177, size: 64, align: 64, offset: 3328)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1220, file: !758, line: 547, baseType: !1177, size: 64, align: 64, offset: 3392)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1220, file: !758, line: 554, baseType: !1264, size: 64, align: 64, offset: 3456)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1220, file: !758, line: 563, baseType: !898, size: 32, align: 32, offset: 3520)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1220, file: !758, line: 572, baseType: !898, size: 32, align: 32, offset: 3552)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1220, file: !758, line: 581, baseType: !898, size: 32, align: 32, offset: 3584)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1220, file: !758, line: 588, baseType: !1284, size: 64, align: 64, offset: 3648)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64, align: 64)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1220, file: !758, line: 593, baseType: !898, size: 32, align: 32, offset: 3712)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1220, file: !758, line: 596, baseType: !898, size: 32, align: 32, offset: 3744)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1220, file: !758, line: 599, baseType: !1188, size: 64, align: 64, offset: 3776)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1220, file: !758, line: 605, baseType: !1188, size: 64, align: 64, offset: 3840)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1220, file: !758, line: 616, baseType: !1188, size: 64, align: 64, offset: 3904)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1220, file: !758, line: 626, baseType: !1291, size: 64, align: 64, offset: 3968)
!1291 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1292, line: 216, baseType: !902)
!1292 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1220, file: !758, line: 627, baseType: !1291, size: 64, align: 64, offset: 4032)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1220, file: !758, line: 628, baseType: !1291, size: 64, align: 64, offset: 4096)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1220, file: !758, line: 629, baseType: !1291, size: 64, align: 64, offset: 4160)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1220, file: !758, line: 645, baseType: !1188, size: 64, align: 64, offset: 4224)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1073, file: !35, line: 3566, baseType: !1298, size: 64, align: 64, offset: 1408)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64, align: 64)
!1299 = !DISubroutineType(types: !1300)
!1300 = !{!898, !1019, !1037, !1018, !1183}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1073, file: !35, line: 3567, baseType: !1116, size: 64, align: 64, offset: 1472)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1073, file: !35, line: 3576, baseType: !1303, size: 64, align: 64, offset: 1536)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 64, align: 64)
!1304 = !DISubroutineType(types: !1305)
!1305 = !{!898, !1019, !1217}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1073, file: !35, line: 3577, baseType: !1307, size: 64, align: 64, offset: 1600)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 64, align: 64)
!1308 = !DISubroutineType(types: !1309)
!1309 = !{!898, !1019, !1183}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1073, file: !35, line: 3584, baseType: !1311, size: 64, align: 64, offset: 1664)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 64, align: 64)
!1312 = !DISubroutineType(types: !1313)
!1313 = !{!898, !1019, !1314}
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 64, align: 64)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1073, file: !35, line: 3589, baseType: !1316, size: 64, align: 64, offset: 1728)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 64, align: 64)
!1317 = !DISubroutineType(types: !1318)
!1318 = !{null, !1019}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1073, file: !35, line: 3594, baseType: !898, size: 32, align: 32, offset: 1792)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1073, file: !35, line: 3600, baseType: !1030, size: 64, align: 64, offset: 1856)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1073, file: !35, line: 3609, baseType: !1322, size: 64, align: 64, offset: 1920)
!1322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 64, align: 64)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 64, align: 64)
!1324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1325)
!1325 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !35, line: 3609, flags: DIFlagFwdDecl)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1021, file: !35, line: 1566, baseType: !34, size: 32, align: 32, offset: 192)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1021, file: !35, line: 1581, baseType: !897, size: 32, align: 32, offset: 224)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1021, file: !35, line: 1583, baseType: !1037, size: 64, align: 64, offset: 256)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1021, file: !35, line: 1591, baseType: !1330, size: 64, align: 64, offset: 320)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 64, align: 64)
!1331 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !35, line: 1532, flags: DIFlagFwdDecl)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1021, file: !35, line: 1598, baseType: !1037, size: 64, align: 64, offset: 384)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1021, file: !35, line: 1606, baseType: !1177, size: 64, align: 64, offset: 448)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1021, file: !35, line: 1614, baseType: !898, size: 32, align: 32, offset: 512)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1021, file: !35, line: 1622, baseType: !898, size: 32, align: 32, offset: 544)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1021, file: !35, line: 1628, baseType: !898, size: 32, align: 32, offset: 576)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1021, file: !35, line: 1636, baseType: !898, size: 32, align: 32, offset: 608)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1021, file: !35, line: 1643, baseType: !898, size: 32, align: 32, offset: 640)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1021, file: !35, line: 1657, baseType: !1139, size: 64, align: 64, offset: 704)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1021, file: !35, line: 1658, baseType: !898, size: 32, align: 32, offset: 768)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1021, file: !35, line: 1679, baseType: !1083, size: 64, align: 32, offset: 800)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1021, file: !35, line: 1688, baseType: !898, size: 32, align: 32, offset: 864)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1021, file: !35, line: 1712, baseType: !898, size: 32, align: 32, offset: 896)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1021, file: !35, line: 1729, baseType: !898, size: 32, align: 32, offset: 928)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1021, file: !35, line: 1729, baseType: !898, size: 32, align: 32, offset: 960)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1021, file: !35, line: 1744, baseType: !898, size: 32, align: 32, offset: 992)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1021, file: !35, line: 1744, baseType: !898, size: 32, align: 32, offset: 1024)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1021, file: !35, line: 1751, baseType: !898, size: 32, align: 32, offset: 1056)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1021, file: !35, line: 1766, baseType: !494, size: 32, align: 32, offset: 1088)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1021, file: !35, line: 1791, baseType: !1351, size: 64, align: 64, offset: 1152)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64, align: 64)
!1352 = !DISubroutineType(types: !1353)
!1353 = !{null, !1354, !1217, !1018, !898, !898, !898}
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64, align: 64)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1021, file: !35, line: 1808, baseType: !1356, size: 64, align: 64, offset: 1216)
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64, align: 64)
!1357 = !DISubroutineType(types: !1358)
!1358 = !{!494, !1354, !1090}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1021, file: !35, line: 1816, baseType: !898, size: 32, align: 32, offset: 1280)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1021, file: !35, line: 1825, baseType: !1361, size: 32, align: 32, offset: 1312)
!1361 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1021, file: !35, line: 1830, baseType: !898, size: 32, align: 32, offset: 1344)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1021, file: !35, line: 1838, baseType: !1361, size: 32, align: 32, offset: 1376)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1021, file: !35, line: 1846, baseType: !898, size: 32, align: 32, offset: 1408)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1021, file: !35, line: 1851, baseType: !898, size: 32, align: 32, offset: 1440)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1021, file: !35, line: 1861, baseType: !1361, size: 32, align: 32, offset: 1472)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1021, file: !35, line: 1868, baseType: !1361, size: 32, align: 32, offset: 1504)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1021, file: !35, line: 1875, baseType: !1361, size: 32, align: 32, offset: 1536)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1021, file: !35, line: 1882, baseType: !1361, size: 32, align: 32, offset: 1568)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1021, file: !35, line: 1889, baseType: !1361, size: 32, align: 32, offset: 1600)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1021, file: !35, line: 1896, baseType: !1361, size: 32, align: 32, offset: 1632)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1021, file: !35, line: 1903, baseType: !1361, size: 32, align: 32, offset: 1664)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1021, file: !35, line: 1910, baseType: !898, size: 32, align: 32, offset: 1696)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1021, file: !35, line: 1915, baseType: !898, size: 32, align: 32, offset: 1728)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1021, file: !35, line: 1926, baseType: !1018, size: 64, align: 64, offset: 1792)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1021, file: !35, line: 1935, baseType: !1083, size: 64, align: 32, offset: 1856)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1021, file: !35, line: 1942, baseType: !898, size: 32, align: 32, offset: 1920)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1021, file: !35, line: 1948, baseType: !898, size: 32, align: 32, offset: 1952)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1021, file: !35, line: 1954, baseType: !898, size: 32, align: 32, offset: 1984)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1021, file: !35, line: 1960, baseType: !898, size: 32, align: 32, offset: 2016)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1021, file: !35, line: 1984, baseType: !898, size: 32, align: 32, offset: 2048)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1021, file: !35, line: 1991, baseType: !898, size: 32, align: 32, offset: 2080)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1021, file: !35, line: 1996, baseType: !898, size: 32, align: 32, offset: 2112)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1021, file: !35, line: 2004, baseType: !898, size: 32, align: 32, offset: 2144)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1021, file: !35, line: 2011, baseType: !898, size: 32, align: 32, offset: 2176)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1021, file: !35, line: 2018, baseType: !898, size: 32, align: 32, offset: 2208)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1021, file: !35, line: 2027, baseType: !898, size: 32, align: 32, offset: 2240)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1021, file: !35, line: 2034, baseType: !898, size: 32, align: 32, offset: 2272)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1021, file: !35, line: 2044, baseType: !898, size: 32, align: 32, offset: 2304)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1021, file: !35, line: 2054, baseType: !1391, size: 64, align: 64, offset: 2368)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 64, align: 64)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1021, file: !35, line: 2061, baseType: !1391, size: 64, align: 64, offset: 2432)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1021, file: !35, line: 2066, baseType: !898, size: 32, align: 32, offset: 2496)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1021, file: !35, line: 2070, baseType: !898, size: 32, align: 32, offset: 2528)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1021, file: !35, line: 2078, baseType: !898, size: 32, align: 32, offset: 2560)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1021, file: !35, line: 2085, baseType: !898, size: 32, align: 32, offset: 2592)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1021, file: !35, line: 2092, baseType: !898, size: 32, align: 32, offset: 2624)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1021, file: !35, line: 2099, baseType: !898, size: 32, align: 32, offset: 2656)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1021, file: !35, line: 2106, baseType: !898, size: 32, align: 32, offset: 2688)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1021, file: !35, line: 2113, baseType: !898, size: 32, align: 32, offset: 2720)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1021, file: !35, line: 2120, baseType: !898, size: 32, align: 32, offset: 2752)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1021, file: !35, line: 2125, baseType: !898, size: 32, align: 32, offset: 2784)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1021, file: !35, line: 2133, baseType: !898, size: 32, align: 32, offset: 2816)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1021, file: !35, line: 2140, baseType: !898, size: 32, align: 32, offset: 2848)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1021, file: !35, line: 2145, baseType: !898, size: 32, align: 32, offset: 2880)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1021, file: !35, line: 2153, baseType: !898, size: 32, align: 32, offset: 2912)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1021, file: !35, line: 2158, baseType: !898, size: 32, align: 32, offset: 2944)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1021, file: !35, line: 2166, baseType: !787, size: 32, align: 32, offset: 2976)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1021, file: !35, line: 2173, baseType: !805, size: 32, align: 32, offset: 3008)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1021, file: !35, line: 2180, baseType: !829, size: 32, align: 32, offset: 3040)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1021, file: !35, line: 2187, baseType: !781, size: 32, align: 32, offset: 3072)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1021, file: !35, line: 2194, baseType: !848, size: 32, align: 32, offset: 3104)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1021, file: !35, line: 2203, baseType: !898, size: 32, align: 32, offset: 3136)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1021, file: !35, line: 2209, baseType: !858, size: 32, align: 32, offset: 3168)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1021, file: !35, line: 2212, baseType: !898, size: 32, align: 32, offset: 3200)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1021, file: !35, line: 2213, baseType: !898, size: 32, align: 32, offset: 3232)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1021, file: !35, line: 2220, baseType: !694, size: 32, align: 32, offset: 3264)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1021, file: !35, line: 2232, baseType: !898, size: 32, align: 32, offset: 3296)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1021, file: !35, line: 2243, baseType: !898, size: 32, align: 32, offset: 3328)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1021, file: !35, line: 2249, baseType: !898, size: 32, align: 32, offset: 3360)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1021, file: !35, line: 2256, baseType: !898, size: 32, align: 32, offset: 3392)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1021, file: !35, line: 2263, baseType: !901, size: 64, align: 64, offset: 3456)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1021, file: !35, line: 2270, baseType: !901, size: 64, align: 64, offset: 3520)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1021, file: !35, line: 2277, baseType: !866, size: 32, align: 32, offset: 3584)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1021, file: !35, line: 2285, baseType: !694, size: 32, align: 32, offset: 3616)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1021, file: !35, line: 2367, baseType: !1427, size: 64, align: 64, offset: 3648)
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 64, align: 64)
!1428 = !DISubroutineType(types: !1429)
!1429 = !{!898, !1354, !1314, !898}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1021, file: !35, line: 2383, baseType: !898, size: 32, align: 32, offset: 3712)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1021, file: !35, line: 2386, baseType: !1361, size: 32, align: 32, offset: 3744)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1021, file: !35, line: 2387, baseType: !1361, size: 32, align: 32, offset: 3776)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1021, file: !35, line: 2394, baseType: !898, size: 32, align: 32, offset: 3808)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1021, file: !35, line: 2401, baseType: !898, size: 32, align: 32, offset: 3840)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1021, file: !35, line: 2408, baseType: !898, size: 32, align: 32, offset: 3872)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1021, file: !35, line: 2415, baseType: !898, size: 32, align: 32, offset: 3904)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1021, file: !35, line: 2422, baseType: !898, size: 32, align: 32, offset: 3936)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1021, file: !35, line: 2423, baseType: !1439, size: 64, align: 64, offset: 3968)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 64, align: 64)
!1440 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !35, line: 831, baseType: !1441)
!1441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !35, line: 826, size: 128, align: 32, elements: !1442)
!1442 = !{!1443, !1444, !1445, !1446}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1441, file: !35, line: 827, baseType: !898, size: 32, align: 32)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1441, file: !35, line: 828, baseType: !898, size: 32, align: 32, offset: 32)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1441, file: !35, line: 829, baseType: !898, size: 32, align: 32, offset: 64)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1441, file: !35, line: 830, baseType: !1361, size: 32, align: 32, offset: 96)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1021, file: !35, line: 2430, baseType: !1177, size: 64, align: 64, offset: 4032)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1021, file: !35, line: 2437, baseType: !1177, size: 64, align: 64, offset: 4096)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1021, file: !35, line: 2444, baseType: !1361, size: 32, align: 32, offset: 4160)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1021, file: !35, line: 2451, baseType: !1361, size: 32, align: 32, offset: 4192)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1021, file: !35, line: 2458, baseType: !898, size: 32, align: 32, offset: 4224)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1021, file: !35, line: 2469, baseType: !898, size: 32, align: 32, offset: 4256)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1021, file: !35, line: 2475, baseType: !898, size: 32, align: 32, offset: 4288)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1021, file: !35, line: 2481, baseType: !898, size: 32, align: 32, offset: 4320)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1021, file: !35, line: 2485, baseType: !898, size: 32, align: 32, offset: 4352)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1021, file: !35, line: 2489, baseType: !898, size: 32, align: 32, offset: 4384)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1021, file: !35, line: 2493, baseType: !898, size: 32, align: 32, offset: 4416)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1021, file: !35, line: 2501, baseType: !898, size: 32, align: 32, offset: 4448)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1021, file: !35, line: 2506, baseType: !898, size: 32, align: 32, offset: 4480)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1021, file: !35, line: 2510, baseType: !898, size: 32, align: 32, offset: 4512)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1021, file: !35, line: 2514, baseType: !1177, size: 64, align: 64, offset: 4544)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1021, file: !35, line: 2528, baseType: !1463, size: 64, align: 64, offset: 4608)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 64, align: 64)
!1464 = !DISubroutineType(types: !1465)
!1465 = !{null, !1354, !1037, !898, !898}
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1021, file: !35, line: 2534, baseType: !898, size: 32, align: 32, offset: 4672)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1021, file: !35, line: 2545, baseType: !898, size: 32, align: 32, offset: 4704)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1021, file: !35, line: 2547, baseType: !898, size: 32, align: 32, offset: 4736)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1021, file: !35, line: 2549, baseType: !898, size: 32, align: 32, offset: 4768)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1021, file: !35, line: 2551, baseType: !898, size: 32, align: 32, offset: 4800)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1021, file: !35, line: 2553, baseType: !898, size: 32, align: 32, offset: 4832)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1021, file: !35, line: 2555, baseType: !898, size: 32, align: 32, offset: 4864)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1021, file: !35, line: 2557, baseType: !898, size: 32, align: 32, offset: 4896)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1021, file: !35, line: 2559, baseType: !898, size: 32, align: 32, offset: 4928)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1021, file: !35, line: 2563, baseType: !898, size: 32, align: 32, offset: 4960)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1021, file: !35, line: 2571, baseType: !1173, size: 64, align: 64, offset: 4992)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1021, file: !35, line: 2579, baseType: !1173, size: 64, align: 64, offset: 5056)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1021, file: !35, line: 2586, baseType: !898, size: 32, align: 32, offset: 5120)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1021, file: !35, line: 2615, baseType: !898, size: 32, align: 32, offset: 5152)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1021, file: !35, line: 2627, baseType: !898, size: 32, align: 32, offset: 5184)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1021, file: !35, line: 2637, baseType: !898, size: 32, align: 32, offset: 5216)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1021, file: !35, line: 2681, baseType: !898, size: 32, align: 32, offset: 5248)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1021, file: !35, line: 2709, baseType: !1177, size: 64, align: 64, offset: 5312)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1021, file: !35, line: 2716, baseType: !1485, size: 64, align: 64, offset: 5376)
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 64, align: 64)
!1486 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1487)
!1487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !35, line: 3636, size: 896, align: 64, elements: !1488)
!1488 = !{!1489, !1490, !1491, !1492, !1493, !1494, !1495, !1500, !1504, !1505, !1506, !1507, !1513, !1514, !1515, !1516, !1517}
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1487, file: !35, line: 3642, baseType: !1030, size: 64, align: 64)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1487, file: !35, line: 3649, baseType: !24, size: 32, align: 32, offset: 64)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1487, file: !35, line: 3656, baseType: !34, size: 32, align: 32, offset: 96)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1487, file: !35, line: 3663, baseType: !494, size: 32, align: 32, offset: 128)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1487, file: !35, line: 3669, baseType: !898, size: 32, align: 32, offset: 160)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1487, file: !35, line: 3682, baseType: !1311, size: 64, align: 64, offset: 192)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1487, file: !35, line: 3698, baseType: !1496, size: 64, align: 64, offset: 256)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 64, align: 64)
!1497 = !DISubroutineType(types: !1498)
!1498 = !{!898, !1019, !1499, !899}
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64, align: 64)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1487, file: !35, line: 3712, baseType: !1501, size: 64, align: 64, offset: 320)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 64, align: 64)
!1502 = !DISubroutineType(types: !1503)
!1503 = !{!898, !1019, !898, !1499, !899}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1487, file: !35, line: 3726, baseType: !1496, size: 64, align: 64, offset: 384)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1487, file: !35, line: 3737, baseType: !1116, size: 64, align: 64, offset: 448)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1487, file: !35, line: 3746, baseType: !898, size: 32, align: 32, offset: 512)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1487, file: !35, line: 3757, baseType: !1508, size: 64, align: 64, offset: 576)
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 64, align: 64)
!1509 = !DISubroutineType(types: !1510)
!1510 = !{null, !1511}
!1511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 64, align: 64)
!1512 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !35, line: 3617, flags: DIFlagFwdDecl)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1487, file: !35, line: 3766, baseType: !1116, size: 64, align: 64, offset: 640)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1487, file: !35, line: 3774, baseType: !1116, size: 64, align: 64, offset: 704)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1487, file: !35, line: 3780, baseType: !898, size: 32, align: 32, offset: 768)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1487, file: !35, line: 3785, baseType: !898, size: 32, align: 32, offset: 800)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1487, file: !35, line: 3795, baseType: !1518, size: 64, align: 64, offset: 832)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 64, align: 64)
!1519 = !DISubroutineType(types: !1520)
!1520 = !{!898, !1019, !1188}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1021, file: !35, line: 2728, baseType: !1037, size: 64, align: 64, offset: 5440)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1021, file: !35, line: 2735, baseType: !1241, size: 512, align: 64, offset: 5504)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1021, file: !35, line: 2742, baseType: !898, size: 32, align: 32, offset: 6016)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1021, file: !35, line: 2755, baseType: !898, size: 32, align: 32, offset: 6048)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1021, file: !35, line: 2776, baseType: !898, size: 32, align: 32, offset: 6080)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1021, file: !35, line: 2783, baseType: !898, size: 32, align: 32, offset: 6112)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1021, file: !35, line: 2791, baseType: !898, size: 32, align: 32, offset: 6144)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1021, file: !35, line: 2802, baseType: !1314, size: 64, align: 64, offset: 6208)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1021, file: !35, line: 2811, baseType: !898, size: 32, align: 32, offset: 6272)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1021, file: !35, line: 2821, baseType: !898, size: 32, align: 32, offset: 6304)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1021, file: !35, line: 2830, baseType: !898, size: 32, align: 32, offset: 6336)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1021, file: !35, line: 2840, baseType: !898, size: 32, align: 32, offset: 6368)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1021, file: !35, line: 2851, baseType: !1534, size: 64, align: 64, offset: 6400)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 64, align: 64)
!1535 = !DISubroutineType(types: !1536)
!1536 = !{!898, !1354, !1537, !1037, !1018, !898, !898}
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 64, align: 64)
!1538 = !DISubroutineType(types: !1539)
!1539 = !{!898, !1354, !1037}
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1021, file: !35, line: 2871, baseType: !1541, size: 64, align: 64, offset: 6464)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 64, align: 64)
!1542 = !DISubroutineType(types: !1543)
!1543 = !{!898, !1354, !1544, !1037, !1018, !898}
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 64, align: 64)
!1545 = !DISubroutineType(types: !1546)
!1546 = !{!898, !1354, !1037, !898, !898}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1021, file: !35, line: 2878, baseType: !898, size: 32, align: 32, offset: 6528)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1021, file: !35, line: 2885, baseType: !898, size: 32, align: 32, offset: 6560)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1021, file: !35, line: 3005, baseType: !898, size: 32, align: 32, offset: 6592)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1021, file: !35, line: 3013, baseType: !878, size: 32, align: 32, offset: 6624)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1021, file: !35, line: 3020, baseType: !878, size: 32, align: 32, offset: 6656)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1021, file: !35, line: 3027, baseType: !878, size: 32, align: 32, offset: 6688)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1021, file: !35, line: 3037, baseType: !1139, size: 64, align: 64, offset: 6720)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1021, file: !35, line: 3038, baseType: !898, size: 32, align: 32, offset: 6784)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1021, file: !35, line: 3050, baseType: !901, size: 64, align: 64, offset: 6848)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1021, file: !35, line: 3065, baseType: !898, size: 32, align: 32, offset: 6912)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1021, file: !35, line: 3083, baseType: !898, size: 32, align: 32, offset: 6944)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1021, file: !35, line: 3092, baseType: !1083, size: 64, align: 32, offset: 6976)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1021, file: !35, line: 3099, baseType: !494, size: 32, align: 32, offset: 7040)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1021, file: !35, line: 3106, baseType: !1083, size: 64, align: 32, offset: 7072)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1021, file: !35, line: 3113, baseType: !1562, size: 64, align: 64, offset: 7168)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 64, align: 64)
!1563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1564)
!1564 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !35, line: 740, baseType: !1565)
!1565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !35, line: 712, size: 384, align: 64, elements: !1566)
!1566 = !{!1567, !1568, !1569, !1570, !1571, !1572, !1575}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1565, file: !35, line: 713, baseType: !34, size: 32, align: 32)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1565, file: !35, line: 714, baseType: !24, size: 32, align: 32, offset: 32)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1565, file: !35, line: 720, baseType: !1030, size: 64, align: 64, offset: 64)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1565, file: !35, line: 724, baseType: !1030, size: 64, align: 64, offset: 128)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1565, file: !35, line: 728, baseType: !898, size: 32, align: 32, offset: 192)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1565, file: !35, line: 734, baseType: !1573, size: 64, align: 64, offset: 256)
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 64, align: 64)
!1574 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1030)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1565, file: !35, line: 739, baseType: !1576, size: 64, align: 64, offset: 320)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 64, align: 64)
!1577 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1107)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1021, file: !35, line: 3129, baseType: !1177, size: 64, align: 64, offset: 7232)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1021, file: !35, line: 3130, baseType: !1177, size: 64, align: 64, offset: 7296)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1021, file: !35, line: 3131, baseType: !1177, size: 64, align: 64, offset: 7360)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1021, file: !35, line: 3132, baseType: !1177, size: 64, align: 64, offset: 7424)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1021, file: !35, line: 3139, baseType: !1173, size: 64, align: 64, offset: 7488)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1021, file: !35, line: 3147, baseType: !898, size: 32, align: 32, offset: 7552)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1021, file: !35, line: 3165, baseType: !898, size: 32, align: 32, offset: 7584)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1021, file: !35, line: 3172, baseType: !898, size: 32, align: 32, offset: 7616)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1021, file: !35, line: 3180, baseType: !898, size: 32, align: 32, offset: 7648)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1021, file: !35, line: 3191, baseType: !1391, size: 64, align: 64, offset: 7680)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1021, file: !35, line: 3199, baseType: !1139, size: 64, align: 64, offset: 7744)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1021, file: !35, line: 3207, baseType: !1173, size: 64, align: 64, offset: 7808)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1021, file: !35, line: 3214, baseType: !897, size: 32, align: 32, offset: 7872)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1021, file: !35, line: 3224, baseType: !1206, size: 64, align: 64, offset: 7936)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1021, file: !35, line: 3225, baseType: !898, size: 32, align: 32, offset: 8000)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1021, file: !35, line: 3249, baseType: !1188, size: 64, align: 64, offset: 8064)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1021, file: !35, line: 3256, baseType: !898, size: 32, align: 32, offset: 8128)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1021, file: !35, line: 3271, baseType: !898, size: 32, align: 32, offset: 8160)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1021, file: !35, line: 3279, baseType: !1177, size: 64, align: 64, offset: 8192)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1021, file: !35, line: 3301, baseType: !1188, size: 64, align: 64, offset: 8256)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1021, file: !35, line: 3310, baseType: !898, size: 32, align: 32, offset: 8320)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1021, file: !35, line: 3337, baseType: !898, size: 32, align: 32, offset: 8352)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1021, file: !35, line: 3351, baseType: !898, size: 32, align: 32, offset: 8384)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1021, file: !35, line: 3359, baseType: !898, size: 32, align: 32, offset: 8416)
!1602 = !DILocalVariable(name: "refl", arg: 1, scope: !1015, file: !905, line: 1545, type: !1018)
!1603 = !DILocation(line: 1545, column: 23, scope: !1015)
!1604 = !DILocalVariable(name: "coefs", arg: 2, scope: !1015, file: !905, line: 1545, type: !942)
!1605 = !DILocation(line: 1545, column: 44, scope: !1015)
!1606 = !DILocalVariable(name: "avctx", arg: 3, scope: !1015, file: !905, line: 1545, type: !1019)
!1607 = !DILocation(line: 1545, column: 67, scope: !1015)
!1608 = !DILocalVariable(name: "b", scope: !1015, file: !905, line: 1547, type: !898)
!1609 = !DILocation(line: 1547, column: 9, scope: !1015)
!1610 = !DILocalVariable(name: "i", scope: !1015, file: !905, line: 1547, type: !898)
!1611 = !DILocation(line: 1547, column: 12, scope: !1015)
!1612 = !DILocalVariable(name: "j", scope: !1015, file: !905, line: 1547, type: !898)
!1613 = !DILocation(line: 1547, column: 15, scope: !1015)
!1614 = !DILocalVariable(name: "buffer1", scope: !1015, file: !905, line: 1548, type: !1615)
!1615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !898, size: 320, align: 32, elements: !943)
!1616 = !DILocation(line: 1548, column: 9, scope: !1015)
!1617 = !DILocalVariable(name: "buffer2", scope: !1015, file: !905, line: 1549, type: !1615)
!1618 = !DILocation(line: 1549, column: 9, scope: !1015)
!1619 = !DILocalVariable(name: "bp1", scope: !1015, file: !905, line: 1550, type: !1018)
!1620 = !DILocation(line: 1550, column: 10, scope: !1015)
!1621 = !DILocation(line: 1550, column: 16, scope: !1015)
!1622 = !DILocalVariable(name: "bp2", scope: !1015, file: !905, line: 1551, type: !1018)
!1623 = !DILocation(line: 1551, column: 10, scope: !1015)
!1624 = !DILocation(line: 1551, column: 16, scope: !1015)
!1625 = !DILocation(line: 1553, column: 11, scope: !1626)
!1626 = distinct !DILexicalBlock(scope: !1015, file: !905, line: 1553, column: 5)
!1627 = !DILocation(line: 1553, column: 10, scope: !1626)
!1628 = !DILocation(line: 1553, column: 15, scope: !1629)
!1629 = !DILexicalBlockFile(scope: !1630, file: !905, discriminator: 1)
!1630 = distinct !DILexicalBlock(scope: !1626, file: !905, line: 1553, column: 5)
!1631 = !DILocation(line: 1553, column: 17, scope: !1629)
!1632 = !DILocation(line: 1553, column: 5, scope: !1629)
!1633 = !DILocation(line: 1554, column: 28, scope: !1630)
!1634 = !DILocation(line: 1554, column: 22, scope: !1630)
!1635 = !DILocation(line: 1554, column: 17, scope: !1630)
!1636 = !DILocation(line: 1554, column: 9, scope: !1630)
!1637 = !DILocation(line: 1554, column: 20, scope: !1630)
!1638 = !DILocation(line: 1553, column: 24, scope: !1639)
!1639 = !DILexicalBlockFile(scope: !1630, file: !905, discriminator: 2)
!1640 = !DILocation(line: 1553, column: 5, scope: !1639)
!1641 = distinct !{!1641, !1642}
!1642 = !DILocation(line: 1553, column: 5, scope: !1015)
!1643 = !DILocation(line: 1556, column: 19, scope: !1015)
!1644 = !DILocation(line: 1556, column: 5, scope: !1015)
!1645 = !DILocation(line: 1556, column: 17, scope: !1015)
!1646 = !DILocation(line: 1558, column: 20, scope: !1647)
!1647 = distinct !DILexicalBlock(scope: !1015, file: !905, line: 1558, column: 9)
!1648 = !DILocation(line: 1558, column: 31, scope: !1647)
!1649 = !DILocation(line: 1558, column: 40, scope: !1647)
!1650 = !DILocation(line: 1558, column: 9, scope: !1015)
!1651 = !DILocation(line: 1559, column: 16, scope: !1652)
!1652 = distinct !DILexicalBlock(scope: !1647, file: !905, line: 1558, column: 50)
!1653 = !DILocation(line: 1559, column: 9, scope: !1652)
!1654 = !DILocation(line: 1560, column: 9, scope: !1652)
!1655 = !DILocation(line: 1563, column: 12, scope: !1656)
!1656 = distinct !DILexicalBlock(scope: !1015, file: !905, line: 1563, column: 5)
!1657 = !DILocation(line: 1563, column: 10, scope: !1656)
!1658 = !DILocation(line: 1563, column: 21, scope: !1659)
!1659 = !DILexicalBlockFile(scope: !1660, file: !905, discriminator: 1)
!1660 = distinct !DILexicalBlock(scope: !1656, file: !905, line: 1563, column: 5)
!1661 = !DILocation(line: 1563, column: 23, scope: !1659)
!1662 = !DILocation(line: 1563, column: 5, scope: !1659)
!1663 = !DILocation(line: 1564, column: 26, scope: !1664)
!1664 = distinct !DILexicalBlock(scope: !1660, file: !905, line: 1563, column: 34)
!1665 = !DILocation(line: 1564, column: 27, scope: !1664)
!1666 = !DILocation(line: 1564, column: 22, scope: !1664)
!1667 = !DILocation(line: 1564, column: 37, scope: !1664)
!1668 = !DILocation(line: 1564, column: 38, scope: !1664)
!1669 = !DILocation(line: 1564, column: 33, scope: !1664)
!1670 = !DILocation(line: 1564, column: 31, scope: !1664)
!1671 = !DILocation(line: 1564, column: 43, scope: !1664)
!1672 = !DILocation(line: 1564, column: 19, scope: !1664)
!1673 = !DILocation(line: 1564, column: 11, scope: !1664)
!1674 = !DILocation(line: 1566, column: 14, scope: !1675)
!1675 = distinct !DILexicalBlock(scope: !1664, file: !905, line: 1566, column: 13)
!1676 = !DILocation(line: 1566, column: 13, scope: !1664)
!1677 = !DILocation(line: 1567, column: 15, scope: !1675)
!1678 = !DILocation(line: 1567, column: 13, scope: !1675)
!1679 = !DILocation(line: 1569, column: 25, scope: !1664)
!1680 = !DILocation(line: 1569, column: 23, scope: !1664)
!1681 = !DILocation(line: 1569, column: 11, scope: !1664)
!1682 = !DILocation(line: 1570, column: 15, scope: !1683)
!1683 = distinct !DILexicalBlock(scope: !1664, file: !905, line: 1570, column: 9)
!1684 = !DILocation(line: 1570, column: 14, scope: !1683)
!1685 = !DILocation(line: 1570, column: 19, scope: !1686)
!1686 = !DILexicalBlockFile(scope: !1687, file: !905, discriminator: 1)
!1687 = distinct !DILexicalBlock(scope: !1683, file: !905, line: 1570, column: 9)
!1688 = !DILocation(line: 1570, column: 24, scope: !1686)
!1689 = !DILocation(line: 1570, column: 21, scope: !1686)
!1690 = !DILocation(line: 1570, column: 9, scope: !1686)
!1691 = !DILocation(line: 1576, column: 33, scope: !1692)
!1692 = distinct !DILexicalBlock(scope: !1687, file: !905, line: 1570, column: 32)
!1693 = !DILocation(line: 1576, column: 29, scope: !1692)
!1694 = !DILocation(line: 1576, column: 50, scope: !1692)
!1695 = !DILocation(line: 1576, column: 51, scope: !1692)
!1696 = !DILocation(line: 1576, column: 45, scope: !1692)
!1697 = !DILocation(line: 1576, column: 71, scope: !1692)
!1698 = !DILocation(line: 1576, column: 73, scope: !1692)
!1699 = !DILocation(line: 1576, column: 72, scope: !1692)
!1700 = !DILocation(line: 1576, column: 67, scope: !1692)
!1701 = !DILocation(line: 1576, column: 55, scope: !1692)
!1702 = !DILocation(line: 1576, column: 77, scope: !1692)
!1703 = !DILocation(line: 1576, column: 36, scope: !1692)
!1704 = !DILocation(line: 1576, column: 97, scope: !1692)
!1705 = !DILocation(line: 1576, column: 85, scope: !1692)
!1706 = !DILocation(line: 1576, column: 100, scope: !1692)
!1707 = !DILocation(line: 1576, column: 17, scope: !1692)
!1708 = !DILocation(line: 1576, column: 13, scope: !1692)
!1709 = !DILocation(line: 1576, column: 20, scope: !1692)
!1710 = !DILocation(line: 1577, column: 9, scope: !1692)
!1711 = !DILocation(line: 1570, column: 28, scope: !1712)
!1712 = !DILexicalBlockFile(scope: !1687, file: !905, discriminator: 2)
!1713 = !DILocation(line: 1570, column: 9, scope: !1712)
!1714 = distinct !{!1714, !1715}
!1715 = !DILocation(line: 1570, column: 9, scope: !1664)
!1716 = !DILocation(line: 1579, column: 28, scope: !1717)
!1717 = distinct !DILexicalBlock(scope: !1664, file: !905, line: 1579, column: 13)
!1718 = !DILocation(line: 1579, column: 24, scope: !1717)
!1719 = !DILocation(line: 1579, column: 31, scope: !1717)
!1720 = !DILocation(line: 1579, column: 40, scope: !1717)
!1721 = !DILocation(line: 1579, column: 13, scope: !1664)
!1722 = !DILocation(line: 1580, column: 13, scope: !1717)
!1723 = !DILocation(line: 1582, column: 23, scope: !1664)
!1724 = !DILocation(line: 1582, column: 19, scope: !1664)
!1725 = !DILocation(line: 1582, column: 14, scope: !1664)
!1726 = !DILocation(line: 1582, column: 9, scope: !1664)
!1727 = !DILocation(line: 1582, column: 17, scope: !1664)
!1728 = !DILocation(line: 1584, column: 9, scope: !1664)
!1729 = distinct !{!1729, !1728}
!1730 = !DILocalVariable(name: "SWAP_tmp", scope: !1731, file: !905, line: 1584, type: !1018)
!1731 = distinct !DILexicalBlock(scope: !1664, file: !905, line: 1584, column: 11)
!1732 = !DILocation(line: 1584, column: 18, scope: !1731)
!1733 = !DILocation(line: 1584, column: 28, scope: !1734)
!1734 = !DILexicalBlockFile(scope: !1731, file: !905, discriminator: 1)
!1735 = !DILocation(line: 1584, column: 18, scope: !1734)
!1736 = !DILocation(line: 1584, column: 38, scope: !1734)
!1737 = !DILocation(line: 1584, column: 36, scope: !1734)
!1738 = !DILocation(line: 1584, column: 48, scope: !1734)
!1739 = !DILocation(line: 1584, column: 46, scope: !1734)
!1740 = !DILocation(line: 1584, column: 57, scope: !1734)
!1741 = !DILocation(line: 1585, column: 5, scope: !1664)
!1742 = !DILocation(line: 1563, column: 30, scope: !1743)
!1743 = !DILexicalBlockFile(scope: !1660, file: !905, discriminator: 2)
!1744 = !DILocation(line: 1563, column: 5, scope: !1743)
!1745 = distinct !{!1745, !1746}
!1746 = !DILocation(line: 1563, column: 5, scope: !1015)
!1747 = !DILocation(line: 1586, column: 5, scope: !1015)
!1748 = !DILocation(line: 1587, column: 1, scope: !1015)
!1749 = distinct !DISubprogram(name: "ff_eval_coefs", scope: !905, file: !905, line: 1593, type: !1750, isLocal: false, isDefinition: true, scopeLine: 1594, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !974)
!1750 = !DISubroutineType(types: !1751)
!1751 = !{null, !1018, !1093}
!1752 = !DILocalVariable(name: "coefs", arg: 1, scope: !1749, file: !905, line: 1593, type: !1018)
!1753 = !DILocation(line: 1593, column: 25, scope: !1749)
!1754 = !DILocalVariable(name: "refl", arg: 2, scope: !1749, file: !905, line: 1593, type: !1093)
!1755 = !DILocation(line: 1593, column: 43, scope: !1749)
!1756 = !DILocalVariable(name: "buffer", scope: !1749, file: !905, line: 1595, type: !1615)
!1757 = !DILocation(line: 1595, column: 9, scope: !1749)
!1758 = !DILocalVariable(name: "b1", scope: !1749, file: !905, line: 1596, type: !1018)
!1759 = !DILocation(line: 1596, column: 10, scope: !1749)
!1760 = !DILocation(line: 1596, column: 15, scope: !1749)
!1761 = !DILocalVariable(name: "b2", scope: !1749, file: !905, line: 1597, type: !1018)
!1762 = !DILocation(line: 1597, column: 10, scope: !1749)
!1763 = !DILocation(line: 1597, column: 15, scope: !1749)
!1764 = !DILocalVariable(name: "i", scope: !1749, file: !905, line: 1598, type: !898)
!1765 = !DILocation(line: 1598, column: 9, scope: !1749)
!1766 = !DILocalVariable(name: "j", scope: !1749, file: !905, line: 1598, type: !898)
!1767 = !DILocation(line: 1598, column: 12, scope: !1749)
!1768 = !DILocation(line: 1600, column: 11, scope: !1769)
!1769 = distinct !DILexicalBlock(scope: !1749, file: !905, line: 1600, column: 5)
!1770 = !DILocation(line: 1600, column: 10, scope: !1769)
!1771 = !DILocation(line: 1600, column: 15, scope: !1772)
!1772 = !DILexicalBlockFile(scope: !1773, file: !905, discriminator: 1)
!1773 = distinct !DILexicalBlock(scope: !1769, file: !905, line: 1600, column: 5)
!1774 = !DILocation(line: 1600, column: 17, scope: !1772)
!1775 = !DILocation(line: 1600, column: 5, scope: !1772)
!1776 = !DILocation(line: 1601, column: 22, scope: !1777)
!1777 = distinct !DILexicalBlock(scope: !1773, file: !905, line: 1600, column: 28)
!1778 = !DILocation(line: 1601, column: 17, scope: !1777)
!1779 = !DILocation(line: 1601, column: 25, scope: !1777)
!1780 = !DILocation(line: 1601, column: 12, scope: !1777)
!1781 = !DILocation(line: 1601, column: 9, scope: !1777)
!1782 = !DILocation(line: 1601, column: 15, scope: !1777)
!1783 = !DILocation(line: 1603, column: 15, scope: !1784)
!1784 = distinct !DILexicalBlock(scope: !1777, file: !905, line: 1603, column: 9)
!1785 = !DILocation(line: 1603, column: 14, scope: !1784)
!1786 = !DILocation(line: 1603, column: 19, scope: !1787)
!1787 = !DILexicalBlockFile(scope: !1788, file: !905, discriminator: 1)
!1788 = distinct !DILexicalBlock(scope: !1784, file: !905, line: 1603, column: 9)
!1789 = !DILocation(line: 1603, column: 23, scope: !1787)
!1790 = !DILocation(line: 1603, column: 21, scope: !1787)
!1791 = !DILocation(line: 1603, column: 9, scope: !1787)
!1792 = !DILocation(line: 1604, column: 33, scope: !1788)
!1793 = !DILocation(line: 1604, column: 28, scope: !1788)
!1794 = !DILocation(line: 1604, column: 51, scope: !1788)
!1795 = !DILocation(line: 1604, column: 53, scope: !1788)
!1796 = !DILocation(line: 1604, column: 52, scope: !1788)
!1797 = !DILocation(line: 1604, column: 54, scope: !1788)
!1798 = !DILocation(line: 1604, column: 48, scope: !1788)
!1799 = !DILocation(line: 1604, column: 36, scope: !1788)
!1800 = !DILocation(line: 1604, column: 59, scope: !1788)
!1801 = !DILocation(line: 1604, column: 71, scope: !1788)
!1802 = !DILocation(line: 1604, column: 68, scope: !1788)
!1803 = !DILocation(line: 1604, column: 66, scope: !1788)
!1804 = !DILocation(line: 1604, column: 16, scope: !1788)
!1805 = !DILocation(line: 1604, column: 13, scope: !1788)
!1806 = !DILocation(line: 1604, column: 19, scope: !1788)
!1807 = !DILocation(line: 1603, column: 27, scope: !1808)
!1808 = !DILexicalBlockFile(scope: !1788, file: !905, discriminator: 2)
!1809 = !DILocation(line: 1603, column: 9, scope: !1808)
!1810 = distinct !{!1810, !1811}
!1811 = !DILocation(line: 1603, column: 9, scope: !1777)
!1812 = !DILocation(line: 1606, column: 9, scope: !1777)
!1813 = distinct !{!1813, !1812}
!1814 = !DILocalVariable(name: "SWAP_tmp", scope: !1815, file: !905, line: 1606, type: !1018)
!1815 = distinct !DILexicalBlock(scope: !1777, file: !905, line: 1606, column: 11)
!1816 = !DILocation(line: 1606, column: 18, scope: !1815)
!1817 = !DILocation(line: 1606, column: 28, scope: !1818)
!1818 = !DILexicalBlockFile(scope: !1815, file: !905, discriminator: 1)
!1819 = !DILocation(line: 1606, column: 18, scope: !1818)
!1820 = !DILocation(line: 1606, column: 36, scope: !1818)
!1821 = !DILocation(line: 1606, column: 34, scope: !1818)
!1822 = !DILocation(line: 1606, column: 44, scope: !1818)
!1823 = !DILocation(line: 1606, column: 42, scope: !1818)
!1824 = !DILocation(line: 1606, column: 53, scope: !1818)
!1825 = !DILocation(line: 1607, column: 5, scope: !1777)
!1826 = !DILocation(line: 1600, column: 24, scope: !1827)
!1827 = !DILexicalBlockFile(scope: !1773, file: !905, discriminator: 2)
!1828 = !DILocation(line: 1600, column: 5, scope: !1827)
!1829 = distinct !{!1829, !1830}
!1830 = !DILocation(line: 1600, column: 5, scope: !1749)
!1831 = !DILocation(line: 1609, column: 11, scope: !1832)
!1832 = distinct !DILexicalBlock(scope: !1749, file: !905, line: 1609, column: 5)
!1833 = !DILocation(line: 1609, column: 10, scope: !1832)
!1834 = !DILocation(line: 1609, column: 15, scope: !1835)
!1835 = !DILexicalBlockFile(scope: !1836, file: !905, discriminator: 1)
!1836 = distinct !DILexicalBlock(scope: !1832, file: !905, line: 1609, column: 5)
!1837 = !DILocation(line: 1609, column: 17, scope: !1835)
!1838 = !DILocation(line: 1609, column: 5, scope: !1835)
!1839 = !DILocation(line: 1610, column: 15, scope: !1836)
!1840 = !DILocation(line: 1610, column: 9, scope: !1836)
!1841 = !DILocation(line: 1610, column: 18, scope: !1836)
!1842 = !DILocation(line: 1609, column: 24, scope: !1843)
!1843 = !DILexicalBlockFile(scope: !1836, file: !905, discriminator: 2)
!1844 = !DILocation(line: 1609, column: 5, scope: !1843)
!1845 = distinct !{!1845, !1846}
!1846 = !DILocation(line: 1609, column: 5, scope: !1749)
!1847 = !DILocation(line: 1611, column: 1, scope: !1749)
!1848 = distinct !DISubprogram(name: "ff_int_to_int16", scope: !905, file: !905, line: 1613, type: !1849, isLocal: false, isDefinition: true, scopeLine: 1614, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !974)
!1849 = !DISubroutineType(types: !1850)
!1850 = !{null, !973, !1093}
!1851 = !DILocalVariable(name: "out", arg: 1, scope: !1848, file: !905, line: 1613, type: !973)
!1852 = !DILocation(line: 1613, column: 31, scope: !1848)
!1853 = !DILocalVariable(name: "inp", arg: 2, scope: !1848, file: !905, line: 1613, type: !1093)
!1854 = !DILocation(line: 1613, column: 47, scope: !1848)
!1855 = !DILocalVariable(name: "i", scope: !1848, file: !905, line: 1615, type: !898)
!1856 = !DILocation(line: 1615, column: 9, scope: !1848)
!1857 = !DILocation(line: 1617, column: 12, scope: !1858)
!1858 = distinct !DILexicalBlock(scope: !1848, file: !905, line: 1617, column: 5)
!1859 = !DILocation(line: 1617, column: 10, scope: !1858)
!1860 = !DILocation(line: 1617, column: 17, scope: !1861)
!1861 = !DILexicalBlockFile(scope: !1862, file: !905, discriminator: 1)
!1862 = distinct !DILexicalBlock(scope: !1858, file: !905, line: 1617, column: 5)
!1863 = !DILocation(line: 1617, column: 19, scope: !1861)
!1864 = !DILocation(line: 1617, column: 5, scope: !1861)
!1865 = !DILocation(line: 1618, column: 22, scope: !1862)
!1866 = !DILocation(line: 1618, column: 18, scope: !1862)
!1867 = !DILocation(line: 1618, column: 13, scope: !1862)
!1868 = !DILocation(line: 1618, column: 16, scope: !1862)
!1869 = !DILocation(line: 1618, column: 9, scope: !1862)
!1870 = !DILocation(line: 1617, column: 26, scope: !1871)
!1871 = !DILexicalBlockFile(scope: !1862, file: !905, discriminator: 2)
!1872 = !DILocation(line: 1617, column: 5, scope: !1871)
!1873 = distinct !{!1873, !1874}
!1874 = !DILocation(line: 1617, column: 5, scope: !1848)
!1875 = !DILocation(line: 1619, column: 1, scope: !1848)
!1876 = distinct !DISubprogram(name: "ff_t_sqrt", scope: !905, file: !905, line: 1625, type: !1877, isLocal: false, isDefinition: true, scopeLine: 1626, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !974)
!1877 = !DISubroutineType(types: !1878)
!1878 = !{!898, !897}
!1879 = !DILocalVariable(name: "x", arg: 1, scope: !1876, file: !905, line: 1625, type: !897)
!1880 = !DILocation(line: 1625, column: 28, scope: !1876)
!1881 = !DILocalVariable(name: "s", scope: !1876, file: !905, line: 1627, type: !898)
!1882 = !DILocation(line: 1627, column: 9, scope: !1876)
!1883 = !DILocation(line: 1628, column: 5, scope: !1876)
!1884 = !DILocation(line: 1628, column: 12, scope: !1885)
!1885 = !DILexicalBlockFile(scope: !1876, file: !905, discriminator: 1)
!1886 = !DILocation(line: 1628, column: 14, scope: !1885)
!1887 = !DILocation(line: 1628, column: 5, scope: !1885)
!1888 = !DILocation(line: 1629, column: 10, scope: !1889)
!1889 = distinct !DILexicalBlock(scope: !1876, file: !905, line: 1628, column: 23)
!1890 = !DILocation(line: 1630, column: 11, scope: !1889)
!1891 = !DILocation(line: 1628, column: 5, scope: !1892)
!1892 = !DILexicalBlockFile(scope: !1876, file: !905, discriminator: 2)
!1893 = distinct !{!1893, !1883}
!1894 = !DILocation(line: 1633, column: 20, scope: !1876)
!1895 = !DILocation(line: 1633, column: 22, scope: !1876)
!1896 = !DILocation(line: 1633, column: 12, scope: !1876)
!1897 = !DILocation(line: 1633, column: 32, scope: !1876)
!1898 = !DILocation(line: 1633, column: 29, scope: !1876)
!1899 = !DILocation(line: 1633, column: 5, scope: !1876)
!1900 = distinct !DISubprogram(name: "ff_sqrt", scope: !1901, file: !1901, line: 207, type: !1902, isLocal: true, isDefinition: true, scopeLine: 208, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !974)
!1901 = !DIFile(filename: "libavcodec/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1902 = !DISubroutineType(types: !1903)
!1903 = !{!897, !897}
!1904 = !DILocalVariable(name: "a", arg: 1, scope: !1900, file: !1901, line: 207, type: !897)
!1905 = !DILocation(line: 207, column: 72, scope: !1900)
!1906 = !DILocalVariable(name: "b", scope: !1900, file: !1901, line: 209, type: !897)
!1907 = !DILocation(line: 209, column: 18, scope: !1900)
!1908 = !DILocation(line: 211, column: 9, scope: !1909)
!1909 = distinct !DILexicalBlock(scope: !1900, file: !1901, line: 211, column: 9)
!1910 = !DILocation(line: 211, column: 11, scope: !1909)
!1911 = !DILocation(line: 211, column: 9, scope: !1900)
!1912 = !DILocation(line: 211, column: 38, scope: !1913)
!1913 = !DILexicalBlockFile(scope: !1909, file: !1901, discriminator: 1)
!1914 = !DILocation(line: 211, column: 40, scope: !1913)
!1915 = !DILocation(line: 211, column: 26, scope: !1913)
!1916 = !DILocation(line: 211, column: 45, scope: !1913)
!1917 = !DILocation(line: 211, column: 50, scope: !1913)
!1918 = !DILocation(line: 211, column: 18, scope: !1913)
!1919 = !DILocation(line: 212, column: 14, scope: !1920)
!1920 = distinct !DILexicalBlock(scope: !1909, file: !1901, line: 212, column: 14)
!1921 = !DILocation(line: 212, column: 16, scope: !1920)
!1922 = !DILocation(line: 212, column: 14, scope: !1909)
!1923 = !DILocation(line: 212, column: 45, scope: !1924)
!1924 = !DILexicalBlockFile(scope: !1920, file: !1901, discriminator: 1)
!1925 = !DILocation(line: 212, column: 47, scope: !1924)
!1926 = !DILocation(line: 212, column: 33, scope: !1924)
!1927 = !DILocation(line: 212, column: 53, scope: !1924)
!1928 = !DILocation(line: 212, column: 31, scope: !1924)
!1929 = !DILocation(line: 212, column: 29, scope: !1924)
!1930 = !DILocation(line: 214, column: 14, scope: !1931)
!1931 = distinct !DILexicalBlock(scope: !1920, file: !1901, line: 214, column: 14)
!1932 = !DILocation(line: 214, column: 16, scope: !1931)
!1933 = !DILocation(line: 214, column: 14, scope: !1920)
!1934 = !DILocation(line: 214, column: 45, scope: !1935)
!1935 = !DILexicalBlockFile(scope: !1931, file: !1901, discriminator: 1)
!1936 = !DILocation(line: 214, column: 47, scope: !1935)
!1937 = !DILocation(line: 214, column: 33, scope: !1935)
!1938 = !DILocation(line: 214, column: 53, scope: !1935)
!1939 = !DILocation(line: 214, column: 31, scope: !1935)
!1940 = !DILocation(line: 214, column: 29, scope: !1935)
!1941 = !DILocation(line: 215, column: 14, scope: !1942)
!1942 = distinct !DILexicalBlock(scope: !1931, file: !1901, line: 215, column: 14)
!1943 = !DILocation(line: 215, column: 16, scope: !1942)
!1944 = !DILocation(line: 215, column: 14, scope: !1931)
!1945 = !DILocation(line: 215, column: 45, scope: !1946)
!1946 = !DILexicalBlockFile(scope: !1942, file: !1901, discriminator: 1)
!1947 = !DILocation(line: 215, column: 47, scope: !1946)
!1948 = !DILocation(line: 215, column: 33, scope: !1946)
!1949 = !DILocation(line: 215, column: 31, scope: !1946)
!1950 = !DILocation(line: 215, column: 29, scope: !1946)
!1951 = !DILocalVariable(name: "s", scope: !1952, file: !1901, line: 218, type: !898)
!1952 = distinct !DILexicalBlock(scope: !1942, file: !1901, line: 217, column: 10)
!1953 = !DILocation(line: 218, column: 13, scope: !1952)
!1954 = !DILocation(line: 218, column: 38, scope: !1952)
!1955 = !DILocation(line: 218, column: 40, scope: !1952)
!1956 = !DILocation(line: 218, column: 46, scope: !1952)
!1957 = !DILocation(line: 218, column: 23, scope: !1952)
!1958 = !DILocation(line: 218, column: 21, scope: !1952)
!1959 = !DILocation(line: 218, column: 51, scope: !1952)
!1960 = !DILocalVariable(name: "c", scope: !1952, file: !1901, line: 219, type: !897)
!1961 = !DILocation(line: 219, column: 22, scope: !1952)
!1962 = !DILocation(line: 219, column: 26, scope: !1952)
!1963 = !DILocation(line: 219, column: 32, scope: !1952)
!1964 = !DILocation(line: 219, column: 34, scope: !1952)
!1965 = !DILocation(line: 219, column: 28, scope: !1952)
!1966 = !DILocation(line: 220, column: 25, scope: !1952)
!1967 = !DILocation(line: 220, column: 31, scope: !1952)
!1968 = !DILocation(line: 220, column: 33, scope: !1952)
!1969 = !DILocation(line: 220, column: 27, scope: !1952)
!1970 = !DILocation(line: 220, column: 13, scope: !1952)
!1971 = !DILocation(line: 220, column: 11, scope: !1952)
!1972 = !DILocation(line: 221, column: 37, scope: !1952)
!1973 = !DILocation(line: 221, column: 27, scope: !1952)
!1974 = !DILocation(line: 221, column: 53, scope: !1952)
!1975 = !DILocation(line: 221, column: 42, scope: !1952)
!1976 = !DILocation(line: 221, column: 40, scope: !1952)
!1977 = !DILocation(line: 221, column: 57, scope: !1952)
!1978 = !DILocation(line: 221, column: 14, scope: !1952)
!1979 = !DILocation(line: 221, column: 68, scope: !1952)
!1980 = !DILocation(line: 221, column: 73, scope: !1952)
!1981 = !DILocation(line: 221, column: 70, scope: !1952)
!1982 = !DILocation(line: 221, column: 65, scope: !1952)
!1983 = !DILocation(line: 221, column: 11, scope: !1952)
!1984 = !DILocation(line: 224, column: 12, scope: !1900)
!1985 = !DILocation(line: 224, column: 17, scope: !1900)
!1986 = !DILocation(line: 224, column: 21, scope: !1900)
!1987 = !DILocation(line: 224, column: 25, scope: !1900)
!1988 = !DILocation(line: 224, column: 23, scope: !1900)
!1989 = !DILocation(line: 224, column: 19, scope: !1900)
!1990 = !DILocation(line: 224, column: 14, scope: !1900)
!1991 = !DILocation(line: 224, column: 5, scope: !1900)
!1992 = !DILocation(line: 225, column: 1, scope: !1900)
!1993 = distinct !DISubprogram(name: "ff_rms", scope: !905, file: !905, line: 1636, type: !1994, isLocal: false, isDefinition: true, scopeLine: 1637, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !974)
!1994 = !DISubroutineType(types: !1995)
!1995 = !{!897, !1093}
!1996 = !DILocalVariable(name: "data", arg: 1, scope: !1993, file: !905, line: 1636, type: !1093)
!1997 = !DILocation(line: 1636, column: 32, scope: !1993)
!1998 = !DILocalVariable(name: "i", scope: !1993, file: !905, line: 1638, type: !898)
!1999 = !DILocation(line: 1638, column: 9, scope: !1993)
!2000 = !DILocalVariable(name: "res", scope: !1993, file: !905, line: 1639, type: !897)
!2001 = !DILocation(line: 1639, column: 18, scope: !1993)
!2002 = !DILocalVariable(name: "b", scope: !1993, file: !905, line: 1640, type: !898)
!2003 = !DILocation(line: 1640, column: 9, scope: !1993)
!2004 = !DILocation(line: 1642, column: 12, scope: !2005)
!2005 = distinct !DILexicalBlock(scope: !1993, file: !905, line: 1642, column: 5)
!2006 = !DILocation(line: 1642, column: 10, scope: !2005)
!2007 = !DILocation(line: 1642, column: 17, scope: !2008)
!2008 = !DILexicalBlockFile(scope: !2009, file: !905, discriminator: 1)
!2009 = distinct !DILexicalBlock(scope: !2005, file: !905, line: 1642, column: 5)
!2010 = !DILocation(line: 1642, column: 19, scope: !2008)
!2011 = !DILocation(line: 1642, column: 5, scope: !2008)
!2012 = !DILocation(line: 1643, column: 35, scope: !2013)
!2013 = distinct !DILexicalBlock(scope: !2009, file: !905, line: 1642, column: 30)
!2014 = !DILocation(line: 1643, column: 30, scope: !2013)
!2015 = !DILocation(line: 1643, column: 43, scope: !2013)
!2016 = !DILocation(line: 1643, column: 38, scope: !2013)
!2017 = !DILocation(line: 1643, column: 37, scope: !2013)
!2018 = !DILocation(line: 1643, column: 28, scope: !2013)
!2019 = !DILocation(line: 1643, column: 47, scope: !2013)
!2020 = !DILocation(line: 1643, column: 56, scope: !2013)
!2021 = !DILocation(line: 1643, column: 54, scope: !2013)
!2022 = !DILocation(line: 1643, column: 61, scope: !2013)
!2023 = !DILocation(line: 1643, column: 13, scope: !2013)
!2024 = !DILocation(line: 1645, column: 13, scope: !2025)
!2025 = distinct !DILexicalBlock(scope: !2013, file: !905, line: 1645, column: 13)
!2026 = !DILocation(line: 1645, column: 17, scope: !2025)
!2027 = !DILocation(line: 1645, column: 13, scope: !2013)
!2028 = !DILocation(line: 1646, column: 13, scope: !2025)
!2029 = !DILocation(line: 1648, column: 9, scope: !2013)
!2030 = !DILocation(line: 1648, column: 16, scope: !2031)
!2031 = !DILexicalBlockFile(scope: !2013, file: !905, discriminator: 1)
!2032 = !DILocation(line: 1648, column: 20, scope: !2031)
!2033 = !DILocation(line: 1648, column: 9, scope: !2031)
!2034 = !DILocation(line: 1649, column: 14, scope: !2035)
!2035 = distinct !DILexicalBlock(scope: !2013, file: !905, line: 1648, column: 31)
!2036 = !DILocation(line: 1650, column: 17, scope: !2035)
!2037 = !DILocation(line: 1648, column: 9, scope: !2038)
!2038 = !DILexicalBlockFile(scope: !2013, file: !905, discriminator: 2)
!2039 = distinct !{!2039, !2029}
!2040 = !DILocation(line: 1652, column: 5, scope: !2013)
!2041 = !DILocation(line: 1642, column: 26, scope: !2042)
!2042 = !DILexicalBlockFile(scope: !2009, file: !905, discriminator: 2)
!2043 = !DILocation(line: 1642, column: 5, scope: !2042)
!2044 = distinct !{!2044, !2045}
!2045 = !DILocation(line: 1642, column: 5, scope: !1993)
!2046 = !DILocation(line: 1654, column: 22, scope: !1993)
!2047 = !DILocation(line: 1654, column: 12, scope: !1993)
!2048 = !DILocation(line: 1654, column: 30, scope: !1993)
!2049 = !DILocation(line: 1654, column: 27, scope: !1993)
!2050 = !DILocation(line: 1654, column: 5, scope: !1993)
!2051 = !DILocation(line: 1655, column: 1, scope: !1993)
!2052 = distinct !DISubprogram(name: "ff_interp", scope: !905, file: !905, line: 1657, type: !2053, isLocal: false, isDefinition: true, scopeLine: 1658, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !974)
!2053 = !DISubroutineType(types: !2054)
!2054 = !{!898, !2055, !973, !898, !898, !898}
!2055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2056, size: 64, align: 64)
!2056 = !DIDerivedType(tag: DW_TAG_typedef, name: "RA144Context", file: !2057, line: 64, baseType: !2058)
!2057 = !DIFile(filename: "libavcodec/ra144.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RA144Context", file: !2057, line: 37, size: 310016, align: 256, elements: !2059)
!2059 = !{!2060, !2061, !2085, !2133, !2150, !2151, !2152, !2155, !2158, !2160, !2164, !2168, !2172}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !2058, file: !2057, line: 38, baseType: !1019, size: 64, align: 64)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "adsp", scope: !2058, file: !2057, line: 39, baseType: !2062, size: 192, align: 64, offset: 64)
!2062 = !DIDerivedType(tag: DW_TAG_typedef, name: "AudioDSPContext", file: !2063, line: 53, baseType: !2064)
!2063 = !DIFile(filename: "libavcodec/audiodsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioDSPContext", file: !2063, line: 24, size: 192, align: 64, elements: !2065)
!2065 = !{!2066, !2071, !2078}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "scalarproduct_int16", scope: !2064, file: !2063, line: 29, baseType: !2067, size: 64, align: 64)
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 64, align: 64)
!2068 = !DISubroutineType(types: !2069)
!2069 = !{!2070, !942, !942, !898}
!2070 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !900, line: 38, baseType: !898)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "vector_clip_int32", scope: !2064, file: !2063, line: 46, baseType: !2072, size: 64, align: 64, offset: 64)
!2072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 64, align: 64)
!2073 = !DISubroutineType(types: !2074)
!2074 = !{null, !2075, !2076, !2070, !2070, !897}
!2075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 64, align: 64)
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2077, size: 64, align: 64)
!2077 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2070)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "vector_clipf", scope: !2064, file: !2063, line: 49, baseType: !2079, size: 64, align: 64, offset: 128)
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 64, align: 64)
!2080 = !DISubroutineType(types: !2081)
!2081 = !{null, !2082, !2083, !898, !1361, !1361}
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1361, size: 64, align: 64)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 64, align: 64)
!2084 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1361)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_ctx", scope: !2058, file: !2057, line: 40, baseType: !2086, size: 302080, align: 256, offset: 256)
!2086 = !DIDerivedType(tag: DW_TAG_typedef, name: "LPCContext", file: !888, line: 87, baseType: !2087)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LPCContext", file: !888, line: 52, size: 302080, align: 256, elements: !2088)
!2088 = !{!2089, !2090, !2091, !2092, !2095, !2096, !2100, !2106}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "blocksize", scope: !2087, file: !888, line: 53, baseType: !898, size: 32, align: 32)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "max_order", scope: !2087, file: !888, line: 54, baseType: !898, size: 32, align: 32, offset: 32)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_type", scope: !2087, file: !888, line: 55, baseType: !887, size: 32, align: 32, offset: 64)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "windowed_buffer", scope: !2087, file: !888, line: 56, baseType: !2093, size: 64, align: 64, offset: 128)
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 64, align: 64)
!2094 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "windowed_samples", scope: !2087, file: !888, line: 57, baseType: !2093, size: 64, align: 64, offset: 192)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_apply_welch_window", scope: !2087, file: !888, line: 67, baseType: !2097, size: 64, align: 64, offset: 256)
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 64, align: 64)
!2098 = !DISubroutineType(types: !2099)
!2099 = !{null, !2076, !898, !2093}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_compute_autocorr", scope: !2087, file: !888, line: 82, baseType: !2101, size: 64, align: 64, offset: 320)
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2102, size: 64, align: 64)
!2102 = !DISubroutineType(types: !2103)
!2103 = !{null, !2104, !898, !898, !2093}
!2104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2105, size: 64, align: 64)
!2105 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2094)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "lls_models", scope: !2087, file: !888, line: 86, baseType: !2107, size: 301568, align: 256, offset: 512)
!2107 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2108, size: 301568, align: 256, elements: !2131)
!2108 = !DIDerivedType(tag: DW_TAG_typedef, name: "LLSModel", file: !2109, line: 58, baseType: !2110)
!2109 = !DIFile(filename: "./libavutil/lls.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LLSModel", file: !2109, line: 38, size: 150784, align: 256, elements: !2111)
!2111 = !{!2112, !2116, !2119, !2121, !2122, !2127}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "covariance", scope: !2110, file: !2109, line: 39, baseType: !2113, size: 82944, align: 64)
!2113 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2094, size: 82944, align: 64, elements: !2114)
!2114 = !{!2115, !2115}
!2115 = !DISubrange(count: 36)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "coeff", scope: !2110, file: !2109, line: 40, baseType: !2117, size: 65536, align: 64, offset: 82944)
!2117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2094, size: 65536, align: 64, elements: !2118)
!2118 = !{!938, !938}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "variance", scope: !2110, file: !2109, line: 41, baseType: !2120, size: 2048, align: 64, offset: 148480)
!2120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2094, size: 2048, align: 64, elements: !937)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "indep_count", scope: !2110, file: !2109, line: 42, baseType: !898, size: 32, align: 32, offset: 150528)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "update_lls", scope: !2110, file: !2109, line: 50, baseType: !2123, size: 64, align: 64, offset: 150592)
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 64, align: 64)
!2124 = !DISubroutineType(types: !2125)
!2125 = !{null, !2126, !2104}
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 64, align: 64)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "evaluate_lls", scope: !2110, file: !2109, line: 57, baseType: !2128, size: 64, align: 64, offset: 150656)
!2128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2129, size: 64, align: 64)
!2129 = !DISubroutineType(types: !2130)
!2130 = !{!2094, !2126, !2104, !898}
!2131 = !{!2132}
!2132 = !DISubrange(count: 2)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "afq", scope: !2058, file: !2057, line: 41, baseType: !2134, size: 256, align: 64, offset: 302336)
!2134 = !DIDerivedType(tag: DW_TAG_typedef, name: "AudioFrameQueue", file: !2135, line: 39, baseType: !2136)
!2135 = !DIFile(filename: "libavcodec/audio_frame_queue.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioFrameQueue", file: !2135, line: 32, size: 256, align: 64, elements: !2137)
!2137 = !{!2138, !2139, !2140, !2141, !2148, !2149}
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !2136, file: !2135, line: 33, baseType: !1019, size: 64, align: 64)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "remaining_delay", scope: !2136, file: !2135, line: 34, baseType: !898, size: 32, align: 32, offset: 64)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "remaining_samples", scope: !2136, file: !2135, line: 35, baseType: !898, size: 32, align: 32, offset: 96)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !2136, file: !2135, line: 36, baseType: !2142, size: 64, align: 64, offset: 128)
!2142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2143, size: 64, align: 64)
!2143 = !DIDerivedType(tag: DW_TAG_typedef, name: "AudioFrame", file: !2135, line: 30, baseType: !2144)
!2144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioFrame", file: !2135, line: 27, size: 128, align: 64, elements: !2145)
!2145 = !{!2146, !2147}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !2144, file: !2135, line: 28, baseType: !1177, size: 64, align: 64)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !2144, file: !2135, line: 29, baseType: !898, size: 32, align: 32, offset: 64)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "frame_count", scope: !2136, file: !2135, line: 37, baseType: !897, size: 32, align: 32, offset: 192)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "frame_alloc", scope: !2136, file: !2135, line: 38, baseType: !897, size: 32, align: 32, offset: 224)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "last_frame", scope: !2058, file: !2057, line: 42, baseType: !898, size: 32, align: 32, offset: 302592)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "old_energy", scope: !2058, file: !2057, line: 44, baseType: !897, size: 32, align: 32, offset: 302624)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_tables", scope: !2058, file: !2057, line: 46, baseType: !2153, size: 640, align: 32, offset: 302656)
!2153 = !DICompositeType(tag: DW_TAG_array_type, baseType: !897, size: 640, align: 32, elements: !2154)
!2154 = !{!2132, !944}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_coef", scope: !2058, file: !2057, line: 50, baseType: !2156, size: 128, align: 64, offset: 303296)
!2156 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2157, size: 128, align: 64, elements: !2131)
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64, align: 64)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_refl_rms", scope: !2058, file: !2057, line: 52, baseType: !2159, size: 64, align: 32, offset: 303424)
!2159 = !DICompositeType(tag: DW_TAG_array_type, baseType: !897, size: 64, align: 32, elements: !2131)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "curr_block", scope: !2058, file: !2057, line: 54, baseType: !2161, size: 2560, align: 16, offset: 303488)
!2161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !908, size: 2560, align: 16, elements: !2162)
!2162 = !{!2163}
!2163 = !DISubrange(count: 160)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "curr_sblock", scope: !2058, file: !2057, line: 57, baseType: !2165, size: 800, align: 16, offset: 306048)
!2165 = !DICompositeType(tag: DW_TAG_array_type, baseType: !908, size: 800, align: 16, elements: !2166)
!2166 = !{!2167}
!2167 = !DISubrange(count: 50)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_cb", scope: !2058, file: !2057, line: 61, baseType: !2169, size: 2368, align: 16, offset: 306848)
!2169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !908, size: 2368, align: 16, elements: !2170)
!2170 = !{!2171}
!2171 = !DISubrange(count: 148)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_a", scope: !2058, file: !2057, line: 63, baseType: !2173, size: 768, align: 16, offset: 309248)
!2173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !908, size: 768, align: 16, elements: !2174)
!2174 = !{!2175}
!2175 = !DISubrange(count: 48)
!2176 = !DILocalVariable(name: "ractx", arg: 1, scope: !2052, file: !905, line: 1657, type: !2055)
!2177 = !DILocation(line: 1657, column: 29, scope: !2052)
!2178 = !DILocalVariable(name: "out", arg: 2, scope: !2052, file: !905, line: 1657, type: !973)
!2179 = !DILocation(line: 1657, column: 45, scope: !2052)
!2180 = !DILocalVariable(name: "a", arg: 3, scope: !2052, file: !905, line: 1657, type: !898)
!2181 = !DILocation(line: 1657, column: 54, scope: !2052)
!2182 = !DILocalVariable(name: "copyold", arg: 4, scope: !2052, file: !905, line: 1657, type: !898)
!2183 = !DILocation(line: 1657, column: 61, scope: !2052)
!2184 = !DILocalVariable(name: "energy", arg: 5, scope: !2052, file: !905, line: 1657, type: !898)
!2185 = !DILocation(line: 1657, column: 74, scope: !2052)
!2186 = !DILocalVariable(name: "work", scope: !2052, file: !905, line: 1659, type: !1615)
!2187 = !DILocation(line: 1659, column: 9, scope: !2052)
!2188 = !DILocalVariable(name: "b", scope: !2052, file: !905, line: 1660, type: !898)
!2189 = !DILocation(line: 1660, column: 9, scope: !2052)
!2190 = !DILocation(line: 1660, column: 17, scope: !2052)
!2191 = !DILocation(line: 1660, column: 15, scope: !2052)
!2192 = !DILocalVariable(name: "i", scope: !2052, file: !905, line: 1661, type: !898)
!2193 = !DILocation(line: 1661, column: 9, scope: !2052)
!2194 = !DILocation(line: 1665, column: 12, scope: !2195)
!2195 = distinct !DILexicalBlock(scope: !2052, file: !905, line: 1665, column: 5)
!2196 = !DILocation(line: 1665, column: 10, scope: !2195)
!2197 = !DILocation(line: 1665, column: 17, scope: !2198)
!2198 = !DILexicalBlockFile(scope: !2199, file: !905, discriminator: 1)
!2199 = distinct !DILexicalBlock(scope: !2195, file: !905, line: 1665, column: 5)
!2200 = !DILocation(line: 1665, column: 19, scope: !2198)
!2201 = !DILocation(line: 1665, column: 5, scope: !2198)
!2202 = !DILocation(line: 1666, column: 19, scope: !2199)
!2203 = !DILocation(line: 1666, column: 42, scope: !2199)
!2204 = !DILocation(line: 1666, column: 23, scope: !2199)
!2205 = !DILocation(line: 1666, column: 30, scope: !2199)
!2206 = !DILocation(line: 1666, column: 21, scope: !2199)
!2207 = !DILocation(line: 1666, column: 47, scope: !2199)
!2208 = !DILocation(line: 1666, column: 70, scope: !2199)
!2209 = !DILocation(line: 1666, column: 51, scope: !2199)
!2210 = !DILocation(line: 1666, column: 58, scope: !2199)
!2211 = !DILocation(line: 1666, column: 49, scope: !2199)
!2212 = !DILocation(line: 1666, column: 45, scope: !2199)
!2213 = !DILocation(line: 1666, column: 73, scope: !2199)
!2214 = !DILocation(line: 1666, column: 18, scope: !2199)
!2215 = !DILocation(line: 1666, column: 13, scope: !2199)
!2216 = !DILocation(line: 1666, column: 9, scope: !2199)
!2217 = !DILocation(line: 1666, column: 16, scope: !2199)
!2218 = !DILocation(line: 1665, column: 26, scope: !2219)
!2219 = !DILexicalBlockFile(scope: !2199, file: !905, discriminator: 2)
!2220 = !DILocation(line: 1665, column: 5, scope: !2219)
!2221 = distinct !{!2221, !2222}
!2222 = !DILocation(line: 1665, column: 5, scope: !2052)
!2223 = !DILocation(line: 1668, column: 22, scope: !2224)
!2224 = distinct !DILexicalBlock(scope: !2052, file: !905, line: 1668, column: 9)
!2225 = !DILocation(line: 1668, column: 28, scope: !2224)
!2226 = !DILocation(line: 1668, column: 33, scope: !2224)
!2227 = !DILocation(line: 1668, column: 40, scope: !2224)
!2228 = !DILocation(line: 1668, column: 9, scope: !2224)
!2229 = !DILocation(line: 1668, column: 9, scope: !2052)
!2230 = !DILocation(line: 1671, column: 25, scope: !2231)
!2231 = distinct !DILexicalBlock(scope: !2224, file: !905, line: 1668, column: 48)
!2232 = !DILocation(line: 1671, column: 46, scope: !2231)
!2233 = !DILocation(line: 1671, column: 30, scope: !2231)
!2234 = !DILocation(line: 1671, column: 37, scope: !2231)
!2235 = !DILocation(line: 1671, column: 9, scope: !2231)
!2236 = !DILocation(line: 1672, column: 51, scope: !2231)
!2237 = !DILocation(line: 1672, column: 31, scope: !2231)
!2238 = !DILocation(line: 1672, column: 38, scope: !2231)
!2239 = !DILocation(line: 1672, column: 61, scope: !2231)
!2240 = !DILocation(line: 1672, column: 16, scope: !2231)
!2241 = !DILocation(line: 1672, column: 9, scope: !2231)
!2242 = !DILocation(line: 1674, column: 38, scope: !2243)
!2243 = distinct !DILexicalBlock(scope: !2224, file: !905, line: 1673, column: 12)
!2244 = !DILocation(line: 1674, column: 31, scope: !2243)
!2245 = !DILocation(line: 1674, column: 45, scope: !2243)
!2246 = !DILocation(line: 1674, column: 16, scope: !2247)
!2247 = !DILexicalBlockFile(scope: !2243, file: !905, discriminator: 1)
!2248 = !DILocation(line: 1674, column: 9, scope: !2243)
!2249 = !DILocation(line: 1676, column: 1, scope: !2052)
!2250 = distinct !DISubprogram(name: "ff_rescale_rms", scope: !905, file: !905, line: 1678, type: !2251, isLocal: false, isDefinition: true, scopeLine: 1679, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !974)
!2251 = !DISubroutineType(types: !2252)
!2252 = !{!897, !897, !897}
!2253 = !DILocalVariable(name: "rms", arg: 1, scope: !2250, file: !905, line: 1678, type: !897)
!2254 = !DILocation(line: 1678, column: 42, scope: !2250)
!2255 = !DILocalVariable(name: "energy", arg: 2, scope: !2250, file: !905, line: 1678, type: !897)
!2256 = !DILocation(line: 1678, column: 60, scope: !2250)
!2257 = !DILocation(line: 1680, column: 13, scope: !2250)
!2258 = !DILocation(line: 1680, column: 19, scope: !2250)
!2259 = !DILocation(line: 1680, column: 17, scope: !2250)
!2260 = !DILocation(line: 1680, column: 27, scope: !2250)
!2261 = !DILocation(line: 1680, column: 5, scope: !2250)
!2262 = distinct !DISubprogram(name: "ff_irms", scope: !905, file: !905, line: 1684, type: !2263, isLocal: false, isDefinition: true, scopeLine: 1685, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !974)
!2263 = !DISubroutineType(types: !2264)
!2264 = !{!898, !2265, !942}
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 64, align: 64)
!2266 = !DILocalVariable(name: "adsp", arg: 1, scope: !2262, file: !905, line: 1684, type: !2265)
!2267 = !DILocation(line: 1684, column: 30, scope: !2262)
!2268 = !DILocalVariable(name: "data", arg: 2, scope: !2262, file: !905, line: 1684, type: !942)
!2269 = !DILocation(line: 1684, column: 51, scope: !2262)
!2270 = !DILocalVariable(name: "sum", scope: !2262, file: !905, line: 1686, type: !897)
!2271 = !DILocation(line: 1686, column: 18, scope: !2262)
!2272 = !DILocation(line: 1686, column: 24, scope: !2262)
!2273 = !DILocation(line: 1686, column: 30, scope: !2262)
!2274 = !DILocation(line: 1686, column: 50, scope: !2262)
!2275 = !DILocation(line: 1686, column: 56, scope: !2262)
!2276 = !DILocation(line: 1688, column: 9, scope: !2277)
!2277 = distinct !DILexicalBlock(scope: !2262, file: !905, line: 1688, column: 9)
!2278 = !DILocation(line: 1688, column: 13, scope: !2277)
!2279 = !DILocation(line: 1688, column: 9, scope: !2262)
!2280 = !DILocation(line: 1689, column: 9, scope: !2277)
!2281 = !DILocation(line: 1691, column: 36, scope: !2262)
!2282 = !DILocation(line: 1691, column: 26, scope: !2262)
!2283 = !DILocation(line: 1691, column: 41, scope: !2262)
!2284 = !DILocation(line: 1691, column: 23, scope: !2262)
!2285 = !DILocation(line: 1691, column: 5, scope: !2262)
!2286 = !DILocation(line: 1692, column: 1, scope: !2262)
!2287 = distinct !DISubprogram(name: "ff_subblock_synthesis", scope: !905, file: !905, line: 1694, type: !2288, isLocal: false, isDefinition: true, scopeLine: 1697, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !974)
!2288 = !DISubroutineType(types: !2289)
!2289 = !{null, !2055, !942, !898, !898, !898, !898, !898}
!2290 = !DILocalVariable(name: "ractx", arg: 1, scope: !2287, file: !905, line: 1694, type: !2055)
!2291 = !DILocation(line: 1694, column: 42, scope: !2287)
!2292 = !DILocalVariable(name: "lpc_coefs", arg: 2, scope: !2287, file: !905, line: 1694, type: !942)
!2293 = !DILocation(line: 1694, column: 64, scope: !2287)
!2294 = !DILocalVariable(name: "cba_idx", arg: 3, scope: !2287, file: !905, line: 1695, type: !898)
!2295 = !DILocation(line: 1695, column: 32, scope: !2287)
!2296 = !DILocalVariable(name: "cb1_idx", arg: 4, scope: !2287, file: !905, line: 1695, type: !898)
!2297 = !DILocation(line: 1695, column: 45, scope: !2287)
!2298 = !DILocalVariable(name: "cb2_idx", arg: 5, scope: !2287, file: !905, line: 1695, type: !898)
!2299 = !DILocation(line: 1695, column: 58, scope: !2287)
!2300 = !DILocalVariable(name: "gval", arg: 6, scope: !2287, file: !905, line: 1696, type: !898)
!2301 = !DILocation(line: 1696, column: 32, scope: !2287)
!2302 = !DILocalVariable(name: "gain", arg: 7, scope: !2287, file: !905, line: 1696, type: !898)
!2303 = !DILocation(line: 1696, column: 42, scope: !2287)
!2304 = !DILocalVariable(name: "block", scope: !2287, file: !905, line: 1698, type: !973)
!2305 = !DILocation(line: 1698, column: 14, scope: !2287)
!2306 = !DILocalVariable(name: "m", scope: !2287, file: !905, line: 1699, type: !2307)
!2307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !898, size: 96, align: 32, elements: !2308)
!2308 = !{!912}
!2309 = !DILocation(line: 1699, column: 9, scope: !2287)
!2310 = !DILocation(line: 1701, column: 9, scope: !2311)
!2311 = distinct !DILexicalBlock(scope: !2287, file: !905, line: 1701, column: 9)
!2312 = !DILocation(line: 1701, column: 9, scope: !2287)
!2313 = !DILocation(line: 1702, column: 17, scope: !2314)
!2314 = distinct !DILexicalBlock(scope: !2311, file: !905, line: 1701, column: 18)
!2315 = !DILocation(line: 1703, column: 25, scope: !2314)
!2316 = !DILocation(line: 1703, column: 32, scope: !2314)
!2317 = !DILocation(line: 1703, column: 42, scope: !2314)
!2318 = !DILocation(line: 1703, column: 49, scope: !2314)
!2319 = !DILocation(line: 1703, column: 59, scope: !2314)
!2320 = !DILocation(line: 1703, column: 9, scope: !2314)
!2321 = !DILocation(line: 1704, column: 26, scope: !2314)
!2322 = !DILocation(line: 1704, column: 33, scope: !2314)
!2323 = !DILocation(line: 1704, column: 39, scope: !2314)
!2324 = !DILocation(line: 1704, column: 46, scope: !2314)
!2325 = !DILocation(line: 1704, column: 17, scope: !2314)
!2326 = !DILocation(line: 1704, column: 68, scope: !2314)
!2327 = !DILocation(line: 1704, column: 56, scope: !2314)
!2328 = !DILocation(line: 1704, column: 74, scope: !2314)
!2329 = !DILocation(line: 1704, column: 9, scope: !2314)
!2330 = !DILocation(line: 1704, column: 14, scope: !2314)
!2331 = !DILocation(line: 1705, column: 5, scope: !2314)
!2332 = !DILocation(line: 1706, column: 9, scope: !2333)
!2333 = distinct !DILexicalBlock(scope: !2311, file: !905, line: 1705, column: 12)
!2334 = !DILocation(line: 1706, column: 14, scope: !2333)
!2335 = !DILocation(line: 1708, column: 25, scope: !2287)
!2336 = !DILocation(line: 1708, column: 13, scope: !2287)
!2337 = !DILocation(line: 1708, column: 36, scope: !2287)
!2338 = !DILocation(line: 1708, column: 34, scope: !2287)
!2339 = !DILocation(line: 1708, column: 42, scope: !2287)
!2340 = !DILocation(line: 1708, column: 5, scope: !2287)
!2341 = !DILocation(line: 1708, column: 10, scope: !2287)
!2342 = !DILocation(line: 1709, column: 25, scope: !2287)
!2343 = !DILocation(line: 1709, column: 13, scope: !2287)
!2344 = !DILocation(line: 1709, column: 36, scope: !2287)
!2345 = !DILocation(line: 1709, column: 34, scope: !2287)
!2346 = !DILocation(line: 1709, column: 42, scope: !2287)
!2347 = !DILocation(line: 1709, column: 5, scope: !2287)
!2348 = !DILocation(line: 1709, column: 10, scope: !2287)
!2349 = !DILocation(line: 1710, column: 13, scope: !2287)
!2350 = !DILocation(line: 1710, column: 20, scope: !2287)
!2351 = !DILocation(line: 1710, column: 5, scope: !2287)
!2352 = !DILocation(line: 1710, column: 30, scope: !2287)
!2353 = !DILocation(line: 1710, column: 37, scope: !2287)
!2354 = !DILocation(line: 1710, column: 46, scope: !2287)
!2355 = !DILocation(line: 1713, column: 13, scope: !2287)
!2356 = !DILocation(line: 1713, column: 20, scope: !2287)
!2357 = !DILocation(line: 1713, column: 29, scope: !2287)
!2358 = !DILocation(line: 1713, column: 35, scope: !2287)
!2359 = !DILocation(line: 1713, column: 11, scope: !2287)
!2360 = !DILocation(line: 1715, column: 13, scope: !2287)
!2361 = !DILocation(line: 1715, column: 20, scope: !2287)
!2362 = !DILocation(line: 1715, column: 26, scope: !2287)
!2363 = !DILocation(line: 1715, column: 35, scope: !2287)
!2364 = !DILocation(line: 1715, column: 38, scope: !2287)
!2365 = !DILocation(line: 1715, column: 47, scope: !2366)
!2366 = !DILexicalBlockFile(scope: !2287, file: !905, discriminator: 1)
!2367 = !DILocation(line: 1715, column: 54, scope: !2366)
!2368 = !DILocation(line: 1715, column: 38, scope: !2366)
!2369 = !DILocation(line: 1715, column: 38, scope: !2370)
!2370 = !DILexicalBlockFile(scope: !2287, file: !905, discriminator: 2)
!2371 = !DILocation(line: 1715, column: 38, scope: !2372)
!2372 = !DILexicalBlockFile(scope: !2287, file: !905, discriminator: 3)
!2373 = !DILocation(line: 1716, column: 26, scope: !2287)
!2374 = !DILocation(line: 1716, column: 13, scope: !2287)
!2375 = !DILocation(line: 1716, column: 49, scope: !2287)
!2376 = !DILocation(line: 1716, column: 36, scope: !2287)
!2377 = !DILocation(line: 1715, column: 5, scope: !2372)
!2378 = !DILocation(line: 1718, column: 12, scope: !2287)
!2379 = !DILocation(line: 1718, column: 19, scope: !2287)
!2380 = !DILocation(line: 1718, column: 5, scope: !2287)
!2381 = !DILocation(line: 1718, column: 32, scope: !2287)
!2382 = !DILocation(line: 1718, column: 39, scope: !2287)
!2383 = !DILocation(line: 1718, column: 51, scope: !2287)
!2384 = !DILocation(line: 1721, column: 37, scope: !2385)
!2385 = distinct !DILexicalBlock(scope: !2287, file: !905, line: 1721, column: 9)
!2386 = !DILocation(line: 1721, column: 44, scope: !2385)
!2387 = !DILocation(line: 1721, column: 56, scope: !2385)
!2388 = !DILocation(line: 1721, column: 62, scope: !2385)
!2389 = !DILocation(line: 1722, column: 37, scope: !2385)
!2390 = !DILocation(line: 1721, column: 9, scope: !2385)
!2391 = !DILocation(line: 1721, column: 9, scope: !2287)
!2392 = !DILocation(line: 1723, column: 16, scope: !2385)
!2393 = !DILocation(line: 1723, column: 23, scope: !2385)
!2394 = !DILocation(line: 1723, column: 9, scope: !2385)
!2395 = !DILocation(line: 1724, column: 1, scope: !2287)
!2396 = distinct !DISubprogram(name: "add_wav", scope: !905, file: !905, line: 1507, type: !2397, isLocal: true, isDefinition: true, scopeLine: 1509, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !974)
!2397 = !DISubroutineType(types: !2398)
!2398 = !{null, !973, !898, !898, !1018, !942, !2399, !2399}
!2399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64, align: 64)
!2400 = !DILocalVariable(name: "dest", arg: 1, scope: !2396, file: !905, line: 1507, type: !973)
!2401 = !DILocation(line: 1507, column: 30, scope: !2396)
!2402 = !DILocalVariable(name: "n", arg: 2, scope: !2396, file: !905, line: 1507, type: !898)
!2403 = !DILocation(line: 1507, column: 40, scope: !2396)
!2404 = !DILocalVariable(name: "skip_first", arg: 3, scope: !2396, file: !905, line: 1507, type: !898)
!2405 = !DILocation(line: 1507, column: 47, scope: !2396)
!2406 = !DILocalVariable(name: "m", arg: 4, scope: !2396, file: !905, line: 1507, type: !1018)
!2407 = !DILocation(line: 1507, column: 64, scope: !2396)
!2408 = !DILocalVariable(name: "s1", arg: 5, scope: !2396, file: !905, line: 1508, type: !942)
!2409 = !DILocation(line: 1508, column: 36, scope: !2396)
!2410 = !DILocalVariable(name: "s2", arg: 6, scope: !2396, file: !905, line: 1508, type: !2399)
!2411 = !DILocation(line: 1508, column: 54, scope: !2396)
!2412 = !DILocalVariable(name: "s3", arg: 7, scope: !2396, file: !905, line: 1508, type: !2399)
!2413 = !DILocation(line: 1508, column: 72, scope: !2396)
!2414 = !DILocalVariable(name: "i", scope: !2396, file: !905, line: 1510, type: !898)
!2415 = !DILocation(line: 1510, column: 9, scope: !2396)
!2416 = !DILocalVariable(name: "v", scope: !2396, file: !905, line: 1511, type: !2307)
!2417 = !DILocation(line: 1511, column: 9, scope: !2396)
!2418 = !DILocation(line: 1513, column: 5, scope: !2396)
!2419 = !DILocation(line: 1513, column: 10, scope: !2396)
!2420 = !DILocation(line: 1514, column: 13, scope: !2421)
!2421 = distinct !DILexicalBlock(scope: !2396, file: !905, line: 1514, column: 5)
!2422 = !DILocation(line: 1514, column: 12, scope: !2421)
!2423 = !DILocation(line: 1514, column: 11, scope: !2421)
!2424 = !DILocation(line: 1514, column: 10, scope: !2421)
!2425 = !DILocation(line: 1514, column: 25, scope: !2426)
!2426 = !DILexicalBlockFile(scope: !2427, file: !905, discriminator: 1)
!2427 = distinct !DILexicalBlock(scope: !2421, file: !905, line: 1514, column: 5)
!2428 = !DILocation(line: 1514, column: 26, scope: !2426)
!2429 = !DILocation(line: 1514, column: 5, scope: !2426)
!2430 = !DILocation(line: 1515, column: 36, scope: !2427)
!2431 = !DILocation(line: 1515, column: 17, scope: !2427)
!2432 = !DILocation(line: 1515, column: 33, scope: !2427)
!2433 = !DILocation(line: 1515, column: 53, scope: !2427)
!2434 = !DILocation(line: 1515, column: 51, scope: !2427)
!2435 = !DILocation(line: 1515, column: 39, scope: !2427)
!2436 = !DILocation(line: 1515, column: 76, scope: !2427)
!2437 = !DILocation(line: 1515, column: 60, scope: !2427)
!2438 = !DILocation(line: 1515, column: 57, scope: !2427)
!2439 = !DILocation(line: 1515, column: 11, scope: !2427)
!2440 = !DILocation(line: 1515, column: 9, scope: !2427)
!2441 = !DILocation(line: 1515, column: 14, scope: !2427)
!2442 = !DILocation(line: 1514, column: 31, scope: !2443)
!2443 = !DILexicalBlockFile(scope: !2427, file: !905, discriminator: 2)
!2444 = !DILocation(line: 1514, column: 5, scope: !2443)
!2445 = distinct !{!2445, !2446}
!2446 = !DILocation(line: 1514, column: 5, scope: !2396)
!2447 = !DILocation(line: 1517, column: 9, scope: !2448)
!2448 = distinct !DILexicalBlock(scope: !2396, file: !905, line: 1517, column: 9)
!2449 = !DILocation(line: 1517, column: 9, scope: !2396)
!2450 = !DILocation(line: 1518, column: 15, scope: !2451)
!2451 = distinct !DILexicalBlock(scope: !2452, file: !905, line: 1518, column: 9)
!2452 = distinct !DILexicalBlock(scope: !2448, file: !905, line: 1517, column: 15)
!2453 = !DILocation(line: 1518, column: 14, scope: !2451)
!2454 = !DILocation(line: 1518, column: 19, scope: !2455)
!2455 = !DILexicalBlockFile(scope: !2456, file: !905, discriminator: 1)
!2456 = distinct !DILexicalBlock(scope: !2451, file: !905, line: 1518, column: 9)
!2457 = !DILocation(line: 1518, column: 21, scope: !2455)
!2458 = !DILocation(line: 1518, column: 9, scope: !2455)
!2459 = !DILocation(line: 1519, column: 33, scope: !2456)
!2460 = !DILocation(line: 1519, column: 30, scope: !2456)
!2461 = !DILocation(line: 1519, column: 46, scope: !2456)
!2462 = !DILocation(line: 1519, column: 35, scope: !2456)
!2463 = !DILocation(line: 1519, column: 57, scope: !2456)
!2464 = !DILocation(line: 1519, column: 54, scope: !2456)
!2465 = !DILocation(line: 1519, column: 60, scope: !2456)
!2466 = !DILocation(line: 1519, column: 59, scope: !2456)
!2467 = !DILocation(line: 1519, column: 52, scope: !2456)
!2468 = !DILocation(line: 1519, column: 70, scope: !2456)
!2469 = !DILocation(line: 1519, column: 67, scope: !2456)
!2470 = !DILocation(line: 1519, column: 73, scope: !2456)
!2471 = !DILocation(line: 1519, column: 72, scope: !2456)
!2472 = !DILocation(line: 1519, column: 65, scope: !2456)
!2473 = !DILocation(line: 1519, column: 79, scope: !2456)
!2474 = !DILocation(line: 1519, column: 23, scope: !2456)
!2475 = !DILocation(line: 1519, column: 18, scope: !2456)
!2476 = !DILocation(line: 1519, column: 13, scope: !2456)
!2477 = !DILocation(line: 1519, column: 21, scope: !2456)
!2478 = !DILocation(line: 1518, column: 28, scope: !2479)
!2479 = !DILexicalBlockFile(scope: !2456, file: !905, discriminator: 2)
!2480 = !DILocation(line: 1518, column: 9, scope: !2479)
!2481 = distinct !{!2481, !2482}
!2482 = !DILocation(line: 1518, column: 9, scope: !2452)
!2483 = !DILocation(line: 1520, column: 5, scope: !2452)
!2484 = !DILocation(line: 1521, column: 15, scope: !2485)
!2485 = distinct !DILexicalBlock(scope: !2486, file: !905, line: 1521, column: 9)
!2486 = distinct !DILexicalBlock(scope: !2448, file: !905, line: 1520, column: 12)
!2487 = !DILocation(line: 1521, column: 14, scope: !2485)
!2488 = !DILocation(line: 1521, column: 19, scope: !2489)
!2489 = !DILexicalBlockFile(scope: !2490, file: !905, discriminator: 1)
!2490 = distinct !DILexicalBlock(scope: !2485, file: !905, line: 1521, column: 9)
!2491 = !DILocation(line: 1521, column: 21, scope: !2489)
!2492 = !DILocation(line: 1521, column: 9, scope: !2489)
!2493 = !DILocation(line: 1522, column: 28, scope: !2490)
!2494 = !DILocation(line: 1522, column: 25, scope: !2490)
!2495 = !DILocation(line: 1522, column: 31, scope: !2490)
!2496 = !DILocation(line: 1522, column: 30, scope: !2490)
!2497 = !DILocation(line: 1522, column: 41, scope: !2490)
!2498 = !DILocation(line: 1522, column: 38, scope: !2490)
!2499 = !DILocation(line: 1522, column: 44, scope: !2490)
!2500 = !DILocation(line: 1522, column: 43, scope: !2490)
!2501 = !DILocation(line: 1522, column: 36, scope: !2490)
!2502 = !DILocation(line: 1522, column: 50, scope: !2490)
!2503 = !DILocation(line: 1522, column: 23, scope: !2490)
!2504 = !DILocation(line: 1522, column: 18, scope: !2490)
!2505 = !DILocation(line: 1522, column: 13, scope: !2490)
!2506 = !DILocation(line: 1522, column: 21, scope: !2490)
!2507 = !DILocation(line: 1521, column: 28, scope: !2508)
!2508 = !DILexicalBlockFile(scope: !2490, file: !905, discriminator: 2)
!2509 = !DILocation(line: 1521, column: 9, scope: !2508)
!2510 = distinct !{!2510, !2511}
!2511 = !DILocation(line: 1521, column: 9, scope: !2486)
!2512 = !DILocation(line: 1524, column: 1, scope: !2396)
