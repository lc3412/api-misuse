; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--dirac_dwt.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--dirac_dwt.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.DWTContext = type { i8*, i8*, i32, i32, i32, i32, i32, void (%struct.DWTContext*, i32, i32, i32, i32)*, void ()*, void ()*, void ()*, void ()*, void ()*, void (i8*, i8*, i32)*, [8 x %struct.DWTCompose] }
%struct.DWTCompose = type { [8 x i8*], i32 }
%struct.DWTPlane = type { i32, i32, i32, i8*, i8*, i8* }

@.str = private unnamed_addr constant [28 x i8] c"Unsupported bit depth = %i\0A\00", align 1
@.str.1 = private unnamed_addr constant [25 x i8] c"Unknown wavelet type %d\0A\00", align 1

; Function Attrs: nounwind uwtable
define i32 @ff_spatial_idwt_init(%struct.DWTContext* %d, %struct.DWTPlane* %p, i32 %type, i32 %decomposition_count, i32 %bit_depth) #0 !dbg !33 {
entry:
  %retval = alloca i32, align 4
  %d.addr = alloca %struct.DWTContext*, align 8
  %p.addr = alloca %struct.DWTPlane*, align 8
  %type.addr = alloca i32, align 4
  %decomposition_count.addr = alloca i32, align 4
  %bit_depth.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.DWTContext* %d, %struct.DWTContext** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTContext** %d.addr, metadata !86, metadata !87), !dbg !88
  store %struct.DWTPlane* %p, %struct.DWTPlane** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTPlane** %p.addr, metadata !89, metadata !87), !dbg !90
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !91, metadata !87), !dbg !92
  store i32 %decomposition_count, i32* %decomposition_count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %decomposition_count.addr, metadata !93, metadata !87), !dbg !94
  store i32 %bit_depth, i32* %bit_depth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit_depth.addr, metadata !95, metadata !87), !dbg !96
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !97, metadata !87), !dbg !98
  store i32 0, i32* %ret, align 4, !dbg !98
  %0 = load %struct.DWTPlane*, %struct.DWTPlane** %p.addr, align 8, !dbg !99
  %buf = getelementptr inbounds %struct.DWTPlane, %struct.DWTPlane* %0, i32 0, i32 3, !dbg !100
  %1 = load i8*, i8** %buf, align 8, !dbg !100
  %2 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !101
  %buffer = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %2, i32 0, i32 0, !dbg !102
  store i8* %1, i8** %buffer, align 8, !dbg !103
  %3 = load %struct.DWTPlane*, %struct.DWTPlane** %p.addr, align 8, !dbg !104
  %width = getelementptr inbounds %struct.DWTPlane, %struct.DWTPlane* %3, i32 0, i32 0, !dbg !105
  %4 = load i32, i32* %width, align 8, !dbg !105
  %5 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !106
  %width1 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %5, i32 0, i32 2, !dbg !107
  store i32 %4, i32* %width1, align 8, !dbg !108
  %6 = load %struct.DWTPlane*, %struct.DWTPlane** %p.addr, align 8, !dbg !109
  %height = getelementptr inbounds %struct.DWTPlane, %struct.DWTPlane* %6, i32 0, i32 1, !dbg !110
  %7 = load i32, i32* %height, align 4, !dbg !110
  %8 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !111
  %height2 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %8, i32 0, i32 3, !dbg !112
  store i32 %7, i32* %height2, align 4, !dbg !113
  %9 = load %struct.DWTPlane*, %struct.DWTPlane** %p.addr, align 8, !dbg !114
  %stride = getelementptr inbounds %struct.DWTPlane, %struct.DWTPlane* %9, i32 0, i32 2, !dbg !115
  %10 = load i32, i32* %stride, align 8, !dbg !115
  %11 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !116
  %stride3 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %11, i32 0, i32 4, !dbg !117
  store i32 %10, i32* %stride3, align 8, !dbg !118
  %12 = load %struct.DWTPlane*, %struct.DWTPlane** %p.addr, align 8, !dbg !119
  %tmp = getelementptr inbounds %struct.DWTPlane, %struct.DWTPlane* %12, i32 0, i32 5, !dbg !120
  %13 = load i8*, i8** %tmp, align 8, !dbg !120
  %14 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !121
  %temp = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %14, i32 0, i32 1, !dbg !122
  store i8* %13, i8** %temp, align 8, !dbg !123
  %15 = load i32, i32* %decomposition_count.addr, align 4, !dbg !124
  %16 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !125
  %decomposition_count4 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %16, i32 0, i32 5, !dbg !126
  store i32 %15, i32* %decomposition_count4, align 4, !dbg !127
  %17 = load i32, i32* %bit_depth.addr, align 4, !dbg !128
  %cmp = icmp eq i32 %17, 8, !dbg !130
  br i1 %cmp, label %if.then, label %if.else, !dbg !131

if.then:                                          ; preds = %entry
  %18 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !132
  %19 = load i32, i32* %type.addr, align 4, !dbg !133
  %call = call i32 @ff_spatial_idwt_init_8bit(%struct.DWTContext* %18, i32 %19), !dbg !134
  store i32 %call, i32* %ret, align 4, !dbg !135
  br label %if.end14, !dbg !136

if.else:                                          ; preds = %entry
  %20 = load i32, i32* %bit_depth.addr, align 4, !dbg !137
  %cmp5 = icmp eq i32 %20, 10, !dbg !139
  br i1 %cmp5, label %if.then6, label %if.else8, !dbg !140

if.then6:                                         ; preds = %if.else
  %21 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !141
  %22 = load i32, i32* %type.addr, align 4, !dbg !142
  %call7 = call i32 @ff_spatial_idwt_init_10bit(%struct.DWTContext* %21, i32 %22), !dbg !143
  store i32 %call7, i32* %ret, align 4, !dbg !144
  br label %if.end13, !dbg !145

if.else8:                                         ; preds = %if.else
  %23 = load i32, i32* %bit_depth.addr, align 4, !dbg !146
  %cmp9 = icmp eq i32 %23, 12, !dbg !148
  br i1 %cmp9, label %if.then10, label %if.else12, !dbg !149

if.then10:                                        ; preds = %if.else8
  %24 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !150
  %25 = load i32, i32* %type.addr, align 4, !dbg !151
  %call11 = call i32 @ff_spatial_idwt_init_12bit(%struct.DWTContext* %24, i32 %25), !dbg !152
  store i32 %call11, i32* %ret, align 4, !dbg !153
  br label %if.end, !dbg !154

if.else12:                                        ; preds = %if.else8
  %26 = load i32, i32* %bit_depth.addr, align 4, !dbg !155
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0), i32 %26), !dbg !156
  br label %if.end

if.end:                                           ; preds = %if.else12, %if.then10
  br label %if.end13

if.end13:                                         ; preds = %if.end, %if.then6
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.then
  %27 = load i32, i32* %ret, align 4, !dbg !157
  %tobool = icmp ne i32 %27, 0, !dbg !157
  br i1 %tobool, label %if.then15, label %if.end16, !dbg !159

if.then15:                                        ; preds = %if.end14
  %28 = load i32, i32* %type.addr, align 4, !dbg !160
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i32 0, i32 0), i32 %28), !dbg !162
  store i32 -1094995529, i32* %retval, align 4, !dbg !163
  br label %return, !dbg !163

if.end16:                                         ; preds = %if.end14
  %29 = load i32, i32* %bit_depth.addr, align 4, !dbg !164
  %cmp17 = icmp eq i32 %29, 8, !dbg !166
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !167

if.then18:                                        ; preds = %if.end16
  %30 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !168
  %31 = load i32, i32* %type.addr, align 4, !dbg !169
  call void @ff_spatial_idwt_init_x86(%struct.DWTContext* %30, i32 %31), !dbg !170
  br label %if.end19, !dbg !170

if.end19:                                         ; preds = %if.then18, %if.end16
  store i32 0, i32* %retval, align 4, !dbg !171
  br label %return, !dbg !171

return:                                           ; preds = %if.end19, %if.then15
  %32 = load i32, i32* %retval, align 4, !dbg !172
  ret i32 %32, !dbg !172
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind uwtable
define internal i32 @ff_spatial_idwt_init_8bit(%struct.DWTContext* %d, i32 %type) #0 !dbg !173 {
entry:
  %retval = alloca i32, align 4
  %d.addr = alloca %struct.DWTContext*, align 8
  %type.addr = alloca i32, align 4
  %level = alloca i32, align 4
  %hl = alloca i32, align 4
  %stride_l = alloca i32, align 4
  store %struct.DWTContext* %d, %struct.DWTContext** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTContext** %d.addr, metadata !177, metadata !87), !dbg !178
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !179, metadata !87), !dbg !180
  call void @llvm.dbg.declare(metadata i32* %level, metadata !181, metadata !87), !dbg !182
  %0 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !183
  %temp = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %0, i32 0, i32 1, !dbg !184
  %1 = load i8*, i8** %temp, align 8, !dbg !184
  %2 = bitcast i8* %1 to i16*, !dbg !185
  %add.ptr = getelementptr inbounds i16, i16* %2, i64 8, !dbg !186
  %3 = bitcast i16* %add.ptr to i8*, !dbg !187
  %4 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !188
  %temp1 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %4, i32 0, i32 1, !dbg !189
  store i8* %3, i8** %temp1, align 8, !dbg !190
  %5 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !191
  %decomposition_count = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %5, i32 0, i32 5, !dbg !193
  %6 = load i32, i32* %decomposition_count, align 4, !dbg !193
  %sub = sub nsw i32 %6, 1, !dbg !194
  store i32 %sub, i32* %level, align 4, !dbg !195
  br label %for.cond, !dbg !196

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %level, align 4, !dbg !197
  %cmp = icmp sge i32 %7, 0, !dbg !200
  br i1 %cmp, label %for.body, label %for.end, !dbg !201

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %hl, metadata !202, metadata !87), !dbg !204
  %8 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !205
  %height = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %8, i32 0, i32 3, !dbg !206
  %9 = load i32, i32* %height, align 4, !dbg !206
  %10 = load i32, i32* %level, align 4, !dbg !207
  %shr = ashr i32 %9, %10, !dbg !208
  store i32 %shr, i32* %hl, align 4, !dbg !204
  call void @llvm.dbg.declare(metadata i32* %stride_l, metadata !209, metadata !87), !dbg !210
  %11 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !211
  %stride = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %11, i32 0, i32 4, !dbg !212
  %12 = load i32, i32* %stride, align 8, !dbg !212
  %13 = load i32, i32* %level, align 4, !dbg !213
  %shl = shl i32 %12, %13, !dbg !214
  store i32 %shl, i32* %stride_l, align 4, !dbg !210
  %14 = load i32, i32* %type.addr, align 4, !dbg !215
  switch i32 %14, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb3
    i32 4, label %sw.bb9
    i32 5, label %sw.bb15
    i32 6, label %sw.bb15
    i32 8, label %sw.bb17
  ], !dbg !216

sw.bb:                                            ; preds = %for.body
  %15 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !217
  %cs = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %15, i32 0, i32 14, !dbg !219
  %arraydecay = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs, i32 0, i32 0, !dbg !217
  %16 = load i32, i32* %level, align 4, !dbg !220
  %idx.ext = sext i32 %16 to i64, !dbg !221
  %add.ptr2 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arraydecay, i64 %idx.ext, !dbg !221
  %17 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !222
  %buffer = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %17, i32 0, i32 0, !dbg !223
  %18 = load i8*, i8** %buffer, align 8, !dbg !223
  %19 = load i32, i32* %hl, align 4, !dbg !224
  %20 = load i32, i32* %stride_l, align 4, !dbg !225
  call void @spatial_compose_dd97i_init_8bit(%struct.DWTCompose* %add.ptr2, i8* %18, i32 %19, i32 %20), !dbg !226
  br label %sw.epilog, !dbg !227

sw.bb3:                                           ; preds = %for.body
  %21 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !228
  %cs4 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %21, i32 0, i32 14, !dbg !229
  %arraydecay5 = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs4, i32 0, i32 0, !dbg !228
  %22 = load i32, i32* %level, align 4, !dbg !230
  %idx.ext6 = sext i32 %22 to i64, !dbg !231
  %add.ptr7 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arraydecay5, i64 %idx.ext6, !dbg !231
  %23 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !232
  %buffer8 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %23, i32 0, i32 0, !dbg !233
  %24 = load i8*, i8** %buffer8, align 8, !dbg !233
  %25 = load i32, i32* %hl, align 4, !dbg !234
  %26 = load i32, i32* %stride_l, align 4, !dbg !235
  call void @spatial_compose53i_init_8bit(%struct.DWTCompose* %add.ptr7, i8* %24, i32 %25, i32 %26), !dbg !236
  br label %sw.epilog, !dbg !237

sw.bb9:                                           ; preds = %for.body
  %27 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !238
  %cs10 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %27, i32 0, i32 14, !dbg !239
  %arraydecay11 = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs10, i32 0, i32 0, !dbg !238
  %28 = load i32, i32* %level, align 4, !dbg !240
  %idx.ext12 = sext i32 %28 to i64, !dbg !241
  %add.ptr13 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arraydecay11, i64 %idx.ext12, !dbg !241
  %29 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !242
  %buffer14 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %29, i32 0, i32 0, !dbg !243
  %30 = load i8*, i8** %buffer14, align 8, !dbg !243
  %31 = load i32, i32* %hl, align 4, !dbg !244
  %32 = load i32, i32* %stride_l, align 4, !dbg !245
  call void @spatial_compose_dd137i_init_8bit(%struct.DWTCompose* %add.ptr13, i8* %30, i32 %31, i32 %32), !dbg !246
  br label %sw.epilog, !dbg !247

sw.bb15:                                          ; preds = %for.body, %for.body
  %33 = load i32, i32* %level, align 4, !dbg !248
  %idxprom = sext i32 %33 to i64, !dbg !249
  %34 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !249
  %cs16 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %34, i32 0, i32 14, !dbg !250
  %arrayidx = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs16, i64 0, i64 %idxprom, !dbg !249
  %y = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arrayidx, i32 0, i32 1, !dbg !251
  store i32 1, i32* %y, align 8, !dbg !252
  br label %sw.epilog, !dbg !253

sw.bb17:                                          ; preds = %for.body
  %35 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !254
  %cs18 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %35, i32 0, i32 14, !dbg !255
  %arraydecay19 = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs18, i32 0, i32 0, !dbg !254
  %36 = load i32, i32* %level, align 4, !dbg !256
  %idx.ext20 = sext i32 %36 to i64, !dbg !257
  %add.ptr21 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arraydecay19, i64 %idx.ext20, !dbg !257
  %37 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !258
  %buffer22 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %37, i32 0, i32 0, !dbg !259
  %38 = load i8*, i8** %buffer22, align 8, !dbg !259
  %39 = load i32, i32* %hl, align 4, !dbg !260
  %40 = load i32, i32* %stride_l, align 4, !dbg !261
  call void @spatial_compose97i_init_8bit(%struct.DWTCompose* %add.ptr21, i8* %38, i32 %39, i32 %40), !dbg !262
  br label %sw.epilog, !dbg !263

sw.default:                                       ; preds = %for.body
  %41 = load i32, i32* %level, align 4, !dbg !264
  %idxprom23 = sext i32 %41 to i64, !dbg !265
  %42 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !265
  %cs24 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %42, i32 0, i32 14, !dbg !266
  %arrayidx25 = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs24, i64 0, i64 %idxprom23, !dbg !265
  %y26 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arrayidx25, i32 0, i32 1, !dbg !267
  store i32 0, i32* %y26, align 8, !dbg !268
  br label %sw.epilog, !dbg !269

sw.epilog:                                        ; preds = %sw.default, %sw.bb17, %sw.bb15, %sw.bb9, %sw.bb3, %sw.bb
  br label %for.inc, !dbg !270

for.inc:                                          ; preds = %sw.epilog
  %43 = load i32, i32* %level, align 4, !dbg !271
  %dec = add nsw i32 %43, -1, !dbg !271
  store i32 %dec, i32* %level, align 4, !dbg !271
  br label %for.cond, !dbg !273, !llvm.loop !274

for.end:                                          ; preds = %for.cond
  %44 = load i32, i32* %type.addr, align 4, !dbg !276
  switch i32 %44, label %sw.default58 [
    i32 2, label %sw.bb27
    i32 3, label %sw.bb28
    i32 4, label %sw.bb34
    i32 5, label %sw.bb40
    i32 6, label %sw.bb40
    i32 7, label %sw.bb46
    i32 8, label %sw.bb52
  ], !dbg !277

sw.bb27:                                          ; preds = %for.end
  %45 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !278
  %spatial_compose = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %45, i32 0, i32 7, !dbg !280
  store void (%struct.DWTContext*, i32, i32, i32, i32)* @spatial_compose_dd97i_dy_8bit, void (%struct.DWTContext*, i32, i32, i32, i32)** %spatial_compose, align 8, !dbg !281
  %46 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !282
  %vertical_compose_l0 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %46, i32 0, i32 8, !dbg !283
  store void ()* bitcast (void (i8*, i8*, i8*, i32)* @vertical_compose53iL0_8bit to void ()*), void ()** %vertical_compose_l0, align 8, !dbg !284
  %47 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !285
  %vertical_compose_h0 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %47, i32 0, i32 9, !dbg !286
  store void ()* bitcast (void (i8*, i8*, i8*, i8*, i8*, i32)* @vertical_compose_dd97iH0_8bit to void ()*), void ()** %vertical_compose_h0, align 8, !dbg !287
  %48 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !288
  %horizontal_compose = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %48, i32 0, i32 13, !dbg !289
  store void (i8*, i8*, i32)* @horizontal_compose_dd97i_8bit, void (i8*, i8*, i32)** %horizontal_compose, align 8, !dbg !290
  %49 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !291
  %support = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %49, i32 0, i32 6, !dbg !292
  store i32 7, i32* %support, align 8, !dbg !293
  br label %sw.epilog59, !dbg !294

sw.bb28:                                          ; preds = %for.end
  %50 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !295
  %spatial_compose29 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %50, i32 0, i32 7, !dbg !296
  store void (%struct.DWTContext*, i32, i32, i32, i32)* @spatial_compose_dirac53i_dy_8bit, void (%struct.DWTContext*, i32, i32, i32, i32)** %spatial_compose29, align 8, !dbg !297
  %51 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !298
  %vertical_compose_l030 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %51, i32 0, i32 8, !dbg !299
  store void ()* bitcast (void (i8*, i8*, i8*, i32)* @vertical_compose53iL0_8bit to void ()*), void ()** %vertical_compose_l030, align 8, !dbg !300
  %52 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !301
  %vertical_compose_h031 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %52, i32 0, i32 9, !dbg !302
  store void ()* bitcast (void (i8*, i8*, i8*, i32)* @vertical_compose_dirac53iH0_8bit to void ()*), void ()** %vertical_compose_h031, align 8, !dbg !303
  %53 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !304
  %horizontal_compose32 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %53, i32 0, i32 13, !dbg !305
  store void (i8*, i8*, i32)* @horizontal_compose_dirac53i_8bit, void (i8*, i8*, i32)** %horizontal_compose32, align 8, !dbg !306
  %54 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !307
  %support33 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %54, i32 0, i32 6, !dbg !308
  store i32 3, i32* %support33, align 8, !dbg !309
  br label %sw.epilog59, !dbg !310

sw.bb34:                                          ; preds = %for.end
  %55 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !311
  %spatial_compose35 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %55, i32 0, i32 7, !dbg !312
  store void (%struct.DWTContext*, i32, i32, i32, i32)* @spatial_compose_dd137i_dy_8bit, void (%struct.DWTContext*, i32, i32, i32, i32)** %spatial_compose35, align 8, !dbg !313
  %56 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !314
  %vertical_compose_l036 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %56, i32 0, i32 8, !dbg !315
  store void ()* bitcast (void (i8*, i8*, i8*, i8*, i8*, i32)* @vertical_compose_dd137iL0_8bit to void ()*), void ()** %vertical_compose_l036, align 8, !dbg !316
  %57 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !317
  %vertical_compose_h037 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %57, i32 0, i32 9, !dbg !318
  store void ()* bitcast (void (i8*, i8*, i8*, i8*, i8*, i32)* @vertical_compose_dd97iH0_8bit to void ()*), void ()** %vertical_compose_h037, align 8, !dbg !319
  %58 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !320
  %horizontal_compose38 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %58, i32 0, i32 13, !dbg !321
  store void (i8*, i8*, i32)* @horizontal_compose_dd137i_8bit, void (i8*, i8*, i32)** %horizontal_compose38, align 8, !dbg !322
  %59 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !323
  %support39 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %59, i32 0, i32 6, !dbg !324
  store i32 7, i32* %support39, align 8, !dbg !325
  br label %sw.epilog59, !dbg !326

sw.bb40:                                          ; preds = %for.end, %for.end
  %60 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !327
  %spatial_compose41 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %60, i32 0, i32 7, !dbg !328
  store void (%struct.DWTContext*, i32, i32, i32, i32)* @spatial_compose_haari_dy_8bit, void (%struct.DWTContext*, i32, i32, i32, i32)** %spatial_compose41, align 8, !dbg !329
  %61 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !330
  %vertical_compose = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %61, i32 0, i32 12, !dbg !331
  store void ()* bitcast (void (i8*, i8*, i32)* @vertical_compose_haar_8bit to void ()*), void ()** %vertical_compose, align 8, !dbg !332
  %62 = load i32, i32* %type.addr, align 4, !dbg !333
  %cmp42 = icmp eq i32 %62, 5, !dbg !335
  br i1 %cmp42, label %if.then, label %if.else, !dbg !336

if.then:                                          ; preds = %sw.bb40
  %63 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !337
  %horizontal_compose43 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %63, i32 0, i32 13, !dbg !338
  store void (i8*, i8*, i32)* @horizontal_compose_haar0i_8bit, void (i8*, i8*, i32)** %horizontal_compose43, align 8, !dbg !339
  br label %if.end, !dbg !337

if.else:                                          ; preds = %sw.bb40
  %64 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !340
  %horizontal_compose44 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %64, i32 0, i32 13, !dbg !341
  store void (i8*, i8*, i32)* @horizontal_compose_haar1i_8bit, void (i8*, i8*, i32)** %horizontal_compose44, align 8, !dbg !342
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %65 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !343
  %support45 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %65, i32 0, i32 6, !dbg !344
  store i32 1, i32* %support45, align 8, !dbg !345
  br label %sw.epilog59, !dbg !346

sw.bb46:                                          ; preds = %for.end
  %66 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !347
  %spatial_compose47 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %66, i32 0, i32 7, !dbg !348
  store void (%struct.DWTContext*, i32, i32, i32, i32)* @spatial_compose_fidelity_8bit, void (%struct.DWTContext*, i32, i32, i32, i32)** %spatial_compose47, align 8, !dbg !349
  %67 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !350
  %vertical_compose_l048 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %67, i32 0, i32 8, !dbg !351
  store void ()* bitcast (void (i8*, i8**, i32)* @vertical_compose_fidelityiL0_8bit to void ()*), void ()** %vertical_compose_l048, align 8, !dbg !352
  %68 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !353
  %vertical_compose_h049 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %68, i32 0, i32 9, !dbg !354
  store void ()* bitcast (void (i8*, i8**, i32)* @vertical_compose_fidelityiH0_8bit to void ()*), void ()** %vertical_compose_h049, align 8, !dbg !355
  %69 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !356
  %horizontal_compose50 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %69, i32 0, i32 13, !dbg !357
  store void (i8*, i8*, i32)* @horizontal_compose_fidelityi_8bit, void (i8*, i8*, i32)** %horizontal_compose50, align 8, !dbg !358
  %70 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !359
  %support51 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %70, i32 0, i32 6, !dbg !360
  store i32 0, i32* %support51, align 8, !dbg !361
  br label %sw.epilog59, !dbg !362

sw.bb52:                                          ; preds = %for.end
  %71 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !363
  %spatial_compose53 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %71, i32 0, i32 7, !dbg !364
  store void (%struct.DWTContext*, i32, i32, i32, i32)* @spatial_compose_daub97i_dy_8bit, void (%struct.DWTContext*, i32, i32, i32, i32)** %spatial_compose53, align 8, !dbg !365
  %72 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !366
  %vertical_compose_l054 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %72, i32 0, i32 8, !dbg !367
  store void ()* bitcast (void (i8*, i8*, i8*, i32)* @vertical_compose_daub97iL0_8bit to void ()*), void ()** %vertical_compose_l054, align 8, !dbg !368
  %73 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !369
  %vertical_compose_h055 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %73, i32 0, i32 9, !dbg !370
  store void ()* bitcast (void (i8*, i8*, i8*, i32)* @vertical_compose_daub97iH0_8bit to void ()*), void ()** %vertical_compose_h055, align 8, !dbg !371
  %74 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !372
  %vertical_compose_l1 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %74, i32 0, i32 10, !dbg !373
  store void ()* bitcast (void (i8*, i8*, i8*, i32)* @vertical_compose_daub97iL1_8bit to void ()*), void ()** %vertical_compose_l1, align 8, !dbg !374
  %75 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !375
  %vertical_compose_h1 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %75, i32 0, i32 11, !dbg !376
  store void ()* bitcast (void (i8*, i8*, i8*, i32)* @vertical_compose_daub97iH1_8bit to void ()*), void ()** %vertical_compose_h1, align 8, !dbg !377
  %76 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !378
  %horizontal_compose56 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %76, i32 0, i32 13, !dbg !379
  store void (i8*, i8*, i32)* @horizontal_compose_daub97i_8bit, void (i8*, i8*, i32)** %horizontal_compose56, align 8, !dbg !380
  %77 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !381
  %support57 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %77, i32 0, i32 6, !dbg !382
  store i32 5, i32* %support57, align 8, !dbg !383
  br label %sw.epilog59, !dbg !384

sw.default58:                                     ; preds = %for.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !385
  br label %return, !dbg !385

sw.epilog59:                                      ; preds = %sw.bb52, %sw.bb46, %if.end, %sw.bb34, %sw.bb28, %sw.bb27
  store i32 0, i32* %retval, align 4, !dbg !386
  br label %return, !dbg !386

return:                                           ; preds = %sw.epilog59, %sw.default58
  %78 = load i32, i32* %retval, align 4, !dbg !387
  ret i32 %78, !dbg !387
}

; Function Attrs: nounwind uwtable
define internal i32 @ff_spatial_idwt_init_10bit(%struct.DWTContext* %d, i32 %type) #0 !dbg !388 {
entry:
  %retval = alloca i32, align 4
  %d.addr = alloca %struct.DWTContext*, align 8
  %type.addr = alloca i32, align 4
  %level = alloca i32, align 4
  %hl = alloca i32, align 4
  %stride_l = alloca i32, align 4
  store %struct.DWTContext* %d, %struct.DWTContext** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTContext** %d.addr, metadata !389, metadata !87), !dbg !390
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !391, metadata !87), !dbg !392
  call void @llvm.dbg.declare(metadata i32* %level, metadata !393, metadata !87), !dbg !394
  %0 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !395
  %temp = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %0, i32 0, i32 1, !dbg !396
  %1 = load i8*, i8** %temp, align 8, !dbg !396
  %2 = bitcast i8* %1 to i32*, !dbg !397
  %add.ptr = getelementptr inbounds i32, i32* %2, i64 8, !dbg !398
  %3 = bitcast i32* %add.ptr to i8*, !dbg !399
  %4 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !400
  %temp1 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %4, i32 0, i32 1, !dbg !401
  store i8* %3, i8** %temp1, align 8, !dbg !402
  %5 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !403
  %decomposition_count = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %5, i32 0, i32 5, !dbg !405
  %6 = load i32, i32* %decomposition_count, align 4, !dbg !405
  %sub = sub nsw i32 %6, 1, !dbg !406
  store i32 %sub, i32* %level, align 4, !dbg !407
  br label %for.cond, !dbg !408

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %level, align 4, !dbg !409
  %cmp = icmp sge i32 %7, 0, !dbg !412
  br i1 %cmp, label %for.body, label %for.end, !dbg !413

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %hl, metadata !414, metadata !87), !dbg !416
  %8 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !417
  %height = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %8, i32 0, i32 3, !dbg !418
  %9 = load i32, i32* %height, align 4, !dbg !418
  %10 = load i32, i32* %level, align 4, !dbg !419
  %shr = ashr i32 %9, %10, !dbg !420
  store i32 %shr, i32* %hl, align 4, !dbg !416
  call void @llvm.dbg.declare(metadata i32* %stride_l, metadata !421, metadata !87), !dbg !422
  %11 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !423
  %stride = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %11, i32 0, i32 4, !dbg !424
  %12 = load i32, i32* %stride, align 8, !dbg !424
  %13 = load i32, i32* %level, align 4, !dbg !425
  %shl = shl i32 %12, %13, !dbg !426
  store i32 %shl, i32* %stride_l, align 4, !dbg !422
  %14 = load i32, i32* %type.addr, align 4, !dbg !427
  switch i32 %14, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb3
    i32 4, label %sw.bb9
    i32 5, label %sw.bb15
    i32 6, label %sw.bb15
    i32 8, label %sw.bb17
  ], !dbg !428

sw.bb:                                            ; preds = %for.body
  %15 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !429
  %cs = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %15, i32 0, i32 14, !dbg !431
  %arraydecay = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs, i32 0, i32 0, !dbg !429
  %16 = load i32, i32* %level, align 4, !dbg !432
  %idx.ext = sext i32 %16 to i64, !dbg !433
  %add.ptr2 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arraydecay, i64 %idx.ext, !dbg !433
  %17 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !434
  %buffer = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %17, i32 0, i32 0, !dbg !435
  %18 = load i8*, i8** %buffer, align 8, !dbg !435
  %19 = load i32, i32* %hl, align 4, !dbg !436
  %20 = load i32, i32* %stride_l, align 4, !dbg !437
  call void @spatial_compose_dd97i_init_10bit(%struct.DWTCompose* %add.ptr2, i8* %18, i32 %19, i32 %20), !dbg !438
  br label %sw.epilog, !dbg !439

sw.bb3:                                           ; preds = %for.body
  %21 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !440
  %cs4 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %21, i32 0, i32 14, !dbg !441
  %arraydecay5 = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs4, i32 0, i32 0, !dbg !440
  %22 = load i32, i32* %level, align 4, !dbg !442
  %idx.ext6 = sext i32 %22 to i64, !dbg !443
  %add.ptr7 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arraydecay5, i64 %idx.ext6, !dbg !443
  %23 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !444
  %buffer8 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %23, i32 0, i32 0, !dbg !445
  %24 = load i8*, i8** %buffer8, align 8, !dbg !445
  %25 = load i32, i32* %hl, align 4, !dbg !446
  %26 = load i32, i32* %stride_l, align 4, !dbg !447
  call void @spatial_compose53i_init_10bit(%struct.DWTCompose* %add.ptr7, i8* %24, i32 %25, i32 %26), !dbg !448
  br label %sw.epilog, !dbg !449

sw.bb9:                                           ; preds = %for.body
  %27 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !450
  %cs10 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %27, i32 0, i32 14, !dbg !451
  %arraydecay11 = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs10, i32 0, i32 0, !dbg !450
  %28 = load i32, i32* %level, align 4, !dbg !452
  %idx.ext12 = sext i32 %28 to i64, !dbg !453
  %add.ptr13 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arraydecay11, i64 %idx.ext12, !dbg !453
  %29 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !454
  %buffer14 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %29, i32 0, i32 0, !dbg !455
  %30 = load i8*, i8** %buffer14, align 8, !dbg !455
  %31 = load i32, i32* %hl, align 4, !dbg !456
  %32 = load i32, i32* %stride_l, align 4, !dbg !457
  call void @spatial_compose_dd137i_init_10bit(%struct.DWTCompose* %add.ptr13, i8* %30, i32 %31, i32 %32), !dbg !458
  br label %sw.epilog, !dbg !459

sw.bb15:                                          ; preds = %for.body, %for.body
  %33 = load i32, i32* %level, align 4, !dbg !460
  %idxprom = sext i32 %33 to i64, !dbg !461
  %34 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !461
  %cs16 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %34, i32 0, i32 14, !dbg !462
  %arrayidx = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs16, i64 0, i64 %idxprom, !dbg !461
  %y = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arrayidx, i32 0, i32 1, !dbg !463
  store i32 1, i32* %y, align 8, !dbg !464
  br label %sw.epilog, !dbg !465

sw.bb17:                                          ; preds = %for.body
  %35 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !466
  %cs18 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %35, i32 0, i32 14, !dbg !467
  %arraydecay19 = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs18, i32 0, i32 0, !dbg !466
  %36 = load i32, i32* %level, align 4, !dbg !468
  %idx.ext20 = sext i32 %36 to i64, !dbg !469
  %add.ptr21 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arraydecay19, i64 %idx.ext20, !dbg !469
  %37 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !470
  %buffer22 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %37, i32 0, i32 0, !dbg !471
  %38 = load i8*, i8** %buffer22, align 8, !dbg !471
  %39 = load i32, i32* %hl, align 4, !dbg !472
  %40 = load i32, i32* %stride_l, align 4, !dbg !473
  call void @spatial_compose97i_init_10bit(%struct.DWTCompose* %add.ptr21, i8* %38, i32 %39, i32 %40), !dbg !474
  br label %sw.epilog, !dbg !475

sw.default:                                       ; preds = %for.body
  %41 = load i32, i32* %level, align 4, !dbg !476
  %idxprom23 = sext i32 %41 to i64, !dbg !477
  %42 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !477
  %cs24 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %42, i32 0, i32 14, !dbg !478
  %arrayidx25 = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs24, i64 0, i64 %idxprom23, !dbg !477
  %y26 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arrayidx25, i32 0, i32 1, !dbg !479
  store i32 0, i32* %y26, align 8, !dbg !480
  br label %sw.epilog, !dbg !481

sw.epilog:                                        ; preds = %sw.default, %sw.bb17, %sw.bb15, %sw.bb9, %sw.bb3, %sw.bb
  br label %for.inc, !dbg !482

for.inc:                                          ; preds = %sw.epilog
  %43 = load i32, i32* %level, align 4, !dbg !483
  %dec = add nsw i32 %43, -1, !dbg !483
  store i32 %dec, i32* %level, align 4, !dbg !483
  br label %for.cond, !dbg !485, !llvm.loop !486

for.end:                                          ; preds = %for.cond
  %44 = load i32, i32* %type.addr, align 4, !dbg !488
  switch i32 %44, label %sw.default58 [
    i32 2, label %sw.bb27
    i32 3, label %sw.bb28
    i32 4, label %sw.bb34
    i32 5, label %sw.bb40
    i32 6, label %sw.bb40
    i32 7, label %sw.bb46
    i32 8, label %sw.bb52
  ], !dbg !489

sw.bb27:                                          ; preds = %for.end
  %45 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !490
  %spatial_compose = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %45, i32 0, i32 7, !dbg !492
  store void (%struct.DWTContext*, i32, i32, i32, i32)* @spatial_compose_dd97i_dy_10bit, void (%struct.DWTContext*, i32, i32, i32, i32)** %spatial_compose, align 8, !dbg !493
  %46 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !494
  %vertical_compose_l0 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %46, i32 0, i32 8, !dbg !495
  store void ()* bitcast (void (i8*, i8*, i8*, i32)* @vertical_compose53iL0_10bit to void ()*), void ()** %vertical_compose_l0, align 8, !dbg !496
  %47 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !497
  %vertical_compose_h0 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %47, i32 0, i32 9, !dbg !498
  store void ()* bitcast (void (i8*, i8*, i8*, i8*, i8*, i32)* @vertical_compose_dd97iH0_10bit to void ()*), void ()** %vertical_compose_h0, align 8, !dbg !499
  %48 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !500
  %horizontal_compose = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %48, i32 0, i32 13, !dbg !501
  store void (i8*, i8*, i32)* @horizontal_compose_dd97i_10bit, void (i8*, i8*, i32)** %horizontal_compose, align 8, !dbg !502
  %49 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !503
  %support = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %49, i32 0, i32 6, !dbg !504
  store i32 7, i32* %support, align 8, !dbg !505
  br label %sw.epilog59, !dbg !506

sw.bb28:                                          ; preds = %for.end
  %50 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !507
  %spatial_compose29 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %50, i32 0, i32 7, !dbg !508
  store void (%struct.DWTContext*, i32, i32, i32, i32)* @spatial_compose_dirac53i_dy_10bit, void (%struct.DWTContext*, i32, i32, i32, i32)** %spatial_compose29, align 8, !dbg !509
  %51 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !510
  %vertical_compose_l030 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %51, i32 0, i32 8, !dbg !511
  store void ()* bitcast (void (i8*, i8*, i8*, i32)* @vertical_compose53iL0_10bit to void ()*), void ()** %vertical_compose_l030, align 8, !dbg !512
  %52 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !513
  %vertical_compose_h031 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %52, i32 0, i32 9, !dbg !514
  store void ()* bitcast (void (i8*, i8*, i8*, i32)* @vertical_compose_dirac53iH0_10bit to void ()*), void ()** %vertical_compose_h031, align 8, !dbg !515
  %53 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !516
  %horizontal_compose32 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %53, i32 0, i32 13, !dbg !517
  store void (i8*, i8*, i32)* @horizontal_compose_dirac53i_10bit, void (i8*, i8*, i32)** %horizontal_compose32, align 8, !dbg !518
  %54 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !519
  %support33 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %54, i32 0, i32 6, !dbg !520
  store i32 3, i32* %support33, align 8, !dbg !521
  br label %sw.epilog59, !dbg !522

sw.bb34:                                          ; preds = %for.end
  %55 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !523
  %spatial_compose35 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %55, i32 0, i32 7, !dbg !524
  store void (%struct.DWTContext*, i32, i32, i32, i32)* @spatial_compose_dd137i_dy_10bit, void (%struct.DWTContext*, i32, i32, i32, i32)** %spatial_compose35, align 8, !dbg !525
  %56 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !526
  %vertical_compose_l036 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %56, i32 0, i32 8, !dbg !527
  store void ()* bitcast (void (i8*, i8*, i8*, i8*, i8*, i32)* @vertical_compose_dd137iL0_10bit to void ()*), void ()** %vertical_compose_l036, align 8, !dbg !528
  %57 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !529
  %vertical_compose_h037 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %57, i32 0, i32 9, !dbg !530
  store void ()* bitcast (void (i8*, i8*, i8*, i8*, i8*, i32)* @vertical_compose_dd97iH0_10bit to void ()*), void ()** %vertical_compose_h037, align 8, !dbg !531
  %58 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !532
  %horizontal_compose38 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %58, i32 0, i32 13, !dbg !533
  store void (i8*, i8*, i32)* @horizontal_compose_dd137i_10bit, void (i8*, i8*, i32)** %horizontal_compose38, align 8, !dbg !534
  %59 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !535
  %support39 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %59, i32 0, i32 6, !dbg !536
  store i32 7, i32* %support39, align 8, !dbg !537
  br label %sw.epilog59, !dbg !538

sw.bb40:                                          ; preds = %for.end, %for.end
  %60 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !539
  %spatial_compose41 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %60, i32 0, i32 7, !dbg !540
  store void (%struct.DWTContext*, i32, i32, i32, i32)* @spatial_compose_haari_dy_10bit, void (%struct.DWTContext*, i32, i32, i32, i32)** %spatial_compose41, align 8, !dbg !541
  %61 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !542
  %vertical_compose = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %61, i32 0, i32 12, !dbg !543
  store void ()* bitcast (void (i8*, i8*, i32)* @vertical_compose_haar_10bit to void ()*), void ()** %vertical_compose, align 8, !dbg !544
  %62 = load i32, i32* %type.addr, align 4, !dbg !545
  %cmp42 = icmp eq i32 %62, 5, !dbg !547
  br i1 %cmp42, label %if.then, label %if.else, !dbg !548

if.then:                                          ; preds = %sw.bb40
  %63 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !549
  %horizontal_compose43 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %63, i32 0, i32 13, !dbg !550
  store void (i8*, i8*, i32)* @horizontal_compose_haar0i_10bit, void (i8*, i8*, i32)** %horizontal_compose43, align 8, !dbg !551
  br label %if.end, !dbg !549

if.else:                                          ; preds = %sw.bb40
  %64 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !552
  %horizontal_compose44 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %64, i32 0, i32 13, !dbg !553
  store void (i8*, i8*, i32)* @horizontal_compose_haar1i_10bit, void (i8*, i8*, i32)** %horizontal_compose44, align 8, !dbg !554
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %65 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !555
  %support45 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %65, i32 0, i32 6, !dbg !556
  store i32 1, i32* %support45, align 8, !dbg !557
  br label %sw.epilog59, !dbg !558

sw.bb46:                                          ; preds = %for.end
  %66 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !559
  %spatial_compose47 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %66, i32 0, i32 7, !dbg !560
  store void (%struct.DWTContext*, i32, i32, i32, i32)* @spatial_compose_fidelity_10bit, void (%struct.DWTContext*, i32, i32, i32, i32)** %spatial_compose47, align 8, !dbg !561
  %67 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !562
  %vertical_compose_l048 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %67, i32 0, i32 8, !dbg !563
  store void ()* bitcast (void (i8*, i8**, i32)* @vertical_compose_fidelityiL0_10bit to void ()*), void ()** %vertical_compose_l048, align 8, !dbg !564
  %68 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !565
  %vertical_compose_h049 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %68, i32 0, i32 9, !dbg !566
  store void ()* bitcast (void (i8*, i8**, i32)* @vertical_compose_fidelityiH0_10bit to void ()*), void ()** %vertical_compose_h049, align 8, !dbg !567
  %69 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !568
  %horizontal_compose50 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %69, i32 0, i32 13, !dbg !569
  store void (i8*, i8*, i32)* @horizontal_compose_fidelityi_10bit, void (i8*, i8*, i32)** %horizontal_compose50, align 8, !dbg !570
  %70 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !571
  %support51 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %70, i32 0, i32 6, !dbg !572
  store i32 0, i32* %support51, align 8, !dbg !573
  br label %sw.epilog59, !dbg !574

sw.bb52:                                          ; preds = %for.end
  %71 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !575
  %spatial_compose53 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %71, i32 0, i32 7, !dbg !576
  store void (%struct.DWTContext*, i32, i32, i32, i32)* @spatial_compose_daub97i_dy_10bit, void (%struct.DWTContext*, i32, i32, i32, i32)** %spatial_compose53, align 8, !dbg !577
  %72 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !578
  %vertical_compose_l054 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %72, i32 0, i32 8, !dbg !579
  store void ()* bitcast (void (i8*, i8*, i8*, i32)* @vertical_compose_daub97iL0_10bit to void ()*), void ()** %vertical_compose_l054, align 8, !dbg !580
  %73 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !581
  %vertical_compose_h055 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %73, i32 0, i32 9, !dbg !582
  store void ()* bitcast (void (i8*, i8*, i8*, i32)* @vertical_compose_daub97iH0_10bit to void ()*), void ()** %vertical_compose_h055, align 8, !dbg !583
  %74 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !584
  %vertical_compose_l1 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %74, i32 0, i32 10, !dbg !585
  store void ()* bitcast (void (i8*, i8*, i8*, i32)* @vertical_compose_daub97iL1_10bit to void ()*), void ()** %vertical_compose_l1, align 8, !dbg !586
  %75 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !587
  %vertical_compose_h1 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %75, i32 0, i32 11, !dbg !588
  store void ()* bitcast (void (i8*, i8*, i8*, i32)* @vertical_compose_daub97iH1_10bit to void ()*), void ()** %vertical_compose_h1, align 8, !dbg !589
  %76 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !590
  %horizontal_compose56 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %76, i32 0, i32 13, !dbg !591
  store void (i8*, i8*, i32)* @horizontal_compose_daub97i_10bit, void (i8*, i8*, i32)** %horizontal_compose56, align 8, !dbg !592
  %77 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !593
  %support57 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %77, i32 0, i32 6, !dbg !594
  store i32 5, i32* %support57, align 8, !dbg !595
  br label %sw.epilog59, !dbg !596

sw.default58:                                     ; preds = %for.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !597
  br label %return, !dbg !597

sw.epilog59:                                      ; preds = %sw.bb52, %sw.bb46, %if.end, %sw.bb34, %sw.bb28, %sw.bb27
  store i32 0, i32* %retval, align 4, !dbg !598
  br label %return, !dbg !598

return:                                           ; preds = %sw.epilog59, %sw.default58
  %78 = load i32, i32* %retval, align 4, !dbg !599
  ret i32 %78, !dbg !599
}

; Function Attrs: nounwind uwtable
define internal i32 @ff_spatial_idwt_init_12bit(%struct.DWTContext* %d, i32 %type) #0 !dbg !600 {
entry:
  %retval = alloca i32, align 4
  %d.addr = alloca %struct.DWTContext*, align 8
  %type.addr = alloca i32, align 4
  %level = alloca i32, align 4
  %hl = alloca i32, align 4
  %stride_l = alloca i32, align 4
  store %struct.DWTContext* %d, %struct.DWTContext** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTContext** %d.addr, metadata !601, metadata !87), !dbg !602
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !603, metadata !87), !dbg !604
  call void @llvm.dbg.declare(metadata i32* %level, metadata !605, metadata !87), !dbg !606
  %0 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !607
  %temp = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %0, i32 0, i32 1, !dbg !608
  %1 = load i8*, i8** %temp, align 8, !dbg !608
  %2 = bitcast i8* %1 to i32*, !dbg !609
  %add.ptr = getelementptr inbounds i32, i32* %2, i64 8, !dbg !610
  %3 = bitcast i32* %add.ptr to i8*, !dbg !611
  %4 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !612
  %temp1 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %4, i32 0, i32 1, !dbg !613
  store i8* %3, i8** %temp1, align 8, !dbg !614
  %5 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !615
  %decomposition_count = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %5, i32 0, i32 5, !dbg !617
  %6 = load i32, i32* %decomposition_count, align 4, !dbg !617
  %sub = sub nsw i32 %6, 1, !dbg !618
  store i32 %sub, i32* %level, align 4, !dbg !619
  br label %for.cond, !dbg !620

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %level, align 4, !dbg !621
  %cmp = icmp sge i32 %7, 0, !dbg !624
  br i1 %cmp, label %for.body, label %for.end, !dbg !625

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %hl, metadata !626, metadata !87), !dbg !628
  %8 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !629
  %height = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %8, i32 0, i32 3, !dbg !630
  %9 = load i32, i32* %height, align 4, !dbg !630
  %10 = load i32, i32* %level, align 4, !dbg !631
  %shr = ashr i32 %9, %10, !dbg !632
  store i32 %shr, i32* %hl, align 4, !dbg !628
  call void @llvm.dbg.declare(metadata i32* %stride_l, metadata !633, metadata !87), !dbg !634
  %11 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !635
  %stride = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %11, i32 0, i32 4, !dbg !636
  %12 = load i32, i32* %stride, align 8, !dbg !636
  %13 = load i32, i32* %level, align 4, !dbg !637
  %shl = shl i32 %12, %13, !dbg !638
  store i32 %shl, i32* %stride_l, align 4, !dbg !634
  %14 = load i32, i32* %type.addr, align 4, !dbg !639
  switch i32 %14, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb3
    i32 4, label %sw.bb9
    i32 5, label %sw.bb15
    i32 6, label %sw.bb15
    i32 8, label %sw.bb17
  ], !dbg !640

sw.bb:                                            ; preds = %for.body
  %15 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !641
  %cs = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %15, i32 0, i32 14, !dbg !643
  %arraydecay = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs, i32 0, i32 0, !dbg !641
  %16 = load i32, i32* %level, align 4, !dbg !644
  %idx.ext = sext i32 %16 to i64, !dbg !645
  %add.ptr2 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arraydecay, i64 %idx.ext, !dbg !645
  %17 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !646
  %buffer = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %17, i32 0, i32 0, !dbg !647
  %18 = load i8*, i8** %buffer, align 8, !dbg !647
  %19 = load i32, i32* %hl, align 4, !dbg !648
  %20 = load i32, i32* %stride_l, align 4, !dbg !649
  call void @spatial_compose_dd97i_init_12bit(%struct.DWTCompose* %add.ptr2, i8* %18, i32 %19, i32 %20), !dbg !650
  br label %sw.epilog, !dbg !651

sw.bb3:                                           ; preds = %for.body
  %21 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !652
  %cs4 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %21, i32 0, i32 14, !dbg !653
  %arraydecay5 = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs4, i32 0, i32 0, !dbg !652
  %22 = load i32, i32* %level, align 4, !dbg !654
  %idx.ext6 = sext i32 %22 to i64, !dbg !655
  %add.ptr7 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arraydecay5, i64 %idx.ext6, !dbg !655
  %23 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !656
  %buffer8 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %23, i32 0, i32 0, !dbg !657
  %24 = load i8*, i8** %buffer8, align 8, !dbg !657
  %25 = load i32, i32* %hl, align 4, !dbg !658
  %26 = load i32, i32* %stride_l, align 4, !dbg !659
  call void @spatial_compose53i_init_12bit(%struct.DWTCompose* %add.ptr7, i8* %24, i32 %25, i32 %26), !dbg !660
  br label %sw.epilog, !dbg !661

sw.bb9:                                           ; preds = %for.body
  %27 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !662
  %cs10 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %27, i32 0, i32 14, !dbg !663
  %arraydecay11 = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs10, i32 0, i32 0, !dbg !662
  %28 = load i32, i32* %level, align 4, !dbg !664
  %idx.ext12 = sext i32 %28 to i64, !dbg !665
  %add.ptr13 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arraydecay11, i64 %idx.ext12, !dbg !665
  %29 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !666
  %buffer14 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %29, i32 0, i32 0, !dbg !667
  %30 = load i8*, i8** %buffer14, align 8, !dbg !667
  %31 = load i32, i32* %hl, align 4, !dbg !668
  %32 = load i32, i32* %stride_l, align 4, !dbg !669
  call void @spatial_compose_dd137i_init_12bit(%struct.DWTCompose* %add.ptr13, i8* %30, i32 %31, i32 %32), !dbg !670
  br label %sw.epilog, !dbg !671

sw.bb15:                                          ; preds = %for.body, %for.body
  %33 = load i32, i32* %level, align 4, !dbg !672
  %idxprom = sext i32 %33 to i64, !dbg !673
  %34 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !673
  %cs16 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %34, i32 0, i32 14, !dbg !674
  %arrayidx = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs16, i64 0, i64 %idxprom, !dbg !673
  %y = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arrayidx, i32 0, i32 1, !dbg !675
  store i32 1, i32* %y, align 8, !dbg !676
  br label %sw.epilog, !dbg !677

sw.bb17:                                          ; preds = %for.body
  %35 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !678
  %cs18 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %35, i32 0, i32 14, !dbg !679
  %arraydecay19 = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs18, i32 0, i32 0, !dbg !678
  %36 = load i32, i32* %level, align 4, !dbg !680
  %idx.ext20 = sext i32 %36 to i64, !dbg !681
  %add.ptr21 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arraydecay19, i64 %idx.ext20, !dbg !681
  %37 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !682
  %buffer22 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %37, i32 0, i32 0, !dbg !683
  %38 = load i8*, i8** %buffer22, align 8, !dbg !683
  %39 = load i32, i32* %hl, align 4, !dbg !684
  %40 = load i32, i32* %stride_l, align 4, !dbg !685
  call void @spatial_compose97i_init_12bit(%struct.DWTCompose* %add.ptr21, i8* %38, i32 %39, i32 %40), !dbg !686
  br label %sw.epilog, !dbg !687

sw.default:                                       ; preds = %for.body
  %41 = load i32, i32* %level, align 4, !dbg !688
  %idxprom23 = sext i32 %41 to i64, !dbg !689
  %42 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !689
  %cs24 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %42, i32 0, i32 14, !dbg !690
  %arrayidx25 = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs24, i64 0, i64 %idxprom23, !dbg !689
  %y26 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arrayidx25, i32 0, i32 1, !dbg !691
  store i32 0, i32* %y26, align 8, !dbg !692
  br label %sw.epilog, !dbg !693

sw.epilog:                                        ; preds = %sw.default, %sw.bb17, %sw.bb15, %sw.bb9, %sw.bb3, %sw.bb
  br label %for.inc, !dbg !694

for.inc:                                          ; preds = %sw.epilog
  %43 = load i32, i32* %level, align 4, !dbg !695
  %dec = add nsw i32 %43, -1, !dbg !695
  store i32 %dec, i32* %level, align 4, !dbg !695
  br label %for.cond, !dbg !697, !llvm.loop !698

for.end:                                          ; preds = %for.cond
  %44 = load i32, i32* %type.addr, align 4, !dbg !700
  switch i32 %44, label %sw.default58 [
    i32 2, label %sw.bb27
    i32 3, label %sw.bb28
    i32 4, label %sw.bb34
    i32 5, label %sw.bb40
    i32 6, label %sw.bb40
    i32 7, label %sw.bb46
    i32 8, label %sw.bb52
  ], !dbg !701

sw.bb27:                                          ; preds = %for.end
  %45 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !702
  %spatial_compose = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %45, i32 0, i32 7, !dbg !704
  store void (%struct.DWTContext*, i32, i32, i32, i32)* @spatial_compose_dd97i_dy_12bit, void (%struct.DWTContext*, i32, i32, i32, i32)** %spatial_compose, align 8, !dbg !705
  %46 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !706
  %vertical_compose_l0 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %46, i32 0, i32 8, !dbg !707
  store void ()* bitcast (void (i8*, i8*, i8*, i32)* @vertical_compose53iL0_12bit to void ()*), void ()** %vertical_compose_l0, align 8, !dbg !708
  %47 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !709
  %vertical_compose_h0 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %47, i32 0, i32 9, !dbg !710
  store void ()* bitcast (void (i8*, i8*, i8*, i8*, i8*, i32)* @vertical_compose_dd97iH0_12bit to void ()*), void ()** %vertical_compose_h0, align 8, !dbg !711
  %48 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !712
  %horizontal_compose = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %48, i32 0, i32 13, !dbg !713
  store void (i8*, i8*, i32)* @horizontal_compose_dd97i_12bit, void (i8*, i8*, i32)** %horizontal_compose, align 8, !dbg !714
  %49 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !715
  %support = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %49, i32 0, i32 6, !dbg !716
  store i32 7, i32* %support, align 8, !dbg !717
  br label %sw.epilog59, !dbg !718

sw.bb28:                                          ; preds = %for.end
  %50 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !719
  %spatial_compose29 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %50, i32 0, i32 7, !dbg !720
  store void (%struct.DWTContext*, i32, i32, i32, i32)* @spatial_compose_dirac53i_dy_12bit, void (%struct.DWTContext*, i32, i32, i32, i32)** %spatial_compose29, align 8, !dbg !721
  %51 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !722
  %vertical_compose_l030 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %51, i32 0, i32 8, !dbg !723
  store void ()* bitcast (void (i8*, i8*, i8*, i32)* @vertical_compose53iL0_12bit to void ()*), void ()** %vertical_compose_l030, align 8, !dbg !724
  %52 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !725
  %vertical_compose_h031 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %52, i32 0, i32 9, !dbg !726
  store void ()* bitcast (void (i8*, i8*, i8*, i32)* @vertical_compose_dirac53iH0_12bit to void ()*), void ()** %vertical_compose_h031, align 8, !dbg !727
  %53 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !728
  %horizontal_compose32 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %53, i32 0, i32 13, !dbg !729
  store void (i8*, i8*, i32)* @horizontal_compose_dirac53i_12bit, void (i8*, i8*, i32)** %horizontal_compose32, align 8, !dbg !730
  %54 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !731
  %support33 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %54, i32 0, i32 6, !dbg !732
  store i32 3, i32* %support33, align 8, !dbg !733
  br label %sw.epilog59, !dbg !734

sw.bb34:                                          ; preds = %for.end
  %55 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !735
  %spatial_compose35 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %55, i32 0, i32 7, !dbg !736
  store void (%struct.DWTContext*, i32, i32, i32, i32)* @spatial_compose_dd137i_dy_12bit, void (%struct.DWTContext*, i32, i32, i32, i32)** %spatial_compose35, align 8, !dbg !737
  %56 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !738
  %vertical_compose_l036 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %56, i32 0, i32 8, !dbg !739
  store void ()* bitcast (void (i8*, i8*, i8*, i8*, i8*, i32)* @vertical_compose_dd137iL0_12bit to void ()*), void ()** %vertical_compose_l036, align 8, !dbg !740
  %57 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !741
  %vertical_compose_h037 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %57, i32 0, i32 9, !dbg !742
  store void ()* bitcast (void (i8*, i8*, i8*, i8*, i8*, i32)* @vertical_compose_dd97iH0_12bit to void ()*), void ()** %vertical_compose_h037, align 8, !dbg !743
  %58 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !744
  %horizontal_compose38 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %58, i32 0, i32 13, !dbg !745
  store void (i8*, i8*, i32)* @horizontal_compose_dd137i_12bit, void (i8*, i8*, i32)** %horizontal_compose38, align 8, !dbg !746
  %59 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !747
  %support39 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %59, i32 0, i32 6, !dbg !748
  store i32 7, i32* %support39, align 8, !dbg !749
  br label %sw.epilog59, !dbg !750

sw.bb40:                                          ; preds = %for.end, %for.end
  %60 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !751
  %spatial_compose41 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %60, i32 0, i32 7, !dbg !752
  store void (%struct.DWTContext*, i32, i32, i32, i32)* @spatial_compose_haari_dy_12bit, void (%struct.DWTContext*, i32, i32, i32, i32)** %spatial_compose41, align 8, !dbg !753
  %61 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !754
  %vertical_compose = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %61, i32 0, i32 12, !dbg !755
  store void ()* bitcast (void (i8*, i8*, i32)* @vertical_compose_haar_12bit to void ()*), void ()** %vertical_compose, align 8, !dbg !756
  %62 = load i32, i32* %type.addr, align 4, !dbg !757
  %cmp42 = icmp eq i32 %62, 5, !dbg !759
  br i1 %cmp42, label %if.then, label %if.else, !dbg !760

if.then:                                          ; preds = %sw.bb40
  %63 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !761
  %horizontal_compose43 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %63, i32 0, i32 13, !dbg !762
  store void (i8*, i8*, i32)* @horizontal_compose_haar0i_12bit, void (i8*, i8*, i32)** %horizontal_compose43, align 8, !dbg !763
  br label %if.end, !dbg !761

if.else:                                          ; preds = %sw.bb40
  %64 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !764
  %horizontal_compose44 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %64, i32 0, i32 13, !dbg !765
  store void (i8*, i8*, i32)* @horizontal_compose_haar1i_12bit, void (i8*, i8*, i32)** %horizontal_compose44, align 8, !dbg !766
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %65 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !767
  %support45 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %65, i32 0, i32 6, !dbg !768
  store i32 1, i32* %support45, align 8, !dbg !769
  br label %sw.epilog59, !dbg !770

sw.bb46:                                          ; preds = %for.end
  %66 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !771
  %spatial_compose47 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %66, i32 0, i32 7, !dbg !772
  store void (%struct.DWTContext*, i32, i32, i32, i32)* @spatial_compose_fidelity_12bit, void (%struct.DWTContext*, i32, i32, i32, i32)** %spatial_compose47, align 8, !dbg !773
  %67 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !774
  %vertical_compose_l048 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %67, i32 0, i32 8, !dbg !775
  store void ()* bitcast (void (i8*, i8**, i32)* @vertical_compose_fidelityiL0_12bit to void ()*), void ()** %vertical_compose_l048, align 8, !dbg !776
  %68 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !777
  %vertical_compose_h049 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %68, i32 0, i32 9, !dbg !778
  store void ()* bitcast (void (i8*, i8**, i32)* @vertical_compose_fidelityiH0_12bit to void ()*), void ()** %vertical_compose_h049, align 8, !dbg !779
  %69 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !780
  %horizontal_compose50 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %69, i32 0, i32 13, !dbg !781
  store void (i8*, i8*, i32)* @horizontal_compose_fidelityi_12bit, void (i8*, i8*, i32)** %horizontal_compose50, align 8, !dbg !782
  %70 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !783
  %support51 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %70, i32 0, i32 6, !dbg !784
  store i32 0, i32* %support51, align 8, !dbg !785
  br label %sw.epilog59, !dbg !786

sw.bb52:                                          ; preds = %for.end
  %71 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !787
  %spatial_compose53 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %71, i32 0, i32 7, !dbg !788
  store void (%struct.DWTContext*, i32, i32, i32, i32)* @spatial_compose_daub97i_dy_12bit, void (%struct.DWTContext*, i32, i32, i32, i32)** %spatial_compose53, align 8, !dbg !789
  %72 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !790
  %vertical_compose_l054 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %72, i32 0, i32 8, !dbg !791
  store void ()* bitcast (void (i8*, i8*, i8*, i32)* @vertical_compose_daub97iL0_12bit to void ()*), void ()** %vertical_compose_l054, align 8, !dbg !792
  %73 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !793
  %vertical_compose_h055 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %73, i32 0, i32 9, !dbg !794
  store void ()* bitcast (void (i8*, i8*, i8*, i32)* @vertical_compose_daub97iH0_12bit to void ()*), void ()** %vertical_compose_h055, align 8, !dbg !795
  %74 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !796
  %vertical_compose_l1 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %74, i32 0, i32 10, !dbg !797
  store void ()* bitcast (void (i8*, i8*, i8*, i32)* @vertical_compose_daub97iL1_12bit to void ()*), void ()** %vertical_compose_l1, align 8, !dbg !798
  %75 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !799
  %vertical_compose_h1 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %75, i32 0, i32 11, !dbg !800
  store void ()* bitcast (void (i8*, i8*, i8*, i32)* @vertical_compose_daub97iH1_12bit to void ()*), void ()** %vertical_compose_h1, align 8, !dbg !801
  %76 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !802
  %horizontal_compose56 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %76, i32 0, i32 13, !dbg !803
  store void (i8*, i8*, i32)* @horizontal_compose_daub97i_12bit, void (i8*, i8*, i32)** %horizontal_compose56, align 8, !dbg !804
  %77 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !805
  %support57 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %77, i32 0, i32 6, !dbg !806
  store i32 5, i32* %support57, align 8, !dbg !807
  br label %sw.epilog59, !dbg !808

sw.default58:                                     ; preds = %for.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !809
  br label %return, !dbg !809

sw.epilog59:                                      ; preds = %sw.bb52, %sw.bb46, %if.end, %sw.bb34, %sw.bb28, %sw.bb27
  store i32 0, i32* %retval, align 4, !dbg !810
  br label %return, !dbg !810

return:                                           ; preds = %sw.epilog59, %sw.default58
  %78 = load i32, i32* %retval, align 4, !dbg !811
  ret i32 %78, !dbg !811
}

declare void @av_log(i8*, i32, i8*, ...) #2

declare void @ff_spatial_idwt_init_x86(%struct.DWTContext*, i32) #2

; Function Attrs: nounwind uwtable
define void @ff_spatial_idwt_slice2(%struct.DWTContext* %d, i32 %y) #0 !dbg !812 {
entry:
  %d.addr = alloca %struct.DWTContext*, align 8
  %y.addr = alloca i32, align 4
  %level = alloca i32, align 4
  %support = alloca i32, align 4
  %wl = alloca i32, align 4
  %hl = alloca i32, align 4
  %stride_l = alloca i32, align 4
  store %struct.DWTContext* %d, %struct.DWTContext** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTContext** %d.addr, metadata !815, metadata !87), !dbg !816
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !817, metadata !87), !dbg !818
  call void @llvm.dbg.declare(metadata i32* %level, metadata !819, metadata !87), !dbg !820
  call void @llvm.dbg.declare(metadata i32* %support, metadata !821, metadata !87), !dbg !822
  %0 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !823
  %support1 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %0, i32 0, i32 6, !dbg !824
  %1 = load i32, i32* %support1, align 8, !dbg !824
  store i32 %1, i32* %support, align 4, !dbg !822
  %2 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !825
  %decomposition_count = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %2, i32 0, i32 5, !dbg !827
  %3 = load i32, i32* %decomposition_count, align 4, !dbg !827
  %sub = sub nsw i32 %3, 1, !dbg !828
  store i32 %sub, i32* %level, align 4, !dbg !829
  br label %for.cond, !dbg !830

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %level, align 4, !dbg !831
  %cmp = icmp sge i32 %4, 0, !dbg !834
  br i1 %cmp, label %for.body, label %for.end, !dbg !835

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %wl, metadata !836, metadata !87), !dbg !838
  %5 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !839
  %width = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %5, i32 0, i32 2, !dbg !840
  %6 = load i32, i32* %width, align 8, !dbg !840
  %7 = load i32, i32* %level, align 4, !dbg !841
  %shr = ashr i32 %6, %7, !dbg !842
  store i32 %shr, i32* %wl, align 4, !dbg !838
  call void @llvm.dbg.declare(metadata i32* %hl, metadata !843, metadata !87), !dbg !844
  %8 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !845
  %height = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %8, i32 0, i32 3, !dbg !846
  %9 = load i32, i32* %height, align 4, !dbg !846
  %10 = load i32, i32* %level, align 4, !dbg !847
  %shr2 = ashr i32 %9, %10, !dbg !848
  store i32 %shr2, i32* %hl, align 4, !dbg !844
  call void @llvm.dbg.declare(metadata i32* %stride_l, metadata !849, metadata !87), !dbg !850
  %11 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !851
  %stride = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %11, i32 0, i32 4, !dbg !852
  %12 = load i32, i32* %stride, align 8, !dbg !852
  %13 = load i32, i32* %level, align 4, !dbg !853
  %shl = shl i32 %12, %13, !dbg !854
  store i32 %shl, i32* %stride_l, align 4, !dbg !850
  br label %while.cond, !dbg !855

while.cond:                                       ; preds = %while.body, %for.body
  %14 = load i32, i32* %level, align 4, !dbg !856
  %idxprom = sext i32 %14 to i64, !dbg !858
  %15 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !858
  %cs = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %15, i32 0, i32 14, !dbg !859
  %arrayidx = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs, i64 0, i64 %idxprom, !dbg !858
  %y3 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arrayidx, i32 0, i32 1, !dbg !860
  %16 = load i32, i32* %y3, align 8, !dbg !860
  %17 = load i32, i32* %y.addr, align 4, !dbg !861
  %18 = load i32, i32* %level, align 4, !dbg !862
  %shr4 = ashr i32 %17, %18, !dbg !863
  %19 = load i32, i32* %support, align 4, !dbg !864
  %add = add nsw i32 %shr4, %19, !dbg !865
  %20 = load i32, i32* %hl, align 4, !dbg !866
  %cmp5 = icmp sgt i32 %add, %20, !dbg !867
  br i1 %cmp5, label %cond.true, label %cond.false, !dbg !868

cond.true:                                        ; preds = %while.cond
  %21 = load i32, i32* %hl, align 4, !dbg !869
  br label %cond.end, !dbg !871

cond.false:                                       ; preds = %while.cond
  %22 = load i32, i32* %y.addr, align 4, !dbg !872
  %23 = load i32, i32* %level, align 4, !dbg !874
  %shr6 = ashr i32 %22, %23, !dbg !875
  %24 = load i32, i32* %support, align 4, !dbg !876
  %add7 = add nsw i32 %shr6, %24, !dbg !877
  br label %cond.end, !dbg !878

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %21, %cond.true ], [ %add7, %cond.false ], !dbg !879
  %cmp8 = icmp sle i32 %16, %cond, !dbg !881
  br i1 %cmp8, label %while.body, label %while.end, !dbg !882

while.body:                                       ; preds = %cond.end
  %25 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !883
  %spatial_compose = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %25, i32 0, i32 7, !dbg !884
  %26 = load void (%struct.DWTContext*, i32, i32, i32, i32)*, void (%struct.DWTContext*, i32, i32, i32, i32)** %spatial_compose, align 8, !dbg !884
  %27 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !885
  %28 = load i32, i32* %level, align 4, !dbg !886
  %29 = load i32, i32* %wl, align 4, !dbg !887
  %30 = load i32, i32* %hl, align 4, !dbg !888
  %31 = load i32, i32* %stride_l, align 4, !dbg !889
  call void %26(%struct.DWTContext* %27, i32 %28, i32 %29, i32 %30, i32 %31), !dbg !883
  br label %while.cond, !dbg !890, !llvm.loop !892

while.end:                                        ; preds = %cond.end
  br label %for.inc, !dbg !893

for.inc:                                          ; preds = %while.end
  %32 = load i32, i32* %level, align 4, !dbg !894
  %dec = add nsw i32 %32, -1, !dbg !894
  store i32 %dec, i32* %level, align 4, !dbg !894
  br label %for.cond, !dbg !896, !llvm.loop !897

for.end:                                          ; preds = %for.cond
  ret void, !dbg !899
}

; Function Attrs: nounwind uwtable
define internal void @spatial_compose_dd97i_init_8bit(%struct.DWTCompose* %cs, i8* %buffer, i32 %height, i32 %stride) #0 !dbg !900 {
entry:
  %retval.i80 = alloca i32, align 4
  %a.addr.i81 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i81, metadata !904, metadata !87), !dbg !909
  %amin.addr.i82 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i82, metadata !911, metadata !87), !dbg !912
  %amax.addr.i83 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i83, metadata !913, metadata !87), !dbg !914
  %retval.i69 = alloca i32, align 4
  %a.addr.i70 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i70, metadata !904, metadata !87), !dbg !915
  %amin.addr.i71 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i71, metadata !911, metadata !87), !dbg !917
  %amax.addr.i72 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i72, metadata !913, metadata !87), !dbg !918
  %retval.i58 = alloca i32, align 4
  %a.addr.i59 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i59, metadata !904, metadata !87), !dbg !919
  %amin.addr.i60 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i60, metadata !911, metadata !87), !dbg !921
  %amax.addr.i61 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i61, metadata !913, metadata !87), !dbg !922
  %retval.i47 = alloca i32, align 4
  %a.addr.i48 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i48, metadata !904, metadata !87), !dbg !923
  %amin.addr.i49 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i49, metadata !911, metadata !87), !dbg !925
  %amax.addr.i50 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i50, metadata !913, metadata !87), !dbg !926
  %retval.i36 = alloca i32, align 4
  %a.addr.i37 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i37, metadata !904, metadata !87), !dbg !927
  %amin.addr.i38 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i38, metadata !911, metadata !87), !dbg !929
  %amax.addr.i39 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i39, metadata !913, metadata !87), !dbg !930
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !904, metadata !87), !dbg !931
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !911, metadata !87), !dbg !933
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !913, metadata !87), !dbg !934
  %cs.addr = alloca %struct.DWTCompose*, align 8
  %buffer.addr = alloca i8*, align 8
  %height.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  store %struct.DWTCompose* %cs, %struct.DWTCompose** %cs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTCompose** %cs.addr, metadata !935, metadata !87), !dbg !936
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !937, metadata !87), !dbg !938
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !939, metadata !87), !dbg !940
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !941, metadata !87), !dbg !942
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !943
  %1 = load i32, i32* %height.addr, align 4, !dbg !944
  %sub = sub nsw i32 %1, 2, !dbg !945
  store i32 -6, i32* %a.addr.i, align 4, !dbg !946
  store i32 0, i32* %amin.addr.i, align 4, !dbg !946
  store i32 %sub, i32* %amax.addr.i, align 4, !dbg !946
  %2 = load i32, i32* %a.addr.i, align 4, !dbg !947
  %3 = load i32, i32* %amin.addr.i, align 4, !dbg !949
  %cmp.i = icmp slt i32 %2, %3, !dbg !950
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !951

if.then.i:                                        ; preds = %entry
  %4 = load i32, i32* %amin.addr.i, align 4, !dbg !952
  store i32 %4, i32* %retval.i, align 4, !dbg !954
  br label %av_clip_c.exit, !dbg !954

if.else.i:                                        ; preds = %entry
  %5 = load i32, i32* %a.addr.i, align 4, !dbg !955
  %6 = load i32, i32* %amax.addr.i, align 4, !dbg !957
  %cmp1.i = icmp sgt i32 %5, %6, !dbg !958
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !959

if.then2.i:                                       ; preds = %if.else.i
  %7 = load i32, i32* %amax.addr.i, align 4, !dbg !960
  store i32 %7, i32* %retval.i, align 4, !dbg !962
  br label %av_clip_c.exit, !dbg !962

if.else3.i:                                       ; preds = %if.else.i
  %8 = load i32, i32* %a.addr.i, align 4, !dbg !963
  store i32 %8, i32* %retval.i, align 4, !dbg !964
  br label %av_clip_c.exit, !dbg !964

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %9 = load i32, i32* %retval.i, align 4, !dbg !965
  %10 = load i32, i32* %stride.addr, align 4, !dbg !966
  %mul = mul nsw i32 %9, %10, !dbg !967
  %idx.ext = sext i32 %mul to i64, !dbg !968
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %idx.ext, !dbg !968
  %11 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !969
  %b = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %11, i32 0, i32 0, !dbg !970
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 0, !dbg !969
  store i8* %add.ptr, i8** %arrayidx, align 8, !dbg !971
  %12 = load i8*, i8** %buffer.addr, align 8, !dbg !972
  %13 = load i32, i32* %height.addr, align 4, !dbg !973
  %sub1 = sub nsw i32 %13, 1, !dbg !974
  store i32 -5, i32* %a.addr.i81, align 4, !dbg !975
  store i32 1, i32* %amin.addr.i82, align 4, !dbg !975
  store i32 %sub1, i32* %amax.addr.i83, align 4, !dbg !975
  %14 = load i32, i32* %a.addr.i81, align 4, !dbg !976
  %15 = load i32, i32* %amin.addr.i82, align 4, !dbg !977
  %cmp.i84 = icmp slt i32 %14, %15, !dbg !978
  br i1 %cmp.i84, label %if.then.i85, label %if.else.i87, !dbg !979

if.then.i85:                                      ; preds = %av_clip_c.exit
  %16 = load i32, i32* %amin.addr.i82, align 4, !dbg !980
  store i32 %16, i32* %retval.i80, align 4, !dbg !981
  br label %av_clip_c.exit90, !dbg !981

if.else.i87:                                      ; preds = %av_clip_c.exit
  %17 = load i32, i32* %a.addr.i81, align 4, !dbg !982
  %18 = load i32, i32* %amax.addr.i83, align 4, !dbg !983
  %cmp1.i86 = icmp sgt i32 %17, %18, !dbg !984
  br i1 %cmp1.i86, label %if.then2.i88, label %if.else3.i89, !dbg !985

if.then2.i88:                                     ; preds = %if.else.i87
  %19 = load i32, i32* %amax.addr.i83, align 4, !dbg !986
  store i32 %19, i32* %retval.i80, align 4, !dbg !987
  br label %av_clip_c.exit90, !dbg !987

if.else3.i89:                                     ; preds = %if.else.i87
  %20 = load i32, i32* %a.addr.i81, align 4, !dbg !988
  store i32 %20, i32* %retval.i80, align 4, !dbg !989
  br label %av_clip_c.exit90, !dbg !989

av_clip_c.exit90:                                 ; preds = %if.then.i85, %if.then2.i88, %if.else3.i89
  %21 = load i32, i32* %retval.i80, align 4, !dbg !990
  %22 = load i32, i32* %stride.addr, align 4, !dbg !991
  %mul3 = mul nsw i32 %21, %22, !dbg !992
  %idx.ext4 = sext i32 %mul3 to i64, !dbg !993
  %add.ptr5 = getelementptr inbounds i8, i8* %12, i64 %idx.ext4, !dbg !993
  %23 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !994
  %b6 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %23, i32 0, i32 0, !dbg !995
  %arrayidx7 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b6, i64 0, i64 1, !dbg !994
  store i8* %add.ptr5, i8** %arrayidx7, align 8, !dbg !996
  %24 = load i8*, i8** %buffer.addr, align 8, !dbg !997
  %25 = load i32, i32* %height.addr, align 4, !dbg !998
  %sub8 = sub nsw i32 %25, 2, !dbg !999
  store i32 -4, i32* %a.addr.i70, align 4, !dbg !1000
  store i32 0, i32* %amin.addr.i71, align 4, !dbg !1000
  store i32 %sub8, i32* %amax.addr.i72, align 4, !dbg !1000
  %26 = load i32, i32* %a.addr.i70, align 4, !dbg !1001
  %27 = load i32, i32* %amin.addr.i71, align 4, !dbg !1002
  %cmp.i73 = icmp slt i32 %26, %27, !dbg !1003
  br i1 %cmp.i73, label %if.then.i74, label %if.else.i76, !dbg !1004

if.then.i74:                                      ; preds = %av_clip_c.exit90
  %28 = load i32, i32* %amin.addr.i71, align 4, !dbg !1005
  store i32 %28, i32* %retval.i69, align 4, !dbg !1006
  br label %av_clip_c.exit79, !dbg !1006

if.else.i76:                                      ; preds = %av_clip_c.exit90
  %29 = load i32, i32* %a.addr.i70, align 4, !dbg !1007
  %30 = load i32, i32* %amax.addr.i72, align 4, !dbg !1008
  %cmp1.i75 = icmp sgt i32 %29, %30, !dbg !1009
  br i1 %cmp1.i75, label %if.then2.i77, label %if.else3.i78, !dbg !1010

if.then2.i77:                                     ; preds = %if.else.i76
  %31 = load i32, i32* %amax.addr.i72, align 4, !dbg !1011
  store i32 %31, i32* %retval.i69, align 4, !dbg !1012
  br label %av_clip_c.exit79, !dbg !1012

if.else3.i78:                                     ; preds = %if.else.i76
  %32 = load i32, i32* %a.addr.i70, align 4, !dbg !1013
  store i32 %32, i32* %retval.i69, align 4, !dbg !1014
  br label %av_clip_c.exit79, !dbg !1014

av_clip_c.exit79:                                 ; preds = %if.then.i74, %if.then2.i77, %if.else3.i78
  %33 = load i32, i32* %retval.i69, align 4, !dbg !1015
  %34 = load i32, i32* %stride.addr, align 4, !dbg !1016
  %mul10 = mul nsw i32 %33, %34, !dbg !1017
  %idx.ext11 = sext i32 %mul10 to i64, !dbg !1018
  %add.ptr12 = getelementptr inbounds i8, i8* %24, i64 %idx.ext11, !dbg !1018
  %35 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !1019
  %b13 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %35, i32 0, i32 0, !dbg !1020
  %arrayidx14 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b13, i64 0, i64 2, !dbg !1019
  store i8* %add.ptr12, i8** %arrayidx14, align 8, !dbg !1021
  %36 = load i8*, i8** %buffer.addr, align 8, !dbg !1022
  %37 = load i32, i32* %height.addr, align 4, !dbg !1023
  %sub15 = sub nsw i32 %37, 1, !dbg !1024
  store i32 -3, i32* %a.addr.i59, align 4, !dbg !1025
  store i32 1, i32* %amin.addr.i60, align 4, !dbg !1025
  store i32 %sub15, i32* %amax.addr.i61, align 4, !dbg !1025
  %38 = load i32, i32* %a.addr.i59, align 4, !dbg !1026
  %39 = load i32, i32* %amin.addr.i60, align 4, !dbg !1027
  %cmp.i62 = icmp slt i32 %38, %39, !dbg !1028
  br i1 %cmp.i62, label %if.then.i63, label %if.else.i65, !dbg !1029

if.then.i63:                                      ; preds = %av_clip_c.exit79
  %40 = load i32, i32* %amin.addr.i60, align 4, !dbg !1030
  store i32 %40, i32* %retval.i58, align 4, !dbg !1031
  br label %av_clip_c.exit68, !dbg !1031

if.else.i65:                                      ; preds = %av_clip_c.exit79
  %41 = load i32, i32* %a.addr.i59, align 4, !dbg !1032
  %42 = load i32, i32* %amax.addr.i61, align 4, !dbg !1033
  %cmp1.i64 = icmp sgt i32 %41, %42, !dbg !1034
  br i1 %cmp1.i64, label %if.then2.i66, label %if.else3.i67, !dbg !1035

if.then2.i66:                                     ; preds = %if.else.i65
  %43 = load i32, i32* %amax.addr.i61, align 4, !dbg !1036
  store i32 %43, i32* %retval.i58, align 4, !dbg !1037
  br label %av_clip_c.exit68, !dbg !1037

if.else3.i67:                                     ; preds = %if.else.i65
  %44 = load i32, i32* %a.addr.i59, align 4, !dbg !1038
  store i32 %44, i32* %retval.i58, align 4, !dbg !1039
  br label %av_clip_c.exit68, !dbg !1039

av_clip_c.exit68:                                 ; preds = %if.then.i63, %if.then2.i66, %if.else3.i67
  %45 = load i32, i32* %retval.i58, align 4, !dbg !1040
  %46 = load i32, i32* %stride.addr, align 4, !dbg !1041
  %mul17 = mul nsw i32 %45, %46, !dbg !1042
  %idx.ext18 = sext i32 %mul17 to i64, !dbg !1043
  %add.ptr19 = getelementptr inbounds i8, i8* %36, i64 %idx.ext18, !dbg !1043
  %47 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !1044
  %b20 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %47, i32 0, i32 0, !dbg !1045
  %arrayidx21 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b20, i64 0, i64 3, !dbg !1044
  store i8* %add.ptr19, i8** %arrayidx21, align 8, !dbg !1046
  %48 = load i8*, i8** %buffer.addr, align 8, !dbg !1047
  %49 = load i32, i32* %height.addr, align 4, !dbg !1048
  %sub22 = sub nsw i32 %49, 2, !dbg !1049
  store i32 -2, i32* %a.addr.i48, align 4, !dbg !1050
  store i32 0, i32* %amin.addr.i49, align 4, !dbg !1050
  store i32 %sub22, i32* %amax.addr.i50, align 4, !dbg !1050
  %50 = load i32, i32* %a.addr.i48, align 4, !dbg !1051
  %51 = load i32, i32* %amin.addr.i49, align 4, !dbg !1052
  %cmp.i51 = icmp slt i32 %50, %51, !dbg !1053
  br i1 %cmp.i51, label %if.then.i52, label %if.else.i54, !dbg !1054

if.then.i52:                                      ; preds = %av_clip_c.exit68
  %52 = load i32, i32* %amin.addr.i49, align 4, !dbg !1055
  store i32 %52, i32* %retval.i47, align 4, !dbg !1056
  br label %av_clip_c.exit57, !dbg !1056

if.else.i54:                                      ; preds = %av_clip_c.exit68
  %53 = load i32, i32* %a.addr.i48, align 4, !dbg !1057
  %54 = load i32, i32* %amax.addr.i50, align 4, !dbg !1058
  %cmp1.i53 = icmp sgt i32 %53, %54, !dbg !1059
  br i1 %cmp1.i53, label %if.then2.i55, label %if.else3.i56, !dbg !1060

if.then2.i55:                                     ; preds = %if.else.i54
  %55 = load i32, i32* %amax.addr.i50, align 4, !dbg !1061
  store i32 %55, i32* %retval.i47, align 4, !dbg !1062
  br label %av_clip_c.exit57, !dbg !1062

if.else3.i56:                                     ; preds = %if.else.i54
  %56 = load i32, i32* %a.addr.i48, align 4, !dbg !1063
  store i32 %56, i32* %retval.i47, align 4, !dbg !1064
  br label %av_clip_c.exit57, !dbg !1064

av_clip_c.exit57:                                 ; preds = %if.then.i52, %if.then2.i55, %if.else3.i56
  %57 = load i32, i32* %retval.i47, align 4, !dbg !1065
  %58 = load i32, i32* %stride.addr, align 4, !dbg !1066
  %mul24 = mul nsw i32 %57, %58, !dbg !1067
  %idx.ext25 = sext i32 %mul24 to i64, !dbg !1068
  %add.ptr26 = getelementptr inbounds i8, i8* %48, i64 %idx.ext25, !dbg !1068
  %59 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !1069
  %b27 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %59, i32 0, i32 0, !dbg !1070
  %arrayidx28 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b27, i64 0, i64 4, !dbg !1069
  store i8* %add.ptr26, i8** %arrayidx28, align 8, !dbg !1071
  %60 = load i8*, i8** %buffer.addr, align 8, !dbg !1072
  %61 = load i32, i32* %height.addr, align 4, !dbg !1073
  %sub29 = sub nsw i32 %61, 1, !dbg !1074
  store i32 -1, i32* %a.addr.i37, align 4, !dbg !1075
  store i32 1, i32* %amin.addr.i38, align 4, !dbg !1075
  store i32 %sub29, i32* %amax.addr.i39, align 4, !dbg !1075
  %62 = load i32, i32* %a.addr.i37, align 4, !dbg !1076
  %63 = load i32, i32* %amin.addr.i38, align 4, !dbg !1077
  %cmp.i40 = icmp slt i32 %62, %63, !dbg !1078
  br i1 %cmp.i40, label %if.then.i41, label %if.else.i43, !dbg !1079

if.then.i41:                                      ; preds = %av_clip_c.exit57
  %64 = load i32, i32* %amin.addr.i38, align 4, !dbg !1080
  store i32 %64, i32* %retval.i36, align 4, !dbg !1081
  br label %av_clip_c.exit46, !dbg !1081

if.else.i43:                                      ; preds = %av_clip_c.exit57
  %65 = load i32, i32* %a.addr.i37, align 4, !dbg !1082
  %66 = load i32, i32* %amax.addr.i39, align 4, !dbg !1083
  %cmp1.i42 = icmp sgt i32 %65, %66, !dbg !1084
  br i1 %cmp1.i42, label %if.then2.i44, label %if.else3.i45, !dbg !1085

if.then2.i44:                                     ; preds = %if.else.i43
  %67 = load i32, i32* %amax.addr.i39, align 4, !dbg !1086
  store i32 %67, i32* %retval.i36, align 4, !dbg !1087
  br label %av_clip_c.exit46, !dbg !1087

if.else3.i45:                                     ; preds = %if.else.i43
  %68 = load i32, i32* %a.addr.i37, align 4, !dbg !1088
  store i32 %68, i32* %retval.i36, align 4, !dbg !1089
  br label %av_clip_c.exit46, !dbg !1089

av_clip_c.exit46:                                 ; preds = %if.then.i41, %if.then2.i44, %if.else3.i45
  %69 = load i32, i32* %retval.i36, align 4, !dbg !1090
  %70 = load i32, i32* %stride.addr, align 4, !dbg !1091
  %mul31 = mul nsw i32 %69, %70, !dbg !1092
  %idx.ext32 = sext i32 %mul31 to i64, !dbg !1093
  %add.ptr33 = getelementptr inbounds i8, i8* %60, i64 %idx.ext32, !dbg !1093
  %71 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !1094
  %b34 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %71, i32 0, i32 0, !dbg !1095
  %arrayidx35 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b34, i64 0, i64 5, !dbg !1094
  store i8* %add.ptr33, i8** %arrayidx35, align 8, !dbg !1096
  %72 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !1097
  %y = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %72, i32 0, i32 1, !dbg !1098
  store i32 -5, i32* %y, align 8, !dbg !1099
  ret void, !dbg !1100
}

; Function Attrs: nounwind uwtable
define internal void @spatial_compose53i_init_8bit(%struct.DWTCompose* %cs, i8* %buffer, i32 %height, i32 %stride) #0 !dbg !1101 {
entry:
  %retval.i8 = alloca i32, align 4
  %x.addr.i9 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i9, metadata !1102, metadata !87), !dbg !1107
  %w.addr.i10 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i10, metadata !1109, metadata !87), !dbg !1110
  %retval.i = alloca i32, align 4
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !1102, metadata !87), !dbg !1111
  %w.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i, metadata !1109, metadata !87), !dbg !1113
  %cs.addr = alloca %struct.DWTCompose*, align 8
  %buffer.addr = alloca i8*, align 8
  %height.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  store %struct.DWTCompose* %cs, %struct.DWTCompose** %cs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTCompose** %cs.addr, metadata !1114, metadata !87), !dbg !1115
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !1116, metadata !87), !dbg !1117
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !1118, metadata !87), !dbg !1119
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !1120, metadata !87), !dbg !1121
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !1122
  %1 = load i32, i32* %height.addr, align 4, !dbg !1123
  %sub = sub nsw i32 %1, 1, !dbg !1124
  store i32 -2, i32* %x.addr.i, align 4, !dbg !1125
  store i32 %sub, i32* %w.addr.i, align 4, !dbg !1125
  %2 = load i32, i32* %w.addr.i, align 4, !dbg !1126
  %tobool.i = icmp ne i32 %2, 0, !dbg !1126
  br i1 %tobool.i, label %if.end.i, label %if.then.i, !dbg !1128

if.then.i:                                        ; preds = %entry
  store i32 0, i32* %retval.i, align 4, !dbg !1129
  br label %avpriv_mirror.exit, !dbg !1129

if.end.i:                                         ; preds = %entry
  br label %while.cond.i, !dbg !1130

while.cond.i:                                     ; preds = %if.end3.i, %if.end.i
  %3 = load i32, i32* %x.addr.i, align 4, !dbg !1131
  %4 = load i32, i32* %w.addr.i, align 4, !dbg !1133
  %cmp.i = icmp ugt i32 %3, %4, !dbg !1134
  br i1 %cmp.i, label %while.body.i, label %while.end.i, !dbg !1135

while.body.i:                                     ; preds = %while.cond.i
  %5 = load i32, i32* %x.addr.i, align 4, !dbg !1136
  %sub.i = sub nsw i32 0, %5, !dbg !1138
  store i32 %sub.i, i32* %x.addr.i, align 4, !dbg !1139
  %6 = load i32, i32* %x.addr.i, align 4, !dbg !1140
  %cmp1.i = icmp slt i32 %6, 0, !dbg !1142
  br i1 %cmp1.i, label %if.then2.i, label %if.end3.i, !dbg !1143

if.then2.i:                                       ; preds = %while.body.i
  %7 = load i32, i32* %w.addr.i, align 4, !dbg !1144
  %mul.i = mul nsw i32 2, %7, !dbg !1145
  %8 = load i32, i32* %x.addr.i, align 4, !dbg !1146
  %add.i = add nsw i32 %8, %mul.i, !dbg !1146
  store i32 %add.i, i32* %x.addr.i, align 4, !dbg !1146
  br label %if.end3.i, !dbg !1147

if.end3.i:                                        ; preds = %if.then2.i, %while.body.i
  br label %while.cond.i, !dbg !1148, !llvm.loop !1150

while.end.i:                                      ; preds = %while.cond.i
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !1152
  store i32 %9, i32* %retval.i, align 4, !dbg !1153
  br label %avpriv_mirror.exit, !dbg !1153

avpriv_mirror.exit:                               ; preds = %if.then.i, %while.end.i
  %10 = load i32, i32* %retval.i, align 4, !dbg !1154
  %11 = load i32, i32* %stride.addr, align 4, !dbg !1155
  %mul = mul nsw i32 %10, %11, !dbg !1156
  %idx.ext = sext i32 %mul to i64, !dbg !1157
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %idx.ext, !dbg !1157
  %12 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !1158
  %b = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %12, i32 0, i32 0, !dbg !1159
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 0, !dbg !1158
  store i8* %add.ptr, i8** %arrayidx, align 8, !dbg !1160
  %13 = load i8*, i8** %buffer.addr, align 8, !dbg !1161
  %14 = load i32, i32* %height.addr, align 4, !dbg !1162
  %sub1 = sub nsw i32 %14, 1, !dbg !1163
  store i32 -1, i32* %x.addr.i9, align 4, !dbg !1164
  store i32 %sub1, i32* %w.addr.i10, align 4, !dbg !1164
  %15 = load i32, i32* %w.addr.i10, align 4, !dbg !1165
  %tobool.i11 = icmp ne i32 %15, 0, !dbg !1165
  br i1 %tobool.i11, label %if.end.i13, label %if.then.i12, !dbg !1166

if.then.i12:                                      ; preds = %avpriv_mirror.exit
  store i32 0, i32* %retval.i8, align 4, !dbg !1167
  br label %avpriv_mirror.exit24, !dbg !1167

if.end.i13:                                       ; preds = %avpriv_mirror.exit
  br label %while.cond.i15, !dbg !1168

while.cond.i15:                                   ; preds = %if.end3.i22, %if.end.i13
  %16 = load i32, i32* %x.addr.i9, align 4, !dbg !1169
  %17 = load i32, i32* %w.addr.i10, align 4, !dbg !1170
  %cmp.i14 = icmp ugt i32 %16, %17, !dbg !1171
  br i1 %cmp.i14, label %while.body.i18, label %while.end.i23, !dbg !1172

while.body.i18:                                   ; preds = %while.cond.i15
  %18 = load i32, i32* %x.addr.i9, align 4, !dbg !1173
  %sub.i16 = sub nsw i32 0, %18, !dbg !1174
  store i32 %sub.i16, i32* %x.addr.i9, align 4, !dbg !1175
  %19 = load i32, i32* %x.addr.i9, align 4, !dbg !1176
  %cmp1.i17 = icmp slt i32 %19, 0, !dbg !1177
  br i1 %cmp1.i17, label %if.then2.i21, label %if.end3.i22, !dbg !1178

if.then2.i21:                                     ; preds = %while.body.i18
  %20 = load i32, i32* %w.addr.i10, align 4, !dbg !1179
  %mul.i19 = mul nsw i32 2, %20, !dbg !1180
  %21 = load i32, i32* %x.addr.i9, align 4, !dbg !1181
  %add.i20 = add nsw i32 %21, %mul.i19, !dbg !1181
  store i32 %add.i20, i32* %x.addr.i9, align 4, !dbg !1181
  br label %if.end3.i22, !dbg !1182

if.end3.i22:                                      ; preds = %if.then2.i21, %while.body.i18
  br label %while.cond.i15, !dbg !1183, !llvm.loop !1150

while.end.i23:                                    ; preds = %while.cond.i15
  %22 = load i32, i32* %x.addr.i9, align 4, !dbg !1184
  store i32 %22, i32* %retval.i8, align 4, !dbg !1185
  br label %avpriv_mirror.exit24, !dbg !1185

avpriv_mirror.exit24:                             ; preds = %if.then.i12, %while.end.i23
  %23 = load i32, i32* %retval.i8, align 4, !dbg !1186
  %24 = load i32, i32* %stride.addr, align 4, !dbg !1187
  %mul3 = mul nsw i32 %23, %24, !dbg !1188
  %idx.ext4 = sext i32 %mul3 to i64, !dbg !1189
  %add.ptr5 = getelementptr inbounds i8, i8* %13, i64 %idx.ext4, !dbg !1189
  %25 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !1190
  %b6 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %25, i32 0, i32 0, !dbg !1191
  %arrayidx7 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b6, i64 0, i64 1, !dbg !1190
  store i8* %add.ptr5, i8** %arrayidx7, align 8, !dbg !1192
  %26 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !1193
  %y = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %26, i32 0, i32 1, !dbg !1194
  store i32 -1, i32* %y, align 8, !dbg !1195
  ret void, !dbg !1196
}

; Function Attrs: nounwind uwtable
define internal void @spatial_compose_dd137i_init_8bit(%struct.DWTCompose* %cs, i8* %buffer, i32 %height, i32 %stride) #0 !dbg !1197 {
entry:
  %retval.i116 = alloca i32, align 4
  %a.addr.i117 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i117, metadata !904, metadata !87), !dbg !1198
  %amin.addr.i118 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i118, metadata !911, metadata !87), !dbg !1200
  %amax.addr.i119 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i119, metadata !913, metadata !87), !dbg !1201
  %retval.i105 = alloca i32, align 4
  %a.addr.i106 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i106, metadata !904, metadata !87), !dbg !1202
  %amin.addr.i107 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i107, metadata !911, metadata !87), !dbg !1204
  %amax.addr.i108 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i108, metadata !913, metadata !87), !dbg !1205
  %retval.i94 = alloca i32, align 4
  %a.addr.i95 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i95, metadata !904, metadata !87), !dbg !1206
  %amin.addr.i96 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i96, metadata !911, metadata !87), !dbg !1208
  %amax.addr.i97 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i97, metadata !913, metadata !87), !dbg !1209
  %retval.i83 = alloca i32, align 4
  %a.addr.i84 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i84, metadata !904, metadata !87), !dbg !1210
  %amin.addr.i85 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i85, metadata !911, metadata !87), !dbg !1212
  %amax.addr.i86 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i86, metadata !913, metadata !87), !dbg !1213
  %retval.i72 = alloca i32, align 4
  %a.addr.i73 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i73, metadata !904, metadata !87), !dbg !1214
  %amin.addr.i74 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i74, metadata !911, metadata !87), !dbg !1216
  %amax.addr.i75 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i75, metadata !913, metadata !87), !dbg !1217
  %retval.i61 = alloca i32, align 4
  %a.addr.i62 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i62, metadata !904, metadata !87), !dbg !1218
  %amin.addr.i63 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i63, metadata !911, metadata !87), !dbg !1220
  %amax.addr.i64 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i64, metadata !913, metadata !87), !dbg !1221
  %retval.i50 = alloca i32, align 4
  %a.addr.i51 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i51, metadata !904, metadata !87), !dbg !1222
  %amin.addr.i52 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i52, metadata !911, metadata !87), !dbg !1224
  %amax.addr.i53 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i53, metadata !913, metadata !87), !dbg !1225
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !904, metadata !87), !dbg !1226
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !911, metadata !87), !dbg !1228
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !913, metadata !87), !dbg !1229
  %cs.addr = alloca %struct.DWTCompose*, align 8
  %buffer.addr = alloca i8*, align 8
  %height.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  store %struct.DWTCompose* %cs, %struct.DWTCompose** %cs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTCompose** %cs.addr, metadata !1230, metadata !87), !dbg !1231
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !1232, metadata !87), !dbg !1233
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !1234, metadata !87), !dbg !1235
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !1236, metadata !87), !dbg !1237
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !1238
  %1 = load i32, i32* %height.addr, align 4, !dbg !1239
  %sub = sub nsw i32 %1, 2, !dbg !1240
  store i32 -6, i32* %a.addr.i, align 4, !dbg !1241
  store i32 0, i32* %amin.addr.i, align 4, !dbg !1241
  store i32 %sub, i32* %amax.addr.i, align 4, !dbg !1241
  %2 = load i32, i32* %a.addr.i, align 4, !dbg !1242
  %3 = load i32, i32* %amin.addr.i, align 4, !dbg !1243
  %cmp.i = icmp slt i32 %2, %3, !dbg !1244
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !1245

if.then.i:                                        ; preds = %entry
  %4 = load i32, i32* %amin.addr.i, align 4, !dbg !1246
  store i32 %4, i32* %retval.i, align 4, !dbg !1247
  br label %av_clip_c.exit, !dbg !1247

if.else.i:                                        ; preds = %entry
  %5 = load i32, i32* %a.addr.i, align 4, !dbg !1248
  %6 = load i32, i32* %amax.addr.i, align 4, !dbg !1249
  %cmp1.i = icmp sgt i32 %5, %6, !dbg !1250
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !1251

if.then2.i:                                       ; preds = %if.else.i
  %7 = load i32, i32* %amax.addr.i, align 4, !dbg !1252
  store i32 %7, i32* %retval.i, align 4, !dbg !1253
  br label %av_clip_c.exit, !dbg !1253

if.else3.i:                                       ; preds = %if.else.i
  %8 = load i32, i32* %a.addr.i, align 4, !dbg !1254
  store i32 %8, i32* %retval.i, align 4, !dbg !1255
  br label %av_clip_c.exit, !dbg !1255

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %9 = load i32, i32* %retval.i, align 4, !dbg !1256
  %10 = load i32, i32* %stride.addr, align 4, !dbg !1257
  %mul = mul nsw i32 %9, %10, !dbg !1258
  %idx.ext = sext i32 %mul to i64, !dbg !1259
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %idx.ext, !dbg !1259
  %11 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !1260
  %b = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %11, i32 0, i32 0, !dbg !1261
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 0, !dbg !1260
  store i8* %add.ptr, i8** %arrayidx, align 8, !dbg !1262
  %12 = load i8*, i8** %buffer.addr, align 8, !dbg !1263
  %13 = load i32, i32* %height.addr, align 4, !dbg !1264
  %sub1 = sub nsw i32 %13, 1, !dbg !1265
  store i32 -5, i32* %a.addr.i117, align 4, !dbg !1266
  store i32 1, i32* %amin.addr.i118, align 4, !dbg !1266
  store i32 %sub1, i32* %amax.addr.i119, align 4, !dbg !1266
  %14 = load i32, i32* %a.addr.i117, align 4, !dbg !1267
  %15 = load i32, i32* %amin.addr.i118, align 4, !dbg !1268
  %cmp.i120 = icmp slt i32 %14, %15, !dbg !1269
  br i1 %cmp.i120, label %if.then.i121, label %if.else.i123, !dbg !1270

if.then.i121:                                     ; preds = %av_clip_c.exit
  %16 = load i32, i32* %amin.addr.i118, align 4, !dbg !1271
  store i32 %16, i32* %retval.i116, align 4, !dbg !1272
  br label %av_clip_c.exit126, !dbg !1272

if.else.i123:                                     ; preds = %av_clip_c.exit
  %17 = load i32, i32* %a.addr.i117, align 4, !dbg !1273
  %18 = load i32, i32* %amax.addr.i119, align 4, !dbg !1274
  %cmp1.i122 = icmp sgt i32 %17, %18, !dbg !1275
  br i1 %cmp1.i122, label %if.then2.i124, label %if.else3.i125, !dbg !1276

if.then2.i124:                                    ; preds = %if.else.i123
  %19 = load i32, i32* %amax.addr.i119, align 4, !dbg !1277
  store i32 %19, i32* %retval.i116, align 4, !dbg !1278
  br label %av_clip_c.exit126, !dbg !1278

if.else3.i125:                                    ; preds = %if.else.i123
  %20 = load i32, i32* %a.addr.i117, align 4, !dbg !1279
  store i32 %20, i32* %retval.i116, align 4, !dbg !1280
  br label %av_clip_c.exit126, !dbg !1280

av_clip_c.exit126:                                ; preds = %if.then.i121, %if.then2.i124, %if.else3.i125
  %21 = load i32, i32* %retval.i116, align 4, !dbg !1281
  %22 = load i32, i32* %stride.addr, align 4, !dbg !1282
  %mul3 = mul nsw i32 %21, %22, !dbg !1283
  %idx.ext4 = sext i32 %mul3 to i64, !dbg !1284
  %add.ptr5 = getelementptr inbounds i8, i8* %12, i64 %idx.ext4, !dbg !1284
  %23 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !1285
  %b6 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %23, i32 0, i32 0, !dbg !1286
  %arrayidx7 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b6, i64 0, i64 1, !dbg !1285
  store i8* %add.ptr5, i8** %arrayidx7, align 8, !dbg !1287
  %24 = load i8*, i8** %buffer.addr, align 8, !dbg !1288
  %25 = load i32, i32* %height.addr, align 4, !dbg !1289
  %sub8 = sub nsw i32 %25, 2, !dbg !1290
  store i32 -4, i32* %a.addr.i106, align 4, !dbg !1291
  store i32 0, i32* %amin.addr.i107, align 4, !dbg !1291
  store i32 %sub8, i32* %amax.addr.i108, align 4, !dbg !1291
  %26 = load i32, i32* %a.addr.i106, align 4, !dbg !1292
  %27 = load i32, i32* %amin.addr.i107, align 4, !dbg !1293
  %cmp.i109 = icmp slt i32 %26, %27, !dbg !1294
  br i1 %cmp.i109, label %if.then.i110, label %if.else.i112, !dbg !1295

if.then.i110:                                     ; preds = %av_clip_c.exit126
  %28 = load i32, i32* %amin.addr.i107, align 4, !dbg !1296
  store i32 %28, i32* %retval.i105, align 4, !dbg !1297
  br label %av_clip_c.exit115, !dbg !1297

if.else.i112:                                     ; preds = %av_clip_c.exit126
  %29 = load i32, i32* %a.addr.i106, align 4, !dbg !1298
  %30 = load i32, i32* %amax.addr.i108, align 4, !dbg !1299
  %cmp1.i111 = icmp sgt i32 %29, %30, !dbg !1300
  br i1 %cmp1.i111, label %if.then2.i113, label %if.else3.i114, !dbg !1301

if.then2.i113:                                    ; preds = %if.else.i112
  %31 = load i32, i32* %amax.addr.i108, align 4, !dbg !1302
  store i32 %31, i32* %retval.i105, align 4, !dbg !1303
  br label %av_clip_c.exit115, !dbg !1303

if.else3.i114:                                    ; preds = %if.else.i112
  %32 = load i32, i32* %a.addr.i106, align 4, !dbg !1304
  store i32 %32, i32* %retval.i105, align 4, !dbg !1305
  br label %av_clip_c.exit115, !dbg !1305

av_clip_c.exit115:                                ; preds = %if.then.i110, %if.then2.i113, %if.else3.i114
  %33 = load i32, i32* %retval.i105, align 4, !dbg !1306
  %34 = load i32, i32* %stride.addr, align 4, !dbg !1307
  %mul10 = mul nsw i32 %33, %34, !dbg !1308
  %idx.ext11 = sext i32 %mul10 to i64, !dbg !1309
  %add.ptr12 = getelementptr inbounds i8, i8* %24, i64 %idx.ext11, !dbg !1309
  %35 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !1310
  %b13 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %35, i32 0, i32 0, !dbg !1311
  %arrayidx14 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b13, i64 0, i64 2, !dbg !1310
  store i8* %add.ptr12, i8** %arrayidx14, align 8, !dbg !1312
  %36 = load i8*, i8** %buffer.addr, align 8, !dbg !1313
  %37 = load i32, i32* %height.addr, align 4, !dbg !1314
  %sub15 = sub nsw i32 %37, 1, !dbg !1315
  store i32 -3, i32* %a.addr.i95, align 4, !dbg !1316
  store i32 1, i32* %amin.addr.i96, align 4, !dbg !1316
  store i32 %sub15, i32* %amax.addr.i97, align 4, !dbg !1316
  %38 = load i32, i32* %a.addr.i95, align 4, !dbg !1317
  %39 = load i32, i32* %amin.addr.i96, align 4, !dbg !1318
  %cmp.i98 = icmp slt i32 %38, %39, !dbg !1319
  br i1 %cmp.i98, label %if.then.i99, label %if.else.i101, !dbg !1320

if.then.i99:                                      ; preds = %av_clip_c.exit115
  %40 = load i32, i32* %amin.addr.i96, align 4, !dbg !1321
  store i32 %40, i32* %retval.i94, align 4, !dbg !1322
  br label %av_clip_c.exit104, !dbg !1322

if.else.i101:                                     ; preds = %av_clip_c.exit115
  %41 = load i32, i32* %a.addr.i95, align 4, !dbg !1323
  %42 = load i32, i32* %amax.addr.i97, align 4, !dbg !1324
  %cmp1.i100 = icmp sgt i32 %41, %42, !dbg !1325
  br i1 %cmp1.i100, label %if.then2.i102, label %if.else3.i103, !dbg !1326

if.then2.i102:                                    ; preds = %if.else.i101
  %43 = load i32, i32* %amax.addr.i97, align 4, !dbg !1327
  store i32 %43, i32* %retval.i94, align 4, !dbg !1328
  br label %av_clip_c.exit104, !dbg !1328

if.else3.i103:                                    ; preds = %if.else.i101
  %44 = load i32, i32* %a.addr.i95, align 4, !dbg !1329
  store i32 %44, i32* %retval.i94, align 4, !dbg !1330
  br label %av_clip_c.exit104, !dbg !1330

av_clip_c.exit104:                                ; preds = %if.then.i99, %if.then2.i102, %if.else3.i103
  %45 = load i32, i32* %retval.i94, align 4, !dbg !1331
  %46 = load i32, i32* %stride.addr, align 4, !dbg !1332
  %mul17 = mul nsw i32 %45, %46, !dbg !1333
  %idx.ext18 = sext i32 %mul17 to i64, !dbg !1334
  %add.ptr19 = getelementptr inbounds i8, i8* %36, i64 %idx.ext18, !dbg !1334
  %47 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !1335
  %b20 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %47, i32 0, i32 0, !dbg !1336
  %arrayidx21 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b20, i64 0, i64 3, !dbg !1335
  store i8* %add.ptr19, i8** %arrayidx21, align 8, !dbg !1337
  %48 = load i8*, i8** %buffer.addr, align 8, !dbg !1338
  %49 = load i32, i32* %height.addr, align 4, !dbg !1339
  %sub22 = sub nsw i32 %49, 2, !dbg !1340
  store i32 -2, i32* %a.addr.i84, align 4, !dbg !1341
  store i32 0, i32* %amin.addr.i85, align 4, !dbg !1341
  store i32 %sub22, i32* %amax.addr.i86, align 4, !dbg !1341
  %50 = load i32, i32* %a.addr.i84, align 4, !dbg !1342
  %51 = load i32, i32* %amin.addr.i85, align 4, !dbg !1343
  %cmp.i87 = icmp slt i32 %50, %51, !dbg !1344
  br i1 %cmp.i87, label %if.then.i88, label %if.else.i90, !dbg !1345

if.then.i88:                                      ; preds = %av_clip_c.exit104
  %52 = load i32, i32* %amin.addr.i85, align 4, !dbg !1346
  store i32 %52, i32* %retval.i83, align 4, !dbg !1347
  br label %av_clip_c.exit93, !dbg !1347

if.else.i90:                                      ; preds = %av_clip_c.exit104
  %53 = load i32, i32* %a.addr.i84, align 4, !dbg !1348
  %54 = load i32, i32* %amax.addr.i86, align 4, !dbg !1349
  %cmp1.i89 = icmp sgt i32 %53, %54, !dbg !1350
  br i1 %cmp1.i89, label %if.then2.i91, label %if.else3.i92, !dbg !1351

if.then2.i91:                                     ; preds = %if.else.i90
  %55 = load i32, i32* %amax.addr.i86, align 4, !dbg !1352
  store i32 %55, i32* %retval.i83, align 4, !dbg !1353
  br label %av_clip_c.exit93, !dbg !1353

if.else3.i92:                                     ; preds = %if.else.i90
  %56 = load i32, i32* %a.addr.i84, align 4, !dbg !1354
  store i32 %56, i32* %retval.i83, align 4, !dbg !1355
  br label %av_clip_c.exit93, !dbg !1355

av_clip_c.exit93:                                 ; preds = %if.then.i88, %if.then2.i91, %if.else3.i92
  %57 = load i32, i32* %retval.i83, align 4, !dbg !1356
  %58 = load i32, i32* %stride.addr, align 4, !dbg !1357
  %mul24 = mul nsw i32 %57, %58, !dbg !1358
  %idx.ext25 = sext i32 %mul24 to i64, !dbg !1359
  %add.ptr26 = getelementptr inbounds i8, i8* %48, i64 %idx.ext25, !dbg !1359
  %59 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !1360
  %b27 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %59, i32 0, i32 0, !dbg !1361
  %arrayidx28 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b27, i64 0, i64 4, !dbg !1360
  store i8* %add.ptr26, i8** %arrayidx28, align 8, !dbg !1362
  %60 = load i8*, i8** %buffer.addr, align 8, !dbg !1363
  %61 = load i32, i32* %height.addr, align 4, !dbg !1364
  %sub29 = sub nsw i32 %61, 1, !dbg !1365
  store i32 -1, i32* %a.addr.i73, align 4, !dbg !1366
  store i32 1, i32* %amin.addr.i74, align 4, !dbg !1366
  store i32 %sub29, i32* %amax.addr.i75, align 4, !dbg !1366
  %62 = load i32, i32* %a.addr.i73, align 4, !dbg !1367
  %63 = load i32, i32* %amin.addr.i74, align 4, !dbg !1368
  %cmp.i76 = icmp slt i32 %62, %63, !dbg !1369
  br i1 %cmp.i76, label %if.then.i77, label %if.else.i79, !dbg !1370

if.then.i77:                                      ; preds = %av_clip_c.exit93
  %64 = load i32, i32* %amin.addr.i74, align 4, !dbg !1371
  store i32 %64, i32* %retval.i72, align 4, !dbg !1372
  br label %av_clip_c.exit82, !dbg !1372

if.else.i79:                                      ; preds = %av_clip_c.exit93
  %65 = load i32, i32* %a.addr.i73, align 4, !dbg !1373
  %66 = load i32, i32* %amax.addr.i75, align 4, !dbg !1374
  %cmp1.i78 = icmp sgt i32 %65, %66, !dbg !1375
  br i1 %cmp1.i78, label %if.then2.i80, label %if.else3.i81, !dbg !1376

if.then2.i80:                                     ; preds = %if.else.i79
  %67 = load i32, i32* %amax.addr.i75, align 4, !dbg !1377
  store i32 %67, i32* %retval.i72, align 4, !dbg !1378
  br label %av_clip_c.exit82, !dbg !1378

if.else3.i81:                                     ; preds = %if.else.i79
  %68 = load i32, i32* %a.addr.i73, align 4, !dbg !1379
  store i32 %68, i32* %retval.i72, align 4, !dbg !1380
  br label %av_clip_c.exit82, !dbg !1380

av_clip_c.exit82:                                 ; preds = %if.then.i77, %if.then2.i80, %if.else3.i81
  %69 = load i32, i32* %retval.i72, align 4, !dbg !1381
  %70 = load i32, i32* %stride.addr, align 4, !dbg !1382
  %mul31 = mul nsw i32 %69, %70, !dbg !1383
  %idx.ext32 = sext i32 %mul31 to i64, !dbg !1384
  %add.ptr33 = getelementptr inbounds i8, i8* %60, i64 %idx.ext32, !dbg !1384
  %71 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !1385
  %b34 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %71, i32 0, i32 0, !dbg !1386
  %arrayidx35 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b34, i64 0, i64 5, !dbg !1385
  store i8* %add.ptr33, i8** %arrayidx35, align 8, !dbg !1387
  %72 = load i8*, i8** %buffer.addr, align 8, !dbg !1388
  %73 = load i32, i32* %height.addr, align 4, !dbg !1389
  %sub36 = sub nsw i32 %73, 2, !dbg !1390
  store i32 0, i32* %a.addr.i62, align 4, !dbg !1391
  store i32 0, i32* %amin.addr.i63, align 4, !dbg !1391
  store i32 %sub36, i32* %amax.addr.i64, align 4, !dbg !1391
  %74 = load i32, i32* %a.addr.i62, align 4, !dbg !1392
  %75 = load i32, i32* %amin.addr.i63, align 4, !dbg !1393
  %cmp.i65 = icmp slt i32 %74, %75, !dbg !1394
  br i1 %cmp.i65, label %if.then.i66, label %if.else.i68, !dbg !1395

if.then.i66:                                      ; preds = %av_clip_c.exit82
  %76 = load i32, i32* %amin.addr.i63, align 4, !dbg !1396
  store i32 %76, i32* %retval.i61, align 4, !dbg !1397
  br label %av_clip_c.exit71, !dbg !1397

if.else.i68:                                      ; preds = %av_clip_c.exit82
  %77 = load i32, i32* %a.addr.i62, align 4, !dbg !1398
  %78 = load i32, i32* %amax.addr.i64, align 4, !dbg !1399
  %cmp1.i67 = icmp sgt i32 %77, %78, !dbg !1400
  br i1 %cmp1.i67, label %if.then2.i69, label %if.else3.i70, !dbg !1401

if.then2.i69:                                     ; preds = %if.else.i68
  %79 = load i32, i32* %amax.addr.i64, align 4, !dbg !1402
  store i32 %79, i32* %retval.i61, align 4, !dbg !1403
  br label %av_clip_c.exit71, !dbg !1403

if.else3.i70:                                     ; preds = %if.else.i68
  %80 = load i32, i32* %a.addr.i62, align 4, !dbg !1404
  store i32 %80, i32* %retval.i61, align 4, !dbg !1405
  br label %av_clip_c.exit71, !dbg !1405

av_clip_c.exit71:                                 ; preds = %if.then.i66, %if.then2.i69, %if.else3.i70
  %81 = load i32, i32* %retval.i61, align 4, !dbg !1406
  %82 = load i32, i32* %stride.addr, align 4, !dbg !1407
  %mul38 = mul nsw i32 %81, %82, !dbg !1408
  %idx.ext39 = sext i32 %mul38 to i64, !dbg !1409
  %add.ptr40 = getelementptr inbounds i8, i8* %72, i64 %idx.ext39, !dbg !1409
  %83 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !1410
  %b41 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %83, i32 0, i32 0, !dbg !1411
  %arrayidx42 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b41, i64 0, i64 6, !dbg !1410
  store i8* %add.ptr40, i8** %arrayidx42, align 8, !dbg !1412
  %84 = load i8*, i8** %buffer.addr, align 8, !dbg !1413
  %85 = load i32, i32* %height.addr, align 4, !dbg !1414
  %sub43 = sub nsw i32 %85, 1, !dbg !1415
  store i32 1, i32* %a.addr.i51, align 4, !dbg !1416
  store i32 1, i32* %amin.addr.i52, align 4, !dbg !1416
  store i32 %sub43, i32* %amax.addr.i53, align 4, !dbg !1416
  %86 = load i32, i32* %a.addr.i51, align 4, !dbg !1417
  %87 = load i32, i32* %amin.addr.i52, align 4, !dbg !1418
  %cmp.i54 = icmp slt i32 %86, %87, !dbg !1419
  br i1 %cmp.i54, label %if.then.i55, label %if.else.i57, !dbg !1420

if.then.i55:                                      ; preds = %av_clip_c.exit71
  %88 = load i32, i32* %amin.addr.i52, align 4, !dbg !1421
  store i32 %88, i32* %retval.i50, align 4, !dbg !1422
  br label %av_clip_c.exit60, !dbg !1422

if.else.i57:                                      ; preds = %av_clip_c.exit71
  %89 = load i32, i32* %a.addr.i51, align 4, !dbg !1423
  %90 = load i32, i32* %amax.addr.i53, align 4, !dbg !1424
  %cmp1.i56 = icmp sgt i32 %89, %90, !dbg !1425
  br i1 %cmp1.i56, label %if.then2.i58, label %if.else3.i59, !dbg !1426

if.then2.i58:                                     ; preds = %if.else.i57
  %91 = load i32, i32* %amax.addr.i53, align 4, !dbg !1427
  store i32 %91, i32* %retval.i50, align 4, !dbg !1428
  br label %av_clip_c.exit60, !dbg !1428

if.else3.i59:                                     ; preds = %if.else.i57
  %92 = load i32, i32* %a.addr.i51, align 4, !dbg !1429
  store i32 %92, i32* %retval.i50, align 4, !dbg !1430
  br label %av_clip_c.exit60, !dbg !1430

av_clip_c.exit60:                                 ; preds = %if.then.i55, %if.then2.i58, %if.else3.i59
  %93 = load i32, i32* %retval.i50, align 4, !dbg !1431
  %94 = load i32, i32* %stride.addr, align 4, !dbg !1432
  %mul45 = mul nsw i32 %93, %94, !dbg !1433
  %idx.ext46 = sext i32 %mul45 to i64, !dbg !1434
  %add.ptr47 = getelementptr inbounds i8, i8* %84, i64 %idx.ext46, !dbg !1434
  %95 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !1435
  %b48 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %95, i32 0, i32 0, !dbg !1436
  %arrayidx49 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b48, i64 0, i64 7, !dbg !1435
  store i8* %add.ptr47, i8** %arrayidx49, align 8, !dbg !1437
  %96 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !1438
  %y = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %96, i32 0, i32 1, !dbg !1439
  store i32 -5, i32* %y, align 8, !dbg !1440
  ret void, !dbg !1441
}

; Function Attrs: nounwind uwtable
define internal void @spatial_compose97i_init_8bit(%struct.DWTCompose* %cs, i8* %buffer, i32 %height, i32 %stride) #0 !dbg !1442 {
entry:
  %retval.i56 = alloca i32, align 4
  %x.addr.i57 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i57, metadata !1102, metadata !87), !dbg !1443
  %w.addr.i58 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i58, metadata !1109, metadata !87), !dbg !1445
  %retval.i39 = alloca i32, align 4
  %x.addr.i40 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i40, metadata !1102, metadata !87), !dbg !1446
  %w.addr.i41 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i41, metadata !1109, metadata !87), !dbg !1448
  %retval.i22 = alloca i32, align 4
  %x.addr.i23 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i23, metadata !1102, metadata !87), !dbg !1449
  %w.addr.i24 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i24, metadata !1109, metadata !87), !dbg !1451
  %retval.i = alloca i32, align 4
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !1102, metadata !87), !dbg !1452
  %w.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i, metadata !1109, metadata !87), !dbg !1454
  %cs.addr = alloca %struct.DWTCompose*, align 8
  %buffer.addr = alloca i8*, align 8
  %height.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  store %struct.DWTCompose* %cs, %struct.DWTCompose** %cs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTCompose** %cs.addr, metadata !1455, metadata !87), !dbg !1456
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !1457, metadata !87), !dbg !1458
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !1459, metadata !87), !dbg !1460
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !1461, metadata !87), !dbg !1462
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !1463
  %1 = load i32, i32* %height.addr, align 4, !dbg !1464
  %sub = sub nsw i32 %1, 1, !dbg !1465
  store i32 -4, i32* %x.addr.i, align 4, !dbg !1466
  store i32 %sub, i32* %w.addr.i, align 4, !dbg !1466
  %2 = load i32, i32* %w.addr.i, align 4, !dbg !1467
  %tobool.i = icmp ne i32 %2, 0, !dbg !1467
  br i1 %tobool.i, label %if.end.i, label %if.then.i, !dbg !1468

if.then.i:                                        ; preds = %entry
  store i32 0, i32* %retval.i, align 4, !dbg !1469
  br label %avpriv_mirror.exit, !dbg !1469

if.end.i:                                         ; preds = %entry
  br label %while.cond.i, !dbg !1470

while.cond.i:                                     ; preds = %if.end3.i, %if.end.i
  %3 = load i32, i32* %x.addr.i, align 4, !dbg !1471
  %4 = load i32, i32* %w.addr.i, align 4, !dbg !1472
  %cmp.i = icmp ugt i32 %3, %4, !dbg !1473
  br i1 %cmp.i, label %while.body.i, label %while.end.i, !dbg !1474

while.body.i:                                     ; preds = %while.cond.i
  %5 = load i32, i32* %x.addr.i, align 4, !dbg !1475
  %sub.i = sub nsw i32 0, %5, !dbg !1476
  store i32 %sub.i, i32* %x.addr.i, align 4, !dbg !1477
  %6 = load i32, i32* %x.addr.i, align 4, !dbg !1478
  %cmp1.i = icmp slt i32 %6, 0, !dbg !1479
  br i1 %cmp1.i, label %if.then2.i, label %if.end3.i, !dbg !1480

if.then2.i:                                       ; preds = %while.body.i
  %7 = load i32, i32* %w.addr.i, align 4, !dbg !1481
  %mul.i = mul nsw i32 2, %7, !dbg !1482
  %8 = load i32, i32* %x.addr.i, align 4, !dbg !1483
  %add.i = add nsw i32 %8, %mul.i, !dbg !1483
  store i32 %add.i, i32* %x.addr.i, align 4, !dbg !1483
  br label %if.end3.i, !dbg !1484

if.end3.i:                                        ; preds = %if.then2.i, %while.body.i
  br label %while.cond.i, !dbg !1485, !llvm.loop !1150

while.end.i:                                      ; preds = %while.cond.i
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !1486
  store i32 %9, i32* %retval.i, align 4, !dbg !1487
  br label %avpriv_mirror.exit, !dbg !1487

avpriv_mirror.exit:                               ; preds = %if.then.i, %while.end.i
  %10 = load i32, i32* %retval.i, align 4, !dbg !1488
  %11 = load i32, i32* %stride.addr, align 4, !dbg !1489
  %mul = mul nsw i32 %10, %11, !dbg !1490
  %idx.ext = sext i32 %mul to i64, !dbg !1491
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %idx.ext, !dbg !1491
  %12 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !1492
  %b = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %12, i32 0, i32 0, !dbg !1493
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 0, !dbg !1492
  store i8* %add.ptr, i8** %arrayidx, align 8, !dbg !1494
  %13 = load i8*, i8** %buffer.addr, align 8, !dbg !1495
  %14 = load i32, i32* %height.addr, align 4, !dbg !1496
  %sub1 = sub nsw i32 %14, 1, !dbg !1497
  store i32 -3, i32* %x.addr.i57, align 4, !dbg !1498
  store i32 %sub1, i32* %w.addr.i58, align 4, !dbg !1498
  %15 = load i32, i32* %w.addr.i58, align 4, !dbg !1499
  %tobool.i59 = icmp ne i32 %15, 0, !dbg !1499
  br i1 %tobool.i59, label %if.end.i61, label %if.then.i60, !dbg !1500

if.then.i60:                                      ; preds = %avpriv_mirror.exit
  store i32 0, i32* %retval.i56, align 4, !dbg !1501
  br label %avpriv_mirror.exit72, !dbg !1501

if.end.i61:                                       ; preds = %avpriv_mirror.exit
  br label %while.cond.i63, !dbg !1502

while.cond.i63:                                   ; preds = %if.end3.i70, %if.end.i61
  %16 = load i32, i32* %x.addr.i57, align 4, !dbg !1503
  %17 = load i32, i32* %w.addr.i58, align 4, !dbg !1504
  %cmp.i62 = icmp ugt i32 %16, %17, !dbg !1505
  br i1 %cmp.i62, label %while.body.i66, label %while.end.i71, !dbg !1506

while.body.i66:                                   ; preds = %while.cond.i63
  %18 = load i32, i32* %x.addr.i57, align 4, !dbg !1507
  %sub.i64 = sub nsw i32 0, %18, !dbg !1508
  store i32 %sub.i64, i32* %x.addr.i57, align 4, !dbg !1509
  %19 = load i32, i32* %x.addr.i57, align 4, !dbg !1510
  %cmp1.i65 = icmp slt i32 %19, 0, !dbg !1511
  br i1 %cmp1.i65, label %if.then2.i69, label %if.end3.i70, !dbg !1512

if.then2.i69:                                     ; preds = %while.body.i66
  %20 = load i32, i32* %w.addr.i58, align 4, !dbg !1513
  %mul.i67 = mul nsw i32 2, %20, !dbg !1514
  %21 = load i32, i32* %x.addr.i57, align 4, !dbg !1515
  %add.i68 = add nsw i32 %21, %mul.i67, !dbg !1515
  store i32 %add.i68, i32* %x.addr.i57, align 4, !dbg !1515
  br label %if.end3.i70, !dbg !1516

if.end3.i70:                                      ; preds = %if.then2.i69, %while.body.i66
  br label %while.cond.i63, !dbg !1517, !llvm.loop !1150

while.end.i71:                                    ; preds = %while.cond.i63
  %22 = load i32, i32* %x.addr.i57, align 4, !dbg !1518
  store i32 %22, i32* %retval.i56, align 4, !dbg !1519
  br label %avpriv_mirror.exit72, !dbg !1519

avpriv_mirror.exit72:                             ; preds = %if.then.i60, %while.end.i71
  %23 = load i32, i32* %retval.i56, align 4, !dbg !1520
  %24 = load i32, i32* %stride.addr, align 4, !dbg !1521
  %mul3 = mul nsw i32 %23, %24, !dbg !1522
  %idx.ext4 = sext i32 %mul3 to i64, !dbg !1523
  %add.ptr5 = getelementptr inbounds i8, i8* %13, i64 %idx.ext4, !dbg !1523
  %25 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !1524
  %b6 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %25, i32 0, i32 0, !dbg !1525
  %arrayidx7 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b6, i64 0, i64 1, !dbg !1524
  store i8* %add.ptr5, i8** %arrayidx7, align 8, !dbg !1526
  %26 = load i8*, i8** %buffer.addr, align 8, !dbg !1527
  %27 = load i32, i32* %height.addr, align 4, !dbg !1528
  %sub8 = sub nsw i32 %27, 1, !dbg !1529
  store i32 -2, i32* %x.addr.i40, align 4, !dbg !1530
  store i32 %sub8, i32* %w.addr.i41, align 4, !dbg !1530
  %28 = load i32, i32* %w.addr.i41, align 4, !dbg !1531
  %tobool.i42 = icmp ne i32 %28, 0, !dbg !1531
  br i1 %tobool.i42, label %if.end.i44, label %if.then.i43, !dbg !1532

if.then.i43:                                      ; preds = %avpriv_mirror.exit72
  store i32 0, i32* %retval.i39, align 4, !dbg !1533
  br label %avpriv_mirror.exit55, !dbg !1533

if.end.i44:                                       ; preds = %avpriv_mirror.exit72
  br label %while.cond.i46, !dbg !1534

while.cond.i46:                                   ; preds = %if.end3.i53, %if.end.i44
  %29 = load i32, i32* %x.addr.i40, align 4, !dbg !1535
  %30 = load i32, i32* %w.addr.i41, align 4, !dbg !1536
  %cmp.i45 = icmp ugt i32 %29, %30, !dbg !1537
  br i1 %cmp.i45, label %while.body.i49, label %while.end.i54, !dbg !1538

while.body.i49:                                   ; preds = %while.cond.i46
  %31 = load i32, i32* %x.addr.i40, align 4, !dbg !1539
  %sub.i47 = sub nsw i32 0, %31, !dbg !1540
  store i32 %sub.i47, i32* %x.addr.i40, align 4, !dbg !1541
  %32 = load i32, i32* %x.addr.i40, align 4, !dbg !1542
  %cmp1.i48 = icmp slt i32 %32, 0, !dbg !1543
  br i1 %cmp1.i48, label %if.then2.i52, label %if.end3.i53, !dbg !1544

if.then2.i52:                                     ; preds = %while.body.i49
  %33 = load i32, i32* %w.addr.i41, align 4, !dbg !1545
  %mul.i50 = mul nsw i32 2, %33, !dbg !1546
  %34 = load i32, i32* %x.addr.i40, align 4, !dbg !1547
  %add.i51 = add nsw i32 %34, %mul.i50, !dbg !1547
  store i32 %add.i51, i32* %x.addr.i40, align 4, !dbg !1547
  br label %if.end3.i53, !dbg !1548

if.end3.i53:                                      ; preds = %if.then2.i52, %while.body.i49
  br label %while.cond.i46, !dbg !1549, !llvm.loop !1150

while.end.i54:                                    ; preds = %while.cond.i46
  %35 = load i32, i32* %x.addr.i40, align 4, !dbg !1550
  store i32 %35, i32* %retval.i39, align 4, !dbg !1551
  br label %avpriv_mirror.exit55, !dbg !1551

avpriv_mirror.exit55:                             ; preds = %if.then.i43, %while.end.i54
  %36 = load i32, i32* %retval.i39, align 4, !dbg !1552
  %37 = load i32, i32* %stride.addr, align 4, !dbg !1553
  %mul10 = mul nsw i32 %36, %37, !dbg !1554
  %idx.ext11 = sext i32 %mul10 to i64, !dbg !1555
  %add.ptr12 = getelementptr inbounds i8, i8* %26, i64 %idx.ext11, !dbg !1555
  %38 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !1556
  %b13 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %38, i32 0, i32 0, !dbg !1557
  %arrayidx14 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b13, i64 0, i64 2, !dbg !1556
  store i8* %add.ptr12, i8** %arrayidx14, align 8, !dbg !1558
  %39 = load i8*, i8** %buffer.addr, align 8, !dbg !1559
  %40 = load i32, i32* %height.addr, align 4, !dbg !1560
  %sub15 = sub nsw i32 %40, 1, !dbg !1561
  store i32 -1, i32* %x.addr.i23, align 4, !dbg !1562
  store i32 %sub15, i32* %w.addr.i24, align 4, !dbg !1562
  %41 = load i32, i32* %w.addr.i24, align 4, !dbg !1563
  %tobool.i25 = icmp ne i32 %41, 0, !dbg !1563
  br i1 %tobool.i25, label %if.end.i27, label %if.then.i26, !dbg !1564

if.then.i26:                                      ; preds = %avpriv_mirror.exit55
  store i32 0, i32* %retval.i22, align 4, !dbg !1565
  br label %avpriv_mirror.exit38, !dbg !1565

if.end.i27:                                       ; preds = %avpriv_mirror.exit55
  br label %while.cond.i29, !dbg !1566

while.cond.i29:                                   ; preds = %if.end3.i36, %if.end.i27
  %42 = load i32, i32* %x.addr.i23, align 4, !dbg !1567
  %43 = load i32, i32* %w.addr.i24, align 4, !dbg !1568
  %cmp.i28 = icmp ugt i32 %42, %43, !dbg !1569
  br i1 %cmp.i28, label %while.body.i32, label %while.end.i37, !dbg !1570

while.body.i32:                                   ; preds = %while.cond.i29
  %44 = load i32, i32* %x.addr.i23, align 4, !dbg !1571
  %sub.i30 = sub nsw i32 0, %44, !dbg !1572
  store i32 %sub.i30, i32* %x.addr.i23, align 4, !dbg !1573
  %45 = load i32, i32* %x.addr.i23, align 4, !dbg !1574
  %cmp1.i31 = icmp slt i32 %45, 0, !dbg !1575
  br i1 %cmp1.i31, label %if.then2.i35, label %if.end3.i36, !dbg !1576

if.then2.i35:                                     ; preds = %while.body.i32
  %46 = load i32, i32* %w.addr.i24, align 4, !dbg !1577
  %mul.i33 = mul nsw i32 2, %46, !dbg !1578
  %47 = load i32, i32* %x.addr.i23, align 4, !dbg !1579
  %add.i34 = add nsw i32 %47, %mul.i33, !dbg !1579
  store i32 %add.i34, i32* %x.addr.i23, align 4, !dbg !1579
  br label %if.end3.i36, !dbg !1580

if.end3.i36:                                      ; preds = %if.then2.i35, %while.body.i32
  br label %while.cond.i29, !dbg !1581, !llvm.loop !1150

while.end.i37:                                    ; preds = %while.cond.i29
  %48 = load i32, i32* %x.addr.i23, align 4, !dbg !1582
  store i32 %48, i32* %retval.i22, align 4, !dbg !1583
  br label %avpriv_mirror.exit38, !dbg !1583

avpriv_mirror.exit38:                             ; preds = %if.then.i26, %while.end.i37
  %49 = load i32, i32* %retval.i22, align 4, !dbg !1584
  %50 = load i32, i32* %stride.addr, align 4, !dbg !1585
  %mul17 = mul nsw i32 %49, %50, !dbg !1586
  %idx.ext18 = sext i32 %mul17 to i64, !dbg !1587
  %add.ptr19 = getelementptr inbounds i8, i8* %39, i64 %idx.ext18, !dbg !1587
  %51 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !1588
  %b20 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %51, i32 0, i32 0, !dbg !1589
  %arrayidx21 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b20, i64 0, i64 3, !dbg !1588
  store i8* %add.ptr19, i8** %arrayidx21, align 8, !dbg !1590
  %52 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !1591
  %y = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %52, i32 0, i32 1, !dbg !1592
  store i32 -3, i32* %y, align 8, !dbg !1593
  ret void, !dbg !1594
}

; Function Attrs: nounwind uwtable
define internal void @spatial_compose_dd97i_dy_8bit(%struct.DWTContext* %d, i32 %level, i32 %width, i32 %height, i32 %stride) #0 !dbg !1595 {
entry:
  %retval.i59 = alloca i32, align 4
  %a.addr.i60 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i60, metadata !904, metadata !87), !dbg !1598
  %amin.addr.i61 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i61, metadata !911, metadata !87), !dbg !1600
  %amax.addr.i62 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i62, metadata !913, metadata !87), !dbg !1601
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !904, metadata !87), !dbg !1602
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !911, metadata !87), !dbg !1604
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !913, metadata !87), !dbg !1605
  %d.addr = alloca %struct.DWTContext*, align 8
  %level.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  %vertical_compose_l0 = alloca void (i8*, i8*, i8*, i32)*, align 8
  %vertical_compose_h0 = alloca void (i8*, i8*, i8*, i8*, i8*, i32)*, align 8
  %cs = alloca %struct.DWTCompose*, align 8
  %i = alloca i32, align 4
  %y = alloca i32, align 4
  %b = alloca [8 x i8*], align 16
  store %struct.DWTContext* %d, %struct.DWTContext** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTContext** %d.addr, metadata !1606, metadata !87), !dbg !1607
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !1608, metadata !87), !dbg !1609
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !1610, metadata !87), !dbg !1611
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !1612, metadata !87), !dbg !1613
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !1614, metadata !87), !dbg !1615
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i32)** %vertical_compose_l0, metadata !1616, metadata !87), !dbg !1621
  %0 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !1622
  %vertical_compose_l01 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %0, i32 0, i32 8, !dbg !1623
  %1 = load void ()*, void ()** %vertical_compose_l01, align 8, !dbg !1623
  %2 = bitcast void ()* %1 to i8*, !dbg !1624
  %3 = bitcast i8* %2 to void (i8*, i8*, i8*, i32)*, !dbg !1624
  store void (i8*, i8*, i8*, i32)* %3, void (i8*, i8*, i8*, i32)** %vertical_compose_l0, align 8, !dbg !1621
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i8*, i8*, i32)** %vertical_compose_h0, metadata !1625, metadata !87), !dbg !1630
  %4 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !1631
  %vertical_compose_h02 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %4, i32 0, i32 9, !dbg !1632
  %5 = load void ()*, void ()** %vertical_compose_h02, align 8, !dbg !1632
  %6 = bitcast void ()* %5 to i8*, !dbg !1633
  %7 = bitcast i8* %6 to void (i8*, i8*, i8*, i8*, i8*, i32)*, !dbg !1633
  store void (i8*, i8*, i8*, i8*, i8*, i32)* %7, void (i8*, i8*, i8*, i8*, i8*, i32)** %vertical_compose_h0, align 8, !dbg !1630
  call void @llvm.dbg.declare(metadata %struct.DWTCompose** %cs, metadata !1634, metadata !87), !dbg !1635
  %8 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !1636
  %cs3 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %8, i32 0, i32 14, !dbg !1637
  %arraydecay = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs3, i32 0, i32 0, !dbg !1636
  %9 = load i32, i32* %level.addr, align 4, !dbg !1638
  %idx.ext = sext i32 %9 to i64, !dbg !1639
  %add.ptr = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arraydecay, i64 %idx.ext, !dbg !1639
  store %struct.DWTCompose* %add.ptr, %struct.DWTCompose** %cs, align 8, !dbg !1635
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1640, metadata !87), !dbg !1641
  call void @llvm.dbg.declare(metadata i32* %y, metadata !1642, metadata !87), !dbg !1643
  %10 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !1644
  %y4 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %10, i32 0, i32 1, !dbg !1645
  %11 = load i32, i32* %y4, align 8, !dbg !1645
  store i32 %11, i32* %y, align 4, !dbg !1643
  call void @llvm.dbg.declare(metadata [8 x i8*]* %b, metadata !1646, metadata !87), !dbg !1647
  store i32 0, i32* %i, align 4, !dbg !1648
  br label %for.cond, !dbg !1650

for.cond:                                         ; preds = %for.inc, %entry
  %12 = load i32, i32* %i, align 4, !dbg !1651
  %cmp = icmp slt i32 %12, 6, !dbg !1654
  br i1 %cmp, label %for.body, label %for.end, !dbg !1655

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %i, align 4, !dbg !1656
  %idxprom = sext i32 %13 to i64, !dbg !1657
  %14 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !1657
  %b5 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %14, i32 0, i32 0, !dbg !1658
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %b5, i64 0, i64 %idxprom, !dbg !1657
  %15 = load i8*, i8** %arrayidx, align 8, !dbg !1657
  %16 = load i32, i32* %i, align 4, !dbg !1659
  %idxprom6 = sext i32 %16 to i64, !dbg !1660
  %arrayidx7 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 %idxprom6, !dbg !1660
  store i8* %15, i8** %arrayidx7, align 8, !dbg !1661
  br label %for.inc, !dbg !1660

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !1662
  %inc = add nsw i32 %17, 1, !dbg !1662
  store i32 %inc, i32* %i, align 4, !dbg !1662
  br label %for.cond, !dbg !1664, !llvm.loop !1665

for.end:                                          ; preds = %for.cond
  %18 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !1667
  %buffer = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %18, i32 0, i32 0, !dbg !1668
  %19 = load i8*, i8** %buffer, align 8, !dbg !1668
  %20 = load i32, i32* %y, align 4, !dbg !1669
  %add = add nsw i32 %20, 5, !dbg !1670
  %21 = load i32, i32* %height.addr, align 4, !dbg !1671
  %sub = sub nsw i32 %21, 2, !dbg !1672
  store i32 %add, i32* %a.addr.i, align 4, !dbg !1673
  store i32 0, i32* %amin.addr.i, align 4, !dbg !1673
  store i32 %sub, i32* %amax.addr.i, align 4, !dbg !1673
  %22 = load i32, i32* %a.addr.i, align 4, !dbg !1674
  %23 = load i32, i32* %amin.addr.i, align 4, !dbg !1675
  %cmp.i = icmp slt i32 %22, %23, !dbg !1676
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !1677

if.then.i:                                        ; preds = %for.end
  %24 = load i32, i32* %amin.addr.i, align 4, !dbg !1678
  store i32 %24, i32* %retval.i, align 4, !dbg !1679
  br label %av_clip_c.exit, !dbg !1679

if.else.i:                                        ; preds = %for.end
  %25 = load i32, i32* %a.addr.i, align 4, !dbg !1680
  %26 = load i32, i32* %amax.addr.i, align 4, !dbg !1681
  %cmp1.i = icmp sgt i32 %25, %26, !dbg !1682
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !1683

if.then2.i:                                       ; preds = %if.else.i
  %27 = load i32, i32* %amax.addr.i, align 4, !dbg !1684
  store i32 %27, i32* %retval.i, align 4, !dbg !1685
  br label %av_clip_c.exit, !dbg !1685

if.else3.i:                                       ; preds = %if.else.i
  %28 = load i32, i32* %a.addr.i, align 4, !dbg !1686
  store i32 %28, i32* %retval.i, align 4, !dbg !1687
  br label %av_clip_c.exit, !dbg !1687

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %29 = load i32, i32* %retval.i, align 4, !dbg !1688
  %30 = load i32, i32* %stride.addr, align 4, !dbg !1689
  %mul = mul nsw i32 %29, %30, !dbg !1690
  %idx.ext8 = sext i32 %mul to i64, !dbg !1691
  %add.ptr9 = getelementptr inbounds i8, i8* %19, i64 %idx.ext8, !dbg !1691
  %arrayidx10 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 6, !dbg !1692
  store i8* %add.ptr9, i8** %arrayidx10, align 16, !dbg !1693
  %31 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !1694
  %buffer11 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %31, i32 0, i32 0, !dbg !1695
  %32 = load i8*, i8** %buffer11, align 8, !dbg !1695
  %33 = load i32, i32* %y, align 4, !dbg !1696
  %add12 = add nsw i32 %33, 6, !dbg !1697
  %34 = load i32, i32* %height.addr, align 4, !dbg !1698
  %sub13 = sub nsw i32 %34, 1, !dbg !1699
  store i32 %add12, i32* %a.addr.i60, align 4, !dbg !1700
  store i32 1, i32* %amin.addr.i61, align 4, !dbg !1700
  store i32 %sub13, i32* %amax.addr.i62, align 4, !dbg !1700
  %35 = load i32, i32* %a.addr.i60, align 4, !dbg !1701
  %36 = load i32, i32* %amin.addr.i61, align 4, !dbg !1702
  %cmp.i63 = icmp slt i32 %35, %36, !dbg !1703
  br i1 %cmp.i63, label %if.then.i64, label %if.else.i66, !dbg !1704

if.then.i64:                                      ; preds = %av_clip_c.exit
  %37 = load i32, i32* %amin.addr.i61, align 4, !dbg !1705
  store i32 %37, i32* %retval.i59, align 4, !dbg !1706
  br label %av_clip_c.exit69, !dbg !1706

if.else.i66:                                      ; preds = %av_clip_c.exit
  %38 = load i32, i32* %a.addr.i60, align 4, !dbg !1707
  %39 = load i32, i32* %amax.addr.i62, align 4, !dbg !1708
  %cmp1.i65 = icmp sgt i32 %38, %39, !dbg !1709
  br i1 %cmp1.i65, label %if.then2.i67, label %if.else3.i68, !dbg !1710

if.then2.i67:                                     ; preds = %if.else.i66
  %40 = load i32, i32* %amax.addr.i62, align 4, !dbg !1711
  store i32 %40, i32* %retval.i59, align 4, !dbg !1712
  br label %av_clip_c.exit69, !dbg !1712

if.else3.i68:                                     ; preds = %if.else.i66
  %41 = load i32, i32* %a.addr.i60, align 4, !dbg !1713
  store i32 %41, i32* %retval.i59, align 4, !dbg !1714
  br label %av_clip_c.exit69, !dbg !1714

av_clip_c.exit69:                                 ; preds = %if.then.i64, %if.then2.i67, %if.else3.i68
  %42 = load i32, i32* %retval.i59, align 4, !dbg !1715
  %43 = load i32, i32* %stride.addr, align 4, !dbg !1716
  %mul15 = mul nsw i32 %42, %43, !dbg !1717
  %idx.ext16 = sext i32 %mul15 to i64, !dbg !1718
  %add.ptr17 = getelementptr inbounds i8, i8* %32, i64 %idx.ext16, !dbg !1718
  %arrayidx18 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 7, !dbg !1719
  store i8* %add.ptr17, i8** %arrayidx18, align 8, !dbg !1720
  %44 = load i32, i32* %y, align 4, !dbg !1721
  %add19 = add nsw i32 %44, 5, !dbg !1723
  %45 = load i32, i32* %height.addr, align 4, !dbg !1724
  %cmp20 = icmp ult i32 %add19, %45, !dbg !1725
  br i1 %cmp20, label %if.then, label %if.end, !dbg !1726

if.then:                                          ; preds = %av_clip_c.exit69
  %46 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %vertical_compose_l0, align 8, !dbg !1727
  %arrayidx21 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 5, !dbg !1729
  %47 = load i8*, i8** %arrayidx21, align 8, !dbg !1729
  %arrayidx22 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 6, !dbg !1730
  %48 = load i8*, i8** %arrayidx22, align 16, !dbg !1730
  %arrayidx23 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 7, !dbg !1731
  %49 = load i8*, i8** %arrayidx23, align 8, !dbg !1731
  %50 = load i32, i32* %width.addr, align 4, !dbg !1732
  call void %46(i8* %47, i8* %48, i8* %49, i32 %50), !dbg !1727
  br label %if.end, !dbg !1727

if.end:                                           ; preds = %if.then, %av_clip_c.exit69
  %51 = load i32, i32* %y, align 4, !dbg !1733
  %add24 = add nsw i32 %51, 1, !dbg !1735
  %52 = load i32, i32* %height.addr, align 4, !dbg !1736
  %cmp25 = icmp ult i32 %add24, %52, !dbg !1737
  br i1 %cmp25, label %if.then26, label %if.end32, !dbg !1738

if.then26:                                        ; preds = %if.end
  %53 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %vertical_compose_h0, align 8, !dbg !1739
  %arrayidx27 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 0, !dbg !1741
  %54 = load i8*, i8** %arrayidx27, align 16, !dbg !1741
  %arrayidx28 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 2, !dbg !1742
  %55 = load i8*, i8** %arrayidx28, align 16, !dbg !1742
  %arrayidx29 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 3, !dbg !1743
  %56 = load i8*, i8** %arrayidx29, align 8, !dbg !1743
  %arrayidx30 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 4, !dbg !1744
  %57 = load i8*, i8** %arrayidx30, align 16, !dbg !1744
  %arrayidx31 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 6, !dbg !1745
  %58 = load i8*, i8** %arrayidx31, align 16, !dbg !1745
  %59 = load i32, i32* %width.addr, align 4, !dbg !1746
  call void %53(i8* %54, i8* %55, i8* %56, i8* %57, i8* %58, i32 %59), !dbg !1739
  br label %if.end32, !dbg !1739

if.end32:                                         ; preds = %if.then26, %if.end
  %60 = load i32, i32* %y, align 4, !dbg !1747
  %sub33 = sub nsw i32 %60, 1, !dbg !1749
  %61 = load i32, i32* %height.addr, align 4, !dbg !1750
  %cmp34 = icmp ult i32 %sub33, %61, !dbg !1751
  br i1 %cmp34, label %if.then35, label %if.end37, !dbg !1752

if.then35:                                        ; preds = %if.end32
  %62 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !1753
  %horizontal_compose = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %62, i32 0, i32 13, !dbg !1755
  %63 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %horizontal_compose, align 8, !dbg !1755
  %arrayidx36 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 0, !dbg !1756
  %64 = load i8*, i8** %arrayidx36, align 16, !dbg !1756
  %65 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !1757
  %temp = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %65, i32 0, i32 1, !dbg !1758
  %66 = load i8*, i8** %temp, align 8, !dbg !1758
  %67 = load i32, i32* %width.addr, align 4, !dbg !1759
  call void %63(i8* %64, i8* %66, i32 %67), !dbg !1753
  br label %if.end37, !dbg !1753

if.end37:                                         ; preds = %if.then35, %if.end32
  %68 = load i32, i32* %y, align 4, !dbg !1760
  %add38 = add nsw i32 %68, 0, !dbg !1762
  %69 = load i32, i32* %height.addr, align 4, !dbg !1763
  %cmp39 = icmp ult i32 %add38, %69, !dbg !1764
  br i1 %cmp39, label %if.then40, label %if.end44, !dbg !1765

if.then40:                                        ; preds = %if.end37
  %70 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !1766
  %horizontal_compose41 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %70, i32 0, i32 13, !dbg !1768
  %71 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %horizontal_compose41, align 8, !dbg !1768
  %arrayidx42 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 1, !dbg !1769
  %72 = load i8*, i8** %arrayidx42, align 8, !dbg !1769
  %73 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !1770
  %temp43 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %73, i32 0, i32 1, !dbg !1771
  %74 = load i8*, i8** %temp43, align 8, !dbg !1771
  %75 = load i32, i32* %width.addr, align 4, !dbg !1772
  call void %71(i8* %72, i8* %74, i32 %75), !dbg !1766
  br label %if.end44, !dbg !1766

if.end44:                                         ; preds = %if.then40, %if.end37
  store i32 0, i32* %i, align 4, !dbg !1773
  br label %for.cond45, !dbg !1775

for.cond45:                                       ; preds = %for.inc54, %if.end44
  %76 = load i32, i32* %i, align 4, !dbg !1776
  %cmp46 = icmp slt i32 %76, 6, !dbg !1779
  br i1 %cmp46, label %for.body47, label %for.end56, !dbg !1780

for.body47:                                       ; preds = %for.cond45
  %77 = load i32, i32* %i, align 4, !dbg !1781
  %add48 = add nsw i32 %77, 2, !dbg !1782
  %idxprom49 = sext i32 %add48 to i64, !dbg !1783
  %arrayidx50 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 %idxprom49, !dbg !1783
  %78 = load i8*, i8** %arrayidx50, align 8, !dbg !1783
  %79 = load i32, i32* %i, align 4, !dbg !1784
  %idxprom51 = sext i32 %79 to i64, !dbg !1785
  %80 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !1785
  %b52 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %80, i32 0, i32 0, !dbg !1786
  %arrayidx53 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b52, i64 0, i64 %idxprom51, !dbg !1785
  store i8* %78, i8** %arrayidx53, align 8, !dbg !1787
  br label %for.inc54, !dbg !1785

for.inc54:                                        ; preds = %for.body47
  %81 = load i32, i32* %i, align 4, !dbg !1788
  %inc55 = add nsw i32 %81, 1, !dbg !1788
  store i32 %inc55, i32* %i, align 4, !dbg !1788
  br label %for.cond45, !dbg !1790, !llvm.loop !1791

for.end56:                                        ; preds = %for.cond45
  %82 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !1793
  %y57 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %82, i32 0, i32 1, !dbg !1794
  %83 = load i32, i32* %y57, align 8, !dbg !1795
  %add58 = add nsw i32 %83, 2, !dbg !1795
  store i32 %add58, i32* %y57, align 8, !dbg !1795
  ret void, !dbg !1796
}

; Function Attrs: nounwind uwtable
define internal void @vertical_compose53iL0_8bit(i8* %_b0, i8* %_b1, i8* %_b2, i32 %width) #0 !dbg !1797 {
entry:
  %_b0.addr = alloca i8*, align 8
  %_b1.addr = alloca i8*, align 8
  %_b2.addr = alloca i8*, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %b0 = alloca i16*, align 8
  %b1 = alloca i16*, align 8
  %b2 = alloca i16*, align 8
  store i8* %_b0, i8** %_b0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b0.addr, metadata !1798, metadata !87), !dbg !1799
  store i8* %_b1, i8** %_b1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b1.addr, metadata !1800, metadata !87), !dbg !1801
  store i8* %_b2, i8** %_b2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b2.addr, metadata !1802, metadata !87), !dbg !1803
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !1804, metadata !87), !dbg !1805
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1806, metadata !87), !dbg !1807
  call void @llvm.dbg.declare(metadata i16** %b0, metadata !1808, metadata !87), !dbg !1809
  %0 = load i8*, i8** %_b0.addr, align 8, !dbg !1810
  %1 = bitcast i8* %0 to i16*, !dbg !1811
  store i16* %1, i16** %b0, align 8, !dbg !1809
  call void @llvm.dbg.declare(metadata i16** %b1, metadata !1812, metadata !87), !dbg !1813
  %2 = load i8*, i8** %_b1.addr, align 8, !dbg !1814
  %3 = bitcast i8* %2 to i16*, !dbg !1815
  store i16* %3, i16** %b1, align 8, !dbg !1813
  call void @llvm.dbg.declare(metadata i16** %b2, metadata !1816, metadata !87), !dbg !1817
  %4 = load i8*, i8** %_b2.addr, align 8, !dbg !1818
  %5 = bitcast i8* %4 to i16*, !dbg !1819
  store i16* %5, i16** %b2, align 8, !dbg !1817
  store i32 0, i32* %i, align 4, !dbg !1820
  br label %for.cond, !dbg !1822

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !dbg !1823
  %7 = load i32, i32* %width.addr, align 4, !dbg !1826
  %cmp = icmp slt i32 %6, %7, !dbg !1827
  br i1 %cmp, label %for.body, label %for.end, !dbg !1828

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %i, align 4, !dbg !1829
  %idxprom = sext i32 %8 to i64, !dbg !1830
  %9 = load i16*, i16** %b0, align 8, !dbg !1830
  %arrayidx = getelementptr inbounds i16, i16* %9, i64 %idxprom, !dbg !1830
  %10 = load i16, i16* %arrayidx, align 2, !dbg !1830
  %conv = sext i16 %10 to i32, !dbg !1830
  %11 = load i32, i32* %i, align 4, !dbg !1831
  %idxprom1 = sext i32 %11 to i64, !dbg !1832
  %12 = load i16*, i16** %b2, align 8, !dbg !1832
  %arrayidx2 = getelementptr inbounds i16, i16* %12, i64 %idxprom1, !dbg !1832
  %13 = load i16, i16* %arrayidx2, align 2, !dbg !1832
  %conv3 = sext i16 %13 to i32, !dbg !1833
  %add = add i32 %conv, %conv3, !dbg !1834
  %add4 = add i32 %add, 2, !dbg !1835
  %shr = ashr i32 %add4, 2, !dbg !1836
  %14 = load i32, i32* %i, align 4, !dbg !1837
  %idxprom5 = sext i32 %14 to i64, !dbg !1838
  %15 = load i16*, i16** %b1, align 8, !dbg !1838
  %arrayidx6 = getelementptr inbounds i16, i16* %15, i64 %idxprom5, !dbg !1838
  %16 = load i16, i16* %arrayidx6, align 2, !dbg !1839
  %conv7 = sext i16 %16 to i32, !dbg !1839
  %sub = sub i32 %conv7, %shr, !dbg !1839
  %conv8 = trunc i32 %sub to i16, !dbg !1839
  store i16 %conv8, i16* %arrayidx6, align 2, !dbg !1839
  br label %for.inc, !dbg !1838

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !1840
  %inc = add nsw i32 %17, 1, !dbg !1840
  store i32 %inc, i32* %i, align 4, !dbg !1840
  br label %for.cond, !dbg !1842, !llvm.loop !1843

for.end:                                          ; preds = %for.cond
  ret void, !dbg !1845
}

; Function Attrs: nounwind uwtable
define internal void @vertical_compose_dd97iH0_8bit(i8* %_b0, i8* %_b1, i8* %_b2, i8* %_b3, i8* %_b4, i32 %width) #0 !dbg !1846 {
entry:
  %_b0.addr = alloca i8*, align 8
  %_b1.addr = alloca i8*, align 8
  %_b2.addr = alloca i8*, align 8
  %_b3.addr = alloca i8*, align 8
  %_b4.addr = alloca i8*, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %b0 = alloca i16*, align 8
  %b1 = alloca i16*, align 8
  %b2 = alloca i16*, align 8
  %b3 = alloca i16*, align 8
  %b4 = alloca i16*, align 8
  store i8* %_b0, i8** %_b0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b0.addr, metadata !1847, metadata !87), !dbg !1848
  store i8* %_b1, i8** %_b1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b1.addr, metadata !1849, metadata !87), !dbg !1850
  store i8* %_b2, i8** %_b2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b2.addr, metadata !1851, metadata !87), !dbg !1852
  store i8* %_b3, i8** %_b3.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b3.addr, metadata !1853, metadata !87), !dbg !1854
  store i8* %_b4, i8** %_b4.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b4.addr, metadata !1855, metadata !87), !dbg !1856
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !1857, metadata !87), !dbg !1858
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1859, metadata !87), !dbg !1860
  call void @llvm.dbg.declare(metadata i16** %b0, metadata !1861, metadata !87), !dbg !1862
  %0 = load i8*, i8** %_b0.addr, align 8, !dbg !1863
  %1 = bitcast i8* %0 to i16*, !dbg !1864
  store i16* %1, i16** %b0, align 8, !dbg !1862
  call void @llvm.dbg.declare(metadata i16** %b1, metadata !1865, metadata !87), !dbg !1866
  %2 = load i8*, i8** %_b1.addr, align 8, !dbg !1867
  %3 = bitcast i8* %2 to i16*, !dbg !1868
  store i16* %3, i16** %b1, align 8, !dbg !1866
  call void @llvm.dbg.declare(metadata i16** %b2, metadata !1869, metadata !87), !dbg !1870
  %4 = load i8*, i8** %_b2.addr, align 8, !dbg !1871
  %5 = bitcast i8* %4 to i16*, !dbg !1872
  store i16* %5, i16** %b2, align 8, !dbg !1870
  call void @llvm.dbg.declare(metadata i16** %b3, metadata !1873, metadata !87), !dbg !1874
  %6 = load i8*, i8** %_b3.addr, align 8, !dbg !1875
  %7 = bitcast i8* %6 to i16*, !dbg !1876
  store i16* %7, i16** %b3, align 8, !dbg !1874
  call void @llvm.dbg.declare(metadata i16** %b4, metadata !1877, metadata !87), !dbg !1878
  %8 = load i8*, i8** %_b4.addr, align 8, !dbg !1879
  %9 = bitcast i8* %8 to i16*, !dbg !1880
  store i16* %9, i16** %b4, align 8, !dbg !1878
  store i32 0, i32* %i, align 4, !dbg !1881
  br label %for.cond, !dbg !1883

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load i32, i32* %i, align 4, !dbg !1884
  %11 = load i32, i32* %width.addr, align 4, !dbg !1887
  %cmp = icmp slt i32 %10, %11, !dbg !1888
  br i1 %cmp, label %for.body, label %for.end, !dbg !1889

for.body:                                         ; preds = %for.cond
  %12 = load i32, i32* %i, align 4, !dbg !1890
  %idxprom = sext i32 %12 to i64, !dbg !1892
  %13 = load i16*, i16** %b2, align 8, !dbg !1892
  %arrayidx = getelementptr inbounds i16, i16* %13, i64 %idxprom, !dbg !1892
  %14 = load i16, i16* %arrayidx, align 2, !dbg !1892
  %conv = sext i16 %14 to i32, !dbg !1893
  %15 = load i32, i32* %i, align 4, !dbg !1894
  %idxprom1 = sext i32 %15 to i64, !dbg !1895
  %16 = load i16*, i16** %b1, align 8, !dbg !1895
  %arrayidx2 = getelementptr inbounds i16, i16* %16, i64 %idxprom1, !dbg !1895
  %17 = load i16, i16* %arrayidx2, align 2, !dbg !1895
  %conv3 = sext i16 %17 to i32, !dbg !1895
  %mul = mul i32 9, %conv3, !dbg !1896
  %18 = load i32, i32* %i, align 4, !dbg !1897
  %idxprom4 = sext i32 %18 to i64, !dbg !1898
  %19 = load i16*, i16** %b3, align 8, !dbg !1898
  %arrayidx5 = getelementptr inbounds i16, i16* %19, i64 %idxprom4, !dbg !1898
  %20 = load i16, i16* %arrayidx5, align 2, !dbg !1898
  %conv6 = sext i16 %20 to i32, !dbg !1898
  %mul7 = mul i32 9, %conv6, !dbg !1899
  %add = add i32 %mul, %mul7, !dbg !1900
  %21 = load i32, i32* %i, align 4, !dbg !1901
  %idxprom8 = sext i32 %21 to i64, !dbg !1902
  %22 = load i16*, i16** %b4, align 8, !dbg !1902
  %arrayidx9 = getelementptr inbounds i16, i16* %22, i64 %idxprom8, !dbg !1902
  %23 = load i16, i16* %arrayidx9, align 2, !dbg !1902
  %conv10 = sext i16 %23 to i32, !dbg !1902
  %sub = sub i32 %add, %conv10, !dbg !1903
  %24 = load i32, i32* %i, align 4, !dbg !1904
  %idxprom11 = sext i32 %24 to i64, !dbg !1905
  %25 = load i16*, i16** %b0, align 8, !dbg !1905
  %arrayidx12 = getelementptr inbounds i16, i16* %25, i64 %idxprom11, !dbg !1905
  %26 = load i16, i16* %arrayidx12, align 2, !dbg !1905
  %conv13 = sext i16 %26 to i32, !dbg !1905
  %sub14 = sub i32 %sub, %conv13, !dbg !1906
  %add15 = add i32 %sub14, 8, !dbg !1907
  %shr = ashr i32 %add15, 4, !dbg !1908
  %add16 = add i32 %conv, %shr, !dbg !1909
  %conv17 = trunc i32 %add16 to i16, !dbg !1910
  %27 = load i32, i32* %i, align 4, !dbg !1911
  %idxprom18 = sext i32 %27 to i64, !dbg !1912
  %28 = load i16*, i16** %b2, align 8, !dbg !1912
  %arrayidx19 = getelementptr inbounds i16, i16* %28, i64 %idxprom18, !dbg !1912
  store i16 %conv17, i16* %arrayidx19, align 2, !dbg !1913
  br label %for.inc, !dbg !1914

for.inc:                                          ; preds = %for.body
  %29 = load i32, i32* %i, align 4, !dbg !1915
  %inc = add nsw i32 %29, 1, !dbg !1915
  store i32 %inc, i32* %i, align 4, !dbg !1915
  br label %for.cond, !dbg !1917, !llvm.loop !1918

for.end:                                          ; preds = %for.cond
  ret void, !dbg !1920
}

; Function Attrs: nounwind uwtable
define internal void @horizontal_compose_dd97i_8bit(i8* %_b, i8* %_tmp, i32 %w) #0 !dbg !1921 {
entry:
  %_b.addr = alloca i8*, align 8
  %_tmp.addr = alloca i8*, align 8
  %w.addr = alloca i32, align 4
  %x = alloca i32, align 4
  %w2 = alloca i32, align 4
  %b = alloca i16*, align 8
  %tmp = alloca i16*, align 8
  store i8* %_b, i8** %_b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b.addr, metadata !1922, metadata !87), !dbg !1923
  store i8* %_tmp, i8** %_tmp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_tmp.addr, metadata !1924, metadata !87), !dbg !1925
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !1926, metadata !87), !dbg !1927
  call void @llvm.dbg.declare(metadata i32* %x, metadata !1928, metadata !87), !dbg !1929
  call void @llvm.dbg.declare(metadata i32* %w2, metadata !1930, metadata !87), !dbg !1932
  %0 = load i32, i32* %w.addr, align 4, !dbg !1933
  %shr = ashr i32 %0, 1, !dbg !1934
  store i32 %shr, i32* %w2, align 4, !dbg !1932
  call void @llvm.dbg.declare(metadata i16** %b, metadata !1935, metadata !87), !dbg !1936
  %1 = load i8*, i8** %_b.addr, align 8, !dbg !1937
  %2 = bitcast i8* %1 to i16*, !dbg !1938
  store i16* %2, i16** %b, align 8, !dbg !1936
  call void @llvm.dbg.declare(metadata i16** %tmp, metadata !1939, metadata !87), !dbg !1940
  %3 = load i8*, i8** %_tmp.addr, align 8, !dbg !1941
  %4 = bitcast i8* %3 to i16*, !dbg !1942
  store i16* %4, i16** %tmp, align 8, !dbg !1940
  %5 = load i16*, i16** %b, align 8, !dbg !1943
  %arrayidx = getelementptr inbounds i16, i16* %5, i64 0, !dbg !1943
  %6 = load i16, i16* %arrayidx, align 2, !dbg !1943
  %conv = sext i16 %6 to i32, !dbg !1943
  %7 = load i32, i32* %w2, align 4, !dbg !1944
  %idxprom = sext i32 %7 to i64, !dbg !1945
  %8 = load i16*, i16** %b, align 8, !dbg !1945
  %arrayidx1 = getelementptr inbounds i16, i16* %8, i64 %idxprom, !dbg !1945
  %9 = load i16, i16* %arrayidx1, align 2, !dbg !1945
  %conv2 = sext i16 %9 to i32, !dbg !1945
  %10 = load i32, i32* %w2, align 4, !dbg !1946
  %idxprom3 = sext i32 %10 to i64, !dbg !1947
  %11 = load i16*, i16** %b, align 8, !dbg !1947
  %arrayidx4 = getelementptr inbounds i16, i16* %11, i64 %idxprom3, !dbg !1947
  %12 = load i16, i16* %arrayidx4, align 2, !dbg !1947
  %conv5 = sext i16 %12 to i32, !dbg !1948
  %add = add i32 %conv2, %conv5, !dbg !1949
  %add6 = add i32 %add, 2, !dbg !1950
  %shr7 = ashr i32 %add6, 2, !dbg !1951
  %sub = sub i32 %conv, %shr7, !dbg !1952
  %conv8 = trunc i32 %sub to i16, !dbg !1953
  %13 = load i16*, i16** %tmp, align 8, !dbg !1954
  %arrayidx9 = getelementptr inbounds i16, i16* %13, i64 0, !dbg !1954
  store i16 %conv8, i16* %arrayidx9, align 2, !dbg !1955
  store i32 1, i32* %x, align 4, !dbg !1956
  br label %for.cond, !dbg !1958

for.cond:                                         ; preds = %for.inc, %entry
  %14 = load i32, i32* %x, align 4, !dbg !1959
  %15 = load i32, i32* %w2, align 4, !dbg !1962
  %cmp = icmp slt i32 %14, %15, !dbg !1963
  br i1 %cmp, label %for.body, label %for.end, !dbg !1964

for.body:                                         ; preds = %for.cond
  %16 = load i32, i32* %x, align 4, !dbg !1965
  %idxprom11 = sext i32 %16 to i64, !dbg !1966
  %17 = load i16*, i16** %b, align 8, !dbg !1966
  %arrayidx12 = getelementptr inbounds i16, i16* %17, i64 %idxprom11, !dbg !1966
  %18 = load i16, i16* %arrayidx12, align 2, !dbg !1966
  %conv13 = sext i16 %18 to i32, !dbg !1966
  %19 = load i32, i32* %x, align 4, !dbg !1967
  %20 = load i32, i32* %w2, align 4, !dbg !1968
  %add14 = add nsw i32 %19, %20, !dbg !1969
  %sub15 = sub nsw i32 %add14, 1, !dbg !1970
  %idxprom16 = sext i32 %sub15 to i64, !dbg !1971
  %21 = load i16*, i16** %b, align 8, !dbg !1971
  %arrayidx17 = getelementptr inbounds i16, i16* %21, i64 %idxprom16, !dbg !1971
  %22 = load i16, i16* %arrayidx17, align 2, !dbg !1971
  %conv18 = sext i16 %22 to i32, !dbg !1971
  %23 = load i32, i32* %x, align 4, !dbg !1972
  %24 = load i32, i32* %w2, align 4, !dbg !1973
  %add19 = add nsw i32 %23, %24, !dbg !1974
  %idxprom20 = sext i32 %add19 to i64, !dbg !1975
  %25 = load i16*, i16** %b, align 8, !dbg !1975
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !1975
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !1975
  %conv22 = sext i16 %26 to i32, !dbg !1976
  %add23 = add i32 %conv18, %conv22, !dbg !1977
  %add24 = add i32 %add23, 2, !dbg !1978
  %shr25 = ashr i32 %add24, 2, !dbg !1979
  %sub26 = sub i32 %conv13, %shr25, !dbg !1980
  %conv27 = trunc i32 %sub26 to i16, !dbg !1981
  %27 = load i32, i32* %x, align 4, !dbg !1982
  %idxprom28 = sext i32 %27 to i64, !dbg !1983
  %28 = load i16*, i16** %tmp, align 8, !dbg !1983
  %arrayidx29 = getelementptr inbounds i16, i16* %28, i64 %idxprom28, !dbg !1983
  store i16 %conv27, i16* %arrayidx29, align 2, !dbg !1984
  br label %for.inc, !dbg !1983

for.inc:                                          ; preds = %for.body
  %29 = load i32, i32* %x, align 4, !dbg !1985
  %inc = add nsw i32 %29, 1, !dbg !1985
  store i32 %inc, i32* %x, align 4, !dbg !1985
  br label %for.cond, !dbg !1987, !llvm.loop !1988

for.end:                                          ; preds = %for.cond
  %30 = load i16*, i16** %tmp, align 8, !dbg !1990
  %arrayidx30 = getelementptr inbounds i16, i16* %30, i64 0, !dbg !1990
  %31 = load i16, i16* %arrayidx30, align 2, !dbg !1990
  %32 = load i16*, i16** %tmp, align 8, !dbg !1991
  %arrayidx31 = getelementptr inbounds i16, i16* %32, i64 -1, !dbg !1991
  store i16 %31, i16* %arrayidx31, align 2, !dbg !1992
  %33 = load i32, i32* %w2, align 4, !dbg !1993
  %sub32 = sub nsw i32 %33, 1, !dbg !1994
  %idxprom33 = sext i32 %sub32 to i64, !dbg !1995
  %34 = load i16*, i16** %tmp, align 8, !dbg !1995
  %arrayidx34 = getelementptr inbounds i16, i16* %34, i64 %idxprom33, !dbg !1995
  %35 = load i16, i16* %arrayidx34, align 2, !dbg !1995
  %36 = load i32, i32* %w2, align 4, !dbg !1996
  %idxprom35 = sext i32 %36 to i64, !dbg !1997
  %37 = load i16*, i16** %tmp, align 8, !dbg !1997
  %arrayidx36 = getelementptr inbounds i16, i16* %37, i64 %idxprom35, !dbg !1997
  store i16 %35, i16* %arrayidx36, align 2, !dbg !1998
  %38 = load i32, i32* %w2, align 4, !dbg !1999
  %add37 = add nsw i32 %38, 1, !dbg !2000
  %idxprom38 = sext i32 %add37 to i64, !dbg !2001
  %39 = load i16*, i16** %tmp, align 8, !dbg !2001
  %arrayidx39 = getelementptr inbounds i16, i16* %39, i64 %idxprom38, !dbg !2001
  store i16 %35, i16* %arrayidx39, align 2, !dbg !2002
  store i32 0, i32* %x, align 4, !dbg !2003
  br label %for.cond40, !dbg !2005

for.cond40:                                       ; preds = %for.inc86, %for.end
  %40 = load i32, i32* %x, align 4, !dbg !2006
  %41 = load i32, i32* %w2, align 4, !dbg !2009
  %cmp41 = icmp slt i32 %40, %41, !dbg !2010
  br i1 %cmp41, label %for.body43, label %for.end88, !dbg !2011

for.body43:                                       ; preds = %for.cond40
  %42 = load i32, i32* %x, align 4, !dbg !2012
  %idxprom44 = sext i32 %42 to i64, !dbg !2014
  %43 = load i16*, i16** %tmp, align 8, !dbg !2014
  %arrayidx45 = getelementptr inbounds i16, i16* %43, i64 %idxprom44, !dbg !2014
  %44 = load i16, i16* %arrayidx45, align 2, !dbg !2014
  %conv46 = sext i16 %44 to i32, !dbg !2014
  %add47 = add i32 %conv46, 1, !dbg !2015
  %shr48 = ashr i32 %add47, 1, !dbg !2016
  %conv49 = trunc i32 %shr48 to i16, !dbg !2017
  %45 = load i32, i32* %x, align 4, !dbg !2018
  %mul = mul nsw i32 2, %45, !dbg !2019
  %idxprom50 = sext i32 %mul to i64, !dbg !2020
  %46 = load i16*, i16** %b, align 8, !dbg !2020
  %arrayidx51 = getelementptr inbounds i16, i16* %46, i64 %idxprom50, !dbg !2020
  store i16 %conv49, i16* %arrayidx51, align 2, !dbg !2021
  %47 = load i32, i32* %x, align 4, !dbg !2022
  %48 = load i32, i32* %w2, align 4, !dbg !2023
  %add52 = add nsw i32 %47, %48, !dbg !2024
  %idxprom53 = sext i32 %add52 to i64, !dbg !2025
  %49 = load i16*, i16** %b, align 8, !dbg !2025
  %arrayidx54 = getelementptr inbounds i16, i16* %49, i64 %idxprom53, !dbg !2025
  %50 = load i16, i16* %arrayidx54, align 2, !dbg !2025
  %conv55 = sext i16 %50 to i32, !dbg !2026
  %51 = load i32, i32* %x, align 4, !dbg !2027
  %idxprom56 = sext i32 %51 to i64, !dbg !2028
  %52 = load i16*, i16** %tmp, align 8, !dbg !2028
  %arrayidx57 = getelementptr inbounds i16, i16* %52, i64 %idxprom56, !dbg !2028
  %53 = load i16, i16* %arrayidx57, align 2, !dbg !2028
  %conv58 = sext i16 %53 to i32, !dbg !2028
  %mul59 = mul i32 9, %conv58, !dbg !2029
  %54 = load i32, i32* %x, align 4, !dbg !2030
  %add60 = add nsw i32 %54, 1, !dbg !2031
  %idxprom61 = sext i32 %add60 to i64, !dbg !2032
  %55 = load i16*, i16** %tmp, align 8, !dbg !2032
  %arrayidx62 = getelementptr inbounds i16, i16* %55, i64 %idxprom61, !dbg !2032
  %56 = load i16, i16* %arrayidx62, align 2, !dbg !2032
  %conv63 = sext i16 %56 to i32, !dbg !2032
  %mul64 = mul i32 9, %conv63, !dbg !2033
  %add65 = add i32 %mul59, %mul64, !dbg !2034
  %57 = load i32, i32* %x, align 4, !dbg !2035
  %add66 = add nsw i32 %57, 2, !dbg !2036
  %idxprom67 = sext i32 %add66 to i64, !dbg !2037
  %58 = load i16*, i16** %tmp, align 8, !dbg !2037
  %arrayidx68 = getelementptr inbounds i16, i16* %58, i64 %idxprom67, !dbg !2037
  %59 = load i16, i16* %arrayidx68, align 2, !dbg !2037
  %conv69 = sext i16 %59 to i32, !dbg !2037
  %sub70 = sub i32 %add65, %conv69, !dbg !2038
  %60 = load i32, i32* %x, align 4, !dbg !2039
  %sub71 = sub nsw i32 %60, 1, !dbg !2040
  %idxprom72 = sext i32 %sub71 to i64, !dbg !2041
  %61 = load i16*, i16** %tmp, align 8, !dbg !2041
  %arrayidx73 = getelementptr inbounds i16, i16* %61, i64 %idxprom72, !dbg !2041
  %62 = load i16, i16* %arrayidx73, align 2, !dbg !2041
  %conv74 = sext i16 %62 to i32, !dbg !2041
  %sub75 = sub i32 %sub70, %conv74, !dbg !2042
  %add76 = add i32 %sub75, 8, !dbg !2043
  %shr77 = ashr i32 %add76, 4, !dbg !2044
  %add78 = add i32 %conv55, %shr77, !dbg !2045
  %add79 = add i32 %add78, 1, !dbg !2046
  %shr80 = ashr i32 %add79, 1, !dbg !2047
  %conv81 = trunc i32 %shr80 to i16, !dbg !2048
  %63 = load i32, i32* %x, align 4, !dbg !2049
  %mul82 = mul nsw i32 2, %63, !dbg !2050
  %add83 = add nsw i32 %mul82, 1, !dbg !2051
  %idxprom84 = sext i32 %add83 to i64, !dbg !2052
  %64 = load i16*, i16** %b, align 8, !dbg !2052
  %arrayidx85 = getelementptr inbounds i16, i16* %64, i64 %idxprom84, !dbg !2052
  store i16 %conv81, i16* %arrayidx85, align 2, !dbg !2053
  br label %for.inc86, !dbg !2054

for.inc86:                                        ; preds = %for.body43
  %65 = load i32, i32* %x, align 4, !dbg !2055
  %inc87 = add nsw i32 %65, 1, !dbg !2055
  store i32 %inc87, i32* %x, align 4, !dbg !2055
  br label %for.cond40, !dbg !2057, !llvm.loop !2058

for.end88:                                        ; preds = %for.cond40
  ret void, !dbg !2060
}

; Function Attrs: nounwind uwtable
define internal void @spatial_compose_dirac53i_dy_8bit(%struct.DWTContext* %d, i32 %level, i32 %width, i32 %height, i32 %stride) #0 !dbg !2061 {
entry:
  %retval.i51 = alloca i32, align 4
  %x.addr.i52 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i52, metadata !1102, metadata !87), !dbg !2062
  %w.addr.i53 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i53, metadata !1109, metadata !87), !dbg !2064
  %retval.i = alloca i32, align 4
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !1102, metadata !87), !dbg !2065
  %w.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i, metadata !1109, metadata !87), !dbg !2067
  %d.addr = alloca %struct.DWTContext*, align 8
  %level.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  %vertical_compose_l0 = alloca void (i8*, i8*, i8*, i32)*, align 8
  %vertical_compose_h0 = alloca void (i8*, i8*, i8*, i32)*, align 8
  %cs = alloca %struct.DWTCompose*, align 8
  %y = alloca i32, align 4
  %b = alloca [4 x i8*], align 16
  store %struct.DWTContext* %d, %struct.DWTContext** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTContext** %d.addr, metadata !2068, metadata !87), !dbg !2069
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !2070, metadata !87), !dbg !2071
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !2072, metadata !87), !dbg !2073
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !2074, metadata !87), !dbg !2075
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !2076, metadata !87), !dbg !2077
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i32)** %vertical_compose_l0, metadata !2078, metadata !87), !dbg !2079
  %0 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !2080
  %vertical_compose_l01 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %0, i32 0, i32 8, !dbg !2081
  %1 = load void ()*, void ()** %vertical_compose_l01, align 8, !dbg !2081
  %2 = bitcast void ()* %1 to i8*, !dbg !2082
  %3 = bitcast i8* %2 to void (i8*, i8*, i8*, i32)*, !dbg !2082
  store void (i8*, i8*, i8*, i32)* %3, void (i8*, i8*, i8*, i32)** %vertical_compose_l0, align 8, !dbg !2079
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i32)** %vertical_compose_h0, metadata !2083, metadata !87), !dbg !2084
  %4 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !2085
  %vertical_compose_h02 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %4, i32 0, i32 9, !dbg !2086
  %5 = load void ()*, void ()** %vertical_compose_h02, align 8, !dbg !2086
  %6 = bitcast void ()* %5 to i8*, !dbg !2087
  %7 = bitcast i8* %6 to void (i8*, i8*, i8*, i32)*, !dbg !2087
  store void (i8*, i8*, i8*, i32)* %7, void (i8*, i8*, i8*, i32)** %vertical_compose_h0, align 8, !dbg !2084
  call void @llvm.dbg.declare(metadata %struct.DWTCompose** %cs, metadata !2088, metadata !87), !dbg !2089
  %8 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !2090
  %cs3 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %8, i32 0, i32 14, !dbg !2091
  %arraydecay = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs3, i32 0, i32 0, !dbg !2090
  %9 = load i32, i32* %level.addr, align 4, !dbg !2092
  %idx.ext = sext i32 %9 to i64, !dbg !2093
  %add.ptr = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arraydecay, i64 %idx.ext, !dbg !2093
  store %struct.DWTCompose* %add.ptr, %struct.DWTCompose** %cs, align 8, !dbg !2089
  call void @llvm.dbg.declare(metadata i32* %y, metadata !2094, metadata !87), !dbg !2095
  %10 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !2096
  %y4 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %10, i32 0, i32 1, !dbg !2097
  %11 = load i32, i32* %y4, align 8, !dbg !2097
  store i32 %11, i32* %y, align 4, !dbg !2095
  call void @llvm.dbg.declare(metadata [4 x i8*]* %b, metadata !2098, metadata !87), !dbg !2102
  %arrayinit.begin = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 0, !dbg !2103
  %12 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !2104
  %b5 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %12, i32 0, i32 0, !dbg !2105
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %b5, i64 0, i64 0, !dbg !2104
  %13 = load i8*, i8** %arrayidx, align 8, !dbg !2104
  store i8* %13, i8** %arrayinit.begin, align 8, !dbg !2103
  %arrayinit.element = getelementptr inbounds i8*, i8** %arrayinit.begin, i64 1, !dbg !2103
  %14 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !2106
  %b6 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %14, i32 0, i32 0, !dbg !2107
  %arrayidx7 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b6, i64 0, i64 1, !dbg !2106
  %15 = load i8*, i8** %arrayidx7, align 8, !dbg !2106
  store i8* %15, i8** %arrayinit.element, align 8, !dbg !2103
  %arrayinit.start = getelementptr inbounds i8*, i8** %arrayinit.element, i64 1, !dbg !2103
  %arrayinit.end = getelementptr inbounds i8*, i8** %arrayinit.begin, i64 4, !dbg !2103
  br label %arrayinit.body, !dbg !2103

arrayinit.body:                                   ; preds = %arrayinit.body, %entry
  %arrayinit.cur = phi i8** [ %arrayinit.start, %entry ], [ %arrayinit.next, %arrayinit.body ], !dbg !2108
  store i8* null, i8** %arrayinit.cur, align 8, !dbg !2108
  %arrayinit.next = getelementptr inbounds i8*, i8** %arrayinit.cur, i64 1, !dbg !2108
  %arrayinit.done = icmp eq i8** %arrayinit.next, %arrayinit.end, !dbg !2108
  br i1 %arrayinit.done, label %arrayinit.end8, label %arrayinit.body, !dbg !2108

arrayinit.end8:                                   ; preds = %arrayinit.body
  %16 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !2110
  %buffer = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %16, i32 0, i32 0, !dbg !2111
  %17 = load i8*, i8** %buffer, align 8, !dbg !2111
  %18 = load i32, i32* %y, align 4, !dbg !2112
  %add = add nsw i32 %18, 1, !dbg !2113
  %19 = load i32, i32* %height.addr, align 4, !dbg !2114
  %sub = sub nsw i32 %19, 1, !dbg !2115
  store i32 %add, i32* %x.addr.i, align 4, !dbg !2116
  store i32 %sub, i32* %w.addr.i, align 4, !dbg !2116
  %20 = load i32, i32* %w.addr.i, align 4, !dbg !2117
  %tobool.i = icmp ne i32 %20, 0, !dbg !2117
  br i1 %tobool.i, label %if.end.i, label %if.then.i, !dbg !2118

if.then.i:                                        ; preds = %arrayinit.end8
  store i32 0, i32* %retval.i, align 4, !dbg !2119
  br label %avpriv_mirror.exit, !dbg !2119

if.end.i:                                         ; preds = %arrayinit.end8
  br label %while.cond.i, !dbg !2120

while.cond.i:                                     ; preds = %if.end3.i, %if.end.i
  %21 = load i32, i32* %x.addr.i, align 4, !dbg !2121
  %22 = load i32, i32* %w.addr.i, align 4, !dbg !2122
  %cmp.i = icmp ugt i32 %21, %22, !dbg !2123
  br i1 %cmp.i, label %while.body.i, label %while.end.i, !dbg !2124

while.body.i:                                     ; preds = %while.cond.i
  %23 = load i32, i32* %x.addr.i, align 4, !dbg !2125
  %sub.i = sub nsw i32 0, %23, !dbg !2126
  store i32 %sub.i, i32* %x.addr.i, align 4, !dbg !2127
  %24 = load i32, i32* %x.addr.i, align 4, !dbg !2128
  %cmp1.i = icmp slt i32 %24, 0, !dbg !2129
  br i1 %cmp1.i, label %if.then2.i, label %if.end3.i, !dbg !2130

if.then2.i:                                       ; preds = %while.body.i
  %25 = load i32, i32* %w.addr.i, align 4, !dbg !2131
  %mul.i = mul nsw i32 2, %25, !dbg !2132
  %26 = load i32, i32* %x.addr.i, align 4, !dbg !2133
  %add.i = add nsw i32 %26, %mul.i, !dbg !2133
  store i32 %add.i, i32* %x.addr.i, align 4, !dbg !2133
  br label %if.end3.i, !dbg !2134

if.end3.i:                                        ; preds = %if.then2.i, %while.body.i
  br label %while.cond.i, !dbg !2135, !llvm.loop !1150

while.end.i:                                      ; preds = %while.cond.i
  %27 = load i32, i32* %x.addr.i, align 4, !dbg !2136
  store i32 %27, i32* %retval.i, align 4, !dbg !2137
  br label %avpriv_mirror.exit, !dbg !2137

avpriv_mirror.exit:                               ; preds = %if.then.i, %while.end.i
  %28 = load i32, i32* %retval.i, align 4, !dbg !2138
  %29 = load i32, i32* %stride.addr, align 4, !dbg !2139
  %mul = mul nsw i32 %28, %29, !dbg !2140
  %idx.ext9 = sext i32 %mul to i64, !dbg !2141
  %add.ptr10 = getelementptr inbounds i8, i8* %17, i64 %idx.ext9, !dbg !2141
  %arrayidx11 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 2, !dbg !2142
  store i8* %add.ptr10, i8** %arrayidx11, align 16, !dbg !2143
  %30 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !2144
  %buffer12 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %30, i32 0, i32 0, !dbg !2145
  %31 = load i8*, i8** %buffer12, align 8, !dbg !2145
  %32 = load i32, i32* %y, align 4, !dbg !2146
  %add13 = add nsw i32 %32, 2, !dbg !2147
  %33 = load i32, i32* %height.addr, align 4, !dbg !2148
  %sub14 = sub nsw i32 %33, 1, !dbg !2149
  store i32 %add13, i32* %x.addr.i52, align 4, !dbg !2150
  store i32 %sub14, i32* %w.addr.i53, align 4, !dbg !2150
  %34 = load i32, i32* %w.addr.i53, align 4, !dbg !2151
  %tobool.i54 = icmp ne i32 %34, 0, !dbg !2151
  br i1 %tobool.i54, label %if.end.i56, label %if.then.i55, !dbg !2152

if.then.i55:                                      ; preds = %avpriv_mirror.exit
  store i32 0, i32* %retval.i51, align 4, !dbg !2153
  br label %avpriv_mirror.exit67, !dbg !2153

if.end.i56:                                       ; preds = %avpriv_mirror.exit
  br label %while.cond.i58, !dbg !2154

while.cond.i58:                                   ; preds = %if.end3.i65, %if.end.i56
  %35 = load i32, i32* %x.addr.i52, align 4, !dbg !2155
  %36 = load i32, i32* %w.addr.i53, align 4, !dbg !2156
  %cmp.i57 = icmp ugt i32 %35, %36, !dbg !2157
  br i1 %cmp.i57, label %while.body.i61, label %while.end.i66, !dbg !2158

while.body.i61:                                   ; preds = %while.cond.i58
  %37 = load i32, i32* %x.addr.i52, align 4, !dbg !2159
  %sub.i59 = sub nsw i32 0, %37, !dbg !2160
  store i32 %sub.i59, i32* %x.addr.i52, align 4, !dbg !2161
  %38 = load i32, i32* %x.addr.i52, align 4, !dbg !2162
  %cmp1.i60 = icmp slt i32 %38, 0, !dbg !2163
  br i1 %cmp1.i60, label %if.then2.i64, label %if.end3.i65, !dbg !2164

if.then2.i64:                                     ; preds = %while.body.i61
  %39 = load i32, i32* %w.addr.i53, align 4, !dbg !2165
  %mul.i62 = mul nsw i32 2, %39, !dbg !2166
  %40 = load i32, i32* %x.addr.i52, align 4, !dbg !2167
  %add.i63 = add nsw i32 %40, %mul.i62, !dbg !2167
  store i32 %add.i63, i32* %x.addr.i52, align 4, !dbg !2167
  br label %if.end3.i65, !dbg !2168

if.end3.i65:                                      ; preds = %if.then2.i64, %while.body.i61
  br label %while.cond.i58, !dbg !2169, !llvm.loop !1150

while.end.i66:                                    ; preds = %while.cond.i58
  %41 = load i32, i32* %x.addr.i52, align 4, !dbg !2170
  store i32 %41, i32* %retval.i51, align 4, !dbg !2171
  br label %avpriv_mirror.exit67, !dbg !2171

avpriv_mirror.exit67:                             ; preds = %if.then.i55, %while.end.i66
  %42 = load i32, i32* %retval.i51, align 4, !dbg !2172
  %43 = load i32, i32* %stride.addr, align 4, !dbg !2173
  %mul16 = mul nsw i32 %42, %43, !dbg !2174
  %idx.ext17 = sext i32 %mul16 to i64, !dbg !2175
  %add.ptr18 = getelementptr inbounds i8, i8* %31, i64 %idx.ext17, !dbg !2175
  %arrayidx19 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 3, !dbg !2176
  store i8* %add.ptr18, i8** %arrayidx19, align 8, !dbg !2177
  %44 = load i32, i32* %y, align 4, !dbg !2178
  %add20 = add nsw i32 %44, 1, !dbg !2180
  %45 = load i32, i32* %height.addr, align 4, !dbg !2181
  %cmp = icmp ult i32 %add20, %45, !dbg !2182
  br i1 %cmp, label %if.then, label %if.end, !dbg !2183

if.then:                                          ; preds = %avpriv_mirror.exit67
  %46 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %vertical_compose_l0, align 8, !dbg !2184
  %arrayidx21 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 1, !dbg !2186
  %47 = load i8*, i8** %arrayidx21, align 8, !dbg !2186
  %arrayidx22 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 2, !dbg !2187
  %48 = load i8*, i8** %arrayidx22, align 16, !dbg !2187
  %arrayidx23 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 3, !dbg !2188
  %49 = load i8*, i8** %arrayidx23, align 8, !dbg !2188
  %50 = load i32, i32* %width.addr, align 4, !dbg !2189
  call void %46(i8* %47, i8* %48, i8* %49, i32 %50), !dbg !2184
  br label %if.end, !dbg !2184

if.end:                                           ; preds = %if.then, %avpriv_mirror.exit67
  %51 = load i32, i32* %y, align 4, !dbg !2190
  %add24 = add nsw i32 %51, 0, !dbg !2192
  %52 = load i32, i32* %height.addr, align 4, !dbg !2193
  %cmp25 = icmp ult i32 %add24, %52, !dbg !2194
  br i1 %cmp25, label %if.then26, label %if.end30, !dbg !2195

if.then26:                                        ; preds = %if.end
  %53 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %vertical_compose_h0, align 8, !dbg !2196
  %arrayidx27 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 0, !dbg !2198
  %54 = load i8*, i8** %arrayidx27, align 16, !dbg !2198
  %arrayidx28 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 1, !dbg !2199
  %55 = load i8*, i8** %arrayidx28, align 8, !dbg !2199
  %arrayidx29 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 2, !dbg !2200
  %56 = load i8*, i8** %arrayidx29, align 16, !dbg !2200
  %57 = load i32, i32* %width.addr, align 4, !dbg !2201
  call void %53(i8* %54, i8* %55, i8* %56, i32 %57), !dbg !2196
  br label %if.end30, !dbg !2196

if.end30:                                         ; preds = %if.then26, %if.end
  %58 = load i32, i32* %y, align 4, !dbg !2202
  %sub31 = sub nsw i32 %58, 1, !dbg !2204
  %59 = load i32, i32* %height.addr, align 4, !dbg !2205
  %cmp32 = icmp ult i32 %sub31, %59, !dbg !2206
  br i1 %cmp32, label %if.then33, label %if.end35, !dbg !2207

if.then33:                                        ; preds = %if.end30
  %60 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !2208
  %horizontal_compose = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %60, i32 0, i32 13, !dbg !2210
  %61 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %horizontal_compose, align 8, !dbg !2210
  %arrayidx34 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 0, !dbg !2211
  %62 = load i8*, i8** %arrayidx34, align 16, !dbg !2211
  %63 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !2212
  %temp = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %63, i32 0, i32 1, !dbg !2213
  %64 = load i8*, i8** %temp, align 8, !dbg !2213
  %65 = load i32, i32* %width.addr, align 4, !dbg !2214
  call void %61(i8* %62, i8* %64, i32 %65), !dbg !2208
  br label %if.end35, !dbg !2208

if.end35:                                         ; preds = %if.then33, %if.end30
  %66 = load i32, i32* %y, align 4, !dbg !2215
  %add36 = add nsw i32 %66, 0, !dbg !2217
  %67 = load i32, i32* %height.addr, align 4, !dbg !2218
  %cmp37 = icmp ult i32 %add36, %67, !dbg !2219
  br i1 %cmp37, label %if.then38, label %if.end42, !dbg !2220

if.then38:                                        ; preds = %if.end35
  %68 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !2221
  %horizontal_compose39 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %68, i32 0, i32 13, !dbg !2223
  %69 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %horizontal_compose39, align 8, !dbg !2223
  %arrayidx40 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 1, !dbg !2224
  %70 = load i8*, i8** %arrayidx40, align 8, !dbg !2224
  %71 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !2225
  %temp41 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %71, i32 0, i32 1, !dbg !2226
  %72 = load i8*, i8** %temp41, align 8, !dbg !2226
  %73 = load i32, i32* %width.addr, align 4, !dbg !2227
  call void %69(i8* %70, i8* %72, i32 %73), !dbg !2221
  br label %if.end42, !dbg !2221

if.end42:                                         ; preds = %if.then38, %if.end35
  %arrayidx43 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 2, !dbg !2228
  %74 = load i8*, i8** %arrayidx43, align 16, !dbg !2228
  %75 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !2229
  %b44 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %75, i32 0, i32 0, !dbg !2230
  %arrayidx45 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b44, i64 0, i64 0, !dbg !2229
  store i8* %74, i8** %arrayidx45, align 8, !dbg !2231
  %arrayidx46 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 3, !dbg !2232
  %76 = load i8*, i8** %arrayidx46, align 8, !dbg !2232
  %77 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !2233
  %b47 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %77, i32 0, i32 0, !dbg !2234
  %arrayidx48 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b47, i64 0, i64 1, !dbg !2233
  store i8* %76, i8** %arrayidx48, align 8, !dbg !2235
  %78 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !2236
  %y49 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %78, i32 0, i32 1, !dbg !2237
  %79 = load i32, i32* %y49, align 8, !dbg !2238
  %add50 = add nsw i32 %79, 2, !dbg !2238
  store i32 %add50, i32* %y49, align 8, !dbg !2238
  ret void, !dbg !2239
}

; Function Attrs: nounwind uwtable
define internal void @vertical_compose_dirac53iH0_8bit(i8* %_b0, i8* %_b1, i8* %_b2, i32 %width) #0 !dbg !2240 {
entry:
  %_b0.addr = alloca i8*, align 8
  %_b1.addr = alloca i8*, align 8
  %_b2.addr = alloca i8*, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %b0 = alloca i16*, align 8
  %b1 = alloca i16*, align 8
  %b2 = alloca i16*, align 8
  store i8* %_b0, i8** %_b0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b0.addr, metadata !2241, metadata !87), !dbg !2242
  store i8* %_b1, i8** %_b1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b1.addr, metadata !2243, metadata !87), !dbg !2244
  store i8* %_b2, i8** %_b2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b2.addr, metadata !2245, metadata !87), !dbg !2246
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !2247, metadata !87), !dbg !2248
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2249, metadata !87), !dbg !2250
  call void @llvm.dbg.declare(metadata i16** %b0, metadata !2251, metadata !87), !dbg !2252
  %0 = load i8*, i8** %_b0.addr, align 8, !dbg !2253
  %1 = bitcast i8* %0 to i16*, !dbg !2254
  store i16* %1, i16** %b0, align 8, !dbg !2252
  call void @llvm.dbg.declare(metadata i16** %b1, metadata !2255, metadata !87), !dbg !2256
  %2 = load i8*, i8** %_b1.addr, align 8, !dbg !2257
  %3 = bitcast i8* %2 to i16*, !dbg !2258
  store i16* %3, i16** %b1, align 8, !dbg !2256
  call void @llvm.dbg.declare(metadata i16** %b2, metadata !2259, metadata !87), !dbg !2260
  %4 = load i8*, i8** %_b2.addr, align 8, !dbg !2261
  %5 = bitcast i8* %4 to i16*, !dbg !2262
  store i16* %5, i16** %b2, align 8, !dbg !2260
  store i32 0, i32* %i, align 4, !dbg !2263
  br label %for.cond, !dbg !2265

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !dbg !2266
  %7 = load i32, i32* %width.addr, align 4, !dbg !2269
  %cmp = icmp slt i32 %6, %7, !dbg !2270
  br i1 %cmp, label %for.body, label %for.end, !dbg !2271

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %i, align 4, !dbg !2272
  %idxprom = sext i32 %8 to i64, !dbg !2274
  %9 = load i16*, i16** %b1, align 8, !dbg !2274
  %arrayidx = getelementptr inbounds i16, i16* %9, i64 %idxprom, !dbg !2274
  %10 = load i16, i16* %arrayidx, align 2, !dbg !2274
  %conv = sext i16 %10 to i32, !dbg !2274
  %11 = load i32, i32* %i, align 4, !dbg !2275
  %idxprom1 = sext i32 %11 to i64, !dbg !2276
  %12 = load i16*, i16** %b0, align 8, !dbg !2276
  %arrayidx2 = getelementptr inbounds i16, i16* %12, i64 %idxprom1, !dbg !2276
  %13 = load i16, i16* %arrayidx2, align 2, !dbg !2276
  %conv3 = sext i16 %13 to i32, !dbg !2276
  %14 = load i32, i32* %i, align 4, !dbg !2277
  %idxprom4 = sext i32 %14 to i64, !dbg !2278
  %15 = load i16*, i16** %b2, align 8, !dbg !2278
  %arrayidx5 = getelementptr inbounds i16, i16* %15, i64 %idxprom4, !dbg !2278
  %16 = load i16, i16* %arrayidx5, align 2, !dbg !2278
  %conv6 = sext i16 %16 to i32, !dbg !2279
  %add = add i32 %conv3, %conv6, !dbg !2280
  %add7 = add i32 %add, 1, !dbg !2281
  %shr = ashr i32 %add7, 1, !dbg !2282
  %add8 = add i32 %conv, %shr, !dbg !2283
  %conv9 = trunc i32 %add8 to i16, !dbg !2284
  %17 = load i32, i32* %i, align 4, !dbg !2285
  %idxprom10 = sext i32 %17 to i64, !dbg !2286
  %18 = load i16*, i16** %b1, align 8, !dbg !2286
  %arrayidx11 = getelementptr inbounds i16, i16* %18, i64 %idxprom10, !dbg !2286
  store i16 %conv9, i16* %arrayidx11, align 2, !dbg !2287
  br label %for.inc, !dbg !2288

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !2289
  %inc = add nsw i32 %19, 1, !dbg !2289
  store i32 %inc, i32* %i, align 4, !dbg !2289
  br label %for.cond, !dbg !2291, !llvm.loop !2292

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2294
}

; Function Attrs: nounwind uwtable
define internal void @horizontal_compose_dirac53i_8bit(i8* %_b, i8* %_temp, i32 %w) #0 !dbg !2295 {
entry:
  %dst.addr.i = alloca i16*, align 8
  call void @llvm.dbg.declare(metadata i16** %dst.addr.i, metadata !2296, metadata !87), !dbg !2300
  %src0.addr.i = alloca i16*, align 8
  call void @llvm.dbg.declare(metadata i16** %src0.addr.i, metadata !2302, metadata !87), !dbg !2303
  %src1.addr.i = alloca i16*, align 8
  call void @llvm.dbg.declare(metadata i16** %src1.addr.i, metadata !2304, metadata !87), !dbg !2305
  %w2.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w2.addr.i, metadata !2306, metadata !87), !dbg !2307
  %add.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %add.addr.i, metadata !2308, metadata !87), !dbg !2309
  %shift.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %shift.addr.i, metadata !2310, metadata !87), !dbg !2311
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !2312, metadata !87), !dbg !2313
  %_b.addr = alloca i8*, align 8
  %_temp.addr = alloca i8*, align 8
  %w.addr = alloca i32, align 4
  %x = alloca i32, align 4
  %w2 = alloca i32, align 4
  %b = alloca i16*, align 8
  %temp = alloca i16*, align 8
  store i8* %_b, i8** %_b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b.addr, metadata !2314, metadata !87), !dbg !2315
  store i8* %_temp, i8** %_temp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_temp.addr, metadata !2316, metadata !87), !dbg !2317
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !2318, metadata !87), !dbg !2319
  call void @llvm.dbg.declare(metadata i32* %x, metadata !2320, metadata !87), !dbg !2321
  call void @llvm.dbg.declare(metadata i32* %w2, metadata !2322, metadata !87), !dbg !2323
  %0 = load i32, i32* %w.addr, align 4, !dbg !2324
  %shr = ashr i32 %0, 1, !dbg !2325
  store i32 %shr, i32* %w2, align 4, !dbg !2323
  call void @llvm.dbg.declare(metadata i16** %b, metadata !2326, metadata !87), !dbg !2327
  %1 = load i8*, i8** %_b.addr, align 8, !dbg !2328
  %2 = bitcast i8* %1 to i16*, !dbg !2329
  store i16* %2, i16** %b, align 8, !dbg !2327
  call void @llvm.dbg.declare(metadata i16** %temp, metadata !2330, metadata !87), !dbg !2331
  %3 = load i8*, i8** %_temp.addr, align 8, !dbg !2332
  %4 = bitcast i8* %3 to i16*, !dbg !2333
  store i16* %4, i16** %temp, align 8, !dbg !2331
  %5 = load i16*, i16** %b, align 8, !dbg !2334
  %arrayidx = getelementptr inbounds i16, i16* %5, i64 0, !dbg !2334
  %6 = load i16, i16* %arrayidx, align 2, !dbg !2334
  %conv = sext i16 %6 to i32, !dbg !2334
  %7 = load i32, i32* %w2, align 4, !dbg !2335
  %idxprom = sext i32 %7 to i64, !dbg !2336
  %8 = load i16*, i16** %b, align 8, !dbg !2336
  %arrayidx1 = getelementptr inbounds i16, i16* %8, i64 %idxprom, !dbg !2336
  %9 = load i16, i16* %arrayidx1, align 2, !dbg !2336
  %conv2 = sext i16 %9 to i32, !dbg !2336
  %10 = load i32, i32* %w2, align 4, !dbg !2337
  %idxprom3 = sext i32 %10 to i64, !dbg !2338
  %11 = load i16*, i16** %b, align 8, !dbg !2338
  %arrayidx4 = getelementptr inbounds i16, i16* %11, i64 %idxprom3, !dbg !2338
  %12 = load i16, i16* %arrayidx4, align 2, !dbg !2338
  %conv5 = sext i16 %12 to i32, !dbg !2339
  %add = add i32 %conv2, %conv5, !dbg !2340
  %add6 = add i32 %add, 2, !dbg !2341
  %shr7 = ashr i32 %add6, 2, !dbg !2342
  %sub = sub i32 %conv, %shr7, !dbg !2343
  %conv8 = trunc i32 %sub to i16, !dbg !2344
  %13 = load i16*, i16** %temp, align 8, !dbg !2345
  %arrayidx9 = getelementptr inbounds i16, i16* %13, i64 0, !dbg !2345
  store i16 %conv8, i16* %arrayidx9, align 2, !dbg !2346
  store i32 1, i32* %x, align 4, !dbg !2347
  br label %for.cond, !dbg !2349

for.cond:                                         ; preds = %for.inc, %entry
  %14 = load i32, i32* %x, align 4, !dbg !2350
  %15 = load i32, i32* %w2, align 4, !dbg !2353
  %cmp = icmp slt i32 %14, %15, !dbg !2354
  br i1 %cmp, label %for.body, label %for.end, !dbg !2355

for.body:                                         ; preds = %for.cond
  %16 = load i32, i32* %x, align 4, !dbg !2356
  %idxprom11 = sext i32 %16 to i64, !dbg !2358
  %17 = load i16*, i16** %b, align 8, !dbg !2358
  %arrayidx12 = getelementptr inbounds i16, i16* %17, i64 %idxprom11, !dbg !2358
  %18 = load i16, i16* %arrayidx12, align 2, !dbg !2358
  %conv13 = sext i16 %18 to i32, !dbg !2358
  %19 = load i32, i32* %x, align 4, !dbg !2359
  %20 = load i32, i32* %w2, align 4, !dbg !2360
  %add14 = add nsw i32 %19, %20, !dbg !2361
  %sub15 = sub nsw i32 %add14, 1, !dbg !2362
  %idxprom16 = sext i32 %sub15 to i64, !dbg !2363
  %21 = load i16*, i16** %b, align 8, !dbg !2363
  %arrayidx17 = getelementptr inbounds i16, i16* %21, i64 %idxprom16, !dbg !2363
  %22 = load i16, i16* %arrayidx17, align 2, !dbg !2363
  %conv18 = sext i16 %22 to i32, !dbg !2363
  %23 = load i32, i32* %x, align 4, !dbg !2364
  %24 = load i32, i32* %w2, align 4, !dbg !2365
  %add19 = add nsw i32 %23, %24, !dbg !2366
  %idxprom20 = sext i32 %add19 to i64, !dbg !2367
  %25 = load i16*, i16** %b, align 8, !dbg !2367
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !2367
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !2367
  %conv22 = sext i16 %26 to i32, !dbg !2368
  %add23 = add i32 %conv18, %conv22, !dbg !2369
  %add24 = add i32 %add23, 2, !dbg !2370
  %shr25 = ashr i32 %add24, 2, !dbg !2371
  %sub26 = sub i32 %conv13, %shr25, !dbg !2372
  %conv27 = trunc i32 %sub26 to i16, !dbg !2373
  %27 = load i32, i32* %x, align 4, !dbg !2374
  %idxprom28 = sext i32 %27 to i64, !dbg !2375
  %28 = load i16*, i16** %temp, align 8, !dbg !2375
  %arrayidx29 = getelementptr inbounds i16, i16* %28, i64 %idxprom28, !dbg !2375
  store i16 %conv27, i16* %arrayidx29, align 2, !dbg !2376
  %29 = load i32, i32* %x, align 4, !dbg !2377
  %30 = load i32, i32* %w2, align 4, !dbg !2378
  %add30 = add nsw i32 %29, %30, !dbg !2379
  %sub31 = sub nsw i32 %add30, 1, !dbg !2380
  %idxprom32 = sext i32 %sub31 to i64, !dbg !2381
  %31 = load i16*, i16** %b, align 8, !dbg !2381
  %arrayidx33 = getelementptr inbounds i16, i16* %31, i64 %idxprom32, !dbg !2381
  %32 = load i16, i16* %arrayidx33, align 2, !dbg !2381
  %conv34 = sext i16 %32 to i32, !dbg !2381
  %33 = load i32, i32* %x, align 4, !dbg !2382
  %sub35 = sub nsw i32 %33, 1, !dbg !2383
  %idxprom36 = sext i32 %sub35 to i64, !dbg !2384
  %34 = load i16*, i16** %temp, align 8, !dbg !2384
  %arrayidx37 = getelementptr inbounds i16, i16* %34, i64 %idxprom36, !dbg !2384
  %35 = load i16, i16* %arrayidx37, align 2, !dbg !2384
  %conv38 = sext i16 %35 to i32, !dbg !2384
  %36 = load i32, i32* %x, align 4, !dbg !2385
  %idxprom39 = sext i32 %36 to i64, !dbg !2386
  %37 = load i16*, i16** %temp, align 8, !dbg !2386
  %arrayidx40 = getelementptr inbounds i16, i16* %37, i64 %idxprom39, !dbg !2386
  %38 = load i16, i16* %arrayidx40, align 2, !dbg !2386
  %conv41 = sext i16 %38 to i32, !dbg !2387
  %add42 = add i32 %conv38, %conv41, !dbg !2388
  %add43 = add i32 %add42, 1, !dbg !2389
  %shr44 = ashr i32 %add43, 1, !dbg !2390
  %add45 = add i32 %conv34, %shr44, !dbg !2391
  %conv46 = trunc i32 %add45 to i16, !dbg !2392
  %39 = load i32, i32* %x, align 4, !dbg !2393
  %40 = load i32, i32* %w2, align 4, !dbg !2394
  %add47 = add nsw i32 %39, %40, !dbg !2395
  %sub48 = sub nsw i32 %add47, 1, !dbg !2396
  %idxprom49 = sext i32 %sub48 to i64, !dbg !2397
  %41 = load i16*, i16** %temp, align 8, !dbg !2397
  %arrayidx50 = getelementptr inbounds i16, i16* %41, i64 %idxprom49, !dbg !2397
  store i16 %conv46, i16* %arrayidx50, align 2, !dbg !2398
  br label %for.inc, !dbg !2399

for.inc:                                          ; preds = %for.body
  %42 = load i32, i32* %x, align 4, !dbg !2400
  %inc = add nsw i32 %42, 1, !dbg !2400
  store i32 %inc, i32* %x, align 4, !dbg !2400
  br label %for.cond, !dbg !2402, !llvm.loop !2403

for.end:                                          ; preds = %for.cond
  %43 = load i32, i32* %w.addr, align 4, !dbg !2405
  %sub51 = sub nsw i32 %43, 1, !dbg !2406
  %idxprom52 = sext i32 %sub51 to i64, !dbg !2407
  %44 = load i16*, i16** %b, align 8, !dbg !2407
  %arrayidx53 = getelementptr inbounds i16, i16* %44, i64 %idxprom52, !dbg !2407
  %45 = load i16, i16* %arrayidx53, align 2, !dbg !2407
  %conv54 = sext i16 %45 to i32, !dbg !2407
  %46 = load i32, i32* %w2, align 4, !dbg !2408
  %sub55 = sub nsw i32 %46, 1, !dbg !2409
  %idxprom56 = sext i32 %sub55 to i64, !dbg !2410
  %47 = load i16*, i16** %temp, align 8, !dbg !2410
  %arrayidx57 = getelementptr inbounds i16, i16* %47, i64 %idxprom56, !dbg !2410
  %48 = load i16, i16* %arrayidx57, align 2, !dbg !2410
  %conv58 = sext i16 %48 to i32, !dbg !2410
  %49 = load i32, i32* %w2, align 4, !dbg !2411
  %sub59 = sub nsw i32 %49, 1, !dbg !2412
  %idxprom60 = sext i32 %sub59 to i64, !dbg !2413
  %50 = load i16*, i16** %temp, align 8, !dbg !2413
  %arrayidx61 = getelementptr inbounds i16, i16* %50, i64 %idxprom60, !dbg !2413
  %51 = load i16, i16* %arrayidx61, align 2, !dbg !2413
  %conv62 = sext i16 %51 to i32, !dbg !2414
  %add63 = add i32 %conv58, %conv62, !dbg !2415
  %add64 = add i32 %add63, 1, !dbg !2416
  %shr65 = ashr i32 %add64, 1, !dbg !2417
  %add66 = add i32 %conv54, %shr65, !dbg !2418
  %conv67 = trunc i32 %add66 to i16, !dbg !2419
  %52 = load i32, i32* %w.addr, align 4, !dbg !2420
  %sub68 = sub nsw i32 %52, 1, !dbg !2421
  %idxprom69 = sext i32 %sub68 to i64, !dbg !2422
  %53 = load i16*, i16** %temp, align 8, !dbg !2422
  %arrayidx70 = getelementptr inbounds i16, i16* %53, i64 %idxprom69, !dbg !2422
  store i16 %conv67, i16* %arrayidx70, align 2, !dbg !2423
  %54 = load i16*, i16** %b, align 8, !dbg !2424
  %55 = load i16*, i16** %temp, align 8, !dbg !2425
  %56 = load i16*, i16** %temp, align 8, !dbg !2426
  %57 = load i32, i32* %w2, align 4, !dbg !2427
  %idx.ext = sext i32 %57 to i64, !dbg !2428
  %add.ptr = getelementptr inbounds i16, i16* %56, i64 %idx.ext, !dbg !2428
  %58 = load i32, i32* %w2, align 4, !dbg !2429
  store i16* %54, i16** %dst.addr.i, align 8, !dbg !2430
  store i16* %55, i16** %src0.addr.i, align 8, !dbg !2430
  store i16* %add.ptr, i16** %src1.addr.i, align 8, !dbg !2430
  store i32 %58, i32* %w2.addr.i, align 4, !dbg !2430
  store i32 1, i32* %add.addr.i, align 4, !dbg !2430
  store i32 1, i32* %shift.addr.i, align 4, !dbg !2430
  store i32 0, i32* %i.i, align 4, !dbg !2431
  br label %for.cond.i, !dbg !2433

for.cond.i:                                       ; preds = %for.body.i, %for.end
  %59 = load i32, i32* %i.i, align 4, !dbg !2434
  %60 = load i32, i32* %w2.addr.i, align 4, !dbg !2437
  %cmp.i = icmp slt i32 %59, %60, !dbg !2438
  br i1 %cmp.i, label %for.body.i, label %interleave_8bit.exit, !dbg !2439

for.body.i:                                       ; preds = %for.cond.i
  %61 = load i32, i32* %i.i, align 4, !dbg !2440
  %idxprom.i = sext i32 %61 to i64, !dbg !2442
  %62 = load i16*, i16** %src0.addr.i, align 8, !dbg !2442
  %arrayidx.i = getelementptr inbounds i16, i16* %62, i64 %idxprom.i, !dbg !2442
  %63 = load i16, i16* %arrayidx.i, align 2, !dbg !2442
  %conv.i = sext i16 %63 to i32, !dbg !2442
  %64 = load i32, i32* %add.addr.i, align 4, !dbg !2443
  %add1.i = add i32 %conv.i, %64, !dbg !2444
  %65 = load i32, i32* %shift.addr.i, align 4, !dbg !2445
  %shr.i = ashr i32 %add1.i, %65, !dbg !2446
  %conv2.i = trunc i32 %shr.i to i16, !dbg !2447
  %66 = load i32, i32* %i.i, align 4, !dbg !2448
  %mul.i = mul nsw i32 2, %66, !dbg !2449
  %idxprom3.i = sext i32 %mul.i to i64, !dbg !2450
  %67 = load i16*, i16** %dst.addr.i, align 8, !dbg !2450
  %arrayidx4.i = getelementptr inbounds i16, i16* %67, i64 %idxprom3.i, !dbg !2450
  store i16 %conv2.i, i16* %arrayidx4.i, align 2, !dbg !2451
  %68 = load i32, i32* %i.i, align 4, !dbg !2452
  %idxprom5.i = sext i32 %68 to i64, !dbg !2453
  %69 = load i16*, i16** %src1.addr.i, align 8, !dbg !2453
  %arrayidx6.i = getelementptr inbounds i16, i16* %69, i64 %idxprom5.i, !dbg !2453
  %70 = load i16, i16* %arrayidx6.i, align 2, !dbg !2453
  %conv7.i = sext i16 %70 to i32, !dbg !2453
  %71 = load i32, i32* %add.addr.i, align 4, !dbg !2454
  %add8.i = add i32 %conv7.i, %71, !dbg !2455
  %72 = load i32, i32* %shift.addr.i, align 4, !dbg !2456
  %shr9.i = ashr i32 %add8.i, %72, !dbg !2457
  %conv10.i = trunc i32 %shr9.i to i16, !dbg !2458
  %73 = load i32, i32* %i.i, align 4, !dbg !2459
  %mul11.i = mul nsw i32 2, %73, !dbg !2460
  %add12.i = add nsw i32 %mul11.i, 1, !dbg !2461
  %idxprom13.i = sext i32 %add12.i to i64, !dbg !2462
  %74 = load i16*, i16** %dst.addr.i, align 8, !dbg !2462
  %arrayidx14.i = getelementptr inbounds i16, i16* %74, i64 %idxprom13.i, !dbg !2462
  store i16 %conv10.i, i16* %arrayidx14.i, align 2, !dbg !2463
  %75 = load i32, i32* %i.i, align 4, !dbg !2464
  %inc.i = add nsw i32 %75, 1, !dbg !2464
  store i32 %inc.i, i32* %i.i, align 4, !dbg !2464
  br label %for.cond.i, !dbg !2466, !llvm.loop !2467

interleave_8bit.exit:                             ; preds = %for.cond.i
  ret void, !dbg !2469
}

; Function Attrs: nounwind uwtable
define internal void @spatial_compose_dd137i_dy_8bit(%struct.DWTContext* %d, i32 %level, i32 %width, i32 %height, i32 %stride) #0 !dbg !2470 {
entry:
  %retval.i61 = alloca i32, align 4
  %a.addr.i62 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i62, metadata !904, metadata !87), !dbg !2471
  %amin.addr.i63 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i63, metadata !911, metadata !87), !dbg !2473
  %amax.addr.i64 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i64, metadata !913, metadata !87), !dbg !2474
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !904, metadata !87), !dbg !2475
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !911, metadata !87), !dbg !2477
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !913, metadata !87), !dbg !2478
  %d.addr = alloca %struct.DWTContext*, align 8
  %level.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  %vertical_compose_l0 = alloca void (i8*, i8*, i8*, i8*, i8*, i32)*, align 8
  %vertical_compose_h0 = alloca void (i8*, i8*, i8*, i8*, i8*, i32)*, align 8
  %cs = alloca %struct.DWTCompose*, align 8
  %i = alloca i32, align 4
  %y = alloca i32, align 4
  %b = alloca [10 x i8*], align 16
  store %struct.DWTContext* %d, %struct.DWTContext** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTContext** %d.addr, metadata !2479, metadata !87), !dbg !2480
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !2481, metadata !87), !dbg !2482
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !2483, metadata !87), !dbg !2484
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !2485, metadata !87), !dbg !2486
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !2487, metadata !87), !dbg !2488
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i8*, i8*, i32)** %vertical_compose_l0, metadata !2489, metadata !87), !dbg !2490
  %0 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !2491
  %vertical_compose_l01 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %0, i32 0, i32 8, !dbg !2492
  %1 = load void ()*, void ()** %vertical_compose_l01, align 8, !dbg !2492
  %2 = bitcast void ()* %1 to i8*, !dbg !2493
  %3 = bitcast i8* %2 to void (i8*, i8*, i8*, i8*, i8*, i32)*, !dbg !2493
  store void (i8*, i8*, i8*, i8*, i8*, i32)* %3, void (i8*, i8*, i8*, i8*, i8*, i32)** %vertical_compose_l0, align 8, !dbg !2490
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i8*, i8*, i32)** %vertical_compose_h0, metadata !2494, metadata !87), !dbg !2495
  %4 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !2496
  %vertical_compose_h02 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %4, i32 0, i32 9, !dbg !2497
  %5 = load void ()*, void ()** %vertical_compose_h02, align 8, !dbg !2497
  %6 = bitcast void ()* %5 to i8*, !dbg !2498
  %7 = bitcast i8* %6 to void (i8*, i8*, i8*, i8*, i8*, i32)*, !dbg !2498
  store void (i8*, i8*, i8*, i8*, i8*, i32)* %7, void (i8*, i8*, i8*, i8*, i8*, i32)** %vertical_compose_h0, align 8, !dbg !2495
  call void @llvm.dbg.declare(metadata %struct.DWTCompose** %cs, metadata !2499, metadata !87), !dbg !2500
  %8 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !2501
  %cs3 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %8, i32 0, i32 14, !dbg !2502
  %arraydecay = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs3, i32 0, i32 0, !dbg !2501
  %9 = load i32, i32* %level.addr, align 4, !dbg !2503
  %idx.ext = sext i32 %9 to i64, !dbg !2504
  %add.ptr = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arraydecay, i64 %idx.ext, !dbg !2504
  store %struct.DWTCompose* %add.ptr, %struct.DWTCompose** %cs, align 8, !dbg !2500
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2505, metadata !87), !dbg !2506
  call void @llvm.dbg.declare(metadata i32* %y, metadata !2507, metadata !87), !dbg !2508
  %10 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !2509
  %y4 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %10, i32 0, i32 1, !dbg !2510
  %11 = load i32, i32* %y4, align 8, !dbg !2510
  store i32 %11, i32* %y, align 4, !dbg !2508
  call void @llvm.dbg.declare(metadata [10 x i8*]* %b, metadata !2511, metadata !87), !dbg !2515
  store i32 0, i32* %i, align 4, !dbg !2516
  br label %for.cond, !dbg !2518

for.cond:                                         ; preds = %for.inc, %entry
  %12 = load i32, i32* %i, align 4, !dbg !2519
  %cmp = icmp slt i32 %12, 8, !dbg !2522
  br i1 %cmp, label %for.body, label %for.end, !dbg !2523

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %i, align 4, !dbg !2524
  %idxprom = sext i32 %13 to i64, !dbg !2525
  %14 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !2525
  %b5 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %14, i32 0, i32 0, !dbg !2526
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %b5, i64 0, i64 %idxprom, !dbg !2525
  %15 = load i8*, i8** %arrayidx, align 8, !dbg !2525
  %16 = load i32, i32* %i, align 4, !dbg !2527
  %idxprom6 = sext i32 %16 to i64, !dbg !2528
  %arrayidx7 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 %idxprom6, !dbg !2528
  store i8* %15, i8** %arrayidx7, align 8, !dbg !2529
  br label %for.inc, !dbg !2528

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !2530
  %inc = add nsw i32 %17, 1, !dbg !2530
  store i32 %inc, i32* %i, align 4, !dbg !2530
  br label %for.cond, !dbg !2532, !llvm.loop !2533

for.end:                                          ; preds = %for.cond
  %18 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !2535
  %buffer = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %18, i32 0, i32 0, !dbg !2536
  %19 = load i8*, i8** %buffer, align 8, !dbg !2536
  %20 = load i32, i32* %y, align 4, !dbg !2537
  %add = add nsw i32 %20, 7, !dbg !2538
  %21 = load i32, i32* %height.addr, align 4, !dbg !2539
  %sub = sub nsw i32 %21, 2, !dbg !2540
  store i32 %add, i32* %a.addr.i, align 4, !dbg !2541
  store i32 0, i32* %amin.addr.i, align 4, !dbg !2541
  store i32 %sub, i32* %amax.addr.i, align 4, !dbg !2541
  %22 = load i32, i32* %a.addr.i, align 4, !dbg !2542
  %23 = load i32, i32* %amin.addr.i, align 4, !dbg !2543
  %cmp.i = icmp slt i32 %22, %23, !dbg !2544
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !2545

if.then.i:                                        ; preds = %for.end
  %24 = load i32, i32* %amin.addr.i, align 4, !dbg !2546
  store i32 %24, i32* %retval.i, align 4, !dbg !2547
  br label %av_clip_c.exit, !dbg !2547

if.else.i:                                        ; preds = %for.end
  %25 = load i32, i32* %a.addr.i, align 4, !dbg !2548
  %26 = load i32, i32* %amax.addr.i, align 4, !dbg !2549
  %cmp1.i = icmp sgt i32 %25, %26, !dbg !2550
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !2551

if.then2.i:                                       ; preds = %if.else.i
  %27 = load i32, i32* %amax.addr.i, align 4, !dbg !2552
  store i32 %27, i32* %retval.i, align 4, !dbg !2553
  br label %av_clip_c.exit, !dbg !2553

if.else3.i:                                       ; preds = %if.else.i
  %28 = load i32, i32* %a.addr.i, align 4, !dbg !2554
  store i32 %28, i32* %retval.i, align 4, !dbg !2555
  br label %av_clip_c.exit, !dbg !2555

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %29 = load i32, i32* %retval.i, align 4, !dbg !2556
  %30 = load i32, i32* %stride.addr, align 4, !dbg !2557
  %mul = mul nsw i32 %29, %30, !dbg !2558
  %idx.ext8 = sext i32 %mul to i64, !dbg !2559
  %add.ptr9 = getelementptr inbounds i8, i8* %19, i64 %idx.ext8, !dbg !2559
  %arrayidx10 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 8, !dbg !2560
  store i8* %add.ptr9, i8** %arrayidx10, align 16, !dbg !2561
  %31 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !2562
  %buffer11 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %31, i32 0, i32 0, !dbg !2563
  %32 = load i8*, i8** %buffer11, align 8, !dbg !2563
  %33 = load i32, i32* %y, align 4, !dbg !2564
  %add12 = add nsw i32 %33, 8, !dbg !2565
  %34 = load i32, i32* %height.addr, align 4, !dbg !2566
  %sub13 = sub nsw i32 %34, 1, !dbg !2567
  store i32 %add12, i32* %a.addr.i62, align 4, !dbg !2568
  store i32 1, i32* %amin.addr.i63, align 4, !dbg !2568
  store i32 %sub13, i32* %amax.addr.i64, align 4, !dbg !2568
  %35 = load i32, i32* %a.addr.i62, align 4, !dbg !2569
  %36 = load i32, i32* %amin.addr.i63, align 4, !dbg !2570
  %cmp.i65 = icmp slt i32 %35, %36, !dbg !2571
  br i1 %cmp.i65, label %if.then.i66, label %if.else.i68, !dbg !2572

if.then.i66:                                      ; preds = %av_clip_c.exit
  %37 = load i32, i32* %amin.addr.i63, align 4, !dbg !2573
  store i32 %37, i32* %retval.i61, align 4, !dbg !2574
  br label %av_clip_c.exit71, !dbg !2574

if.else.i68:                                      ; preds = %av_clip_c.exit
  %38 = load i32, i32* %a.addr.i62, align 4, !dbg !2575
  %39 = load i32, i32* %amax.addr.i64, align 4, !dbg !2576
  %cmp1.i67 = icmp sgt i32 %38, %39, !dbg !2577
  br i1 %cmp1.i67, label %if.then2.i69, label %if.else3.i70, !dbg !2578

if.then2.i69:                                     ; preds = %if.else.i68
  %40 = load i32, i32* %amax.addr.i64, align 4, !dbg !2579
  store i32 %40, i32* %retval.i61, align 4, !dbg !2580
  br label %av_clip_c.exit71, !dbg !2580

if.else3.i70:                                     ; preds = %if.else.i68
  %41 = load i32, i32* %a.addr.i62, align 4, !dbg !2581
  store i32 %41, i32* %retval.i61, align 4, !dbg !2582
  br label %av_clip_c.exit71, !dbg !2582

av_clip_c.exit71:                                 ; preds = %if.then.i66, %if.then2.i69, %if.else3.i70
  %42 = load i32, i32* %retval.i61, align 4, !dbg !2583
  %43 = load i32, i32* %stride.addr, align 4, !dbg !2584
  %mul15 = mul nsw i32 %42, %43, !dbg !2585
  %idx.ext16 = sext i32 %mul15 to i64, !dbg !2586
  %add.ptr17 = getelementptr inbounds i8, i8* %32, i64 %idx.ext16, !dbg !2586
  %arrayidx18 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 9, !dbg !2587
  store i8* %add.ptr17, i8** %arrayidx18, align 8, !dbg !2588
  %44 = load i32, i32* %y, align 4, !dbg !2589
  %add19 = add nsw i32 %44, 5, !dbg !2591
  %45 = load i32, i32* %height.addr, align 4, !dbg !2592
  %cmp20 = icmp ult i32 %add19, %45, !dbg !2593
  br i1 %cmp20, label %if.then, label %if.end, !dbg !2594

if.then:                                          ; preds = %av_clip_c.exit71
  %46 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %vertical_compose_l0, align 8, !dbg !2595
  %arrayidx21 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 3, !dbg !2597
  %47 = load i8*, i8** %arrayidx21, align 8, !dbg !2597
  %arrayidx22 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 5, !dbg !2598
  %48 = load i8*, i8** %arrayidx22, align 8, !dbg !2598
  %arrayidx23 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 6, !dbg !2599
  %49 = load i8*, i8** %arrayidx23, align 16, !dbg !2599
  %arrayidx24 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 7, !dbg !2600
  %50 = load i8*, i8** %arrayidx24, align 8, !dbg !2600
  %arrayidx25 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 9, !dbg !2601
  %51 = load i8*, i8** %arrayidx25, align 8, !dbg !2601
  %52 = load i32, i32* %width.addr, align 4, !dbg !2602
  call void %46(i8* %47, i8* %48, i8* %49, i8* %50, i8* %51, i32 %52), !dbg !2595
  br label %if.end, !dbg !2595

if.end:                                           ; preds = %if.then, %av_clip_c.exit71
  %53 = load i32, i32* %y, align 4, !dbg !2603
  %add26 = add nsw i32 %53, 1, !dbg !2605
  %54 = load i32, i32* %height.addr, align 4, !dbg !2606
  %cmp27 = icmp ult i32 %add26, %54, !dbg !2607
  br i1 %cmp27, label %if.then28, label %if.end34, !dbg !2608

if.then28:                                        ; preds = %if.end
  %55 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %vertical_compose_h0, align 8, !dbg !2609
  %arrayidx29 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 0, !dbg !2611
  %56 = load i8*, i8** %arrayidx29, align 16, !dbg !2611
  %arrayidx30 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 2, !dbg !2612
  %57 = load i8*, i8** %arrayidx30, align 16, !dbg !2612
  %arrayidx31 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 3, !dbg !2613
  %58 = load i8*, i8** %arrayidx31, align 8, !dbg !2613
  %arrayidx32 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 4, !dbg !2614
  %59 = load i8*, i8** %arrayidx32, align 16, !dbg !2614
  %arrayidx33 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 6, !dbg !2615
  %60 = load i8*, i8** %arrayidx33, align 16, !dbg !2615
  %61 = load i32, i32* %width.addr, align 4, !dbg !2616
  call void %55(i8* %56, i8* %57, i8* %58, i8* %59, i8* %60, i32 %61), !dbg !2609
  br label %if.end34, !dbg !2609

if.end34:                                         ; preds = %if.then28, %if.end
  %62 = load i32, i32* %y, align 4, !dbg !2617
  %sub35 = sub nsw i32 %62, 1, !dbg !2619
  %63 = load i32, i32* %height.addr, align 4, !dbg !2620
  %cmp36 = icmp ult i32 %sub35, %63, !dbg !2621
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !2622

if.then37:                                        ; preds = %if.end34
  %64 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !2623
  %horizontal_compose = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %64, i32 0, i32 13, !dbg !2625
  %65 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %horizontal_compose, align 8, !dbg !2625
  %arrayidx38 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 0, !dbg !2626
  %66 = load i8*, i8** %arrayidx38, align 16, !dbg !2626
  %67 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !2627
  %temp = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %67, i32 0, i32 1, !dbg !2628
  %68 = load i8*, i8** %temp, align 8, !dbg !2628
  %69 = load i32, i32* %width.addr, align 4, !dbg !2629
  call void %65(i8* %66, i8* %68, i32 %69), !dbg !2623
  br label %if.end39, !dbg !2623

if.end39:                                         ; preds = %if.then37, %if.end34
  %70 = load i32, i32* %y, align 4, !dbg !2630
  %add40 = add nsw i32 %70, 0, !dbg !2632
  %71 = load i32, i32* %height.addr, align 4, !dbg !2633
  %cmp41 = icmp ult i32 %add40, %71, !dbg !2634
  br i1 %cmp41, label %if.then42, label %if.end46, !dbg !2635

if.then42:                                        ; preds = %if.end39
  %72 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !2636
  %horizontal_compose43 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %72, i32 0, i32 13, !dbg !2638
  %73 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %horizontal_compose43, align 8, !dbg !2638
  %arrayidx44 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 1, !dbg !2639
  %74 = load i8*, i8** %arrayidx44, align 8, !dbg !2639
  %75 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !2640
  %temp45 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %75, i32 0, i32 1, !dbg !2641
  %76 = load i8*, i8** %temp45, align 8, !dbg !2641
  %77 = load i32, i32* %width.addr, align 4, !dbg !2642
  call void %73(i8* %74, i8* %76, i32 %77), !dbg !2636
  br label %if.end46, !dbg !2636

if.end46:                                         ; preds = %if.then42, %if.end39
  store i32 0, i32* %i, align 4, !dbg !2643
  br label %for.cond47, !dbg !2645

for.cond47:                                       ; preds = %for.inc56, %if.end46
  %78 = load i32, i32* %i, align 4, !dbg !2646
  %cmp48 = icmp slt i32 %78, 8, !dbg !2649
  br i1 %cmp48, label %for.body49, label %for.end58, !dbg !2650

for.body49:                                       ; preds = %for.cond47
  %79 = load i32, i32* %i, align 4, !dbg !2651
  %add50 = add nsw i32 %79, 2, !dbg !2652
  %idxprom51 = sext i32 %add50 to i64, !dbg !2653
  %arrayidx52 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 %idxprom51, !dbg !2653
  %80 = load i8*, i8** %arrayidx52, align 8, !dbg !2653
  %81 = load i32, i32* %i, align 4, !dbg !2654
  %idxprom53 = sext i32 %81 to i64, !dbg !2655
  %82 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !2655
  %b54 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %82, i32 0, i32 0, !dbg !2656
  %arrayidx55 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b54, i64 0, i64 %idxprom53, !dbg !2655
  store i8* %80, i8** %arrayidx55, align 8, !dbg !2657
  br label %for.inc56, !dbg !2655

for.inc56:                                        ; preds = %for.body49
  %83 = load i32, i32* %i, align 4, !dbg !2658
  %inc57 = add nsw i32 %83, 1, !dbg !2658
  store i32 %inc57, i32* %i, align 4, !dbg !2658
  br label %for.cond47, !dbg !2660, !llvm.loop !2661

for.end58:                                        ; preds = %for.cond47
  %84 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !2663
  %y59 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %84, i32 0, i32 1, !dbg !2664
  %85 = load i32, i32* %y59, align 8, !dbg !2665
  %add60 = add nsw i32 %85, 2, !dbg !2665
  store i32 %add60, i32* %y59, align 8, !dbg !2665
  ret void, !dbg !2666
}

; Function Attrs: nounwind uwtable
define internal void @vertical_compose_dd137iL0_8bit(i8* %_b0, i8* %_b1, i8* %_b2, i8* %_b3, i8* %_b4, i32 %width) #0 !dbg !2667 {
entry:
  %_b0.addr = alloca i8*, align 8
  %_b1.addr = alloca i8*, align 8
  %_b2.addr = alloca i8*, align 8
  %_b3.addr = alloca i8*, align 8
  %_b4.addr = alloca i8*, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %b0 = alloca i16*, align 8
  %b1 = alloca i16*, align 8
  %b2 = alloca i16*, align 8
  %b3 = alloca i16*, align 8
  %b4 = alloca i16*, align 8
  store i8* %_b0, i8** %_b0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b0.addr, metadata !2668, metadata !87), !dbg !2669
  store i8* %_b1, i8** %_b1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b1.addr, metadata !2670, metadata !87), !dbg !2671
  store i8* %_b2, i8** %_b2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b2.addr, metadata !2672, metadata !87), !dbg !2673
  store i8* %_b3, i8** %_b3.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b3.addr, metadata !2674, metadata !87), !dbg !2675
  store i8* %_b4, i8** %_b4.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b4.addr, metadata !2676, metadata !87), !dbg !2677
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !2678, metadata !87), !dbg !2679
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2680, metadata !87), !dbg !2681
  call void @llvm.dbg.declare(metadata i16** %b0, metadata !2682, metadata !87), !dbg !2683
  %0 = load i8*, i8** %_b0.addr, align 8, !dbg !2684
  %1 = bitcast i8* %0 to i16*, !dbg !2685
  store i16* %1, i16** %b0, align 8, !dbg !2683
  call void @llvm.dbg.declare(metadata i16** %b1, metadata !2686, metadata !87), !dbg !2687
  %2 = load i8*, i8** %_b1.addr, align 8, !dbg !2688
  %3 = bitcast i8* %2 to i16*, !dbg !2689
  store i16* %3, i16** %b1, align 8, !dbg !2687
  call void @llvm.dbg.declare(metadata i16** %b2, metadata !2690, metadata !87), !dbg !2691
  %4 = load i8*, i8** %_b2.addr, align 8, !dbg !2692
  %5 = bitcast i8* %4 to i16*, !dbg !2693
  store i16* %5, i16** %b2, align 8, !dbg !2691
  call void @llvm.dbg.declare(metadata i16** %b3, metadata !2694, metadata !87), !dbg !2695
  %6 = load i8*, i8** %_b3.addr, align 8, !dbg !2696
  %7 = bitcast i8* %6 to i16*, !dbg !2697
  store i16* %7, i16** %b3, align 8, !dbg !2695
  call void @llvm.dbg.declare(metadata i16** %b4, metadata !2698, metadata !87), !dbg !2699
  %8 = load i8*, i8** %_b4.addr, align 8, !dbg !2700
  %9 = bitcast i8* %8 to i16*, !dbg !2701
  store i16* %9, i16** %b4, align 8, !dbg !2699
  store i32 0, i32* %i, align 4, !dbg !2702
  br label %for.cond, !dbg !2704

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load i32, i32* %i, align 4, !dbg !2705
  %11 = load i32, i32* %width.addr, align 4, !dbg !2708
  %cmp = icmp slt i32 %10, %11, !dbg !2709
  br i1 %cmp, label %for.body, label %for.end, !dbg !2710

for.body:                                         ; preds = %for.cond
  %12 = load i32, i32* %i, align 4, !dbg !2711
  %idxprom = sext i32 %12 to i64, !dbg !2713
  %13 = load i16*, i16** %b2, align 8, !dbg !2713
  %arrayidx = getelementptr inbounds i16, i16* %13, i64 %idxprom, !dbg !2713
  %14 = load i16, i16* %arrayidx, align 2, !dbg !2713
  %conv = sext i16 %14 to i32, !dbg !2714
  %15 = load i32, i32* %i, align 4, !dbg !2715
  %idxprom1 = sext i32 %15 to i64, !dbg !2716
  %16 = load i16*, i16** %b1, align 8, !dbg !2716
  %arrayidx2 = getelementptr inbounds i16, i16* %16, i64 %idxprom1, !dbg !2716
  %17 = load i16, i16* %arrayidx2, align 2, !dbg !2716
  %conv3 = sext i16 %17 to i32, !dbg !2716
  %mul = mul i32 9, %conv3, !dbg !2717
  %18 = load i32, i32* %i, align 4, !dbg !2718
  %idxprom4 = sext i32 %18 to i64, !dbg !2719
  %19 = load i16*, i16** %b3, align 8, !dbg !2719
  %arrayidx5 = getelementptr inbounds i16, i16* %19, i64 %idxprom4, !dbg !2719
  %20 = load i16, i16* %arrayidx5, align 2, !dbg !2719
  %conv6 = sext i16 %20 to i32, !dbg !2719
  %mul7 = mul i32 9, %conv6, !dbg !2720
  %add = add i32 %mul, %mul7, !dbg !2721
  %21 = load i32, i32* %i, align 4, !dbg !2722
  %idxprom8 = sext i32 %21 to i64, !dbg !2723
  %22 = load i16*, i16** %b4, align 8, !dbg !2723
  %arrayidx9 = getelementptr inbounds i16, i16* %22, i64 %idxprom8, !dbg !2723
  %23 = load i16, i16* %arrayidx9, align 2, !dbg !2723
  %conv10 = sext i16 %23 to i32, !dbg !2723
  %sub = sub i32 %add, %conv10, !dbg !2724
  %24 = load i32, i32* %i, align 4, !dbg !2725
  %idxprom11 = sext i32 %24 to i64, !dbg !2726
  %25 = load i16*, i16** %b0, align 8, !dbg !2726
  %arrayidx12 = getelementptr inbounds i16, i16* %25, i64 %idxprom11, !dbg !2726
  %26 = load i16, i16* %arrayidx12, align 2, !dbg !2726
  %conv13 = sext i16 %26 to i32, !dbg !2726
  %sub14 = sub i32 %sub, %conv13, !dbg !2727
  %add15 = add i32 %sub14, 16, !dbg !2728
  %shr = ashr i32 %add15, 5, !dbg !2729
  %sub16 = sub i32 %conv, %shr, !dbg !2730
  %conv17 = trunc i32 %sub16 to i16, !dbg !2731
  %27 = load i32, i32* %i, align 4, !dbg !2732
  %idxprom18 = sext i32 %27 to i64, !dbg !2733
  %28 = load i16*, i16** %b2, align 8, !dbg !2733
  %arrayidx19 = getelementptr inbounds i16, i16* %28, i64 %idxprom18, !dbg !2733
  store i16 %conv17, i16* %arrayidx19, align 2, !dbg !2734
  br label %for.inc, !dbg !2735

for.inc:                                          ; preds = %for.body
  %29 = load i32, i32* %i, align 4, !dbg !2736
  %inc = add nsw i32 %29, 1, !dbg !2736
  store i32 %inc, i32* %i, align 4, !dbg !2736
  br label %for.cond, !dbg !2738, !llvm.loop !2739

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2741
}

; Function Attrs: nounwind uwtable
define internal void @horizontal_compose_dd137i_8bit(i8* %_b, i8* %_tmp, i32 %w) #0 !dbg !2742 {
entry:
  %_b.addr = alloca i8*, align 8
  %_tmp.addr = alloca i8*, align 8
  %w.addr = alloca i32, align 4
  %w2 = alloca i32, align 4
  %x = alloca i32, align 4
  %b = alloca i16*, align 8
  %tmp = alloca i16*, align 8
  store i8* %_b, i8** %_b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b.addr, metadata !2743, metadata !87), !dbg !2744
  store i8* %_tmp, i8** %_tmp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_tmp.addr, metadata !2745, metadata !87), !dbg !2746
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !2747, metadata !87), !dbg !2748
  call void @llvm.dbg.declare(metadata i32* %w2, metadata !2749, metadata !87), !dbg !2750
  %0 = load i32, i32* %w.addr, align 4, !dbg !2751
  %shr = ashr i32 %0, 1, !dbg !2752
  store i32 %shr, i32* %w2, align 4, !dbg !2750
  call void @llvm.dbg.declare(metadata i32* %x, metadata !2753, metadata !87), !dbg !2754
  call void @llvm.dbg.declare(metadata i16** %b, metadata !2755, metadata !87), !dbg !2756
  %1 = load i8*, i8** %_b.addr, align 8, !dbg !2757
  %2 = bitcast i8* %1 to i16*, !dbg !2758
  store i16* %2, i16** %b, align 8, !dbg !2756
  call void @llvm.dbg.declare(metadata i16** %tmp, metadata !2759, metadata !87), !dbg !2760
  %3 = load i8*, i8** %_tmp.addr, align 8, !dbg !2761
  %4 = bitcast i8* %3 to i16*, !dbg !2762
  store i16* %4, i16** %tmp, align 8, !dbg !2760
  %5 = load i16*, i16** %b, align 8, !dbg !2763
  %arrayidx = getelementptr inbounds i16, i16* %5, i64 0, !dbg !2763
  %6 = load i16, i16* %arrayidx, align 2, !dbg !2763
  %conv = sext i16 %6 to i32, !dbg !2764
  %7 = load i32, i32* %w2, align 4, !dbg !2765
  %idxprom = sext i32 %7 to i64, !dbg !2766
  %8 = load i16*, i16** %b, align 8, !dbg !2766
  %arrayidx1 = getelementptr inbounds i16, i16* %8, i64 %idxprom, !dbg !2766
  %9 = load i16, i16* %arrayidx1, align 2, !dbg !2766
  %conv2 = sext i16 %9 to i32, !dbg !2766
  %mul = mul i32 9, %conv2, !dbg !2767
  %10 = load i32, i32* %w2, align 4, !dbg !2768
  %idxprom3 = sext i32 %10 to i64, !dbg !2769
  %11 = load i16*, i16** %b, align 8, !dbg !2769
  %arrayidx4 = getelementptr inbounds i16, i16* %11, i64 %idxprom3, !dbg !2769
  %12 = load i16, i16* %arrayidx4, align 2, !dbg !2769
  %conv5 = sext i16 %12 to i32, !dbg !2769
  %mul6 = mul i32 9, %conv5, !dbg !2770
  %add = add i32 %mul, %mul6, !dbg !2771
  %13 = load i32, i32* %w2, align 4, !dbg !2772
  %add7 = add nsw i32 %13, 1, !dbg !2773
  %idxprom8 = sext i32 %add7 to i64, !dbg !2774
  %14 = load i16*, i16** %b, align 8, !dbg !2774
  %arrayidx9 = getelementptr inbounds i16, i16* %14, i64 %idxprom8, !dbg !2774
  %15 = load i16, i16* %arrayidx9, align 2, !dbg !2774
  %conv10 = sext i16 %15 to i32, !dbg !2774
  %sub = sub i32 %add, %conv10, !dbg !2775
  %16 = load i32, i32* %w2, align 4, !dbg !2776
  %idxprom11 = sext i32 %16 to i64, !dbg !2777
  %17 = load i16*, i16** %b, align 8, !dbg !2777
  %arrayidx12 = getelementptr inbounds i16, i16* %17, i64 %idxprom11, !dbg !2777
  %18 = load i16, i16* %arrayidx12, align 2, !dbg !2777
  %conv13 = sext i16 %18 to i32, !dbg !2777
  %sub14 = sub i32 %sub, %conv13, !dbg !2778
  %add15 = add i32 %sub14, 16, !dbg !2779
  %shr16 = ashr i32 %add15, 5, !dbg !2780
  %sub17 = sub i32 %conv, %shr16, !dbg !2781
  %conv18 = trunc i32 %sub17 to i16, !dbg !2782
  %19 = load i16*, i16** %tmp, align 8, !dbg !2783
  %arrayidx19 = getelementptr inbounds i16, i16* %19, i64 0, !dbg !2783
  store i16 %conv18, i16* %arrayidx19, align 2, !dbg !2784
  %20 = load i16*, i16** %b, align 8, !dbg !2785
  %arrayidx20 = getelementptr inbounds i16, i16* %20, i64 1, !dbg !2785
  %21 = load i16, i16* %arrayidx20, align 2, !dbg !2785
  %conv21 = sext i16 %21 to i32, !dbg !2786
  %22 = load i32, i32* %w2, align 4, !dbg !2787
  %idxprom22 = sext i32 %22 to i64, !dbg !2788
  %23 = load i16*, i16** %b, align 8, !dbg !2788
  %arrayidx23 = getelementptr inbounds i16, i16* %23, i64 %idxprom22, !dbg !2788
  %24 = load i16, i16* %arrayidx23, align 2, !dbg !2788
  %conv24 = sext i16 %24 to i32, !dbg !2788
  %mul25 = mul i32 9, %conv24, !dbg !2789
  %25 = load i32, i32* %w2, align 4, !dbg !2790
  %add26 = add nsw i32 %25, 1, !dbg !2791
  %idxprom27 = sext i32 %add26 to i64, !dbg !2792
  %26 = load i16*, i16** %b, align 8, !dbg !2792
  %arrayidx28 = getelementptr inbounds i16, i16* %26, i64 %idxprom27, !dbg !2792
  %27 = load i16, i16* %arrayidx28, align 2, !dbg !2792
  %conv29 = sext i16 %27 to i32, !dbg !2792
  %mul30 = mul i32 9, %conv29, !dbg !2793
  %add31 = add i32 %mul25, %mul30, !dbg !2794
  %28 = load i32, i32* %w2, align 4, !dbg !2795
  %add32 = add nsw i32 %28, 2, !dbg !2796
  %idxprom33 = sext i32 %add32 to i64, !dbg !2797
  %29 = load i16*, i16** %b, align 8, !dbg !2797
  %arrayidx34 = getelementptr inbounds i16, i16* %29, i64 %idxprom33, !dbg !2797
  %30 = load i16, i16* %arrayidx34, align 2, !dbg !2797
  %conv35 = sext i16 %30 to i32, !dbg !2797
  %sub36 = sub i32 %add31, %conv35, !dbg !2798
  %31 = load i32, i32* %w2, align 4, !dbg !2799
  %idxprom37 = sext i32 %31 to i64, !dbg !2800
  %32 = load i16*, i16** %b, align 8, !dbg !2800
  %arrayidx38 = getelementptr inbounds i16, i16* %32, i64 %idxprom37, !dbg !2800
  %33 = load i16, i16* %arrayidx38, align 2, !dbg !2800
  %conv39 = sext i16 %33 to i32, !dbg !2800
  %sub40 = sub i32 %sub36, %conv39, !dbg !2801
  %add41 = add i32 %sub40, 16, !dbg !2802
  %shr42 = ashr i32 %add41, 5, !dbg !2803
  %sub43 = sub i32 %conv21, %shr42, !dbg !2804
  %conv44 = trunc i32 %sub43 to i16, !dbg !2805
  %34 = load i16*, i16** %tmp, align 8, !dbg !2806
  %arrayidx45 = getelementptr inbounds i16, i16* %34, i64 1, !dbg !2806
  store i16 %conv44, i16* %arrayidx45, align 2, !dbg !2807
  store i32 2, i32* %x, align 4, !dbg !2808
  br label %for.cond, !dbg !2810

for.cond:                                         ; preds = %for.inc, %entry
  %35 = load i32, i32* %x, align 4, !dbg !2811
  %36 = load i32, i32* %w2, align 4, !dbg !2814
  %sub46 = sub nsw i32 %36, 1, !dbg !2815
  %cmp = icmp slt i32 %35, %sub46, !dbg !2816
  br i1 %cmp, label %for.body, label %for.end, !dbg !2817

for.body:                                         ; preds = %for.cond
  %37 = load i32, i32* %x, align 4, !dbg !2818
  %idxprom48 = sext i32 %37 to i64, !dbg !2819
  %38 = load i16*, i16** %b, align 8, !dbg !2819
  %arrayidx49 = getelementptr inbounds i16, i16* %38, i64 %idxprom48, !dbg !2819
  %39 = load i16, i16* %arrayidx49, align 2, !dbg !2819
  %conv50 = sext i16 %39 to i32, !dbg !2820
  %40 = load i32, i32* %x, align 4, !dbg !2821
  %41 = load i32, i32* %w2, align 4, !dbg !2822
  %add51 = add nsw i32 %40, %41, !dbg !2823
  %sub52 = sub nsw i32 %add51, 1, !dbg !2824
  %idxprom53 = sext i32 %sub52 to i64, !dbg !2825
  %42 = load i16*, i16** %b, align 8, !dbg !2825
  %arrayidx54 = getelementptr inbounds i16, i16* %42, i64 %idxprom53, !dbg !2825
  %43 = load i16, i16* %arrayidx54, align 2, !dbg !2825
  %conv55 = sext i16 %43 to i32, !dbg !2825
  %mul56 = mul i32 9, %conv55, !dbg !2826
  %44 = load i32, i32* %x, align 4, !dbg !2827
  %45 = load i32, i32* %w2, align 4, !dbg !2828
  %add57 = add nsw i32 %44, %45, !dbg !2829
  %idxprom58 = sext i32 %add57 to i64, !dbg !2830
  %46 = load i16*, i16** %b, align 8, !dbg !2830
  %arrayidx59 = getelementptr inbounds i16, i16* %46, i64 %idxprom58, !dbg !2830
  %47 = load i16, i16* %arrayidx59, align 2, !dbg !2830
  %conv60 = sext i16 %47 to i32, !dbg !2830
  %mul61 = mul i32 9, %conv60, !dbg !2831
  %add62 = add i32 %mul56, %mul61, !dbg !2832
  %48 = load i32, i32* %x, align 4, !dbg !2833
  %49 = load i32, i32* %w2, align 4, !dbg !2834
  %add63 = add nsw i32 %48, %49, !dbg !2835
  %add64 = add nsw i32 %add63, 1, !dbg !2836
  %idxprom65 = sext i32 %add64 to i64, !dbg !2837
  %50 = load i16*, i16** %b, align 8, !dbg !2837
  %arrayidx66 = getelementptr inbounds i16, i16* %50, i64 %idxprom65, !dbg !2837
  %51 = load i16, i16* %arrayidx66, align 2, !dbg !2837
  %conv67 = sext i16 %51 to i32, !dbg !2837
  %sub68 = sub i32 %add62, %conv67, !dbg !2838
  %52 = load i32, i32* %x, align 4, !dbg !2839
  %53 = load i32, i32* %w2, align 4, !dbg !2840
  %add69 = add nsw i32 %52, %53, !dbg !2841
  %sub70 = sub nsw i32 %add69, 2, !dbg !2842
  %idxprom71 = sext i32 %sub70 to i64, !dbg !2843
  %54 = load i16*, i16** %b, align 8, !dbg !2843
  %arrayidx72 = getelementptr inbounds i16, i16* %54, i64 %idxprom71, !dbg !2843
  %55 = load i16, i16* %arrayidx72, align 2, !dbg !2843
  %conv73 = sext i16 %55 to i32, !dbg !2843
  %sub74 = sub i32 %sub68, %conv73, !dbg !2844
  %add75 = add i32 %sub74, 16, !dbg !2845
  %shr76 = ashr i32 %add75, 5, !dbg !2846
  %sub77 = sub i32 %conv50, %shr76, !dbg !2847
  %conv78 = trunc i32 %sub77 to i16, !dbg !2848
  %56 = load i32, i32* %x, align 4, !dbg !2849
  %idxprom79 = sext i32 %56 to i64, !dbg !2850
  %57 = load i16*, i16** %tmp, align 8, !dbg !2850
  %arrayidx80 = getelementptr inbounds i16, i16* %57, i64 %idxprom79, !dbg !2850
  store i16 %conv78, i16* %arrayidx80, align 2, !dbg !2851
  br label %for.inc, !dbg !2850

for.inc:                                          ; preds = %for.body
  %58 = load i32, i32* %x, align 4, !dbg !2852
  %inc = add nsw i32 %58, 1, !dbg !2852
  store i32 %inc, i32* %x, align 4, !dbg !2852
  br label %for.cond, !dbg !2854, !llvm.loop !2855

for.end:                                          ; preds = %for.cond
  %59 = load i32, i32* %w2, align 4, !dbg !2857
  %sub81 = sub nsw i32 %59, 1, !dbg !2858
  %idxprom82 = sext i32 %sub81 to i64, !dbg !2859
  %60 = load i16*, i16** %b, align 8, !dbg !2859
  %arrayidx83 = getelementptr inbounds i16, i16* %60, i64 %idxprom82, !dbg !2859
  %61 = load i16, i16* %arrayidx83, align 2, !dbg !2859
  %conv84 = sext i16 %61 to i32, !dbg !2860
  %62 = load i32, i32* %w.addr, align 4, !dbg !2861
  %sub85 = sub nsw i32 %62, 2, !dbg !2862
  %idxprom86 = sext i32 %sub85 to i64, !dbg !2863
  %63 = load i16*, i16** %b, align 8, !dbg !2863
  %arrayidx87 = getelementptr inbounds i16, i16* %63, i64 %idxprom86, !dbg !2863
  %64 = load i16, i16* %arrayidx87, align 2, !dbg !2863
  %conv88 = sext i16 %64 to i32, !dbg !2863
  %mul89 = mul i32 9, %conv88, !dbg !2864
  %65 = load i32, i32* %w.addr, align 4, !dbg !2865
  %sub90 = sub nsw i32 %65, 1, !dbg !2866
  %idxprom91 = sext i32 %sub90 to i64, !dbg !2867
  %66 = load i16*, i16** %b, align 8, !dbg !2867
  %arrayidx92 = getelementptr inbounds i16, i16* %66, i64 %idxprom91, !dbg !2867
  %67 = load i16, i16* %arrayidx92, align 2, !dbg !2867
  %conv93 = sext i16 %67 to i32, !dbg !2867
  %mul94 = mul i32 9, %conv93, !dbg !2868
  %add95 = add i32 %mul89, %mul94, !dbg !2869
  %68 = load i32, i32* %w.addr, align 4, !dbg !2870
  %sub96 = sub nsw i32 %68, 1, !dbg !2871
  %idxprom97 = sext i32 %sub96 to i64, !dbg !2872
  %69 = load i16*, i16** %b, align 8, !dbg !2872
  %arrayidx98 = getelementptr inbounds i16, i16* %69, i64 %idxprom97, !dbg !2872
  %70 = load i16, i16* %arrayidx98, align 2, !dbg !2872
  %conv99 = sext i16 %70 to i32, !dbg !2872
  %sub100 = sub i32 %add95, %conv99, !dbg !2873
  %71 = load i32, i32* %w.addr, align 4, !dbg !2874
  %sub101 = sub nsw i32 %71, 3, !dbg !2875
  %idxprom102 = sext i32 %sub101 to i64, !dbg !2876
  %72 = load i16*, i16** %b, align 8, !dbg !2876
  %arrayidx103 = getelementptr inbounds i16, i16* %72, i64 %idxprom102, !dbg !2876
  %73 = load i16, i16* %arrayidx103, align 2, !dbg !2876
  %conv104 = sext i16 %73 to i32, !dbg !2876
  %sub105 = sub i32 %sub100, %conv104, !dbg !2877
  %add106 = add i32 %sub105, 16, !dbg !2878
  %shr107 = ashr i32 %add106, 5, !dbg !2879
  %sub108 = sub i32 %conv84, %shr107, !dbg !2880
  %conv109 = trunc i32 %sub108 to i16, !dbg !2881
  %74 = load i32, i32* %w2, align 4, !dbg !2882
  %sub110 = sub nsw i32 %74, 1, !dbg !2883
  %idxprom111 = sext i32 %sub110 to i64, !dbg !2884
  %75 = load i16*, i16** %tmp, align 8, !dbg !2884
  %arrayidx112 = getelementptr inbounds i16, i16* %75, i64 %idxprom111, !dbg !2884
  store i16 %conv109, i16* %arrayidx112, align 2, !dbg !2885
  %76 = load i16*, i16** %tmp, align 8, !dbg !2886
  %arrayidx113 = getelementptr inbounds i16, i16* %76, i64 0, !dbg !2886
  %77 = load i16, i16* %arrayidx113, align 2, !dbg !2886
  %78 = load i16*, i16** %tmp, align 8, !dbg !2887
  %arrayidx114 = getelementptr inbounds i16, i16* %78, i64 -1, !dbg !2887
  store i16 %77, i16* %arrayidx114, align 2, !dbg !2888
  %79 = load i32, i32* %w2, align 4, !dbg !2889
  %sub115 = sub nsw i32 %79, 1, !dbg !2890
  %idxprom116 = sext i32 %sub115 to i64, !dbg !2891
  %80 = load i16*, i16** %tmp, align 8, !dbg !2891
  %arrayidx117 = getelementptr inbounds i16, i16* %80, i64 %idxprom116, !dbg !2891
  %81 = load i16, i16* %arrayidx117, align 2, !dbg !2891
  %82 = load i32, i32* %w2, align 4, !dbg !2892
  %idxprom118 = sext i32 %82 to i64, !dbg !2893
  %83 = load i16*, i16** %tmp, align 8, !dbg !2893
  %arrayidx119 = getelementptr inbounds i16, i16* %83, i64 %idxprom118, !dbg !2893
  store i16 %81, i16* %arrayidx119, align 2, !dbg !2894
  %84 = load i32, i32* %w2, align 4, !dbg !2895
  %add120 = add nsw i32 %84, 1, !dbg !2896
  %idxprom121 = sext i32 %add120 to i64, !dbg !2897
  %85 = load i16*, i16** %tmp, align 8, !dbg !2897
  %arrayidx122 = getelementptr inbounds i16, i16* %85, i64 %idxprom121, !dbg !2897
  store i16 %81, i16* %arrayidx122, align 2, !dbg !2898
  store i32 0, i32* %x, align 4, !dbg !2899
  br label %for.cond123, !dbg !2901

for.cond123:                                      ; preds = %for.inc170, %for.end
  %86 = load i32, i32* %x, align 4, !dbg !2902
  %87 = load i32, i32* %w2, align 4, !dbg !2905
  %cmp124 = icmp slt i32 %86, %87, !dbg !2906
  br i1 %cmp124, label %for.body126, label %for.end172, !dbg !2907

for.body126:                                      ; preds = %for.cond123
  %88 = load i32, i32* %x, align 4, !dbg !2908
  %idxprom127 = sext i32 %88 to i64, !dbg !2910
  %89 = load i16*, i16** %tmp, align 8, !dbg !2910
  %arrayidx128 = getelementptr inbounds i16, i16* %89, i64 %idxprom127, !dbg !2910
  %90 = load i16, i16* %arrayidx128, align 2, !dbg !2910
  %conv129 = sext i16 %90 to i32, !dbg !2910
  %add130 = add i32 %conv129, 1, !dbg !2911
  %shr131 = ashr i32 %add130, 1, !dbg !2912
  %conv132 = trunc i32 %shr131 to i16, !dbg !2913
  %91 = load i32, i32* %x, align 4, !dbg !2914
  %mul133 = mul nsw i32 2, %91, !dbg !2915
  %idxprom134 = sext i32 %mul133 to i64, !dbg !2916
  %92 = load i16*, i16** %b, align 8, !dbg !2916
  %arrayidx135 = getelementptr inbounds i16, i16* %92, i64 %idxprom134, !dbg !2916
  store i16 %conv132, i16* %arrayidx135, align 2, !dbg !2917
  %93 = load i32, i32* %x, align 4, !dbg !2918
  %94 = load i32, i32* %w2, align 4, !dbg !2919
  %add136 = add nsw i32 %93, %94, !dbg !2920
  %idxprom137 = sext i32 %add136 to i64, !dbg !2921
  %95 = load i16*, i16** %b, align 8, !dbg !2921
  %arrayidx138 = getelementptr inbounds i16, i16* %95, i64 %idxprom137, !dbg !2921
  %96 = load i16, i16* %arrayidx138, align 2, !dbg !2921
  %conv139 = sext i16 %96 to i32, !dbg !2922
  %97 = load i32, i32* %x, align 4, !dbg !2923
  %idxprom140 = sext i32 %97 to i64, !dbg !2924
  %98 = load i16*, i16** %tmp, align 8, !dbg !2924
  %arrayidx141 = getelementptr inbounds i16, i16* %98, i64 %idxprom140, !dbg !2924
  %99 = load i16, i16* %arrayidx141, align 2, !dbg !2924
  %conv142 = sext i16 %99 to i32, !dbg !2924
  %mul143 = mul i32 9, %conv142, !dbg !2925
  %100 = load i32, i32* %x, align 4, !dbg !2926
  %add144 = add nsw i32 %100, 1, !dbg !2927
  %idxprom145 = sext i32 %add144 to i64, !dbg !2928
  %101 = load i16*, i16** %tmp, align 8, !dbg !2928
  %arrayidx146 = getelementptr inbounds i16, i16* %101, i64 %idxprom145, !dbg !2928
  %102 = load i16, i16* %arrayidx146, align 2, !dbg !2928
  %conv147 = sext i16 %102 to i32, !dbg !2928
  %mul148 = mul i32 9, %conv147, !dbg !2929
  %add149 = add i32 %mul143, %mul148, !dbg !2930
  %103 = load i32, i32* %x, align 4, !dbg !2931
  %add150 = add nsw i32 %103, 2, !dbg !2932
  %idxprom151 = sext i32 %add150 to i64, !dbg !2933
  %104 = load i16*, i16** %tmp, align 8, !dbg !2933
  %arrayidx152 = getelementptr inbounds i16, i16* %104, i64 %idxprom151, !dbg !2933
  %105 = load i16, i16* %arrayidx152, align 2, !dbg !2933
  %conv153 = sext i16 %105 to i32, !dbg !2933
  %sub154 = sub i32 %add149, %conv153, !dbg !2934
  %106 = load i32, i32* %x, align 4, !dbg !2935
  %sub155 = sub nsw i32 %106, 1, !dbg !2936
  %idxprom156 = sext i32 %sub155 to i64, !dbg !2937
  %107 = load i16*, i16** %tmp, align 8, !dbg !2937
  %arrayidx157 = getelementptr inbounds i16, i16* %107, i64 %idxprom156, !dbg !2937
  %108 = load i16, i16* %arrayidx157, align 2, !dbg !2937
  %conv158 = sext i16 %108 to i32, !dbg !2937
  %sub159 = sub i32 %sub154, %conv158, !dbg !2938
  %add160 = add i32 %sub159, 8, !dbg !2939
  %shr161 = ashr i32 %add160, 4, !dbg !2940
  %add162 = add i32 %conv139, %shr161, !dbg !2941
  %add163 = add i32 %add162, 1, !dbg !2942
  %shr164 = ashr i32 %add163, 1, !dbg !2943
  %conv165 = trunc i32 %shr164 to i16, !dbg !2944
  %109 = load i32, i32* %x, align 4, !dbg !2945
  %mul166 = mul nsw i32 2, %109, !dbg !2946
  %add167 = add nsw i32 %mul166, 1, !dbg !2947
  %idxprom168 = sext i32 %add167 to i64, !dbg !2948
  %110 = load i16*, i16** %b, align 8, !dbg !2948
  %arrayidx169 = getelementptr inbounds i16, i16* %110, i64 %idxprom168, !dbg !2948
  store i16 %conv165, i16* %arrayidx169, align 2, !dbg !2949
  br label %for.inc170, !dbg !2950

for.inc170:                                       ; preds = %for.body126
  %111 = load i32, i32* %x, align 4, !dbg !2951
  %inc171 = add nsw i32 %111, 1, !dbg !2951
  store i32 %inc171, i32* %x, align 4, !dbg !2951
  br label %for.cond123, !dbg !2953, !llvm.loop !2954

for.end172:                                       ; preds = %for.cond123
  ret void, !dbg !2956
}

; Function Attrs: nounwind uwtable
define internal void @spatial_compose_haari_dy_8bit(%struct.DWTContext* %d, i32 %level, i32 %width, i32 %height, i32 %stride) #0 !dbg !2957 {
entry:
  %d.addr = alloca %struct.DWTContext*, align 8
  %level.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  %vertical_compose = alloca void (i8*, i8*, i32)*, align 8
  %y = alloca i32, align 4
  %b0 = alloca i8*, align 8
  %b1 = alloca i8*, align 8
  store %struct.DWTContext* %d, %struct.DWTContext** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTContext** %d.addr, metadata !2958, metadata !87), !dbg !2959
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !2960, metadata !87), !dbg !2961
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !2962, metadata !87), !dbg !2963
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !2964, metadata !87), !dbg !2965
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !2966, metadata !87), !dbg !2967
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i32)** %vertical_compose, metadata !2968, metadata !87), !dbg !2970
  %0 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !2971
  %vertical_compose1 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %0, i32 0, i32 12, !dbg !2972
  %1 = load void ()*, void ()** %vertical_compose1, align 8, !dbg !2972
  %2 = bitcast void ()* %1 to i8*, !dbg !2973
  %3 = bitcast i8* %2 to void (i8*, i8*, i32)*, !dbg !2973
  store void (i8*, i8*, i32)* %3, void (i8*, i8*, i32)** %vertical_compose, align 8, !dbg !2970
  call void @llvm.dbg.declare(metadata i32* %y, metadata !2974, metadata !87), !dbg !2975
  %4 = load i32, i32* %level.addr, align 4, !dbg !2976
  %idxprom = sext i32 %4 to i64, !dbg !2977
  %5 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !2977
  %cs = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %5, i32 0, i32 14, !dbg !2978
  %arrayidx = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs, i64 0, i64 %idxprom, !dbg !2977
  %y2 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arrayidx, i32 0, i32 1, !dbg !2979
  %6 = load i32, i32* %y2, align 8, !dbg !2979
  store i32 %6, i32* %y, align 4, !dbg !2975
  call void @llvm.dbg.declare(metadata i8** %b0, metadata !2980, metadata !87), !dbg !2981
  %7 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !2982
  %buffer = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %7, i32 0, i32 0, !dbg !2983
  %8 = load i8*, i8** %buffer, align 8, !dbg !2983
  %9 = load i32, i32* %y, align 4, !dbg !2984
  %sub = sub nsw i32 %9, 1, !dbg !2985
  %10 = load i32, i32* %stride.addr, align 4, !dbg !2986
  %mul = mul nsw i32 %sub, %10, !dbg !2987
  %idx.ext = sext i32 %mul to i64, !dbg !2988
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext, !dbg !2988
  store i8* %add.ptr, i8** %b0, align 8, !dbg !2981
  call void @llvm.dbg.declare(metadata i8** %b1, metadata !2989, metadata !87), !dbg !2990
  %11 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !2991
  %buffer3 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %11, i32 0, i32 0, !dbg !2992
  %12 = load i8*, i8** %buffer3, align 8, !dbg !2992
  %13 = load i32, i32* %y, align 4, !dbg !2993
  %14 = load i32, i32* %stride.addr, align 4, !dbg !2994
  %mul4 = mul nsw i32 %13, %14, !dbg !2995
  %idx.ext5 = sext i32 %mul4 to i64, !dbg !2996
  %add.ptr6 = getelementptr inbounds i8, i8* %12, i64 %idx.ext5, !dbg !2996
  store i8* %add.ptr6, i8** %b1, align 8, !dbg !2990
  %15 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %vertical_compose, align 8, !dbg !2997
  %16 = load i8*, i8** %b0, align 8, !dbg !2998
  %17 = load i8*, i8** %b1, align 8, !dbg !2999
  %18 = load i32, i32* %width.addr, align 4, !dbg !3000
  call void %15(i8* %16, i8* %17, i32 %18), !dbg !2997
  %19 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !3001
  %horizontal_compose = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %19, i32 0, i32 13, !dbg !3002
  %20 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %horizontal_compose, align 8, !dbg !3002
  %21 = load i8*, i8** %b0, align 8, !dbg !3003
  %22 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !3004
  %temp = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %22, i32 0, i32 1, !dbg !3005
  %23 = load i8*, i8** %temp, align 8, !dbg !3005
  %24 = load i32, i32* %width.addr, align 4, !dbg !3006
  call void %20(i8* %21, i8* %23, i32 %24), !dbg !3001
  %25 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !3007
  %horizontal_compose7 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %25, i32 0, i32 13, !dbg !3008
  %26 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %horizontal_compose7, align 8, !dbg !3008
  %27 = load i8*, i8** %b1, align 8, !dbg !3009
  %28 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !3010
  %temp8 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %28, i32 0, i32 1, !dbg !3011
  %29 = load i8*, i8** %temp8, align 8, !dbg !3011
  %30 = load i32, i32* %width.addr, align 4, !dbg !3012
  call void %26(i8* %27, i8* %29, i32 %30), !dbg !3007
  %31 = load i32, i32* %level.addr, align 4, !dbg !3013
  %idxprom9 = sext i32 %31 to i64, !dbg !3014
  %32 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !3014
  %cs10 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %32, i32 0, i32 14, !dbg !3015
  %arrayidx11 = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs10, i64 0, i64 %idxprom9, !dbg !3014
  %y12 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arrayidx11, i32 0, i32 1, !dbg !3016
  %33 = load i32, i32* %y12, align 8, !dbg !3017
  %add = add nsw i32 %33, 2, !dbg !3017
  store i32 %add, i32* %y12, align 8, !dbg !3017
  ret void, !dbg !3018
}

; Function Attrs: nounwind uwtable
define internal void @vertical_compose_haar_8bit(i8* %_b0, i8* %_b1, i32 %width) #0 !dbg !3019 {
entry:
  %_b0.addr = alloca i8*, align 8
  %_b1.addr = alloca i8*, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %b0 = alloca i16*, align 8
  %b1 = alloca i16*, align 8
  store i8* %_b0, i8** %_b0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b0.addr, metadata !3020, metadata !87), !dbg !3021
  store i8* %_b1, i8** %_b1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b1.addr, metadata !3022, metadata !87), !dbg !3023
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !3024, metadata !87), !dbg !3025
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3026, metadata !87), !dbg !3027
  call void @llvm.dbg.declare(metadata i16** %b0, metadata !3028, metadata !87), !dbg !3029
  %0 = load i8*, i8** %_b0.addr, align 8, !dbg !3030
  %1 = bitcast i8* %0 to i16*, !dbg !3031
  store i16* %1, i16** %b0, align 8, !dbg !3029
  call void @llvm.dbg.declare(metadata i16** %b1, metadata !3032, metadata !87), !dbg !3033
  %2 = load i8*, i8** %_b1.addr, align 8, !dbg !3034
  %3 = bitcast i8* %2 to i16*, !dbg !3035
  store i16* %3, i16** %b1, align 8, !dbg !3033
  store i32 0, i32* %i, align 4, !dbg !3036
  br label %for.cond, !dbg !3038

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !3039
  %5 = load i32, i32* %width.addr, align 4, !dbg !3042
  %cmp = icmp slt i32 %4, %5, !dbg !3043
  br i1 %cmp, label %for.body, label %for.end, !dbg !3044

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !3045
  %idxprom = sext i32 %6 to i64, !dbg !3047
  %7 = load i16*, i16** %b0, align 8, !dbg !3047
  %arrayidx = getelementptr inbounds i16, i16* %7, i64 %idxprom, !dbg !3047
  %8 = load i16, i16* %arrayidx, align 2, !dbg !3047
  %conv = sext i16 %8 to i32, !dbg !3047
  %9 = load i32, i32* %i, align 4, !dbg !3048
  %idxprom1 = sext i32 %9 to i64, !dbg !3049
  %10 = load i16*, i16** %b1, align 8, !dbg !3049
  %arrayidx2 = getelementptr inbounds i16, i16* %10, i64 %idxprom1, !dbg !3049
  %11 = load i16, i16* %arrayidx2, align 2, !dbg !3049
  %conv3 = sext i16 %11 to i32, !dbg !3049
  %add = add i32 %conv3, 1, !dbg !3050
  %shr = ashr i32 %add, 1, !dbg !3051
  %sub = sub i32 %conv, %shr, !dbg !3052
  %conv4 = trunc i32 %sub to i16, !dbg !3053
  %12 = load i32, i32* %i, align 4, !dbg !3054
  %idxprom5 = sext i32 %12 to i64, !dbg !3055
  %13 = load i16*, i16** %b0, align 8, !dbg !3055
  %arrayidx6 = getelementptr inbounds i16, i16* %13, i64 %idxprom5, !dbg !3055
  store i16 %conv4, i16* %arrayidx6, align 2, !dbg !3056
  %14 = load i32, i32* %i, align 4, !dbg !3057
  %idxprom7 = sext i32 %14 to i64, !dbg !3058
  %15 = load i16*, i16** %b1, align 8, !dbg !3058
  %arrayidx8 = getelementptr inbounds i16, i16* %15, i64 %idxprom7, !dbg !3058
  %16 = load i16, i16* %arrayidx8, align 2, !dbg !3058
  %conv9 = sext i16 %16 to i32, !dbg !3058
  %17 = load i32, i32* %i, align 4, !dbg !3059
  %idxprom10 = sext i32 %17 to i64, !dbg !3060
  %18 = load i16*, i16** %b0, align 8, !dbg !3060
  %arrayidx11 = getelementptr inbounds i16, i16* %18, i64 %idxprom10, !dbg !3060
  %19 = load i16, i16* %arrayidx11, align 2, !dbg !3060
  %conv12 = sext i16 %19 to i32, !dbg !3061
  %add13 = add i32 %conv9, %conv12, !dbg !3062
  %conv14 = trunc i32 %add13 to i16, !dbg !3063
  %20 = load i32, i32* %i, align 4, !dbg !3064
  %idxprom15 = sext i32 %20 to i64, !dbg !3065
  %21 = load i16*, i16** %b1, align 8, !dbg !3065
  %arrayidx16 = getelementptr inbounds i16, i16* %21, i64 %idxprom15, !dbg !3065
  store i16 %conv14, i16* %arrayidx16, align 2, !dbg !3066
  br label %for.inc, !dbg !3067

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %i, align 4, !dbg !3068
  %inc = add nsw i32 %22, 1, !dbg !3068
  store i32 %inc, i32* %i, align 4, !dbg !3068
  br label %for.cond, !dbg !3070, !llvm.loop !3071

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3073
}

; Function Attrs: nounwind uwtable
define internal void @horizontal_compose_haar0i_8bit(i8* %_b, i8* %_temp, i32 %w) #0 !dbg !3074 {
entry:
  %dst.addr.i.i = alloca i16*, align 8
  call void @llvm.dbg.declare(metadata i16** %dst.addr.i.i, metadata !2296, metadata !87), !dbg !3075
  %src0.addr.i.i = alloca i16*, align 8
  call void @llvm.dbg.declare(metadata i16** %src0.addr.i.i, metadata !2302, metadata !87), !dbg !3081
  %src1.addr.i.i = alloca i16*, align 8
  call void @llvm.dbg.declare(metadata i16** %src1.addr.i.i, metadata !2304, metadata !87), !dbg !3082
  %w2.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w2.addr.i.i, metadata !2306, metadata !87), !dbg !3083
  %add.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %add.addr.i.i, metadata !2308, metadata !87), !dbg !3084
  %shift.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %shift.addr.i.i, metadata !2310, metadata !87), !dbg !3085
  %i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i.i, metadata !2312, metadata !87), !dbg !3086
  %b.addr.i = alloca i16*, align 8
  call void @llvm.dbg.declare(metadata i16** %b.addr.i, metadata !3087, metadata !87), !dbg !3088
  %temp.addr.i = alloca i16*, align 8
  call void @llvm.dbg.declare(metadata i16** %temp.addr.i, metadata !3089, metadata !87), !dbg !3090
  %w.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i, metadata !3091, metadata !87), !dbg !3092
  %shift.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %shift.addr.i, metadata !3093, metadata !87), !dbg !3094
  %w2.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w2.i, metadata !3095, metadata !87), !dbg !3096
  %x.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.i, metadata !3097, metadata !87), !dbg !3098
  %_b.addr = alloca i8*, align 8
  %_temp.addr = alloca i8*, align 8
  %w.addr = alloca i32, align 4
  %b = alloca i16*, align 8
  %temp = alloca i16*, align 8
  store i8* %_b, i8** %_b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b.addr, metadata !3099, metadata !87), !dbg !3100
  store i8* %_temp, i8** %_temp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_temp.addr, metadata !3101, metadata !87), !dbg !3102
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !3103, metadata !87), !dbg !3104
  call void @llvm.dbg.declare(metadata i16** %b, metadata !3105, metadata !87), !dbg !3106
  %0 = load i8*, i8** %_b.addr, align 8, !dbg !3107
  %1 = bitcast i8* %0 to i16*, !dbg !3108
  store i16* %1, i16** %b, align 8, !dbg !3106
  call void @llvm.dbg.declare(metadata i16** %temp, metadata !3109, metadata !87), !dbg !3110
  %2 = load i8*, i8** %_temp.addr, align 8, !dbg !3111
  %3 = bitcast i8* %2 to i16*, !dbg !3112
  store i16* %3, i16** %temp, align 8, !dbg !3110
  %4 = load i16*, i16** %b, align 8, !dbg !3113
  %5 = load i16*, i16** %temp, align 8, !dbg !3114
  %6 = load i32, i32* %w.addr, align 4, !dbg !3115
  store i16* %4, i16** %b.addr.i, align 8, !dbg !3116
  store i16* %5, i16** %temp.addr.i, align 8, !dbg !3116
  store i32 %6, i32* %w.addr.i, align 4, !dbg !3116
  store i32 0, i32* %shift.addr.i, align 4, !dbg !3116
  %7 = load i32, i32* %w.addr.i, align 4, !dbg !3117
  %shr.i = ashr i32 %7, 1, !dbg !3118
  store i32 %shr.i, i32* %w2.i, align 4, !dbg !3096
  store i32 0, i32* %x.i, align 4, !dbg !3119
  br label %for.cond.i, !dbg !3121

for.cond.i:                                       ; preds = %for.body.i, %entry
  %8 = load i32, i32* %x.i, align 4, !dbg !3122
  %9 = load i32, i32* %w2.i, align 4, !dbg !3125
  %cmp.i = icmp slt i32 %8, %9, !dbg !3126
  br i1 %cmp.i, label %for.body.i, label %for.end.i, !dbg !3127

for.body.i:                                       ; preds = %for.cond.i
  %10 = load i32, i32* %x.i, align 4, !dbg !3128
  %idxprom.i = sext i32 %10 to i64, !dbg !3130
  %11 = load i16*, i16** %b.addr.i, align 8, !dbg !3130
  %arrayidx.i = getelementptr inbounds i16, i16* %11, i64 %idxprom.i, !dbg !3130
  %12 = load i16, i16* %arrayidx.i, align 2, !dbg !3130
  %conv.i = sext i16 %12 to i32, !dbg !3130
  %13 = load i32, i32* %x.i, align 4, !dbg !3131
  %14 = load i32, i32* %w2.i, align 4, !dbg !3132
  %add.i = add nsw i32 %13, %14, !dbg !3133
  %idxprom1.i = sext i32 %add.i to i64, !dbg !3134
  %15 = load i16*, i16** %b.addr.i, align 8, !dbg !3134
  %arrayidx2.i = getelementptr inbounds i16, i16* %15, i64 %idxprom1.i, !dbg !3134
  %16 = load i16, i16* %arrayidx2.i, align 2, !dbg !3134
  %conv3.i = sext i16 %16 to i32, !dbg !3134
  %add4.i = add i32 %conv3.i, 1, !dbg !3135
  %shr5.i = ashr i32 %add4.i, 1, !dbg !3136
  %sub.i = sub i32 %conv.i, %shr5.i, !dbg !3137
  %conv6.i = trunc i32 %sub.i to i16, !dbg !3138
  %17 = load i32, i32* %x.i, align 4, !dbg !3139
  %idxprom7.i = sext i32 %17 to i64, !dbg !3140
  %18 = load i16*, i16** %temp.addr.i, align 8, !dbg !3140
  %arrayidx8.i = getelementptr inbounds i16, i16* %18, i64 %idxprom7.i, !dbg !3140
  store i16 %conv6.i, i16* %arrayidx8.i, align 2, !dbg !3141
  %19 = load i32, i32* %x.i, align 4, !dbg !3142
  %20 = load i32, i32* %w2.i, align 4, !dbg !3143
  %add9.i = add nsw i32 %19, %20, !dbg !3144
  %idxprom10.i = sext i32 %add9.i to i64, !dbg !3145
  %21 = load i16*, i16** %b.addr.i, align 8, !dbg !3145
  %arrayidx11.i = getelementptr inbounds i16, i16* %21, i64 %idxprom10.i, !dbg !3145
  %22 = load i16, i16* %arrayidx11.i, align 2, !dbg !3145
  %conv12.i = sext i16 %22 to i32, !dbg !3145
  %23 = load i32, i32* %x.i, align 4, !dbg !3146
  %idxprom13.i = sext i32 %23 to i64, !dbg !3147
  %24 = load i16*, i16** %temp.addr.i, align 8, !dbg !3147
  %arrayidx14.i = getelementptr inbounds i16, i16* %24, i64 %idxprom13.i, !dbg !3147
  %25 = load i16, i16* %arrayidx14.i, align 2, !dbg !3147
  %conv15.i = sext i16 %25 to i32, !dbg !3148
  %add16.i = add i32 %conv12.i, %conv15.i, !dbg !3149
  %conv17.i = trunc i32 %add16.i to i16, !dbg !3150
  %26 = load i32, i32* %x.i, align 4, !dbg !3151
  %27 = load i32, i32* %w2.i, align 4, !dbg !3152
  %add18.i = add nsw i32 %26, %27, !dbg !3153
  %idxprom19.i = sext i32 %add18.i to i64, !dbg !3154
  %28 = load i16*, i16** %temp.addr.i, align 8, !dbg !3154
  %arrayidx20.i = getelementptr inbounds i16, i16* %28, i64 %idxprom19.i, !dbg !3154
  store i16 %conv17.i, i16* %arrayidx20.i, align 2, !dbg !3155
  %29 = load i32, i32* %x.i, align 4, !dbg !3156
  %inc.i = add nsw i32 %29, 1, !dbg !3156
  store i32 %inc.i, i32* %x.i, align 4, !dbg !3156
  br label %for.cond.i, !dbg !3158, !llvm.loop !3159

for.end.i:                                        ; preds = %for.cond.i
  %30 = load i16*, i16** %b.addr.i, align 8, !dbg !3161
  %31 = load i16*, i16** %temp.addr.i, align 8, !dbg !3162
  %32 = load i16*, i16** %temp.addr.i, align 8, !dbg !3163
  %33 = load i32, i32* %w2.i, align 4, !dbg !3164
  %idx.ext.i = sext i32 %33 to i64, !dbg !3165
  %add.ptr.i = getelementptr inbounds i16, i16* %32, i64 %idx.ext.i, !dbg !3165
  %34 = load i32, i32* %w2.i, align 4, !dbg !3166
  %35 = load i32, i32* %shift.addr.i, align 4, !dbg !3167
  %36 = load i32, i32* %shift.addr.i, align 4, !dbg !3168
  store i16* %30, i16** %dst.addr.i.i, align 8, !dbg !3169
  store i16* %31, i16** %src0.addr.i.i, align 8, !dbg !3169
  store i16* %add.ptr.i, i16** %src1.addr.i.i, align 8, !dbg !3169
  store i32 %34, i32* %w2.addr.i.i, align 4, !dbg !3169
  store i32 %35, i32* %add.addr.i.i, align 4, !dbg !3169
  store i32 %36, i32* %shift.addr.i.i, align 4, !dbg !3169
  store i32 0, i32* %i.i.i, align 4, !dbg !3170
  br label %for.cond.i.i, !dbg !3171

for.cond.i.i:                                     ; preds = %for.body.i.i, %for.end.i
  %37 = load i32, i32* %i.i.i, align 4, !dbg !3172
  %38 = load i32, i32* %w2.addr.i.i, align 4, !dbg !3173
  %cmp.i.i = icmp slt i32 %37, %38, !dbg !3174
  br i1 %cmp.i.i, label %for.body.i.i, label %horizontal_compose_haari_8bit.exit, !dbg !3175

for.body.i.i:                                     ; preds = %for.cond.i.i
  %39 = load i32, i32* %i.i.i, align 4, !dbg !3176
  %idxprom.i.i = sext i32 %39 to i64, !dbg !3177
  %40 = load i16*, i16** %src0.addr.i.i, align 8, !dbg !3177
  %arrayidx.i.i = getelementptr inbounds i16, i16* %40, i64 %idxprom.i.i, !dbg !3177
  %41 = load i16, i16* %arrayidx.i.i, align 2, !dbg !3177
  %conv.i.i = sext i16 %41 to i32, !dbg !3177
  %42 = load i32, i32* %add.addr.i.i, align 4, !dbg !3178
  %add1.i.i = add i32 %conv.i.i, %42, !dbg !3179
  %43 = load i32, i32* %shift.addr.i.i, align 4, !dbg !3180
  %shr.i.i = ashr i32 %add1.i.i, %43, !dbg !3181
  %conv2.i.i = trunc i32 %shr.i.i to i16, !dbg !3182
  %44 = load i32, i32* %i.i.i, align 4, !dbg !3183
  %mul.i.i = mul nsw i32 2, %44, !dbg !3184
  %idxprom3.i.i = sext i32 %mul.i.i to i64, !dbg !3185
  %45 = load i16*, i16** %dst.addr.i.i, align 8, !dbg !3185
  %arrayidx4.i.i = getelementptr inbounds i16, i16* %45, i64 %idxprom3.i.i, !dbg !3185
  store i16 %conv2.i.i, i16* %arrayidx4.i.i, align 2, !dbg !3186
  %46 = load i32, i32* %i.i.i, align 4, !dbg !3187
  %idxprom5.i.i = sext i32 %46 to i64, !dbg !3188
  %47 = load i16*, i16** %src1.addr.i.i, align 8, !dbg !3188
  %arrayidx6.i.i = getelementptr inbounds i16, i16* %47, i64 %idxprom5.i.i, !dbg !3188
  %48 = load i16, i16* %arrayidx6.i.i, align 2, !dbg !3188
  %conv7.i.i = sext i16 %48 to i32, !dbg !3188
  %49 = load i32, i32* %add.addr.i.i, align 4, !dbg !3189
  %add8.i.i = add i32 %conv7.i.i, %49, !dbg !3190
  %50 = load i32, i32* %shift.addr.i.i, align 4, !dbg !3191
  %shr9.i.i = ashr i32 %add8.i.i, %50, !dbg !3192
  %conv10.i.i = trunc i32 %shr9.i.i to i16, !dbg !3193
  %51 = load i32, i32* %i.i.i, align 4, !dbg !3194
  %mul11.i.i = mul nsw i32 2, %51, !dbg !3195
  %add12.i.i = add nsw i32 %mul11.i.i, 1, !dbg !3196
  %idxprom13.i.i = sext i32 %add12.i.i to i64, !dbg !3197
  %52 = load i16*, i16** %dst.addr.i.i, align 8, !dbg !3197
  %arrayidx14.i.i = getelementptr inbounds i16, i16* %52, i64 %idxprom13.i.i, !dbg !3197
  store i16 %conv10.i.i, i16* %arrayidx14.i.i, align 2, !dbg !3198
  %53 = load i32, i32* %i.i.i, align 4, !dbg !3199
  %inc.i.i = add nsw i32 %53, 1, !dbg !3199
  store i32 %inc.i.i, i32* %i.i.i, align 4, !dbg !3199
  br label %for.cond.i.i, !dbg !3200, !llvm.loop !2467

horizontal_compose_haari_8bit.exit:               ; preds = %for.cond.i.i
  ret void, !dbg !3201
}

; Function Attrs: nounwind uwtable
define internal void @horizontal_compose_haar1i_8bit(i8* %_b, i8* %_temp, i32 %w) #0 !dbg !3202 {
entry:
  %dst.addr.i.i = alloca i16*, align 8
  call void @llvm.dbg.declare(metadata i16** %dst.addr.i.i, metadata !2296, metadata !87), !dbg !3203
  %src0.addr.i.i = alloca i16*, align 8
  call void @llvm.dbg.declare(metadata i16** %src0.addr.i.i, metadata !2302, metadata !87), !dbg !3206
  %src1.addr.i.i = alloca i16*, align 8
  call void @llvm.dbg.declare(metadata i16** %src1.addr.i.i, metadata !2304, metadata !87), !dbg !3207
  %w2.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w2.addr.i.i, metadata !2306, metadata !87), !dbg !3208
  %add.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %add.addr.i.i, metadata !2308, metadata !87), !dbg !3209
  %shift.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %shift.addr.i.i, metadata !2310, metadata !87), !dbg !3210
  %i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i.i, metadata !2312, metadata !87), !dbg !3211
  %b.addr.i = alloca i16*, align 8
  call void @llvm.dbg.declare(metadata i16** %b.addr.i, metadata !3087, metadata !87), !dbg !3212
  %temp.addr.i = alloca i16*, align 8
  call void @llvm.dbg.declare(metadata i16** %temp.addr.i, metadata !3089, metadata !87), !dbg !3213
  %w.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i, metadata !3091, metadata !87), !dbg !3214
  %shift.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %shift.addr.i, metadata !3093, metadata !87), !dbg !3215
  %w2.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w2.i, metadata !3095, metadata !87), !dbg !3216
  %x.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.i, metadata !3097, metadata !87), !dbg !3217
  %_b.addr = alloca i8*, align 8
  %_temp.addr = alloca i8*, align 8
  %w.addr = alloca i32, align 4
  %b = alloca i16*, align 8
  %temp = alloca i16*, align 8
  store i8* %_b, i8** %_b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b.addr, metadata !3218, metadata !87), !dbg !3219
  store i8* %_temp, i8** %_temp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_temp.addr, metadata !3220, metadata !87), !dbg !3221
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !3222, metadata !87), !dbg !3223
  call void @llvm.dbg.declare(metadata i16** %b, metadata !3224, metadata !87), !dbg !3225
  %0 = load i8*, i8** %_b.addr, align 8, !dbg !3226
  %1 = bitcast i8* %0 to i16*, !dbg !3227
  store i16* %1, i16** %b, align 8, !dbg !3225
  call void @llvm.dbg.declare(metadata i16** %temp, metadata !3228, metadata !87), !dbg !3229
  %2 = load i8*, i8** %_temp.addr, align 8, !dbg !3230
  %3 = bitcast i8* %2 to i16*, !dbg !3231
  store i16* %3, i16** %temp, align 8, !dbg !3229
  %4 = load i16*, i16** %b, align 8, !dbg !3232
  %5 = load i16*, i16** %temp, align 8, !dbg !3233
  %6 = load i32, i32* %w.addr, align 4, !dbg !3234
  store i16* %4, i16** %b.addr.i, align 8, !dbg !3235
  store i16* %5, i16** %temp.addr.i, align 8, !dbg !3235
  store i32 %6, i32* %w.addr.i, align 4, !dbg !3235
  store i32 1, i32* %shift.addr.i, align 4, !dbg !3235
  %7 = load i32, i32* %w.addr.i, align 4, !dbg !3236
  %shr.i = ashr i32 %7, 1, !dbg !3237
  store i32 %shr.i, i32* %w2.i, align 4, !dbg !3216
  store i32 0, i32* %x.i, align 4, !dbg !3238
  br label %for.cond.i, !dbg !3239

for.cond.i:                                       ; preds = %for.body.i, %entry
  %8 = load i32, i32* %x.i, align 4, !dbg !3240
  %9 = load i32, i32* %w2.i, align 4, !dbg !3241
  %cmp.i = icmp slt i32 %8, %9, !dbg !3242
  br i1 %cmp.i, label %for.body.i, label %for.end.i, !dbg !3243

for.body.i:                                       ; preds = %for.cond.i
  %10 = load i32, i32* %x.i, align 4, !dbg !3244
  %idxprom.i = sext i32 %10 to i64, !dbg !3245
  %11 = load i16*, i16** %b.addr.i, align 8, !dbg !3245
  %arrayidx.i = getelementptr inbounds i16, i16* %11, i64 %idxprom.i, !dbg !3245
  %12 = load i16, i16* %arrayidx.i, align 2, !dbg !3245
  %conv.i = sext i16 %12 to i32, !dbg !3245
  %13 = load i32, i32* %x.i, align 4, !dbg !3246
  %14 = load i32, i32* %w2.i, align 4, !dbg !3247
  %add.i = add nsw i32 %13, %14, !dbg !3248
  %idxprom1.i = sext i32 %add.i to i64, !dbg !3249
  %15 = load i16*, i16** %b.addr.i, align 8, !dbg !3249
  %arrayidx2.i = getelementptr inbounds i16, i16* %15, i64 %idxprom1.i, !dbg !3249
  %16 = load i16, i16* %arrayidx2.i, align 2, !dbg !3249
  %conv3.i = sext i16 %16 to i32, !dbg !3249
  %add4.i = add i32 %conv3.i, 1, !dbg !3250
  %shr5.i = ashr i32 %add4.i, 1, !dbg !3251
  %sub.i = sub i32 %conv.i, %shr5.i, !dbg !3252
  %conv6.i = trunc i32 %sub.i to i16, !dbg !3253
  %17 = load i32, i32* %x.i, align 4, !dbg !3254
  %idxprom7.i = sext i32 %17 to i64, !dbg !3255
  %18 = load i16*, i16** %temp.addr.i, align 8, !dbg !3255
  %arrayidx8.i = getelementptr inbounds i16, i16* %18, i64 %idxprom7.i, !dbg !3255
  store i16 %conv6.i, i16* %arrayidx8.i, align 2, !dbg !3256
  %19 = load i32, i32* %x.i, align 4, !dbg !3257
  %20 = load i32, i32* %w2.i, align 4, !dbg !3258
  %add9.i = add nsw i32 %19, %20, !dbg !3259
  %idxprom10.i = sext i32 %add9.i to i64, !dbg !3260
  %21 = load i16*, i16** %b.addr.i, align 8, !dbg !3260
  %arrayidx11.i = getelementptr inbounds i16, i16* %21, i64 %idxprom10.i, !dbg !3260
  %22 = load i16, i16* %arrayidx11.i, align 2, !dbg !3260
  %conv12.i = sext i16 %22 to i32, !dbg !3260
  %23 = load i32, i32* %x.i, align 4, !dbg !3261
  %idxprom13.i = sext i32 %23 to i64, !dbg !3262
  %24 = load i16*, i16** %temp.addr.i, align 8, !dbg !3262
  %arrayidx14.i = getelementptr inbounds i16, i16* %24, i64 %idxprom13.i, !dbg !3262
  %25 = load i16, i16* %arrayidx14.i, align 2, !dbg !3262
  %conv15.i = sext i16 %25 to i32, !dbg !3263
  %add16.i = add i32 %conv12.i, %conv15.i, !dbg !3264
  %conv17.i = trunc i32 %add16.i to i16, !dbg !3265
  %26 = load i32, i32* %x.i, align 4, !dbg !3266
  %27 = load i32, i32* %w2.i, align 4, !dbg !3267
  %add18.i = add nsw i32 %26, %27, !dbg !3268
  %idxprom19.i = sext i32 %add18.i to i64, !dbg !3269
  %28 = load i16*, i16** %temp.addr.i, align 8, !dbg !3269
  %arrayidx20.i = getelementptr inbounds i16, i16* %28, i64 %idxprom19.i, !dbg !3269
  store i16 %conv17.i, i16* %arrayidx20.i, align 2, !dbg !3270
  %29 = load i32, i32* %x.i, align 4, !dbg !3271
  %inc.i = add nsw i32 %29, 1, !dbg !3271
  store i32 %inc.i, i32* %x.i, align 4, !dbg !3271
  br label %for.cond.i, !dbg !3272, !llvm.loop !3159

for.end.i:                                        ; preds = %for.cond.i
  %30 = load i16*, i16** %b.addr.i, align 8, !dbg !3273
  %31 = load i16*, i16** %temp.addr.i, align 8, !dbg !3274
  %32 = load i16*, i16** %temp.addr.i, align 8, !dbg !3275
  %33 = load i32, i32* %w2.i, align 4, !dbg !3276
  %idx.ext.i = sext i32 %33 to i64, !dbg !3277
  %add.ptr.i = getelementptr inbounds i16, i16* %32, i64 %idx.ext.i, !dbg !3277
  %34 = load i32, i32* %w2.i, align 4, !dbg !3278
  %35 = load i32, i32* %shift.addr.i, align 4, !dbg !3279
  %36 = load i32, i32* %shift.addr.i, align 4, !dbg !3280
  store i16* %30, i16** %dst.addr.i.i, align 8, !dbg !3281
  store i16* %31, i16** %src0.addr.i.i, align 8, !dbg !3281
  store i16* %add.ptr.i, i16** %src1.addr.i.i, align 8, !dbg !3281
  store i32 %34, i32* %w2.addr.i.i, align 4, !dbg !3281
  store i32 %35, i32* %add.addr.i.i, align 4, !dbg !3281
  store i32 %36, i32* %shift.addr.i.i, align 4, !dbg !3281
  store i32 0, i32* %i.i.i, align 4, !dbg !3282
  br label %for.cond.i.i, !dbg !3283

for.cond.i.i:                                     ; preds = %for.body.i.i, %for.end.i
  %37 = load i32, i32* %i.i.i, align 4, !dbg !3284
  %38 = load i32, i32* %w2.addr.i.i, align 4, !dbg !3285
  %cmp.i.i = icmp slt i32 %37, %38, !dbg !3286
  br i1 %cmp.i.i, label %for.body.i.i, label %horizontal_compose_haari_8bit.exit, !dbg !3287

for.body.i.i:                                     ; preds = %for.cond.i.i
  %39 = load i32, i32* %i.i.i, align 4, !dbg !3288
  %idxprom.i.i = sext i32 %39 to i64, !dbg !3289
  %40 = load i16*, i16** %src0.addr.i.i, align 8, !dbg !3289
  %arrayidx.i.i = getelementptr inbounds i16, i16* %40, i64 %idxprom.i.i, !dbg !3289
  %41 = load i16, i16* %arrayidx.i.i, align 2, !dbg !3289
  %conv.i.i = sext i16 %41 to i32, !dbg !3289
  %42 = load i32, i32* %add.addr.i.i, align 4, !dbg !3290
  %add1.i.i = add i32 %conv.i.i, %42, !dbg !3291
  %43 = load i32, i32* %shift.addr.i.i, align 4, !dbg !3292
  %shr.i.i = ashr i32 %add1.i.i, %43, !dbg !3293
  %conv2.i.i = trunc i32 %shr.i.i to i16, !dbg !3294
  %44 = load i32, i32* %i.i.i, align 4, !dbg !3295
  %mul.i.i = mul nsw i32 2, %44, !dbg !3296
  %idxprom3.i.i = sext i32 %mul.i.i to i64, !dbg !3297
  %45 = load i16*, i16** %dst.addr.i.i, align 8, !dbg !3297
  %arrayidx4.i.i = getelementptr inbounds i16, i16* %45, i64 %idxprom3.i.i, !dbg !3297
  store i16 %conv2.i.i, i16* %arrayidx4.i.i, align 2, !dbg !3298
  %46 = load i32, i32* %i.i.i, align 4, !dbg !3299
  %idxprom5.i.i = sext i32 %46 to i64, !dbg !3300
  %47 = load i16*, i16** %src1.addr.i.i, align 8, !dbg !3300
  %arrayidx6.i.i = getelementptr inbounds i16, i16* %47, i64 %idxprom5.i.i, !dbg !3300
  %48 = load i16, i16* %arrayidx6.i.i, align 2, !dbg !3300
  %conv7.i.i = sext i16 %48 to i32, !dbg !3300
  %49 = load i32, i32* %add.addr.i.i, align 4, !dbg !3301
  %add8.i.i = add i32 %conv7.i.i, %49, !dbg !3302
  %50 = load i32, i32* %shift.addr.i.i, align 4, !dbg !3303
  %shr9.i.i = ashr i32 %add8.i.i, %50, !dbg !3304
  %conv10.i.i = trunc i32 %shr9.i.i to i16, !dbg !3305
  %51 = load i32, i32* %i.i.i, align 4, !dbg !3306
  %mul11.i.i = mul nsw i32 2, %51, !dbg !3307
  %add12.i.i = add nsw i32 %mul11.i.i, 1, !dbg !3308
  %idxprom13.i.i = sext i32 %add12.i.i to i64, !dbg !3309
  %52 = load i16*, i16** %dst.addr.i.i, align 8, !dbg !3309
  %arrayidx14.i.i = getelementptr inbounds i16, i16* %52, i64 %idxprom13.i.i, !dbg !3309
  store i16 %conv10.i.i, i16* %arrayidx14.i.i, align 2, !dbg !3310
  %53 = load i32, i32* %i.i.i, align 4, !dbg !3311
  %inc.i.i = add nsw i32 %53, 1, !dbg !3311
  store i32 %inc.i.i, i32* %i.i.i, align 4, !dbg !3311
  br label %for.cond.i.i, !dbg !3312, !llvm.loop !2467

horizontal_compose_haari_8bit.exit:               ; preds = %for.cond.i.i
  ret void, !dbg !3313
}

; Function Attrs: nounwind uwtable
define internal void @spatial_compose_fidelity_8bit(%struct.DWTContext* %d, i32 %level, i32 %width, i32 %height, i32 %stride) #0 !dbg !3314 {
entry:
  %retval.i57 = alloca i32, align 4
  %a.addr.i58 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i58, metadata !904, metadata !87), !dbg !3315
  %amin.addr.i59 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i59, metadata !911, metadata !87), !dbg !3322
  %amax.addr.i60 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i60, metadata !913, metadata !87), !dbg !3323
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !904, metadata !87), !dbg !3324
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !911, metadata !87), !dbg !3331
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !913, metadata !87), !dbg !3332
  %d.addr = alloca %struct.DWTContext*, align 8
  %level.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  %vertical_compose_l0 = alloca void (i8*, i8**, i32)*, align 8
  %vertical_compose_h0 = alloca void (i8*, i8**, i32)*, align 8
  %i = alloca i32, align 4
  %y = alloca i32, align 4
  %b = alloca [8 x i8*], align 16
  store %struct.DWTContext* %d, %struct.DWTContext** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTContext** %d.addr, metadata !3333, metadata !87), !dbg !3334
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !3335, metadata !87), !dbg !3336
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !3337, metadata !87), !dbg !3338
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !3339, metadata !87), !dbg !3340
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !3341, metadata !87), !dbg !3342
  call void @llvm.dbg.declare(metadata void (i8*, i8**, i32)** %vertical_compose_l0, metadata !3343, metadata !87), !dbg !3349
  %0 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !3350
  %vertical_compose_l01 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %0, i32 0, i32 8, !dbg !3351
  %1 = load void ()*, void ()** %vertical_compose_l01, align 8, !dbg !3351
  %2 = bitcast void ()* %1 to i8*, !dbg !3352
  %3 = bitcast i8* %2 to void (i8*, i8**, i32)*, !dbg !3352
  store void (i8*, i8**, i32)* %3, void (i8*, i8**, i32)** %vertical_compose_l0, align 8, !dbg !3349
  call void @llvm.dbg.declare(metadata void (i8*, i8**, i32)** %vertical_compose_h0, metadata !3353, metadata !87), !dbg !3354
  %4 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !3355
  %vertical_compose_h02 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %4, i32 0, i32 9, !dbg !3356
  %5 = load void ()*, void ()** %vertical_compose_h02, align 8, !dbg !3356
  %6 = bitcast void ()* %5 to i8*, !dbg !3357
  %7 = bitcast i8* %6 to void (i8*, i8**, i32)*, !dbg !3357
  store void (i8*, i8**, i32)* %7, void (i8*, i8**, i32)** %vertical_compose_h0, align 8, !dbg !3354
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3358, metadata !87), !dbg !3359
  call void @llvm.dbg.declare(metadata i32* %y, metadata !3360, metadata !87), !dbg !3361
  call void @llvm.dbg.declare(metadata [8 x i8*]* %b, metadata !3362, metadata !87), !dbg !3363
  store i32 1, i32* %y, align 4, !dbg !3364
  br label %for.cond, !dbg !3365

for.cond:                                         ; preds = %for.inc12, %entry
  %8 = load i32, i32* %y, align 4, !dbg !3366
  %9 = load i32, i32* %height.addr, align 4, !dbg !3368
  %cmp = icmp slt i32 %8, %9, !dbg !3369
  br i1 %cmp, label %for.body, label %for.end14, !dbg !3370

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !3371
  br label %for.cond3, !dbg !3372

for.cond3:                                        ; preds = %for.inc, %for.body
  %10 = load i32, i32* %i, align 4, !dbg !3373
  %cmp4 = icmp slt i32 %10, 8, !dbg !3375
  br i1 %cmp4, label %for.body5, label %for.end, !dbg !3376

for.body5:                                        ; preds = %for.cond3
  %11 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !3377
  %buffer = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %11, i32 0, i32 0, !dbg !3378
  %12 = load i8*, i8** %buffer, align 8, !dbg !3378
  %13 = load i32, i32* %y, align 4, !dbg !3379
  %sub = sub nsw i32 %13, 7, !dbg !3380
  %14 = load i32, i32* %i, align 4, !dbg !3381
  %mul = mul nsw i32 2, %14, !dbg !3382
  %add = add nsw i32 %sub, %mul, !dbg !3383
  %15 = load i32, i32* %height.addr, align 4, !dbg !3384
  %sub6 = sub nsw i32 %15, 2, !dbg !3385
  store i32 %add, i32* %a.addr.i, align 4, !dbg !3386
  store i32 0, i32* %amin.addr.i, align 4, !dbg !3386
  store i32 %sub6, i32* %amax.addr.i, align 4, !dbg !3386
  %16 = load i32, i32* %a.addr.i, align 4, !dbg !3387
  %17 = load i32, i32* %amin.addr.i, align 4, !dbg !3388
  %cmp.i = icmp slt i32 %16, %17, !dbg !3389
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !3390

if.then.i:                                        ; preds = %for.body5
  %18 = load i32, i32* %amin.addr.i, align 4, !dbg !3391
  store i32 %18, i32* %retval.i, align 4, !dbg !3392
  br label %av_clip_c.exit, !dbg !3392

if.else.i:                                        ; preds = %for.body5
  %19 = load i32, i32* %a.addr.i, align 4, !dbg !3393
  %20 = load i32, i32* %amax.addr.i, align 4, !dbg !3394
  %cmp1.i = icmp sgt i32 %19, %20, !dbg !3395
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !3396

if.then2.i:                                       ; preds = %if.else.i
  %21 = load i32, i32* %amax.addr.i, align 4, !dbg !3397
  store i32 %21, i32* %retval.i, align 4, !dbg !3398
  br label %av_clip_c.exit, !dbg !3398

if.else3.i:                                       ; preds = %if.else.i
  %22 = load i32, i32* %a.addr.i, align 4, !dbg !3399
  store i32 %22, i32* %retval.i, align 4, !dbg !3400
  br label %av_clip_c.exit, !dbg !3400

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %23 = load i32, i32* %retval.i, align 4, !dbg !3401
  %24 = load i32, i32* %stride.addr, align 4, !dbg !3402
  %mul7 = mul nsw i32 %23, %24, !dbg !3403
  %idx.ext = sext i32 %mul7 to i64, !dbg !3404
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 %idx.ext, !dbg !3404
  %25 = load i32, i32* %i, align 4, !dbg !3405
  %idxprom = sext i32 %25 to i64, !dbg !3406
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 %idxprom, !dbg !3406
  store i8* %add.ptr, i8** %arrayidx, align 8, !dbg !3407
  br label %for.inc, !dbg !3406

for.inc:                                          ; preds = %av_clip_c.exit
  %26 = load i32, i32* %i, align 4, !dbg !3408
  %inc = add nsw i32 %26, 1, !dbg !3408
  store i32 %inc, i32* %i, align 4, !dbg !3408
  br label %for.cond3, !dbg !3410, !llvm.loop !3411

for.end:                                          ; preds = %for.cond3
  %27 = load void (i8*, i8**, i32)*, void (i8*, i8**, i32)** %vertical_compose_h0, align 8, !dbg !3413
  %28 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !3414
  %buffer8 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %28, i32 0, i32 0, !dbg !3415
  %29 = load i8*, i8** %buffer8, align 8, !dbg !3415
  %30 = load i32, i32* %y, align 4, !dbg !3416
  %31 = load i32, i32* %stride.addr, align 4, !dbg !3417
  %mul9 = mul nsw i32 %30, %31, !dbg !3418
  %idx.ext10 = sext i32 %mul9 to i64, !dbg !3419
  %add.ptr11 = getelementptr inbounds i8, i8* %29, i64 %idx.ext10, !dbg !3419
  %arraydecay = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i32 0, i32 0, !dbg !3420
  %32 = load i32, i32* %width.addr, align 4, !dbg !3421
  call void %27(i8* %add.ptr11, i8** %arraydecay, i32 %32), !dbg !3413
  br label %for.inc12, !dbg !3422

for.inc12:                                        ; preds = %for.end
  %33 = load i32, i32* %y, align 4, !dbg !3423
  %add13 = add nsw i32 %33, 2, !dbg !3423
  store i32 %add13, i32* %y, align 4, !dbg !3423
  br label %for.cond, !dbg !3425, !llvm.loop !3426

for.end14:                                        ; preds = %for.cond
  store i32 0, i32* %y, align 4, !dbg !3428
  br label %for.cond15, !dbg !3429

for.cond15:                                       ; preds = %for.inc40, %for.end14
  %34 = load i32, i32* %y, align 4, !dbg !3430
  %35 = load i32, i32* %height.addr, align 4, !dbg !3432
  %cmp16 = icmp slt i32 %34, %35, !dbg !3433
  br i1 %cmp16, label %for.body17, label %for.end42, !dbg !3434

for.body17:                                       ; preds = %for.cond15
  store i32 0, i32* %i, align 4, !dbg !3435
  br label %for.cond18, !dbg !3436

for.cond18:                                       ; preds = %for.inc32, %for.body17
  %36 = load i32, i32* %i, align 4, !dbg !3437
  %cmp19 = icmp slt i32 %36, 8, !dbg !3439
  br i1 %cmp19, label %for.body20, label %for.end34, !dbg !3440

for.body20:                                       ; preds = %for.cond18
  %37 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !3441
  %buffer21 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %37, i32 0, i32 0, !dbg !3442
  %38 = load i8*, i8** %buffer21, align 8, !dbg !3442
  %39 = load i32, i32* %y, align 4, !dbg !3443
  %sub22 = sub nsw i32 %39, 7, !dbg !3444
  %40 = load i32, i32* %i, align 4, !dbg !3445
  %mul23 = mul nsw i32 2, %40, !dbg !3446
  %add24 = add nsw i32 %sub22, %mul23, !dbg !3447
  %41 = load i32, i32* %height.addr, align 4, !dbg !3448
  %sub25 = sub nsw i32 %41, 1, !dbg !3449
  store i32 %add24, i32* %a.addr.i58, align 4, !dbg !3450
  store i32 1, i32* %amin.addr.i59, align 4, !dbg !3450
  store i32 %sub25, i32* %amax.addr.i60, align 4, !dbg !3450
  %42 = load i32, i32* %a.addr.i58, align 4, !dbg !3451
  %43 = load i32, i32* %amin.addr.i59, align 4, !dbg !3452
  %cmp.i61 = icmp slt i32 %42, %43, !dbg !3453
  br i1 %cmp.i61, label %if.then.i62, label %if.else.i64, !dbg !3454

if.then.i62:                                      ; preds = %for.body20
  %44 = load i32, i32* %amin.addr.i59, align 4, !dbg !3455
  store i32 %44, i32* %retval.i57, align 4, !dbg !3456
  br label %av_clip_c.exit67, !dbg !3456

if.else.i64:                                      ; preds = %for.body20
  %45 = load i32, i32* %a.addr.i58, align 4, !dbg !3457
  %46 = load i32, i32* %amax.addr.i60, align 4, !dbg !3458
  %cmp1.i63 = icmp sgt i32 %45, %46, !dbg !3459
  br i1 %cmp1.i63, label %if.then2.i65, label %if.else3.i66, !dbg !3460

if.then2.i65:                                     ; preds = %if.else.i64
  %47 = load i32, i32* %amax.addr.i60, align 4, !dbg !3461
  store i32 %47, i32* %retval.i57, align 4, !dbg !3462
  br label %av_clip_c.exit67, !dbg !3462

if.else3.i66:                                     ; preds = %if.else.i64
  %48 = load i32, i32* %a.addr.i58, align 4, !dbg !3463
  store i32 %48, i32* %retval.i57, align 4, !dbg !3464
  br label %av_clip_c.exit67, !dbg !3464

av_clip_c.exit67:                                 ; preds = %if.then.i62, %if.then2.i65, %if.else3.i66
  %49 = load i32, i32* %retval.i57, align 4, !dbg !3465
  %50 = load i32, i32* %stride.addr, align 4, !dbg !3466
  %mul27 = mul nsw i32 %49, %50, !dbg !3467
  %idx.ext28 = sext i32 %mul27 to i64, !dbg !3468
  %add.ptr29 = getelementptr inbounds i8, i8* %38, i64 %idx.ext28, !dbg !3468
  %51 = load i32, i32* %i, align 4, !dbg !3469
  %idxprom30 = sext i32 %51 to i64, !dbg !3470
  %arrayidx31 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 %idxprom30, !dbg !3470
  store i8* %add.ptr29, i8** %arrayidx31, align 8, !dbg !3471
  br label %for.inc32, !dbg !3470

for.inc32:                                        ; preds = %av_clip_c.exit67
  %52 = load i32, i32* %i, align 4, !dbg !3472
  %inc33 = add nsw i32 %52, 1, !dbg !3472
  store i32 %inc33, i32* %i, align 4, !dbg !3472
  br label %for.cond18, !dbg !3474, !llvm.loop !3475

for.end34:                                        ; preds = %for.cond18
  %53 = load void (i8*, i8**, i32)*, void (i8*, i8**, i32)** %vertical_compose_l0, align 8, !dbg !3477
  %54 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !3478
  %buffer35 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %54, i32 0, i32 0, !dbg !3479
  %55 = load i8*, i8** %buffer35, align 8, !dbg !3479
  %56 = load i32, i32* %y, align 4, !dbg !3480
  %57 = load i32, i32* %stride.addr, align 4, !dbg !3481
  %mul36 = mul nsw i32 %56, %57, !dbg !3482
  %idx.ext37 = sext i32 %mul36 to i64, !dbg !3483
  %add.ptr38 = getelementptr inbounds i8, i8* %55, i64 %idx.ext37, !dbg !3483
  %arraydecay39 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i32 0, i32 0, !dbg !3484
  %58 = load i32, i32* %width.addr, align 4, !dbg !3485
  call void %53(i8* %add.ptr38, i8** %arraydecay39, i32 %58), !dbg !3477
  br label %for.inc40, !dbg !3486

for.inc40:                                        ; preds = %for.end34
  %59 = load i32, i32* %y, align 4, !dbg !3487
  %add41 = add nsw i32 %59, 2, !dbg !3487
  store i32 %add41, i32* %y, align 4, !dbg !3487
  br label %for.cond15, !dbg !3489, !llvm.loop !3490

for.end42:                                        ; preds = %for.cond15
  store i32 0, i32* %y, align 4, !dbg !3492
  br label %for.cond43, !dbg !3494

for.cond43:                                       ; preds = %for.inc50, %for.end42
  %60 = load i32, i32* %y, align 4, !dbg !3495
  %61 = load i32, i32* %height.addr, align 4, !dbg !3498
  %cmp44 = icmp slt i32 %60, %61, !dbg !3499
  br i1 %cmp44, label %for.body45, label %for.end52, !dbg !3500

for.body45:                                       ; preds = %for.cond43
  %62 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !3501
  %horizontal_compose = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %62, i32 0, i32 13, !dbg !3502
  %63 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %horizontal_compose, align 8, !dbg !3502
  %64 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !3503
  %buffer46 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %64, i32 0, i32 0, !dbg !3504
  %65 = load i8*, i8** %buffer46, align 8, !dbg !3504
  %66 = load i32, i32* %y, align 4, !dbg !3505
  %67 = load i32, i32* %stride.addr, align 4, !dbg !3506
  %mul47 = mul nsw i32 %66, %67, !dbg !3507
  %idx.ext48 = sext i32 %mul47 to i64, !dbg !3508
  %add.ptr49 = getelementptr inbounds i8, i8* %65, i64 %idx.ext48, !dbg !3508
  %68 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !3509
  %temp = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %68, i32 0, i32 1, !dbg !3510
  %69 = load i8*, i8** %temp, align 8, !dbg !3510
  %70 = load i32, i32* %width.addr, align 4, !dbg !3511
  call void %63(i8* %add.ptr49, i8* %69, i32 %70), !dbg !3501
  br label %for.inc50, !dbg !3501

for.inc50:                                        ; preds = %for.body45
  %71 = load i32, i32* %y, align 4, !dbg !3512
  %inc51 = add nsw i32 %71, 1, !dbg !3512
  store i32 %inc51, i32* %y, align 4, !dbg !3512
  br label %for.cond43, !dbg !3514, !llvm.loop !3515

for.end52:                                        ; preds = %for.cond43
  %72 = load i32, i32* %height.addr, align 4, !dbg !3517
  %add53 = add nsw i32 %72, 1, !dbg !3518
  %73 = load i32, i32* %level.addr, align 4, !dbg !3519
  %idxprom54 = sext i32 %73 to i64, !dbg !3520
  %74 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !3520
  %cs = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %74, i32 0, i32 14, !dbg !3521
  %arrayidx55 = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs, i64 0, i64 %idxprom54, !dbg !3520
  %y56 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arrayidx55, i32 0, i32 1, !dbg !3522
  store i32 %add53, i32* %y56, align 8, !dbg !3523
  ret void, !dbg !3524
}

; Function Attrs: nounwind uwtable
define internal void @vertical_compose_fidelityiL0_8bit(i8* %_dst, i8** %_b, i32 %width) #0 !dbg !3525 {
entry:
  %_dst.addr = alloca i8*, align 8
  %_b.addr = alloca i8**, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %dst = alloca i16*, align 8
  %b0 = alloca i16*, align 8
  %b1 = alloca i16*, align 8
  %b2 = alloca i16*, align 8
  %b3 = alloca i16*, align 8
  %b4 = alloca i16*, align 8
  %b5 = alloca i16*, align 8
  %b6 = alloca i16*, align 8
  %b7 = alloca i16*, align 8
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !3526, metadata !87), !dbg !3527
  store i8** %_b, i8*** %_b.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_b.addr, metadata !3528, metadata !87), !dbg !3529
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !3530, metadata !87), !dbg !3531
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3532, metadata !87), !dbg !3533
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !3534, metadata !87), !dbg !3535
  %0 = load i8*, i8** %_dst.addr, align 8, !dbg !3536
  %1 = bitcast i8* %0 to i16*, !dbg !3537
  store i16* %1, i16** %dst, align 8, !dbg !3535
  call void @llvm.dbg.declare(metadata i16** %b0, metadata !3538, metadata !87), !dbg !3539
  %2 = load i8**, i8*** %_b.addr, align 8, !dbg !3540
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 0, !dbg !3540
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !3540
  %4 = bitcast i8* %3 to i16*, !dbg !3541
  store i16* %4, i16** %b0, align 8, !dbg !3539
  call void @llvm.dbg.declare(metadata i16** %b1, metadata !3542, metadata !87), !dbg !3543
  %5 = load i8**, i8*** %_b.addr, align 8, !dbg !3544
  %arrayidx1 = getelementptr inbounds i8*, i8** %5, i64 1, !dbg !3544
  %6 = load i8*, i8** %arrayidx1, align 8, !dbg !3544
  %7 = bitcast i8* %6 to i16*, !dbg !3545
  store i16* %7, i16** %b1, align 8, !dbg !3543
  call void @llvm.dbg.declare(metadata i16** %b2, metadata !3546, metadata !87), !dbg !3547
  %8 = load i8**, i8*** %_b.addr, align 8, !dbg !3548
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 2, !dbg !3548
  %9 = load i8*, i8** %arrayidx2, align 8, !dbg !3548
  %10 = bitcast i8* %9 to i16*, !dbg !3549
  store i16* %10, i16** %b2, align 8, !dbg !3547
  call void @llvm.dbg.declare(metadata i16** %b3, metadata !3550, metadata !87), !dbg !3551
  %11 = load i8**, i8*** %_b.addr, align 8, !dbg !3552
  %arrayidx3 = getelementptr inbounds i8*, i8** %11, i64 3, !dbg !3552
  %12 = load i8*, i8** %arrayidx3, align 8, !dbg !3552
  %13 = bitcast i8* %12 to i16*, !dbg !3553
  store i16* %13, i16** %b3, align 8, !dbg !3551
  call void @llvm.dbg.declare(metadata i16** %b4, metadata !3554, metadata !87), !dbg !3555
  %14 = load i8**, i8*** %_b.addr, align 8, !dbg !3556
  %arrayidx4 = getelementptr inbounds i8*, i8** %14, i64 4, !dbg !3556
  %15 = load i8*, i8** %arrayidx4, align 8, !dbg !3556
  %16 = bitcast i8* %15 to i16*, !dbg !3557
  store i16* %16, i16** %b4, align 8, !dbg !3555
  call void @llvm.dbg.declare(metadata i16** %b5, metadata !3558, metadata !87), !dbg !3559
  %17 = load i8**, i8*** %_b.addr, align 8, !dbg !3560
  %arrayidx5 = getelementptr inbounds i8*, i8** %17, i64 5, !dbg !3560
  %18 = load i8*, i8** %arrayidx5, align 8, !dbg !3560
  %19 = bitcast i8* %18 to i16*, !dbg !3561
  store i16* %19, i16** %b5, align 8, !dbg !3559
  call void @llvm.dbg.declare(metadata i16** %b6, metadata !3562, metadata !87), !dbg !3563
  %20 = load i8**, i8*** %_b.addr, align 8, !dbg !3564
  %arrayidx6 = getelementptr inbounds i8*, i8** %20, i64 6, !dbg !3564
  %21 = load i8*, i8** %arrayidx6, align 8, !dbg !3564
  %22 = bitcast i8* %21 to i16*, !dbg !3565
  store i16* %22, i16** %b6, align 8, !dbg !3563
  call void @llvm.dbg.declare(metadata i16** %b7, metadata !3566, metadata !87), !dbg !3567
  %23 = load i8**, i8*** %_b.addr, align 8, !dbg !3568
  %arrayidx7 = getelementptr inbounds i8*, i8** %23, i64 7, !dbg !3568
  %24 = load i8*, i8** %arrayidx7, align 8, !dbg !3568
  %25 = bitcast i8* %24 to i16*, !dbg !3569
  store i16* %25, i16** %b7, align 8, !dbg !3567
  store i32 0, i32* %i, align 4, !dbg !3570
  br label %for.cond, !dbg !3572

for.cond:                                         ; preds = %for.inc, %entry
  %26 = load i32, i32* %i, align 4, !dbg !3573
  %27 = load i32, i32* %width.addr, align 4, !dbg !3576
  %cmp = icmp slt i32 %26, %27, !dbg !3577
  br i1 %cmp, label %for.body, label %for.end, !dbg !3578

for.body:                                         ; preds = %for.cond
  %28 = load i32, i32* %i, align 4, !dbg !3579
  %idxprom = sext i32 %28 to i64, !dbg !3581
  %29 = load i16*, i16** %dst, align 8, !dbg !3581
  %arrayidx8 = getelementptr inbounds i16, i16* %29, i64 %idxprom, !dbg !3581
  %30 = load i16, i16* %arrayidx8, align 2, !dbg !3581
  %conv = sext i16 %30 to i32, !dbg !3582
  %31 = load i32, i32* %i, align 4, !dbg !3583
  %idxprom9 = sext i32 %31 to i64, !dbg !3584
  %32 = load i16*, i16** %b0, align 8, !dbg !3584
  %arrayidx10 = getelementptr inbounds i16, i16* %32, i64 %idxprom9, !dbg !3584
  %33 = load i16, i16* %arrayidx10, align 2, !dbg !3584
  %conv11 = sext i16 %33 to i32, !dbg !3584
  %34 = load i32, i32* %i, align 4, !dbg !3585
  %idxprom12 = sext i32 %34 to i64, !dbg !3586
  %35 = load i16*, i16** %b7, align 8, !dbg !3586
  %arrayidx13 = getelementptr inbounds i16, i16* %35, i64 %idxprom12, !dbg !3586
  %36 = load i16, i16* %arrayidx13, align 2, !dbg !3586
  %conv14 = sext i16 %36 to i32, !dbg !3587
  %add = add i32 %conv11, %conv14, !dbg !3588
  %mul = mul i32 -8, %add, !dbg !3589
  %37 = load i32, i32* %i, align 4, !dbg !3590
  %idxprom15 = sext i32 %37 to i64, !dbg !3591
  %38 = load i16*, i16** %b1, align 8, !dbg !3591
  %arrayidx16 = getelementptr inbounds i16, i16* %38, i64 %idxprom15, !dbg !3591
  %39 = load i16, i16* %arrayidx16, align 2, !dbg !3591
  %conv17 = sext i16 %39 to i32, !dbg !3591
  %40 = load i32, i32* %i, align 4, !dbg !3592
  %idxprom18 = sext i32 %40 to i64, !dbg !3593
  %41 = load i16*, i16** %b6, align 8, !dbg !3593
  %arrayidx19 = getelementptr inbounds i16, i16* %41, i64 %idxprom18, !dbg !3593
  %42 = load i16, i16* %arrayidx19, align 2, !dbg !3593
  %conv20 = sext i16 %42 to i32, !dbg !3594
  %add21 = add i32 %conv17, %conv20, !dbg !3595
  %mul22 = mul i32 21, %add21, !dbg !3596
  %add23 = add i32 %mul, %mul22, !dbg !3597
  %43 = load i32, i32* %i, align 4, !dbg !3598
  %idxprom24 = sext i32 %43 to i64, !dbg !3599
  %44 = load i16*, i16** %b2, align 8, !dbg !3599
  %arrayidx25 = getelementptr inbounds i16, i16* %44, i64 %idxprom24, !dbg !3599
  %45 = load i16, i16* %arrayidx25, align 2, !dbg !3599
  %conv26 = sext i16 %45 to i32, !dbg !3599
  %46 = load i32, i32* %i, align 4, !dbg !3600
  %idxprom27 = sext i32 %46 to i64, !dbg !3601
  %47 = load i16*, i16** %b5, align 8, !dbg !3601
  %arrayidx28 = getelementptr inbounds i16, i16* %47, i64 %idxprom27, !dbg !3601
  %48 = load i16, i16* %arrayidx28, align 2, !dbg !3601
  %conv29 = sext i16 %48 to i32, !dbg !3602
  %add30 = add i32 %conv26, %conv29, !dbg !3603
  %mul31 = mul i32 46, %add30, !dbg !3604
  %sub = sub i32 %add23, %mul31, !dbg !3605
  %49 = load i32, i32* %i, align 4, !dbg !3606
  %idxprom32 = sext i32 %49 to i64, !dbg !3607
  %50 = load i16*, i16** %b3, align 8, !dbg !3607
  %arrayidx33 = getelementptr inbounds i16, i16* %50, i64 %idxprom32, !dbg !3607
  %51 = load i16, i16* %arrayidx33, align 2, !dbg !3607
  %conv34 = sext i16 %51 to i32, !dbg !3607
  %52 = load i32, i32* %i, align 4, !dbg !3608
  %idxprom35 = sext i32 %52 to i64, !dbg !3609
  %53 = load i16*, i16** %b4, align 8, !dbg !3609
  %arrayidx36 = getelementptr inbounds i16, i16* %53, i64 %idxprom35, !dbg !3609
  %54 = load i16, i16* %arrayidx36, align 2, !dbg !3609
  %conv37 = sext i16 %54 to i32, !dbg !3610
  %add38 = add i32 %conv34, %conv37, !dbg !3611
  %mul39 = mul i32 161, %add38, !dbg !3612
  %add40 = add i32 %sub, %mul39, !dbg !3613
  %add41 = add i32 %add40, 128, !dbg !3614
  %shr = ashr i32 %add41, 8, !dbg !3615
  %sub42 = sub i32 %conv, %shr, !dbg !3616
  %conv43 = trunc i32 %sub42 to i16, !dbg !3617
  %55 = load i32, i32* %i, align 4, !dbg !3618
  %idxprom44 = sext i32 %55 to i64, !dbg !3619
  %56 = load i16*, i16** %dst, align 8, !dbg !3619
  %arrayidx45 = getelementptr inbounds i16, i16* %56, i64 %idxprom44, !dbg !3619
  store i16 %conv43, i16* %arrayidx45, align 2, !dbg !3620
  br label %for.inc, !dbg !3621

for.inc:                                          ; preds = %for.body
  %57 = load i32, i32* %i, align 4, !dbg !3622
  %inc = add nsw i32 %57, 1, !dbg !3622
  store i32 %inc, i32* %i, align 4, !dbg !3622
  br label %for.cond, !dbg !3624, !llvm.loop !3625

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3627
}

; Function Attrs: nounwind uwtable
define internal void @vertical_compose_fidelityiH0_8bit(i8* %_dst, i8** %_b, i32 %width) #0 !dbg !3628 {
entry:
  %_dst.addr = alloca i8*, align 8
  %_b.addr = alloca i8**, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %dst = alloca i16*, align 8
  %b0 = alloca i16*, align 8
  %b1 = alloca i16*, align 8
  %b2 = alloca i16*, align 8
  %b3 = alloca i16*, align 8
  %b4 = alloca i16*, align 8
  %b5 = alloca i16*, align 8
  %b6 = alloca i16*, align 8
  %b7 = alloca i16*, align 8
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !3629, metadata !87), !dbg !3630
  store i8** %_b, i8*** %_b.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_b.addr, metadata !3631, metadata !87), !dbg !3632
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !3633, metadata !87), !dbg !3634
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3635, metadata !87), !dbg !3636
  call void @llvm.dbg.declare(metadata i16** %dst, metadata !3637, metadata !87), !dbg !3638
  %0 = load i8*, i8** %_dst.addr, align 8, !dbg !3639
  %1 = bitcast i8* %0 to i16*, !dbg !3640
  store i16* %1, i16** %dst, align 8, !dbg !3638
  call void @llvm.dbg.declare(metadata i16** %b0, metadata !3641, metadata !87), !dbg !3642
  %2 = load i8**, i8*** %_b.addr, align 8, !dbg !3643
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 0, !dbg !3643
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !3643
  %4 = bitcast i8* %3 to i16*, !dbg !3644
  store i16* %4, i16** %b0, align 8, !dbg !3642
  call void @llvm.dbg.declare(metadata i16** %b1, metadata !3645, metadata !87), !dbg !3646
  %5 = load i8**, i8*** %_b.addr, align 8, !dbg !3647
  %arrayidx1 = getelementptr inbounds i8*, i8** %5, i64 1, !dbg !3647
  %6 = load i8*, i8** %arrayidx1, align 8, !dbg !3647
  %7 = bitcast i8* %6 to i16*, !dbg !3648
  store i16* %7, i16** %b1, align 8, !dbg !3646
  call void @llvm.dbg.declare(metadata i16** %b2, metadata !3649, metadata !87), !dbg !3650
  %8 = load i8**, i8*** %_b.addr, align 8, !dbg !3651
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 2, !dbg !3651
  %9 = load i8*, i8** %arrayidx2, align 8, !dbg !3651
  %10 = bitcast i8* %9 to i16*, !dbg !3652
  store i16* %10, i16** %b2, align 8, !dbg !3650
  call void @llvm.dbg.declare(metadata i16** %b3, metadata !3653, metadata !87), !dbg !3654
  %11 = load i8**, i8*** %_b.addr, align 8, !dbg !3655
  %arrayidx3 = getelementptr inbounds i8*, i8** %11, i64 3, !dbg !3655
  %12 = load i8*, i8** %arrayidx3, align 8, !dbg !3655
  %13 = bitcast i8* %12 to i16*, !dbg !3656
  store i16* %13, i16** %b3, align 8, !dbg !3654
  call void @llvm.dbg.declare(metadata i16** %b4, metadata !3657, metadata !87), !dbg !3658
  %14 = load i8**, i8*** %_b.addr, align 8, !dbg !3659
  %arrayidx4 = getelementptr inbounds i8*, i8** %14, i64 4, !dbg !3659
  %15 = load i8*, i8** %arrayidx4, align 8, !dbg !3659
  %16 = bitcast i8* %15 to i16*, !dbg !3660
  store i16* %16, i16** %b4, align 8, !dbg !3658
  call void @llvm.dbg.declare(metadata i16** %b5, metadata !3661, metadata !87), !dbg !3662
  %17 = load i8**, i8*** %_b.addr, align 8, !dbg !3663
  %arrayidx5 = getelementptr inbounds i8*, i8** %17, i64 5, !dbg !3663
  %18 = load i8*, i8** %arrayidx5, align 8, !dbg !3663
  %19 = bitcast i8* %18 to i16*, !dbg !3664
  store i16* %19, i16** %b5, align 8, !dbg !3662
  call void @llvm.dbg.declare(metadata i16** %b6, metadata !3665, metadata !87), !dbg !3666
  %20 = load i8**, i8*** %_b.addr, align 8, !dbg !3667
  %arrayidx6 = getelementptr inbounds i8*, i8** %20, i64 6, !dbg !3667
  %21 = load i8*, i8** %arrayidx6, align 8, !dbg !3667
  %22 = bitcast i8* %21 to i16*, !dbg !3668
  store i16* %22, i16** %b6, align 8, !dbg !3666
  call void @llvm.dbg.declare(metadata i16** %b7, metadata !3669, metadata !87), !dbg !3670
  %23 = load i8**, i8*** %_b.addr, align 8, !dbg !3671
  %arrayidx7 = getelementptr inbounds i8*, i8** %23, i64 7, !dbg !3671
  %24 = load i8*, i8** %arrayidx7, align 8, !dbg !3671
  %25 = bitcast i8* %24 to i16*, !dbg !3672
  store i16* %25, i16** %b7, align 8, !dbg !3670
  store i32 0, i32* %i, align 4, !dbg !3673
  br label %for.cond, !dbg !3675

for.cond:                                         ; preds = %for.inc, %entry
  %26 = load i32, i32* %i, align 4, !dbg !3676
  %27 = load i32, i32* %width.addr, align 4, !dbg !3679
  %cmp = icmp slt i32 %26, %27, !dbg !3680
  br i1 %cmp, label %for.body, label %for.end, !dbg !3681

for.body:                                         ; preds = %for.cond
  %28 = load i32, i32* %i, align 4, !dbg !3682
  %idxprom = sext i32 %28 to i64, !dbg !3684
  %29 = load i16*, i16** %dst, align 8, !dbg !3684
  %arrayidx8 = getelementptr inbounds i16, i16* %29, i64 %idxprom, !dbg !3684
  %30 = load i16, i16* %arrayidx8, align 2, !dbg !3684
  %conv = sext i16 %30 to i32, !dbg !3685
  %31 = load i32, i32* %i, align 4, !dbg !3686
  %idxprom9 = sext i32 %31 to i64, !dbg !3687
  %32 = load i16*, i16** %b0, align 8, !dbg !3687
  %arrayidx10 = getelementptr inbounds i16, i16* %32, i64 %idxprom9, !dbg !3687
  %33 = load i16, i16* %arrayidx10, align 2, !dbg !3687
  %conv11 = sext i16 %33 to i32, !dbg !3687
  %34 = load i32, i32* %i, align 4, !dbg !3688
  %idxprom12 = sext i32 %34 to i64, !dbg !3689
  %35 = load i16*, i16** %b7, align 8, !dbg !3689
  %arrayidx13 = getelementptr inbounds i16, i16* %35, i64 %idxprom12, !dbg !3689
  %36 = load i16, i16* %arrayidx13, align 2, !dbg !3689
  %conv14 = sext i16 %36 to i32, !dbg !3690
  %add = add i32 %conv11, %conv14, !dbg !3691
  %mul = mul i32 -2, %add, !dbg !3692
  %37 = load i32, i32* %i, align 4, !dbg !3693
  %idxprom15 = sext i32 %37 to i64, !dbg !3694
  %38 = load i16*, i16** %b1, align 8, !dbg !3694
  %arrayidx16 = getelementptr inbounds i16, i16* %38, i64 %idxprom15, !dbg !3694
  %39 = load i16, i16* %arrayidx16, align 2, !dbg !3694
  %conv17 = sext i16 %39 to i32, !dbg !3694
  %40 = load i32, i32* %i, align 4, !dbg !3695
  %idxprom18 = sext i32 %40 to i64, !dbg !3696
  %41 = load i16*, i16** %b6, align 8, !dbg !3696
  %arrayidx19 = getelementptr inbounds i16, i16* %41, i64 %idxprom18, !dbg !3696
  %42 = load i16, i16* %arrayidx19, align 2, !dbg !3696
  %conv20 = sext i16 %42 to i32, !dbg !3697
  %add21 = add i32 %conv17, %conv20, !dbg !3698
  %mul22 = mul i32 10, %add21, !dbg !3699
  %add23 = add i32 %mul, %mul22, !dbg !3700
  %43 = load i32, i32* %i, align 4, !dbg !3701
  %idxprom24 = sext i32 %43 to i64, !dbg !3702
  %44 = load i16*, i16** %b2, align 8, !dbg !3702
  %arrayidx25 = getelementptr inbounds i16, i16* %44, i64 %idxprom24, !dbg !3702
  %45 = load i16, i16* %arrayidx25, align 2, !dbg !3702
  %conv26 = sext i16 %45 to i32, !dbg !3702
  %46 = load i32, i32* %i, align 4, !dbg !3703
  %idxprom27 = sext i32 %46 to i64, !dbg !3704
  %47 = load i16*, i16** %b5, align 8, !dbg !3704
  %arrayidx28 = getelementptr inbounds i16, i16* %47, i64 %idxprom27, !dbg !3704
  %48 = load i16, i16* %arrayidx28, align 2, !dbg !3704
  %conv29 = sext i16 %48 to i32, !dbg !3705
  %add30 = add i32 %conv26, %conv29, !dbg !3706
  %mul31 = mul i32 25, %add30, !dbg !3707
  %sub = sub i32 %add23, %mul31, !dbg !3708
  %49 = load i32, i32* %i, align 4, !dbg !3709
  %idxprom32 = sext i32 %49 to i64, !dbg !3710
  %50 = load i16*, i16** %b3, align 8, !dbg !3710
  %arrayidx33 = getelementptr inbounds i16, i16* %50, i64 %idxprom32, !dbg !3710
  %51 = load i16, i16* %arrayidx33, align 2, !dbg !3710
  %conv34 = sext i16 %51 to i32, !dbg !3710
  %52 = load i32, i32* %i, align 4, !dbg !3711
  %idxprom35 = sext i32 %52 to i64, !dbg !3712
  %53 = load i16*, i16** %b4, align 8, !dbg !3712
  %arrayidx36 = getelementptr inbounds i16, i16* %53, i64 %idxprom35, !dbg !3712
  %54 = load i16, i16* %arrayidx36, align 2, !dbg !3712
  %conv37 = sext i16 %54 to i32, !dbg !3713
  %add38 = add i32 %conv34, %conv37, !dbg !3714
  %mul39 = mul i32 81, %add38, !dbg !3715
  %add40 = add i32 %sub, %mul39, !dbg !3716
  %add41 = add i32 %add40, 128, !dbg !3717
  %shr = ashr i32 %add41, 8, !dbg !3718
  %add42 = add i32 %conv, %shr, !dbg !3719
  %conv43 = trunc i32 %add42 to i16, !dbg !3720
  %55 = load i32, i32* %i, align 4, !dbg !3721
  %idxprom44 = sext i32 %55 to i64, !dbg !3722
  %56 = load i16*, i16** %dst, align 8, !dbg !3722
  %arrayidx45 = getelementptr inbounds i16, i16* %56, i64 %idxprom44, !dbg !3722
  store i16 %conv43, i16* %arrayidx45, align 2, !dbg !3723
  br label %for.inc, !dbg !3724

for.inc:                                          ; preds = %for.body
  %57 = load i32, i32* %i, align 4, !dbg !3725
  %inc = add nsw i32 %57, 1, !dbg !3725
  store i32 %inc, i32* %i, align 4, !dbg !3725
  br label %for.cond, !dbg !3727, !llvm.loop !3728

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3730
}

; Function Attrs: nounwind uwtable
define internal void @horizontal_compose_fidelityi_8bit(i8* %_b, i8* %_tmp, i32 %w) #0 !dbg !3731 {
entry:
  %retval.i105 = alloca i32, align 4
  %a.addr.i106 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i106, metadata !904, metadata !87), !dbg !3732
  %amin.addr.i107 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i107, metadata !911, metadata !87), !dbg !3739
  %amax.addr.i108 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i108, metadata !913, metadata !87), !dbg !3740
  %dst.addr.i = alloca i16*, align 8
  call void @llvm.dbg.declare(metadata i16** %dst.addr.i, metadata !2296, metadata !87), !dbg !3741
  %src0.addr.i = alloca i16*, align 8
  call void @llvm.dbg.declare(metadata i16** %src0.addr.i, metadata !2302, metadata !87), !dbg !3743
  %src1.addr.i = alloca i16*, align 8
  call void @llvm.dbg.declare(metadata i16** %src1.addr.i, metadata !2304, metadata !87), !dbg !3744
  %w2.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w2.addr.i, metadata !2306, metadata !87), !dbg !3745
  %add.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %add.addr.i, metadata !2308, metadata !87), !dbg !3746
  %shift.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %shift.addr.i, metadata !2310, metadata !87), !dbg !3747
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !2312, metadata !87), !dbg !3748
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !904, metadata !87), !dbg !3749
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !911, metadata !87), !dbg !3756
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !913, metadata !87), !dbg !3757
  %_b.addr = alloca i8*, align 8
  %_tmp.addr = alloca i8*, align 8
  %w.addr = alloca i32, align 4
  %w2 = alloca i32, align 4
  %i = alloca i32, align 4
  %x = alloca i32, align 4
  %v = alloca [8 x i16], align 16
  %b = alloca i16*, align 8
  %tmp = alloca i16*, align 8
  store i8* %_b, i8** %_b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b.addr, metadata !3758, metadata !87), !dbg !3759
  store i8* %_tmp, i8** %_tmp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_tmp.addr, metadata !3760, metadata !87), !dbg !3761
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !3762, metadata !87), !dbg !3763
  call void @llvm.dbg.declare(metadata i32* %w2, metadata !3764, metadata !87), !dbg !3765
  %0 = load i32, i32* %w.addr, align 4, !dbg !3766
  %shr = ashr i32 %0, 1, !dbg !3767
  store i32 %shr, i32* %w2, align 4, !dbg !3765
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3768, metadata !87), !dbg !3769
  call void @llvm.dbg.declare(metadata i32* %x, metadata !3770, metadata !87), !dbg !3771
  call void @llvm.dbg.declare(metadata [8 x i16]* %v, metadata !3772, metadata !87), !dbg !3774
  call void @llvm.dbg.declare(metadata i16** %b, metadata !3775, metadata !87), !dbg !3776
  %1 = load i8*, i8** %_b.addr, align 8, !dbg !3777
  %2 = bitcast i8* %1 to i16*, !dbg !3778
  store i16* %2, i16** %b, align 8, !dbg !3776
  call void @llvm.dbg.declare(metadata i16** %tmp, metadata !3779, metadata !87), !dbg !3780
  %3 = load i8*, i8** %_tmp.addr, align 8, !dbg !3781
  %4 = bitcast i8* %3 to i16*, !dbg !3782
  store i16* %4, i16** %tmp, align 8, !dbg !3780
  store i32 0, i32* %x, align 4, !dbg !3783
  br label %for.cond, !dbg !3784

for.cond:                                         ; preds = %for.inc42, %entry
  %5 = load i32, i32* %x, align 4, !dbg !3785
  %6 = load i32, i32* %w2, align 4, !dbg !3787
  %cmp = icmp slt i32 %5, %6, !dbg !3788
  br i1 %cmp, label %for.body, label %for.end44, !dbg !3789

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !3790
  br label %for.cond1, !dbg !3791

for.cond1:                                        ; preds = %for.inc, %for.body
  %7 = load i32, i32* %i, align 4, !dbg !3792
  %cmp2 = icmp slt i32 %7, 8, !dbg !3794
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !3795

for.body3:                                        ; preds = %for.cond1
  %8 = load i32, i32* %x, align 4, !dbg !3796
  %sub = sub nsw i32 %8, 3, !dbg !3797
  %9 = load i32, i32* %i, align 4, !dbg !3798
  %add = add nsw i32 %sub, %9, !dbg !3799
  %10 = load i32, i32* %w2, align 4, !dbg !3800
  %sub4 = sub nsw i32 %10, 1, !dbg !3801
  store i32 %add, i32* %a.addr.i, align 4, !dbg !3802
  store i32 0, i32* %amin.addr.i, align 4, !dbg !3802
  store i32 %sub4, i32* %amax.addr.i, align 4, !dbg !3802
  %11 = load i32, i32* %a.addr.i, align 4, !dbg !3803
  %12 = load i32, i32* %amin.addr.i, align 4, !dbg !3804
  %cmp.i = icmp slt i32 %11, %12, !dbg !3805
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !3806

if.then.i:                                        ; preds = %for.body3
  %13 = load i32, i32* %amin.addr.i, align 4, !dbg !3807
  store i32 %13, i32* %retval.i, align 4, !dbg !3808
  br label %av_clip_c.exit, !dbg !3808

if.else.i:                                        ; preds = %for.body3
  %14 = load i32, i32* %a.addr.i, align 4, !dbg !3809
  %15 = load i32, i32* %amax.addr.i, align 4, !dbg !3810
  %cmp1.i = icmp sgt i32 %14, %15, !dbg !3811
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !3812

if.then2.i:                                       ; preds = %if.else.i
  %16 = load i32, i32* %amax.addr.i, align 4, !dbg !3813
  store i32 %16, i32* %retval.i, align 4, !dbg !3814
  br label %av_clip_c.exit, !dbg !3814

if.else3.i:                                       ; preds = %if.else.i
  %17 = load i32, i32* %a.addr.i, align 4, !dbg !3815
  store i32 %17, i32* %retval.i, align 4, !dbg !3816
  br label %av_clip_c.exit, !dbg !3816

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %18 = load i32, i32* %retval.i, align 4, !dbg !3817
  %idxprom = sext i32 %18 to i64, !dbg !3818
  %19 = load i16*, i16** %b, align 8, !dbg !3818
  %arrayidx = getelementptr inbounds i16, i16* %19, i64 %idxprom, !dbg !3818
  %20 = load i16, i16* %arrayidx, align 2, !dbg !3818
  %21 = load i32, i32* %i, align 4, !dbg !3819
  %idxprom5 = sext i32 %21 to i64, !dbg !3820
  %arrayidx6 = getelementptr inbounds [8 x i16], [8 x i16]* %v, i64 0, i64 %idxprom5, !dbg !3820
  store i16 %20, i16* %arrayidx6, align 2, !dbg !3821
  br label %for.inc, !dbg !3820

for.inc:                                          ; preds = %av_clip_c.exit
  %22 = load i32, i32* %i, align 4, !dbg !3822
  %inc = add nsw i32 %22, 1, !dbg !3822
  store i32 %inc, i32* %i, align 4, !dbg !3822
  br label %for.cond1, !dbg !3824, !llvm.loop !3825

for.end:                                          ; preds = %for.cond1
  %23 = load i32, i32* %x, align 4, !dbg !3827
  %24 = load i32, i32* %w2, align 4, !dbg !3828
  %add7 = add nsw i32 %23, %24, !dbg !3829
  %idxprom8 = sext i32 %add7 to i64, !dbg !3830
  %25 = load i16*, i16** %b, align 8, !dbg !3830
  %arrayidx9 = getelementptr inbounds i16, i16* %25, i64 %idxprom8, !dbg !3830
  %26 = load i16, i16* %arrayidx9, align 2, !dbg !3830
  %conv = sext i16 %26 to i32, !dbg !3831
  %arrayidx10 = getelementptr inbounds [8 x i16], [8 x i16]* %v, i64 0, i64 0, !dbg !3832
  %27 = load i16, i16* %arrayidx10, align 16, !dbg !3832
  %conv11 = sext i16 %27 to i32, !dbg !3832
  %arrayidx12 = getelementptr inbounds [8 x i16], [8 x i16]* %v, i64 0, i64 7, !dbg !3833
  %28 = load i16, i16* %arrayidx12, align 2, !dbg !3833
  %conv13 = sext i16 %28 to i32, !dbg !3834
  %add14 = add i32 %conv11, %conv13, !dbg !3835
  %mul = mul i32 -2, %add14, !dbg !3836
  %arrayidx15 = getelementptr inbounds [8 x i16], [8 x i16]* %v, i64 0, i64 1, !dbg !3837
  %29 = load i16, i16* %arrayidx15, align 2, !dbg !3837
  %conv16 = sext i16 %29 to i32, !dbg !3837
  %arrayidx17 = getelementptr inbounds [8 x i16], [8 x i16]* %v, i64 0, i64 6, !dbg !3838
  %30 = load i16, i16* %arrayidx17, align 4, !dbg !3838
  %conv18 = sext i16 %30 to i32, !dbg !3839
  %add19 = add i32 %conv16, %conv18, !dbg !3840
  %mul20 = mul i32 10, %add19, !dbg !3841
  %add21 = add i32 %mul, %mul20, !dbg !3842
  %arrayidx22 = getelementptr inbounds [8 x i16], [8 x i16]* %v, i64 0, i64 2, !dbg !3843
  %31 = load i16, i16* %arrayidx22, align 4, !dbg !3843
  %conv23 = sext i16 %31 to i32, !dbg !3843
  %arrayidx24 = getelementptr inbounds [8 x i16], [8 x i16]* %v, i64 0, i64 5, !dbg !3844
  %32 = load i16, i16* %arrayidx24, align 2, !dbg !3844
  %conv25 = sext i16 %32 to i32, !dbg !3845
  %add26 = add i32 %conv23, %conv25, !dbg !3846
  %mul27 = mul i32 25, %add26, !dbg !3847
  %sub28 = sub i32 %add21, %mul27, !dbg !3848
  %arrayidx29 = getelementptr inbounds [8 x i16], [8 x i16]* %v, i64 0, i64 3, !dbg !3849
  %33 = load i16, i16* %arrayidx29, align 2, !dbg !3849
  %conv30 = sext i16 %33 to i32, !dbg !3849
  %arrayidx31 = getelementptr inbounds [8 x i16], [8 x i16]* %v, i64 0, i64 4, !dbg !3850
  %34 = load i16, i16* %arrayidx31, align 8, !dbg !3850
  %conv32 = sext i16 %34 to i32, !dbg !3851
  %add33 = add i32 %conv30, %conv32, !dbg !3852
  %mul34 = mul i32 81, %add33, !dbg !3853
  %add35 = add i32 %sub28, %mul34, !dbg !3854
  %add36 = add i32 %add35, 128, !dbg !3855
  %shr37 = ashr i32 %add36, 8, !dbg !3856
  %add38 = add i32 %conv, %shr37, !dbg !3857
  %conv39 = trunc i32 %add38 to i16, !dbg !3858
  %35 = load i32, i32* %x, align 4, !dbg !3859
  %idxprom40 = sext i32 %35 to i64, !dbg !3860
  %36 = load i16*, i16** %tmp, align 8, !dbg !3860
  %arrayidx41 = getelementptr inbounds i16, i16* %36, i64 %idxprom40, !dbg !3860
  store i16 %conv39, i16* %arrayidx41, align 2, !dbg !3861
  br label %for.inc42, !dbg !3862

for.inc42:                                        ; preds = %for.end
  %37 = load i32, i32* %x, align 4, !dbg !3863
  %inc43 = add nsw i32 %37, 1, !dbg !3863
  store i32 %inc43, i32* %x, align 4, !dbg !3863
  br label %for.cond, !dbg !3865, !llvm.loop !3866

for.end44:                                        ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !3868
  br label %for.cond45, !dbg !3869

for.cond45:                                       ; preds = %for.inc101, %for.end44
  %38 = load i32, i32* %x, align 4, !dbg !3870
  %39 = load i32, i32* %w2, align 4, !dbg !3872
  %cmp46 = icmp slt i32 %38, %39, !dbg !3873
  br i1 %cmp46, label %for.body48, label %for.end103, !dbg !3874

for.body48:                                       ; preds = %for.cond45
  store i32 0, i32* %i, align 4, !dbg !3875
  br label %for.cond49, !dbg !3876

for.cond49:                                       ; preds = %for.inc61, %for.body48
  %40 = load i32, i32* %i, align 4, !dbg !3877
  %cmp50 = icmp slt i32 %40, 8, !dbg !3879
  br i1 %cmp50, label %for.body52, label %for.end63, !dbg !3880

for.body52:                                       ; preds = %for.cond49
  %41 = load i32, i32* %x, align 4, !dbg !3881
  %sub53 = sub nsw i32 %41, 4, !dbg !3882
  %42 = load i32, i32* %i, align 4, !dbg !3883
  %add54 = add nsw i32 %sub53, %42, !dbg !3884
  %43 = load i32, i32* %w2, align 4, !dbg !3885
  %sub55 = sub nsw i32 %43, 1, !dbg !3886
  store i32 %add54, i32* %a.addr.i106, align 4, !dbg !3887
  store i32 0, i32* %amin.addr.i107, align 4, !dbg !3887
  store i32 %sub55, i32* %amax.addr.i108, align 4, !dbg !3887
  %44 = load i32, i32* %a.addr.i106, align 4, !dbg !3888
  %45 = load i32, i32* %amin.addr.i107, align 4, !dbg !3889
  %cmp.i109 = icmp slt i32 %44, %45, !dbg !3890
  br i1 %cmp.i109, label %if.then.i110, label %if.else.i112, !dbg !3891

if.then.i110:                                     ; preds = %for.body52
  %46 = load i32, i32* %amin.addr.i107, align 4, !dbg !3892
  store i32 %46, i32* %retval.i105, align 4, !dbg !3893
  br label %av_clip_c.exit115, !dbg !3893

if.else.i112:                                     ; preds = %for.body52
  %47 = load i32, i32* %a.addr.i106, align 4, !dbg !3894
  %48 = load i32, i32* %amax.addr.i108, align 4, !dbg !3895
  %cmp1.i111 = icmp sgt i32 %47, %48, !dbg !3896
  br i1 %cmp1.i111, label %if.then2.i113, label %if.else3.i114, !dbg !3897

if.then2.i113:                                    ; preds = %if.else.i112
  %49 = load i32, i32* %amax.addr.i108, align 4, !dbg !3898
  store i32 %49, i32* %retval.i105, align 4, !dbg !3899
  br label %av_clip_c.exit115, !dbg !3899

if.else3.i114:                                    ; preds = %if.else.i112
  %50 = load i32, i32* %a.addr.i106, align 4, !dbg !3900
  store i32 %50, i32* %retval.i105, align 4, !dbg !3901
  br label %av_clip_c.exit115, !dbg !3901

av_clip_c.exit115:                                ; preds = %if.then.i110, %if.then2.i113, %if.else3.i114
  %51 = load i32, i32* %retval.i105, align 4, !dbg !3902
  %idxprom57 = sext i32 %51 to i64, !dbg !3903
  %52 = load i16*, i16** %tmp, align 8, !dbg !3903
  %arrayidx58 = getelementptr inbounds i16, i16* %52, i64 %idxprom57, !dbg !3903
  %53 = load i16, i16* %arrayidx58, align 2, !dbg !3903
  %54 = load i32, i32* %i, align 4, !dbg !3904
  %idxprom59 = sext i32 %54 to i64, !dbg !3905
  %arrayidx60 = getelementptr inbounds [8 x i16], [8 x i16]* %v, i64 0, i64 %idxprom59, !dbg !3905
  store i16 %53, i16* %arrayidx60, align 2, !dbg !3906
  br label %for.inc61, !dbg !3905

for.inc61:                                        ; preds = %av_clip_c.exit115
  %55 = load i32, i32* %i, align 4, !dbg !3907
  %inc62 = add nsw i32 %55, 1, !dbg !3907
  store i32 %inc62, i32* %i, align 4, !dbg !3907
  br label %for.cond49, !dbg !3909, !llvm.loop !3910

for.end63:                                        ; preds = %for.cond49
  %56 = load i32, i32* %x, align 4, !dbg !3912
  %idxprom64 = sext i32 %56 to i64, !dbg !3913
  %57 = load i16*, i16** %b, align 8, !dbg !3913
  %arrayidx65 = getelementptr inbounds i16, i16* %57, i64 %idxprom64, !dbg !3913
  %58 = load i16, i16* %arrayidx65, align 2, !dbg !3913
  %conv66 = sext i16 %58 to i32, !dbg !3914
  %arrayidx67 = getelementptr inbounds [8 x i16], [8 x i16]* %v, i64 0, i64 0, !dbg !3915
  %59 = load i16, i16* %arrayidx67, align 16, !dbg !3915
  %conv68 = sext i16 %59 to i32, !dbg !3915
  %arrayidx69 = getelementptr inbounds [8 x i16], [8 x i16]* %v, i64 0, i64 7, !dbg !3916
  %60 = load i16, i16* %arrayidx69, align 2, !dbg !3916
  %conv70 = sext i16 %60 to i32, !dbg !3917
  %add71 = add i32 %conv68, %conv70, !dbg !3918
  %mul72 = mul i32 -8, %add71, !dbg !3919
  %arrayidx73 = getelementptr inbounds [8 x i16], [8 x i16]* %v, i64 0, i64 1, !dbg !3920
  %61 = load i16, i16* %arrayidx73, align 2, !dbg !3920
  %conv74 = sext i16 %61 to i32, !dbg !3920
  %arrayidx75 = getelementptr inbounds [8 x i16], [8 x i16]* %v, i64 0, i64 6, !dbg !3921
  %62 = load i16, i16* %arrayidx75, align 4, !dbg !3921
  %conv76 = sext i16 %62 to i32, !dbg !3922
  %add77 = add i32 %conv74, %conv76, !dbg !3923
  %mul78 = mul i32 21, %add77, !dbg !3924
  %add79 = add i32 %mul72, %mul78, !dbg !3925
  %arrayidx80 = getelementptr inbounds [8 x i16], [8 x i16]* %v, i64 0, i64 2, !dbg !3926
  %63 = load i16, i16* %arrayidx80, align 4, !dbg !3926
  %conv81 = sext i16 %63 to i32, !dbg !3926
  %arrayidx82 = getelementptr inbounds [8 x i16], [8 x i16]* %v, i64 0, i64 5, !dbg !3927
  %64 = load i16, i16* %arrayidx82, align 2, !dbg !3927
  %conv83 = sext i16 %64 to i32, !dbg !3928
  %add84 = add i32 %conv81, %conv83, !dbg !3929
  %mul85 = mul i32 46, %add84, !dbg !3930
  %sub86 = sub i32 %add79, %mul85, !dbg !3931
  %arrayidx87 = getelementptr inbounds [8 x i16], [8 x i16]* %v, i64 0, i64 3, !dbg !3932
  %65 = load i16, i16* %arrayidx87, align 2, !dbg !3932
  %conv88 = sext i16 %65 to i32, !dbg !3932
  %arrayidx89 = getelementptr inbounds [8 x i16], [8 x i16]* %v, i64 0, i64 4, !dbg !3933
  %66 = load i16, i16* %arrayidx89, align 8, !dbg !3933
  %conv90 = sext i16 %66 to i32, !dbg !3934
  %add91 = add i32 %conv88, %conv90, !dbg !3935
  %mul92 = mul i32 161, %add91, !dbg !3936
  %add93 = add i32 %sub86, %mul92, !dbg !3937
  %add94 = add i32 %add93, 128, !dbg !3938
  %shr95 = ashr i32 %add94, 8, !dbg !3939
  %sub96 = sub i32 %conv66, %shr95, !dbg !3940
  %conv97 = trunc i32 %sub96 to i16, !dbg !3941
  %67 = load i32, i32* %x, align 4, !dbg !3942
  %68 = load i32, i32* %w2, align 4, !dbg !3943
  %add98 = add nsw i32 %67, %68, !dbg !3944
  %idxprom99 = sext i32 %add98 to i64, !dbg !3945
  %69 = load i16*, i16** %tmp, align 8, !dbg !3945
  %arrayidx100 = getelementptr inbounds i16, i16* %69, i64 %idxprom99, !dbg !3945
  store i16 %conv97, i16* %arrayidx100, align 2, !dbg !3946
  br label %for.inc101, !dbg !3947

for.inc101:                                       ; preds = %for.end63
  %70 = load i32, i32* %x, align 4, !dbg !3948
  %inc102 = add nsw i32 %70, 1, !dbg !3948
  store i32 %inc102, i32* %x, align 4, !dbg !3948
  br label %for.cond45, !dbg !3950, !llvm.loop !3951

for.end103:                                       ; preds = %for.cond45
  %71 = load i16*, i16** %b, align 8, !dbg !3953
  %72 = load i16*, i16** %tmp, align 8, !dbg !3954
  %73 = load i32, i32* %w2, align 4, !dbg !3955
  %idx.ext = sext i32 %73 to i64, !dbg !3956
  %add.ptr = getelementptr inbounds i16, i16* %72, i64 %idx.ext, !dbg !3956
  %74 = load i16*, i16** %tmp, align 8, !dbg !3957
  %75 = load i32, i32* %w2, align 4, !dbg !3958
  store i16* %71, i16** %dst.addr.i, align 8, !dbg !3959
  store i16* %add.ptr, i16** %src0.addr.i, align 8, !dbg !3959
  store i16* %74, i16** %src1.addr.i, align 8, !dbg !3959
  store i32 %75, i32* %w2.addr.i, align 4, !dbg !3959
  store i32 0, i32* %add.addr.i, align 4, !dbg !3959
  store i32 0, i32* %shift.addr.i, align 4, !dbg !3959
  store i32 0, i32* %i.i, align 4, !dbg !3960
  br label %for.cond.i, !dbg !3961

for.cond.i:                                       ; preds = %for.body.i, %for.end103
  %76 = load i32, i32* %i.i, align 4, !dbg !3962
  %77 = load i32, i32* %w2.addr.i, align 4, !dbg !3963
  %cmp.i104 = icmp slt i32 %76, %77, !dbg !3964
  br i1 %cmp.i104, label %for.body.i, label %interleave_8bit.exit, !dbg !3965

for.body.i:                                       ; preds = %for.cond.i
  %78 = load i32, i32* %i.i, align 4, !dbg !3966
  %idxprom.i = sext i32 %78 to i64, !dbg !3967
  %79 = load i16*, i16** %src0.addr.i, align 8, !dbg !3967
  %arrayidx.i = getelementptr inbounds i16, i16* %79, i64 %idxprom.i, !dbg !3967
  %80 = load i16, i16* %arrayidx.i, align 2, !dbg !3967
  %conv.i = sext i16 %80 to i32, !dbg !3967
  %81 = load i32, i32* %add.addr.i, align 4, !dbg !3968
  %add1.i = add i32 %conv.i, %81, !dbg !3969
  %82 = load i32, i32* %shift.addr.i, align 4, !dbg !3970
  %shr.i = ashr i32 %add1.i, %82, !dbg !3971
  %conv2.i = trunc i32 %shr.i to i16, !dbg !3972
  %83 = load i32, i32* %i.i, align 4, !dbg !3973
  %mul.i = mul nsw i32 2, %83, !dbg !3974
  %idxprom3.i = sext i32 %mul.i to i64, !dbg !3975
  %84 = load i16*, i16** %dst.addr.i, align 8, !dbg !3975
  %arrayidx4.i = getelementptr inbounds i16, i16* %84, i64 %idxprom3.i, !dbg !3975
  store i16 %conv2.i, i16* %arrayidx4.i, align 2, !dbg !3976
  %85 = load i32, i32* %i.i, align 4, !dbg !3977
  %idxprom5.i = sext i32 %85 to i64, !dbg !3978
  %86 = load i16*, i16** %src1.addr.i, align 8, !dbg !3978
  %arrayidx6.i = getelementptr inbounds i16, i16* %86, i64 %idxprom5.i, !dbg !3978
  %87 = load i16, i16* %arrayidx6.i, align 2, !dbg !3978
  %conv7.i = sext i16 %87 to i32, !dbg !3978
  %88 = load i32, i32* %add.addr.i, align 4, !dbg !3979
  %add8.i = add i32 %conv7.i, %88, !dbg !3980
  %89 = load i32, i32* %shift.addr.i, align 4, !dbg !3981
  %shr9.i = ashr i32 %add8.i, %89, !dbg !3982
  %conv10.i = trunc i32 %shr9.i to i16, !dbg !3983
  %90 = load i32, i32* %i.i, align 4, !dbg !3984
  %mul11.i = mul nsw i32 2, %90, !dbg !3985
  %add12.i = add nsw i32 %mul11.i, 1, !dbg !3986
  %idxprom13.i = sext i32 %add12.i to i64, !dbg !3987
  %91 = load i16*, i16** %dst.addr.i, align 8, !dbg !3987
  %arrayidx14.i = getelementptr inbounds i16, i16* %91, i64 %idxprom13.i, !dbg !3987
  store i16 %conv10.i, i16* %arrayidx14.i, align 2, !dbg !3988
  %92 = load i32, i32* %i.i, align 4, !dbg !3989
  %inc.i = add nsw i32 %92, 1, !dbg !3989
  store i32 %inc.i, i32* %i.i, align 4, !dbg !3989
  br label %for.cond.i, !dbg !3990, !llvm.loop !2467

interleave_8bit.exit:                             ; preds = %for.cond.i
  ret void, !dbg !3991
}

; Function Attrs: nounwind uwtable
define internal void @spatial_compose_daub97i_dy_8bit(%struct.DWTContext* %d, i32 %level, i32 %width, i32 %height, i32 %stride) #0 !dbg !3992 {
entry:
  %retval.i73 = alloca i32, align 4
  %x.addr.i74 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i74, metadata !1102, metadata !87), !dbg !3993
  %w.addr.i75 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i75, metadata !1109, metadata !87), !dbg !3995
  %retval.i = alloca i32, align 4
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !1102, metadata !87), !dbg !3996
  %w.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i, metadata !1109, metadata !87), !dbg !3998
  %d.addr = alloca %struct.DWTContext*, align 8
  %level.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  %vertical_compose_l0 = alloca void (i8*, i8*, i8*, i32)*, align 8
  %vertical_compose_h0 = alloca void (i8*, i8*, i8*, i32)*, align 8
  %vertical_compose_l1 = alloca void (i8*, i8*, i8*, i32)*, align 8
  %vertical_compose_h1 = alloca void (i8*, i8*, i8*, i32)*, align 8
  %cs = alloca %struct.DWTCompose*, align 8
  %i = alloca i32, align 4
  %y = alloca i32, align 4
  %b = alloca [6 x i8*], align 16
  store %struct.DWTContext* %d, %struct.DWTContext** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTContext** %d.addr, metadata !3999, metadata !87), !dbg !4000
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !4001, metadata !87), !dbg !4002
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !4003, metadata !87), !dbg !4004
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !4005, metadata !87), !dbg !4006
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !4007, metadata !87), !dbg !4008
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i32)** %vertical_compose_l0, metadata !4009, metadata !87), !dbg !4010
  %0 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !4011
  %vertical_compose_l01 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %0, i32 0, i32 8, !dbg !4012
  %1 = load void ()*, void ()** %vertical_compose_l01, align 8, !dbg !4012
  %2 = bitcast void ()* %1 to i8*, !dbg !4013
  %3 = bitcast i8* %2 to void (i8*, i8*, i8*, i32)*, !dbg !4013
  store void (i8*, i8*, i8*, i32)* %3, void (i8*, i8*, i8*, i32)** %vertical_compose_l0, align 8, !dbg !4010
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i32)** %vertical_compose_h0, metadata !4014, metadata !87), !dbg !4015
  %4 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !4016
  %vertical_compose_h02 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %4, i32 0, i32 9, !dbg !4017
  %5 = load void ()*, void ()** %vertical_compose_h02, align 8, !dbg !4017
  %6 = bitcast void ()* %5 to i8*, !dbg !4018
  %7 = bitcast i8* %6 to void (i8*, i8*, i8*, i32)*, !dbg !4018
  store void (i8*, i8*, i8*, i32)* %7, void (i8*, i8*, i8*, i32)** %vertical_compose_h0, align 8, !dbg !4015
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i32)** %vertical_compose_l1, metadata !4019, metadata !87), !dbg !4020
  %8 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !4021
  %vertical_compose_l13 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %8, i32 0, i32 10, !dbg !4022
  %9 = load void ()*, void ()** %vertical_compose_l13, align 8, !dbg !4022
  %10 = bitcast void ()* %9 to i8*, !dbg !4023
  %11 = bitcast i8* %10 to void (i8*, i8*, i8*, i32)*, !dbg !4023
  store void (i8*, i8*, i8*, i32)* %11, void (i8*, i8*, i8*, i32)** %vertical_compose_l1, align 8, !dbg !4020
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i32)** %vertical_compose_h1, metadata !4024, metadata !87), !dbg !4025
  %12 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !4026
  %vertical_compose_h14 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %12, i32 0, i32 11, !dbg !4027
  %13 = load void ()*, void ()** %vertical_compose_h14, align 8, !dbg !4027
  %14 = bitcast void ()* %13 to i8*, !dbg !4028
  %15 = bitcast i8* %14 to void (i8*, i8*, i8*, i32)*, !dbg !4028
  store void (i8*, i8*, i8*, i32)* %15, void (i8*, i8*, i8*, i32)** %vertical_compose_h1, align 8, !dbg !4025
  call void @llvm.dbg.declare(metadata %struct.DWTCompose** %cs, metadata !4029, metadata !87), !dbg !4030
  %16 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !4031
  %cs5 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %16, i32 0, i32 14, !dbg !4032
  %arraydecay = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs5, i32 0, i32 0, !dbg !4031
  %17 = load i32, i32* %level.addr, align 4, !dbg !4033
  %idx.ext = sext i32 %17 to i64, !dbg !4034
  %add.ptr = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arraydecay, i64 %idx.ext, !dbg !4034
  store %struct.DWTCompose* %add.ptr, %struct.DWTCompose** %cs, align 8, !dbg !4030
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4035, metadata !87), !dbg !4036
  call void @llvm.dbg.declare(metadata i32* %y, metadata !4037, metadata !87), !dbg !4038
  %18 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !4039
  %y6 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %18, i32 0, i32 1, !dbg !4040
  %19 = load i32, i32* %y6, align 8, !dbg !4040
  store i32 %19, i32* %y, align 4, !dbg !4038
  call void @llvm.dbg.declare(metadata [6 x i8*]* %b, metadata !4041, metadata !87), !dbg !4045
  store i32 0, i32* %i, align 4, !dbg !4046
  br label %for.cond, !dbg !4048

for.cond:                                         ; preds = %for.inc, %entry
  %20 = load i32, i32* %i, align 4, !dbg !4049
  %cmp = icmp slt i32 %20, 4, !dbg !4052
  br i1 %cmp, label %for.body, label %for.end, !dbg !4053

for.body:                                         ; preds = %for.cond
  %21 = load i32, i32* %i, align 4, !dbg !4054
  %idxprom = sext i32 %21 to i64, !dbg !4055
  %22 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !4055
  %b7 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %22, i32 0, i32 0, !dbg !4056
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %b7, i64 0, i64 %idxprom, !dbg !4055
  %23 = load i8*, i8** %arrayidx, align 8, !dbg !4055
  %24 = load i32, i32* %i, align 4, !dbg !4057
  %idxprom8 = sext i32 %24 to i64, !dbg !4058
  %arrayidx9 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 %idxprom8, !dbg !4058
  store i8* %23, i8** %arrayidx9, align 8, !dbg !4059
  br label %for.inc, !dbg !4058

for.inc:                                          ; preds = %for.body
  %25 = load i32, i32* %i, align 4, !dbg !4060
  %inc = add nsw i32 %25, 1, !dbg !4060
  store i32 %inc, i32* %i, align 4, !dbg !4060
  br label %for.cond, !dbg !4062, !llvm.loop !4063

for.end:                                          ; preds = %for.cond
  %26 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !4065
  %buffer = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %26, i32 0, i32 0, !dbg !4066
  %27 = load i8*, i8** %buffer, align 8, !dbg !4066
  %28 = load i32, i32* %y, align 4, !dbg !4067
  %add = add nsw i32 %28, 3, !dbg !4068
  %29 = load i32, i32* %height.addr, align 4, !dbg !4069
  %sub = sub nsw i32 %29, 1, !dbg !4070
  store i32 %add, i32* %x.addr.i, align 4, !dbg !4071
  store i32 %sub, i32* %w.addr.i, align 4, !dbg !4071
  %30 = load i32, i32* %w.addr.i, align 4, !dbg !4072
  %tobool.i = icmp ne i32 %30, 0, !dbg !4072
  br i1 %tobool.i, label %if.end.i, label %if.then.i, !dbg !4073

if.then.i:                                        ; preds = %for.end
  store i32 0, i32* %retval.i, align 4, !dbg !4074
  br label %avpriv_mirror.exit, !dbg !4074

if.end.i:                                         ; preds = %for.end
  br label %while.cond.i, !dbg !4075

while.cond.i:                                     ; preds = %if.end3.i, %if.end.i
  %31 = load i32, i32* %x.addr.i, align 4, !dbg !4076
  %32 = load i32, i32* %w.addr.i, align 4, !dbg !4077
  %cmp.i = icmp ugt i32 %31, %32, !dbg !4078
  br i1 %cmp.i, label %while.body.i, label %while.end.i, !dbg !4079

while.body.i:                                     ; preds = %while.cond.i
  %33 = load i32, i32* %x.addr.i, align 4, !dbg !4080
  %sub.i = sub nsw i32 0, %33, !dbg !4081
  store i32 %sub.i, i32* %x.addr.i, align 4, !dbg !4082
  %34 = load i32, i32* %x.addr.i, align 4, !dbg !4083
  %cmp1.i = icmp slt i32 %34, 0, !dbg !4084
  br i1 %cmp1.i, label %if.then2.i, label %if.end3.i, !dbg !4085

if.then2.i:                                       ; preds = %while.body.i
  %35 = load i32, i32* %w.addr.i, align 4, !dbg !4086
  %mul.i = mul nsw i32 2, %35, !dbg !4087
  %36 = load i32, i32* %x.addr.i, align 4, !dbg !4088
  %add.i = add nsw i32 %36, %mul.i, !dbg !4088
  store i32 %add.i, i32* %x.addr.i, align 4, !dbg !4088
  br label %if.end3.i, !dbg !4089

if.end3.i:                                        ; preds = %if.then2.i, %while.body.i
  br label %while.cond.i, !dbg !4090, !llvm.loop !1150

while.end.i:                                      ; preds = %while.cond.i
  %37 = load i32, i32* %x.addr.i, align 4, !dbg !4091
  store i32 %37, i32* %retval.i, align 4, !dbg !4092
  br label %avpriv_mirror.exit, !dbg !4092

avpriv_mirror.exit:                               ; preds = %if.then.i, %while.end.i
  %38 = load i32, i32* %retval.i, align 4, !dbg !4093
  %39 = load i32, i32* %stride.addr, align 4, !dbg !4094
  %mul = mul nsw i32 %38, %39, !dbg !4095
  %idx.ext10 = sext i32 %mul to i64, !dbg !4096
  %add.ptr11 = getelementptr inbounds i8, i8* %27, i64 %idx.ext10, !dbg !4096
  %arrayidx12 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 4, !dbg !4097
  store i8* %add.ptr11, i8** %arrayidx12, align 16, !dbg !4098
  %40 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !4099
  %buffer13 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %40, i32 0, i32 0, !dbg !4100
  %41 = load i8*, i8** %buffer13, align 8, !dbg !4100
  %42 = load i32, i32* %y, align 4, !dbg !4101
  %add14 = add nsw i32 %42, 4, !dbg !4102
  %43 = load i32, i32* %height.addr, align 4, !dbg !4103
  %sub15 = sub nsw i32 %43, 1, !dbg !4104
  store i32 %add14, i32* %x.addr.i74, align 4, !dbg !4105
  store i32 %sub15, i32* %w.addr.i75, align 4, !dbg !4105
  %44 = load i32, i32* %w.addr.i75, align 4, !dbg !4106
  %tobool.i76 = icmp ne i32 %44, 0, !dbg !4106
  br i1 %tobool.i76, label %if.end.i78, label %if.then.i77, !dbg !4107

if.then.i77:                                      ; preds = %avpriv_mirror.exit
  store i32 0, i32* %retval.i73, align 4, !dbg !4108
  br label %avpriv_mirror.exit89, !dbg !4108

if.end.i78:                                       ; preds = %avpriv_mirror.exit
  br label %while.cond.i80, !dbg !4109

while.cond.i80:                                   ; preds = %if.end3.i87, %if.end.i78
  %45 = load i32, i32* %x.addr.i74, align 4, !dbg !4110
  %46 = load i32, i32* %w.addr.i75, align 4, !dbg !4111
  %cmp.i79 = icmp ugt i32 %45, %46, !dbg !4112
  br i1 %cmp.i79, label %while.body.i83, label %while.end.i88, !dbg !4113

while.body.i83:                                   ; preds = %while.cond.i80
  %47 = load i32, i32* %x.addr.i74, align 4, !dbg !4114
  %sub.i81 = sub nsw i32 0, %47, !dbg !4115
  store i32 %sub.i81, i32* %x.addr.i74, align 4, !dbg !4116
  %48 = load i32, i32* %x.addr.i74, align 4, !dbg !4117
  %cmp1.i82 = icmp slt i32 %48, 0, !dbg !4118
  br i1 %cmp1.i82, label %if.then2.i86, label %if.end3.i87, !dbg !4119

if.then2.i86:                                     ; preds = %while.body.i83
  %49 = load i32, i32* %w.addr.i75, align 4, !dbg !4120
  %mul.i84 = mul nsw i32 2, %49, !dbg !4121
  %50 = load i32, i32* %x.addr.i74, align 4, !dbg !4122
  %add.i85 = add nsw i32 %50, %mul.i84, !dbg !4122
  store i32 %add.i85, i32* %x.addr.i74, align 4, !dbg !4122
  br label %if.end3.i87, !dbg !4123

if.end3.i87:                                      ; preds = %if.then2.i86, %while.body.i83
  br label %while.cond.i80, !dbg !4124, !llvm.loop !1150

while.end.i88:                                    ; preds = %while.cond.i80
  %51 = load i32, i32* %x.addr.i74, align 4, !dbg !4125
  store i32 %51, i32* %retval.i73, align 4, !dbg !4126
  br label %avpriv_mirror.exit89, !dbg !4126

avpriv_mirror.exit89:                             ; preds = %if.then.i77, %while.end.i88
  %52 = load i32, i32* %retval.i73, align 4, !dbg !4127
  %53 = load i32, i32* %stride.addr, align 4, !dbg !4128
  %mul17 = mul nsw i32 %52, %53, !dbg !4129
  %idx.ext18 = sext i32 %mul17 to i64, !dbg !4130
  %add.ptr19 = getelementptr inbounds i8, i8* %41, i64 %idx.ext18, !dbg !4130
  %arrayidx20 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 5, !dbg !4131
  store i8* %add.ptr19, i8** %arrayidx20, align 8, !dbg !4132
  %54 = load i32, i32* %y, align 4, !dbg !4133
  %add21 = add nsw i32 %54, 3, !dbg !4135
  %55 = load i32, i32* %height.addr, align 4, !dbg !4136
  %cmp22 = icmp ult i32 %add21, %55, !dbg !4137
  br i1 %cmp22, label %if.then, label %if.end, !dbg !4138

if.then:                                          ; preds = %avpriv_mirror.exit89
  %56 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %vertical_compose_l1, align 8, !dbg !4139
  %arrayidx23 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 3, !dbg !4141
  %57 = load i8*, i8** %arrayidx23, align 8, !dbg !4141
  %arrayidx24 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 4, !dbg !4142
  %58 = load i8*, i8** %arrayidx24, align 16, !dbg !4142
  %arrayidx25 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 5, !dbg !4143
  %59 = load i8*, i8** %arrayidx25, align 8, !dbg !4143
  %60 = load i32, i32* %width.addr, align 4, !dbg !4144
  call void %56(i8* %57, i8* %58, i8* %59, i32 %60), !dbg !4139
  br label %if.end, !dbg !4139

if.end:                                           ; preds = %if.then, %avpriv_mirror.exit89
  %61 = load i32, i32* %y, align 4, !dbg !4145
  %add26 = add nsw i32 %61, 2, !dbg !4147
  %62 = load i32, i32* %height.addr, align 4, !dbg !4148
  %cmp27 = icmp ult i32 %add26, %62, !dbg !4149
  br i1 %cmp27, label %if.then28, label %if.end32, !dbg !4150

if.then28:                                        ; preds = %if.end
  %63 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %vertical_compose_h1, align 8, !dbg !4151
  %arrayidx29 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 2, !dbg !4153
  %64 = load i8*, i8** %arrayidx29, align 16, !dbg !4153
  %arrayidx30 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 3, !dbg !4154
  %65 = load i8*, i8** %arrayidx30, align 8, !dbg !4154
  %arrayidx31 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 4, !dbg !4155
  %66 = load i8*, i8** %arrayidx31, align 16, !dbg !4155
  %67 = load i32, i32* %width.addr, align 4, !dbg !4156
  call void %63(i8* %64, i8* %65, i8* %66, i32 %67), !dbg !4151
  br label %if.end32, !dbg !4151

if.end32:                                         ; preds = %if.then28, %if.end
  %68 = load i32, i32* %y, align 4, !dbg !4157
  %add33 = add nsw i32 %68, 1, !dbg !4159
  %69 = load i32, i32* %height.addr, align 4, !dbg !4160
  %cmp34 = icmp ult i32 %add33, %69, !dbg !4161
  br i1 %cmp34, label %if.then35, label %if.end39, !dbg !4162

if.then35:                                        ; preds = %if.end32
  %70 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %vertical_compose_l0, align 8, !dbg !4163
  %arrayidx36 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 1, !dbg !4165
  %71 = load i8*, i8** %arrayidx36, align 8, !dbg !4165
  %arrayidx37 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 2, !dbg !4166
  %72 = load i8*, i8** %arrayidx37, align 16, !dbg !4166
  %arrayidx38 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 3, !dbg !4167
  %73 = load i8*, i8** %arrayidx38, align 8, !dbg !4167
  %74 = load i32, i32* %width.addr, align 4, !dbg !4168
  call void %70(i8* %71, i8* %72, i8* %73, i32 %74), !dbg !4163
  br label %if.end39, !dbg !4163

if.end39:                                         ; preds = %if.then35, %if.end32
  %75 = load i32, i32* %y, align 4, !dbg !4169
  %add40 = add nsw i32 %75, 0, !dbg !4171
  %76 = load i32, i32* %height.addr, align 4, !dbg !4172
  %cmp41 = icmp ult i32 %add40, %76, !dbg !4173
  br i1 %cmp41, label %if.then42, label %if.end46, !dbg !4174

if.then42:                                        ; preds = %if.end39
  %77 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %vertical_compose_h0, align 8, !dbg !4175
  %arrayidx43 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 0, !dbg !4177
  %78 = load i8*, i8** %arrayidx43, align 16, !dbg !4177
  %arrayidx44 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 1, !dbg !4178
  %79 = load i8*, i8** %arrayidx44, align 8, !dbg !4178
  %arrayidx45 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 2, !dbg !4179
  %80 = load i8*, i8** %arrayidx45, align 16, !dbg !4179
  %81 = load i32, i32* %width.addr, align 4, !dbg !4180
  call void %77(i8* %78, i8* %79, i8* %80, i32 %81), !dbg !4175
  br label %if.end46, !dbg !4175

if.end46:                                         ; preds = %if.then42, %if.end39
  %82 = load i32, i32* %y, align 4, !dbg !4181
  %sub47 = sub nsw i32 %82, 1, !dbg !4183
  %83 = load i32, i32* %height.addr, align 4, !dbg !4184
  %cmp48 = icmp ult i32 %sub47, %83, !dbg !4185
  br i1 %cmp48, label %if.then49, label %if.end51, !dbg !4186

if.then49:                                        ; preds = %if.end46
  %84 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !4187
  %horizontal_compose = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %84, i32 0, i32 13, !dbg !4189
  %85 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %horizontal_compose, align 8, !dbg !4189
  %arrayidx50 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 0, !dbg !4190
  %86 = load i8*, i8** %arrayidx50, align 16, !dbg !4190
  %87 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !4191
  %temp = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %87, i32 0, i32 1, !dbg !4192
  %88 = load i8*, i8** %temp, align 8, !dbg !4192
  %89 = load i32, i32* %width.addr, align 4, !dbg !4193
  call void %85(i8* %86, i8* %88, i32 %89), !dbg !4187
  br label %if.end51, !dbg !4187

if.end51:                                         ; preds = %if.then49, %if.end46
  %90 = load i32, i32* %y, align 4, !dbg !4194
  %add52 = add nsw i32 %90, 0, !dbg !4196
  %91 = load i32, i32* %height.addr, align 4, !dbg !4197
  %cmp53 = icmp ult i32 %add52, %91, !dbg !4198
  br i1 %cmp53, label %if.then54, label %if.end58, !dbg !4199

if.then54:                                        ; preds = %if.end51
  %92 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !4200
  %horizontal_compose55 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %92, i32 0, i32 13, !dbg !4202
  %93 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %horizontal_compose55, align 8, !dbg !4202
  %arrayidx56 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 1, !dbg !4203
  %94 = load i8*, i8** %arrayidx56, align 8, !dbg !4203
  %95 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !4204
  %temp57 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %95, i32 0, i32 1, !dbg !4205
  %96 = load i8*, i8** %temp57, align 8, !dbg !4205
  %97 = load i32, i32* %width.addr, align 4, !dbg !4206
  call void %93(i8* %94, i8* %96, i32 %97), !dbg !4200
  br label %if.end58, !dbg !4200

if.end58:                                         ; preds = %if.then54, %if.end51
  store i32 0, i32* %i, align 4, !dbg !4207
  br label %for.cond59, !dbg !4209

for.cond59:                                       ; preds = %for.inc68, %if.end58
  %98 = load i32, i32* %i, align 4, !dbg !4210
  %cmp60 = icmp slt i32 %98, 4, !dbg !4213
  br i1 %cmp60, label %for.body61, label %for.end70, !dbg !4214

for.body61:                                       ; preds = %for.cond59
  %99 = load i32, i32* %i, align 4, !dbg !4215
  %add62 = add nsw i32 %99, 2, !dbg !4216
  %idxprom63 = sext i32 %add62 to i64, !dbg !4217
  %arrayidx64 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 %idxprom63, !dbg !4217
  %100 = load i8*, i8** %arrayidx64, align 8, !dbg !4217
  %101 = load i32, i32* %i, align 4, !dbg !4218
  %idxprom65 = sext i32 %101 to i64, !dbg !4219
  %102 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !4219
  %b66 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %102, i32 0, i32 0, !dbg !4220
  %arrayidx67 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b66, i64 0, i64 %idxprom65, !dbg !4219
  store i8* %100, i8** %arrayidx67, align 8, !dbg !4221
  br label %for.inc68, !dbg !4219

for.inc68:                                        ; preds = %for.body61
  %103 = load i32, i32* %i, align 4, !dbg !4222
  %inc69 = add nsw i32 %103, 1, !dbg !4222
  store i32 %inc69, i32* %i, align 4, !dbg !4222
  br label %for.cond59, !dbg !4224, !llvm.loop !4225

for.end70:                                        ; preds = %for.cond59
  %104 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !4227
  %y71 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %104, i32 0, i32 1, !dbg !4228
  %105 = load i32, i32* %y71, align 8, !dbg !4229
  %add72 = add nsw i32 %105, 2, !dbg !4229
  store i32 %add72, i32* %y71, align 8, !dbg !4229
  ret void, !dbg !4230
}

; Function Attrs: nounwind uwtable
define internal void @vertical_compose_daub97iL0_8bit(i8* %_b0, i8* %_b1, i8* %_b2, i32 %width) #0 !dbg !4231 {
entry:
  %_b0.addr = alloca i8*, align 8
  %_b1.addr = alloca i8*, align 8
  %_b2.addr = alloca i8*, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %b0 = alloca i16*, align 8
  %b1 = alloca i16*, align 8
  %b2 = alloca i16*, align 8
  store i8* %_b0, i8** %_b0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b0.addr, metadata !4232, metadata !87), !dbg !4233
  store i8* %_b1, i8** %_b1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b1.addr, metadata !4234, metadata !87), !dbg !4235
  store i8* %_b2, i8** %_b2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b2.addr, metadata !4236, metadata !87), !dbg !4237
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !4238, metadata !87), !dbg !4239
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4240, metadata !87), !dbg !4241
  call void @llvm.dbg.declare(metadata i16** %b0, metadata !4242, metadata !87), !dbg !4243
  %0 = load i8*, i8** %_b0.addr, align 8, !dbg !4244
  %1 = bitcast i8* %0 to i16*, !dbg !4245
  store i16* %1, i16** %b0, align 8, !dbg !4243
  call void @llvm.dbg.declare(metadata i16** %b1, metadata !4246, metadata !87), !dbg !4247
  %2 = load i8*, i8** %_b1.addr, align 8, !dbg !4248
  %3 = bitcast i8* %2 to i16*, !dbg !4249
  store i16* %3, i16** %b1, align 8, !dbg !4247
  call void @llvm.dbg.declare(metadata i16** %b2, metadata !4250, metadata !87), !dbg !4251
  %4 = load i8*, i8** %_b2.addr, align 8, !dbg !4252
  %5 = bitcast i8* %4 to i16*, !dbg !4253
  store i16* %5, i16** %b2, align 8, !dbg !4251
  store i32 0, i32* %i, align 4, !dbg !4254
  br label %for.cond, !dbg !4256

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !dbg !4257
  %7 = load i32, i32* %width.addr, align 4, !dbg !4260
  %cmp = icmp slt i32 %6, %7, !dbg !4261
  br i1 %cmp, label %for.body, label %for.end, !dbg !4262

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %i, align 4, !dbg !4263
  %idxprom = sext i32 %8 to i64, !dbg !4265
  %9 = load i16*, i16** %b1, align 8, !dbg !4265
  %arrayidx = getelementptr inbounds i16, i16* %9, i64 %idxprom, !dbg !4265
  %10 = load i16, i16* %arrayidx, align 2, !dbg !4265
  %conv = sext i16 %10 to i32, !dbg !4266
  %11 = load i32, i32* %i, align 4, !dbg !4267
  %idxprom1 = sext i32 %11 to i64, !dbg !4268
  %12 = load i16*, i16** %b0, align 8, !dbg !4268
  %arrayidx2 = getelementptr inbounds i16, i16* %12, i64 %idxprom1, !dbg !4268
  %13 = load i16, i16* %arrayidx2, align 2, !dbg !4268
  %conv3 = sext i16 %13 to i32, !dbg !4268
  %14 = load i32, i32* %i, align 4, !dbg !4269
  %idxprom4 = sext i32 %14 to i64, !dbg !4270
  %15 = load i16*, i16** %b2, align 8, !dbg !4270
  %arrayidx5 = getelementptr inbounds i16, i16* %15, i64 %idxprom4, !dbg !4270
  %16 = load i16, i16* %arrayidx5, align 2, !dbg !4270
  %conv6 = sext i16 %16 to i32, !dbg !4271
  %add = add i32 %conv3, %conv6, !dbg !4272
  %mul = mul i32 217, %add, !dbg !4273
  %add7 = add i32 %mul, 2048, !dbg !4274
  %shr = ashr i32 %add7, 12, !dbg !4275
  %add8 = add i32 %conv, %shr, !dbg !4276
  %conv9 = trunc i32 %add8 to i16, !dbg !4277
  %17 = load i32, i32* %i, align 4, !dbg !4278
  %idxprom10 = sext i32 %17 to i64, !dbg !4279
  %18 = load i16*, i16** %b1, align 8, !dbg !4279
  %arrayidx11 = getelementptr inbounds i16, i16* %18, i64 %idxprom10, !dbg !4279
  store i16 %conv9, i16* %arrayidx11, align 2, !dbg !4280
  br label %for.inc, !dbg !4281

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !4282
  %inc = add nsw i32 %19, 1, !dbg !4282
  store i32 %inc, i32* %i, align 4, !dbg !4282
  br label %for.cond, !dbg !4284, !llvm.loop !4285

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4287
}

; Function Attrs: nounwind uwtable
define internal void @vertical_compose_daub97iH0_8bit(i8* %_b0, i8* %_b1, i8* %_b2, i32 %width) #0 !dbg !4288 {
entry:
  %_b0.addr = alloca i8*, align 8
  %_b1.addr = alloca i8*, align 8
  %_b2.addr = alloca i8*, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %b0 = alloca i16*, align 8
  %b1 = alloca i16*, align 8
  %b2 = alloca i16*, align 8
  store i8* %_b0, i8** %_b0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b0.addr, metadata !4289, metadata !87), !dbg !4290
  store i8* %_b1, i8** %_b1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b1.addr, metadata !4291, metadata !87), !dbg !4292
  store i8* %_b2, i8** %_b2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b2.addr, metadata !4293, metadata !87), !dbg !4294
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !4295, metadata !87), !dbg !4296
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4297, metadata !87), !dbg !4298
  call void @llvm.dbg.declare(metadata i16** %b0, metadata !4299, metadata !87), !dbg !4300
  %0 = load i8*, i8** %_b0.addr, align 8, !dbg !4301
  %1 = bitcast i8* %0 to i16*, !dbg !4302
  store i16* %1, i16** %b0, align 8, !dbg !4300
  call void @llvm.dbg.declare(metadata i16** %b1, metadata !4303, metadata !87), !dbg !4304
  %2 = load i8*, i8** %_b1.addr, align 8, !dbg !4305
  %3 = bitcast i8* %2 to i16*, !dbg !4306
  store i16* %3, i16** %b1, align 8, !dbg !4304
  call void @llvm.dbg.declare(metadata i16** %b2, metadata !4307, metadata !87), !dbg !4308
  %4 = load i8*, i8** %_b2.addr, align 8, !dbg !4309
  %5 = bitcast i8* %4 to i16*, !dbg !4310
  store i16* %5, i16** %b2, align 8, !dbg !4308
  store i32 0, i32* %i, align 4, !dbg !4311
  br label %for.cond, !dbg !4313

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !dbg !4314
  %7 = load i32, i32* %width.addr, align 4, !dbg !4317
  %cmp = icmp slt i32 %6, %7, !dbg !4318
  br i1 %cmp, label %for.body, label %for.end, !dbg !4319

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %i, align 4, !dbg !4320
  %idxprom = sext i32 %8 to i64, !dbg !4322
  %9 = load i16*, i16** %b1, align 8, !dbg !4322
  %arrayidx = getelementptr inbounds i16, i16* %9, i64 %idxprom, !dbg !4322
  %10 = load i16, i16* %arrayidx, align 2, !dbg !4322
  %conv = sext i16 %10 to i32, !dbg !4323
  %11 = load i32, i32* %i, align 4, !dbg !4324
  %idxprom1 = sext i32 %11 to i64, !dbg !4325
  %12 = load i16*, i16** %b0, align 8, !dbg !4325
  %arrayidx2 = getelementptr inbounds i16, i16* %12, i64 %idxprom1, !dbg !4325
  %13 = load i16, i16* %arrayidx2, align 2, !dbg !4325
  %conv3 = sext i16 %13 to i32, !dbg !4325
  %14 = load i32, i32* %i, align 4, !dbg !4326
  %idxprom4 = sext i32 %14 to i64, !dbg !4327
  %15 = load i16*, i16** %b2, align 8, !dbg !4327
  %arrayidx5 = getelementptr inbounds i16, i16* %15, i64 %idxprom4, !dbg !4327
  %16 = load i16, i16* %arrayidx5, align 2, !dbg !4327
  %conv6 = sext i16 %16 to i32, !dbg !4328
  %add = add i32 %conv3, %conv6, !dbg !4329
  %mul = mul i32 6497, %add, !dbg !4330
  %add7 = add i32 %mul, 2048, !dbg !4331
  %shr = ashr i32 %add7, 12, !dbg !4332
  %add8 = add i32 %conv, %shr, !dbg !4333
  %conv9 = trunc i32 %add8 to i16, !dbg !4334
  %17 = load i32, i32* %i, align 4, !dbg !4335
  %idxprom10 = sext i32 %17 to i64, !dbg !4336
  %18 = load i16*, i16** %b1, align 8, !dbg !4336
  %arrayidx11 = getelementptr inbounds i16, i16* %18, i64 %idxprom10, !dbg !4336
  store i16 %conv9, i16* %arrayidx11, align 2, !dbg !4337
  br label %for.inc, !dbg !4338

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !4339
  %inc = add nsw i32 %19, 1, !dbg !4339
  store i32 %inc, i32* %i, align 4, !dbg !4339
  br label %for.cond, !dbg !4341, !llvm.loop !4342

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4344
}

; Function Attrs: nounwind uwtable
define internal void @vertical_compose_daub97iL1_8bit(i8* %_b0, i8* %_b1, i8* %_b2, i32 %width) #0 !dbg !4345 {
entry:
  %_b0.addr = alloca i8*, align 8
  %_b1.addr = alloca i8*, align 8
  %_b2.addr = alloca i8*, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %b0 = alloca i16*, align 8
  %b1 = alloca i16*, align 8
  %b2 = alloca i16*, align 8
  store i8* %_b0, i8** %_b0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b0.addr, metadata !4346, metadata !87), !dbg !4347
  store i8* %_b1, i8** %_b1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b1.addr, metadata !4348, metadata !87), !dbg !4349
  store i8* %_b2, i8** %_b2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b2.addr, metadata !4350, metadata !87), !dbg !4351
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !4352, metadata !87), !dbg !4353
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4354, metadata !87), !dbg !4355
  call void @llvm.dbg.declare(metadata i16** %b0, metadata !4356, metadata !87), !dbg !4357
  %0 = load i8*, i8** %_b0.addr, align 8, !dbg !4358
  %1 = bitcast i8* %0 to i16*, !dbg !4359
  store i16* %1, i16** %b0, align 8, !dbg !4357
  call void @llvm.dbg.declare(metadata i16** %b1, metadata !4360, metadata !87), !dbg !4361
  %2 = load i8*, i8** %_b1.addr, align 8, !dbg !4362
  %3 = bitcast i8* %2 to i16*, !dbg !4363
  store i16* %3, i16** %b1, align 8, !dbg !4361
  call void @llvm.dbg.declare(metadata i16** %b2, metadata !4364, metadata !87), !dbg !4365
  %4 = load i8*, i8** %_b2.addr, align 8, !dbg !4366
  %5 = bitcast i8* %4 to i16*, !dbg !4367
  store i16* %5, i16** %b2, align 8, !dbg !4365
  store i32 0, i32* %i, align 4, !dbg !4368
  br label %for.cond, !dbg !4370

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !dbg !4371
  %7 = load i32, i32* %width.addr, align 4, !dbg !4374
  %cmp = icmp slt i32 %6, %7, !dbg !4375
  br i1 %cmp, label %for.body, label %for.end, !dbg !4376

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %i, align 4, !dbg !4377
  %idxprom = sext i32 %8 to i64, !dbg !4379
  %9 = load i16*, i16** %b1, align 8, !dbg !4379
  %arrayidx = getelementptr inbounds i16, i16* %9, i64 %idxprom, !dbg !4379
  %10 = load i16, i16* %arrayidx, align 2, !dbg !4379
  %conv = sext i16 %10 to i32, !dbg !4380
  %11 = load i32, i32* %i, align 4, !dbg !4381
  %idxprom1 = sext i32 %11 to i64, !dbg !4382
  %12 = load i16*, i16** %b0, align 8, !dbg !4382
  %arrayidx2 = getelementptr inbounds i16, i16* %12, i64 %idxprom1, !dbg !4382
  %13 = load i16, i16* %arrayidx2, align 2, !dbg !4382
  %conv3 = sext i16 %13 to i32, !dbg !4382
  %14 = load i32, i32* %i, align 4, !dbg !4383
  %idxprom4 = sext i32 %14 to i64, !dbg !4384
  %15 = load i16*, i16** %b2, align 8, !dbg !4384
  %arrayidx5 = getelementptr inbounds i16, i16* %15, i64 %idxprom4, !dbg !4384
  %16 = load i16, i16* %arrayidx5, align 2, !dbg !4384
  %conv6 = sext i16 %16 to i32, !dbg !4385
  %add = add i32 %conv3, %conv6, !dbg !4386
  %mul = mul i32 1817, %add, !dbg !4387
  %add7 = add i32 %mul, 2048, !dbg !4388
  %shr = ashr i32 %add7, 12, !dbg !4389
  %sub = sub i32 %conv, %shr, !dbg !4390
  %conv8 = trunc i32 %sub to i16, !dbg !4391
  %17 = load i32, i32* %i, align 4, !dbg !4392
  %idxprom9 = sext i32 %17 to i64, !dbg !4393
  %18 = load i16*, i16** %b1, align 8, !dbg !4393
  %arrayidx10 = getelementptr inbounds i16, i16* %18, i64 %idxprom9, !dbg !4393
  store i16 %conv8, i16* %arrayidx10, align 2, !dbg !4394
  br label %for.inc, !dbg !4395

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !4396
  %inc = add nsw i32 %19, 1, !dbg !4396
  store i32 %inc, i32* %i, align 4, !dbg !4396
  br label %for.cond, !dbg !4398, !llvm.loop !4399

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4401
}

; Function Attrs: nounwind uwtable
define internal void @vertical_compose_daub97iH1_8bit(i8* %_b0, i8* %_b1, i8* %_b2, i32 %width) #0 !dbg !4402 {
entry:
  %_b0.addr = alloca i8*, align 8
  %_b1.addr = alloca i8*, align 8
  %_b2.addr = alloca i8*, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %b0 = alloca i16*, align 8
  %b1 = alloca i16*, align 8
  %b2 = alloca i16*, align 8
  store i8* %_b0, i8** %_b0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b0.addr, metadata !4403, metadata !87), !dbg !4404
  store i8* %_b1, i8** %_b1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b1.addr, metadata !4405, metadata !87), !dbg !4406
  store i8* %_b2, i8** %_b2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b2.addr, metadata !4407, metadata !87), !dbg !4408
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !4409, metadata !87), !dbg !4410
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4411, metadata !87), !dbg !4412
  call void @llvm.dbg.declare(metadata i16** %b0, metadata !4413, metadata !87), !dbg !4414
  %0 = load i8*, i8** %_b0.addr, align 8, !dbg !4415
  %1 = bitcast i8* %0 to i16*, !dbg !4416
  store i16* %1, i16** %b0, align 8, !dbg !4414
  call void @llvm.dbg.declare(metadata i16** %b1, metadata !4417, metadata !87), !dbg !4418
  %2 = load i8*, i8** %_b1.addr, align 8, !dbg !4419
  %3 = bitcast i8* %2 to i16*, !dbg !4420
  store i16* %3, i16** %b1, align 8, !dbg !4418
  call void @llvm.dbg.declare(metadata i16** %b2, metadata !4421, metadata !87), !dbg !4422
  %4 = load i8*, i8** %_b2.addr, align 8, !dbg !4423
  %5 = bitcast i8* %4 to i16*, !dbg !4424
  store i16* %5, i16** %b2, align 8, !dbg !4422
  store i32 0, i32* %i, align 4, !dbg !4425
  br label %for.cond, !dbg !4427

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !dbg !4428
  %7 = load i32, i32* %width.addr, align 4, !dbg !4431
  %cmp = icmp slt i32 %6, %7, !dbg !4432
  br i1 %cmp, label %for.body, label %for.end, !dbg !4433

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %i, align 4, !dbg !4434
  %idxprom = sext i32 %8 to i64, !dbg !4436
  %9 = load i16*, i16** %b1, align 8, !dbg !4436
  %arrayidx = getelementptr inbounds i16, i16* %9, i64 %idxprom, !dbg !4436
  %10 = load i16, i16* %arrayidx, align 2, !dbg !4436
  %conv = sext i16 %10 to i32, !dbg !4437
  %11 = load i32, i32* %i, align 4, !dbg !4438
  %idxprom1 = sext i32 %11 to i64, !dbg !4439
  %12 = load i16*, i16** %b0, align 8, !dbg !4439
  %arrayidx2 = getelementptr inbounds i16, i16* %12, i64 %idxprom1, !dbg !4439
  %13 = load i16, i16* %arrayidx2, align 2, !dbg !4439
  %conv3 = sext i16 %13 to i32, !dbg !4439
  %14 = load i32, i32* %i, align 4, !dbg !4440
  %idxprom4 = sext i32 %14 to i64, !dbg !4441
  %15 = load i16*, i16** %b2, align 8, !dbg !4441
  %arrayidx5 = getelementptr inbounds i16, i16* %15, i64 %idxprom4, !dbg !4441
  %16 = load i16, i16* %arrayidx5, align 2, !dbg !4441
  %conv6 = sext i16 %16 to i32, !dbg !4442
  %add = add i32 %conv3, %conv6, !dbg !4443
  %mul = mul i32 113, %add, !dbg !4444
  %add7 = add i32 %mul, 64, !dbg !4445
  %shr = ashr i32 %add7, 7, !dbg !4446
  %sub = sub i32 %conv, %shr, !dbg !4447
  %conv8 = trunc i32 %sub to i16, !dbg !4448
  %17 = load i32, i32* %i, align 4, !dbg !4449
  %idxprom9 = sext i32 %17 to i64, !dbg !4450
  %18 = load i16*, i16** %b1, align 8, !dbg !4450
  %arrayidx10 = getelementptr inbounds i16, i16* %18, i64 %idxprom9, !dbg !4450
  store i16 %conv8, i16* %arrayidx10, align 2, !dbg !4451
  br label %for.inc, !dbg !4452

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !4453
  %inc = add nsw i32 %19, 1, !dbg !4453
  store i32 %inc, i32* %i, align 4, !dbg !4453
  br label %for.cond, !dbg !4455, !llvm.loop !4456

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4458
}

; Function Attrs: nounwind uwtable
define internal void @horizontal_compose_daub97i_8bit(i8* %_b, i8* %_temp, i32 %w) #0 !dbg !4459 {
entry:
  %_b.addr = alloca i8*, align 8
  %_temp.addr = alloca i8*, align 8
  %w.addr = alloca i32, align 4
  %w2 = alloca i32, align 4
  %x = alloca i32, align 4
  %b0 = alloca i32, align 4
  %b1 = alloca i32, align 4
  %b2 = alloca i32, align 4
  %b = alloca i16*, align 8
  %temp = alloca i16*, align 8
  store i8* %_b, i8** %_b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b.addr, metadata !4460, metadata !87), !dbg !4461
  store i8* %_temp, i8** %_temp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_temp.addr, metadata !4462, metadata !87), !dbg !4463
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !4464, metadata !87), !dbg !4465
  call void @llvm.dbg.declare(metadata i32* %w2, metadata !4466, metadata !87), !dbg !4467
  %0 = load i32, i32* %w.addr, align 4, !dbg !4468
  %shr = ashr i32 %0, 1, !dbg !4469
  store i32 %shr, i32* %w2, align 4, !dbg !4467
  call void @llvm.dbg.declare(metadata i32* %x, metadata !4470, metadata !87), !dbg !4471
  call void @llvm.dbg.declare(metadata i32* %b0, metadata !4472, metadata !87), !dbg !4473
  call void @llvm.dbg.declare(metadata i32* %b1, metadata !4474, metadata !87), !dbg !4475
  call void @llvm.dbg.declare(metadata i32* %b2, metadata !4476, metadata !87), !dbg !4477
  call void @llvm.dbg.declare(metadata i16** %b, metadata !4478, metadata !87), !dbg !4479
  %1 = load i8*, i8** %_b.addr, align 8, !dbg !4480
  %2 = bitcast i8* %1 to i16*, !dbg !4481
  store i16* %2, i16** %b, align 8, !dbg !4479
  call void @llvm.dbg.declare(metadata i16** %temp, metadata !4482, metadata !87), !dbg !4483
  %3 = load i8*, i8** %_temp.addr, align 8, !dbg !4484
  %4 = bitcast i8* %3 to i16*, !dbg !4485
  store i16* %4, i16** %temp, align 8, !dbg !4483
  %5 = load i16*, i16** %b, align 8, !dbg !4486
  %arrayidx = getelementptr inbounds i16, i16* %5, i64 0, !dbg !4486
  %6 = load i16, i16* %arrayidx, align 2, !dbg !4486
  %conv = sext i16 %6 to i32, !dbg !4487
  %7 = load i32, i32* %w2, align 4, !dbg !4488
  %idxprom = sext i32 %7 to i64, !dbg !4489
  %8 = load i16*, i16** %b, align 8, !dbg !4489
  %arrayidx1 = getelementptr inbounds i16, i16* %8, i64 %idxprom, !dbg !4489
  %9 = load i16, i16* %arrayidx1, align 2, !dbg !4489
  %conv2 = sext i16 %9 to i32, !dbg !4489
  %10 = load i32, i32* %w2, align 4, !dbg !4490
  %idxprom3 = sext i32 %10 to i64, !dbg !4491
  %11 = load i16*, i16** %b, align 8, !dbg !4491
  %arrayidx4 = getelementptr inbounds i16, i16* %11, i64 %idxprom3, !dbg !4491
  %12 = load i16, i16* %arrayidx4, align 2, !dbg !4491
  %conv5 = sext i16 %12 to i32, !dbg !4492
  %add = add i32 %conv2, %conv5, !dbg !4493
  %mul = mul i32 1817, %add, !dbg !4494
  %add6 = add i32 %mul, 2048, !dbg !4495
  %shr7 = ashr i32 %add6, 12, !dbg !4496
  %sub = sub i32 %conv, %shr7, !dbg !4497
  %conv8 = trunc i32 %sub to i16, !dbg !4498
  %13 = load i16*, i16** %temp, align 8, !dbg !4499
  %arrayidx9 = getelementptr inbounds i16, i16* %13, i64 0, !dbg !4499
  store i16 %conv8, i16* %arrayidx9, align 2, !dbg !4500
  store i32 1, i32* %x, align 4, !dbg !4501
  br label %for.cond, !dbg !4503

for.cond:                                         ; preds = %for.inc, %entry
  %14 = load i32, i32* %x, align 4, !dbg !4504
  %15 = load i32, i32* %w2, align 4, !dbg !4507
  %cmp = icmp slt i32 %14, %15, !dbg !4508
  br i1 %cmp, label %for.body, label %for.end, !dbg !4509

for.body:                                         ; preds = %for.cond
  %16 = load i32, i32* %x, align 4, !dbg !4510
  %idxprom11 = sext i32 %16 to i64, !dbg !4512
  %17 = load i16*, i16** %b, align 8, !dbg !4512
  %arrayidx12 = getelementptr inbounds i16, i16* %17, i64 %idxprom11, !dbg !4512
  %18 = load i16, i16* %arrayidx12, align 2, !dbg !4512
  %conv13 = sext i16 %18 to i32, !dbg !4513
  %19 = load i32, i32* %x, align 4, !dbg !4514
  %20 = load i32, i32* %w2, align 4, !dbg !4515
  %add14 = add nsw i32 %19, %20, !dbg !4516
  %sub15 = sub nsw i32 %add14, 1, !dbg !4517
  %idxprom16 = sext i32 %sub15 to i64, !dbg !4518
  %21 = load i16*, i16** %b, align 8, !dbg !4518
  %arrayidx17 = getelementptr inbounds i16, i16* %21, i64 %idxprom16, !dbg !4518
  %22 = load i16, i16* %arrayidx17, align 2, !dbg !4518
  %conv18 = sext i16 %22 to i32, !dbg !4518
  %23 = load i32, i32* %x, align 4, !dbg !4519
  %24 = load i32, i32* %w2, align 4, !dbg !4520
  %add19 = add nsw i32 %23, %24, !dbg !4521
  %idxprom20 = sext i32 %add19 to i64, !dbg !4522
  %25 = load i16*, i16** %b, align 8, !dbg !4522
  %arrayidx21 = getelementptr inbounds i16, i16* %25, i64 %idxprom20, !dbg !4522
  %26 = load i16, i16* %arrayidx21, align 2, !dbg !4522
  %conv22 = sext i16 %26 to i32, !dbg !4523
  %add23 = add i32 %conv18, %conv22, !dbg !4524
  %mul24 = mul i32 1817, %add23, !dbg !4525
  %add25 = add i32 %mul24, 2048, !dbg !4526
  %shr26 = ashr i32 %add25, 12, !dbg !4527
  %sub27 = sub i32 %conv13, %shr26, !dbg !4528
  %conv28 = trunc i32 %sub27 to i16, !dbg !4529
  %27 = load i32, i32* %x, align 4, !dbg !4530
  %idxprom29 = sext i32 %27 to i64, !dbg !4531
  %28 = load i16*, i16** %temp, align 8, !dbg !4531
  %arrayidx30 = getelementptr inbounds i16, i16* %28, i64 %idxprom29, !dbg !4531
  store i16 %conv28, i16* %arrayidx30, align 2, !dbg !4532
  %29 = load i32, i32* %x, align 4, !dbg !4533
  %30 = load i32, i32* %w2, align 4, !dbg !4534
  %add31 = add nsw i32 %29, %30, !dbg !4535
  %sub32 = sub nsw i32 %add31, 1, !dbg !4536
  %idxprom33 = sext i32 %sub32 to i64, !dbg !4537
  %31 = load i16*, i16** %b, align 8, !dbg !4537
  %arrayidx34 = getelementptr inbounds i16, i16* %31, i64 %idxprom33, !dbg !4537
  %32 = load i16, i16* %arrayidx34, align 2, !dbg !4537
  %conv35 = sext i16 %32 to i32, !dbg !4538
  %33 = load i32, i32* %x, align 4, !dbg !4539
  %sub36 = sub nsw i32 %33, 1, !dbg !4540
  %idxprom37 = sext i32 %sub36 to i64, !dbg !4541
  %34 = load i16*, i16** %temp, align 8, !dbg !4541
  %arrayidx38 = getelementptr inbounds i16, i16* %34, i64 %idxprom37, !dbg !4541
  %35 = load i16, i16* %arrayidx38, align 2, !dbg !4541
  %conv39 = sext i16 %35 to i32, !dbg !4541
  %36 = load i32, i32* %x, align 4, !dbg !4542
  %idxprom40 = sext i32 %36 to i64, !dbg !4543
  %37 = load i16*, i16** %temp, align 8, !dbg !4543
  %arrayidx41 = getelementptr inbounds i16, i16* %37, i64 %idxprom40, !dbg !4543
  %38 = load i16, i16* %arrayidx41, align 2, !dbg !4543
  %conv42 = sext i16 %38 to i32, !dbg !4544
  %add43 = add i32 %conv39, %conv42, !dbg !4545
  %mul44 = mul i32 113, %add43, !dbg !4546
  %add45 = add i32 %mul44, 64, !dbg !4547
  %shr46 = ashr i32 %add45, 7, !dbg !4548
  %sub47 = sub i32 %conv35, %shr46, !dbg !4549
  %conv48 = trunc i32 %sub47 to i16, !dbg !4550
  %39 = load i32, i32* %x, align 4, !dbg !4551
  %40 = load i32, i32* %w2, align 4, !dbg !4552
  %add49 = add nsw i32 %39, %40, !dbg !4553
  %sub50 = sub nsw i32 %add49, 1, !dbg !4554
  %idxprom51 = sext i32 %sub50 to i64, !dbg !4555
  %41 = load i16*, i16** %temp, align 8, !dbg !4555
  %arrayidx52 = getelementptr inbounds i16, i16* %41, i64 %idxprom51, !dbg !4555
  store i16 %conv48, i16* %arrayidx52, align 2, !dbg !4556
  br label %for.inc, !dbg !4557

for.inc:                                          ; preds = %for.body
  %42 = load i32, i32* %x, align 4, !dbg !4558
  %inc = add nsw i32 %42, 1, !dbg !4558
  store i32 %inc, i32* %x, align 4, !dbg !4558
  br label %for.cond, !dbg !4560, !llvm.loop !4561

for.end:                                          ; preds = %for.cond
  %43 = load i32, i32* %w.addr, align 4, !dbg !4563
  %sub53 = sub nsw i32 %43, 1, !dbg !4564
  %idxprom54 = sext i32 %sub53 to i64, !dbg !4565
  %44 = load i16*, i16** %b, align 8, !dbg !4565
  %arrayidx55 = getelementptr inbounds i16, i16* %44, i64 %idxprom54, !dbg !4565
  %45 = load i16, i16* %arrayidx55, align 2, !dbg !4565
  %conv56 = sext i16 %45 to i32, !dbg !4566
  %46 = load i32, i32* %w2, align 4, !dbg !4567
  %sub57 = sub nsw i32 %46, 1, !dbg !4568
  %idxprom58 = sext i32 %sub57 to i64, !dbg !4569
  %47 = load i16*, i16** %temp, align 8, !dbg !4569
  %arrayidx59 = getelementptr inbounds i16, i16* %47, i64 %idxprom58, !dbg !4569
  %48 = load i16, i16* %arrayidx59, align 2, !dbg !4569
  %conv60 = sext i16 %48 to i32, !dbg !4569
  %49 = load i32, i32* %w2, align 4, !dbg !4570
  %sub61 = sub nsw i32 %49, 1, !dbg !4571
  %idxprom62 = sext i32 %sub61 to i64, !dbg !4572
  %50 = load i16*, i16** %temp, align 8, !dbg !4572
  %arrayidx63 = getelementptr inbounds i16, i16* %50, i64 %idxprom62, !dbg !4572
  %51 = load i16, i16* %arrayidx63, align 2, !dbg !4572
  %conv64 = sext i16 %51 to i32, !dbg !4573
  %add65 = add i32 %conv60, %conv64, !dbg !4574
  %mul66 = mul i32 113, %add65, !dbg !4575
  %add67 = add i32 %mul66, 64, !dbg !4576
  %shr68 = ashr i32 %add67, 7, !dbg !4577
  %sub69 = sub i32 %conv56, %shr68, !dbg !4578
  %conv70 = trunc i32 %sub69 to i16, !dbg !4579
  %52 = load i32, i32* %w.addr, align 4, !dbg !4580
  %sub71 = sub nsw i32 %52, 1, !dbg !4581
  %idxprom72 = sext i32 %sub71 to i64, !dbg !4582
  %53 = load i16*, i16** %temp, align 8, !dbg !4582
  %arrayidx73 = getelementptr inbounds i16, i16* %53, i64 %idxprom72, !dbg !4582
  store i16 %conv70, i16* %arrayidx73, align 2, !dbg !4583
  %54 = load i16*, i16** %temp, align 8, !dbg !4584
  %arrayidx74 = getelementptr inbounds i16, i16* %54, i64 0, !dbg !4584
  %55 = load i16, i16* %arrayidx74, align 2, !dbg !4584
  %conv75 = sext i16 %55 to i32, !dbg !4585
  %56 = load i32, i32* %w2, align 4, !dbg !4586
  %idxprom76 = sext i32 %56 to i64, !dbg !4587
  %57 = load i16*, i16** %temp, align 8, !dbg !4587
  %arrayidx77 = getelementptr inbounds i16, i16* %57, i64 %idxprom76, !dbg !4587
  %58 = load i16, i16* %arrayidx77, align 2, !dbg !4587
  %conv78 = sext i16 %58 to i32, !dbg !4587
  %59 = load i32, i32* %w2, align 4, !dbg !4588
  %idxprom79 = sext i32 %59 to i64, !dbg !4589
  %60 = load i16*, i16** %temp, align 8, !dbg !4589
  %arrayidx80 = getelementptr inbounds i16, i16* %60, i64 %idxprom79, !dbg !4589
  %61 = load i16, i16* %arrayidx80, align 2, !dbg !4589
  %conv81 = sext i16 %61 to i32, !dbg !4590
  %add82 = add i32 %conv78, %conv81, !dbg !4591
  %mul83 = mul i32 217, %add82, !dbg !4592
  %add84 = add i32 %mul83, 2048, !dbg !4593
  %shr85 = ashr i32 %add84, 12, !dbg !4594
  %add86 = add i32 %conv75, %shr85, !dbg !4595
  store i32 %add86, i32* %b2, align 4, !dbg !4596
  store i32 %add86, i32* %b0, align 4, !dbg !4597
  %62 = load i32, i32* %b0, align 4, !dbg !4598
  %neg = xor i32 %62, -1, !dbg !4599
  %shr87 = ashr i32 %neg, 1, !dbg !4600
  %neg88 = xor i32 %shr87, -1, !dbg !4601
  %conv89 = trunc i32 %neg88 to i16, !dbg !4601
  %63 = load i16*, i16** %b, align 8, !dbg !4602
  %arrayidx90 = getelementptr inbounds i16, i16* %63, i64 0, !dbg !4602
  store i16 %conv89, i16* %arrayidx90, align 2, !dbg !4603
  store i32 1, i32* %x, align 4, !dbg !4604
  br label %for.cond91, !dbg !4606

for.cond91:                                       ; preds = %for.inc137, %for.end
  %64 = load i32, i32* %x, align 4, !dbg !4607
  %65 = load i32, i32* %w2, align 4, !dbg !4610
  %cmp92 = icmp slt i32 %64, %65, !dbg !4611
  br i1 %cmp92, label %for.body94, label %for.end139, !dbg !4612

for.body94:                                       ; preds = %for.cond91
  %66 = load i32, i32* %x, align 4, !dbg !4613
  %idxprom95 = sext i32 %66 to i64, !dbg !4615
  %67 = load i16*, i16** %temp, align 8, !dbg !4615
  %arrayidx96 = getelementptr inbounds i16, i16* %67, i64 %idxprom95, !dbg !4615
  %68 = load i16, i16* %arrayidx96, align 2, !dbg !4615
  %conv97 = sext i16 %68 to i32, !dbg !4616
  %69 = load i32, i32* %x, align 4, !dbg !4617
  %70 = load i32, i32* %w2, align 4, !dbg !4618
  %add98 = add nsw i32 %69, %70, !dbg !4619
  %sub99 = sub nsw i32 %add98, 1, !dbg !4620
  %idxprom100 = sext i32 %sub99 to i64, !dbg !4621
  %71 = load i16*, i16** %temp, align 8, !dbg !4621
  %arrayidx101 = getelementptr inbounds i16, i16* %71, i64 %idxprom100, !dbg !4621
  %72 = load i16, i16* %arrayidx101, align 2, !dbg !4621
  %conv102 = sext i16 %72 to i32, !dbg !4621
  %73 = load i32, i32* %x, align 4, !dbg !4622
  %74 = load i32, i32* %w2, align 4, !dbg !4623
  %add103 = add nsw i32 %73, %74, !dbg !4624
  %idxprom104 = sext i32 %add103 to i64, !dbg !4625
  %75 = load i16*, i16** %temp, align 8, !dbg !4625
  %arrayidx105 = getelementptr inbounds i16, i16* %75, i64 %idxprom104, !dbg !4625
  %76 = load i16, i16* %arrayidx105, align 2, !dbg !4625
  %conv106 = sext i16 %76 to i32, !dbg !4626
  %add107 = add i32 %conv102, %conv106, !dbg !4627
  %mul108 = mul i32 217, %add107, !dbg !4628
  %add109 = add i32 %mul108, 2048, !dbg !4629
  %shr110 = ashr i32 %add109, 12, !dbg !4630
  %add111 = add i32 %conv97, %shr110, !dbg !4631
  store i32 %add111, i32* %b2, align 4, !dbg !4632
  %77 = load i32, i32* %x, align 4, !dbg !4633
  %78 = load i32, i32* %w2, align 4, !dbg !4634
  %add112 = add nsw i32 %77, %78, !dbg !4635
  %sub113 = sub nsw i32 %add112, 1, !dbg !4636
  %idxprom114 = sext i32 %sub113 to i64, !dbg !4637
  %79 = load i16*, i16** %temp, align 8, !dbg !4637
  %arrayidx115 = getelementptr inbounds i16, i16* %79, i64 %idxprom114, !dbg !4637
  %80 = load i16, i16* %arrayidx115, align 2, !dbg !4637
  %conv116 = sext i16 %80 to i32, !dbg !4638
  %81 = load i32, i32* %b0, align 4, !dbg !4639
  %82 = load i32, i32* %b2, align 4, !dbg !4640
  %add117 = add i32 %81, %82, !dbg !4641
  %mul118 = mul i32 6497, %add117, !dbg !4642
  %add119 = add i32 %mul118, 2048, !dbg !4643
  %shr120 = ashr i32 %add119, 12, !dbg !4644
  %add121 = add i32 %conv116, %shr120, !dbg !4645
  store i32 %add121, i32* %b1, align 4, !dbg !4646
  %83 = load i32, i32* %b1, align 4, !dbg !4647
  %neg122 = xor i32 %83, -1, !dbg !4648
  %shr123 = ashr i32 %neg122, 1, !dbg !4649
  %neg124 = xor i32 %shr123, -1, !dbg !4650
  %conv125 = trunc i32 %neg124 to i16, !dbg !4650
  %84 = load i32, i32* %x, align 4, !dbg !4651
  %mul126 = mul nsw i32 2, %84, !dbg !4652
  %sub127 = sub nsw i32 %mul126, 1, !dbg !4653
  %idxprom128 = sext i32 %sub127 to i64, !dbg !4654
  %85 = load i16*, i16** %b, align 8, !dbg !4654
  %arrayidx129 = getelementptr inbounds i16, i16* %85, i64 %idxprom128, !dbg !4654
  store i16 %conv125, i16* %arrayidx129, align 2, !dbg !4655
  %86 = load i32, i32* %b2, align 4, !dbg !4656
  %neg130 = xor i32 %86, -1, !dbg !4657
  %shr131 = ashr i32 %neg130, 1, !dbg !4658
  %neg132 = xor i32 %shr131, -1, !dbg !4659
  %conv133 = trunc i32 %neg132 to i16, !dbg !4659
  %87 = load i32, i32* %x, align 4, !dbg !4660
  %mul134 = mul nsw i32 2, %87, !dbg !4661
  %idxprom135 = sext i32 %mul134 to i64, !dbg !4662
  %88 = load i16*, i16** %b, align 8, !dbg !4662
  %arrayidx136 = getelementptr inbounds i16, i16* %88, i64 %idxprom135, !dbg !4662
  store i16 %conv133, i16* %arrayidx136, align 2, !dbg !4663
  %89 = load i32, i32* %b2, align 4, !dbg !4664
  store i32 %89, i32* %b0, align 4, !dbg !4665
  br label %for.inc137, !dbg !4666

for.inc137:                                       ; preds = %for.body94
  %90 = load i32, i32* %x, align 4, !dbg !4667
  %inc138 = add nsw i32 %90, 1, !dbg !4667
  store i32 %inc138, i32* %x, align 4, !dbg !4667
  br label %for.cond91, !dbg !4669, !llvm.loop !4670

for.end139:                                       ; preds = %for.cond91
  %91 = load i32, i32* %w.addr, align 4, !dbg !4672
  %sub140 = sub nsw i32 %91, 1, !dbg !4673
  %idxprom141 = sext i32 %sub140 to i64, !dbg !4674
  %92 = load i16*, i16** %temp, align 8, !dbg !4674
  %arrayidx142 = getelementptr inbounds i16, i16* %92, i64 %idxprom141, !dbg !4674
  %93 = load i16, i16* %arrayidx142, align 2, !dbg !4674
  %conv143 = sext i16 %93 to i32, !dbg !4675
  %94 = load i32, i32* %b2, align 4, !dbg !4676
  %95 = load i32, i32* %b2, align 4, !dbg !4677
  %add144 = add i32 %94, %95, !dbg !4678
  %mul145 = mul i32 6497, %add144, !dbg !4679
  %add146 = add i32 %mul145, 2048, !dbg !4680
  %shr147 = ashr i32 %add146, 12, !dbg !4681
  %add148 = add i32 %conv143, %shr147, !dbg !4682
  %neg149 = xor i32 %add148, -1, !dbg !4683
  %shr150 = lshr i32 %neg149, 1, !dbg !4684
  %neg151 = xor i32 %shr150, -1, !dbg !4685
  %conv152 = trunc i32 %neg151 to i16, !dbg !4685
  %96 = load i32, i32* %w.addr, align 4, !dbg !4686
  %sub153 = sub nsw i32 %96, 1, !dbg !4687
  %idxprom154 = sext i32 %sub153 to i64, !dbg !4688
  %97 = load i16*, i16** %b, align 8, !dbg !4688
  %arrayidx155 = getelementptr inbounds i16, i16* %97, i64 %idxprom154, !dbg !4688
  store i16 %conv152, i16* %arrayidx155, align 2, !dbg !4689
  ret void, !dbg !4690
}

; Function Attrs: nounwind uwtable
define internal void @spatial_compose_dd97i_init_10bit(%struct.DWTCompose* %cs, i8* %buffer, i32 %height, i32 %stride) #0 !dbg !4691 {
entry:
  %retval.i80 = alloca i32, align 4
  %a.addr.i81 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i81, metadata !904, metadata !87), !dbg !4692
  %amin.addr.i82 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i82, metadata !911, metadata !87), !dbg !4694
  %amax.addr.i83 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i83, metadata !913, metadata !87), !dbg !4695
  %retval.i69 = alloca i32, align 4
  %a.addr.i70 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i70, metadata !904, metadata !87), !dbg !4696
  %amin.addr.i71 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i71, metadata !911, metadata !87), !dbg !4698
  %amax.addr.i72 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i72, metadata !913, metadata !87), !dbg !4699
  %retval.i58 = alloca i32, align 4
  %a.addr.i59 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i59, metadata !904, metadata !87), !dbg !4700
  %amin.addr.i60 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i60, metadata !911, metadata !87), !dbg !4702
  %amax.addr.i61 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i61, metadata !913, metadata !87), !dbg !4703
  %retval.i47 = alloca i32, align 4
  %a.addr.i48 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i48, metadata !904, metadata !87), !dbg !4704
  %amin.addr.i49 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i49, metadata !911, metadata !87), !dbg !4706
  %amax.addr.i50 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i50, metadata !913, metadata !87), !dbg !4707
  %retval.i36 = alloca i32, align 4
  %a.addr.i37 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i37, metadata !904, metadata !87), !dbg !4708
  %amin.addr.i38 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i38, metadata !911, metadata !87), !dbg !4710
  %amax.addr.i39 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i39, metadata !913, metadata !87), !dbg !4711
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !904, metadata !87), !dbg !4712
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !911, metadata !87), !dbg !4714
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !913, metadata !87), !dbg !4715
  %cs.addr = alloca %struct.DWTCompose*, align 8
  %buffer.addr = alloca i8*, align 8
  %height.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  store %struct.DWTCompose* %cs, %struct.DWTCompose** %cs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTCompose** %cs.addr, metadata !4716, metadata !87), !dbg !4717
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !4718, metadata !87), !dbg !4719
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !4720, metadata !87), !dbg !4721
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !4722, metadata !87), !dbg !4723
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !4724
  %1 = load i32, i32* %height.addr, align 4, !dbg !4725
  %sub = sub nsw i32 %1, 2, !dbg !4726
  store i32 -6, i32* %a.addr.i, align 4, !dbg !4727
  store i32 0, i32* %amin.addr.i, align 4, !dbg !4727
  store i32 %sub, i32* %amax.addr.i, align 4, !dbg !4727
  %2 = load i32, i32* %a.addr.i, align 4, !dbg !4728
  %3 = load i32, i32* %amin.addr.i, align 4, !dbg !4729
  %cmp.i = icmp slt i32 %2, %3, !dbg !4730
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !4731

if.then.i:                                        ; preds = %entry
  %4 = load i32, i32* %amin.addr.i, align 4, !dbg !4732
  store i32 %4, i32* %retval.i, align 4, !dbg !4733
  br label %av_clip_c.exit, !dbg !4733

if.else.i:                                        ; preds = %entry
  %5 = load i32, i32* %a.addr.i, align 4, !dbg !4734
  %6 = load i32, i32* %amax.addr.i, align 4, !dbg !4735
  %cmp1.i = icmp sgt i32 %5, %6, !dbg !4736
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !4737

if.then2.i:                                       ; preds = %if.else.i
  %7 = load i32, i32* %amax.addr.i, align 4, !dbg !4738
  store i32 %7, i32* %retval.i, align 4, !dbg !4739
  br label %av_clip_c.exit, !dbg !4739

if.else3.i:                                       ; preds = %if.else.i
  %8 = load i32, i32* %a.addr.i, align 4, !dbg !4740
  store i32 %8, i32* %retval.i, align 4, !dbg !4741
  br label %av_clip_c.exit, !dbg !4741

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %9 = load i32, i32* %retval.i, align 4, !dbg !4742
  %10 = load i32, i32* %stride.addr, align 4, !dbg !4743
  %mul = mul nsw i32 %9, %10, !dbg !4744
  %idx.ext = sext i32 %mul to i64, !dbg !4745
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %idx.ext, !dbg !4745
  %11 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !4746
  %b = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %11, i32 0, i32 0, !dbg !4747
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 0, !dbg !4746
  store i8* %add.ptr, i8** %arrayidx, align 8, !dbg !4748
  %12 = load i8*, i8** %buffer.addr, align 8, !dbg !4749
  %13 = load i32, i32* %height.addr, align 4, !dbg !4750
  %sub1 = sub nsw i32 %13, 1, !dbg !4751
  store i32 -5, i32* %a.addr.i81, align 4, !dbg !4752
  store i32 1, i32* %amin.addr.i82, align 4, !dbg !4752
  store i32 %sub1, i32* %amax.addr.i83, align 4, !dbg !4752
  %14 = load i32, i32* %a.addr.i81, align 4, !dbg !4753
  %15 = load i32, i32* %amin.addr.i82, align 4, !dbg !4754
  %cmp.i84 = icmp slt i32 %14, %15, !dbg !4755
  br i1 %cmp.i84, label %if.then.i85, label %if.else.i87, !dbg !4756

if.then.i85:                                      ; preds = %av_clip_c.exit
  %16 = load i32, i32* %amin.addr.i82, align 4, !dbg !4757
  store i32 %16, i32* %retval.i80, align 4, !dbg !4758
  br label %av_clip_c.exit90, !dbg !4758

if.else.i87:                                      ; preds = %av_clip_c.exit
  %17 = load i32, i32* %a.addr.i81, align 4, !dbg !4759
  %18 = load i32, i32* %amax.addr.i83, align 4, !dbg !4760
  %cmp1.i86 = icmp sgt i32 %17, %18, !dbg !4761
  br i1 %cmp1.i86, label %if.then2.i88, label %if.else3.i89, !dbg !4762

if.then2.i88:                                     ; preds = %if.else.i87
  %19 = load i32, i32* %amax.addr.i83, align 4, !dbg !4763
  store i32 %19, i32* %retval.i80, align 4, !dbg !4764
  br label %av_clip_c.exit90, !dbg !4764

if.else3.i89:                                     ; preds = %if.else.i87
  %20 = load i32, i32* %a.addr.i81, align 4, !dbg !4765
  store i32 %20, i32* %retval.i80, align 4, !dbg !4766
  br label %av_clip_c.exit90, !dbg !4766

av_clip_c.exit90:                                 ; preds = %if.then.i85, %if.then2.i88, %if.else3.i89
  %21 = load i32, i32* %retval.i80, align 4, !dbg !4767
  %22 = load i32, i32* %stride.addr, align 4, !dbg !4768
  %mul3 = mul nsw i32 %21, %22, !dbg !4769
  %idx.ext4 = sext i32 %mul3 to i64, !dbg !4770
  %add.ptr5 = getelementptr inbounds i8, i8* %12, i64 %idx.ext4, !dbg !4770
  %23 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !4771
  %b6 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %23, i32 0, i32 0, !dbg !4772
  %arrayidx7 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b6, i64 0, i64 1, !dbg !4771
  store i8* %add.ptr5, i8** %arrayidx7, align 8, !dbg !4773
  %24 = load i8*, i8** %buffer.addr, align 8, !dbg !4774
  %25 = load i32, i32* %height.addr, align 4, !dbg !4775
  %sub8 = sub nsw i32 %25, 2, !dbg !4776
  store i32 -4, i32* %a.addr.i70, align 4, !dbg !4777
  store i32 0, i32* %amin.addr.i71, align 4, !dbg !4777
  store i32 %sub8, i32* %amax.addr.i72, align 4, !dbg !4777
  %26 = load i32, i32* %a.addr.i70, align 4, !dbg !4778
  %27 = load i32, i32* %amin.addr.i71, align 4, !dbg !4779
  %cmp.i73 = icmp slt i32 %26, %27, !dbg !4780
  br i1 %cmp.i73, label %if.then.i74, label %if.else.i76, !dbg !4781

if.then.i74:                                      ; preds = %av_clip_c.exit90
  %28 = load i32, i32* %amin.addr.i71, align 4, !dbg !4782
  store i32 %28, i32* %retval.i69, align 4, !dbg !4783
  br label %av_clip_c.exit79, !dbg !4783

if.else.i76:                                      ; preds = %av_clip_c.exit90
  %29 = load i32, i32* %a.addr.i70, align 4, !dbg !4784
  %30 = load i32, i32* %amax.addr.i72, align 4, !dbg !4785
  %cmp1.i75 = icmp sgt i32 %29, %30, !dbg !4786
  br i1 %cmp1.i75, label %if.then2.i77, label %if.else3.i78, !dbg !4787

if.then2.i77:                                     ; preds = %if.else.i76
  %31 = load i32, i32* %amax.addr.i72, align 4, !dbg !4788
  store i32 %31, i32* %retval.i69, align 4, !dbg !4789
  br label %av_clip_c.exit79, !dbg !4789

if.else3.i78:                                     ; preds = %if.else.i76
  %32 = load i32, i32* %a.addr.i70, align 4, !dbg !4790
  store i32 %32, i32* %retval.i69, align 4, !dbg !4791
  br label %av_clip_c.exit79, !dbg !4791

av_clip_c.exit79:                                 ; preds = %if.then.i74, %if.then2.i77, %if.else3.i78
  %33 = load i32, i32* %retval.i69, align 4, !dbg !4792
  %34 = load i32, i32* %stride.addr, align 4, !dbg !4793
  %mul10 = mul nsw i32 %33, %34, !dbg !4794
  %idx.ext11 = sext i32 %mul10 to i64, !dbg !4795
  %add.ptr12 = getelementptr inbounds i8, i8* %24, i64 %idx.ext11, !dbg !4795
  %35 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !4796
  %b13 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %35, i32 0, i32 0, !dbg !4797
  %arrayidx14 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b13, i64 0, i64 2, !dbg !4796
  store i8* %add.ptr12, i8** %arrayidx14, align 8, !dbg !4798
  %36 = load i8*, i8** %buffer.addr, align 8, !dbg !4799
  %37 = load i32, i32* %height.addr, align 4, !dbg !4800
  %sub15 = sub nsw i32 %37, 1, !dbg !4801
  store i32 -3, i32* %a.addr.i59, align 4, !dbg !4802
  store i32 1, i32* %amin.addr.i60, align 4, !dbg !4802
  store i32 %sub15, i32* %amax.addr.i61, align 4, !dbg !4802
  %38 = load i32, i32* %a.addr.i59, align 4, !dbg !4803
  %39 = load i32, i32* %amin.addr.i60, align 4, !dbg !4804
  %cmp.i62 = icmp slt i32 %38, %39, !dbg !4805
  br i1 %cmp.i62, label %if.then.i63, label %if.else.i65, !dbg !4806

if.then.i63:                                      ; preds = %av_clip_c.exit79
  %40 = load i32, i32* %amin.addr.i60, align 4, !dbg !4807
  store i32 %40, i32* %retval.i58, align 4, !dbg !4808
  br label %av_clip_c.exit68, !dbg !4808

if.else.i65:                                      ; preds = %av_clip_c.exit79
  %41 = load i32, i32* %a.addr.i59, align 4, !dbg !4809
  %42 = load i32, i32* %amax.addr.i61, align 4, !dbg !4810
  %cmp1.i64 = icmp sgt i32 %41, %42, !dbg !4811
  br i1 %cmp1.i64, label %if.then2.i66, label %if.else3.i67, !dbg !4812

if.then2.i66:                                     ; preds = %if.else.i65
  %43 = load i32, i32* %amax.addr.i61, align 4, !dbg !4813
  store i32 %43, i32* %retval.i58, align 4, !dbg !4814
  br label %av_clip_c.exit68, !dbg !4814

if.else3.i67:                                     ; preds = %if.else.i65
  %44 = load i32, i32* %a.addr.i59, align 4, !dbg !4815
  store i32 %44, i32* %retval.i58, align 4, !dbg !4816
  br label %av_clip_c.exit68, !dbg !4816

av_clip_c.exit68:                                 ; preds = %if.then.i63, %if.then2.i66, %if.else3.i67
  %45 = load i32, i32* %retval.i58, align 4, !dbg !4817
  %46 = load i32, i32* %stride.addr, align 4, !dbg !4818
  %mul17 = mul nsw i32 %45, %46, !dbg !4819
  %idx.ext18 = sext i32 %mul17 to i64, !dbg !4820
  %add.ptr19 = getelementptr inbounds i8, i8* %36, i64 %idx.ext18, !dbg !4820
  %47 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !4821
  %b20 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %47, i32 0, i32 0, !dbg !4822
  %arrayidx21 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b20, i64 0, i64 3, !dbg !4821
  store i8* %add.ptr19, i8** %arrayidx21, align 8, !dbg !4823
  %48 = load i8*, i8** %buffer.addr, align 8, !dbg !4824
  %49 = load i32, i32* %height.addr, align 4, !dbg !4825
  %sub22 = sub nsw i32 %49, 2, !dbg !4826
  store i32 -2, i32* %a.addr.i48, align 4, !dbg !4827
  store i32 0, i32* %amin.addr.i49, align 4, !dbg !4827
  store i32 %sub22, i32* %amax.addr.i50, align 4, !dbg !4827
  %50 = load i32, i32* %a.addr.i48, align 4, !dbg !4828
  %51 = load i32, i32* %amin.addr.i49, align 4, !dbg !4829
  %cmp.i51 = icmp slt i32 %50, %51, !dbg !4830
  br i1 %cmp.i51, label %if.then.i52, label %if.else.i54, !dbg !4831

if.then.i52:                                      ; preds = %av_clip_c.exit68
  %52 = load i32, i32* %amin.addr.i49, align 4, !dbg !4832
  store i32 %52, i32* %retval.i47, align 4, !dbg !4833
  br label %av_clip_c.exit57, !dbg !4833

if.else.i54:                                      ; preds = %av_clip_c.exit68
  %53 = load i32, i32* %a.addr.i48, align 4, !dbg !4834
  %54 = load i32, i32* %amax.addr.i50, align 4, !dbg !4835
  %cmp1.i53 = icmp sgt i32 %53, %54, !dbg !4836
  br i1 %cmp1.i53, label %if.then2.i55, label %if.else3.i56, !dbg !4837

if.then2.i55:                                     ; preds = %if.else.i54
  %55 = load i32, i32* %amax.addr.i50, align 4, !dbg !4838
  store i32 %55, i32* %retval.i47, align 4, !dbg !4839
  br label %av_clip_c.exit57, !dbg !4839

if.else3.i56:                                     ; preds = %if.else.i54
  %56 = load i32, i32* %a.addr.i48, align 4, !dbg !4840
  store i32 %56, i32* %retval.i47, align 4, !dbg !4841
  br label %av_clip_c.exit57, !dbg !4841

av_clip_c.exit57:                                 ; preds = %if.then.i52, %if.then2.i55, %if.else3.i56
  %57 = load i32, i32* %retval.i47, align 4, !dbg !4842
  %58 = load i32, i32* %stride.addr, align 4, !dbg !4843
  %mul24 = mul nsw i32 %57, %58, !dbg !4844
  %idx.ext25 = sext i32 %mul24 to i64, !dbg !4845
  %add.ptr26 = getelementptr inbounds i8, i8* %48, i64 %idx.ext25, !dbg !4845
  %59 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !4846
  %b27 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %59, i32 0, i32 0, !dbg !4847
  %arrayidx28 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b27, i64 0, i64 4, !dbg !4846
  store i8* %add.ptr26, i8** %arrayidx28, align 8, !dbg !4848
  %60 = load i8*, i8** %buffer.addr, align 8, !dbg !4849
  %61 = load i32, i32* %height.addr, align 4, !dbg !4850
  %sub29 = sub nsw i32 %61, 1, !dbg !4851
  store i32 -1, i32* %a.addr.i37, align 4, !dbg !4852
  store i32 1, i32* %amin.addr.i38, align 4, !dbg !4852
  store i32 %sub29, i32* %amax.addr.i39, align 4, !dbg !4852
  %62 = load i32, i32* %a.addr.i37, align 4, !dbg !4853
  %63 = load i32, i32* %amin.addr.i38, align 4, !dbg !4854
  %cmp.i40 = icmp slt i32 %62, %63, !dbg !4855
  br i1 %cmp.i40, label %if.then.i41, label %if.else.i43, !dbg !4856

if.then.i41:                                      ; preds = %av_clip_c.exit57
  %64 = load i32, i32* %amin.addr.i38, align 4, !dbg !4857
  store i32 %64, i32* %retval.i36, align 4, !dbg !4858
  br label %av_clip_c.exit46, !dbg !4858

if.else.i43:                                      ; preds = %av_clip_c.exit57
  %65 = load i32, i32* %a.addr.i37, align 4, !dbg !4859
  %66 = load i32, i32* %amax.addr.i39, align 4, !dbg !4860
  %cmp1.i42 = icmp sgt i32 %65, %66, !dbg !4861
  br i1 %cmp1.i42, label %if.then2.i44, label %if.else3.i45, !dbg !4862

if.then2.i44:                                     ; preds = %if.else.i43
  %67 = load i32, i32* %amax.addr.i39, align 4, !dbg !4863
  store i32 %67, i32* %retval.i36, align 4, !dbg !4864
  br label %av_clip_c.exit46, !dbg !4864

if.else3.i45:                                     ; preds = %if.else.i43
  %68 = load i32, i32* %a.addr.i37, align 4, !dbg !4865
  store i32 %68, i32* %retval.i36, align 4, !dbg !4866
  br label %av_clip_c.exit46, !dbg !4866

av_clip_c.exit46:                                 ; preds = %if.then.i41, %if.then2.i44, %if.else3.i45
  %69 = load i32, i32* %retval.i36, align 4, !dbg !4867
  %70 = load i32, i32* %stride.addr, align 4, !dbg !4868
  %mul31 = mul nsw i32 %69, %70, !dbg !4869
  %idx.ext32 = sext i32 %mul31 to i64, !dbg !4870
  %add.ptr33 = getelementptr inbounds i8, i8* %60, i64 %idx.ext32, !dbg !4870
  %71 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !4871
  %b34 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %71, i32 0, i32 0, !dbg !4872
  %arrayidx35 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b34, i64 0, i64 5, !dbg !4871
  store i8* %add.ptr33, i8** %arrayidx35, align 8, !dbg !4873
  %72 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !4874
  %y = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %72, i32 0, i32 1, !dbg !4875
  store i32 -5, i32* %y, align 8, !dbg !4876
  ret void, !dbg !4877
}

; Function Attrs: nounwind uwtable
define internal void @spatial_compose53i_init_10bit(%struct.DWTCompose* %cs, i8* %buffer, i32 %height, i32 %stride) #0 !dbg !4878 {
entry:
  %retval.i8 = alloca i32, align 4
  %x.addr.i9 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i9, metadata !1102, metadata !87), !dbg !4879
  %w.addr.i10 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i10, metadata !1109, metadata !87), !dbg !4881
  %retval.i = alloca i32, align 4
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !1102, metadata !87), !dbg !4882
  %w.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i, metadata !1109, metadata !87), !dbg !4884
  %cs.addr = alloca %struct.DWTCompose*, align 8
  %buffer.addr = alloca i8*, align 8
  %height.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  store %struct.DWTCompose* %cs, %struct.DWTCompose** %cs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTCompose** %cs.addr, metadata !4885, metadata !87), !dbg !4886
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !4887, metadata !87), !dbg !4888
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !4889, metadata !87), !dbg !4890
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !4891, metadata !87), !dbg !4892
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !4893
  %1 = load i32, i32* %height.addr, align 4, !dbg !4894
  %sub = sub nsw i32 %1, 1, !dbg !4895
  store i32 -2, i32* %x.addr.i, align 4, !dbg !4896
  store i32 %sub, i32* %w.addr.i, align 4, !dbg !4896
  %2 = load i32, i32* %w.addr.i, align 4, !dbg !4897
  %tobool.i = icmp ne i32 %2, 0, !dbg !4897
  br i1 %tobool.i, label %if.end.i, label %if.then.i, !dbg !4898

if.then.i:                                        ; preds = %entry
  store i32 0, i32* %retval.i, align 4, !dbg !4899
  br label %avpriv_mirror.exit, !dbg !4899

if.end.i:                                         ; preds = %entry
  br label %while.cond.i, !dbg !4900

while.cond.i:                                     ; preds = %if.end3.i, %if.end.i
  %3 = load i32, i32* %x.addr.i, align 4, !dbg !4901
  %4 = load i32, i32* %w.addr.i, align 4, !dbg !4902
  %cmp.i = icmp ugt i32 %3, %4, !dbg !4903
  br i1 %cmp.i, label %while.body.i, label %while.end.i, !dbg !4904

while.body.i:                                     ; preds = %while.cond.i
  %5 = load i32, i32* %x.addr.i, align 4, !dbg !4905
  %sub.i = sub nsw i32 0, %5, !dbg !4906
  store i32 %sub.i, i32* %x.addr.i, align 4, !dbg !4907
  %6 = load i32, i32* %x.addr.i, align 4, !dbg !4908
  %cmp1.i = icmp slt i32 %6, 0, !dbg !4909
  br i1 %cmp1.i, label %if.then2.i, label %if.end3.i, !dbg !4910

if.then2.i:                                       ; preds = %while.body.i
  %7 = load i32, i32* %w.addr.i, align 4, !dbg !4911
  %mul.i = mul nsw i32 2, %7, !dbg !4912
  %8 = load i32, i32* %x.addr.i, align 4, !dbg !4913
  %add.i = add nsw i32 %8, %mul.i, !dbg !4913
  store i32 %add.i, i32* %x.addr.i, align 4, !dbg !4913
  br label %if.end3.i, !dbg !4914

if.end3.i:                                        ; preds = %if.then2.i, %while.body.i
  br label %while.cond.i, !dbg !4915, !llvm.loop !1150

while.end.i:                                      ; preds = %while.cond.i
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !4916
  store i32 %9, i32* %retval.i, align 4, !dbg !4917
  br label %avpriv_mirror.exit, !dbg !4917

avpriv_mirror.exit:                               ; preds = %if.then.i, %while.end.i
  %10 = load i32, i32* %retval.i, align 4, !dbg !4918
  %11 = load i32, i32* %stride.addr, align 4, !dbg !4919
  %mul = mul nsw i32 %10, %11, !dbg !4920
  %idx.ext = sext i32 %mul to i64, !dbg !4921
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %idx.ext, !dbg !4921
  %12 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !4922
  %b = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %12, i32 0, i32 0, !dbg !4923
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 0, !dbg !4922
  store i8* %add.ptr, i8** %arrayidx, align 8, !dbg !4924
  %13 = load i8*, i8** %buffer.addr, align 8, !dbg !4925
  %14 = load i32, i32* %height.addr, align 4, !dbg !4926
  %sub1 = sub nsw i32 %14, 1, !dbg !4927
  store i32 -1, i32* %x.addr.i9, align 4, !dbg !4928
  store i32 %sub1, i32* %w.addr.i10, align 4, !dbg !4928
  %15 = load i32, i32* %w.addr.i10, align 4, !dbg !4929
  %tobool.i11 = icmp ne i32 %15, 0, !dbg !4929
  br i1 %tobool.i11, label %if.end.i13, label %if.then.i12, !dbg !4930

if.then.i12:                                      ; preds = %avpriv_mirror.exit
  store i32 0, i32* %retval.i8, align 4, !dbg !4931
  br label %avpriv_mirror.exit24, !dbg !4931

if.end.i13:                                       ; preds = %avpriv_mirror.exit
  br label %while.cond.i15, !dbg !4932

while.cond.i15:                                   ; preds = %if.end3.i22, %if.end.i13
  %16 = load i32, i32* %x.addr.i9, align 4, !dbg !4933
  %17 = load i32, i32* %w.addr.i10, align 4, !dbg !4934
  %cmp.i14 = icmp ugt i32 %16, %17, !dbg !4935
  br i1 %cmp.i14, label %while.body.i18, label %while.end.i23, !dbg !4936

while.body.i18:                                   ; preds = %while.cond.i15
  %18 = load i32, i32* %x.addr.i9, align 4, !dbg !4937
  %sub.i16 = sub nsw i32 0, %18, !dbg !4938
  store i32 %sub.i16, i32* %x.addr.i9, align 4, !dbg !4939
  %19 = load i32, i32* %x.addr.i9, align 4, !dbg !4940
  %cmp1.i17 = icmp slt i32 %19, 0, !dbg !4941
  br i1 %cmp1.i17, label %if.then2.i21, label %if.end3.i22, !dbg !4942

if.then2.i21:                                     ; preds = %while.body.i18
  %20 = load i32, i32* %w.addr.i10, align 4, !dbg !4943
  %mul.i19 = mul nsw i32 2, %20, !dbg !4944
  %21 = load i32, i32* %x.addr.i9, align 4, !dbg !4945
  %add.i20 = add nsw i32 %21, %mul.i19, !dbg !4945
  store i32 %add.i20, i32* %x.addr.i9, align 4, !dbg !4945
  br label %if.end3.i22, !dbg !4946

if.end3.i22:                                      ; preds = %if.then2.i21, %while.body.i18
  br label %while.cond.i15, !dbg !4947, !llvm.loop !1150

while.end.i23:                                    ; preds = %while.cond.i15
  %22 = load i32, i32* %x.addr.i9, align 4, !dbg !4948
  store i32 %22, i32* %retval.i8, align 4, !dbg !4949
  br label %avpriv_mirror.exit24, !dbg !4949

avpriv_mirror.exit24:                             ; preds = %if.then.i12, %while.end.i23
  %23 = load i32, i32* %retval.i8, align 4, !dbg !4950
  %24 = load i32, i32* %stride.addr, align 4, !dbg !4951
  %mul3 = mul nsw i32 %23, %24, !dbg !4952
  %idx.ext4 = sext i32 %mul3 to i64, !dbg !4953
  %add.ptr5 = getelementptr inbounds i8, i8* %13, i64 %idx.ext4, !dbg !4953
  %25 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !4954
  %b6 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %25, i32 0, i32 0, !dbg !4955
  %arrayidx7 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b6, i64 0, i64 1, !dbg !4954
  store i8* %add.ptr5, i8** %arrayidx7, align 8, !dbg !4956
  %26 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !4957
  %y = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %26, i32 0, i32 1, !dbg !4958
  store i32 -1, i32* %y, align 8, !dbg !4959
  ret void, !dbg !4960
}

; Function Attrs: nounwind uwtable
define internal void @spatial_compose_dd137i_init_10bit(%struct.DWTCompose* %cs, i8* %buffer, i32 %height, i32 %stride) #0 !dbg !4961 {
entry:
  %retval.i116 = alloca i32, align 4
  %a.addr.i117 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i117, metadata !904, metadata !87), !dbg !4962
  %amin.addr.i118 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i118, metadata !911, metadata !87), !dbg !4964
  %amax.addr.i119 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i119, metadata !913, metadata !87), !dbg !4965
  %retval.i105 = alloca i32, align 4
  %a.addr.i106 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i106, metadata !904, metadata !87), !dbg !4966
  %amin.addr.i107 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i107, metadata !911, metadata !87), !dbg !4968
  %amax.addr.i108 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i108, metadata !913, metadata !87), !dbg !4969
  %retval.i94 = alloca i32, align 4
  %a.addr.i95 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i95, metadata !904, metadata !87), !dbg !4970
  %amin.addr.i96 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i96, metadata !911, metadata !87), !dbg !4972
  %amax.addr.i97 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i97, metadata !913, metadata !87), !dbg !4973
  %retval.i83 = alloca i32, align 4
  %a.addr.i84 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i84, metadata !904, metadata !87), !dbg !4974
  %amin.addr.i85 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i85, metadata !911, metadata !87), !dbg !4976
  %amax.addr.i86 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i86, metadata !913, metadata !87), !dbg !4977
  %retval.i72 = alloca i32, align 4
  %a.addr.i73 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i73, metadata !904, metadata !87), !dbg !4978
  %amin.addr.i74 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i74, metadata !911, metadata !87), !dbg !4980
  %amax.addr.i75 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i75, metadata !913, metadata !87), !dbg !4981
  %retval.i61 = alloca i32, align 4
  %a.addr.i62 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i62, metadata !904, metadata !87), !dbg !4982
  %amin.addr.i63 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i63, metadata !911, metadata !87), !dbg !4984
  %amax.addr.i64 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i64, metadata !913, metadata !87), !dbg !4985
  %retval.i50 = alloca i32, align 4
  %a.addr.i51 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i51, metadata !904, metadata !87), !dbg !4986
  %amin.addr.i52 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i52, metadata !911, metadata !87), !dbg !4988
  %amax.addr.i53 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i53, metadata !913, metadata !87), !dbg !4989
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !904, metadata !87), !dbg !4990
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !911, metadata !87), !dbg !4992
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !913, metadata !87), !dbg !4993
  %cs.addr = alloca %struct.DWTCompose*, align 8
  %buffer.addr = alloca i8*, align 8
  %height.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  store %struct.DWTCompose* %cs, %struct.DWTCompose** %cs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTCompose** %cs.addr, metadata !4994, metadata !87), !dbg !4995
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !4996, metadata !87), !dbg !4997
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !4998, metadata !87), !dbg !4999
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !5000, metadata !87), !dbg !5001
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !5002
  %1 = load i32, i32* %height.addr, align 4, !dbg !5003
  %sub = sub nsw i32 %1, 2, !dbg !5004
  store i32 -6, i32* %a.addr.i, align 4, !dbg !5005
  store i32 0, i32* %amin.addr.i, align 4, !dbg !5005
  store i32 %sub, i32* %amax.addr.i, align 4, !dbg !5005
  %2 = load i32, i32* %a.addr.i, align 4, !dbg !5006
  %3 = load i32, i32* %amin.addr.i, align 4, !dbg !5007
  %cmp.i = icmp slt i32 %2, %3, !dbg !5008
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !5009

if.then.i:                                        ; preds = %entry
  %4 = load i32, i32* %amin.addr.i, align 4, !dbg !5010
  store i32 %4, i32* %retval.i, align 4, !dbg !5011
  br label %av_clip_c.exit, !dbg !5011

if.else.i:                                        ; preds = %entry
  %5 = load i32, i32* %a.addr.i, align 4, !dbg !5012
  %6 = load i32, i32* %amax.addr.i, align 4, !dbg !5013
  %cmp1.i = icmp sgt i32 %5, %6, !dbg !5014
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !5015

if.then2.i:                                       ; preds = %if.else.i
  %7 = load i32, i32* %amax.addr.i, align 4, !dbg !5016
  store i32 %7, i32* %retval.i, align 4, !dbg !5017
  br label %av_clip_c.exit, !dbg !5017

if.else3.i:                                       ; preds = %if.else.i
  %8 = load i32, i32* %a.addr.i, align 4, !dbg !5018
  store i32 %8, i32* %retval.i, align 4, !dbg !5019
  br label %av_clip_c.exit, !dbg !5019

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %9 = load i32, i32* %retval.i, align 4, !dbg !5020
  %10 = load i32, i32* %stride.addr, align 4, !dbg !5021
  %mul = mul nsw i32 %9, %10, !dbg !5022
  %idx.ext = sext i32 %mul to i64, !dbg !5023
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %idx.ext, !dbg !5023
  %11 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !5024
  %b = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %11, i32 0, i32 0, !dbg !5025
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 0, !dbg !5024
  store i8* %add.ptr, i8** %arrayidx, align 8, !dbg !5026
  %12 = load i8*, i8** %buffer.addr, align 8, !dbg !5027
  %13 = load i32, i32* %height.addr, align 4, !dbg !5028
  %sub1 = sub nsw i32 %13, 1, !dbg !5029
  store i32 -5, i32* %a.addr.i117, align 4, !dbg !5030
  store i32 1, i32* %amin.addr.i118, align 4, !dbg !5030
  store i32 %sub1, i32* %amax.addr.i119, align 4, !dbg !5030
  %14 = load i32, i32* %a.addr.i117, align 4, !dbg !5031
  %15 = load i32, i32* %amin.addr.i118, align 4, !dbg !5032
  %cmp.i120 = icmp slt i32 %14, %15, !dbg !5033
  br i1 %cmp.i120, label %if.then.i121, label %if.else.i123, !dbg !5034

if.then.i121:                                     ; preds = %av_clip_c.exit
  %16 = load i32, i32* %amin.addr.i118, align 4, !dbg !5035
  store i32 %16, i32* %retval.i116, align 4, !dbg !5036
  br label %av_clip_c.exit126, !dbg !5036

if.else.i123:                                     ; preds = %av_clip_c.exit
  %17 = load i32, i32* %a.addr.i117, align 4, !dbg !5037
  %18 = load i32, i32* %amax.addr.i119, align 4, !dbg !5038
  %cmp1.i122 = icmp sgt i32 %17, %18, !dbg !5039
  br i1 %cmp1.i122, label %if.then2.i124, label %if.else3.i125, !dbg !5040

if.then2.i124:                                    ; preds = %if.else.i123
  %19 = load i32, i32* %amax.addr.i119, align 4, !dbg !5041
  store i32 %19, i32* %retval.i116, align 4, !dbg !5042
  br label %av_clip_c.exit126, !dbg !5042

if.else3.i125:                                    ; preds = %if.else.i123
  %20 = load i32, i32* %a.addr.i117, align 4, !dbg !5043
  store i32 %20, i32* %retval.i116, align 4, !dbg !5044
  br label %av_clip_c.exit126, !dbg !5044

av_clip_c.exit126:                                ; preds = %if.then.i121, %if.then2.i124, %if.else3.i125
  %21 = load i32, i32* %retval.i116, align 4, !dbg !5045
  %22 = load i32, i32* %stride.addr, align 4, !dbg !5046
  %mul3 = mul nsw i32 %21, %22, !dbg !5047
  %idx.ext4 = sext i32 %mul3 to i64, !dbg !5048
  %add.ptr5 = getelementptr inbounds i8, i8* %12, i64 %idx.ext4, !dbg !5048
  %23 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !5049
  %b6 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %23, i32 0, i32 0, !dbg !5050
  %arrayidx7 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b6, i64 0, i64 1, !dbg !5049
  store i8* %add.ptr5, i8** %arrayidx7, align 8, !dbg !5051
  %24 = load i8*, i8** %buffer.addr, align 8, !dbg !5052
  %25 = load i32, i32* %height.addr, align 4, !dbg !5053
  %sub8 = sub nsw i32 %25, 2, !dbg !5054
  store i32 -4, i32* %a.addr.i106, align 4, !dbg !5055
  store i32 0, i32* %amin.addr.i107, align 4, !dbg !5055
  store i32 %sub8, i32* %amax.addr.i108, align 4, !dbg !5055
  %26 = load i32, i32* %a.addr.i106, align 4, !dbg !5056
  %27 = load i32, i32* %amin.addr.i107, align 4, !dbg !5057
  %cmp.i109 = icmp slt i32 %26, %27, !dbg !5058
  br i1 %cmp.i109, label %if.then.i110, label %if.else.i112, !dbg !5059

if.then.i110:                                     ; preds = %av_clip_c.exit126
  %28 = load i32, i32* %amin.addr.i107, align 4, !dbg !5060
  store i32 %28, i32* %retval.i105, align 4, !dbg !5061
  br label %av_clip_c.exit115, !dbg !5061

if.else.i112:                                     ; preds = %av_clip_c.exit126
  %29 = load i32, i32* %a.addr.i106, align 4, !dbg !5062
  %30 = load i32, i32* %amax.addr.i108, align 4, !dbg !5063
  %cmp1.i111 = icmp sgt i32 %29, %30, !dbg !5064
  br i1 %cmp1.i111, label %if.then2.i113, label %if.else3.i114, !dbg !5065

if.then2.i113:                                    ; preds = %if.else.i112
  %31 = load i32, i32* %amax.addr.i108, align 4, !dbg !5066
  store i32 %31, i32* %retval.i105, align 4, !dbg !5067
  br label %av_clip_c.exit115, !dbg !5067

if.else3.i114:                                    ; preds = %if.else.i112
  %32 = load i32, i32* %a.addr.i106, align 4, !dbg !5068
  store i32 %32, i32* %retval.i105, align 4, !dbg !5069
  br label %av_clip_c.exit115, !dbg !5069

av_clip_c.exit115:                                ; preds = %if.then.i110, %if.then2.i113, %if.else3.i114
  %33 = load i32, i32* %retval.i105, align 4, !dbg !5070
  %34 = load i32, i32* %stride.addr, align 4, !dbg !5071
  %mul10 = mul nsw i32 %33, %34, !dbg !5072
  %idx.ext11 = sext i32 %mul10 to i64, !dbg !5073
  %add.ptr12 = getelementptr inbounds i8, i8* %24, i64 %idx.ext11, !dbg !5073
  %35 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !5074
  %b13 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %35, i32 0, i32 0, !dbg !5075
  %arrayidx14 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b13, i64 0, i64 2, !dbg !5074
  store i8* %add.ptr12, i8** %arrayidx14, align 8, !dbg !5076
  %36 = load i8*, i8** %buffer.addr, align 8, !dbg !5077
  %37 = load i32, i32* %height.addr, align 4, !dbg !5078
  %sub15 = sub nsw i32 %37, 1, !dbg !5079
  store i32 -3, i32* %a.addr.i95, align 4, !dbg !5080
  store i32 1, i32* %amin.addr.i96, align 4, !dbg !5080
  store i32 %sub15, i32* %amax.addr.i97, align 4, !dbg !5080
  %38 = load i32, i32* %a.addr.i95, align 4, !dbg !5081
  %39 = load i32, i32* %amin.addr.i96, align 4, !dbg !5082
  %cmp.i98 = icmp slt i32 %38, %39, !dbg !5083
  br i1 %cmp.i98, label %if.then.i99, label %if.else.i101, !dbg !5084

if.then.i99:                                      ; preds = %av_clip_c.exit115
  %40 = load i32, i32* %amin.addr.i96, align 4, !dbg !5085
  store i32 %40, i32* %retval.i94, align 4, !dbg !5086
  br label %av_clip_c.exit104, !dbg !5086

if.else.i101:                                     ; preds = %av_clip_c.exit115
  %41 = load i32, i32* %a.addr.i95, align 4, !dbg !5087
  %42 = load i32, i32* %amax.addr.i97, align 4, !dbg !5088
  %cmp1.i100 = icmp sgt i32 %41, %42, !dbg !5089
  br i1 %cmp1.i100, label %if.then2.i102, label %if.else3.i103, !dbg !5090

if.then2.i102:                                    ; preds = %if.else.i101
  %43 = load i32, i32* %amax.addr.i97, align 4, !dbg !5091
  store i32 %43, i32* %retval.i94, align 4, !dbg !5092
  br label %av_clip_c.exit104, !dbg !5092

if.else3.i103:                                    ; preds = %if.else.i101
  %44 = load i32, i32* %a.addr.i95, align 4, !dbg !5093
  store i32 %44, i32* %retval.i94, align 4, !dbg !5094
  br label %av_clip_c.exit104, !dbg !5094

av_clip_c.exit104:                                ; preds = %if.then.i99, %if.then2.i102, %if.else3.i103
  %45 = load i32, i32* %retval.i94, align 4, !dbg !5095
  %46 = load i32, i32* %stride.addr, align 4, !dbg !5096
  %mul17 = mul nsw i32 %45, %46, !dbg !5097
  %idx.ext18 = sext i32 %mul17 to i64, !dbg !5098
  %add.ptr19 = getelementptr inbounds i8, i8* %36, i64 %idx.ext18, !dbg !5098
  %47 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !5099
  %b20 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %47, i32 0, i32 0, !dbg !5100
  %arrayidx21 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b20, i64 0, i64 3, !dbg !5099
  store i8* %add.ptr19, i8** %arrayidx21, align 8, !dbg !5101
  %48 = load i8*, i8** %buffer.addr, align 8, !dbg !5102
  %49 = load i32, i32* %height.addr, align 4, !dbg !5103
  %sub22 = sub nsw i32 %49, 2, !dbg !5104
  store i32 -2, i32* %a.addr.i84, align 4, !dbg !5105
  store i32 0, i32* %amin.addr.i85, align 4, !dbg !5105
  store i32 %sub22, i32* %amax.addr.i86, align 4, !dbg !5105
  %50 = load i32, i32* %a.addr.i84, align 4, !dbg !5106
  %51 = load i32, i32* %amin.addr.i85, align 4, !dbg !5107
  %cmp.i87 = icmp slt i32 %50, %51, !dbg !5108
  br i1 %cmp.i87, label %if.then.i88, label %if.else.i90, !dbg !5109

if.then.i88:                                      ; preds = %av_clip_c.exit104
  %52 = load i32, i32* %amin.addr.i85, align 4, !dbg !5110
  store i32 %52, i32* %retval.i83, align 4, !dbg !5111
  br label %av_clip_c.exit93, !dbg !5111

if.else.i90:                                      ; preds = %av_clip_c.exit104
  %53 = load i32, i32* %a.addr.i84, align 4, !dbg !5112
  %54 = load i32, i32* %amax.addr.i86, align 4, !dbg !5113
  %cmp1.i89 = icmp sgt i32 %53, %54, !dbg !5114
  br i1 %cmp1.i89, label %if.then2.i91, label %if.else3.i92, !dbg !5115

if.then2.i91:                                     ; preds = %if.else.i90
  %55 = load i32, i32* %amax.addr.i86, align 4, !dbg !5116
  store i32 %55, i32* %retval.i83, align 4, !dbg !5117
  br label %av_clip_c.exit93, !dbg !5117

if.else3.i92:                                     ; preds = %if.else.i90
  %56 = load i32, i32* %a.addr.i84, align 4, !dbg !5118
  store i32 %56, i32* %retval.i83, align 4, !dbg !5119
  br label %av_clip_c.exit93, !dbg !5119

av_clip_c.exit93:                                 ; preds = %if.then.i88, %if.then2.i91, %if.else3.i92
  %57 = load i32, i32* %retval.i83, align 4, !dbg !5120
  %58 = load i32, i32* %stride.addr, align 4, !dbg !5121
  %mul24 = mul nsw i32 %57, %58, !dbg !5122
  %idx.ext25 = sext i32 %mul24 to i64, !dbg !5123
  %add.ptr26 = getelementptr inbounds i8, i8* %48, i64 %idx.ext25, !dbg !5123
  %59 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !5124
  %b27 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %59, i32 0, i32 0, !dbg !5125
  %arrayidx28 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b27, i64 0, i64 4, !dbg !5124
  store i8* %add.ptr26, i8** %arrayidx28, align 8, !dbg !5126
  %60 = load i8*, i8** %buffer.addr, align 8, !dbg !5127
  %61 = load i32, i32* %height.addr, align 4, !dbg !5128
  %sub29 = sub nsw i32 %61, 1, !dbg !5129
  store i32 -1, i32* %a.addr.i73, align 4, !dbg !5130
  store i32 1, i32* %amin.addr.i74, align 4, !dbg !5130
  store i32 %sub29, i32* %amax.addr.i75, align 4, !dbg !5130
  %62 = load i32, i32* %a.addr.i73, align 4, !dbg !5131
  %63 = load i32, i32* %amin.addr.i74, align 4, !dbg !5132
  %cmp.i76 = icmp slt i32 %62, %63, !dbg !5133
  br i1 %cmp.i76, label %if.then.i77, label %if.else.i79, !dbg !5134

if.then.i77:                                      ; preds = %av_clip_c.exit93
  %64 = load i32, i32* %amin.addr.i74, align 4, !dbg !5135
  store i32 %64, i32* %retval.i72, align 4, !dbg !5136
  br label %av_clip_c.exit82, !dbg !5136

if.else.i79:                                      ; preds = %av_clip_c.exit93
  %65 = load i32, i32* %a.addr.i73, align 4, !dbg !5137
  %66 = load i32, i32* %amax.addr.i75, align 4, !dbg !5138
  %cmp1.i78 = icmp sgt i32 %65, %66, !dbg !5139
  br i1 %cmp1.i78, label %if.then2.i80, label %if.else3.i81, !dbg !5140

if.then2.i80:                                     ; preds = %if.else.i79
  %67 = load i32, i32* %amax.addr.i75, align 4, !dbg !5141
  store i32 %67, i32* %retval.i72, align 4, !dbg !5142
  br label %av_clip_c.exit82, !dbg !5142

if.else3.i81:                                     ; preds = %if.else.i79
  %68 = load i32, i32* %a.addr.i73, align 4, !dbg !5143
  store i32 %68, i32* %retval.i72, align 4, !dbg !5144
  br label %av_clip_c.exit82, !dbg !5144

av_clip_c.exit82:                                 ; preds = %if.then.i77, %if.then2.i80, %if.else3.i81
  %69 = load i32, i32* %retval.i72, align 4, !dbg !5145
  %70 = load i32, i32* %stride.addr, align 4, !dbg !5146
  %mul31 = mul nsw i32 %69, %70, !dbg !5147
  %idx.ext32 = sext i32 %mul31 to i64, !dbg !5148
  %add.ptr33 = getelementptr inbounds i8, i8* %60, i64 %idx.ext32, !dbg !5148
  %71 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !5149
  %b34 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %71, i32 0, i32 0, !dbg !5150
  %arrayidx35 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b34, i64 0, i64 5, !dbg !5149
  store i8* %add.ptr33, i8** %arrayidx35, align 8, !dbg !5151
  %72 = load i8*, i8** %buffer.addr, align 8, !dbg !5152
  %73 = load i32, i32* %height.addr, align 4, !dbg !5153
  %sub36 = sub nsw i32 %73, 2, !dbg !5154
  store i32 0, i32* %a.addr.i62, align 4, !dbg !5155
  store i32 0, i32* %amin.addr.i63, align 4, !dbg !5155
  store i32 %sub36, i32* %amax.addr.i64, align 4, !dbg !5155
  %74 = load i32, i32* %a.addr.i62, align 4, !dbg !5156
  %75 = load i32, i32* %amin.addr.i63, align 4, !dbg !5157
  %cmp.i65 = icmp slt i32 %74, %75, !dbg !5158
  br i1 %cmp.i65, label %if.then.i66, label %if.else.i68, !dbg !5159

if.then.i66:                                      ; preds = %av_clip_c.exit82
  %76 = load i32, i32* %amin.addr.i63, align 4, !dbg !5160
  store i32 %76, i32* %retval.i61, align 4, !dbg !5161
  br label %av_clip_c.exit71, !dbg !5161

if.else.i68:                                      ; preds = %av_clip_c.exit82
  %77 = load i32, i32* %a.addr.i62, align 4, !dbg !5162
  %78 = load i32, i32* %amax.addr.i64, align 4, !dbg !5163
  %cmp1.i67 = icmp sgt i32 %77, %78, !dbg !5164
  br i1 %cmp1.i67, label %if.then2.i69, label %if.else3.i70, !dbg !5165

if.then2.i69:                                     ; preds = %if.else.i68
  %79 = load i32, i32* %amax.addr.i64, align 4, !dbg !5166
  store i32 %79, i32* %retval.i61, align 4, !dbg !5167
  br label %av_clip_c.exit71, !dbg !5167

if.else3.i70:                                     ; preds = %if.else.i68
  %80 = load i32, i32* %a.addr.i62, align 4, !dbg !5168
  store i32 %80, i32* %retval.i61, align 4, !dbg !5169
  br label %av_clip_c.exit71, !dbg !5169

av_clip_c.exit71:                                 ; preds = %if.then.i66, %if.then2.i69, %if.else3.i70
  %81 = load i32, i32* %retval.i61, align 4, !dbg !5170
  %82 = load i32, i32* %stride.addr, align 4, !dbg !5171
  %mul38 = mul nsw i32 %81, %82, !dbg !5172
  %idx.ext39 = sext i32 %mul38 to i64, !dbg !5173
  %add.ptr40 = getelementptr inbounds i8, i8* %72, i64 %idx.ext39, !dbg !5173
  %83 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !5174
  %b41 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %83, i32 0, i32 0, !dbg !5175
  %arrayidx42 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b41, i64 0, i64 6, !dbg !5174
  store i8* %add.ptr40, i8** %arrayidx42, align 8, !dbg !5176
  %84 = load i8*, i8** %buffer.addr, align 8, !dbg !5177
  %85 = load i32, i32* %height.addr, align 4, !dbg !5178
  %sub43 = sub nsw i32 %85, 1, !dbg !5179
  store i32 1, i32* %a.addr.i51, align 4, !dbg !5180
  store i32 1, i32* %amin.addr.i52, align 4, !dbg !5180
  store i32 %sub43, i32* %amax.addr.i53, align 4, !dbg !5180
  %86 = load i32, i32* %a.addr.i51, align 4, !dbg !5181
  %87 = load i32, i32* %amin.addr.i52, align 4, !dbg !5182
  %cmp.i54 = icmp slt i32 %86, %87, !dbg !5183
  br i1 %cmp.i54, label %if.then.i55, label %if.else.i57, !dbg !5184

if.then.i55:                                      ; preds = %av_clip_c.exit71
  %88 = load i32, i32* %amin.addr.i52, align 4, !dbg !5185
  store i32 %88, i32* %retval.i50, align 4, !dbg !5186
  br label %av_clip_c.exit60, !dbg !5186

if.else.i57:                                      ; preds = %av_clip_c.exit71
  %89 = load i32, i32* %a.addr.i51, align 4, !dbg !5187
  %90 = load i32, i32* %amax.addr.i53, align 4, !dbg !5188
  %cmp1.i56 = icmp sgt i32 %89, %90, !dbg !5189
  br i1 %cmp1.i56, label %if.then2.i58, label %if.else3.i59, !dbg !5190

if.then2.i58:                                     ; preds = %if.else.i57
  %91 = load i32, i32* %amax.addr.i53, align 4, !dbg !5191
  store i32 %91, i32* %retval.i50, align 4, !dbg !5192
  br label %av_clip_c.exit60, !dbg !5192

if.else3.i59:                                     ; preds = %if.else.i57
  %92 = load i32, i32* %a.addr.i51, align 4, !dbg !5193
  store i32 %92, i32* %retval.i50, align 4, !dbg !5194
  br label %av_clip_c.exit60, !dbg !5194

av_clip_c.exit60:                                 ; preds = %if.then.i55, %if.then2.i58, %if.else3.i59
  %93 = load i32, i32* %retval.i50, align 4, !dbg !5195
  %94 = load i32, i32* %stride.addr, align 4, !dbg !5196
  %mul45 = mul nsw i32 %93, %94, !dbg !5197
  %idx.ext46 = sext i32 %mul45 to i64, !dbg !5198
  %add.ptr47 = getelementptr inbounds i8, i8* %84, i64 %idx.ext46, !dbg !5198
  %95 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !5199
  %b48 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %95, i32 0, i32 0, !dbg !5200
  %arrayidx49 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b48, i64 0, i64 7, !dbg !5199
  store i8* %add.ptr47, i8** %arrayidx49, align 8, !dbg !5201
  %96 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !5202
  %y = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %96, i32 0, i32 1, !dbg !5203
  store i32 -5, i32* %y, align 8, !dbg !5204
  ret void, !dbg !5205
}

; Function Attrs: nounwind uwtable
define internal void @spatial_compose97i_init_10bit(%struct.DWTCompose* %cs, i8* %buffer, i32 %height, i32 %stride) #0 !dbg !5206 {
entry:
  %retval.i56 = alloca i32, align 4
  %x.addr.i57 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i57, metadata !1102, metadata !87), !dbg !5207
  %w.addr.i58 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i58, metadata !1109, metadata !87), !dbg !5209
  %retval.i39 = alloca i32, align 4
  %x.addr.i40 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i40, metadata !1102, metadata !87), !dbg !5210
  %w.addr.i41 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i41, metadata !1109, metadata !87), !dbg !5212
  %retval.i22 = alloca i32, align 4
  %x.addr.i23 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i23, metadata !1102, metadata !87), !dbg !5213
  %w.addr.i24 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i24, metadata !1109, metadata !87), !dbg !5215
  %retval.i = alloca i32, align 4
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !1102, metadata !87), !dbg !5216
  %w.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i, metadata !1109, metadata !87), !dbg !5218
  %cs.addr = alloca %struct.DWTCompose*, align 8
  %buffer.addr = alloca i8*, align 8
  %height.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  store %struct.DWTCompose* %cs, %struct.DWTCompose** %cs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTCompose** %cs.addr, metadata !5219, metadata !87), !dbg !5220
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !5221, metadata !87), !dbg !5222
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !5223, metadata !87), !dbg !5224
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !5225, metadata !87), !dbg !5226
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !5227
  %1 = load i32, i32* %height.addr, align 4, !dbg !5228
  %sub = sub nsw i32 %1, 1, !dbg !5229
  store i32 -4, i32* %x.addr.i, align 4, !dbg !5230
  store i32 %sub, i32* %w.addr.i, align 4, !dbg !5230
  %2 = load i32, i32* %w.addr.i, align 4, !dbg !5231
  %tobool.i = icmp ne i32 %2, 0, !dbg !5231
  br i1 %tobool.i, label %if.end.i, label %if.then.i, !dbg !5232

if.then.i:                                        ; preds = %entry
  store i32 0, i32* %retval.i, align 4, !dbg !5233
  br label %avpriv_mirror.exit, !dbg !5233

if.end.i:                                         ; preds = %entry
  br label %while.cond.i, !dbg !5234

while.cond.i:                                     ; preds = %if.end3.i, %if.end.i
  %3 = load i32, i32* %x.addr.i, align 4, !dbg !5235
  %4 = load i32, i32* %w.addr.i, align 4, !dbg !5236
  %cmp.i = icmp ugt i32 %3, %4, !dbg !5237
  br i1 %cmp.i, label %while.body.i, label %while.end.i, !dbg !5238

while.body.i:                                     ; preds = %while.cond.i
  %5 = load i32, i32* %x.addr.i, align 4, !dbg !5239
  %sub.i = sub nsw i32 0, %5, !dbg !5240
  store i32 %sub.i, i32* %x.addr.i, align 4, !dbg !5241
  %6 = load i32, i32* %x.addr.i, align 4, !dbg !5242
  %cmp1.i = icmp slt i32 %6, 0, !dbg !5243
  br i1 %cmp1.i, label %if.then2.i, label %if.end3.i, !dbg !5244

if.then2.i:                                       ; preds = %while.body.i
  %7 = load i32, i32* %w.addr.i, align 4, !dbg !5245
  %mul.i = mul nsw i32 2, %7, !dbg !5246
  %8 = load i32, i32* %x.addr.i, align 4, !dbg !5247
  %add.i = add nsw i32 %8, %mul.i, !dbg !5247
  store i32 %add.i, i32* %x.addr.i, align 4, !dbg !5247
  br label %if.end3.i, !dbg !5248

if.end3.i:                                        ; preds = %if.then2.i, %while.body.i
  br label %while.cond.i, !dbg !5249, !llvm.loop !1150

while.end.i:                                      ; preds = %while.cond.i
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !5250
  store i32 %9, i32* %retval.i, align 4, !dbg !5251
  br label %avpriv_mirror.exit, !dbg !5251

avpriv_mirror.exit:                               ; preds = %if.then.i, %while.end.i
  %10 = load i32, i32* %retval.i, align 4, !dbg !5252
  %11 = load i32, i32* %stride.addr, align 4, !dbg !5253
  %mul = mul nsw i32 %10, %11, !dbg !5254
  %idx.ext = sext i32 %mul to i64, !dbg !5255
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %idx.ext, !dbg !5255
  %12 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !5256
  %b = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %12, i32 0, i32 0, !dbg !5257
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 0, !dbg !5256
  store i8* %add.ptr, i8** %arrayidx, align 8, !dbg !5258
  %13 = load i8*, i8** %buffer.addr, align 8, !dbg !5259
  %14 = load i32, i32* %height.addr, align 4, !dbg !5260
  %sub1 = sub nsw i32 %14, 1, !dbg !5261
  store i32 -3, i32* %x.addr.i57, align 4, !dbg !5262
  store i32 %sub1, i32* %w.addr.i58, align 4, !dbg !5262
  %15 = load i32, i32* %w.addr.i58, align 4, !dbg !5263
  %tobool.i59 = icmp ne i32 %15, 0, !dbg !5263
  br i1 %tobool.i59, label %if.end.i61, label %if.then.i60, !dbg !5264

if.then.i60:                                      ; preds = %avpriv_mirror.exit
  store i32 0, i32* %retval.i56, align 4, !dbg !5265
  br label %avpriv_mirror.exit72, !dbg !5265

if.end.i61:                                       ; preds = %avpriv_mirror.exit
  br label %while.cond.i63, !dbg !5266

while.cond.i63:                                   ; preds = %if.end3.i70, %if.end.i61
  %16 = load i32, i32* %x.addr.i57, align 4, !dbg !5267
  %17 = load i32, i32* %w.addr.i58, align 4, !dbg !5268
  %cmp.i62 = icmp ugt i32 %16, %17, !dbg !5269
  br i1 %cmp.i62, label %while.body.i66, label %while.end.i71, !dbg !5270

while.body.i66:                                   ; preds = %while.cond.i63
  %18 = load i32, i32* %x.addr.i57, align 4, !dbg !5271
  %sub.i64 = sub nsw i32 0, %18, !dbg !5272
  store i32 %sub.i64, i32* %x.addr.i57, align 4, !dbg !5273
  %19 = load i32, i32* %x.addr.i57, align 4, !dbg !5274
  %cmp1.i65 = icmp slt i32 %19, 0, !dbg !5275
  br i1 %cmp1.i65, label %if.then2.i69, label %if.end3.i70, !dbg !5276

if.then2.i69:                                     ; preds = %while.body.i66
  %20 = load i32, i32* %w.addr.i58, align 4, !dbg !5277
  %mul.i67 = mul nsw i32 2, %20, !dbg !5278
  %21 = load i32, i32* %x.addr.i57, align 4, !dbg !5279
  %add.i68 = add nsw i32 %21, %mul.i67, !dbg !5279
  store i32 %add.i68, i32* %x.addr.i57, align 4, !dbg !5279
  br label %if.end3.i70, !dbg !5280

if.end3.i70:                                      ; preds = %if.then2.i69, %while.body.i66
  br label %while.cond.i63, !dbg !5281, !llvm.loop !1150

while.end.i71:                                    ; preds = %while.cond.i63
  %22 = load i32, i32* %x.addr.i57, align 4, !dbg !5282
  store i32 %22, i32* %retval.i56, align 4, !dbg !5283
  br label %avpriv_mirror.exit72, !dbg !5283

avpriv_mirror.exit72:                             ; preds = %if.then.i60, %while.end.i71
  %23 = load i32, i32* %retval.i56, align 4, !dbg !5284
  %24 = load i32, i32* %stride.addr, align 4, !dbg !5285
  %mul3 = mul nsw i32 %23, %24, !dbg !5286
  %idx.ext4 = sext i32 %mul3 to i64, !dbg !5287
  %add.ptr5 = getelementptr inbounds i8, i8* %13, i64 %idx.ext4, !dbg !5287
  %25 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !5288
  %b6 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %25, i32 0, i32 0, !dbg !5289
  %arrayidx7 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b6, i64 0, i64 1, !dbg !5288
  store i8* %add.ptr5, i8** %arrayidx7, align 8, !dbg !5290
  %26 = load i8*, i8** %buffer.addr, align 8, !dbg !5291
  %27 = load i32, i32* %height.addr, align 4, !dbg !5292
  %sub8 = sub nsw i32 %27, 1, !dbg !5293
  store i32 -2, i32* %x.addr.i40, align 4, !dbg !5294
  store i32 %sub8, i32* %w.addr.i41, align 4, !dbg !5294
  %28 = load i32, i32* %w.addr.i41, align 4, !dbg !5295
  %tobool.i42 = icmp ne i32 %28, 0, !dbg !5295
  br i1 %tobool.i42, label %if.end.i44, label %if.then.i43, !dbg !5296

if.then.i43:                                      ; preds = %avpriv_mirror.exit72
  store i32 0, i32* %retval.i39, align 4, !dbg !5297
  br label %avpriv_mirror.exit55, !dbg !5297

if.end.i44:                                       ; preds = %avpriv_mirror.exit72
  br label %while.cond.i46, !dbg !5298

while.cond.i46:                                   ; preds = %if.end3.i53, %if.end.i44
  %29 = load i32, i32* %x.addr.i40, align 4, !dbg !5299
  %30 = load i32, i32* %w.addr.i41, align 4, !dbg !5300
  %cmp.i45 = icmp ugt i32 %29, %30, !dbg !5301
  br i1 %cmp.i45, label %while.body.i49, label %while.end.i54, !dbg !5302

while.body.i49:                                   ; preds = %while.cond.i46
  %31 = load i32, i32* %x.addr.i40, align 4, !dbg !5303
  %sub.i47 = sub nsw i32 0, %31, !dbg !5304
  store i32 %sub.i47, i32* %x.addr.i40, align 4, !dbg !5305
  %32 = load i32, i32* %x.addr.i40, align 4, !dbg !5306
  %cmp1.i48 = icmp slt i32 %32, 0, !dbg !5307
  br i1 %cmp1.i48, label %if.then2.i52, label %if.end3.i53, !dbg !5308

if.then2.i52:                                     ; preds = %while.body.i49
  %33 = load i32, i32* %w.addr.i41, align 4, !dbg !5309
  %mul.i50 = mul nsw i32 2, %33, !dbg !5310
  %34 = load i32, i32* %x.addr.i40, align 4, !dbg !5311
  %add.i51 = add nsw i32 %34, %mul.i50, !dbg !5311
  store i32 %add.i51, i32* %x.addr.i40, align 4, !dbg !5311
  br label %if.end3.i53, !dbg !5312

if.end3.i53:                                      ; preds = %if.then2.i52, %while.body.i49
  br label %while.cond.i46, !dbg !5313, !llvm.loop !1150

while.end.i54:                                    ; preds = %while.cond.i46
  %35 = load i32, i32* %x.addr.i40, align 4, !dbg !5314
  store i32 %35, i32* %retval.i39, align 4, !dbg !5315
  br label %avpriv_mirror.exit55, !dbg !5315

avpriv_mirror.exit55:                             ; preds = %if.then.i43, %while.end.i54
  %36 = load i32, i32* %retval.i39, align 4, !dbg !5316
  %37 = load i32, i32* %stride.addr, align 4, !dbg !5317
  %mul10 = mul nsw i32 %36, %37, !dbg !5318
  %idx.ext11 = sext i32 %mul10 to i64, !dbg !5319
  %add.ptr12 = getelementptr inbounds i8, i8* %26, i64 %idx.ext11, !dbg !5319
  %38 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !5320
  %b13 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %38, i32 0, i32 0, !dbg !5321
  %arrayidx14 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b13, i64 0, i64 2, !dbg !5320
  store i8* %add.ptr12, i8** %arrayidx14, align 8, !dbg !5322
  %39 = load i8*, i8** %buffer.addr, align 8, !dbg !5323
  %40 = load i32, i32* %height.addr, align 4, !dbg !5324
  %sub15 = sub nsw i32 %40, 1, !dbg !5325
  store i32 -1, i32* %x.addr.i23, align 4, !dbg !5326
  store i32 %sub15, i32* %w.addr.i24, align 4, !dbg !5326
  %41 = load i32, i32* %w.addr.i24, align 4, !dbg !5327
  %tobool.i25 = icmp ne i32 %41, 0, !dbg !5327
  br i1 %tobool.i25, label %if.end.i27, label %if.then.i26, !dbg !5328

if.then.i26:                                      ; preds = %avpriv_mirror.exit55
  store i32 0, i32* %retval.i22, align 4, !dbg !5329
  br label %avpriv_mirror.exit38, !dbg !5329

if.end.i27:                                       ; preds = %avpriv_mirror.exit55
  br label %while.cond.i29, !dbg !5330

while.cond.i29:                                   ; preds = %if.end3.i36, %if.end.i27
  %42 = load i32, i32* %x.addr.i23, align 4, !dbg !5331
  %43 = load i32, i32* %w.addr.i24, align 4, !dbg !5332
  %cmp.i28 = icmp ugt i32 %42, %43, !dbg !5333
  br i1 %cmp.i28, label %while.body.i32, label %while.end.i37, !dbg !5334

while.body.i32:                                   ; preds = %while.cond.i29
  %44 = load i32, i32* %x.addr.i23, align 4, !dbg !5335
  %sub.i30 = sub nsw i32 0, %44, !dbg !5336
  store i32 %sub.i30, i32* %x.addr.i23, align 4, !dbg !5337
  %45 = load i32, i32* %x.addr.i23, align 4, !dbg !5338
  %cmp1.i31 = icmp slt i32 %45, 0, !dbg !5339
  br i1 %cmp1.i31, label %if.then2.i35, label %if.end3.i36, !dbg !5340

if.then2.i35:                                     ; preds = %while.body.i32
  %46 = load i32, i32* %w.addr.i24, align 4, !dbg !5341
  %mul.i33 = mul nsw i32 2, %46, !dbg !5342
  %47 = load i32, i32* %x.addr.i23, align 4, !dbg !5343
  %add.i34 = add nsw i32 %47, %mul.i33, !dbg !5343
  store i32 %add.i34, i32* %x.addr.i23, align 4, !dbg !5343
  br label %if.end3.i36, !dbg !5344

if.end3.i36:                                      ; preds = %if.then2.i35, %while.body.i32
  br label %while.cond.i29, !dbg !5345, !llvm.loop !1150

while.end.i37:                                    ; preds = %while.cond.i29
  %48 = load i32, i32* %x.addr.i23, align 4, !dbg !5346
  store i32 %48, i32* %retval.i22, align 4, !dbg !5347
  br label %avpriv_mirror.exit38, !dbg !5347

avpriv_mirror.exit38:                             ; preds = %if.then.i26, %while.end.i37
  %49 = load i32, i32* %retval.i22, align 4, !dbg !5348
  %50 = load i32, i32* %stride.addr, align 4, !dbg !5349
  %mul17 = mul nsw i32 %49, %50, !dbg !5350
  %idx.ext18 = sext i32 %mul17 to i64, !dbg !5351
  %add.ptr19 = getelementptr inbounds i8, i8* %39, i64 %idx.ext18, !dbg !5351
  %51 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !5352
  %b20 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %51, i32 0, i32 0, !dbg !5353
  %arrayidx21 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b20, i64 0, i64 3, !dbg !5352
  store i8* %add.ptr19, i8** %arrayidx21, align 8, !dbg !5354
  %52 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !5355
  %y = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %52, i32 0, i32 1, !dbg !5356
  store i32 -3, i32* %y, align 8, !dbg !5357
  ret void, !dbg !5358
}

; Function Attrs: nounwind uwtable
define internal void @spatial_compose_dd97i_dy_10bit(%struct.DWTContext* %d, i32 %level, i32 %width, i32 %height, i32 %stride) #0 !dbg !5359 {
entry:
  %retval.i59 = alloca i32, align 4
  %a.addr.i60 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i60, metadata !904, metadata !87), !dbg !5360
  %amin.addr.i61 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i61, metadata !911, metadata !87), !dbg !5362
  %amax.addr.i62 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i62, metadata !913, metadata !87), !dbg !5363
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !904, metadata !87), !dbg !5364
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !911, metadata !87), !dbg !5366
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !913, metadata !87), !dbg !5367
  %d.addr = alloca %struct.DWTContext*, align 8
  %level.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  %vertical_compose_l0 = alloca void (i8*, i8*, i8*, i32)*, align 8
  %vertical_compose_h0 = alloca void (i8*, i8*, i8*, i8*, i8*, i32)*, align 8
  %cs = alloca %struct.DWTCompose*, align 8
  %i = alloca i32, align 4
  %y = alloca i32, align 4
  %b = alloca [8 x i8*], align 16
  store %struct.DWTContext* %d, %struct.DWTContext** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTContext** %d.addr, metadata !5368, metadata !87), !dbg !5369
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !5370, metadata !87), !dbg !5371
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !5372, metadata !87), !dbg !5373
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !5374, metadata !87), !dbg !5375
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !5376, metadata !87), !dbg !5377
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i32)** %vertical_compose_l0, metadata !5378, metadata !87), !dbg !5379
  %0 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !5380
  %vertical_compose_l01 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %0, i32 0, i32 8, !dbg !5381
  %1 = load void ()*, void ()** %vertical_compose_l01, align 8, !dbg !5381
  %2 = bitcast void ()* %1 to i8*, !dbg !5382
  %3 = bitcast i8* %2 to void (i8*, i8*, i8*, i32)*, !dbg !5382
  store void (i8*, i8*, i8*, i32)* %3, void (i8*, i8*, i8*, i32)** %vertical_compose_l0, align 8, !dbg !5379
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i8*, i8*, i32)** %vertical_compose_h0, metadata !5383, metadata !87), !dbg !5384
  %4 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !5385
  %vertical_compose_h02 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %4, i32 0, i32 9, !dbg !5386
  %5 = load void ()*, void ()** %vertical_compose_h02, align 8, !dbg !5386
  %6 = bitcast void ()* %5 to i8*, !dbg !5387
  %7 = bitcast i8* %6 to void (i8*, i8*, i8*, i8*, i8*, i32)*, !dbg !5387
  store void (i8*, i8*, i8*, i8*, i8*, i32)* %7, void (i8*, i8*, i8*, i8*, i8*, i32)** %vertical_compose_h0, align 8, !dbg !5384
  call void @llvm.dbg.declare(metadata %struct.DWTCompose** %cs, metadata !5388, metadata !87), !dbg !5389
  %8 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !5390
  %cs3 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %8, i32 0, i32 14, !dbg !5391
  %arraydecay = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs3, i32 0, i32 0, !dbg !5390
  %9 = load i32, i32* %level.addr, align 4, !dbg !5392
  %idx.ext = sext i32 %9 to i64, !dbg !5393
  %add.ptr = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arraydecay, i64 %idx.ext, !dbg !5393
  store %struct.DWTCompose* %add.ptr, %struct.DWTCompose** %cs, align 8, !dbg !5389
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5394, metadata !87), !dbg !5395
  call void @llvm.dbg.declare(metadata i32* %y, metadata !5396, metadata !87), !dbg !5397
  %10 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !5398
  %y4 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %10, i32 0, i32 1, !dbg !5399
  %11 = load i32, i32* %y4, align 8, !dbg !5399
  store i32 %11, i32* %y, align 4, !dbg !5397
  call void @llvm.dbg.declare(metadata [8 x i8*]* %b, metadata !5400, metadata !87), !dbg !5401
  store i32 0, i32* %i, align 4, !dbg !5402
  br label %for.cond, !dbg !5404

for.cond:                                         ; preds = %for.inc, %entry
  %12 = load i32, i32* %i, align 4, !dbg !5405
  %cmp = icmp slt i32 %12, 6, !dbg !5408
  br i1 %cmp, label %for.body, label %for.end, !dbg !5409

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %i, align 4, !dbg !5410
  %idxprom = sext i32 %13 to i64, !dbg !5411
  %14 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !5411
  %b5 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %14, i32 0, i32 0, !dbg !5412
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %b5, i64 0, i64 %idxprom, !dbg !5411
  %15 = load i8*, i8** %arrayidx, align 8, !dbg !5411
  %16 = load i32, i32* %i, align 4, !dbg !5413
  %idxprom6 = sext i32 %16 to i64, !dbg !5414
  %arrayidx7 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 %idxprom6, !dbg !5414
  store i8* %15, i8** %arrayidx7, align 8, !dbg !5415
  br label %for.inc, !dbg !5414

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !5416
  %inc = add nsw i32 %17, 1, !dbg !5416
  store i32 %inc, i32* %i, align 4, !dbg !5416
  br label %for.cond, !dbg !5418, !llvm.loop !5419

for.end:                                          ; preds = %for.cond
  %18 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !5421
  %buffer = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %18, i32 0, i32 0, !dbg !5422
  %19 = load i8*, i8** %buffer, align 8, !dbg !5422
  %20 = load i32, i32* %y, align 4, !dbg !5423
  %add = add nsw i32 %20, 5, !dbg !5424
  %21 = load i32, i32* %height.addr, align 4, !dbg !5425
  %sub = sub nsw i32 %21, 2, !dbg !5426
  store i32 %add, i32* %a.addr.i, align 4, !dbg !5427
  store i32 0, i32* %amin.addr.i, align 4, !dbg !5427
  store i32 %sub, i32* %amax.addr.i, align 4, !dbg !5427
  %22 = load i32, i32* %a.addr.i, align 4, !dbg !5428
  %23 = load i32, i32* %amin.addr.i, align 4, !dbg !5429
  %cmp.i = icmp slt i32 %22, %23, !dbg !5430
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !5431

if.then.i:                                        ; preds = %for.end
  %24 = load i32, i32* %amin.addr.i, align 4, !dbg !5432
  store i32 %24, i32* %retval.i, align 4, !dbg !5433
  br label %av_clip_c.exit, !dbg !5433

if.else.i:                                        ; preds = %for.end
  %25 = load i32, i32* %a.addr.i, align 4, !dbg !5434
  %26 = load i32, i32* %amax.addr.i, align 4, !dbg !5435
  %cmp1.i = icmp sgt i32 %25, %26, !dbg !5436
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !5437

if.then2.i:                                       ; preds = %if.else.i
  %27 = load i32, i32* %amax.addr.i, align 4, !dbg !5438
  store i32 %27, i32* %retval.i, align 4, !dbg !5439
  br label %av_clip_c.exit, !dbg !5439

if.else3.i:                                       ; preds = %if.else.i
  %28 = load i32, i32* %a.addr.i, align 4, !dbg !5440
  store i32 %28, i32* %retval.i, align 4, !dbg !5441
  br label %av_clip_c.exit, !dbg !5441

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %29 = load i32, i32* %retval.i, align 4, !dbg !5442
  %30 = load i32, i32* %stride.addr, align 4, !dbg !5443
  %mul = mul nsw i32 %29, %30, !dbg !5444
  %idx.ext8 = sext i32 %mul to i64, !dbg !5445
  %add.ptr9 = getelementptr inbounds i8, i8* %19, i64 %idx.ext8, !dbg !5445
  %arrayidx10 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 6, !dbg !5446
  store i8* %add.ptr9, i8** %arrayidx10, align 16, !dbg !5447
  %31 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !5448
  %buffer11 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %31, i32 0, i32 0, !dbg !5449
  %32 = load i8*, i8** %buffer11, align 8, !dbg !5449
  %33 = load i32, i32* %y, align 4, !dbg !5450
  %add12 = add nsw i32 %33, 6, !dbg !5451
  %34 = load i32, i32* %height.addr, align 4, !dbg !5452
  %sub13 = sub nsw i32 %34, 1, !dbg !5453
  store i32 %add12, i32* %a.addr.i60, align 4, !dbg !5454
  store i32 1, i32* %amin.addr.i61, align 4, !dbg !5454
  store i32 %sub13, i32* %amax.addr.i62, align 4, !dbg !5454
  %35 = load i32, i32* %a.addr.i60, align 4, !dbg !5455
  %36 = load i32, i32* %amin.addr.i61, align 4, !dbg !5456
  %cmp.i63 = icmp slt i32 %35, %36, !dbg !5457
  br i1 %cmp.i63, label %if.then.i64, label %if.else.i66, !dbg !5458

if.then.i64:                                      ; preds = %av_clip_c.exit
  %37 = load i32, i32* %amin.addr.i61, align 4, !dbg !5459
  store i32 %37, i32* %retval.i59, align 4, !dbg !5460
  br label %av_clip_c.exit69, !dbg !5460

if.else.i66:                                      ; preds = %av_clip_c.exit
  %38 = load i32, i32* %a.addr.i60, align 4, !dbg !5461
  %39 = load i32, i32* %amax.addr.i62, align 4, !dbg !5462
  %cmp1.i65 = icmp sgt i32 %38, %39, !dbg !5463
  br i1 %cmp1.i65, label %if.then2.i67, label %if.else3.i68, !dbg !5464

if.then2.i67:                                     ; preds = %if.else.i66
  %40 = load i32, i32* %amax.addr.i62, align 4, !dbg !5465
  store i32 %40, i32* %retval.i59, align 4, !dbg !5466
  br label %av_clip_c.exit69, !dbg !5466

if.else3.i68:                                     ; preds = %if.else.i66
  %41 = load i32, i32* %a.addr.i60, align 4, !dbg !5467
  store i32 %41, i32* %retval.i59, align 4, !dbg !5468
  br label %av_clip_c.exit69, !dbg !5468

av_clip_c.exit69:                                 ; preds = %if.then.i64, %if.then2.i67, %if.else3.i68
  %42 = load i32, i32* %retval.i59, align 4, !dbg !5469
  %43 = load i32, i32* %stride.addr, align 4, !dbg !5470
  %mul15 = mul nsw i32 %42, %43, !dbg !5471
  %idx.ext16 = sext i32 %mul15 to i64, !dbg !5472
  %add.ptr17 = getelementptr inbounds i8, i8* %32, i64 %idx.ext16, !dbg !5472
  %arrayidx18 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 7, !dbg !5473
  store i8* %add.ptr17, i8** %arrayidx18, align 8, !dbg !5474
  %44 = load i32, i32* %y, align 4, !dbg !5475
  %add19 = add nsw i32 %44, 5, !dbg !5477
  %45 = load i32, i32* %height.addr, align 4, !dbg !5478
  %cmp20 = icmp ult i32 %add19, %45, !dbg !5479
  br i1 %cmp20, label %if.then, label %if.end, !dbg !5480

if.then:                                          ; preds = %av_clip_c.exit69
  %46 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %vertical_compose_l0, align 8, !dbg !5481
  %arrayidx21 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 5, !dbg !5483
  %47 = load i8*, i8** %arrayidx21, align 8, !dbg !5483
  %arrayidx22 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 6, !dbg !5484
  %48 = load i8*, i8** %arrayidx22, align 16, !dbg !5484
  %arrayidx23 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 7, !dbg !5485
  %49 = load i8*, i8** %arrayidx23, align 8, !dbg !5485
  %50 = load i32, i32* %width.addr, align 4, !dbg !5486
  call void %46(i8* %47, i8* %48, i8* %49, i32 %50), !dbg !5481
  br label %if.end, !dbg !5481

if.end:                                           ; preds = %if.then, %av_clip_c.exit69
  %51 = load i32, i32* %y, align 4, !dbg !5487
  %add24 = add nsw i32 %51, 1, !dbg !5489
  %52 = load i32, i32* %height.addr, align 4, !dbg !5490
  %cmp25 = icmp ult i32 %add24, %52, !dbg !5491
  br i1 %cmp25, label %if.then26, label %if.end32, !dbg !5492

if.then26:                                        ; preds = %if.end
  %53 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %vertical_compose_h0, align 8, !dbg !5493
  %arrayidx27 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 0, !dbg !5495
  %54 = load i8*, i8** %arrayidx27, align 16, !dbg !5495
  %arrayidx28 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 2, !dbg !5496
  %55 = load i8*, i8** %arrayidx28, align 16, !dbg !5496
  %arrayidx29 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 3, !dbg !5497
  %56 = load i8*, i8** %arrayidx29, align 8, !dbg !5497
  %arrayidx30 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 4, !dbg !5498
  %57 = load i8*, i8** %arrayidx30, align 16, !dbg !5498
  %arrayidx31 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 6, !dbg !5499
  %58 = load i8*, i8** %arrayidx31, align 16, !dbg !5499
  %59 = load i32, i32* %width.addr, align 4, !dbg !5500
  call void %53(i8* %54, i8* %55, i8* %56, i8* %57, i8* %58, i32 %59), !dbg !5493
  br label %if.end32, !dbg !5493

if.end32:                                         ; preds = %if.then26, %if.end
  %60 = load i32, i32* %y, align 4, !dbg !5501
  %sub33 = sub nsw i32 %60, 1, !dbg !5503
  %61 = load i32, i32* %height.addr, align 4, !dbg !5504
  %cmp34 = icmp ult i32 %sub33, %61, !dbg !5505
  br i1 %cmp34, label %if.then35, label %if.end37, !dbg !5506

if.then35:                                        ; preds = %if.end32
  %62 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !5507
  %horizontal_compose = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %62, i32 0, i32 13, !dbg !5509
  %63 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %horizontal_compose, align 8, !dbg !5509
  %arrayidx36 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 0, !dbg !5510
  %64 = load i8*, i8** %arrayidx36, align 16, !dbg !5510
  %65 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !5511
  %temp = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %65, i32 0, i32 1, !dbg !5512
  %66 = load i8*, i8** %temp, align 8, !dbg !5512
  %67 = load i32, i32* %width.addr, align 4, !dbg !5513
  call void %63(i8* %64, i8* %66, i32 %67), !dbg !5507
  br label %if.end37, !dbg !5507

if.end37:                                         ; preds = %if.then35, %if.end32
  %68 = load i32, i32* %y, align 4, !dbg !5514
  %add38 = add nsw i32 %68, 0, !dbg !5516
  %69 = load i32, i32* %height.addr, align 4, !dbg !5517
  %cmp39 = icmp ult i32 %add38, %69, !dbg !5518
  br i1 %cmp39, label %if.then40, label %if.end44, !dbg !5519

if.then40:                                        ; preds = %if.end37
  %70 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !5520
  %horizontal_compose41 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %70, i32 0, i32 13, !dbg !5522
  %71 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %horizontal_compose41, align 8, !dbg !5522
  %arrayidx42 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 1, !dbg !5523
  %72 = load i8*, i8** %arrayidx42, align 8, !dbg !5523
  %73 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !5524
  %temp43 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %73, i32 0, i32 1, !dbg !5525
  %74 = load i8*, i8** %temp43, align 8, !dbg !5525
  %75 = load i32, i32* %width.addr, align 4, !dbg !5526
  call void %71(i8* %72, i8* %74, i32 %75), !dbg !5520
  br label %if.end44, !dbg !5520

if.end44:                                         ; preds = %if.then40, %if.end37
  store i32 0, i32* %i, align 4, !dbg !5527
  br label %for.cond45, !dbg !5529

for.cond45:                                       ; preds = %for.inc54, %if.end44
  %76 = load i32, i32* %i, align 4, !dbg !5530
  %cmp46 = icmp slt i32 %76, 6, !dbg !5533
  br i1 %cmp46, label %for.body47, label %for.end56, !dbg !5534

for.body47:                                       ; preds = %for.cond45
  %77 = load i32, i32* %i, align 4, !dbg !5535
  %add48 = add nsw i32 %77, 2, !dbg !5536
  %idxprom49 = sext i32 %add48 to i64, !dbg !5537
  %arrayidx50 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 %idxprom49, !dbg !5537
  %78 = load i8*, i8** %arrayidx50, align 8, !dbg !5537
  %79 = load i32, i32* %i, align 4, !dbg !5538
  %idxprom51 = sext i32 %79 to i64, !dbg !5539
  %80 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !5539
  %b52 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %80, i32 0, i32 0, !dbg !5540
  %arrayidx53 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b52, i64 0, i64 %idxprom51, !dbg !5539
  store i8* %78, i8** %arrayidx53, align 8, !dbg !5541
  br label %for.inc54, !dbg !5539

for.inc54:                                        ; preds = %for.body47
  %81 = load i32, i32* %i, align 4, !dbg !5542
  %inc55 = add nsw i32 %81, 1, !dbg !5542
  store i32 %inc55, i32* %i, align 4, !dbg !5542
  br label %for.cond45, !dbg !5544, !llvm.loop !5545

for.end56:                                        ; preds = %for.cond45
  %82 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !5547
  %y57 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %82, i32 0, i32 1, !dbg !5548
  %83 = load i32, i32* %y57, align 8, !dbg !5549
  %add58 = add nsw i32 %83, 2, !dbg !5549
  store i32 %add58, i32* %y57, align 8, !dbg !5549
  ret void, !dbg !5550
}

; Function Attrs: nounwind uwtable
define internal void @vertical_compose53iL0_10bit(i8* %_b0, i8* %_b1, i8* %_b2, i32 %width) #0 !dbg !5551 {
entry:
  %_b0.addr = alloca i8*, align 8
  %_b1.addr = alloca i8*, align 8
  %_b2.addr = alloca i8*, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %b0 = alloca i32*, align 8
  %b1 = alloca i32*, align 8
  %b2 = alloca i32*, align 8
  store i8* %_b0, i8** %_b0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b0.addr, metadata !5552, metadata !87), !dbg !5553
  store i8* %_b1, i8** %_b1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b1.addr, metadata !5554, metadata !87), !dbg !5555
  store i8* %_b2, i8** %_b2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b2.addr, metadata !5556, metadata !87), !dbg !5557
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !5558, metadata !87), !dbg !5559
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5560, metadata !87), !dbg !5561
  call void @llvm.dbg.declare(metadata i32** %b0, metadata !5562, metadata !87), !dbg !5563
  %0 = load i8*, i8** %_b0.addr, align 8, !dbg !5564
  %1 = bitcast i8* %0 to i32*, !dbg !5565
  store i32* %1, i32** %b0, align 8, !dbg !5563
  call void @llvm.dbg.declare(metadata i32** %b1, metadata !5566, metadata !87), !dbg !5567
  %2 = load i8*, i8** %_b1.addr, align 8, !dbg !5568
  %3 = bitcast i8* %2 to i32*, !dbg !5569
  store i32* %3, i32** %b1, align 8, !dbg !5567
  call void @llvm.dbg.declare(metadata i32** %b2, metadata !5570, metadata !87), !dbg !5571
  %4 = load i8*, i8** %_b2.addr, align 8, !dbg !5572
  %5 = bitcast i8* %4 to i32*, !dbg !5573
  store i32* %5, i32** %b2, align 8, !dbg !5571
  store i32 0, i32* %i, align 4, !dbg !5574
  br label %for.cond, !dbg !5576

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !dbg !5577
  %7 = load i32, i32* %width.addr, align 4, !dbg !5580
  %cmp = icmp slt i32 %6, %7, !dbg !5581
  br i1 %cmp, label %for.body, label %for.end, !dbg !5582

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %i, align 4, !dbg !5583
  %idxprom = sext i32 %8 to i64, !dbg !5584
  %9 = load i32*, i32** %b0, align 8, !dbg !5584
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom, !dbg !5584
  %10 = load i32, i32* %arrayidx, align 4, !dbg !5584
  %11 = load i32, i32* %i, align 4, !dbg !5585
  %idxprom1 = sext i32 %11 to i64, !dbg !5586
  %12 = load i32*, i32** %b2, align 8, !dbg !5586
  %arrayidx2 = getelementptr inbounds i32, i32* %12, i64 %idxprom1, !dbg !5586
  %13 = load i32, i32* %arrayidx2, align 4, !dbg !5586
  %add = add i32 %10, %13, !dbg !5587
  %add3 = add i32 %add, 2, !dbg !5588
  %shr = ashr i32 %add3, 2, !dbg !5589
  %14 = load i32, i32* %i, align 4, !dbg !5590
  %idxprom4 = sext i32 %14 to i64, !dbg !5591
  %15 = load i32*, i32** %b1, align 8, !dbg !5591
  %arrayidx5 = getelementptr inbounds i32, i32* %15, i64 %idxprom4, !dbg !5591
  %16 = load i32, i32* %arrayidx5, align 4, !dbg !5592
  %sub = sub i32 %16, %shr, !dbg !5592
  store i32 %sub, i32* %arrayidx5, align 4, !dbg !5592
  br label %for.inc, !dbg !5591

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !5593
  %inc = add nsw i32 %17, 1, !dbg !5593
  store i32 %inc, i32* %i, align 4, !dbg !5593
  br label %for.cond, !dbg !5595, !llvm.loop !5596

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5598
}

; Function Attrs: nounwind uwtable
define internal void @vertical_compose_dd97iH0_10bit(i8* %_b0, i8* %_b1, i8* %_b2, i8* %_b3, i8* %_b4, i32 %width) #0 !dbg !5599 {
entry:
  %_b0.addr = alloca i8*, align 8
  %_b1.addr = alloca i8*, align 8
  %_b2.addr = alloca i8*, align 8
  %_b3.addr = alloca i8*, align 8
  %_b4.addr = alloca i8*, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %b0 = alloca i32*, align 8
  %b1 = alloca i32*, align 8
  %b2 = alloca i32*, align 8
  %b3 = alloca i32*, align 8
  %b4 = alloca i32*, align 8
  store i8* %_b0, i8** %_b0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b0.addr, metadata !5600, metadata !87), !dbg !5601
  store i8* %_b1, i8** %_b1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b1.addr, metadata !5602, metadata !87), !dbg !5603
  store i8* %_b2, i8** %_b2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b2.addr, metadata !5604, metadata !87), !dbg !5605
  store i8* %_b3, i8** %_b3.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b3.addr, metadata !5606, metadata !87), !dbg !5607
  store i8* %_b4, i8** %_b4.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b4.addr, metadata !5608, metadata !87), !dbg !5609
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !5610, metadata !87), !dbg !5611
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5612, metadata !87), !dbg !5613
  call void @llvm.dbg.declare(metadata i32** %b0, metadata !5614, metadata !87), !dbg !5615
  %0 = load i8*, i8** %_b0.addr, align 8, !dbg !5616
  %1 = bitcast i8* %0 to i32*, !dbg !5617
  store i32* %1, i32** %b0, align 8, !dbg !5615
  call void @llvm.dbg.declare(metadata i32** %b1, metadata !5618, metadata !87), !dbg !5619
  %2 = load i8*, i8** %_b1.addr, align 8, !dbg !5620
  %3 = bitcast i8* %2 to i32*, !dbg !5621
  store i32* %3, i32** %b1, align 8, !dbg !5619
  call void @llvm.dbg.declare(metadata i32** %b2, metadata !5622, metadata !87), !dbg !5623
  %4 = load i8*, i8** %_b2.addr, align 8, !dbg !5624
  %5 = bitcast i8* %4 to i32*, !dbg !5625
  store i32* %5, i32** %b2, align 8, !dbg !5623
  call void @llvm.dbg.declare(metadata i32** %b3, metadata !5626, metadata !87), !dbg !5627
  %6 = load i8*, i8** %_b3.addr, align 8, !dbg !5628
  %7 = bitcast i8* %6 to i32*, !dbg !5629
  store i32* %7, i32** %b3, align 8, !dbg !5627
  call void @llvm.dbg.declare(metadata i32** %b4, metadata !5630, metadata !87), !dbg !5631
  %8 = load i8*, i8** %_b4.addr, align 8, !dbg !5632
  %9 = bitcast i8* %8 to i32*, !dbg !5633
  store i32* %9, i32** %b4, align 8, !dbg !5631
  store i32 0, i32* %i, align 4, !dbg !5634
  br label %for.cond, !dbg !5636

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load i32, i32* %i, align 4, !dbg !5637
  %11 = load i32, i32* %width.addr, align 4, !dbg !5640
  %cmp = icmp slt i32 %10, %11, !dbg !5641
  br i1 %cmp, label %for.body, label %for.end, !dbg !5642

for.body:                                         ; preds = %for.cond
  %12 = load i32, i32* %i, align 4, !dbg !5643
  %idxprom = sext i32 %12 to i64, !dbg !5645
  %13 = load i32*, i32** %b2, align 8, !dbg !5645
  %arrayidx = getelementptr inbounds i32, i32* %13, i64 %idxprom, !dbg !5645
  %14 = load i32, i32* %arrayidx, align 4, !dbg !5645
  %15 = load i32, i32* %i, align 4, !dbg !5646
  %idxprom1 = sext i32 %15 to i64, !dbg !5647
  %16 = load i32*, i32** %b1, align 8, !dbg !5647
  %arrayidx2 = getelementptr inbounds i32, i32* %16, i64 %idxprom1, !dbg !5647
  %17 = load i32, i32* %arrayidx2, align 4, !dbg !5647
  %mul = mul i32 9, %17, !dbg !5648
  %18 = load i32, i32* %i, align 4, !dbg !5649
  %idxprom3 = sext i32 %18 to i64, !dbg !5650
  %19 = load i32*, i32** %b3, align 8, !dbg !5650
  %arrayidx4 = getelementptr inbounds i32, i32* %19, i64 %idxprom3, !dbg !5650
  %20 = load i32, i32* %arrayidx4, align 4, !dbg !5650
  %mul5 = mul i32 9, %20, !dbg !5651
  %add = add i32 %mul, %mul5, !dbg !5652
  %21 = load i32, i32* %i, align 4, !dbg !5653
  %idxprom6 = sext i32 %21 to i64, !dbg !5654
  %22 = load i32*, i32** %b4, align 8, !dbg !5654
  %arrayidx7 = getelementptr inbounds i32, i32* %22, i64 %idxprom6, !dbg !5654
  %23 = load i32, i32* %arrayidx7, align 4, !dbg !5654
  %sub = sub i32 %add, %23, !dbg !5655
  %24 = load i32, i32* %i, align 4, !dbg !5656
  %idxprom8 = sext i32 %24 to i64, !dbg !5657
  %25 = load i32*, i32** %b0, align 8, !dbg !5657
  %arrayidx9 = getelementptr inbounds i32, i32* %25, i64 %idxprom8, !dbg !5657
  %26 = load i32, i32* %arrayidx9, align 4, !dbg !5657
  %sub10 = sub i32 %sub, %26, !dbg !5658
  %add11 = add i32 %sub10, 8, !dbg !5659
  %shr = ashr i32 %add11, 4, !dbg !5660
  %add12 = add i32 %14, %shr, !dbg !5661
  %27 = load i32, i32* %i, align 4, !dbg !5662
  %idxprom13 = sext i32 %27 to i64, !dbg !5663
  %28 = load i32*, i32** %b2, align 8, !dbg !5663
  %arrayidx14 = getelementptr inbounds i32, i32* %28, i64 %idxprom13, !dbg !5663
  store i32 %add12, i32* %arrayidx14, align 4, !dbg !5664
  br label %for.inc, !dbg !5665

for.inc:                                          ; preds = %for.body
  %29 = load i32, i32* %i, align 4, !dbg !5666
  %inc = add nsw i32 %29, 1, !dbg !5666
  store i32 %inc, i32* %i, align 4, !dbg !5666
  br label %for.cond, !dbg !5668, !llvm.loop !5669

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5671
}

; Function Attrs: nounwind uwtable
define internal void @horizontal_compose_dd97i_10bit(i8* %_b, i8* %_tmp, i32 %w) #0 !dbg !5672 {
entry:
  %_b.addr = alloca i8*, align 8
  %_tmp.addr = alloca i8*, align 8
  %w.addr = alloca i32, align 4
  %x = alloca i32, align 4
  %w2 = alloca i32, align 4
  %b = alloca i32*, align 8
  %tmp = alloca i32*, align 8
  store i8* %_b, i8** %_b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b.addr, metadata !5673, metadata !87), !dbg !5674
  store i8* %_tmp, i8** %_tmp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_tmp.addr, metadata !5675, metadata !87), !dbg !5676
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !5677, metadata !87), !dbg !5678
  call void @llvm.dbg.declare(metadata i32* %x, metadata !5679, metadata !87), !dbg !5680
  call void @llvm.dbg.declare(metadata i32* %w2, metadata !5681, metadata !87), !dbg !5682
  %0 = load i32, i32* %w.addr, align 4, !dbg !5683
  %shr = ashr i32 %0, 1, !dbg !5684
  store i32 %shr, i32* %w2, align 4, !dbg !5682
  call void @llvm.dbg.declare(metadata i32** %b, metadata !5685, metadata !87), !dbg !5686
  %1 = load i8*, i8** %_b.addr, align 8, !dbg !5687
  %2 = bitcast i8* %1 to i32*, !dbg !5688
  store i32* %2, i32** %b, align 8, !dbg !5686
  call void @llvm.dbg.declare(metadata i32** %tmp, metadata !5689, metadata !87), !dbg !5690
  %3 = load i8*, i8** %_tmp.addr, align 8, !dbg !5691
  %4 = bitcast i8* %3 to i32*, !dbg !5692
  store i32* %4, i32** %tmp, align 8, !dbg !5690
  %5 = load i32*, i32** %b, align 8, !dbg !5693
  %arrayidx = getelementptr inbounds i32, i32* %5, i64 0, !dbg !5693
  %6 = load i32, i32* %arrayidx, align 4, !dbg !5693
  %7 = load i32, i32* %w2, align 4, !dbg !5694
  %idxprom = sext i32 %7 to i64, !dbg !5695
  %8 = load i32*, i32** %b, align 8, !dbg !5695
  %arrayidx1 = getelementptr inbounds i32, i32* %8, i64 %idxprom, !dbg !5695
  %9 = load i32, i32* %arrayidx1, align 4, !dbg !5695
  %10 = load i32, i32* %w2, align 4, !dbg !5696
  %idxprom2 = sext i32 %10 to i64, !dbg !5697
  %11 = load i32*, i32** %b, align 8, !dbg !5697
  %arrayidx3 = getelementptr inbounds i32, i32* %11, i64 %idxprom2, !dbg !5697
  %12 = load i32, i32* %arrayidx3, align 4, !dbg !5697
  %add = add i32 %9, %12, !dbg !5698
  %add4 = add i32 %add, 2, !dbg !5699
  %shr5 = ashr i32 %add4, 2, !dbg !5700
  %sub = sub i32 %6, %shr5, !dbg !5701
  %13 = load i32*, i32** %tmp, align 8, !dbg !5702
  %arrayidx6 = getelementptr inbounds i32, i32* %13, i64 0, !dbg !5702
  store i32 %sub, i32* %arrayidx6, align 4, !dbg !5703
  store i32 1, i32* %x, align 4, !dbg !5704
  br label %for.cond, !dbg !5706

for.cond:                                         ; preds = %for.inc, %entry
  %14 = load i32, i32* %x, align 4, !dbg !5707
  %15 = load i32, i32* %w2, align 4, !dbg !5710
  %cmp = icmp slt i32 %14, %15, !dbg !5711
  br i1 %cmp, label %for.body, label %for.end, !dbg !5712

for.body:                                         ; preds = %for.cond
  %16 = load i32, i32* %x, align 4, !dbg !5713
  %idxprom7 = sext i32 %16 to i64, !dbg !5714
  %17 = load i32*, i32** %b, align 8, !dbg !5714
  %arrayidx8 = getelementptr inbounds i32, i32* %17, i64 %idxprom7, !dbg !5714
  %18 = load i32, i32* %arrayidx8, align 4, !dbg !5714
  %19 = load i32, i32* %x, align 4, !dbg !5715
  %20 = load i32, i32* %w2, align 4, !dbg !5716
  %add9 = add nsw i32 %19, %20, !dbg !5717
  %sub10 = sub nsw i32 %add9, 1, !dbg !5718
  %idxprom11 = sext i32 %sub10 to i64, !dbg !5719
  %21 = load i32*, i32** %b, align 8, !dbg !5719
  %arrayidx12 = getelementptr inbounds i32, i32* %21, i64 %idxprom11, !dbg !5719
  %22 = load i32, i32* %arrayidx12, align 4, !dbg !5719
  %23 = load i32, i32* %x, align 4, !dbg !5720
  %24 = load i32, i32* %w2, align 4, !dbg !5721
  %add13 = add nsw i32 %23, %24, !dbg !5722
  %idxprom14 = sext i32 %add13 to i64, !dbg !5723
  %25 = load i32*, i32** %b, align 8, !dbg !5723
  %arrayidx15 = getelementptr inbounds i32, i32* %25, i64 %idxprom14, !dbg !5723
  %26 = load i32, i32* %arrayidx15, align 4, !dbg !5723
  %add16 = add i32 %22, %26, !dbg !5724
  %add17 = add i32 %add16, 2, !dbg !5725
  %shr18 = ashr i32 %add17, 2, !dbg !5726
  %sub19 = sub i32 %18, %shr18, !dbg !5727
  %27 = load i32, i32* %x, align 4, !dbg !5728
  %idxprom20 = sext i32 %27 to i64, !dbg !5729
  %28 = load i32*, i32** %tmp, align 8, !dbg !5729
  %arrayidx21 = getelementptr inbounds i32, i32* %28, i64 %idxprom20, !dbg !5729
  store i32 %sub19, i32* %arrayidx21, align 4, !dbg !5730
  br label %for.inc, !dbg !5729

for.inc:                                          ; preds = %for.body
  %29 = load i32, i32* %x, align 4, !dbg !5731
  %inc = add nsw i32 %29, 1, !dbg !5731
  store i32 %inc, i32* %x, align 4, !dbg !5731
  br label %for.cond, !dbg !5733, !llvm.loop !5734

for.end:                                          ; preds = %for.cond
  %30 = load i32*, i32** %tmp, align 8, !dbg !5736
  %arrayidx22 = getelementptr inbounds i32, i32* %30, i64 0, !dbg !5736
  %31 = load i32, i32* %arrayidx22, align 4, !dbg !5736
  %32 = load i32*, i32** %tmp, align 8, !dbg !5737
  %arrayidx23 = getelementptr inbounds i32, i32* %32, i64 -1, !dbg !5737
  store i32 %31, i32* %arrayidx23, align 4, !dbg !5738
  %33 = load i32, i32* %w2, align 4, !dbg !5739
  %sub24 = sub nsw i32 %33, 1, !dbg !5740
  %idxprom25 = sext i32 %sub24 to i64, !dbg !5741
  %34 = load i32*, i32** %tmp, align 8, !dbg !5741
  %arrayidx26 = getelementptr inbounds i32, i32* %34, i64 %idxprom25, !dbg !5741
  %35 = load i32, i32* %arrayidx26, align 4, !dbg !5741
  %36 = load i32, i32* %w2, align 4, !dbg !5742
  %idxprom27 = sext i32 %36 to i64, !dbg !5743
  %37 = load i32*, i32** %tmp, align 8, !dbg !5743
  %arrayidx28 = getelementptr inbounds i32, i32* %37, i64 %idxprom27, !dbg !5743
  store i32 %35, i32* %arrayidx28, align 4, !dbg !5744
  %38 = load i32, i32* %w2, align 4, !dbg !5745
  %add29 = add nsw i32 %38, 1, !dbg !5746
  %idxprom30 = sext i32 %add29 to i64, !dbg !5747
  %39 = load i32*, i32** %tmp, align 8, !dbg !5747
  %arrayidx31 = getelementptr inbounds i32, i32* %39, i64 %idxprom30, !dbg !5747
  store i32 %35, i32* %arrayidx31, align 4, !dbg !5748
  store i32 0, i32* %x, align 4, !dbg !5749
  br label %for.cond32, !dbg !5751

for.cond32:                                       ; preds = %for.inc69, %for.end
  %40 = load i32, i32* %x, align 4, !dbg !5752
  %41 = load i32, i32* %w2, align 4, !dbg !5755
  %cmp33 = icmp slt i32 %40, %41, !dbg !5756
  br i1 %cmp33, label %for.body34, label %for.end71, !dbg !5757

for.body34:                                       ; preds = %for.cond32
  %42 = load i32, i32* %x, align 4, !dbg !5758
  %idxprom35 = sext i32 %42 to i64, !dbg !5760
  %43 = load i32*, i32** %tmp, align 8, !dbg !5760
  %arrayidx36 = getelementptr inbounds i32, i32* %43, i64 %idxprom35, !dbg !5760
  %44 = load i32, i32* %arrayidx36, align 4, !dbg !5760
  %add37 = add i32 %44, 1, !dbg !5761
  %shr38 = ashr i32 %add37, 1, !dbg !5762
  %45 = load i32, i32* %x, align 4, !dbg !5763
  %mul = mul nsw i32 2, %45, !dbg !5764
  %idxprom39 = sext i32 %mul to i64, !dbg !5765
  %46 = load i32*, i32** %b, align 8, !dbg !5765
  %arrayidx40 = getelementptr inbounds i32, i32* %46, i64 %idxprom39, !dbg !5765
  store i32 %shr38, i32* %arrayidx40, align 4, !dbg !5766
  %47 = load i32, i32* %x, align 4, !dbg !5767
  %48 = load i32, i32* %w2, align 4, !dbg !5768
  %add41 = add nsw i32 %47, %48, !dbg !5769
  %idxprom42 = sext i32 %add41 to i64, !dbg !5770
  %49 = load i32*, i32** %b, align 8, !dbg !5770
  %arrayidx43 = getelementptr inbounds i32, i32* %49, i64 %idxprom42, !dbg !5770
  %50 = load i32, i32* %arrayidx43, align 4, !dbg !5770
  %51 = load i32, i32* %x, align 4, !dbg !5771
  %idxprom44 = sext i32 %51 to i64, !dbg !5772
  %52 = load i32*, i32** %tmp, align 8, !dbg !5772
  %arrayidx45 = getelementptr inbounds i32, i32* %52, i64 %idxprom44, !dbg !5772
  %53 = load i32, i32* %arrayidx45, align 4, !dbg !5772
  %mul46 = mul i32 9, %53, !dbg !5773
  %54 = load i32, i32* %x, align 4, !dbg !5774
  %add47 = add nsw i32 %54, 1, !dbg !5775
  %idxprom48 = sext i32 %add47 to i64, !dbg !5776
  %55 = load i32*, i32** %tmp, align 8, !dbg !5776
  %arrayidx49 = getelementptr inbounds i32, i32* %55, i64 %idxprom48, !dbg !5776
  %56 = load i32, i32* %arrayidx49, align 4, !dbg !5776
  %mul50 = mul i32 9, %56, !dbg !5777
  %add51 = add i32 %mul46, %mul50, !dbg !5778
  %57 = load i32, i32* %x, align 4, !dbg !5779
  %add52 = add nsw i32 %57, 2, !dbg !5780
  %idxprom53 = sext i32 %add52 to i64, !dbg !5781
  %58 = load i32*, i32** %tmp, align 8, !dbg !5781
  %arrayidx54 = getelementptr inbounds i32, i32* %58, i64 %idxprom53, !dbg !5781
  %59 = load i32, i32* %arrayidx54, align 4, !dbg !5781
  %sub55 = sub i32 %add51, %59, !dbg !5782
  %60 = load i32, i32* %x, align 4, !dbg !5783
  %sub56 = sub nsw i32 %60, 1, !dbg !5784
  %idxprom57 = sext i32 %sub56 to i64, !dbg !5785
  %61 = load i32*, i32** %tmp, align 8, !dbg !5785
  %arrayidx58 = getelementptr inbounds i32, i32* %61, i64 %idxprom57, !dbg !5785
  %62 = load i32, i32* %arrayidx58, align 4, !dbg !5785
  %sub59 = sub i32 %sub55, %62, !dbg !5786
  %add60 = add i32 %sub59, 8, !dbg !5787
  %shr61 = ashr i32 %add60, 4, !dbg !5788
  %add62 = add i32 %50, %shr61, !dbg !5789
  %add63 = add i32 %add62, 1, !dbg !5790
  %shr64 = ashr i32 %add63, 1, !dbg !5791
  %63 = load i32, i32* %x, align 4, !dbg !5792
  %mul65 = mul nsw i32 2, %63, !dbg !5793
  %add66 = add nsw i32 %mul65, 1, !dbg !5794
  %idxprom67 = sext i32 %add66 to i64, !dbg !5795
  %64 = load i32*, i32** %b, align 8, !dbg !5795
  %arrayidx68 = getelementptr inbounds i32, i32* %64, i64 %idxprom67, !dbg !5795
  store i32 %shr64, i32* %arrayidx68, align 4, !dbg !5796
  br label %for.inc69, !dbg !5797

for.inc69:                                        ; preds = %for.body34
  %65 = load i32, i32* %x, align 4, !dbg !5798
  %inc70 = add nsw i32 %65, 1, !dbg !5798
  store i32 %inc70, i32* %x, align 4, !dbg !5798
  br label %for.cond32, !dbg !5800, !llvm.loop !5801

for.end71:                                        ; preds = %for.cond32
  ret void, !dbg !5803
}

; Function Attrs: nounwind uwtable
define internal void @spatial_compose_dirac53i_dy_10bit(%struct.DWTContext* %d, i32 %level, i32 %width, i32 %height, i32 %stride) #0 !dbg !5804 {
entry:
  %retval.i51 = alloca i32, align 4
  %x.addr.i52 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i52, metadata !1102, metadata !87), !dbg !5805
  %w.addr.i53 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i53, metadata !1109, metadata !87), !dbg !5807
  %retval.i = alloca i32, align 4
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !1102, metadata !87), !dbg !5808
  %w.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i, metadata !1109, metadata !87), !dbg !5810
  %d.addr = alloca %struct.DWTContext*, align 8
  %level.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  %vertical_compose_l0 = alloca void (i8*, i8*, i8*, i32)*, align 8
  %vertical_compose_h0 = alloca void (i8*, i8*, i8*, i32)*, align 8
  %cs = alloca %struct.DWTCompose*, align 8
  %y = alloca i32, align 4
  %b = alloca [4 x i8*], align 16
  store %struct.DWTContext* %d, %struct.DWTContext** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTContext** %d.addr, metadata !5811, metadata !87), !dbg !5812
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !5813, metadata !87), !dbg !5814
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !5815, metadata !87), !dbg !5816
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !5817, metadata !87), !dbg !5818
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !5819, metadata !87), !dbg !5820
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i32)** %vertical_compose_l0, metadata !5821, metadata !87), !dbg !5822
  %0 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !5823
  %vertical_compose_l01 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %0, i32 0, i32 8, !dbg !5824
  %1 = load void ()*, void ()** %vertical_compose_l01, align 8, !dbg !5824
  %2 = bitcast void ()* %1 to i8*, !dbg !5825
  %3 = bitcast i8* %2 to void (i8*, i8*, i8*, i32)*, !dbg !5825
  store void (i8*, i8*, i8*, i32)* %3, void (i8*, i8*, i8*, i32)** %vertical_compose_l0, align 8, !dbg !5822
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i32)** %vertical_compose_h0, metadata !5826, metadata !87), !dbg !5827
  %4 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !5828
  %vertical_compose_h02 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %4, i32 0, i32 9, !dbg !5829
  %5 = load void ()*, void ()** %vertical_compose_h02, align 8, !dbg !5829
  %6 = bitcast void ()* %5 to i8*, !dbg !5830
  %7 = bitcast i8* %6 to void (i8*, i8*, i8*, i32)*, !dbg !5830
  store void (i8*, i8*, i8*, i32)* %7, void (i8*, i8*, i8*, i32)** %vertical_compose_h0, align 8, !dbg !5827
  call void @llvm.dbg.declare(metadata %struct.DWTCompose** %cs, metadata !5831, metadata !87), !dbg !5832
  %8 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !5833
  %cs3 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %8, i32 0, i32 14, !dbg !5834
  %arraydecay = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs3, i32 0, i32 0, !dbg !5833
  %9 = load i32, i32* %level.addr, align 4, !dbg !5835
  %idx.ext = sext i32 %9 to i64, !dbg !5836
  %add.ptr = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arraydecay, i64 %idx.ext, !dbg !5836
  store %struct.DWTCompose* %add.ptr, %struct.DWTCompose** %cs, align 8, !dbg !5832
  call void @llvm.dbg.declare(metadata i32* %y, metadata !5837, metadata !87), !dbg !5838
  %10 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !5839
  %y4 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %10, i32 0, i32 1, !dbg !5840
  %11 = load i32, i32* %y4, align 8, !dbg !5840
  store i32 %11, i32* %y, align 4, !dbg !5838
  call void @llvm.dbg.declare(metadata [4 x i8*]* %b, metadata !5841, metadata !87), !dbg !5842
  %arrayinit.begin = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 0, !dbg !5843
  %12 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !5844
  %b5 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %12, i32 0, i32 0, !dbg !5845
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %b5, i64 0, i64 0, !dbg !5844
  %13 = load i8*, i8** %arrayidx, align 8, !dbg !5844
  store i8* %13, i8** %arrayinit.begin, align 8, !dbg !5843
  %arrayinit.element = getelementptr inbounds i8*, i8** %arrayinit.begin, i64 1, !dbg !5843
  %14 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !5846
  %b6 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %14, i32 0, i32 0, !dbg !5847
  %arrayidx7 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b6, i64 0, i64 1, !dbg !5846
  %15 = load i8*, i8** %arrayidx7, align 8, !dbg !5846
  store i8* %15, i8** %arrayinit.element, align 8, !dbg !5843
  %arrayinit.start = getelementptr inbounds i8*, i8** %arrayinit.element, i64 1, !dbg !5843
  %arrayinit.end = getelementptr inbounds i8*, i8** %arrayinit.begin, i64 4, !dbg !5843
  br label %arrayinit.body, !dbg !5843

arrayinit.body:                                   ; preds = %arrayinit.body, %entry
  %arrayinit.cur = phi i8** [ %arrayinit.start, %entry ], [ %arrayinit.next, %arrayinit.body ], !dbg !5848
  store i8* null, i8** %arrayinit.cur, align 8, !dbg !5848
  %arrayinit.next = getelementptr inbounds i8*, i8** %arrayinit.cur, i64 1, !dbg !5848
  %arrayinit.done = icmp eq i8** %arrayinit.next, %arrayinit.end, !dbg !5848
  br i1 %arrayinit.done, label %arrayinit.end8, label %arrayinit.body, !dbg !5848

arrayinit.end8:                                   ; preds = %arrayinit.body
  %16 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !5850
  %buffer = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %16, i32 0, i32 0, !dbg !5851
  %17 = load i8*, i8** %buffer, align 8, !dbg !5851
  %18 = load i32, i32* %y, align 4, !dbg !5852
  %add = add nsw i32 %18, 1, !dbg !5853
  %19 = load i32, i32* %height.addr, align 4, !dbg !5854
  %sub = sub nsw i32 %19, 1, !dbg !5855
  store i32 %add, i32* %x.addr.i, align 4, !dbg !5856
  store i32 %sub, i32* %w.addr.i, align 4, !dbg !5856
  %20 = load i32, i32* %w.addr.i, align 4, !dbg !5857
  %tobool.i = icmp ne i32 %20, 0, !dbg !5857
  br i1 %tobool.i, label %if.end.i, label %if.then.i, !dbg !5858

if.then.i:                                        ; preds = %arrayinit.end8
  store i32 0, i32* %retval.i, align 4, !dbg !5859
  br label %avpriv_mirror.exit, !dbg !5859

if.end.i:                                         ; preds = %arrayinit.end8
  br label %while.cond.i, !dbg !5860

while.cond.i:                                     ; preds = %if.end3.i, %if.end.i
  %21 = load i32, i32* %x.addr.i, align 4, !dbg !5861
  %22 = load i32, i32* %w.addr.i, align 4, !dbg !5862
  %cmp.i = icmp ugt i32 %21, %22, !dbg !5863
  br i1 %cmp.i, label %while.body.i, label %while.end.i, !dbg !5864

while.body.i:                                     ; preds = %while.cond.i
  %23 = load i32, i32* %x.addr.i, align 4, !dbg !5865
  %sub.i = sub nsw i32 0, %23, !dbg !5866
  store i32 %sub.i, i32* %x.addr.i, align 4, !dbg !5867
  %24 = load i32, i32* %x.addr.i, align 4, !dbg !5868
  %cmp1.i = icmp slt i32 %24, 0, !dbg !5869
  br i1 %cmp1.i, label %if.then2.i, label %if.end3.i, !dbg !5870

if.then2.i:                                       ; preds = %while.body.i
  %25 = load i32, i32* %w.addr.i, align 4, !dbg !5871
  %mul.i = mul nsw i32 2, %25, !dbg !5872
  %26 = load i32, i32* %x.addr.i, align 4, !dbg !5873
  %add.i = add nsw i32 %26, %mul.i, !dbg !5873
  store i32 %add.i, i32* %x.addr.i, align 4, !dbg !5873
  br label %if.end3.i, !dbg !5874

if.end3.i:                                        ; preds = %if.then2.i, %while.body.i
  br label %while.cond.i, !dbg !5875, !llvm.loop !1150

while.end.i:                                      ; preds = %while.cond.i
  %27 = load i32, i32* %x.addr.i, align 4, !dbg !5876
  store i32 %27, i32* %retval.i, align 4, !dbg !5877
  br label %avpriv_mirror.exit, !dbg !5877

avpriv_mirror.exit:                               ; preds = %if.then.i, %while.end.i
  %28 = load i32, i32* %retval.i, align 4, !dbg !5878
  %29 = load i32, i32* %stride.addr, align 4, !dbg !5879
  %mul = mul nsw i32 %28, %29, !dbg !5880
  %idx.ext9 = sext i32 %mul to i64, !dbg !5881
  %add.ptr10 = getelementptr inbounds i8, i8* %17, i64 %idx.ext9, !dbg !5881
  %arrayidx11 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 2, !dbg !5882
  store i8* %add.ptr10, i8** %arrayidx11, align 16, !dbg !5883
  %30 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !5884
  %buffer12 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %30, i32 0, i32 0, !dbg !5885
  %31 = load i8*, i8** %buffer12, align 8, !dbg !5885
  %32 = load i32, i32* %y, align 4, !dbg !5886
  %add13 = add nsw i32 %32, 2, !dbg !5887
  %33 = load i32, i32* %height.addr, align 4, !dbg !5888
  %sub14 = sub nsw i32 %33, 1, !dbg !5889
  store i32 %add13, i32* %x.addr.i52, align 4, !dbg !5890
  store i32 %sub14, i32* %w.addr.i53, align 4, !dbg !5890
  %34 = load i32, i32* %w.addr.i53, align 4, !dbg !5891
  %tobool.i54 = icmp ne i32 %34, 0, !dbg !5891
  br i1 %tobool.i54, label %if.end.i56, label %if.then.i55, !dbg !5892

if.then.i55:                                      ; preds = %avpriv_mirror.exit
  store i32 0, i32* %retval.i51, align 4, !dbg !5893
  br label %avpriv_mirror.exit67, !dbg !5893

if.end.i56:                                       ; preds = %avpriv_mirror.exit
  br label %while.cond.i58, !dbg !5894

while.cond.i58:                                   ; preds = %if.end3.i65, %if.end.i56
  %35 = load i32, i32* %x.addr.i52, align 4, !dbg !5895
  %36 = load i32, i32* %w.addr.i53, align 4, !dbg !5896
  %cmp.i57 = icmp ugt i32 %35, %36, !dbg !5897
  br i1 %cmp.i57, label %while.body.i61, label %while.end.i66, !dbg !5898

while.body.i61:                                   ; preds = %while.cond.i58
  %37 = load i32, i32* %x.addr.i52, align 4, !dbg !5899
  %sub.i59 = sub nsw i32 0, %37, !dbg !5900
  store i32 %sub.i59, i32* %x.addr.i52, align 4, !dbg !5901
  %38 = load i32, i32* %x.addr.i52, align 4, !dbg !5902
  %cmp1.i60 = icmp slt i32 %38, 0, !dbg !5903
  br i1 %cmp1.i60, label %if.then2.i64, label %if.end3.i65, !dbg !5904

if.then2.i64:                                     ; preds = %while.body.i61
  %39 = load i32, i32* %w.addr.i53, align 4, !dbg !5905
  %mul.i62 = mul nsw i32 2, %39, !dbg !5906
  %40 = load i32, i32* %x.addr.i52, align 4, !dbg !5907
  %add.i63 = add nsw i32 %40, %mul.i62, !dbg !5907
  store i32 %add.i63, i32* %x.addr.i52, align 4, !dbg !5907
  br label %if.end3.i65, !dbg !5908

if.end3.i65:                                      ; preds = %if.then2.i64, %while.body.i61
  br label %while.cond.i58, !dbg !5909, !llvm.loop !1150

while.end.i66:                                    ; preds = %while.cond.i58
  %41 = load i32, i32* %x.addr.i52, align 4, !dbg !5910
  store i32 %41, i32* %retval.i51, align 4, !dbg !5911
  br label %avpriv_mirror.exit67, !dbg !5911

avpriv_mirror.exit67:                             ; preds = %if.then.i55, %while.end.i66
  %42 = load i32, i32* %retval.i51, align 4, !dbg !5912
  %43 = load i32, i32* %stride.addr, align 4, !dbg !5913
  %mul16 = mul nsw i32 %42, %43, !dbg !5914
  %idx.ext17 = sext i32 %mul16 to i64, !dbg !5915
  %add.ptr18 = getelementptr inbounds i8, i8* %31, i64 %idx.ext17, !dbg !5915
  %arrayidx19 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 3, !dbg !5916
  store i8* %add.ptr18, i8** %arrayidx19, align 8, !dbg !5917
  %44 = load i32, i32* %y, align 4, !dbg !5918
  %add20 = add nsw i32 %44, 1, !dbg !5920
  %45 = load i32, i32* %height.addr, align 4, !dbg !5921
  %cmp = icmp ult i32 %add20, %45, !dbg !5922
  br i1 %cmp, label %if.then, label %if.end, !dbg !5923

if.then:                                          ; preds = %avpriv_mirror.exit67
  %46 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %vertical_compose_l0, align 8, !dbg !5924
  %arrayidx21 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 1, !dbg !5926
  %47 = load i8*, i8** %arrayidx21, align 8, !dbg !5926
  %arrayidx22 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 2, !dbg !5927
  %48 = load i8*, i8** %arrayidx22, align 16, !dbg !5927
  %arrayidx23 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 3, !dbg !5928
  %49 = load i8*, i8** %arrayidx23, align 8, !dbg !5928
  %50 = load i32, i32* %width.addr, align 4, !dbg !5929
  call void %46(i8* %47, i8* %48, i8* %49, i32 %50), !dbg !5924
  br label %if.end, !dbg !5924

if.end:                                           ; preds = %if.then, %avpriv_mirror.exit67
  %51 = load i32, i32* %y, align 4, !dbg !5930
  %add24 = add nsw i32 %51, 0, !dbg !5932
  %52 = load i32, i32* %height.addr, align 4, !dbg !5933
  %cmp25 = icmp ult i32 %add24, %52, !dbg !5934
  br i1 %cmp25, label %if.then26, label %if.end30, !dbg !5935

if.then26:                                        ; preds = %if.end
  %53 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %vertical_compose_h0, align 8, !dbg !5936
  %arrayidx27 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 0, !dbg !5938
  %54 = load i8*, i8** %arrayidx27, align 16, !dbg !5938
  %arrayidx28 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 1, !dbg !5939
  %55 = load i8*, i8** %arrayidx28, align 8, !dbg !5939
  %arrayidx29 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 2, !dbg !5940
  %56 = load i8*, i8** %arrayidx29, align 16, !dbg !5940
  %57 = load i32, i32* %width.addr, align 4, !dbg !5941
  call void %53(i8* %54, i8* %55, i8* %56, i32 %57), !dbg !5936
  br label %if.end30, !dbg !5936

if.end30:                                         ; preds = %if.then26, %if.end
  %58 = load i32, i32* %y, align 4, !dbg !5942
  %sub31 = sub nsw i32 %58, 1, !dbg !5944
  %59 = load i32, i32* %height.addr, align 4, !dbg !5945
  %cmp32 = icmp ult i32 %sub31, %59, !dbg !5946
  br i1 %cmp32, label %if.then33, label %if.end35, !dbg !5947

if.then33:                                        ; preds = %if.end30
  %60 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !5948
  %horizontal_compose = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %60, i32 0, i32 13, !dbg !5950
  %61 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %horizontal_compose, align 8, !dbg !5950
  %arrayidx34 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 0, !dbg !5951
  %62 = load i8*, i8** %arrayidx34, align 16, !dbg !5951
  %63 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !5952
  %temp = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %63, i32 0, i32 1, !dbg !5953
  %64 = load i8*, i8** %temp, align 8, !dbg !5953
  %65 = load i32, i32* %width.addr, align 4, !dbg !5954
  call void %61(i8* %62, i8* %64, i32 %65), !dbg !5948
  br label %if.end35, !dbg !5948

if.end35:                                         ; preds = %if.then33, %if.end30
  %66 = load i32, i32* %y, align 4, !dbg !5955
  %add36 = add nsw i32 %66, 0, !dbg !5957
  %67 = load i32, i32* %height.addr, align 4, !dbg !5958
  %cmp37 = icmp ult i32 %add36, %67, !dbg !5959
  br i1 %cmp37, label %if.then38, label %if.end42, !dbg !5960

if.then38:                                        ; preds = %if.end35
  %68 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !5961
  %horizontal_compose39 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %68, i32 0, i32 13, !dbg !5963
  %69 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %horizontal_compose39, align 8, !dbg !5963
  %arrayidx40 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 1, !dbg !5964
  %70 = load i8*, i8** %arrayidx40, align 8, !dbg !5964
  %71 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !5965
  %temp41 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %71, i32 0, i32 1, !dbg !5966
  %72 = load i8*, i8** %temp41, align 8, !dbg !5966
  %73 = load i32, i32* %width.addr, align 4, !dbg !5967
  call void %69(i8* %70, i8* %72, i32 %73), !dbg !5961
  br label %if.end42, !dbg !5961

if.end42:                                         ; preds = %if.then38, %if.end35
  %arrayidx43 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 2, !dbg !5968
  %74 = load i8*, i8** %arrayidx43, align 16, !dbg !5968
  %75 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !5969
  %b44 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %75, i32 0, i32 0, !dbg !5970
  %arrayidx45 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b44, i64 0, i64 0, !dbg !5969
  store i8* %74, i8** %arrayidx45, align 8, !dbg !5971
  %arrayidx46 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 3, !dbg !5972
  %76 = load i8*, i8** %arrayidx46, align 8, !dbg !5972
  %77 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !5973
  %b47 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %77, i32 0, i32 0, !dbg !5974
  %arrayidx48 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b47, i64 0, i64 1, !dbg !5973
  store i8* %76, i8** %arrayidx48, align 8, !dbg !5975
  %78 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !5976
  %y49 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %78, i32 0, i32 1, !dbg !5977
  %79 = load i32, i32* %y49, align 8, !dbg !5978
  %add50 = add nsw i32 %79, 2, !dbg !5978
  store i32 %add50, i32* %y49, align 8, !dbg !5978
  ret void, !dbg !5979
}

; Function Attrs: nounwind uwtable
define internal void @vertical_compose_dirac53iH0_10bit(i8* %_b0, i8* %_b1, i8* %_b2, i32 %width) #0 !dbg !5980 {
entry:
  %_b0.addr = alloca i8*, align 8
  %_b1.addr = alloca i8*, align 8
  %_b2.addr = alloca i8*, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %b0 = alloca i32*, align 8
  %b1 = alloca i32*, align 8
  %b2 = alloca i32*, align 8
  store i8* %_b0, i8** %_b0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b0.addr, metadata !5981, metadata !87), !dbg !5982
  store i8* %_b1, i8** %_b1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b1.addr, metadata !5983, metadata !87), !dbg !5984
  store i8* %_b2, i8** %_b2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b2.addr, metadata !5985, metadata !87), !dbg !5986
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !5987, metadata !87), !dbg !5988
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5989, metadata !87), !dbg !5990
  call void @llvm.dbg.declare(metadata i32** %b0, metadata !5991, metadata !87), !dbg !5992
  %0 = load i8*, i8** %_b0.addr, align 8, !dbg !5993
  %1 = bitcast i8* %0 to i32*, !dbg !5994
  store i32* %1, i32** %b0, align 8, !dbg !5992
  call void @llvm.dbg.declare(metadata i32** %b1, metadata !5995, metadata !87), !dbg !5996
  %2 = load i8*, i8** %_b1.addr, align 8, !dbg !5997
  %3 = bitcast i8* %2 to i32*, !dbg !5998
  store i32* %3, i32** %b1, align 8, !dbg !5996
  call void @llvm.dbg.declare(metadata i32** %b2, metadata !5999, metadata !87), !dbg !6000
  %4 = load i8*, i8** %_b2.addr, align 8, !dbg !6001
  %5 = bitcast i8* %4 to i32*, !dbg !6002
  store i32* %5, i32** %b2, align 8, !dbg !6000
  store i32 0, i32* %i, align 4, !dbg !6003
  br label %for.cond, !dbg !6005

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !dbg !6006
  %7 = load i32, i32* %width.addr, align 4, !dbg !6009
  %cmp = icmp slt i32 %6, %7, !dbg !6010
  br i1 %cmp, label %for.body, label %for.end, !dbg !6011

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %i, align 4, !dbg !6012
  %idxprom = sext i32 %8 to i64, !dbg !6014
  %9 = load i32*, i32** %b1, align 8, !dbg !6014
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom, !dbg !6014
  %10 = load i32, i32* %arrayidx, align 4, !dbg !6014
  %11 = load i32, i32* %i, align 4, !dbg !6015
  %idxprom1 = sext i32 %11 to i64, !dbg !6016
  %12 = load i32*, i32** %b0, align 8, !dbg !6016
  %arrayidx2 = getelementptr inbounds i32, i32* %12, i64 %idxprom1, !dbg !6016
  %13 = load i32, i32* %arrayidx2, align 4, !dbg !6016
  %14 = load i32, i32* %i, align 4, !dbg !6017
  %idxprom3 = sext i32 %14 to i64, !dbg !6018
  %15 = load i32*, i32** %b2, align 8, !dbg !6018
  %arrayidx4 = getelementptr inbounds i32, i32* %15, i64 %idxprom3, !dbg !6018
  %16 = load i32, i32* %arrayidx4, align 4, !dbg !6018
  %add = add i32 %13, %16, !dbg !6019
  %add5 = add i32 %add, 1, !dbg !6020
  %shr = ashr i32 %add5, 1, !dbg !6021
  %add6 = add i32 %10, %shr, !dbg !6022
  %17 = load i32, i32* %i, align 4, !dbg !6023
  %idxprom7 = sext i32 %17 to i64, !dbg !6024
  %18 = load i32*, i32** %b1, align 8, !dbg !6024
  %arrayidx8 = getelementptr inbounds i32, i32* %18, i64 %idxprom7, !dbg !6024
  store i32 %add6, i32* %arrayidx8, align 4, !dbg !6025
  br label %for.inc, !dbg !6026

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !6027
  %inc = add nsw i32 %19, 1, !dbg !6027
  store i32 %inc, i32* %i, align 4, !dbg !6027
  br label %for.cond, !dbg !6029, !llvm.loop !6030

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6032
}

; Function Attrs: nounwind uwtable
define internal void @horizontal_compose_dirac53i_10bit(i8* %_b, i8* %_temp, i32 %w) #0 !dbg !6033 {
entry:
  %dst.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %dst.addr.i, metadata !6034, metadata !87), !dbg !6038
  %src0.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %src0.addr.i, metadata !6040, metadata !87), !dbg !6041
  %src1.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %src1.addr.i, metadata !6042, metadata !87), !dbg !6043
  %w2.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w2.addr.i, metadata !6044, metadata !87), !dbg !6045
  %add.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %add.addr.i, metadata !6046, metadata !87), !dbg !6047
  %shift.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %shift.addr.i, metadata !6048, metadata !87), !dbg !6049
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !6050, metadata !87), !dbg !6051
  %_b.addr = alloca i8*, align 8
  %_temp.addr = alloca i8*, align 8
  %w.addr = alloca i32, align 4
  %x = alloca i32, align 4
  %w2 = alloca i32, align 4
  %b = alloca i32*, align 8
  %temp = alloca i32*, align 8
  store i8* %_b, i8** %_b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b.addr, metadata !6052, metadata !87), !dbg !6053
  store i8* %_temp, i8** %_temp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_temp.addr, metadata !6054, metadata !87), !dbg !6055
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !6056, metadata !87), !dbg !6057
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6058, metadata !87), !dbg !6059
  call void @llvm.dbg.declare(metadata i32* %w2, metadata !6060, metadata !87), !dbg !6061
  %0 = load i32, i32* %w.addr, align 4, !dbg !6062
  %shr = ashr i32 %0, 1, !dbg !6063
  store i32 %shr, i32* %w2, align 4, !dbg !6061
  call void @llvm.dbg.declare(metadata i32** %b, metadata !6064, metadata !87), !dbg !6065
  %1 = load i8*, i8** %_b.addr, align 8, !dbg !6066
  %2 = bitcast i8* %1 to i32*, !dbg !6067
  store i32* %2, i32** %b, align 8, !dbg !6065
  call void @llvm.dbg.declare(metadata i32** %temp, metadata !6068, metadata !87), !dbg !6069
  %3 = load i8*, i8** %_temp.addr, align 8, !dbg !6070
  %4 = bitcast i8* %3 to i32*, !dbg !6071
  store i32* %4, i32** %temp, align 8, !dbg !6069
  %5 = load i32*, i32** %b, align 8, !dbg !6072
  %arrayidx = getelementptr inbounds i32, i32* %5, i64 0, !dbg !6072
  %6 = load i32, i32* %arrayidx, align 4, !dbg !6072
  %7 = load i32, i32* %w2, align 4, !dbg !6073
  %idxprom = sext i32 %7 to i64, !dbg !6074
  %8 = load i32*, i32** %b, align 8, !dbg !6074
  %arrayidx1 = getelementptr inbounds i32, i32* %8, i64 %idxprom, !dbg !6074
  %9 = load i32, i32* %arrayidx1, align 4, !dbg !6074
  %10 = load i32, i32* %w2, align 4, !dbg !6075
  %idxprom2 = sext i32 %10 to i64, !dbg !6076
  %11 = load i32*, i32** %b, align 8, !dbg !6076
  %arrayidx3 = getelementptr inbounds i32, i32* %11, i64 %idxprom2, !dbg !6076
  %12 = load i32, i32* %arrayidx3, align 4, !dbg !6076
  %add = add i32 %9, %12, !dbg !6077
  %add4 = add i32 %add, 2, !dbg !6078
  %shr5 = ashr i32 %add4, 2, !dbg !6079
  %sub = sub i32 %6, %shr5, !dbg !6080
  %13 = load i32*, i32** %temp, align 8, !dbg !6081
  %arrayidx6 = getelementptr inbounds i32, i32* %13, i64 0, !dbg !6081
  store i32 %sub, i32* %arrayidx6, align 4, !dbg !6082
  store i32 1, i32* %x, align 4, !dbg !6083
  br label %for.cond, !dbg !6085

for.cond:                                         ; preds = %for.inc, %entry
  %14 = load i32, i32* %x, align 4, !dbg !6086
  %15 = load i32, i32* %w2, align 4, !dbg !6089
  %cmp = icmp slt i32 %14, %15, !dbg !6090
  br i1 %cmp, label %for.body, label %for.end, !dbg !6091

for.body:                                         ; preds = %for.cond
  %16 = load i32, i32* %x, align 4, !dbg !6092
  %idxprom7 = sext i32 %16 to i64, !dbg !6094
  %17 = load i32*, i32** %b, align 8, !dbg !6094
  %arrayidx8 = getelementptr inbounds i32, i32* %17, i64 %idxprom7, !dbg !6094
  %18 = load i32, i32* %arrayidx8, align 4, !dbg !6094
  %19 = load i32, i32* %x, align 4, !dbg !6095
  %20 = load i32, i32* %w2, align 4, !dbg !6096
  %add9 = add nsw i32 %19, %20, !dbg !6097
  %sub10 = sub nsw i32 %add9, 1, !dbg !6098
  %idxprom11 = sext i32 %sub10 to i64, !dbg !6099
  %21 = load i32*, i32** %b, align 8, !dbg !6099
  %arrayidx12 = getelementptr inbounds i32, i32* %21, i64 %idxprom11, !dbg !6099
  %22 = load i32, i32* %arrayidx12, align 4, !dbg !6099
  %23 = load i32, i32* %x, align 4, !dbg !6100
  %24 = load i32, i32* %w2, align 4, !dbg !6101
  %add13 = add nsw i32 %23, %24, !dbg !6102
  %idxprom14 = sext i32 %add13 to i64, !dbg !6103
  %25 = load i32*, i32** %b, align 8, !dbg !6103
  %arrayidx15 = getelementptr inbounds i32, i32* %25, i64 %idxprom14, !dbg !6103
  %26 = load i32, i32* %arrayidx15, align 4, !dbg !6103
  %add16 = add i32 %22, %26, !dbg !6104
  %add17 = add i32 %add16, 2, !dbg !6105
  %shr18 = ashr i32 %add17, 2, !dbg !6106
  %sub19 = sub i32 %18, %shr18, !dbg !6107
  %27 = load i32, i32* %x, align 4, !dbg !6108
  %idxprom20 = sext i32 %27 to i64, !dbg !6109
  %28 = load i32*, i32** %temp, align 8, !dbg !6109
  %arrayidx21 = getelementptr inbounds i32, i32* %28, i64 %idxprom20, !dbg !6109
  store i32 %sub19, i32* %arrayidx21, align 4, !dbg !6110
  %29 = load i32, i32* %x, align 4, !dbg !6111
  %30 = load i32, i32* %w2, align 4, !dbg !6112
  %add22 = add nsw i32 %29, %30, !dbg !6113
  %sub23 = sub nsw i32 %add22, 1, !dbg !6114
  %idxprom24 = sext i32 %sub23 to i64, !dbg !6115
  %31 = load i32*, i32** %b, align 8, !dbg !6115
  %arrayidx25 = getelementptr inbounds i32, i32* %31, i64 %idxprom24, !dbg !6115
  %32 = load i32, i32* %arrayidx25, align 4, !dbg !6115
  %33 = load i32, i32* %x, align 4, !dbg !6116
  %sub26 = sub nsw i32 %33, 1, !dbg !6117
  %idxprom27 = sext i32 %sub26 to i64, !dbg !6118
  %34 = load i32*, i32** %temp, align 8, !dbg !6118
  %arrayidx28 = getelementptr inbounds i32, i32* %34, i64 %idxprom27, !dbg !6118
  %35 = load i32, i32* %arrayidx28, align 4, !dbg !6118
  %36 = load i32, i32* %x, align 4, !dbg !6119
  %idxprom29 = sext i32 %36 to i64, !dbg !6120
  %37 = load i32*, i32** %temp, align 8, !dbg !6120
  %arrayidx30 = getelementptr inbounds i32, i32* %37, i64 %idxprom29, !dbg !6120
  %38 = load i32, i32* %arrayidx30, align 4, !dbg !6120
  %add31 = add i32 %35, %38, !dbg !6121
  %add32 = add i32 %add31, 1, !dbg !6122
  %shr33 = ashr i32 %add32, 1, !dbg !6123
  %add34 = add i32 %32, %shr33, !dbg !6124
  %39 = load i32, i32* %x, align 4, !dbg !6125
  %40 = load i32, i32* %w2, align 4, !dbg !6126
  %add35 = add nsw i32 %39, %40, !dbg !6127
  %sub36 = sub nsw i32 %add35, 1, !dbg !6128
  %idxprom37 = sext i32 %sub36 to i64, !dbg !6129
  %41 = load i32*, i32** %temp, align 8, !dbg !6129
  %arrayidx38 = getelementptr inbounds i32, i32* %41, i64 %idxprom37, !dbg !6129
  store i32 %add34, i32* %arrayidx38, align 4, !dbg !6130
  br label %for.inc, !dbg !6131

for.inc:                                          ; preds = %for.body
  %42 = load i32, i32* %x, align 4, !dbg !6132
  %inc = add nsw i32 %42, 1, !dbg !6132
  store i32 %inc, i32* %x, align 4, !dbg !6132
  br label %for.cond, !dbg !6134, !llvm.loop !6135

for.end:                                          ; preds = %for.cond
  %43 = load i32, i32* %w.addr, align 4, !dbg !6137
  %sub39 = sub nsw i32 %43, 1, !dbg !6138
  %idxprom40 = sext i32 %sub39 to i64, !dbg !6139
  %44 = load i32*, i32** %b, align 8, !dbg !6139
  %arrayidx41 = getelementptr inbounds i32, i32* %44, i64 %idxprom40, !dbg !6139
  %45 = load i32, i32* %arrayidx41, align 4, !dbg !6139
  %46 = load i32, i32* %w2, align 4, !dbg !6140
  %sub42 = sub nsw i32 %46, 1, !dbg !6141
  %idxprom43 = sext i32 %sub42 to i64, !dbg !6142
  %47 = load i32*, i32** %temp, align 8, !dbg !6142
  %arrayidx44 = getelementptr inbounds i32, i32* %47, i64 %idxprom43, !dbg !6142
  %48 = load i32, i32* %arrayidx44, align 4, !dbg !6142
  %49 = load i32, i32* %w2, align 4, !dbg !6143
  %sub45 = sub nsw i32 %49, 1, !dbg !6144
  %idxprom46 = sext i32 %sub45 to i64, !dbg !6145
  %50 = load i32*, i32** %temp, align 8, !dbg !6145
  %arrayidx47 = getelementptr inbounds i32, i32* %50, i64 %idxprom46, !dbg !6145
  %51 = load i32, i32* %arrayidx47, align 4, !dbg !6145
  %add48 = add i32 %48, %51, !dbg !6146
  %add49 = add i32 %add48, 1, !dbg !6147
  %shr50 = ashr i32 %add49, 1, !dbg !6148
  %add51 = add i32 %45, %shr50, !dbg !6149
  %52 = load i32, i32* %w.addr, align 4, !dbg !6150
  %sub52 = sub nsw i32 %52, 1, !dbg !6151
  %idxprom53 = sext i32 %sub52 to i64, !dbg !6152
  %53 = load i32*, i32** %temp, align 8, !dbg !6152
  %arrayidx54 = getelementptr inbounds i32, i32* %53, i64 %idxprom53, !dbg !6152
  store i32 %add51, i32* %arrayidx54, align 4, !dbg !6153
  %54 = load i32*, i32** %b, align 8, !dbg !6154
  %55 = load i32*, i32** %temp, align 8, !dbg !6155
  %56 = load i32*, i32** %temp, align 8, !dbg !6156
  %57 = load i32, i32* %w2, align 4, !dbg !6157
  %idx.ext = sext i32 %57 to i64, !dbg !6158
  %add.ptr = getelementptr inbounds i32, i32* %56, i64 %idx.ext, !dbg !6158
  %58 = load i32, i32* %w2, align 4, !dbg !6159
  store i32* %54, i32** %dst.addr.i, align 8, !dbg !6160
  store i32* %55, i32** %src0.addr.i, align 8, !dbg !6160
  store i32* %add.ptr, i32** %src1.addr.i, align 8, !dbg !6160
  store i32 %58, i32* %w2.addr.i, align 4, !dbg !6160
  store i32 1, i32* %add.addr.i, align 4, !dbg !6160
  store i32 1, i32* %shift.addr.i, align 4, !dbg !6160
  store i32 0, i32* %i.i, align 4, !dbg !6161
  br label %for.cond.i, !dbg !6163

for.cond.i:                                       ; preds = %for.body.i, %for.end
  %59 = load i32, i32* %i.i, align 4, !dbg !6164
  %60 = load i32, i32* %w2.addr.i, align 4, !dbg !6167
  %cmp.i = icmp slt i32 %59, %60, !dbg !6168
  br i1 %cmp.i, label %for.body.i, label %interleave_10bit.exit, !dbg !6169

for.body.i:                                       ; preds = %for.cond.i
  %61 = load i32, i32* %i.i, align 4, !dbg !6170
  %idxprom.i = sext i32 %61 to i64, !dbg !6172
  %62 = load i32*, i32** %src0.addr.i, align 8, !dbg !6172
  %arrayidx.i = getelementptr inbounds i32, i32* %62, i64 %idxprom.i, !dbg !6172
  %63 = load i32, i32* %arrayidx.i, align 4, !dbg !6172
  %64 = load i32, i32* %add.addr.i, align 4, !dbg !6173
  %add1.i = add i32 %63, %64, !dbg !6174
  %65 = load i32, i32* %shift.addr.i, align 4, !dbg !6175
  %shr.i = ashr i32 %add1.i, %65, !dbg !6176
  %66 = load i32, i32* %i.i, align 4, !dbg !6177
  %mul.i = mul nsw i32 2, %66, !dbg !6178
  %idxprom2.i = sext i32 %mul.i to i64, !dbg !6179
  %67 = load i32*, i32** %dst.addr.i, align 8, !dbg !6179
  %arrayidx3.i = getelementptr inbounds i32, i32* %67, i64 %idxprom2.i, !dbg !6179
  store i32 %shr.i, i32* %arrayidx3.i, align 4, !dbg !6180
  %68 = load i32, i32* %i.i, align 4, !dbg !6181
  %idxprom4.i = sext i32 %68 to i64, !dbg !6182
  %69 = load i32*, i32** %src1.addr.i, align 8, !dbg !6182
  %arrayidx5.i = getelementptr inbounds i32, i32* %69, i64 %idxprom4.i, !dbg !6182
  %70 = load i32, i32* %arrayidx5.i, align 4, !dbg !6182
  %71 = load i32, i32* %add.addr.i, align 4, !dbg !6183
  %add6.i = add i32 %70, %71, !dbg !6184
  %72 = load i32, i32* %shift.addr.i, align 4, !dbg !6185
  %shr7.i = ashr i32 %add6.i, %72, !dbg !6186
  %73 = load i32, i32* %i.i, align 4, !dbg !6187
  %mul8.i = mul nsw i32 2, %73, !dbg !6188
  %add9.i = add nsw i32 %mul8.i, 1, !dbg !6189
  %idxprom10.i = sext i32 %add9.i to i64, !dbg !6190
  %74 = load i32*, i32** %dst.addr.i, align 8, !dbg !6190
  %arrayidx11.i = getelementptr inbounds i32, i32* %74, i64 %idxprom10.i, !dbg !6190
  store i32 %shr7.i, i32* %arrayidx11.i, align 4, !dbg !6191
  %75 = load i32, i32* %i.i, align 4, !dbg !6192
  %inc.i = add nsw i32 %75, 1, !dbg !6192
  store i32 %inc.i, i32* %i.i, align 4, !dbg !6192
  br label %for.cond.i, !dbg !6194, !llvm.loop !6195

interleave_10bit.exit:                            ; preds = %for.cond.i
  ret void, !dbg !6197
}

; Function Attrs: nounwind uwtable
define internal void @spatial_compose_dd137i_dy_10bit(%struct.DWTContext* %d, i32 %level, i32 %width, i32 %height, i32 %stride) #0 !dbg !6198 {
entry:
  %retval.i61 = alloca i32, align 4
  %a.addr.i62 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i62, metadata !904, metadata !87), !dbg !6199
  %amin.addr.i63 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i63, metadata !911, metadata !87), !dbg !6201
  %amax.addr.i64 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i64, metadata !913, metadata !87), !dbg !6202
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !904, metadata !87), !dbg !6203
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !911, metadata !87), !dbg !6205
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !913, metadata !87), !dbg !6206
  %d.addr = alloca %struct.DWTContext*, align 8
  %level.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  %vertical_compose_l0 = alloca void (i8*, i8*, i8*, i8*, i8*, i32)*, align 8
  %vertical_compose_h0 = alloca void (i8*, i8*, i8*, i8*, i8*, i32)*, align 8
  %cs = alloca %struct.DWTCompose*, align 8
  %i = alloca i32, align 4
  %y = alloca i32, align 4
  %b = alloca [10 x i8*], align 16
  store %struct.DWTContext* %d, %struct.DWTContext** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTContext** %d.addr, metadata !6207, metadata !87), !dbg !6208
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !6209, metadata !87), !dbg !6210
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !6211, metadata !87), !dbg !6212
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !6213, metadata !87), !dbg !6214
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !6215, metadata !87), !dbg !6216
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i8*, i8*, i32)** %vertical_compose_l0, metadata !6217, metadata !87), !dbg !6218
  %0 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !6219
  %vertical_compose_l01 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %0, i32 0, i32 8, !dbg !6220
  %1 = load void ()*, void ()** %vertical_compose_l01, align 8, !dbg !6220
  %2 = bitcast void ()* %1 to i8*, !dbg !6221
  %3 = bitcast i8* %2 to void (i8*, i8*, i8*, i8*, i8*, i32)*, !dbg !6221
  store void (i8*, i8*, i8*, i8*, i8*, i32)* %3, void (i8*, i8*, i8*, i8*, i8*, i32)** %vertical_compose_l0, align 8, !dbg !6218
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i8*, i8*, i32)** %vertical_compose_h0, metadata !6222, metadata !87), !dbg !6223
  %4 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !6224
  %vertical_compose_h02 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %4, i32 0, i32 9, !dbg !6225
  %5 = load void ()*, void ()** %vertical_compose_h02, align 8, !dbg !6225
  %6 = bitcast void ()* %5 to i8*, !dbg !6226
  %7 = bitcast i8* %6 to void (i8*, i8*, i8*, i8*, i8*, i32)*, !dbg !6226
  store void (i8*, i8*, i8*, i8*, i8*, i32)* %7, void (i8*, i8*, i8*, i8*, i8*, i32)** %vertical_compose_h0, align 8, !dbg !6223
  call void @llvm.dbg.declare(metadata %struct.DWTCompose** %cs, metadata !6227, metadata !87), !dbg !6228
  %8 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !6229
  %cs3 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %8, i32 0, i32 14, !dbg !6230
  %arraydecay = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs3, i32 0, i32 0, !dbg !6229
  %9 = load i32, i32* %level.addr, align 4, !dbg !6231
  %idx.ext = sext i32 %9 to i64, !dbg !6232
  %add.ptr = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arraydecay, i64 %idx.ext, !dbg !6232
  store %struct.DWTCompose* %add.ptr, %struct.DWTCompose** %cs, align 8, !dbg !6228
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6233, metadata !87), !dbg !6234
  call void @llvm.dbg.declare(metadata i32* %y, metadata !6235, metadata !87), !dbg !6236
  %10 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !6237
  %y4 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %10, i32 0, i32 1, !dbg !6238
  %11 = load i32, i32* %y4, align 8, !dbg !6238
  store i32 %11, i32* %y, align 4, !dbg !6236
  call void @llvm.dbg.declare(metadata [10 x i8*]* %b, metadata !6239, metadata !87), !dbg !6240
  store i32 0, i32* %i, align 4, !dbg !6241
  br label %for.cond, !dbg !6243

for.cond:                                         ; preds = %for.inc, %entry
  %12 = load i32, i32* %i, align 4, !dbg !6244
  %cmp = icmp slt i32 %12, 8, !dbg !6247
  br i1 %cmp, label %for.body, label %for.end, !dbg !6248

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %i, align 4, !dbg !6249
  %idxprom = sext i32 %13 to i64, !dbg !6250
  %14 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !6250
  %b5 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %14, i32 0, i32 0, !dbg !6251
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %b5, i64 0, i64 %idxprom, !dbg !6250
  %15 = load i8*, i8** %arrayidx, align 8, !dbg !6250
  %16 = load i32, i32* %i, align 4, !dbg !6252
  %idxprom6 = sext i32 %16 to i64, !dbg !6253
  %arrayidx7 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 %idxprom6, !dbg !6253
  store i8* %15, i8** %arrayidx7, align 8, !dbg !6254
  br label %for.inc, !dbg !6253

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !6255
  %inc = add nsw i32 %17, 1, !dbg !6255
  store i32 %inc, i32* %i, align 4, !dbg !6255
  br label %for.cond, !dbg !6257, !llvm.loop !6258

for.end:                                          ; preds = %for.cond
  %18 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !6260
  %buffer = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %18, i32 0, i32 0, !dbg !6261
  %19 = load i8*, i8** %buffer, align 8, !dbg !6261
  %20 = load i32, i32* %y, align 4, !dbg !6262
  %add = add nsw i32 %20, 7, !dbg !6263
  %21 = load i32, i32* %height.addr, align 4, !dbg !6264
  %sub = sub nsw i32 %21, 2, !dbg !6265
  store i32 %add, i32* %a.addr.i, align 4, !dbg !6266
  store i32 0, i32* %amin.addr.i, align 4, !dbg !6266
  store i32 %sub, i32* %amax.addr.i, align 4, !dbg !6266
  %22 = load i32, i32* %a.addr.i, align 4, !dbg !6267
  %23 = load i32, i32* %amin.addr.i, align 4, !dbg !6268
  %cmp.i = icmp slt i32 %22, %23, !dbg !6269
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !6270

if.then.i:                                        ; preds = %for.end
  %24 = load i32, i32* %amin.addr.i, align 4, !dbg !6271
  store i32 %24, i32* %retval.i, align 4, !dbg !6272
  br label %av_clip_c.exit, !dbg !6272

if.else.i:                                        ; preds = %for.end
  %25 = load i32, i32* %a.addr.i, align 4, !dbg !6273
  %26 = load i32, i32* %amax.addr.i, align 4, !dbg !6274
  %cmp1.i = icmp sgt i32 %25, %26, !dbg !6275
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !6276

if.then2.i:                                       ; preds = %if.else.i
  %27 = load i32, i32* %amax.addr.i, align 4, !dbg !6277
  store i32 %27, i32* %retval.i, align 4, !dbg !6278
  br label %av_clip_c.exit, !dbg !6278

if.else3.i:                                       ; preds = %if.else.i
  %28 = load i32, i32* %a.addr.i, align 4, !dbg !6279
  store i32 %28, i32* %retval.i, align 4, !dbg !6280
  br label %av_clip_c.exit, !dbg !6280

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %29 = load i32, i32* %retval.i, align 4, !dbg !6281
  %30 = load i32, i32* %stride.addr, align 4, !dbg !6282
  %mul = mul nsw i32 %29, %30, !dbg !6283
  %idx.ext8 = sext i32 %mul to i64, !dbg !6284
  %add.ptr9 = getelementptr inbounds i8, i8* %19, i64 %idx.ext8, !dbg !6284
  %arrayidx10 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 8, !dbg !6285
  store i8* %add.ptr9, i8** %arrayidx10, align 16, !dbg !6286
  %31 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !6287
  %buffer11 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %31, i32 0, i32 0, !dbg !6288
  %32 = load i8*, i8** %buffer11, align 8, !dbg !6288
  %33 = load i32, i32* %y, align 4, !dbg !6289
  %add12 = add nsw i32 %33, 8, !dbg !6290
  %34 = load i32, i32* %height.addr, align 4, !dbg !6291
  %sub13 = sub nsw i32 %34, 1, !dbg !6292
  store i32 %add12, i32* %a.addr.i62, align 4, !dbg !6293
  store i32 1, i32* %amin.addr.i63, align 4, !dbg !6293
  store i32 %sub13, i32* %amax.addr.i64, align 4, !dbg !6293
  %35 = load i32, i32* %a.addr.i62, align 4, !dbg !6294
  %36 = load i32, i32* %amin.addr.i63, align 4, !dbg !6295
  %cmp.i65 = icmp slt i32 %35, %36, !dbg !6296
  br i1 %cmp.i65, label %if.then.i66, label %if.else.i68, !dbg !6297

if.then.i66:                                      ; preds = %av_clip_c.exit
  %37 = load i32, i32* %amin.addr.i63, align 4, !dbg !6298
  store i32 %37, i32* %retval.i61, align 4, !dbg !6299
  br label %av_clip_c.exit71, !dbg !6299

if.else.i68:                                      ; preds = %av_clip_c.exit
  %38 = load i32, i32* %a.addr.i62, align 4, !dbg !6300
  %39 = load i32, i32* %amax.addr.i64, align 4, !dbg !6301
  %cmp1.i67 = icmp sgt i32 %38, %39, !dbg !6302
  br i1 %cmp1.i67, label %if.then2.i69, label %if.else3.i70, !dbg !6303

if.then2.i69:                                     ; preds = %if.else.i68
  %40 = load i32, i32* %amax.addr.i64, align 4, !dbg !6304
  store i32 %40, i32* %retval.i61, align 4, !dbg !6305
  br label %av_clip_c.exit71, !dbg !6305

if.else3.i70:                                     ; preds = %if.else.i68
  %41 = load i32, i32* %a.addr.i62, align 4, !dbg !6306
  store i32 %41, i32* %retval.i61, align 4, !dbg !6307
  br label %av_clip_c.exit71, !dbg !6307

av_clip_c.exit71:                                 ; preds = %if.then.i66, %if.then2.i69, %if.else3.i70
  %42 = load i32, i32* %retval.i61, align 4, !dbg !6308
  %43 = load i32, i32* %stride.addr, align 4, !dbg !6309
  %mul15 = mul nsw i32 %42, %43, !dbg !6310
  %idx.ext16 = sext i32 %mul15 to i64, !dbg !6311
  %add.ptr17 = getelementptr inbounds i8, i8* %32, i64 %idx.ext16, !dbg !6311
  %arrayidx18 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 9, !dbg !6312
  store i8* %add.ptr17, i8** %arrayidx18, align 8, !dbg !6313
  %44 = load i32, i32* %y, align 4, !dbg !6314
  %add19 = add nsw i32 %44, 5, !dbg !6316
  %45 = load i32, i32* %height.addr, align 4, !dbg !6317
  %cmp20 = icmp ult i32 %add19, %45, !dbg !6318
  br i1 %cmp20, label %if.then, label %if.end, !dbg !6319

if.then:                                          ; preds = %av_clip_c.exit71
  %46 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %vertical_compose_l0, align 8, !dbg !6320
  %arrayidx21 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 3, !dbg !6322
  %47 = load i8*, i8** %arrayidx21, align 8, !dbg !6322
  %arrayidx22 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 5, !dbg !6323
  %48 = load i8*, i8** %arrayidx22, align 8, !dbg !6323
  %arrayidx23 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 6, !dbg !6324
  %49 = load i8*, i8** %arrayidx23, align 16, !dbg !6324
  %arrayidx24 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 7, !dbg !6325
  %50 = load i8*, i8** %arrayidx24, align 8, !dbg !6325
  %arrayidx25 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 9, !dbg !6326
  %51 = load i8*, i8** %arrayidx25, align 8, !dbg !6326
  %52 = load i32, i32* %width.addr, align 4, !dbg !6327
  call void %46(i8* %47, i8* %48, i8* %49, i8* %50, i8* %51, i32 %52), !dbg !6320
  br label %if.end, !dbg !6320

if.end:                                           ; preds = %if.then, %av_clip_c.exit71
  %53 = load i32, i32* %y, align 4, !dbg !6328
  %add26 = add nsw i32 %53, 1, !dbg !6330
  %54 = load i32, i32* %height.addr, align 4, !dbg !6331
  %cmp27 = icmp ult i32 %add26, %54, !dbg !6332
  br i1 %cmp27, label %if.then28, label %if.end34, !dbg !6333

if.then28:                                        ; preds = %if.end
  %55 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %vertical_compose_h0, align 8, !dbg !6334
  %arrayidx29 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 0, !dbg !6336
  %56 = load i8*, i8** %arrayidx29, align 16, !dbg !6336
  %arrayidx30 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 2, !dbg !6337
  %57 = load i8*, i8** %arrayidx30, align 16, !dbg !6337
  %arrayidx31 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 3, !dbg !6338
  %58 = load i8*, i8** %arrayidx31, align 8, !dbg !6338
  %arrayidx32 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 4, !dbg !6339
  %59 = load i8*, i8** %arrayidx32, align 16, !dbg !6339
  %arrayidx33 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 6, !dbg !6340
  %60 = load i8*, i8** %arrayidx33, align 16, !dbg !6340
  %61 = load i32, i32* %width.addr, align 4, !dbg !6341
  call void %55(i8* %56, i8* %57, i8* %58, i8* %59, i8* %60, i32 %61), !dbg !6334
  br label %if.end34, !dbg !6334

if.end34:                                         ; preds = %if.then28, %if.end
  %62 = load i32, i32* %y, align 4, !dbg !6342
  %sub35 = sub nsw i32 %62, 1, !dbg !6344
  %63 = load i32, i32* %height.addr, align 4, !dbg !6345
  %cmp36 = icmp ult i32 %sub35, %63, !dbg !6346
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !6347

if.then37:                                        ; preds = %if.end34
  %64 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !6348
  %horizontal_compose = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %64, i32 0, i32 13, !dbg !6350
  %65 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %horizontal_compose, align 8, !dbg !6350
  %arrayidx38 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 0, !dbg !6351
  %66 = load i8*, i8** %arrayidx38, align 16, !dbg !6351
  %67 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !6352
  %temp = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %67, i32 0, i32 1, !dbg !6353
  %68 = load i8*, i8** %temp, align 8, !dbg !6353
  %69 = load i32, i32* %width.addr, align 4, !dbg !6354
  call void %65(i8* %66, i8* %68, i32 %69), !dbg !6348
  br label %if.end39, !dbg !6348

if.end39:                                         ; preds = %if.then37, %if.end34
  %70 = load i32, i32* %y, align 4, !dbg !6355
  %add40 = add nsw i32 %70, 0, !dbg !6357
  %71 = load i32, i32* %height.addr, align 4, !dbg !6358
  %cmp41 = icmp ult i32 %add40, %71, !dbg !6359
  br i1 %cmp41, label %if.then42, label %if.end46, !dbg !6360

if.then42:                                        ; preds = %if.end39
  %72 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !6361
  %horizontal_compose43 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %72, i32 0, i32 13, !dbg !6363
  %73 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %horizontal_compose43, align 8, !dbg !6363
  %arrayidx44 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 1, !dbg !6364
  %74 = load i8*, i8** %arrayidx44, align 8, !dbg !6364
  %75 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !6365
  %temp45 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %75, i32 0, i32 1, !dbg !6366
  %76 = load i8*, i8** %temp45, align 8, !dbg !6366
  %77 = load i32, i32* %width.addr, align 4, !dbg !6367
  call void %73(i8* %74, i8* %76, i32 %77), !dbg !6361
  br label %if.end46, !dbg !6361

if.end46:                                         ; preds = %if.then42, %if.end39
  store i32 0, i32* %i, align 4, !dbg !6368
  br label %for.cond47, !dbg !6370

for.cond47:                                       ; preds = %for.inc56, %if.end46
  %78 = load i32, i32* %i, align 4, !dbg !6371
  %cmp48 = icmp slt i32 %78, 8, !dbg !6374
  br i1 %cmp48, label %for.body49, label %for.end58, !dbg !6375

for.body49:                                       ; preds = %for.cond47
  %79 = load i32, i32* %i, align 4, !dbg !6376
  %add50 = add nsw i32 %79, 2, !dbg !6377
  %idxprom51 = sext i32 %add50 to i64, !dbg !6378
  %arrayidx52 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 %idxprom51, !dbg !6378
  %80 = load i8*, i8** %arrayidx52, align 8, !dbg !6378
  %81 = load i32, i32* %i, align 4, !dbg !6379
  %idxprom53 = sext i32 %81 to i64, !dbg !6380
  %82 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !6380
  %b54 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %82, i32 0, i32 0, !dbg !6381
  %arrayidx55 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b54, i64 0, i64 %idxprom53, !dbg !6380
  store i8* %80, i8** %arrayidx55, align 8, !dbg !6382
  br label %for.inc56, !dbg !6380

for.inc56:                                        ; preds = %for.body49
  %83 = load i32, i32* %i, align 4, !dbg !6383
  %inc57 = add nsw i32 %83, 1, !dbg !6383
  store i32 %inc57, i32* %i, align 4, !dbg !6383
  br label %for.cond47, !dbg !6385, !llvm.loop !6386

for.end58:                                        ; preds = %for.cond47
  %84 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !6388
  %y59 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %84, i32 0, i32 1, !dbg !6389
  %85 = load i32, i32* %y59, align 8, !dbg !6390
  %add60 = add nsw i32 %85, 2, !dbg !6390
  store i32 %add60, i32* %y59, align 8, !dbg !6390
  ret void, !dbg !6391
}

; Function Attrs: nounwind uwtable
define internal void @vertical_compose_dd137iL0_10bit(i8* %_b0, i8* %_b1, i8* %_b2, i8* %_b3, i8* %_b4, i32 %width) #0 !dbg !6392 {
entry:
  %_b0.addr = alloca i8*, align 8
  %_b1.addr = alloca i8*, align 8
  %_b2.addr = alloca i8*, align 8
  %_b3.addr = alloca i8*, align 8
  %_b4.addr = alloca i8*, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %b0 = alloca i32*, align 8
  %b1 = alloca i32*, align 8
  %b2 = alloca i32*, align 8
  %b3 = alloca i32*, align 8
  %b4 = alloca i32*, align 8
  store i8* %_b0, i8** %_b0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b0.addr, metadata !6393, metadata !87), !dbg !6394
  store i8* %_b1, i8** %_b1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b1.addr, metadata !6395, metadata !87), !dbg !6396
  store i8* %_b2, i8** %_b2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b2.addr, metadata !6397, metadata !87), !dbg !6398
  store i8* %_b3, i8** %_b3.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b3.addr, metadata !6399, metadata !87), !dbg !6400
  store i8* %_b4, i8** %_b4.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b4.addr, metadata !6401, metadata !87), !dbg !6402
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !6403, metadata !87), !dbg !6404
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6405, metadata !87), !dbg !6406
  call void @llvm.dbg.declare(metadata i32** %b0, metadata !6407, metadata !87), !dbg !6408
  %0 = load i8*, i8** %_b0.addr, align 8, !dbg !6409
  %1 = bitcast i8* %0 to i32*, !dbg !6410
  store i32* %1, i32** %b0, align 8, !dbg !6408
  call void @llvm.dbg.declare(metadata i32** %b1, metadata !6411, metadata !87), !dbg !6412
  %2 = load i8*, i8** %_b1.addr, align 8, !dbg !6413
  %3 = bitcast i8* %2 to i32*, !dbg !6414
  store i32* %3, i32** %b1, align 8, !dbg !6412
  call void @llvm.dbg.declare(metadata i32** %b2, metadata !6415, metadata !87), !dbg !6416
  %4 = load i8*, i8** %_b2.addr, align 8, !dbg !6417
  %5 = bitcast i8* %4 to i32*, !dbg !6418
  store i32* %5, i32** %b2, align 8, !dbg !6416
  call void @llvm.dbg.declare(metadata i32** %b3, metadata !6419, metadata !87), !dbg !6420
  %6 = load i8*, i8** %_b3.addr, align 8, !dbg !6421
  %7 = bitcast i8* %6 to i32*, !dbg !6422
  store i32* %7, i32** %b3, align 8, !dbg !6420
  call void @llvm.dbg.declare(metadata i32** %b4, metadata !6423, metadata !87), !dbg !6424
  %8 = load i8*, i8** %_b4.addr, align 8, !dbg !6425
  %9 = bitcast i8* %8 to i32*, !dbg !6426
  store i32* %9, i32** %b4, align 8, !dbg !6424
  store i32 0, i32* %i, align 4, !dbg !6427
  br label %for.cond, !dbg !6429

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load i32, i32* %i, align 4, !dbg !6430
  %11 = load i32, i32* %width.addr, align 4, !dbg !6433
  %cmp = icmp slt i32 %10, %11, !dbg !6434
  br i1 %cmp, label %for.body, label %for.end, !dbg !6435

for.body:                                         ; preds = %for.cond
  %12 = load i32, i32* %i, align 4, !dbg !6436
  %idxprom = sext i32 %12 to i64, !dbg !6438
  %13 = load i32*, i32** %b2, align 8, !dbg !6438
  %arrayidx = getelementptr inbounds i32, i32* %13, i64 %idxprom, !dbg !6438
  %14 = load i32, i32* %arrayidx, align 4, !dbg !6438
  %15 = load i32, i32* %i, align 4, !dbg !6439
  %idxprom1 = sext i32 %15 to i64, !dbg !6440
  %16 = load i32*, i32** %b1, align 8, !dbg !6440
  %arrayidx2 = getelementptr inbounds i32, i32* %16, i64 %idxprom1, !dbg !6440
  %17 = load i32, i32* %arrayidx2, align 4, !dbg !6440
  %mul = mul i32 9, %17, !dbg !6441
  %18 = load i32, i32* %i, align 4, !dbg !6442
  %idxprom3 = sext i32 %18 to i64, !dbg !6443
  %19 = load i32*, i32** %b3, align 8, !dbg !6443
  %arrayidx4 = getelementptr inbounds i32, i32* %19, i64 %idxprom3, !dbg !6443
  %20 = load i32, i32* %arrayidx4, align 4, !dbg !6443
  %mul5 = mul i32 9, %20, !dbg !6444
  %add = add i32 %mul, %mul5, !dbg !6445
  %21 = load i32, i32* %i, align 4, !dbg !6446
  %idxprom6 = sext i32 %21 to i64, !dbg !6447
  %22 = load i32*, i32** %b4, align 8, !dbg !6447
  %arrayidx7 = getelementptr inbounds i32, i32* %22, i64 %idxprom6, !dbg !6447
  %23 = load i32, i32* %arrayidx7, align 4, !dbg !6447
  %sub = sub i32 %add, %23, !dbg !6448
  %24 = load i32, i32* %i, align 4, !dbg !6449
  %idxprom8 = sext i32 %24 to i64, !dbg !6450
  %25 = load i32*, i32** %b0, align 8, !dbg !6450
  %arrayidx9 = getelementptr inbounds i32, i32* %25, i64 %idxprom8, !dbg !6450
  %26 = load i32, i32* %arrayidx9, align 4, !dbg !6450
  %sub10 = sub i32 %sub, %26, !dbg !6451
  %add11 = add i32 %sub10, 16, !dbg !6452
  %shr = ashr i32 %add11, 5, !dbg !6453
  %sub12 = sub i32 %14, %shr, !dbg !6454
  %27 = load i32, i32* %i, align 4, !dbg !6455
  %idxprom13 = sext i32 %27 to i64, !dbg !6456
  %28 = load i32*, i32** %b2, align 8, !dbg !6456
  %arrayidx14 = getelementptr inbounds i32, i32* %28, i64 %idxprom13, !dbg !6456
  store i32 %sub12, i32* %arrayidx14, align 4, !dbg !6457
  br label %for.inc, !dbg !6458

for.inc:                                          ; preds = %for.body
  %29 = load i32, i32* %i, align 4, !dbg !6459
  %inc = add nsw i32 %29, 1, !dbg !6459
  store i32 %inc, i32* %i, align 4, !dbg !6459
  br label %for.cond, !dbg !6461, !llvm.loop !6462

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6464
}

; Function Attrs: nounwind uwtable
define internal void @horizontal_compose_dd137i_10bit(i8* %_b, i8* %_tmp, i32 %w) #0 !dbg !6465 {
entry:
  %_b.addr = alloca i8*, align 8
  %_tmp.addr = alloca i8*, align 8
  %w.addr = alloca i32, align 4
  %w2 = alloca i32, align 4
  %x = alloca i32, align 4
  %b = alloca i32*, align 8
  %tmp = alloca i32*, align 8
  store i8* %_b, i8** %_b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b.addr, metadata !6466, metadata !87), !dbg !6467
  store i8* %_tmp, i8** %_tmp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_tmp.addr, metadata !6468, metadata !87), !dbg !6469
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !6470, metadata !87), !dbg !6471
  call void @llvm.dbg.declare(metadata i32* %w2, metadata !6472, metadata !87), !dbg !6473
  %0 = load i32, i32* %w.addr, align 4, !dbg !6474
  %shr = ashr i32 %0, 1, !dbg !6475
  store i32 %shr, i32* %w2, align 4, !dbg !6473
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6476, metadata !87), !dbg !6477
  call void @llvm.dbg.declare(metadata i32** %b, metadata !6478, metadata !87), !dbg !6479
  %1 = load i8*, i8** %_b.addr, align 8, !dbg !6480
  %2 = bitcast i8* %1 to i32*, !dbg !6481
  store i32* %2, i32** %b, align 8, !dbg !6479
  call void @llvm.dbg.declare(metadata i32** %tmp, metadata !6482, metadata !87), !dbg !6483
  %3 = load i8*, i8** %_tmp.addr, align 8, !dbg !6484
  %4 = bitcast i8* %3 to i32*, !dbg !6485
  store i32* %4, i32** %tmp, align 8, !dbg !6483
  %5 = load i32*, i32** %b, align 8, !dbg !6486
  %arrayidx = getelementptr inbounds i32, i32* %5, i64 0, !dbg !6486
  %6 = load i32, i32* %arrayidx, align 4, !dbg !6486
  %7 = load i32, i32* %w2, align 4, !dbg !6487
  %idxprom = sext i32 %7 to i64, !dbg !6488
  %8 = load i32*, i32** %b, align 8, !dbg !6488
  %arrayidx1 = getelementptr inbounds i32, i32* %8, i64 %idxprom, !dbg !6488
  %9 = load i32, i32* %arrayidx1, align 4, !dbg !6488
  %mul = mul i32 9, %9, !dbg !6489
  %10 = load i32, i32* %w2, align 4, !dbg !6490
  %idxprom2 = sext i32 %10 to i64, !dbg !6491
  %11 = load i32*, i32** %b, align 8, !dbg !6491
  %arrayidx3 = getelementptr inbounds i32, i32* %11, i64 %idxprom2, !dbg !6491
  %12 = load i32, i32* %arrayidx3, align 4, !dbg !6491
  %mul4 = mul i32 9, %12, !dbg !6492
  %add = add i32 %mul, %mul4, !dbg !6493
  %13 = load i32, i32* %w2, align 4, !dbg !6494
  %add5 = add nsw i32 %13, 1, !dbg !6495
  %idxprom6 = sext i32 %add5 to i64, !dbg !6496
  %14 = load i32*, i32** %b, align 8, !dbg !6496
  %arrayidx7 = getelementptr inbounds i32, i32* %14, i64 %idxprom6, !dbg !6496
  %15 = load i32, i32* %arrayidx7, align 4, !dbg !6496
  %sub = sub i32 %add, %15, !dbg !6497
  %16 = load i32, i32* %w2, align 4, !dbg !6498
  %idxprom8 = sext i32 %16 to i64, !dbg !6499
  %17 = load i32*, i32** %b, align 8, !dbg !6499
  %arrayidx9 = getelementptr inbounds i32, i32* %17, i64 %idxprom8, !dbg !6499
  %18 = load i32, i32* %arrayidx9, align 4, !dbg !6499
  %sub10 = sub i32 %sub, %18, !dbg !6500
  %add11 = add i32 %sub10, 16, !dbg !6501
  %shr12 = ashr i32 %add11, 5, !dbg !6502
  %sub13 = sub i32 %6, %shr12, !dbg !6503
  %19 = load i32*, i32** %tmp, align 8, !dbg !6504
  %arrayidx14 = getelementptr inbounds i32, i32* %19, i64 0, !dbg !6504
  store i32 %sub13, i32* %arrayidx14, align 4, !dbg !6505
  %20 = load i32*, i32** %b, align 8, !dbg !6506
  %arrayidx15 = getelementptr inbounds i32, i32* %20, i64 1, !dbg !6506
  %21 = load i32, i32* %arrayidx15, align 4, !dbg !6506
  %22 = load i32, i32* %w2, align 4, !dbg !6507
  %idxprom16 = sext i32 %22 to i64, !dbg !6508
  %23 = load i32*, i32** %b, align 8, !dbg !6508
  %arrayidx17 = getelementptr inbounds i32, i32* %23, i64 %idxprom16, !dbg !6508
  %24 = load i32, i32* %arrayidx17, align 4, !dbg !6508
  %mul18 = mul i32 9, %24, !dbg !6509
  %25 = load i32, i32* %w2, align 4, !dbg !6510
  %add19 = add nsw i32 %25, 1, !dbg !6511
  %idxprom20 = sext i32 %add19 to i64, !dbg !6512
  %26 = load i32*, i32** %b, align 8, !dbg !6512
  %arrayidx21 = getelementptr inbounds i32, i32* %26, i64 %idxprom20, !dbg !6512
  %27 = load i32, i32* %arrayidx21, align 4, !dbg !6512
  %mul22 = mul i32 9, %27, !dbg !6513
  %add23 = add i32 %mul18, %mul22, !dbg !6514
  %28 = load i32, i32* %w2, align 4, !dbg !6515
  %add24 = add nsw i32 %28, 2, !dbg !6516
  %idxprom25 = sext i32 %add24 to i64, !dbg !6517
  %29 = load i32*, i32** %b, align 8, !dbg !6517
  %arrayidx26 = getelementptr inbounds i32, i32* %29, i64 %idxprom25, !dbg !6517
  %30 = load i32, i32* %arrayidx26, align 4, !dbg !6517
  %sub27 = sub i32 %add23, %30, !dbg !6518
  %31 = load i32, i32* %w2, align 4, !dbg !6519
  %idxprom28 = sext i32 %31 to i64, !dbg !6520
  %32 = load i32*, i32** %b, align 8, !dbg !6520
  %arrayidx29 = getelementptr inbounds i32, i32* %32, i64 %idxprom28, !dbg !6520
  %33 = load i32, i32* %arrayidx29, align 4, !dbg !6520
  %sub30 = sub i32 %sub27, %33, !dbg !6521
  %add31 = add i32 %sub30, 16, !dbg !6522
  %shr32 = ashr i32 %add31, 5, !dbg !6523
  %sub33 = sub i32 %21, %shr32, !dbg !6524
  %34 = load i32*, i32** %tmp, align 8, !dbg !6525
  %arrayidx34 = getelementptr inbounds i32, i32* %34, i64 1, !dbg !6525
  store i32 %sub33, i32* %arrayidx34, align 4, !dbg !6526
  store i32 2, i32* %x, align 4, !dbg !6527
  br label %for.cond, !dbg !6529

for.cond:                                         ; preds = %for.inc, %entry
  %35 = load i32, i32* %x, align 4, !dbg !6530
  %36 = load i32, i32* %w2, align 4, !dbg !6533
  %sub35 = sub nsw i32 %36, 1, !dbg !6534
  %cmp = icmp slt i32 %35, %sub35, !dbg !6535
  br i1 %cmp, label %for.body, label %for.end, !dbg !6536

for.body:                                         ; preds = %for.cond
  %37 = load i32, i32* %x, align 4, !dbg !6537
  %idxprom36 = sext i32 %37 to i64, !dbg !6538
  %38 = load i32*, i32** %b, align 8, !dbg !6538
  %arrayidx37 = getelementptr inbounds i32, i32* %38, i64 %idxprom36, !dbg !6538
  %39 = load i32, i32* %arrayidx37, align 4, !dbg !6538
  %40 = load i32, i32* %x, align 4, !dbg !6539
  %41 = load i32, i32* %w2, align 4, !dbg !6540
  %add38 = add nsw i32 %40, %41, !dbg !6541
  %sub39 = sub nsw i32 %add38, 1, !dbg !6542
  %idxprom40 = sext i32 %sub39 to i64, !dbg !6543
  %42 = load i32*, i32** %b, align 8, !dbg !6543
  %arrayidx41 = getelementptr inbounds i32, i32* %42, i64 %idxprom40, !dbg !6543
  %43 = load i32, i32* %arrayidx41, align 4, !dbg !6543
  %mul42 = mul i32 9, %43, !dbg !6544
  %44 = load i32, i32* %x, align 4, !dbg !6545
  %45 = load i32, i32* %w2, align 4, !dbg !6546
  %add43 = add nsw i32 %44, %45, !dbg !6547
  %idxprom44 = sext i32 %add43 to i64, !dbg !6548
  %46 = load i32*, i32** %b, align 8, !dbg !6548
  %arrayidx45 = getelementptr inbounds i32, i32* %46, i64 %idxprom44, !dbg !6548
  %47 = load i32, i32* %arrayidx45, align 4, !dbg !6548
  %mul46 = mul i32 9, %47, !dbg !6549
  %add47 = add i32 %mul42, %mul46, !dbg !6550
  %48 = load i32, i32* %x, align 4, !dbg !6551
  %49 = load i32, i32* %w2, align 4, !dbg !6552
  %add48 = add nsw i32 %48, %49, !dbg !6553
  %add49 = add nsw i32 %add48, 1, !dbg !6554
  %idxprom50 = sext i32 %add49 to i64, !dbg !6555
  %50 = load i32*, i32** %b, align 8, !dbg !6555
  %arrayidx51 = getelementptr inbounds i32, i32* %50, i64 %idxprom50, !dbg !6555
  %51 = load i32, i32* %arrayidx51, align 4, !dbg !6555
  %sub52 = sub i32 %add47, %51, !dbg !6556
  %52 = load i32, i32* %x, align 4, !dbg !6557
  %53 = load i32, i32* %w2, align 4, !dbg !6558
  %add53 = add nsw i32 %52, %53, !dbg !6559
  %sub54 = sub nsw i32 %add53, 2, !dbg !6560
  %idxprom55 = sext i32 %sub54 to i64, !dbg !6561
  %54 = load i32*, i32** %b, align 8, !dbg !6561
  %arrayidx56 = getelementptr inbounds i32, i32* %54, i64 %idxprom55, !dbg !6561
  %55 = load i32, i32* %arrayidx56, align 4, !dbg !6561
  %sub57 = sub i32 %sub52, %55, !dbg !6562
  %add58 = add i32 %sub57, 16, !dbg !6563
  %shr59 = ashr i32 %add58, 5, !dbg !6564
  %sub60 = sub i32 %39, %shr59, !dbg !6565
  %56 = load i32, i32* %x, align 4, !dbg !6566
  %idxprom61 = sext i32 %56 to i64, !dbg !6567
  %57 = load i32*, i32** %tmp, align 8, !dbg !6567
  %arrayidx62 = getelementptr inbounds i32, i32* %57, i64 %idxprom61, !dbg !6567
  store i32 %sub60, i32* %arrayidx62, align 4, !dbg !6568
  br label %for.inc, !dbg !6567

for.inc:                                          ; preds = %for.body
  %58 = load i32, i32* %x, align 4, !dbg !6569
  %inc = add nsw i32 %58, 1, !dbg !6569
  store i32 %inc, i32* %x, align 4, !dbg !6569
  br label %for.cond, !dbg !6571, !llvm.loop !6572

for.end:                                          ; preds = %for.cond
  %59 = load i32, i32* %w2, align 4, !dbg !6574
  %sub63 = sub nsw i32 %59, 1, !dbg !6575
  %idxprom64 = sext i32 %sub63 to i64, !dbg !6576
  %60 = load i32*, i32** %b, align 8, !dbg !6576
  %arrayidx65 = getelementptr inbounds i32, i32* %60, i64 %idxprom64, !dbg !6576
  %61 = load i32, i32* %arrayidx65, align 4, !dbg !6576
  %62 = load i32, i32* %w.addr, align 4, !dbg !6577
  %sub66 = sub nsw i32 %62, 2, !dbg !6578
  %idxprom67 = sext i32 %sub66 to i64, !dbg !6579
  %63 = load i32*, i32** %b, align 8, !dbg !6579
  %arrayidx68 = getelementptr inbounds i32, i32* %63, i64 %idxprom67, !dbg !6579
  %64 = load i32, i32* %arrayidx68, align 4, !dbg !6579
  %mul69 = mul i32 9, %64, !dbg !6580
  %65 = load i32, i32* %w.addr, align 4, !dbg !6581
  %sub70 = sub nsw i32 %65, 1, !dbg !6582
  %idxprom71 = sext i32 %sub70 to i64, !dbg !6583
  %66 = load i32*, i32** %b, align 8, !dbg !6583
  %arrayidx72 = getelementptr inbounds i32, i32* %66, i64 %idxprom71, !dbg !6583
  %67 = load i32, i32* %arrayidx72, align 4, !dbg !6583
  %mul73 = mul i32 9, %67, !dbg !6584
  %add74 = add i32 %mul69, %mul73, !dbg !6585
  %68 = load i32, i32* %w.addr, align 4, !dbg !6586
  %sub75 = sub nsw i32 %68, 1, !dbg !6587
  %idxprom76 = sext i32 %sub75 to i64, !dbg !6588
  %69 = load i32*, i32** %b, align 8, !dbg !6588
  %arrayidx77 = getelementptr inbounds i32, i32* %69, i64 %idxprom76, !dbg !6588
  %70 = load i32, i32* %arrayidx77, align 4, !dbg !6588
  %sub78 = sub i32 %add74, %70, !dbg !6589
  %71 = load i32, i32* %w.addr, align 4, !dbg !6590
  %sub79 = sub nsw i32 %71, 3, !dbg !6591
  %idxprom80 = sext i32 %sub79 to i64, !dbg !6592
  %72 = load i32*, i32** %b, align 8, !dbg !6592
  %arrayidx81 = getelementptr inbounds i32, i32* %72, i64 %idxprom80, !dbg !6592
  %73 = load i32, i32* %arrayidx81, align 4, !dbg !6592
  %sub82 = sub i32 %sub78, %73, !dbg !6593
  %add83 = add i32 %sub82, 16, !dbg !6594
  %shr84 = ashr i32 %add83, 5, !dbg !6595
  %sub85 = sub i32 %61, %shr84, !dbg !6596
  %74 = load i32, i32* %w2, align 4, !dbg !6597
  %sub86 = sub nsw i32 %74, 1, !dbg !6598
  %idxprom87 = sext i32 %sub86 to i64, !dbg !6599
  %75 = load i32*, i32** %tmp, align 8, !dbg !6599
  %arrayidx88 = getelementptr inbounds i32, i32* %75, i64 %idxprom87, !dbg !6599
  store i32 %sub85, i32* %arrayidx88, align 4, !dbg !6600
  %76 = load i32*, i32** %tmp, align 8, !dbg !6601
  %arrayidx89 = getelementptr inbounds i32, i32* %76, i64 0, !dbg !6601
  %77 = load i32, i32* %arrayidx89, align 4, !dbg !6601
  %78 = load i32*, i32** %tmp, align 8, !dbg !6602
  %arrayidx90 = getelementptr inbounds i32, i32* %78, i64 -1, !dbg !6602
  store i32 %77, i32* %arrayidx90, align 4, !dbg !6603
  %79 = load i32, i32* %w2, align 4, !dbg !6604
  %sub91 = sub nsw i32 %79, 1, !dbg !6605
  %idxprom92 = sext i32 %sub91 to i64, !dbg !6606
  %80 = load i32*, i32** %tmp, align 8, !dbg !6606
  %arrayidx93 = getelementptr inbounds i32, i32* %80, i64 %idxprom92, !dbg !6606
  %81 = load i32, i32* %arrayidx93, align 4, !dbg !6606
  %82 = load i32, i32* %w2, align 4, !dbg !6607
  %idxprom94 = sext i32 %82 to i64, !dbg !6608
  %83 = load i32*, i32** %tmp, align 8, !dbg !6608
  %arrayidx95 = getelementptr inbounds i32, i32* %83, i64 %idxprom94, !dbg !6608
  store i32 %81, i32* %arrayidx95, align 4, !dbg !6609
  %84 = load i32, i32* %w2, align 4, !dbg !6610
  %add96 = add nsw i32 %84, 1, !dbg !6611
  %idxprom97 = sext i32 %add96 to i64, !dbg !6612
  %85 = load i32*, i32** %tmp, align 8, !dbg !6612
  %arrayidx98 = getelementptr inbounds i32, i32* %85, i64 %idxprom97, !dbg !6612
  store i32 %81, i32* %arrayidx98, align 4, !dbg !6613
  store i32 0, i32* %x, align 4, !dbg !6614
  br label %for.cond99, !dbg !6616

for.cond99:                                       ; preds = %for.inc137, %for.end
  %86 = load i32, i32* %x, align 4, !dbg !6617
  %87 = load i32, i32* %w2, align 4, !dbg !6620
  %cmp100 = icmp slt i32 %86, %87, !dbg !6621
  br i1 %cmp100, label %for.body101, label %for.end139, !dbg !6622

for.body101:                                      ; preds = %for.cond99
  %88 = load i32, i32* %x, align 4, !dbg !6623
  %idxprom102 = sext i32 %88 to i64, !dbg !6625
  %89 = load i32*, i32** %tmp, align 8, !dbg !6625
  %arrayidx103 = getelementptr inbounds i32, i32* %89, i64 %idxprom102, !dbg !6625
  %90 = load i32, i32* %arrayidx103, align 4, !dbg !6625
  %add104 = add i32 %90, 1, !dbg !6626
  %shr105 = ashr i32 %add104, 1, !dbg !6627
  %91 = load i32, i32* %x, align 4, !dbg !6628
  %mul106 = mul nsw i32 2, %91, !dbg !6629
  %idxprom107 = sext i32 %mul106 to i64, !dbg !6630
  %92 = load i32*, i32** %b, align 8, !dbg !6630
  %arrayidx108 = getelementptr inbounds i32, i32* %92, i64 %idxprom107, !dbg !6630
  store i32 %shr105, i32* %arrayidx108, align 4, !dbg !6631
  %93 = load i32, i32* %x, align 4, !dbg !6632
  %94 = load i32, i32* %w2, align 4, !dbg !6633
  %add109 = add nsw i32 %93, %94, !dbg !6634
  %idxprom110 = sext i32 %add109 to i64, !dbg !6635
  %95 = load i32*, i32** %b, align 8, !dbg !6635
  %arrayidx111 = getelementptr inbounds i32, i32* %95, i64 %idxprom110, !dbg !6635
  %96 = load i32, i32* %arrayidx111, align 4, !dbg !6635
  %97 = load i32, i32* %x, align 4, !dbg !6636
  %idxprom112 = sext i32 %97 to i64, !dbg !6637
  %98 = load i32*, i32** %tmp, align 8, !dbg !6637
  %arrayidx113 = getelementptr inbounds i32, i32* %98, i64 %idxprom112, !dbg !6637
  %99 = load i32, i32* %arrayidx113, align 4, !dbg !6637
  %mul114 = mul i32 9, %99, !dbg !6638
  %100 = load i32, i32* %x, align 4, !dbg !6639
  %add115 = add nsw i32 %100, 1, !dbg !6640
  %idxprom116 = sext i32 %add115 to i64, !dbg !6641
  %101 = load i32*, i32** %tmp, align 8, !dbg !6641
  %arrayidx117 = getelementptr inbounds i32, i32* %101, i64 %idxprom116, !dbg !6641
  %102 = load i32, i32* %arrayidx117, align 4, !dbg !6641
  %mul118 = mul i32 9, %102, !dbg !6642
  %add119 = add i32 %mul114, %mul118, !dbg !6643
  %103 = load i32, i32* %x, align 4, !dbg !6644
  %add120 = add nsw i32 %103, 2, !dbg !6645
  %idxprom121 = sext i32 %add120 to i64, !dbg !6646
  %104 = load i32*, i32** %tmp, align 8, !dbg !6646
  %arrayidx122 = getelementptr inbounds i32, i32* %104, i64 %idxprom121, !dbg !6646
  %105 = load i32, i32* %arrayidx122, align 4, !dbg !6646
  %sub123 = sub i32 %add119, %105, !dbg !6647
  %106 = load i32, i32* %x, align 4, !dbg !6648
  %sub124 = sub nsw i32 %106, 1, !dbg !6649
  %idxprom125 = sext i32 %sub124 to i64, !dbg !6650
  %107 = load i32*, i32** %tmp, align 8, !dbg !6650
  %arrayidx126 = getelementptr inbounds i32, i32* %107, i64 %idxprom125, !dbg !6650
  %108 = load i32, i32* %arrayidx126, align 4, !dbg !6650
  %sub127 = sub i32 %sub123, %108, !dbg !6651
  %add128 = add i32 %sub127, 8, !dbg !6652
  %shr129 = ashr i32 %add128, 4, !dbg !6653
  %add130 = add i32 %96, %shr129, !dbg !6654
  %add131 = add i32 %add130, 1, !dbg !6655
  %shr132 = ashr i32 %add131, 1, !dbg !6656
  %109 = load i32, i32* %x, align 4, !dbg !6657
  %mul133 = mul nsw i32 2, %109, !dbg !6658
  %add134 = add nsw i32 %mul133, 1, !dbg !6659
  %idxprom135 = sext i32 %add134 to i64, !dbg !6660
  %110 = load i32*, i32** %b, align 8, !dbg !6660
  %arrayidx136 = getelementptr inbounds i32, i32* %110, i64 %idxprom135, !dbg !6660
  store i32 %shr132, i32* %arrayidx136, align 4, !dbg !6661
  br label %for.inc137, !dbg !6662

for.inc137:                                       ; preds = %for.body101
  %111 = load i32, i32* %x, align 4, !dbg !6663
  %inc138 = add nsw i32 %111, 1, !dbg !6663
  store i32 %inc138, i32* %x, align 4, !dbg !6663
  br label %for.cond99, !dbg !6665, !llvm.loop !6666

for.end139:                                       ; preds = %for.cond99
  ret void, !dbg !6668
}

; Function Attrs: nounwind uwtable
define internal void @spatial_compose_haari_dy_10bit(%struct.DWTContext* %d, i32 %level, i32 %width, i32 %height, i32 %stride) #0 !dbg !6669 {
entry:
  %d.addr = alloca %struct.DWTContext*, align 8
  %level.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  %vertical_compose = alloca void (i8*, i8*, i32)*, align 8
  %y = alloca i32, align 4
  %b0 = alloca i8*, align 8
  %b1 = alloca i8*, align 8
  store %struct.DWTContext* %d, %struct.DWTContext** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTContext** %d.addr, metadata !6670, metadata !87), !dbg !6671
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !6672, metadata !87), !dbg !6673
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !6674, metadata !87), !dbg !6675
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !6676, metadata !87), !dbg !6677
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !6678, metadata !87), !dbg !6679
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i32)** %vertical_compose, metadata !6680, metadata !87), !dbg !6681
  %0 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !6682
  %vertical_compose1 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %0, i32 0, i32 12, !dbg !6683
  %1 = load void ()*, void ()** %vertical_compose1, align 8, !dbg !6683
  %2 = bitcast void ()* %1 to i8*, !dbg !6684
  %3 = bitcast i8* %2 to void (i8*, i8*, i32)*, !dbg !6684
  store void (i8*, i8*, i32)* %3, void (i8*, i8*, i32)** %vertical_compose, align 8, !dbg !6681
  call void @llvm.dbg.declare(metadata i32* %y, metadata !6685, metadata !87), !dbg !6686
  %4 = load i32, i32* %level.addr, align 4, !dbg !6687
  %idxprom = sext i32 %4 to i64, !dbg !6688
  %5 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !6688
  %cs = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %5, i32 0, i32 14, !dbg !6689
  %arrayidx = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs, i64 0, i64 %idxprom, !dbg !6688
  %y2 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arrayidx, i32 0, i32 1, !dbg !6690
  %6 = load i32, i32* %y2, align 8, !dbg !6690
  store i32 %6, i32* %y, align 4, !dbg !6686
  call void @llvm.dbg.declare(metadata i8** %b0, metadata !6691, metadata !87), !dbg !6692
  %7 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !6693
  %buffer = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %7, i32 0, i32 0, !dbg !6694
  %8 = load i8*, i8** %buffer, align 8, !dbg !6694
  %9 = load i32, i32* %y, align 4, !dbg !6695
  %sub = sub nsw i32 %9, 1, !dbg !6696
  %10 = load i32, i32* %stride.addr, align 4, !dbg !6697
  %mul = mul nsw i32 %sub, %10, !dbg !6698
  %idx.ext = sext i32 %mul to i64, !dbg !6699
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext, !dbg !6699
  store i8* %add.ptr, i8** %b0, align 8, !dbg !6692
  call void @llvm.dbg.declare(metadata i8** %b1, metadata !6700, metadata !87), !dbg !6701
  %11 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !6702
  %buffer3 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %11, i32 0, i32 0, !dbg !6703
  %12 = load i8*, i8** %buffer3, align 8, !dbg !6703
  %13 = load i32, i32* %y, align 4, !dbg !6704
  %14 = load i32, i32* %stride.addr, align 4, !dbg !6705
  %mul4 = mul nsw i32 %13, %14, !dbg !6706
  %idx.ext5 = sext i32 %mul4 to i64, !dbg !6707
  %add.ptr6 = getelementptr inbounds i8, i8* %12, i64 %idx.ext5, !dbg !6707
  store i8* %add.ptr6, i8** %b1, align 8, !dbg !6701
  %15 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %vertical_compose, align 8, !dbg !6708
  %16 = load i8*, i8** %b0, align 8, !dbg !6709
  %17 = load i8*, i8** %b1, align 8, !dbg !6710
  %18 = load i32, i32* %width.addr, align 4, !dbg !6711
  call void %15(i8* %16, i8* %17, i32 %18), !dbg !6708
  %19 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !6712
  %horizontal_compose = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %19, i32 0, i32 13, !dbg !6713
  %20 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %horizontal_compose, align 8, !dbg !6713
  %21 = load i8*, i8** %b0, align 8, !dbg !6714
  %22 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !6715
  %temp = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %22, i32 0, i32 1, !dbg !6716
  %23 = load i8*, i8** %temp, align 8, !dbg !6716
  %24 = load i32, i32* %width.addr, align 4, !dbg !6717
  call void %20(i8* %21, i8* %23, i32 %24), !dbg !6712
  %25 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !6718
  %horizontal_compose7 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %25, i32 0, i32 13, !dbg !6719
  %26 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %horizontal_compose7, align 8, !dbg !6719
  %27 = load i8*, i8** %b1, align 8, !dbg !6720
  %28 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !6721
  %temp8 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %28, i32 0, i32 1, !dbg !6722
  %29 = load i8*, i8** %temp8, align 8, !dbg !6722
  %30 = load i32, i32* %width.addr, align 4, !dbg !6723
  call void %26(i8* %27, i8* %29, i32 %30), !dbg !6718
  %31 = load i32, i32* %level.addr, align 4, !dbg !6724
  %idxprom9 = sext i32 %31 to i64, !dbg !6725
  %32 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !6725
  %cs10 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %32, i32 0, i32 14, !dbg !6726
  %arrayidx11 = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs10, i64 0, i64 %idxprom9, !dbg !6725
  %y12 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arrayidx11, i32 0, i32 1, !dbg !6727
  %33 = load i32, i32* %y12, align 8, !dbg !6728
  %add = add nsw i32 %33, 2, !dbg !6728
  store i32 %add, i32* %y12, align 8, !dbg !6728
  ret void, !dbg !6729
}

; Function Attrs: nounwind uwtable
define internal void @vertical_compose_haar_10bit(i8* %_b0, i8* %_b1, i32 %width) #0 !dbg !6730 {
entry:
  %_b0.addr = alloca i8*, align 8
  %_b1.addr = alloca i8*, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %b0 = alloca i32*, align 8
  %b1 = alloca i32*, align 8
  store i8* %_b0, i8** %_b0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b0.addr, metadata !6731, metadata !87), !dbg !6732
  store i8* %_b1, i8** %_b1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b1.addr, metadata !6733, metadata !87), !dbg !6734
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !6735, metadata !87), !dbg !6736
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6737, metadata !87), !dbg !6738
  call void @llvm.dbg.declare(metadata i32** %b0, metadata !6739, metadata !87), !dbg !6740
  %0 = load i8*, i8** %_b0.addr, align 8, !dbg !6741
  %1 = bitcast i8* %0 to i32*, !dbg !6742
  store i32* %1, i32** %b0, align 8, !dbg !6740
  call void @llvm.dbg.declare(metadata i32** %b1, metadata !6743, metadata !87), !dbg !6744
  %2 = load i8*, i8** %_b1.addr, align 8, !dbg !6745
  %3 = bitcast i8* %2 to i32*, !dbg !6746
  store i32* %3, i32** %b1, align 8, !dbg !6744
  store i32 0, i32* %i, align 4, !dbg !6747
  br label %for.cond, !dbg !6749

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !6750
  %5 = load i32, i32* %width.addr, align 4, !dbg !6753
  %cmp = icmp slt i32 %4, %5, !dbg !6754
  br i1 %cmp, label %for.body, label %for.end, !dbg !6755

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !6756
  %idxprom = sext i32 %6 to i64, !dbg !6758
  %7 = load i32*, i32** %b0, align 8, !dbg !6758
  %arrayidx = getelementptr inbounds i32, i32* %7, i64 %idxprom, !dbg !6758
  %8 = load i32, i32* %arrayidx, align 4, !dbg !6758
  %9 = load i32, i32* %i, align 4, !dbg !6759
  %idxprom1 = sext i32 %9 to i64, !dbg !6760
  %10 = load i32*, i32** %b1, align 8, !dbg !6760
  %arrayidx2 = getelementptr inbounds i32, i32* %10, i64 %idxprom1, !dbg !6760
  %11 = load i32, i32* %arrayidx2, align 4, !dbg !6760
  %add = add i32 %11, 1, !dbg !6761
  %shr = ashr i32 %add, 1, !dbg !6762
  %sub = sub i32 %8, %shr, !dbg !6763
  %12 = load i32, i32* %i, align 4, !dbg !6764
  %idxprom3 = sext i32 %12 to i64, !dbg !6765
  %13 = load i32*, i32** %b0, align 8, !dbg !6765
  %arrayidx4 = getelementptr inbounds i32, i32* %13, i64 %idxprom3, !dbg !6765
  store i32 %sub, i32* %arrayidx4, align 4, !dbg !6766
  %14 = load i32, i32* %i, align 4, !dbg !6767
  %idxprom5 = sext i32 %14 to i64, !dbg !6768
  %15 = load i32*, i32** %b1, align 8, !dbg !6768
  %arrayidx6 = getelementptr inbounds i32, i32* %15, i64 %idxprom5, !dbg !6768
  %16 = load i32, i32* %arrayidx6, align 4, !dbg !6768
  %17 = load i32, i32* %i, align 4, !dbg !6769
  %idxprom7 = sext i32 %17 to i64, !dbg !6770
  %18 = load i32*, i32** %b0, align 8, !dbg !6770
  %arrayidx8 = getelementptr inbounds i32, i32* %18, i64 %idxprom7, !dbg !6770
  %19 = load i32, i32* %arrayidx8, align 4, !dbg !6770
  %add9 = add i32 %16, %19, !dbg !6771
  %20 = load i32, i32* %i, align 4, !dbg !6772
  %idxprom10 = sext i32 %20 to i64, !dbg !6773
  %21 = load i32*, i32** %b1, align 8, !dbg !6773
  %arrayidx11 = getelementptr inbounds i32, i32* %21, i64 %idxprom10, !dbg !6773
  store i32 %add9, i32* %arrayidx11, align 4, !dbg !6774
  br label %for.inc, !dbg !6775

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %i, align 4, !dbg !6776
  %inc = add nsw i32 %22, 1, !dbg !6776
  store i32 %inc, i32* %i, align 4, !dbg !6776
  br label %for.cond, !dbg !6778, !llvm.loop !6779

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6781
}

; Function Attrs: nounwind uwtable
define internal void @horizontal_compose_haar0i_10bit(i8* %_b, i8* %_temp, i32 %w) #0 !dbg !6782 {
entry:
  %dst.addr.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %dst.addr.i.i, metadata !6034, metadata !87), !dbg !6783
  %src0.addr.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %src0.addr.i.i, metadata !6040, metadata !87), !dbg !6789
  %src1.addr.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %src1.addr.i.i, metadata !6042, metadata !87), !dbg !6790
  %w2.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w2.addr.i.i, metadata !6044, metadata !87), !dbg !6791
  %add.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %add.addr.i.i, metadata !6046, metadata !87), !dbg !6792
  %shift.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %shift.addr.i.i, metadata !6048, metadata !87), !dbg !6793
  %i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i.i, metadata !6050, metadata !87), !dbg !6794
  %b.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %b.addr.i, metadata !6795, metadata !87), !dbg !6796
  %temp.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %temp.addr.i, metadata !6797, metadata !87), !dbg !6798
  %w.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i, metadata !6799, metadata !87), !dbg !6800
  %shift.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %shift.addr.i, metadata !6801, metadata !87), !dbg !6802
  %w2.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w2.i, metadata !6803, metadata !87), !dbg !6804
  %x.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.i, metadata !6805, metadata !87), !dbg !6806
  %_b.addr = alloca i8*, align 8
  %_temp.addr = alloca i8*, align 8
  %w.addr = alloca i32, align 4
  %b = alloca i32*, align 8
  %temp = alloca i32*, align 8
  store i8* %_b, i8** %_b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b.addr, metadata !6807, metadata !87), !dbg !6808
  store i8* %_temp, i8** %_temp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_temp.addr, metadata !6809, metadata !87), !dbg !6810
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !6811, metadata !87), !dbg !6812
  call void @llvm.dbg.declare(metadata i32** %b, metadata !6813, metadata !87), !dbg !6814
  %0 = load i8*, i8** %_b.addr, align 8, !dbg !6815
  %1 = bitcast i8* %0 to i32*, !dbg !6816
  store i32* %1, i32** %b, align 8, !dbg !6814
  call void @llvm.dbg.declare(metadata i32** %temp, metadata !6817, metadata !87), !dbg !6818
  %2 = load i8*, i8** %_temp.addr, align 8, !dbg !6819
  %3 = bitcast i8* %2 to i32*, !dbg !6820
  store i32* %3, i32** %temp, align 8, !dbg !6818
  %4 = load i32*, i32** %b, align 8, !dbg !6821
  %5 = load i32*, i32** %temp, align 8, !dbg !6822
  %6 = load i32, i32* %w.addr, align 4, !dbg !6823
  store i32* %4, i32** %b.addr.i, align 8, !dbg !6824
  store i32* %5, i32** %temp.addr.i, align 8, !dbg !6824
  store i32 %6, i32* %w.addr.i, align 4, !dbg !6824
  store i32 0, i32* %shift.addr.i, align 4, !dbg !6824
  %7 = load i32, i32* %w.addr.i, align 4, !dbg !6825
  %shr.i = ashr i32 %7, 1, !dbg !6826
  store i32 %shr.i, i32* %w2.i, align 4, !dbg !6804
  store i32 0, i32* %x.i, align 4, !dbg !6827
  br label %for.cond.i, !dbg !6829

for.cond.i:                                       ; preds = %for.body.i, %entry
  %8 = load i32, i32* %x.i, align 4, !dbg !6830
  %9 = load i32, i32* %w2.i, align 4, !dbg !6833
  %cmp.i = icmp slt i32 %8, %9, !dbg !6834
  br i1 %cmp.i, label %for.body.i, label %for.end.i, !dbg !6835

for.body.i:                                       ; preds = %for.cond.i
  %10 = load i32, i32* %x.i, align 4, !dbg !6836
  %idxprom.i = sext i32 %10 to i64, !dbg !6838
  %11 = load i32*, i32** %b.addr.i, align 8, !dbg !6838
  %arrayidx.i = getelementptr inbounds i32, i32* %11, i64 %idxprom.i, !dbg !6838
  %12 = load i32, i32* %arrayidx.i, align 4, !dbg !6838
  %13 = load i32, i32* %x.i, align 4, !dbg !6839
  %14 = load i32, i32* %w2.i, align 4, !dbg !6840
  %add.i = add nsw i32 %13, %14, !dbg !6841
  %idxprom1.i = sext i32 %add.i to i64, !dbg !6842
  %15 = load i32*, i32** %b.addr.i, align 8, !dbg !6842
  %arrayidx2.i = getelementptr inbounds i32, i32* %15, i64 %idxprom1.i, !dbg !6842
  %16 = load i32, i32* %arrayidx2.i, align 4, !dbg !6842
  %add3.i = add i32 %16, 1, !dbg !6843
  %shr4.i = ashr i32 %add3.i, 1, !dbg !6844
  %sub.i = sub i32 %12, %shr4.i, !dbg !6845
  %17 = load i32, i32* %x.i, align 4, !dbg !6846
  %idxprom5.i = sext i32 %17 to i64, !dbg !6847
  %18 = load i32*, i32** %temp.addr.i, align 8, !dbg !6847
  %arrayidx6.i = getelementptr inbounds i32, i32* %18, i64 %idxprom5.i, !dbg !6847
  store i32 %sub.i, i32* %arrayidx6.i, align 4, !dbg !6848
  %19 = load i32, i32* %x.i, align 4, !dbg !6849
  %20 = load i32, i32* %w2.i, align 4, !dbg !6850
  %add7.i = add nsw i32 %19, %20, !dbg !6851
  %idxprom8.i = sext i32 %add7.i to i64, !dbg !6852
  %21 = load i32*, i32** %b.addr.i, align 8, !dbg !6852
  %arrayidx9.i = getelementptr inbounds i32, i32* %21, i64 %idxprom8.i, !dbg !6852
  %22 = load i32, i32* %arrayidx9.i, align 4, !dbg !6852
  %23 = load i32, i32* %x.i, align 4, !dbg !6853
  %idxprom10.i = sext i32 %23 to i64, !dbg !6854
  %24 = load i32*, i32** %temp.addr.i, align 8, !dbg !6854
  %arrayidx11.i = getelementptr inbounds i32, i32* %24, i64 %idxprom10.i, !dbg !6854
  %25 = load i32, i32* %arrayidx11.i, align 4, !dbg !6854
  %add12.i = add i32 %22, %25, !dbg !6855
  %26 = load i32, i32* %x.i, align 4, !dbg !6856
  %27 = load i32, i32* %w2.i, align 4, !dbg !6857
  %add13.i = add nsw i32 %26, %27, !dbg !6858
  %idxprom14.i = sext i32 %add13.i to i64, !dbg !6859
  %28 = load i32*, i32** %temp.addr.i, align 8, !dbg !6859
  %arrayidx15.i = getelementptr inbounds i32, i32* %28, i64 %idxprom14.i, !dbg !6859
  store i32 %add12.i, i32* %arrayidx15.i, align 4, !dbg !6860
  %29 = load i32, i32* %x.i, align 4, !dbg !6861
  %inc.i = add nsw i32 %29, 1, !dbg !6861
  store i32 %inc.i, i32* %x.i, align 4, !dbg !6861
  br label %for.cond.i, !dbg !6863, !llvm.loop !6864

for.end.i:                                        ; preds = %for.cond.i
  %30 = load i32*, i32** %b.addr.i, align 8, !dbg !6866
  %31 = load i32*, i32** %temp.addr.i, align 8, !dbg !6867
  %32 = load i32*, i32** %temp.addr.i, align 8, !dbg !6868
  %33 = load i32, i32* %w2.i, align 4, !dbg !6869
  %idx.ext.i = sext i32 %33 to i64, !dbg !6870
  %add.ptr.i = getelementptr inbounds i32, i32* %32, i64 %idx.ext.i, !dbg !6870
  %34 = load i32, i32* %w2.i, align 4, !dbg !6871
  %35 = load i32, i32* %shift.addr.i, align 4, !dbg !6872
  %36 = load i32, i32* %shift.addr.i, align 4, !dbg !6873
  store i32* %30, i32** %dst.addr.i.i, align 8, !dbg !6874
  store i32* %31, i32** %src0.addr.i.i, align 8, !dbg !6874
  store i32* %add.ptr.i, i32** %src1.addr.i.i, align 8, !dbg !6874
  store i32 %34, i32* %w2.addr.i.i, align 4, !dbg !6874
  store i32 %35, i32* %add.addr.i.i, align 4, !dbg !6874
  store i32 %36, i32* %shift.addr.i.i, align 4, !dbg !6874
  store i32 0, i32* %i.i.i, align 4, !dbg !6875
  br label %for.cond.i.i, !dbg !6876

for.cond.i.i:                                     ; preds = %for.body.i.i, %for.end.i
  %37 = load i32, i32* %i.i.i, align 4, !dbg !6877
  %38 = load i32, i32* %w2.addr.i.i, align 4, !dbg !6878
  %cmp.i.i = icmp slt i32 %37, %38, !dbg !6879
  br i1 %cmp.i.i, label %for.body.i.i, label %horizontal_compose_haari_10bit.exit, !dbg !6880

for.body.i.i:                                     ; preds = %for.cond.i.i
  %39 = load i32, i32* %i.i.i, align 4, !dbg !6881
  %idxprom.i.i = sext i32 %39 to i64, !dbg !6882
  %40 = load i32*, i32** %src0.addr.i.i, align 8, !dbg !6882
  %arrayidx.i.i = getelementptr inbounds i32, i32* %40, i64 %idxprom.i.i, !dbg !6882
  %41 = load i32, i32* %arrayidx.i.i, align 4, !dbg !6882
  %42 = load i32, i32* %add.addr.i.i, align 4, !dbg !6883
  %add1.i.i = add i32 %41, %42, !dbg !6884
  %43 = load i32, i32* %shift.addr.i.i, align 4, !dbg !6885
  %shr.i.i = ashr i32 %add1.i.i, %43, !dbg !6886
  %44 = load i32, i32* %i.i.i, align 4, !dbg !6887
  %mul.i.i = mul nsw i32 2, %44, !dbg !6888
  %idxprom2.i.i = sext i32 %mul.i.i to i64, !dbg !6889
  %45 = load i32*, i32** %dst.addr.i.i, align 8, !dbg !6889
  %arrayidx3.i.i = getelementptr inbounds i32, i32* %45, i64 %idxprom2.i.i, !dbg !6889
  store i32 %shr.i.i, i32* %arrayidx3.i.i, align 4, !dbg !6890
  %46 = load i32, i32* %i.i.i, align 4, !dbg !6891
  %idxprom4.i.i = sext i32 %46 to i64, !dbg !6892
  %47 = load i32*, i32** %src1.addr.i.i, align 8, !dbg !6892
  %arrayidx5.i.i = getelementptr inbounds i32, i32* %47, i64 %idxprom4.i.i, !dbg !6892
  %48 = load i32, i32* %arrayidx5.i.i, align 4, !dbg !6892
  %49 = load i32, i32* %add.addr.i.i, align 4, !dbg !6893
  %add6.i.i = add i32 %48, %49, !dbg !6894
  %50 = load i32, i32* %shift.addr.i.i, align 4, !dbg !6895
  %shr7.i.i = ashr i32 %add6.i.i, %50, !dbg !6896
  %51 = load i32, i32* %i.i.i, align 4, !dbg !6897
  %mul8.i.i = mul nsw i32 2, %51, !dbg !6898
  %add9.i.i = add nsw i32 %mul8.i.i, 1, !dbg !6899
  %idxprom10.i.i = sext i32 %add9.i.i to i64, !dbg !6900
  %52 = load i32*, i32** %dst.addr.i.i, align 8, !dbg !6900
  %arrayidx11.i.i = getelementptr inbounds i32, i32* %52, i64 %idxprom10.i.i, !dbg !6900
  store i32 %shr7.i.i, i32* %arrayidx11.i.i, align 4, !dbg !6901
  %53 = load i32, i32* %i.i.i, align 4, !dbg !6902
  %inc.i.i = add nsw i32 %53, 1, !dbg !6902
  store i32 %inc.i.i, i32* %i.i.i, align 4, !dbg !6902
  br label %for.cond.i.i, !dbg !6903, !llvm.loop !6195

horizontal_compose_haari_10bit.exit:              ; preds = %for.cond.i.i
  ret void, !dbg !6904
}

; Function Attrs: nounwind uwtable
define internal void @horizontal_compose_haar1i_10bit(i8* %_b, i8* %_temp, i32 %w) #0 !dbg !6905 {
entry:
  %dst.addr.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %dst.addr.i.i, metadata !6034, metadata !87), !dbg !6906
  %src0.addr.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %src0.addr.i.i, metadata !6040, metadata !87), !dbg !6909
  %src1.addr.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %src1.addr.i.i, metadata !6042, metadata !87), !dbg !6910
  %w2.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w2.addr.i.i, metadata !6044, metadata !87), !dbg !6911
  %add.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %add.addr.i.i, metadata !6046, metadata !87), !dbg !6912
  %shift.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %shift.addr.i.i, metadata !6048, metadata !87), !dbg !6913
  %i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i.i, metadata !6050, metadata !87), !dbg !6914
  %b.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %b.addr.i, metadata !6795, metadata !87), !dbg !6915
  %temp.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %temp.addr.i, metadata !6797, metadata !87), !dbg !6916
  %w.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i, metadata !6799, metadata !87), !dbg !6917
  %shift.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %shift.addr.i, metadata !6801, metadata !87), !dbg !6918
  %w2.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w2.i, metadata !6803, metadata !87), !dbg !6919
  %x.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.i, metadata !6805, metadata !87), !dbg !6920
  %_b.addr = alloca i8*, align 8
  %_temp.addr = alloca i8*, align 8
  %w.addr = alloca i32, align 4
  %b = alloca i32*, align 8
  %temp = alloca i32*, align 8
  store i8* %_b, i8** %_b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b.addr, metadata !6921, metadata !87), !dbg !6922
  store i8* %_temp, i8** %_temp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_temp.addr, metadata !6923, metadata !87), !dbg !6924
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !6925, metadata !87), !dbg !6926
  call void @llvm.dbg.declare(metadata i32** %b, metadata !6927, metadata !87), !dbg !6928
  %0 = load i8*, i8** %_b.addr, align 8, !dbg !6929
  %1 = bitcast i8* %0 to i32*, !dbg !6930
  store i32* %1, i32** %b, align 8, !dbg !6928
  call void @llvm.dbg.declare(metadata i32** %temp, metadata !6931, metadata !87), !dbg !6932
  %2 = load i8*, i8** %_temp.addr, align 8, !dbg !6933
  %3 = bitcast i8* %2 to i32*, !dbg !6934
  store i32* %3, i32** %temp, align 8, !dbg !6932
  %4 = load i32*, i32** %b, align 8, !dbg !6935
  %5 = load i32*, i32** %temp, align 8, !dbg !6936
  %6 = load i32, i32* %w.addr, align 4, !dbg !6937
  store i32* %4, i32** %b.addr.i, align 8, !dbg !6938
  store i32* %5, i32** %temp.addr.i, align 8, !dbg !6938
  store i32 %6, i32* %w.addr.i, align 4, !dbg !6938
  store i32 1, i32* %shift.addr.i, align 4, !dbg !6938
  %7 = load i32, i32* %w.addr.i, align 4, !dbg !6939
  %shr.i = ashr i32 %7, 1, !dbg !6940
  store i32 %shr.i, i32* %w2.i, align 4, !dbg !6919
  store i32 0, i32* %x.i, align 4, !dbg !6941
  br label %for.cond.i, !dbg !6942

for.cond.i:                                       ; preds = %for.body.i, %entry
  %8 = load i32, i32* %x.i, align 4, !dbg !6943
  %9 = load i32, i32* %w2.i, align 4, !dbg !6944
  %cmp.i = icmp slt i32 %8, %9, !dbg !6945
  br i1 %cmp.i, label %for.body.i, label %for.end.i, !dbg !6946

for.body.i:                                       ; preds = %for.cond.i
  %10 = load i32, i32* %x.i, align 4, !dbg !6947
  %idxprom.i = sext i32 %10 to i64, !dbg !6948
  %11 = load i32*, i32** %b.addr.i, align 8, !dbg !6948
  %arrayidx.i = getelementptr inbounds i32, i32* %11, i64 %idxprom.i, !dbg !6948
  %12 = load i32, i32* %arrayidx.i, align 4, !dbg !6948
  %13 = load i32, i32* %x.i, align 4, !dbg !6949
  %14 = load i32, i32* %w2.i, align 4, !dbg !6950
  %add.i = add nsw i32 %13, %14, !dbg !6951
  %idxprom1.i = sext i32 %add.i to i64, !dbg !6952
  %15 = load i32*, i32** %b.addr.i, align 8, !dbg !6952
  %arrayidx2.i = getelementptr inbounds i32, i32* %15, i64 %idxprom1.i, !dbg !6952
  %16 = load i32, i32* %arrayidx2.i, align 4, !dbg !6952
  %add3.i = add i32 %16, 1, !dbg !6953
  %shr4.i = ashr i32 %add3.i, 1, !dbg !6954
  %sub.i = sub i32 %12, %shr4.i, !dbg !6955
  %17 = load i32, i32* %x.i, align 4, !dbg !6956
  %idxprom5.i = sext i32 %17 to i64, !dbg !6957
  %18 = load i32*, i32** %temp.addr.i, align 8, !dbg !6957
  %arrayidx6.i = getelementptr inbounds i32, i32* %18, i64 %idxprom5.i, !dbg !6957
  store i32 %sub.i, i32* %arrayidx6.i, align 4, !dbg !6958
  %19 = load i32, i32* %x.i, align 4, !dbg !6959
  %20 = load i32, i32* %w2.i, align 4, !dbg !6960
  %add7.i = add nsw i32 %19, %20, !dbg !6961
  %idxprom8.i = sext i32 %add7.i to i64, !dbg !6962
  %21 = load i32*, i32** %b.addr.i, align 8, !dbg !6962
  %arrayidx9.i = getelementptr inbounds i32, i32* %21, i64 %idxprom8.i, !dbg !6962
  %22 = load i32, i32* %arrayidx9.i, align 4, !dbg !6962
  %23 = load i32, i32* %x.i, align 4, !dbg !6963
  %idxprom10.i = sext i32 %23 to i64, !dbg !6964
  %24 = load i32*, i32** %temp.addr.i, align 8, !dbg !6964
  %arrayidx11.i = getelementptr inbounds i32, i32* %24, i64 %idxprom10.i, !dbg !6964
  %25 = load i32, i32* %arrayidx11.i, align 4, !dbg !6964
  %add12.i = add i32 %22, %25, !dbg !6965
  %26 = load i32, i32* %x.i, align 4, !dbg !6966
  %27 = load i32, i32* %w2.i, align 4, !dbg !6967
  %add13.i = add nsw i32 %26, %27, !dbg !6968
  %idxprom14.i = sext i32 %add13.i to i64, !dbg !6969
  %28 = load i32*, i32** %temp.addr.i, align 8, !dbg !6969
  %arrayidx15.i = getelementptr inbounds i32, i32* %28, i64 %idxprom14.i, !dbg !6969
  store i32 %add12.i, i32* %arrayidx15.i, align 4, !dbg !6970
  %29 = load i32, i32* %x.i, align 4, !dbg !6971
  %inc.i = add nsw i32 %29, 1, !dbg !6971
  store i32 %inc.i, i32* %x.i, align 4, !dbg !6971
  br label %for.cond.i, !dbg !6972, !llvm.loop !6864

for.end.i:                                        ; preds = %for.cond.i
  %30 = load i32*, i32** %b.addr.i, align 8, !dbg !6973
  %31 = load i32*, i32** %temp.addr.i, align 8, !dbg !6974
  %32 = load i32*, i32** %temp.addr.i, align 8, !dbg !6975
  %33 = load i32, i32* %w2.i, align 4, !dbg !6976
  %idx.ext.i = sext i32 %33 to i64, !dbg !6977
  %add.ptr.i = getelementptr inbounds i32, i32* %32, i64 %idx.ext.i, !dbg !6977
  %34 = load i32, i32* %w2.i, align 4, !dbg !6978
  %35 = load i32, i32* %shift.addr.i, align 4, !dbg !6979
  %36 = load i32, i32* %shift.addr.i, align 4, !dbg !6980
  store i32* %30, i32** %dst.addr.i.i, align 8, !dbg !6981
  store i32* %31, i32** %src0.addr.i.i, align 8, !dbg !6981
  store i32* %add.ptr.i, i32** %src1.addr.i.i, align 8, !dbg !6981
  store i32 %34, i32* %w2.addr.i.i, align 4, !dbg !6981
  store i32 %35, i32* %add.addr.i.i, align 4, !dbg !6981
  store i32 %36, i32* %shift.addr.i.i, align 4, !dbg !6981
  store i32 0, i32* %i.i.i, align 4, !dbg !6982
  br label %for.cond.i.i, !dbg !6983

for.cond.i.i:                                     ; preds = %for.body.i.i, %for.end.i
  %37 = load i32, i32* %i.i.i, align 4, !dbg !6984
  %38 = load i32, i32* %w2.addr.i.i, align 4, !dbg !6985
  %cmp.i.i = icmp slt i32 %37, %38, !dbg !6986
  br i1 %cmp.i.i, label %for.body.i.i, label %horizontal_compose_haari_10bit.exit, !dbg !6987

for.body.i.i:                                     ; preds = %for.cond.i.i
  %39 = load i32, i32* %i.i.i, align 4, !dbg !6988
  %idxprom.i.i = sext i32 %39 to i64, !dbg !6989
  %40 = load i32*, i32** %src0.addr.i.i, align 8, !dbg !6989
  %arrayidx.i.i = getelementptr inbounds i32, i32* %40, i64 %idxprom.i.i, !dbg !6989
  %41 = load i32, i32* %arrayidx.i.i, align 4, !dbg !6989
  %42 = load i32, i32* %add.addr.i.i, align 4, !dbg !6990
  %add1.i.i = add i32 %41, %42, !dbg !6991
  %43 = load i32, i32* %shift.addr.i.i, align 4, !dbg !6992
  %shr.i.i = ashr i32 %add1.i.i, %43, !dbg !6993
  %44 = load i32, i32* %i.i.i, align 4, !dbg !6994
  %mul.i.i = mul nsw i32 2, %44, !dbg !6995
  %idxprom2.i.i = sext i32 %mul.i.i to i64, !dbg !6996
  %45 = load i32*, i32** %dst.addr.i.i, align 8, !dbg !6996
  %arrayidx3.i.i = getelementptr inbounds i32, i32* %45, i64 %idxprom2.i.i, !dbg !6996
  store i32 %shr.i.i, i32* %arrayidx3.i.i, align 4, !dbg !6997
  %46 = load i32, i32* %i.i.i, align 4, !dbg !6998
  %idxprom4.i.i = sext i32 %46 to i64, !dbg !6999
  %47 = load i32*, i32** %src1.addr.i.i, align 8, !dbg !6999
  %arrayidx5.i.i = getelementptr inbounds i32, i32* %47, i64 %idxprom4.i.i, !dbg !6999
  %48 = load i32, i32* %arrayidx5.i.i, align 4, !dbg !6999
  %49 = load i32, i32* %add.addr.i.i, align 4, !dbg !7000
  %add6.i.i = add i32 %48, %49, !dbg !7001
  %50 = load i32, i32* %shift.addr.i.i, align 4, !dbg !7002
  %shr7.i.i = ashr i32 %add6.i.i, %50, !dbg !7003
  %51 = load i32, i32* %i.i.i, align 4, !dbg !7004
  %mul8.i.i = mul nsw i32 2, %51, !dbg !7005
  %add9.i.i = add nsw i32 %mul8.i.i, 1, !dbg !7006
  %idxprom10.i.i = sext i32 %add9.i.i to i64, !dbg !7007
  %52 = load i32*, i32** %dst.addr.i.i, align 8, !dbg !7007
  %arrayidx11.i.i = getelementptr inbounds i32, i32* %52, i64 %idxprom10.i.i, !dbg !7007
  store i32 %shr7.i.i, i32* %arrayidx11.i.i, align 4, !dbg !7008
  %53 = load i32, i32* %i.i.i, align 4, !dbg !7009
  %inc.i.i = add nsw i32 %53, 1, !dbg !7009
  store i32 %inc.i.i, i32* %i.i.i, align 4, !dbg !7009
  br label %for.cond.i.i, !dbg !7010, !llvm.loop !6195

horizontal_compose_haari_10bit.exit:              ; preds = %for.cond.i.i
  ret void, !dbg !7011
}

; Function Attrs: nounwind uwtable
define internal void @spatial_compose_fidelity_10bit(%struct.DWTContext* %d, i32 %level, i32 %width, i32 %height, i32 %stride) #0 !dbg !7012 {
entry:
  %retval.i57 = alloca i32, align 4
  %a.addr.i58 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i58, metadata !904, metadata !87), !dbg !7013
  %amin.addr.i59 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i59, metadata !911, metadata !87), !dbg !7020
  %amax.addr.i60 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i60, metadata !913, metadata !87), !dbg !7021
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !904, metadata !87), !dbg !7022
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !911, metadata !87), !dbg !7029
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !913, metadata !87), !dbg !7030
  %d.addr = alloca %struct.DWTContext*, align 8
  %level.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  %vertical_compose_l0 = alloca void (i8*, i8**, i32)*, align 8
  %vertical_compose_h0 = alloca void (i8*, i8**, i32)*, align 8
  %i = alloca i32, align 4
  %y = alloca i32, align 4
  %b = alloca [8 x i8*], align 16
  store %struct.DWTContext* %d, %struct.DWTContext** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTContext** %d.addr, metadata !7031, metadata !87), !dbg !7032
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !7033, metadata !87), !dbg !7034
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !7035, metadata !87), !dbg !7036
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !7037, metadata !87), !dbg !7038
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !7039, metadata !87), !dbg !7040
  call void @llvm.dbg.declare(metadata void (i8*, i8**, i32)** %vertical_compose_l0, metadata !7041, metadata !87), !dbg !7042
  %0 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !7043
  %vertical_compose_l01 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %0, i32 0, i32 8, !dbg !7044
  %1 = load void ()*, void ()** %vertical_compose_l01, align 8, !dbg !7044
  %2 = bitcast void ()* %1 to i8*, !dbg !7045
  %3 = bitcast i8* %2 to void (i8*, i8**, i32)*, !dbg !7045
  store void (i8*, i8**, i32)* %3, void (i8*, i8**, i32)** %vertical_compose_l0, align 8, !dbg !7042
  call void @llvm.dbg.declare(metadata void (i8*, i8**, i32)** %vertical_compose_h0, metadata !7046, metadata !87), !dbg !7047
  %4 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !7048
  %vertical_compose_h02 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %4, i32 0, i32 9, !dbg !7049
  %5 = load void ()*, void ()** %vertical_compose_h02, align 8, !dbg !7049
  %6 = bitcast void ()* %5 to i8*, !dbg !7050
  %7 = bitcast i8* %6 to void (i8*, i8**, i32)*, !dbg !7050
  store void (i8*, i8**, i32)* %7, void (i8*, i8**, i32)** %vertical_compose_h0, align 8, !dbg !7047
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7051, metadata !87), !dbg !7052
  call void @llvm.dbg.declare(metadata i32* %y, metadata !7053, metadata !87), !dbg !7054
  call void @llvm.dbg.declare(metadata [8 x i8*]* %b, metadata !7055, metadata !87), !dbg !7056
  store i32 1, i32* %y, align 4, !dbg !7057
  br label %for.cond, !dbg !7058

for.cond:                                         ; preds = %for.inc12, %entry
  %8 = load i32, i32* %y, align 4, !dbg !7059
  %9 = load i32, i32* %height.addr, align 4, !dbg !7061
  %cmp = icmp slt i32 %8, %9, !dbg !7062
  br i1 %cmp, label %for.body, label %for.end14, !dbg !7063

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !7064
  br label %for.cond3, !dbg !7065

for.cond3:                                        ; preds = %for.inc, %for.body
  %10 = load i32, i32* %i, align 4, !dbg !7066
  %cmp4 = icmp slt i32 %10, 8, !dbg !7068
  br i1 %cmp4, label %for.body5, label %for.end, !dbg !7069

for.body5:                                        ; preds = %for.cond3
  %11 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !7070
  %buffer = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %11, i32 0, i32 0, !dbg !7071
  %12 = load i8*, i8** %buffer, align 8, !dbg !7071
  %13 = load i32, i32* %y, align 4, !dbg !7072
  %sub = sub nsw i32 %13, 7, !dbg !7073
  %14 = load i32, i32* %i, align 4, !dbg !7074
  %mul = mul nsw i32 2, %14, !dbg !7075
  %add = add nsw i32 %sub, %mul, !dbg !7076
  %15 = load i32, i32* %height.addr, align 4, !dbg !7077
  %sub6 = sub nsw i32 %15, 2, !dbg !7078
  store i32 %add, i32* %a.addr.i, align 4, !dbg !7079
  store i32 0, i32* %amin.addr.i, align 4, !dbg !7079
  store i32 %sub6, i32* %amax.addr.i, align 4, !dbg !7079
  %16 = load i32, i32* %a.addr.i, align 4, !dbg !7080
  %17 = load i32, i32* %amin.addr.i, align 4, !dbg !7081
  %cmp.i = icmp slt i32 %16, %17, !dbg !7082
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !7083

if.then.i:                                        ; preds = %for.body5
  %18 = load i32, i32* %amin.addr.i, align 4, !dbg !7084
  store i32 %18, i32* %retval.i, align 4, !dbg !7085
  br label %av_clip_c.exit, !dbg !7085

if.else.i:                                        ; preds = %for.body5
  %19 = load i32, i32* %a.addr.i, align 4, !dbg !7086
  %20 = load i32, i32* %amax.addr.i, align 4, !dbg !7087
  %cmp1.i = icmp sgt i32 %19, %20, !dbg !7088
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !7089

if.then2.i:                                       ; preds = %if.else.i
  %21 = load i32, i32* %amax.addr.i, align 4, !dbg !7090
  store i32 %21, i32* %retval.i, align 4, !dbg !7091
  br label %av_clip_c.exit, !dbg !7091

if.else3.i:                                       ; preds = %if.else.i
  %22 = load i32, i32* %a.addr.i, align 4, !dbg !7092
  store i32 %22, i32* %retval.i, align 4, !dbg !7093
  br label %av_clip_c.exit, !dbg !7093

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %23 = load i32, i32* %retval.i, align 4, !dbg !7094
  %24 = load i32, i32* %stride.addr, align 4, !dbg !7095
  %mul7 = mul nsw i32 %23, %24, !dbg !7096
  %idx.ext = sext i32 %mul7 to i64, !dbg !7097
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 %idx.ext, !dbg !7097
  %25 = load i32, i32* %i, align 4, !dbg !7098
  %idxprom = sext i32 %25 to i64, !dbg !7099
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 %idxprom, !dbg !7099
  store i8* %add.ptr, i8** %arrayidx, align 8, !dbg !7100
  br label %for.inc, !dbg !7099

for.inc:                                          ; preds = %av_clip_c.exit
  %26 = load i32, i32* %i, align 4, !dbg !7101
  %inc = add nsw i32 %26, 1, !dbg !7101
  store i32 %inc, i32* %i, align 4, !dbg !7101
  br label %for.cond3, !dbg !7103, !llvm.loop !7104

for.end:                                          ; preds = %for.cond3
  %27 = load void (i8*, i8**, i32)*, void (i8*, i8**, i32)** %vertical_compose_h0, align 8, !dbg !7106
  %28 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !7107
  %buffer8 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %28, i32 0, i32 0, !dbg !7108
  %29 = load i8*, i8** %buffer8, align 8, !dbg !7108
  %30 = load i32, i32* %y, align 4, !dbg !7109
  %31 = load i32, i32* %stride.addr, align 4, !dbg !7110
  %mul9 = mul nsw i32 %30, %31, !dbg !7111
  %idx.ext10 = sext i32 %mul9 to i64, !dbg !7112
  %add.ptr11 = getelementptr inbounds i8, i8* %29, i64 %idx.ext10, !dbg !7112
  %arraydecay = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i32 0, i32 0, !dbg !7113
  %32 = load i32, i32* %width.addr, align 4, !dbg !7114
  call void %27(i8* %add.ptr11, i8** %arraydecay, i32 %32), !dbg !7106
  br label %for.inc12, !dbg !7115

for.inc12:                                        ; preds = %for.end
  %33 = load i32, i32* %y, align 4, !dbg !7116
  %add13 = add nsw i32 %33, 2, !dbg !7116
  store i32 %add13, i32* %y, align 4, !dbg !7116
  br label %for.cond, !dbg !7118, !llvm.loop !7119

for.end14:                                        ; preds = %for.cond
  store i32 0, i32* %y, align 4, !dbg !7121
  br label %for.cond15, !dbg !7122

for.cond15:                                       ; preds = %for.inc40, %for.end14
  %34 = load i32, i32* %y, align 4, !dbg !7123
  %35 = load i32, i32* %height.addr, align 4, !dbg !7125
  %cmp16 = icmp slt i32 %34, %35, !dbg !7126
  br i1 %cmp16, label %for.body17, label %for.end42, !dbg !7127

for.body17:                                       ; preds = %for.cond15
  store i32 0, i32* %i, align 4, !dbg !7128
  br label %for.cond18, !dbg !7129

for.cond18:                                       ; preds = %for.inc32, %for.body17
  %36 = load i32, i32* %i, align 4, !dbg !7130
  %cmp19 = icmp slt i32 %36, 8, !dbg !7132
  br i1 %cmp19, label %for.body20, label %for.end34, !dbg !7133

for.body20:                                       ; preds = %for.cond18
  %37 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !7134
  %buffer21 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %37, i32 0, i32 0, !dbg !7135
  %38 = load i8*, i8** %buffer21, align 8, !dbg !7135
  %39 = load i32, i32* %y, align 4, !dbg !7136
  %sub22 = sub nsw i32 %39, 7, !dbg !7137
  %40 = load i32, i32* %i, align 4, !dbg !7138
  %mul23 = mul nsw i32 2, %40, !dbg !7139
  %add24 = add nsw i32 %sub22, %mul23, !dbg !7140
  %41 = load i32, i32* %height.addr, align 4, !dbg !7141
  %sub25 = sub nsw i32 %41, 1, !dbg !7142
  store i32 %add24, i32* %a.addr.i58, align 4, !dbg !7143
  store i32 1, i32* %amin.addr.i59, align 4, !dbg !7143
  store i32 %sub25, i32* %amax.addr.i60, align 4, !dbg !7143
  %42 = load i32, i32* %a.addr.i58, align 4, !dbg !7144
  %43 = load i32, i32* %amin.addr.i59, align 4, !dbg !7145
  %cmp.i61 = icmp slt i32 %42, %43, !dbg !7146
  br i1 %cmp.i61, label %if.then.i62, label %if.else.i64, !dbg !7147

if.then.i62:                                      ; preds = %for.body20
  %44 = load i32, i32* %amin.addr.i59, align 4, !dbg !7148
  store i32 %44, i32* %retval.i57, align 4, !dbg !7149
  br label %av_clip_c.exit67, !dbg !7149

if.else.i64:                                      ; preds = %for.body20
  %45 = load i32, i32* %a.addr.i58, align 4, !dbg !7150
  %46 = load i32, i32* %amax.addr.i60, align 4, !dbg !7151
  %cmp1.i63 = icmp sgt i32 %45, %46, !dbg !7152
  br i1 %cmp1.i63, label %if.then2.i65, label %if.else3.i66, !dbg !7153

if.then2.i65:                                     ; preds = %if.else.i64
  %47 = load i32, i32* %amax.addr.i60, align 4, !dbg !7154
  store i32 %47, i32* %retval.i57, align 4, !dbg !7155
  br label %av_clip_c.exit67, !dbg !7155

if.else3.i66:                                     ; preds = %if.else.i64
  %48 = load i32, i32* %a.addr.i58, align 4, !dbg !7156
  store i32 %48, i32* %retval.i57, align 4, !dbg !7157
  br label %av_clip_c.exit67, !dbg !7157

av_clip_c.exit67:                                 ; preds = %if.then.i62, %if.then2.i65, %if.else3.i66
  %49 = load i32, i32* %retval.i57, align 4, !dbg !7158
  %50 = load i32, i32* %stride.addr, align 4, !dbg !7159
  %mul27 = mul nsw i32 %49, %50, !dbg !7160
  %idx.ext28 = sext i32 %mul27 to i64, !dbg !7161
  %add.ptr29 = getelementptr inbounds i8, i8* %38, i64 %idx.ext28, !dbg !7161
  %51 = load i32, i32* %i, align 4, !dbg !7162
  %idxprom30 = sext i32 %51 to i64, !dbg !7163
  %arrayidx31 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 %idxprom30, !dbg !7163
  store i8* %add.ptr29, i8** %arrayidx31, align 8, !dbg !7164
  br label %for.inc32, !dbg !7163

for.inc32:                                        ; preds = %av_clip_c.exit67
  %52 = load i32, i32* %i, align 4, !dbg !7165
  %inc33 = add nsw i32 %52, 1, !dbg !7165
  store i32 %inc33, i32* %i, align 4, !dbg !7165
  br label %for.cond18, !dbg !7167, !llvm.loop !7168

for.end34:                                        ; preds = %for.cond18
  %53 = load void (i8*, i8**, i32)*, void (i8*, i8**, i32)** %vertical_compose_l0, align 8, !dbg !7170
  %54 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !7171
  %buffer35 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %54, i32 0, i32 0, !dbg !7172
  %55 = load i8*, i8** %buffer35, align 8, !dbg !7172
  %56 = load i32, i32* %y, align 4, !dbg !7173
  %57 = load i32, i32* %stride.addr, align 4, !dbg !7174
  %mul36 = mul nsw i32 %56, %57, !dbg !7175
  %idx.ext37 = sext i32 %mul36 to i64, !dbg !7176
  %add.ptr38 = getelementptr inbounds i8, i8* %55, i64 %idx.ext37, !dbg !7176
  %arraydecay39 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i32 0, i32 0, !dbg !7177
  %58 = load i32, i32* %width.addr, align 4, !dbg !7178
  call void %53(i8* %add.ptr38, i8** %arraydecay39, i32 %58), !dbg !7170
  br label %for.inc40, !dbg !7179

for.inc40:                                        ; preds = %for.end34
  %59 = load i32, i32* %y, align 4, !dbg !7180
  %add41 = add nsw i32 %59, 2, !dbg !7180
  store i32 %add41, i32* %y, align 4, !dbg !7180
  br label %for.cond15, !dbg !7182, !llvm.loop !7183

for.end42:                                        ; preds = %for.cond15
  store i32 0, i32* %y, align 4, !dbg !7185
  br label %for.cond43, !dbg !7187

for.cond43:                                       ; preds = %for.inc50, %for.end42
  %60 = load i32, i32* %y, align 4, !dbg !7188
  %61 = load i32, i32* %height.addr, align 4, !dbg !7191
  %cmp44 = icmp slt i32 %60, %61, !dbg !7192
  br i1 %cmp44, label %for.body45, label %for.end52, !dbg !7193

for.body45:                                       ; preds = %for.cond43
  %62 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !7194
  %horizontal_compose = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %62, i32 0, i32 13, !dbg !7195
  %63 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %horizontal_compose, align 8, !dbg !7195
  %64 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !7196
  %buffer46 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %64, i32 0, i32 0, !dbg !7197
  %65 = load i8*, i8** %buffer46, align 8, !dbg !7197
  %66 = load i32, i32* %y, align 4, !dbg !7198
  %67 = load i32, i32* %stride.addr, align 4, !dbg !7199
  %mul47 = mul nsw i32 %66, %67, !dbg !7200
  %idx.ext48 = sext i32 %mul47 to i64, !dbg !7201
  %add.ptr49 = getelementptr inbounds i8, i8* %65, i64 %idx.ext48, !dbg !7201
  %68 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !7202
  %temp = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %68, i32 0, i32 1, !dbg !7203
  %69 = load i8*, i8** %temp, align 8, !dbg !7203
  %70 = load i32, i32* %width.addr, align 4, !dbg !7204
  call void %63(i8* %add.ptr49, i8* %69, i32 %70), !dbg !7194
  br label %for.inc50, !dbg !7194

for.inc50:                                        ; preds = %for.body45
  %71 = load i32, i32* %y, align 4, !dbg !7205
  %inc51 = add nsw i32 %71, 1, !dbg !7205
  store i32 %inc51, i32* %y, align 4, !dbg !7205
  br label %for.cond43, !dbg !7207, !llvm.loop !7208

for.end52:                                        ; preds = %for.cond43
  %72 = load i32, i32* %height.addr, align 4, !dbg !7210
  %add53 = add nsw i32 %72, 1, !dbg !7211
  %73 = load i32, i32* %level.addr, align 4, !dbg !7212
  %idxprom54 = sext i32 %73 to i64, !dbg !7213
  %74 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !7213
  %cs = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %74, i32 0, i32 14, !dbg !7214
  %arrayidx55 = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs, i64 0, i64 %idxprom54, !dbg !7213
  %y56 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arrayidx55, i32 0, i32 1, !dbg !7215
  store i32 %add53, i32* %y56, align 8, !dbg !7216
  ret void, !dbg !7217
}

; Function Attrs: nounwind uwtable
define internal void @vertical_compose_fidelityiL0_10bit(i8* %_dst, i8** %_b, i32 %width) #0 !dbg !7218 {
entry:
  %_dst.addr = alloca i8*, align 8
  %_b.addr = alloca i8**, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %dst = alloca i32*, align 8
  %b0 = alloca i32*, align 8
  %b1 = alloca i32*, align 8
  %b2 = alloca i32*, align 8
  %b3 = alloca i32*, align 8
  %b4 = alloca i32*, align 8
  %b5 = alloca i32*, align 8
  %b6 = alloca i32*, align 8
  %b7 = alloca i32*, align 8
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !7219, metadata !87), !dbg !7220
  store i8** %_b, i8*** %_b.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_b.addr, metadata !7221, metadata !87), !dbg !7222
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !7223, metadata !87), !dbg !7224
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7225, metadata !87), !dbg !7226
  call void @llvm.dbg.declare(metadata i32** %dst, metadata !7227, metadata !87), !dbg !7228
  %0 = load i8*, i8** %_dst.addr, align 8, !dbg !7229
  %1 = bitcast i8* %0 to i32*, !dbg !7230
  store i32* %1, i32** %dst, align 8, !dbg !7228
  call void @llvm.dbg.declare(metadata i32** %b0, metadata !7231, metadata !87), !dbg !7232
  %2 = load i8**, i8*** %_b.addr, align 8, !dbg !7233
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 0, !dbg !7233
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !7233
  %4 = bitcast i8* %3 to i32*, !dbg !7234
  store i32* %4, i32** %b0, align 8, !dbg !7232
  call void @llvm.dbg.declare(metadata i32** %b1, metadata !7235, metadata !87), !dbg !7236
  %5 = load i8**, i8*** %_b.addr, align 8, !dbg !7237
  %arrayidx1 = getelementptr inbounds i8*, i8** %5, i64 1, !dbg !7237
  %6 = load i8*, i8** %arrayidx1, align 8, !dbg !7237
  %7 = bitcast i8* %6 to i32*, !dbg !7238
  store i32* %7, i32** %b1, align 8, !dbg !7236
  call void @llvm.dbg.declare(metadata i32** %b2, metadata !7239, metadata !87), !dbg !7240
  %8 = load i8**, i8*** %_b.addr, align 8, !dbg !7241
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 2, !dbg !7241
  %9 = load i8*, i8** %arrayidx2, align 8, !dbg !7241
  %10 = bitcast i8* %9 to i32*, !dbg !7242
  store i32* %10, i32** %b2, align 8, !dbg !7240
  call void @llvm.dbg.declare(metadata i32** %b3, metadata !7243, metadata !87), !dbg !7244
  %11 = load i8**, i8*** %_b.addr, align 8, !dbg !7245
  %arrayidx3 = getelementptr inbounds i8*, i8** %11, i64 3, !dbg !7245
  %12 = load i8*, i8** %arrayidx3, align 8, !dbg !7245
  %13 = bitcast i8* %12 to i32*, !dbg !7246
  store i32* %13, i32** %b3, align 8, !dbg !7244
  call void @llvm.dbg.declare(metadata i32** %b4, metadata !7247, metadata !87), !dbg !7248
  %14 = load i8**, i8*** %_b.addr, align 8, !dbg !7249
  %arrayidx4 = getelementptr inbounds i8*, i8** %14, i64 4, !dbg !7249
  %15 = load i8*, i8** %arrayidx4, align 8, !dbg !7249
  %16 = bitcast i8* %15 to i32*, !dbg !7250
  store i32* %16, i32** %b4, align 8, !dbg !7248
  call void @llvm.dbg.declare(metadata i32** %b5, metadata !7251, metadata !87), !dbg !7252
  %17 = load i8**, i8*** %_b.addr, align 8, !dbg !7253
  %arrayidx5 = getelementptr inbounds i8*, i8** %17, i64 5, !dbg !7253
  %18 = load i8*, i8** %arrayidx5, align 8, !dbg !7253
  %19 = bitcast i8* %18 to i32*, !dbg !7254
  store i32* %19, i32** %b5, align 8, !dbg !7252
  call void @llvm.dbg.declare(metadata i32** %b6, metadata !7255, metadata !87), !dbg !7256
  %20 = load i8**, i8*** %_b.addr, align 8, !dbg !7257
  %arrayidx6 = getelementptr inbounds i8*, i8** %20, i64 6, !dbg !7257
  %21 = load i8*, i8** %arrayidx6, align 8, !dbg !7257
  %22 = bitcast i8* %21 to i32*, !dbg !7258
  store i32* %22, i32** %b6, align 8, !dbg !7256
  call void @llvm.dbg.declare(metadata i32** %b7, metadata !7259, metadata !87), !dbg !7260
  %23 = load i8**, i8*** %_b.addr, align 8, !dbg !7261
  %arrayidx7 = getelementptr inbounds i8*, i8** %23, i64 7, !dbg !7261
  %24 = load i8*, i8** %arrayidx7, align 8, !dbg !7261
  %25 = bitcast i8* %24 to i32*, !dbg !7262
  store i32* %25, i32** %b7, align 8, !dbg !7260
  store i32 0, i32* %i, align 4, !dbg !7263
  br label %for.cond, !dbg !7265

for.cond:                                         ; preds = %for.inc, %entry
  %26 = load i32, i32* %i, align 4, !dbg !7266
  %27 = load i32, i32* %width.addr, align 4, !dbg !7269
  %cmp = icmp slt i32 %26, %27, !dbg !7270
  br i1 %cmp, label %for.body, label %for.end, !dbg !7271

for.body:                                         ; preds = %for.cond
  %28 = load i32, i32* %i, align 4, !dbg !7272
  %idxprom = sext i32 %28 to i64, !dbg !7274
  %29 = load i32*, i32** %dst, align 8, !dbg !7274
  %arrayidx8 = getelementptr inbounds i32, i32* %29, i64 %idxprom, !dbg !7274
  %30 = load i32, i32* %arrayidx8, align 4, !dbg !7274
  %31 = load i32, i32* %i, align 4, !dbg !7275
  %idxprom9 = sext i32 %31 to i64, !dbg !7276
  %32 = load i32*, i32** %b0, align 8, !dbg !7276
  %arrayidx10 = getelementptr inbounds i32, i32* %32, i64 %idxprom9, !dbg !7276
  %33 = load i32, i32* %arrayidx10, align 4, !dbg !7276
  %34 = load i32, i32* %i, align 4, !dbg !7277
  %idxprom11 = sext i32 %34 to i64, !dbg !7278
  %35 = load i32*, i32** %b7, align 8, !dbg !7278
  %arrayidx12 = getelementptr inbounds i32, i32* %35, i64 %idxprom11, !dbg !7278
  %36 = load i32, i32* %arrayidx12, align 4, !dbg !7278
  %add = add i32 %33, %36, !dbg !7279
  %mul = mul i32 -8, %add, !dbg !7280
  %37 = load i32, i32* %i, align 4, !dbg !7281
  %idxprom13 = sext i32 %37 to i64, !dbg !7282
  %38 = load i32*, i32** %b1, align 8, !dbg !7282
  %arrayidx14 = getelementptr inbounds i32, i32* %38, i64 %idxprom13, !dbg !7282
  %39 = load i32, i32* %arrayidx14, align 4, !dbg !7282
  %40 = load i32, i32* %i, align 4, !dbg !7283
  %idxprom15 = sext i32 %40 to i64, !dbg !7284
  %41 = load i32*, i32** %b6, align 8, !dbg !7284
  %arrayidx16 = getelementptr inbounds i32, i32* %41, i64 %idxprom15, !dbg !7284
  %42 = load i32, i32* %arrayidx16, align 4, !dbg !7284
  %add17 = add i32 %39, %42, !dbg !7285
  %mul18 = mul i32 21, %add17, !dbg !7286
  %add19 = add i32 %mul, %mul18, !dbg !7287
  %43 = load i32, i32* %i, align 4, !dbg !7288
  %idxprom20 = sext i32 %43 to i64, !dbg !7289
  %44 = load i32*, i32** %b2, align 8, !dbg !7289
  %arrayidx21 = getelementptr inbounds i32, i32* %44, i64 %idxprom20, !dbg !7289
  %45 = load i32, i32* %arrayidx21, align 4, !dbg !7289
  %46 = load i32, i32* %i, align 4, !dbg !7290
  %idxprom22 = sext i32 %46 to i64, !dbg !7291
  %47 = load i32*, i32** %b5, align 8, !dbg !7291
  %arrayidx23 = getelementptr inbounds i32, i32* %47, i64 %idxprom22, !dbg !7291
  %48 = load i32, i32* %arrayidx23, align 4, !dbg !7291
  %add24 = add i32 %45, %48, !dbg !7292
  %mul25 = mul i32 46, %add24, !dbg !7293
  %sub = sub i32 %add19, %mul25, !dbg !7294
  %49 = load i32, i32* %i, align 4, !dbg !7295
  %idxprom26 = sext i32 %49 to i64, !dbg !7296
  %50 = load i32*, i32** %b3, align 8, !dbg !7296
  %arrayidx27 = getelementptr inbounds i32, i32* %50, i64 %idxprom26, !dbg !7296
  %51 = load i32, i32* %arrayidx27, align 4, !dbg !7296
  %52 = load i32, i32* %i, align 4, !dbg !7297
  %idxprom28 = sext i32 %52 to i64, !dbg !7298
  %53 = load i32*, i32** %b4, align 8, !dbg !7298
  %arrayidx29 = getelementptr inbounds i32, i32* %53, i64 %idxprom28, !dbg !7298
  %54 = load i32, i32* %arrayidx29, align 4, !dbg !7298
  %add30 = add i32 %51, %54, !dbg !7299
  %mul31 = mul i32 161, %add30, !dbg !7300
  %add32 = add i32 %sub, %mul31, !dbg !7301
  %add33 = add i32 %add32, 128, !dbg !7302
  %shr = ashr i32 %add33, 8, !dbg !7303
  %sub34 = sub i32 %30, %shr, !dbg !7304
  %55 = load i32, i32* %i, align 4, !dbg !7305
  %idxprom35 = sext i32 %55 to i64, !dbg !7306
  %56 = load i32*, i32** %dst, align 8, !dbg !7306
  %arrayidx36 = getelementptr inbounds i32, i32* %56, i64 %idxprom35, !dbg !7306
  store i32 %sub34, i32* %arrayidx36, align 4, !dbg !7307
  br label %for.inc, !dbg !7308

for.inc:                                          ; preds = %for.body
  %57 = load i32, i32* %i, align 4, !dbg !7309
  %inc = add nsw i32 %57, 1, !dbg !7309
  store i32 %inc, i32* %i, align 4, !dbg !7309
  br label %for.cond, !dbg !7311, !llvm.loop !7312

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7314
}

; Function Attrs: nounwind uwtable
define internal void @vertical_compose_fidelityiH0_10bit(i8* %_dst, i8** %_b, i32 %width) #0 !dbg !7315 {
entry:
  %_dst.addr = alloca i8*, align 8
  %_b.addr = alloca i8**, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %dst = alloca i32*, align 8
  %b0 = alloca i32*, align 8
  %b1 = alloca i32*, align 8
  %b2 = alloca i32*, align 8
  %b3 = alloca i32*, align 8
  %b4 = alloca i32*, align 8
  %b5 = alloca i32*, align 8
  %b6 = alloca i32*, align 8
  %b7 = alloca i32*, align 8
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !7316, metadata !87), !dbg !7317
  store i8** %_b, i8*** %_b.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_b.addr, metadata !7318, metadata !87), !dbg !7319
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !7320, metadata !87), !dbg !7321
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7322, metadata !87), !dbg !7323
  call void @llvm.dbg.declare(metadata i32** %dst, metadata !7324, metadata !87), !dbg !7325
  %0 = load i8*, i8** %_dst.addr, align 8, !dbg !7326
  %1 = bitcast i8* %0 to i32*, !dbg !7327
  store i32* %1, i32** %dst, align 8, !dbg !7325
  call void @llvm.dbg.declare(metadata i32** %b0, metadata !7328, metadata !87), !dbg !7329
  %2 = load i8**, i8*** %_b.addr, align 8, !dbg !7330
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 0, !dbg !7330
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !7330
  %4 = bitcast i8* %3 to i32*, !dbg !7331
  store i32* %4, i32** %b0, align 8, !dbg !7329
  call void @llvm.dbg.declare(metadata i32** %b1, metadata !7332, metadata !87), !dbg !7333
  %5 = load i8**, i8*** %_b.addr, align 8, !dbg !7334
  %arrayidx1 = getelementptr inbounds i8*, i8** %5, i64 1, !dbg !7334
  %6 = load i8*, i8** %arrayidx1, align 8, !dbg !7334
  %7 = bitcast i8* %6 to i32*, !dbg !7335
  store i32* %7, i32** %b1, align 8, !dbg !7333
  call void @llvm.dbg.declare(metadata i32** %b2, metadata !7336, metadata !87), !dbg !7337
  %8 = load i8**, i8*** %_b.addr, align 8, !dbg !7338
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 2, !dbg !7338
  %9 = load i8*, i8** %arrayidx2, align 8, !dbg !7338
  %10 = bitcast i8* %9 to i32*, !dbg !7339
  store i32* %10, i32** %b2, align 8, !dbg !7337
  call void @llvm.dbg.declare(metadata i32** %b3, metadata !7340, metadata !87), !dbg !7341
  %11 = load i8**, i8*** %_b.addr, align 8, !dbg !7342
  %arrayidx3 = getelementptr inbounds i8*, i8** %11, i64 3, !dbg !7342
  %12 = load i8*, i8** %arrayidx3, align 8, !dbg !7342
  %13 = bitcast i8* %12 to i32*, !dbg !7343
  store i32* %13, i32** %b3, align 8, !dbg !7341
  call void @llvm.dbg.declare(metadata i32** %b4, metadata !7344, metadata !87), !dbg !7345
  %14 = load i8**, i8*** %_b.addr, align 8, !dbg !7346
  %arrayidx4 = getelementptr inbounds i8*, i8** %14, i64 4, !dbg !7346
  %15 = load i8*, i8** %arrayidx4, align 8, !dbg !7346
  %16 = bitcast i8* %15 to i32*, !dbg !7347
  store i32* %16, i32** %b4, align 8, !dbg !7345
  call void @llvm.dbg.declare(metadata i32** %b5, metadata !7348, metadata !87), !dbg !7349
  %17 = load i8**, i8*** %_b.addr, align 8, !dbg !7350
  %arrayidx5 = getelementptr inbounds i8*, i8** %17, i64 5, !dbg !7350
  %18 = load i8*, i8** %arrayidx5, align 8, !dbg !7350
  %19 = bitcast i8* %18 to i32*, !dbg !7351
  store i32* %19, i32** %b5, align 8, !dbg !7349
  call void @llvm.dbg.declare(metadata i32** %b6, metadata !7352, metadata !87), !dbg !7353
  %20 = load i8**, i8*** %_b.addr, align 8, !dbg !7354
  %arrayidx6 = getelementptr inbounds i8*, i8** %20, i64 6, !dbg !7354
  %21 = load i8*, i8** %arrayidx6, align 8, !dbg !7354
  %22 = bitcast i8* %21 to i32*, !dbg !7355
  store i32* %22, i32** %b6, align 8, !dbg !7353
  call void @llvm.dbg.declare(metadata i32** %b7, metadata !7356, metadata !87), !dbg !7357
  %23 = load i8**, i8*** %_b.addr, align 8, !dbg !7358
  %arrayidx7 = getelementptr inbounds i8*, i8** %23, i64 7, !dbg !7358
  %24 = load i8*, i8** %arrayidx7, align 8, !dbg !7358
  %25 = bitcast i8* %24 to i32*, !dbg !7359
  store i32* %25, i32** %b7, align 8, !dbg !7357
  store i32 0, i32* %i, align 4, !dbg !7360
  br label %for.cond, !dbg !7362

for.cond:                                         ; preds = %for.inc, %entry
  %26 = load i32, i32* %i, align 4, !dbg !7363
  %27 = load i32, i32* %width.addr, align 4, !dbg !7366
  %cmp = icmp slt i32 %26, %27, !dbg !7367
  br i1 %cmp, label %for.body, label %for.end, !dbg !7368

for.body:                                         ; preds = %for.cond
  %28 = load i32, i32* %i, align 4, !dbg !7369
  %idxprom = sext i32 %28 to i64, !dbg !7371
  %29 = load i32*, i32** %dst, align 8, !dbg !7371
  %arrayidx8 = getelementptr inbounds i32, i32* %29, i64 %idxprom, !dbg !7371
  %30 = load i32, i32* %arrayidx8, align 4, !dbg !7371
  %31 = load i32, i32* %i, align 4, !dbg !7372
  %idxprom9 = sext i32 %31 to i64, !dbg !7373
  %32 = load i32*, i32** %b0, align 8, !dbg !7373
  %arrayidx10 = getelementptr inbounds i32, i32* %32, i64 %idxprom9, !dbg !7373
  %33 = load i32, i32* %arrayidx10, align 4, !dbg !7373
  %34 = load i32, i32* %i, align 4, !dbg !7374
  %idxprom11 = sext i32 %34 to i64, !dbg !7375
  %35 = load i32*, i32** %b7, align 8, !dbg !7375
  %arrayidx12 = getelementptr inbounds i32, i32* %35, i64 %idxprom11, !dbg !7375
  %36 = load i32, i32* %arrayidx12, align 4, !dbg !7375
  %add = add i32 %33, %36, !dbg !7376
  %mul = mul i32 -2, %add, !dbg !7377
  %37 = load i32, i32* %i, align 4, !dbg !7378
  %idxprom13 = sext i32 %37 to i64, !dbg !7379
  %38 = load i32*, i32** %b1, align 8, !dbg !7379
  %arrayidx14 = getelementptr inbounds i32, i32* %38, i64 %idxprom13, !dbg !7379
  %39 = load i32, i32* %arrayidx14, align 4, !dbg !7379
  %40 = load i32, i32* %i, align 4, !dbg !7380
  %idxprom15 = sext i32 %40 to i64, !dbg !7381
  %41 = load i32*, i32** %b6, align 8, !dbg !7381
  %arrayidx16 = getelementptr inbounds i32, i32* %41, i64 %idxprom15, !dbg !7381
  %42 = load i32, i32* %arrayidx16, align 4, !dbg !7381
  %add17 = add i32 %39, %42, !dbg !7382
  %mul18 = mul i32 10, %add17, !dbg !7383
  %add19 = add i32 %mul, %mul18, !dbg !7384
  %43 = load i32, i32* %i, align 4, !dbg !7385
  %idxprom20 = sext i32 %43 to i64, !dbg !7386
  %44 = load i32*, i32** %b2, align 8, !dbg !7386
  %arrayidx21 = getelementptr inbounds i32, i32* %44, i64 %idxprom20, !dbg !7386
  %45 = load i32, i32* %arrayidx21, align 4, !dbg !7386
  %46 = load i32, i32* %i, align 4, !dbg !7387
  %idxprom22 = sext i32 %46 to i64, !dbg !7388
  %47 = load i32*, i32** %b5, align 8, !dbg !7388
  %arrayidx23 = getelementptr inbounds i32, i32* %47, i64 %idxprom22, !dbg !7388
  %48 = load i32, i32* %arrayidx23, align 4, !dbg !7388
  %add24 = add i32 %45, %48, !dbg !7389
  %mul25 = mul i32 25, %add24, !dbg !7390
  %sub = sub i32 %add19, %mul25, !dbg !7391
  %49 = load i32, i32* %i, align 4, !dbg !7392
  %idxprom26 = sext i32 %49 to i64, !dbg !7393
  %50 = load i32*, i32** %b3, align 8, !dbg !7393
  %arrayidx27 = getelementptr inbounds i32, i32* %50, i64 %idxprom26, !dbg !7393
  %51 = load i32, i32* %arrayidx27, align 4, !dbg !7393
  %52 = load i32, i32* %i, align 4, !dbg !7394
  %idxprom28 = sext i32 %52 to i64, !dbg !7395
  %53 = load i32*, i32** %b4, align 8, !dbg !7395
  %arrayidx29 = getelementptr inbounds i32, i32* %53, i64 %idxprom28, !dbg !7395
  %54 = load i32, i32* %arrayidx29, align 4, !dbg !7395
  %add30 = add i32 %51, %54, !dbg !7396
  %mul31 = mul i32 81, %add30, !dbg !7397
  %add32 = add i32 %sub, %mul31, !dbg !7398
  %add33 = add i32 %add32, 128, !dbg !7399
  %shr = ashr i32 %add33, 8, !dbg !7400
  %add34 = add i32 %30, %shr, !dbg !7401
  %55 = load i32, i32* %i, align 4, !dbg !7402
  %idxprom35 = sext i32 %55 to i64, !dbg !7403
  %56 = load i32*, i32** %dst, align 8, !dbg !7403
  %arrayidx36 = getelementptr inbounds i32, i32* %56, i64 %idxprom35, !dbg !7403
  store i32 %add34, i32* %arrayidx36, align 4, !dbg !7404
  br label %for.inc, !dbg !7405

for.inc:                                          ; preds = %for.body
  %57 = load i32, i32* %i, align 4, !dbg !7406
  %inc = add nsw i32 %57, 1, !dbg !7406
  store i32 %inc, i32* %i, align 4, !dbg !7406
  br label %for.cond, !dbg !7408, !llvm.loop !7409

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7411
}

; Function Attrs: nounwind uwtable
define internal void @horizontal_compose_fidelityi_10bit(i8* %_b, i8* %_tmp, i32 %w) #0 !dbg !7412 {
entry:
  %retval.i84 = alloca i32, align 4
  %a.addr.i85 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i85, metadata !904, metadata !87), !dbg !7413
  %amin.addr.i86 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i86, metadata !911, metadata !87), !dbg !7420
  %amax.addr.i87 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i87, metadata !913, metadata !87), !dbg !7421
  %dst.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %dst.addr.i, metadata !6034, metadata !87), !dbg !7422
  %src0.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %src0.addr.i, metadata !6040, metadata !87), !dbg !7424
  %src1.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %src1.addr.i, metadata !6042, metadata !87), !dbg !7425
  %w2.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w2.addr.i, metadata !6044, metadata !87), !dbg !7426
  %add.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %add.addr.i, metadata !6046, metadata !87), !dbg !7427
  %shift.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %shift.addr.i, metadata !6048, metadata !87), !dbg !7428
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !6050, metadata !87), !dbg !7429
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !904, metadata !87), !dbg !7430
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !911, metadata !87), !dbg !7437
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !913, metadata !87), !dbg !7438
  %_b.addr = alloca i8*, align 8
  %_tmp.addr = alloca i8*, align 8
  %w.addr = alloca i32, align 4
  %w2 = alloca i32, align 4
  %i = alloca i32, align 4
  %x = alloca i32, align 4
  %v = alloca [8 x i32], align 16
  %b = alloca i32*, align 8
  %tmp = alloca i32*, align 8
  store i8* %_b, i8** %_b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b.addr, metadata !7439, metadata !87), !dbg !7440
  store i8* %_tmp, i8** %_tmp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_tmp.addr, metadata !7441, metadata !87), !dbg !7442
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !7443, metadata !87), !dbg !7444
  call void @llvm.dbg.declare(metadata i32* %w2, metadata !7445, metadata !87), !dbg !7446
  %0 = load i32, i32* %w.addr, align 4, !dbg !7447
  %shr = ashr i32 %0, 1, !dbg !7448
  store i32 %shr, i32* %w2, align 4, !dbg !7446
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7449, metadata !87), !dbg !7450
  call void @llvm.dbg.declare(metadata i32* %x, metadata !7451, metadata !87), !dbg !7452
  call void @llvm.dbg.declare(metadata [8 x i32]* %v, metadata !7453, metadata !87), !dbg !7455
  call void @llvm.dbg.declare(metadata i32** %b, metadata !7456, metadata !87), !dbg !7457
  %1 = load i8*, i8** %_b.addr, align 8, !dbg !7458
  %2 = bitcast i8* %1 to i32*, !dbg !7459
  store i32* %2, i32** %b, align 8, !dbg !7457
  call void @llvm.dbg.declare(metadata i32** %tmp, metadata !7460, metadata !87), !dbg !7461
  %3 = load i8*, i8** %_tmp.addr, align 8, !dbg !7462
  %4 = bitcast i8* %3 to i32*, !dbg !7463
  store i32* %4, i32** %tmp, align 8, !dbg !7461
  store i32 0, i32* %x, align 4, !dbg !7464
  br label %for.cond, !dbg !7465

for.cond:                                         ; preds = %for.inc33, %entry
  %5 = load i32, i32* %x, align 4, !dbg !7466
  %6 = load i32, i32* %w2, align 4, !dbg !7468
  %cmp = icmp slt i32 %5, %6, !dbg !7469
  br i1 %cmp, label %for.body, label %for.end35, !dbg !7470

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !7471
  br label %for.cond1, !dbg !7472

for.cond1:                                        ; preds = %for.inc, %for.body
  %7 = load i32, i32* %i, align 4, !dbg !7473
  %cmp2 = icmp slt i32 %7, 8, !dbg !7475
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !7476

for.body3:                                        ; preds = %for.cond1
  %8 = load i32, i32* %x, align 4, !dbg !7477
  %sub = sub nsw i32 %8, 3, !dbg !7478
  %9 = load i32, i32* %i, align 4, !dbg !7479
  %add = add nsw i32 %sub, %9, !dbg !7480
  %10 = load i32, i32* %w2, align 4, !dbg !7481
  %sub4 = sub nsw i32 %10, 1, !dbg !7482
  store i32 %add, i32* %a.addr.i, align 4, !dbg !7483
  store i32 0, i32* %amin.addr.i, align 4, !dbg !7483
  store i32 %sub4, i32* %amax.addr.i, align 4, !dbg !7483
  %11 = load i32, i32* %a.addr.i, align 4, !dbg !7484
  %12 = load i32, i32* %amin.addr.i, align 4, !dbg !7485
  %cmp.i = icmp slt i32 %11, %12, !dbg !7486
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !7487

if.then.i:                                        ; preds = %for.body3
  %13 = load i32, i32* %amin.addr.i, align 4, !dbg !7488
  store i32 %13, i32* %retval.i, align 4, !dbg !7489
  br label %av_clip_c.exit, !dbg !7489

if.else.i:                                        ; preds = %for.body3
  %14 = load i32, i32* %a.addr.i, align 4, !dbg !7490
  %15 = load i32, i32* %amax.addr.i, align 4, !dbg !7491
  %cmp1.i = icmp sgt i32 %14, %15, !dbg !7492
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !7493

if.then2.i:                                       ; preds = %if.else.i
  %16 = load i32, i32* %amax.addr.i, align 4, !dbg !7494
  store i32 %16, i32* %retval.i, align 4, !dbg !7495
  br label %av_clip_c.exit, !dbg !7495

if.else3.i:                                       ; preds = %if.else.i
  %17 = load i32, i32* %a.addr.i, align 4, !dbg !7496
  store i32 %17, i32* %retval.i, align 4, !dbg !7497
  br label %av_clip_c.exit, !dbg !7497

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %18 = load i32, i32* %retval.i, align 4, !dbg !7498
  %idxprom = sext i32 %18 to i64, !dbg !7499
  %19 = load i32*, i32** %b, align 8, !dbg !7499
  %arrayidx = getelementptr inbounds i32, i32* %19, i64 %idxprom, !dbg !7499
  %20 = load i32, i32* %arrayidx, align 4, !dbg !7499
  %21 = load i32, i32* %i, align 4, !dbg !7500
  %idxprom5 = sext i32 %21 to i64, !dbg !7501
  %arrayidx6 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 %idxprom5, !dbg !7501
  store i32 %20, i32* %arrayidx6, align 4, !dbg !7502
  br label %for.inc, !dbg !7501

for.inc:                                          ; preds = %av_clip_c.exit
  %22 = load i32, i32* %i, align 4, !dbg !7503
  %inc = add nsw i32 %22, 1, !dbg !7503
  store i32 %inc, i32* %i, align 4, !dbg !7503
  br label %for.cond1, !dbg !7505, !llvm.loop !7506

for.end:                                          ; preds = %for.cond1
  %23 = load i32, i32* %x, align 4, !dbg !7508
  %24 = load i32, i32* %w2, align 4, !dbg !7509
  %add7 = add nsw i32 %23, %24, !dbg !7510
  %idxprom8 = sext i32 %add7 to i64, !dbg !7511
  %25 = load i32*, i32** %b, align 8, !dbg !7511
  %arrayidx9 = getelementptr inbounds i32, i32* %25, i64 %idxprom8, !dbg !7511
  %26 = load i32, i32* %arrayidx9, align 4, !dbg !7511
  %arrayidx10 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 0, !dbg !7512
  %27 = load i32, i32* %arrayidx10, align 16, !dbg !7512
  %arrayidx11 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 7, !dbg !7513
  %28 = load i32, i32* %arrayidx11, align 4, !dbg !7513
  %add12 = add i32 %27, %28, !dbg !7514
  %mul = mul i32 -2, %add12, !dbg !7515
  %arrayidx13 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 1, !dbg !7516
  %29 = load i32, i32* %arrayidx13, align 4, !dbg !7516
  %arrayidx14 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 6, !dbg !7517
  %30 = load i32, i32* %arrayidx14, align 8, !dbg !7517
  %add15 = add i32 %29, %30, !dbg !7518
  %mul16 = mul i32 10, %add15, !dbg !7519
  %add17 = add i32 %mul, %mul16, !dbg !7520
  %arrayidx18 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 2, !dbg !7521
  %31 = load i32, i32* %arrayidx18, align 8, !dbg !7521
  %arrayidx19 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 5, !dbg !7522
  %32 = load i32, i32* %arrayidx19, align 4, !dbg !7522
  %add20 = add i32 %31, %32, !dbg !7523
  %mul21 = mul i32 25, %add20, !dbg !7524
  %sub22 = sub i32 %add17, %mul21, !dbg !7525
  %arrayidx23 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 3, !dbg !7526
  %33 = load i32, i32* %arrayidx23, align 4, !dbg !7526
  %arrayidx24 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 4, !dbg !7527
  %34 = load i32, i32* %arrayidx24, align 16, !dbg !7527
  %add25 = add i32 %33, %34, !dbg !7528
  %mul26 = mul i32 81, %add25, !dbg !7529
  %add27 = add i32 %sub22, %mul26, !dbg !7530
  %add28 = add i32 %add27, 128, !dbg !7531
  %shr29 = ashr i32 %add28, 8, !dbg !7532
  %add30 = add i32 %26, %shr29, !dbg !7533
  %35 = load i32, i32* %x, align 4, !dbg !7534
  %idxprom31 = sext i32 %35 to i64, !dbg !7535
  %36 = load i32*, i32** %tmp, align 8, !dbg !7535
  %arrayidx32 = getelementptr inbounds i32, i32* %36, i64 %idxprom31, !dbg !7535
  store i32 %add30, i32* %arrayidx32, align 4, !dbg !7536
  br label %for.inc33, !dbg !7537

for.inc33:                                        ; preds = %for.end
  %37 = load i32, i32* %x, align 4, !dbg !7538
  %inc34 = add nsw i32 %37, 1, !dbg !7538
  store i32 %inc34, i32* %x, align 4, !dbg !7538
  br label %for.cond, !dbg !7540, !llvm.loop !7541

for.end35:                                        ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !7543
  br label %for.cond36, !dbg !7544

for.cond36:                                       ; preds = %for.inc80, %for.end35
  %38 = load i32, i32* %x, align 4, !dbg !7545
  %39 = load i32, i32* %w2, align 4, !dbg !7547
  %cmp37 = icmp slt i32 %38, %39, !dbg !7548
  br i1 %cmp37, label %for.body38, label %for.end82, !dbg !7549

for.body38:                                       ; preds = %for.cond36
  store i32 0, i32* %i, align 4, !dbg !7550
  br label %for.cond39, !dbg !7551

for.cond39:                                       ; preds = %for.inc50, %for.body38
  %40 = load i32, i32* %i, align 4, !dbg !7552
  %cmp40 = icmp slt i32 %40, 8, !dbg !7554
  br i1 %cmp40, label %for.body41, label %for.end52, !dbg !7555

for.body41:                                       ; preds = %for.cond39
  %41 = load i32, i32* %x, align 4, !dbg !7556
  %sub42 = sub nsw i32 %41, 4, !dbg !7557
  %42 = load i32, i32* %i, align 4, !dbg !7558
  %add43 = add nsw i32 %sub42, %42, !dbg !7559
  %43 = load i32, i32* %w2, align 4, !dbg !7560
  %sub44 = sub nsw i32 %43, 1, !dbg !7561
  store i32 %add43, i32* %a.addr.i85, align 4, !dbg !7562
  store i32 0, i32* %amin.addr.i86, align 4, !dbg !7562
  store i32 %sub44, i32* %amax.addr.i87, align 4, !dbg !7562
  %44 = load i32, i32* %a.addr.i85, align 4, !dbg !7563
  %45 = load i32, i32* %amin.addr.i86, align 4, !dbg !7564
  %cmp.i88 = icmp slt i32 %44, %45, !dbg !7565
  br i1 %cmp.i88, label %if.then.i89, label %if.else.i91, !dbg !7566

if.then.i89:                                      ; preds = %for.body41
  %46 = load i32, i32* %amin.addr.i86, align 4, !dbg !7567
  store i32 %46, i32* %retval.i84, align 4, !dbg !7568
  br label %av_clip_c.exit94, !dbg !7568

if.else.i91:                                      ; preds = %for.body41
  %47 = load i32, i32* %a.addr.i85, align 4, !dbg !7569
  %48 = load i32, i32* %amax.addr.i87, align 4, !dbg !7570
  %cmp1.i90 = icmp sgt i32 %47, %48, !dbg !7571
  br i1 %cmp1.i90, label %if.then2.i92, label %if.else3.i93, !dbg !7572

if.then2.i92:                                     ; preds = %if.else.i91
  %49 = load i32, i32* %amax.addr.i87, align 4, !dbg !7573
  store i32 %49, i32* %retval.i84, align 4, !dbg !7574
  br label %av_clip_c.exit94, !dbg !7574

if.else3.i93:                                     ; preds = %if.else.i91
  %50 = load i32, i32* %a.addr.i85, align 4, !dbg !7575
  store i32 %50, i32* %retval.i84, align 4, !dbg !7576
  br label %av_clip_c.exit94, !dbg !7576

av_clip_c.exit94:                                 ; preds = %if.then.i89, %if.then2.i92, %if.else3.i93
  %51 = load i32, i32* %retval.i84, align 4, !dbg !7577
  %idxprom46 = sext i32 %51 to i64, !dbg !7578
  %52 = load i32*, i32** %tmp, align 8, !dbg !7578
  %arrayidx47 = getelementptr inbounds i32, i32* %52, i64 %idxprom46, !dbg !7578
  %53 = load i32, i32* %arrayidx47, align 4, !dbg !7578
  %54 = load i32, i32* %i, align 4, !dbg !7579
  %idxprom48 = sext i32 %54 to i64, !dbg !7580
  %arrayidx49 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 %idxprom48, !dbg !7580
  store i32 %53, i32* %arrayidx49, align 4, !dbg !7581
  br label %for.inc50, !dbg !7580

for.inc50:                                        ; preds = %av_clip_c.exit94
  %55 = load i32, i32* %i, align 4, !dbg !7582
  %inc51 = add nsw i32 %55, 1, !dbg !7582
  store i32 %inc51, i32* %i, align 4, !dbg !7582
  br label %for.cond39, !dbg !7584, !llvm.loop !7585

for.end52:                                        ; preds = %for.cond39
  %56 = load i32, i32* %x, align 4, !dbg !7587
  %idxprom53 = sext i32 %56 to i64, !dbg !7588
  %57 = load i32*, i32** %b, align 8, !dbg !7588
  %arrayidx54 = getelementptr inbounds i32, i32* %57, i64 %idxprom53, !dbg !7588
  %58 = load i32, i32* %arrayidx54, align 4, !dbg !7588
  %arrayidx55 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 0, !dbg !7589
  %59 = load i32, i32* %arrayidx55, align 16, !dbg !7589
  %arrayidx56 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 7, !dbg !7590
  %60 = load i32, i32* %arrayidx56, align 4, !dbg !7590
  %add57 = add i32 %59, %60, !dbg !7591
  %mul58 = mul i32 -8, %add57, !dbg !7592
  %arrayidx59 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 1, !dbg !7593
  %61 = load i32, i32* %arrayidx59, align 4, !dbg !7593
  %arrayidx60 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 6, !dbg !7594
  %62 = load i32, i32* %arrayidx60, align 8, !dbg !7594
  %add61 = add i32 %61, %62, !dbg !7595
  %mul62 = mul i32 21, %add61, !dbg !7596
  %add63 = add i32 %mul58, %mul62, !dbg !7597
  %arrayidx64 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 2, !dbg !7598
  %63 = load i32, i32* %arrayidx64, align 8, !dbg !7598
  %arrayidx65 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 5, !dbg !7599
  %64 = load i32, i32* %arrayidx65, align 4, !dbg !7599
  %add66 = add i32 %63, %64, !dbg !7600
  %mul67 = mul i32 46, %add66, !dbg !7601
  %sub68 = sub i32 %add63, %mul67, !dbg !7602
  %arrayidx69 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 3, !dbg !7603
  %65 = load i32, i32* %arrayidx69, align 4, !dbg !7603
  %arrayidx70 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 4, !dbg !7604
  %66 = load i32, i32* %arrayidx70, align 16, !dbg !7604
  %add71 = add i32 %65, %66, !dbg !7605
  %mul72 = mul i32 161, %add71, !dbg !7606
  %add73 = add i32 %sub68, %mul72, !dbg !7607
  %add74 = add i32 %add73, 128, !dbg !7608
  %shr75 = ashr i32 %add74, 8, !dbg !7609
  %sub76 = sub i32 %58, %shr75, !dbg !7610
  %67 = load i32, i32* %x, align 4, !dbg !7611
  %68 = load i32, i32* %w2, align 4, !dbg !7612
  %add77 = add nsw i32 %67, %68, !dbg !7613
  %idxprom78 = sext i32 %add77 to i64, !dbg !7614
  %69 = load i32*, i32** %tmp, align 8, !dbg !7614
  %arrayidx79 = getelementptr inbounds i32, i32* %69, i64 %idxprom78, !dbg !7614
  store i32 %sub76, i32* %arrayidx79, align 4, !dbg !7615
  br label %for.inc80, !dbg !7616

for.inc80:                                        ; preds = %for.end52
  %70 = load i32, i32* %x, align 4, !dbg !7617
  %inc81 = add nsw i32 %70, 1, !dbg !7617
  store i32 %inc81, i32* %x, align 4, !dbg !7617
  br label %for.cond36, !dbg !7619, !llvm.loop !7620

for.end82:                                        ; preds = %for.cond36
  %71 = load i32*, i32** %b, align 8, !dbg !7622
  %72 = load i32*, i32** %tmp, align 8, !dbg !7623
  %73 = load i32, i32* %w2, align 4, !dbg !7624
  %idx.ext = sext i32 %73 to i64, !dbg !7625
  %add.ptr = getelementptr inbounds i32, i32* %72, i64 %idx.ext, !dbg !7625
  %74 = load i32*, i32** %tmp, align 8, !dbg !7626
  %75 = load i32, i32* %w2, align 4, !dbg !7627
  store i32* %71, i32** %dst.addr.i, align 8, !dbg !7628
  store i32* %add.ptr, i32** %src0.addr.i, align 8, !dbg !7628
  store i32* %74, i32** %src1.addr.i, align 8, !dbg !7628
  store i32 %75, i32* %w2.addr.i, align 4, !dbg !7628
  store i32 0, i32* %add.addr.i, align 4, !dbg !7628
  store i32 0, i32* %shift.addr.i, align 4, !dbg !7628
  store i32 0, i32* %i.i, align 4, !dbg !7629
  br label %for.cond.i, !dbg !7630

for.cond.i:                                       ; preds = %for.body.i, %for.end82
  %76 = load i32, i32* %i.i, align 4, !dbg !7631
  %77 = load i32, i32* %w2.addr.i, align 4, !dbg !7632
  %cmp.i83 = icmp slt i32 %76, %77, !dbg !7633
  br i1 %cmp.i83, label %for.body.i, label %interleave_10bit.exit, !dbg !7634

for.body.i:                                       ; preds = %for.cond.i
  %78 = load i32, i32* %i.i, align 4, !dbg !7635
  %idxprom.i = sext i32 %78 to i64, !dbg !7636
  %79 = load i32*, i32** %src0.addr.i, align 8, !dbg !7636
  %arrayidx.i = getelementptr inbounds i32, i32* %79, i64 %idxprom.i, !dbg !7636
  %80 = load i32, i32* %arrayidx.i, align 4, !dbg !7636
  %81 = load i32, i32* %add.addr.i, align 4, !dbg !7637
  %add1.i = add i32 %80, %81, !dbg !7638
  %82 = load i32, i32* %shift.addr.i, align 4, !dbg !7639
  %shr.i = ashr i32 %add1.i, %82, !dbg !7640
  %83 = load i32, i32* %i.i, align 4, !dbg !7641
  %mul.i = mul nsw i32 2, %83, !dbg !7642
  %idxprom2.i = sext i32 %mul.i to i64, !dbg !7643
  %84 = load i32*, i32** %dst.addr.i, align 8, !dbg !7643
  %arrayidx3.i = getelementptr inbounds i32, i32* %84, i64 %idxprom2.i, !dbg !7643
  store i32 %shr.i, i32* %arrayidx3.i, align 4, !dbg !7644
  %85 = load i32, i32* %i.i, align 4, !dbg !7645
  %idxprom4.i = sext i32 %85 to i64, !dbg !7646
  %86 = load i32*, i32** %src1.addr.i, align 8, !dbg !7646
  %arrayidx5.i = getelementptr inbounds i32, i32* %86, i64 %idxprom4.i, !dbg !7646
  %87 = load i32, i32* %arrayidx5.i, align 4, !dbg !7646
  %88 = load i32, i32* %add.addr.i, align 4, !dbg !7647
  %add6.i = add i32 %87, %88, !dbg !7648
  %89 = load i32, i32* %shift.addr.i, align 4, !dbg !7649
  %shr7.i = ashr i32 %add6.i, %89, !dbg !7650
  %90 = load i32, i32* %i.i, align 4, !dbg !7651
  %mul8.i = mul nsw i32 2, %90, !dbg !7652
  %add9.i = add nsw i32 %mul8.i, 1, !dbg !7653
  %idxprom10.i = sext i32 %add9.i to i64, !dbg !7654
  %91 = load i32*, i32** %dst.addr.i, align 8, !dbg !7654
  %arrayidx11.i = getelementptr inbounds i32, i32* %91, i64 %idxprom10.i, !dbg !7654
  store i32 %shr7.i, i32* %arrayidx11.i, align 4, !dbg !7655
  %92 = load i32, i32* %i.i, align 4, !dbg !7656
  %inc.i = add nsw i32 %92, 1, !dbg !7656
  store i32 %inc.i, i32* %i.i, align 4, !dbg !7656
  br label %for.cond.i, !dbg !7657, !llvm.loop !6195

interleave_10bit.exit:                            ; preds = %for.cond.i
  ret void, !dbg !7658
}

; Function Attrs: nounwind uwtable
define internal void @spatial_compose_daub97i_dy_10bit(%struct.DWTContext* %d, i32 %level, i32 %width, i32 %height, i32 %stride) #0 !dbg !7659 {
entry:
  %retval.i73 = alloca i32, align 4
  %x.addr.i74 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i74, metadata !1102, metadata !87), !dbg !7660
  %w.addr.i75 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i75, metadata !1109, metadata !87), !dbg !7662
  %retval.i = alloca i32, align 4
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !1102, metadata !87), !dbg !7663
  %w.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i, metadata !1109, metadata !87), !dbg !7665
  %d.addr = alloca %struct.DWTContext*, align 8
  %level.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  %vertical_compose_l0 = alloca void (i8*, i8*, i8*, i32)*, align 8
  %vertical_compose_h0 = alloca void (i8*, i8*, i8*, i32)*, align 8
  %vertical_compose_l1 = alloca void (i8*, i8*, i8*, i32)*, align 8
  %vertical_compose_h1 = alloca void (i8*, i8*, i8*, i32)*, align 8
  %cs = alloca %struct.DWTCompose*, align 8
  %i = alloca i32, align 4
  %y = alloca i32, align 4
  %b = alloca [6 x i8*], align 16
  store %struct.DWTContext* %d, %struct.DWTContext** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTContext** %d.addr, metadata !7666, metadata !87), !dbg !7667
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !7668, metadata !87), !dbg !7669
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !7670, metadata !87), !dbg !7671
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !7672, metadata !87), !dbg !7673
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !7674, metadata !87), !dbg !7675
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i32)** %vertical_compose_l0, metadata !7676, metadata !87), !dbg !7677
  %0 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !7678
  %vertical_compose_l01 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %0, i32 0, i32 8, !dbg !7679
  %1 = load void ()*, void ()** %vertical_compose_l01, align 8, !dbg !7679
  %2 = bitcast void ()* %1 to i8*, !dbg !7680
  %3 = bitcast i8* %2 to void (i8*, i8*, i8*, i32)*, !dbg !7680
  store void (i8*, i8*, i8*, i32)* %3, void (i8*, i8*, i8*, i32)** %vertical_compose_l0, align 8, !dbg !7677
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i32)** %vertical_compose_h0, metadata !7681, metadata !87), !dbg !7682
  %4 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !7683
  %vertical_compose_h02 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %4, i32 0, i32 9, !dbg !7684
  %5 = load void ()*, void ()** %vertical_compose_h02, align 8, !dbg !7684
  %6 = bitcast void ()* %5 to i8*, !dbg !7685
  %7 = bitcast i8* %6 to void (i8*, i8*, i8*, i32)*, !dbg !7685
  store void (i8*, i8*, i8*, i32)* %7, void (i8*, i8*, i8*, i32)** %vertical_compose_h0, align 8, !dbg !7682
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i32)** %vertical_compose_l1, metadata !7686, metadata !87), !dbg !7687
  %8 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !7688
  %vertical_compose_l13 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %8, i32 0, i32 10, !dbg !7689
  %9 = load void ()*, void ()** %vertical_compose_l13, align 8, !dbg !7689
  %10 = bitcast void ()* %9 to i8*, !dbg !7690
  %11 = bitcast i8* %10 to void (i8*, i8*, i8*, i32)*, !dbg !7690
  store void (i8*, i8*, i8*, i32)* %11, void (i8*, i8*, i8*, i32)** %vertical_compose_l1, align 8, !dbg !7687
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i32)** %vertical_compose_h1, metadata !7691, metadata !87), !dbg !7692
  %12 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !7693
  %vertical_compose_h14 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %12, i32 0, i32 11, !dbg !7694
  %13 = load void ()*, void ()** %vertical_compose_h14, align 8, !dbg !7694
  %14 = bitcast void ()* %13 to i8*, !dbg !7695
  %15 = bitcast i8* %14 to void (i8*, i8*, i8*, i32)*, !dbg !7695
  store void (i8*, i8*, i8*, i32)* %15, void (i8*, i8*, i8*, i32)** %vertical_compose_h1, align 8, !dbg !7692
  call void @llvm.dbg.declare(metadata %struct.DWTCompose** %cs, metadata !7696, metadata !87), !dbg !7697
  %16 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !7698
  %cs5 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %16, i32 0, i32 14, !dbg !7699
  %arraydecay = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs5, i32 0, i32 0, !dbg !7698
  %17 = load i32, i32* %level.addr, align 4, !dbg !7700
  %idx.ext = sext i32 %17 to i64, !dbg !7701
  %add.ptr = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arraydecay, i64 %idx.ext, !dbg !7701
  store %struct.DWTCompose* %add.ptr, %struct.DWTCompose** %cs, align 8, !dbg !7697
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7702, metadata !87), !dbg !7703
  call void @llvm.dbg.declare(metadata i32* %y, metadata !7704, metadata !87), !dbg !7705
  %18 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !7706
  %y6 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %18, i32 0, i32 1, !dbg !7707
  %19 = load i32, i32* %y6, align 8, !dbg !7707
  store i32 %19, i32* %y, align 4, !dbg !7705
  call void @llvm.dbg.declare(metadata [6 x i8*]* %b, metadata !7708, metadata !87), !dbg !7709
  store i32 0, i32* %i, align 4, !dbg !7710
  br label %for.cond, !dbg !7712

for.cond:                                         ; preds = %for.inc, %entry
  %20 = load i32, i32* %i, align 4, !dbg !7713
  %cmp = icmp slt i32 %20, 4, !dbg !7716
  br i1 %cmp, label %for.body, label %for.end, !dbg !7717

for.body:                                         ; preds = %for.cond
  %21 = load i32, i32* %i, align 4, !dbg !7718
  %idxprom = sext i32 %21 to i64, !dbg !7719
  %22 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !7719
  %b7 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %22, i32 0, i32 0, !dbg !7720
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %b7, i64 0, i64 %idxprom, !dbg !7719
  %23 = load i8*, i8** %arrayidx, align 8, !dbg !7719
  %24 = load i32, i32* %i, align 4, !dbg !7721
  %idxprom8 = sext i32 %24 to i64, !dbg !7722
  %arrayidx9 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 %idxprom8, !dbg !7722
  store i8* %23, i8** %arrayidx9, align 8, !dbg !7723
  br label %for.inc, !dbg !7722

for.inc:                                          ; preds = %for.body
  %25 = load i32, i32* %i, align 4, !dbg !7724
  %inc = add nsw i32 %25, 1, !dbg !7724
  store i32 %inc, i32* %i, align 4, !dbg !7724
  br label %for.cond, !dbg !7726, !llvm.loop !7727

for.end:                                          ; preds = %for.cond
  %26 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !7729
  %buffer = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %26, i32 0, i32 0, !dbg !7730
  %27 = load i8*, i8** %buffer, align 8, !dbg !7730
  %28 = load i32, i32* %y, align 4, !dbg !7731
  %add = add nsw i32 %28, 3, !dbg !7732
  %29 = load i32, i32* %height.addr, align 4, !dbg !7733
  %sub = sub nsw i32 %29, 1, !dbg !7734
  store i32 %add, i32* %x.addr.i, align 4, !dbg !7735
  store i32 %sub, i32* %w.addr.i, align 4, !dbg !7735
  %30 = load i32, i32* %w.addr.i, align 4, !dbg !7736
  %tobool.i = icmp ne i32 %30, 0, !dbg !7736
  br i1 %tobool.i, label %if.end.i, label %if.then.i, !dbg !7737

if.then.i:                                        ; preds = %for.end
  store i32 0, i32* %retval.i, align 4, !dbg !7738
  br label %avpriv_mirror.exit, !dbg !7738

if.end.i:                                         ; preds = %for.end
  br label %while.cond.i, !dbg !7739

while.cond.i:                                     ; preds = %if.end3.i, %if.end.i
  %31 = load i32, i32* %x.addr.i, align 4, !dbg !7740
  %32 = load i32, i32* %w.addr.i, align 4, !dbg !7741
  %cmp.i = icmp ugt i32 %31, %32, !dbg !7742
  br i1 %cmp.i, label %while.body.i, label %while.end.i, !dbg !7743

while.body.i:                                     ; preds = %while.cond.i
  %33 = load i32, i32* %x.addr.i, align 4, !dbg !7744
  %sub.i = sub nsw i32 0, %33, !dbg !7745
  store i32 %sub.i, i32* %x.addr.i, align 4, !dbg !7746
  %34 = load i32, i32* %x.addr.i, align 4, !dbg !7747
  %cmp1.i = icmp slt i32 %34, 0, !dbg !7748
  br i1 %cmp1.i, label %if.then2.i, label %if.end3.i, !dbg !7749

if.then2.i:                                       ; preds = %while.body.i
  %35 = load i32, i32* %w.addr.i, align 4, !dbg !7750
  %mul.i = mul nsw i32 2, %35, !dbg !7751
  %36 = load i32, i32* %x.addr.i, align 4, !dbg !7752
  %add.i = add nsw i32 %36, %mul.i, !dbg !7752
  store i32 %add.i, i32* %x.addr.i, align 4, !dbg !7752
  br label %if.end3.i, !dbg !7753

if.end3.i:                                        ; preds = %if.then2.i, %while.body.i
  br label %while.cond.i, !dbg !7754, !llvm.loop !1150

while.end.i:                                      ; preds = %while.cond.i
  %37 = load i32, i32* %x.addr.i, align 4, !dbg !7755
  store i32 %37, i32* %retval.i, align 4, !dbg !7756
  br label %avpriv_mirror.exit, !dbg !7756

avpriv_mirror.exit:                               ; preds = %if.then.i, %while.end.i
  %38 = load i32, i32* %retval.i, align 4, !dbg !7757
  %39 = load i32, i32* %stride.addr, align 4, !dbg !7758
  %mul = mul nsw i32 %38, %39, !dbg !7759
  %idx.ext10 = sext i32 %mul to i64, !dbg !7760
  %add.ptr11 = getelementptr inbounds i8, i8* %27, i64 %idx.ext10, !dbg !7760
  %arrayidx12 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 4, !dbg !7761
  store i8* %add.ptr11, i8** %arrayidx12, align 16, !dbg !7762
  %40 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !7763
  %buffer13 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %40, i32 0, i32 0, !dbg !7764
  %41 = load i8*, i8** %buffer13, align 8, !dbg !7764
  %42 = load i32, i32* %y, align 4, !dbg !7765
  %add14 = add nsw i32 %42, 4, !dbg !7766
  %43 = load i32, i32* %height.addr, align 4, !dbg !7767
  %sub15 = sub nsw i32 %43, 1, !dbg !7768
  store i32 %add14, i32* %x.addr.i74, align 4, !dbg !7769
  store i32 %sub15, i32* %w.addr.i75, align 4, !dbg !7769
  %44 = load i32, i32* %w.addr.i75, align 4, !dbg !7770
  %tobool.i76 = icmp ne i32 %44, 0, !dbg !7770
  br i1 %tobool.i76, label %if.end.i78, label %if.then.i77, !dbg !7771

if.then.i77:                                      ; preds = %avpriv_mirror.exit
  store i32 0, i32* %retval.i73, align 4, !dbg !7772
  br label %avpriv_mirror.exit89, !dbg !7772

if.end.i78:                                       ; preds = %avpriv_mirror.exit
  br label %while.cond.i80, !dbg !7773

while.cond.i80:                                   ; preds = %if.end3.i87, %if.end.i78
  %45 = load i32, i32* %x.addr.i74, align 4, !dbg !7774
  %46 = load i32, i32* %w.addr.i75, align 4, !dbg !7775
  %cmp.i79 = icmp ugt i32 %45, %46, !dbg !7776
  br i1 %cmp.i79, label %while.body.i83, label %while.end.i88, !dbg !7777

while.body.i83:                                   ; preds = %while.cond.i80
  %47 = load i32, i32* %x.addr.i74, align 4, !dbg !7778
  %sub.i81 = sub nsw i32 0, %47, !dbg !7779
  store i32 %sub.i81, i32* %x.addr.i74, align 4, !dbg !7780
  %48 = load i32, i32* %x.addr.i74, align 4, !dbg !7781
  %cmp1.i82 = icmp slt i32 %48, 0, !dbg !7782
  br i1 %cmp1.i82, label %if.then2.i86, label %if.end3.i87, !dbg !7783

if.then2.i86:                                     ; preds = %while.body.i83
  %49 = load i32, i32* %w.addr.i75, align 4, !dbg !7784
  %mul.i84 = mul nsw i32 2, %49, !dbg !7785
  %50 = load i32, i32* %x.addr.i74, align 4, !dbg !7786
  %add.i85 = add nsw i32 %50, %mul.i84, !dbg !7786
  store i32 %add.i85, i32* %x.addr.i74, align 4, !dbg !7786
  br label %if.end3.i87, !dbg !7787

if.end3.i87:                                      ; preds = %if.then2.i86, %while.body.i83
  br label %while.cond.i80, !dbg !7788, !llvm.loop !1150

while.end.i88:                                    ; preds = %while.cond.i80
  %51 = load i32, i32* %x.addr.i74, align 4, !dbg !7789
  store i32 %51, i32* %retval.i73, align 4, !dbg !7790
  br label %avpriv_mirror.exit89, !dbg !7790

avpriv_mirror.exit89:                             ; preds = %if.then.i77, %while.end.i88
  %52 = load i32, i32* %retval.i73, align 4, !dbg !7791
  %53 = load i32, i32* %stride.addr, align 4, !dbg !7792
  %mul17 = mul nsw i32 %52, %53, !dbg !7793
  %idx.ext18 = sext i32 %mul17 to i64, !dbg !7794
  %add.ptr19 = getelementptr inbounds i8, i8* %41, i64 %idx.ext18, !dbg !7794
  %arrayidx20 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 5, !dbg !7795
  store i8* %add.ptr19, i8** %arrayidx20, align 8, !dbg !7796
  %54 = load i32, i32* %y, align 4, !dbg !7797
  %add21 = add nsw i32 %54, 3, !dbg !7799
  %55 = load i32, i32* %height.addr, align 4, !dbg !7800
  %cmp22 = icmp ult i32 %add21, %55, !dbg !7801
  br i1 %cmp22, label %if.then, label %if.end, !dbg !7802

if.then:                                          ; preds = %avpriv_mirror.exit89
  %56 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %vertical_compose_l1, align 8, !dbg !7803
  %arrayidx23 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 3, !dbg !7805
  %57 = load i8*, i8** %arrayidx23, align 8, !dbg !7805
  %arrayidx24 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 4, !dbg !7806
  %58 = load i8*, i8** %arrayidx24, align 16, !dbg !7806
  %arrayidx25 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 5, !dbg !7807
  %59 = load i8*, i8** %arrayidx25, align 8, !dbg !7807
  %60 = load i32, i32* %width.addr, align 4, !dbg !7808
  call void %56(i8* %57, i8* %58, i8* %59, i32 %60), !dbg !7803
  br label %if.end, !dbg !7803

if.end:                                           ; preds = %if.then, %avpriv_mirror.exit89
  %61 = load i32, i32* %y, align 4, !dbg !7809
  %add26 = add nsw i32 %61, 2, !dbg !7811
  %62 = load i32, i32* %height.addr, align 4, !dbg !7812
  %cmp27 = icmp ult i32 %add26, %62, !dbg !7813
  br i1 %cmp27, label %if.then28, label %if.end32, !dbg !7814

if.then28:                                        ; preds = %if.end
  %63 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %vertical_compose_h1, align 8, !dbg !7815
  %arrayidx29 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 2, !dbg !7817
  %64 = load i8*, i8** %arrayidx29, align 16, !dbg !7817
  %arrayidx30 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 3, !dbg !7818
  %65 = load i8*, i8** %arrayidx30, align 8, !dbg !7818
  %arrayidx31 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 4, !dbg !7819
  %66 = load i8*, i8** %arrayidx31, align 16, !dbg !7819
  %67 = load i32, i32* %width.addr, align 4, !dbg !7820
  call void %63(i8* %64, i8* %65, i8* %66, i32 %67), !dbg !7815
  br label %if.end32, !dbg !7815

if.end32:                                         ; preds = %if.then28, %if.end
  %68 = load i32, i32* %y, align 4, !dbg !7821
  %add33 = add nsw i32 %68, 1, !dbg !7823
  %69 = load i32, i32* %height.addr, align 4, !dbg !7824
  %cmp34 = icmp ult i32 %add33, %69, !dbg !7825
  br i1 %cmp34, label %if.then35, label %if.end39, !dbg !7826

if.then35:                                        ; preds = %if.end32
  %70 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %vertical_compose_l0, align 8, !dbg !7827
  %arrayidx36 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 1, !dbg !7829
  %71 = load i8*, i8** %arrayidx36, align 8, !dbg !7829
  %arrayidx37 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 2, !dbg !7830
  %72 = load i8*, i8** %arrayidx37, align 16, !dbg !7830
  %arrayidx38 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 3, !dbg !7831
  %73 = load i8*, i8** %arrayidx38, align 8, !dbg !7831
  %74 = load i32, i32* %width.addr, align 4, !dbg !7832
  call void %70(i8* %71, i8* %72, i8* %73, i32 %74), !dbg !7827
  br label %if.end39, !dbg !7827

if.end39:                                         ; preds = %if.then35, %if.end32
  %75 = load i32, i32* %y, align 4, !dbg !7833
  %add40 = add nsw i32 %75, 0, !dbg !7835
  %76 = load i32, i32* %height.addr, align 4, !dbg !7836
  %cmp41 = icmp ult i32 %add40, %76, !dbg !7837
  br i1 %cmp41, label %if.then42, label %if.end46, !dbg !7838

if.then42:                                        ; preds = %if.end39
  %77 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %vertical_compose_h0, align 8, !dbg !7839
  %arrayidx43 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 0, !dbg !7841
  %78 = load i8*, i8** %arrayidx43, align 16, !dbg !7841
  %arrayidx44 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 1, !dbg !7842
  %79 = load i8*, i8** %arrayidx44, align 8, !dbg !7842
  %arrayidx45 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 2, !dbg !7843
  %80 = load i8*, i8** %arrayidx45, align 16, !dbg !7843
  %81 = load i32, i32* %width.addr, align 4, !dbg !7844
  call void %77(i8* %78, i8* %79, i8* %80, i32 %81), !dbg !7839
  br label %if.end46, !dbg !7839

if.end46:                                         ; preds = %if.then42, %if.end39
  %82 = load i32, i32* %y, align 4, !dbg !7845
  %sub47 = sub nsw i32 %82, 1, !dbg !7847
  %83 = load i32, i32* %height.addr, align 4, !dbg !7848
  %cmp48 = icmp ult i32 %sub47, %83, !dbg !7849
  br i1 %cmp48, label %if.then49, label %if.end51, !dbg !7850

if.then49:                                        ; preds = %if.end46
  %84 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !7851
  %horizontal_compose = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %84, i32 0, i32 13, !dbg !7853
  %85 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %horizontal_compose, align 8, !dbg !7853
  %arrayidx50 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 0, !dbg !7854
  %86 = load i8*, i8** %arrayidx50, align 16, !dbg !7854
  %87 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !7855
  %temp = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %87, i32 0, i32 1, !dbg !7856
  %88 = load i8*, i8** %temp, align 8, !dbg !7856
  %89 = load i32, i32* %width.addr, align 4, !dbg !7857
  call void %85(i8* %86, i8* %88, i32 %89), !dbg !7851
  br label %if.end51, !dbg !7851

if.end51:                                         ; preds = %if.then49, %if.end46
  %90 = load i32, i32* %y, align 4, !dbg !7858
  %add52 = add nsw i32 %90, 0, !dbg !7860
  %91 = load i32, i32* %height.addr, align 4, !dbg !7861
  %cmp53 = icmp ult i32 %add52, %91, !dbg !7862
  br i1 %cmp53, label %if.then54, label %if.end58, !dbg !7863

if.then54:                                        ; preds = %if.end51
  %92 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !7864
  %horizontal_compose55 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %92, i32 0, i32 13, !dbg !7866
  %93 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %horizontal_compose55, align 8, !dbg !7866
  %arrayidx56 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 1, !dbg !7867
  %94 = load i8*, i8** %arrayidx56, align 8, !dbg !7867
  %95 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !7868
  %temp57 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %95, i32 0, i32 1, !dbg !7869
  %96 = load i8*, i8** %temp57, align 8, !dbg !7869
  %97 = load i32, i32* %width.addr, align 4, !dbg !7870
  call void %93(i8* %94, i8* %96, i32 %97), !dbg !7864
  br label %if.end58, !dbg !7864

if.end58:                                         ; preds = %if.then54, %if.end51
  store i32 0, i32* %i, align 4, !dbg !7871
  br label %for.cond59, !dbg !7873

for.cond59:                                       ; preds = %for.inc68, %if.end58
  %98 = load i32, i32* %i, align 4, !dbg !7874
  %cmp60 = icmp slt i32 %98, 4, !dbg !7877
  br i1 %cmp60, label %for.body61, label %for.end70, !dbg !7878

for.body61:                                       ; preds = %for.cond59
  %99 = load i32, i32* %i, align 4, !dbg !7879
  %add62 = add nsw i32 %99, 2, !dbg !7880
  %idxprom63 = sext i32 %add62 to i64, !dbg !7881
  %arrayidx64 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 %idxprom63, !dbg !7881
  %100 = load i8*, i8** %arrayidx64, align 8, !dbg !7881
  %101 = load i32, i32* %i, align 4, !dbg !7882
  %idxprom65 = sext i32 %101 to i64, !dbg !7883
  %102 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !7883
  %b66 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %102, i32 0, i32 0, !dbg !7884
  %arrayidx67 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b66, i64 0, i64 %idxprom65, !dbg !7883
  store i8* %100, i8** %arrayidx67, align 8, !dbg !7885
  br label %for.inc68, !dbg !7883

for.inc68:                                        ; preds = %for.body61
  %103 = load i32, i32* %i, align 4, !dbg !7886
  %inc69 = add nsw i32 %103, 1, !dbg !7886
  store i32 %inc69, i32* %i, align 4, !dbg !7886
  br label %for.cond59, !dbg !7888, !llvm.loop !7889

for.end70:                                        ; preds = %for.cond59
  %104 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !7891
  %y71 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %104, i32 0, i32 1, !dbg !7892
  %105 = load i32, i32* %y71, align 8, !dbg !7893
  %add72 = add nsw i32 %105, 2, !dbg !7893
  store i32 %add72, i32* %y71, align 8, !dbg !7893
  ret void, !dbg !7894
}

; Function Attrs: nounwind uwtable
define internal void @vertical_compose_daub97iL0_10bit(i8* %_b0, i8* %_b1, i8* %_b2, i32 %width) #0 !dbg !7895 {
entry:
  %_b0.addr = alloca i8*, align 8
  %_b1.addr = alloca i8*, align 8
  %_b2.addr = alloca i8*, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %b0 = alloca i32*, align 8
  %b1 = alloca i32*, align 8
  %b2 = alloca i32*, align 8
  store i8* %_b0, i8** %_b0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b0.addr, metadata !7896, metadata !87), !dbg !7897
  store i8* %_b1, i8** %_b1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b1.addr, metadata !7898, metadata !87), !dbg !7899
  store i8* %_b2, i8** %_b2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b2.addr, metadata !7900, metadata !87), !dbg !7901
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !7902, metadata !87), !dbg !7903
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7904, metadata !87), !dbg !7905
  call void @llvm.dbg.declare(metadata i32** %b0, metadata !7906, metadata !87), !dbg !7907
  %0 = load i8*, i8** %_b0.addr, align 8, !dbg !7908
  %1 = bitcast i8* %0 to i32*, !dbg !7909
  store i32* %1, i32** %b0, align 8, !dbg !7907
  call void @llvm.dbg.declare(metadata i32** %b1, metadata !7910, metadata !87), !dbg !7911
  %2 = load i8*, i8** %_b1.addr, align 8, !dbg !7912
  %3 = bitcast i8* %2 to i32*, !dbg !7913
  store i32* %3, i32** %b1, align 8, !dbg !7911
  call void @llvm.dbg.declare(metadata i32** %b2, metadata !7914, metadata !87), !dbg !7915
  %4 = load i8*, i8** %_b2.addr, align 8, !dbg !7916
  %5 = bitcast i8* %4 to i32*, !dbg !7917
  store i32* %5, i32** %b2, align 8, !dbg !7915
  store i32 0, i32* %i, align 4, !dbg !7918
  br label %for.cond, !dbg !7920

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !dbg !7921
  %7 = load i32, i32* %width.addr, align 4, !dbg !7924
  %cmp = icmp slt i32 %6, %7, !dbg !7925
  br i1 %cmp, label %for.body, label %for.end, !dbg !7926

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %i, align 4, !dbg !7927
  %idxprom = sext i32 %8 to i64, !dbg !7929
  %9 = load i32*, i32** %b1, align 8, !dbg !7929
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom, !dbg !7929
  %10 = load i32, i32* %arrayidx, align 4, !dbg !7929
  %11 = load i32, i32* %i, align 4, !dbg !7930
  %idxprom1 = sext i32 %11 to i64, !dbg !7931
  %12 = load i32*, i32** %b0, align 8, !dbg !7931
  %arrayidx2 = getelementptr inbounds i32, i32* %12, i64 %idxprom1, !dbg !7931
  %13 = load i32, i32* %arrayidx2, align 4, !dbg !7931
  %14 = load i32, i32* %i, align 4, !dbg !7932
  %idxprom3 = sext i32 %14 to i64, !dbg !7933
  %15 = load i32*, i32** %b2, align 8, !dbg !7933
  %arrayidx4 = getelementptr inbounds i32, i32* %15, i64 %idxprom3, !dbg !7933
  %16 = load i32, i32* %arrayidx4, align 4, !dbg !7933
  %add = add i32 %13, %16, !dbg !7934
  %mul = mul i32 217, %add, !dbg !7935
  %add5 = add i32 %mul, 2048, !dbg !7936
  %shr = ashr i32 %add5, 12, !dbg !7937
  %add6 = add i32 %10, %shr, !dbg !7938
  %17 = load i32, i32* %i, align 4, !dbg !7939
  %idxprom7 = sext i32 %17 to i64, !dbg !7940
  %18 = load i32*, i32** %b1, align 8, !dbg !7940
  %arrayidx8 = getelementptr inbounds i32, i32* %18, i64 %idxprom7, !dbg !7940
  store i32 %add6, i32* %arrayidx8, align 4, !dbg !7941
  br label %for.inc, !dbg !7942

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !7943
  %inc = add nsw i32 %19, 1, !dbg !7943
  store i32 %inc, i32* %i, align 4, !dbg !7943
  br label %for.cond, !dbg !7945, !llvm.loop !7946

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7948
}

; Function Attrs: nounwind uwtable
define internal void @vertical_compose_daub97iH0_10bit(i8* %_b0, i8* %_b1, i8* %_b2, i32 %width) #0 !dbg !7949 {
entry:
  %_b0.addr = alloca i8*, align 8
  %_b1.addr = alloca i8*, align 8
  %_b2.addr = alloca i8*, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %b0 = alloca i32*, align 8
  %b1 = alloca i32*, align 8
  %b2 = alloca i32*, align 8
  store i8* %_b0, i8** %_b0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b0.addr, metadata !7950, metadata !87), !dbg !7951
  store i8* %_b1, i8** %_b1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b1.addr, metadata !7952, metadata !87), !dbg !7953
  store i8* %_b2, i8** %_b2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b2.addr, metadata !7954, metadata !87), !dbg !7955
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !7956, metadata !87), !dbg !7957
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7958, metadata !87), !dbg !7959
  call void @llvm.dbg.declare(metadata i32** %b0, metadata !7960, metadata !87), !dbg !7961
  %0 = load i8*, i8** %_b0.addr, align 8, !dbg !7962
  %1 = bitcast i8* %0 to i32*, !dbg !7963
  store i32* %1, i32** %b0, align 8, !dbg !7961
  call void @llvm.dbg.declare(metadata i32** %b1, metadata !7964, metadata !87), !dbg !7965
  %2 = load i8*, i8** %_b1.addr, align 8, !dbg !7966
  %3 = bitcast i8* %2 to i32*, !dbg !7967
  store i32* %3, i32** %b1, align 8, !dbg !7965
  call void @llvm.dbg.declare(metadata i32** %b2, metadata !7968, metadata !87), !dbg !7969
  %4 = load i8*, i8** %_b2.addr, align 8, !dbg !7970
  %5 = bitcast i8* %4 to i32*, !dbg !7971
  store i32* %5, i32** %b2, align 8, !dbg !7969
  store i32 0, i32* %i, align 4, !dbg !7972
  br label %for.cond, !dbg !7974

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !dbg !7975
  %7 = load i32, i32* %width.addr, align 4, !dbg !7978
  %cmp = icmp slt i32 %6, %7, !dbg !7979
  br i1 %cmp, label %for.body, label %for.end, !dbg !7980

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %i, align 4, !dbg !7981
  %idxprom = sext i32 %8 to i64, !dbg !7983
  %9 = load i32*, i32** %b1, align 8, !dbg !7983
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom, !dbg !7983
  %10 = load i32, i32* %arrayidx, align 4, !dbg !7983
  %11 = load i32, i32* %i, align 4, !dbg !7984
  %idxprom1 = sext i32 %11 to i64, !dbg !7985
  %12 = load i32*, i32** %b0, align 8, !dbg !7985
  %arrayidx2 = getelementptr inbounds i32, i32* %12, i64 %idxprom1, !dbg !7985
  %13 = load i32, i32* %arrayidx2, align 4, !dbg !7985
  %14 = load i32, i32* %i, align 4, !dbg !7986
  %idxprom3 = sext i32 %14 to i64, !dbg !7987
  %15 = load i32*, i32** %b2, align 8, !dbg !7987
  %arrayidx4 = getelementptr inbounds i32, i32* %15, i64 %idxprom3, !dbg !7987
  %16 = load i32, i32* %arrayidx4, align 4, !dbg !7987
  %add = add i32 %13, %16, !dbg !7988
  %mul = mul i32 6497, %add, !dbg !7989
  %add5 = add i32 %mul, 2048, !dbg !7990
  %shr = ashr i32 %add5, 12, !dbg !7991
  %add6 = add i32 %10, %shr, !dbg !7992
  %17 = load i32, i32* %i, align 4, !dbg !7993
  %idxprom7 = sext i32 %17 to i64, !dbg !7994
  %18 = load i32*, i32** %b1, align 8, !dbg !7994
  %arrayidx8 = getelementptr inbounds i32, i32* %18, i64 %idxprom7, !dbg !7994
  store i32 %add6, i32* %arrayidx8, align 4, !dbg !7995
  br label %for.inc, !dbg !7996

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !7997
  %inc = add nsw i32 %19, 1, !dbg !7997
  store i32 %inc, i32* %i, align 4, !dbg !7997
  br label %for.cond, !dbg !7999, !llvm.loop !8000

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8002
}

; Function Attrs: nounwind uwtable
define internal void @vertical_compose_daub97iL1_10bit(i8* %_b0, i8* %_b1, i8* %_b2, i32 %width) #0 !dbg !8003 {
entry:
  %_b0.addr = alloca i8*, align 8
  %_b1.addr = alloca i8*, align 8
  %_b2.addr = alloca i8*, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %b0 = alloca i32*, align 8
  %b1 = alloca i32*, align 8
  %b2 = alloca i32*, align 8
  store i8* %_b0, i8** %_b0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b0.addr, metadata !8004, metadata !87), !dbg !8005
  store i8* %_b1, i8** %_b1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b1.addr, metadata !8006, metadata !87), !dbg !8007
  store i8* %_b2, i8** %_b2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b2.addr, metadata !8008, metadata !87), !dbg !8009
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !8010, metadata !87), !dbg !8011
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8012, metadata !87), !dbg !8013
  call void @llvm.dbg.declare(metadata i32** %b0, metadata !8014, metadata !87), !dbg !8015
  %0 = load i8*, i8** %_b0.addr, align 8, !dbg !8016
  %1 = bitcast i8* %0 to i32*, !dbg !8017
  store i32* %1, i32** %b0, align 8, !dbg !8015
  call void @llvm.dbg.declare(metadata i32** %b1, metadata !8018, metadata !87), !dbg !8019
  %2 = load i8*, i8** %_b1.addr, align 8, !dbg !8020
  %3 = bitcast i8* %2 to i32*, !dbg !8021
  store i32* %3, i32** %b1, align 8, !dbg !8019
  call void @llvm.dbg.declare(metadata i32** %b2, metadata !8022, metadata !87), !dbg !8023
  %4 = load i8*, i8** %_b2.addr, align 8, !dbg !8024
  %5 = bitcast i8* %4 to i32*, !dbg !8025
  store i32* %5, i32** %b2, align 8, !dbg !8023
  store i32 0, i32* %i, align 4, !dbg !8026
  br label %for.cond, !dbg !8028

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !dbg !8029
  %7 = load i32, i32* %width.addr, align 4, !dbg !8032
  %cmp = icmp slt i32 %6, %7, !dbg !8033
  br i1 %cmp, label %for.body, label %for.end, !dbg !8034

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %i, align 4, !dbg !8035
  %idxprom = sext i32 %8 to i64, !dbg !8037
  %9 = load i32*, i32** %b1, align 8, !dbg !8037
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom, !dbg !8037
  %10 = load i32, i32* %arrayidx, align 4, !dbg !8037
  %11 = load i32, i32* %i, align 4, !dbg !8038
  %idxprom1 = sext i32 %11 to i64, !dbg !8039
  %12 = load i32*, i32** %b0, align 8, !dbg !8039
  %arrayidx2 = getelementptr inbounds i32, i32* %12, i64 %idxprom1, !dbg !8039
  %13 = load i32, i32* %arrayidx2, align 4, !dbg !8039
  %14 = load i32, i32* %i, align 4, !dbg !8040
  %idxprom3 = sext i32 %14 to i64, !dbg !8041
  %15 = load i32*, i32** %b2, align 8, !dbg !8041
  %arrayidx4 = getelementptr inbounds i32, i32* %15, i64 %idxprom3, !dbg !8041
  %16 = load i32, i32* %arrayidx4, align 4, !dbg !8041
  %add = add i32 %13, %16, !dbg !8042
  %mul = mul i32 1817, %add, !dbg !8043
  %add5 = add i32 %mul, 2048, !dbg !8044
  %shr = ashr i32 %add5, 12, !dbg !8045
  %sub = sub i32 %10, %shr, !dbg !8046
  %17 = load i32, i32* %i, align 4, !dbg !8047
  %idxprom6 = sext i32 %17 to i64, !dbg !8048
  %18 = load i32*, i32** %b1, align 8, !dbg !8048
  %arrayidx7 = getelementptr inbounds i32, i32* %18, i64 %idxprom6, !dbg !8048
  store i32 %sub, i32* %arrayidx7, align 4, !dbg !8049
  br label %for.inc, !dbg !8050

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !8051
  %inc = add nsw i32 %19, 1, !dbg !8051
  store i32 %inc, i32* %i, align 4, !dbg !8051
  br label %for.cond, !dbg !8053, !llvm.loop !8054

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8056
}

; Function Attrs: nounwind uwtable
define internal void @vertical_compose_daub97iH1_10bit(i8* %_b0, i8* %_b1, i8* %_b2, i32 %width) #0 !dbg !8057 {
entry:
  %_b0.addr = alloca i8*, align 8
  %_b1.addr = alloca i8*, align 8
  %_b2.addr = alloca i8*, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %b0 = alloca i32*, align 8
  %b1 = alloca i32*, align 8
  %b2 = alloca i32*, align 8
  store i8* %_b0, i8** %_b0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b0.addr, metadata !8058, metadata !87), !dbg !8059
  store i8* %_b1, i8** %_b1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b1.addr, metadata !8060, metadata !87), !dbg !8061
  store i8* %_b2, i8** %_b2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b2.addr, metadata !8062, metadata !87), !dbg !8063
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !8064, metadata !87), !dbg !8065
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8066, metadata !87), !dbg !8067
  call void @llvm.dbg.declare(metadata i32** %b0, metadata !8068, metadata !87), !dbg !8069
  %0 = load i8*, i8** %_b0.addr, align 8, !dbg !8070
  %1 = bitcast i8* %0 to i32*, !dbg !8071
  store i32* %1, i32** %b0, align 8, !dbg !8069
  call void @llvm.dbg.declare(metadata i32** %b1, metadata !8072, metadata !87), !dbg !8073
  %2 = load i8*, i8** %_b1.addr, align 8, !dbg !8074
  %3 = bitcast i8* %2 to i32*, !dbg !8075
  store i32* %3, i32** %b1, align 8, !dbg !8073
  call void @llvm.dbg.declare(metadata i32** %b2, metadata !8076, metadata !87), !dbg !8077
  %4 = load i8*, i8** %_b2.addr, align 8, !dbg !8078
  %5 = bitcast i8* %4 to i32*, !dbg !8079
  store i32* %5, i32** %b2, align 8, !dbg !8077
  store i32 0, i32* %i, align 4, !dbg !8080
  br label %for.cond, !dbg !8082

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !dbg !8083
  %7 = load i32, i32* %width.addr, align 4, !dbg !8086
  %cmp = icmp slt i32 %6, %7, !dbg !8087
  br i1 %cmp, label %for.body, label %for.end, !dbg !8088

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %i, align 4, !dbg !8089
  %idxprom = sext i32 %8 to i64, !dbg !8091
  %9 = load i32*, i32** %b1, align 8, !dbg !8091
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom, !dbg !8091
  %10 = load i32, i32* %arrayidx, align 4, !dbg !8091
  %11 = load i32, i32* %i, align 4, !dbg !8092
  %idxprom1 = sext i32 %11 to i64, !dbg !8093
  %12 = load i32*, i32** %b0, align 8, !dbg !8093
  %arrayidx2 = getelementptr inbounds i32, i32* %12, i64 %idxprom1, !dbg !8093
  %13 = load i32, i32* %arrayidx2, align 4, !dbg !8093
  %14 = load i32, i32* %i, align 4, !dbg !8094
  %idxprom3 = sext i32 %14 to i64, !dbg !8095
  %15 = load i32*, i32** %b2, align 8, !dbg !8095
  %arrayidx4 = getelementptr inbounds i32, i32* %15, i64 %idxprom3, !dbg !8095
  %16 = load i32, i32* %arrayidx4, align 4, !dbg !8095
  %add = add i32 %13, %16, !dbg !8096
  %mul = mul i32 113, %add, !dbg !8097
  %add5 = add i32 %mul, 64, !dbg !8098
  %shr = ashr i32 %add5, 7, !dbg !8099
  %sub = sub i32 %10, %shr, !dbg !8100
  %17 = load i32, i32* %i, align 4, !dbg !8101
  %idxprom6 = sext i32 %17 to i64, !dbg !8102
  %18 = load i32*, i32** %b1, align 8, !dbg !8102
  %arrayidx7 = getelementptr inbounds i32, i32* %18, i64 %idxprom6, !dbg !8102
  store i32 %sub, i32* %arrayidx7, align 4, !dbg !8103
  br label %for.inc, !dbg !8104

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !8105
  %inc = add nsw i32 %19, 1, !dbg !8105
  store i32 %inc, i32* %i, align 4, !dbg !8105
  br label %for.cond, !dbg !8107, !llvm.loop !8108

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8110
}

; Function Attrs: nounwind uwtable
define internal void @horizontal_compose_daub97i_10bit(i8* %_b, i8* %_temp, i32 %w) #0 !dbg !8111 {
entry:
  %_b.addr = alloca i8*, align 8
  %_temp.addr = alloca i8*, align 8
  %w.addr = alloca i32, align 4
  %w2 = alloca i32, align 4
  %x = alloca i32, align 4
  %b0 = alloca i32, align 4
  %b1 = alloca i32, align 4
  %b2 = alloca i32, align 4
  %b = alloca i32*, align 8
  %temp = alloca i32*, align 8
  store i8* %_b, i8** %_b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b.addr, metadata !8112, metadata !87), !dbg !8113
  store i8* %_temp, i8** %_temp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_temp.addr, metadata !8114, metadata !87), !dbg !8115
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !8116, metadata !87), !dbg !8117
  call void @llvm.dbg.declare(metadata i32* %w2, metadata !8118, metadata !87), !dbg !8119
  %0 = load i32, i32* %w.addr, align 4, !dbg !8120
  %shr = ashr i32 %0, 1, !dbg !8121
  store i32 %shr, i32* %w2, align 4, !dbg !8119
  call void @llvm.dbg.declare(metadata i32* %x, metadata !8122, metadata !87), !dbg !8123
  call void @llvm.dbg.declare(metadata i32* %b0, metadata !8124, metadata !87), !dbg !8125
  call void @llvm.dbg.declare(metadata i32* %b1, metadata !8126, metadata !87), !dbg !8127
  call void @llvm.dbg.declare(metadata i32* %b2, metadata !8128, metadata !87), !dbg !8129
  call void @llvm.dbg.declare(metadata i32** %b, metadata !8130, metadata !87), !dbg !8131
  %1 = load i8*, i8** %_b.addr, align 8, !dbg !8132
  %2 = bitcast i8* %1 to i32*, !dbg !8133
  store i32* %2, i32** %b, align 8, !dbg !8131
  call void @llvm.dbg.declare(metadata i32** %temp, metadata !8134, metadata !87), !dbg !8135
  %3 = load i8*, i8** %_temp.addr, align 8, !dbg !8136
  %4 = bitcast i8* %3 to i32*, !dbg !8137
  store i32* %4, i32** %temp, align 8, !dbg !8135
  %5 = load i32*, i32** %b, align 8, !dbg !8138
  %arrayidx = getelementptr inbounds i32, i32* %5, i64 0, !dbg !8138
  %6 = load i32, i32* %arrayidx, align 4, !dbg !8138
  %7 = load i32, i32* %w2, align 4, !dbg !8139
  %idxprom = sext i32 %7 to i64, !dbg !8140
  %8 = load i32*, i32** %b, align 8, !dbg !8140
  %arrayidx1 = getelementptr inbounds i32, i32* %8, i64 %idxprom, !dbg !8140
  %9 = load i32, i32* %arrayidx1, align 4, !dbg !8140
  %10 = load i32, i32* %w2, align 4, !dbg !8141
  %idxprom2 = sext i32 %10 to i64, !dbg !8142
  %11 = load i32*, i32** %b, align 8, !dbg !8142
  %arrayidx3 = getelementptr inbounds i32, i32* %11, i64 %idxprom2, !dbg !8142
  %12 = load i32, i32* %arrayidx3, align 4, !dbg !8142
  %add = add i32 %9, %12, !dbg !8143
  %mul = mul i32 1817, %add, !dbg !8144
  %add4 = add i32 %mul, 2048, !dbg !8145
  %shr5 = ashr i32 %add4, 12, !dbg !8146
  %sub = sub i32 %6, %shr5, !dbg !8147
  %13 = load i32*, i32** %temp, align 8, !dbg !8148
  %arrayidx6 = getelementptr inbounds i32, i32* %13, i64 0, !dbg !8148
  store i32 %sub, i32* %arrayidx6, align 4, !dbg !8149
  store i32 1, i32* %x, align 4, !dbg !8150
  br label %for.cond, !dbg !8152

for.cond:                                         ; preds = %for.inc, %entry
  %14 = load i32, i32* %x, align 4, !dbg !8153
  %15 = load i32, i32* %w2, align 4, !dbg !8156
  %cmp = icmp slt i32 %14, %15, !dbg !8157
  br i1 %cmp, label %for.body, label %for.end, !dbg !8158

for.body:                                         ; preds = %for.cond
  %16 = load i32, i32* %x, align 4, !dbg !8159
  %idxprom7 = sext i32 %16 to i64, !dbg !8161
  %17 = load i32*, i32** %b, align 8, !dbg !8161
  %arrayidx8 = getelementptr inbounds i32, i32* %17, i64 %idxprom7, !dbg !8161
  %18 = load i32, i32* %arrayidx8, align 4, !dbg !8161
  %19 = load i32, i32* %x, align 4, !dbg !8162
  %20 = load i32, i32* %w2, align 4, !dbg !8163
  %add9 = add nsw i32 %19, %20, !dbg !8164
  %sub10 = sub nsw i32 %add9, 1, !dbg !8165
  %idxprom11 = sext i32 %sub10 to i64, !dbg !8166
  %21 = load i32*, i32** %b, align 8, !dbg !8166
  %arrayidx12 = getelementptr inbounds i32, i32* %21, i64 %idxprom11, !dbg !8166
  %22 = load i32, i32* %arrayidx12, align 4, !dbg !8166
  %23 = load i32, i32* %x, align 4, !dbg !8167
  %24 = load i32, i32* %w2, align 4, !dbg !8168
  %add13 = add nsw i32 %23, %24, !dbg !8169
  %idxprom14 = sext i32 %add13 to i64, !dbg !8170
  %25 = load i32*, i32** %b, align 8, !dbg !8170
  %arrayidx15 = getelementptr inbounds i32, i32* %25, i64 %idxprom14, !dbg !8170
  %26 = load i32, i32* %arrayidx15, align 4, !dbg !8170
  %add16 = add i32 %22, %26, !dbg !8171
  %mul17 = mul i32 1817, %add16, !dbg !8172
  %add18 = add i32 %mul17, 2048, !dbg !8173
  %shr19 = ashr i32 %add18, 12, !dbg !8174
  %sub20 = sub i32 %18, %shr19, !dbg !8175
  %27 = load i32, i32* %x, align 4, !dbg !8176
  %idxprom21 = sext i32 %27 to i64, !dbg !8177
  %28 = load i32*, i32** %temp, align 8, !dbg !8177
  %arrayidx22 = getelementptr inbounds i32, i32* %28, i64 %idxprom21, !dbg !8177
  store i32 %sub20, i32* %arrayidx22, align 4, !dbg !8178
  %29 = load i32, i32* %x, align 4, !dbg !8179
  %30 = load i32, i32* %w2, align 4, !dbg !8180
  %add23 = add nsw i32 %29, %30, !dbg !8181
  %sub24 = sub nsw i32 %add23, 1, !dbg !8182
  %idxprom25 = sext i32 %sub24 to i64, !dbg !8183
  %31 = load i32*, i32** %b, align 8, !dbg !8183
  %arrayidx26 = getelementptr inbounds i32, i32* %31, i64 %idxprom25, !dbg !8183
  %32 = load i32, i32* %arrayidx26, align 4, !dbg !8183
  %33 = load i32, i32* %x, align 4, !dbg !8184
  %sub27 = sub nsw i32 %33, 1, !dbg !8185
  %idxprom28 = sext i32 %sub27 to i64, !dbg !8186
  %34 = load i32*, i32** %temp, align 8, !dbg !8186
  %arrayidx29 = getelementptr inbounds i32, i32* %34, i64 %idxprom28, !dbg !8186
  %35 = load i32, i32* %arrayidx29, align 4, !dbg !8186
  %36 = load i32, i32* %x, align 4, !dbg !8187
  %idxprom30 = sext i32 %36 to i64, !dbg !8188
  %37 = load i32*, i32** %temp, align 8, !dbg !8188
  %arrayidx31 = getelementptr inbounds i32, i32* %37, i64 %idxprom30, !dbg !8188
  %38 = load i32, i32* %arrayidx31, align 4, !dbg !8188
  %add32 = add i32 %35, %38, !dbg !8189
  %mul33 = mul i32 113, %add32, !dbg !8190
  %add34 = add i32 %mul33, 64, !dbg !8191
  %shr35 = ashr i32 %add34, 7, !dbg !8192
  %sub36 = sub i32 %32, %shr35, !dbg !8193
  %39 = load i32, i32* %x, align 4, !dbg !8194
  %40 = load i32, i32* %w2, align 4, !dbg !8195
  %add37 = add nsw i32 %39, %40, !dbg !8196
  %sub38 = sub nsw i32 %add37, 1, !dbg !8197
  %idxprom39 = sext i32 %sub38 to i64, !dbg !8198
  %41 = load i32*, i32** %temp, align 8, !dbg !8198
  %arrayidx40 = getelementptr inbounds i32, i32* %41, i64 %idxprom39, !dbg !8198
  store i32 %sub36, i32* %arrayidx40, align 4, !dbg !8199
  br label %for.inc, !dbg !8200

for.inc:                                          ; preds = %for.body
  %42 = load i32, i32* %x, align 4, !dbg !8201
  %inc = add nsw i32 %42, 1, !dbg !8201
  store i32 %inc, i32* %x, align 4, !dbg !8201
  br label %for.cond, !dbg !8203, !llvm.loop !8204

for.end:                                          ; preds = %for.cond
  %43 = load i32, i32* %w.addr, align 4, !dbg !8206
  %sub41 = sub nsw i32 %43, 1, !dbg !8207
  %idxprom42 = sext i32 %sub41 to i64, !dbg !8208
  %44 = load i32*, i32** %b, align 8, !dbg !8208
  %arrayidx43 = getelementptr inbounds i32, i32* %44, i64 %idxprom42, !dbg !8208
  %45 = load i32, i32* %arrayidx43, align 4, !dbg !8208
  %46 = load i32, i32* %w2, align 4, !dbg !8209
  %sub44 = sub nsw i32 %46, 1, !dbg !8210
  %idxprom45 = sext i32 %sub44 to i64, !dbg !8211
  %47 = load i32*, i32** %temp, align 8, !dbg !8211
  %arrayidx46 = getelementptr inbounds i32, i32* %47, i64 %idxprom45, !dbg !8211
  %48 = load i32, i32* %arrayidx46, align 4, !dbg !8211
  %49 = load i32, i32* %w2, align 4, !dbg !8212
  %sub47 = sub nsw i32 %49, 1, !dbg !8213
  %idxprom48 = sext i32 %sub47 to i64, !dbg !8214
  %50 = load i32*, i32** %temp, align 8, !dbg !8214
  %arrayidx49 = getelementptr inbounds i32, i32* %50, i64 %idxprom48, !dbg !8214
  %51 = load i32, i32* %arrayidx49, align 4, !dbg !8214
  %add50 = add i32 %48, %51, !dbg !8215
  %mul51 = mul i32 113, %add50, !dbg !8216
  %add52 = add i32 %mul51, 64, !dbg !8217
  %shr53 = ashr i32 %add52, 7, !dbg !8218
  %sub54 = sub i32 %45, %shr53, !dbg !8219
  %52 = load i32, i32* %w.addr, align 4, !dbg !8220
  %sub55 = sub nsw i32 %52, 1, !dbg !8221
  %idxprom56 = sext i32 %sub55 to i64, !dbg !8222
  %53 = load i32*, i32** %temp, align 8, !dbg !8222
  %arrayidx57 = getelementptr inbounds i32, i32* %53, i64 %idxprom56, !dbg !8222
  store i32 %sub54, i32* %arrayidx57, align 4, !dbg !8223
  %54 = load i32*, i32** %temp, align 8, !dbg !8224
  %arrayidx58 = getelementptr inbounds i32, i32* %54, i64 0, !dbg !8224
  %55 = load i32, i32* %arrayidx58, align 4, !dbg !8224
  %56 = load i32, i32* %w2, align 4, !dbg !8225
  %idxprom59 = sext i32 %56 to i64, !dbg !8226
  %57 = load i32*, i32** %temp, align 8, !dbg !8226
  %arrayidx60 = getelementptr inbounds i32, i32* %57, i64 %idxprom59, !dbg !8226
  %58 = load i32, i32* %arrayidx60, align 4, !dbg !8226
  %59 = load i32, i32* %w2, align 4, !dbg !8227
  %idxprom61 = sext i32 %59 to i64, !dbg !8228
  %60 = load i32*, i32** %temp, align 8, !dbg !8228
  %arrayidx62 = getelementptr inbounds i32, i32* %60, i64 %idxprom61, !dbg !8228
  %61 = load i32, i32* %arrayidx62, align 4, !dbg !8228
  %add63 = add i32 %58, %61, !dbg !8229
  %mul64 = mul i32 217, %add63, !dbg !8230
  %add65 = add i32 %mul64, 2048, !dbg !8231
  %shr66 = ashr i32 %add65, 12, !dbg !8232
  %add67 = add i32 %55, %shr66, !dbg !8233
  store i32 %add67, i32* %b2, align 4, !dbg !8234
  store i32 %add67, i32* %b0, align 4, !dbg !8235
  %62 = load i32, i32* %b0, align 4, !dbg !8236
  %neg = xor i32 %62, -1, !dbg !8237
  %shr68 = ashr i32 %neg, 1, !dbg !8238
  %neg69 = xor i32 %shr68, -1, !dbg !8239
  %63 = load i32*, i32** %b, align 8, !dbg !8240
  %arrayidx70 = getelementptr inbounds i32, i32* %63, i64 0, !dbg !8240
  store i32 %neg69, i32* %arrayidx70, align 4, !dbg !8241
  store i32 1, i32* %x, align 4, !dbg !8242
  br label %for.cond71, !dbg !8244

for.cond71:                                       ; preds = %for.inc110, %for.end
  %64 = load i32, i32* %x, align 4, !dbg !8245
  %65 = load i32, i32* %w2, align 4, !dbg !8248
  %cmp72 = icmp slt i32 %64, %65, !dbg !8249
  br i1 %cmp72, label %for.body73, label %for.end112, !dbg !8250

for.body73:                                       ; preds = %for.cond71
  %66 = load i32, i32* %x, align 4, !dbg !8251
  %idxprom74 = sext i32 %66 to i64, !dbg !8253
  %67 = load i32*, i32** %temp, align 8, !dbg !8253
  %arrayidx75 = getelementptr inbounds i32, i32* %67, i64 %idxprom74, !dbg !8253
  %68 = load i32, i32* %arrayidx75, align 4, !dbg !8253
  %69 = load i32, i32* %x, align 4, !dbg !8254
  %70 = load i32, i32* %w2, align 4, !dbg !8255
  %add76 = add nsw i32 %69, %70, !dbg !8256
  %sub77 = sub nsw i32 %add76, 1, !dbg !8257
  %idxprom78 = sext i32 %sub77 to i64, !dbg !8258
  %71 = load i32*, i32** %temp, align 8, !dbg !8258
  %arrayidx79 = getelementptr inbounds i32, i32* %71, i64 %idxprom78, !dbg !8258
  %72 = load i32, i32* %arrayidx79, align 4, !dbg !8258
  %73 = load i32, i32* %x, align 4, !dbg !8259
  %74 = load i32, i32* %w2, align 4, !dbg !8260
  %add80 = add nsw i32 %73, %74, !dbg !8261
  %idxprom81 = sext i32 %add80 to i64, !dbg !8262
  %75 = load i32*, i32** %temp, align 8, !dbg !8262
  %arrayidx82 = getelementptr inbounds i32, i32* %75, i64 %idxprom81, !dbg !8262
  %76 = load i32, i32* %arrayidx82, align 4, !dbg !8262
  %add83 = add i32 %72, %76, !dbg !8263
  %mul84 = mul i32 217, %add83, !dbg !8264
  %add85 = add i32 %mul84, 2048, !dbg !8265
  %shr86 = ashr i32 %add85, 12, !dbg !8266
  %add87 = add i32 %68, %shr86, !dbg !8267
  store i32 %add87, i32* %b2, align 4, !dbg !8268
  %77 = load i32, i32* %x, align 4, !dbg !8269
  %78 = load i32, i32* %w2, align 4, !dbg !8270
  %add88 = add nsw i32 %77, %78, !dbg !8271
  %sub89 = sub nsw i32 %add88, 1, !dbg !8272
  %idxprom90 = sext i32 %sub89 to i64, !dbg !8273
  %79 = load i32*, i32** %temp, align 8, !dbg !8273
  %arrayidx91 = getelementptr inbounds i32, i32* %79, i64 %idxprom90, !dbg !8273
  %80 = load i32, i32* %arrayidx91, align 4, !dbg !8273
  %81 = load i32, i32* %b0, align 4, !dbg !8274
  %82 = load i32, i32* %b2, align 4, !dbg !8275
  %add92 = add i32 %81, %82, !dbg !8276
  %mul93 = mul i32 6497, %add92, !dbg !8277
  %add94 = add i32 %mul93, 2048, !dbg !8278
  %shr95 = ashr i32 %add94, 12, !dbg !8279
  %add96 = add i32 %80, %shr95, !dbg !8280
  store i32 %add96, i32* %b1, align 4, !dbg !8281
  %83 = load i32, i32* %b1, align 4, !dbg !8282
  %neg97 = xor i32 %83, -1, !dbg !8283
  %shr98 = ashr i32 %neg97, 1, !dbg !8284
  %neg99 = xor i32 %shr98, -1, !dbg !8285
  %84 = load i32, i32* %x, align 4, !dbg !8286
  %mul100 = mul nsw i32 2, %84, !dbg !8287
  %sub101 = sub nsw i32 %mul100, 1, !dbg !8288
  %idxprom102 = sext i32 %sub101 to i64, !dbg !8289
  %85 = load i32*, i32** %b, align 8, !dbg !8289
  %arrayidx103 = getelementptr inbounds i32, i32* %85, i64 %idxprom102, !dbg !8289
  store i32 %neg99, i32* %arrayidx103, align 4, !dbg !8290
  %86 = load i32, i32* %b2, align 4, !dbg !8291
  %neg104 = xor i32 %86, -1, !dbg !8292
  %shr105 = ashr i32 %neg104, 1, !dbg !8293
  %neg106 = xor i32 %shr105, -1, !dbg !8294
  %87 = load i32, i32* %x, align 4, !dbg !8295
  %mul107 = mul nsw i32 2, %87, !dbg !8296
  %idxprom108 = sext i32 %mul107 to i64, !dbg !8297
  %88 = load i32*, i32** %b, align 8, !dbg !8297
  %arrayidx109 = getelementptr inbounds i32, i32* %88, i64 %idxprom108, !dbg !8297
  store i32 %neg106, i32* %arrayidx109, align 4, !dbg !8298
  %89 = load i32, i32* %b2, align 4, !dbg !8299
  store i32 %89, i32* %b0, align 4, !dbg !8300
  br label %for.inc110, !dbg !8301

for.inc110:                                       ; preds = %for.body73
  %90 = load i32, i32* %x, align 4, !dbg !8302
  %inc111 = add nsw i32 %90, 1, !dbg !8302
  store i32 %inc111, i32* %x, align 4, !dbg !8302
  br label %for.cond71, !dbg !8304, !llvm.loop !8305

for.end112:                                       ; preds = %for.cond71
  %91 = load i32, i32* %w.addr, align 4, !dbg !8307
  %sub113 = sub nsw i32 %91, 1, !dbg !8308
  %idxprom114 = sext i32 %sub113 to i64, !dbg !8309
  %92 = load i32*, i32** %temp, align 8, !dbg !8309
  %arrayidx115 = getelementptr inbounds i32, i32* %92, i64 %idxprom114, !dbg !8309
  %93 = load i32, i32* %arrayidx115, align 4, !dbg !8309
  %94 = load i32, i32* %b2, align 4, !dbg !8310
  %95 = load i32, i32* %b2, align 4, !dbg !8311
  %add116 = add i32 %94, %95, !dbg !8312
  %mul117 = mul i32 6497, %add116, !dbg !8313
  %add118 = add i32 %mul117, 2048, !dbg !8314
  %shr119 = ashr i32 %add118, 12, !dbg !8315
  %add120 = add i32 %93, %shr119, !dbg !8316
  %neg121 = xor i32 %add120, -1, !dbg !8317
  %shr122 = lshr i32 %neg121, 1, !dbg !8318
  %neg123 = xor i32 %shr122, -1, !dbg !8319
  %96 = load i32, i32* %w.addr, align 4, !dbg !8320
  %sub124 = sub nsw i32 %96, 1, !dbg !8321
  %idxprom125 = sext i32 %sub124 to i64, !dbg !8322
  %97 = load i32*, i32** %b, align 8, !dbg !8322
  %arrayidx126 = getelementptr inbounds i32, i32* %97, i64 %idxprom125, !dbg !8322
  store i32 %neg123, i32* %arrayidx126, align 4, !dbg !8323
  ret void, !dbg !8324
}

; Function Attrs: nounwind uwtable
define internal void @spatial_compose_dd97i_init_12bit(%struct.DWTCompose* %cs, i8* %buffer, i32 %height, i32 %stride) #0 !dbg !8325 {
entry:
  %retval.i80 = alloca i32, align 4
  %a.addr.i81 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i81, metadata !904, metadata !87), !dbg !8326
  %amin.addr.i82 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i82, metadata !911, metadata !87), !dbg !8328
  %amax.addr.i83 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i83, metadata !913, metadata !87), !dbg !8329
  %retval.i69 = alloca i32, align 4
  %a.addr.i70 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i70, metadata !904, metadata !87), !dbg !8330
  %amin.addr.i71 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i71, metadata !911, metadata !87), !dbg !8332
  %amax.addr.i72 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i72, metadata !913, metadata !87), !dbg !8333
  %retval.i58 = alloca i32, align 4
  %a.addr.i59 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i59, metadata !904, metadata !87), !dbg !8334
  %amin.addr.i60 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i60, metadata !911, metadata !87), !dbg !8336
  %amax.addr.i61 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i61, metadata !913, metadata !87), !dbg !8337
  %retval.i47 = alloca i32, align 4
  %a.addr.i48 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i48, metadata !904, metadata !87), !dbg !8338
  %amin.addr.i49 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i49, metadata !911, metadata !87), !dbg !8340
  %amax.addr.i50 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i50, metadata !913, metadata !87), !dbg !8341
  %retval.i36 = alloca i32, align 4
  %a.addr.i37 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i37, metadata !904, metadata !87), !dbg !8342
  %amin.addr.i38 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i38, metadata !911, metadata !87), !dbg !8344
  %amax.addr.i39 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i39, metadata !913, metadata !87), !dbg !8345
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !904, metadata !87), !dbg !8346
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !911, metadata !87), !dbg !8348
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !913, metadata !87), !dbg !8349
  %cs.addr = alloca %struct.DWTCompose*, align 8
  %buffer.addr = alloca i8*, align 8
  %height.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  store %struct.DWTCompose* %cs, %struct.DWTCompose** %cs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTCompose** %cs.addr, metadata !8350, metadata !87), !dbg !8351
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !8352, metadata !87), !dbg !8353
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !8354, metadata !87), !dbg !8355
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !8356, metadata !87), !dbg !8357
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !8358
  %1 = load i32, i32* %height.addr, align 4, !dbg !8359
  %sub = sub nsw i32 %1, 2, !dbg !8360
  store i32 -6, i32* %a.addr.i, align 4, !dbg !8361
  store i32 0, i32* %amin.addr.i, align 4, !dbg !8361
  store i32 %sub, i32* %amax.addr.i, align 4, !dbg !8361
  %2 = load i32, i32* %a.addr.i, align 4, !dbg !8362
  %3 = load i32, i32* %amin.addr.i, align 4, !dbg !8363
  %cmp.i = icmp slt i32 %2, %3, !dbg !8364
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !8365

if.then.i:                                        ; preds = %entry
  %4 = load i32, i32* %amin.addr.i, align 4, !dbg !8366
  store i32 %4, i32* %retval.i, align 4, !dbg !8367
  br label %av_clip_c.exit, !dbg !8367

if.else.i:                                        ; preds = %entry
  %5 = load i32, i32* %a.addr.i, align 4, !dbg !8368
  %6 = load i32, i32* %amax.addr.i, align 4, !dbg !8369
  %cmp1.i = icmp sgt i32 %5, %6, !dbg !8370
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !8371

if.then2.i:                                       ; preds = %if.else.i
  %7 = load i32, i32* %amax.addr.i, align 4, !dbg !8372
  store i32 %7, i32* %retval.i, align 4, !dbg !8373
  br label %av_clip_c.exit, !dbg !8373

if.else3.i:                                       ; preds = %if.else.i
  %8 = load i32, i32* %a.addr.i, align 4, !dbg !8374
  store i32 %8, i32* %retval.i, align 4, !dbg !8375
  br label %av_clip_c.exit, !dbg !8375

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %9 = load i32, i32* %retval.i, align 4, !dbg !8376
  %10 = load i32, i32* %stride.addr, align 4, !dbg !8377
  %mul = mul nsw i32 %9, %10, !dbg !8378
  %idx.ext = sext i32 %mul to i64, !dbg !8379
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %idx.ext, !dbg !8379
  %11 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !8380
  %b = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %11, i32 0, i32 0, !dbg !8381
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 0, !dbg !8380
  store i8* %add.ptr, i8** %arrayidx, align 8, !dbg !8382
  %12 = load i8*, i8** %buffer.addr, align 8, !dbg !8383
  %13 = load i32, i32* %height.addr, align 4, !dbg !8384
  %sub1 = sub nsw i32 %13, 1, !dbg !8385
  store i32 -5, i32* %a.addr.i81, align 4, !dbg !8386
  store i32 1, i32* %amin.addr.i82, align 4, !dbg !8386
  store i32 %sub1, i32* %amax.addr.i83, align 4, !dbg !8386
  %14 = load i32, i32* %a.addr.i81, align 4, !dbg !8387
  %15 = load i32, i32* %amin.addr.i82, align 4, !dbg !8388
  %cmp.i84 = icmp slt i32 %14, %15, !dbg !8389
  br i1 %cmp.i84, label %if.then.i85, label %if.else.i87, !dbg !8390

if.then.i85:                                      ; preds = %av_clip_c.exit
  %16 = load i32, i32* %amin.addr.i82, align 4, !dbg !8391
  store i32 %16, i32* %retval.i80, align 4, !dbg !8392
  br label %av_clip_c.exit90, !dbg !8392

if.else.i87:                                      ; preds = %av_clip_c.exit
  %17 = load i32, i32* %a.addr.i81, align 4, !dbg !8393
  %18 = load i32, i32* %amax.addr.i83, align 4, !dbg !8394
  %cmp1.i86 = icmp sgt i32 %17, %18, !dbg !8395
  br i1 %cmp1.i86, label %if.then2.i88, label %if.else3.i89, !dbg !8396

if.then2.i88:                                     ; preds = %if.else.i87
  %19 = load i32, i32* %amax.addr.i83, align 4, !dbg !8397
  store i32 %19, i32* %retval.i80, align 4, !dbg !8398
  br label %av_clip_c.exit90, !dbg !8398

if.else3.i89:                                     ; preds = %if.else.i87
  %20 = load i32, i32* %a.addr.i81, align 4, !dbg !8399
  store i32 %20, i32* %retval.i80, align 4, !dbg !8400
  br label %av_clip_c.exit90, !dbg !8400

av_clip_c.exit90:                                 ; preds = %if.then.i85, %if.then2.i88, %if.else3.i89
  %21 = load i32, i32* %retval.i80, align 4, !dbg !8401
  %22 = load i32, i32* %stride.addr, align 4, !dbg !8402
  %mul3 = mul nsw i32 %21, %22, !dbg !8403
  %idx.ext4 = sext i32 %mul3 to i64, !dbg !8404
  %add.ptr5 = getelementptr inbounds i8, i8* %12, i64 %idx.ext4, !dbg !8404
  %23 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !8405
  %b6 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %23, i32 0, i32 0, !dbg !8406
  %arrayidx7 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b6, i64 0, i64 1, !dbg !8405
  store i8* %add.ptr5, i8** %arrayidx7, align 8, !dbg !8407
  %24 = load i8*, i8** %buffer.addr, align 8, !dbg !8408
  %25 = load i32, i32* %height.addr, align 4, !dbg !8409
  %sub8 = sub nsw i32 %25, 2, !dbg !8410
  store i32 -4, i32* %a.addr.i70, align 4, !dbg !8411
  store i32 0, i32* %amin.addr.i71, align 4, !dbg !8411
  store i32 %sub8, i32* %amax.addr.i72, align 4, !dbg !8411
  %26 = load i32, i32* %a.addr.i70, align 4, !dbg !8412
  %27 = load i32, i32* %amin.addr.i71, align 4, !dbg !8413
  %cmp.i73 = icmp slt i32 %26, %27, !dbg !8414
  br i1 %cmp.i73, label %if.then.i74, label %if.else.i76, !dbg !8415

if.then.i74:                                      ; preds = %av_clip_c.exit90
  %28 = load i32, i32* %amin.addr.i71, align 4, !dbg !8416
  store i32 %28, i32* %retval.i69, align 4, !dbg !8417
  br label %av_clip_c.exit79, !dbg !8417

if.else.i76:                                      ; preds = %av_clip_c.exit90
  %29 = load i32, i32* %a.addr.i70, align 4, !dbg !8418
  %30 = load i32, i32* %amax.addr.i72, align 4, !dbg !8419
  %cmp1.i75 = icmp sgt i32 %29, %30, !dbg !8420
  br i1 %cmp1.i75, label %if.then2.i77, label %if.else3.i78, !dbg !8421

if.then2.i77:                                     ; preds = %if.else.i76
  %31 = load i32, i32* %amax.addr.i72, align 4, !dbg !8422
  store i32 %31, i32* %retval.i69, align 4, !dbg !8423
  br label %av_clip_c.exit79, !dbg !8423

if.else3.i78:                                     ; preds = %if.else.i76
  %32 = load i32, i32* %a.addr.i70, align 4, !dbg !8424
  store i32 %32, i32* %retval.i69, align 4, !dbg !8425
  br label %av_clip_c.exit79, !dbg !8425

av_clip_c.exit79:                                 ; preds = %if.then.i74, %if.then2.i77, %if.else3.i78
  %33 = load i32, i32* %retval.i69, align 4, !dbg !8426
  %34 = load i32, i32* %stride.addr, align 4, !dbg !8427
  %mul10 = mul nsw i32 %33, %34, !dbg !8428
  %idx.ext11 = sext i32 %mul10 to i64, !dbg !8429
  %add.ptr12 = getelementptr inbounds i8, i8* %24, i64 %idx.ext11, !dbg !8429
  %35 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !8430
  %b13 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %35, i32 0, i32 0, !dbg !8431
  %arrayidx14 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b13, i64 0, i64 2, !dbg !8430
  store i8* %add.ptr12, i8** %arrayidx14, align 8, !dbg !8432
  %36 = load i8*, i8** %buffer.addr, align 8, !dbg !8433
  %37 = load i32, i32* %height.addr, align 4, !dbg !8434
  %sub15 = sub nsw i32 %37, 1, !dbg !8435
  store i32 -3, i32* %a.addr.i59, align 4, !dbg !8436
  store i32 1, i32* %amin.addr.i60, align 4, !dbg !8436
  store i32 %sub15, i32* %amax.addr.i61, align 4, !dbg !8436
  %38 = load i32, i32* %a.addr.i59, align 4, !dbg !8437
  %39 = load i32, i32* %amin.addr.i60, align 4, !dbg !8438
  %cmp.i62 = icmp slt i32 %38, %39, !dbg !8439
  br i1 %cmp.i62, label %if.then.i63, label %if.else.i65, !dbg !8440

if.then.i63:                                      ; preds = %av_clip_c.exit79
  %40 = load i32, i32* %amin.addr.i60, align 4, !dbg !8441
  store i32 %40, i32* %retval.i58, align 4, !dbg !8442
  br label %av_clip_c.exit68, !dbg !8442

if.else.i65:                                      ; preds = %av_clip_c.exit79
  %41 = load i32, i32* %a.addr.i59, align 4, !dbg !8443
  %42 = load i32, i32* %amax.addr.i61, align 4, !dbg !8444
  %cmp1.i64 = icmp sgt i32 %41, %42, !dbg !8445
  br i1 %cmp1.i64, label %if.then2.i66, label %if.else3.i67, !dbg !8446

if.then2.i66:                                     ; preds = %if.else.i65
  %43 = load i32, i32* %amax.addr.i61, align 4, !dbg !8447
  store i32 %43, i32* %retval.i58, align 4, !dbg !8448
  br label %av_clip_c.exit68, !dbg !8448

if.else3.i67:                                     ; preds = %if.else.i65
  %44 = load i32, i32* %a.addr.i59, align 4, !dbg !8449
  store i32 %44, i32* %retval.i58, align 4, !dbg !8450
  br label %av_clip_c.exit68, !dbg !8450

av_clip_c.exit68:                                 ; preds = %if.then.i63, %if.then2.i66, %if.else3.i67
  %45 = load i32, i32* %retval.i58, align 4, !dbg !8451
  %46 = load i32, i32* %stride.addr, align 4, !dbg !8452
  %mul17 = mul nsw i32 %45, %46, !dbg !8453
  %idx.ext18 = sext i32 %mul17 to i64, !dbg !8454
  %add.ptr19 = getelementptr inbounds i8, i8* %36, i64 %idx.ext18, !dbg !8454
  %47 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !8455
  %b20 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %47, i32 0, i32 0, !dbg !8456
  %arrayidx21 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b20, i64 0, i64 3, !dbg !8455
  store i8* %add.ptr19, i8** %arrayidx21, align 8, !dbg !8457
  %48 = load i8*, i8** %buffer.addr, align 8, !dbg !8458
  %49 = load i32, i32* %height.addr, align 4, !dbg !8459
  %sub22 = sub nsw i32 %49, 2, !dbg !8460
  store i32 -2, i32* %a.addr.i48, align 4, !dbg !8461
  store i32 0, i32* %amin.addr.i49, align 4, !dbg !8461
  store i32 %sub22, i32* %amax.addr.i50, align 4, !dbg !8461
  %50 = load i32, i32* %a.addr.i48, align 4, !dbg !8462
  %51 = load i32, i32* %amin.addr.i49, align 4, !dbg !8463
  %cmp.i51 = icmp slt i32 %50, %51, !dbg !8464
  br i1 %cmp.i51, label %if.then.i52, label %if.else.i54, !dbg !8465

if.then.i52:                                      ; preds = %av_clip_c.exit68
  %52 = load i32, i32* %amin.addr.i49, align 4, !dbg !8466
  store i32 %52, i32* %retval.i47, align 4, !dbg !8467
  br label %av_clip_c.exit57, !dbg !8467

if.else.i54:                                      ; preds = %av_clip_c.exit68
  %53 = load i32, i32* %a.addr.i48, align 4, !dbg !8468
  %54 = load i32, i32* %amax.addr.i50, align 4, !dbg !8469
  %cmp1.i53 = icmp sgt i32 %53, %54, !dbg !8470
  br i1 %cmp1.i53, label %if.then2.i55, label %if.else3.i56, !dbg !8471

if.then2.i55:                                     ; preds = %if.else.i54
  %55 = load i32, i32* %amax.addr.i50, align 4, !dbg !8472
  store i32 %55, i32* %retval.i47, align 4, !dbg !8473
  br label %av_clip_c.exit57, !dbg !8473

if.else3.i56:                                     ; preds = %if.else.i54
  %56 = load i32, i32* %a.addr.i48, align 4, !dbg !8474
  store i32 %56, i32* %retval.i47, align 4, !dbg !8475
  br label %av_clip_c.exit57, !dbg !8475

av_clip_c.exit57:                                 ; preds = %if.then.i52, %if.then2.i55, %if.else3.i56
  %57 = load i32, i32* %retval.i47, align 4, !dbg !8476
  %58 = load i32, i32* %stride.addr, align 4, !dbg !8477
  %mul24 = mul nsw i32 %57, %58, !dbg !8478
  %idx.ext25 = sext i32 %mul24 to i64, !dbg !8479
  %add.ptr26 = getelementptr inbounds i8, i8* %48, i64 %idx.ext25, !dbg !8479
  %59 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !8480
  %b27 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %59, i32 0, i32 0, !dbg !8481
  %arrayidx28 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b27, i64 0, i64 4, !dbg !8480
  store i8* %add.ptr26, i8** %arrayidx28, align 8, !dbg !8482
  %60 = load i8*, i8** %buffer.addr, align 8, !dbg !8483
  %61 = load i32, i32* %height.addr, align 4, !dbg !8484
  %sub29 = sub nsw i32 %61, 1, !dbg !8485
  store i32 -1, i32* %a.addr.i37, align 4, !dbg !8486
  store i32 1, i32* %amin.addr.i38, align 4, !dbg !8486
  store i32 %sub29, i32* %amax.addr.i39, align 4, !dbg !8486
  %62 = load i32, i32* %a.addr.i37, align 4, !dbg !8487
  %63 = load i32, i32* %amin.addr.i38, align 4, !dbg !8488
  %cmp.i40 = icmp slt i32 %62, %63, !dbg !8489
  br i1 %cmp.i40, label %if.then.i41, label %if.else.i43, !dbg !8490

if.then.i41:                                      ; preds = %av_clip_c.exit57
  %64 = load i32, i32* %amin.addr.i38, align 4, !dbg !8491
  store i32 %64, i32* %retval.i36, align 4, !dbg !8492
  br label %av_clip_c.exit46, !dbg !8492

if.else.i43:                                      ; preds = %av_clip_c.exit57
  %65 = load i32, i32* %a.addr.i37, align 4, !dbg !8493
  %66 = load i32, i32* %amax.addr.i39, align 4, !dbg !8494
  %cmp1.i42 = icmp sgt i32 %65, %66, !dbg !8495
  br i1 %cmp1.i42, label %if.then2.i44, label %if.else3.i45, !dbg !8496

if.then2.i44:                                     ; preds = %if.else.i43
  %67 = load i32, i32* %amax.addr.i39, align 4, !dbg !8497
  store i32 %67, i32* %retval.i36, align 4, !dbg !8498
  br label %av_clip_c.exit46, !dbg !8498

if.else3.i45:                                     ; preds = %if.else.i43
  %68 = load i32, i32* %a.addr.i37, align 4, !dbg !8499
  store i32 %68, i32* %retval.i36, align 4, !dbg !8500
  br label %av_clip_c.exit46, !dbg !8500

av_clip_c.exit46:                                 ; preds = %if.then.i41, %if.then2.i44, %if.else3.i45
  %69 = load i32, i32* %retval.i36, align 4, !dbg !8501
  %70 = load i32, i32* %stride.addr, align 4, !dbg !8502
  %mul31 = mul nsw i32 %69, %70, !dbg !8503
  %idx.ext32 = sext i32 %mul31 to i64, !dbg !8504
  %add.ptr33 = getelementptr inbounds i8, i8* %60, i64 %idx.ext32, !dbg !8504
  %71 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !8505
  %b34 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %71, i32 0, i32 0, !dbg !8506
  %arrayidx35 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b34, i64 0, i64 5, !dbg !8505
  store i8* %add.ptr33, i8** %arrayidx35, align 8, !dbg !8507
  %72 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !8508
  %y = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %72, i32 0, i32 1, !dbg !8509
  store i32 -5, i32* %y, align 8, !dbg !8510
  ret void, !dbg !8511
}

; Function Attrs: nounwind uwtable
define internal void @spatial_compose53i_init_12bit(%struct.DWTCompose* %cs, i8* %buffer, i32 %height, i32 %stride) #0 !dbg !8512 {
entry:
  %retval.i8 = alloca i32, align 4
  %x.addr.i9 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i9, metadata !1102, metadata !87), !dbg !8513
  %w.addr.i10 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i10, metadata !1109, metadata !87), !dbg !8515
  %retval.i = alloca i32, align 4
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !1102, metadata !87), !dbg !8516
  %w.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i, metadata !1109, metadata !87), !dbg !8518
  %cs.addr = alloca %struct.DWTCompose*, align 8
  %buffer.addr = alloca i8*, align 8
  %height.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  store %struct.DWTCompose* %cs, %struct.DWTCompose** %cs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTCompose** %cs.addr, metadata !8519, metadata !87), !dbg !8520
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !8521, metadata !87), !dbg !8522
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !8523, metadata !87), !dbg !8524
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !8525, metadata !87), !dbg !8526
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !8527
  %1 = load i32, i32* %height.addr, align 4, !dbg !8528
  %sub = sub nsw i32 %1, 1, !dbg !8529
  store i32 -2, i32* %x.addr.i, align 4, !dbg !8530
  store i32 %sub, i32* %w.addr.i, align 4, !dbg !8530
  %2 = load i32, i32* %w.addr.i, align 4, !dbg !8531
  %tobool.i = icmp ne i32 %2, 0, !dbg !8531
  br i1 %tobool.i, label %if.end.i, label %if.then.i, !dbg !8532

if.then.i:                                        ; preds = %entry
  store i32 0, i32* %retval.i, align 4, !dbg !8533
  br label %avpriv_mirror.exit, !dbg !8533

if.end.i:                                         ; preds = %entry
  br label %while.cond.i, !dbg !8534

while.cond.i:                                     ; preds = %if.end3.i, %if.end.i
  %3 = load i32, i32* %x.addr.i, align 4, !dbg !8535
  %4 = load i32, i32* %w.addr.i, align 4, !dbg !8536
  %cmp.i = icmp ugt i32 %3, %4, !dbg !8537
  br i1 %cmp.i, label %while.body.i, label %while.end.i, !dbg !8538

while.body.i:                                     ; preds = %while.cond.i
  %5 = load i32, i32* %x.addr.i, align 4, !dbg !8539
  %sub.i = sub nsw i32 0, %5, !dbg !8540
  store i32 %sub.i, i32* %x.addr.i, align 4, !dbg !8541
  %6 = load i32, i32* %x.addr.i, align 4, !dbg !8542
  %cmp1.i = icmp slt i32 %6, 0, !dbg !8543
  br i1 %cmp1.i, label %if.then2.i, label %if.end3.i, !dbg !8544

if.then2.i:                                       ; preds = %while.body.i
  %7 = load i32, i32* %w.addr.i, align 4, !dbg !8545
  %mul.i = mul nsw i32 2, %7, !dbg !8546
  %8 = load i32, i32* %x.addr.i, align 4, !dbg !8547
  %add.i = add nsw i32 %8, %mul.i, !dbg !8547
  store i32 %add.i, i32* %x.addr.i, align 4, !dbg !8547
  br label %if.end3.i, !dbg !8548

if.end3.i:                                        ; preds = %if.then2.i, %while.body.i
  br label %while.cond.i, !dbg !8549, !llvm.loop !1150

while.end.i:                                      ; preds = %while.cond.i
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !8550
  store i32 %9, i32* %retval.i, align 4, !dbg !8551
  br label %avpriv_mirror.exit, !dbg !8551

avpriv_mirror.exit:                               ; preds = %if.then.i, %while.end.i
  %10 = load i32, i32* %retval.i, align 4, !dbg !8552
  %11 = load i32, i32* %stride.addr, align 4, !dbg !8553
  %mul = mul nsw i32 %10, %11, !dbg !8554
  %idx.ext = sext i32 %mul to i64, !dbg !8555
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %idx.ext, !dbg !8555
  %12 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !8556
  %b = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %12, i32 0, i32 0, !dbg !8557
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 0, !dbg !8556
  store i8* %add.ptr, i8** %arrayidx, align 8, !dbg !8558
  %13 = load i8*, i8** %buffer.addr, align 8, !dbg !8559
  %14 = load i32, i32* %height.addr, align 4, !dbg !8560
  %sub1 = sub nsw i32 %14, 1, !dbg !8561
  store i32 -1, i32* %x.addr.i9, align 4, !dbg !8562
  store i32 %sub1, i32* %w.addr.i10, align 4, !dbg !8562
  %15 = load i32, i32* %w.addr.i10, align 4, !dbg !8563
  %tobool.i11 = icmp ne i32 %15, 0, !dbg !8563
  br i1 %tobool.i11, label %if.end.i13, label %if.then.i12, !dbg !8564

if.then.i12:                                      ; preds = %avpriv_mirror.exit
  store i32 0, i32* %retval.i8, align 4, !dbg !8565
  br label %avpriv_mirror.exit24, !dbg !8565

if.end.i13:                                       ; preds = %avpriv_mirror.exit
  br label %while.cond.i15, !dbg !8566

while.cond.i15:                                   ; preds = %if.end3.i22, %if.end.i13
  %16 = load i32, i32* %x.addr.i9, align 4, !dbg !8567
  %17 = load i32, i32* %w.addr.i10, align 4, !dbg !8568
  %cmp.i14 = icmp ugt i32 %16, %17, !dbg !8569
  br i1 %cmp.i14, label %while.body.i18, label %while.end.i23, !dbg !8570

while.body.i18:                                   ; preds = %while.cond.i15
  %18 = load i32, i32* %x.addr.i9, align 4, !dbg !8571
  %sub.i16 = sub nsw i32 0, %18, !dbg !8572
  store i32 %sub.i16, i32* %x.addr.i9, align 4, !dbg !8573
  %19 = load i32, i32* %x.addr.i9, align 4, !dbg !8574
  %cmp1.i17 = icmp slt i32 %19, 0, !dbg !8575
  br i1 %cmp1.i17, label %if.then2.i21, label %if.end3.i22, !dbg !8576

if.then2.i21:                                     ; preds = %while.body.i18
  %20 = load i32, i32* %w.addr.i10, align 4, !dbg !8577
  %mul.i19 = mul nsw i32 2, %20, !dbg !8578
  %21 = load i32, i32* %x.addr.i9, align 4, !dbg !8579
  %add.i20 = add nsw i32 %21, %mul.i19, !dbg !8579
  store i32 %add.i20, i32* %x.addr.i9, align 4, !dbg !8579
  br label %if.end3.i22, !dbg !8580

if.end3.i22:                                      ; preds = %if.then2.i21, %while.body.i18
  br label %while.cond.i15, !dbg !8581, !llvm.loop !1150

while.end.i23:                                    ; preds = %while.cond.i15
  %22 = load i32, i32* %x.addr.i9, align 4, !dbg !8582
  store i32 %22, i32* %retval.i8, align 4, !dbg !8583
  br label %avpriv_mirror.exit24, !dbg !8583

avpriv_mirror.exit24:                             ; preds = %if.then.i12, %while.end.i23
  %23 = load i32, i32* %retval.i8, align 4, !dbg !8584
  %24 = load i32, i32* %stride.addr, align 4, !dbg !8585
  %mul3 = mul nsw i32 %23, %24, !dbg !8586
  %idx.ext4 = sext i32 %mul3 to i64, !dbg !8587
  %add.ptr5 = getelementptr inbounds i8, i8* %13, i64 %idx.ext4, !dbg !8587
  %25 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !8588
  %b6 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %25, i32 0, i32 0, !dbg !8589
  %arrayidx7 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b6, i64 0, i64 1, !dbg !8588
  store i8* %add.ptr5, i8** %arrayidx7, align 8, !dbg !8590
  %26 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !8591
  %y = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %26, i32 0, i32 1, !dbg !8592
  store i32 -1, i32* %y, align 8, !dbg !8593
  ret void, !dbg !8594
}

; Function Attrs: nounwind uwtable
define internal void @spatial_compose_dd137i_init_12bit(%struct.DWTCompose* %cs, i8* %buffer, i32 %height, i32 %stride) #0 !dbg !8595 {
entry:
  %retval.i116 = alloca i32, align 4
  %a.addr.i117 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i117, metadata !904, metadata !87), !dbg !8596
  %amin.addr.i118 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i118, metadata !911, metadata !87), !dbg !8598
  %amax.addr.i119 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i119, metadata !913, metadata !87), !dbg !8599
  %retval.i105 = alloca i32, align 4
  %a.addr.i106 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i106, metadata !904, metadata !87), !dbg !8600
  %amin.addr.i107 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i107, metadata !911, metadata !87), !dbg !8602
  %amax.addr.i108 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i108, metadata !913, metadata !87), !dbg !8603
  %retval.i94 = alloca i32, align 4
  %a.addr.i95 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i95, metadata !904, metadata !87), !dbg !8604
  %amin.addr.i96 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i96, metadata !911, metadata !87), !dbg !8606
  %amax.addr.i97 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i97, metadata !913, metadata !87), !dbg !8607
  %retval.i83 = alloca i32, align 4
  %a.addr.i84 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i84, metadata !904, metadata !87), !dbg !8608
  %amin.addr.i85 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i85, metadata !911, metadata !87), !dbg !8610
  %amax.addr.i86 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i86, metadata !913, metadata !87), !dbg !8611
  %retval.i72 = alloca i32, align 4
  %a.addr.i73 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i73, metadata !904, metadata !87), !dbg !8612
  %amin.addr.i74 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i74, metadata !911, metadata !87), !dbg !8614
  %amax.addr.i75 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i75, metadata !913, metadata !87), !dbg !8615
  %retval.i61 = alloca i32, align 4
  %a.addr.i62 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i62, metadata !904, metadata !87), !dbg !8616
  %amin.addr.i63 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i63, metadata !911, metadata !87), !dbg !8618
  %amax.addr.i64 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i64, metadata !913, metadata !87), !dbg !8619
  %retval.i50 = alloca i32, align 4
  %a.addr.i51 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i51, metadata !904, metadata !87), !dbg !8620
  %amin.addr.i52 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i52, metadata !911, metadata !87), !dbg !8622
  %amax.addr.i53 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i53, metadata !913, metadata !87), !dbg !8623
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !904, metadata !87), !dbg !8624
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !911, metadata !87), !dbg !8626
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !913, metadata !87), !dbg !8627
  %cs.addr = alloca %struct.DWTCompose*, align 8
  %buffer.addr = alloca i8*, align 8
  %height.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  store %struct.DWTCompose* %cs, %struct.DWTCompose** %cs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTCompose** %cs.addr, metadata !8628, metadata !87), !dbg !8629
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !8630, metadata !87), !dbg !8631
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !8632, metadata !87), !dbg !8633
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !8634, metadata !87), !dbg !8635
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !8636
  %1 = load i32, i32* %height.addr, align 4, !dbg !8637
  %sub = sub nsw i32 %1, 2, !dbg !8638
  store i32 -6, i32* %a.addr.i, align 4, !dbg !8639
  store i32 0, i32* %amin.addr.i, align 4, !dbg !8639
  store i32 %sub, i32* %amax.addr.i, align 4, !dbg !8639
  %2 = load i32, i32* %a.addr.i, align 4, !dbg !8640
  %3 = load i32, i32* %amin.addr.i, align 4, !dbg !8641
  %cmp.i = icmp slt i32 %2, %3, !dbg !8642
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !8643

if.then.i:                                        ; preds = %entry
  %4 = load i32, i32* %amin.addr.i, align 4, !dbg !8644
  store i32 %4, i32* %retval.i, align 4, !dbg !8645
  br label %av_clip_c.exit, !dbg !8645

if.else.i:                                        ; preds = %entry
  %5 = load i32, i32* %a.addr.i, align 4, !dbg !8646
  %6 = load i32, i32* %amax.addr.i, align 4, !dbg !8647
  %cmp1.i = icmp sgt i32 %5, %6, !dbg !8648
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !8649

if.then2.i:                                       ; preds = %if.else.i
  %7 = load i32, i32* %amax.addr.i, align 4, !dbg !8650
  store i32 %7, i32* %retval.i, align 4, !dbg !8651
  br label %av_clip_c.exit, !dbg !8651

if.else3.i:                                       ; preds = %if.else.i
  %8 = load i32, i32* %a.addr.i, align 4, !dbg !8652
  store i32 %8, i32* %retval.i, align 4, !dbg !8653
  br label %av_clip_c.exit, !dbg !8653

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %9 = load i32, i32* %retval.i, align 4, !dbg !8654
  %10 = load i32, i32* %stride.addr, align 4, !dbg !8655
  %mul = mul nsw i32 %9, %10, !dbg !8656
  %idx.ext = sext i32 %mul to i64, !dbg !8657
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %idx.ext, !dbg !8657
  %11 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !8658
  %b = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %11, i32 0, i32 0, !dbg !8659
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 0, !dbg !8658
  store i8* %add.ptr, i8** %arrayidx, align 8, !dbg !8660
  %12 = load i8*, i8** %buffer.addr, align 8, !dbg !8661
  %13 = load i32, i32* %height.addr, align 4, !dbg !8662
  %sub1 = sub nsw i32 %13, 1, !dbg !8663
  store i32 -5, i32* %a.addr.i117, align 4, !dbg !8664
  store i32 1, i32* %amin.addr.i118, align 4, !dbg !8664
  store i32 %sub1, i32* %amax.addr.i119, align 4, !dbg !8664
  %14 = load i32, i32* %a.addr.i117, align 4, !dbg !8665
  %15 = load i32, i32* %amin.addr.i118, align 4, !dbg !8666
  %cmp.i120 = icmp slt i32 %14, %15, !dbg !8667
  br i1 %cmp.i120, label %if.then.i121, label %if.else.i123, !dbg !8668

if.then.i121:                                     ; preds = %av_clip_c.exit
  %16 = load i32, i32* %amin.addr.i118, align 4, !dbg !8669
  store i32 %16, i32* %retval.i116, align 4, !dbg !8670
  br label %av_clip_c.exit126, !dbg !8670

if.else.i123:                                     ; preds = %av_clip_c.exit
  %17 = load i32, i32* %a.addr.i117, align 4, !dbg !8671
  %18 = load i32, i32* %amax.addr.i119, align 4, !dbg !8672
  %cmp1.i122 = icmp sgt i32 %17, %18, !dbg !8673
  br i1 %cmp1.i122, label %if.then2.i124, label %if.else3.i125, !dbg !8674

if.then2.i124:                                    ; preds = %if.else.i123
  %19 = load i32, i32* %amax.addr.i119, align 4, !dbg !8675
  store i32 %19, i32* %retval.i116, align 4, !dbg !8676
  br label %av_clip_c.exit126, !dbg !8676

if.else3.i125:                                    ; preds = %if.else.i123
  %20 = load i32, i32* %a.addr.i117, align 4, !dbg !8677
  store i32 %20, i32* %retval.i116, align 4, !dbg !8678
  br label %av_clip_c.exit126, !dbg !8678

av_clip_c.exit126:                                ; preds = %if.then.i121, %if.then2.i124, %if.else3.i125
  %21 = load i32, i32* %retval.i116, align 4, !dbg !8679
  %22 = load i32, i32* %stride.addr, align 4, !dbg !8680
  %mul3 = mul nsw i32 %21, %22, !dbg !8681
  %idx.ext4 = sext i32 %mul3 to i64, !dbg !8682
  %add.ptr5 = getelementptr inbounds i8, i8* %12, i64 %idx.ext4, !dbg !8682
  %23 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !8683
  %b6 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %23, i32 0, i32 0, !dbg !8684
  %arrayidx7 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b6, i64 0, i64 1, !dbg !8683
  store i8* %add.ptr5, i8** %arrayidx7, align 8, !dbg !8685
  %24 = load i8*, i8** %buffer.addr, align 8, !dbg !8686
  %25 = load i32, i32* %height.addr, align 4, !dbg !8687
  %sub8 = sub nsw i32 %25, 2, !dbg !8688
  store i32 -4, i32* %a.addr.i106, align 4, !dbg !8689
  store i32 0, i32* %amin.addr.i107, align 4, !dbg !8689
  store i32 %sub8, i32* %amax.addr.i108, align 4, !dbg !8689
  %26 = load i32, i32* %a.addr.i106, align 4, !dbg !8690
  %27 = load i32, i32* %amin.addr.i107, align 4, !dbg !8691
  %cmp.i109 = icmp slt i32 %26, %27, !dbg !8692
  br i1 %cmp.i109, label %if.then.i110, label %if.else.i112, !dbg !8693

if.then.i110:                                     ; preds = %av_clip_c.exit126
  %28 = load i32, i32* %amin.addr.i107, align 4, !dbg !8694
  store i32 %28, i32* %retval.i105, align 4, !dbg !8695
  br label %av_clip_c.exit115, !dbg !8695

if.else.i112:                                     ; preds = %av_clip_c.exit126
  %29 = load i32, i32* %a.addr.i106, align 4, !dbg !8696
  %30 = load i32, i32* %amax.addr.i108, align 4, !dbg !8697
  %cmp1.i111 = icmp sgt i32 %29, %30, !dbg !8698
  br i1 %cmp1.i111, label %if.then2.i113, label %if.else3.i114, !dbg !8699

if.then2.i113:                                    ; preds = %if.else.i112
  %31 = load i32, i32* %amax.addr.i108, align 4, !dbg !8700
  store i32 %31, i32* %retval.i105, align 4, !dbg !8701
  br label %av_clip_c.exit115, !dbg !8701

if.else3.i114:                                    ; preds = %if.else.i112
  %32 = load i32, i32* %a.addr.i106, align 4, !dbg !8702
  store i32 %32, i32* %retval.i105, align 4, !dbg !8703
  br label %av_clip_c.exit115, !dbg !8703

av_clip_c.exit115:                                ; preds = %if.then.i110, %if.then2.i113, %if.else3.i114
  %33 = load i32, i32* %retval.i105, align 4, !dbg !8704
  %34 = load i32, i32* %stride.addr, align 4, !dbg !8705
  %mul10 = mul nsw i32 %33, %34, !dbg !8706
  %idx.ext11 = sext i32 %mul10 to i64, !dbg !8707
  %add.ptr12 = getelementptr inbounds i8, i8* %24, i64 %idx.ext11, !dbg !8707
  %35 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !8708
  %b13 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %35, i32 0, i32 0, !dbg !8709
  %arrayidx14 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b13, i64 0, i64 2, !dbg !8708
  store i8* %add.ptr12, i8** %arrayidx14, align 8, !dbg !8710
  %36 = load i8*, i8** %buffer.addr, align 8, !dbg !8711
  %37 = load i32, i32* %height.addr, align 4, !dbg !8712
  %sub15 = sub nsw i32 %37, 1, !dbg !8713
  store i32 -3, i32* %a.addr.i95, align 4, !dbg !8714
  store i32 1, i32* %amin.addr.i96, align 4, !dbg !8714
  store i32 %sub15, i32* %amax.addr.i97, align 4, !dbg !8714
  %38 = load i32, i32* %a.addr.i95, align 4, !dbg !8715
  %39 = load i32, i32* %amin.addr.i96, align 4, !dbg !8716
  %cmp.i98 = icmp slt i32 %38, %39, !dbg !8717
  br i1 %cmp.i98, label %if.then.i99, label %if.else.i101, !dbg !8718

if.then.i99:                                      ; preds = %av_clip_c.exit115
  %40 = load i32, i32* %amin.addr.i96, align 4, !dbg !8719
  store i32 %40, i32* %retval.i94, align 4, !dbg !8720
  br label %av_clip_c.exit104, !dbg !8720

if.else.i101:                                     ; preds = %av_clip_c.exit115
  %41 = load i32, i32* %a.addr.i95, align 4, !dbg !8721
  %42 = load i32, i32* %amax.addr.i97, align 4, !dbg !8722
  %cmp1.i100 = icmp sgt i32 %41, %42, !dbg !8723
  br i1 %cmp1.i100, label %if.then2.i102, label %if.else3.i103, !dbg !8724

if.then2.i102:                                    ; preds = %if.else.i101
  %43 = load i32, i32* %amax.addr.i97, align 4, !dbg !8725
  store i32 %43, i32* %retval.i94, align 4, !dbg !8726
  br label %av_clip_c.exit104, !dbg !8726

if.else3.i103:                                    ; preds = %if.else.i101
  %44 = load i32, i32* %a.addr.i95, align 4, !dbg !8727
  store i32 %44, i32* %retval.i94, align 4, !dbg !8728
  br label %av_clip_c.exit104, !dbg !8728

av_clip_c.exit104:                                ; preds = %if.then.i99, %if.then2.i102, %if.else3.i103
  %45 = load i32, i32* %retval.i94, align 4, !dbg !8729
  %46 = load i32, i32* %stride.addr, align 4, !dbg !8730
  %mul17 = mul nsw i32 %45, %46, !dbg !8731
  %idx.ext18 = sext i32 %mul17 to i64, !dbg !8732
  %add.ptr19 = getelementptr inbounds i8, i8* %36, i64 %idx.ext18, !dbg !8732
  %47 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !8733
  %b20 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %47, i32 0, i32 0, !dbg !8734
  %arrayidx21 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b20, i64 0, i64 3, !dbg !8733
  store i8* %add.ptr19, i8** %arrayidx21, align 8, !dbg !8735
  %48 = load i8*, i8** %buffer.addr, align 8, !dbg !8736
  %49 = load i32, i32* %height.addr, align 4, !dbg !8737
  %sub22 = sub nsw i32 %49, 2, !dbg !8738
  store i32 -2, i32* %a.addr.i84, align 4, !dbg !8739
  store i32 0, i32* %amin.addr.i85, align 4, !dbg !8739
  store i32 %sub22, i32* %amax.addr.i86, align 4, !dbg !8739
  %50 = load i32, i32* %a.addr.i84, align 4, !dbg !8740
  %51 = load i32, i32* %amin.addr.i85, align 4, !dbg !8741
  %cmp.i87 = icmp slt i32 %50, %51, !dbg !8742
  br i1 %cmp.i87, label %if.then.i88, label %if.else.i90, !dbg !8743

if.then.i88:                                      ; preds = %av_clip_c.exit104
  %52 = load i32, i32* %amin.addr.i85, align 4, !dbg !8744
  store i32 %52, i32* %retval.i83, align 4, !dbg !8745
  br label %av_clip_c.exit93, !dbg !8745

if.else.i90:                                      ; preds = %av_clip_c.exit104
  %53 = load i32, i32* %a.addr.i84, align 4, !dbg !8746
  %54 = load i32, i32* %amax.addr.i86, align 4, !dbg !8747
  %cmp1.i89 = icmp sgt i32 %53, %54, !dbg !8748
  br i1 %cmp1.i89, label %if.then2.i91, label %if.else3.i92, !dbg !8749

if.then2.i91:                                     ; preds = %if.else.i90
  %55 = load i32, i32* %amax.addr.i86, align 4, !dbg !8750
  store i32 %55, i32* %retval.i83, align 4, !dbg !8751
  br label %av_clip_c.exit93, !dbg !8751

if.else3.i92:                                     ; preds = %if.else.i90
  %56 = load i32, i32* %a.addr.i84, align 4, !dbg !8752
  store i32 %56, i32* %retval.i83, align 4, !dbg !8753
  br label %av_clip_c.exit93, !dbg !8753

av_clip_c.exit93:                                 ; preds = %if.then.i88, %if.then2.i91, %if.else3.i92
  %57 = load i32, i32* %retval.i83, align 4, !dbg !8754
  %58 = load i32, i32* %stride.addr, align 4, !dbg !8755
  %mul24 = mul nsw i32 %57, %58, !dbg !8756
  %idx.ext25 = sext i32 %mul24 to i64, !dbg !8757
  %add.ptr26 = getelementptr inbounds i8, i8* %48, i64 %idx.ext25, !dbg !8757
  %59 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !8758
  %b27 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %59, i32 0, i32 0, !dbg !8759
  %arrayidx28 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b27, i64 0, i64 4, !dbg !8758
  store i8* %add.ptr26, i8** %arrayidx28, align 8, !dbg !8760
  %60 = load i8*, i8** %buffer.addr, align 8, !dbg !8761
  %61 = load i32, i32* %height.addr, align 4, !dbg !8762
  %sub29 = sub nsw i32 %61, 1, !dbg !8763
  store i32 -1, i32* %a.addr.i73, align 4, !dbg !8764
  store i32 1, i32* %amin.addr.i74, align 4, !dbg !8764
  store i32 %sub29, i32* %amax.addr.i75, align 4, !dbg !8764
  %62 = load i32, i32* %a.addr.i73, align 4, !dbg !8765
  %63 = load i32, i32* %amin.addr.i74, align 4, !dbg !8766
  %cmp.i76 = icmp slt i32 %62, %63, !dbg !8767
  br i1 %cmp.i76, label %if.then.i77, label %if.else.i79, !dbg !8768

if.then.i77:                                      ; preds = %av_clip_c.exit93
  %64 = load i32, i32* %amin.addr.i74, align 4, !dbg !8769
  store i32 %64, i32* %retval.i72, align 4, !dbg !8770
  br label %av_clip_c.exit82, !dbg !8770

if.else.i79:                                      ; preds = %av_clip_c.exit93
  %65 = load i32, i32* %a.addr.i73, align 4, !dbg !8771
  %66 = load i32, i32* %amax.addr.i75, align 4, !dbg !8772
  %cmp1.i78 = icmp sgt i32 %65, %66, !dbg !8773
  br i1 %cmp1.i78, label %if.then2.i80, label %if.else3.i81, !dbg !8774

if.then2.i80:                                     ; preds = %if.else.i79
  %67 = load i32, i32* %amax.addr.i75, align 4, !dbg !8775
  store i32 %67, i32* %retval.i72, align 4, !dbg !8776
  br label %av_clip_c.exit82, !dbg !8776

if.else3.i81:                                     ; preds = %if.else.i79
  %68 = load i32, i32* %a.addr.i73, align 4, !dbg !8777
  store i32 %68, i32* %retval.i72, align 4, !dbg !8778
  br label %av_clip_c.exit82, !dbg !8778

av_clip_c.exit82:                                 ; preds = %if.then.i77, %if.then2.i80, %if.else3.i81
  %69 = load i32, i32* %retval.i72, align 4, !dbg !8779
  %70 = load i32, i32* %stride.addr, align 4, !dbg !8780
  %mul31 = mul nsw i32 %69, %70, !dbg !8781
  %idx.ext32 = sext i32 %mul31 to i64, !dbg !8782
  %add.ptr33 = getelementptr inbounds i8, i8* %60, i64 %idx.ext32, !dbg !8782
  %71 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !8783
  %b34 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %71, i32 0, i32 0, !dbg !8784
  %arrayidx35 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b34, i64 0, i64 5, !dbg !8783
  store i8* %add.ptr33, i8** %arrayidx35, align 8, !dbg !8785
  %72 = load i8*, i8** %buffer.addr, align 8, !dbg !8786
  %73 = load i32, i32* %height.addr, align 4, !dbg !8787
  %sub36 = sub nsw i32 %73, 2, !dbg !8788
  store i32 0, i32* %a.addr.i62, align 4, !dbg !8789
  store i32 0, i32* %amin.addr.i63, align 4, !dbg !8789
  store i32 %sub36, i32* %amax.addr.i64, align 4, !dbg !8789
  %74 = load i32, i32* %a.addr.i62, align 4, !dbg !8790
  %75 = load i32, i32* %amin.addr.i63, align 4, !dbg !8791
  %cmp.i65 = icmp slt i32 %74, %75, !dbg !8792
  br i1 %cmp.i65, label %if.then.i66, label %if.else.i68, !dbg !8793

if.then.i66:                                      ; preds = %av_clip_c.exit82
  %76 = load i32, i32* %amin.addr.i63, align 4, !dbg !8794
  store i32 %76, i32* %retval.i61, align 4, !dbg !8795
  br label %av_clip_c.exit71, !dbg !8795

if.else.i68:                                      ; preds = %av_clip_c.exit82
  %77 = load i32, i32* %a.addr.i62, align 4, !dbg !8796
  %78 = load i32, i32* %amax.addr.i64, align 4, !dbg !8797
  %cmp1.i67 = icmp sgt i32 %77, %78, !dbg !8798
  br i1 %cmp1.i67, label %if.then2.i69, label %if.else3.i70, !dbg !8799

if.then2.i69:                                     ; preds = %if.else.i68
  %79 = load i32, i32* %amax.addr.i64, align 4, !dbg !8800
  store i32 %79, i32* %retval.i61, align 4, !dbg !8801
  br label %av_clip_c.exit71, !dbg !8801

if.else3.i70:                                     ; preds = %if.else.i68
  %80 = load i32, i32* %a.addr.i62, align 4, !dbg !8802
  store i32 %80, i32* %retval.i61, align 4, !dbg !8803
  br label %av_clip_c.exit71, !dbg !8803

av_clip_c.exit71:                                 ; preds = %if.then.i66, %if.then2.i69, %if.else3.i70
  %81 = load i32, i32* %retval.i61, align 4, !dbg !8804
  %82 = load i32, i32* %stride.addr, align 4, !dbg !8805
  %mul38 = mul nsw i32 %81, %82, !dbg !8806
  %idx.ext39 = sext i32 %mul38 to i64, !dbg !8807
  %add.ptr40 = getelementptr inbounds i8, i8* %72, i64 %idx.ext39, !dbg !8807
  %83 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !8808
  %b41 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %83, i32 0, i32 0, !dbg !8809
  %arrayidx42 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b41, i64 0, i64 6, !dbg !8808
  store i8* %add.ptr40, i8** %arrayidx42, align 8, !dbg !8810
  %84 = load i8*, i8** %buffer.addr, align 8, !dbg !8811
  %85 = load i32, i32* %height.addr, align 4, !dbg !8812
  %sub43 = sub nsw i32 %85, 1, !dbg !8813
  store i32 1, i32* %a.addr.i51, align 4, !dbg !8814
  store i32 1, i32* %amin.addr.i52, align 4, !dbg !8814
  store i32 %sub43, i32* %amax.addr.i53, align 4, !dbg !8814
  %86 = load i32, i32* %a.addr.i51, align 4, !dbg !8815
  %87 = load i32, i32* %amin.addr.i52, align 4, !dbg !8816
  %cmp.i54 = icmp slt i32 %86, %87, !dbg !8817
  br i1 %cmp.i54, label %if.then.i55, label %if.else.i57, !dbg !8818

if.then.i55:                                      ; preds = %av_clip_c.exit71
  %88 = load i32, i32* %amin.addr.i52, align 4, !dbg !8819
  store i32 %88, i32* %retval.i50, align 4, !dbg !8820
  br label %av_clip_c.exit60, !dbg !8820

if.else.i57:                                      ; preds = %av_clip_c.exit71
  %89 = load i32, i32* %a.addr.i51, align 4, !dbg !8821
  %90 = load i32, i32* %amax.addr.i53, align 4, !dbg !8822
  %cmp1.i56 = icmp sgt i32 %89, %90, !dbg !8823
  br i1 %cmp1.i56, label %if.then2.i58, label %if.else3.i59, !dbg !8824

if.then2.i58:                                     ; preds = %if.else.i57
  %91 = load i32, i32* %amax.addr.i53, align 4, !dbg !8825
  store i32 %91, i32* %retval.i50, align 4, !dbg !8826
  br label %av_clip_c.exit60, !dbg !8826

if.else3.i59:                                     ; preds = %if.else.i57
  %92 = load i32, i32* %a.addr.i51, align 4, !dbg !8827
  store i32 %92, i32* %retval.i50, align 4, !dbg !8828
  br label %av_clip_c.exit60, !dbg !8828

av_clip_c.exit60:                                 ; preds = %if.then.i55, %if.then2.i58, %if.else3.i59
  %93 = load i32, i32* %retval.i50, align 4, !dbg !8829
  %94 = load i32, i32* %stride.addr, align 4, !dbg !8830
  %mul45 = mul nsw i32 %93, %94, !dbg !8831
  %idx.ext46 = sext i32 %mul45 to i64, !dbg !8832
  %add.ptr47 = getelementptr inbounds i8, i8* %84, i64 %idx.ext46, !dbg !8832
  %95 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !8833
  %b48 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %95, i32 0, i32 0, !dbg !8834
  %arrayidx49 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b48, i64 0, i64 7, !dbg !8833
  store i8* %add.ptr47, i8** %arrayidx49, align 8, !dbg !8835
  %96 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !8836
  %y = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %96, i32 0, i32 1, !dbg !8837
  store i32 -5, i32* %y, align 8, !dbg !8838
  ret void, !dbg !8839
}

; Function Attrs: nounwind uwtable
define internal void @spatial_compose97i_init_12bit(%struct.DWTCompose* %cs, i8* %buffer, i32 %height, i32 %stride) #0 !dbg !8840 {
entry:
  %retval.i56 = alloca i32, align 4
  %x.addr.i57 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i57, metadata !1102, metadata !87), !dbg !8841
  %w.addr.i58 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i58, metadata !1109, metadata !87), !dbg !8843
  %retval.i39 = alloca i32, align 4
  %x.addr.i40 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i40, metadata !1102, metadata !87), !dbg !8844
  %w.addr.i41 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i41, metadata !1109, metadata !87), !dbg !8846
  %retval.i22 = alloca i32, align 4
  %x.addr.i23 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i23, metadata !1102, metadata !87), !dbg !8847
  %w.addr.i24 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i24, metadata !1109, metadata !87), !dbg !8849
  %retval.i = alloca i32, align 4
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !1102, metadata !87), !dbg !8850
  %w.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i, metadata !1109, metadata !87), !dbg !8852
  %cs.addr = alloca %struct.DWTCompose*, align 8
  %buffer.addr = alloca i8*, align 8
  %height.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  store %struct.DWTCompose* %cs, %struct.DWTCompose** %cs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTCompose** %cs.addr, metadata !8853, metadata !87), !dbg !8854
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !8855, metadata !87), !dbg !8856
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !8857, metadata !87), !dbg !8858
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !8859, metadata !87), !dbg !8860
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !8861
  %1 = load i32, i32* %height.addr, align 4, !dbg !8862
  %sub = sub nsw i32 %1, 1, !dbg !8863
  store i32 -4, i32* %x.addr.i, align 4, !dbg !8864
  store i32 %sub, i32* %w.addr.i, align 4, !dbg !8864
  %2 = load i32, i32* %w.addr.i, align 4, !dbg !8865
  %tobool.i = icmp ne i32 %2, 0, !dbg !8865
  br i1 %tobool.i, label %if.end.i, label %if.then.i, !dbg !8866

if.then.i:                                        ; preds = %entry
  store i32 0, i32* %retval.i, align 4, !dbg !8867
  br label %avpriv_mirror.exit, !dbg !8867

if.end.i:                                         ; preds = %entry
  br label %while.cond.i, !dbg !8868

while.cond.i:                                     ; preds = %if.end3.i, %if.end.i
  %3 = load i32, i32* %x.addr.i, align 4, !dbg !8869
  %4 = load i32, i32* %w.addr.i, align 4, !dbg !8870
  %cmp.i = icmp ugt i32 %3, %4, !dbg !8871
  br i1 %cmp.i, label %while.body.i, label %while.end.i, !dbg !8872

while.body.i:                                     ; preds = %while.cond.i
  %5 = load i32, i32* %x.addr.i, align 4, !dbg !8873
  %sub.i = sub nsw i32 0, %5, !dbg !8874
  store i32 %sub.i, i32* %x.addr.i, align 4, !dbg !8875
  %6 = load i32, i32* %x.addr.i, align 4, !dbg !8876
  %cmp1.i = icmp slt i32 %6, 0, !dbg !8877
  br i1 %cmp1.i, label %if.then2.i, label %if.end3.i, !dbg !8878

if.then2.i:                                       ; preds = %while.body.i
  %7 = load i32, i32* %w.addr.i, align 4, !dbg !8879
  %mul.i = mul nsw i32 2, %7, !dbg !8880
  %8 = load i32, i32* %x.addr.i, align 4, !dbg !8881
  %add.i = add nsw i32 %8, %mul.i, !dbg !8881
  store i32 %add.i, i32* %x.addr.i, align 4, !dbg !8881
  br label %if.end3.i, !dbg !8882

if.end3.i:                                        ; preds = %if.then2.i, %while.body.i
  br label %while.cond.i, !dbg !8883, !llvm.loop !1150

while.end.i:                                      ; preds = %while.cond.i
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !8884
  store i32 %9, i32* %retval.i, align 4, !dbg !8885
  br label %avpriv_mirror.exit, !dbg !8885

avpriv_mirror.exit:                               ; preds = %if.then.i, %while.end.i
  %10 = load i32, i32* %retval.i, align 4, !dbg !8886
  %11 = load i32, i32* %stride.addr, align 4, !dbg !8887
  %mul = mul nsw i32 %10, %11, !dbg !8888
  %idx.ext = sext i32 %mul to i64, !dbg !8889
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %idx.ext, !dbg !8889
  %12 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !8890
  %b = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %12, i32 0, i32 0, !dbg !8891
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 0, !dbg !8890
  store i8* %add.ptr, i8** %arrayidx, align 8, !dbg !8892
  %13 = load i8*, i8** %buffer.addr, align 8, !dbg !8893
  %14 = load i32, i32* %height.addr, align 4, !dbg !8894
  %sub1 = sub nsw i32 %14, 1, !dbg !8895
  store i32 -3, i32* %x.addr.i57, align 4, !dbg !8896
  store i32 %sub1, i32* %w.addr.i58, align 4, !dbg !8896
  %15 = load i32, i32* %w.addr.i58, align 4, !dbg !8897
  %tobool.i59 = icmp ne i32 %15, 0, !dbg !8897
  br i1 %tobool.i59, label %if.end.i61, label %if.then.i60, !dbg !8898

if.then.i60:                                      ; preds = %avpriv_mirror.exit
  store i32 0, i32* %retval.i56, align 4, !dbg !8899
  br label %avpriv_mirror.exit72, !dbg !8899

if.end.i61:                                       ; preds = %avpriv_mirror.exit
  br label %while.cond.i63, !dbg !8900

while.cond.i63:                                   ; preds = %if.end3.i70, %if.end.i61
  %16 = load i32, i32* %x.addr.i57, align 4, !dbg !8901
  %17 = load i32, i32* %w.addr.i58, align 4, !dbg !8902
  %cmp.i62 = icmp ugt i32 %16, %17, !dbg !8903
  br i1 %cmp.i62, label %while.body.i66, label %while.end.i71, !dbg !8904

while.body.i66:                                   ; preds = %while.cond.i63
  %18 = load i32, i32* %x.addr.i57, align 4, !dbg !8905
  %sub.i64 = sub nsw i32 0, %18, !dbg !8906
  store i32 %sub.i64, i32* %x.addr.i57, align 4, !dbg !8907
  %19 = load i32, i32* %x.addr.i57, align 4, !dbg !8908
  %cmp1.i65 = icmp slt i32 %19, 0, !dbg !8909
  br i1 %cmp1.i65, label %if.then2.i69, label %if.end3.i70, !dbg !8910

if.then2.i69:                                     ; preds = %while.body.i66
  %20 = load i32, i32* %w.addr.i58, align 4, !dbg !8911
  %mul.i67 = mul nsw i32 2, %20, !dbg !8912
  %21 = load i32, i32* %x.addr.i57, align 4, !dbg !8913
  %add.i68 = add nsw i32 %21, %mul.i67, !dbg !8913
  store i32 %add.i68, i32* %x.addr.i57, align 4, !dbg !8913
  br label %if.end3.i70, !dbg !8914

if.end3.i70:                                      ; preds = %if.then2.i69, %while.body.i66
  br label %while.cond.i63, !dbg !8915, !llvm.loop !1150

while.end.i71:                                    ; preds = %while.cond.i63
  %22 = load i32, i32* %x.addr.i57, align 4, !dbg !8916
  store i32 %22, i32* %retval.i56, align 4, !dbg !8917
  br label %avpriv_mirror.exit72, !dbg !8917

avpriv_mirror.exit72:                             ; preds = %if.then.i60, %while.end.i71
  %23 = load i32, i32* %retval.i56, align 4, !dbg !8918
  %24 = load i32, i32* %stride.addr, align 4, !dbg !8919
  %mul3 = mul nsw i32 %23, %24, !dbg !8920
  %idx.ext4 = sext i32 %mul3 to i64, !dbg !8921
  %add.ptr5 = getelementptr inbounds i8, i8* %13, i64 %idx.ext4, !dbg !8921
  %25 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !8922
  %b6 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %25, i32 0, i32 0, !dbg !8923
  %arrayidx7 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b6, i64 0, i64 1, !dbg !8922
  store i8* %add.ptr5, i8** %arrayidx7, align 8, !dbg !8924
  %26 = load i8*, i8** %buffer.addr, align 8, !dbg !8925
  %27 = load i32, i32* %height.addr, align 4, !dbg !8926
  %sub8 = sub nsw i32 %27, 1, !dbg !8927
  store i32 -2, i32* %x.addr.i40, align 4, !dbg !8928
  store i32 %sub8, i32* %w.addr.i41, align 4, !dbg !8928
  %28 = load i32, i32* %w.addr.i41, align 4, !dbg !8929
  %tobool.i42 = icmp ne i32 %28, 0, !dbg !8929
  br i1 %tobool.i42, label %if.end.i44, label %if.then.i43, !dbg !8930

if.then.i43:                                      ; preds = %avpriv_mirror.exit72
  store i32 0, i32* %retval.i39, align 4, !dbg !8931
  br label %avpriv_mirror.exit55, !dbg !8931

if.end.i44:                                       ; preds = %avpriv_mirror.exit72
  br label %while.cond.i46, !dbg !8932

while.cond.i46:                                   ; preds = %if.end3.i53, %if.end.i44
  %29 = load i32, i32* %x.addr.i40, align 4, !dbg !8933
  %30 = load i32, i32* %w.addr.i41, align 4, !dbg !8934
  %cmp.i45 = icmp ugt i32 %29, %30, !dbg !8935
  br i1 %cmp.i45, label %while.body.i49, label %while.end.i54, !dbg !8936

while.body.i49:                                   ; preds = %while.cond.i46
  %31 = load i32, i32* %x.addr.i40, align 4, !dbg !8937
  %sub.i47 = sub nsw i32 0, %31, !dbg !8938
  store i32 %sub.i47, i32* %x.addr.i40, align 4, !dbg !8939
  %32 = load i32, i32* %x.addr.i40, align 4, !dbg !8940
  %cmp1.i48 = icmp slt i32 %32, 0, !dbg !8941
  br i1 %cmp1.i48, label %if.then2.i52, label %if.end3.i53, !dbg !8942

if.then2.i52:                                     ; preds = %while.body.i49
  %33 = load i32, i32* %w.addr.i41, align 4, !dbg !8943
  %mul.i50 = mul nsw i32 2, %33, !dbg !8944
  %34 = load i32, i32* %x.addr.i40, align 4, !dbg !8945
  %add.i51 = add nsw i32 %34, %mul.i50, !dbg !8945
  store i32 %add.i51, i32* %x.addr.i40, align 4, !dbg !8945
  br label %if.end3.i53, !dbg !8946

if.end3.i53:                                      ; preds = %if.then2.i52, %while.body.i49
  br label %while.cond.i46, !dbg !8947, !llvm.loop !1150

while.end.i54:                                    ; preds = %while.cond.i46
  %35 = load i32, i32* %x.addr.i40, align 4, !dbg !8948
  store i32 %35, i32* %retval.i39, align 4, !dbg !8949
  br label %avpriv_mirror.exit55, !dbg !8949

avpriv_mirror.exit55:                             ; preds = %if.then.i43, %while.end.i54
  %36 = load i32, i32* %retval.i39, align 4, !dbg !8950
  %37 = load i32, i32* %stride.addr, align 4, !dbg !8951
  %mul10 = mul nsw i32 %36, %37, !dbg !8952
  %idx.ext11 = sext i32 %mul10 to i64, !dbg !8953
  %add.ptr12 = getelementptr inbounds i8, i8* %26, i64 %idx.ext11, !dbg !8953
  %38 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !8954
  %b13 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %38, i32 0, i32 0, !dbg !8955
  %arrayidx14 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b13, i64 0, i64 2, !dbg !8954
  store i8* %add.ptr12, i8** %arrayidx14, align 8, !dbg !8956
  %39 = load i8*, i8** %buffer.addr, align 8, !dbg !8957
  %40 = load i32, i32* %height.addr, align 4, !dbg !8958
  %sub15 = sub nsw i32 %40, 1, !dbg !8959
  store i32 -1, i32* %x.addr.i23, align 4, !dbg !8960
  store i32 %sub15, i32* %w.addr.i24, align 4, !dbg !8960
  %41 = load i32, i32* %w.addr.i24, align 4, !dbg !8961
  %tobool.i25 = icmp ne i32 %41, 0, !dbg !8961
  br i1 %tobool.i25, label %if.end.i27, label %if.then.i26, !dbg !8962

if.then.i26:                                      ; preds = %avpriv_mirror.exit55
  store i32 0, i32* %retval.i22, align 4, !dbg !8963
  br label %avpriv_mirror.exit38, !dbg !8963

if.end.i27:                                       ; preds = %avpriv_mirror.exit55
  br label %while.cond.i29, !dbg !8964

while.cond.i29:                                   ; preds = %if.end3.i36, %if.end.i27
  %42 = load i32, i32* %x.addr.i23, align 4, !dbg !8965
  %43 = load i32, i32* %w.addr.i24, align 4, !dbg !8966
  %cmp.i28 = icmp ugt i32 %42, %43, !dbg !8967
  br i1 %cmp.i28, label %while.body.i32, label %while.end.i37, !dbg !8968

while.body.i32:                                   ; preds = %while.cond.i29
  %44 = load i32, i32* %x.addr.i23, align 4, !dbg !8969
  %sub.i30 = sub nsw i32 0, %44, !dbg !8970
  store i32 %sub.i30, i32* %x.addr.i23, align 4, !dbg !8971
  %45 = load i32, i32* %x.addr.i23, align 4, !dbg !8972
  %cmp1.i31 = icmp slt i32 %45, 0, !dbg !8973
  br i1 %cmp1.i31, label %if.then2.i35, label %if.end3.i36, !dbg !8974

if.then2.i35:                                     ; preds = %while.body.i32
  %46 = load i32, i32* %w.addr.i24, align 4, !dbg !8975
  %mul.i33 = mul nsw i32 2, %46, !dbg !8976
  %47 = load i32, i32* %x.addr.i23, align 4, !dbg !8977
  %add.i34 = add nsw i32 %47, %mul.i33, !dbg !8977
  store i32 %add.i34, i32* %x.addr.i23, align 4, !dbg !8977
  br label %if.end3.i36, !dbg !8978

if.end3.i36:                                      ; preds = %if.then2.i35, %while.body.i32
  br label %while.cond.i29, !dbg !8979, !llvm.loop !1150

while.end.i37:                                    ; preds = %while.cond.i29
  %48 = load i32, i32* %x.addr.i23, align 4, !dbg !8980
  store i32 %48, i32* %retval.i22, align 4, !dbg !8981
  br label %avpriv_mirror.exit38, !dbg !8981

avpriv_mirror.exit38:                             ; preds = %if.then.i26, %while.end.i37
  %49 = load i32, i32* %retval.i22, align 4, !dbg !8982
  %50 = load i32, i32* %stride.addr, align 4, !dbg !8983
  %mul17 = mul nsw i32 %49, %50, !dbg !8984
  %idx.ext18 = sext i32 %mul17 to i64, !dbg !8985
  %add.ptr19 = getelementptr inbounds i8, i8* %39, i64 %idx.ext18, !dbg !8985
  %51 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !8986
  %b20 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %51, i32 0, i32 0, !dbg !8987
  %arrayidx21 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b20, i64 0, i64 3, !dbg !8986
  store i8* %add.ptr19, i8** %arrayidx21, align 8, !dbg !8988
  %52 = load %struct.DWTCompose*, %struct.DWTCompose** %cs.addr, align 8, !dbg !8989
  %y = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %52, i32 0, i32 1, !dbg !8990
  store i32 -3, i32* %y, align 8, !dbg !8991
  ret void, !dbg !8992
}

; Function Attrs: nounwind uwtable
define internal void @spatial_compose_dd97i_dy_12bit(%struct.DWTContext* %d, i32 %level, i32 %width, i32 %height, i32 %stride) #0 !dbg !8993 {
entry:
  %retval.i59 = alloca i32, align 4
  %a.addr.i60 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i60, metadata !904, metadata !87), !dbg !8994
  %amin.addr.i61 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i61, metadata !911, metadata !87), !dbg !8996
  %amax.addr.i62 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i62, metadata !913, metadata !87), !dbg !8997
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !904, metadata !87), !dbg !8998
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !911, metadata !87), !dbg !9000
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !913, metadata !87), !dbg !9001
  %d.addr = alloca %struct.DWTContext*, align 8
  %level.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  %vertical_compose_l0 = alloca void (i8*, i8*, i8*, i32)*, align 8
  %vertical_compose_h0 = alloca void (i8*, i8*, i8*, i8*, i8*, i32)*, align 8
  %cs = alloca %struct.DWTCompose*, align 8
  %i = alloca i32, align 4
  %y = alloca i32, align 4
  %b = alloca [8 x i8*], align 16
  store %struct.DWTContext* %d, %struct.DWTContext** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTContext** %d.addr, metadata !9002, metadata !87), !dbg !9003
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !9004, metadata !87), !dbg !9005
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !9006, metadata !87), !dbg !9007
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !9008, metadata !87), !dbg !9009
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !9010, metadata !87), !dbg !9011
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i32)** %vertical_compose_l0, metadata !9012, metadata !87), !dbg !9013
  %0 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !9014
  %vertical_compose_l01 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %0, i32 0, i32 8, !dbg !9015
  %1 = load void ()*, void ()** %vertical_compose_l01, align 8, !dbg !9015
  %2 = bitcast void ()* %1 to i8*, !dbg !9016
  %3 = bitcast i8* %2 to void (i8*, i8*, i8*, i32)*, !dbg !9016
  store void (i8*, i8*, i8*, i32)* %3, void (i8*, i8*, i8*, i32)** %vertical_compose_l0, align 8, !dbg !9013
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i8*, i8*, i32)** %vertical_compose_h0, metadata !9017, metadata !87), !dbg !9018
  %4 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !9019
  %vertical_compose_h02 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %4, i32 0, i32 9, !dbg !9020
  %5 = load void ()*, void ()** %vertical_compose_h02, align 8, !dbg !9020
  %6 = bitcast void ()* %5 to i8*, !dbg !9021
  %7 = bitcast i8* %6 to void (i8*, i8*, i8*, i8*, i8*, i32)*, !dbg !9021
  store void (i8*, i8*, i8*, i8*, i8*, i32)* %7, void (i8*, i8*, i8*, i8*, i8*, i32)** %vertical_compose_h0, align 8, !dbg !9018
  call void @llvm.dbg.declare(metadata %struct.DWTCompose** %cs, metadata !9022, metadata !87), !dbg !9023
  %8 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !9024
  %cs3 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %8, i32 0, i32 14, !dbg !9025
  %arraydecay = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs3, i32 0, i32 0, !dbg !9024
  %9 = load i32, i32* %level.addr, align 4, !dbg !9026
  %idx.ext = sext i32 %9 to i64, !dbg !9027
  %add.ptr = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arraydecay, i64 %idx.ext, !dbg !9027
  store %struct.DWTCompose* %add.ptr, %struct.DWTCompose** %cs, align 8, !dbg !9023
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9028, metadata !87), !dbg !9029
  call void @llvm.dbg.declare(metadata i32* %y, metadata !9030, metadata !87), !dbg !9031
  %10 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !9032
  %y4 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %10, i32 0, i32 1, !dbg !9033
  %11 = load i32, i32* %y4, align 8, !dbg !9033
  store i32 %11, i32* %y, align 4, !dbg !9031
  call void @llvm.dbg.declare(metadata [8 x i8*]* %b, metadata !9034, metadata !87), !dbg !9035
  store i32 0, i32* %i, align 4, !dbg !9036
  br label %for.cond, !dbg !9038

for.cond:                                         ; preds = %for.inc, %entry
  %12 = load i32, i32* %i, align 4, !dbg !9039
  %cmp = icmp slt i32 %12, 6, !dbg !9042
  br i1 %cmp, label %for.body, label %for.end, !dbg !9043

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %i, align 4, !dbg !9044
  %idxprom = sext i32 %13 to i64, !dbg !9045
  %14 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !9045
  %b5 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %14, i32 0, i32 0, !dbg !9046
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %b5, i64 0, i64 %idxprom, !dbg !9045
  %15 = load i8*, i8** %arrayidx, align 8, !dbg !9045
  %16 = load i32, i32* %i, align 4, !dbg !9047
  %idxprom6 = sext i32 %16 to i64, !dbg !9048
  %arrayidx7 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 %idxprom6, !dbg !9048
  store i8* %15, i8** %arrayidx7, align 8, !dbg !9049
  br label %for.inc, !dbg !9048

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !9050
  %inc = add nsw i32 %17, 1, !dbg !9050
  store i32 %inc, i32* %i, align 4, !dbg !9050
  br label %for.cond, !dbg !9052, !llvm.loop !9053

for.end:                                          ; preds = %for.cond
  %18 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !9055
  %buffer = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %18, i32 0, i32 0, !dbg !9056
  %19 = load i8*, i8** %buffer, align 8, !dbg !9056
  %20 = load i32, i32* %y, align 4, !dbg !9057
  %add = add nsw i32 %20, 5, !dbg !9058
  %21 = load i32, i32* %height.addr, align 4, !dbg !9059
  %sub = sub nsw i32 %21, 2, !dbg !9060
  store i32 %add, i32* %a.addr.i, align 4, !dbg !9061
  store i32 0, i32* %amin.addr.i, align 4, !dbg !9061
  store i32 %sub, i32* %amax.addr.i, align 4, !dbg !9061
  %22 = load i32, i32* %a.addr.i, align 4, !dbg !9062
  %23 = load i32, i32* %amin.addr.i, align 4, !dbg !9063
  %cmp.i = icmp slt i32 %22, %23, !dbg !9064
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !9065

if.then.i:                                        ; preds = %for.end
  %24 = load i32, i32* %amin.addr.i, align 4, !dbg !9066
  store i32 %24, i32* %retval.i, align 4, !dbg !9067
  br label %av_clip_c.exit, !dbg !9067

if.else.i:                                        ; preds = %for.end
  %25 = load i32, i32* %a.addr.i, align 4, !dbg !9068
  %26 = load i32, i32* %amax.addr.i, align 4, !dbg !9069
  %cmp1.i = icmp sgt i32 %25, %26, !dbg !9070
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !9071

if.then2.i:                                       ; preds = %if.else.i
  %27 = load i32, i32* %amax.addr.i, align 4, !dbg !9072
  store i32 %27, i32* %retval.i, align 4, !dbg !9073
  br label %av_clip_c.exit, !dbg !9073

if.else3.i:                                       ; preds = %if.else.i
  %28 = load i32, i32* %a.addr.i, align 4, !dbg !9074
  store i32 %28, i32* %retval.i, align 4, !dbg !9075
  br label %av_clip_c.exit, !dbg !9075

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %29 = load i32, i32* %retval.i, align 4, !dbg !9076
  %30 = load i32, i32* %stride.addr, align 4, !dbg !9077
  %mul = mul nsw i32 %29, %30, !dbg !9078
  %idx.ext8 = sext i32 %mul to i64, !dbg !9079
  %add.ptr9 = getelementptr inbounds i8, i8* %19, i64 %idx.ext8, !dbg !9079
  %arrayidx10 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 6, !dbg !9080
  store i8* %add.ptr9, i8** %arrayidx10, align 16, !dbg !9081
  %31 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !9082
  %buffer11 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %31, i32 0, i32 0, !dbg !9083
  %32 = load i8*, i8** %buffer11, align 8, !dbg !9083
  %33 = load i32, i32* %y, align 4, !dbg !9084
  %add12 = add nsw i32 %33, 6, !dbg !9085
  %34 = load i32, i32* %height.addr, align 4, !dbg !9086
  %sub13 = sub nsw i32 %34, 1, !dbg !9087
  store i32 %add12, i32* %a.addr.i60, align 4, !dbg !9088
  store i32 1, i32* %amin.addr.i61, align 4, !dbg !9088
  store i32 %sub13, i32* %amax.addr.i62, align 4, !dbg !9088
  %35 = load i32, i32* %a.addr.i60, align 4, !dbg !9089
  %36 = load i32, i32* %amin.addr.i61, align 4, !dbg !9090
  %cmp.i63 = icmp slt i32 %35, %36, !dbg !9091
  br i1 %cmp.i63, label %if.then.i64, label %if.else.i66, !dbg !9092

if.then.i64:                                      ; preds = %av_clip_c.exit
  %37 = load i32, i32* %amin.addr.i61, align 4, !dbg !9093
  store i32 %37, i32* %retval.i59, align 4, !dbg !9094
  br label %av_clip_c.exit69, !dbg !9094

if.else.i66:                                      ; preds = %av_clip_c.exit
  %38 = load i32, i32* %a.addr.i60, align 4, !dbg !9095
  %39 = load i32, i32* %amax.addr.i62, align 4, !dbg !9096
  %cmp1.i65 = icmp sgt i32 %38, %39, !dbg !9097
  br i1 %cmp1.i65, label %if.then2.i67, label %if.else3.i68, !dbg !9098

if.then2.i67:                                     ; preds = %if.else.i66
  %40 = load i32, i32* %amax.addr.i62, align 4, !dbg !9099
  store i32 %40, i32* %retval.i59, align 4, !dbg !9100
  br label %av_clip_c.exit69, !dbg !9100

if.else3.i68:                                     ; preds = %if.else.i66
  %41 = load i32, i32* %a.addr.i60, align 4, !dbg !9101
  store i32 %41, i32* %retval.i59, align 4, !dbg !9102
  br label %av_clip_c.exit69, !dbg !9102

av_clip_c.exit69:                                 ; preds = %if.then.i64, %if.then2.i67, %if.else3.i68
  %42 = load i32, i32* %retval.i59, align 4, !dbg !9103
  %43 = load i32, i32* %stride.addr, align 4, !dbg !9104
  %mul15 = mul nsw i32 %42, %43, !dbg !9105
  %idx.ext16 = sext i32 %mul15 to i64, !dbg !9106
  %add.ptr17 = getelementptr inbounds i8, i8* %32, i64 %idx.ext16, !dbg !9106
  %arrayidx18 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 7, !dbg !9107
  store i8* %add.ptr17, i8** %arrayidx18, align 8, !dbg !9108
  %44 = load i32, i32* %y, align 4, !dbg !9109
  %add19 = add nsw i32 %44, 5, !dbg !9111
  %45 = load i32, i32* %height.addr, align 4, !dbg !9112
  %cmp20 = icmp ult i32 %add19, %45, !dbg !9113
  br i1 %cmp20, label %if.then, label %if.end, !dbg !9114

if.then:                                          ; preds = %av_clip_c.exit69
  %46 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %vertical_compose_l0, align 8, !dbg !9115
  %arrayidx21 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 5, !dbg !9117
  %47 = load i8*, i8** %arrayidx21, align 8, !dbg !9117
  %arrayidx22 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 6, !dbg !9118
  %48 = load i8*, i8** %arrayidx22, align 16, !dbg !9118
  %arrayidx23 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 7, !dbg !9119
  %49 = load i8*, i8** %arrayidx23, align 8, !dbg !9119
  %50 = load i32, i32* %width.addr, align 4, !dbg !9120
  call void %46(i8* %47, i8* %48, i8* %49, i32 %50), !dbg !9115
  br label %if.end, !dbg !9115

if.end:                                           ; preds = %if.then, %av_clip_c.exit69
  %51 = load i32, i32* %y, align 4, !dbg !9121
  %add24 = add nsw i32 %51, 1, !dbg !9123
  %52 = load i32, i32* %height.addr, align 4, !dbg !9124
  %cmp25 = icmp ult i32 %add24, %52, !dbg !9125
  br i1 %cmp25, label %if.then26, label %if.end32, !dbg !9126

if.then26:                                        ; preds = %if.end
  %53 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %vertical_compose_h0, align 8, !dbg !9127
  %arrayidx27 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 0, !dbg !9129
  %54 = load i8*, i8** %arrayidx27, align 16, !dbg !9129
  %arrayidx28 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 2, !dbg !9130
  %55 = load i8*, i8** %arrayidx28, align 16, !dbg !9130
  %arrayidx29 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 3, !dbg !9131
  %56 = load i8*, i8** %arrayidx29, align 8, !dbg !9131
  %arrayidx30 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 4, !dbg !9132
  %57 = load i8*, i8** %arrayidx30, align 16, !dbg !9132
  %arrayidx31 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 6, !dbg !9133
  %58 = load i8*, i8** %arrayidx31, align 16, !dbg !9133
  %59 = load i32, i32* %width.addr, align 4, !dbg !9134
  call void %53(i8* %54, i8* %55, i8* %56, i8* %57, i8* %58, i32 %59), !dbg !9127
  br label %if.end32, !dbg !9127

if.end32:                                         ; preds = %if.then26, %if.end
  %60 = load i32, i32* %y, align 4, !dbg !9135
  %sub33 = sub nsw i32 %60, 1, !dbg !9137
  %61 = load i32, i32* %height.addr, align 4, !dbg !9138
  %cmp34 = icmp ult i32 %sub33, %61, !dbg !9139
  br i1 %cmp34, label %if.then35, label %if.end37, !dbg !9140

if.then35:                                        ; preds = %if.end32
  %62 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !9141
  %horizontal_compose = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %62, i32 0, i32 13, !dbg !9143
  %63 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %horizontal_compose, align 8, !dbg !9143
  %arrayidx36 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 0, !dbg !9144
  %64 = load i8*, i8** %arrayidx36, align 16, !dbg !9144
  %65 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !9145
  %temp = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %65, i32 0, i32 1, !dbg !9146
  %66 = load i8*, i8** %temp, align 8, !dbg !9146
  %67 = load i32, i32* %width.addr, align 4, !dbg !9147
  call void %63(i8* %64, i8* %66, i32 %67), !dbg !9141
  br label %if.end37, !dbg !9141

if.end37:                                         ; preds = %if.then35, %if.end32
  %68 = load i32, i32* %y, align 4, !dbg !9148
  %add38 = add nsw i32 %68, 0, !dbg !9150
  %69 = load i32, i32* %height.addr, align 4, !dbg !9151
  %cmp39 = icmp ult i32 %add38, %69, !dbg !9152
  br i1 %cmp39, label %if.then40, label %if.end44, !dbg !9153

if.then40:                                        ; preds = %if.end37
  %70 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !9154
  %horizontal_compose41 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %70, i32 0, i32 13, !dbg !9156
  %71 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %horizontal_compose41, align 8, !dbg !9156
  %arrayidx42 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 1, !dbg !9157
  %72 = load i8*, i8** %arrayidx42, align 8, !dbg !9157
  %73 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !9158
  %temp43 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %73, i32 0, i32 1, !dbg !9159
  %74 = load i8*, i8** %temp43, align 8, !dbg !9159
  %75 = load i32, i32* %width.addr, align 4, !dbg !9160
  call void %71(i8* %72, i8* %74, i32 %75), !dbg !9154
  br label %if.end44, !dbg !9154

if.end44:                                         ; preds = %if.then40, %if.end37
  store i32 0, i32* %i, align 4, !dbg !9161
  br label %for.cond45, !dbg !9163

for.cond45:                                       ; preds = %for.inc54, %if.end44
  %76 = load i32, i32* %i, align 4, !dbg !9164
  %cmp46 = icmp slt i32 %76, 6, !dbg !9167
  br i1 %cmp46, label %for.body47, label %for.end56, !dbg !9168

for.body47:                                       ; preds = %for.cond45
  %77 = load i32, i32* %i, align 4, !dbg !9169
  %add48 = add nsw i32 %77, 2, !dbg !9170
  %idxprom49 = sext i32 %add48 to i64, !dbg !9171
  %arrayidx50 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 %idxprom49, !dbg !9171
  %78 = load i8*, i8** %arrayidx50, align 8, !dbg !9171
  %79 = load i32, i32* %i, align 4, !dbg !9172
  %idxprom51 = sext i32 %79 to i64, !dbg !9173
  %80 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !9173
  %b52 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %80, i32 0, i32 0, !dbg !9174
  %arrayidx53 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b52, i64 0, i64 %idxprom51, !dbg !9173
  store i8* %78, i8** %arrayidx53, align 8, !dbg !9175
  br label %for.inc54, !dbg !9173

for.inc54:                                        ; preds = %for.body47
  %81 = load i32, i32* %i, align 4, !dbg !9176
  %inc55 = add nsw i32 %81, 1, !dbg !9176
  store i32 %inc55, i32* %i, align 4, !dbg !9176
  br label %for.cond45, !dbg !9178, !llvm.loop !9179

for.end56:                                        ; preds = %for.cond45
  %82 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !9181
  %y57 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %82, i32 0, i32 1, !dbg !9182
  %83 = load i32, i32* %y57, align 8, !dbg !9183
  %add58 = add nsw i32 %83, 2, !dbg !9183
  store i32 %add58, i32* %y57, align 8, !dbg !9183
  ret void, !dbg !9184
}

; Function Attrs: nounwind uwtable
define internal void @vertical_compose53iL0_12bit(i8* %_b0, i8* %_b1, i8* %_b2, i32 %width) #0 !dbg !9185 {
entry:
  %_b0.addr = alloca i8*, align 8
  %_b1.addr = alloca i8*, align 8
  %_b2.addr = alloca i8*, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %b0 = alloca i32*, align 8
  %b1 = alloca i32*, align 8
  %b2 = alloca i32*, align 8
  store i8* %_b0, i8** %_b0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b0.addr, metadata !9186, metadata !87), !dbg !9187
  store i8* %_b1, i8** %_b1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b1.addr, metadata !9188, metadata !87), !dbg !9189
  store i8* %_b2, i8** %_b2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b2.addr, metadata !9190, metadata !87), !dbg !9191
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !9192, metadata !87), !dbg !9193
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9194, metadata !87), !dbg !9195
  call void @llvm.dbg.declare(metadata i32** %b0, metadata !9196, metadata !87), !dbg !9197
  %0 = load i8*, i8** %_b0.addr, align 8, !dbg !9198
  %1 = bitcast i8* %0 to i32*, !dbg !9199
  store i32* %1, i32** %b0, align 8, !dbg !9197
  call void @llvm.dbg.declare(metadata i32** %b1, metadata !9200, metadata !87), !dbg !9201
  %2 = load i8*, i8** %_b1.addr, align 8, !dbg !9202
  %3 = bitcast i8* %2 to i32*, !dbg !9203
  store i32* %3, i32** %b1, align 8, !dbg !9201
  call void @llvm.dbg.declare(metadata i32** %b2, metadata !9204, metadata !87), !dbg !9205
  %4 = load i8*, i8** %_b2.addr, align 8, !dbg !9206
  %5 = bitcast i8* %4 to i32*, !dbg !9207
  store i32* %5, i32** %b2, align 8, !dbg !9205
  store i32 0, i32* %i, align 4, !dbg !9208
  br label %for.cond, !dbg !9210

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !dbg !9211
  %7 = load i32, i32* %width.addr, align 4, !dbg !9214
  %cmp = icmp slt i32 %6, %7, !dbg !9215
  br i1 %cmp, label %for.body, label %for.end, !dbg !9216

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %i, align 4, !dbg !9217
  %idxprom = sext i32 %8 to i64, !dbg !9218
  %9 = load i32*, i32** %b0, align 8, !dbg !9218
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom, !dbg !9218
  %10 = load i32, i32* %arrayidx, align 4, !dbg !9218
  %11 = load i32, i32* %i, align 4, !dbg !9219
  %idxprom1 = sext i32 %11 to i64, !dbg !9220
  %12 = load i32*, i32** %b2, align 8, !dbg !9220
  %arrayidx2 = getelementptr inbounds i32, i32* %12, i64 %idxprom1, !dbg !9220
  %13 = load i32, i32* %arrayidx2, align 4, !dbg !9220
  %add = add i32 %10, %13, !dbg !9221
  %add3 = add i32 %add, 2, !dbg !9222
  %shr = ashr i32 %add3, 2, !dbg !9223
  %14 = load i32, i32* %i, align 4, !dbg !9224
  %idxprom4 = sext i32 %14 to i64, !dbg !9225
  %15 = load i32*, i32** %b1, align 8, !dbg !9225
  %arrayidx5 = getelementptr inbounds i32, i32* %15, i64 %idxprom4, !dbg !9225
  %16 = load i32, i32* %arrayidx5, align 4, !dbg !9226
  %sub = sub i32 %16, %shr, !dbg !9226
  store i32 %sub, i32* %arrayidx5, align 4, !dbg !9226
  br label %for.inc, !dbg !9225

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !9227
  %inc = add nsw i32 %17, 1, !dbg !9227
  store i32 %inc, i32* %i, align 4, !dbg !9227
  br label %for.cond, !dbg !9229, !llvm.loop !9230

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9232
}

; Function Attrs: nounwind uwtable
define internal void @vertical_compose_dd97iH0_12bit(i8* %_b0, i8* %_b1, i8* %_b2, i8* %_b3, i8* %_b4, i32 %width) #0 !dbg !9233 {
entry:
  %_b0.addr = alloca i8*, align 8
  %_b1.addr = alloca i8*, align 8
  %_b2.addr = alloca i8*, align 8
  %_b3.addr = alloca i8*, align 8
  %_b4.addr = alloca i8*, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %b0 = alloca i32*, align 8
  %b1 = alloca i32*, align 8
  %b2 = alloca i32*, align 8
  %b3 = alloca i32*, align 8
  %b4 = alloca i32*, align 8
  store i8* %_b0, i8** %_b0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b0.addr, metadata !9234, metadata !87), !dbg !9235
  store i8* %_b1, i8** %_b1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b1.addr, metadata !9236, metadata !87), !dbg !9237
  store i8* %_b2, i8** %_b2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b2.addr, metadata !9238, metadata !87), !dbg !9239
  store i8* %_b3, i8** %_b3.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b3.addr, metadata !9240, metadata !87), !dbg !9241
  store i8* %_b4, i8** %_b4.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b4.addr, metadata !9242, metadata !87), !dbg !9243
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !9244, metadata !87), !dbg !9245
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9246, metadata !87), !dbg !9247
  call void @llvm.dbg.declare(metadata i32** %b0, metadata !9248, metadata !87), !dbg !9249
  %0 = load i8*, i8** %_b0.addr, align 8, !dbg !9250
  %1 = bitcast i8* %0 to i32*, !dbg !9251
  store i32* %1, i32** %b0, align 8, !dbg !9249
  call void @llvm.dbg.declare(metadata i32** %b1, metadata !9252, metadata !87), !dbg !9253
  %2 = load i8*, i8** %_b1.addr, align 8, !dbg !9254
  %3 = bitcast i8* %2 to i32*, !dbg !9255
  store i32* %3, i32** %b1, align 8, !dbg !9253
  call void @llvm.dbg.declare(metadata i32** %b2, metadata !9256, metadata !87), !dbg !9257
  %4 = load i8*, i8** %_b2.addr, align 8, !dbg !9258
  %5 = bitcast i8* %4 to i32*, !dbg !9259
  store i32* %5, i32** %b2, align 8, !dbg !9257
  call void @llvm.dbg.declare(metadata i32** %b3, metadata !9260, metadata !87), !dbg !9261
  %6 = load i8*, i8** %_b3.addr, align 8, !dbg !9262
  %7 = bitcast i8* %6 to i32*, !dbg !9263
  store i32* %7, i32** %b3, align 8, !dbg !9261
  call void @llvm.dbg.declare(metadata i32** %b4, metadata !9264, metadata !87), !dbg !9265
  %8 = load i8*, i8** %_b4.addr, align 8, !dbg !9266
  %9 = bitcast i8* %8 to i32*, !dbg !9267
  store i32* %9, i32** %b4, align 8, !dbg !9265
  store i32 0, i32* %i, align 4, !dbg !9268
  br label %for.cond, !dbg !9270

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load i32, i32* %i, align 4, !dbg !9271
  %11 = load i32, i32* %width.addr, align 4, !dbg !9274
  %cmp = icmp slt i32 %10, %11, !dbg !9275
  br i1 %cmp, label %for.body, label %for.end, !dbg !9276

for.body:                                         ; preds = %for.cond
  %12 = load i32, i32* %i, align 4, !dbg !9277
  %idxprom = sext i32 %12 to i64, !dbg !9279
  %13 = load i32*, i32** %b2, align 8, !dbg !9279
  %arrayidx = getelementptr inbounds i32, i32* %13, i64 %idxprom, !dbg !9279
  %14 = load i32, i32* %arrayidx, align 4, !dbg !9279
  %15 = load i32, i32* %i, align 4, !dbg !9280
  %idxprom1 = sext i32 %15 to i64, !dbg !9281
  %16 = load i32*, i32** %b1, align 8, !dbg !9281
  %arrayidx2 = getelementptr inbounds i32, i32* %16, i64 %idxprom1, !dbg !9281
  %17 = load i32, i32* %arrayidx2, align 4, !dbg !9281
  %mul = mul i32 9, %17, !dbg !9282
  %18 = load i32, i32* %i, align 4, !dbg !9283
  %idxprom3 = sext i32 %18 to i64, !dbg !9284
  %19 = load i32*, i32** %b3, align 8, !dbg !9284
  %arrayidx4 = getelementptr inbounds i32, i32* %19, i64 %idxprom3, !dbg !9284
  %20 = load i32, i32* %arrayidx4, align 4, !dbg !9284
  %mul5 = mul i32 9, %20, !dbg !9285
  %add = add i32 %mul, %mul5, !dbg !9286
  %21 = load i32, i32* %i, align 4, !dbg !9287
  %idxprom6 = sext i32 %21 to i64, !dbg !9288
  %22 = load i32*, i32** %b4, align 8, !dbg !9288
  %arrayidx7 = getelementptr inbounds i32, i32* %22, i64 %idxprom6, !dbg !9288
  %23 = load i32, i32* %arrayidx7, align 4, !dbg !9288
  %sub = sub i32 %add, %23, !dbg !9289
  %24 = load i32, i32* %i, align 4, !dbg !9290
  %idxprom8 = sext i32 %24 to i64, !dbg !9291
  %25 = load i32*, i32** %b0, align 8, !dbg !9291
  %arrayidx9 = getelementptr inbounds i32, i32* %25, i64 %idxprom8, !dbg !9291
  %26 = load i32, i32* %arrayidx9, align 4, !dbg !9291
  %sub10 = sub i32 %sub, %26, !dbg !9292
  %add11 = add i32 %sub10, 8, !dbg !9293
  %shr = ashr i32 %add11, 4, !dbg !9294
  %add12 = add i32 %14, %shr, !dbg !9295
  %27 = load i32, i32* %i, align 4, !dbg !9296
  %idxprom13 = sext i32 %27 to i64, !dbg !9297
  %28 = load i32*, i32** %b2, align 8, !dbg !9297
  %arrayidx14 = getelementptr inbounds i32, i32* %28, i64 %idxprom13, !dbg !9297
  store i32 %add12, i32* %arrayidx14, align 4, !dbg !9298
  br label %for.inc, !dbg !9299

for.inc:                                          ; preds = %for.body
  %29 = load i32, i32* %i, align 4, !dbg !9300
  %inc = add nsw i32 %29, 1, !dbg !9300
  store i32 %inc, i32* %i, align 4, !dbg !9300
  br label %for.cond, !dbg !9302, !llvm.loop !9303

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9305
}

; Function Attrs: nounwind uwtable
define internal void @horizontal_compose_dd97i_12bit(i8* %_b, i8* %_tmp, i32 %w) #0 !dbg !9306 {
entry:
  %_b.addr = alloca i8*, align 8
  %_tmp.addr = alloca i8*, align 8
  %w.addr = alloca i32, align 4
  %x = alloca i32, align 4
  %w2 = alloca i32, align 4
  %b = alloca i32*, align 8
  %tmp = alloca i32*, align 8
  store i8* %_b, i8** %_b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b.addr, metadata !9307, metadata !87), !dbg !9308
  store i8* %_tmp, i8** %_tmp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_tmp.addr, metadata !9309, metadata !87), !dbg !9310
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !9311, metadata !87), !dbg !9312
  call void @llvm.dbg.declare(metadata i32* %x, metadata !9313, metadata !87), !dbg !9314
  call void @llvm.dbg.declare(metadata i32* %w2, metadata !9315, metadata !87), !dbg !9316
  %0 = load i32, i32* %w.addr, align 4, !dbg !9317
  %shr = ashr i32 %0, 1, !dbg !9318
  store i32 %shr, i32* %w2, align 4, !dbg !9316
  call void @llvm.dbg.declare(metadata i32** %b, metadata !9319, metadata !87), !dbg !9320
  %1 = load i8*, i8** %_b.addr, align 8, !dbg !9321
  %2 = bitcast i8* %1 to i32*, !dbg !9322
  store i32* %2, i32** %b, align 8, !dbg !9320
  call void @llvm.dbg.declare(metadata i32** %tmp, metadata !9323, metadata !87), !dbg !9324
  %3 = load i8*, i8** %_tmp.addr, align 8, !dbg !9325
  %4 = bitcast i8* %3 to i32*, !dbg !9326
  store i32* %4, i32** %tmp, align 8, !dbg !9324
  %5 = load i32*, i32** %b, align 8, !dbg !9327
  %arrayidx = getelementptr inbounds i32, i32* %5, i64 0, !dbg !9327
  %6 = load i32, i32* %arrayidx, align 4, !dbg !9327
  %7 = load i32, i32* %w2, align 4, !dbg !9328
  %idxprom = sext i32 %7 to i64, !dbg !9329
  %8 = load i32*, i32** %b, align 8, !dbg !9329
  %arrayidx1 = getelementptr inbounds i32, i32* %8, i64 %idxprom, !dbg !9329
  %9 = load i32, i32* %arrayidx1, align 4, !dbg !9329
  %10 = load i32, i32* %w2, align 4, !dbg !9330
  %idxprom2 = sext i32 %10 to i64, !dbg !9331
  %11 = load i32*, i32** %b, align 8, !dbg !9331
  %arrayidx3 = getelementptr inbounds i32, i32* %11, i64 %idxprom2, !dbg !9331
  %12 = load i32, i32* %arrayidx3, align 4, !dbg !9331
  %add = add i32 %9, %12, !dbg !9332
  %add4 = add i32 %add, 2, !dbg !9333
  %shr5 = ashr i32 %add4, 2, !dbg !9334
  %sub = sub i32 %6, %shr5, !dbg !9335
  %13 = load i32*, i32** %tmp, align 8, !dbg !9336
  %arrayidx6 = getelementptr inbounds i32, i32* %13, i64 0, !dbg !9336
  store i32 %sub, i32* %arrayidx6, align 4, !dbg !9337
  store i32 1, i32* %x, align 4, !dbg !9338
  br label %for.cond, !dbg !9340

for.cond:                                         ; preds = %for.inc, %entry
  %14 = load i32, i32* %x, align 4, !dbg !9341
  %15 = load i32, i32* %w2, align 4, !dbg !9344
  %cmp = icmp slt i32 %14, %15, !dbg !9345
  br i1 %cmp, label %for.body, label %for.end, !dbg !9346

for.body:                                         ; preds = %for.cond
  %16 = load i32, i32* %x, align 4, !dbg !9347
  %idxprom7 = sext i32 %16 to i64, !dbg !9348
  %17 = load i32*, i32** %b, align 8, !dbg !9348
  %arrayidx8 = getelementptr inbounds i32, i32* %17, i64 %idxprom7, !dbg !9348
  %18 = load i32, i32* %arrayidx8, align 4, !dbg !9348
  %19 = load i32, i32* %x, align 4, !dbg !9349
  %20 = load i32, i32* %w2, align 4, !dbg !9350
  %add9 = add nsw i32 %19, %20, !dbg !9351
  %sub10 = sub nsw i32 %add9, 1, !dbg !9352
  %idxprom11 = sext i32 %sub10 to i64, !dbg !9353
  %21 = load i32*, i32** %b, align 8, !dbg !9353
  %arrayidx12 = getelementptr inbounds i32, i32* %21, i64 %idxprom11, !dbg !9353
  %22 = load i32, i32* %arrayidx12, align 4, !dbg !9353
  %23 = load i32, i32* %x, align 4, !dbg !9354
  %24 = load i32, i32* %w2, align 4, !dbg !9355
  %add13 = add nsw i32 %23, %24, !dbg !9356
  %idxprom14 = sext i32 %add13 to i64, !dbg !9357
  %25 = load i32*, i32** %b, align 8, !dbg !9357
  %arrayidx15 = getelementptr inbounds i32, i32* %25, i64 %idxprom14, !dbg !9357
  %26 = load i32, i32* %arrayidx15, align 4, !dbg !9357
  %add16 = add i32 %22, %26, !dbg !9358
  %add17 = add i32 %add16, 2, !dbg !9359
  %shr18 = ashr i32 %add17, 2, !dbg !9360
  %sub19 = sub i32 %18, %shr18, !dbg !9361
  %27 = load i32, i32* %x, align 4, !dbg !9362
  %idxprom20 = sext i32 %27 to i64, !dbg !9363
  %28 = load i32*, i32** %tmp, align 8, !dbg !9363
  %arrayidx21 = getelementptr inbounds i32, i32* %28, i64 %idxprom20, !dbg !9363
  store i32 %sub19, i32* %arrayidx21, align 4, !dbg !9364
  br label %for.inc, !dbg !9363

for.inc:                                          ; preds = %for.body
  %29 = load i32, i32* %x, align 4, !dbg !9365
  %inc = add nsw i32 %29, 1, !dbg !9365
  store i32 %inc, i32* %x, align 4, !dbg !9365
  br label %for.cond, !dbg !9367, !llvm.loop !9368

for.end:                                          ; preds = %for.cond
  %30 = load i32*, i32** %tmp, align 8, !dbg !9370
  %arrayidx22 = getelementptr inbounds i32, i32* %30, i64 0, !dbg !9370
  %31 = load i32, i32* %arrayidx22, align 4, !dbg !9370
  %32 = load i32*, i32** %tmp, align 8, !dbg !9371
  %arrayidx23 = getelementptr inbounds i32, i32* %32, i64 -1, !dbg !9371
  store i32 %31, i32* %arrayidx23, align 4, !dbg !9372
  %33 = load i32, i32* %w2, align 4, !dbg !9373
  %sub24 = sub nsw i32 %33, 1, !dbg !9374
  %idxprom25 = sext i32 %sub24 to i64, !dbg !9375
  %34 = load i32*, i32** %tmp, align 8, !dbg !9375
  %arrayidx26 = getelementptr inbounds i32, i32* %34, i64 %idxprom25, !dbg !9375
  %35 = load i32, i32* %arrayidx26, align 4, !dbg !9375
  %36 = load i32, i32* %w2, align 4, !dbg !9376
  %idxprom27 = sext i32 %36 to i64, !dbg !9377
  %37 = load i32*, i32** %tmp, align 8, !dbg !9377
  %arrayidx28 = getelementptr inbounds i32, i32* %37, i64 %idxprom27, !dbg !9377
  store i32 %35, i32* %arrayidx28, align 4, !dbg !9378
  %38 = load i32, i32* %w2, align 4, !dbg !9379
  %add29 = add nsw i32 %38, 1, !dbg !9380
  %idxprom30 = sext i32 %add29 to i64, !dbg !9381
  %39 = load i32*, i32** %tmp, align 8, !dbg !9381
  %arrayidx31 = getelementptr inbounds i32, i32* %39, i64 %idxprom30, !dbg !9381
  store i32 %35, i32* %arrayidx31, align 4, !dbg !9382
  store i32 0, i32* %x, align 4, !dbg !9383
  br label %for.cond32, !dbg !9385

for.cond32:                                       ; preds = %for.inc69, %for.end
  %40 = load i32, i32* %x, align 4, !dbg !9386
  %41 = load i32, i32* %w2, align 4, !dbg !9389
  %cmp33 = icmp slt i32 %40, %41, !dbg !9390
  br i1 %cmp33, label %for.body34, label %for.end71, !dbg !9391

for.body34:                                       ; preds = %for.cond32
  %42 = load i32, i32* %x, align 4, !dbg !9392
  %idxprom35 = sext i32 %42 to i64, !dbg !9394
  %43 = load i32*, i32** %tmp, align 8, !dbg !9394
  %arrayidx36 = getelementptr inbounds i32, i32* %43, i64 %idxprom35, !dbg !9394
  %44 = load i32, i32* %arrayidx36, align 4, !dbg !9394
  %add37 = add i32 %44, 1, !dbg !9395
  %shr38 = ashr i32 %add37, 1, !dbg !9396
  %45 = load i32, i32* %x, align 4, !dbg !9397
  %mul = mul nsw i32 2, %45, !dbg !9398
  %idxprom39 = sext i32 %mul to i64, !dbg !9399
  %46 = load i32*, i32** %b, align 8, !dbg !9399
  %arrayidx40 = getelementptr inbounds i32, i32* %46, i64 %idxprom39, !dbg !9399
  store i32 %shr38, i32* %arrayidx40, align 4, !dbg !9400
  %47 = load i32, i32* %x, align 4, !dbg !9401
  %48 = load i32, i32* %w2, align 4, !dbg !9402
  %add41 = add nsw i32 %47, %48, !dbg !9403
  %idxprom42 = sext i32 %add41 to i64, !dbg !9404
  %49 = load i32*, i32** %b, align 8, !dbg !9404
  %arrayidx43 = getelementptr inbounds i32, i32* %49, i64 %idxprom42, !dbg !9404
  %50 = load i32, i32* %arrayidx43, align 4, !dbg !9404
  %51 = load i32, i32* %x, align 4, !dbg !9405
  %idxprom44 = sext i32 %51 to i64, !dbg !9406
  %52 = load i32*, i32** %tmp, align 8, !dbg !9406
  %arrayidx45 = getelementptr inbounds i32, i32* %52, i64 %idxprom44, !dbg !9406
  %53 = load i32, i32* %arrayidx45, align 4, !dbg !9406
  %mul46 = mul i32 9, %53, !dbg !9407
  %54 = load i32, i32* %x, align 4, !dbg !9408
  %add47 = add nsw i32 %54, 1, !dbg !9409
  %idxprom48 = sext i32 %add47 to i64, !dbg !9410
  %55 = load i32*, i32** %tmp, align 8, !dbg !9410
  %arrayidx49 = getelementptr inbounds i32, i32* %55, i64 %idxprom48, !dbg !9410
  %56 = load i32, i32* %arrayidx49, align 4, !dbg !9410
  %mul50 = mul i32 9, %56, !dbg !9411
  %add51 = add i32 %mul46, %mul50, !dbg !9412
  %57 = load i32, i32* %x, align 4, !dbg !9413
  %add52 = add nsw i32 %57, 2, !dbg !9414
  %idxprom53 = sext i32 %add52 to i64, !dbg !9415
  %58 = load i32*, i32** %tmp, align 8, !dbg !9415
  %arrayidx54 = getelementptr inbounds i32, i32* %58, i64 %idxprom53, !dbg !9415
  %59 = load i32, i32* %arrayidx54, align 4, !dbg !9415
  %sub55 = sub i32 %add51, %59, !dbg !9416
  %60 = load i32, i32* %x, align 4, !dbg !9417
  %sub56 = sub nsw i32 %60, 1, !dbg !9418
  %idxprom57 = sext i32 %sub56 to i64, !dbg !9419
  %61 = load i32*, i32** %tmp, align 8, !dbg !9419
  %arrayidx58 = getelementptr inbounds i32, i32* %61, i64 %idxprom57, !dbg !9419
  %62 = load i32, i32* %arrayidx58, align 4, !dbg !9419
  %sub59 = sub i32 %sub55, %62, !dbg !9420
  %add60 = add i32 %sub59, 8, !dbg !9421
  %shr61 = ashr i32 %add60, 4, !dbg !9422
  %add62 = add i32 %50, %shr61, !dbg !9423
  %add63 = add i32 %add62, 1, !dbg !9424
  %shr64 = ashr i32 %add63, 1, !dbg !9425
  %63 = load i32, i32* %x, align 4, !dbg !9426
  %mul65 = mul nsw i32 2, %63, !dbg !9427
  %add66 = add nsw i32 %mul65, 1, !dbg !9428
  %idxprom67 = sext i32 %add66 to i64, !dbg !9429
  %64 = load i32*, i32** %b, align 8, !dbg !9429
  %arrayidx68 = getelementptr inbounds i32, i32* %64, i64 %idxprom67, !dbg !9429
  store i32 %shr64, i32* %arrayidx68, align 4, !dbg !9430
  br label %for.inc69, !dbg !9431

for.inc69:                                        ; preds = %for.body34
  %65 = load i32, i32* %x, align 4, !dbg !9432
  %inc70 = add nsw i32 %65, 1, !dbg !9432
  store i32 %inc70, i32* %x, align 4, !dbg !9432
  br label %for.cond32, !dbg !9434, !llvm.loop !9435

for.end71:                                        ; preds = %for.cond32
  ret void, !dbg !9437
}

; Function Attrs: nounwind uwtable
define internal void @spatial_compose_dirac53i_dy_12bit(%struct.DWTContext* %d, i32 %level, i32 %width, i32 %height, i32 %stride) #0 !dbg !9438 {
entry:
  %retval.i51 = alloca i32, align 4
  %x.addr.i52 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i52, metadata !1102, metadata !87), !dbg !9439
  %w.addr.i53 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i53, metadata !1109, metadata !87), !dbg !9441
  %retval.i = alloca i32, align 4
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !1102, metadata !87), !dbg !9442
  %w.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i, metadata !1109, metadata !87), !dbg !9444
  %d.addr = alloca %struct.DWTContext*, align 8
  %level.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  %vertical_compose_l0 = alloca void (i8*, i8*, i8*, i32)*, align 8
  %vertical_compose_h0 = alloca void (i8*, i8*, i8*, i32)*, align 8
  %cs = alloca %struct.DWTCompose*, align 8
  %y = alloca i32, align 4
  %b = alloca [4 x i8*], align 16
  store %struct.DWTContext* %d, %struct.DWTContext** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTContext** %d.addr, metadata !9445, metadata !87), !dbg !9446
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !9447, metadata !87), !dbg !9448
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !9449, metadata !87), !dbg !9450
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !9451, metadata !87), !dbg !9452
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !9453, metadata !87), !dbg !9454
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i32)** %vertical_compose_l0, metadata !9455, metadata !87), !dbg !9456
  %0 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !9457
  %vertical_compose_l01 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %0, i32 0, i32 8, !dbg !9458
  %1 = load void ()*, void ()** %vertical_compose_l01, align 8, !dbg !9458
  %2 = bitcast void ()* %1 to i8*, !dbg !9459
  %3 = bitcast i8* %2 to void (i8*, i8*, i8*, i32)*, !dbg !9459
  store void (i8*, i8*, i8*, i32)* %3, void (i8*, i8*, i8*, i32)** %vertical_compose_l0, align 8, !dbg !9456
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i32)** %vertical_compose_h0, metadata !9460, metadata !87), !dbg !9461
  %4 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !9462
  %vertical_compose_h02 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %4, i32 0, i32 9, !dbg !9463
  %5 = load void ()*, void ()** %vertical_compose_h02, align 8, !dbg !9463
  %6 = bitcast void ()* %5 to i8*, !dbg !9464
  %7 = bitcast i8* %6 to void (i8*, i8*, i8*, i32)*, !dbg !9464
  store void (i8*, i8*, i8*, i32)* %7, void (i8*, i8*, i8*, i32)** %vertical_compose_h0, align 8, !dbg !9461
  call void @llvm.dbg.declare(metadata %struct.DWTCompose** %cs, metadata !9465, metadata !87), !dbg !9466
  %8 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !9467
  %cs3 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %8, i32 0, i32 14, !dbg !9468
  %arraydecay = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs3, i32 0, i32 0, !dbg !9467
  %9 = load i32, i32* %level.addr, align 4, !dbg !9469
  %idx.ext = sext i32 %9 to i64, !dbg !9470
  %add.ptr = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arraydecay, i64 %idx.ext, !dbg !9470
  store %struct.DWTCompose* %add.ptr, %struct.DWTCompose** %cs, align 8, !dbg !9466
  call void @llvm.dbg.declare(metadata i32* %y, metadata !9471, metadata !87), !dbg !9472
  %10 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !9473
  %y4 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %10, i32 0, i32 1, !dbg !9474
  %11 = load i32, i32* %y4, align 8, !dbg !9474
  store i32 %11, i32* %y, align 4, !dbg !9472
  call void @llvm.dbg.declare(metadata [4 x i8*]* %b, metadata !9475, metadata !87), !dbg !9476
  %arrayinit.begin = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 0, !dbg !9477
  %12 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !9478
  %b5 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %12, i32 0, i32 0, !dbg !9479
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %b5, i64 0, i64 0, !dbg !9478
  %13 = load i8*, i8** %arrayidx, align 8, !dbg !9478
  store i8* %13, i8** %arrayinit.begin, align 8, !dbg !9477
  %arrayinit.element = getelementptr inbounds i8*, i8** %arrayinit.begin, i64 1, !dbg !9477
  %14 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !9480
  %b6 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %14, i32 0, i32 0, !dbg !9481
  %arrayidx7 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b6, i64 0, i64 1, !dbg !9480
  %15 = load i8*, i8** %arrayidx7, align 8, !dbg !9480
  store i8* %15, i8** %arrayinit.element, align 8, !dbg !9477
  %arrayinit.start = getelementptr inbounds i8*, i8** %arrayinit.element, i64 1, !dbg !9477
  %arrayinit.end = getelementptr inbounds i8*, i8** %arrayinit.begin, i64 4, !dbg !9477
  br label %arrayinit.body, !dbg !9477

arrayinit.body:                                   ; preds = %arrayinit.body, %entry
  %arrayinit.cur = phi i8** [ %arrayinit.start, %entry ], [ %arrayinit.next, %arrayinit.body ], !dbg !9482
  store i8* null, i8** %arrayinit.cur, align 8, !dbg !9482
  %arrayinit.next = getelementptr inbounds i8*, i8** %arrayinit.cur, i64 1, !dbg !9482
  %arrayinit.done = icmp eq i8** %arrayinit.next, %arrayinit.end, !dbg !9482
  br i1 %arrayinit.done, label %arrayinit.end8, label %arrayinit.body, !dbg !9482

arrayinit.end8:                                   ; preds = %arrayinit.body
  %16 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !9484
  %buffer = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %16, i32 0, i32 0, !dbg !9485
  %17 = load i8*, i8** %buffer, align 8, !dbg !9485
  %18 = load i32, i32* %y, align 4, !dbg !9486
  %add = add nsw i32 %18, 1, !dbg !9487
  %19 = load i32, i32* %height.addr, align 4, !dbg !9488
  %sub = sub nsw i32 %19, 1, !dbg !9489
  store i32 %add, i32* %x.addr.i, align 4, !dbg !9490
  store i32 %sub, i32* %w.addr.i, align 4, !dbg !9490
  %20 = load i32, i32* %w.addr.i, align 4, !dbg !9491
  %tobool.i = icmp ne i32 %20, 0, !dbg !9491
  br i1 %tobool.i, label %if.end.i, label %if.then.i, !dbg !9492

if.then.i:                                        ; preds = %arrayinit.end8
  store i32 0, i32* %retval.i, align 4, !dbg !9493
  br label %avpriv_mirror.exit, !dbg !9493

if.end.i:                                         ; preds = %arrayinit.end8
  br label %while.cond.i, !dbg !9494

while.cond.i:                                     ; preds = %if.end3.i, %if.end.i
  %21 = load i32, i32* %x.addr.i, align 4, !dbg !9495
  %22 = load i32, i32* %w.addr.i, align 4, !dbg !9496
  %cmp.i = icmp ugt i32 %21, %22, !dbg !9497
  br i1 %cmp.i, label %while.body.i, label %while.end.i, !dbg !9498

while.body.i:                                     ; preds = %while.cond.i
  %23 = load i32, i32* %x.addr.i, align 4, !dbg !9499
  %sub.i = sub nsw i32 0, %23, !dbg !9500
  store i32 %sub.i, i32* %x.addr.i, align 4, !dbg !9501
  %24 = load i32, i32* %x.addr.i, align 4, !dbg !9502
  %cmp1.i = icmp slt i32 %24, 0, !dbg !9503
  br i1 %cmp1.i, label %if.then2.i, label %if.end3.i, !dbg !9504

if.then2.i:                                       ; preds = %while.body.i
  %25 = load i32, i32* %w.addr.i, align 4, !dbg !9505
  %mul.i = mul nsw i32 2, %25, !dbg !9506
  %26 = load i32, i32* %x.addr.i, align 4, !dbg !9507
  %add.i = add nsw i32 %26, %mul.i, !dbg !9507
  store i32 %add.i, i32* %x.addr.i, align 4, !dbg !9507
  br label %if.end3.i, !dbg !9508

if.end3.i:                                        ; preds = %if.then2.i, %while.body.i
  br label %while.cond.i, !dbg !9509, !llvm.loop !1150

while.end.i:                                      ; preds = %while.cond.i
  %27 = load i32, i32* %x.addr.i, align 4, !dbg !9510
  store i32 %27, i32* %retval.i, align 4, !dbg !9511
  br label %avpriv_mirror.exit, !dbg !9511

avpriv_mirror.exit:                               ; preds = %if.then.i, %while.end.i
  %28 = load i32, i32* %retval.i, align 4, !dbg !9512
  %29 = load i32, i32* %stride.addr, align 4, !dbg !9513
  %mul = mul nsw i32 %28, %29, !dbg !9514
  %idx.ext9 = sext i32 %mul to i64, !dbg !9515
  %add.ptr10 = getelementptr inbounds i8, i8* %17, i64 %idx.ext9, !dbg !9515
  %arrayidx11 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 2, !dbg !9516
  store i8* %add.ptr10, i8** %arrayidx11, align 16, !dbg !9517
  %30 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !9518
  %buffer12 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %30, i32 0, i32 0, !dbg !9519
  %31 = load i8*, i8** %buffer12, align 8, !dbg !9519
  %32 = load i32, i32* %y, align 4, !dbg !9520
  %add13 = add nsw i32 %32, 2, !dbg !9521
  %33 = load i32, i32* %height.addr, align 4, !dbg !9522
  %sub14 = sub nsw i32 %33, 1, !dbg !9523
  store i32 %add13, i32* %x.addr.i52, align 4, !dbg !9524
  store i32 %sub14, i32* %w.addr.i53, align 4, !dbg !9524
  %34 = load i32, i32* %w.addr.i53, align 4, !dbg !9525
  %tobool.i54 = icmp ne i32 %34, 0, !dbg !9525
  br i1 %tobool.i54, label %if.end.i56, label %if.then.i55, !dbg !9526

if.then.i55:                                      ; preds = %avpriv_mirror.exit
  store i32 0, i32* %retval.i51, align 4, !dbg !9527
  br label %avpriv_mirror.exit67, !dbg !9527

if.end.i56:                                       ; preds = %avpriv_mirror.exit
  br label %while.cond.i58, !dbg !9528

while.cond.i58:                                   ; preds = %if.end3.i65, %if.end.i56
  %35 = load i32, i32* %x.addr.i52, align 4, !dbg !9529
  %36 = load i32, i32* %w.addr.i53, align 4, !dbg !9530
  %cmp.i57 = icmp ugt i32 %35, %36, !dbg !9531
  br i1 %cmp.i57, label %while.body.i61, label %while.end.i66, !dbg !9532

while.body.i61:                                   ; preds = %while.cond.i58
  %37 = load i32, i32* %x.addr.i52, align 4, !dbg !9533
  %sub.i59 = sub nsw i32 0, %37, !dbg !9534
  store i32 %sub.i59, i32* %x.addr.i52, align 4, !dbg !9535
  %38 = load i32, i32* %x.addr.i52, align 4, !dbg !9536
  %cmp1.i60 = icmp slt i32 %38, 0, !dbg !9537
  br i1 %cmp1.i60, label %if.then2.i64, label %if.end3.i65, !dbg !9538

if.then2.i64:                                     ; preds = %while.body.i61
  %39 = load i32, i32* %w.addr.i53, align 4, !dbg !9539
  %mul.i62 = mul nsw i32 2, %39, !dbg !9540
  %40 = load i32, i32* %x.addr.i52, align 4, !dbg !9541
  %add.i63 = add nsw i32 %40, %mul.i62, !dbg !9541
  store i32 %add.i63, i32* %x.addr.i52, align 4, !dbg !9541
  br label %if.end3.i65, !dbg !9542

if.end3.i65:                                      ; preds = %if.then2.i64, %while.body.i61
  br label %while.cond.i58, !dbg !9543, !llvm.loop !1150

while.end.i66:                                    ; preds = %while.cond.i58
  %41 = load i32, i32* %x.addr.i52, align 4, !dbg !9544
  store i32 %41, i32* %retval.i51, align 4, !dbg !9545
  br label %avpriv_mirror.exit67, !dbg !9545

avpriv_mirror.exit67:                             ; preds = %if.then.i55, %while.end.i66
  %42 = load i32, i32* %retval.i51, align 4, !dbg !9546
  %43 = load i32, i32* %stride.addr, align 4, !dbg !9547
  %mul16 = mul nsw i32 %42, %43, !dbg !9548
  %idx.ext17 = sext i32 %mul16 to i64, !dbg !9549
  %add.ptr18 = getelementptr inbounds i8, i8* %31, i64 %idx.ext17, !dbg !9549
  %arrayidx19 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 3, !dbg !9550
  store i8* %add.ptr18, i8** %arrayidx19, align 8, !dbg !9551
  %44 = load i32, i32* %y, align 4, !dbg !9552
  %add20 = add nsw i32 %44, 1, !dbg !9554
  %45 = load i32, i32* %height.addr, align 4, !dbg !9555
  %cmp = icmp ult i32 %add20, %45, !dbg !9556
  br i1 %cmp, label %if.then, label %if.end, !dbg !9557

if.then:                                          ; preds = %avpriv_mirror.exit67
  %46 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %vertical_compose_l0, align 8, !dbg !9558
  %arrayidx21 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 1, !dbg !9560
  %47 = load i8*, i8** %arrayidx21, align 8, !dbg !9560
  %arrayidx22 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 2, !dbg !9561
  %48 = load i8*, i8** %arrayidx22, align 16, !dbg !9561
  %arrayidx23 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 3, !dbg !9562
  %49 = load i8*, i8** %arrayidx23, align 8, !dbg !9562
  %50 = load i32, i32* %width.addr, align 4, !dbg !9563
  call void %46(i8* %47, i8* %48, i8* %49, i32 %50), !dbg !9558
  br label %if.end, !dbg !9558

if.end:                                           ; preds = %if.then, %avpriv_mirror.exit67
  %51 = load i32, i32* %y, align 4, !dbg !9564
  %add24 = add nsw i32 %51, 0, !dbg !9566
  %52 = load i32, i32* %height.addr, align 4, !dbg !9567
  %cmp25 = icmp ult i32 %add24, %52, !dbg !9568
  br i1 %cmp25, label %if.then26, label %if.end30, !dbg !9569

if.then26:                                        ; preds = %if.end
  %53 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %vertical_compose_h0, align 8, !dbg !9570
  %arrayidx27 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 0, !dbg !9572
  %54 = load i8*, i8** %arrayidx27, align 16, !dbg !9572
  %arrayidx28 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 1, !dbg !9573
  %55 = load i8*, i8** %arrayidx28, align 8, !dbg !9573
  %arrayidx29 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 2, !dbg !9574
  %56 = load i8*, i8** %arrayidx29, align 16, !dbg !9574
  %57 = load i32, i32* %width.addr, align 4, !dbg !9575
  call void %53(i8* %54, i8* %55, i8* %56, i32 %57), !dbg !9570
  br label %if.end30, !dbg !9570

if.end30:                                         ; preds = %if.then26, %if.end
  %58 = load i32, i32* %y, align 4, !dbg !9576
  %sub31 = sub nsw i32 %58, 1, !dbg !9578
  %59 = load i32, i32* %height.addr, align 4, !dbg !9579
  %cmp32 = icmp ult i32 %sub31, %59, !dbg !9580
  br i1 %cmp32, label %if.then33, label %if.end35, !dbg !9581

if.then33:                                        ; preds = %if.end30
  %60 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !9582
  %horizontal_compose = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %60, i32 0, i32 13, !dbg !9584
  %61 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %horizontal_compose, align 8, !dbg !9584
  %arrayidx34 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 0, !dbg !9585
  %62 = load i8*, i8** %arrayidx34, align 16, !dbg !9585
  %63 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !9586
  %temp = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %63, i32 0, i32 1, !dbg !9587
  %64 = load i8*, i8** %temp, align 8, !dbg !9587
  %65 = load i32, i32* %width.addr, align 4, !dbg !9588
  call void %61(i8* %62, i8* %64, i32 %65), !dbg !9582
  br label %if.end35, !dbg !9582

if.end35:                                         ; preds = %if.then33, %if.end30
  %66 = load i32, i32* %y, align 4, !dbg !9589
  %add36 = add nsw i32 %66, 0, !dbg !9591
  %67 = load i32, i32* %height.addr, align 4, !dbg !9592
  %cmp37 = icmp ult i32 %add36, %67, !dbg !9593
  br i1 %cmp37, label %if.then38, label %if.end42, !dbg !9594

if.then38:                                        ; preds = %if.end35
  %68 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !9595
  %horizontal_compose39 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %68, i32 0, i32 13, !dbg !9597
  %69 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %horizontal_compose39, align 8, !dbg !9597
  %arrayidx40 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 1, !dbg !9598
  %70 = load i8*, i8** %arrayidx40, align 8, !dbg !9598
  %71 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !9599
  %temp41 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %71, i32 0, i32 1, !dbg !9600
  %72 = load i8*, i8** %temp41, align 8, !dbg !9600
  %73 = load i32, i32* %width.addr, align 4, !dbg !9601
  call void %69(i8* %70, i8* %72, i32 %73), !dbg !9595
  br label %if.end42, !dbg !9595

if.end42:                                         ; preds = %if.then38, %if.end35
  %arrayidx43 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 2, !dbg !9602
  %74 = load i8*, i8** %arrayidx43, align 16, !dbg !9602
  %75 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !9603
  %b44 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %75, i32 0, i32 0, !dbg !9604
  %arrayidx45 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b44, i64 0, i64 0, !dbg !9603
  store i8* %74, i8** %arrayidx45, align 8, !dbg !9605
  %arrayidx46 = getelementptr inbounds [4 x i8*], [4 x i8*]* %b, i64 0, i64 3, !dbg !9606
  %76 = load i8*, i8** %arrayidx46, align 8, !dbg !9606
  %77 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !9607
  %b47 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %77, i32 0, i32 0, !dbg !9608
  %arrayidx48 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b47, i64 0, i64 1, !dbg !9607
  store i8* %76, i8** %arrayidx48, align 8, !dbg !9609
  %78 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !9610
  %y49 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %78, i32 0, i32 1, !dbg !9611
  %79 = load i32, i32* %y49, align 8, !dbg !9612
  %add50 = add nsw i32 %79, 2, !dbg !9612
  store i32 %add50, i32* %y49, align 8, !dbg !9612
  ret void, !dbg !9613
}

; Function Attrs: nounwind uwtable
define internal void @vertical_compose_dirac53iH0_12bit(i8* %_b0, i8* %_b1, i8* %_b2, i32 %width) #0 !dbg !9614 {
entry:
  %_b0.addr = alloca i8*, align 8
  %_b1.addr = alloca i8*, align 8
  %_b2.addr = alloca i8*, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %b0 = alloca i32*, align 8
  %b1 = alloca i32*, align 8
  %b2 = alloca i32*, align 8
  store i8* %_b0, i8** %_b0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b0.addr, metadata !9615, metadata !87), !dbg !9616
  store i8* %_b1, i8** %_b1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b1.addr, metadata !9617, metadata !87), !dbg !9618
  store i8* %_b2, i8** %_b2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b2.addr, metadata !9619, metadata !87), !dbg !9620
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !9621, metadata !87), !dbg !9622
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9623, metadata !87), !dbg !9624
  call void @llvm.dbg.declare(metadata i32** %b0, metadata !9625, metadata !87), !dbg !9626
  %0 = load i8*, i8** %_b0.addr, align 8, !dbg !9627
  %1 = bitcast i8* %0 to i32*, !dbg !9628
  store i32* %1, i32** %b0, align 8, !dbg !9626
  call void @llvm.dbg.declare(metadata i32** %b1, metadata !9629, metadata !87), !dbg !9630
  %2 = load i8*, i8** %_b1.addr, align 8, !dbg !9631
  %3 = bitcast i8* %2 to i32*, !dbg !9632
  store i32* %3, i32** %b1, align 8, !dbg !9630
  call void @llvm.dbg.declare(metadata i32** %b2, metadata !9633, metadata !87), !dbg !9634
  %4 = load i8*, i8** %_b2.addr, align 8, !dbg !9635
  %5 = bitcast i8* %4 to i32*, !dbg !9636
  store i32* %5, i32** %b2, align 8, !dbg !9634
  store i32 0, i32* %i, align 4, !dbg !9637
  br label %for.cond, !dbg !9639

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !dbg !9640
  %7 = load i32, i32* %width.addr, align 4, !dbg !9643
  %cmp = icmp slt i32 %6, %7, !dbg !9644
  br i1 %cmp, label %for.body, label %for.end, !dbg !9645

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %i, align 4, !dbg !9646
  %idxprom = sext i32 %8 to i64, !dbg !9648
  %9 = load i32*, i32** %b1, align 8, !dbg !9648
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom, !dbg !9648
  %10 = load i32, i32* %arrayidx, align 4, !dbg !9648
  %11 = load i32, i32* %i, align 4, !dbg !9649
  %idxprom1 = sext i32 %11 to i64, !dbg !9650
  %12 = load i32*, i32** %b0, align 8, !dbg !9650
  %arrayidx2 = getelementptr inbounds i32, i32* %12, i64 %idxprom1, !dbg !9650
  %13 = load i32, i32* %arrayidx2, align 4, !dbg !9650
  %14 = load i32, i32* %i, align 4, !dbg !9651
  %idxprom3 = sext i32 %14 to i64, !dbg !9652
  %15 = load i32*, i32** %b2, align 8, !dbg !9652
  %arrayidx4 = getelementptr inbounds i32, i32* %15, i64 %idxprom3, !dbg !9652
  %16 = load i32, i32* %arrayidx4, align 4, !dbg !9652
  %add = add i32 %13, %16, !dbg !9653
  %add5 = add i32 %add, 1, !dbg !9654
  %shr = ashr i32 %add5, 1, !dbg !9655
  %add6 = add i32 %10, %shr, !dbg !9656
  %17 = load i32, i32* %i, align 4, !dbg !9657
  %idxprom7 = sext i32 %17 to i64, !dbg !9658
  %18 = load i32*, i32** %b1, align 8, !dbg !9658
  %arrayidx8 = getelementptr inbounds i32, i32* %18, i64 %idxprom7, !dbg !9658
  store i32 %add6, i32* %arrayidx8, align 4, !dbg !9659
  br label %for.inc, !dbg !9660

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !9661
  %inc = add nsw i32 %19, 1, !dbg !9661
  store i32 %inc, i32* %i, align 4, !dbg !9661
  br label %for.cond, !dbg !9663, !llvm.loop !9664

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9666
}

; Function Attrs: nounwind uwtable
define internal void @horizontal_compose_dirac53i_12bit(i8* %_b, i8* %_temp, i32 %w) #0 !dbg !9667 {
entry:
  %dst.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %dst.addr.i, metadata !9668, metadata !87), !dbg !9670
  %src0.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %src0.addr.i, metadata !9672, metadata !87), !dbg !9673
  %src1.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %src1.addr.i, metadata !9674, metadata !87), !dbg !9675
  %w2.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w2.addr.i, metadata !9676, metadata !87), !dbg !9677
  %add.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %add.addr.i, metadata !9678, metadata !87), !dbg !9679
  %shift.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %shift.addr.i, metadata !9680, metadata !87), !dbg !9681
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !9682, metadata !87), !dbg !9683
  %_b.addr = alloca i8*, align 8
  %_temp.addr = alloca i8*, align 8
  %w.addr = alloca i32, align 4
  %x = alloca i32, align 4
  %w2 = alloca i32, align 4
  %b = alloca i32*, align 8
  %temp = alloca i32*, align 8
  store i8* %_b, i8** %_b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b.addr, metadata !9684, metadata !87), !dbg !9685
  store i8* %_temp, i8** %_temp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_temp.addr, metadata !9686, metadata !87), !dbg !9687
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !9688, metadata !87), !dbg !9689
  call void @llvm.dbg.declare(metadata i32* %x, metadata !9690, metadata !87), !dbg !9691
  call void @llvm.dbg.declare(metadata i32* %w2, metadata !9692, metadata !87), !dbg !9693
  %0 = load i32, i32* %w.addr, align 4, !dbg !9694
  %shr = ashr i32 %0, 1, !dbg !9695
  store i32 %shr, i32* %w2, align 4, !dbg !9693
  call void @llvm.dbg.declare(metadata i32** %b, metadata !9696, metadata !87), !dbg !9697
  %1 = load i8*, i8** %_b.addr, align 8, !dbg !9698
  %2 = bitcast i8* %1 to i32*, !dbg !9699
  store i32* %2, i32** %b, align 8, !dbg !9697
  call void @llvm.dbg.declare(metadata i32** %temp, metadata !9700, metadata !87), !dbg !9701
  %3 = load i8*, i8** %_temp.addr, align 8, !dbg !9702
  %4 = bitcast i8* %3 to i32*, !dbg !9703
  store i32* %4, i32** %temp, align 8, !dbg !9701
  %5 = load i32*, i32** %b, align 8, !dbg !9704
  %arrayidx = getelementptr inbounds i32, i32* %5, i64 0, !dbg !9704
  %6 = load i32, i32* %arrayidx, align 4, !dbg !9704
  %7 = load i32, i32* %w2, align 4, !dbg !9705
  %idxprom = sext i32 %7 to i64, !dbg !9706
  %8 = load i32*, i32** %b, align 8, !dbg !9706
  %arrayidx1 = getelementptr inbounds i32, i32* %8, i64 %idxprom, !dbg !9706
  %9 = load i32, i32* %arrayidx1, align 4, !dbg !9706
  %10 = load i32, i32* %w2, align 4, !dbg !9707
  %idxprom2 = sext i32 %10 to i64, !dbg !9708
  %11 = load i32*, i32** %b, align 8, !dbg !9708
  %arrayidx3 = getelementptr inbounds i32, i32* %11, i64 %idxprom2, !dbg !9708
  %12 = load i32, i32* %arrayidx3, align 4, !dbg !9708
  %add = add i32 %9, %12, !dbg !9709
  %add4 = add i32 %add, 2, !dbg !9710
  %shr5 = ashr i32 %add4, 2, !dbg !9711
  %sub = sub i32 %6, %shr5, !dbg !9712
  %13 = load i32*, i32** %temp, align 8, !dbg !9713
  %arrayidx6 = getelementptr inbounds i32, i32* %13, i64 0, !dbg !9713
  store i32 %sub, i32* %arrayidx6, align 4, !dbg !9714
  store i32 1, i32* %x, align 4, !dbg !9715
  br label %for.cond, !dbg !9717

for.cond:                                         ; preds = %for.inc, %entry
  %14 = load i32, i32* %x, align 4, !dbg !9718
  %15 = load i32, i32* %w2, align 4, !dbg !9721
  %cmp = icmp slt i32 %14, %15, !dbg !9722
  br i1 %cmp, label %for.body, label %for.end, !dbg !9723

for.body:                                         ; preds = %for.cond
  %16 = load i32, i32* %x, align 4, !dbg !9724
  %idxprom7 = sext i32 %16 to i64, !dbg !9726
  %17 = load i32*, i32** %b, align 8, !dbg !9726
  %arrayidx8 = getelementptr inbounds i32, i32* %17, i64 %idxprom7, !dbg !9726
  %18 = load i32, i32* %arrayidx8, align 4, !dbg !9726
  %19 = load i32, i32* %x, align 4, !dbg !9727
  %20 = load i32, i32* %w2, align 4, !dbg !9728
  %add9 = add nsw i32 %19, %20, !dbg !9729
  %sub10 = sub nsw i32 %add9, 1, !dbg !9730
  %idxprom11 = sext i32 %sub10 to i64, !dbg !9731
  %21 = load i32*, i32** %b, align 8, !dbg !9731
  %arrayidx12 = getelementptr inbounds i32, i32* %21, i64 %idxprom11, !dbg !9731
  %22 = load i32, i32* %arrayidx12, align 4, !dbg !9731
  %23 = load i32, i32* %x, align 4, !dbg !9732
  %24 = load i32, i32* %w2, align 4, !dbg !9733
  %add13 = add nsw i32 %23, %24, !dbg !9734
  %idxprom14 = sext i32 %add13 to i64, !dbg !9735
  %25 = load i32*, i32** %b, align 8, !dbg !9735
  %arrayidx15 = getelementptr inbounds i32, i32* %25, i64 %idxprom14, !dbg !9735
  %26 = load i32, i32* %arrayidx15, align 4, !dbg !9735
  %add16 = add i32 %22, %26, !dbg !9736
  %add17 = add i32 %add16, 2, !dbg !9737
  %shr18 = ashr i32 %add17, 2, !dbg !9738
  %sub19 = sub i32 %18, %shr18, !dbg !9739
  %27 = load i32, i32* %x, align 4, !dbg !9740
  %idxprom20 = sext i32 %27 to i64, !dbg !9741
  %28 = load i32*, i32** %temp, align 8, !dbg !9741
  %arrayidx21 = getelementptr inbounds i32, i32* %28, i64 %idxprom20, !dbg !9741
  store i32 %sub19, i32* %arrayidx21, align 4, !dbg !9742
  %29 = load i32, i32* %x, align 4, !dbg !9743
  %30 = load i32, i32* %w2, align 4, !dbg !9744
  %add22 = add nsw i32 %29, %30, !dbg !9745
  %sub23 = sub nsw i32 %add22, 1, !dbg !9746
  %idxprom24 = sext i32 %sub23 to i64, !dbg !9747
  %31 = load i32*, i32** %b, align 8, !dbg !9747
  %arrayidx25 = getelementptr inbounds i32, i32* %31, i64 %idxprom24, !dbg !9747
  %32 = load i32, i32* %arrayidx25, align 4, !dbg !9747
  %33 = load i32, i32* %x, align 4, !dbg !9748
  %sub26 = sub nsw i32 %33, 1, !dbg !9749
  %idxprom27 = sext i32 %sub26 to i64, !dbg !9750
  %34 = load i32*, i32** %temp, align 8, !dbg !9750
  %arrayidx28 = getelementptr inbounds i32, i32* %34, i64 %idxprom27, !dbg !9750
  %35 = load i32, i32* %arrayidx28, align 4, !dbg !9750
  %36 = load i32, i32* %x, align 4, !dbg !9751
  %idxprom29 = sext i32 %36 to i64, !dbg !9752
  %37 = load i32*, i32** %temp, align 8, !dbg !9752
  %arrayidx30 = getelementptr inbounds i32, i32* %37, i64 %idxprom29, !dbg !9752
  %38 = load i32, i32* %arrayidx30, align 4, !dbg !9752
  %add31 = add i32 %35, %38, !dbg !9753
  %add32 = add i32 %add31, 1, !dbg !9754
  %shr33 = ashr i32 %add32, 1, !dbg !9755
  %add34 = add i32 %32, %shr33, !dbg !9756
  %39 = load i32, i32* %x, align 4, !dbg !9757
  %40 = load i32, i32* %w2, align 4, !dbg !9758
  %add35 = add nsw i32 %39, %40, !dbg !9759
  %sub36 = sub nsw i32 %add35, 1, !dbg !9760
  %idxprom37 = sext i32 %sub36 to i64, !dbg !9761
  %41 = load i32*, i32** %temp, align 8, !dbg !9761
  %arrayidx38 = getelementptr inbounds i32, i32* %41, i64 %idxprom37, !dbg !9761
  store i32 %add34, i32* %arrayidx38, align 4, !dbg !9762
  br label %for.inc, !dbg !9763

for.inc:                                          ; preds = %for.body
  %42 = load i32, i32* %x, align 4, !dbg !9764
  %inc = add nsw i32 %42, 1, !dbg !9764
  store i32 %inc, i32* %x, align 4, !dbg !9764
  br label %for.cond, !dbg !9766, !llvm.loop !9767

for.end:                                          ; preds = %for.cond
  %43 = load i32, i32* %w.addr, align 4, !dbg !9769
  %sub39 = sub nsw i32 %43, 1, !dbg !9770
  %idxprom40 = sext i32 %sub39 to i64, !dbg !9771
  %44 = load i32*, i32** %b, align 8, !dbg !9771
  %arrayidx41 = getelementptr inbounds i32, i32* %44, i64 %idxprom40, !dbg !9771
  %45 = load i32, i32* %arrayidx41, align 4, !dbg !9771
  %46 = load i32, i32* %w2, align 4, !dbg !9772
  %sub42 = sub nsw i32 %46, 1, !dbg !9773
  %idxprom43 = sext i32 %sub42 to i64, !dbg !9774
  %47 = load i32*, i32** %temp, align 8, !dbg !9774
  %arrayidx44 = getelementptr inbounds i32, i32* %47, i64 %idxprom43, !dbg !9774
  %48 = load i32, i32* %arrayidx44, align 4, !dbg !9774
  %49 = load i32, i32* %w2, align 4, !dbg !9775
  %sub45 = sub nsw i32 %49, 1, !dbg !9776
  %idxprom46 = sext i32 %sub45 to i64, !dbg !9777
  %50 = load i32*, i32** %temp, align 8, !dbg !9777
  %arrayidx47 = getelementptr inbounds i32, i32* %50, i64 %idxprom46, !dbg !9777
  %51 = load i32, i32* %arrayidx47, align 4, !dbg !9777
  %add48 = add i32 %48, %51, !dbg !9778
  %add49 = add i32 %add48, 1, !dbg !9779
  %shr50 = ashr i32 %add49, 1, !dbg !9780
  %add51 = add i32 %45, %shr50, !dbg !9781
  %52 = load i32, i32* %w.addr, align 4, !dbg !9782
  %sub52 = sub nsw i32 %52, 1, !dbg !9783
  %idxprom53 = sext i32 %sub52 to i64, !dbg !9784
  %53 = load i32*, i32** %temp, align 8, !dbg !9784
  %arrayidx54 = getelementptr inbounds i32, i32* %53, i64 %idxprom53, !dbg !9784
  store i32 %add51, i32* %arrayidx54, align 4, !dbg !9785
  %54 = load i32*, i32** %b, align 8, !dbg !9786
  %55 = load i32*, i32** %temp, align 8, !dbg !9787
  %56 = load i32*, i32** %temp, align 8, !dbg !9788
  %57 = load i32, i32* %w2, align 4, !dbg !9789
  %idx.ext = sext i32 %57 to i64, !dbg !9790
  %add.ptr = getelementptr inbounds i32, i32* %56, i64 %idx.ext, !dbg !9790
  %58 = load i32, i32* %w2, align 4, !dbg !9791
  store i32* %54, i32** %dst.addr.i, align 8, !dbg !9792
  store i32* %55, i32** %src0.addr.i, align 8, !dbg !9792
  store i32* %add.ptr, i32** %src1.addr.i, align 8, !dbg !9792
  store i32 %58, i32* %w2.addr.i, align 4, !dbg !9792
  store i32 1, i32* %add.addr.i, align 4, !dbg !9792
  store i32 1, i32* %shift.addr.i, align 4, !dbg !9792
  store i32 0, i32* %i.i, align 4, !dbg !9793
  br label %for.cond.i, !dbg !9795

for.cond.i:                                       ; preds = %for.body.i, %for.end
  %59 = load i32, i32* %i.i, align 4, !dbg !9796
  %60 = load i32, i32* %w2.addr.i, align 4, !dbg !9799
  %cmp.i = icmp slt i32 %59, %60, !dbg !9800
  br i1 %cmp.i, label %for.body.i, label %interleave_12bit.exit, !dbg !9801

for.body.i:                                       ; preds = %for.cond.i
  %61 = load i32, i32* %i.i, align 4, !dbg !9802
  %idxprom.i = sext i32 %61 to i64, !dbg !9804
  %62 = load i32*, i32** %src0.addr.i, align 8, !dbg !9804
  %arrayidx.i = getelementptr inbounds i32, i32* %62, i64 %idxprom.i, !dbg !9804
  %63 = load i32, i32* %arrayidx.i, align 4, !dbg !9804
  %64 = load i32, i32* %add.addr.i, align 4, !dbg !9805
  %add1.i = add i32 %63, %64, !dbg !9806
  %65 = load i32, i32* %shift.addr.i, align 4, !dbg !9807
  %shr.i = ashr i32 %add1.i, %65, !dbg !9808
  %66 = load i32, i32* %i.i, align 4, !dbg !9809
  %mul.i = mul nsw i32 2, %66, !dbg !9810
  %idxprom2.i = sext i32 %mul.i to i64, !dbg !9811
  %67 = load i32*, i32** %dst.addr.i, align 8, !dbg !9811
  %arrayidx3.i = getelementptr inbounds i32, i32* %67, i64 %idxprom2.i, !dbg !9811
  store i32 %shr.i, i32* %arrayidx3.i, align 4, !dbg !9812
  %68 = load i32, i32* %i.i, align 4, !dbg !9813
  %idxprom4.i = sext i32 %68 to i64, !dbg !9814
  %69 = load i32*, i32** %src1.addr.i, align 8, !dbg !9814
  %arrayidx5.i = getelementptr inbounds i32, i32* %69, i64 %idxprom4.i, !dbg !9814
  %70 = load i32, i32* %arrayidx5.i, align 4, !dbg !9814
  %71 = load i32, i32* %add.addr.i, align 4, !dbg !9815
  %add6.i = add i32 %70, %71, !dbg !9816
  %72 = load i32, i32* %shift.addr.i, align 4, !dbg !9817
  %shr7.i = ashr i32 %add6.i, %72, !dbg !9818
  %73 = load i32, i32* %i.i, align 4, !dbg !9819
  %mul8.i = mul nsw i32 2, %73, !dbg !9820
  %add9.i = add nsw i32 %mul8.i, 1, !dbg !9821
  %idxprom10.i = sext i32 %add9.i to i64, !dbg !9822
  %74 = load i32*, i32** %dst.addr.i, align 8, !dbg !9822
  %arrayidx11.i = getelementptr inbounds i32, i32* %74, i64 %idxprom10.i, !dbg !9822
  store i32 %shr7.i, i32* %arrayidx11.i, align 4, !dbg !9823
  %75 = load i32, i32* %i.i, align 4, !dbg !9824
  %inc.i = add nsw i32 %75, 1, !dbg !9824
  store i32 %inc.i, i32* %i.i, align 4, !dbg !9824
  br label %for.cond.i, !dbg !9826, !llvm.loop !9827

interleave_12bit.exit:                            ; preds = %for.cond.i
  ret void, !dbg !9829
}

; Function Attrs: nounwind uwtable
define internal void @spatial_compose_dd137i_dy_12bit(%struct.DWTContext* %d, i32 %level, i32 %width, i32 %height, i32 %stride) #0 !dbg !9830 {
entry:
  %retval.i61 = alloca i32, align 4
  %a.addr.i62 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i62, metadata !904, metadata !87), !dbg !9831
  %amin.addr.i63 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i63, metadata !911, metadata !87), !dbg !9833
  %amax.addr.i64 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i64, metadata !913, metadata !87), !dbg !9834
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !904, metadata !87), !dbg !9835
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !911, metadata !87), !dbg !9837
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !913, metadata !87), !dbg !9838
  %d.addr = alloca %struct.DWTContext*, align 8
  %level.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  %vertical_compose_l0 = alloca void (i8*, i8*, i8*, i8*, i8*, i32)*, align 8
  %vertical_compose_h0 = alloca void (i8*, i8*, i8*, i8*, i8*, i32)*, align 8
  %cs = alloca %struct.DWTCompose*, align 8
  %i = alloca i32, align 4
  %y = alloca i32, align 4
  %b = alloca [10 x i8*], align 16
  store %struct.DWTContext* %d, %struct.DWTContext** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTContext** %d.addr, metadata !9839, metadata !87), !dbg !9840
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !9841, metadata !87), !dbg !9842
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !9843, metadata !87), !dbg !9844
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !9845, metadata !87), !dbg !9846
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !9847, metadata !87), !dbg !9848
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i8*, i8*, i32)** %vertical_compose_l0, metadata !9849, metadata !87), !dbg !9850
  %0 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !9851
  %vertical_compose_l01 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %0, i32 0, i32 8, !dbg !9852
  %1 = load void ()*, void ()** %vertical_compose_l01, align 8, !dbg !9852
  %2 = bitcast void ()* %1 to i8*, !dbg !9853
  %3 = bitcast i8* %2 to void (i8*, i8*, i8*, i8*, i8*, i32)*, !dbg !9853
  store void (i8*, i8*, i8*, i8*, i8*, i32)* %3, void (i8*, i8*, i8*, i8*, i8*, i32)** %vertical_compose_l0, align 8, !dbg !9850
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i8*, i8*, i32)** %vertical_compose_h0, metadata !9854, metadata !87), !dbg !9855
  %4 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !9856
  %vertical_compose_h02 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %4, i32 0, i32 9, !dbg !9857
  %5 = load void ()*, void ()** %vertical_compose_h02, align 8, !dbg !9857
  %6 = bitcast void ()* %5 to i8*, !dbg !9858
  %7 = bitcast i8* %6 to void (i8*, i8*, i8*, i8*, i8*, i32)*, !dbg !9858
  store void (i8*, i8*, i8*, i8*, i8*, i32)* %7, void (i8*, i8*, i8*, i8*, i8*, i32)** %vertical_compose_h0, align 8, !dbg !9855
  call void @llvm.dbg.declare(metadata %struct.DWTCompose** %cs, metadata !9859, metadata !87), !dbg !9860
  %8 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !9861
  %cs3 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %8, i32 0, i32 14, !dbg !9862
  %arraydecay = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs3, i32 0, i32 0, !dbg !9861
  %9 = load i32, i32* %level.addr, align 4, !dbg !9863
  %idx.ext = sext i32 %9 to i64, !dbg !9864
  %add.ptr = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arraydecay, i64 %idx.ext, !dbg !9864
  store %struct.DWTCompose* %add.ptr, %struct.DWTCompose** %cs, align 8, !dbg !9860
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9865, metadata !87), !dbg !9866
  call void @llvm.dbg.declare(metadata i32* %y, metadata !9867, metadata !87), !dbg !9868
  %10 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !9869
  %y4 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %10, i32 0, i32 1, !dbg !9870
  %11 = load i32, i32* %y4, align 8, !dbg !9870
  store i32 %11, i32* %y, align 4, !dbg !9868
  call void @llvm.dbg.declare(metadata [10 x i8*]* %b, metadata !9871, metadata !87), !dbg !9872
  store i32 0, i32* %i, align 4, !dbg !9873
  br label %for.cond, !dbg !9875

for.cond:                                         ; preds = %for.inc, %entry
  %12 = load i32, i32* %i, align 4, !dbg !9876
  %cmp = icmp slt i32 %12, 8, !dbg !9879
  br i1 %cmp, label %for.body, label %for.end, !dbg !9880

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %i, align 4, !dbg !9881
  %idxprom = sext i32 %13 to i64, !dbg !9882
  %14 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !9882
  %b5 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %14, i32 0, i32 0, !dbg !9883
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %b5, i64 0, i64 %idxprom, !dbg !9882
  %15 = load i8*, i8** %arrayidx, align 8, !dbg !9882
  %16 = load i32, i32* %i, align 4, !dbg !9884
  %idxprom6 = sext i32 %16 to i64, !dbg !9885
  %arrayidx7 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 %idxprom6, !dbg !9885
  store i8* %15, i8** %arrayidx7, align 8, !dbg !9886
  br label %for.inc, !dbg !9885

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !9887
  %inc = add nsw i32 %17, 1, !dbg !9887
  store i32 %inc, i32* %i, align 4, !dbg !9887
  br label %for.cond, !dbg !9889, !llvm.loop !9890

for.end:                                          ; preds = %for.cond
  %18 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !9892
  %buffer = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %18, i32 0, i32 0, !dbg !9893
  %19 = load i8*, i8** %buffer, align 8, !dbg !9893
  %20 = load i32, i32* %y, align 4, !dbg !9894
  %add = add nsw i32 %20, 7, !dbg !9895
  %21 = load i32, i32* %height.addr, align 4, !dbg !9896
  %sub = sub nsw i32 %21, 2, !dbg !9897
  store i32 %add, i32* %a.addr.i, align 4, !dbg !9898
  store i32 0, i32* %amin.addr.i, align 4, !dbg !9898
  store i32 %sub, i32* %amax.addr.i, align 4, !dbg !9898
  %22 = load i32, i32* %a.addr.i, align 4, !dbg !9899
  %23 = load i32, i32* %amin.addr.i, align 4, !dbg !9900
  %cmp.i = icmp slt i32 %22, %23, !dbg !9901
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !9902

if.then.i:                                        ; preds = %for.end
  %24 = load i32, i32* %amin.addr.i, align 4, !dbg !9903
  store i32 %24, i32* %retval.i, align 4, !dbg !9904
  br label %av_clip_c.exit, !dbg !9904

if.else.i:                                        ; preds = %for.end
  %25 = load i32, i32* %a.addr.i, align 4, !dbg !9905
  %26 = load i32, i32* %amax.addr.i, align 4, !dbg !9906
  %cmp1.i = icmp sgt i32 %25, %26, !dbg !9907
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !9908

if.then2.i:                                       ; preds = %if.else.i
  %27 = load i32, i32* %amax.addr.i, align 4, !dbg !9909
  store i32 %27, i32* %retval.i, align 4, !dbg !9910
  br label %av_clip_c.exit, !dbg !9910

if.else3.i:                                       ; preds = %if.else.i
  %28 = load i32, i32* %a.addr.i, align 4, !dbg !9911
  store i32 %28, i32* %retval.i, align 4, !dbg !9912
  br label %av_clip_c.exit, !dbg !9912

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %29 = load i32, i32* %retval.i, align 4, !dbg !9913
  %30 = load i32, i32* %stride.addr, align 4, !dbg !9914
  %mul = mul nsw i32 %29, %30, !dbg !9915
  %idx.ext8 = sext i32 %mul to i64, !dbg !9916
  %add.ptr9 = getelementptr inbounds i8, i8* %19, i64 %idx.ext8, !dbg !9916
  %arrayidx10 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 8, !dbg !9917
  store i8* %add.ptr9, i8** %arrayidx10, align 16, !dbg !9918
  %31 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !9919
  %buffer11 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %31, i32 0, i32 0, !dbg !9920
  %32 = load i8*, i8** %buffer11, align 8, !dbg !9920
  %33 = load i32, i32* %y, align 4, !dbg !9921
  %add12 = add nsw i32 %33, 8, !dbg !9922
  %34 = load i32, i32* %height.addr, align 4, !dbg !9923
  %sub13 = sub nsw i32 %34, 1, !dbg !9924
  store i32 %add12, i32* %a.addr.i62, align 4, !dbg !9925
  store i32 1, i32* %amin.addr.i63, align 4, !dbg !9925
  store i32 %sub13, i32* %amax.addr.i64, align 4, !dbg !9925
  %35 = load i32, i32* %a.addr.i62, align 4, !dbg !9926
  %36 = load i32, i32* %amin.addr.i63, align 4, !dbg !9927
  %cmp.i65 = icmp slt i32 %35, %36, !dbg !9928
  br i1 %cmp.i65, label %if.then.i66, label %if.else.i68, !dbg !9929

if.then.i66:                                      ; preds = %av_clip_c.exit
  %37 = load i32, i32* %amin.addr.i63, align 4, !dbg !9930
  store i32 %37, i32* %retval.i61, align 4, !dbg !9931
  br label %av_clip_c.exit71, !dbg !9931

if.else.i68:                                      ; preds = %av_clip_c.exit
  %38 = load i32, i32* %a.addr.i62, align 4, !dbg !9932
  %39 = load i32, i32* %amax.addr.i64, align 4, !dbg !9933
  %cmp1.i67 = icmp sgt i32 %38, %39, !dbg !9934
  br i1 %cmp1.i67, label %if.then2.i69, label %if.else3.i70, !dbg !9935

if.then2.i69:                                     ; preds = %if.else.i68
  %40 = load i32, i32* %amax.addr.i64, align 4, !dbg !9936
  store i32 %40, i32* %retval.i61, align 4, !dbg !9937
  br label %av_clip_c.exit71, !dbg !9937

if.else3.i70:                                     ; preds = %if.else.i68
  %41 = load i32, i32* %a.addr.i62, align 4, !dbg !9938
  store i32 %41, i32* %retval.i61, align 4, !dbg !9939
  br label %av_clip_c.exit71, !dbg !9939

av_clip_c.exit71:                                 ; preds = %if.then.i66, %if.then2.i69, %if.else3.i70
  %42 = load i32, i32* %retval.i61, align 4, !dbg !9940
  %43 = load i32, i32* %stride.addr, align 4, !dbg !9941
  %mul15 = mul nsw i32 %42, %43, !dbg !9942
  %idx.ext16 = sext i32 %mul15 to i64, !dbg !9943
  %add.ptr17 = getelementptr inbounds i8, i8* %32, i64 %idx.ext16, !dbg !9943
  %arrayidx18 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 9, !dbg !9944
  store i8* %add.ptr17, i8** %arrayidx18, align 8, !dbg !9945
  %44 = load i32, i32* %y, align 4, !dbg !9946
  %add19 = add nsw i32 %44, 5, !dbg !9948
  %45 = load i32, i32* %height.addr, align 4, !dbg !9949
  %cmp20 = icmp ult i32 %add19, %45, !dbg !9950
  br i1 %cmp20, label %if.then, label %if.end, !dbg !9951

if.then:                                          ; preds = %av_clip_c.exit71
  %46 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %vertical_compose_l0, align 8, !dbg !9952
  %arrayidx21 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 3, !dbg !9954
  %47 = load i8*, i8** %arrayidx21, align 8, !dbg !9954
  %arrayidx22 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 5, !dbg !9955
  %48 = load i8*, i8** %arrayidx22, align 8, !dbg !9955
  %arrayidx23 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 6, !dbg !9956
  %49 = load i8*, i8** %arrayidx23, align 16, !dbg !9956
  %arrayidx24 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 7, !dbg !9957
  %50 = load i8*, i8** %arrayidx24, align 8, !dbg !9957
  %arrayidx25 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 9, !dbg !9958
  %51 = load i8*, i8** %arrayidx25, align 8, !dbg !9958
  %52 = load i32, i32* %width.addr, align 4, !dbg !9959
  call void %46(i8* %47, i8* %48, i8* %49, i8* %50, i8* %51, i32 %52), !dbg !9952
  br label %if.end, !dbg !9952

if.end:                                           ; preds = %if.then, %av_clip_c.exit71
  %53 = load i32, i32* %y, align 4, !dbg !9960
  %add26 = add nsw i32 %53, 1, !dbg !9962
  %54 = load i32, i32* %height.addr, align 4, !dbg !9963
  %cmp27 = icmp ult i32 %add26, %54, !dbg !9964
  br i1 %cmp27, label %if.then28, label %if.end34, !dbg !9965

if.then28:                                        ; preds = %if.end
  %55 = load void (i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i32)** %vertical_compose_h0, align 8, !dbg !9966
  %arrayidx29 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 0, !dbg !9968
  %56 = load i8*, i8** %arrayidx29, align 16, !dbg !9968
  %arrayidx30 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 2, !dbg !9969
  %57 = load i8*, i8** %arrayidx30, align 16, !dbg !9969
  %arrayidx31 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 3, !dbg !9970
  %58 = load i8*, i8** %arrayidx31, align 8, !dbg !9970
  %arrayidx32 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 4, !dbg !9971
  %59 = load i8*, i8** %arrayidx32, align 16, !dbg !9971
  %arrayidx33 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 6, !dbg !9972
  %60 = load i8*, i8** %arrayidx33, align 16, !dbg !9972
  %61 = load i32, i32* %width.addr, align 4, !dbg !9973
  call void %55(i8* %56, i8* %57, i8* %58, i8* %59, i8* %60, i32 %61), !dbg !9966
  br label %if.end34, !dbg !9966

if.end34:                                         ; preds = %if.then28, %if.end
  %62 = load i32, i32* %y, align 4, !dbg !9974
  %sub35 = sub nsw i32 %62, 1, !dbg !9976
  %63 = load i32, i32* %height.addr, align 4, !dbg !9977
  %cmp36 = icmp ult i32 %sub35, %63, !dbg !9978
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !9979

if.then37:                                        ; preds = %if.end34
  %64 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !9980
  %horizontal_compose = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %64, i32 0, i32 13, !dbg !9982
  %65 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %horizontal_compose, align 8, !dbg !9982
  %arrayidx38 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 0, !dbg !9983
  %66 = load i8*, i8** %arrayidx38, align 16, !dbg !9983
  %67 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !9984
  %temp = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %67, i32 0, i32 1, !dbg !9985
  %68 = load i8*, i8** %temp, align 8, !dbg !9985
  %69 = load i32, i32* %width.addr, align 4, !dbg !9986
  call void %65(i8* %66, i8* %68, i32 %69), !dbg !9980
  br label %if.end39, !dbg !9980

if.end39:                                         ; preds = %if.then37, %if.end34
  %70 = load i32, i32* %y, align 4, !dbg !9987
  %add40 = add nsw i32 %70, 0, !dbg !9989
  %71 = load i32, i32* %height.addr, align 4, !dbg !9990
  %cmp41 = icmp ult i32 %add40, %71, !dbg !9991
  br i1 %cmp41, label %if.then42, label %if.end46, !dbg !9992

if.then42:                                        ; preds = %if.end39
  %72 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !9993
  %horizontal_compose43 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %72, i32 0, i32 13, !dbg !9995
  %73 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %horizontal_compose43, align 8, !dbg !9995
  %arrayidx44 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 1, !dbg !9996
  %74 = load i8*, i8** %arrayidx44, align 8, !dbg !9996
  %75 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !9997
  %temp45 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %75, i32 0, i32 1, !dbg !9998
  %76 = load i8*, i8** %temp45, align 8, !dbg !9998
  %77 = load i32, i32* %width.addr, align 4, !dbg !9999
  call void %73(i8* %74, i8* %76, i32 %77), !dbg !9993
  br label %if.end46, !dbg !9993

if.end46:                                         ; preds = %if.then42, %if.end39
  store i32 0, i32* %i, align 4, !dbg !10000
  br label %for.cond47, !dbg !10002

for.cond47:                                       ; preds = %for.inc56, %if.end46
  %78 = load i32, i32* %i, align 4, !dbg !10003
  %cmp48 = icmp slt i32 %78, 8, !dbg !10006
  br i1 %cmp48, label %for.body49, label %for.end58, !dbg !10007

for.body49:                                       ; preds = %for.cond47
  %79 = load i32, i32* %i, align 4, !dbg !10008
  %add50 = add nsw i32 %79, 2, !dbg !10009
  %idxprom51 = sext i32 %add50 to i64, !dbg !10010
  %arrayidx52 = getelementptr inbounds [10 x i8*], [10 x i8*]* %b, i64 0, i64 %idxprom51, !dbg !10010
  %80 = load i8*, i8** %arrayidx52, align 8, !dbg !10010
  %81 = load i32, i32* %i, align 4, !dbg !10011
  %idxprom53 = sext i32 %81 to i64, !dbg !10012
  %82 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !10012
  %b54 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %82, i32 0, i32 0, !dbg !10013
  %arrayidx55 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b54, i64 0, i64 %idxprom53, !dbg !10012
  store i8* %80, i8** %arrayidx55, align 8, !dbg !10014
  br label %for.inc56, !dbg !10012

for.inc56:                                        ; preds = %for.body49
  %83 = load i32, i32* %i, align 4, !dbg !10015
  %inc57 = add nsw i32 %83, 1, !dbg !10015
  store i32 %inc57, i32* %i, align 4, !dbg !10015
  br label %for.cond47, !dbg !10017, !llvm.loop !10018

for.end58:                                        ; preds = %for.cond47
  %84 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !10020
  %y59 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %84, i32 0, i32 1, !dbg !10021
  %85 = load i32, i32* %y59, align 8, !dbg !10022
  %add60 = add nsw i32 %85, 2, !dbg !10022
  store i32 %add60, i32* %y59, align 8, !dbg !10022
  ret void, !dbg !10023
}

; Function Attrs: nounwind uwtable
define internal void @vertical_compose_dd137iL0_12bit(i8* %_b0, i8* %_b1, i8* %_b2, i8* %_b3, i8* %_b4, i32 %width) #0 !dbg !10024 {
entry:
  %_b0.addr = alloca i8*, align 8
  %_b1.addr = alloca i8*, align 8
  %_b2.addr = alloca i8*, align 8
  %_b3.addr = alloca i8*, align 8
  %_b4.addr = alloca i8*, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %b0 = alloca i32*, align 8
  %b1 = alloca i32*, align 8
  %b2 = alloca i32*, align 8
  %b3 = alloca i32*, align 8
  %b4 = alloca i32*, align 8
  store i8* %_b0, i8** %_b0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b0.addr, metadata !10025, metadata !87), !dbg !10026
  store i8* %_b1, i8** %_b1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b1.addr, metadata !10027, metadata !87), !dbg !10028
  store i8* %_b2, i8** %_b2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b2.addr, metadata !10029, metadata !87), !dbg !10030
  store i8* %_b3, i8** %_b3.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b3.addr, metadata !10031, metadata !87), !dbg !10032
  store i8* %_b4, i8** %_b4.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b4.addr, metadata !10033, metadata !87), !dbg !10034
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !10035, metadata !87), !dbg !10036
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10037, metadata !87), !dbg !10038
  call void @llvm.dbg.declare(metadata i32** %b0, metadata !10039, metadata !87), !dbg !10040
  %0 = load i8*, i8** %_b0.addr, align 8, !dbg !10041
  %1 = bitcast i8* %0 to i32*, !dbg !10042
  store i32* %1, i32** %b0, align 8, !dbg !10040
  call void @llvm.dbg.declare(metadata i32** %b1, metadata !10043, metadata !87), !dbg !10044
  %2 = load i8*, i8** %_b1.addr, align 8, !dbg !10045
  %3 = bitcast i8* %2 to i32*, !dbg !10046
  store i32* %3, i32** %b1, align 8, !dbg !10044
  call void @llvm.dbg.declare(metadata i32** %b2, metadata !10047, metadata !87), !dbg !10048
  %4 = load i8*, i8** %_b2.addr, align 8, !dbg !10049
  %5 = bitcast i8* %4 to i32*, !dbg !10050
  store i32* %5, i32** %b2, align 8, !dbg !10048
  call void @llvm.dbg.declare(metadata i32** %b3, metadata !10051, metadata !87), !dbg !10052
  %6 = load i8*, i8** %_b3.addr, align 8, !dbg !10053
  %7 = bitcast i8* %6 to i32*, !dbg !10054
  store i32* %7, i32** %b3, align 8, !dbg !10052
  call void @llvm.dbg.declare(metadata i32** %b4, metadata !10055, metadata !87), !dbg !10056
  %8 = load i8*, i8** %_b4.addr, align 8, !dbg !10057
  %9 = bitcast i8* %8 to i32*, !dbg !10058
  store i32* %9, i32** %b4, align 8, !dbg !10056
  store i32 0, i32* %i, align 4, !dbg !10059
  br label %for.cond, !dbg !10061

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load i32, i32* %i, align 4, !dbg !10062
  %11 = load i32, i32* %width.addr, align 4, !dbg !10065
  %cmp = icmp slt i32 %10, %11, !dbg !10066
  br i1 %cmp, label %for.body, label %for.end, !dbg !10067

for.body:                                         ; preds = %for.cond
  %12 = load i32, i32* %i, align 4, !dbg !10068
  %idxprom = sext i32 %12 to i64, !dbg !10070
  %13 = load i32*, i32** %b2, align 8, !dbg !10070
  %arrayidx = getelementptr inbounds i32, i32* %13, i64 %idxprom, !dbg !10070
  %14 = load i32, i32* %arrayidx, align 4, !dbg !10070
  %15 = load i32, i32* %i, align 4, !dbg !10071
  %idxprom1 = sext i32 %15 to i64, !dbg !10072
  %16 = load i32*, i32** %b1, align 8, !dbg !10072
  %arrayidx2 = getelementptr inbounds i32, i32* %16, i64 %idxprom1, !dbg !10072
  %17 = load i32, i32* %arrayidx2, align 4, !dbg !10072
  %mul = mul i32 9, %17, !dbg !10073
  %18 = load i32, i32* %i, align 4, !dbg !10074
  %idxprom3 = sext i32 %18 to i64, !dbg !10075
  %19 = load i32*, i32** %b3, align 8, !dbg !10075
  %arrayidx4 = getelementptr inbounds i32, i32* %19, i64 %idxprom3, !dbg !10075
  %20 = load i32, i32* %arrayidx4, align 4, !dbg !10075
  %mul5 = mul i32 9, %20, !dbg !10076
  %add = add i32 %mul, %mul5, !dbg !10077
  %21 = load i32, i32* %i, align 4, !dbg !10078
  %idxprom6 = sext i32 %21 to i64, !dbg !10079
  %22 = load i32*, i32** %b4, align 8, !dbg !10079
  %arrayidx7 = getelementptr inbounds i32, i32* %22, i64 %idxprom6, !dbg !10079
  %23 = load i32, i32* %arrayidx7, align 4, !dbg !10079
  %sub = sub i32 %add, %23, !dbg !10080
  %24 = load i32, i32* %i, align 4, !dbg !10081
  %idxprom8 = sext i32 %24 to i64, !dbg !10082
  %25 = load i32*, i32** %b0, align 8, !dbg !10082
  %arrayidx9 = getelementptr inbounds i32, i32* %25, i64 %idxprom8, !dbg !10082
  %26 = load i32, i32* %arrayidx9, align 4, !dbg !10082
  %sub10 = sub i32 %sub, %26, !dbg !10083
  %add11 = add i32 %sub10, 16, !dbg !10084
  %shr = ashr i32 %add11, 5, !dbg !10085
  %sub12 = sub i32 %14, %shr, !dbg !10086
  %27 = load i32, i32* %i, align 4, !dbg !10087
  %idxprom13 = sext i32 %27 to i64, !dbg !10088
  %28 = load i32*, i32** %b2, align 8, !dbg !10088
  %arrayidx14 = getelementptr inbounds i32, i32* %28, i64 %idxprom13, !dbg !10088
  store i32 %sub12, i32* %arrayidx14, align 4, !dbg !10089
  br label %for.inc, !dbg !10090

for.inc:                                          ; preds = %for.body
  %29 = load i32, i32* %i, align 4, !dbg !10091
  %inc = add nsw i32 %29, 1, !dbg !10091
  store i32 %inc, i32* %i, align 4, !dbg !10091
  br label %for.cond, !dbg !10093, !llvm.loop !10094

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10096
}

; Function Attrs: nounwind uwtable
define internal void @horizontal_compose_dd137i_12bit(i8* %_b, i8* %_tmp, i32 %w) #0 !dbg !10097 {
entry:
  %_b.addr = alloca i8*, align 8
  %_tmp.addr = alloca i8*, align 8
  %w.addr = alloca i32, align 4
  %w2 = alloca i32, align 4
  %x = alloca i32, align 4
  %b = alloca i32*, align 8
  %tmp = alloca i32*, align 8
  store i8* %_b, i8** %_b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b.addr, metadata !10098, metadata !87), !dbg !10099
  store i8* %_tmp, i8** %_tmp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_tmp.addr, metadata !10100, metadata !87), !dbg !10101
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !10102, metadata !87), !dbg !10103
  call void @llvm.dbg.declare(metadata i32* %w2, metadata !10104, metadata !87), !dbg !10105
  %0 = load i32, i32* %w.addr, align 4, !dbg !10106
  %shr = ashr i32 %0, 1, !dbg !10107
  store i32 %shr, i32* %w2, align 4, !dbg !10105
  call void @llvm.dbg.declare(metadata i32* %x, metadata !10108, metadata !87), !dbg !10109
  call void @llvm.dbg.declare(metadata i32** %b, metadata !10110, metadata !87), !dbg !10111
  %1 = load i8*, i8** %_b.addr, align 8, !dbg !10112
  %2 = bitcast i8* %1 to i32*, !dbg !10113
  store i32* %2, i32** %b, align 8, !dbg !10111
  call void @llvm.dbg.declare(metadata i32** %tmp, metadata !10114, metadata !87), !dbg !10115
  %3 = load i8*, i8** %_tmp.addr, align 8, !dbg !10116
  %4 = bitcast i8* %3 to i32*, !dbg !10117
  store i32* %4, i32** %tmp, align 8, !dbg !10115
  %5 = load i32*, i32** %b, align 8, !dbg !10118
  %arrayidx = getelementptr inbounds i32, i32* %5, i64 0, !dbg !10118
  %6 = load i32, i32* %arrayidx, align 4, !dbg !10118
  %7 = load i32, i32* %w2, align 4, !dbg !10119
  %idxprom = sext i32 %7 to i64, !dbg !10120
  %8 = load i32*, i32** %b, align 8, !dbg !10120
  %arrayidx1 = getelementptr inbounds i32, i32* %8, i64 %idxprom, !dbg !10120
  %9 = load i32, i32* %arrayidx1, align 4, !dbg !10120
  %mul = mul i32 9, %9, !dbg !10121
  %10 = load i32, i32* %w2, align 4, !dbg !10122
  %idxprom2 = sext i32 %10 to i64, !dbg !10123
  %11 = load i32*, i32** %b, align 8, !dbg !10123
  %arrayidx3 = getelementptr inbounds i32, i32* %11, i64 %idxprom2, !dbg !10123
  %12 = load i32, i32* %arrayidx3, align 4, !dbg !10123
  %mul4 = mul i32 9, %12, !dbg !10124
  %add = add i32 %mul, %mul4, !dbg !10125
  %13 = load i32, i32* %w2, align 4, !dbg !10126
  %add5 = add nsw i32 %13, 1, !dbg !10127
  %idxprom6 = sext i32 %add5 to i64, !dbg !10128
  %14 = load i32*, i32** %b, align 8, !dbg !10128
  %arrayidx7 = getelementptr inbounds i32, i32* %14, i64 %idxprom6, !dbg !10128
  %15 = load i32, i32* %arrayidx7, align 4, !dbg !10128
  %sub = sub i32 %add, %15, !dbg !10129
  %16 = load i32, i32* %w2, align 4, !dbg !10130
  %idxprom8 = sext i32 %16 to i64, !dbg !10131
  %17 = load i32*, i32** %b, align 8, !dbg !10131
  %arrayidx9 = getelementptr inbounds i32, i32* %17, i64 %idxprom8, !dbg !10131
  %18 = load i32, i32* %arrayidx9, align 4, !dbg !10131
  %sub10 = sub i32 %sub, %18, !dbg !10132
  %add11 = add i32 %sub10, 16, !dbg !10133
  %shr12 = ashr i32 %add11, 5, !dbg !10134
  %sub13 = sub i32 %6, %shr12, !dbg !10135
  %19 = load i32*, i32** %tmp, align 8, !dbg !10136
  %arrayidx14 = getelementptr inbounds i32, i32* %19, i64 0, !dbg !10136
  store i32 %sub13, i32* %arrayidx14, align 4, !dbg !10137
  %20 = load i32*, i32** %b, align 8, !dbg !10138
  %arrayidx15 = getelementptr inbounds i32, i32* %20, i64 1, !dbg !10138
  %21 = load i32, i32* %arrayidx15, align 4, !dbg !10138
  %22 = load i32, i32* %w2, align 4, !dbg !10139
  %idxprom16 = sext i32 %22 to i64, !dbg !10140
  %23 = load i32*, i32** %b, align 8, !dbg !10140
  %arrayidx17 = getelementptr inbounds i32, i32* %23, i64 %idxprom16, !dbg !10140
  %24 = load i32, i32* %arrayidx17, align 4, !dbg !10140
  %mul18 = mul i32 9, %24, !dbg !10141
  %25 = load i32, i32* %w2, align 4, !dbg !10142
  %add19 = add nsw i32 %25, 1, !dbg !10143
  %idxprom20 = sext i32 %add19 to i64, !dbg !10144
  %26 = load i32*, i32** %b, align 8, !dbg !10144
  %arrayidx21 = getelementptr inbounds i32, i32* %26, i64 %idxprom20, !dbg !10144
  %27 = load i32, i32* %arrayidx21, align 4, !dbg !10144
  %mul22 = mul i32 9, %27, !dbg !10145
  %add23 = add i32 %mul18, %mul22, !dbg !10146
  %28 = load i32, i32* %w2, align 4, !dbg !10147
  %add24 = add nsw i32 %28, 2, !dbg !10148
  %idxprom25 = sext i32 %add24 to i64, !dbg !10149
  %29 = load i32*, i32** %b, align 8, !dbg !10149
  %arrayidx26 = getelementptr inbounds i32, i32* %29, i64 %idxprom25, !dbg !10149
  %30 = load i32, i32* %arrayidx26, align 4, !dbg !10149
  %sub27 = sub i32 %add23, %30, !dbg !10150
  %31 = load i32, i32* %w2, align 4, !dbg !10151
  %idxprom28 = sext i32 %31 to i64, !dbg !10152
  %32 = load i32*, i32** %b, align 8, !dbg !10152
  %arrayidx29 = getelementptr inbounds i32, i32* %32, i64 %idxprom28, !dbg !10152
  %33 = load i32, i32* %arrayidx29, align 4, !dbg !10152
  %sub30 = sub i32 %sub27, %33, !dbg !10153
  %add31 = add i32 %sub30, 16, !dbg !10154
  %shr32 = ashr i32 %add31, 5, !dbg !10155
  %sub33 = sub i32 %21, %shr32, !dbg !10156
  %34 = load i32*, i32** %tmp, align 8, !dbg !10157
  %arrayidx34 = getelementptr inbounds i32, i32* %34, i64 1, !dbg !10157
  store i32 %sub33, i32* %arrayidx34, align 4, !dbg !10158
  store i32 2, i32* %x, align 4, !dbg !10159
  br label %for.cond, !dbg !10161

for.cond:                                         ; preds = %for.inc, %entry
  %35 = load i32, i32* %x, align 4, !dbg !10162
  %36 = load i32, i32* %w2, align 4, !dbg !10165
  %sub35 = sub nsw i32 %36, 1, !dbg !10166
  %cmp = icmp slt i32 %35, %sub35, !dbg !10167
  br i1 %cmp, label %for.body, label %for.end, !dbg !10168

for.body:                                         ; preds = %for.cond
  %37 = load i32, i32* %x, align 4, !dbg !10169
  %idxprom36 = sext i32 %37 to i64, !dbg !10170
  %38 = load i32*, i32** %b, align 8, !dbg !10170
  %arrayidx37 = getelementptr inbounds i32, i32* %38, i64 %idxprom36, !dbg !10170
  %39 = load i32, i32* %arrayidx37, align 4, !dbg !10170
  %40 = load i32, i32* %x, align 4, !dbg !10171
  %41 = load i32, i32* %w2, align 4, !dbg !10172
  %add38 = add nsw i32 %40, %41, !dbg !10173
  %sub39 = sub nsw i32 %add38, 1, !dbg !10174
  %idxprom40 = sext i32 %sub39 to i64, !dbg !10175
  %42 = load i32*, i32** %b, align 8, !dbg !10175
  %arrayidx41 = getelementptr inbounds i32, i32* %42, i64 %idxprom40, !dbg !10175
  %43 = load i32, i32* %arrayidx41, align 4, !dbg !10175
  %mul42 = mul i32 9, %43, !dbg !10176
  %44 = load i32, i32* %x, align 4, !dbg !10177
  %45 = load i32, i32* %w2, align 4, !dbg !10178
  %add43 = add nsw i32 %44, %45, !dbg !10179
  %idxprom44 = sext i32 %add43 to i64, !dbg !10180
  %46 = load i32*, i32** %b, align 8, !dbg !10180
  %arrayidx45 = getelementptr inbounds i32, i32* %46, i64 %idxprom44, !dbg !10180
  %47 = load i32, i32* %arrayidx45, align 4, !dbg !10180
  %mul46 = mul i32 9, %47, !dbg !10181
  %add47 = add i32 %mul42, %mul46, !dbg !10182
  %48 = load i32, i32* %x, align 4, !dbg !10183
  %49 = load i32, i32* %w2, align 4, !dbg !10184
  %add48 = add nsw i32 %48, %49, !dbg !10185
  %add49 = add nsw i32 %add48, 1, !dbg !10186
  %idxprom50 = sext i32 %add49 to i64, !dbg !10187
  %50 = load i32*, i32** %b, align 8, !dbg !10187
  %arrayidx51 = getelementptr inbounds i32, i32* %50, i64 %idxprom50, !dbg !10187
  %51 = load i32, i32* %arrayidx51, align 4, !dbg !10187
  %sub52 = sub i32 %add47, %51, !dbg !10188
  %52 = load i32, i32* %x, align 4, !dbg !10189
  %53 = load i32, i32* %w2, align 4, !dbg !10190
  %add53 = add nsw i32 %52, %53, !dbg !10191
  %sub54 = sub nsw i32 %add53, 2, !dbg !10192
  %idxprom55 = sext i32 %sub54 to i64, !dbg !10193
  %54 = load i32*, i32** %b, align 8, !dbg !10193
  %arrayidx56 = getelementptr inbounds i32, i32* %54, i64 %idxprom55, !dbg !10193
  %55 = load i32, i32* %arrayidx56, align 4, !dbg !10193
  %sub57 = sub i32 %sub52, %55, !dbg !10194
  %add58 = add i32 %sub57, 16, !dbg !10195
  %shr59 = ashr i32 %add58, 5, !dbg !10196
  %sub60 = sub i32 %39, %shr59, !dbg !10197
  %56 = load i32, i32* %x, align 4, !dbg !10198
  %idxprom61 = sext i32 %56 to i64, !dbg !10199
  %57 = load i32*, i32** %tmp, align 8, !dbg !10199
  %arrayidx62 = getelementptr inbounds i32, i32* %57, i64 %idxprom61, !dbg !10199
  store i32 %sub60, i32* %arrayidx62, align 4, !dbg !10200
  br label %for.inc, !dbg !10199

for.inc:                                          ; preds = %for.body
  %58 = load i32, i32* %x, align 4, !dbg !10201
  %inc = add nsw i32 %58, 1, !dbg !10201
  store i32 %inc, i32* %x, align 4, !dbg !10201
  br label %for.cond, !dbg !10203, !llvm.loop !10204

for.end:                                          ; preds = %for.cond
  %59 = load i32, i32* %w2, align 4, !dbg !10206
  %sub63 = sub nsw i32 %59, 1, !dbg !10207
  %idxprom64 = sext i32 %sub63 to i64, !dbg !10208
  %60 = load i32*, i32** %b, align 8, !dbg !10208
  %arrayidx65 = getelementptr inbounds i32, i32* %60, i64 %idxprom64, !dbg !10208
  %61 = load i32, i32* %arrayidx65, align 4, !dbg !10208
  %62 = load i32, i32* %w.addr, align 4, !dbg !10209
  %sub66 = sub nsw i32 %62, 2, !dbg !10210
  %idxprom67 = sext i32 %sub66 to i64, !dbg !10211
  %63 = load i32*, i32** %b, align 8, !dbg !10211
  %arrayidx68 = getelementptr inbounds i32, i32* %63, i64 %idxprom67, !dbg !10211
  %64 = load i32, i32* %arrayidx68, align 4, !dbg !10211
  %mul69 = mul i32 9, %64, !dbg !10212
  %65 = load i32, i32* %w.addr, align 4, !dbg !10213
  %sub70 = sub nsw i32 %65, 1, !dbg !10214
  %idxprom71 = sext i32 %sub70 to i64, !dbg !10215
  %66 = load i32*, i32** %b, align 8, !dbg !10215
  %arrayidx72 = getelementptr inbounds i32, i32* %66, i64 %idxprom71, !dbg !10215
  %67 = load i32, i32* %arrayidx72, align 4, !dbg !10215
  %mul73 = mul i32 9, %67, !dbg !10216
  %add74 = add i32 %mul69, %mul73, !dbg !10217
  %68 = load i32, i32* %w.addr, align 4, !dbg !10218
  %sub75 = sub nsw i32 %68, 1, !dbg !10219
  %idxprom76 = sext i32 %sub75 to i64, !dbg !10220
  %69 = load i32*, i32** %b, align 8, !dbg !10220
  %arrayidx77 = getelementptr inbounds i32, i32* %69, i64 %idxprom76, !dbg !10220
  %70 = load i32, i32* %arrayidx77, align 4, !dbg !10220
  %sub78 = sub i32 %add74, %70, !dbg !10221
  %71 = load i32, i32* %w.addr, align 4, !dbg !10222
  %sub79 = sub nsw i32 %71, 3, !dbg !10223
  %idxprom80 = sext i32 %sub79 to i64, !dbg !10224
  %72 = load i32*, i32** %b, align 8, !dbg !10224
  %arrayidx81 = getelementptr inbounds i32, i32* %72, i64 %idxprom80, !dbg !10224
  %73 = load i32, i32* %arrayidx81, align 4, !dbg !10224
  %sub82 = sub i32 %sub78, %73, !dbg !10225
  %add83 = add i32 %sub82, 16, !dbg !10226
  %shr84 = ashr i32 %add83, 5, !dbg !10227
  %sub85 = sub i32 %61, %shr84, !dbg !10228
  %74 = load i32, i32* %w2, align 4, !dbg !10229
  %sub86 = sub nsw i32 %74, 1, !dbg !10230
  %idxprom87 = sext i32 %sub86 to i64, !dbg !10231
  %75 = load i32*, i32** %tmp, align 8, !dbg !10231
  %arrayidx88 = getelementptr inbounds i32, i32* %75, i64 %idxprom87, !dbg !10231
  store i32 %sub85, i32* %arrayidx88, align 4, !dbg !10232
  %76 = load i32*, i32** %tmp, align 8, !dbg !10233
  %arrayidx89 = getelementptr inbounds i32, i32* %76, i64 0, !dbg !10233
  %77 = load i32, i32* %arrayidx89, align 4, !dbg !10233
  %78 = load i32*, i32** %tmp, align 8, !dbg !10234
  %arrayidx90 = getelementptr inbounds i32, i32* %78, i64 -1, !dbg !10234
  store i32 %77, i32* %arrayidx90, align 4, !dbg !10235
  %79 = load i32, i32* %w2, align 4, !dbg !10236
  %sub91 = sub nsw i32 %79, 1, !dbg !10237
  %idxprom92 = sext i32 %sub91 to i64, !dbg !10238
  %80 = load i32*, i32** %tmp, align 8, !dbg !10238
  %arrayidx93 = getelementptr inbounds i32, i32* %80, i64 %idxprom92, !dbg !10238
  %81 = load i32, i32* %arrayidx93, align 4, !dbg !10238
  %82 = load i32, i32* %w2, align 4, !dbg !10239
  %idxprom94 = sext i32 %82 to i64, !dbg !10240
  %83 = load i32*, i32** %tmp, align 8, !dbg !10240
  %arrayidx95 = getelementptr inbounds i32, i32* %83, i64 %idxprom94, !dbg !10240
  store i32 %81, i32* %arrayidx95, align 4, !dbg !10241
  %84 = load i32, i32* %w2, align 4, !dbg !10242
  %add96 = add nsw i32 %84, 1, !dbg !10243
  %idxprom97 = sext i32 %add96 to i64, !dbg !10244
  %85 = load i32*, i32** %tmp, align 8, !dbg !10244
  %arrayidx98 = getelementptr inbounds i32, i32* %85, i64 %idxprom97, !dbg !10244
  store i32 %81, i32* %arrayidx98, align 4, !dbg !10245
  store i32 0, i32* %x, align 4, !dbg !10246
  br label %for.cond99, !dbg !10248

for.cond99:                                       ; preds = %for.inc137, %for.end
  %86 = load i32, i32* %x, align 4, !dbg !10249
  %87 = load i32, i32* %w2, align 4, !dbg !10252
  %cmp100 = icmp slt i32 %86, %87, !dbg !10253
  br i1 %cmp100, label %for.body101, label %for.end139, !dbg !10254

for.body101:                                      ; preds = %for.cond99
  %88 = load i32, i32* %x, align 4, !dbg !10255
  %idxprom102 = sext i32 %88 to i64, !dbg !10257
  %89 = load i32*, i32** %tmp, align 8, !dbg !10257
  %arrayidx103 = getelementptr inbounds i32, i32* %89, i64 %idxprom102, !dbg !10257
  %90 = load i32, i32* %arrayidx103, align 4, !dbg !10257
  %add104 = add i32 %90, 1, !dbg !10258
  %shr105 = ashr i32 %add104, 1, !dbg !10259
  %91 = load i32, i32* %x, align 4, !dbg !10260
  %mul106 = mul nsw i32 2, %91, !dbg !10261
  %idxprom107 = sext i32 %mul106 to i64, !dbg !10262
  %92 = load i32*, i32** %b, align 8, !dbg !10262
  %arrayidx108 = getelementptr inbounds i32, i32* %92, i64 %idxprom107, !dbg !10262
  store i32 %shr105, i32* %arrayidx108, align 4, !dbg !10263
  %93 = load i32, i32* %x, align 4, !dbg !10264
  %94 = load i32, i32* %w2, align 4, !dbg !10265
  %add109 = add nsw i32 %93, %94, !dbg !10266
  %idxprom110 = sext i32 %add109 to i64, !dbg !10267
  %95 = load i32*, i32** %b, align 8, !dbg !10267
  %arrayidx111 = getelementptr inbounds i32, i32* %95, i64 %idxprom110, !dbg !10267
  %96 = load i32, i32* %arrayidx111, align 4, !dbg !10267
  %97 = load i32, i32* %x, align 4, !dbg !10268
  %idxprom112 = sext i32 %97 to i64, !dbg !10269
  %98 = load i32*, i32** %tmp, align 8, !dbg !10269
  %arrayidx113 = getelementptr inbounds i32, i32* %98, i64 %idxprom112, !dbg !10269
  %99 = load i32, i32* %arrayidx113, align 4, !dbg !10269
  %mul114 = mul i32 9, %99, !dbg !10270
  %100 = load i32, i32* %x, align 4, !dbg !10271
  %add115 = add nsw i32 %100, 1, !dbg !10272
  %idxprom116 = sext i32 %add115 to i64, !dbg !10273
  %101 = load i32*, i32** %tmp, align 8, !dbg !10273
  %arrayidx117 = getelementptr inbounds i32, i32* %101, i64 %idxprom116, !dbg !10273
  %102 = load i32, i32* %arrayidx117, align 4, !dbg !10273
  %mul118 = mul i32 9, %102, !dbg !10274
  %add119 = add i32 %mul114, %mul118, !dbg !10275
  %103 = load i32, i32* %x, align 4, !dbg !10276
  %add120 = add nsw i32 %103, 2, !dbg !10277
  %idxprom121 = sext i32 %add120 to i64, !dbg !10278
  %104 = load i32*, i32** %tmp, align 8, !dbg !10278
  %arrayidx122 = getelementptr inbounds i32, i32* %104, i64 %idxprom121, !dbg !10278
  %105 = load i32, i32* %arrayidx122, align 4, !dbg !10278
  %sub123 = sub i32 %add119, %105, !dbg !10279
  %106 = load i32, i32* %x, align 4, !dbg !10280
  %sub124 = sub nsw i32 %106, 1, !dbg !10281
  %idxprom125 = sext i32 %sub124 to i64, !dbg !10282
  %107 = load i32*, i32** %tmp, align 8, !dbg !10282
  %arrayidx126 = getelementptr inbounds i32, i32* %107, i64 %idxprom125, !dbg !10282
  %108 = load i32, i32* %arrayidx126, align 4, !dbg !10282
  %sub127 = sub i32 %sub123, %108, !dbg !10283
  %add128 = add i32 %sub127, 8, !dbg !10284
  %shr129 = ashr i32 %add128, 4, !dbg !10285
  %add130 = add i32 %96, %shr129, !dbg !10286
  %add131 = add i32 %add130, 1, !dbg !10287
  %shr132 = ashr i32 %add131, 1, !dbg !10288
  %109 = load i32, i32* %x, align 4, !dbg !10289
  %mul133 = mul nsw i32 2, %109, !dbg !10290
  %add134 = add nsw i32 %mul133, 1, !dbg !10291
  %idxprom135 = sext i32 %add134 to i64, !dbg !10292
  %110 = load i32*, i32** %b, align 8, !dbg !10292
  %arrayidx136 = getelementptr inbounds i32, i32* %110, i64 %idxprom135, !dbg !10292
  store i32 %shr132, i32* %arrayidx136, align 4, !dbg !10293
  br label %for.inc137, !dbg !10294

for.inc137:                                       ; preds = %for.body101
  %111 = load i32, i32* %x, align 4, !dbg !10295
  %inc138 = add nsw i32 %111, 1, !dbg !10295
  store i32 %inc138, i32* %x, align 4, !dbg !10295
  br label %for.cond99, !dbg !10297, !llvm.loop !10298

for.end139:                                       ; preds = %for.cond99
  ret void, !dbg !10300
}

; Function Attrs: nounwind uwtable
define internal void @spatial_compose_haari_dy_12bit(%struct.DWTContext* %d, i32 %level, i32 %width, i32 %height, i32 %stride) #0 !dbg !10301 {
entry:
  %d.addr = alloca %struct.DWTContext*, align 8
  %level.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  %vertical_compose = alloca void (i8*, i8*, i32)*, align 8
  %y = alloca i32, align 4
  %b0 = alloca i8*, align 8
  %b1 = alloca i8*, align 8
  store %struct.DWTContext* %d, %struct.DWTContext** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTContext** %d.addr, metadata !10302, metadata !87), !dbg !10303
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !10304, metadata !87), !dbg !10305
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !10306, metadata !87), !dbg !10307
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !10308, metadata !87), !dbg !10309
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !10310, metadata !87), !dbg !10311
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i32)** %vertical_compose, metadata !10312, metadata !87), !dbg !10313
  %0 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !10314
  %vertical_compose1 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %0, i32 0, i32 12, !dbg !10315
  %1 = load void ()*, void ()** %vertical_compose1, align 8, !dbg !10315
  %2 = bitcast void ()* %1 to i8*, !dbg !10316
  %3 = bitcast i8* %2 to void (i8*, i8*, i32)*, !dbg !10316
  store void (i8*, i8*, i32)* %3, void (i8*, i8*, i32)** %vertical_compose, align 8, !dbg !10313
  call void @llvm.dbg.declare(metadata i32* %y, metadata !10317, metadata !87), !dbg !10318
  %4 = load i32, i32* %level.addr, align 4, !dbg !10319
  %idxprom = sext i32 %4 to i64, !dbg !10320
  %5 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !10320
  %cs = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %5, i32 0, i32 14, !dbg !10321
  %arrayidx = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs, i64 0, i64 %idxprom, !dbg !10320
  %y2 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arrayidx, i32 0, i32 1, !dbg !10322
  %6 = load i32, i32* %y2, align 8, !dbg !10322
  store i32 %6, i32* %y, align 4, !dbg !10318
  call void @llvm.dbg.declare(metadata i8** %b0, metadata !10323, metadata !87), !dbg !10324
  %7 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !10325
  %buffer = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %7, i32 0, i32 0, !dbg !10326
  %8 = load i8*, i8** %buffer, align 8, !dbg !10326
  %9 = load i32, i32* %y, align 4, !dbg !10327
  %sub = sub nsw i32 %9, 1, !dbg !10328
  %10 = load i32, i32* %stride.addr, align 4, !dbg !10329
  %mul = mul nsw i32 %sub, %10, !dbg !10330
  %idx.ext = sext i32 %mul to i64, !dbg !10331
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext, !dbg !10331
  store i8* %add.ptr, i8** %b0, align 8, !dbg !10324
  call void @llvm.dbg.declare(metadata i8** %b1, metadata !10332, metadata !87), !dbg !10333
  %11 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !10334
  %buffer3 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %11, i32 0, i32 0, !dbg !10335
  %12 = load i8*, i8** %buffer3, align 8, !dbg !10335
  %13 = load i32, i32* %y, align 4, !dbg !10336
  %14 = load i32, i32* %stride.addr, align 4, !dbg !10337
  %mul4 = mul nsw i32 %13, %14, !dbg !10338
  %idx.ext5 = sext i32 %mul4 to i64, !dbg !10339
  %add.ptr6 = getelementptr inbounds i8, i8* %12, i64 %idx.ext5, !dbg !10339
  store i8* %add.ptr6, i8** %b1, align 8, !dbg !10333
  %15 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %vertical_compose, align 8, !dbg !10340
  %16 = load i8*, i8** %b0, align 8, !dbg !10341
  %17 = load i8*, i8** %b1, align 8, !dbg !10342
  %18 = load i32, i32* %width.addr, align 4, !dbg !10343
  call void %15(i8* %16, i8* %17, i32 %18), !dbg !10340
  %19 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !10344
  %horizontal_compose = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %19, i32 0, i32 13, !dbg !10345
  %20 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %horizontal_compose, align 8, !dbg !10345
  %21 = load i8*, i8** %b0, align 8, !dbg !10346
  %22 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !10347
  %temp = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %22, i32 0, i32 1, !dbg !10348
  %23 = load i8*, i8** %temp, align 8, !dbg !10348
  %24 = load i32, i32* %width.addr, align 4, !dbg !10349
  call void %20(i8* %21, i8* %23, i32 %24), !dbg !10344
  %25 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !10350
  %horizontal_compose7 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %25, i32 0, i32 13, !dbg !10351
  %26 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %horizontal_compose7, align 8, !dbg !10351
  %27 = load i8*, i8** %b1, align 8, !dbg !10352
  %28 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !10353
  %temp8 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %28, i32 0, i32 1, !dbg !10354
  %29 = load i8*, i8** %temp8, align 8, !dbg !10354
  %30 = load i32, i32* %width.addr, align 4, !dbg !10355
  call void %26(i8* %27, i8* %29, i32 %30), !dbg !10350
  %31 = load i32, i32* %level.addr, align 4, !dbg !10356
  %idxprom9 = sext i32 %31 to i64, !dbg !10357
  %32 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !10357
  %cs10 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %32, i32 0, i32 14, !dbg !10358
  %arrayidx11 = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs10, i64 0, i64 %idxprom9, !dbg !10357
  %y12 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arrayidx11, i32 0, i32 1, !dbg !10359
  %33 = load i32, i32* %y12, align 8, !dbg !10360
  %add = add nsw i32 %33, 2, !dbg !10360
  store i32 %add, i32* %y12, align 8, !dbg !10360
  ret void, !dbg !10361
}

; Function Attrs: nounwind uwtable
define internal void @vertical_compose_haar_12bit(i8* %_b0, i8* %_b1, i32 %width) #0 !dbg !10362 {
entry:
  %_b0.addr = alloca i8*, align 8
  %_b1.addr = alloca i8*, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %b0 = alloca i32*, align 8
  %b1 = alloca i32*, align 8
  store i8* %_b0, i8** %_b0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b0.addr, metadata !10363, metadata !87), !dbg !10364
  store i8* %_b1, i8** %_b1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b1.addr, metadata !10365, metadata !87), !dbg !10366
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !10367, metadata !87), !dbg !10368
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10369, metadata !87), !dbg !10370
  call void @llvm.dbg.declare(metadata i32** %b0, metadata !10371, metadata !87), !dbg !10372
  %0 = load i8*, i8** %_b0.addr, align 8, !dbg !10373
  %1 = bitcast i8* %0 to i32*, !dbg !10374
  store i32* %1, i32** %b0, align 8, !dbg !10372
  call void @llvm.dbg.declare(metadata i32** %b1, metadata !10375, metadata !87), !dbg !10376
  %2 = load i8*, i8** %_b1.addr, align 8, !dbg !10377
  %3 = bitcast i8* %2 to i32*, !dbg !10378
  store i32* %3, i32** %b1, align 8, !dbg !10376
  store i32 0, i32* %i, align 4, !dbg !10379
  br label %for.cond, !dbg !10381

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !10382
  %5 = load i32, i32* %width.addr, align 4, !dbg !10385
  %cmp = icmp slt i32 %4, %5, !dbg !10386
  br i1 %cmp, label %for.body, label %for.end, !dbg !10387

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !10388
  %idxprom = sext i32 %6 to i64, !dbg !10390
  %7 = load i32*, i32** %b0, align 8, !dbg !10390
  %arrayidx = getelementptr inbounds i32, i32* %7, i64 %idxprom, !dbg !10390
  %8 = load i32, i32* %arrayidx, align 4, !dbg !10390
  %9 = load i32, i32* %i, align 4, !dbg !10391
  %idxprom1 = sext i32 %9 to i64, !dbg !10392
  %10 = load i32*, i32** %b1, align 8, !dbg !10392
  %arrayidx2 = getelementptr inbounds i32, i32* %10, i64 %idxprom1, !dbg !10392
  %11 = load i32, i32* %arrayidx2, align 4, !dbg !10392
  %add = add i32 %11, 1, !dbg !10393
  %shr = ashr i32 %add, 1, !dbg !10394
  %sub = sub i32 %8, %shr, !dbg !10395
  %12 = load i32, i32* %i, align 4, !dbg !10396
  %idxprom3 = sext i32 %12 to i64, !dbg !10397
  %13 = load i32*, i32** %b0, align 8, !dbg !10397
  %arrayidx4 = getelementptr inbounds i32, i32* %13, i64 %idxprom3, !dbg !10397
  store i32 %sub, i32* %arrayidx4, align 4, !dbg !10398
  %14 = load i32, i32* %i, align 4, !dbg !10399
  %idxprom5 = sext i32 %14 to i64, !dbg !10400
  %15 = load i32*, i32** %b1, align 8, !dbg !10400
  %arrayidx6 = getelementptr inbounds i32, i32* %15, i64 %idxprom5, !dbg !10400
  %16 = load i32, i32* %arrayidx6, align 4, !dbg !10400
  %17 = load i32, i32* %i, align 4, !dbg !10401
  %idxprom7 = sext i32 %17 to i64, !dbg !10402
  %18 = load i32*, i32** %b0, align 8, !dbg !10402
  %arrayidx8 = getelementptr inbounds i32, i32* %18, i64 %idxprom7, !dbg !10402
  %19 = load i32, i32* %arrayidx8, align 4, !dbg !10402
  %add9 = add i32 %16, %19, !dbg !10403
  %20 = load i32, i32* %i, align 4, !dbg !10404
  %idxprom10 = sext i32 %20 to i64, !dbg !10405
  %21 = load i32*, i32** %b1, align 8, !dbg !10405
  %arrayidx11 = getelementptr inbounds i32, i32* %21, i64 %idxprom10, !dbg !10405
  store i32 %add9, i32* %arrayidx11, align 4, !dbg !10406
  br label %for.inc, !dbg !10407

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %i, align 4, !dbg !10408
  %inc = add nsw i32 %22, 1, !dbg !10408
  store i32 %inc, i32* %i, align 4, !dbg !10408
  br label %for.cond, !dbg !10410, !llvm.loop !10411

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10413
}

; Function Attrs: nounwind uwtable
define internal void @horizontal_compose_haar0i_12bit(i8* %_b, i8* %_temp, i32 %w) #0 !dbg !10414 {
entry:
  %dst.addr.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %dst.addr.i.i, metadata !9668, metadata !87), !dbg !10415
  %src0.addr.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %src0.addr.i.i, metadata !9672, metadata !87), !dbg !10419
  %src1.addr.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %src1.addr.i.i, metadata !9674, metadata !87), !dbg !10420
  %w2.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w2.addr.i.i, metadata !9676, metadata !87), !dbg !10421
  %add.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %add.addr.i.i, metadata !9678, metadata !87), !dbg !10422
  %shift.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %shift.addr.i.i, metadata !9680, metadata !87), !dbg !10423
  %i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i.i, metadata !9682, metadata !87), !dbg !10424
  %b.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %b.addr.i, metadata !10425, metadata !87), !dbg !10426
  %temp.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %temp.addr.i, metadata !10427, metadata !87), !dbg !10428
  %w.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i, metadata !10429, metadata !87), !dbg !10430
  %shift.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %shift.addr.i, metadata !10431, metadata !87), !dbg !10432
  %w2.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w2.i, metadata !10433, metadata !87), !dbg !10434
  %x.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.i, metadata !10435, metadata !87), !dbg !10436
  %_b.addr = alloca i8*, align 8
  %_temp.addr = alloca i8*, align 8
  %w.addr = alloca i32, align 4
  %b = alloca i32*, align 8
  %temp = alloca i32*, align 8
  store i8* %_b, i8** %_b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b.addr, metadata !10437, metadata !87), !dbg !10438
  store i8* %_temp, i8** %_temp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_temp.addr, metadata !10439, metadata !87), !dbg !10440
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !10441, metadata !87), !dbg !10442
  call void @llvm.dbg.declare(metadata i32** %b, metadata !10443, metadata !87), !dbg !10444
  %0 = load i8*, i8** %_b.addr, align 8, !dbg !10445
  %1 = bitcast i8* %0 to i32*, !dbg !10446
  store i32* %1, i32** %b, align 8, !dbg !10444
  call void @llvm.dbg.declare(metadata i32** %temp, metadata !10447, metadata !87), !dbg !10448
  %2 = load i8*, i8** %_temp.addr, align 8, !dbg !10449
  %3 = bitcast i8* %2 to i32*, !dbg !10450
  store i32* %3, i32** %temp, align 8, !dbg !10448
  %4 = load i32*, i32** %b, align 8, !dbg !10451
  %5 = load i32*, i32** %temp, align 8, !dbg !10452
  %6 = load i32, i32* %w.addr, align 4, !dbg !10453
  store i32* %4, i32** %b.addr.i, align 8, !dbg !10454
  store i32* %5, i32** %temp.addr.i, align 8, !dbg !10454
  store i32 %6, i32* %w.addr.i, align 4, !dbg !10454
  store i32 0, i32* %shift.addr.i, align 4, !dbg !10454
  %7 = load i32, i32* %w.addr.i, align 4, !dbg !10455
  %shr.i = ashr i32 %7, 1, !dbg !10456
  store i32 %shr.i, i32* %w2.i, align 4, !dbg !10434
  store i32 0, i32* %x.i, align 4, !dbg !10457
  br label %for.cond.i, !dbg !10459

for.cond.i:                                       ; preds = %for.body.i, %entry
  %8 = load i32, i32* %x.i, align 4, !dbg !10460
  %9 = load i32, i32* %w2.i, align 4, !dbg !10463
  %cmp.i = icmp slt i32 %8, %9, !dbg !10464
  br i1 %cmp.i, label %for.body.i, label %for.end.i, !dbg !10465

for.body.i:                                       ; preds = %for.cond.i
  %10 = load i32, i32* %x.i, align 4, !dbg !10466
  %idxprom.i = sext i32 %10 to i64, !dbg !10468
  %11 = load i32*, i32** %b.addr.i, align 8, !dbg !10468
  %arrayidx.i = getelementptr inbounds i32, i32* %11, i64 %idxprom.i, !dbg !10468
  %12 = load i32, i32* %arrayidx.i, align 4, !dbg !10468
  %13 = load i32, i32* %x.i, align 4, !dbg !10469
  %14 = load i32, i32* %w2.i, align 4, !dbg !10470
  %add.i = add nsw i32 %13, %14, !dbg !10471
  %idxprom1.i = sext i32 %add.i to i64, !dbg !10472
  %15 = load i32*, i32** %b.addr.i, align 8, !dbg !10472
  %arrayidx2.i = getelementptr inbounds i32, i32* %15, i64 %idxprom1.i, !dbg !10472
  %16 = load i32, i32* %arrayidx2.i, align 4, !dbg !10472
  %add3.i = add i32 %16, 1, !dbg !10473
  %shr4.i = ashr i32 %add3.i, 1, !dbg !10474
  %sub.i = sub i32 %12, %shr4.i, !dbg !10475
  %17 = load i32, i32* %x.i, align 4, !dbg !10476
  %idxprom5.i = sext i32 %17 to i64, !dbg !10477
  %18 = load i32*, i32** %temp.addr.i, align 8, !dbg !10477
  %arrayidx6.i = getelementptr inbounds i32, i32* %18, i64 %idxprom5.i, !dbg !10477
  store i32 %sub.i, i32* %arrayidx6.i, align 4, !dbg !10478
  %19 = load i32, i32* %x.i, align 4, !dbg !10479
  %20 = load i32, i32* %w2.i, align 4, !dbg !10480
  %add7.i = add nsw i32 %19, %20, !dbg !10481
  %idxprom8.i = sext i32 %add7.i to i64, !dbg !10482
  %21 = load i32*, i32** %b.addr.i, align 8, !dbg !10482
  %arrayidx9.i = getelementptr inbounds i32, i32* %21, i64 %idxprom8.i, !dbg !10482
  %22 = load i32, i32* %arrayidx9.i, align 4, !dbg !10482
  %23 = load i32, i32* %x.i, align 4, !dbg !10483
  %idxprom10.i = sext i32 %23 to i64, !dbg !10484
  %24 = load i32*, i32** %temp.addr.i, align 8, !dbg !10484
  %arrayidx11.i = getelementptr inbounds i32, i32* %24, i64 %idxprom10.i, !dbg !10484
  %25 = load i32, i32* %arrayidx11.i, align 4, !dbg !10484
  %add12.i = add i32 %22, %25, !dbg !10485
  %26 = load i32, i32* %x.i, align 4, !dbg !10486
  %27 = load i32, i32* %w2.i, align 4, !dbg !10487
  %add13.i = add nsw i32 %26, %27, !dbg !10488
  %idxprom14.i = sext i32 %add13.i to i64, !dbg !10489
  %28 = load i32*, i32** %temp.addr.i, align 8, !dbg !10489
  %arrayidx15.i = getelementptr inbounds i32, i32* %28, i64 %idxprom14.i, !dbg !10489
  store i32 %add12.i, i32* %arrayidx15.i, align 4, !dbg !10490
  %29 = load i32, i32* %x.i, align 4, !dbg !10491
  %inc.i = add nsw i32 %29, 1, !dbg !10491
  store i32 %inc.i, i32* %x.i, align 4, !dbg !10491
  br label %for.cond.i, !dbg !10493, !llvm.loop !10494

for.end.i:                                        ; preds = %for.cond.i
  %30 = load i32*, i32** %b.addr.i, align 8, !dbg !10496
  %31 = load i32*, i32** %temp.addr.i, align 8, !dbg !10497
  %32 = load i32*, i32** %temp.addr.i, align 8, !dbg !10498
  %33 = load i32, i32* %w2.i, align 4, !dbg !10499
  %idx.ext.i = sext i32 %33 to i64, !dbg !10500
  %add.ptr.i = getelementptr inbounds i32, i32* %32, i64 %idx.ext.i, !dbg !10500
  %34 = load i32, i32* %w2.i, align 4, !dbg !10501
  %35 = load i32, i32* %shift.addr.i, align 4, !dbg !10502
  %36 = load i32, i32* %shift.addr.i, align 4, !dbg !10503
  store i32* %30, i32** %dst.addr.i.i, align 8, !dbg !10504
  store i32* %31, i32** %src0.addr.i.i, align 8, !dbg !10504
  store i32* %add.ptr.i, i32** %src1.addr.i.i, align 8, !dbg !10504
  store i32 %34, i32* %w2.addr.i.i, align 4, !dbg !10504
  store i32 %35, i32* %add.addr.i.i, align 4, !dbg !10504
  store i32 %36, i32* %shift.addr.i.i, align 4, !dbg !10504
  store i32 0, i32* %i.i.i, align 4, !dbg !10505
  br label %for.cond.i.i, !dbg !10506

for.cond.i.i:                                     ; preds = %for.body.i.i, %for.end.i
  %37 = load i32, i32* %i.i.i, align 4, !dbg !10507
  %38 = load i32, i32* %w2.addr.i.i, align 4, !dbg !10508
  %cmp.i.i = icmp slt i32 %37, %38, !dbg !10509
  br i1 %cmp.i.i, label %for.body.i.i, label %horizontal_compose_haari_12bit.exit, !dbg !10510

for.body.i.i:                                     ; preds = %for.cond.i.i
  %39 = load i32, i32* %i.i.i, align 4, !dbg !10511
  %idxprom.i.i = sext i32 %39 to i64, !dbg !10512
  %40 = load i32*, i32** %src0.addr.i.i, align 8, !dbg !10512
  %arrayidx.i.i = getelementptr inbounds i32, i32* %40, i64 %idxprom.i.i, !dbg !10512
  %41 = load i32, i32* %arrayidx.i.i, align 4, !dbg !10512
  %42 = load i32, i32* %add.addr.i.i, align 4, !dbg !10513
  %add1.i.i = add i32 %41, %42, !dbg !10514
  %43 = load i32, i32* %shift.addr.i.i, align 4, !dbg !10515
  %shr.i.i = ashr i32 %add1.i.i, %43, !dbg !10516
  %44 = load i32, i32* %i.i.i, align 4, !dbg !10517
  %mul.i.i = mul nsw i32 2, %44, !dbg !10518
  %idxprom2.i.i = sext i32 %mul.i.i to i64, !dbg !10519
  %45 = load i32*, i32** %dst.addr.i.i, align 8, !dbg !10519
  %arrayidx3.i.i = getelementptr inbounds i32, i32* %45, i64 %idxprom2.i.i, !dbg !10519
  store i32 %shr.i.i, i32* %arrayidx3.i.i, align 4, !dbg !10520
  %46 = load i32, i32* %i.i.i, align 4, !dbg !10521
  %idxprom4.i.i = sext i32 %46 to i64, !dbg !10522
  %47 = load i32*, i32** %src1.addr.i.i, align 8, !dbg !10522
  %arrayidx5.i.i = getelementptr inbounds i32, i32* %47, i64 %idxprom4.i.i, !dbg !10522
  %48 = load i32, i32* %arrayidx5.i.i, align 4, !dbg !10522
  %49 = load i32, i32* %add.addr.i.i, align 4, !dbg !10523
  %add6.i.i = add i32 %48, %49, !dbg !10524
  %50 = load i32, i32* %shift.addr.i.i, align 4, !dbg !10525
  %shr7.i.i = ashr i32 %add6.i.i, %50, !dbg !10526
  %51 = load i32, i32* %i.i.i, align 4, !dbg !10527
  %mul8.i.i = mul nsw i32 2, %51, !dbg !10528
  %add9.i.i = add nsw i32 %mul8.i.i, 1, !dbg !10529
  %idxprom10.i.i = sext i32 %add9.i.i to i64, !dbg !10530
  %52 = load i32*, i32** %dst.addr.i.i, align 8, !dbg !10530
  %arrayidx11.i.i = getelementptr inbounds i32, i32* %52, i64 %idxprom10.i.i, !dbg !10530
  store i32 %shr7.i.i, i32* %arrayidx11.i.i, align 4, !dbg !10531
  %53 = load i32, i32* %i.i.i, align 4, !dbg !10532
  %inc.i.i = add nsw i32 %53, 1, !dbg !10532
  store i32 %inc.i.i, i32* %i.i.i, align 4, !dbg !10532
  br label %for.cond.i.i, !dbg !10533, !llvm.loop !9827

horizontal_compose_haari_12bit.exit:              ; preds = %for.cond.i.i
  ret void, !dbg !10534
}

; Function Attrs: nounwind uwtable
define internal void @horizontal_compose_haar1i_12bit(i8* %_b, i8* %_temp, i32 %w) #0 !dbg !10535 {
entry:
  %dst.addr.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %dst.addr.i.i, metadata !9668, metadata !87), !dbg !10536
  %src0.addr.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %src0.addr.i.i, metadata !9672, metadata !87), !dbg !10539
  %src1.addr.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %src1.addr.i.i, metadata !9674, metadata !87), !dbg !10540
  %w2.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w2.addr.i.i, metadata !9676, metadata !87), !dbg !10541
  %add.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %add.addr.i.i, metadata !9678, metadata !87), !dbg !10542
  %shift.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %shift.addr.i.i, metadata !9680, metadata !87), !dbg !10543
  %i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i.i, metadata !9682, metadata !87), !dbg !10544
  %b.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %b.addr.i, metadata !10425, metadata !87), !dbg !10545
  %temp.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %temp.addr.i, metadata !10427, metadata !87), !dbg !10546
  %w.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i, metadata !10429, metadata !87), !dbg !10547
  %shift.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %shift.addr.i, metadata !10431, metadata !87), !dbg !10548
  %w2.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w2.i, metadata !10433, metadata !87), !dbg !10549
  %x.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.i, metadata !10435, metadata !87), !dbg !10550
  %_b.addr = alloca i8*, align 8
  %_temp.addr = alloca i8*, align 8
  %w.addr = alloca i32, align 4
  %b = alloca i32*, align 8
  %temp = alloca i32*, align 8
  store i8* %_b, i8** %_b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b.addr, metadata !10551, metadata !87), !dbg !10552
  store i8* %_temp, i8** %_temp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_temp.addr, metadata !10553, metadata !87), !dbg !10554
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !10555, metadata !87), !dbg !10556
  call void @llvm.dbg.declare(metadata i32** %b, metadata !10557, metadata !87), !dbg !10558
  %0 = load i8*, i8** %_b.addr, align 8, !dbg !10559
  %1 = bitcast i8* %0 to i32*, !dbg !10560
  store i32* %1, i32** %b, align 8, !dbg !10558
  call void @llvm.dbg.declare(metadata i32** %temp, metadata !10561, metadata !87), !dbg !10562
  %2 = load i8*, i8** %_temp.addr, align 8, !dbg !10563
  %3 = bitcast i8* %2 to i32*, !dbg !10564
  store i32* %3, i32** %temp, align 8, !dbg !10562
  %4 = load i32*, i32** %b, align 8, !dbg !10565
  %5 = load i32*, i32** %temp, align 8, !dbg !10566
  %6 = load i32, i32* %w.addr, align 4, !dbg !10567
  store i32* %4, i32** %b.addr.i, align 8, !dbg !10568
  store i32* %5, i32** %temp.addr.i, align 8, !dbg !10568
  store i32 %6, i32* %w.addr.i, align 4, !dbg !10568
  store i32 1, i32* %shift.addr.i, align 4, !dbg !10568
  %7 = load i32, i32* %w.addr.i, align 4, !dbg !10569
  %shr.i = ashr i32 %7, 1, !dbg !10570
  store i32 %shr.i, i32* %w2.i, align 4, !dbg !10549
  store i32 0, i32* %x.i, align 4, !dbg !10571
  br label %for.cond.i, !dbg !10572

for.cond.i:                                       ; preds = %for.body.i, %entry
  %8 = load i32, i32* %x.i, align 4, !dbg !10573
  %9 = load i32, i32* %w2.i, align 4, !dbg !10574
  %cmp.i = icmp slt i32 %8, %9, !dbg !10575
  br i1 %cmp.i, label %for.body.i, label %for.end.i, !dbg !10576

for.body.i:                                       ; preds = %for.cond.i
  %10 = load i32, i32* %x.i, align 4, !dbg !10577
  %idxprom.i = sext i32 %10 to i64, !dbg !10578
  %11 = load i32*, i32** %b.addr.i, align 8, !dbg !10578
  %arrayidx.i = getelementptr inbounds i32, i32* %11, i64 %idxprom.i, !dbg !10578
  %12 = load i32, i32* %arrayidx.i, align 4, !dbg !10578
  %13 = load i32, i32* %x.i, align 4, !dbg !10579
  %14 = load i32, i32* %w2.i, align 4, !dbg !10580
  %add.i = add nsw i32 %13, %14, !dbg !10581
  %idxprom1.i = sext i32 %add.i to i64, !dbg !10582
  %15 = load i32*, i32** %b.addr.i, align 8, !dbg !10582
  %arrayidx2.i = getelementptr inbounds i32, i32* %15, i64 %idxprom1.i, !dbg !10582
  %16 = load i32, i32* %arrayidx2.i, align 4, !dbg !10582
  %add3.i = add i32 %16, 1, !dbg !10583
  %shr4.i = ashr i32 %add3.i, 1, !dbg !10584
  %sub.i = sub i32 %12, %shr4.i, !dbg !10585
  %17 = load i32, i32* %x.i, align 4, !dbg !10586
  %idxprom5.i = sext i32 %17 to i64, !dbg !10587
  %18 = load i32*, i32** %temp.addr.i, align 8, !dbg !10587
  %arrayidx6.i = getelementptr inbounds i32, i32* %18, i64 %idxprom5.i, !dbg !10587
  store i32 %sub.i, i32* %arrayidx6.i, align 4, !dbg !10588
  %19 = load i32, i32* %x.i, align 4, !dbg !10589
  %20 = load i32, i32* %w2.i, align 4, !dbg !10590
  %add7.i = add nsw i32 %19, %20, !dbg !10591
  %idxprom8.i = sext i32 %add7.i to i64, !dbg !10592
  %21 = load i32*, i32** %b.addr.i, align 8, !dbg !10592
  %arrayidx9.i = getelementptr inbounds i32, i32* %21, i64 %idxprom8.i, !dbg !10592
  %22 = load i32, i32* %arrayidx9.i, align 4, !dbg !10592
  %23 = load i32, i32* %x.i, align 4, !dbg !10593
  %idxprom10.i = sext i32 %23 to i64, !dbg !10594
  %24 = load i32*, i32** %temp.addr.i, align 8, !dbg !10594
  %arrayidx11.i = getelementptr inbounds i32, i32* %24, i64 %idxprom10.i, !dbg !10594
  %25 = load i32, i32* %arrayidx11.i, align 4, !dbg !10594
  %add12.i = add i32 %22, %25, !dbg !10595
  %26 = load i32, i32* %x.i, align 4, !dbg !10596
  %27 = load i32, i32* %w2.i, align 4, !dbg !10597
  %add13.i = add nsw i32 %26, %27, !dbg !10598
  %idxprom14.i = sext i32 %add13.i to i64, !dbg !10599
  %28 = load i32*, i32** %temp.addr.i, align 8, !dbg !10599
  %arrayidx15.i = getelementptr inbounds i32, i32* %28, i64 %idxprom14.i, !dbg !10599
  store i32 %add12.i, i32* %arrayidx15.i, align 4, !dbg !10600
  %29 = load i32, i32* %x.i, align 4, !dbg !10601
  %inc.i = add nsw i32 %29, 1, !dbg !10601
  store i32 %inc.i, i32* %x.i, align 4, !dbg !10601
  br label %for.cond.i, !dbg !10602, !llvm.loop !10494

for.end.i:                                        ; preds = %for.cond.i
  %30 = load i32*, i32** %b.addr.i, align 8, !dbg !10603
  %31 = load i32*, i32** %temp.addr.i, align 8, !dbg !10604
  %32 = load i32*, i32** %temp.addr.i, align 8, !dbg !10605
  %33 = load i32, i32* %w2.i, align 4, !dbg !10606
  %idx.ext.i = sext i32 %33 to i64, !dbg !10607
  %add.ptr.i = getelementptr inbounds i32, i32* %32, i64 %idx.ext.i, !dbg !10607
  %34 = load i32, i32* %w2.i, align 4, !dbg !10608
  %35 = load i32, i32* %shift.addr.i, align 4, !dbg !10609
  %36 = load i32, i32* %shift.addr.i, align 4, !dbg !10610
  store i32* %30, i32** %dst.addr.i.i, align 8, !dbg !10611
  store i32* %31, i32** %src0.addr.i.i, align 8, !dbg !10611
  store i32* %add.ptr.i, i32** %src1.addr.i.i, align 8, !dbg !10611
  store i32 %34, i32* %w2.addr.i.i, align 4, !dbg !10611
  store i32 %35, i32* %add.addr.i.i, align 4, !dbg !10611
  store i32 %36, i32* %shift.addr.i.i, align 4, !dbg !10611
  store i32 0, i32* %i.i.i, align 4, !dbg !10612
  br label %for.cond.i.i, !dbg !10613

for.cond.i.i:                                     ; preds = %for.body.i.i, %for.end.i
  %37 = load i32, i32* %i.i.i, align 4, !dbg !10614
  %38 = load i32, i32* %w2.addr.i.i, align 4, !dbg !10615
  %cmp.i.i = icmp slt i32 %37, %38, !dbg !10616
  br i1 %cmp.i.i, label %for.body.i.i, label %horizontal_compose_haari_12bit.exit, !dbg !10617

for.body.i.i:                                     ; preds = %for.cond.i.i
  %39 = load i32, i32* %i.i.i, align 4, !dbg !10618
  %idxprom.i.i = sext i32 %39 to i64, !dbg !10619
  %40 = load i32*, i32** %src0.addr.i.i, align 8, !dbg !10619
  %arrayidx.i.i = getelementptr inbounds i32, i32* %40, i64 %idxprom.i.i, !dbg !10619
  %41 = load i32, i32* %arrayidx.i.i, align 4, !dbg !10619
  %42 = load i32, i32* %add.addr.i.i, align 4, !dbg !10620
  %add1.i.i = add i32 %41, %42, !dbg !10621
  %43 = load i32, i32* %shift.addr.i.i, align 4, !dbg !10622
  %shr.i.i = ashr i32 %add1.i.i, %43, !dbg !10623
  %44 = load i32, i32* %i.i.i, align 4, !dbg !10624
  %mul.i.i = mul nsw i32 2, %44, !dbg !10625
  %idxprom2.i.i = sext i32 %mul.i.i to i64, !dbg !10626
  %45 = load i32*, i32** %dst.addr.i.i, align 8, !dbg !10626
  %arrayidx3.i.i = getelementptr inbounds i32, i32* %45, i64 %idxprom2.i.i, !dbg !10626
  store i32 %shr.i.i, i32* %arrayidx3.i.i, align 4, !dbg !10627
  %46 = load i32, i32* %i.i.i, align 4, !dbg !10628
  %idxprom4.i.i = sext i32 %46 to i64, !dbg !10629
  %47 = load i32*, i32** %src1.addr.i.i, align 8, !dbg !10629
  %arrayidx5.i.i = getelementptr inbounds i32, i32* %47, i64 %idxprom4.i.i, !dbg !10629
  %48 = load i32, i32* %arrayidx5.i.i, align 4, !dbg !10629
  %49 = load i32, i32* %add.addr.i.i, align 4, !dbg !10630
  %add6.i.i = add i32 %48, %49, !dbg !10631
  %50 = load i32, i32* %shift.addr.i.i, align 4, !dbg !10632
  %shr7.i.i = ashr i32 %add6.i.i, %50, !dbg !10633
  %51 = load i32, i32* %i.i.i, align 4, !dbg !10634
  %mul8.i.i = mul nsw i32 2, %51, !dbg !10635
  %add9.i.i = add nsw i32 %mul8.i.i, 1, !dbg !10636
  %idxprom10.i.i = sext i32 %add9.i.i to i64, !dbg !10637
  %52 = load i32*, i32** %dst.addr.i.i, align 8, !dbg !10637
  %arrayidx11.i.i = getelementptr inbounds i32, i32* %52, i64 %idxprom10.i.i, !dbg !10637
  store i32 %shr7.i.i, i32* %arrayidx11.i.i, align 4, !dbg !10638
  %53 = load i32, i32* %i.i.i, align 4, !dbg !10639
  %inc.i.i = add nsw i32 %53, 1, !dbg !10639
  store i32 %inc.i.i, i32* %i.i.i, align 4, !dbg !10639
  br label %for.cond.i.i, !dbg !10640, !llvm.loop !9827

horizontal_compose_haari_12bit.exit:              ; preds = %for.cond.i.i
  ret void, !dbg !10641
}

; Function Attrs: nounwind uwtable
define internal void @spatial_compose_fidelity_12bit(%struct.DWTContext* %d, i32 %level, i32 %width, i32 %height, i32 %stride) #0 !dbg !10642 {
entry:
  %retval.i57 = alloca i32, align 4
  %a.addr.i58 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i58, metadata !904, metadata !87), !dbg !10643
  %amin.addr.i59 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i59, metadata !911, metadata !87), !dbg !10650
  %amax.addr.i60 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i60, metadata !913, metadata !87), !dbg !10651
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !904, metadata !87), !dbg !10652
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !911, metadata !87), !dbg !10659
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !913, metadata !87), !dbg !10660
  %d.addr = alloca %struct.DWTContext*, align 8
  %level.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  %vertical_compose_l0 = alloca void (i8*, i8**, i32)*, align 8
  %vertical_compose_h0 = alloca void (i8*, i8**, i32)*, align 8
  %i = alloca i32, align 4
  %y = alloca i32, align 4
  %b = alloca [8 x i8*], align 16
  store %struct.DWTContext* %d, %struct.DWTContext** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTContext** %d.addr, metadata !10661, metadata !87), !dbg !10662
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !10663, metadata !87), !dbg !10664
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !10665, metadata !87), !dbg !10666
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !10667, metadata !87), !dbg !10668
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !10669, metadata !87), !dbg !10670
  call void @llvm.dbg.declare(metadata void (i8*, i8**, i32)** %vertical_compose_l0, metadata !10671, metadata !87), !dbg !10672
  %0 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !10673
  %vertical_compose_l01 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %0, i32 0, i32 8, !dbg !10674
  %1 = load void ()*, void ()** %vertical_compose_l01, align 8, !dbg !10674
  %2 = bitcast void ()* %1 to i8*, !dbg !10675
  %3 = bitcast i8* %2 to void (i8*, i8**, i32)*, !dbg !10675
  store void (i8*, i8**, i32)* %3, void (i8*, i8**, i32)** %vertical_compose_l0, align 8, !dbg !10672
  call void @llvm.dbg.declare(metadata void (i8*, i8**, i32)** %vertical_compose_h0, metadata !10676, metadata !87), !dbg !10677
  %4 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !10678
  %vertical_compose_h02 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %4, i32 0, i32 9, !dbg !10679
  %5 = load void ()*, void ()** %vertical_compose_h02, align 8, !dbg !10679
  %6 = bitcast void ()* %5 to i8*, !dbg !10680
  %7 = bitcast i8* %6 to void (i8*, i8**, i32)*, !dbg !10680
  store void (i8*, i8**, i32)* %7, void (i8*, i8**, i32)** %vertical_compose_h0, align 8, !dbg !10677
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10681, metadata !87), !dbg !10682
  call void @llvm.dbg.declare(metadata i32* %y, metadata !10683, metadata !87), !dbg !10684
  call void @llvm.dbg.declare(metadata [8 x i8*]* %b, metadata !10685, metadata !87), !dbg !10686
  store i32 1, i32* %y, align 4, !dbg !10687
  br label %for.cond, !dbg !10688

for.cond:                                         ; preds = %for.inc12, %entry
  %8 = load i32, i32* %y, align 4, !dbg !10689
  %9 = load i32, i32* %height.addr, align 4, !dbg !10691
  %cmp = icmp slt i32 %8, %9, !dbg !10692
  br i1 %cmp, label %for.body, label %for.end14, !dbg !10693

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !10694
  br label %for.cond3, !dbg !10695

for.cond3:                                        ; preds = %for.inc, %for.body
  %10 = load i32, i32* %i, align 4, !dbg !10696
  %cmp4 = icmp slt i32 %10, 8, !dbg !10698
  br i1 %cmp4, label %for.body5, label %for.end, !dbg !10699

for.body5:                                        ; preds = %for.cond3
  %11 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !10700
  %buffer = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %11, i32 0, i32 0, !dbg !10701
  %12 = load i8*, i8** %buffer, align 8, !dbg !10701
  %13 = load i32, i32* %y, align 4, !dbg !10702
  %sub = sub nsw i32 %13, 7, !dbg !10703
  %14 = load i32, i32* %i, align 4, !dbg !10704
  %mul = mul nsw i32 2, %14, !dbg !10705
  %add = add nsw i32 %sub, %mul, !dbg !10706
  %15 = load i32, i32* %height.addr, align 4, !dbg !10707
  %sub6 = sub nsw i32 %15, 2, !dbg !10708
  store i32 %add, i32* %a.addr.i, align 4, !dbg !10709
  store i32 0, i32* %amin.addr.i, align 4, !dbg !10709
  store i32 %sub6, i32* %amax.addr.i, align 4, !dbg !10709
  %16 = load i32, i32* %a.addr.i, align 4, !dbg !10710
  %17 = load i32, i32* %amin.addr.i, align 4, !dbg !10711
  %cmp.i = icmp slt i32 %16, %17, !dbg !10712
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !10713

if.then.i:                                        ; preds = %for.body5
  %18 = load i32, i32* %amin.addr.i, align 4, !dbg !10714
  store i32 %18, i32* %retval.i, align 4, !dbg !10715
  br label %av_clip_c.exit, !dbg !10715

if.else.i:                                        ; preds = %for.body5
  %19 = load i32, i32* %a.addr.i, align 4, !dbg !10716
  %20 = load i32, i32* %amax.addr.i, align 4, !dbg !10717
  %cmp1.i = icmp sgt i32 %19, %20, !dbg !10718
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !10719

if.then2.i:                                       ; preds = %if.else.i
  %21 = load i32, i32* %amax.addr.i, align 4, !dbg !10720
  store i32 %21, i32* %retval.i, align 4, !dbg !10721
  br label %av_clip_c.exit, !dbg !10721

if.else3.i:                                       ; preds = %if.else.i
  %22 = load i32, i32* %a.addr.i, align 4, !dbg !10722
  store i32 %22, i32* %retval.i, align 4, !dbg !10723
  br label %av_clip_c.exit, !dbg !10723

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %23 = load i32, i32* %retval.i, align 4, !dbg !10724
  %24 = load i32, i32* %stride.addr, align 4, !dbg !10725
  %mul7 = mul nsw i32 %23, %24, !dbg !10726
  %idx.ext = sext i32 %mul7 to i64, !dbg !10727
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 %idx.ext, !dbg !10727
  %25 = load i32, i32* %i, align 4, !dbg !10728
  %idxprom = sext i32 %25 to i64, !dbg !10729
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 %idxprom, !dbg !10729
  store i8* %add.ptr, i8** %arrayidx, align 8, !dbg !10730
  br label %for.inc, !dbg !10729

for.inc:                                          ; preds = %av_clip_c.exit
  %26 = load i32, i32* %i, align 4, !dbg !10731
  %inc = add nsw i32 %26, 1, !dbg !10731
  store i32 %inc, i32* %i, align 4, !dbg !10731
  br label %for.cond3, !dbg !10733, !llvm.loop !10734

for.end:                                          ; preds = %for.cond3
  %27 = load void (i8*, i8**, i32)*, void (i8*, i8**, i32)** %vertical_compose_h0, align 8, !dbg !10736
  %28 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !10737
  %buffer8 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %28, i32 0, i32 0, !dbg !10738
  %29 = load i8*, i8** %buffer8, align 8, !dbg !10738
  %30 = load i32, i32* %y, align 4, !dbg !10739
  %31 = load i32, i32* %stride.addr, align 4, !dbg !10740
  %mul9 = mul nsw i32 %30, %31, !dbg !10741
  %idx.ext10 = sext i32 %mul9 to i64, !dbg !10742
  %add.ptr11 = getelementptr inbounds i8, i8* %29, i64 %idx.ext10, !dbg !10742
  %arraydecay = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i32 0, i32 0, !dbg !10743
  %32 = load i32, i32* %width.addr, align 4, !dbg !10744
  call void %27(i8* %add.ptr11, i8** %arraydecay, i32 %32), !dbg !10736
  br label %for.inc12, !dbg !10745

for.inc12:                                        ; preds = %for.end
  %33 = load i32, i32* %y, align 4, !dbg !10746
  %add13 = add nsw i32 %33, 2, !dbg !10746
  store i32 %add13, i32* %y, align 4, !dbg !10746
  br label %for.cond, !dbg !10748, !llvm.loop !10749

for.end14:                                        ; preds = %for.cond
  store i32 0, i32* %y, align 4, !dbg !10751
  br label %for.cond15, !dbg !10752

for.cond15:                                       ; preds = %for.inc40, %for.end14
  %34 = load i32, i32* %y, align 4, !dbg !10753
  %35 = load i32, i32* %height.addr, align 4, !dbg !10755
  %cmp16 = icmp slt i32 %34, %35, !dbg !10756
  br i1 %cmp16, label %for.body17, label %for.end42, !dbg !10757

for.body17:                                       ; preds = %for.cond15
  store i32 0, i32* %i, align 4, !dbg !10758
  br label %for.cond18, !dbg !10759

for.cond18:                                       ; preds = %for.inc32, %for.body17
  %36 = load i32, i32* %i, align 4, !dbg !10760
  %cmp19 = icmp slt i32 %36, 8, !dbg !10762
  br i1 %cmp19, label %for.body20, label %for.end34, !dbg !10763

for.body20:                                       ; preds = %for.cond18
  %37 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !10764
  %buffer21 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %37, i32 0, i32 0, !dbg !10765
  %38 = load i8*, i8** %buffer21, align 8, !dbg !10765
  %39 = load i32, i32* %y, align 4, !dbg !10766
  %sub22 = sub nsw i32 %39, 7, !dbg !10767
  %40 = load i32, i32* %i, align 4, !dbg !10768
  %mul23 = mul nsw i32 2, %40, !dbg !10769
  %add24 = add nsw i32 %sub22, %mul23, !dbg !10770
  %41 = load i32, i32* %height.addr, align 4, !dbg !10771
  %sub25 = sub nsw i32 %41, 1, !dbg !10772
  store i32 %add24, i32* %a.addr.i58, align 4, !dbg !10773
  store i32 1, i32* %amin.addr.i59, align 4, !dbg !10773
  store i32 %sub25, i32* %amax.addr.i60, align 4, !dbg !10773
  %42 = load i32, i32* %a.addr.i58, align 4, !dbg !10774
  %43 = load i32, i32* %amin.addr.i59, align 4, !dbg !10775
  %cmp.i61 = icmp slt i32 %42, %43, !dbg !10776
  br i1 %cmp.i61, label %if.then.i62, label %if.else.i64, !dbg !10777

if.then.i62:                                      ; preds = %for.body20
  %44 = load i32, i32* %amin.addr.i59, align 4, !dbg !10778
  store i32 %44, i32* %retval.i57, align 4, !dbg !10779
  br label %av_clip_c.exit67, !dbg !10779

if.else.i64:                                      ; preds = %for.body20
  %45 = load i32, i32* %a.addr.i58, align 4, !dbg !10780
  %46 = load i32, i32* %amax.addr.i60, align 4, !dbg !10781
  %cmp1.i63 = icmp sgt i32 %45, %46, !dbg !10782
  br i1 %cmp1.i63, label %if.then2.i65, label %if.else3.i66, !dbg !10783

if.then2.i65:                                     ; preds = %if.else.i64
  %47 = load i32, i32* %amax.addr.i60, align 4, !dbg !10784
  store i32 %47, i32* %retval.i57, align 4, !dbg !10785
  br label %av_clip_c.exit67, !dbg !10785

if.else3.i66:                                     ; preds = %if.else.i64
  %48 = load i32, i32* %a.addr.i58, align 4, !dbg !10786
  store i32 %48, i32* %retval.i57, align 4, !dbg !10787
  br label %av_clip_c.exit67, !dbg !10787

av_clip_c.exit67:                                 ; preds = %if.then.i62, %if.then2.i65, %if.else3.i66
  %49 = load i32, i32* %retval.i57, align 4, !dbg !10788
  %50 = load i32, i32* %stride.addr, align 4, !dbg !10789
  %mul27 = mul nsw i32 %49, %50, !dbg !10790
  %idx.ext28 = sext i32 %mul27 to i64, !dbg !10791
  %add.ptr29 = getelementptr inbounds i8, i8* %38, i64 %idx.ext28, !dbg !10791
  %51 = load i32, i32* %i, align 4, !dbg !10792
  %idxprom30 = sext i32 %51 to i64, !dbg !10793
  %arrayidx31 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i64 0, i64 %idxprom30, !dbg !10793
  store i8* %add.ptr29, i8** %arrayidx31, align 8, !dbg !10794
  br label %for.inc32, !dbg !10793

for.inc32:                                        ; preds = %av_clip_c.exit67
  %52 = load i32, i32* %i, align 4, !dbg !10795
  %inc33 = add nsw i32 %52, 1, !dbg !10795
  store i32 %inc33, i32* %i, align 4, !dbg !10795
  br label %for.cond18, !dbg !10797, !llvm.loop !10798

for.end34:                                        ; preds = %for.cond18
  %53 = load void (i8*, i8**, i32)*, void (i8*, i8**, i32)** %vertical_compose_l0, align 8, !dbg !10800
  %54 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !10801
  %buffer35 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %54, i32 0, i32 0, !dbg !10802
  %55 = load i8*, i8** %buffer35, align 8, !dbg !10802
  %56 = load i32, i32* %y, align 4, !dbg !10803
  %57 = load i32, i32* %stride.addr, align 4, !dbg !10804
  %mul36 = mul nsw i32 %56, %57, !dbg !10805
  %idx.ext37 = sext i32 %mul36 to i64, !dbg !10806
  %add.ptr38 = getelementptr inbounds i8, i8* %55, i64 %idx.ext37, !dbg !10806
  %arraydecay39 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b, i32 0, i32 0, !dbg !10807
  %58 = load i32, i32* %width.addr, align 4, !dbg !10808
  call void %53(i8* %add.ptr38, i8** %arraydecay39, i32 %58), !dbg !10800
  br label %for.inc40, !dbg !10809

for.inc40:                                        ; preds = %for.end34
  %59 = load i32, i32* %y, align 4, !dbg !10810
  %add41 = add nsw i32 %59, 2, !dbg !10810
  store i32 %add41, i32* %y, align 4, !dbg !10810
  br label %for.cond15, !dbg !10812, !llvm.loop !10813

for.end42:                                        ; preds = %for.cond15
  store i32 0, i32* %y, align 4, !dbg !10815
  br label %for.cond43, !dbg !10817

for.cond43:                                       ; preds = %for.inc50, %for.end42
  %60 = load i32, i32* %y, align 4, !dbg !10818
  %61 = load i32, i32* %height.addr, align 4, !dbg !10821
  %cmp44 = icmp slt i32 %60, %61, !dbg !10822
  br i1 %cmp44, label %for.body45, label %for.end52, !dbg !10823

for.body45:                                       ; preds = %for.cond43
  %62 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !10824
  %horizontal_compose = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %62, i32 0, i32 13, !dbg !10825
  %63 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %horizontal_compose, align 8, !dbg !10825
  %64 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !10826
  %buffer46 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %64, i32 0, i32 0, !dbg !10827
  %65 = load i8*, i8** %buffer46, align 8, !dbg !10827
  %66 = load i32, i32* %y, align 4, !dbg !10828
  %67 = load i32, i32* %stride.addr, align 4, !dbg !10829
  %mul47 = mul nsw i32 %66, %67, !dbg !10830
  %idx.ext48 = sext i32 %mul47 to i64, !dbg !10831
  %add.ptr49 = getelementptr inbounds i8, i8* %65, i64 %idx.ext48, !dbg !10831
  %68 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !10832
  %temp = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %68, i32 0, i32 1, !dbg !10833
  %69 = load i8*, i8** %temp, align 8, !dbg !10833
  %70 = load i32, i32* %width.addr, align 4, !dbg !10834
  call void %63(i8* %add.ptr49, i8* %69, i32 %70), !dbg !10824
  br label %for.inc50, !dbg !10824

for.inc50:                                        ; preds = %for.body45
  %71 = load i32, i32* %y, align 4, !dbg !10835
  %inc51 = add nsw i32 %71, 1, !dbg !10835
  store i32 %inc51, i32* %y, align 4, !dbg !10835
  br label %for.cond43, !dbg !10837, !llvm.loop !10838

for.end52:                                        ; preds = %for.cond43
  %72 = load i32, i32* %height.addr, align 4, !dbg !10840
  %add53 = add nsw i32 %72, 1, !dbg !10841
  %73 = load i32, i32* %level.addr, align 4, !dbg !10842
  %idxprom54 = sext i32 %73 to i64, !dbg !10843
  %74 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !10843
  %cs = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %74, i32 0, i32 14, !dbg !10844
  %arrayidx55 = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs, i64 0, i64 %idxprom54, !dbg !10843
  %y56 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arrayidx55, i32 0, i32 1, !dbg !10845
  store i32 %add53, i32* %y56, align 8, !dbg !10846
  ret void, !dbg !10847
}

; Function Attrs: nounwind uwtable
define internal void @vertical_compose_fidelityiL0_12bit(i8* %_dst, i8** %_b, i32 %width) #0 !dbg !10848 {
entry:
  %_dst.addr = alloca i8*, align 8
  %_b.addr = alloca i8**, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %dst = alloca i32*, align 8
  %b0 = alloca i32*, align 8
  %b1 = alloca i32*, align 8
  %b2 = alloca i32*, align 8
  %b3 = alloca i32*, align 8
  %b4 = alloca i32*, align 8
  %b5 = alloca i32*, align 8
  %b6 = alloca i32*, align 8
  %b7 = alloca i32*, align 8
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !10849, metadata !87), !dbg !10850
  store i8** %_b, i8*** %_b.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_b.addr, metadata !10851, metadata !87), !dbg !10852
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !10853, metadata !87), !dbg !10854
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10855, metadata !87), !dbg !10856
  call void @llvm.dbg.declare(metadata i32** %dst, metadata !10857, metadata !87), !dbg !10858
  %0 = load i8*, i8** %_dst.addr, align 8, !dbg !10859
  %1 = bitcast i8* %0 to i32*, !dbg !10860
  store i32* %1, i32** %dst, align 8, !dbg !10858
  call void @llvm.dbg.declare(metadata i32** %b0, metadata !10861, metadata !87), !dbg !10862
  %2 = load i8**, i8*** %_b.addr, align 8, !dbg !10863
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 0, !dbg !10863
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !10863
  %4 = bitcast i8* %3 to i32*, !dbg !10864
  store i32* %4, i32** %b0, align 8, !dbg !10862
  call void @llvm.dbg.declare(metadata i32** %b1, metadata !10865, metadata !87), !dbg !10866
  %5 = load i8**, i8*** %_b.addr, align 8, !dbg !10867
  %arrayidx1 = getelementptr inbounds i8*, i8** %5, i64 1, !dbg !10867
  %6 = load i8*, i8** %arrayidx1, align 8, !dbg !10867
  %7 = bitcast i8* %6 to i32*, !dbg !10868
  store i32* %7, i32** %b1, align 8, !dbg !10866
  call void @llvm.dbg.declare(metadata i32** %b2, metadata !10869, metadata !87), !dbg !10870
  %8 = load i8**, i8*** %_b.addr, align 8, !dbg !10871
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 2, !dbg !10871
  %9 = load i8*, i8** %arrayidx2, align 8, !dbg !10871
  %10 = bitcast i8* %9 to i32*, !dbg !10872
  store i32* %10, i32** %b2, align 8, !dbg !10870
  call void @llvm.dbg.declare(metadata i32** %b3, metadata !10873, metadata !87), !dbg !10874
  %11 = load i8**, i8*** %_b.addr, align 8, !dbg !10875
  %arrayidx3 = getelementptr inbounds i8*, i8** %11, i64 3, !dbg !10875
  %12 = load i8*, i8** %arrayidx3, align 8, !dbg !10875
  %13 = bitcast i8* %12 to i32*, !dbg !10876
  store i32* %13, i32** %b3, align 8, !dbg !10874
  call void @llvm.dbg.declare(metadata i32** %b4, metadata !10877, metadata !87), !dbg !10878
  %14 = load i8**, i8*** %_b.addr, align 8, !dbg !10879
  %arrayidx4 = getelementptr inbounds i8*, i8** %14, i64 4, !dbg !10879
  %15 = load i8*, i8** %arrayidx4, align 8, !dbg !10879
  %16 = bitcast i8* %15 to i32*, !dbg !10880
  store i32* %16, i32** %b4, align 8, !dbg !10878
  call void @llvm.dbg.declare(metadata i32** %b5, metadata !10881, metadata !87), !dbg !10882
  %17 = load i8**, i8*** %_b.addr, align 8, !dbg !10883
  %arrayidx5 = getelementptr inbounds i8*, i8** %17, i64 5, !dbg !10883
  %18 = load i8*, i8** %arrayidx5, align 8, !dbg !10883
  %19 = bitcast i8* %18 to i32*, !dbg !10884
  store i32* %19, i32** %b5, align 8, !dbg !10882
  call void @llvm.dbg.declare(metadata i32** %b6, metadata !10885, metadata !87), !dbg !10886
  %20 = load i8**, i8*** %_b.addr, align 8, !dbg !10887
  %arrayidx6 = getelementptr inbounds i8*, i8** %20, i64 6, !dbg !10887
  %21 = load i8*, i8** %arrayidx6, align 8, !dbg !10887
  %22 = bitcast i8* %21 to i32*, !dbg !10888
  store i32* %22, i32** %b6, align 8, !dbg !10886
  call void @llvm.dbg.declare(metadata i32** %b7, metadata !10889, metadata !87), !dbg !10890
  %23 = load i8**, i8*** %_b.addr, align 8, !dbg !10891
  %arrayidx7 = getelementptr inbounds i8*, i8** %23, i64 7, !dbg !10891
  %24 = load i8*, i8** %arrayidx7, align 8, !dbg !10891
  %25 = bitcast i8* %24 to i32*, !dbg !10892
  store i32* %25, i32** %b7, align 8, !dbg !10890
  store i32 0, i32* %i, align 4, !dbg !10893
  br label %for.cond, !dbg !10895

for.cond:                                         ; preds = %for.inc, %entry
  %26 = load i32, i32* %i, align 4, !dbg !10896
  %27 = load i32, i32* %width.addr, align 4, !dbg !10899
  %cmp = icmp slt i32 %26, %27, !dbg !10900
  br i1 %cmp, label %for.body, label %for.end, !dbg !10901

for.body:                                         ; preds = %for.cond
  %28 = load i32, i32* %i, align 4, !dbg !10902
  %idxprom = sext i32 %28 to i64, !dbg !10904
  %29 = load i32*, i32** %dst, align 8, !dbg !10904
  %arrayidx8 = getelementptr inbounds i32, i32* %29, i64 %idxprom, !dbg !10904
  %30 = load i32, i32* %arrayidx8, align 4, !dbg !10904
  %31 = load i32, i32* %i, align 4, !dbg !10905
  %idxprom9 = sext i32 %31 to i64, !dbg !10906
  %32 = load i32*, i32** %b0, align 8, !dbg !10906
  %arrayidx10 = getelementptr inbounds i32, i32* %32, i64 %idxprom9, !dbg !10906
  %33 = load i32, i32* %arrayidx10, align 4, !dbg !10906
  %34 = load i32, i32* %i, align 4, !dbg !10907
  %idxprom11 = sext i32 %34 to i64, !dbg !10908
  %35 = load i32*, i32** %b7, align 8, !dbg !10908
  %arrayidx12 = getelementptr inbounds i32, i32* %35, i64 %idxprom11, !dbg !10908
  %36 = load i32, i32* %arrayidx12, align 4, !dbg !10908
  %add = add i32 %33, %36, !dbg !10909
  %mul = mul i32 -8, %add, !dbg !10910
  %37 = load i32, i32* %i, align 4, !dbg !10911
  %idxprom13 = sext i32 %37 to i64, !dbg !10912
  %38 = load i32*, i32** %b1, align 8, !dbg !10912
  %arrayidx14 = getelementptr inbounds i32, i32* %38, i64 %idxprom13, !dbg !10912
  %39 = load i32, i32* %arrayidx14, align 4, !dbg !10912
  %40 = load i32, i32* %i, align 4, !dbg !10913
  %idxprom15 = sext i32 %40 to i64, !dbg !10914
  %41 = load i32*, i32** %b6, align 8, !dbg !10914
  %arrayidx16 = getelementptr inbounds i32, i32* %41, i64 %idxprom15, !dbg !10914
  %42 = load i32, i32* %arrayidx16, align 4, !dbg !10914
  %add17 = add i32 %39, %42, !dbg !10915
  %mul18 = mul i32 21, %add17, !dbg !10916
  %add19 = add i32 %mul, %mul18, !dbg !10917
  %43 = load i32, i32* %i, align 4, !dbg !10918
  %idxprom20 = sext i32 %43 to i64, !dbg !10919
  %44 = load i32*, i32** %b2, align 8, !dbg !10919
  %arrayidx21 = getelementptr inbounds i32, i32* %44, i64 %idxprom20, !dbg !10919
  %45 = load i32, i32* %arrayidx21, align 4, !dbg !10919
  %46 = load i32, i32* %i, align 4, !dbg !10920
  %idxprom22 = sext i32 %46 to i64, !dbg !10921
  %47 = load i32*, i32** %b5, align 8, !dbg !10921
  %arrayidx23 = getelementptr inbounds i32, i32* %47, i64 %idxprom22, !dbg !10921
  %48 = load i32, i32* %arrayidx23, align 4, !dbg !10921
  %add24 = add i32 %45, %48, !dbg !10922
  %mul25 = mul i32 46, %add24, !dbg !10923
  %sub = sub i32 %add19, %mul25, !dbg !10924
  %49 = load i32, i32* %i, align 4, !dbg !10925
  %idxprom26 = sext i32 %49 to i64, !dbg !10926
  %50 = load i32*, i32** %b3, align 8, !dbg !10926
  %arrayidx27 = getelementptr inbounds i32, i32* %50, i64 %idxprom26, !dbg !10926
  %51 = load i32, i32* %arrayidx27, align 4, !dbg !10926
  %52 = load i32, i32* %i, align 4, !dbg !10927
  %idxprom28 = sext i32 %52 to i64, !dbg !10928
  %53 = load i32*, i32** %b4, align 8, !dbg !10928
  %arrayidx29 = getelementptr inbounds i32, i32* %53, i64 %idxprom28, !dbg !10928
  %54 = load i32, i32* %arrayidx29, align 4, !dbg !10928
  %add30 = add i32 %51, %54, !dbg !10929
  %mul31 = mul i32 161, %add30, !dbg !10930
  %add32 = add i32 %sub, %mul31, !dbg !10931
  %add33 = add i32 %add32, 128, !dbg !10932
  %shr = ashr i32 %add33, 8, !dbg !10933
  %sub34 = sub i32 %30, %shr, !dbg !10934
  %55 = load i32, i32* %i, align 4, !dbg !10935
  %idxprom35 = sext i32 %55 to i64, !dbg !10936
  %56 = load i32*, i32** %dst, align 8, !dbg !10936
  %arrayidx36 = getelementptr inbounds i32, i32* %56, i64 %idxprom35, !dbg !10936
  store i32 %sub34, i32* %arrayidx36, align 4, !dbg !10937
  br label %for.inc, !dbg !10938

for.inc:                                          ; preds = %for.body
  %57 = load i32, i32* %i, align 4, !dbg !10939
  %inc = add nsw i32 %57, 1, !dbg !10939
  store i32 %inc, i32* %i, align 4, !dbg !10939
  br label %for.cond, !dbg !10941, !llvm.loop !10942

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10944
}

; Function Attrs: nounwind uwtable
define internal void @vertical_compose_fidelityiH0_12bit(i8* %_dst, i8** %_b, i32 %width) #0 !dbg !10945 {
entry:
  %_dst.addr = alloca i8*, align 8
  %_b.addr = alloca i8**, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %dst = alloca i32*, align 8
  %b0 = alloca i32*, align 8
  %b1 = alloca i32*, align 8
  %b2 = alloca i32*, align 8
  %b3 = alloca i32*, align 8
  %b4 = alloca i32*, align 8
  %b5 = alloca i32*, align 8
  %b6 = alloca i32*, align 8
  %b7 = alloca i32*, align 8
  store i8* %_dst, i8** %_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_dst.addr, metadata !10946, metadata !87), !dbg !10947
  store i8** %_b, i8*** %_b.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %_b.addr, metadata !10948, metadata !87), !dbg !10949
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !10950, metadata !87), !dbg !10951
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10952, metadata !87), !dbg !10953
  call void @llvm.dbg.declare(metadata i32** %dst, metadata !10954, metadata !87), !dbg !10955
  %0 = load i8*, i8** %_dst.addr, align 8, !dbg !10956
  %1 = bitcast i8* %0 to i32*, !dbg !10957
  store i32* %1, i32** %dst, align 8, !dbg !10955
  call void @llvm.dbg.declare(metadata i32** %b0, metadata !10958, metadata !87), !dbg !10959
  %2 = load i8**, i8*** %_b.addr, align 8, !dbg !10960
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 0, !dbg !10960
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !10960
  %4 = bitcast i8* %3 to i32*, !dbg !10961
  store i32* %4, i32** %b0, align 8, !dbg !10959
  call void @llvm.dbg.declare(metadata i32** %b1, metadata !10962, metadata !87), !dbg !10963
  %5 = load i8**, i8*** %_b.addr, align 8, !dbg !10964
  %arrayidx1 = getelementptr inbounds i8*, i8** %5, i64 1, !dbg !10964
  %6 = load i8*, i8** %arrayidx1, align 8, !dbg !10964
  %7 = bitcast i8* %6 to i32*, !dbg !10965
  store i32* %7, i32** %b1, align 8, !dbg !10963
  call void @llvm.dbg.declare(metadata i32** %b2, metadata !10966, metadata !87), !dbg !10967
  %8 = load i8**, i8*** %_b.addr, align 8, !dbg !10968
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 2, !dbg !10968
  %9 = load i8*, i8** %arrayidx2, align 8, !dbg !10968
  %10 = bitcast i8* %9 to i32*, !dbg !10969
  store i32* %10, i32** %b2, align 8, !dbg !10967
  call void @llvm.dbg.declare(metadata i32** %b3, metadata !10970, metadata !87), !dbg !10971
  %11 = load i8**, i8*** %_b.addr, align 8, !dbg !10972
  %arrayidx3 = getelementptr inbounds i8*, i8** %11, i64 3, !dbg !10972
  %12 = load i8*, i8** %arrayidx3, align 8, !dbg !10972
  %13 = bitcast i8* %12 to i32*, !dbg !10973
  store i32* %13, i32** %b3, align 8, !dbg !10971
  call void @llvm.dbg.declare(metadata i32** %b4, metadata !10974, metadata !87), !dbg !10975
  %14 = load i8**, i8*** %_b.addr, align 8, !dbg !10976
  %arrayidx4 = getelementptr inbounds i8*, i8** %14, i64 4, !dbg !10976
  %15 = load i8*, i8** %arrayidx4, align 8, !dbg !10976
  %16 = bitcast i8* %15 to i32*, !dbg !10977
  store i32* %16, i32** %b4, align 8, !dbg !10975
  call void @llvm.dbg.declare(metadata i32** %b5, metadata !10978, metadata !87), !dbg !10979
  %17 = load i8**, i8*** %_b.addr, align 8, !dbg !10980
  %arrayidx5 = getelementptr inbounds i8*, i8** %17, i64 5, !dbg !10980
  %18 = load i8*, i8** %arrayidx5, align 8, !dbg !10980
  %19 = bitcast i8* %18 to i32*, !dbg !10981
  store i32* %19, i32** %b5, align 8, !dbg !10979
  call void @llvm.dbg.declare(metadata i32** %b6, metadata !10982, metadata !87), !dbg !10983
  %20 = load i8**, i8*** %_b.addr, align 8, !dbg !10984
  %arrayidx6 = getelementptr inbounds i8*, i8** %20, i64 6, !dbg !10984
  %21 = load i8*, i8** %arrayidx6, align 8, !dbg !10984
  %22 = bitcast i8* %21 to i32*, !dbg !10985
  store i32* %22, i32** %b6, align 8, !dbg !10983
  call void @llvm.dbg.declare(metadata i32** %b7, metadata !10986, metadata !87), !dbg !10987
  %23 = load i8**, i8*** %_b.addr, align 8, !dbg !10988
  %arrayidx7 = getelementptr inbounds i8*, i8** %23, i64 7, !dbg !10988
  %24 = load i8*, i8** %arrayidx7, align 8, !dbg !10988
  %25 = bitcast i8* %24 to i32*, !dbg !10989
  store i32* %25, i32** %b7, align 8, !dbg !10987
  store i32 0, i32* %i, align 4, !dbg !10990
  br label %for.cond, !dbg !10992

for.cond:                                         ; preds = %for.inc, %entry
  %26 = load i32, i32* %i, align 4, !dbg !10993
  %27 = load i32, i32* %width.addr, align 4, !dbg !10996
  %cmp = icmp slt i32 %26, %27, !dbg !10997
  br i1 %cmp, label %for.body, label %for.end, !dbg !10998

for.body:                                         ; preds = %for.cond
  %28 = load i32, i32* %i, align 4, !dbg !10999
  %idxprom = sext i32 %28 to i64, !dbg !11001
  %29 = load i32*, i32** %dst, align 8, !dbg !11001
  %arrayidx8 = getelementptr inbounds i32, i32* %29, i64 %idxprom, !dbg !11001
  %30 = load i32, i32* %arrayidx8, align 4, !dbg !11001
  %31 = load i32, i32* %i, align 4, !dbg !11002
  %idxprom9 = sext i32 %31 to i64, !dbg !11003
  %32 = load i32*, i32** %b0, align 8, !dbg !11003
  %arrayidx10 = getelementptr inbounds i32, i32* %32, i64 %idxprom9, !dbg !11003
  %33 = load i32, i32* %arrayidx10, align 4, !dbg !11003
  %34 = load i32, i32* %i, align 4, !dbg !11004
  %idxprom11 = sext i32 %34 to i64, !dbg !11005
  %35 = load i32*, i32** %b7, align 8, !dbg !11005
  %arrayidx12 = getelementptr inbounds i32, i32* %35, i64 %idxprom11, !dbg !11005
  %36 = load i32, i32* %arrayidx12, align 4, !dbg !11005
  %add = add i32 %33, %36, !dbg !11006
  %mul = mul i32 -2, %add, !dbg !11007
  %37 = load i32, i32* %i, align 4, !dbg !11008
  %idxprom13 = sext i32 %37 to i64, !dbg !11009
  %38 = load i32*, i32** %b1, align 8, !dbg !11009
  %arrayidx14 = getelementptr inbounds i32, i32* %38, i64 %idxprom13, !dbg !11009
  %39 = load i32, i32* %arrayidx14, align 4, !dbg !11009
  %40 = load i32, i32* %i, align 4, !dbg !11010
  %idxprom15 = sext i32 %40 to i64, !dbg !11011
  %41 = load i32*, i32** %b6, align 8, !dbg !11011
  %arrayidx16 = getelementptr inbounds i32, i32* %41, i64 %idxprom15, !dbg !11011
  %42 = load i32, i32* %arrayidx16, align 4, !dbg !11011
  %add17 = add i32 %39, %42, !dbg !11012
  %mul18 = mul i32 10, %add17, !dbg !11013
  %add19 = add i32 %mul, %mul18, !dbg !11014
  %43 = load i32, i32* %i, align 4, !dbg !11015
  %idxprom20 = sext i32 %43 to i64, !dbg !11016
  %44 = load i32*, i32** %b2, align 8, !dbg !11016
  %arrayidx21 = getelementptr inbounds i32, i32* %44, i64 %idxprom20, !dbg !11016
  %45 = load i32, i32* %arrayidx21, align 4, !dbg !11016
  %46 = load i32, i32* %i, align 4, !dbg !11017
  %idxprom22 = sext i32 %46 to i64, !dbg !11018
  %47 = load i32*, i32** %b5, align 8, !dbg !11018
  %arrayidx23 = getelementptr inbounds i32, i32* %47, i64 %idxprom22, !dbg !11018
  %48 = load i32, i32* %arrayidx23, align 4, !dbg !11018
  %add24 = add i32 %45, %48, !dbg !11019
  %mul25 = mul i32 25, %add24, !dbg !11020
  %sub = sub i32 %add19, %mul25, !dbg !11021
  %49 = load i32, i32* %i, align 4, !dbg !11022
  %idxprom26 = sext i32 %49 to i64, !dbg !11023
  %50 = load i32*, i32** %b3, align 8, !dbg !11023
  %arrayidx27 = getelementptr inbounds i32, i32* %50, i64 %idxprom26, !dbg !11023
  %51 = load i32, i32* %arrayidx27, align 4, !dbg !11023
  %52 = load i32, i32* %i, align 4, !dbg !11024
  %idxprom28 = sext i32 %52 to i64, !dbg !11025
  %53 = load i32*, i32** %b4, align 8, !dbg !11025
  %arrayidx29 = getelementptr inbounds i32, i32* %53, i64 %idxprom28, !dbg !11025
  %54 = load i32, i32* %arrayidx29, align 4, !dbg !11025
  %add30 = add i32 %51, %54, !dbg !11026
  %mul31 = mul i32 81, %add30, !dbg !11027
  %add32 = add i32 %sub, %mul31, !dbg !11028
  %add33 = add i32 %add32, 128, !dbg !11029
  %shr = ashr i32 %add33, 8, !dbg !11030
  %add34 = add i32 %30, %shr, !dbg !11031
  %55 = load i32, i32* %i, align 4, !dbg !11032
  %idxprom35 = sext i32 %55 to i64, !dbg !11033
  %56 = load i32*, i32** %dst, align 8, !dbg !11033
  %arrayidx36 = getelementptr inbounds i32, i32* %56, i64 %idxprom35, !dbg !11033
  store i32 %add34, i32* %arrayidx36, align 4, !dbg !11034
  br label %for.inc, !dbg !11035

for.inc:                                          ; preds = %for.body
  %57 = load i32, i32* %i, align 4, !dbg !11036
  %inc = add nsw i32 %57, 1, !dbg !11036
  store i32 %inc, i32* %i, align 4, !dbg !11036
  br label %for.cond, !dbg !11038, !llvm.loop !11039

for.end:                                          ; preds = %for.cond
  ret void, !dbg !11041
}

; Function Attrs: nounwind uwtable
define internal void @horizontal_compose_fidelityi_12bit(i8* %_b, i8* %_tmp, i32 %w) #0 !dbg !11042 {
entry:
  %retval.i84 = alloca i32, align 4
  %a.addr.i85 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i85, metadata !904, metadata !87), !dbg !11043
  %amin.addr.i86 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i86, metadata !911, metadata !87), !dbg !11050
  %amax.addr.i87 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i87, metadata !913, metadata !87), !dbg !11051
  %dst.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %dst.addr.i, metadata !9668, metadata !87), !dbg !11052
  %src0.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %src0.addr.i, metadata !9672, metadata !87), !dbg !11054
  %src1.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %src1.addr.i, metadata !9674, metadata !87), !dbg !11055
  %w2.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w2.addr.i, metadata !9676, metadata !87), !dbg !11056
  %add.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %add.addr.i, metadata !9678, metadata !87), !dbg !11057
  %shift.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %shift.addr.i, metadata !9680, metadata !87), !dbg !11058
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !9682, metadata !87), !dbg !11059
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !904, metadata !87), !dbg !11060
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !911, metadata !87), !dbg !11067
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !913, metadata !87), !dbg !11068
  %_b.addr = alloca i8*, align 8
  %_tmp.addr = alloca i8*, align 8
  %w.addr = alloca i32, align 4
  %w2 = alloca i32, align 4
  %i = alloca i32, align 4
  %x = alloca i32, align 4
  %v = alloca [8 x i32], align 16
  %b = alloca i32*, align 8
  %tmp = alloca i32*, align 8
  store i8* %_b, i8** %_b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b.addr, metadata !11069, metadata !87), !dbg !11070
  store i8* %_tmp, i8** %_tmp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_tmp.addr, metadata !11071, metadata !87), !dbg !11072
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !11073, metadata !87), !dbg !11074
  call void @llvm.dbg.declare(metadata i32* %w2, metadata !11075, metadata !87), !dbg !11076
  %0 = load i32, i32* %w.addr, align 4, !dbg !11077
  %shr = ashr i32 %0, 1, !dbg !11078
  store i32 %shr, i32* %w2, align 4, !dbg !11076
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11079, metadata !87), !dbg !11080
  call void @llvm.dbg.declare(metadata i32* %x, metadata !11081, metadata !87), !dbg !11082
  call void @llvm.dbg.declare(metadata [8 x i32]* %v, metadata !11083, metadata !87), !dbg !11084
  call void @llvm.dbg.declare(metadata i32** %b, metadata !11085, metadata !87), !dbg !11086
  %1 = load i8*, i8** %_b.addr, align 8, !dbg !11087
  %2 = bitcast i8* %1 to i32*, !dbg !11088
  store i32* %2, i32** %b, align 8, !dbg !11086
  call void @llvm.dbg.declare(metadata i32** %tmp, metadata !11089, metadata !87), !dbg !11090
  %3 = load i8*, i8** %_tmp.addr, align 8, !dbg !11091
  %4 = bitcast i8* %3 to i32*, !dbg !11092
  store i32* %4, i32** %tmp, align 8, !dbg !11090
  store i32 0, i32* %x, align 4, !dbg !11093
  br label %for.cond, !dbg !11094

for.cond:                                         ; preds = %for.inc33, %entry
  %5 = load i32, i32* %x, align 4, !dbg !11095
  %6 = load i32, i32* %w2, align 4, !dbg !11097
  %cmp = icmp slt i32 %5, %6, !dbg !11098
  br i1 %cmp, label %for.body, label %for.end35, !dbg !11099

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !11100
  br label %for.cond1, !dbg !11101

for.cond1:                                        ; preds = %for.inc, %for.body
  %7 = load i32, i32* %i, align 4, !dbg !11102
  %cmp2 = icmp slt i32 %7, 8, !dbg !11104
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !11105

for.body3:                                        ; preds = %for.cond1
  %8 = load i32, i32* %x, align 4, !dbg !11106
  %sub = sub nsw i32 %8, 3, !dbg !11107
  %9 = load i32, i32* %i, align 4, !dbg !11108
  %add = add nsw i32 %sub, %9, !dbg !11109
  %10 = load i32, i32* %w2, align 4, !dbg !11110
  %sub4 = sub nsw i32 %10, 1, !dbg !11111
  store i32 %add, i32* %a.addr.i, align 4, !dbg !11112
  store i32 0, i32* %amin.addr.i, align 4, !dbg !11112
  store i32 %sub4, i32* %amax.addr.i, align 4, !dbg !11112
  %11 = load i32, i32* %a.addr.i, align 4, !dbg !11113
  %12 = load i32, i32* %amin.addr.i, align 4, !dbg !11114
  %cmp.i = icmp slt i32 %11, %12, !dbg !11115
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !11116

if.then.i:                                        ; preds = %for.body3
  %13 = load i32, i32* %amin.addr.i, align 4, !dbg !11117
  store i32 %13, i32* %retval.i, align 4, !dbg !11118
  br label %av_clip_c.exit, !dbg !11118

if.else.i:                                        ; preds = %for.body3
  %14 = load i32, i32* %a.addr.i, align 4, !dbg !11119
  %15 = load i32, i32* %amax.addr.i, align 4, !dbg !11120
  %cmp1.i = icmp sgt i32 %14, %15, !dbg !11121
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !11122

if.then2.i:                                       ; preds = %if.else.i
  %16 = load i32, i32* %amax.addr.i, align 4, !dbg !11123
  store i32 %16, i32* %retval.i, align 4, !dbg !11124
  br label %av_clip_c.exit, !dbg !11124

if.else3.i:                                       ; preds = %if.else.i
  %17 = load i32, i32* %a.addr.i, align 4, !dbg !11125
  store i32 %17, i32* %retval.i, align 4, !dbg !11126
  br label %av_clip_c.exit, !dbg !11126

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %18 = load i32, i32* %retval.i, align 4, !dbg !11127
  %idxprom = sext i32 %18 to i64, !dbg !11128
  %19 = load i32*, i32** %b, align 8, !dbg !11128
  %arrayidx = getelementptr inbounds i32, i32* %19, i64 %idxprom, !dbg !11128
  %20 = load i32, i32* %arrayidx, align 4, !dbg !11128
  %21 = load i32, i32* %i, align 4, !dbg !11129
  %idxprom5 = sext i32 %21 to i64, !dbg !11130
  %arrayidx6 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 %idxprom5, !dbg !11130
  store i32 %20, i32* %arrayidx6, align 4, !dbg !11131
  br label %for.inc, !dbg !11130

for.inc:                                          ; preds = %av_clip_c.exit
  %22 = load i32, i32* %i, align 4, !dbg !11132
  %inc = add nsw i32 %22, 1, !dbg !11132
  store i32 %inc, i32* %i, align 4, !dbg !11132
  br label %for.cond1, !dbg !11134, !llvm.loop !11135

for.end:                                          ; preds = %for.cond1
  %23 = load i32, i32* %x, align 4, !dbg !11137
  %24 = load i32, i32* %w2, align 4, !dbg !11138
  %add7 = add nsw i32 %23, %24, !dbg !11139
  %idxprom8 = sext i32 %add7 to i64, !dbg !11140
  %25 = load i32*, i32** %b, align 8, !dbg !11140
  %arrayidx9 = getelementptr inbounds i32, i32* %25, i64 %idxprom8, !dbg !11140
  %26 = load i32, i32* %arrayidx9, align 4, !dbg !11140
  %arrayidx10 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 0, !dbg !11141
  %27 = load i32, i32* %arrayidx10, align 16, !dbg !11141
  %arrayidx11 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 7, !dbg !11142
  %28 = load i32, i32* %arrayidx11, align 4, !dbg !11142
  %add12 = add i32 %27, %28, !dbg !11143
  %mul = mul i32 -2, %add12, !dbg !11144
  %arrayidx13 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 1, !dbg !11145
  %29 = load i32, i32* %arrayidx13, align 4, !dbg !11145
  %arrayidx14 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 6, !dbg !11146
  %30 = load i32, i32* %arrayidx14, align 8, !dbg !11146
  %add15 = add i32 %29, %30, !dbg !11147
  %mul16 = mul i32 10, %add15, !dbg !11148
  %add17 = add i32 %mul, %mul16, !dbg !11149
  %arrayidx18 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 2, !dbg !11150
  %31 = load i32, i32* %arrayidx18, align 8, !dbg !11150
  %arrayidx19 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 5, !dbg !11151
  %32 = load i32, i32* %arrayidx19, align 4, !dbg !11151
  %add20 = add i32 %31, %32, !dbg !11152
  %mul21 = mul i32 25, %add20, !dbg !11153
  %sub22 = sub i32 %add17, %mul21, !dbg !11154
  %arrayidx23 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 3, !dbg !11155
  %33 = load i32, i32* %arrayidx23, align 4, !dbg !11155
  %arrayidx24 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 4, !dbg !11156
  %34 = load i32, i32* %arrayidx24, align 16, !dbg !11156
  %add25 = add i32 %33, %34, !dbg !11157
  %mul26 = mul i32 81, %add25, !dbg !11158
  %add27 = add i32 %sub22, %mul26, !dbg !11159
  %add28 = add i32 %add27, 128, !dbg !11160
  %shr29 = ashr i32 %add28, 8, !dbg !11161
  %add30 = add i32 %26, %shr29, !dbg !11162
  %35 = load i32, i32* %x, align 4, !dbg !11163
  %idxprom31 = sext i32 %35 to i64, !dbg !11164
  %36 = load i32*, i32** %tmp, align 8, !dbg !11164
  %arrayidx32 = getelementptr inbounds i32, i32* %36, i64 %idxprom31, !dbg !11164
  store i32 %add30, i32* %arrayidx32, align 4, !dbg !11165
  br label %for.inc33, !dbg !11166

for.inc33:                                        ; preds = %for.end
  %37 = load i32, i32* %x, align 4, !dbg !11167
  %inc34 = add nsw i32 %37, 1, !dbg !11167
  store i32 %inc34, i32* %x, align 4, !dbg !11167
  br label %for.cond, !dbg !11169, !llvm.loop !11170

for.end35:                                        ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !11172
  br label %for.cond36, !dbg !11173

for.cond36:                                       ; preds = %for.inc80, %for.end35
  %38 = load i32, i32* %x, align 4, !dbg !11174
  %39 = load i32, i32* %w2, align 4, !dbg !11176
  %cmp37 = icmp slt i32 %38, %39, !dbg !11177
  br i1 %cmp37, label %for.body38, label %for.end82, !dbg !11178

for.body38:                                       ; preds = %for.cond36
  store i32 0, i32* %i, align 4, !dbg !11179
  br label %for.cond39, !dbg !11180

for.cond39:                                       ; preds = %for.inc50, %for.body38
  %40 = load i32, i32* %i, align 4, !dbg !11181
  %cmp40 = icmp slt i32 %40, 8, !dbg !11183
  br i1 %cmp40, label %for.body41, label %for.end52, !dbg !11184

for.body41:                                       ; preds = %for.cond39
  %41 = load i32, i32* %x, align 4, !dbg !11185
  %sub42 = sub nsw i32 %41, 4, !dbg !11186
  %42 = load i32, i32* %i, align 4, !dbg !11187
  %add43 = add nsw i32 %sub42, %42, !dbg !11188
  %43 = load i32, i32* %w2, align 4, !dbg !11189
  %sub44 = sub nsw i32 %43, 1, !dbg !11190
  store i32 %add43, i32* %a.addr.i85, align 4, !dbg !11191
  store i32 0, i32* %amin.addr.i86, align 4, !dbg !11191
  store i32 %sub44, i32* %amax.addr.i87, align 4, !dbg !11191
  %44 = load i32, i32* %a.addr.i85, align 4, !dbg !11192
  %45 = load i32, i32* %amin.addr.i86, align 4, !dbg !11193
  %cmp.i88 = icmp slt i32 %44, %45, !dbg !11194
  br i1 %cmp.i88, label %if.then.i89, label %if.else.i91, !dbg !11195

if.then.i89:                                      ; preds = %for.body41
  %46 = load i32, i32* %amin.addr.i86, align 4, !dbg !11196
  store i32 %46, i32* %retval.i84, align 4, !dbg !11197
  br label %av_clip_c.exit94, !dbg !11197

if.else.i91:                                      ; preds = %for.body41
  %47 = load i32, i32* %a.addr.i85, align 4, !dbg !11198
  %48 = load i32, i32* %amax.addr.i87, align 4, !dbg !11199
  %cmp1.i90 = icmp sgt i32 %47, %48, !dbg !11200
  br i1 %cmp1.i90, label %if.then2.i92, label %if.else3.i93, !dbg !11201

if.then2.i92:                                     ; preds = %if.else.i91
  %49 = load i32, i32* %amax.addr.i87, align 4, !dbg !11202
  store i32 %49, i32* %retval.i84, align 4, !dbg !11203
  br label %av_clip_c.exit94, !dbg !11203

if.else3.i93:                                     ; preds = %if.else.i91
  %50 = load i32, i32* %a.addr.i85, align 4, !dbg !11204
  store i32 %50, i32* %retval.i84, align 4, !dbg !11205
  br label %av_clip_c.exit94, !dbg !11205

av_clip_c.exit94:                                 ; preds = %if.then.i89, %if.then2.i92, %if.else3.i93
  %51 = load i32, i32* %retval.i84, align 4, !dbg !11206
  %idxprom46 = sext i32 %51 to i64, !dbg !11207
  %52 = load i32*, i32** %tmp, align 8, !dbg !11207
  %arrayidx47 = getelementptr inbounds i32, i32* %52, i64 %idxprom46, !dbg !11207
  %53 = load i32, i32* %arrayidx47, align 4, !dbg !11207
  %54 = load i32, i32* %i, align 4, !dbg !11208
  %idxprom48 = sext i32 %54 to i64, !dbg !11209
  %arrayidx49 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 %idxprom48, !dbg !11209
  store i32 %53, i32* %arrayidx49, align 4, !dbg !11210
  br label %for.inc50, !dbg !11209

for.inc50:                                        ; preds = %av_clip_c.exit94
  %55 = load i32, i32* %i, align 4, !dbg !11211
  %inc51 = add nsw i32 %55, 1, !dbg !11211
  store i32 %inc51, i32* %i, align 4, !dbg !11211
  br label %for.cond39, !dbg !11213, !llvm.loop !11214

for.end52:                                        ; preds = %for.cond39
  %56 = load i32, i32* %x, align 4, !dbg !11216
  %idxprom53 = sext i32 %56 to i64, !dbg !11217
  %57 = load i32*, i32** %b, align 8, !dbg !11217
  %arrayidx54 = getelementptr inbounds i32, i32* %57, i64 %idxprom53, !dbg !11217
  %58 = load i32, i32* %arrayidx54, align 4, !dbg !11217
  %arrayidx55 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 0, !dbg !11218
  %59 = load i32, i32* %arrayidx55, align 16, !dbg !11218
  %arrayidx56 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 7, !dbg !11219
  %60 = load i32, i32* %arrayidx56, align 4, !dbg !11219
  %add57 = add i32 %59, %60, !dbg !11220
  %mul58 = mul i32 -8, %add57, !dbg !11221
  %arrayidx59 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 1, !dbg !11222
  %61 = load i32, i32* %arrayidx59, align 4, !dbg !11222
  %arrayidx60 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 6, !dbg !11223
  %62 = load i32, i32* %arrayidx60, align 8, !dbg !11223
  %add61 = add i32 %61, %62, !dbg !11224
  %mul62 = mul i32 21, %add61, !dbg !11225
  %add63 = add i32 %mul58, %mul62, !dbg !11226
  %arrayidx64 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 2, !dbg !11227
  %63 = load i32, i32* %arrayidx64, align 8, !dbg !11227
  %arrayidx65 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 5, !dbg !11228
  %64 = load i32, i32* %arrayidx65, align 4, !dbg !11228
  %add66 = add i32 %63, %64, !dbg !11229
  %mul67 = mul i32 46, %add66, !dbg !11230
  %sub68 = sub i32 %add63, %mul67, !dbg !11231
  %arrayidx69 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 3, !dbg !11232
  %65 = load i32, i32* %arrayidx69, align 4, !dbg !11232
  %arrayidx70 = getelementptr inbounds [8 x i32], [8 x i32]* %v, i64 0, i64 4, !dbg !11233
  %66 = load i32, i32* %arrayidx70, align 16, !dbg !11233
  %add71 = add i32 %65, %66, !dbg !11234
  %mul72 = mul i32 161, %add71, !dbg !11235
  %add73 = add i32 %sub68, %mul72, !dbg !11236
  %add74 = add i32 %add73, 128, !dbg !11237
  %shr75 = ashr i32 %add74, 8, !dbg !11238
  %sub76 = sub i32 %58, %shr75, !dbg !11239
  %67 = load i32, i32* %x, align 4, !dbg !11240
  %68 = load i32, i32* %w2, align 4, !dbg !11241
  %add77 = add nsw i32 %67, %68, !dbg !11242
  %idxprom78 = sext i32 %add77 to i64, !dbg !11243
  %69 = load i32*, i32** %tmp, align 8, !dbg !11243
  %arrayidx79 = getelementptr inbounds i32, i32* %69, i64 %idxprom78, !dbg !11243
  store i32 %sub76, i32* %arrayidx79, align 4, !dbg !11244
  br label %for.inc80, !dbg !11245

for.inc80:                                        ; preds = %for.end52
  %70 = load i32, i32* %x, align 4, !dbg !11246
  %inc81 = add nsw i32 %70, 1, !dbg !11246
  store i32 %inc81, i32* %x, align 4, !dbg !11246
  br label %for.cond36, !dbg !11248, !llvm.loop !11249

for.end82:                                        ; preds = %for.cond36
  %71 = load i32*, i32** %b, align 8, !dbg !11251
  %72 = load i32*, i32** %tmp, align 8, !dbg !11252
  %73 = load i32, i32* %w2, align 4, !dbg !11253
  %idx.ext = sext i32 %73 to i64, !dbg !11254
  %add.ptr = getelementptr inbounds i32, i32* %72, i64 %idx.ext, !dbg !11254
  %74 = load i32*, i32** %tmp, align 8, !dbg !11255
  %75 = load i32, i32* %w2, align 4, !dbg !11256
  store i32* %71, i32** %dst.addr.i, align 8, !dbg !11257
  store i32* %add.ptr, i32** %src0.addr.i, align 8, !dbg !11257
  store i32* %74, i32** %src1.addr.i, align 8, !dbg !11257
  store i32 %75, i32* %w2.addr.i, align 4, !dbg !11257
  store i32 0, i32* %add.addr.i, align 4, !dbg !11257
  store i32 0, i32* %shift.addr.i, align 4, !dbg !11257
  store i32 0, i32* %i.i, align 4, !dbg !11258
  br label %for.cond.i, !dbg !11259

for.cond.i:                                       ; preds = %for.body.i, %for.end82
  %76 = load i32, i32* %i.i, align 4, !dbg !11260
  %77 = load i32, i32* %w2.addr.i, align 4, !dbg !11261
  %cmp.i83 = icmp slt i32 %76, %77, !dbg !11262
  br i1 %cmp.i83, label %for.body.i, label %interleave_12bit.exit, !dbg !11263

for.body.i:                                       ; preds = %for.cond.i
  %78 = load i32, i32* %i.i, align 4, !dbg !11264
  %idxprom.i = sext i32 %78 to i64, !dbg !11265
  %79 = load i32*, i32** %src0.addr.i, align 8, !dbg !11265
  %arrayidx.i = getelementptr inbounds i32, i32* %79, i64 %idxprom.i, !dbg !11265
  %80 = load i32, i32* %arrayidx.i, align 4, !dbg !11265
  %81 = load i32, i32* %add.addr.i, align 4, !dbg !11266
  %add1.i = add i32 %80, %81, !dbg !11267
  %82 = load i32, i32* %shift.addr.i, align 4, !dbg !11268
  %shr.i = ashr i32 %add1.i, %82, !dbg !11269
  %83 = load i32, i32* %i.i, align 4, !dbg !11270
  %mul.i = mul nsw i32 2, %83, !dbg !11271
  %idxprom2.i = sext i32 %mul.i to i64, !dbg !11272
  %84 = load i32*, i32** %dst.addr.i, align 8, !dbg !11272
  %arrayidx3.i = getelementptr inbounds i32, i32* %84, i64 %idxprom2.i, !dbg !11272
  store i32 %shr.i, i32* %arrayidx3.i, align 4, !dbg !11273
  %85 = load i32, i32* %i.i, align 4, !dbg !11274
  %idxprom4.i = sext i32 %85 to i64, !dbg !11275
  %86 = load i32*, i32** %src1.addr.i, align 8, !dbg !11275
  %arrayidx5.i = getelementptr inbounds i32, i32* %86, i64 %idxprom4.i, !dbg !11275
  %87 = load i32, i32* %arrayidx5.i, align 4, !dbg !11275
  %88 = load i32, i32* %add.addr.i, align 4, !dbg !11276
  %add6.i = add i32 %87, %88, !dbg !11277
  %89 = load i32, i32* %shift.addr.i, align 4, !dbg !11278
  %shr7.i = ashr i32 %add6.i, %89, !dbg !11279
  %90 = load i32, i32* %i.i, align 4, !dbg !11280
  %mul8.i = mul nsw i32 2, %90, !dbg !11281
  %add9.i = add nsw i32 %mul8.i, 1, !dbg !11282
  %idxprom10.i = sext i32 %add9.i to i64, !dbg !11283
  %91 = load i32*, i32** %dst.addr.i, align 8, !dbg !11283
  %arrayidx11.i = getelementptr inbounds i32, i32* %91, i64 %idxprom10.i, !dbg !11283
  store i32 %shr7.i, i32* %arrayidx11.i, align 4, !dbg !11284
  %92 = load i32, i32* %i.i, align 4, !dbg !11285
  %inc.i = add nsw i32 %92, 1, !dbg !11285
  store i32 %inc.i, i32* %i.i, align 4, !dbg !11285
  br label %for.cond.i, !dbg !11286, !llvm.loop !9827

interleave_12bit.exit:                            ; preds = %for.cond.i
  ret void, !dbg !11287
}

; Function Attrs: nounwind uwtable
define internal void @spatial_compose_daub97i_dy_12bit(%struct.DWTContext* %d, i32 %level, i32 %width, i32 %height, i32 %stride) #0 !dbg !11288 {
entry:
  %retval.i73 = alloca i32, align 4
  %x.addr.i74 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i74, metadata !1102, metadata !87), !dbg !11289
  %w.addr.i75 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i75, metadata !1109, metadata !87), !dbg !11291
  %retval.i = alloca i32, align 4
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !1102, metadata !87), !dbg !11292
  %w.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i, metadata !1109, metadata !87), !dbg !11294
  %d.addr = alloca %struct.DWTContext*, align 8
  %level.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  %vertical_compose_l0 = alloca void (i8*, i8*, i8*, i32)*, align 8
  %vertical_compose_h0 = alloca void (i8*, i8*, i8*, i32)*, align 8
  %vertical_compose_l1 = alloca void (i8*, i8*, i8*, i32)*, align 8
  %vertical_compose_h1 = alloca void (i8*, i8*, i8*, i32)*, align 8
  %cs = alloca %struct.DWTCompose*, align 8
  %i = alloca i32, align 4
  %y = alloca i32, align 4
  %b = alloca [6 x i8*], align 16
  store %struct.DWTContext* %d, %struct.DWTContext** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DWTContext** %d.addr, metadata !11295, metadata !87), !dbg !11296
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !11297, metadata !87), !dbg !11298
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !11299, metadata !87), !dbg !11300
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !11301, metadata !87), !dbg !11302
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !11303, metadata !87), !dbg !11304
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i32)** %vertical_compose_l0, metadata !11305, metadata !87), !dbg !11306
  %0 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !11307
  %vertical_compose_l01 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %0, i32 0, i32 8, !dbg !11308
  %1 = load void ()*, void ()** %vertical_compose_l01, align 8, !dbg !11308
  %2 = bitcast void ()* %1 to i8*, !dbg !11309
  %3 = bitcast i8* %2 to void (i8*, i8*, i8*, i32)*, !dbg !11309
  store void (i8*, i8*, i8*, i32)* %3, void (i8*, i8*, i8*, i32)** %vertical_compose_l0, align 8, !dbg !11306
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i32)** %vertical_compose_h0, metadata !11310, metadata !87), !dbg !11311
  %4 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !11312
  %vertical_compose_h02 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %4, i32 0, i32 9, !dbg !11313
  %5 = load void ()*, void ()** %vertical_compose_h02, align 8, !dbg !11313
  %6 = bitcast void ()* %5 to i8*, !dbg !11314
  %7 = bitcast i8* %6 to void (i8*, i8*, i8*, i32)*, !dbg !11314
  store void (i8*, i8*, i8*, i32)* %7, void (i8*, i8*, i8*, i32)** %vertical_compose_h0, align 8, !dbg !11311
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i32)** %vertical_compose_l1, metadata !11315, metadata !87), !dbg !11316
  %8 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !11317
  %vertical_compose_l13 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %8, i32 0, i32 10, !dbg !11318
  %9 = load void ()*, void ()** %vertical_compose_l13, align 8, !dbg !11318
  %10 = bitcast void ()* %9 to i8*, !dbg !11319
  %11 = bitcast i8* %10 to void (i8*, i8*, i8*, i32)*, !dbg !11319
  store void (i8*, i8*, i8*, i32)* %11, void (i8*, i8*, i8*, i32)** %vertical_compose_l1, align 8, !dbg !11316
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*, i32)** %vertical_compose_h1, metadata !11320, metadata !87), !dbg !11321
  %12 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !11322
  %vertical_compose_h14 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %12, i32 0, i32 11, !dbg !11323
  %13 = load void ()*, void ()** %vertical_compose_h14, align 8, !dbg !11323
  %14 = bitcast void ()* %13 to i8*, !dbg !11324
  %15 = bitcast i8* %14 to void (i8*, i8*, i8*, i32)*, !dbg !11324
  store void (i8*, i8*, i8*, i32)* %15, void (i8*, i8*, i8*, i32)** %vertical_compose_h1, align 8, !dbg !11321
  call void @llvm.dbg.declare(metadata %struct.DWTCompose** %cs, metadata !11325, metadata !87), !dbg !11326
  %16 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !11327
  %cs5 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %16, i32 0, i32 14, !dbg !11328
  %arraydecay = getelementptr inbounds [8 x %struct.DWTCompose], [8 x %struct.DWTCompose]* %cs5, i32 0, i32 0, !dbg !11327
  %17 = load i32, i32* %level.addr, align 4, !dbg !11329
  %idx.ext = sext i32 %17 to i64, !dbg !11330
  %add.ptr = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %arraydecay, i64 %idx.ext, !dbg !11330
  store %struct.DWTCompose* %add.ptr, %struct.DWTCompose** %cs, align 8, !dbg !11326
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11331, metadata !87), !dbg !11332
  call void @llvm.dbg.declare(metadata i32* %y, metadata !11333, metadata !87), !dbg !11334
  %18 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !11335
  %y6 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %18, i32 0, i32 1, !dbg !11336
  %19 = load i32, i32* %y6, align 8, !dbg !11336
  store i32 %19, i32* %y, align 4, !dbg !11334
  call void @llvm.dbg.declare(metadata [6 x i8*]* %b, metadata !11337, metadata !87), !dbg !11338
  store i32 0, i32* %i, align 4, !dbg !11339
  br label %for.cond, !dbg !11341

for.cond:                                         ; preds = %for.inc, %entry
  %20 = load i32, i32* %i, align 4, !dbg !11342
  %cmp = icmp slt i32 %20, 4, !dbg !11345
  br i1 %cmp, label %for.body, label %for.end, !dbg !11346

for.body:                                         ; preds = %for.cond
  %21 = load i32, i32* %i, align 4, !dbg !11347
  %idxprom = sext i32 %21 to i64, !dbg !11348
  %22 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !11348
  %b7 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %22, i32 0, i32 0, !dbg !11349
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %b7, i64 0, i64 %idxprom, !dbg !11348
  %23 = load i8*, i8** %arrayidx, align 8, !dbg !11348
  %24 = load i32, i32* %i, align 4, !dbg !11350
  %idxprom8 = sext i32 %24 to i64, !dbg !11351
  %arrayidx9 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 %idxprom8, !dbg !11351
  store i8* %23, i8** %arrayidx9, align 8, !dbg !11352
  br label %for.inc, !dbg !11351

for.inc:                                          ; preds = %for.body
  %25 = load i32, i32* %i, align 4, !dbg !11353
  %inc = add nsw i32 %25, 1, !dbg !11353
  store i32 %inc, i32* %i, align 4, !dbg !11353
  br label %for.cond, !dbg !11355, !llvm.loop !11356

for.end:                                          ; preds = %for.cond
  %26 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !11358
  %buffer = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %26, i32 0, i32 0, !dbg !11359
  %27 = load i8*, i8** %buffer, align 8, !dbg !11359
  %28 = load i32, i32* %y, align 4, !dbg !11360
  %add = add nsw i32 %28, 3, !dbg !11361
  %29 = load i32, i32* %height.addr, align 4, !dbg !11362
  %sub = sub nsw i32 %29, 1, !dbg !11363
  store i32 %add, i32* %x.addr.i, align 4, !dbg !11364
  store i32 %sub, i32* %w.addr.i, align 4, !dbg !11364
  %30 = load i32, i32* %w.addr.i, align 4, !dbg !11365
  %tobool.i = icmp ne i32 %30, 0, !dbg !11365
  br i1 %tobool.i, label %if.end.i, label %if.then.i, !dbg !11366

if.then.i:                                        ; preds = %for.end
  store i32 0, i32* %retval.i, align 4, !dbg !11367
  br label %avpriv_mirror.exit, !dbg !11367

if.end.i:                                         ; preds = %for.end
  br label %while.cond.i, !dbg !11368

while.cond.i:                                     ; preds = %if.end3.i, %if.end.i
  %31 = load i32, i32* %x.addr.i, align 4, !dbg !11369
  %32 = load i32, i32* %w.addr.i, align 4, !dbg !11370
  %cmp.i = icmp ugt i32 %31, %32, !dbg !11371
  br i1 %cmp.i, label %while.body.i, label %while.end.i, !dbg !11372

while.body.i:                                     ; preds = %while.cond.i
  %33 = load i32, i32* %x.addr.i, align 4, !dbg !11373
  %sub.i = sub nsw i32 0, %33, !dbg !11374
  store i32 %sub.i, i32* %x.addr.i, align 4, !dbg !11375
  %34 = load i32, i32* %x.addr.i, align 4, !dbg !11376
  %cmp1.i = icmp slt i32 %34, 0, !dbg !11377
  br i1 %cmp1.i, label %if.then2.i, label %if.end3.i, !dbg !11378

if.then2.i:                                       ; preds = %while.body.i
  %35 = load i32, i32* %w.addr.i, align 4, !dbg !11379
  %mul.i = mul nsw i32 2, %35, !dbg !11380
  %36 = load i32, i32* %x.addr.i, align 4, !dbg !11381
  %add.i = add nsw i32 %36, %mul.i, !dbg !11381
  store i32 %add.i, i32* %x.addr.i, align 4, !dbg !11381
  br label %if.end3.i, !dbg !11382

if.end3.i:                                        ; preds = %if.then2.i, %while.body.i
  br label %while.cond.i, !dbg !11383, !llvm.loop !1150

while.end.i:                                      ; preds = %while.cond.i
  %37 = load i32, i32* %x.addr.i, align 4, !dbg !11384
  store i32 %37, i32* %retval.i, align 4, !dbg !11385
  br label %avpriv_mirror.exit, !dbg !11385

avpriv_mirror.exit:                               ; preds = %if.then.i, %while.end.i
  %38 = load i32, i32* %retval.i, align 4, !dbg !11386
  %39 = load i32, i32* %stride.addr, align 4, !dbg !11387
  %mul = mul nsw i32 %38, %39, !dbg !11388
  %idx.ext10 = sext i32 %mul to i64, !dbg !11389
  %add.ptr11 = getelementptr inbounds i8, i8* %27, i64 %idx.ext10, !dbg !11389
  %arrayidx12 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 4, !dbg !11390
  store i8* %add.ptr11, i8** %arrayidx12, align 16, !dbg !11391
  %40 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !11392
  %buffer13 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %40, i32 0, i32 0, !dbg !11393
  %41 = load i8*, i8** %buffer13, align 8, !dbg !11393
  %42 = load i32, i32* %y, align 4, !dbg !11394
  %add14 = add nsw i32 %42, 4, !dbg !11395
  %43 = load i32, i32* %height.addr, align 4, !dbg !11396
  %sub15 = sub nsw i32 %43, 1, !dbg !11397
  store i32 %add14, i32* %x.addr.i74, align 4, !dbg !11398
  store i32 %sub15, i32* %w.addr.i75, align 4, !dbg !11398
  %44 = load i32, i32* %w.addr.i75, align 4, !dbg !11399
  %tobool.i76 = icmp ne i32 %44, 0, !dbg !11399
  br i1 %tobool.i76, label %if.end.i78, label %if.then.i77, !dbg !11400

if.then.i77:                                      ; preds = %avpriv_mirror.exit
  store i32 0, i32* %retval.i73, align 4, !dbg !11401
  br label %avpriv_mirror.exit89, !dbg !11401

if.end.i78:                                       ; preds = %avpriv_mirror.exit
  br label %while.cond.i80, !dbg !11402

while.cond.i80:                                   ; preds = %if.end3.i87, %if.end.i78
  %45 = load i32, i32* %x.addr.i74, align 4, !dbg !11403
  %46 = load i32, i32* %w.addr.i75, align 4, !dbg !11404
  %cmp.i79 = icmp ugt i32 %45, %46, !dbg !11405
  br i1 %cmp.i79, label %while.body.i83, label %while.end.i88, !dbg !11406

while.body.i83:                                   ; preds = %while.cond.i80
  %47 = load i32, i32* %x.addr.i74, align 4, !dbg !11407
  %sub.i81 = sub nsw i32 0, %47, !dbg !11408
  store i32 %sub.i81, i32* %x.addr.i74, align 4, !dbg !11409
  %48 = load i32, i32* %x.addr.i74, align 4, !dbg !11410
  %cmp1.i82 = icmp slt i32 %48, 0, !dbg !11411
  br i1 %cmp1.i82, label %if.then2.i86, label %if.end3.i87, !dbg !11412

if.then2.i86:                                     ; preds = %while.body.i83
  %49 = load i32, i32* %w.addr.i75, align 4, !dbg !11413
  %mul.i84 = mul nsw i32 2, %49, !dbg !11414
  %50 = load i32, i32* %x.addr.i74, align 4, !dbg !11415
  %add.i85 = add nsw i32 %50, %mul.i84, !dbg !11415
  store i32 %add.i85, i32* %x.addr.i74, align 4, !dbg !11415
  br label %if.end3.i87, !dbg !11416

if.end3.i87:                                      ; preds = %if.then2.i86, %while.body.i83
  br label %while.cond.i80, !dbg !11417, !llvm.loop !1150

while.end.i88:                                    ; preds = %while.cond.i80
  %51 = load i32, i32* %x.addr.i74, align 4, !dbg !11418
  store i32 %51, i32* %retval.i73, align 4, !dbg !11419
  br label %avpriv_mirror.exit89, !dbg !11419

avpriv_mirror.exit89:                             ; preds = %if.then.i77, %while.end.i88
  %52 = load i32, i32* %retval.i73, align 4, !dbg !11420
  %53 = load i32, i32* %stride.addr, align 4, !dbg !11421
  %mul17 = mul nsw i32 %52, %53, !dbg !11422
  %idx.ext18 = sext i32 %mul17 to i64, !dbg !11423
  %add.ptr19 = getelementptr inbounds i8, i8* %41, i64 %idx.ext18, !dbg !11423
  %arrayidx20 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 5, !dbg !11424
  store i8* %add.ptr19, i8** %arrayidx20, align 8, !dbg !11425
  %54 = load i32, i32* %y, align 4, !dbg !11426
  %add21 = add nsw i32 %54, 3, !dbg !11428
  %55 = load i32, i32* %height.addr, align 4, !dbg !11429
  %cmp22 = icmp ult i32 %add21, %55, !dbg !11430
  br i1 %cmp22, label %if.then, label %if.end, !dbg !11431

if.then:                                          ; preds = %avpriv_mirror.exit89
  %56 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %vertical_compose_l1, align 8, !dbg !11432
  %arrayidx23 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 3, !dbg !11434
  %57 = load i8*, i8** %arrayidx23, align 8, !dbg !11434
  %arrayidx24 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 4, !dbg !11435
  %58 = load i8*, i8** %arrayidx24, align 16, !dbg !11435
  %arrayidx25 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 5, !dbg !11436
  %59 = load i8*, i8** %arrayidx25, align 8, !dbg !11436
  %60 = load i32, i32* %width.addr, align 4, !dbg !11437
  call void %56(i8* %57, i8* %58, i8* %59, i32 %60), !dbg !11432
  br label %if.end, !dbg !11432

if.end:                                           ; preds = %if.then, %avpriv_mirror.exit89
  %61 = load i32, i32* %y, align 4, !dbg !11438
  %add26 = add nsw i32 %61, 2, !dbg !11440
  %62 = load i32, i32* %height.addr, align 4, !dbg !11441
  %cmp27 = icmp ult i32 %add26, %62, !dbg !11442
  br i1 %cmp27, label %if.then28, label %if.end32, !dbg !11443

if.then28:                                        ; preds = %if.end
  %63 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %vertical_compose_h1, align 8, !dbg !11444
  %arrayidx29 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 2, !dbg !11446
  %64 = load i8*, i8** %arrayidx29, align 16, !dbg !11446
  %arrayidx30 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 3, !dbg !11447
  %65 = load i8*, i8** %arrayidx30, align 8, !dbg !11447
  %arrayidx31 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 4, !dbg !11448
  %66 = load i8*, i8** %arrayidx31, align 16, !dbg !11448
  %67 = load i32, i32* %width.addr, align 4, !dbg !11449
  call void %63(i8* %64, i8* %65, i8* %66, i32 %67), !dbg !11444
  br label %if.end32, !dbg !11444

if.end32:                                         ; preds = %if.then28, %if.end
  %68 = load i32, i32* %y, align 4, !dbg !11450
  %add33 = add nsw i32 %68, 1, !dbg !11452
  %69 = load i32, i32* %height.addr, align 4, !dbg !11453
  %cmp34 = icmp ult i32 %add33, %69, !dbg !11454
  br i1 %cmp34, label %if.then35, label %if.end39, !dbg !11455

if.then35:                                        ; preds = %if.end32
  %70 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %vertical_compose_l0, align 8, !dbg !11456
  %arrayidx36 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 1, !dbg !11458
  %71 = load i8*, i8** %arrayidx36, align 8, !dbg !11458
  %arrayidx37 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 2, !dbg !11459
  %72 = load i8*, i8** %arrayidx37, align 16, !dbg !11459
  %arrayidx38 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 3, !dbg !11460
  %73 = load i8*, i8** %arrayidx38, align 8, !dbg !11460
  %74 = load i32, i32* %width.addr, align 4, !dbg !11461
  call void %70(i8* %71, i8* %72, i8* %73, i32 %74), !dbg !11456
  br label %if.end39, !dbg !11456

if.end39:                                         ; preds = %if.then35, %if.end32
  %75 = load i32, i32* %y, align 4, !dbg !11462
  %add40 = add nsw i32 %75, 0, !dbg !11464
  %76 = load i32, i32* %height.addr, align 4, !dbg !11465
  %cmp41 = icmp ult i32 %add40, %76, !dbg !11466
  br i1 %cmp41, label %if.then42, label %if.end46, !dbg !11467

if.then42:                                        ; preds = %if.end39
  %77 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %vertical_compose_h0, align 8, !dbg !11468
  %arrayidx43 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 0, !dbg !11470
  %78 = load i8*, i8** %arrayidx43, align 16, !dbg !11470
  %arrayidx44 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 1, !dbg !11471
  %79 = load i8*, i8** %arrayidx44, align 8, !dbg !11471
  %arrayidx45 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 2, !dbg !11472
  %80 = load i8*, i8** %arrayidx45, align 16, !dbg !11472
  %81 = load i32, i32* %width.addr, align 4, !dbg !11473
  call void %77(i8* %78, i8* %79, i8* %80, i32 %81), !dbg !11468
  br label %if.end46, !dbg !11468

if.end46:                                         ; preds = %if.then42, %if.end39
  %82 = load i32, i32* %y, align 4, !dbg !11474
  %sub47 = sub nsw i32 %82, 1, !dbg !11476
  %83 = load i32, i32* %height.addr, align 4, !dbg !11477
  %cmp48 = icmp ult i32 %sub47, %83, !dbg !11478
  br i1 %cmp48, label %if.then49, label %if.end51, !dbg !11479

if.then49:                                        ; preds = %if.end46
  %84 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !11480
  %horizontal_compose = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %84, i32 0, i32 13, !dbg !11482
  %85 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %horizontal_compose, align 8, !dbg !11482
  %arrayidx50 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 0, !dbg !11483
  %86 = load i8*, i8** %arrayidx50, align 16, !dbg !11483
  %87 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !11484
  %temp = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %87, i32 0, i32 1, !dbg !11485
  %88 = load i8*, i8** %temp, align 8, !dbg !11485
  %89 = load i32, i32* %width.addr, align 4, !dbg !11486
  call void %85(i8* %86, i8* %88, i32 %89), !dbg !11480
  br label %if.end51, !dbg !11480

if.end51:                                         ; preds = %if.then49, %if.end46
  %90 = load i32, i32* %y, align 4, !dbg !11487
  %add52 = add nsw i32 %90, 0, !dbg !11489
  %91 = load i32, i32* %height.addr, align 4, !dbg !11490
  %cmp53 = icmp ult i32 %add52, %91, !dbg !11491
  br i1 %cmp53, label %if.then54, label %if.end58, !dbg !11492

if.then54:                                        ; preds = %if.end51
  %92 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !11493
  %horizontal_compose55 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %92, i32 0, i32 13, !dbg !11495
  %93 = load void (i8*, i8*, i32)*, void (i8*, i8*, i32)** %horizontal_compose55, align 8, !dbg !11495
  %arrayidx56 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 1, !dbg !11496
  %94 = load i8*, i8** %arrayidx56, align 8, !dbg !11496
  %95 = load %struct.DWTContext*, %struct.DWTContext** %d.addr, align 8, !dbg !11497
  %temp57 = getelementptr inbounds %struct.DWTContext, %struct.DWTContext* %95, i32 0, i32 1, !dbg !11498
  %96 = load i8*, i8** %temp57, align 8, !dbg !11498
  %97 = load i32, i32* %width.addr, align 4, !dbg !11499
  call void %93(i8* %94, i8* %96, i32 %97), !dbg !11493
  br label %if.end58, !dbg !11493

if.end58:                                         ; preds = %if.then54, %if.end51
  store i32 0, i32* %i, align 4, !dbg !11500
  br label %for.cond59, !dbg !11502

for.cond59:                                       ; preds = %for.inc68, %if.end58
  %98 = load i32, i32* %i, align 4, !dbg !11503
  %cmp60 = icmp slt i32 %98, 4, !dbg !11506
  br i1 %cmp60, label %for.body61, label %for.end70, !dbg !11507

for.body61:                                       ; preds = %for.cond59
  %99 = load i32, i32* %i, align 4, !dbg !11508
  %add62 = add nsw i32 %99, 2, !dbg !11509
  %idxprom63 = sext i32 %add62 to i64, !dbg !11510
  %arrayidx64 = getelementptr inbounds [6 x i8*], [6 x i8*]* %b, i64 0, i64 %idxprom63, !dbg !11510
  %100 = load i8*, i8** %arrayidx64, align 8, !dbg !11510
  %101 = load i32, i32* %i, align 4, !dbg !11511
  %idxprom65 = sext i32 %101 to i64, !dbg !11512
  %102 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !11512
  %b66 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %102, i32 0, i32 0, !dbg !11513
  %arrayidx67 = getelementptr inbounds [8 x i8*], [8 x i8*]* %b66, i64 0, i64 %idxprom65, !dbg !11512
  store i8* %100, i8** %arrayidx67, align 8, !dbg !11514
  br label %for.inc68, !dbg !11512

for.inc68:                                        ; preds = %for.body61
  %103 = load i32, i32* %i, align 4, !dbg !11515
  %inc69 = add nsw i32 %103, 1, !dbg !11515
  store i32 %inc69, i32* %i, align 4, !dbg !11515
  br label %for.cond59, !dbg !11517, !llvm.loop !11518

for.end70:                                        ; preds = %for.cond59
  %104 = load %struct.DWTCompose*, %struct.DWTCompose** %cs, align 8, !dbg !11520
  %y71 = getelementptr inbounds %struct.DWTCompose, %struct.DWTCompose* %104, i32 0, i32 1, !dbg !11521
  %105 = load i32, i32* %y71, align 8, !dbg !11522
  %add72 = add nsw i32 %105, 2, !dbg !11522
  store i32 %add72, i32* %y71, align 8, !dbg !11522
  ret void, !dbg !11523
}

; Function Attrs: nounwind uwtable
define internal void @vertical_compose_daub97iL0_12bit(i8* %_b0, i8* %_b1, i8* %_b2, i32 %width) #0 !dbg !11524 {
entry:
  %_b0.addr = alloca i8*, align 8
  %_b1.addr = alloca i8*, align 8
  %_b2.addr = alloca i8*, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %b0 = alloca i32*, align 8
  %b1 = alloca i32*, align 8
  %b2 = alloca i32*, align 8
  store i8* %_b0, i8** %_b0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b0.addr, metadata !11525, metadata !87), !dbg !11526
  store i8* %_b1, i8** %_b1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b1.addr, metadata !11527, metadata !87), !dbg !11528
  store i8* %_b2, i8** %_b2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b2.addr, metadata !11529, metadata !87), !dbg !11530
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !11531, metadata !87), !dbg !11532
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11533, metadata !87), !dbg !11534
  call void @llvm.dbg.declare(metadata i32** %b0, metadata !11535, metadata !87), !dbg !11536
  %0 = load i8*, i8** %_b0.addr, align 8, !dbg !11537
  %1 = bitcast i8* %0 to i32*, !dbg !11538
  store i32* %1, i32** %b0, align 8, !dbg !11536
  call void @llvm.dbg.declare(metadata i32** %b1, metadata !11539, metadata !87), !dbg !11540
  %2 = load i8*, i8** %_b1.addr, align 8, !dbg !11541
  %3 = bitcast i8* %2 to i32*, !dbg !11542
  store i32* %3, i32** %b1, align 8, !dbg !11540
  call void @llvm.dbg.declare(metadata i32** %b2, metadata !11543, metadata !87), !dbg !11544
  %4 = load i8*, i8** %_b2.addr, align 8, !dbg !11545
  %5 = bitcast i8* %4 to i32*, !dbg !11546
  store i32* %5, i32** %b2, align 8, !dbg !11544
  store i32 0, i32* %i, align 4, !dbg !11547
  br label %for.cond, !dbg !11549

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !dbg !11550
  %7 = load i32, i32* %width.addr, align 4, !dbg !11553
  %cmp = icmp slt i32 %6, %7, !dbg !11554
  br i1 %cmp, label %for.body, label %for.end, !dbg !11555

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %i, align 4, !dbg !11556
  %idxprom = sext i32 %8 to i64, !dbg !11558
  %9 = load i32*, i32** %b1, align 8, !dbg !11558
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom, !dbg !11558
  %10 = load i32, i32* %arrayidx, align 4, !dbg !11558
  %11 = load i32, i32* %i, align 4, !dbg !11559
  %idxprom1 = sext i32 %11 to i64, !dbg !11560
  %12 = load i32*, i32** %b0, align 8, !dbg !11560
  %arrayidx2 = getelementptr inbounds i32, i32* %12, i64 %idxprom1, !dbg !11560
  %13 = load i32, i32* %arrayidx2, align 4, !dbg !11560
  %14 = load i32, i32* %i, align 4, !dbg !11561
  %idxprom3 = sext i32 %14 to i64, !dbg !11562
  %15 = load i32*, i32** %b2, align 8, !dbg !11562
  %arrayidx4 = getelementptr inbounds i32, i32* %15, i64 %idxprom3, !dbg !11562
  %16 = load i32, i32* %arrayidx4, align 4, !dbg !11562
  %add = add i32 %13, %16, !dbg !11563
  %mul = mul i32 217, %add, !dbg !11564
  %add5 = add i32 %mul, 2048, !dbg !11565
  %shr = ashr i32 %add5, 12, !dbg !11566
  %add6 = add i32 %10, %shr, !dbg !11567
  %17 = load i32, i32* %i, align 4, !dbg !11568
  %idxprom7 = sext i32 %17 to i64, !dbg !11569
  %18 = load i32*, i32** %b1, align 8, !dbg !11569
  %arrayidx8 = getelementptr inbounds i32, i32* %18, i64 %idxprom7, !dbg !11569
  store i32 %add6, i32* %arrayidx8, align 4, !dbg !11570
  br label %for.inc, !dbg !11571

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !11572
  %inc = add nsw i32 %19, 1, !dbg !11572
  store i32 %inc, i32* %i, align 4, !dbg !11572
  br label %for.cond, !dbg !11574, !llvm.loop !11575

for.end:                                          ; preds = %for.cond
  ret void, !dbg !11577
}

; Function Attrs: nounwind uwtable
define internal void @vertical_compose_daub97iH0_12bit(i8* %_b0, i8* %_b1, i8* %_b2, i32 %width) #0 !dbg !11578 {
entry:
  %_b0.addr = alloca i8*, align 8
  %_b1.addr = alloca i8*, align 8
  %_b2.addr = alloca i8*, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %b0 = alloca i32*, align 8
  %b1 = alloca i32*, align 8
  %b2 = alloca i32*, align 8
  store i8* %_b0, i8** %_b0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b0.addr, metadata !11579, metadata !87), !dbg !11580
  store i8* %_b1, i8** %_b1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b1.addr, metadata !11581, metadata !87), !dbg !11582
  store i8* %_b2, i8** %_b2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b2.addr, metadata !11583, metadata !87), !dbg !11584
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !11585, metadata !87), !dbg !11586
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11587, metadata !87), !dbg !11588
  call void @llvm.dbg.declare(metadata i32** %b0, metadata !11589, metadata !87), !dbg !11590
  %0 = load i8*, i8** %_b0.addr, align 8, !dbg !11591
  %1 = bitcast i8* %0 to i32*, !dbg !11592
  store i32* %1, i32** %b0, align 8, !dbg !11590
  call void @llvm.dbg.declare(metadata i32** %b1, metadata !11593, metadata !87), !dbg !11594
  %2 = load i8*, i8** %_b1.addr, align 8, !dbg !11595
  %3 = bitcast i8* %2 to i32*, !dbg !11596
  store i32* %3, i32** %b1, align 8, !dbg !11594
  call void @llvm.dbg.declare(metadata i32** %b2, metadata !11597, metadata !87), !dbg !11598
  %4 = load i8*, i8** %_b2.addr, align 8, !dbg !11599
  %5 = bitcast i8* %4 to i32*, !dbg !11600
  store i32* %5, i32** %b2, align 8, !dbg !11598
  store i32 0, i32* %i, align 4, !dbg !11601
  br label %for.cond, !dbg !11603

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !dbg !11604
  %7 = load i32, i32* %width.addr, align 4, !dbg !11607
  %cmp = icmp slt i32 %6, %7, !dbg !11608
  br i1 %cmp, label %for.body, label %for.end, !dbg !11609

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %i, align 4, !dbg !11610
  %idxprom = sext i32 %8 to i64, !dbg !11612
  %9 = load i32*, i32** %b1, align 8, !dbg !11612
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom, !dbg !11612
  %10 = load i32, i32* %arrayidx, align 4, !dbg !11612
  %11 = load i32, i32* %i, align 4, !dbg !11613
  %idxprom1 = sext i32 %11 to i64, !dbg !11614
  %12 = load i32*, i32** %b0, align 8, !dbg !11614
  %arrayidx2 = getelementptr inbounds i32, i32* %12, i64 %idxprom1, !dbg !11614
  %13 = load i32, i32* %arrayidx2, align 4, !dbg !11614
  %14 = load i32, i32* %i, align 4, !dbg !11615
  %idxprom3 = sext i32 %14 to i64, !dbg !11616
  %15 = load i32*, i32** %b2, align 8, !dbg !11616
  %arrayidx4 = getelementptr inbounds i32, i32* %15, i64 %idxprom3, !dbg !11616
  %16 = load i32, i32* %arrayidx4, align 4, !dbg !11616
  %add = add i32 %13, %16, !dbg !11617
  %mul = mul i32 6497, %add, !dbg !11618
  %add5 = add i32 %mul, 2048, !dbg !11619
  %shr = ashr i32 %add5, 12, !dbg !11620
  %add6 = add i32 %10, %shr, !dbg !11621
  %17 = load i32, i32* %i, align 4, !dbg !11622
  %idxprom7 = sext i32 %17 to i64, !dbg !11623
  %18 = load i32*, i32** %b1, align 8, !dbg !11623
  %arrayidx8 = getelementptr inbounds i32, i32* %18, i64 %idxprom7, !dbg !11623
  store i32 %add6, i32* %arrayidx8, align 4, !dbg !11624
  br label %for.inc, !dbg !11625

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !11626
  %inc = add nsw i32 %19, 1, !dbg !11626
  store i32 %inc, i32* %i, align 4, !dbg !11626
  br label %for.cond, !dbg !11628, !llvm.loop !11629

for.end:                                          ; preds = %for.cond
  ret void, !dbg !11631
}

; Function Attrs: nounwind uwtable
define internal void @vertical_compose_daub97iL1_12bit(i8* %_b0, i8* %_b1, i8* %_b2, i32 %width) #0 !dbg !11632 {
entry:
  %_b0.addr = alloca i8*, align 8
  %_b1.addr = alloca i8*, align 8
  %_b2.addr = alloca i8*, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %b0 = alloca i32*, align 8
  %b1 = alloca i32*, align 8
  %b2 = alloca i32*, align 8
  store i8* %_b0, i8** %_b0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b0.addr, metadata !11633, metadata !87), !dbg !11634
  store i8* %_b1, i8** %_b1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b1.addr, metadata !11635, metadata !87), !dbg !11636
  store i8* %_b2, i8** %_b2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b2.addr, metadata !11637, metadata !87), !dbg !11638
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !11639, metadata !87), !dbg !11640
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11641, metadata !87), !dbg !11642
  call void @llvm.dbg.declare(metadata i32** %b0, metadata !11643, metadata !87), !dbg !11644
  %0 = load i8*, i8** %_b0.addr, align 8, !dbg !11645
  %1 = bitcast i8* %0 to i32*, !dbg !11646
  store i32* %1, i32** %b0, align 8, !dbg !11644
  call void @llvm.dbg.declare(metadata i32** %b1, metadata !11647, metadata !87), !dbg !11648
  %2 = load i8*, i8** %_b1.addr, align 8, !dbg !11649
  %3 = bitcast i8* %2 to i32*, !dbg !11650
  store i32* %3, i32** %b1, align 8, !dbg !11648
  call void @llvm.dbg.declare(metadata i32** %b2, metadata !11651, metadata !87), !dbg !11652
  %4 = load i8*, i8** %_b2.addr, align 8, !dbg !11653
  %5 = bitcast i8* %4 to i32*, !dbg !11654
  store i32* %5, i32** %b2, align 8, !dbg !11652
  store i32 0, i32* %i, align 4, !dbg !11655
  br label %for.cond, !dbg !11657

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !dbg !11658
  %7 = load i32, i32* %width.addr, align 4, !dbg !11661
  %cmp = icmp slt i32 %6, %7, !dbg !11662
  br i1 %cmp, label %for.body, label %for.end, !dbg !11663

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %i, align 4, !dbg !11664
  %idxprom = sext i32 %8 to i64, !dbg !11666
  %9 = load i32*, i32** %b1, align 8, !dbg !11666
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom, !dbg !11666
  %10 = load i32, i32* %arrayidx, align 4, !dbg !11666
  %11 = load i32, i32* %i, align 4, !dbg !11667
  %idxprom1 = sext i32 %11 to i64, !dbg !11668
  %12 = load i32*, i32** %b0, align 8, !dbg !11668
  %arrayidx2 = getelementptr inbounds i32, i32* %12, i64 %idxprom1, !dbg !11668
  %13 = load i32, i32* %arrayidx2, align 4, !dbg !11668
  %14 = load i32, i32* %i, align 4, !dbg !11669
  %idxprom3 = sext i32 %14 to i64, !dbg !11670
  %15 = load i32*, i32** %b2, align 8, !dbg !11670
  %arrayidx4 = getelementptr inbounds i32, i32* %15, i64 %idxprom3, !dbg !11670
  %16 = load i32, i32* %arrayidx4, align 4, !dbg !11670
  %add = add i32 %13, %16, !dbg !11671
  %mul = mul i32 1817, %add, !dbg !11672
  %add5 = add i32 %mul, 2048, !dbg !11673
  %shr = ashr i32 %add5, 12, !dbg !11674
  %sub = sub i32 %10, %shr, !dbg !11675
  %17 = load i32, i32* %i, align 4, !dbg !11676
  %idxprom6 = sext i32 %17 to i64, !dbg !11677
  %18 = load i32*, i32** %b1, align 8, !dbg !11677
  %arrayidx7 = getelementptr inbounds i32, i32* %18, i64 %idxprom6, !dbg !11677
  store i32 %sub, i32* %arrayidx7, align 4, !dbg !11678
  br label %for.inc, !dbg !11679

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !11680
  %inc = add nsw i32 %19, 1, !dbg !11680
  store i32 %inc, i32* %i, align 4, !dbg !11680
  br label %for.cond, !dbg !11682, !llvm.loop !11683

for.end:                                          ; preds = %for.cond
  ret void, !dbg !11685
}

; Function Attrs: nounwind uwtable
define internal void @vertical_compose_daub97iH1_12bit(i8* %_b0, i8* %_b1, i8* %_b2, i32 %width) #0 !dbg !11686 {
entry:
  %_b0.addr = alloca i8*, align 8
  %_b1.addr = alloca i8*, align 8
  %_b2.addr = alloca i8*, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %b0 = alloca i32*, align 8
  %b1 = alloca i32*, align 8
  %b2 = alloca i32*, align 8
  store i8* %_b0, i8** %_b0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b0.addr, metadata !11687, metadata !87), !dbg !11688
  store i8* %_b1, i8** %_b1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b1.addr, metadata !11689, metadata !87), !dbg !11690
  store i8* %_b2, i8** %_b2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b2.addr, metadata !11691, metadata !87), !dbg !11692
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !11693, metadata !87), !dbg !11694
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11695, metadata !87), !dbg !11696
  call void @llvm.dbg.declare(metadata i32** %b0, metadata !11697, metadata !87), !dbg !11698
  %0 = load i8*, i8** %_b0.addr, align 8, !dbg !11699
  %1 = bitcast i8* %0 to i32*, !dbg !11700
  store i32* %1, i32** %b0, align 8, !dbg !11698
  call void @llvm.dbg.declare(metadata i32** %b1, metadata !11701, metadata !87), !dbg !11702
  %2 = load i8*, i8** %_b1.addr, align 8, !dbg !11703
  %3 = bitcast i8* %2 to i32*, !dbg !11704
  store i32* %3, i32** %b1, align 8, !dbg !11702
  call void @llvm.dbg.declare(metadata i32** %b2, metadata !11705, metadata !87), !dbg !11706
  %4 = load i8*, i8** %_b2.addr, align 8, !dbg !11707
  %5 = bitcast i8* %4 to i32*, !dbg !11708
  store i32* %5, i32** %b2, align 8, !dbg !11706
  store i32 0, i32* %i, align 4, !dbg !11709
  br label %for.cond, !dbg !11711

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !dbg !11712
  %7 = load i32, i32* %width.addr, align 4, !dbg !11715
  %cmp = icmp slt i32 %6, %7, !dbg !11716
  br i1 %cmp, label %for.body, label %for.end, !dbg !11717

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %i, align 4, !dbg !11718
  %idxprom = sext i32 %8 to i64, !dbg !11720
  %9 = load i32*, i32** %b1, align 8, !dbg !11720
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom, !dbg !11720
  %10 = load i32, i32* %arrayidx, align 4, !dbg !11720
  %11 = load i32, i32* %i, align 4, !dbg !11721
  %idxprom1 = sext i32 %11 to i64, !dbg !11722
  %12 = load i32*, i32** %b0, align 8, !dbg !11722
  %arrayidx2 = getelementptr inbounds i32, i32* %12, i64 %idxprom1, !dbg !11722
  %13 = load i32, i32* %arrayidx2, align 4, !dbg !11722
  %14 = load i32, i32* %i, align 4, !dbg !11723
  %idxprom3 = sext i32 %14 to i64, !dbg !11724
  %15 = load i32*, i32** %b2, align 8, !dbg !11724
  %arrayidx4 = getelementptr inbounds i32, i32* %15, i64 %idxprom3, !dbg !11724
  %16 = load i32, i32* %arrayidx4, align 4, !dbg !11724
  %add = add i32 %13, %16, !dbg !11725
  %mul = mul i32 113, %add, !dbg !11726
  %add5 = add i32 %mul, 64, !dbg !11727
  %shr = ashr i32 %add5, 7, !dbg !11728
  %sub = sub i32 %10, %shr, !dbg !11729
  %17 = load i32, i32* %i, align 4, !dbg !11730
  %idxprom6 = sext i32 %17 to i64, !dbg !11731
  %18 = load i32*, i32** %b1, align 8, !dbg !11731
  %arrayidx7 = getelementptr inbounds i32, i32* %18, i64 %idxprom6, !dbg !11731
  store i32 %sub, i32* %arrayidx7, align 4, !dbg !11732
  br label %for.inc, !dbg !11733

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !11734
  %inc = add nsw i32 %19, 1, !dbg !11734
  store i32 %inc, i32* %i, align 4, !dbg !11734
  br label %for.cond, !dbg !11736, !llvm.loop !11737

for.end:                                          ; preds = %for.cond
  ret void, !dbg !11739
}

; Function Attrs: nounwind uwtable
define internal void @horizontal_compose_daub97i_12bit(i8* %_b, i8* %_temp, i32 %w) #0 !dbg !11740 {
entry:
  %_b.addr = alloca i8*, align 8
  %_temp.addr = alloca i8*, align 8
  %w.addr = alloca i32, align 4
  %w2 = alloca i32, align 4
  %x = alloca i32, align 4
  %b0 = alloca i32, align 4
  %b1 = alloca i32, align 4
  %b2 = alloca i32, align 4
  %b = alloca i32*, align 8
  %temp = alloca i32*, align 8
  store i8* %_b, i8** %_b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_b.addr, metadata !11741, metadata !87), !dbg !11742
  store i8* %_temp, i8** %_temp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_temp.addr, metadata !11743, metadata !87), !dbg !11744
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !11745, metadata !87), !dbg !11746
  call void @llvm.dbg.declare(metadata i32* %w2, metadata !11747, metadata !87), !dbg !11748
  %0 = load i32, i32* %w.addr, align 4, !dbg !11749
  %shr = ashr i32 %0, 1, !dbg !11750
  store i32 %shr, i32* %w2, align 4, !dbg !11748
  call void @llvm.dbg.declare(metadata i32* %x, metadata !11751, metadata !87), !dbg !11752
  call void @llvm.dbg.declare(metadata i32* %b0, metadata !11753, metadata !87), !dbg !11754
  call void @llvm.dbg.declare(metadata i32* %b1, metadata !11755, metadata !87), !dbg !11756
  call void @llvm.dbg.declare(metadata i32* %b2, metadata !11757, metadata !87), !dbg !11758
  call void @llvm.dbg.declare(metadata i32** %b, metadata !11759, metadata !87), !dbg !11760
  %1 = load i8*, i8** %_b.addr, align 8, !dbg !11761
  %2 = bitcast i8* %1 to i32*, !dbg !11762
  store i32* %2, i32** %b, align 8, !dbg !11760
  call void @llvm.dbg.declare(metadata i32** %temp, metadata !11763, metadata !87), !dbg !11764
  %3 = load i8*, i8** %_temp.addr, align 8, !dbg !11765
  %4 = bitcast i8* %3 to i32*, !dbg !11766
  store i32* %4, i32** %temp, align 8, !dbg !11764
  %5 = load i32*, i32** %b, align 8, !dbg !11767
  %arrayidx = getelementptr inbounds i32, i32* %5, i64 0, !dbg !11767
  %6 = load i32, i32* %arrayidx, align 4, !dbg !11767
  %7 = load i32, i32* %w2, align 4, !dbg !11768
  %idxprom = sext i32 %7 to i64, !dbg !11769
  %8 = load i32*, i32** %b, align 8, !dbg !11769
  %arrayidx1 = getelementptr inbounds i32, i32* %8, i64 %idxprom, !dbg !11769
  %9 = load i32, i32* %arrayidx1, align 4, !dbg !11769
  %10 = load i32, i32* %w2, align 4, !dbg !11770
  %idxprom2 = sext i32 %10 to i64, !dbg !11771
  %11 = load i32*, i32** %b, align 8, !dbg !11771
  %arrayidx3 = getelementptr inbounds i32, i32* %11, i64 %idxprom2, !dbg !11771
  %12 = load i32, i32* %arrayidx3, align 4, !dbg !11771
  %add = add i32 %9, %12, !dbg !11772
  %mul = mul i32 1817, %add, !dbg !11773
  %add4 = add i32 %mul, 2048, !dbg !11774
  %shr5 = ashr i32 %add4, 12, !dbg !11775
  %sub = sub i32 %6, %shr5, !dbg !11776
  %13 = load i32*, i32** %temp, align 8, !dbg !11777
  %arrayidx6 = getelementptr inbounds i32, i32* %13, i64 0, !dbg !11777
  store i32 %sub, i32* %arrayidx6, align 4, !dbg !11778
  store i32 1, i32* %x, align 4, !dbg !11779
  br label %for.cond, !dbg !11781

for.cond:                                         ; preds = %for.inc, %entry
  %14 = load i32, i32* %x, align 4, !dbg !11782
  %15 = load i32, i32* %w2, align 4, !dbg !11785
  %cmp = icmp slt i32 %14, %15, !dbg !11786
  br i1 %cmp, label %for.body, label %for.end, !dbg !11787

for.body:                                         ; preds = %for.cond
  %16 = load i32, i32* %x, align 4, !dbg !11788
  %idxprom7 = sext i32 %16 to i64, !dbg !11790
  %17 = load i32*, i32** %b, align 8, !dbg !11790
  %arrayidx8 = getelementptr inbounds i32, i32* %17, i64 %idxprom7, !dbg !11790
  %18 = load i32, i32* %arrayidx8, align 4, !dbg !11790
  %19 = load i32, i32* %x, align 4, !dbg !11791
  %20 = load i32, i32* %w2, align 4, !dbg !11792
  %add9 = add nsw i32 %19, %20, !dbg !11793
  %sub10 = sub nsw i32 %add9, 1, !dbg !11794
  %idxprom11 = sext i32 %sub10 to i64, !dbg !11795
  %21 = load i32*, i32** %b, align 8, !dbg !11795
  %arrayidx12 = getelementptr inbounds i32, i32* %21, i64 %idxprom11, !dbg !11795
  %22 = load i32, i32* %arrayidx12, align 4, !dbg !11795
  %23 = load i32, i32* %x, align 4, !dbg !11796
  %24 = load i32, i32* %w2, align 4, !dbg !11797
  %add13 = add nsw i32 %23, %24, !dbg !11798
  %idxprom14 = sext i32 %add13 to i64, !dbg !11799
  %25 = load i32*, i32** %b, align 8, !dbg !11799
  %arrayidx15 = getelementptr inbounds i32, i32* %25, i64 %idxprom14, !dbg !11799
  %26 = load i32, i32* %arrayidx15, align 4, !dbg !11799
  %add16 = add i32 %22, %26, !dbg !11800
  %mul17 = mul i32 1817, %add16, !dbg !11801
  %add18 = add i32 %mul17, 2048, !dbg !11802
  %shr19 = ashr i32 %add18, 12, !dbg !11803
  %sub20 = sub i32 %18, %shr19, !dbg !11804
  %27 = load i32, i32* %x, align 4, !dbg !11805
  %idxprom21 = sext i32 %27 to i64, !dbg !11806
  %28 = load i32*, i32** %temp, align 8, !dbg !11806
  %arrayidx22 = getelementptr inbounds i32, i32* %28, i64 %idxprom21, !dbg !11806
  store i32 %sub20, i32* %arrayidx22, align 4, !dbg !11807
  %29 = load i32, i32* %x, align 4, !dbg !11808
  %30 = load i32, i32* %w2, align 4, !dbg !11809
  %add23 = add nsw i32 %29, %30, !dbg !11810
  %sub24 = sub nsw i32 %add23, 1, !dbg !11811
  %idxprom25 = sext i32 %sub24 to i64, !dbg !11812
  %31 = load i32*, i32** %b, align 8, !dbg !11812
  %arrayidx26 = getelementptr inbounds i32, i32* %31, i64 %idxprom25, !dbg !11812
  %32 = load i32, i32* %arrayidx26, align 4, !dbg !11812
  %33 = load i32, i32* %x, align 4, !dbg !11813
  %sub27 = sub nsw i32 %33, 1, !dbg !11814
  %idxprom28 = sext i32 %sub27 to i64, !dbg !11815
  %34 = load i32*, i32** %temp, align 8, !dbg !11815
  %arrayidx29 = getelementptr inbounds i32, i32* %34, i64 %idxprom28, !dbg !11815
  %35 = load i32, i32* %arrayidx29, align 4, !dbg !11815
  %36 = load i32, i32* %x, align 4, !dbg !11816
  %idxprom30 = sext i32 %36 to i64, !dbg !11817
  %37 = load i32*, i32** %temp, align 8, !dbg !11817
  %arrayidx31 = getelementptr inbounds i32, i32* %37, i64 %idxprom30, !dbg !11817
  %38 = load i32, i32* %arrayidx31, align 4, !dbg !11817
  %add32 = add i32 %35, %38, !dbg !11818
  %mul33 = mul i32 113, %add32, !dbg !11819
  %add34 = add i32 %mul33, 64, !dbg !11820
  %shr35 = ashr i32 %add34, 7, !dbg !11821
  %sub36 = sub i32 %32, %shr35, !dbg !11822
  %39 = load i32, i32* %x, align 4, !dbg !11823
  %40 = load i32, i32* %w2, align 4, !dbg !11824
  %add37 = add nsw i32 %39, %40, !dbg !11825
  %sub38 = sub nsw i32 %add37, 1, !dbg !11826
  %idxprom39 = sext i32 %sub38 to i64, !dbg !11827
  %41 = load i32*, i32** %temp, align 8, !dbg !11827
  %arrayidx40 = getelementptr inbounds i32, i32* %41, i64 %idxprom39, !dbg !11827
  store i32 %sub36, i32* %arrayidx40, align 4, !dbg !11828
  br label %for.inc, !dbg !11829

for.inc:                                          ; preds = %for.body
  %42 = load i32, i32* %x, align 4, !dbg !11830
  %inc = add nsw i32 %42, 1, !dbg !11830
  store i32 %inc, i32* %x, align 4, !dbg !11830
  br label %for.cond, !dbg !11832, !llvm.loop !11833

for.end:                                          ; preds = %for.cond
  %43 = load i32, i32* %w.addr, align 4, !dbg !11835
  %sub41 = sub nsw i32 %43, 1, !dbg !11836
  %idxprom42 = sext i32 %sub41 to i64, !dbg !11837
  %44 = load i32*, i32** %b, align 8, !dbg !11837
  %arrayidx43 = getelementptr inbounds i32, i32* %44, i64 %idxprom42, !dbg !11837
  %45 = load i32, i32* %arrayidx43, align 4, !dbg !11837
  %46 = load i32, i32* %w2, align 4, !dbg !11838
  %sub44 = sub nsw i32 %46, 1, !dbg !11839
  %idxprom45 = sext i32 %sub44 to i64, !dbg !11840
  %47 = load i32*, i32** %temp, align 8, !dbg !11840
  %arrayidx46 = getelementptr inbounds i32, i32* %47, i64 %idxprom45, !dbg !11840
  %48 = load i32, i32* %arrayidx46, align 4, !dbg !11840
  %49 = load i32, i32* %w2, align 4, !dbg !11841
  %sub47 = sub nsw i32 %49, 1, !dbg !11842
  %idxprom48 = sext i32 %sub47 to i64, !dbg !11843
  %50 = load i32*, i32** %temp, align 8, !dbg !11843
  %arrayidx49 = getelementptr inbounds i32, i32* %50, i64 %idxprom48, !dbg !11843
  %51 = load i32, i32* %arrayidx49, align 4, !dbg !11843
  %add50 = add i32 %48, %51, !dbg !11844
  %mul51 = mul i32 113, %add50, !dbg !11845
  %add52 = add i32 %mul51, 64, !dbg !11846
  %shr53 = ashr i32 %add52, 7, !dbg !11847
  %sub54 = sub i32 %45, %shr53, !dbg !11848
  %52 = load i32, i32* %w.addr, align 4, !dbg !11849
  %sub55 = sub nsw i32 %52, 1, !dbg !11850
  %idxprom56 = sext i32 %sub55 to i64, !dbg !11851
  %53 = load i32*, i32** %temp, align 8, !dbg !11851
  %arrayidx57 = getelementptr inbounds i32, i32* %53, i64 %idxprom56, !dbg !11851
  store i32 %sub54, i32* %arrayidx57, align 4, !dbg !11852
  %54 = load i32*, i32** %temp, align 8, !dbg !11853
  %arrayidx58 = getelementptr inbounds i32, i32* %54, i64 0, !dbg !11853
  %55 = load i32, i32* %arrayidx58, align 4, !dbg !11853
  %56 = load i32, i32* %w2, align 4, !dbg !11854
  %idxprom59 = sext i32 %56 to i64, !dbg !11855
  %57 = load i32*, i32** %temp, align 8, !dbg !11855
  %arrayidx60 = getelementptr inbounds i32, i32* %57, i64 %idxprom59, !dbg !11855
  %58 = load i32, i32* %arrayidx60, align 4, !dbg !11855
  %59 = load i32, i32* %w2, align 4, !dbg !11856
  %idxprom61 = sext i32 %59 to i64, !dbg !11857
  %60 = load i32*, i32** %temp, align 8, !dbg !11857
  %arrayidx62 = getelementptr inbounds i32, i32* %60, i64 %idxprom61, !dbg !11857
  %61 = load i32, i32* %arrayidx62, align 4, !dbg !11857
  %add63 = add i32 %58, %61, !dbg !11858
  %mul64 = mul i32 217, %add63, !dbg !11859
  %add65 = add i32 %mul64, 2048, !dbg !11860
  %shr66 = ashr i32 %add65, 12, !dbg !11861
  %add67 = add i32 %55, %shr66, !dbg !11862
  store i32 %add67, i32* %b2, align 4, !dbg !11863
  store i32 %add67, i32* %b0, align 4, !dbg !11864
  %62 = load i32, i32* %b0, align 4, !dbg !11865
  %neg = xor i32 %62, -1, !dbg !11866
  %shr68 = ashr i32 %neg, 1, !dbg !11867
  %neg69 = xor i32 %shr68, -1, !dbg !11868
  %63 = load i32*, i32** %b, align 8, !dbg !11869
  %arrayidx70 = getelementptr inbounds i32, i32* %63, i64 0, !dbg !11869
  store i32 %neg69, i32* %arrayidx70, align 4, !dbg !11870
  store i32 1, i32* %x, align 4, !dbg !11871
  br label %for.cond71, !dbg !11873

for.cond71:                                       ; preds = %for.inc110, %for.end
  %64 = load i32, i32* %x, align 4, !dbg !11874
  %65 = load i32, i32* %w2, align 4, !dbg !11877
  %cmp72 = icmp slt i32 %64, %65, !dbg !11878
  br i1 %cmp72, label %for.body73, label %for.end112, !dbg !11879

for.body73:                                       ; preds = %for.cond71
  %66 = load i32, i32* %x, align 4, !dbg !11880
  %idxprom74 = sext i32 %66 to i64, !dbg !11882
  %67 = load i32*, i32** %temp, align 8, !dbg !11882
  %arrayidx75 = getelementptr inbounds i32, i32* %67, i64 %idxprom74, !dbg !11882
  %68 = load i32, i32* %arrayidx75, align 4, !dbg !11882
  %69 = load i32, i32* %x, align 4, !dbg !11883
  %70 = load i32, i32* %w2, align 4, !dbg !11884
  %add76 = add nsw i32 %69, %70, !dbg !11885
  %sub77 = sub nsw i32 %add76, 1, !dbg !11886
  %idxprom78 = sext i32 %sub77 to i64, !dbg !11887
  %71 = load i32*, i32** %temp, align 8, !dbg !11887
  %arrayidx79 = getelementptr inbounds i32, i32* %71, i64 %idxprom78, !dbg !11887
  %72 = load i32, i32* %arrayidx79, align 4, !dbg !11887
  %73 = load i32, i32* %x, align 4, !dbg !11888
  %74 = load i32, i32* %w2, align 4, !dbg !11889
  %add80 = add nsw i32 %73, %74, !dbg !11890
  %idxprom81 = sext i32 %add80 to i64, !dbg !11891
  %75 = load i32*, i32** %temp, align 8, !dbg !11891
  %arrayidx82 = getelementptr inbounds i32, i32* %75, i64 %idxprom81, !dbg !11891
  %76 = load i32, i32* %arrayidx82, align 4, !dbg !11891
  %add83 = add i32 %72, %76, !dbg !11892
  %mul84 = mul i32 217, %add83, !dbg !11893
  %add85 = add i32 %mul84, 2048, !dbg !11894
  %shr86 = ashr i32 %add85, 12, !dbg !11895
  %add87 = add i32 %68, %shr86, !dbg !11896
  store i32 %add87, i32* %b2, align 4, !dbg !11897
  %77 = load i32, i32* %x, align 4, !dbg !11898
  %78 = load i32, i32* %w2, align 4, !dbg !11899
  %add88 = add nsw i32 %77, %78, !dbg !11900
  %sub89 = sub nsw i32 %add88, 1, !dbg !11901
  %idxprom90 = sext i32 %sub89 to i64, !dbg !11902
  %79 = load i32*, i32** %temp, align 8, !dbg !11902
  %arrayidx91 = getelementptr inbounds i32, i32* %79, i64 %idxprom90, !dbg !11902
  %80 = load i32, i32* %arrayidx91, align 4, !dbg !11902
  %81 = load i32, i32* %b0, align 4, !dbg !11903
  %82 = load i32, i32* %b2, align 4, !dbg !11904
  %add92 = add i32 %81, %82, !dbg !11905
  %mul93 = mul i32 6497, %add92, !dbg !11906
  %add94 = add i32 %mul93, 2048, !dbg !11907
  %shr95 = ashr i32 %add94, 12, !dbg !11908
  %add96 = add i32 %80, %shr95, !dbg !11909
  store i32 %add96, i32* %b1, align 4, !dbg !11910
  %83 = load i32, i32* %b1, align 4, !dbg !11911
  %neg97 = xor i32 %83, -1, !dbg !11912
  %shr98 = ashr i32 %neg97, 1, !dbg !11913
  %neg99 = xor i32 %shr98, -1, !dbg !11914
  %84 = load i32, i32* %x, align 4, !dbg !11915
  %mul100 = mul nsw i32 2, %84, !dbg !11916
  %sub101 = sub nsw i32 %mul100, 1, !dbg !11917
  %idxprom102 = sext i32 %sub101 to i64, !dbg !11918
  %85 = load i32*, i32** %b, align 8, !dbg !11918
  %arrayidx103 = getelementptr inbounds i32, i32* %85, i64 %idxprom102, !dbg !11918
  store i32 %neg99, i32* %arrayidx103, align 4, !dbg !11919
  %86 = load i32, i32* %b2, align 4, !dbg !11920
  %neg104 = xor i32 %86, -1, !dbg !11921
  %shr105 = ashr i32 %neg104, 1, !dbg !11922
  %neg106 = xor i32 %shr105, -1, !dbg !11923
  %87 = load i32, i32* %x, align 4, !dbg !11924
  %mul107 = mul nsw i32 2, %87, !dbg !11925
  %idxprom108 = sext i32 %mul107 to i64, !dbg !11926
  %88 = load i32*, i32** %b, align 8, !dbg !11926
  %arrayidx109 = getelementptr inbounds i32, i32* %88, i64 %idxprom108, !dbg !11926
  store i32 %neg106, i32* %arrayidx109, align 4, !dbg !11927
  %89 = load i32, i32* %b2, align 4, !dbg !11928
  store i32 %89, i32* %b0, align 4, !dbg !11929
  br label %for.inc110, !dbg !11930

for.inc110:                                       ; preds = %for.body73
  %90 = load i32, i32* %x, align 4, !dbg !11931
  %inc111 = add nsw i32 %90, 1, !dbg !11931
  store i32 %inc111, i32* %x, align 4, !dbg !11931
  br label %for.cond71, !dbg !11933, !llvm.loop !11934

for.end112:                                       ; preds = %for.cond71
  %91 = load i32, i32* %w.addr, align 4, !dbg !11936
  %sub113 = sub nsw i32 %91, 1, !dbg !11937
  %idxprom114 = sext i32 %sub113 to i64, !dbg !11938
  %92 = load i32*, i32** %temp, align 8, !dbg !11938
  %arrayidx115 = getelementptr inbounds i32, i32* %92, i64 %idxprom114, !dbg !11938
  %93 = load i32, i32* %arrayidx115, align 4, !dbg !11938
  %94 = load i32, i32* %b2, align 4, !dbg !11939
  %95 = load i32, i32* %b2, align 4, !dbg !11940
  %add116 = add i32 %94, %95, !dbg !11941
  %mul117 = mul i32 6497, %add116, !dbg !11942
  %add118 = add i32 %mul117, 2048, !dbg !11943
  %shr119 = ashr i32 %add118, 12, !dbg !11944
  %add120 = add i32 %93, %shr119, !dbg !11945
  %neg121 = xor i32 %add120, -1, !dbg !11946
  %shr122 = lshr i32 %neg121, 1, !dbg !11947
  %neg123 = xor i32 %shr122, -1, !dbg !11948
  %96 = load i32, i32* %w.addr, align 4, !dbg !11949
  %sub124 = sub nsw i32 %96, 1, !dbg !11950
  %idxprom125 = sext i32 %sub124 to i64, !dbg !11951
  %97 = load i32*, i32** %b, align 8, !dbg !11951
  %arrayidx126 = getelementptr inbounds i32, i32* %97, i64 %idxprom125, !dbg !11951
  store i32 %neg123, i32* %arrayidx126, align 4, !dbg !11952
  ret void, !dbg !11953
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!30, !31}
!llvm.ident = !{!32}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !16)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavcodec--dirac_dwt.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2 = !{!3}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dwt_type", file: !4, line: 74, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "libavcodec/dirac_dwt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15}
!6 = !DIEnumerator(name: "DWT_SNOW_DAUB9_7", value: 0)
!7 = !DIEnumerator(name: "DWT_SNOW_LEGALL5_3", value: 1)
!8 = !DIEnumerator(name: "DWT_DIRAC_DD9_7", value: 2)
!9 = !DIEnumerator(name: "DWT_DIRAC_LEGALL5_3", value: 3)
!10 = !DIEnumerator(name: "DWT_DIRAC_DD13_7", value: 4)
!11 = !DIEnumerator(name: "DWT_DIRAC_HAAR0", value: 5)
!12 = !DIEnumerator(name: "DWT_DIRAC_HAAR1", value: 6)
!13 = !DIEnumerator(name: "DWT_DIRAC_FIDELITY", value: 7)
!14 = !DIEnumerator(name: "DWT_DIRAC_DAUB9_7", value: 8)
!15 = !DIEnumerator(name: "DWT_NUM_TYPES", value: 9)
!16 = !{!17, !18, !19, !20, !24, !28}
!17 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!18 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!19 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64, align: 64)
!21 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !22, line: 48, baseType: !23)
!22 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!23 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!24 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !25, size: 64, align: 64)
!25 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !26, line: 195, baseType: !27)
!26 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!27 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!28 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !29, size: 64, align: 64)
!29 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !26, line: 196, baseType: !18)
!30 = !{i32 2, !"Dwarf Version", i32 4}
!31 = !{i32 2, !"Debug Info Version", i32 3}
!32 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!33 = distinct !DISubprogram(name: "ff_spatial_idwt_init", scope: !34, file: !34, line: 36, type: !35, isLocal: false, isDefinition: true, scopeLine: 38, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!34 = !DIFile(filename: "libavcodec/dirac_dwt.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!35 = !DISubroutineType(types: !36)
!36 = !{!18, !37, !75, !3, !18, !18}
!37 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !38, size: 64, align: 64)
!38 = !DIDerivedType(tag: DW_TAG_typedef, name: "DWTContext", file: !4, line: 72, baseType: !39)
!39 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DWTContext", file: !4, line: 54, size: 5376, align: 64, elements: !40)
!40 = !{!41, !42, !43, !44, !45, !46, !47, !48, !53, !57, !58, !59, !60, !61, !65}
!41 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !39, file: !4, line: 55, baseType: !20, size: 64, align: 64)
!42 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !39, file: !4, line: 56, baseType: !20, size: 64, align: 64, offset: 64)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !39, file: !4, line: 57, baseType: !18, size: 32, align: 32, offset: 128)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !39, file: !4, line: 58, baseType: !18, size: 32, align: 32, offset: 160)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !39, file: !4, line: 59, baseType: !18, size: 32, align: 32, offset: 192)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "decomposition_count", scope: !39, file: !4, line: 60, baseType: !18, size: 32, align: 32, offset: 224)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "support", scope: !39, file: !4, line: 61, baseType: !18, size: 32, align: 32, offset: 256)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_compose", scope: !39, file: !4, line: 63, baseType: !49, size: 64, align: 64, offset: 320)
!49 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !50, size: 64, align: 64)
!50 = !DISubroutineType(types: !51)
!51 = !{null, !52, !18, !18, !18, !18}
!52 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !39, size: 64, align: 64)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "vertical_compose_l0", scope: !39, file: !4, line: 64, baseType: !54, size: 64, align: 64, offset: 384)
!54 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 64, align: 64)
!55 = !DISubroutineType(types: !56)
!56 = !{null}
!57 = !DIDerivedType(tag: DW_TAG_member, name: "vertical_compose_h0", scope: !39, file: !4, line: 65, baseType: !54, size: 64, align: 64, offset: 448)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "vertical_compose_l1", scope: !39, file: !4, line: 66, baseType: !54, size: 64, align: 64, offset: 512)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "vertical_compose_h1", scope: !39, file: !4, line: 67, baseType: !54, size: 64, align: 64, offset: 576)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "vertical_compose", scope: !39, file: !4, line: 68, baseType: !54, size: 64, align: 64, offset: 640)
!61 = !DIDerivedType(tag: DW_TAG_member, name: "horizontal_compose", scope: !39, file: !4, line: 69, baseType: !62, size: 64, align: 64, offset: 704)
!62 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !63, size: 64, align: 64)
!63 = !DISubroutineType(types: !64)
!64 = !{null, !20, !20, !18}
!65 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !39, file: !4, line: 71, baseType: !66, size: 4608, align: 64, offset: 768)
!66 = !DICompositeType(tag: DW_TAG_array_type, baseType: !67, size: 4608, align: 64, elements: !72)
!67 = !DIDerivedType(tag: DW_TAG_typedef, name: "DWTCompose", file: !4, line: 35, baseType: !68)
!68 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DWTCompose", file: !4, line: 32, size: 576, align: 64, elements: !69)
!69 = !{!70, !74}
!70 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !68, file: !4, line: 33, baseType: !71, size: 512, align: 64)
!71 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 512, align: 64, elements: !72)
!72 = !{!73}
!73 = !DISubrange(count: 8)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !68, file: !4, line: 34, baseType: !18, size: 32, align: 32, offset: 512)
!75 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !76, size: 64, align: 64)
!76 = !DIDerivedType(tag: DW_TAG_typedef, name: "DWTPlane", file: !4, line: 44, baseType: !77)
!77 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DWTPlane", file: !4, line: 37, size: 320, align: 64, elements: !78)
!78 = !{!79, !80, !81, !82, !83, !84}
!79 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !77, file: !4, line: 38, baseType: !18, size: 32, align: 32)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !77, file: !4, line: 39, baseType: !18, size: 32, align: 32, offset: 32)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !77, file: !4, line: 40, baseType: !18, size: 32, align: 32, offset: 64)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !77, file: !4, line: 41, baseType: !20, size: 64, align: 64, offset: 128)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "buf_base", scope: !77, file: !4, line: 42, baseType: !20, size: 64, align: 64, offset: 192)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !77, file: !4, line: 43, baseType: !20, size: 64, align: 64, offset: 256)
!85 = !{}
!86 = !DILocalVariable(name: "d", arg: 1, scope: !33, file: !34, line: 36, type: !37)
!87 = !DIExpression()
!88 = !DILocation(line: 36, column: 38, scope: !33)
!89 = !DILocalVariable(name: "p", arg: 2, scope: !33, file: !34, line: 36, type: !75)
!90 = !DILocation(line: 36, column: 51, scope: !33)
!91 = !DILocalVariable(name: "type", arg: 3, scope: !33, file: !34, line: 36, type: !3)
!92 = !DILocation(line: 36, column: 68, scope: !33)
!93 = !DILocalVariable(name: "decomposition_count", arg: 4, scope: !33, file: !34, line: 37, type: !18)
!94 = !DILocation(line: 37, column: 30, scope: !33)
!95 = !DILocalVariable(name: "bit_depth", arg: 5, scope: !33, file: !34, line: 37, type: !18)
!96 = !DILocation(line: 37, column: 55, scope: !33)
!97 = !DILocalVariable(name: "ret", scope: !33, file: !34, line: 39, type: !18)
!98 = !DILocation(line: 39, column: 9, scope: !33)
!99 = !DILocation(line: 41, column: 17, scope: !33)
!100 = !DILocation(line: 41, column: 20, scope: !33)
!101 = !DILocation(line: 41, column: 5, scope: !33)
!102 = !DILocation(line: 41, column: 8, scope: !33)
!103 = !DILocation(line: 41, column: 15, scope: !33)
!104 = !DILocation(line: 42, column: 16, scope: !33)
!105 = !DILocation(line: 42, column: 19, scope: !33)
!106 = !DILocation(line: 42, column: 5, scope: !33)
!107 = !DILocation(line: 42, column: 8, scope: !33)
!108 = !DILocation(line: 42, column: 14, scope: !33)
!109 = !DILocation(line: 43, column: 17, scope: !33)
!110 = !DILocation(line: 43, column: 20, scope: !33)
!111 = !DILocation(line: 43, column: 5, scope: !33)
!112 = !DILocation(line: 43, column: 8, scope: !33)
!113 = !DILocation(line: 43, column: 15, scope: !33)
!114 = !DILocation(line: 44, column: 17, scope: !33)
!115 = !DILocation(line: 44, column: 20, scope: !33)
!116 = !DILocation(line: 44, column: 5, scope: !33)
!117 = !DILocation(line: 44, column: 8, scope: !33)
!118 = !DILocation(line: 44, column: 15, scope: !33)
!119 = !DILocation(line: 45, column: 15, scope: !33)
!120 = !DILocation(line: 45, column: 18, scope: !33)
!121 = !DILocation(line: 45, column: 5, scope: !33)
!122 = !DILocation(line: 45, column: 8, scope: !33)
!123 = !DILocation(line: 45, column: 13, scope: !33)
!124 = !DILocation(line: 46, column: 30, scope: !33)
!125 = !DILocation(line: 46, column: 5, scope: !33)
!126 = !DILocation(line: 46, column: 8, scope: !33)
!127 = !DILocation(line: 46, column: 28, scope: !33)
!128 = !DILocation(line: 48, column: 9, scope: !129)
!129 = distinct !DILexicalBlock(scope: !33, file: !34, line: 48, column: 9)
!130 = !DILocation(line: 48, column: 19, scope: !129)
!131 = !DILocation(line: 48, column: 9, scope: !33)
!132 = !DILocation(line: 49, column: 41, scope: !129)
!133 = !DILocation(line: 49, column: 44, scope: !129)
!134 = !DILocation(line: 49, column: 15, scope: !129)
!135 = !DILocation(line: 49, column: 13, scope: !129)
!136 = !DILocation(line: 49, column: 9, scope: !129)
!137 = !DILocation(line: 50, column: 14, scope: !138)
!138 = distinct !DILexicalBlock(scope: !129, file: !34, line: 50, column: 14)
!139 = !DILocation(line: 50, column: 24, scope: !138)
!140 = !DILocation(line: 50, column: 14, scope: !129)
!141 = !DILocation(line: 51, column: 42, scope: !138)
!142 = !DILocation(line: 51, column: 45, scope: !138)
!143 = !DILocation(line: 51, column: 15, scope: !138)
!144 = !DILocation(line: 51, column: 13, scope: !138)
!145 = !DILocation(line: 51, column: 9, scope: !138)
!146 = !DILocation(line: 52, column: 14, scope: !147)
!147 = distinct !DILexicalBlock(scope: !138, file: !34, line: 52, column: 14)
!148 = !DILocation(line: 52, column: 24, scope: !147)
!149 = !DILocation(line: 52, column: 14, scope: !138)
!150 = !DILocation(line: 53, column: 42, scope: !147)
!151 = !DILocation(line: 53, column: 45, scope: !147)
!152 = !DILocation(line: 53, column: 15, scope: !147)
!153 = !DILocation(line: 53, column: 13, scope: !147)
!154 = !DILocation(line: 53, column: 9, scope: !147)
!155 = !DILocation(line: 55, column: 57, scope: !147)
!156 = !DILocation(line: 55, column: 9, scope: !147)
!157 = !DILocation(line: 57, column: 9, scope: !158)
!158 = distinct !DILexicalBlock(scope: !33, file: !34, line: 57, column: 9)
!159 = !DILocation(line: 57, column: 9, scope: !33)
!160 = !DILocation(line: 58, column: 54, scope: !161)
!161 = distinct !DILexicalBlock(scope: !158, file: !34, line: 57, column: 14)
!162 = !DILocation(line: 58, column: 9, scope: !161)
!163 = !DILocation(line: 59, column: 9, scope: !161)
!164 = !DILocation(line: 62, column: 14, scope: !165)
!165 = distinct !DILexicalBlock(scope: !33, file: !34, line: 62, column: 9)
!166 = !DILocation(line: 62, column: 24, scope: !165)
!167 = !DILocation(line: 62, column: 9, scope: !33)
!168 = !DILocation(line: 63, column: 34, scope: !165)
!169 = !DILocation(line: 63, column: 37, scope: !165)
!170 = !DILocation(line: 63, column: 9, scope: !165)
!171 = !DILocation(line: 64, column: 5, scope: !33)
!172 = !DILocation(line: 65, column: 1, scope: !33)
!173 = distinct !DISubprogram(name: "ff_spatial_idwt_init_8bit", scope: !174, file: !174, line: 519, type: !175, isLocal: true, isDefinition: true, scopeLine: 520, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!174 = !DIFile(filename: "libavcodec/dirac_dwt_template.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!175 = !DISubroutineType(types: !176)
!176 = !{!18, !37, !3}
!177 = !DILocalVariable(name: "d", arg: 1, scope: !173, file: !174, line: 519, type: !37)
!178 = !DILocation(line: 519, column: 50, scope: !173)
!179 = !DILocalVariable(name: "type", arg: 2, scope: !173, file: !174, line: 519, type: !3)
!180 = !DILocation(line: 519, column: 67, scope: !173)
!181 = !DILocalVariable(name: "level", scope: !173, file: !174, line: 521, type: !18)
!182 = !DILocation(line: 521, column: 9, scope: !173)
!183 = !DILocation(line: 523, column: 39, scope: !173)
!184 = !DILocation(line: 523, column: 42, scope: !173)
!185 = !DILocation(line: 523, column: 28, scope: !173)
!186 = !DILocation(line: 523, column: 48, scope: !173)
!187 = !DILocation(line: 523, column: 15, scope: !173)
!188 = !DILocation(line: 523, column: 5, scope: !173)
!189 = !DILocation(line: 523, column: 8, scope: !173)
!190 = !DILocation(line: 523, column: 13, scope: !173)
!191 = !DILocation(line: 525, column: 18, scope: !192)
!192 = distinct !DILexicalBlock(scope: !173, file: !174, line: 525, column: 5)
!193 = !DILocation(line: 525, column: 21, scope: !192)
!194 = !DILocation(line: 525, column: 41, scope: !192)
!195 = !DILocation(line: 525, column: 16, scope: !192)
!196 = !DILocation(line: 525, column: 10, scope: !192)
!197 = !DILocation(line: 525, column: 46, scope: !198)
!198 = !DILexicalBlockFile(scope: !199, file: !174, discriminator: 1)
!199 = distinct !DILexicalBlock(scope: !192, file: !174, line: 525, column: 5)
!200 = !DILocation(line: 525, column: 52, scope: !198)
!201 = !DILocation(line: 525, column: 5, scope: !198)
!202 = !DILocalVariable(name: "hl", scope: !203, file: !174, line: 526, type: !18)
!203 = distinct !DILexicalBlock(scope: !199, file: !174, line: 525, column: 66)
!204 = !DILocation(line: 526, column: 13, scope: !203)
!205 = !DILocation(line: 526, column: 18, scope: !203)
!206 = !DILocation(line: 526, column: 21, scope: !203)
!207 = !DILocation(line: 526, column: 31, scope: !203)
!208 = !DILocation(line: 526, column: 28, scope: !203)
!209 = !DILocalVariable(name: "stride_l", scope: !203, file: !174, line: 527, type: !18)
!210 = !DILocation(line: 527, column: 13, scope: !203)
!211 = !DILocation(line: 527, column: 24, scope: !203)
!212 = !DILocation(line: 527, column: 27, scope: !203)
!213 = !DILocation(line: 527, column: 37, scope: !203)
!214 = !DILocation(line: 527, column: 34, scope: !203)
!215 = !DILocation(line: 529, column: 16, scope: !203)
!216 = !DILocation(line: 529, column: 9, scope: !203)
!217 = !DILocation(line: 531, column: 49, scope: !218)
!218 = distinct !DILexicalBlock(scope: !203, file: !174, line: 529, column: 21)
!219 = !DILocation(line: 531, column: 52, scope: !218)
!220 = !DILocation(line: 531, column: 55, scope: !218)
!221 = !DILocation(line: 531, column: 54, scope: !218)
!222 = !DILocation(line: 531, column: 62, scope: !218)
!223 = !DILocation(line: 531, column: 65, scope: !218)
!224 = !DILocation(line: 531, column: 73, scope: !218)
!225 = !DILocation(line: 531, column: 77, scope: !218)
!226 = !DILocation(line: 531, column: 17, scope: !218)
!227 = !DILocation(line: 532, column: 17, scope: !218)
!228 = !DILocation(line: 534, column: 46, scope: !218)
!229 = !DILocation(line: 534, column: 49, scope: !218)
!230 = !DILocation(line: 534, column: 52, scope: !218)
!231 = !DILocation(line: 534, column: 51, scope: !218)
!232 = !DILocation(line: 534, column: 59, scope: !218)
!233 = !DILocation(line: 534, column: 62, scope: !218)
!234 = !DILocation(line: 534, column: 70, scope: !218)
!235 = !DILocation(line: 534, column: 74, scope: !218)
!236 = !DILocation(line: 534, column: 17, scope: !218)
!237 = !DILocation(line: 535, column: 17, scope: !218)
!238 = !DILocation(line: 537, column: 50, scope: !218)
!239 = !DILocation(line: 537, column: 53, scope: !218)
!240 = !DILocation(line: 537, column: 56, scope: !218)
!241 = !DILocation(line: 537, column: 55, scope: !218)
!242 = !DILocation(line: 537, column: 63, scope: !218)
!243 = !DILocation(line: 537, column: 66, scope: !218)
!244 = !DILocation(line: 537, column: 74, scope: !218)
!245 = !DILocation(line: 537, column: 78, scope: !218)
!246 = !DILocation(line: 537, column: 17, scope: !218)
!247 = !DILocation(line: 538, column: 17, scope: !218)
!248 = !DILocation(line: 541, column: 23, scope: !218)
!249 = !DILocation(line: 541, column: 17, scope: !218)
!250 = !DILocation(line: 541, column: 20, scope: !218)
!251 = !DILocation(line: 541, column: 30, scope: !218)
!252 = !DILocation(line: 541, column: 32, scope: !218)
!253 = !DILocation(line: 542, column: 17, scope: !218)
!254 = !DILocation(line: 544, column: 46, scope: !218)
!255 = !DILocation(line: 544, column: 49, scope: !218)
!256 = !DILocation(line: 544, column: 52, scope: !218)
!257 = !DILocation(line: 544, column: 51, scope: !218)
!258 = !DILocation(line: 544, column: 59, scope: !218)
!259 = !DILocation(line: 544, column: 62, scope: !218)
!260 = !DILocation(line: 544, column: 70, scope: !218)
!261 = !DILocation(line: 544, column: 74, scope: !218)
!262 = !DILocation(line: 544, column: 17, scope: !218)
!263 = !DILocation(line: 545, column: 17, scope: !218)
!264 = !DILocation(line: 547, column: 23, scope: !218)
!265 = !DILocation(line: 547, column: 17, scope: !218)
!266 = !DILocation(line: 547, column: 20, scope: !218)
!267 = !DILocation(line: 547, column: 30, scope: !218)
!268 = !DILocation(line: 547, column: 32, scope: !218)
!269 = !DILocation(line: 548, column: 17, scope: !218)
!270 = !DILocation(line: 550, column: 5, scope: !203)
!271 = !DILocation(line: 525, column: 63, scope: !272)
!272 = !DILexicalBlockFile(scope: !199, file: !174, discriminator: 2)
!273 = !DILocation(line: 525, column: 5, scope: !272)
!274 = distinct !{!274, !275}
!275 = !DILocation(line: 525, column: 5, scope: !173)
!276 = !DILocation(line: 552, column: 13, scope: !173)
!277 = !DILocation(line: 552, column: 5, scope: !173)
!278 = !DILocation(line: 554, column: 13, scope: !279)
!279 = distinct !DILexicalBlock(scope: !173, file: !174, line: 552, column: 19)
!280 = !DILocation(line: 554, column: 16, scope: !279)
!281 = !DILocation(line: 554, column: 32, scope: !279)
!282 = !DILocation(line: 555, column: 13, scope: !279)
!283 = !DILocation(line: 555, column: 16, scope: !279)
!284 = !DILocation(line: 555, column: 36, scope: !279)
!285 = !DILocation(line: 556, column: 13, scope: !279)
!286 = !DILocation(line: 556, column: 16, scope: !279)
!287 = !DILocation(line: 556, column: 36, scope: !279)
!288 = !DILocation(line: 557, column: 13, scope: !279)
!289 = !DILocation(line: 557, column: 16, scope: !279)
!290 = !DILocation(line: 557, column: 35, scope: !279)
!291 = !DILocation(line: 558, column: 13, scope: !279)
!292 = !DILocation(line: 558, column: 16, scope: !279)
!293 = !DILocation(line: 558, column: 24, scope: !279)
!294 = !DILocation(line: 559, column: 13, scope: !279)
!295 = !DILocation(line: 561, column: 13, scope: !279)
!296 = !DILocation(line: 561, column: 16, scope: !279)
!297 = !DILocation(line: 561, column: 32, scope: !279)
!298 = !DILocation(line: 562, column: 13, scope: !279)
!299 = !DILocation(line: 562, column: 16, scope: !279)
!300 = !DILocation(line: 562, column: 36, scope: !279)
!301 = !DILocation(line: 563, column: 13, scope: !279)
!302 = !DILocation(line: 563, column: 16, scope: !279)
!303 = !DILocation(line: 563, column: 36, scope: !279)
!304 = !DILocation(line: 564, column: 13, scope: !279)
!305 = !DILocation(line: 564, column: 16, scope: !279)
!306 = !DILocation(line: 564, column: 35, scope: !279)
!307 = !DILocation(line: 565, column: 13, scope: !279)
!308 = !DILocation(line: 565, column: 16, scope: !279)
!309 = !DILocation(line: 565, column: 24, scope: !279)
!310 = !DILocation(line: 566, column: 13, scope: !279)
!311 = !DILocation(line: 568, column: 13, scope: !279)
!312 = !DILocation(line: 568, column: 16, scope: !279)
!313 = !DILocation(line: 568, column: 32, scope: !279)
!314 = !DILocation(line: 569, column: 13, scope: !279)
!315 = !DILocation(line: 569, column: 16, scope: !279)
!316 = !DILocation(line: 569, column: 36, scope: !279)
!317 = !DILocation(line: 570, column: 13, scope: !279)
!318 = !DILocation(line: 570, column: 16, scope: !279)
!319 = !DILocation(line: 570, column: 36, scope: !279)
!320 = !DILocation(line: 571, column: 13, scope: !279)
!321 = !DILocation(line: 571, column: 16, scope: !279)
!322 = !DILocation(line: 571, column: 35, scope: !279)
!323 = !DILocation(line: 572, column: 13, scope: !279)
!324 = !DILocation(line: 572, column: 16, scope: !279)
!325 = !DILocation(line: 572, column: 24, scope: !279)
!326 = !DILocation(line: 573, column: 13, scope: !279)
!327 = !DILocation(line: 576, column: 13, scope: !279)
!328 = !DILocation(line: 576, column: 16, scope: !279)
!329 = !DILocation(line: 576, column: 32, scope: !279)
!330 = !DILocation(line: 577, column: 13, scope: !279)
!331 = !DILocation(line: 577, column: 16, scope: !279)
!332 = !DILocation(line: 577, column: 33, scope: !279)
!333 = !DILocation(line: 578, column: 17, scope: !334)
!334 = distinct !DILexicalBlock(scope: !279, file: !174, line: 578, column: 17)
!335 = !DILocation(line: 578, column: 22, scope: !334)
!336 = !DILocation(line: 578, column: 17, scope: !279)
!337 = !DILocation(line: 579, column: 17, scope: !334)
!338 = !DILocation(line: 579, column: 20, scope: !334)
!339 = !DILocation(line: 579, column: 39, scope: !334)
!340 = !DILocation(line: 581, column: 17, scope: !334)
!341 = !DILocation(line: 581, column: 20, scope: !334)
!342 = !DILocation(line: 581, column: 39, scope: !334)
!343 = !DILocation(line: 582, column: 13, scope: !279)
!344 = !DILocation(line: 582, column: 16, scope: !279)
!345 = !DILocation(line: 582, column: 24, scope: !279)
!346 = !DILocation(line: 583, column: 13, scope: !279)
!347 = !DILocation(line: 585, column: 13, scope: !279)
!348 = !DILocation(line: 585, column: 16, scope: !279)
!349 = !DILocation(line: 585, column: 32, scope: !279)
!350 = !DILocation(line: 586, column: 13, scope: !279)
!351 = !DILocation(line: 586, column: 16, scope: !279)
!352 = !DILocation(line: 586, column: 36, scope: !279)
!353 = !DILocation(line: 587, column: 13, scope: !279)
!354 = !DILocation(line: 587, column: 16, scope: !279)
!355 = !DILocation(line: 587, column: 36, scope: !279)
!356 = !DILocation(line: 588, column: 13, scope: !279)
!357 = !DILocation(line: 588, column: 16, scope: !279)
!358 = !DILocation(line: 588, column: 35, scope: !279)
!359 = !DILocation(line: 589, column: 13, scope: !279)
!360 = !DILocation(line: 589, column: 16, scope: !279)
!361 = !DILocation(line: 589, column: 24, scope: !279)
!362 = !DILocation(line: 590, column: 13, scope: !279)
!363 = !DILocation(line: 592, column: 13, scope: !279)
!364 = !DILocation(line: 592, column: 16, scope: !279)
!365 = !DILocation(line: 592, column: 32, scope: !279)
!366 = !DILocation(line: 593, column: 13, scope: !279)
!367 = !DILocation(line: 593, column: 16, scope: !279)
!368 = !DILocation(line: 593, column: 36, scope: !279)
!369 = !DILocation(line: 594, column: 13, scope: !279)
!370 = !DILocation(line: 594, column: 16, scope: !279)
!371 = !DILocation(line: 594, column: 36, scope: !279)
!372 = !DILocation(line: 595, column: 13, scope: !279)
!373 = !DILocation(line: 595, column: 16, scope: !279)
!374 = !DILocation(line: 595, column: 36, scope: !279)
!375 = !DILocation(line: 596, column: 13, scope: !279)
!376 = !DILocation(line: 596, column: 16, scope: !279)
!377 = !DILocation(line: 596, column: 36, scope: !279)
!378 = !DILocation(line: 597, column: 13, scope: !279)
!379 = !DILocation(line: 597, column: 16, scope: !279)
!380 = !DILocation(line: 597, column: 35, scope: !279)
!381 = !DILocation(line: 598, column: 13, scope: !279)
!382 = !DILocation(line: 598, column: 16, scope: !279)
!383 = !DILocation(line: 598, column: 24, scope: !279)
!384 = !DILocation(line: 599, column: 13, scope: !279)
!385 = !DILocation(line: 601, column: 13, scope: !279)
!386 = !DILocation(line: 604, column: 5, scope: !173)
!387 = !DILocation(line: 605, column: 1, scope: !173)
!388 = distinct !DISubprogram(name: "ff_spatial_idwt_init_10bit", scope: !174, file: !174, line: 519, type: !175, isLocal: true, isDefinition: true, scopeLine: 520, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!389 = !DILocalVariable(name: "d", arg: 1, scope: !388, file: !174, line: 519, type: !37)
!390 = !DILocation(line: 519, column: 51, scope: !388)
!391 = !DILocalVariable(name: "type", arg: 2, scope: !388, file: !174, line: 519, type: !3)
!392 = !DILocation(line: 519, column: 68, scope: !388)
!393 = !DILocalVariable(name: "level", scope: !388, file: !174, line: 521, type: !18)
!394 = !DILocation(line: 521, column: 9, scope: !388)
!395 = !DILocation(line: 523, column: 39, scope: !388)
!396 = !DILocation(line: 523, column: 42, scope: !388)
!397 = !DILocation(line: 523, column: 28, scope: !388)
!398 = !DILocation(line: 523, column: 48, scope: !388)
!399 = !DILocation(line: 523, column: 15, scope: !388)
!400 = !DILocation(line: 523, column: 5, scope: !388)
!401 = !DILocation(line: 523, column: 8, scope: !388)
!402 = !DILocation(line: 523, column: 13, scope: !388)
!403 = !DILocation(line: 525, column: 18, scope: !404)
!404 = distinct !DILexicalBlock(scope: !388, file: !174, line: 525, column: 5)
!405 = !DILocation(line: 525, column: 21, scope: !404)
!406 = !DILocation(line: 525, column: 41, scope: !404)
!407 = !DILocation(line: 525, column: 16, scope: !404)
!408 = !DILocation(line: 525, column: 10, scope: !404)
!409 = !DILocation(line: 525, column: 46, scope: !410)
!410 = !DILexicalBlockFile(scope: !411, file: !174, discriminator: 1)
!411 = distinct !DILexicalBlock(scope: !404, file: !174, line: 525, column: 5)
!412 = !DILocation(line: 525, column: 52, scope: !410)
!413 = !DILocation(line: 525, column: 5, scope: !410)
!414 = !DILocalVariable(name: "hl", scope: !415, file: !174, line: 526, type: !18)
!415 = distinct !DILexicalBlock(scope: !411, file: !174, line: 525, column: 66)
!416 = !DILocation(line: 526, column: 13, scope: !415)
!417 = !DILocation(line: 526, column: 18, scope: !415)
!418 = !DILocation(line: 526, column: 21, scope: !415)
!419 = !DILocation(line: 526, column: 31, scope: !415)
!420 = !DILocation(line: 526, column: 28, scope: !415)
!421 = !DILocalVariable(name: "stride_l", scope: !415, file: !174, line: 527, type: !18)
!422 = !DILocation(line: 527, column: 13, scope: !415)
!423 = !DILocation(line: 527, column: 24, scope: !415)
!424 = !DILocation(line: 527, column: 27, scope: !415)
!425 = !DILocation(line: 527, column: 37, scope: !415)
!426 = !DILocation(line: 527, column: 34, scope: !415)
!427 = !DILocation(line: 529, column: 16, scope: !415)
!428 = !DILocation(line: 529, column: 9, scope: !415)
!429 = !DILocation(line: 531, column: 50, scope: !430)
!430 = distinct !DILexicalBlock(scope: !415, file: !174, line: 529, column: 21)
!431 = !DILocation(line: 531, column: 53, scope: !430)
!432 = !DILocation(line: 531, column: 56, scope: !430)
!433 = !DILocation(line: 531, column: 55, scope: !430)
!434 = !DILocation(line: 531, column: 63, scope: !430)
!435 = !DILocation(line: 531, column: 66, scope: !430)
!436 = !DILocation(line: 531, column: 74, scope: !430)
!437 = !DILocation(line: 531, column: 78, scope: !430)
!438 = !DILocation(line: 531, column: 17, scope: !430)
!439 = !DILocation(line: 532, column: 17, scope: !430)
!440 = !DILocation(line: 534, column: 47, scope: !430)
!441 = !DILocation(line: 534, column: 50, scope: !430)
!442 = !DILocation(line: 534, column: 53, scope: !430)
!443 = !DILocation(line: 534, column: 52, scope: !430)
!444 = !DILocation(line: 534, column: 60, scope: !430)
!445 = !DILocation(line: 534, column: 63, scope: !430)
!446 = !DILocation(line: 534, column: 71, scope: !430)
!447 = !DILocation(line: 534, column: 75, scope: !430)
!448 = !DILocation(line: 534, column: 17, scope: !430)
!449 = !DILocation(line: 535, column: 17, scope: !430)
!450 = !DILocation(line: 537, column: 51, scope: !430)
!451 = !DILocation(line: 537, column: 54, scope: !430)
!452 = !DILocation(line: 537, column: 57, scope: !430)
!453 = !DILocation(line: 537, column: 56, scope: !430)
!454 = !DILocation(line: 537, column: 64, scope: !430)
!455 = !DILocation(line: 537, column: 67, scope: !430)
!456 = !DILocation(line: 537, column: 75, scope: !430)
!457 = !DILocation(line: 537, column: 79, scope: !430)
!458 = !DILocation(line: 537, column: 17, scope: !430)
!459 = !DILocation(line: 538, column: 17, scope: !430)
!460 = !DILocation(line: 541, column: 23, scope: !430)
!461 = !DILocation(line: 541, column: 17, scope: !430)
!462 = !DILocation(line: 541, column: 20, scope: !430)
!463 = !DILocation(line: 541, column: 30, scope: !430)
!464 = !DILocation(line: 541, column: 32, scope: !430)
!465 = !DILocation(line: 542, column: 17, scope: !430)
!466 = !DILocation(line: 544, column: 47, scope: !430)
!467 = !DILocation(line: 544, column: 50, scope: !430)
!468 = !DILocation(line: 544, column: 53, scope: !430)
!469 = !DILocation(line: 544, column: 52, scope: !430)
!470 = !DILocation(line: 544, column: 60, scope: !430)
!471 = !DILocation(line: 544, column: 63, scope: !430)
!472 = !DILocation(line: 544, column: 71, scope: !430)
!473 = !DILocation(line: 544, column: 75, scope: !430)
!474 = !DILocation(line: 544, column: 17, scope: !430)
!475 = !DILocation(line: 545, column: 17, scope: !430)
!476 = !DILocation(line: 547, column: 23, scope: !430)
!477 = !DILocation(line: 547, column: 17, scope: !430)
!478 = !DILocation(line: 547, column: 20, scope: !430)
!479 = !DILocation(line: 547, column: 30, scope: !430)
!480 = !DILocation(line: 547, column: 32, scope: !430)
!481 = !DILocation(line: 548, column: 17, scope: !430)
!482 = !DILocation(line: 550, column: 5, scope: !415)
!483 = !DILocation(line: 525, column: 63, scope: !484)
!484 = !DILexicalBlockFile(scope: !411, file: !174, discriminator: 2)
!485 = !DILocation(line: 525, column: 5, scope: !484)
!486 = distinct !{!486, !487}
!487 = !DILocation(line: 525, column: 5, scope: !388)
!488 = !DILocation(line: 552, column: 13, scope: !388)
!489 = !DILocation(line: 552, column: 5, scope: !388)
!490 = !DILocation(line: 554, column: 13, scope: !491)
!491 = distinct !DILexicalBlock(scope: !388, file: !174, line: 552, column: 19)
!492 = !DILocation(line: 554, column: 16, scope: !491)
!493 = !DILocation(line: 554, column: 32, scope: !491)
!494 = !DILocation(line: 555, column: 13, scope: !491)
!495 = !DILocation(line: 555, column: 16, scope: !491)
!496 = !DILocation(line: 555, column: 36, scope: !491)
!497 = !DILocation(line: 556, column: 13, scope: !491)
!498 = !DILocation(line: 556, column: 16, scope: !491)
!499 = !DILocation(line: 556, column: 36, scope: !491)
!500 = !DILocation(line: 557, column: 13, scope: !491)
!501 = !DILocation(line: 557, column: 16, scope: !491)
!502 = !DILocation(line: 557, column: 35, scope: !491)
!503 = !DILocation(line: 558, column: 13, scope: !491)
!504 = !DILocation(line: 558, column: 16, scope: !491)
!505 = !DILocation(line: 558, column: 24, scope: !491)
!506 = !DILocation(line: 559, column: 13, scope: !491)
!507 = !DILocation(line: 561, column: 13, scope: !491)
!508 = !DILocation(line: 561, column: 16, scope: !491)
!509 = !DILocation(line: 561, column: 32, scope: !491)
!510 = !DILocation(line: 562, column: 13, scope: !491)
!511 = !DILocation(line: 562, column: 16, scope: !491)
!512 = !DILocation(line: 562, column: 36, scope: !491)
!513 = !DILocation(line: 563, column: 13, scope: !491)
!514 = !DILocation(line: 563, column: 16, scope: !491)
!515 = !DILocation(line: 563, column: 36, scope: !491)
!516 = !DILocation(line: 564, column: 13, scope: !491)
!517 = !DILocation(line: 564, column: 16, scope: !491)
!518 = !DILocation(line: 564, column: 35, scope: !491)
!519 = !DILocation(line: 565, column: 13, scope: !491)
!520 = !DILocation(line: 565, column: 16, scope: !491)
!521 = !DILocation(line: 565, column: 24, scope: !491)
!522 = !DILocation(line: 566, column: 13, scope: !491)
!523 = !DILocation(line: 568, column: 13, scope: !491)
!524 = !DILocation(line: 568, column: 16, scope: !491)
!525 = !DILocation(line: 568, column: 32, scope: !491)
!526 = !DILocation(line: 569, column: 13, scope: !491)
!527 = !DILocation(line: 569, column: 16, scope: !491)
!528 = !DILocation(line: 569, column: 36, scope: !491)
!529 = !DILocation(line: 570, column: 13, scope: !491)
!530 = !DILocation(line: 570, column: 16, scope: !491)
!531 = !DILocation(line: 570, column: 36, scope: !491)
!532 = !DILocation(line: 571, column: 13, scope: !491)
!533 = !DILocation(line: 571, column: 16, scope: !491)
!534 = !DILocation(line: 571, column: 35, scope: !491)
!535 = !DILocation(line: 572, column: 13, scope: !491)
!536 = !DILocation(line: 572, column: 16, scope: !491)
!537 = !DILocation(line: 572, column: 24, scope: !491)
!538 = !DILocation(line: 573, column: 13, scope: !491)
!539 = !DILocation(line: 576, column: 13, scope: !491)
!540 = !DILocation(line: 576, column: 16, scope: !491)
!541 = !DILocation(line: 576, column: 32, scope: !491)
!542 = !DILocation(line: 577, column: 13, scope: !491)
!543 = !DILocation(line: 577, column: 16, scope: !491)
!544 = !DILocation(line: 577, column: 33, scope: !491)
!545 = !DILocation(line: 578, column: 17, scope: !546)
!546 = distinct !DILexicalBlock(scope: !491, file: !174, line: 578, column: 17)
!547 = !DILocation(line: 578, column: 22, scope: !546)
!548 = !DILocation(line: 578, column: 17, scope: !491)
!549 = !DILocation(line: 579, column: 17, scope: !546)
!550 = !DILocation(line: 579, column: 20, scope: !546)
!551 = !DILocation(line: 579, column: 39, scope: !546)
!552 = !DILocation(line: 581, column: 17, scope: !546)
!553 = !DILocation(line: 581, column: 20, scope: !546)
!554 = !DILocation(line: 581, column: 39, scope: !546)
!555 = !DILocation(line: 582, column: 13, scope: !491)
!556 = !DILocation(line: 582, column: 16, scope: !491)
!557 = !DILocation(line: 582, column: 24, scope: !491)
!558 = !DILocation(line: 583, column: 13, scope: !491)
!559 = !DILocation(line: 585, column: 13, scope: !491)
!560 = !DILocation(line: 585, column: 16, scope: !491)
!561 = !DILocation(line: 585, column: 32, scope: !491)
!562 = !DILocation(line: 586, column: 13, scope: !491)
!563 = !DILocation(line: 586, column: 16, scope: !491)
!564 = !DILocation(line: 586, column: 36, scope: !491)
!565 = !DILocation(line: 587, column: 13, scope: !491)
!566 = !DILocation(line: 587, column: 16, scope: !491)
!567 = !DILocation(line: 587, column: 36, scope: !491)
!568 = !DILocation(line: 588, column: 13, scope: !491)
!569 = !DILocation(line: 588, column: 16, scope: !491)
!570 = !DILocation(line: 588, column: 35, scope: !491)
!571 = !DILocation(line: 589, column: 13, scope: !491)
!572 = !DILocation(line: 589, column: 16, scope: !491)
!573 = !DILocation(line: 589, column: 24, scope: !491)
!574 = !DILocation(line: 590, column: 13, scope: !491)
!575 = !DILocation(line: 592, column: 13, scope: !491)
!576 = !DILocation(line: 592, column: 16, scope: !491)
!577 = !DILocation(line: 592, column: 32, scope: !491)
!578 = !DILocation(line: 593, column: 13, scope: !491)
!579 = !DILocation(line: 593, column: 16, scope: !491)
!580 = !DILocation(line: 593, column: 36, scope: !491)
!581 = !DILocation(line: 594, column: 13, scope: !491)
!582 = !DILocation(line: 594, column: 16, scope: !491)
!583 = !DILocation(line: 594, column: 36, scope: !491)
!584 = !DILocation(line: 595, column: 13, scope: !491)
!585 = !DILocation(line: 595, column: 16, scope: !491)
!586 = !DILocation(line: 595, column: 36, scope: !491)
!587 = !DILocation(line: 596, column: 13, scope: !491)
!588 = !DILocation(line: 596, column: 16, scope: !491)
!589 = !DILocation(line: 596, column: 36, scope: !491)
!590 = !DILocation(line: 597, column: 13, scope: !491)
!591 = !DILocation(line: 597, column: 16, scope: !491)
!592 = !DILocation(line: 597, column: 35, scope: !491)
!593 = !DILocation(line: 598, column: 13, scope: !491)
!594 = !DILocation(line: 598, column: 16, scope: !491)
!595 = !DILocation(line: 598, column: 24, scope: !491)
!596 = !DILocation(line: 599, column: 13, scope: !491)
!597 = !DILocation(line: 601, column: 13, scope: !491)
!598 = !DILocation(line: 604, column: 5, scope: !388)
!599 = !DILocation(line: 605, column: 1, scope: !388)
!600 = distinct !DISubprogram(name: "ff_spatial_idwt_init_12bit", scope: !174, file: !174, line: 519, type: !175, isLocal: true, isDefinition: true, scopeLine: 520, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!601 = !DILocalVariable(name: "d", arg: 1, scope: !600, file: !174, line: 519, type: !37)
!602 = !DILocation(line: 519, column: 51, scope: !600)
!603 = !DILocalVariable(name: "type", arg: 2, scope: !600, file: !174, line: 519, type: !3)
!604 = !DILocation(line: 519, column: 68, scope: !600)
!605 = !DILocalVariable(name: "level", scope: !600, file: !174, line: 521, type: !18)
!606 = !DILocation(line: 521, column: 9, scope: !600)
!607 = !DILocation(line: 523, column: 39, scope: !600)
!608 = !DILocation(line: 523, column: 42, scope: !600)
!609 = !DILocation(line: 523, column: 28, scope: !600)
!610 = !DILocation(line: 523, column: 48, scope: !600)
!611 = !DILocation(line: 523, column: 15, scope: !600)
!612 = !DILocation(line: 523, column: 5, scope: !600)
!613 = !DILocation(line: 523, column: 8, scope: !600)
!614 = !DILocation(line: 523, column: 13, scope: !600)
!615 = !DILocation(line: 525, column: 18, scope: !616)
!616 = distinct !DILexicalBlock(scope: !600, file: !174, line: 525, column: 5)
!617 = !DILocation(line: 525, column: 21, scope: !616)
!618 = !DILocation(line: 525, column: 41, scope: !616)
!619 = !DILocation(line: 525, column: 16, scope: !616)
!620 = !DILocation(line: 525, column: 10, scope: !616)
!621 = !DILocation(line: 525, column: 46, scope: !622)
!622 = !DILexicalBlockFile(scope: !623, file: !174, discriminator: 1)
!623 = distinct !DILexicalBlock(scope: !616, file: !174, line: 525, column: 5)
!624 = !DILocation(line: 525, column: 52, scope: !622)
!625 = !DILocation(line: 525, column: 5, scope: !622)
!626 = !DILocalVariable(name: "hl", scope: !627, file: !174, line: 526, type: !18)
!627 = distinct !DILexicalBlock(scope: !623, file: !174, line: 525, column: 66)
!628 = !DILocation(line: 526, column: 13, scope: !627)
!629 = !DILocation(line: 526, column: 18, scope: !627)
!630 = !DILocation(line: 526, column: 21, scope: !627)
!631 = !DILocation(line: 526, column: 31, scope: !627)
!632 = !DILocation(line: 526, column: 28, scope: !627)
!633 = !DILocalVariable(name: "stride_l", scope: !627, file: !174, line: 527, type: !18)
!634 = !DILocation(line: 527, column: 13, scope: !627)
!635 = !DILocation(line: 527, column: 24, scope: !627)
!636 = !DILocation(line: 527, column: 27, scope: !627)
!637 = !DILocation(line: 527, column: 37, scope: !627)
!638 = !DILocation(line: 527, column: 34, scope: !627)
!639 = !DILocation(line: 529, column: 16, scope: !627)
!640 = !DILocation(line: 529, column: 9, scope: !627)
!641 = !DILocation(line: 531, column: 50, scope: !642)
!642 = distinct !DILexicalBlock(scope: !627, file: !174, line: 529, column: 21)
!643 = !DILocation(line: 531, column: 53, scope: !642)
!644 = !DILocation(line: 531, column: 56, scope: !642)
!645 = !DILocation(line: 531, column: 55, scope: !642)
!646 = !DILocation(line: 531, column: 63, scope: !642)
!647 = !DILocation(line: 531, column: 66, scope: !642)
!648 = !DILocation(line: 531, column: 74, scope: !642)
!649 = !DILocation(line: 531, column: 78, scope: !642)
!650 = !DILocation(line: 531, column: 17, scope: !642)
!651 = !DILocation(line: 532, column: 17, scope: !642)
!652 = !DILocation(line: 534, column: 47, scope: !642)
!653 = !DILocation(line: 534, column: 50, scope: !642)
!654 = !DILocation(line: 534, column: 53, scope: !642)
!655 = !DILocation(line: 534, column: 52, scope: !642)
!656 = !DILocation(line: 534, column: 60, scope: !642)
!657 = !DILocation(line: 534, column: 63, scope: !642)
!658 = !DILocation(line: 534, column: 71, scope: !642)
!659 = !DILocation(line: 534, column: 75, scope: !642)
!660 = !DILocation(line: 534, column: 17, scope: !642)
!661 = !DILocation(line: 535, column: 17, scope: !642)
!662 = !DILocation(line: 537, column: 51, scope: !642)
!663 = !DILocation(line: 537, column: 54, scope: !642)
!664 = !DILocation(line: 537, column: 57, scope: !642)
!665 = !DILocation(line: 537, column: 56, scope: !642)
!666 = !DILocation(line: 537, column: 64, scope: !642)
!667 = !DILocation(line: 537, column: 67, scope: !642)
!668 = !DILocation(line: 537, column: 75, scope: !642)
!669 = !DILocation(line: 537, column: 79, scope: !642)
!670 = !DILocation(line: 537, column: 17, scope: !642)
!671 = !DILocation(line: 538, column: 17, scope: !642)
!672 = !DILocation(line: 541, column: 23, scope: !642)
!673 = !DILocation(line: 541, column: 17, scope: !642)
!674 = !DILocation(line: 541, column: 20, scope: !642)
!675 = !DILocation(line: 541, column: 30, scope: !642)
!676 = !DILocation(line: 541, column: 32, scope: !642)
!677 = !DILocation(line: 542, column: 17, scope: !642)
!678 = !DILocation(line: 544, column: 47, scope: !642)
!679 = !DILocation(line: 544, column: 50, scope: !642)
!680 = !DILocation(line: 544, column: 53, scope: !642)
!681 = !DILocation(line: 544, column: 52, scope: !642)
!682 = !DILocation(line: 544, column: 60, scope: !642)
!683 = !DILocation(line: 544, column: 63, scope: !642)
!684 = !DILocation(line: 544, column: 71, scope: !642)
!685 = !DILocation(line: 544, column: 75, scope: !642)
!686 = !DILocation(line: 544, column: 17, scope: !642)
!687 = !DILocation(line: 545, column: 17, scope: !642)
!688 = !DILocation(line: 547, column: 23, scope: !642)
!689 = !DILocation(line: 547, column: 17, scope: !642)
!690 = !DILocation(line: 547, column: 20, scope: !642)
!691 = !DILocation(line: 547, column: 30, scope: !642)
!692 = !DILocation(line: 547, column: 32, scope: !642)
!693 = !DILocation(line: 548, column: 17, scope: !642)
!694 = !DILocation(line: 550, column: 5, scope: !627)
!695 = !DILocation(line: 525, column: 63, scope: !696)
!696 = !DILexicalBlockFile(scope: !623, file: !174, discriminator: 2)
!697 = !DILocation(line: 525, column: 5, scope: !696)
!698 = distinct !{!698, !699}
!699 = !DILocation(line: 525, column: 5, scope: !600)
!700 = !DILocation(line: 552, column: 13, scope: !600)
!701 = !DILocation(line: 552, column: 5, scope: !600)
!702 = !DILocation(line: 554, column: 13, scope: !703)
!703 = distinct !DILexicalBlock(scope: !600, file: !174, line: 552, column: 19)
!704 = !DILocation(line: 554, column: 16, scope: !703)
!705 = !DILocation(line: 554, column: 32, scope: !703)
!706 = !DILocation(line: 555, column: 13, scope: !703)
!707 = !DILocation(line: 555, column: 16, scope: !703)
!708 = !DILocation(line: 555, column: 36, scope: !703)
!709 = !DILocation(line: 556, column: 13, scope: !703)
!710 = !DILocation(line: 556, column: 16, scope: !703)
!711 = !DILocation(line: 556, column: 36, scope: !703)
!712 = !DILocation(line: 557, column: 13, scope: !703)
!713 = !DILocation(line: 557, column: 16, scope: !703)
!714 = !DILocation(line: 557, column: 35, scope: !703)
!715 = !DILocation(line: 558, column: 13, scope: !703)
!716 = !DILocation(line: 558, column: 16, scope: !703)
!717 = !DILocation(line: 558, column: 24, scope: !703)
!718 = !DILocation(line: 559, column: 13, scope: !703)
!719 = !DILocation(line: 561, column: 13, scope: !703)
!720 = !DILocation(line: 561, column: 16, scope: !703)
!721 = !DILocation(line: 561, column: 32, scope: !703)
!722 = !DILocation(line: 562, column: 13, scope: !703)
!723 = !DILocation(line: 562, column: 16, scope: !703)
!724 = !DILocation(line: 562, column: 36, scope: !703)
!725 = !DILocation(line: 563, column: 13, scope: !703)
!726 = !DILocation(line: 563, column: 16, scope: !703)
!727 = !DILocation(line: 563, column: 36, scope: !703)
!728 = !DILocation(line: 564, column: 13, scope: !703)
!729 = !DILocation(line: 564, column: 16, scope: !703)
!730 = !DILocation(line: 564, column: 35, scope: !703)
!731 = !DILocation(line: 565, column: 13, scope: !703)
!732 = !DILocation(line: 565, column: 16, scope: !703)
!733 = !DILocation(line: 565, column: 24, scope: !703)
!734 = !DILocation(line: 566, column: 13, scope: !703)
!735 = !DILocation(line: 568, column: 13, scope: !703)
!736 = !DILocation(line: 568, column: 16, scope: !703)
!737 = !DILocation(line: 568, column: 32, scope: !703)
!738 = !DILocation(line: 569, column: 13, scope: !703)
!739 = !DILocation(line: 569, column: 16, scope: !703)
!740 = !DILocation(line: 569, column: 36, scope: !703)
!741 = !DILocation(line: 570, column: 13, scope: !703)
!742 = !DILocation(line: 570, column: 16, scope: !703)
!743 = !DILocation(line: 570, column: 36, scope: !703)
!744 = !DILocation(line: 571, column: 13, scope: !703)
!745 = !DILocation(line: 571, column: 16, scope: !703)
!746 = !DILocation(line: 571, column: 35, scope: !703)
!747 = !DILocation(line: 572, column: 13, scope: !703)
!748 = !DILocation(line: 572, column: 16, scope: !703)
!749 = !DILocation(line: 572, column: 24, scope: !703)
!750 = !DILocation(line: 573, column: 13, scope: !703)
!751 = !DILocation(line: 576, column: 13, scope: !703)
!752 = !DILocation(line: 576, column: 16, scope: !703)
!753 = !DILocation(line: 576, column: 32, scope: !703)
!754 = !DILocation(line: 577, column: 13, scope: !703)
!755 = !DILocation(line: 577, column: 16, scope: !703)
!756 = !DILocation(line: 577, column: 33, scope: !703)
!757 = !DILocation(line: 578, column: 17, scope: !758)
!758 = distinct !DILexicalBlock(scope: !703, file: !174, line: 578, column: 17)
!759 = !DILocation(line: 578, column: 22, scope: !758)
!760 = !DILocation(line: 578, column: 17, scope: !703)
!761 = !DILocation(line: 579, column: 17, scope: !758)
!762 = !DILocation(line: 579, column: 20, scope: !758)
!763 = !DILocation(line: 579, column: 39, scope: !758)
!764 = !DILocation(line: 581, column: 17, scope: !758)
!765 = !DILocation(line: 581, column: 20, scope: !758)
!766 = !DILocation(line: 581, column: 39, scope: !758)
!767 = !DILocation(line: 582, column: 13, scope: !703)
!768 = !DILocation(line: 582, column: 16, scope: !703)
!769 = !DILocation(line: 582, column: 24, scope: !703)
!770 = !DILocation(line: 583, column: 13, scope: !703)
!771 = !DILocation(line: 585, column: 13, scope: !703)
!772 = !DILocation(line: 585, column: 16, scope: !703)
!773 = !DILocation(line: 585, column: 32, scope: !703)
!774 = !DILocation(line: 586, column: 13, scope: !703)
!775 = !DILocation(line: 586, column: 16, scope: !703)
!776 = !DILocation(line: 586, column: 36, scope: !703)
!777 = !DILocation(line: 587, column: 13, scope: !703)
!778 = !DILocation(line: 587, column: 16, scope: !703)
!779 = !DILocation(line: 587, column: 36, scope: !703)
!780 = !DILocation(line: 588, column: 13, scope: !703)
!781 = !DILocation(line: 588, column: 16, scope: !703)
!782 = !DILocation(line: 588, column: 35, scope: !703)
!783 = !DILocation(line: 589, column: 13, scope: !703)
!784 = !DILocation(line: 589, column: 16, scope: !703)
!785 = !DILocation(line: 589, column: 24, scope: !703)
!786 = !DILocation(line: 590, column: 13, scope: !703)
!787 = !DILocation(line: 592, column: 13, scope: !703)
!788 = !DILocation(line: 592, column: 16, scope: !703)
!789 = !DILocation(line: 592, column: 32, scope: !703)
!790 = !DILocation(line: 593, column: 13, scope: !703)
!791 = !DILocation(line: 593, column: 16, scope: !703)
!792 = !DILocation(line: 593, column: 36, scope: !703)
!793 = !DILocation(line: 594, column: 13, scope: !703)
!794 = !DILocation(line: 594, column: 16, scope: !703)
!795 = !DILocation(line: 594, column: 36, scope: !703)
!796 = !DILocation(line: 595, column: 13, scope: !703)
!797 = !DILocation(line: 595, column: 16, scope: !703)
!798 = !DILocation(line: 595, column: 36, scope: !703)
!799 = !DILocation(line: 596, column: 13, scope: !703)
!800 = !DILocation(line: 596, column: 16, scope: !703)
!801 = !DILocation(line: 596, column: 36, scope: !703)
!802 = !DILocation(line: 597, column: 13, scope: !703)
!803 = !DILocation(line: 597, column: 16, scope: !703)
!804 = !DILocation(line: 597, column: 35, scope: !703)
!805 = !DILocation(line: 598, column: 13, scope: !703)
!806 = !DILocation(line: 598, column: 16, scope: !703)
!807 = !DILocation(line: 598, column: 24, scope: !703)
!808 = !DILocation(line: 599, column: 13, scope: !703)
!809 = !DILocation(line: 601, column: 13, scope: !703)
!810 = !DILocation(line: 604, column: 5, scope: !600)
!811 = !DILocation(line: 605, column: 1, scope: !600)
!812 = distinct !DISubprogram(name: "ff_spatial_idwt_slice2", scope: !34, file: !34, line: 67, type: !813, isLocal: false, isDefinition: true, scopeLine: 68, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!813 = !DISubroutineType(types: !814)
!814 = !{null, !37, !18}
!815 = !DILocalVariable(name: "d", arg: 1, scope: !812, file: !34, line: 67, type: !37)
!816 = !DILocation(line: 67, column: 41, scope: !812)
!817 = !DILocalVariable(name: "y", arg: 2, scope: !812, file: !34, line: 67, type: !18)
!818 = !DILocation(line: 67, column: 48, scope: !812)
!819 = !DILocalVariable(name: "level", scope: !812, file: !34, line: 69, type: !18)
!820 = !DILocation(line: 69, column: 9, scope: !812)
!821 = !DILocalVariable(name: "support", scope: !812, file: !34, line: 69, type: !18)
!822 = !DILocation(line: 69, column: 16, scope: !812)
!823 = !DILocation(line: 69, column: 26, scope: !812)
!824 = !DILocation(line: 69, column: 29, scope: !812)
!825 = !DILocation(line: 71, column: 18, scope: !826)
!826 = distinct !DILexicalBlock(scope: !812, file: !34, line: 71, column: 5)
!827 = !DILocation(line: 71, column: 21, scope: !826)
!828 = !DILocation(line: 71, column: 40, scope: !826)
!829 = !DILocation(line: 71, column: 16, scope: !826)
!830 = !DILocation(line: 71, column: 10, scope: !826)
!831 = !DILocation(line: 71, column: 44, scope: !832)
!832 = !DILexicalBlockFile(scope: !833, file: !34, discriminator: 1)
!833 = distinct !DILexicalBlock(scope: !826, file: !34, line: 71, column: 5)
!834 = !DILocation(line: 71, column: 50, scope: !832)
!835 = !DILocation(line: 71, column: 5, scope: !832)
!836 = !DILocalVariable(name: "wl", scope: !837, file: !34, line: 72, type: !18)
!837 = distinct !DILexicalBlock(scope: !833, file: !34, line: 71, column: 65)
!838 = !DILocation(line: 72, column: 13, scope: !837)
!839 = !DILocation(line: 72, column: 18, scope: !837)
!840 = !DILocation(line: 72, column: 21, scope: !837)
!841 = !DILocation(line: 72, column: 30, scope: !837)
!842 = !DILocation(line: 72, column: 27, scope: !837)
!843 = !DILocalVariable(name: "hl", scope: !837, file: !34, line: 73, type: !18)
!844 = !DILocation(line: 73, column: 13, scope: !837)
!845 = !DILocation(line: 73, column: 18, scope: !837)
!846 = !DILocation(line: 73, column: 21, scope: !837)
!847 = !DILocation(line: 73, column: 31, scope: !837)
!848 = !DILocation(line: 73, column: 28, scope: !837)
!849 = !DILocalVariable(name: "stride_l", scope: !837, file: !34, line: 74, type: !18)
!850 = !DILocation(line: 74, column: 13, scope: !837)
!851 = !DILocation(line: 74, column: 24, scope: !837)
!852 = !DILocation(line: 74, column: 27, scope: !837)
!853 = !DILocation(line: 74, column: 37, scope: !837)
!854 = !DILocation(line: 74, column: 34, scope: !837)
!855 = !DILocation(line: 76, column: 9, scope: !837)
!856 = !DILocation(line: 76, column: 22, scope: !857)
!857 = !DILexicalBlockFile(scope: !837, file: !34, discriminator: 1)
!858 = !DILocation(line: 76, column: 16, scope: !857)
!859 = !DILocation(line: 76, column: 19, scope: !857)
!860 = !DILocation(line: 76, column: 29, scope: !857)
!861 = !DILocation(line: 76, column: 37, scope: !857)
!862 = !DILocation(line: 76, column: 40, scope: !857)
!863 = !DILocation(line: 76, column: 38, scope: !857)
!864 = !DILocation(line: 76, column: 47, scope: !857)
!865 = !DILocation(line: 76, column: 46, scope: !857)
!866 = !DILocation(line: 76, column: 59, scope: !857)
!867 = !DILocation(line: 76, column: 56, scope: !857)
!868 = !DILocation(line: 76, column: 35, scope: !857)
!869 = !DILocation(line: 76, column: 66, scope: !870)
!870 = !DILexicalBlockFile(scope: !837, file: !34, discriminator: 2)
!871 = !DILocation(line: 76, column: 35, scope: !870)
!872 = !DILocation(line: 76, column: 74, scope: !873)
!873 = !DILexicalBlockFile(scope: !837, file: !34, discriminator: 3)
!874 = !DILocation(line: 76, column: 77, scope: !873)
!875 = !DILocation(line: 76, column: 75, scope: !873)
!876 = !DILocation(line: 76, column: 84, scope: !873)
!877 = !DILocation(line: 76, column: 83, scope: !873)
!878 = !DILocation(line: 76, column: 35, scope: !873)
!879 = !DILocation(line: 76, column: 35, scope: !880)
!880 = !DILexicalBlockFile(scope: !837, file: !34, discriminator: 4)
!881 = !DILocation(line: 76, column: 31, scope: !880)
!882 = !DILocation(line: 76, column: 9, scope: !880)
!883 = !DILocation(line: 77, column: 13, scope: !837)
!884 = !DILocation(line: 77, column: 16, scope: !837)
!885 = !DILocation(line: 77, column: 32, scope: !837)
!886 = !DILocation(line: 77, column: 35, scope: !837)
!887 = !DILocation(line: 77, column: 42, scope: !837)
!888 = !DILocation(line: 77, column: 46, scope: !837)
!889 = !DILocation(line: 77, column: 50, scope: !837)
!890 = !DILocation(line: 76, column: 9, scope: !891)
!891 = !DILexicalBlockFile(scope: !837, file: !34, discriminator: 5)
!892 = distinct !{!892, !855}
!893 = !DILocation(line: 78, column: 5, scope: !837)
!894 = !DILocation(line: 71, column: 61, scope: !895)
!895 = !DILexicalBlockFile(scope: !833, file: !34, discriminator: 2)
!896 = !DILocation(line: 71, column: 5, scope: !895)
!897 = distinct !{!897, !898}
!898 = !DILocation(line: 71, column: 5, scope: !812)
!899 = !DILocation(line: 79, column: 1, scope: !812)
!900 = distinct !DISubprogram(name: "spatial_compose_dd97i_init_8bit", scope: !174, file: !174, line: 495, type: !901, isLocal: true, isDefinition: true, scopeLine: 496, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!901 = !DISubroutineType(types: !902)
!902 = !{null, !903, !20, !18, !18}
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !67, size: 64, align: 64)
!904 = !DILocalVariable(name: "a", arg: 1, scope: !905, file: !906, line: 127, type: !18)
!905 = distinct !DISubprogram(name: "av_clip_c", scope: !906, file: !906, line: 127, type: !907, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!906 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!907 = !DISubroutineType(types: !908)
!908 = !{!18, !18, !18, !18}
!909 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !910)
!910 = distinct !DILocation(line: 498, column: 25, scope: !900)
!911 = !DILocalVariable(name: "amin", arg: 2, scope: !905, file: !906, line: 127, type: !18)
!912 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !910)
!913 = !DILocalVariable(name: "amax", arg: 3, scope: !905, file: !906, line: 127, type: !18)
!914 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !910)
!915 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !916)
!916 = distinct !DILocation(line: 499, column: 25, scope: !900)
!917 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !916)
!918 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !916)
!919 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !920)
!920 = distinct !DILocation(line: 500, column: 25, scope: !900)
!921 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !920)
!922 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !920)
!923 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !924)
!924 = distinct !DILocation(line: 501, column: 25, scope: !900)
!925 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !924)
!926 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !924)
!927 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !928)
!928 = distinct !DILocation(line: 502, column: 25, scope: !900)
!929 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !928)
!930 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !928)
!931 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !932)
!932 = distinct !DILocation(line: 497, column: 25, scope: !900)
!933 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !932)
!934 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !932)
!935 = !DILocalVariable(name: "cs", arg: 1, scope: !900, file: !174, line: 495, type: !903)
!936 = !DILocation(line: 495, column: 57, scope: !900)
!937 = !DILocalVariable(name: "buffer", arg: 2, scope: !900, file: !174, line: 495, type: !20)
!938 = !DILocation(line: 495, column: 70, scope: !900)
!939 = !DILocalVariable(name: "height", arg: 3, scope: !900, file: !174, line: 495, type: !18)
!940 = !DILocation(line: 495, column: 82, scope: !900)
!941 = !DILocalVariable(name: "stride", arg: 4, scope: !900, file: !174, line: 495, type: !18)
!942 = !DILocation(line: 495, column: 94, scope: !900)
!943 = !DILocation(line: 497, column: 16, scope: !900)
!944 = !DILocation(line: 497, column: 44, scope: !900)
!945 = !DILocation(line: 497, column: 50, scope: !900)
!946 = !DILocation(line: 497, column: 25, scope: !900)
!947 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !932)
!948 = distinct !DILexicalBlock(scope: !905, file: !906, line: 132, column: 9)
!949 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !932)
!950 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !932)
!951 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !932)
!952 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !932)
!953 = !DILexicalBlockFile(scope: !948, file: !906, discriminator: 1)
!954 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !932)
!955 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !932)
!956 = distinct !DILexicalBlock(scope: !948, file: !906, line: 133, column: 14)
!957 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !932)
!958 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !932)
!959 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !932)
!960 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !932)
!961 = !DILexicalBlockFile(scope: !956, file: !906, discriminator: 1)
!962 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !932)
!963 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !932)
!964 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !932)
!965 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !932)
!966 = !DILocation(line: 497, column: 54, scope: !900)
!967 = !DILocation(line: 497, column: 53, scope: !900)
!968 = !DILocation(line: 497, column: 23, scope: !900)
!969 = !DILocation(line: 497, column: 5, scope: !900)
!970 = !DILocation(line: 497, column: 9, scope: !900)
!971 = !DILocation(line: 497, column: 14, scope: !900)
!972 = !DILocation(line: 498, column: 16, scope: !900)
!973 = !DILocation(line: 498, column: 43, scope: !900)
!974 = !DILocation(line: 498, column: 49, scope: !900)
!975 = !DILocation(line: 498, column: 25, scope: !900)
!976 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !910)
!977 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !910)
!978 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !910)
!979 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !910)
!980 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !910)
!981 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !910)
!982 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !910)
!983 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !910)
!984 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !910)
!985 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !910)
!986 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !910)
!987 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !910)
!988 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !910)
!989 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !910)
!990 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !910)
!991 = !DILocation(line: 498, column: 53, scope: !900)
!992 = !DILocation(line: 498, column: 52, scope: !900)
!993 = !DILocation(line: 498, column: 23, scope: !900)
!994 = !DILocation(line: 498, column: 5, scope: !900)
!995 = !DILocation(line: 498, column: 9, scope: !900)
!996 = !DILocation(line: 498, column: 14, scope: !900)
!997 = !DILocation(line: 499, column: 16, scope: !900)
!998 = !DILocation(line: 499, column: 44, scope: !900)
!999 = !DILocation(line: 499, column: 50, scope: !900)
!1000 = !DILocation(line: 499, column: 25, scope: !900)
!1001 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !916)
!1002 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !916)
!1003 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !916)
!1004 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !916)
!1005 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !916)
!1006 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !916)
!1007 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !916)
!1008 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !916)
!1009 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !916)
!1010 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !916)
!1011 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !916)
!1012 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !916)
!1013 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !916)
!1014 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !916)
!1015 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !916)
!1016 = !DILocation(line: 499, column: 54, scope: !900)
!1017 = !DILocation(line: 499, column: 53, scope: !900)
!1018 = !DILocation(line: 499, column: 23, scope: !900)
!1019 = !DILocation(line: 499, column: 5, scope: !900)
!1020 = !DILocation(line: 499, column: 9, scope: !900)
!1021 = !DILocation(line: 499, column: 14, scope: !900)
!1022 = !DILocation(line: 500, column: 16, scope: !900)
!1023 = !DILocation(line: 500, column: 44, scope: !900)
!1024 = !DILocation(line: 500, column: 50, scope: !900)
!1025 = !DILocation(line: 500, column: 25, scope: !900)
!1026 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !920)
!1027 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !920)
!1028 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !920)
!1029 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !920)
!1030 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !920)
!1031 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !920)
!1032 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !920)
!1033 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !920)
!1034 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !920)
!1035 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !920)
!1036 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !920)
!1037 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !920)
!1038 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !920)
!1039 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !920)
!1040 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !920)
!1041 = !DILocation(line: 500, column: 54, scope: !900)
!1042 = !DILocation(line: 500, column: 53, scope: !900)
!1043 = !DILocation(line: 500, column: 23, scope: !900)
!1044 = !DILocation(line: 500, column: 5, scope: !900)
!1045 = !DILocation(line: 500, column: 9, scope: !900)
!1046 = !DILocation(line: 500, column: 14, scope: !900)
!1047 = !DILocation(line: 501, column: 16, scope: !900)
!1048 = !DILocation(line: 501, column: 44, scope: !900)
!1049 = !DILocation(line: 501, column: 50, scope: !900)
!1050 = !DILocation(line: 501, column: 25, scope: !900)
!1051 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !924)
!1052 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !924)
!1053 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !924)
!1054 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !924)
!1055 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !924)
!1056 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !924)
!1057 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !924)
!1058 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !924)
!1059 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !924)
!1060 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !924)
!1061 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !924)
!1062 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !924)
!1063 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !924)
!1064 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !924)
!1065 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !924)
!1066 = !DILocation(line: 501, column: 54, scope: !900)
!1067 = !DILocation(line: 501, column: 53, scope: !900)
!1068 = !DILocation(line: 501, column: 23, scope: !900)
!1069 = !DILocation(line: 501, column: 5, scope: !900)
!1070 = !DILocation(line: 501, column: 9, scope: !900)
!1071 = !DILocation(line: 501, column: 14, scope: !900)
!1072 = !DILocation(line: 502, column: 16, scope: !900)
!1073 = !DILocation(line: 502, column: 44, scope: !900)
!1074 = !DILocation(line: 502, column: 50, scope: !900)
!1075 = !DILocation(line: 502, column: 25, scope: !900)
!1076 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !928)
!1077 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !928)
!1078 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !928)
!1079 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !928)
!1080 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !928)
!1081 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !928)
!1082 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !928)
!1083 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !928)
!1084 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !928)
!1085 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !928)
!1086 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !928)
!1087 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !928)
!1088 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !928)
!1089 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !928)
!1090 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !928)
!1091 = !DILocation(line: 502, column: 54, scope: !900)
!1092 = !DILocation(line: 502, column: 53, scope: !900)
!1093 = !DILocation(line: 502, column: 23, scope: !900)
!1094 = !DILocation(line: 502, column: 5, scope: !900)
!1095 = !DILocation(line: 502, column: 9, scope: !900)
!1096 = !DILocation(line: 502, column: 14, scope: !900)
!1097 = !DILocation(line: 503, column: 5, scope: !900)
!1098 = !DILocation(line: 503, column: 9, scope: !900)
!1099 = !DILocation(line: 503, column: 11, scope: !900)
!1100 = !DILocation(line: 504, column: 1, scope: !900)
!1101 = distinct !DISubprogram(name: "spatial_compose53i_init_8bit", scope: !174, file: !174, line: 488, type: !901, isLocal: true, isDefinition: true, scopeLine: 489, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!1102 = !DILocalVariable(name: "x", arg: 1, scope: !1103, file: !1104, line: 338, type: !18)
!1103 = distinct !DISubprogram(name: "avpriv_mirror", scope: !1104, file: !1104, line: 338, type: !1105, isLocal: true, isDefinition: true, scopeLine: 339, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!1104 = !DIFile(filename: "./libavutil/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1105 = !DISubroutineType(types: !1106)
!1106 = !{!18, !18, !18}
!1107 = !DILocation(line: 338, column: 91, scope: !1103, inlinedAt: !1108)
!1108 = distinct !DILocation(line: 491, column: 25, scope: !1101)
!1109 = !DILocalVariable(name: "w", arg: 2, scope: !1103, file: !1104, line: 338, type: !18)
!1110 = !DILocation(line: 338, column: 98, scope: !1103, inlinedAt: !1108)
!1111 = !DILocation(line: 338, column: 91, scope: !1103, inlinedAt: !1112)
!1112 = distinct !DILocation(line: 490, column: 25, scope: !1101)
!1113 = !DILocation(line: 338, column: 98, scope: !1103, inlinedAt: !1112)
!1114 = !DILocalVariable(name: "cs", arg: 1, scope: !1101, file: !174, line: 488, type: !903)
!1115 = !DILocation(line: 488, column: 54, scope: !1101)
!1116 = !DILocalVariable(name: "buffer", arg: 2, scope: !1101, file: !174, line: 488, type: !20)
!1117 = !DILocation(line: 488, column: 67, scope: !1101)
!1118 = !DILocalVariable(name: "height", arg: 3, scope: !1101, file: !174, line: 488, type: !18)
!1119 = !DILocation(line: 488, column: 79, scope: !1101)
!1120 = !DILocalVariable(name: "stride", arg: 4, scope: !1101, file: !174, line: 488, type: !18)
!1121 = !DILocation(line: 488, column: 91, scope: !1101)
!1122 = !DILocation(line: 490, column: 16, scope: !1101)
!1123 = !DILocation(line: 490, column: 45, scope: !1101)
!1124 = !DILocation(line: 490, column: 51, scope: !1101)
!1125 = !DILocation(line: 490, column: 25, scope: !1101)
!1126 = !DILocation(line: 340, column: 10, scope: !1127, inlinedAt: !1112)
!1127 = distinct !DILexicalBlock(scope: !1103, file: !1104, line: 340, column: 9)
!1128 = !DILocation(line: 340, column: 9, scope: !1103, inlinedAt: !1112)
!1129 = !DILocation(line: 341, column: 9, scope: !1127, inlinedAt: !1112)
!1130 = !DILocation(line: 343, column: 5, scope: !1103, inlinedAt: !1112)
!1131 = !DILocation(line: 343, column: 22, scope: !1132, inlinedAt: !1112)
!1132 = !DILexicalBlockFile(scope: !1103, file: !1104, discriminator: 1)
!1133 = !DILocation(line: 343, column: 36, scope: !1132, inlinedAt: !1112)
!1134 = !DILocation(line: 343, column: 24, scope: !1132, inlinedAt: !1112)
!1135 = !DILocation(line: 343, column: 5, scope: !1132, inlinedAt: !1112)
!1136 = !DILocation(line: 344, column: 14, scope: !1137, inlinedAt: !1112)
!1137 = distinct !DILexicalBlock(scope: !1103, file: !1104, line: 343, column: 39)
!1138 = !DILocation(line: 344, column: 13, scope: !1137, inlinedAt: !1112)
!1139 = !DILocation(line: 344, column: 11, scope: !1137, inlinedAt: !1112)
!1140 = !DILocation(line: 345, column: 13, scope: !1141, inlinedAt: !1112)
!1141 = distinct !DILexicalBlock(scope: !1137, file: !1104, line: 345, column: 13)
!1142 = !DILocation(line: 345, column: 15, scope: !1141, inlinedAt: !1112)
!1143 = !DILocation(line: 345, column: 13, scope: !1137, inlinedAt: !1112)
!1144 = !DILocation(line: 346, column: 22, scope: !1141, inlinedAt: !1112)
!1145 = !DILocation(line: 346, column: 20, scope: !1141, inlinedAt: !1112)
!1146 = !DILocation(line: 346, column: 15, scope: !1141, inlinedAt: !1112)
!1147 = !DILocation(line: 346, column: 13, scope: !1141, inlinedAt: !1112)
!1148 = !DILocation(line: 343, column: 5, scope: !1149, inlinedAt: !1112)
!1149 = !DILexicalBlockFile(scope: !1103, file: !1104, discriminator: 2)
!1150 = distinct !{!1150, !1151}
!1151 = !DILocation(line: 343, column: 5, scope: !1103)
!1152 = !DILocation(line: 348, column: 12, scope: !1103, inlinedAt: !1112)
!1153 = !DILocation(line: 348, column: 5, scope: !1103, inlinedAt: !1112)
!1154 = !DILocation(line: 349, column: 1, scope: !1103, inlinedAt: !1112)
!1155 = !DILocation(line: 490, column: 55, scope: !1101)
!1156 = !DILocation(line: 490, column: 54, scope: !1101)
!1157 = !DILocation(line: 490, column: 23, scope: !1101)
!1158 = !DILocation(line: 490, column: 5, scope: !1101)
!1159 = !DILocation(line: 490, column: 9, scope: !1101)
!1160 = !DILocation(line: 490, column: 14, scope: !1101)
!1161 = !DILocation(line: 491, column: 16, scope: !1101)
!1162 = !DILocation(line: 491, column: 44, scope: !1101)
!1163 = !DILocation(line: 491, column: 50, scope: !1101)
!1164 = !DILocation(line: 491, column: 25, scope: !1101)
!1165 = !DILocation(line: 340, column: 10, scope: !1127, inlinedAt: !1108)
!1166 = !DILocation(line: 340, column: 9, scope: !1103, inlinedAt: !1108)
!1167 = !DILocation(line: 341, column: 9, scope: !1127, inlinedAt: !1108)
!1168 = !DILocation(line: 343, column: 5, scope: !1103, inlinedAt: !1108)
!1169 = !DILocation(line: 343, column: 22, scope: !1132, inlinedAt: !1108)
!1170 = !DILocation(line: 343, column: 36, scope: !1132, inlinedAt: !1108)
!1171 = !DILocation(line: 343, column: 24, scope: !1132, inlinedAt: !1108)
!1172 = !DILocation(line: 343, column: 5, scope: !1132, inlinedAt: !1108)
!1173 = !DILocation(line: 344, column: 14, scope: !1137, inlinedAt: !1108)
!1174 = !DILocation(line: 344, column: 13, scope: !1137, inlinedAt: !1108)
!1175 = !DILocation(line: 344, column: 11, scope: !1137, inlinedAt: !1108)
!1176 = !DILocation(line: 345, column: 13, scope: !1141, inlinedAt: !1108)
!1177 = !DILocation(line: 345, column: 15, scope: !1141, inlinedAt: !1108)
!1178 = !DILocation(line: 345, column: 13, scope: !1137, inlinedAt: !1108)
!1179 = !DILocation(line: 346, column: 22, scope: !1141, inlinedAt: !1108)
!1180 = !DILocation(line: 346, column: 20, scope: !1141, inlinedAt: !1108)
!1181 = !DILocation(line: 346, column: 15, scope: !1141, inlinedAt: !1108)
!1182 = !DILocation(line: 346, column: 13, scope: !1141, inlinedAt: !1108)
!1183 = !DILocation(line: 343, column: 5, scope: !1149, inlinedAt: !1108)
!1184 = !DILocation(line: 348, column: 12, scope: !1103, inlinedAt: !1108)
!1185 = !DILocation(line: 348, column: 5, scope: !1103, inlinedAt: !1108)
!1186 = !DILocation(line: 349, column: 1, scope: !1103, inlinedAt: !1108)
!1187 = !DILocation(line: 491, column: 54, scope: !1101)
!1188 = !DILocation(line: 491, column: 53, scope: !1101)
!1189 = !DILocation(line: 491, column: 23, scope: !1101)
!1190 = !DILocation(line: 491, column: 5, scope: !1101)
!1191 = !DILocation(line: 491, column: 9, scope: !1101)
!1192 = !DILocation(line: 491, column: 14, scope: !1101)
!1193 = !DILocation(line: 492, column: 5, scope: !1101)
!1194 = !DILocation(line: 492, column: 9, scope: !1101)
!1195 = !DILocation(line: 492, column: 11, scope: !1101)
!1196 = !DILocation(line: 493, column: 1, scope: !1101)
!1197 = distinct !DISubprogram(name: "spatial_compose_dd137i_init_8bit", scope: !174, file: !174, line: 506, type: !901, isLocal: true, isDefinition: true, scopeLine: 507, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!1198 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !1199)
!1199 = distinct !DILocation(line: 509, column: 25, scope: !1197)
!1200 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !1199)
!1201 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !1199)
!1202 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !1203)
!1203 = distinct !DILocation(line: 510, column: 25, scope: !1197)
!1204 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !1203)
!1205 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !1203)
!1206 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !1207)
!1207 = distinct !DILocation(line: 511, column: 25, scope: !1197)
!1208 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !1207)
!1209 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !1207)
!1210 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !1211)
!1211 = distinct !DILocation(line: 512, column: 25, scope: !1197)
!1212 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !1211)
!1213 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !1211)
!1214 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !1215)
!1215 = distinct !DILocation(line: 513, column: 25, scope: !1197)
!1216 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !1215)
!1217 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !1215)
!1218 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !1219)
!1219 = distinct !DILocation(line: 514, column: 25, scope: !1197)
!1220 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !1219)
!1221 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !1219)
!1222 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !1223)
!1223 = distinct !DILocation(line: 515, column: 25, scope: !1197)
!1224 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !1223)
!1225 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !1223)
!1226 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !1227)
!1227 = distinct !DILocation(line: 508, column: 25, scope: !1197)
!1228 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !1227)
!1229 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !1227)
!1230 = !DILocalVariable(name: "cs", arg: 1, scope: !1197, file: !174, line: 506, type: !903)
!1231 = !DILocation(line: 506, column: 58, scope: !1197)
!1232 = !DILocalVariable(name: "buffer", arg: 2, scope: !1197, file: !174, line: 506, type: !20)
!1233 = !DILocation(line: 506, column: 71, scope: !1197)
!1234 = !DILocalVariable(name: "height", arg: 3, scope: !1197, file: !174, line: 506, type: !18)
!1235 = !DILocation(line: 506, column: 83, scope: !1197)
!1236 = !DILocalVariable(name: "stride", arg: 4, scope: !1197, file: !174, line: 506, type: !18)
!1237 = !DILocation(line: 506, column: 95, scope: !1197)
!1238 = !DILocation(line: 508, column: 16, scope: !1197)
!1239 = !DILocation(line: 508, column: 44, scope: !1197)
!1240 = !DILocation(line: 508, column: 50, scope: !1197)
!1241 = !DILocation(line: 508, column: 25, scope: !1197)
!1242 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !1227)
!1243 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !1227)
!1244 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !1227)
!1245 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !1227)
!1246 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !1227)
!1247 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !1227)
!1248 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !1227)
!1249 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !1227)
!1250 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !1227)
!1251 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !1227)
!1252 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !1227)
!1253 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !1227)
!1254 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !1227)
!1255 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !1227)
!1256 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !1227)
!1257 = !DILocation(line: 508, column: 54, scope: !1197)
!1258 = !DILocation(line: 508, column: 53, scope: !1197)
!1259 = !DILocation(line: 508, column: 23, scope: !1197)
!1260 = !DILocation(line: 508, column: 5, scope: !1197)
!1261 = !DILocation(line: 508, column: 9, scope: !1197)
!1262 = !DILocation(line: 508, column: 14, scope: !1197)
!1263 = !DILocation(line: 509, column: 16, scope: !1197)
!1264 = !DILocation(line: 509, column: 43, scope: !1197)
!1265 = !DILocation(line: 509, column: 49, scope: !1197)
!1266 = !DILocation(line: 509, column: 25, scope: !1197)
!1267 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !1199)
!1268 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !1199)
!1269 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !1199)
!1270 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !1199)
!1271 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !1199)
!1272 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !1199)
!1273 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !1199)
!1274 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !1199)
!1275 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !1199)
!1276 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !1199)
!1277 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !1199)
!1278 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !1199)
!1279 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !1199)
!1280 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !1199)
!1281 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !1199)
!1282 = !DILocation(line: 509, column: 53, scope: !1197)
!1283 = !DILocation(line: 509, column: 52, scope: !1197)
!1284 = !DILocation(line: 509, column: 23, scope: !1197)
!1285 = !DILocation(line: 509, column: 5, scope: !1197)
!1286 = !DILocation(line: 509, column: 9, scope: !1197)
!1287 = !DILocation(line: 509, column: 14, scope: !1197)
!1288 = !DILocation(line: 510, column: 16, scope: !1197)
!1289 = !DILocation(line: 510, column: 44, scope: !1197)
!1290 = !DILocation(line: 510, column: 50, scope: !1197)
!1291 = !DILocation(line: 510, column: 25, scope: !1197)
!1292 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !1203)
!1293 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !1203)
!1294 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !1203)
!1295 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !1203)
!1296 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !1203)
!1297 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !1203)
!1298 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !1203)
!1299 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !1203)
!1300 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !1203)
!1301 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !1203)
!1302 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !1203)
!1303 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !1203)
!1304 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !1203)
!1305 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !1203)
!1306 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !1203)
!1307 = !DILocation(line: 510, column: 54, scope: !1197)
!1308 = !DILocation(line: 510, column: 53, scope: !1197)
!1309 = !DILocation(line: 510, column: 23, scope: !1197)
!1310 = !DILocation(line: 510, column: 5, scope: !1197)
!1311 = !DILocation(line: 510, column: 9, scope: !1197)
!1312 = !DILocation(line: 510, column: 14, scope: !1197)
!1313 = !DILocation(line: 511, column: 16, scope: !1197)
!1314 = !DILocation(line: 511, column: 44, scope: !1197)
!1315 = !DILocation(line: 511, column: 50, scope: !1197)
!1316 = !DILocation(line: 511, column: 25, scope: !1197)
!1317 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !1207)
!1318 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !1207)
!1319 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !1207)
!1320 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !1207)
!1321 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !1207)
!1322 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !1207)
!1323 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !1207)
!1324 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !1207)
!1325 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !1207)
!1326 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !1207)
!1327 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !1207)
!1328 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !1207)
!1329 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !1207)
!1330 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !1207)
!1331 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !1207)
!1332 = !DILocation(line: 511, column: 54, scope: !1197)
!1333 = !DILocation(line: 511, column: 53, scope: !1197)
!1334 = !DILocation(line: 511, column: 23, scope: !1197)
!1335 = !DILocation(line: 511, column: 5, scope: !1197)
!1336 = !DILocation(line: 511, column: 9, scope: !1197)
!1337 = !DILocation(line: 511, column: 14, scope: !1197)
!1338 = !DILocation(line: 512, column: 16, scope: !1197)
!1339 = !DILocation(line: 512, column: 44, scope: !1197)
!1340 = !DILocation(line: 512, column: 50, scope: !1197)
!1341 = !DILocation(line: 512, column: 25, scope: !1197)
!1342 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !1211)
!1343 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !1211)
!1344 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !1211)
!1345 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !1211)
!1346 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !1211)
!1347 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !1211)
!1348 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !1211)
!1349 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !1211)
!1350 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !1211)
!1351 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !1211)
!1352 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !1211)
!1353 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !1211)
!1354 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !1211)
!1355 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !1211)
!1356 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !1211)
!1357 = !DILocation(line: 512, column: 54, scope: !1197)
!1358 = !DILocation(line: 512, column: 53, scope: !1197)
!1359 = !DILocation(line: 512, column: 23, scope: !1197)
!1360 = !DILocation(line: 512, column: 5, scope: !1197)
!1361 = !DILocation(line: 512, column: 9, scope: !1197)
!1362 = !DILocation(line: 512, column: 14, scope: !1197)
!1363 = !DILocation(line: 513, column: 16, scope: !1197)
!1364 = !DILocation(line: 513, column: 44, scope: !1197)
!1365 = !DILocation(line: 513, column: 50, scope: !1197)
!1366 = !DILocation(line: 513, column: 25, scope: !1197)
!1367 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !1215)
!1368 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !1215)
!1369 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !1215)
!1370 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !1215)
!1371 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !1215)
!1372 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !1215)
!1373 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !1215)
!1374 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !1215)
!1375 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !1215)
!1376 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !1215)
!1377 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !1215)
!1378 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !1215)
!1379 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !1215)
!1380 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !1215)
!1381 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !1215)
!1382 = !DILocation(line: 513, column: 54, scope: !1197)
!1383 = !DILocation(line: 513, column: 53, scope: !1197)
!1384 = !DILocation(line: 513, column: 23, scope: !1197)
!1385 = !DILocation(line: 513, column: 5, scope: !1197)
!1386 = !DILocation(line: 513, column: 9, scope: !1197)
!1387 = !DILocation(line: 513, column: 14, scope: !1197)
!1388 = !DILocation(line: 514, column: 16, scope: !1197)
!1389 = !DILocation(line: 514, column: 44, scope: !1197)
!1390 = !DILocation(line: 514, column: 50, scope: !1197)
!1391 = !DILocation(line: 514, column: 25, scope: !1197)
!1392 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !1219)
!1393 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !1219)
!1394 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !1219)
!1395 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !1219)
!1396 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !1219)
!1397 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !1219)
!1398 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !1219)
!1399 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !1219)
!1400 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !1219)
!1401 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !1219)
!1402 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !1219)
!1403 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !1219)
!1404 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !1219)
!1405 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !1219)
!1406 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !1219)
!1407 = !DILocation(line: 514, column: 54, scope: !1197)
!1408 = !DILocation(line: 514, column: 53, scope: !1197)
!1409 = !DILocation(line: 514, column: 23, scope: !1197)
!1410 = !DILocation(line: 514, column: 5, scope: !1197)
!1411 = !DILocation(line: 514, column: 9, scope: !1197)
!1412 = !DILocation(line: 514, column: 14, scope: !1197)
!1413 = !DILocation(line: 515, column: 16, scope: !1197)
!1414 = !DILocation(line: 515, column: 44, scope: !1197)
!1415 = !DILocation(line: 515, column: 50, scope: !1197)
!1416 = !DILocation(line: 515, column: 25, scope: !1197)
!1417 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !1223)
!1418 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !1223)
!1419 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !1223)
!1420 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !1223)
!1421 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !1223)
!1422 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !1223)
!1423 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !1223)
!1424 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !1223)
!1425 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !1223)
!1426 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !1223)
!1427 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !1223)
!1428 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !1223)
!1429 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !1223)
!1430 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !1223)
!1431 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !1223)
!1432 = !DILocation(line: 515, column: 54, scope: !1197)
!1433 = !DILocation(line: 515, column: 53, scope: !1197)
!1434 = !DILocation(line: 515, column: 23, scope: !1197)
!1435 = !DILocation(line: 515, column: 5, scope: !1197)
!1436 = !DILocation(line: 515, column: 9, scope: !1197)
!1437 = !DILocation(line: 515, column: 14, scope: !1197)
!1438 = !DILocation(line: 516, column: 5, scope: !1197)
!1439 = !DILocation(line: 516, column: 9, scope: !1197)
!1440 = !DILocation(line: 516, column: 11, scope: !1197)
!1441 = !DILocation(line: 517, column: 1, scope: !1197)
!1442 = distinct !DISubprogram(name: "spatial_compose97i_init_8bit", scope: !174, file: !174, line: 479, type: !901, isLocal: true, isDefinition: true, scopeLine: 480, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!1443 = !DILocation(line: 338, column: 91, scope: !1103, inlinedAt: !1444)
!1444 = distinct !DILocation(line: 482, column: 25, scope: !1442)
!1445 = !DILocation(line: 338, column: 98, scope: !1103, inlinedAt: !1444)
!1446 = !DILocation(line: 338, column: 91, scope: !1103, inlinedAt: !1447)
!1447 = distinct !DILocation(line: 483, column: 25, scope: !1442)
!1448 = !DILocation(line: 338, column: 98, scope: !1103, inlinedAt: !1447)
!1449 = !DILocation(line: 338, column: 91, scope: !1103, inlinedAt: !1450)
!1450 = distinct !DILocation(line: 484, column: 25, scope: !1442)
!1451 = !DILocation(line: 338, column: 98, scope: !1103, inlinedAt: !1450)
!1452 = !DILocation(line: 338, column: 91, scope: !1103, inlinedAt: !1453)
!1453 = distinct !DILocation(line: 481, column: 25, scope: !1442)
!1454 = !DILocation(line: 338, column: 98, scope: !1103, inlinedAt: !1453)
!1455 = !DILocalVariable(name: "cs", arg: 1, scope: !1442, file: !174, line: 479, type: !903)
!1456 = !DILocation(line: 479, column: 54, scope: !1442)
!1457 = !DILocalVariable(name: "buffer", arg: 2, scope: !1442, file: !174, line: 479, type: !20)
!1458 = !DILocation(line: 479, column: 67, scope: !1442)
!1459 = !DILocalVariable(name: "height", arg: 3, scope: !1442, file: !174, line: 479, type: !18)
!1460 = !DILocation(line: 479, column: 79, scope: !1442)
!1461 = !DILocalVariable(name: "stride", arg: 4, scope: !1442, file: !174, line: 479, type: !18)
!1462 = !DILocation(line: 479, column: 91, scope: !1442)
!1463 = !DILocation(line: 481, column: 16, scope: !1442)
!1464 = !DILocation(line: 481, column: 45, scope: !1442)
!1465 = !DILocation(line: 481, column: 51, scope: !1442)
!1466 = !DILocation(line: 481, column: 25, scope: !1442)
!1467 = !DILocation(line: 340, column: 10, scope: !1127, inlinedAt: !1453)
!1468 = !DILocation(line: 340, column: 9, scope: !1103, inlinedAt: !1453)
!1469 = !DILocation(line: 341, column: 9, scope: !1127, inlinedAt: !1453)
!1470 = !DILocation(line: 343, column: 5, scope: !1103, inlinedAt: !1453)
!1471 = !DILocation(line: 343, column: 22, scope: !1132, inlinedAt: !1453)
!1472 = !DILocation(line: 343, column: 36, scope: !1132, inlinedAt: !1453)
!1473 = !DILocation(line: 343, column: 24, scope: !1132, inlinedAt: !1453)
!1474 = !DILocation(line: 343, column: 5, scope: !1132, inlinedAt: !1453)
!1475 = !DILocation(line: 344, column: 14, scope: !1137, inlinedAt: !1453)
!1476 = !DILocation(line: 344, column: 13, scope: !1137, inlinedAt: !1453)
!1477 = !DILocation(line: 344, column: 11, scope: !1137, inlinedAt: !1453)
!1478 = !DILocation(line: 345, column: 13, scope: !1141, inlinedAt: !1453)
!1479 = !DILocation(line: 345, column: 15, scope: !1141, inlinedAt: !1453)
!1480 = !DILocation(line: 345, column: 13, scope: !1137, inlinedAt: !1453)
!1481 = !DILocation(line: 346, column: 22, scope: !1141, inlinedAt: !1453)
!1482 = !DILocation(line: 346, column: 20, scope: !1141, inlinedAt: !1453)
!1483 = !DILocation(line: 346, column: 15, scope: !1141, inlinedAt: !1453)
!1484 = !DILocation(line: 346, column: 13, scope: !1141, inlinedAt: !1453)
!1485 = !DILocation(line: 343, column: 5, scope: !1149, inlinedAt: !1453)
!1486 = !DILocation(line: 348, column: 12, scope: !1103, inlinedAt: !1453)
!1487 = !DILocation(line: 348, column: 5, scope: !1103, inlinedAt: !1453)
!1488 = !DILocation(line: 349, column: 1, scope: !1103, inlinedAt: !1453)
!1489 = !DILocation(line: 481, column: 55, scope: !1442)
!1490 = !DILocation(line: 481, column: 54, scope: !1442)
!1491 = !DILocation(line: 481, column: 23, scope: !1442)
!1492 = !DILocation(line: 481, column: 5, scope: !1442)
!1493 = !DILocation(line: 481, column: 9, scope: !1442)
!1494 = !DILocation(line: 481, column: 14, scope: !1442)
!1495 = !DILocation(line: 482, column: 16, scope: !1442)
!1496 = !DILocation(line: 482, column: 44, scope: !1442)
!1497 = !DILocation(line: 482, column: 50, scope: !1442)
!1498 = !DILocation(line: 482, column: 25, scope: !1442)
!1499 = !DILocation(line: 340, column: 10, scope: !1127, inlinedAt: !1444)
!1500 = !DILocation(line: 340, column: 9, scope: !1103, inlinedAt: !1444)
!1501 = !DILocation(line: 341, column: 9, scope: !1127, inlinedAt: !1444)
!1502 = !DILocation(line: 343, column: 5, scope: !1103, inlinedAt: !1444)
!1503 = !DILocation(line: 343, column: 22, scope: !1132, inlinedAt: !1444)
!1504 = !DILocation(line: 343, column: 36, scope: !1132, inlinedAt: !1444)
!1505 = !DILocation(line: 343, column: 24, scope: !1132, inlinedAt: !1444)
!1506 = !DILocation(line: 343, column: 5, scope: !1132, inlinedAt: !1444)
!1507 = !DILocation(line: 344, column: 14, scope: !1137, inlinedAt: !1444)
!1508 = !DILocation(line: 344, column: 13, scope: !1137, inlinedAt: !1444)
!1509 = !DILocation(line: 344, column: 11, scope: !1137, inlinedAt: !1444)
!1510 = !DILocation(line: 345, column: 13, scope: !1141, inlinedAt: !1444)
!1511 = !DILocation(line: 345, column: 15, scope: !1141, inlinedAt: !1444)
!1512 = !DILocation(line: 345, column: 13, scope: !1137, inlinedAt: !1444)
!1513 = !DILocation(line: 346, column: 22, scope: !1141, inlinedAt: !1444)
!1514 = !DILocation(line: 346, column: 20, scope: !1141, inlinedAt: !1444)
!1515 = !DILocation(line: 346, column: 15, scope: !1141, inlinedAt: !1444)
!1516 = !DILocation(line: 346, column: 13, scope: !1141, inlinedAt: !1444)
!1517 = !DILocation(line: 343, column: 5, scope: !1149, inlinedAt: !1444)
!1518 = !DILocation(line: 348, column: 12, scope: !1103, inlinedAt: !1444)
!1519 = !DILocation(line: 348, column: 5, scope: !1103, inlinedAt: !1444)
!1520 = !DILocation(line: 349, column: 1, scope: !1103, inlinedAt: !1444)
!1521 = !DILocation(line: 482, column: 54, scope: !1442)
!1522 = !DILocation(line: 482, column: 53, scope: !1442)
!1523 = !DILocation(line: 482, column: 23, scope: !1442)
!1524 = !DILocation(line: 482, column: 5, scope: !1442)
!1525 = !DILocation(line: 482, column: 9, scope: !1442)
!1526 = !DILocation(line: 482, column: 14, scope: !1442)
!1527 = !DILocation(line: 483, column: 16, scope: !1442)
!1528 = !DILocation(line: 483, column: 45, scope: !1442)
!1529 = !DILocation(line: 483, column: 51, scope: !1442)
!1530 = !DILocation(line: 483, column: 25, scope: !1442)
!1531 = !DILocation(line: 340, column: 10, scope: !1127, inlinedAt: !1447)
!1532 = !DILocation(line: 340, column: 9, scope: !1103, inlinedAt: !1447)
!1533 = !DILocation(line: 341, column: 9, scope: !1127, inlinedAt: !1447)
!1534 = !DILocation(line: 343, column: 5, scope: !1103, inlinedAt: !1447)
!1535 = !DILocation(line: 343, column: 22, scope: !1132, inlinedAt: !1447)
!1536 = !DILocation(line: 343, column: 36, scope: !1132, inlinedAt: !1447)
!1537 = !DILocation(line: 343, column: 24, scope: !1132, inlinedAt: !1447)
!1538 = !DILocation(line: 343, column: 5, scope: !1132, inlinedAt: !1447)
!1539 = !DILocation(line: 344, column: 14, scope: !1137, inlinedAt: !1447)
!1540 = !DILocation(line: 344, column: 13, scope: !1137, inlinedAt: !1447)
!1541 = !DILocation(line: 344, column: 11, scope: !1137, inlinedAt: !1447)
!1542 = !DILocation(line: 345, column: 13, scope: !1141, inlinedAt: !1447)
!1543 = !DILocation(line: 345, column: 15, scope: !1141, inlinedAt: !1447)
!1544 = !DILocation(line: 345, column: 13, scope: !1137, inlinedAt: !1447)
!1545 = !DILocation(line: 346, column: 22, scope: !1141, inlinedAt: !1447)
!1546 = !DILocation(line: 346, column: 20, scope: !1141, inlinedAt: !1447)
!1547 = !DILocation(line: 346, column: 15, scope: !1141, inlinedAt: !1447)
!1548 = !DILocation(line: 346, column: 13, scope: !1141, inlinedAt: !1447)
!1549 = !DILocation(line: 343, column: 5, scope: !1149, inlinedAt: !1447)
!1550 = !DILocation(line: 348, column: 12, scope: !1103, inlinedAt: !1447)
!1551 = !DILocation(line: 348, column: 5, scope: !1103, inlinedAt: !1447)
!1552 = !DILocation(line: 349, column: 1, scope: !1103, inlinedAt: !1447)
!1553 = !DILocation(line: 483, column: 55, scope: !1442)
!1554 = !DILocation(line: 483, column: 54, scope: !1442)
!1555 = !DILocation(line: 483, column: 23, scope: !1442)
!1556 = !DILocation(line: 483, column: 5, scope: !1442)
!1557 = !DILocation(line: 483, column: 9, scope: !1442)
!1558 = !DILocation(line: 483, column: 14, scope: !1442)
!1559 = !DILocation(line: 484, column: 16, scope: !1442)
!1560 = !DILocation(line: 484, column: 45, scope: !1442)
!1561 = !DILocation(line: 484, column: 51, scope: !1442)
!1562 = !DILocation(line: 484, column: 25, scope: !1442)
!1563 = !DILocation(line: 340, column: 10, scope: !1127, inlinedAt: !1450)
!1564 = !DILocation(line: 340, column: 9, scope: !1103, inlinedAt: !1450)
!1565 = !DILocation(line: 341, column: 9, scope: !1127, inlinedAt: !1450)
!1566 = !DILocation(line: 343, column: 5, scope: !1103, inlinedAt: !1450)
!1567 = !DILocation(line: 343, column: 22, scope: !1132, inlinedAt: !1450)
!1568 = !DILocation(line: 343, column: 36, scope: !1132, inlinedAt: !1450)
!1569 = !DILocation(line: 343, column: 24, scope: !1132, inlinedAt: !1450)
!1570 = !DILocation(line: 343, column: 5, scope: !1132, inlinedAt: !1450)
!1571 = !DILocation(line: 344, column: 14, scope: !1137, inlinedAt: !1450)
!1572 = !DILocation(line: 344, column: 13, scope: !1137, inlinedAt: !1450)
!1573 = !DILocation(line: 344, column: 11, scope: !1137, inlinedAt: !1450)
!1574 = !DILocation(line: 345, column: 13, scope: !1141, inlinedAt: !1450)
!1575 = !DILocation(line: 345, column: 15, scope: !1141, inlinedAt: !1450)
!1576 = !DILocation(line: 345, column: 13, scope: !1137, inlinedAt: !1450)
!1577 = !DILocation(line: 346, column: 22, scope: !1141, inlinedAt: !1450)
!1578 = !DILocation(line: 346, column: 20, scope: !1141, inlinedAt: !1450)
!1579 = !DILocation(line: 346, column: 15, scope: !1141, inlinedAt: !1450)
!1580 = !DILocation(line: 346, column: 13, scope: !1141, inlinedAt: !1450)
!1581 = !DILocation(line: 343, column: 5, scope: !1149, inlinedAt: !1450)
!1582 = !DILocation(line: 348, column: 12, scope: !1103, inlinedAt: !1450)
!1583 = !DILocation(line: 348, column: 5, scope: !1103, inlinedAt: !1450)
!1584 = !DILocation(line: 349, column: 1, scope: !1103, inlinedAt: !1450)
!1585 = !DILocation(line: 484, column: 55, scope: !1442)
!1586 = !DILocation(line: 484, column: 54, scope: !1442)
!1587 = !DILocation(line: 484, column: 23, scope: !1442)
!1588 = !DILocation(line: 484, column: 5, scope: !1442)
!1589 = !DILocation(line: 484, column: 9, scope: !1442)
!1590 = !DILocation(line: 484, column: 14, scope: !1442)
!1591 = !DILocation(line: 485, column: 5, scope: !1442)
!1592 = !DILocation(line: 485, column: 9, scope: !1442)
!1593 = !DILocation(line: 485, column: 11, scope: !1442)
!1594 = !DILocation(line: 486, column: 1, scope: !1442)
!1595 = distinct !DISubprogram(name: "spatial_compose_dd97i_dy_8bit", scope: !174, file: !174, line: 339, type: !1596, isLocal: true, isDefinition: true, scopeLine: 340, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!1596 = !DISubroutineType(types: !1597)
!1597 = !{null, !37, !18, !18, !18, !18}
!1598 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !1599)
!1599 = distinct !DILocation(line: 350, column: 24, scope: !1595)
!1600 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !1599)
!1601 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !1599)
!1602 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !1603)
!1603 = distinct !DILocation(line: 349, column: 24, scope: !1595)
!1604 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !1603)
!1605 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !1603)
!1606 = !DILocalVariable(name: "d", arg: 1, scope: !1595, file: !174, line: 339, type: !37)
!1607 = !DILocation(line: 339, column: 55, scope: !1595)
!1608 = !DILocalVariable(name: "level", arg: 2, scope: !1595, file: !174, line: 339, type: !18)
!1609 = !DILocation(line: 339, column: 62, scope: !1595)
!1610 = !DILocalVariable(name: "width", arg: 3, scope: !1595, file: !174, line: 339, type: !18)
!1611 = !DILocation(line: 339, column: 73, scope: !1595)
!1612 = !DILocalVariable(name: "height", arg: 4, scope: !1595, file: !174, line: 339, type: !18)
!1613 = !DILocation(line: 339, column: 84, scope: !1595)
!1614 = !DILocalVariable(name: "stride", arg: 5, scope: !1595, file: !174, line: 339, type: !18)
!1615 = !DILocation(line: 339, column: 96, scope: !1595)
!1616 = !DILocalVariable(name: "vertical_compose_l0", scope: !1595, file: !174, line: 341, type: !1617)
!1617 = !DIDerivedType(tag: DW_TAG_typedef, name: "vertical_compose_3tap", file: !4, line: 50, baseType: !1618)
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 64, align: 64)
!1619 = !DISubroutineType(types: !1620)
!1620 = !{null, !20, !20, !20, !18}
!1621 = !DILocation(line: 341, column: 27, scope: !1595)
!1622 = !DILocation(line: 341, column: 56, scope: !1595)
!1623 = !DILocation(line: 341, column: 59, scope: !1595)
!1624 = !DILocation(line: 341, column: 49, scope: !1595)
!1625 = !DILocalVariable(name: "vertical_compose_h0", scope: !1595, file: !174, line: 342, type: !1626)
!1626 = !DIDerivedType(tag: DW_TAG_typedef, name: "vertical_compose_5tap", file: !4, line: 51, baseType: !1627)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 64, align: 64)
!1628 = !DISubroutineType(types: !1629)
!1629 = !{null, !20, !20, !20, !20, !20, !18}
!1630 = !DILocation(line: 342, column: 27, scope: !1595)
!1631 = !DILocation(line: 342, column: 56, scope: !1595)
!1632 = !DILocation(line: 342, column: 59, scope: !1595)
!1633 = !DILocation(line: 342, column: 49, scope: !1595)
!1634 = !DILocalVariable(name: "cs", scope: !1595, file: !174, line: 343, type: !903)
!1635 = !DILocation(line: 343, column: 17, scope: !1595)
!1636 = !DILocation(line: 343, column: 22, scope: !1595)
!1637 = !DILocation(line: 343, column: 25, scope: !1595)
!1638 = !DILocation(line: 343, column: 30, scope: !1595)
!1639 = !DILocation(line: 343, column: 28, scope: !1595)
!1640 = !DILocalVariable(name: "i", scope: !1595, file: !174, line: 345, type: !18)
!1641 = !DILocation(line: 345, column: 9, scope: !1595)
!1642 = !DILocalVariable(name: "y", scope: !1595, file: !174, line: 345, type: !18)
!1643 = !DILocation(line: 345, column: 12, scope: !1595)
!1644 = !DILocation(line: 345, column: 16, scope: !1595)
!1645 = !DILocation(line: 345, column: 20, scope: !1595)
!1646 = !DILocalVariable(name: "b", scope: !1595, file: !174, line: 346, type: !71)
!1647 = !DILocation(line: 346, column: 14, scope: !1595)
!1648 = !DILocation(line: 347, column: 12, scope: !1649)
!1649 = distinct !DILexicalBlock(scope: !1595, file: !174, line: 347, column: 5)
!1650 = !DILocation(line: 347, column: 10, scope: !1649)
!1651 = !DILocation(line: 347, column: 17, scope: !1652)
!1652 = !DILexicalBlockFile(scope: !1653, file: !174, discriminator: 1)
!1653 = distinct !DILexicalBlock(scope: !1649, file: !174, line: 347, column: 5)
!1654 = !DILocation(line: 347, column: 19, scope: !1652)
!1655 = !DILocation(line: 347, column: 5, scope: !1652)
!1656 = !DILocation(line: 348, column: 22, scope: !1653)
!1657 = !DILocation(line: 348, column: 16, scope: !1653)
!1658 = !DILocation(line: 348, column: 20, scope: !1653)
!1659 = !DILocation(line: 348, column: 11, scope: !1653)
!1660 = !DILocation(line: 348, column: 9, scope: !1653)
!1661 = !DILocation(line: 348, column: 14, scope: !1653)
!1662 = !DILocation(line: 347, column: 25, scope: !1663)
!1663 = !DILexicalBlockFile(scope: !1653, file: !174, discriminator: 2)
!1664 = !DILocation(line: 347, column: 5, scope: !1663)
!1665 = distinct !{!1665, !1666}
!1666 = !DILocation(line: 347, column: 5, scope: !1595)
!1667 = !DILocation(line: 349, column: 12, scope: !1595)
!1668 = !DILocation(line: 349, column: 15, scope: !1595)
!1669 = !DILocation(line: 349, column: 34, scope: !1595)
!1670 = !DILocation(line: 349, column: 35, scope: !1595)
!1671 = !DILocation(line: 349, column: 42, scope: !1595)
!1672 = !DILocation(line: 349, column: 48, scope: !1595)
!1673 = !DILocation(line: 349, column: 24, scope: !1595)
!1674 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !1603)
!1675 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !1603)
!1676 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !1603)
!1677 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !1603)
!1678 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !1603)
!1679 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !1603)
!1680 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !1603)
!1681 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !1603)
!1682 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !1603)
!1683 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !1603)
!1684 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !1603)
!1685 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !1603)
!1686 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !1603)
!1687 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !1603)
!1688 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !1603)
!1689 = !DILocation(line: 349, column: 52, scope: !1595)
!1690 = !DILocation(line: 349, column: 51, scope: !1595)
!1691 = !DILocation(line: 349, column: 22, scope: !1595)
!1692 = !DILocation(line: 349, column: 5, scope: !1595)
!1693 = !DILocation(line: 349, column: 10, scope: !1595)
!1694 = !DILocation(line: 350, column: 12, scope: !1595)
!1695 = !DILocation(line: 350, column: 15, scope: !1595)
!1696 = !DILocation(line: 350, column: 34, scope: !1595)
!1697 = !DILocation(line: 350, column: 35, scope: !1595)
!1698 = !DILocation(line: 350, column: 42, scope: !1595)
!1699 = !DILocation(line: 350, column: 48, scope: !1595)
!1700 = !DILocation(line: 350, column: 24, scope: !1595)
!1701 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !1599)
!1702 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !1599)
!1703 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !1599)
!1704 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !1599)
!1705 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !1599)
!1706 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !1599)
!1707 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !1599)
!1708 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !1599)
!1709 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !1599)
!1710 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !1599)
!1711 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !1599)
!1712 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !1599)
!1713 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !1599)
!1714 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !1599)
!1715 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !1599)
!1716 = !DILocation(line: 350, column: 52, scope: !1595)
!1717 = !DILocation(line: 350, column: 51, scope: !1595)
!1718 = !DILocation(line: 350, column: 22, scope: !1595)
!1719 = !DILocation(line: 350, column: 5, scope: !1595)
!1720 = !DILocation(line: 350, column: 10, scope: !1595)
!1721 = !DILocation(line: 352, column: 8, scope: !1722)
!1722 = distinct !DILexicalBlock(scope: !1595, file: !174, line: 352, column: 8)
!1723 = !DILocation(line: 352, column: 9, scope: !1722)
!1724 = !DILocation(line: 352, column: 22, scope: !1722)
!1725 = !DILocation(line: 352, column: 11, scope: !1722)
!1726 = !DILocation(line: 352, column: 8, scope: !1595)
!1727 = !DILocation(line: 352, column: 30, scope: !1728)
!1728 = !DILexicalBlockFile(scope: !1722, file: !174, discriminator: 1)
!1729 = !DILocation(line: 352, column: 51, scope: !1728)
!1730 = !DILocation(line: 352, column: 57, scope: !1728)
!1731 = !DILocation(line: 352, column: 63, scope: !1728)
!1732 = !DILocation(line: 352, column: 69, scope: !1728)
!1733 = !DILocation(line: 353, column: 8, scope: !1734)
!1734 = distinct !DILexicalBlock(scope: !1595, file: !174, line: 353, column: 8)
!1735 = !DILocation(line: 353, column: 9, scope: !1734)
!1736 = !DILocation(line: 353, column: 22, scope: !1734)
!1737 = !DILocation(line: 353, column: 11, scope: !1734)
!1738 = !DILocation(line: 353, column: 8, scope: !1595)
!1739 = !DILocation(line: 353, column: 30, scope: !1740)
!1740 = !DILexicalBlockFile(scope: !1734, file: !174, discriminator: 1)
!1741 = !DILocation(line: 353, column: 50, scope: !1740)
!1742 = !DILocation(line: 353, column: 56, scope: !1740)
!1743 = !DILocation(line: 353, column: 62, scope: !1740)
!1744 = !DILocation(line: 353, column: 68, scope: !1740)
!1745 = !DILocation(line: 353, column: 74, scope: !1740)
!1746 = !DILocation(line: 353, column: 80, scope: !1740)
!1747 = !DILocation(line: 355, column: 8, scope: !1748)
!1748 = distinct !DILexicalBlock(scope: !1595, file: !174, line: 355, column: 8)
!1749 = !DILocation(line: 355, column: 9, scope: !1748)
!1750 = !DILocation(line: 355, column: 22, scope: !1748)
!1751 = !DILocation(line: 355, column: 11, scope: !1748)
!1752 = !DILocation(line: 355, column: 8, scope: !1595)
!1753 = !DILocation(line: 355, column: 30, scope: !1754)
!1754 = !DILexicalBlockFile(scope: !1748, file: !174, discriminator: 1)
!1755 = !DILocation(line: 355, column: 33, scope: !1754)
!1756 = !DILocation(line: 355, column: 52, scope: !1754)
!1757 = !DILocation(line: 355, column: 58, scope: !1754)
!1758 = !DILocation(line: 355, column: 61, scope: !1754)
!1759 = !DILocation(line: 355, column: 67, scope: !1754)
!1760 = !DILocation(line: 356, column: 8, scope: !1761)
!1761 = distinct !DILexicalBlock(scope: !1595, file: !174, line: 356, column: 8)
!1762 = !DILocation(line: 356, column: 9, scope: !1761)
!1763 = !DILocation(line: 356, column: 22, scope: !1761)
!1764 = !DILocation(line: 356, column: 11, scope: !1761)
!1765 = !DILocation(line: 356, column: 8, scope: !1595)
!1766 = !DILocation(line: 356, column: 30, scope: !1767)
!1767 = !DILexicalBlockFile(scope: !1761, file: !174, discriminator: 1)
!1768 = !DILocation(line: 356, column: 33, scope: !1767)
!1769 = !DILocation(line: 356, column: 52, scope: !1767)
!1770 = !DILocation(line: 356, column: 58, scope: !1767)
!1771 = !DILocation(line: 356, column: 61, scope: !1767)
!1772 = !DILocation(line: 356, column: 67, scope: !1767)
!1773 = !DILocation(line: 358, column: 12, scope: !1774)
!1774 = distinct !DILexicalBlock(scope: !1595, file: !174, line: 358, column: 5)
!1775 = !DILocation(line: 358, column: 10, scope: !1774)
!1776 = !DILocation(line: 358, column: 17, scope: !1777)
!1777 = !DILexicalBlockFile(scope: !1778, file: !174, discriminator: 1)
!1778 = distinct !DILexicalBlock(scope: !1774, file: !174, line: 358, column: 5)
!1779 = !DILocation(line: 358, column: 19, scope: !1777)
!1780 = !DILocation(line: 358, column: 5, scope: !1777)
!1781 = !DILocation(line: 359, column: 22, scope: !1778)
!1782 = !DILocation(line: 359, column: 23, scope: !1778)
!1783 = !DILocation(line: 359, column: 20, scope: !1778)
!1784 = !DILocation(line: 359, column: 15, scope: !1778)
!1785 = !DILocation(line: 359, column: 9, scope: !1778)
!1786 = !DILocation(line: 359, column: 13, scope: !1778)
!1787 = !DILocation(line: 359, column: 18, scope: !1778)
!1788 = !DILocation(line: 358, column: 25, scope: !1789)
!1789 = !DILexicalBlockFile(scope: !1778, file: !174, discriminator: 2)
!1790 = !DILocation(line: 358, column: 5, scope: !1789)
!1791 = distinct !{!1791, !1792}
!1792 = !DILocation(line: 358, column: 5, scope: !1595)
!1793 = !DILocation(line: 360, column: 5, scope: !1595)
!1794 = !DILocation(line: 360, column: 9, scope: !1595)
!1795 = !DILocation(line: 360, column: 11, scope: !1595)
!1796 = !DILocation(line: 361, column: 1, scope: !1595)
!1797 = distinct !DISubprogram(name: "vertical_compose53iL0_8bit", scope: !174, file: !174, line: 44, type: !1619, isLocal: true, isDefinition: true, scopeLine: 46, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!1798 = !DILocalVariable(name: "_b0", arg: 1, scope: !1797, file: !174, line: 44, type: !20)
!1799 = !DILocation(line: 44, column: 49, scope: !1797)
!1800 = !DILocalVariable(name: "_b1", arg: 2, scope: !1797, file: !174, line: 44, type: !20)
!1801 = !DILocation(line: 44, column: 63, scope: !1797)
!1802 = !DILocalVariable(name: "_b2", arg: 3, scope: !1797, file: !174, line: 44, type: !20)
!1803 = !DILocation(line: 44, column: 77, scope: !1797)
!1804 = !DILocalVariable(name: "width", arg: 4, scope: !1797, file: !174, line: 45, type: !18)
!1805 = !DILocation(line: 45, column: 47, scope: !1797)
!1806 = !DILocalVariable(name: "i", scope: !1797, file: !174, line: 47, type: !18)
!1807 = !DILocation(line: 47, column: 9, scope: !1797)
!1808 = !DILocalVariable(name: "b0", scope: !1797, file: !174, line: 48, type: !24)
!1809 = !DILocation(line: 48, column: 14, scope: !1797)
!1810 = !DILocation(line: 48, column: 30, scope: !1797)
!1811 = !DILocation(line: 48, column: 19, scope: !1797)
!1812 = !DILocalVariable(name: "b1", scope: !1797, file: !174, line: 49, type: !24)
!1813 = !DILocation(line: 49, column: 14, scope: !1797)
!1814 = !DILocation(line: 49, column: 30, scope: !1797)
!1815 = !DILocation(line: 49, column: 19, scope: !1797)
!1816 = !DILocalVariable(name: "b2", scope: !1797, file: !174, line: 50, type: !24)
!1817 = !DILocation(line: 50, column: 14, scope: !1797)
!1818 = !DILocation(line: 50, column: 30, scope: !1797)
!1819 = !DILocation(line: 50, column: 19, scope: !1797)
!1820 = !DILocation(line: 51, column: 12, scope: !1821)
!1821 = distinct !DILexicalBlock(scope: !1797, file: !174, line: 51, column: 5)
!1822 = !DILocation(line: 51, column: 10, scope: !1821)
!1823 = !DILocation(line: 51, column: 17, scope: !1824)
!1824 = !DILexicalBlockFile(scope: !1825, file: !174, discriminator: 1)
!1825 = distinct !DILexicalBlock(scope: !1821, file: !174, line: 51, column: 5)
!1826 = !DILocation(line: 51, column: 21, scope: !1824)
!1827 = !DILocation(line: 51, column: 19, scope: !1824)
!1828 = !DILocation(line: 51, column: 5, scope: !1824)
!1829 = !DILocation(line: 52, column: 38, scope: !1825)
!1830 = !DILocation(line: 52, column: 35, scope: !1825)
!1831 = !DILocation(line: 52, column: 56, scope: !1825)
!1832 = !DILocation(line: 52, column: 53, scope: !1825)
!1833 = !DILocation(line: 52, column: 43, scope: !1825)
!1834 = !DILocation(line: 52, column: 41, scope: !1825)
!1835 = !DILocation(line: 52, column: 59, scope: !1825)
!1836 = !DILocation(line: 52, column: 64, scope: !1825)
!1837 = !DILocation(line: 52, column: 12, scope: !1825)
!1838 = !DILocation(line: 52, column: 9, scope: !1825)
!1839 = !DILocation(line: 52, column: 15, scope: !1825)
!1840 = !DILocation(line: 51, column: 29, scope: !1841)
!1841 = !DILexicalBlockFile(scope: !1825, file: !174, discriminator: 2)
!1842 = !DILocation(line: 51, column: 5, scope: !1841)
!1843 = distinct !{!1843, !1844}
!1844 = !DILocation(line: 51, column: 5, scope: !1797)
!1845 = !DILocation(line: 53, column: 1, scope: !1797)
!1846 = distinct !DISubprogram(name: "vertical_compose_dd97iH0_8bit", scope: !174, file: !174, line: 216, type: !1628, isLocal: true, isDefinition: true, scopeLine: 218, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!1847 = !DILocalVariable(name: "_b0", arg: 1, scope: !1846, file: !174, line: 216, type: !20)
!1848 = !DILocation(line: 216, column: 52, scope: !1846)
!1849 = !DILocalVariable(name: "_b1", arg: 2, scope: !1846, file: !174, line: 216, type: !20)
!1850 = !DILocation(line: 216, column: 66, scope: !1846)
!1851 = !DILocalVariable(name: "_b2", arg: 3, scope: !1846, file: !174, line: 216, type: !20)
!1852 = !DILocation(line: 216, column: 80, scope: !1846)
!1853 = !DILocalVariable(name: "_b3", arg: 4, scope: !1846, file: !174, line: 217, type: !20)
!1854 = !DILocation(line: 217, column: 55, scope: !1846)
!1855 = !DILocalVariable(name: "_b4", arg: 5, scope: !1846, file: !174, line: 217, type: !20)
!1856 = !DILocation(line: 217, column: 69, scope: !1846)
!1857 = !DILocalVariable(name: "width", arg: 6, scope: !1846, file: !174, line: 217, type: !18)
!1858 = !DILocation(line: 217, column: 78, scope: !1846)
!1859 = !DILocalVariable(name: "i", scope: !1846, file: !174, line: 219, type: !18)
!1860 = !DILocation(line: 219, column: 9, scope: !1846)
!1861 = !DILocalVariable(name: "b0", scope: !1846, file: !174, line: 220, type: !24)
!1862 = !DILocation(line: 220, column: 14, scope: !1846)
!1863 = !DILocation(line: 220, column: 30, scope: !1846)
!1864 = !DILocation(line: 220, column: 19, scope: !1846)
!1865 = !DILocalVariable(name: "b1", scope: !1846, file: !174, line: 221, type: !24)
!1866 = !DILocation(line: 221, column: 14, scope: !1846)
!1867 = !DILocation(line: 221, column: 30, scope: !1846)
!1868 = !DILocation(line: 221, column: 19, scope: !1846)
!1869 = !DILocalVariable(name: "b2", scope: !1846, file: !174, line: 222, type: !24)
!1870 = !DILocation(line: 222, column: 14, scope: !1846)
!1871 = !DILocation(line: 222, column: 30, scope: !1846)
!1872 = !DILocation(line: 222, column: 19, scope: !1846)
!1873 = !DILocalVariable(name: "b3", scope: !1846, file: !174, line: 223, type: !24)
!1874 = !DILocation(line: 223, column: 14, scope: !1846)
!1875 = !DILocation(line: 223, column: 30, scope: !1846)
!1876 = !DILocation(line: 223, column: 19, scope: !1846)
!1877 = !DILocalVariable(name: "b4", scope: !1846, file: !174, line: 224, type: !24)
!1878 = !DILocation(line: 224, column: 14, scope: !1846)
!1879 = !DILocation(line: 224, column: 30, scope: !1846)
!1880 = !DILocation(line: 224, column: 19, scope: !1846)
!1881 = !DILocation(line: 225, column: 10, scope: !1882)
!1882 = distinct !DILexicalBlock(scope: !1846, file: !174, line: 225, column: 5)
!1883 = !DILocation(line: 225, column: 9, scope: !1882)
!1884 = !DILocation(line: 225, column: 14, scope: !1885)
!1885 = !DILexicalBlockFile(scope: !1886, file: !174, discriminator: 1)
!1886 = distinct !DILexicalBlock(scope: !1882, file: !174, line: 225, column: 5)
!1887 = !DILocation(line: 225, column: 16, scope: !1885)
!1888 = !DILocation(line: 225, column: 15, scope: !1885)
!1889 = !DILocation(line: 225, column: 5, scope: !1885)
!1890 = !DILocation(line: 226, column: 38, scope: !1891)
!1891 = distinct !DILexicalBlock(scope: !1886, file: !174, line: 225, column: 27)
!1892 = !DILocation(line: 226, column: 35, scope: !1891)
!1893 = !DILocation(line: 226, column: 24, scope: !1891)
!1894 = !DILocation(line: 226, column: 57, scope: !1891)
!1895 = !DILocation(line: 226, column: 54, scope: !1891)
!1896 = !DILocation(line: 226, column: 53, scope: !1891)
!1897 = !DILocation(line: 226, column: 68, scope: !1891)
!1898 = !DILocation(line: 226, column: 65, scope: !1891)
!1899 = !DILocation(line: 226, column: 64, scope: !1891)
!1900 = !DILocation(line: 226, column: 60, scope: !1891)
!1901 = !DILocation(line: 226, column: 76, scope: !1891)
!1902 = !DILocation(line: 226, column: 73, scope: !1891)
!1903 = !DILocation(line: 226, column: 71, scope: !1891)
!1904 = !DILocation(line: 226, column: 84, scope: !1891)
!1905 = !DILocation(line: 226, column: 81, scope: !1891)
!1906 = !DILocation(line: 226, column: 79, scope: !1891)
!1907 = !DILocation(line: 226, column: 87, scope: !1891)
!1908 = !DILocation(line: 226, column: 92, scope: !1891)
!1909 = !DILocation(line: 226, column: 42, scope: !1891)
!1910 = !DILocation(line: 226, column: 17, scope: !1891)
!1911 = !DILocation(line: 226, column: 12, scope: !1891)
!1912 = !DILocation(line: 226, column: 9, scope: !1891)
!1913 = !DILocation(line: 226, column: 15, scope: !1891)
!1914 = !DILocation(line: 227, column: 5, scope: !1891)
!1915 = !DILocation(line: 225, column: 24, scope: !1916)
!1916 = !DILexicalBlockFile(scope: !1886, file: !174, discriminator: 2)
!1917 = !DILocation(line: 225, column: 5, scope: !1916)
!1918 = distinct !{!1918, !1919}
!1919 = !DILocation(line: 225, column: 5, scope: !1846)
!1920 = !DILocation(line: 228, column: 1, scope: !1846)
!1921 = distinct !DISubprogram(name: "horizontal_compose_dd97i_8bit", scope: !174, file: !174, line: 82, type: !63, isLocal: true, isDefinition: true, scopeLine: 83, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!1922 = !DILocalVariable(name: "_b", arg: 1, scope: !1921, file: !174, line: 82, type: !20)
!1923 = !DILocation(line: 82, column: 52, scope: !1921)
!1924 = !DILocalVariable(name: "_tmp", arg: 2, scope: !1921, file: !174, line: 82, type: !20)
!1925 = !DILocation(line: 82, column: 65, scope: !1921)
!1926 = !DILocalVariable(name: "w", arg: 3, scope: !1921, file: !174, line: 82, type: !18)
!1927 = !DILocation(line: 82, column: 75, scope: !1921)
!1928 = !DILocalVariable(name: "x", scope: !1921, file: !174, line: 84, type: !18)
!1929 = !DILocation(line: 84, column: 9, scope: !1921)
!1930 = !DILocalVariable(name: "w2", scope: !1921, file: !174, line: 85, type: !1931)
!1931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !18)
!1932 = !DILocation(line: 85, column: 15, scope: !1921)
!1933 = !DILocation(line: 85, column: 20, scope: !1921)
!1934 = !DILocation(line: 85, column: 22, scope: !1921)
!1935 = !DILocalVariable(name: "b", scope: !1921, file: !174, line: 86, type: !24)
!1936 = !DILocation(line: 86, column: 14, scope: !1921)
!1937 = !DILocation(line: 86, column: 29, scope: !1921)
!1938 = !DILocation(line: 86, column: 18, scope: !1921)
!1939 = !DILocalVariable(name: "tmp", scope: !1921, file: !174, line: 87, type: !24)
!1940 = !DILocation(line: 87, column: 14, scope: !1921)
!1941 = !DILocation(line: 87, column: 31, scope: !1921)
!1942 = !DILocation(line: 87, column: 20, scope: !1921)
!1943 = !DILocation(line: 89, column: 15, scope: !1921)
!1944 = !DILocation(line: 89, column: 41, scope: !1921)
!1945 = !DILocation(line: 89, column: 39, scope: !1921)
!1946 = !DILocation(line: 89, column: 60, scope: !1921)
!1947 = !DILocation(line: 89, column: 58, scope: !1921)
!1948 = !DILocation(line: 89, column: 47, scope: !1921)
!1949 = !DILocation(line: 89, column: 45, scope: !1921)
!1950 = !DILocation(line: 89, column: 65, scope: !1921)
!1951 = !DILocation(line: 89, column: 70, scope: !1921)
!1952 = !DILocation(line: 89, column: 20, scope: !1921)
!1953 = !DILocation(line: 89, column: 14, scope: !1921)
!1954 = !DILocation(line: 89, column: 5, scope: !1921)
!1955 = !DILocation(line: 89, column: 12, scope: !1921)
!1956 = !DILocation(line: 90, column: 12, scope: !1957)
!1957 = distinct !DILexicalBlock(scope: !1921, file: !174, line: 90, column: 5)
!1958 = !DILocation(line: 90, column: 10, scope: !1957)
!1959 = !DILocation(line: 90, column: 17, scope: !1960)
!1960 = !DILexicalBlockFile(scope: !1961, file: !174, discriminator: 1)
!1961 = distinct !DILexicalBlock(scope: !1957, file: !174, line: 90, column: 5)
!1962 = !DILocation(line: 90, column: 21, scope: !1960)
!1963 = !DILocation(line: 90, column: 19, scope: !1960)
!1964 = !DILocation(line: 90, column: 5, scope: !1960)
!1965 = !DILocation(line: 91, column: 21, scope: !1961)
!1966 = !DILocation(line: 91, column: 19, scope: !1961)
!1967 = !DILocation(line: 91, column: 45, scope: !1961)
!1968 = !DILocation(line: 91, column: 47, scope: !1961)
!1969 = !DILocation(line: 91, column: 46, scope: !1961)
!1970 = !DILocation(line: 91, column: 49, scope: !1961)
!1971 = !DILocation(line: 91, column: 43, scope: !1961)
!1972 = !DILocation(line: 91, column: 68, scope: !1961)
!1973 = !DILocation(line: 91, column: 70, scope: !1961)
!1974 = !DILocation(line: 91, column: 69, scope: !1961)
!1975 = !DILocation(line: 91, column: 66, scope: !1961)
!1976 = !DILocation(line: 91, column: 55, scope: !1961)
!1977 = !DILocation(line: 91, column: 53, scope: !1961)
!1978 = !DILocation(line: 91, column: 75, scope: !1961)
!1979 = !DILocation(line: 91, column: 80, scope: !1961)
!1980 = !DILocation(line: 91, column: 24, scope: !1961)
!1981 = !DILocation(line: 91, column: 18, scope: !1961)
!1982 = !DILocation(line: 91, column: 13, scope: !1961)
!1983 = !DILocation(line: 91, column: 9, scope: !1961)
!1984 = !DILocation(line: 91, column: 16, scope: !1961)
!1985 = !DILocation(line: 90, column: 26, scope: !1986)
!1986 = !DILexicalBlockFile(scope: !1961, file: !174, discriminator: 2)
!1987 = !DILocation(line: 90, column: 5, scope: !1986)
!1988 = distinct !{!1988, !1989}
!1989 = !DILocation(line: 90, column: 5, scope: !1921)
!1990 = !DILocation(line: 94, column: 15, scope: !1921)
!1991 = !DILocation(line: 94, column: 5, scope: !1921)
!1992 = !DILocation(line: 94, column: 13, scope: !1921)
!1993 = !DILocation(line: 95, column: 31, scope: !1921)
!1994 = !DILocation(line: 95, column: 33, scope: !1921)
!1995 = !DILocation(line: 95, column: 27, scope: !1921)
!1996 = !DILocation(line: 95, column: 21, scope: !1921)
!1997 = !DILocation(line: 95, column: 17, scope: !1921)
!1998 = !DILocation(line: 95, column: 25, scope: !1921)
!1999 = !DILocation(line: 95, column: 9, scope: !1921)
!2000 = !DILocation(line: 95, column: 11, scope: !1921)
!2001 = !DILocation(line: 95, column: 5, scope: !1921)
!2002 = !DILocation(line: 95, column: 15, scope: !1921)
!2003 = !DILocation(line: 97, column: 12, scope: !2004)
!2004 = distinct !DILexicalBlock(scope: !1921, file: !174, line: 97, column: 5)
!2005 = !DILocation(line: 97, column: 10, scope: !2004)
!2006 = !DILocation(line: 97, column: 17, scope: !2007)
!2007 = !DILexicalBlockFile(scope: !2008, file: !174, discriminator: 1)
!2008 = distinct !DILexicalBlock(scope: !2004, file: !174, line: 97, column: 5)
!2009 = !DILocation(line: 97, column: 21, scope: !2007)
!2010 = !DILocation(line: 97, column: 19, scope: !2007)
!2011 = !DILocation(line: 97, column: 5, scope: !2007)
!2012 = !DILocation(line: 98, column: 30, scope: !2013)
!2013 = distinct !DILexicalBlock(scope: !2008, file: !174, line: 97, column: 30)
!2014 = !DILocation(line: 98, column: 26, scope: !2013)
!2015 = !DILocation(line: 98, column: 33, scope: !2013)
!2016 = !DILocation(line: 98, column: 39, scope: !2013)
!2017 = !DILocation(line: 98, column: 19, scope: !2013)
!2018 = !DILocation(line: 98, column: 13, scope: !2013)
!2019 = !DILocation(line: 98, column: 12, scope: !2013)
!2020 = !DILocation(line: 98, column: 9, scope: !2013)
!2021 = !DILocation(line: 98, column: 17, scope: !2013)
!2022 = !DILocation(line: 99, column: 47, scope: !2013)
!2023 = !DILocation(line: 99, column: 49, scope: !2013)
!2024 = !DILocation(line: 99, column: 48, scope: !2013)
!2025 = !DILocation(line: 99, column: 45, scope: !2013)
!2026 = !DILocation(line: 99, column: 34, scope: !2013)
!2027 = !DILocation(line: 99, column: 70, scope: !2013)
!2028 = !DILocation(line: 99, column: 66, scope: !2013)
!2029 = !DILocation(line: 99, column: 65, scope: !2013)
!2030 = !DILocation(line: 99, column: 82, scope: !2013)
!2031 = !DILocation(line: 99, column: 83, scope: !2013)
!2032 = !DILocation(line: 99, column: 78, scope: !2013)
!2033 = !DILocation(line: 99, column: 77, scope: !2013)
!2034 = !DILocation(line: 99, column: 73, scope: !2013)
!2035 = !DILocation(line: 99, column: 93, scope: !2013)
!2036 = !DILocation(line: 99, column: 94, scope: !2013)
!2037 = !DILocation(line: 99, column: 89, scope: !2013)
!2038 = !DILocation(line: 99, column: 87, scope: !2013)
!2039 = !DILocation(line: 99, column: 104, scope: !2013)
!2040 = !DILocation(line: 99, column: 105, scope: !2013)
!2041 = !DILocation(line: 99, column: 100, scope: !2013)
!2042 = !DILocation(line: 99, column: 98, scope: !2013)
!2043 = !DILocation(line: 99, column: 109, scope: !2013)
!2044 = !DILocation(line: 99, column: 114, scope: !2013)
!2045 = !DILocation(line: 99, column: 54, scope: !2013)
!2046 = !DILocation(line: 99, column: 122, scope: !2013)
!2047 = !DILocation(line: 99, column: 128, scope: !2013)
!2048 = !DILocation(line: 99, column: 20, scope: !2013)
!2049 = !DILocation(line: 99, column: 13, scope: !2013)
!2050 = !DILocation(line: 99, column: 12, scope: !2013)
!2051 = !DILocation(line: 99, column: 14, scope: !2013)
!2052 = !DILocation(line: 99, column: 9, scope: !2013)
!2053 = !DILocation(line: 99, column: 18, scope: !2013)
!2054 = !DILocation(line: 100, column: 5, scope: !2013)
!2055 = !DILocation(line: 97, column: 26, scope: !2056)
!2056 = !DILexicalBlockFile(scope: !2008, file: !174, discriminator: 2)
!2057 = !DILocation(line: 97, column: 5, scope: !2056)
!2058 = distinct !{!2058, !2059}
!2059 = !DILocation(line: 97, column: 5, scope: !1921)
!2060 = !DILocation(line: 101, column: 1, scope: !1921)
!2061 = distinct !DISubprogram(name: "spatial_compose_dirac53i_dy_8bit", scope: !174, file: !174, line: 363, type: !1596, isLocal: true, isDefinition: true, scopeLine: 364, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!2062 = !DILocation(line: 338, column: 91, scope: !1103, inlinedAt: !2063)
!2063 = distinct !DILocation(line: 372, column: 24, scope: !2061)
!2064 = !DILocation(line: 338, column: 98, scope: !1103, inlinedAt: !2063)
!2065 = !DILocation(line: 338, column: 91, scope: !1103, inlinedAt: !2066)
!2066 = distinct !DILocation(line: 371, column: 24, scope: !2061)
!2067 = !DILocation(line: 338, column: 98, scope: !1103, inlinedAt: !2066)
!2068 = !DILocalVariable(name: "d", arg: 1, scope: !2061, file: !174, line: 363, type: !37)
!2069 = !DILocation(line: 363, column: 58, scope: !2061)
!2070 = !DILocalVariable(name: "level", arg: 2, scope: !2061, file: !174, line: 363, type: !18)
!2071 = !DILocation(line: 363, column: 65, scope: !2061)
!2072 = !DILocalVariable(name: "width", arg: 3, scope: !2061, file: !174, line: 363, type: !18)
!2073 = !DILocation(line: 363, column: 76, scope: !2061)
!2074 = !DILocalVariable(name: "height", arg: 4, scope: !2061, file: !174, line: 363, type: !18)
!2075 = !DILocation(line: 363, column: 87, scope: !2061)
!2076 = !DILocalVariable(name: "stride", arg: 5, scope: !2061, file: !174, line: 363, type: !18)
!2077 = !DILocation(line: 363, column: 99, scope: !2061)
!2078 = !DILocalVariable(name: "vertical_compose_l0", scope: !2061, file: !174, line: 365, type: !1617)
!2079 = !DILocation(line: 365, column: 27, scope: !2061)
!2080 = !DILocation(line: 365, column: 56, scope: !2061)
!2081 = !DILocation(line: 365, column: 59, scope: !2061)
!2082 = !DILocation(line: 365, column: 49, scope: !2061)
!2083 = !DILocalVariable(name: "vertical_compose_h0", scope: !2061, file: !174, line: 366, type: !1617)
!2084 = !DILocation(line: 366, column: 27, scope: !2061)
!2085 = !DILocation(line: 366, column: 56, scope: !2061)
!2086 = !DILocation(line: 366, column: 59, scope: !2061)
!2087 = !DILocation(line: 366, column: 49, scope: !2061)
!2088 = !DILocalVariable(name: "cs", scope: !2061, file: !174, line: 367, type: !903)
!2089 = !DILocation(line: 367, column: 17, scope: !2061)
!2090 = !DILocation(line: 367, column: 22, scope: !2061)
!2091 = !DILocation(line: 367, column: 25, scope: !2061)
!2092 = !DILocation(line: 367, column: 30, scope: !2061)
!2093 = !DILocation(line: 367, column: 28, scope: !2061)
!2094 = !DILocalVariable(name: "y", scope: !2061, file: !174, line: 369, type: !18)
!2095 = !DILocation(line: 369, column: 9, scope: !2061)
!2096 = !DILocation(line: 369, column: 12, scope: !2061)
!2097 = !DILocation(line: 369, column: 16, scope: !2061)
!2098 = !DILocalVariable(name: "b", scope: !2061, file: !174, line: 370, type: !2099)
!2099 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 256, align: 64, elements: !2100)
!2100 = !{!2101}
!2101 = !DISubrange(count: 4)
!2102 = !DILocation(line: 370, column: 14, scope: !2061)
!2103 = !DILocation(line: 370, column: 21, scope: !2061)
!2104 = !DILocation(line: 370, column: 23, scope: !2061)
!2105 = !DILocation(line: 370, column: 27, scope: !2061)
!2106 = !DILocation(line: 370, column: 33, scope: !2061)
!2107 = !DILocation(line: 370, column: 37, scope: !2061)
!2108 = !DILocation(line: 370, column: 21, scope: !2109)
!2109 = !DILexicalBlockFile(scope: !2061, file: !174, discriminator: 1)
!2110 = !DILocation(line: 371, column: 12, scope: !2061)
!2111 = !DILocation(line: 371, column: 15, scope: !2061)
!2112 = !DILocation(line: 371, column: 38, scope: !2061)
!2113 = !DILocation(line: 371, column: 39, scope: !2061)
!2114 = !DILocation(line: 371, column: 43, scope: !2061)
!2115 = !DILocation(line: 371, column: 49, scope: !2061)
!2116 = !DILocation(line: 371, column: 24, scope: !2061)
!2117 = !DILocation(line: 340, column: 10, scope: !1127, inlinedAt: !2066)
!2118 = !DILocation(line: 340, column: 9, scope: !1103, inlinedAt: !2066)
!2119 = !DILocation(line: 341, column: 9, scope: !1127, inlinedAt: !2066)
!2120 = !DILocation(line: 343, column: 5, scope: !1103, inlinedAt: !2066)
!2121 = !DILocation(line: 343, column: 22, scope: !1132, inlinedAt: !2066)
!2122 = !DILocation(line: 343, column: 36, scope: !1132, inlinedAt: !2066)
!2123 = !DILocation(line: 343, column: 24, scope: !1132, inlinedAt: !2066)
!2124 = !DILocation(line: 343, column: 5, scope: !1132, inlinedAt: !2066)
!2125 = !DILocation(line: 344, column: 14, scope: !1137, inlinedAt: !2066)
!2126 = !DILocation(line: 344, column: 13, scope: !1137, inlinedAt: !2066)
!2127 = !DILocation(line: 344, column: 11, scope: !1137, inlinedAt: !2066)
!2128 = !DILocation(line: 345, column: 13, scope: !1141, inlinedAt: !2066)
!2129 = !DILocation(line: 345, column: 15, scope: !1141, inlinedAt: !2066)
!2130 = !DILocation(line: 345, column: 13, scope: !1137, inlinedAt: !2066)
!2131 = !DILocation(line: 346, column: 22, scope: !1141, inlinedAt: !2066)
!2132 = !DILocation(line: 346, column: 20, scope: !1141, inlinedAt: !2066)
!2133 = !DILocation(line: 346, column: 15, scope: !1141, inlinedAt: !2066)
!2134 = !DILocation(line: 346, column: 13, scope: !1141, inlinedAt: !2066)
!2135 = !DILocation(line: 343, column: 5, scope: !1149, inlinedAt: !2066)
!2136 = !DILocation(line: 348, column: 12, scope: !1103, inlinedAt: !2066)
!2137 = !DILocation(line: 348, column: 5, scope: !1103, inlinedAt: !2066)
!2138 = !DILocation(line: 349, column: 1, scope: !1103, inlinedAt: !2066)
!2139 = !DILocation(line: 371, column: 53, scope: !2061)
!2140 = !DILocation(line: 371, column: 52, scope: !2061)
!2141 = !DILocation(line: 371, column: 22, scope: !2061)
!2142 = !DILocation(line: 371, column: 5, scope: !2061)
!2143 = !DILocation(line: 371, column: 10, scope: !2061)
!2144 = !DILocation(line: 372, column: 12, scope: !2061)
!2145 = !DILocation(line: 372, column: 15, scope: !2061)
!2146 = !DILocation(line: 372, column: 38, scope: !2061)
!2147 = !DILocation(line: 372, column: 39, scope: !2061)
!2148 = !DILocation(line: 372, column: 43, scope: !2061)
!2149 = !DILocation(line: 372, column: 49, scope: !2061)
!2150 = !DILocation(line: 372, column: 24, scope: !2061)
!2151 = !DILocation(line: 340, column: 10, scope: !1127, inlinedAt: !2063)
!2152 = !DILocation(line: 340, column: 9, scope: !1103, inlinedAt: !2063)
!2153 = !DILocation(line: 341, column: 9, scope: !1127, inlinedAt: !2063)
!2154 = !DILocation(line: 343, column: 5, scope: !1103, inlinedAt: !2063)
!2155 = !DILocation(line: 343, column: 22, scope: !1132, inlinedAt: !2063)
!2156 = !DILocation(line: 343, column: 36, scope: !1132, inlinedAt: !2063)
!2157 = !DILocation(line: 343, column: 24, scope: !1132, inlinedAt: !2063)
!2158 = !DILocation(line: 343, column: 5, scope: !1132, inlinedAt: !2063)
!2159 = !DILocation(line: 344, column: 14, scope: !1137, inlinedAt: !2063)
!2160 = !DILocation(line: 344, column: 13, scope: !1137, inlinedAt: !2063)
!2161 = !DILocation(line: 344, column: 11, scope: !1137, inlinedAt: !2063)
!2162 = !DILocation(line: 345, column: 13, scope: !1141, inlinedAt: !2063)
!2163 = !DILocation(line: 345, column: 15, scope: !1141, inlinedAt: !2063)
!2164 = !DILocation(line: 345, column: 13, scope: !1137, inlinedAt: !2063)
!2165 = !DILocation(line: 346, column: 22, scope: !1141, inlinedAt: !2063)
!2166 = !DILocation(line: 346, column: 20, scope: !1141, inlinedAt: !2063)
!2167 = !DILocation(line: 346, column: 15, scope: !1141, inlinedAt: !2063)
!2168 = !DILocation(line: 346, column: 13, scope: !1141, inlinedAt: !2063)
!2169 = !DILocation(line: 343, column: 5, scope: !1149, inlinedAt: !2063)
!2170 = !DILocation(line: 348, column: 12, scope: !1103, inlinedAt: !2063)
!2171 = !DILocation(line: 348, column: 5, scope: !1103, inlinedAt: !2063)
!2172 = !DILocation(line: 349, column: 1, scope: !1103, inlinedAt: !2063)
!2173 = !DILocation(line: 372, column: 53, scope: !2061)
!2174 = !DILocation(line: 372, column: 52, scope: !2061)
!2175 = !DILocation(line: 372, column: 22, scope: !2061)
!2176 = !DILocation(line: 372, column: 5, scope: !2061)
!2177 = !DILocation(line: 372, column: 10, scope: !2061)
!2178 = !DILocation(line: 374, column: 8, scope: !2179)
!2179 = distinct !DILexicalBlock(scope: !2061, file: !174, line: 374, column: 8)
!2180 = !DILocation(line: 374, column: 9, scope: !2179)
!2181 = !DILocation(line: 374, column: 22, scope: !2179)
!2182 = !DILocation(line: 374, column: 11, scope: !2179)
!2183 = !DILocation(line: 374, column: 8, scope: !2061)
!2184 = !DILocation(line: 374, column: 30, scope: !2185)
!2185 = !DILexicalBlockFile(scope: !2179, file: !174, discriminator: 1)
!2186 = !DILocation(line: 374, column: 50, scope: !2185)
!2187 = !DILocation(line: 374, column: 56, scope: !2185)
!2188 = !DILocation(line: 374, column: 62, scope: !2185)
!2189 = !DILocation(line: 374, column: 68, scope: !2185)
!2190 = !DILocation(line: 375, column: 8, scope: !2191)
!2191 = distinct !DILexicalBlock(scope: !2061, file: !174, line: 375, column: 8)
!2192 = !DILocation(line: 375, column: 9, scope: !2191)
!2193 = !DILocation(line: 375, column: 22, scope: !2191)
!2194 = !DILocation(line: 375, column: 11, scope: !2191)
!2195 = !DILocation(line: 375, column: 8, scope: !2061)
!2196 = !DILocation(line: 375, column: 30, scope: !2197)
!2197 = !DILexicalBlockFile(scope: !2191, file: !174, discriminator: 1)
!2198 = !DILocation(line: 375, column: 50, scope: !2197)
!2199 = !DILocation(line: 375, column: 56, scope: !2197)
!2200 = !DILocation(line: 375, column: 62, scope: !2197)
!2201 = !DILocation(line: 375, column: 68, scope: !2197)
!2202 = !DILocation(line: 377, column: 8, scope: !2203)
!2203 = distinct !DILexicalBlock(scope: !2061, file: !174, line: 377, column: 8)
!2204 = !DILocation(line: 377, column: 9, scope: !2203)
!2205 = !DILocation(line: 377, column: 22, scope: !2203)
!2206 = !DILocation(line: 377, column: 11, scope: !2203)
!2207 = !DILocation(line: 377, column: 8, scope: !2061)
!2208 = !DILocation(line: 377, column: 30, scope: !2209)
!2209 = !DILexicalBlockFile(scope: !2203, file: !174, discriminator: 1)
!2210 = !DILocation(line: 377, column: 33, scope: !2209)
!2211 = !DILocation(line: 377, column: 52, scope: !2209)
!2212 = !DILocation(line: 377, column: 58, scope: !2209)
!2213 = !DILocation(line: 377, column: 61, scope: !2209)
!2214 = !DILocation(line: 377, column: 67, scope: !2209)
!2215 = !DILocation(line: 378, column: 8, scope: !2216)
!2216 = distinct !DILexicalBlock(scope: !2061, file: !174, line: 378, column: 8)
!2217 = !DILocation(line: 378, column: 9, scope: !2216)
!2218 = !DILocation(line: 378, column: 22, scope: !2216)
!2219 = !DILocation(line: 378, column: 11, scope: !2216)
!2220 = !DILocation(line: 378, column: 8, scope: !2061)
!2221 = !DILocation(line: 378, column: 30, scope: !2222)
!2222 = !DILexicalBlockFile(scope: !2216, file: !174, discriminator: 1)
!2223 = !DILocation(line: 378, column: 33, scope: !2222)
!2224 = !DILocation(line: 378, column: 52, scope: !2222)
!2225 = !DILocation(line: 378, column: 58, scope: !2222)
!2226 = !DILocation(line: 378, column: 61, scope: !2222)
!2227 = !DILocation(line: 378, column: 67, scope: !2222)
!2228 = !DILocation(line: 380, column: 16, scope: !2061)
!2229 = !DILocation(line: 380, column: 5, scope: !2061)
!2230 = !DILocation(line: 380, column: 9, scope: !2061)
!2231 = !DILocation(line: 380, column: 14, scope: !2061)
!2232 = !DILocation(line: 381, column: 16, scope: !2061)
!2233 = !DILocation(line: 381, column: 5, scope: !2061)
!2234 = !DILocation(line: 381, column: 9, scope: !2061)
!2235 = !DILocation(line: 381, column: 14, scope: !2061)
!2236 = !DILocation(line: 382, column: 5, scope: !2061)
!2237 = !DILocation(line: 382, column: 9, scope: !2061)
!2238 = !DILocation(line: 382, column: 11, scope: !2061)
!2239 = !DILocation(line: 383, column: 1, scope: !2061)
!2240 = distinct !DISubprogram(name: "vertical_compose_dirac53iH0_8bit", scope: !174, file: !174, line: 204, type: !1619, isLocal: true, isDefinition: true, scopeLine: 206, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!2241 = !DILocalVariable(name: "_b0", arg: 1, scope: !2240, file: !174, line: 204, type: !20)
!2242 = !DILocation(line: 204, column: 55, scope: !2240)
!2243 = !DILocalVariable(name: "_b1", arg: 2, scope: !2240, file: !174, line: 204, type: !20)
!2244 = !DILocation(line: 204, column: 69, scope: !2240)
!2245 = !DILocalVariable(name: "_b2", arg: 3, scope: !2240, file: !174, line: 204, type: !20)
!2246 = !DILocation(line: 204, column: 83, scope: !2240)
!2247 = !DILocalVariable(name: "width", arg: 4, scope: !2240, file: !174, line: 205, type: !18)
!2248 = !DILocation(line: 205, column: 53, scope: !2240)
!2249 = !DILocalVariable(name: "i", scope: !2240, file: !174, line: 207, type: !18)
!2250 = !DILocation(line: 207, column: 9, scope: !2240)
!2251 = !DILocalVariable(name: "b0", scope: !2240, file: !174, line: 208, type: !24)
!2252 = !DILocation(line: 208, column: 14, scope: !2240)
!2253 = !DILocation(line: 208, column: 30, scope: !2240)
!2254 = !DILocation(line: 208, column: 19, scope: !2240)
!2255 = !DILocalVariable(name: "b1", scope: !2240, file: !174, line: 209, type: !24)
!2256 = !DILocation(line: 209, column: 14, scope: !2240)
!2257 = !DILocation(line: 209, column: 30, scope: !2240)
!2258 = !DILocation(line: 209, column: 19, scope: !2240)
!2259 = !DILocalVariable(name: "b2", scope: !2240, file: !174, line: 210, type: !24)
!2260 = !DILocation(line: 210, column: 14, scope: !2240)
!2261 = !DILocation(line: 210, column: 30, scope: !2240)
!2262 = !DILocation(line: 210, column: 19, scope: !2240)
!2263 = !DILocation(line: 211, column: 10, scope: !2264)
!2264 = distinct !DILexicalBlock(scope: !2240, file: !174, line: 211, column: 5)
!2265 = !DILocation(line: 211, column: 9, scope: !2264)
!2266 = !DILocation(line: 211, column: 14, scope: !2267)
!2267 = !DILexicalBlockFile(scope: !2268, file: !174, discriminator: 1)
!2268 = distinct !DILexicalBlock(scope: !2264, file: !174, line: 211, column: 5)
!2269 = !DILocation(line: 211, column: 16, scope: !2267)
!2270 = !DILocation(line: 211, column: 15, scope: !2267)
!2271 = !DILocation(line: 211, column: 5, scope: !2267)
!2272 = !DILocation(line: 212, column: 21, scope: !2273)
!2273 = distinct !DILexicalBlock(scope: !2268, file: !174, line: 211, column: 27)
!2274 = !DILocation(line: 212, column: 18, scope: !2273)
!2275 = !DILocation(line: 212, column: 46, scope: !2273)
!2276 = !DILocation(line: 212, column: 43, scope: !2273)
!2277 = !DILocation(line: 212, column: 65, scope: !2273)
!2278 = !DILocation(line: 212, column: 62, scope: !2273)
!2279 = !DILocation(line: 212, column: 51, scope: !2273)
!2280 = !DILocation(line: 212, column: 49, scope: !2273)
!2281 = !DILocation(line: 212, column: 69, scope: !2273)
!2282 = !DILocation(line: 212, column: 74, scope: !2273)
!2283 = !DILocation(line: 212, column: 24, scope: !2273)
!2284 = !DILocation(line: 212, column: 17, scope: !2273)
!2285 = !DILocation(line: 212, column: 12, scope: !2273)
!2286 = !DILocation(line: 212, column: 9, scope: !2273)
!2287 = !DILocation(line: 212, column: 15, scope: !2273)
!2288 = !DILocation(line: 213, column: 5, scope: !2273)
!2289 = !DILocation(line: 211, column: 24, scope: !2290)
!2290 = !DILexicalBlockFile(scope: !2268, file: !174, discriminator: 2)
!2291 = !DILocation(line: 211, column: 5, scope: !2290)
!2292 = distinct !{!2292, !2293}
!2293 = !DILocation(line: 211, column: 5, scope: !2240)
!2294 = !DILocation(line: 214, column: 1, scope: !2240)
!2295 = distinct !DISubprogram(name: "horizontal_compose_dirac53i_8bit", scope: !174, file: !174, line: 65, type: !63, isLocal: true, isDefinition: true, scopeLine: 66, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!2296 = !DILocalVariable(name: "dst", arg: 1, scope: !2297, file: !174, line: 55, type: !24)
!2297 = distinct !DISubprogram(name: "interleave_8bit", scope: !174, file: !174, line: 55, type: !2298, isLocal: true, isDefinition: true, scopeLine: 57, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!2298 = !DISubroutineType(types: !2299)
!2299 = !{null, !24, !24, !24, !18, !18, !18}
!2300 = !DILocation(line: 55, column: 76, scope: !2297, inlinedAt: !2301)
!2301 = distinct !DILocation(line: 79, column: 5, scope: !2295)
!2302 = !DILocalVariable(name: "src0", arg: 2, scope: !2297, file: !174, line: 55, type: !24)
!2303 = !DILocation(line: 55, column: 90, scope: !2297, inlinedAt: !2301)
!2304 = !DILocalVariable(name: "src1", arg: 3, scope: !2297, file: !174, line: 55, type: !24)
!2305 = !DILocation(line: 55, column: 105, scope: !2297, inlinedAt: !2301)
!2306 = !DILocalVariable(name: "w2", arg: 4, scope: !2297, file: !174, line: 55, type: !18)
!2307 = !DILocation(line: 55, column: 115, scope: !2297, inlinedAt: !2301)
!2308 = !DILocalVariable(name: "add", arg: 5, scope: !2297, file: !174, line: 56, type: !18)
!2309 = !DILocation(line: 56, column: 53, scope: !2297, inlinedAt: !2301)
!2310 = !DILocalVariable(name: "shift", arg: 6, scope: !2297, file: !174, line: 56, type: !18)
!2311 = !DILocation(line: 56, column: 62, scope: !2297, inlinedAt: !2301)
!2312 = !DILocalVariable(name: "i", scope: !2297, file: !174, line: 58, type: !18)
!2313 = !DILocation(line: 58, column: 9, scope: !2297, inlinedAt: !2301)
!2314 = !DILocalVariable(name: "_b", arg: 1, scope: !2295, file: !174, line: 65, type: !20)
!2315 = !DILocation(line: 65, column: 55, scope: !2295)
!2316 = !DILocalVariable(name: "_temp", arg: 2, scope: !2295, file: !174, line: 65, type: !20)
!2317 = !DILocation(line: 65, column: 68, scope: !2295)
!2318 = !DILocalVariable(name: "w", arg: 3, scope: !2295, file: !174, line: 65, type: !18)
!2319 = !DILocation(line: 65, column: 79, scope: !2295)
!2320 = !DILocalVariable(name: "x", scope: !2295, file: !174, line: 67, type: !18)
!2321 = !DILocation(line: 67, column: 9, scope: !2295)
!2322 = !DILocalVariable(name: "w2", scope: !2295, file: !174, line: 68, type: !1931)
!2323 = !DILocation(line: 68, column: 15, scope: !2295)
!2324 = !DILocation(line: 68, column: 20, scope: !2295)
!2325 = !DILocation(line: 68, column: 22, scope: !2295)
!2326 = !DILocalVariable(name: "b", scope: !2295, file: !174, line: 69, type: !24)
!2327 = !DILocation(line: 69, column: 14, scope: !2295)
!2328 = !DILocation(line: 69, column: 29, scope: !2295)
!2329 = !DILocation(line: 69, column: 18, scope: !2295)
!2330 = !DILocalVariable(name: "temp", scope: !2295, file: !174, line: 70, type: !24)
!2331 = !DILocation(line: 70, column: 14, scope: !2295)
!2332 = !DILocation(line: 70, column: 32, scope: !2295)
!2333 = !DILocation(line: 70, column: 21, scope: !2295)
!2334 = !DILocation(line: 72, column: 16, scope: !2295)
!2335 = !DILocation(line: 72, column: 42, scope: !2295)
!2336 = !DILocation(line: 72, column: 40, scope: !2295)
!2337 = !DILocation(line: 72, column: 61, scope: !2295)
!2338 = !DILocation(line: 72, column: 59, scope: !2295)
!2339 = !DILocation(line: 72, column: 48, scope: !2295)
!2340 = !DILocation(line: 72, column: 46, scope: !2295)
!2341 = !DILocation(line: 72, column: 66, scope: !2295)
!2342 = !DILocation(line: 72, column: 71, scope: !2295)
!2343 = !DILocation(line: 72, column: 21, scope: !2295)
!2344 = !DILocation(line: 72, column: 15, scope: !2295)
!2345 = !DILocation(line: 72, column: 5, scope: !2295)
!2346 = !DILocation(line: 72, column: 13, scope: !2295)
!2347 = !DILocation(line: 73, column: 12, scope: !2348)
!2348 = distinct !DILexicalBlock(scope: !2295, file: !174, line: 73, column: 5)
!2349 = !DILocation(line: 73, column: 10, scope: !2348)
!2350 = !DILocation(line: 73, column: 17, scope: !2351)
!2351 = !DILexicalBlockFile(scope: !2352, file: !174, discriminator: 1)
!2352 = distinct !DILexicalBlock(scope: !2348, file: !174, line: 73, column: 5)
!2353 = !DILocation(line: 73, column: 21, scope: !2351)
!2354 = !DILocation(line: 73, column: 19, scope: !2351)
!2355 = !DILocation(line: 73, column: 5, scope: !2351)
!2356 = !DILocation(line: 74, column: 23, scope: !2357)
!2357 = distinct !DILexicalBlock(scope: !2352, file: !174, line: 73, column: 30)
!2358 = !DILocation(line: 74, column: 21, scope: !2357)
!2359 = !DILocation(line: 74, column: 48, scope: !2357)
!2360 = !DILocation(line: 74, column: 50, scope: !2357)
!2361 = !DILocation(line: 74, column: 49, scope: !2357)
!2362 = !DILocation(line: 74, column: 52, scope: !2357)
!2363 = !DILocation(line: 74, column: 46, scope: !2357)
!2364 = !DILocation(line: 74, column: 71, scope: !2357)
!2365 = !DILocation(line: 74, column: 73, scope: !2357)
!2366 = !DILocation(line: 74, column: 72, scope: !2357)
!2367 = !DILocation(line: 74, column: 69, scope: !2357)
!2368 = !DILocation(line: 74, column: 58, scope: !2357)
!2369 = !DILocation(line: 74, column: 56, scope: !2357)
!2370 = !DILocation(line: 74, column: 78, scope: !2357)
!2371 = !DILocation(line: 74, column: 83, scope: !2357)
!2372 = !DILocation(line: 74, column: 27, scope: !2357)
!2373 = !DILocation(line: 74, column: 20, scope: !2357)
!2374 = !DILocation(line: 74, column: 14, scope: !2357)
!2375 = !DILocation(line: 74, column: 9, scope: !2357)
!2376 = !DILocation(line: 74, column: 18, scope: !2357)
!2377 = !DILocation(line: 75, column: 27, scope: !2357)
!2378 = !DILocation(line: 75, column: 29, scope: !2357)
!2379 = !DILocation(line: 75, column: 28, scope: !2357)
!2380 = !DILocation(line: 75, column: 31, scope: !2357)
!2381 = !DILocation(line: 75, column: 25, scope: !2357)
!2382 = !DILocation(line: 75, column: 59, scope: !2357)
!2383 = !DILocation(line: 75, column: 60, scope: !2357)
!2384 = !DILocation(line: 75, column: 54, scope: !2357)
!2385 = !DILocation(line: 75, column: 82, scope: !2357)
!2386 = !DILocation(line: 75, column: 77, scope: !2357)
!2387 = !DILocation(line: 75, column: 66, scope: !2357)
!2388 = !DILocation(line: 75, column: 64, scope: !2357)
!2389 = !DILocation(line: 75, column: 86, scope: !2357)
!2390 = !DILocation(line: 75, column: 91, scope: !2357)
!2391 = !DILocation(line: 75, column: 35, scope: !2357)
!2392 = !DILocation(line: 75, column: 24, scope: !2357)
!2393 = !DILocation(line: 75, column: 14, scope: !2357)
!2394 = !DILocation(line: 75, column: 16, scope: !2357)
!2395 = !DILocation(line: 75, column: 15, scope: !2357)
!2396 = !DILocation(line: 75, column: 18, scope: !2357)
!2397 = !DILocation(line: 75, column: 9, scope: !2357)
!2398 = !DILocation(line: 75, column: 22, scope: !2357)
!2399 = !DILocation(line: 76, column: 5, scope: !2357)
!2400 = !DILocation(line: 73, column: 26, scope: !2401)
!2401 = !DILexicalBlockFile(scope: !2352, file: !174, discriminator: 2)
!2402 = !DILocation(line: 73, column: 5, scope: !2401)
!2403 = distinct !{!2403, !2404}
!2404 = !DILocation(line: 73, column: 5, scope: !2295)
!2405 = !DILocation(line: 77, column: 20, scope: !2295)
!2406 = !DILocation(line: 77, column: 21, scope: !2295)
!2407 = !DILocation(line: 77, column: 18, scope: !2295)
!2408 = !DILocation(line: 77, column: 49, scope: !2295)
!2409 = !DILocation(line: 77, column: 51, scope: !2295)
!2410 = !DILocation(line: 77, column: 44, scope: !2295)
!2411 = !DILocation(line: 77, column: 73, scope: !2295)
!2412 = !DILocation(line: 77, column: 75, scope: !2295)
!2413 = !DILocation(line: 77, column: 68, scope: !2295)
!2414 = !DILocation(line: 77, column: 57, scope: !2295)
!2415 = !DILocation(line: 77, column: 55, scope: !2295)
!2416 = !DILocation(line: 77, column: 80, scope: !2295)
!2417 = !DILocation(line: 77, column: 85, scope: !2295)
!2418 = !DILocation(line: 77, column: 25, scope: !2295)
!2419 = !DILocation(line: 77, column: 17, scope: !2295)
!2420 = !DILocation(line: 77, column: 10, scope: !2295)
!2421 = !DILocation(line: 77, column: 11, scope: !2295)
!2422 = !DILocation(line: 77, column: 5, scope: !2295)
!2423 = !DILocation(line: 77, column: 15, scope: !2295)
!2424 = !DILocation(line: 79, column: 21, scope: !2295)
!2425 = !DILocation(line: 79, column: 24, scope: !2295)
!2426 = !DILocation(line: 79, column: 30, scope: !2295)
!2427 = !DILocation(line: 79, column: 35, scope: !2295)
!2428 = !DILocation(line: 79, column: 34, scope: !2295)
!2429 = !DILocation(line: 79, column: 39, scope: !2295)
!2430 = !DILocation(line: 79, column: 5, scope: !2295)
!2431 = !DILocation(line: 59, column: 12, scope: !2432, inlinedAt: !2301)
!2432 = distinct !DILexicalBlock(scope: !2297, file: !174, line: 59, column: 5)
!2433 = !DILocation(line: 59, column: 10, scope: !2432, inlinedAt: !2301)
!2434 = !DILocation(line: 59, column: 17, scope: !2435, inlinedAt: !2301)
!2435 = !DILexicalBlockFile(scope: !2436, file: !174, discriminator: 1)
!2436 = distinct !DILexicalBlock(scope: !2432, file: !174, line: 59, column: 5)
!2437 = !DILocation(line: 59, column: 21, scope: !2435, inlinedAt: !2301)
!2438 = !DILocation(line: 59, column: 19, scope: !2435, inlinedAt: !2301)
!2439 = !DILocation(line: 59, column: 5, scope: !2435, inlinedAt: !2301)
!2440 = !DILocation(line: 60, column: 33, scope: !2441, inlinedAt: !2301)
!2441 = distinct !DILexicalBlock(scope: !2436, file: !174, line: 59, column: 30)
!2442 = !DILocation(line: 60, column: 28, scope: !2441, inlinedAt: !2301)
!2443 = !DILocation(line: 60, column: 48, scope: !2441, inlinedAt: !2301)
!2444 = !DILocation(line: 60, column: 36, scope: !2441, inlinedAt: !2301)
!2445 = !DILocation(line: 60, column: 57, scope: !2441, inlinedAt: !2301)
!2446 = !DILocation(line: 60, column: 54, scope: !2441, inlinedAt: !2301)
!2447 = !DILocation(line: 60, column: 21, scope: !2441, inlinedAt: !2301)
!2448 = !DILocation(line: 60, column: 15, scope: !2441, inlinedAt: !2301)
!2449 = !DILocation(line: 60, column: 14, scope: !2441, inlinedAt: !2301)
!2450 = !DILocation(line: 60, column: 9, scope: !2441, inlinedAt: !2301)
!2451 = !DILocation(line: 60, column: 19, scope: !2441, inlinedAt: !2301)
!2452 = !DILocation(line: 61, column: 34, scope: !2441, inlinedAt: !2301)
!2453 = !DILocation(line: 61, column: 29, scope: !2441, inlinedAt: !2301)
!2454 = !DILocation(line: 61, column: 49, scope: !2441, inlinedAt: !2301)
!2455 = !DILocation(line: 61, column: 37, scope: !2441, inlinedAt: !2301)
!2456 = !DILocation(line: 61, column: 58, scope: !2441, inlinedAt: !2301)
!2457 = !DILocation(line: 61, column: 55, scope: !2441, inlinedAt: !2301)
!2458 = !DILocation(line: 61, column: 22, scope: !2441, inlinedAt: !2301)
!2459 = !DILocation(line: 61, column: 15, scope: !2441, inlinedAt: !2301)
!2460 = !DILocation(line: 61, column: 14, scope: !2441, inlinedAt: !2301)
!2461 = !DILocation(line: 61, column: 16, scope: !2441, inlinedAt: !2301)
!2462 = !DILocation(line: 61, column: 9, scope: !2441, inlinedAt: !2301)
!2463 = !DILocation(line: 61, column: 20, scope: !2441, inlinedAt: !2301)
!2464 = !DILocation(line: 59, column: 26, scope: !2465, inlinedAt: !2301)
!2465 = !DILexicalBlockFile(scope: !2436, file: !174, discriminator: 2)
!2466 = !DILocation(line: 59, column: 5, scope: !2465, inlinedAt: !2301)
!2467 = distinct !{!2467, !2468}
!2468 = !DILocation(line: 59, column: 5, scope: !2297)
!2469 = !DILocation(line: 80, column: 1, scope: !2295)
!2470 = distinct !DISubprogram(name: "spatial_compose_dd137i_dy_8bit", scope: !174, file: !174, line: 385, type: !1596, isLocal: true, isDefinition: true, scopeLine: 386, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!2471 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !2472)
!2472 = distinct !DILocation(line: 396, column: 24, scope: !2470)
!2473 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !2472)
!2474 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !2472)
!2475 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !2476)
!2476 = distinct !DILocation(line: 395, column: 24, scope: !2470)
!2477 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !2476)
!2478 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !2476)
!2479 = !DILocalVariable(name: "d", arg: 1, scope: !2470, file: !174, line: 385, type: !37)
!2480 = !DILocation(line: 385, column: 56, scope: !2470)
!2481 = !DILocalVariable(name: "level", arg: 2, scope: !2470, file: !174, line: 385, type: !18)
!2482 = !DILocation(line: 385, column: 63, scope: !2470)
!2483 = !DILocalVariable(name: "width", arg: 3, scope: !2470, file: !174, line: 385, type: !18)
!2484 = !DILocation(line: 385, column: 74, scope: !2470)
!2485 = !DILocalVariable(name: "height", arg: 4, scope: !2470, file: !174, line: 385, type: !18)
!2486 = !DILocation(line: 385, column: 85, scope: !2470)
!2487 = !DILocalVariable(name: "stride", arg: 5, scope: !2470, file: !174, line: 385, type: !18)
!2488 = !DILocation(line: 385, column: 97, scope: !2470)
!2489 = !DILocalVariable(name: "vertical_compose_l0", scope: !2470, file: !174, line: 387, type: !1626)
!2490 = !DILocation(line: 387, column: 27, scope: !2470)
!2491 = !DILocation(line: 387, column: 56, scope: !2470)
!2492 = !DILocation(line: 387, column: 59, scope: !2470)
!2493 = !DILocation(line: 387, column: 49, scope: !2470)
!2494 = !DILocalVariable(name: "vertical_compose_h0", scope: !2470, file: !174, line: 388, type: !1626)
!2495 = !DILocation(line: 388, column: 27, scope: !2470)
!2496 = !DILocation(line: 388, column: 56, scope: !2470)
!2497 = !DILocation(line: 388, column: 59, scope: !2470)
!2498 = !DILocation(line: 388, column: 49, scope: !2470)
!2499 = !DILocalVariable(name: "cs", scope: !2470, file: !174, line: 389, type: !903)
!2500 = !DILocation(line: 389, column: 17, scope: !2470)
!2501 = !DILocation(line: 389, column: 22, scope: !2470)
!2502 = !DILocation(line: 389, column: 25, scope: !2470)
!2503 = !DILocation(line: 389, column: 30, scope: !2470)
!2504 = !DILocation(line: 389, column: 28, scope: !2470)
!2505 = !DILocalVariable(name: "i", scope: !2470, file: !174, line: 391, type: !18)
!2506 = !DILocation(line: 391, column: 9, scope: !2470)
!2507 = !DILocalVariable(name: "y", scope: !2470, file: !174, line: 391, type: !18)
!2508 = !DILocation(line: 391, column: 12, scope: !2470)
!2509 = !DILocation(line: 391, column: 16, scope: !2470)
!2510 = !DILocation(line: 391, column: 20, scope: !2470)
!2511 = !DILocalVariable(name: "b", scope: !2470, file: !174, line: 392, type: !2512)
!2512 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 640, align: 64, elements: !2513)
!2513 = !{!2514}
!2514 = !DISubrange(count: 10)
!2515 = !DILocation(line: 392, column: 14, scope: !2470)
!2516 = !DILocation(line: 393, column: 12, scope: !2517)
!2517 = distinct !DILexicalBlock(scope: !2470, file: !174, line: 393, column: 5)
!2518 = !DILocation(line: 393, column: 10, scope: !2517)
!2519 = !DILocation(line: 393, column: 17, scope: !2520)
!2520 = !DILexicalBlockFile(scope: !2521, file: !174, discriminator: 1)
!2521 = distinct !DILexicalBlock(scope: !2517, file: !174, line: 393, column: 5)
!2522 = !DILocation(line: 393, column: 19, scope: !2520)
!2523 = !DILocation(line: 393, column: 5, scope: !2520)
!2524 = !DILocation(line: 394, column: 22, scope: !2521)
!2525 = !DILocation(line: 394, column: 16, scope: !2521)
!2526 = !DILocation(line: 394, column: 20, scope: !2521)
!2527 = !DILocation(line: 394, column: 11, scope: !2521)
!2528 = !DILocation(line: 394, column: 9, scope: !2521)
!2529 = !DILocation(line: 394, column: 14, scope: !2521)
!2530 = !DILocation(line: 393, column: 25, scope: !2531)
!2531 = !DILexicalBlockFile(scope: !2521, file: !174, discriminator: 2)
!2532 = !DILocation(line: 393, column: 5, scope: !2531)
!2533 = distinct !{!2533, !2534}
!2534 = !DILocation(line: 393, column: 5, scope: !2470)
!2535 = !DILocation(line: 395, column: 12, scope: !2470)
!2536 = !DILocation(line: 395, column: 15, scope: !2470)
!2537 = !DILocation(line: 395, column: 34, scope: !2470)
!2538 = !DILocation(line: 395, column: 35, scope: !2470)
!2539 = !DILocation(line: 395, column: 42, scope: !2470)
!2540 = !DILocation(line: 395, column: 48, scope: !2470)
!2541 = !DILocation(line: 395, column: 24, scope: !2470)
!2542 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !2476)
!2543 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !2476)
!2544 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !2476)
!2545 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !2476)
!2546 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !2476)
!2547 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !2476)
!2548 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !2476)
!2549 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !2476)
!2550 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !2476)
!2551 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !2476)
!2552 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !2476)
!2553 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !2476)
!2554 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !2476)
!2555 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !2476)
!2556 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !2476)
!2557 = !DILocation(line: 395, column: 52, scope: !2470)
!2558 = !DILocation(line: 395, column: 51, scope: !2470)
!2559 = !DILocation(line: 395, column: 22, scope: !2470)
!2560 = !DILocation(line: 395, column: 5, scope: !2470)
!2561 = !DILocation(line: 395, column: 10, scope: !2470)
!2562 = !DILocation(line: 396, column: 12, scope: !2470)
!2563 = !DILocation(line: 396, column: 15, scope: !2470)
!2564 = !DILocation(line: 396, column: 34, scope: !2470)
!2565 = !DILocation(line: 396, column: 35, scope: !2470)
!2566 = !DILocation(line: 396, column: 42, scope: !2470)
!2567 = !DILocation(line: 396, column: 48, scope: !2470)
!2568 = !DILocation(line: 396, column: 24, scope: !2470)
!2569 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !2472)
!2570 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !2472)
!2571 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !2472)
!2572 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !2472)
!2573 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !2472)
!2574 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !2472)
!2575 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !2472)
!2576 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !2472)
!2577 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !2472)
!2578 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !2472)
!2579 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !2472)
!2580 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !2472)
!2581 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !2472)
!2582 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !2472)
!2583 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !2472)
!2584 = !DILocation(line: 396, column: 52, scope: !2470)
!2585 = !DILocation(line: 396, column: 51, scope: !2470)
!2586 = !DILocation(line: 396, column: 22, scope: !2470)
!2587 = !DILocation(line: 396, column: 5, scope: !2470)
!2588 = !DILocation(line: 396, column: 10, scope: !2470)
!2589 = !DILocation(line: 398, column: 8, scope: !2590)
!2590 = distinct !DILexicalBlock(scope: !2470, file: !174, line: 398, column: 8)
!2591 = !DILocation(line: 398, column: 9, scope: !2590)
!2592 = !DILocation(line: 398, column: 22, scope: !2590)
!2593 = !DILocation(line: 398, column: 11, scope: !2590)
!2594 = !DILocation(line: 398, column: 8, scope: !2470)
!2595 = !DILocation(line: 398, column: 30, scope: !2596)
!2596 = !DILexicalBlockFile(scope: !2590, file: !174, discriminator: 1)
!2597 = !DILocation(line: 398, column: 50, scope: !2596)
!2598 = !DILocation(line: 398, column: 56, scope: !2596)
!2599 = !DILocation(line: 398, column: 62, scope: !2596)
!2600 = !DILocation(line: 398, column: 68, scope: !2596)
!2601 = !DILocation(line: 398, column: 74, scope: !2596)
!2602 = !DILocation(line: 398, column: 80, scope: !2596)
!2603 = !DILocation(line: 399, column: 8, scope: !2604)
!2604 = distinct !DILexicalBlock(scope: !2470, file: !174, line: 399, column: 8)
!2605 = !DILocation(line: 399, column: 9, scope: !2604)
!2606 = !DILocation(line: 399, column: 22, scope: !2604)
!2607 = !DILocation(line: 399, column: 11, scope: !2604)
!2608 = !DILocation(line: 399, column: 8, scope: !2470)
!2609 = !DILocation(line: 399, column: 30, scope: !2610)
!2610 = !DILexicalBlockFile(scope: !2604, file: !174, discriminator: 1)
!2611 = !DILocation(line: 399, column: 50, scope: !2610)
!2612 = !DILocation(line: 399, column: 56, scope: !2610)
!2613 = !DILocation(line: 399, column: 62, scope: !2610)
!2614 = !DILocation(line: 399, column: 68, scope: !2610)
!2615 = !DILocation(line: 399, column: 74, scope: !2610)
!2616 = !DILocation(line: 399, column: 80, scope: !2610)
!2617 = !DILocation(line: 401, column: 8, scope: !2618)
!2618 = distinct !DILexicalBlock(scope: !2470, file: !174, line: 401, column: 8)
!2619 = !DILocation(line: 401, column: 9, scope: !2618)
!2620 = !DILocation(line: 401, column: 22, scope: !2618)
!2621 = !DILocation(line: 401, column: 11, scope: !2618)
!2622 = !DILocation(line: 401, column: 8, scope: !2470)
!2623 = !DILocation(line: 401, column: 30, scope: !2624)
!2624 = !DILexicalBlockFile(scope: !2618, file: !174, discriminator: 1)
!2625 = !DILocation(line: 401, column: 33, scope: !2624)
!2626 = !DILocation(line: 401, column: 52, scope: !2624)
!2627 = !DILocation(line: 401, column: 58, scope: !2624)
!2628 = !DILocation(line: 401, column: 61, scope: !2624)
!2629 = !DILocation(line: 401, column: 67, scope: !2624)
!2630 = !DILocation(line: 402, column: 8, scope: !2631)
!2631 = distinct !DILexicalBlock(scope: !2470, file: !174, line: 402, column: 8)
!2632 = !DILocation(line: 402, column: 9, scope: !2631)
!2633 = !DILocation(line: 402, column: 22, scope: !2631)
!2634 = !DILocation(line: 402, column: 11, scope: !2631)
!2635 = !DILocation(line: 402, column: 8, scope: !2470)
!2636 = !DILocation(line: 402, column: 30, scope: !2637)
!2637 = !DILexicalBlockFile(scope: !2631, file: !174, discriminator: 1)
!2638 = !DILocation(line: 402, column: 33, scope: !2637)
!2639 = !DILocation(line: 402, column: 52, scope: !2637)
!2640 = !DILocation(line: 402, column: 58, scope: !2637)
!2641 = !DILocation(line: 402, column: 61, scope: !2637)
!2642 = !DILocation(line: 402, column: 67, scope: !2637)
!2643 = !DILocation(line: 404, column: 12, scope: !2644)
!2644 = distinct !DILexicalBlock(scope: !2470, file: !174, line: 404, column: 5)
!2645 = !DILocation(line: 404, column: 10, scope: !2644)
!2646 = !DILocation(line: 404, column: 17, scope: !2647)
!2647 = !DILexicalBlockFile(scope: !2648, file: !174, discriminator: 1)
!2648 = distinct !DILexicalBlock(scope: !2644, file: !174, line: 404, column: 5)
!2649 = !DILocation(line: 404, column: 19, scope: !2647)
!2650 = !DILocation(line: 404, column: 5, scope: !2647)
!2651 = !DILocation(line: 405, column: 22, scope: !2648)
!2652 = !DILocation(line: 405, column: 23, scope: !2648)
!2653 = !DILocation(line: 405, column: 20, scope: !2648)
!2654 = !DILocation(line: 405, column: 15, scope: !2648)
!2655 = !DILocation(line: 405, column: 9, scope: !2648)
!2656 = !DILocation(line: 405, column: 13, scope: !2648)
!2657 = !DILocation(line: 405, column: 18, scope: !2648)
!2658 = !DILocation(line: 404, column: 25, scope: !2659)
!2659 = !DILexicalBlockFile(scope: !2648, file: !174, discriminator: 2)
!2660 = !DILocation(line: 404, column: 5, scope: !2659)
!2661 = distinct !{!2661, !2662}
!2662 = !DILocation(line: 404, column: 5, scope: !2470)
!2663 = !DILocation(line: 406, column: 5, scope: !2470)
!2664 = !DILocation(line: 406, column: 9, scope: !2470)
!2665 = !DILocation(line: 406, column: 11, scope: !2470)
!2666 = !DILocation(line: 407, column: 1, scope: !2470)
!2667 = distinct !DISubprogram(name: "vertical_compose_dd137iL0_8bit", scope: !174, file: !174, line: 230, type: !1628, isLocal: true, isDefinition: true, scopeLine: 232, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!2668 = !DILocalVariable(name: "_b0", arg: 1, scope: !2667, file: !174, line: 230, type: !20)
!2669 = !DILocation(line: 230, column: 53, scope: !2667)
!2670 = !DILocalVariable(name: "_b1", arg: 2, scope: !2667, file: !174, line: 230, type: !20)
!2671 = !DILocation(line: 230, column: 67, scope: !2667)
!2672 = !DILocalVariable(name: "_b2", arg: 3, scope: !2667, file: !174, line: 230, type: !20)
!2673 = !DILocation(line: 230, column: 81, scope: !2667)
!2674 = !DILocalVariable(name: "_b3", arg: 4, scope: !2667, file: !174, line: 231, type: !20)
!2675 = !DILocation(line: 231, column: 56, scope: !2667)
!2676 = !DILocalVariable(name: "_b4", arg: 5, scope: !2667, file: !174, line: 231, type: !20)
!2677 = !DILocation(line: 231, column: 70, scope: !2667)
!2678 = !DILocalVariable(name: "width", arg: 6, scope: !2667, file: !174, line: 231, type: !18)
!2679 = !DILocation(line: 231, column: 79, scope: !2667)
!2680 = !DILocalVariable(name: "i", scope: !2667, file: !174, line: 233, type: !18)
!2681 = !DILocation(line: 233, column: 9, scope: !2667)
!2682 = !DILocalVariable(name: "b0", scope: !2667, file: !174, line: 234, type: !24)
!2683 = !DILocation(line: 234, column: 14, scope: !2667)
!2684 = !DILocation(line: 234, column: 30, scope: !2667)
!2685 = !DILocation(line: 234, column: 19, scope: !2667)
!2686 = !DILocalVariable(name: "b1", scope: !2667, file: !174, line: 235, type: !24)
!2687 = !DILocation(line: 235, column: 14, scope: !2667)
!2688 = !DILocation(line: 235, column: 30, scope: !2667)
!2689 = !DILocation(line: 235, column: 19, scope: !2667)
!2690 = !DILocalVariable(name: "b2", scope: !2667, file: !174, line: 236, type: !24)
!2691 = !DILocation(line: 236, column: 14, scope: !2667)
!2692 = !DILocation(line: 236, column: 30, scope: !2667)
!2693 = !DILocation(line: 236, column: 19, scope: !2667)
!2694 = !DILocalVariable(name: "b3", scope: !2667, file: !174, line: 237, type: !24)
!2695 = !DILocation(line: 237, column: 14, scope: !2667)
!2696 = !DILocation(line: 237, column: 30, scope: !2667)
!2697 = !DILocation(line: 237, column: 19, scope: !2667)
!2698 = !DILocalVariable(name: "b4", scope: !2667, file: !174, line: 238, type: !24)
!2699 = !DILocation(line: 238, column: 14, scope: !2667)
!2700 = !DILocation(line: 238, column: 30, scope: !2667)
!2701 = !DILocation(line: 238, column: 19, scope: !2667)
!2702 = !DILocation(line: 239, column: 10, scope: !2703)
!2703 = distinct !DILexicalBlock(scope: !2667, file: !174, line: 239, column: 5)
!2704 = !DILocation(line: 239, column: 9, scope: !2703)
!2705 = !DILocation(line: 239, column: 14, scope: !2706)
!2706 = !DILexicalBlockFile(scope: !2707, file: !174, discriminator: 1)
!2707 = distinct !DILexicalBlock(scope: !2703, file: !174, line: 239, column: 5)
!2708 = !DILocation(line: 239, column: 16, scope: !2706)
!2709 = !DILocation(line: 239, column: 15, scope: !2706)
!2710 = !DILocation(line: 239, column: 5, scope: !2706)
!2711 = !DILocation(line: 240, column: 38, scope: !2712)
!2712 = distinct !DILexicalBlock(scope: !2707, file: !174, line: 239, column: 27)
!2713 = !DILocation(line: 240, column: 35, scope: !2712)
!2714 = !DILocation(line: 240, column: 24, scope: !2712)
!2715 = !DILocation(line: 240, column: 57, scope: !2712)
!2716 = !DILocation(line: 240, column: 54, scope: !2712)
!2717 = !DILocation(line: 240, column: 53, scope: !2712)
!2718 = !DILocation(line: 240, column: 68, scope: !2712)
!2719 = !DILocation(line: 240, column: 65, scope: !2712)
!2720 = !DILocation(line: 240, column: 64, scope: !2712)
!2721 = !DILocation(line: 240, column: 60, scope: !2712)
!2722 = !DILocation(line: 240, column: 76, scope: !2712)
!2723 = !DILocation(line: 240, column: 73, scope: !2712)
!2724 = !DILocation(line: 240, column: 71, scope: !2712)
!2725 = !DILocation(line: 240, column: 84, scope: !2712)
!2726 = !DILocation(line: 240, column: 81, scope: !2712)
!2727 = !DILocation(line: 240, column: 79, scope: !2712)
!2728 = !DILocation(line: 240, column: 87, scope: !2712)
!2729 = !DILocation(line: 240, column: 93, scope: !2712)
!2730 = !DILocation(line: 240, column: 42, scope: !2712)
!2731 = !DILocation(line: 240, column: 17, scope: !2712)
!2732 = !DILocation(line: 240, column: 12, scope: !2712)
!2733 = !DILocation(line: 240, column: 9, scope: !2712)
!2734 = !DILocation(line: 240, column: 15, scope: !2712)
!2735 = !DILocation(line: 241, column: 5, scope: !2712)
!2736 = !DILocation(line: 239, column: 24, scope: !2737)
!2737 = !DILexicalBlockFile(scope: !2707, file: !174, discriminator: 2)
!2738 = !DILocation(line: 239, column: 5, scope: !2737)
!2739 = distinct !{!2739, !2740}
!2740 = !DILocation(line: 239, column: 5, scope: !2667)
!2741 = !DILocation(line: 242, column: 1, scope: !2667)
!2742 = distinct !DISubprogram(name: "horizontal_compose_dd137i_8bit", scope: !174, file: !174, line: 103, type: !63, isLocal: true, isDefinition: true, scopeLine: 104, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!2743 = !DILocalVariable(name: "_b", arg: 1, scope: !2742, file: !174, line: 103, type: !20)
!2744 = !DILocation(line: 103, column: 53, scope: !2742)
!2745 = !DILocalVariable(name: "_tmp", arg: 2, scope: !2742, file: !174, line: 103, type: !20)
!2746 = !DILocation(line: 103, column: 66, scope: !2742)
!2747 = !DILocalVariable(name: "w", arg: 3, scope: !2742, file: !174, line: 103, type: !18)
!2748 = !DILocation(line: 103, column: 76, scope: !2742)
!2749 = !DILocalVariable(name: "w2", scope: !2742, file: !174, line: 105, type: !1931)
!2750 = !DILocation(line: 105, column: 15, scope: !2742)
!2751 = !DILocation(line: 105, column: 20, scope: !2742)
!2752 = !DILocation(line: 105, column: 22, scope: !2742)
!2753 = !DILocalVariable(name: "x", scope: !2742, file: !174, line: 106, type: !18)
!2754 = !DILocation(line: 106, column: 9, scope: !2742)
!2755 = !DILocalVariable(name: "b", scope: !2742, file: !174, line: 107, type: !24)
!2756 = !DILocation(line: 107, column: 14, scope: !2742)
!2757 = !DILocation(line: 107, column: 29, scope: !2742)
!2758 = !DILocation(line: 107, column: 18, scope: !2742)
!2759 = !DILocalVariable(name: "tmp", scope: !2742, file: !174, line: 108, type: !24)
!2760 = !DILocation(line: 108, column: 14, scope: !2742)
!2761 = !DILocation(line: 108, column: 31, scope: !2742)
!2762 = !DILocation(line: 108, column: 20, scope: !2742)
!2763 = !DILocation(line: 110, column: 32, scope: !2742)
!2764 = !DILocation(line: 110, column: 21, scope: !2742)
!2765 = !DILocation(line: 110, column: 52, scope: !2742)
!2766 = !DILocation(line: 110, column: 50, scope: !2742)
!2767 = !DILocation(line: 110, column: 49, scope: !2742)
!2768 = !DILocation(line: 110, column: 63, scope: !2742)
!2769 = !DILocation(line: 110, column: 61, scope: !2742)
!2770 = !DILocation(line: 110, column: 60, scope: !2742)
!2771 = !DILocation(line: 110, column: 56, scope: !2742)
!2772 = !DILocation(line: 110, column: 72, scope: !2742)
!2773 = !DILocation(line: 110, column: 74, scope: !2742)
!2774 = !DILocation(line: 110, column: 70, scope: !2742)
!2775 = !DILocation(line: 110, column: 68, scope: !2742)
!2776 = !DILocation(line: 110, column: 82, scope: !2742)
!2777 = !DILocation(line: 110, column: 80, scope: !2742)
!2778 = !DILocation(line: 110, column: 78, scope: !2742)
!2779 = !DILocation(line: 110, column: 86, scope: !2742)
!2780 = !DILocation(line: 110, column: 92, scope: !2742)
!2781 = !DILocation(line: 110, column: 38, scope: !2742)
!2782 = !DILocation(line: 110, column: 14, scope: !2742)
!2783 = !DILocation(line: 110, column: 5, scope: !2742)
!2784 = !DILocation(line: 110, column: 12, scope: !2742)
!2785 = !DILocation(line: 111, column: 32, scope: !2742)
!2786 = !DILocation(line: 111, column: 21, scope: !2742)
!2787 = !DILocation(line: 111, column: 52, scope: !2742)
!2788 = !DILocation(line: 111, column: 50, scope: !2742)
!2789 = !DILocation(line: 111, column: 49, scope: !2742)
!2790 = !DILocation(line: 111, column: 63, scope: !2742)
!2791 = !DILocation(line: 111, column: 65, scope: !2742)
!2792 = !DILocation(line: 111, column: 61, scope: !2742)
!2793 = !DILocation(line: 111, column: 60, scope: !2742)
!2794 = !DILocation(line: 111, column: 56, scope: !2742)
!2795 = !DILocation(line: 111, column: 73, scope: !2742)
!2796 = !DILocation(line: 111, column: 75, scope: !2742)
!2797 = !DILocation(line: 111, column: 71, scope: !2742)
!2798 = !DILocation(line: 111, column: 69, scope: !2742)
!2799 = !DILocation(line: 111, column: 83, scope: !2742)
!2800 = !DILocation(line: 111, column: 81, scope: !2742)
!2801 = !DILocation(line: 111, column: 79, scope: !2742)
!2802 = !DILocation(line: 111, column: 87, scope: !2742)
!2803 = !DILocation(line: 111, column: 93, scope: !2742)
!2804 = !DILocation(line: 111, column: 38, scope: !2742)
!2805 = !DILocation(line: 111, column: 14, scope: !2742)
!2806 = !DILocation(line: 111, column: 5, scope: !2742)
!2807 = !DILocation(line: 111, column: 12, scope: !2742)
!2808 = !DILocation(line: 112, column: 12, scope: !2809)
!2809 = distinct !DILexicalBlock(scope: !2742, file: !174, line: 112, column: 5)
!2810 = !DILocation(line: 112, column: 10, scope: !2809)
!2811 = !DILocation(line: 112, column: 17, scope: !2812)
!2812 = !DILexicalBlockFile(scope: !2813, file: !174, discriminator: 1)
!2813 = distinct !DILexicalBlock(scope: !2809, file: !174, line: 112, column: 5)
!2814 = !DILocation(line: 112, column: 21, scope: !2812)
!2815 = !DILocation(line: 112, column: 23, scope: !2812)
!2816 = !DILocation(line: 112, column: 19, scope: !2812)
!2817 = !DILocation(line: 112, column: 5, scope: !2812)
!2818 = !DILocation(line: 113, column: 38, scope: !2813)
!2819 = !DILocation(line: 113, column: 36, scope: !2813)
!2820 = !DILocation(line: 113, column: 25, scope: !2813)
!2821 = !DILocation(line: 113, column: 56, scope: !2813)
!2822 = !DILocation(line: 113, column: 58, scope: !2813)
!2823 = !DILocation(line: 113, column: 57, scope: !2813)
!2824 = !DILocation(line: 113, column: 60, scope: !2813)
!2825 = !DILocation(line: 113, column: 54, scope: !2813)
!2826 = !DILocation(line: 113, column: 53, scope: !2813)
!2827 = !DILocation(line: 113, column: 71, scope: !2813)
!2828 = !DILocation(line: 113, column: 73, scope: !2813)
!2829 = !DILocation(line: 113, column: 72, scope: !2813)
!2830 = !DILocation(line: 113, column: 69, scope: !2813)
!2831 = !DILocation(line: 113, column: 68, scope: !2813)
!2832 = !DILocation(line: 113, column: 64, scope: !2813)
!2833 = !DILocation(line: 113, column: 81, scope: !2813)
!2834 = !DILocation(line: 113, column: 83, scope: !2813)
!2835 = !DILocation(line: 113, column: 82, scope: !2813)
!2836 = !DILocation(line: 113, column: 85, scope: !2813)
!2837 = !DILocation(line: 113, column: 79, scope: !2813)
!2838 = !DILocation(line: 113, column: 77, scope: !2813)
!2839 = !DILocation(line: 113, column: 93, scope: !2813)
!2840 = !DILocation(line: 113, column: 95, scope: !2813)
!2841 = !DILocation(line: 113, column: 94, scope: !2813)
!2842 = !DILocation(line: 113, column: 97, scope: !2813)
!2843 = !DILocation(line: 113, column: 91, scope: !2813)
!2844 = !DILocation(line: 113, column: 89, scope: !2813)
!2845 = !DILocation(line: 113, column: 101, scope: !2813)
!2846 = !DILocation(line: 113, column: 107, scope: !2813)
!2847 = !DILocation(line: 113, column: 42, scope: !2813)
!2848 = !DILocation(line: 113, column: 18, scope: !2813)
!2849 = !DILocation(line: 113, column: 13, scope: !2813)
!2850 = !DILocation(line: 113, column: 9, scope: !2813)
!2851 = !DILocation(line: 113, column: 16, scope: !2813)
!2852 = !DILocation(line: 112, column: 28, scope: !2853)
!2853 = !DILexicalBlockFile(scope: !2813, file: !174, discriminator: 2)
!2854 = !DILocation(line: 112, column: 5, scope: !2853)
!2855 = distinct !{!2855, !2856}
!2856 = !DILocation(line: 112, column: 5, scope: !2742)
!2857 = !DILocation(line: 114, column: 37, scope: !2742)
!2858 = !DILocation(line: 114, column: 39, scope: !2742)
!2859 = !DILocation(line: 114, column: 35, scope: !2742)
!2860 = !DILocation(line: 114, column: 24, scope: !2742)
!2861 = !DILocation(line: 114, column: 58, scope: !2742)
!2862 = !DILocation(line: 114, column: 59, scope: !2742)
!2863 = !DILocation(line: 114, column: 56, scope: !2742)
!2864 = !DILocation(line: 114, column: 55, scope: !2742)
!2865 = !DILocation(line: 114, column: 70, scope: !2742)
!2866 = !DILocation(line: 114, column: 71, scope: !2742)
!2867 = !DILocation(line: 114, column: 68, scope: !2742)
!2868 = !DILocation(line: 114, column: 67, scope: !2742)
!2869 = !DILocation(line: 114, column: 63, scope: !2742)
!2870 = !DILocation(line: 114, column: 79, scope: !2742)
!2871 = !DILocation(line: 114, column: 80, scope: !2742)
!2872 = !DILocation(line: 114, column: 77, scope: !2742)
!2873 = !DILocation(line: 114, column: 75, scope: !2742)
!2874 = !DILocation(line: 114, column: 88, scope: !2742)
!2875 = !DILocation(line: 114, column: 89, scope: !2742)
!2876 = !DILocation(line: 114, column: 86, scope: !2742)
!2877 = !DILocation(line: 114, column: 84, scope: !2742)
!2878 = !DILocation(line: 114, column: 93, scope: !2742)
!2879 = !DILocation(line: 114, column: 99, scope: !2742)
!2880 = !DILocation(line: 114, column: 44, scope: !2742)
!2881 = !DILocation(line: 114, column: 17, scope: !2742)
!2882 = !DILocation(line: 114, column: 9, scope: !2742)
!2883 = !DILocation(line: 114, column: 11, scope: !2742)
!2884 = !DILocation(line: 114, column: 5, scope: !2742)
!2885 = !DILocation(line: 114, column: 15, scope: !2742)
!2886 = !DILocation(line: 117, column: 15, scope: !2742)
!2887 = !DILocation(line: 117, column: 5, scope: !2742)
!2888 = !DILocation(line: 117, column: 13, scope: !2742)
!2889 = !DILocation(line: 118, column: 31, scope: !2742)
!2890 = !DILocation(line: 118, column: 33, scope: !2742)
!2891 = !DILocation(line: 118, column: 27, scope: !2742)
!2892 = !DILocation(line: 118, column: 21, scope: !2742)
!2893 = !DILocation(line: 118, column: 17, scope: !2742)
!2894 = !DILocation(line: 118, column: 25, scope: !2742)
!2895 = !DILocation(line: 118, column: 9, scope: !2742)
!2896 = !DILocation(line: 118, column: 11, scope: !2742)
!2897 = !DILocation(line: 118, column: 5, scope: !2742)
!2898 = !DILocation(line: 118, column: 15, scope: !2742)
!2899 = !DILocation(line: 120, column: 12, scope: !2900)
!2900 = distinct !DILexicalBlock(scope: !2742, file: !174, line: 120, column: 5)
!2901 = !DILocation(line: 120, column: 10, scope: !2900)
!2902 = !DILocation(line: 120, column: 17, scope: !2903)
!2903 = !DILexicalBlockFile(scope: !2904, file: !174, discriminator: 1)
!2904 = distinct !DILexicalBlock(scope: !2900, file: !174, line: 120, column: 5)
!2905 = !DILocation(line: 120, column: 21, scope: !2903)
!2906 = !DILocation(line: 120, column: 19, scope: !2903)
!2907 = !DILocation(line: 120, column: 5, scope: !2903)
!2908 = !DILocation(line: 121, column: 30, scope: !2909)
!2909 = distinct !DILexicalBlock(scope: !2904, file: !174, line: 120, column: 30)
!2910 = !DILocation(line: 121, column: 26, scope: !2909)
!2911 = !DILocation(line: 121, column: 33, scope: !2909)
!2912 = !DILocation(line: 121, column: 39, scope: !2909)
!2913 = !DILocation(line: 121, column: 19, scope: !2909)
!2914 = !DILocation(line: 121, column: 13, scope: !2909)
!2915 = !DILocation(line: 121, column: 12, scope: !2909)
!2916 = !DILocation(line: 121, column: 9, scope: !2909)
!2917 = !DILocation(line: 121, column: 17, scope: !2909)
!2918 = !DILocation(line: 122, column: 47, scope: !2909)
!2919 = !DILocation(line: 122, column: 49, scope: !2909)
!2920 = !DILocation(line: 122, column: 48, scope: !2909)
!2921 = !DILocation(line: 122, column: 45, scope: !2909)
!2922 = !DILocation(line: 122, column: 34, scope: !2909)
!2923 = !DILocation(line: 122, column: 70, scope: !2909)
!2924 = !DILocation(line: 122, column: 66, scope: !2909)
!2925 = !DILocation(line: 122, column: 65, scope: !2909)
!2926 = !DILocation(line: 122, column: 82, scope: !2909)
!2927 = !DILocation(line: 122, column: 83, scope: !2909)
!2928 = !DILocation(line: 122, column: 78, scope: !2909)
!2929 = !DILocation(line: 122, column: 77, scope: !2909)
!2930 = !DILocation(line: 122, column: 73, scope: !2909)
!2931 = !DILocation(line: 122, column: 93, scope: !2909)
!2932 = !DILocation(line: 122, column: 94, scope: !2909)
!2933 = !DILocation(line: 122, column: 89, scope: !2909)
!2934 = !DILocation(line: 122, column: 87, scope: !2909)
!2935 = !DILocation(line: 122, column: 104, scope: !2909)
!2936 = !DILocation(line: 122, column: 105, scope: !2909)
!2937 = !DILocation(line: 122, column: 100, scope: !2909)
!2938 = !DILocation(line: 122, column: 98, scope: !2909)
!2939 = !DILocation(line: 122, column: 109, scope: !2909)
!2940 = !DILocation(line: 122, column: 114, scope: !2909)
!2941 = !DILocation(line: 122, column: 54, scope: !2909)
!2942 = !DILocation(line: 122, column: 122, scope: !2909)
!2943 = !DILocation(line: 122, column: 128, scope: !2909)
!2944 = !DILocation(line: 122, column: 20, scope: !2909)
!2945 = !DILocation(line: 122, column: 13, scope: !2909)
!2946 = !DILocation(line: 122, column: 12, scope: !2909)
!2947 = !DILocation(line: 122, column: 14, scope: !2909)
!2948 = !DILocation(line: 122, column: 9, scope: !2909)
!2949 = !DILocation(line: 122, column: 18, scope: !2909)
!2950 = !DILocation(line: 123, column: 5, scope: !2909)
!2951 = !DILocation(line: 120, column: 26, scope: !2952)
!2952 = !DILexicalBlockFile(scope: !2904, file: !174, discriminator: 2)
!2953 = !DILocation(line: 120, column: 5, scope: !2952)
!2954 = distinct !{!2954, !2955}
!2955 = !DILocation(line: 120, column: 5, scope: !2742)
!2956 = !DILocation(line: 124, column: 1, scope: !2742)
!2957 = distinct !DISubprogram(name: "spatial_compose_haari_dy_8bit", scope: !174, file: !174, line: 410, type: !1596, isLocal: true, isDefinition: true, scopeLine: 411, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!2958 = !DILocalVariable(name: "d", arg: 1, scope: !2957, file: !174, line: 410, type: !37)
!2959 = !DILocation(line: 410, column: 55, scope: !2957)
!2960 = !DILocalVariable(name: "level", arg: 2, scope: !2957, file: !174, line: 410, type: !18)
!2961 = !DILocation(line: 410, column: 62, scope: !2957)
!2962 = !DILocalVariable(name: "width", arg: 3, scope: !2957, file: !174, line: 410, type: !18)
!2963 = !DILocation(line: 410, column: 73, scope: !2957)
!2964 = !DILocalVariable(name: "height", arg: 4, scope: !2957, file: !174, line: 410, type: !18)
!2965 = !DILocation(line: 410, column: 84, scope: !2957)
!2966 = !DILocalVariable(name: "stride", arg: 5, scope: !2957, file: !174, line: 410, type: !18)
!2967 = !DILocation(line: 410, column: 96, scope: !2957)
!2968 = !DILocalVariable(name: "vertical_compose", scope: !2957, file: !174, line: 412, type: !2969)
!2969 = !DIDerivedType(tag: DW_TAG_typedef, name: "vertical_compose_2tap", file: !4, line: 49, baseType: !62)
!2970 = !DILocation(line: 412, column: 27, scope: !2957)
!2971 = !DILocation(line: 412, column: 53, scope: !2957)
!2972 = !DILocation(line: 412, column: 56, scope: !2957)
!2973 = !DILocation(line: 412, column: 46, scope: !2957)
!2974 = !DILocalVariable(name: "y", scope: !2957, file: !174, line: 413, type: !18)
!2975 = !DILocation(line: 413, column: 9, scope: !2957)
!2976 = !DILocation(line: 413, column: 19, scope: !2957)
!2977 = !DILocation(line: 413, column: 13, scope: !2957)
!2978 = !DILocation(line: 413, column: 16, scope: !2957)
!2979 = !DILocation(line: 413, column: 26, scope: !2957)
!2980 = !DILocalVariable(name: "b0", scope: !2957, file: !174, line: 414, type: !20)
!2981 = !DILocation(line: 414, column: 14, scope: !2957)
!2982 = !DILocation(line: 414, column: 19, scope: !2957)
!2983 = !DILocation(line: 414, column: 22, scope: !2957)
!2984 = !DILocation(line: 414, column: 32, scope: !2957)
!2985 = !DILocation(line: 414, column: 33, scope: !2957)
!2986 = !DILocation(line: 414, column: 37, scope: !2957)
!2987 = !DILocation(line: 414, column: 36, scope: !2957)
!2988 = !DILocation(line: 414, column: 29, scope: !2957)
!2989 = !DILocalVariable(name: "b1", scope: !2957, file: !174, line: 415, type: !20)
!2990 = !DILocation(line: 415, column: 14, scope: !2957)
!2991 = !DILocation(line: 415, column: 19, scope: !2957)
!2992 = !DILocation(line: 415, column: 22, scope: !2957)
!2993 = !DILocation(line: 415, column: 32, scope: !2957)
!2994 = !DILocation(line: 415, column: 36, scope: !2957)
!2995 = !DILocation(line: 415, column: 35, scope: !2957)
!2996 = !DILocation(line: 415, column: 29, scope: !2957)
!2997 = !DILocation(line: 417, column: 5, scope: !2957)
!2998 = !DILocation(line: 417, column: 22, scope: !2957)
!2999 = !DILocation(line: 417, column: 26, scope: !2957)
!3000 = !DILocation(line: 417, column: 30, scope: !2957)
!3001 = !DILocation(line: 418, column: 5, scope: !2957)
!3002 = !DILocation(line: 418, column: 8, scope: !2957)
!3003 = !DILocation(line: 418, column: 27, scope: !2957)
!3004 = !DILocation(line: 418, column: 31, scope: !2957)
!3005 = !DILocation(line: 418, column: 34, scope: !2957)
!3006 = !DILocation(line: 418, column: 40, scope: !2957)
!3007 = !DILocation(line: 419, column: 5, scope: !2957)
!3008 = !DILocation(line: 419, column: 8, scope: !2957)
!3009 = !DILocation(line: 419, column: 27, scope: !2957)
!3010 = !DILocation(line: 419, column: 31, scope: !2957)
!3011 = !DILocation(line: 419, column: 34, scope: !2957)
!3012 = !DILocation(line: 419, column: 40, scope: !2957)
!3013 = !DILocation(line: 421, column: 11, scope: !2957)
!3014 = !DILocation(line: 421, column: 5, scope: !2957)
!3015 = !DILocation(line: 421, column: 8, scope: !2957)
!3016 = !DILocation(line: 421, column: 18, scope: !2957)
!3017 = !DILocation(line: 421, column: 20, scope: !2957)
!3018 = !DILocation(line: 422, column: 1, scope: !2957)
!3019 = distinct !DISubprogram(name: "vertical_compose_haar_8bit", scope: !174, file: !174, line: 244, type: !63, isLocal: true, isDefinition: true, scopeLine: 245, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!3020 = !DILocalVariable(name: "_b0", arg: 1, scope: !3019, file: !174, line: 244, type: !20)
!3021 = !DILocation(line: 244, column: 49, scope: !3019)
!3022 = !DILocalVariable(name: "_b1", arg: 2, scope: !3019, file: !174, line: 244, type: !20)
!3023 = !DILocation(line: 244, column: 63, scope: !3019)
!3024 = !DILocalVariable(name: "width", arg: 3, scope: !3019, file: !174, line: 244, type: !18)
!3025 = !DILocation(line: 244, column: 72, scope: !3019)
!3026 = !DILocalVariable(name: "i", scope: !3019, file: !174, line: 246, type: !18)
!3027 = !DILocation(line: 246, column: 9, scope: !3019)
!3028 = !DILocalVariable(name: "b0", scope: !3019, file: !174, line: 247, type: !24)
!3029 = !DILocation(line: 247, column: 14, scope: !3019)
!3030 = !DILocation(line: 247, column: 30, scope: !3019)
!3031 = !DILocation(line: 247, column: 19, scope: !3019)
!3032 = !DILocalVariable(name: "b1", scope: !3019, file: !174, line: 248, type: !24)
!3033 = !DILocation(line: 248, column: 14, scope: !3019)
!3034 = !DILocation(line: 248, column: 30, scope: !3019)
!3035 = !DILocation(line: 248, column: 19, scope: !3019)
!3036 = !DILocation(line: 250, column: 12, scope: !3037)
!3037 = distinct !DILexicalBlock(scope: !3019, file: !174, line: 250, column: 5)
!3038 = !DILocation(line: 250, column: 10, scope: !3037)
!3039 = !DILocation(line: 250, column: 17, scope: !3040)
!3040 = !DILexicalBlockFile(scope: !3041, file: !174, discriminator: 1)
!3041 = distinct !DILexicalBlock(scope: !3037, file: !174, line: 250, column: 5)
!3042 = !DILocation(line: 250, column: 21, scope: !3040)
!3043 = !DILocation(line: 250, column: 19, scope: !3040)
!3044 = !DILocation(line: 250, column: 5, scope: !3040)
!3045 = !DILocation(line: 251, column: 27, scope: !3046)
!3046 = distinct !DILexicalBlock(scope: !3041, file: !174, line: 250, column: 33)
!3047 = !DILocation(line: 251, column: 24, scope: !3046)
!3048 = !DILocation(line: 251, column: 52, scope: !3046)
!3049 = !DILocation(line: 251, column: 49, scope: !3046)
!3050 = !DILocation(line: 251, column: 55, scope: !3046)
!3051 = !DILocation(line: 251, column: 61, scope: !3046)
!3052 = !DILocation(line: 251, column: 30, scope: !3046)
!3053 = !DILocation(line: 251, column: 17, scope: !3046)
!3054 = !DILocation(line: 251, column: 12, scope: !3046)
!3055 = !DILocation(line: 251, column: 9, scope: !3046)
!3056 = !DILocation(line: 251, column: 15, scope: !3046)
!3057 = !DILocation(line: 252, column: 27, scope: !3046)
!3058 = !DILocation(line: 252, column: 24, scope: !3046)
!3059 = !DILocation(line: 252, column: 46, scope: !3046)
!3060 = !DILocation(line: 252, column: 43, scope: !3046)
!3061 = !DILocation(line: 252, column: 32, scope: !3046)
!3062 = !DILocation(line: 252, column: 30, scope: !3046)
!3063 = !DILocation(line: 252, column: 17, scope: !3046)
!3064 = !DILocation(line: 252, column: 12, scope: !3046)
!3065 = !DILocation(line: 252, column: 9, scope: !3046)
!3066 = !DILocation(line: 252, column: 15, scope: !3046)
!3067 = !DILocation(line: 253, column: 5, scope: !3046)
!3068 = !DILocation(line: 250, column: 29, scope: !3069)
!3069 = !DILexicalBlockFile(scope: !3041, file: !174, discriminator: 2)
!3070 = !DILocation(line: 250, column: 5, scope: !3069)
!3071 = distinct !{!3071, !3072}
!3072 = !DILocation(line: 250, column: 5, scope: !3019)
!3073 = !DILocation(line: 254, column: 1, scope: !3019)
!3074 = distinct !DISubprogram(name: "horizontal_compose_haar0i_8bit", scope: !174, file: !174, line: 140, type: !63, isLocal: true, isDefinition: true, scopeLine: 141, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!3075 = !DILocation(line: 55, column: 76, scope: !2297, inlinedAt: !3076)
!3076 = distinct !DILocation(line: 137, column: 5, scope: !3077, inlinedAt: !3080)
!3077 = distinct !DISubprogram(name: "horizontal_compose_haari_8bit", scope: !174, file: !174, line: 126, type: !3078, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!3078 = !DISubroutineType(types: !3079)
!3079 = !{null, !24, !24, !18, !18}
!3080 = distinct !DILocation(line: 144, column: 5, scope: !3074)
!3081 = !DILocation(line: 55, column: 90, scope: !2297, inlinedAt: !3076)
!3082 = !DILocation(line: 55, column: 105, scope: !2297, inlinedAt: !3076)
!3083 = !DILocation(line: 55, column: 115, scope: !2297, inlinedAt: !3076)
!3084 = !DILocation(line: 56, column: 53, scope: !2297, inlinedAt: !3076)
!3085 = !DILocation(line: 56, column: 62, scope: !2297, inlinedAt: !3076)
!3086 = !DILocation(line: 58, column: 9, scope: !2297, inlinedAt: !3076)
!3087 = !DILocalVariable(name: "b", arg: 1, scope: !3077, file: !174, line: 126, type: !24)
!3088 = !DILocation(line: 126, column: 90, scope: !3077, inlinedAt: !3080)
!3089 = !DILocalVariable(name: "temp", arg: 2, scope: !3077, file: !174, line: 126, type: !24)
!3090 = !DILocation(line: 126, column: 102, scope: !3077, inlinedAt: !3080)
!3091 = !DILocalVariable(name: "w", arg: 3, scope: !3077, file: !174, line: 127, type: !18)
!3092 = !DILocation(line: 127, column: 67, scope: !3077, inlinedAt: !3080)
!3093 = !DILocalVariable(name: "shift", arg: 4, scope: !3077, file: !174, line: 127, type: !18)
!3094 = !DILocation(line: 127, column: 74, scope: !3077, inlinedAt: !3080)
!3095 = !DILocalVariable(name: "w2", scope: !3077, file: !174, line: 129, type: !1931)
!3096 = !DILocation(line: 129, column: 15, scope: !3077, inlinedAt: !3080)
!3097 = !DILocalVariable(name: "x", scope: !3077, file: !174, line: 130, type: !18)
!3098 = !DILocation(line: 130, column: 9, scope: !3077, inlinedAt: !3080)
!3099 = !DILocalVariable(name: "_b", arg: 1, scope: !3074, file: !174, line: 140, type: !20)
!3100 = !DILocation(line: 140, column: 53, scope: !3074)
!3101 = !DILocalVariable(name: "_temp", arg: 2, scope: !3074, file: !174, line: 140, type: !20)
!3102 = !DILocation(line: 140, column: 66, scope: !3074)
!3103 = !DILocalVariable(name: "w", arg: 3, scope: !3074, file: !174, line: 140, type: !18)
!3104 = !DILocation(line: 140, column: 77, scope: !3074)
!3105 = !DILocalVariable(name: "b", scope: !3074, file: !174, line: 142, type: !24)
!3106 = !DILocation(line: 142, column: 14, scope: !3074)
!3107 = !DILocation(line: 142, column: 29, scope: !3074)
!3108 = !DILocation(line: 142, column: 18, scope: !3074)
!3109 = !DILocalVariable(name: "temp", scope: !3074, file: !174, line: 143, type: !24)
!3110 = !DILocation(line: 143, column: 14, scope: !3074)
!3111 = !DILocation(line: 143, column: 32, scope: !3074)
!3112 = !DILocation(line: 143, column: 21, scope: !3074)
!3113 = !DILocation(line: 144, column: 35, scope: !3074)
!3114 = !DILocation(line: 144, column: 38, scope: !3074)
!3115 = !DILocation(line: 144, column: 44, scope: !3074)
!3116 = !DILocation(line: 144, column: 5, scope: !3074)
!3117 = !DILocation(line: 129, column: 20, scope: !3077, inlinedAt: !3080)
!3118 = !DILocation(line: 129, column: 22, scope: !3077, inlinedAt: !3080)
!3119 = !DILocation(line: 132, column: 12, scope: !3120, inlinedAt: !3080)
!3120 = distinct !DILexicalBlock(scope: !3077, file: !174, line: 132, column: 5)
!3121 = !DILocation(line: 132, column: 10, scope: !3120, inlinedAt: !3080)
!3122 = !DILocation(line: 132, column: 17, scope: !3123, inlinedAt: !3080)
!3123 = !DILexicalBlockFile(scope: !3124, file: !174, discriminator: 1)
!3124 = distinct !DILexicalBlock(scope: !3120, file: !174, line: 132, column: 5)
!3125 = !DILocation(line: 132, column: 21, scope: !3123, inlinedAt: !3080)
!3126 = !DILocation(line: 132, column: 19, scope: !3123, inlinedAt: !3080)
!3127 = !DILocation(line: 132, column: 5, scope: !3123, inlinedAt: !3080)
!3128 = !DILocation(line: 133, column: 29, scope: !3129, inlinedAt: !3080)
!3129 = distinct !DILexicalBlock(scope: !3124, file: !174, line: 132, column: 30)
!3130 = !DILocation(line: 133, column: 27, scope: !3129, inlinedAt: !3080)
!3131 = !DILocation(line: 133, column: 54, scope: !3129, inlinedAt: !3080)
!3132 = !DILocation(line: 133, column: 56, scope: !3129, inlinedAt: !3080)
!3133 = !DILocation(line: 133, column: 55, scope: !3129, inlinedAt: !3080)
!3134 = !DILocation(line: 133, column: 52, scope: !3129, inlinedAt: !3080)
!3135 = !DILocation(line: 133, column: 60, scope: !3129, inlinedAt: !3080)
!3136 = !DILocation(line: 133, column: 66, scope: !3129, inlinedAt: !3080)
!3137 = !DILocation(line: 133, column: 33, scope: !3129, inlinedAt: !3080)
!3138 = !DILocation(line: 133, column: 20, scope: !3129, inlinedAt: !3080)
!3139 = !DILocation(line: 133, column: 14, scope: !3129, inlinedAt: !3080)
!3140 = !DILocation(line: 133, column: 9, scope: !3129, inlinedAt: !3080)
!3141 = !DILocation(line: 133, column: 18, scope: !3129, inlinedAt: !3080)
!3142 = !DILocation(line: 134, column: 31, scope: !3129, inlinedAt: !3080)
!3143 = !DILocation(line: 134, column: 33, scope: !3129, inlinedAt: !3080)
!3144 = !DILocation(line: 134, column: 32, scope: !3129, inlinedAt: !3080)
!3145 = !DILocation(line: 134, column: 29, scope: !3129, inlinedAt: !3080)
!3146 = !DILocation(line: 134, column: 55, scope: !3129, inlinedAt: !3080)
!3147 = !DILocation(line: 134, column: 50, scope: !3129, inlinedAt: !3080)
!3148 = !DILocation(line: 134, column: 39, scope: !3129, inlinedAt: !3080)
!3149 = !DILocation(line: 134, column: 37, scope: !3129, inlinedAt: !3080)
!3150 = !DILocation(line: 134, column: 22, scope: !3129, inlinedAt: !3080)
!3151 = !DILocation(line: 134, column: 14, scope: !3129, inlinedAt: !3080)
!3152 = !DILocation(line: 134, column: 16, scope: !3129, inlinedAt: !3080)
!3153 = !DILocation(line: 134, column: 15, scope: !3129, inlinedAt: !3080)
!3154 = !DILocation(line: 134, column: 9, scope: !3129, inlinedAt: !3080)
!3155 = !DILocation(line: 134, column: 20, scope: !3129, inlinedAt: !3080)
!3156 = !DILocation(line: 132, column: 26, scope: !3157, inlinedAt: !3080)
!3157 = !DILexicalBlockFile(scope: !3124, file: !174, discriminator: 2)
!3158 = !DILocation(line: 132, column: 5, scope: !3157, inlinedAt: !3080)
!3159 = distinct !{!3159, !3160}
!3160 = !DILocation(line: 132, column: 5, scope: !3077)
!3161 = !DILocation(line: 137, column: 21, scope: !3077, inlinedAt: !3080)
!3162 = !DILocation(line: 137, column: 24, scope: !3077, inlinedAt: !3080)
!3163 = !DILocation(line: 137, column: 30, scope: !3077, inlinedAt: !3080)
!3164 = !DILocation(line: 137, column: 35, scope: !3077, inlinedAt: !3080)
!3165 = !DILocation(line: 137, column: 34, scope: !3077, inlinedAt: !3080)
!3166 = !DILocation(line: 137, column: 39, scope: !3077, inlinedAt: !3080)
!3167 = !DILocation(line: 137, column: 43, scope: !3077, inlinedAt: !3080)
!3168 = !DILocation(line: 137, column: 50, scope: !3077, inlinedAt: !3080)
!3169 = !DILocation(line: 137, column: 5, scope: !3077, inlinedAt: !3080)
!3170 = !DILocation(line: 59, column: 12, scope: !2432, inlinedAt: !3076)
!3171 = !DILocation(line: 59, column: 10, scope: !2432, inlinedAt: !3076)
!3172 = !DILocation(line: 59, column: 17, scope: !2435, inlinedAt: !3076)
!3173 = !DILocation(line: 59, column: 21, scope: !2435, inlinedAt: !3076)
!3174 = !DILocation(line: 59, column: 19, scope: !2435, inlinedAt: !3076)
!3175 = !DILocation(line: 59, column: 5, scope: !2435, inlinedAt: !3076)
!3176 = !DILocation(line: 60, column: 33, scope: !2441, inlinedAt: !3076)
!3177 = !DILocation(line: 60, column: 28, scope: !2441, inlinedAt: !3076)
!3178 = !DILocation(line: 60, column: 48, scope: !2441, inlinedAt: !3076)
!3179 = !DILocation(line: 60, column: 36, scope: !2441, inlinedAt: !3076)
!3180 = !DILocation(line: 60, column: 57, scope: !2441, inlinedAt: !3076)
!3181 = !DILocation(line: 60, column: 54, scope: !2441, inlinedAt: !3076)
!3182 = !DILocation(line: 60, column: 21, scope: !2441, inlinedAt: !3076)
!3183 = !DILocation(line: 60, column: 15, scope: !2441, inlinedAt: !3076)
!3184 = !DILocation(line: 60, column: 14, scope: !2441, inlinedAt: !3076)
!3185 = !DILocation(line: 60, column: 9, scope: !2441, inlinedAt: !3076)
!3186 = !DILocation(line: 60, column: 19, scope: !2441, inlinedAt: !3076)
!3187 = !DILocation(line: 61, column: 34, scope: !2441, inlinedAt: !3076)
!3188 = !DILocation(line: 61, column: 29, scope: !2441, inlinedAt: !3076)
!3189 = !DILocation(line: 61, column: 49, scope: !2441, inlinedAt: !3076)
!3190 = !DILocation(line: 61, column: 37, scope: !2441, inlinedAt: !3076)
!3191 = !DILocation(line: 61, column: 58, scope: !2441, inlinedAt: !3076)
!3192 = !DILocation(line: 61, column: 55, scope: !2441, inlinedAt: !3076)
!3193 = !DILocation(line: 61, column: 22, scope: !2441, inlinedAt: !3076)
!3194 = !DILocation(line: 61, column: 15, scope: !2441, inlinedAt: !3076)
!3195 = !DILocation(line: 61, column: 14, scope: !2441, inlinedAt: !3076)
!3196 = !DILocation(line: 61, column: 16, scope: !2441, inlinedAt: !3076)
!3197 = !DILocation(line: 61, column: 9, scope: !2441, inlinedAt: !3076)
!3198 = !DILocation(line: 61, column: 20, scope: !2441, inlinedAt: !3076)
!3199 = !DILocation(line: 59, column: 26, scope: !2465, inlinedAt: !3076)
!3200 = !DILocation(line: 59, column: 5, scope: !2465, inlinedAt: !3076)
!3201 = !DILocation(line: 145, column: 1, scope: !3074)
!3202 = distinct !DISubprogram(name: "horizontal_compose_haar1i_8bit", scope: !174, file: !174, line: 147, type: !63, isLocal: true, isDefinition: true, scopeLine: 148, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!3203 = !DILocation(line: 55, column: 76, scope: !2297, inlinedAt: !3204)
!3204 = distinct !DILocation(line: 137, column: 5, scope: !3077, inlinedAt: !3205)
!3205 = distinct !DILocation(line: 151, column: 5, scope: !3202)
!3206 = !DILocation(line: 55, column: 90, scope: !2297, inlinedAt: !3204)
!3207 = !DILocation(line: 55, column: 105, scope: !2297, inlinedAt: !3204)
!3208 = !DILocation(line: 55, column: 115, scope: !2297, inlinedAt: !3204)
!3209 = !DILocation(line: 56, column: 53, scope: !2297, inlinedAt: !3204)
!3210 = !DILocation(line: 56, column: 62, scope: !2297, inlinedAt: !3204)
!3211 = !DILocation(line: 58, column: 9, scope: !2297, inlinedAt: !3204)
!3212 = !DILocation(line: 126, column: 90, scope: !3077, inlinedAt: !3205)
!3213 = !DILocation(line: 126, column: 102, scope: !3077, inlinedAt: !3205)
!3214 = !DILocation(line: 127, column: 67, scope: !3077, inlinedAt: !3205)
!3215 = !DILocation(line: 127, column: 74, scope: !3077, inlinedAt: !3205)
!3216 = !DILocation(line: 129, column: 15, scope: !3077, inlinedAt: !3205)
!3217 = !DILocation(line: 130, column: 9, scope: !3077, inlinedAt: !3205)
!3218 = !DILocalVariable(name: "_b", arg: 1, scope: !3202, file: !174, line: 147, type: !20)
!3219 = !DILocation(line: 147, column: 53, scope: !3202)
!3220 = !DILocalVariable(name: "_temp", arg: 2, scope: !3202, file: !174, line: 147, type: !20)
!3221 = !DILocation(line: 147, column: 66, scope: !3202)
!3222 = !DILocalVariable(name: "w", arg: 3, scope: !3202, file: !174, line: 147, type: !18)
!3223 = !DILocation(line: 147, column: 77, scope: !3202)
!3224 = !DILocalVariable(name: "b", scope: !3202, file: !174, line: 149, type: !24)
!3225 = !DILocation(line: 149, column: 14, scope: !3202)
!3226 = !DILocation(line: 149, column: 29, scope: !3202)
!3227 = !DILocation(line: 149, column: 18, scope: !3202)
!3228 = !DILocalVariable(name: "temp", scope: !3202, file: !174, line: 150, type: !24)
!3229 = !DILocation(line: 150, column: 14, scope: !3202)
!3230 = !DILocation(line: 150, column: 32, scope: !3202)
!3231 = !DILocation(line: 150, column: 21, scope: !3202)
!3232 = !DILocation(line: 151, column: 35, scope: !3202)
!3233 = !DILocation(line: 151, column: 38, scope: !3202)
!3234 = !DILocation(line: 151, column: 44, scope: !3202)
!3235 = !DILocation(line: 151, column: 5, scope: !3202)
!3236 = !DILocation(line: 129, column: 20, scope: !3077, inlinedAt: !3205)
!3237 = !DILocation(line: 129, column: 22, scope: !3077, inlinedAt: !3205)
!3238 = !DILocation(line: 132, column: 12, scope: !3120, inlinedAt: !3205)
!3239 = !DILocation(line: 132, column: 10, scope: !3120, inlinedAt: !3205)
!3240 = !DILocation(line: 132, column: 17, scope: !3123, inlinedAt: !3205)
!3241 = !DILocation(line: 132, column: 21, scope: !3123, inlinedAt: !3205)
!3242 = !DILocation(line: 132, column: 19, scope: !3123, inlinedAt: !3205)
!3243 = !DILocation(line: 132, column: 5, scope: !3123, inlinedAt: !3205)
!3244 = !DILocation(line: 133, column: 29, scope: !3129, inlinedAt: !3205)
!3245 = !DILocation(line: 133, column: 27, scope: !3129, inlinedAt: !3205)
!3246 = !DILocation(line: 133, column: 54, scope: !3129, inlinedAt: !3205)
!3247 = !DILocation(line: 133, column: 56, scope: !3129, inlinedAt: !3205)
!3248 = !DILocation(line: 133, column: 55, scope: !3129, inlinedAt: !3205)
!3249 = !DILocation(line: 133, column: 52, scope: !3129, inlinedAt: !3205)
!3250 = !DILocation(line: 133, column: 60, scope: !3129, inlinedAt: !3205)
!3251 = !DILocation(line: 133, column: 66, scope: !3129, inlinedAt: !3205)
!3252 = !DILocation(line: 133, column: 33, scope: !3129, inlinedAt: !3205)
!3253 = !DILocation(line: 133, column: 20, scope: !3129, inlinedAt: !3205)
!3254 = !DILocation(line: 133, column: 14, scope: !3129, inlinedAt: !3205)
!3255 = !DILocation(line: 133, column: 9, scope: !3129, inlinedAt: !3205)
!3256 = !DILocation(line: 133, column: 18, scope: !3129, inlinedAt: !3205)
!3257 = !DILocation(line: 134, column: 31, scope: !3129, inlinedAt: !3205)
!3258 = !DILocation(line: 134, column: 33, scope: !3129, inlinedAt: !3205)
!3259 = !DILocation(line: 134, column: 32, scope: !3129, inlinedAt: !3205)
!3260 = !DILocation(line: 134, column: 29, scope: !3129, inlinedAt: !3205)
!3261 = !DILocation(line: 134, column: 55, scope: !3129, inlinedAt: !3205)
!3262 = !DILocation(line: 134, column: 50, scope: !3129, inlinedAt: !3205)
!3263 = !DILocation(line: 134, column: 39, scope: !3129, inlinedAt: !3205)
!3264 = !DILocation(line: 134, column: 37, scope: !3129, inlinedAt: !3205)
!3265 = !DILocation(line: 134, column: 22, scope: !3129, inlinedAt: !3205)
!3266 = !DILocation(line: 134, column: 14, scope: !3129, inlinedAt: !3205)
!3267 = !DILocation(line: 134, column: 16, scope: !3129, inlinedAt: !3205)
!3268 = !DILocation(line: 134, column: 15, scope: !3129, inlinedAt: !3205)
!3269 = !DILocation(line: 134, column: 9, scope: !3129, inlinedAt: !3205)
!3270 = !DILocation(line: 134, column: 20, scope: !3129, inlinedAt: !3205)
!3271 = !DILocation(line: 132, column: 26, scope: !3157, inlinedAt: !3205)
!3272 = !DILocation(line: 132, column: 5, scope: !3157, inlinedAt: !3205)
!3273 = !DILocation(line: 137, column: 21, scope: !3077, inlinedAt: !3205)
!3274 = !DILocation(line: 137, column: 24, scope: !3077, inlinedAt: !3205)
!3275 = !DILocation(line: 137, column: 30, scope: !3077, inlinedAt: !3205)
!3276 = !DILocation(line: 137, column: 35, scope: !3077, inlinedAt: !3205)
!3277 = !DILocation(line: 137, column: 34, scope: !3077, inlinedAt: !3205)
!3278 = !DILocation(line: 137, column: 39, scope: !3077, inlinedAt: !3205)
!3279 = !DILocation(line: 137, column: 43, scope: !3077, inlinedAt: !3205)
!3280 = !DILocation(line: 137, column: 50, scope: !3077, inlinedAt: !3205)
!3281 = !DILocation(line: 137, column: 5, scope: !3077, inlinedAt: !3205)
!3282 = !DILocation(line: 59, column: 12, scope: !2432, inlinedAt: !3204)
!3283 = !DILocation(line: 59, column: 10, scope: !2432, inlinedAt: !3204)
!3284 = !DILocation(line: 59, column: 17, scope: !2435, inlinedAt: !3204)
!3285 = !DILocation(line: 59, column: 21, scope: !2435, inlinedAt: !3204)
!3286 = !DILocation(line: 59, column: 19, scope: !2435, inlinedAt: !3204)
!3287 = !DILocation(line: 59, column: 5, scope: !2435, inlinedAt: !3204)
!3288 = !DILocation(line: 60, column: 33, scope: !2441, inlinedAt: !3204)
!3289 = !DILocation(line: 60, column: 28, scope: !2441, inlinedAt: !3204)
!3290 = !DILocation(line: 60, column: 48, scope: !2441, inlinedAt: !3204)
!3291 = !DILocation(line: 60, column: 36, scope: !2441, inlinedAt: !3204)
!3292 = !DILocation(line: 60, column: 57, scope: !2441, inlinedAt: !3204)
!3293 = !DILocation(line: 60, column: 54, scope: !2441, inlinedAt: !3204)
!3294 = !DILocation(line: 60, column: 21, scope: !2441, inlinedAt: !3204)
!3295 = !DILocation(line: 60, column: 15, scope: !2441, inlinedAt: !3204)
!3296 = !DILocation(line: 60, column: 14, scope: !2441, inlinedAt: !3204)
!3297 = !DILocation(line: 60, column: 9, scope: !2441, inlinedAt: !3204)
!3298 = !DILocation(line: 60, column: 19, scope: !2441, inlinedAt: !3204)
!3299 = !DILocation(line: 61, column: 34, scope: !2441, inlinedAt: !3204)
!3300 = !DILocation(line: 61, column: 29, scope: !2441, inlinedAt: !3204)
!3301 = !DILocation(line: 61, column: 49, scope: !2441, inlinedAt: !3204)
!3302 = !DILocation(line: 61, column: 37, scope: !2441, inlinedAt: !3204)
!3303 = !DILocation(line: 61, column: 58, scope: !2441, inlinedAt: !3204)
!3304 = !DILocation(line: 61, column: 55, scope: !2441, inlinedAt: !3204)
!3305 = !DILocation(line: 61, column: 22, scope: !2441, inlinedAt: !3204)
!3306 = !DILocation(line: 61, column: 15, scope: !2441, inlinedAt: !3204)
!3307 = !DILocation(line: 61, column: 14, scope: !2441, inlinedAt: !3204)
!3308 = !DILocation(line: 61, column: 16, scope: !2441, inlinedAt: !3204)
!3309 = !DILocation(line: 61, column: 9, scope: !2441, inlinedAt: !3204)
!3310 = !DILocation(line: 61, column: 20, scope: !2441, inlinedAt: !3204)
!3311 = !DILocation(line: 59, column: 26, scope: !2465, inlinedAt: !3204)
!3312 = !DILocation(line: 59, column: 5, scope: !2465, inlinedAt: !3204)
!3313 = !DILocation(line: 152, column: 1, scope: !3202)
!3314 = distinct !DISubprogram(name: "spatial_compose_fidelity_8bit", scope: !174, file: !174, line: 426, type: !1596, isLocal: true, isDefinition: true, scopeLine: 427, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!3315 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !3316)
!3316 = distinct !DILocation(line: 441, column: 32, scope: !3317)
!3317 = distinct !DILexicalBlock(scope: !3318, file: !174, line: 440, column: 9)
!3318 = distinct !DILexicalBlock(scope: !3319, file: !174, line: 440, column: 9)
!3319 = distinct !DILexicalBlock(scope: !3320, file: !174, line: 439, column: 37)
!3320 = distinct !DILexicalBlock(scope: !3321, file: !174, line: 439, column: 5)
!3321 = distinct !DILexicalBlock(scope: !3314, file: !174, line: 439, column: 5)
!3322 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !3316)
!3323 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !3316)
!3324 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !3325)
!3325 = distinct !DILocation(line: 435, column: 32, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !3327, file: !174, line: 434, column: 9)
!3327 = distinct !DILexicalBlock(scope: !3328, file: !174, line: 434, column: 9)
!3328 = distinct !DILexicalBlock(scope: !3329, file: !174, line: 433, column: 37)
!3329 = distinct !DILexicalBlock(scope: !3330, file: !174, line: 433, column: 5)
!3330 = distinct !DILexicalBlock(scope: !3314, file: !174, line: 433, column: 5)
!3331 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !3325)
!3332 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !3325)
!3333 = !DILocalVariable(name: "d", arg: 1, scope: !3314, file: !174, line: 426, type: !37)
!3334 = !DILocation(line: 426, column: 55, scope: !3314)
!3335 = !DILocalVariable(name: "level", arg: 2, scope: !3314, file: !174, line: 426, type: !18)
!3336 = !DILocation(line: 426, column: 62, scope: !3314)
!3337 = !DILocalVariable(name: "width", arg: 3, scope: !3314, file: !174, line: 426, type: !18)
!3338 = !DILocation(line: 426, column: 73, scope: !3314)
!3339 = !DILocalVariable(name: "height", arg: 4, scope: !3314, file: !174, line: 426, type: !18)
!3340 = !DILocation(line: 426, column: 84, scope: !3314)
!3341 = !DILocalVariable(name: "stride", arg: 5, scope: !3314, file: !174, line: 426, type: !18)
!3342 = !DILocation(line: 426, column: 96, scope: !3314)
!3343 = !DILocalVariable(name: "vertical_compose_l0", scope: !3314, file: !174, line: 428, type: !3344)
!3344 = !DIDerivedType(tag: DW_TAG_typedef, name: "vertical_compose_9tap", file: !4, line: 52, baseType: !3345)
!3345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3346, size: 64, align: 64)
!3346 = !DISubroutineType(types: !3347)
!3347 = !{null, !20, !3348, !18}
!3348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20, size: 64, align: 64)
!3349 = !DILocation(line: 428, column: 27, scope: !3314)
!3350 = !DILocation(line: 428, column: 56, scope: !3314)
!3351 = !DILocation(line: 428, column: 59, scope: !3314)
!3352 = !DILocation(line: 428, column: 49, scope: !3314)
!3353 = !DILocalVariable(name: "vertical_compose_h0", scope: !3314, file: !174, line: 429, type: !3344)
!3354 = !DILocation(line: 429, column: 27, scope: !3314)
!3355 = !DILocation(line: 429, column: 56, scope: !3314)
!3356 = !DILocation(line: 429, column: 59, scope: !3314)
!3357 = !DILocation(line: 429, column: 49, scope: !3314)
!3358 = !DILocalVariable(name: "i", scope: !3314, file: !174, line: 430, type: !18)
!3359 = !DILocation(line: 430, column: 9, scope: !3314)
!3360 = !DILocalVariable(name: "y", scope: !3314, file: !174, line: 430, type: !18)
!3361 = !DILocation(line: 430, column: 12, scope: !3314)
!3362 = !DILocalVariable(name: "b", scope: !3314, file: !174, line: 431, type: !71)
!3363 = !DILocation(line: 431, column: 14, scope: !3314)
!3364 = !DILocation(line: 433, column: 12, scope: !3330)
!3365 = !DILocation(line: 433, column: 10, scope: !3330)
!3366 = !DILocation(line: 433, column: 17, scope: !3367)
!3367 = !DILexicalBlockFile(scope: !3329, file: !174, discriminator: 1)
!3368 = !DILocation(line: 433, column: 21, scope: !3367)
!3369 = !DILocation(line: 433, column: 19, scope: !3367)
!3370 = !DILocation(line: 433, column: 5, scope: !3367)
!3371 = !DILocation(line: 434, column: 16, scope: !3327)
!3372 = !DILocation(line: 434, column: 14, scope: !3327)
!3373 = !DILocation(line: 434, column: 21, scope: !3374)
!3374 = !DILexicalBlockFile(scope: !3326, file: !174, discriminator: 1)
!3375 = !DILocation(line: 434, column: 23, scope: !3374)
!3376 = !DILocation(line: 434, column: 9, scope: !3374)
!3377 = !DILocation(line: 435, column: 20, scope: !3326)
!3378 = !DILocation(line: 435, column: 23, scope: !3326)
!3379 = !DILocation(line: 435, column: 43, scope: !3326)
!3380 = !DILocation(line: 435, column: 44, scope: !3326)
!3381 = !DILocation(line: 435, column: 51, scope: !3326)
!3382 = !DILocation(line: 435, column: 50, scope: !3326)
!3383 = !DILocation(line: 435, column: 47, scope: !3326)
!3384 = !DILocation(line: 435, column: 58, scope: !3326)
!3385 = !DILocation(line: 435, column: 64, scope: !3326)
!3386 = !DILocation(line: 435, column: 32, scope: !3326)
!3387 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !3325)
!3388 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !3325)
!3389 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !3325)
!3390 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !3325)
!3391 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !3325)
!3392 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !3325)
!3393 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !3325)
!3394 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !3325)
!3395 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !3325)
!3396 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !3325)
!3397 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !3325)
!3398 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !3325)
!3399 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !3325)
!3400 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !3325)
!3401 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !3325)
!3402 = !DILocation(line: 435, column: 68, scope: !3326)
!3403 = !DILocation(line: 435, column: 67, scope: !3326)
!3404 = !DILocation(line: 435, column: 30, scope: !3326)
!3405 = !DILocation(line: 435, column: 15, scope: !3326)
!3406 = !DILocation(line: 435, column: 13, scope: !3326)
!3407 = !DILocation(line: 435, column: 18, scope: !3326)
!3408 = !DILocation(line: 434, column: 29, scope: !3409)
!3409 = !DILexicalBlockFile(scope: !3326, file: !174, discriminator: 2)
!3410 = !DILocation(line: 434, column: 9, scope: !3409)
!3411 = distinct !{!3411, !3412}
!3412 = !DILocation(line: 434, column: 9, scope: !3328)
!3413 = !DILocation(line: 436, column: 9, scope: !3328)
!3414 = !DILocation(line: 436, column: 29, scope: !3328)
!3415 = !DILocation(line: 436, column: 32, scope: !3328)
!3416 = !DILocation(line: 436, column: 41, scope: !3328)
!3417 = !DILocation(line: 436, column: 43, scope: !3328)
!3418 = !DILocation(line: 436, column: 42, scope: !3328)
!3419 = !DILocation(line: 436, column: 39, scope: !3328)
!3420 = !DILocation(line: 436, column: 51, scope: !3328)
!3421 = !DILocation(line: 436, column: 54, scope: !3328)
!3422 = !DILocation(line: 437, column: 5, scope: !3328)
!3423 = !DILocation(line: 433, column: 31, scope: !3424)
!3424 = !DILexicalBlockFile(scope: !3329, file: !174, discriminator: 2)
!3425 = !DILocation(line: 433, column: 5, scope: !3424)
!3426 = distinct !{!3426, !3427}
!3427 = !DILocation(line: 433, column: 5, scope: !3314)
!3428 = !DILocation(line: 439, column: 12, scope: !3321)
!3429 = !DILocation(line: 439, column: 10, scope: !3321)
!3430 = !DILocation(line: 439, column: 17, scope: !3431)
!3431 = !DILexicalBlockFile(scope: !3320, file: !174, discriminator: 1)
!3432 = !DILocation(line: 439, column: 21, scope: !3431)
!3433 = !DILocation(line: 439, column: 19, scope: !3431)
!3434 = !DILocation(line: 439, column: 5, scope: !3431)
!3435 = !DILocation(line: 440, column: 16, scope: !3318)
!3436 = !DILocation(line: 440, column: 14, scope: !3318)
!3437 = !DILocation(line: 440, column: 21, scope: !3438)
!3438 = !DILexicalBlockFile(scope: !3317, file: !174, discriminator: 1)
!3439 = !DILocation(line: 440, column: 23, scope: !3438)
!3440 = !DILocation(line: 440, column: 9, scope: !3438)
!3441 = !DILocation(line: 441, column: 20, scope: !3317)
!3442 = !DILocation(line: 441, column: 23, scope: !3317)
!3443 = !DILocation(line: 441, column: 43, scope: !3317)
!3444 = !DILocation(line: 441, column: 44, scope: !3317)
!3445 = !DILocation(line: 441, column: 51, scope: !3317)
!3446 = !DILocation(line: 441, column: 50, scope: !3317)
!3447 = !DILocation(line: 441, column: 47, scope: !3317)
!3448 = !DILocation(line: 441, column: 58, scope: !3317)
!3449 = !DILocation(line: 441, column: 64, scope: !3317)
!3450 = !DILocation(line: 441, column: 32, scope: !3317)
!3451 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !3316)
!3452 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !3316)
!3453 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !3316)
!3454 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !3316)
!3455 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !3316)
!3456 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !3316)
!3457 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !3316)
!3458 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !3316)
!3459 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !3316)
!3460 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !3316)
!3461 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !3316)
!3462 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !3316)
!3463 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !3316)
!3464 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !3316)
!3465 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !3316)
!3466 = !DILocation(line: 441, column: 68, scope: !3317)
!3467 = !DILocation(line: 441, column: 67, scope: !3317)
!3468 = !DILocation(line: 441, column: 30, scope: !3317)
!3469 = !DILocation(line: 441, column: 15, scope: !3317)
!3470 = !DILocation(line: 441, column: 13, scope: !3317)
!3471 = !DILocation(line: 441, column: 18, scope: !3317)
!3472 = !DILocation(line: 440, column: 29, scope: !3473)
!3473 = !DILexicalBlockFile(scope: !3317, file: !174, discriminator: 2)
!3474 = !DILocation(line: 440, column: 9, scope: !3473)
!3475 = distinct !{!3475, !3476}
!3476 = !DILocation(line: 440, column: 9, scope: !3319)
!3477 = !DILocation(line: 442, column: 9, scope: !3319)
!3478 = !DILocation(line: 442, column: 29, scope: !3319)
!3479 = !DILocation(line: 442, column: 32, scope: !3319)
!3480 = !DILocation(line: 442, column: 41, scope: !3319)
!3481 = !DILocation(line: 442, column: 43, scope: !3319)
!3482 = !DILocation(line: 442, column: 42, scope: !3319)
!3483 = !DILocation(line: 442, column: 39, scope: !3319)
!3484 = !DILocation(line: 442, column: 51, scope: !3319)
!3485 = !DILocation(line: 442, column: 54, scope: !3319)
!3486 = !DILocation(line: 443, column: 5, scope: !3319)
!3487 = !DILocation(line: 439, column: 31, scope: !3488)
!3488 = !DILexicalBlockFile(scope: !3320, file: !174, discriminator: 2)
!3489 = !DILocation(line: 439, column: 5, scope: !3488)
!3490 = distinct !{!3490, !3491}
!3491 = !DILocation(line: 439, column: 5, scope: !3314)
!3492 = !DILocation(line: 445, column: 12, scope: !3493)
!3493 = distinct !DILexicalBlock(scope: !3314, file: !174, line: 445, column: 5)
!3494 = !DILocation(line: 445, column: 10, scope: !3493)
!3495 = !DILocation(line: 445, column: 17, scope: !3496)
!3496 = !DILexicalBlockFile(scope: !3497, file: !174, discriminator: 1)
!3497 = distinct !DILexicalBlock(scope: !3493, file: !174, line: 445, column: 5)
!3498 = !DILocation(line: 445, column: 21, scope: !3496)
!3499 = !DILocation(line: 445, column: 19, scope: !3496)
!3500 = !DILocation(line: 445, column: 5, scope: !3496)
!3501 = !DILocation(line: 446, column: 9, scope: !3497)
!3502 = !DILocation(line: 446, column: 12, scope: !3497)
!3503 = !DILocation(line: 446, column: 31, scope: !3497)
!3504 = !DILocation(line: 446, column: 34, scope: !3497)
!3505 = !DILocation(line: 446, column: 43, scope: !3497)
!3506 = !DILocation(line: 446, column: 45, scope: !3497)
!3507 = !DILocation(line: 446, column: 44, scope: !3497)
!3508 = !DILocation(line: 446, column: 41, scope: !3497)
!3509 = !DILocation(line: 446, column: 53, scope: !3497)
!3510 = !DILocation(line: 446, column: 56, scope: !3497)
!3511 = !DILocation(line: 446, column: 62, scope: !3497)
!3512 = !DILocation(line: 445, column: 30, scope: !3513)
!3513 = !DILexicalBlockFile(scope: !3497, file: !174, discriminator: 2)
!3514 = !DILocation(line: 445, column: 5, scope: !3513)
!3515 = distinct !{!3515, !3516}
!3516 = !DILocation(line: 445, column: 5, scope: !3314)
!3517 = !DILocation(line: 448, column: 22, scope: !3314)
!3518 = !DILocation(line: 448, column: 28, scope: !3314)
!3519 = !DILocation(line: 448, column: 11, scope: !3314)
!3520 = !DILocation(line: 448, column: 5, scope: !3314)
!3521 = !DILocation(line: 448, column: 8, scope: !3314)
!3522 = !DILocation(line: 448, column: 18, scope: !3314)
!3523 = !DILocation(line: 448, column: 20, scope: !3314)
!3524 = !DILocation(line: 449, column: 1, scope: !3314)
!3525 = distinct !DISubprogram(name: "vertical_compose_fidelityiL0_8bit", scope: !174, file: !174, line: 273, type: !3346, isLocal: true, isDefinition: true, scopeLine: 274, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!3526 = !DILocalVariable(name: "_dst", arg: 1, scope: !3525, file: !174, line: 273, type: !20)
!3527 = !DILocation(line: 273, column: 56, scope: !3525)
!3528 = !DILocalVariable(name: "_b", arg: 2, scope: !3525, file: !174, line: 273, type: !3348)
!3529 = !DILocation(line: 273, column: 71, scope: !3525)
!3530 = !DILocalVariable(name: "width", arg: 3, scope: !3525, file: !174, line: 273, type: !18)
!3531 = !DILocation(line: 273, column: 82, scope: !3525)
!3532 = !DILocalVariable(name: "i", scope: !3525, file: !174, line: 275, type: !18)
!3533 = !DILocation(line: 275, column: 9, scope: !3525)
!3534 = !DILocalVariable(name: "dst", scope: !3525, file: !174, line: 276, type: !24)
!3535 = !DILocation(line: 276, column: 14, scope: !3525)
!3536 = !DILocation(line: 276, column: 31, scope: !3525)
!3537 = !DILocation(line: 276, column: 20, scope: !3525)
!3538 = !DILocalVariable(name: "b0", scope: !3525, file: !174, line: 277, type: !24)
!3539 = !DILocation(line: 277, column: 14, scope: !3525)
!3540 = !DILocation(line: 277, column: 30, scope: !3525)
!3541 = !DILocation(line: 277, column: 19, scope: !3525)
!3542 = !DILocalVariable(name: "b1", scope: !3525, file: !174, line: 278, type: !24)
!3543 = !DILocation(line: 278, column: 14, scope: !3525)
!3544 = !DILocation(line: 278, column: 30, scope: !3525)
!3545 = !DILocation(line: 278, column: 19, scope: !3525)
!3546 = !DILocalVariable(name: "b2", scope: !3525, file: !174, line: 279, type: !24)
!3547 = !DILocation(line: 279, column: 14, scope: !3525)
!3548 = !DILocation(line: 279, column: 30, scope: !3525)
!3549 = !DILocation(line: 279, column: 19, scope: !3525)
!3550 = !DILocalVariable(name: "b3", scope: !3525, file: !174, line: 280, type: !24)
!3551 = !DILocation(line: 280, column: 14, scope: !3525)
!3552 = !DILocation(line: 280, column: 30, scope: !3525)
!3553 = !DILocation(line: 280, column: 19, scope: !3525)
!3554 = !DILocalVariable(name: "b4", scope: !3525, file: !174, line: 281, type: !24)
!3555 = !DILocation(line: 281, column: 14, scope: !3525)
!3556 = !DILocation(line: 281, column: 30, scope: !3525)
!3557 = !DILocation(line: 281, column: 19, scope: !3525)
!3558 = !DILocalVariable(name: "b5", scope: !3525, file: !174, line: 282, type: !24)
!3559 = !DILocation(line: 282, column: 14, scope: !3525)
!3560 = !DILocation(line: 282, column: 30, scope: !3525)
!3561 = !DILocation(line: 282, column: 19, scope: !3525)
!3562 = !DILocalVariable(name: "b6", scope: !3525, file: !174, line: 283, type: !24)
!3563 = !DILocation(line: 283, column: 14, scope: !3525)
!3564 = !DILocation(line: 283, column: 30, scope: !3525)
!3565 = !DILocation(line: 283, column: 19, scope: !3525)
!3566 = !DILocalVariable(name: "b7", scope: !3525, file: !174, line: 284, type: !24)
!3567 = !DILocation(line: 284, column: 14, scope: !3525)
!3568 = !DILocation(line: 284, column: 30, scope: !3525)
!3569 = !DILocation(line: 284, column: 19, scope: !3525)
!3570 = !DILocation(line: 286, column: 10, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3525, file: !174, line: 286, column: 5)
!3572 = !DILocation(line: 286, column: 9, scope: !3571)
!3573 = !DILocation(line: 286, column: 14, scope: !3574)
!3574 = !DILexicalBlockFile(scope: !3575, file: !174, discriminator: 1)
!3575 = distinct !DILexicalBlock(scope: !3571, file: !174, line: 286, column: 5)
!3576 = !DILocation(line: 286, column: 16, scope: !3574)
!3577 = !DILocation(line: 286, column: 15, scope: !3574)
!3578 = !DILocation(line: 286, column: 5, scope: !3574)
!3579 = !DILocation(line: 287, column: 33, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !3575, file: !174, line: 286, column: 27)
!3581 = !DILocation(line: 287, column: 29, scope: !3580)
!3582 = !DILocation(line: 287, column: 19, scope: !3580)
!3583 = !DILocation(line: 287, column: 52, scope: !3580)
!3584 = !DILocation(line: 287, column: 49, scope: !3580)
!3585 = !DILocation(line: 287, column: 68, scope: !3580)
!3586 = !DILocation(line: 287, column: 65, scope: !3580)
!3587 = !DILocation(line: 287, column: 55, scope: !3580)
!3588 = !DILocation(line: 287, column: 54, scope: !3580)
!3589 = !DILocation(line: 287, column: 47, scope: !3580)
!3590 = !DILocation(line: 287, column: 81, scope: !3580)
!3591 = !DILocation(line: 287, column: 78, scope: !3580)
!3592 = !DILocation(line: 287, column: 97, scope: !3580)
!3593 = !DILocation(line: 287, column: 94, scope: !3580)
!3594 = !DILocation(line: 287, column: 84, scope: !3580)
!3595 = !DILocation(line: 287, column: 83, scope: !3580)
!3596 = !DILocation(line: 287, column: 76, scope: !3580)
!3597 = !DILocation(line: 287, column: 72, scope: !3580)
!3598 = !DILocation(line: 287, column: 110, scope: !3580)
!3599 = !DILocation(line: 287, column: 107, scope: !3580)
!3600 = !DILocation(line: 287, column: 126, scope: !3580)
!3601 = !DILocation(line: 287, column: 123, scope: !3580)
!3602 = !DILocation(line: 287, column: 113, scope: !3580)
!3603 = !DILocation(line: 287, column: 112, scope: !3580)
!3604 = !DILocation(line: 287, column: 105, scope: !3580)
!3605 = !DILocation(line: 287, column: 101, scope: !3580)
!3606 = !DILocation(line: 287, column: 140, scope: !3580)
!3607 = !DILocation(line: 287, column: 137, scope: !3580)
!3608 = !DILocation(line: 287, column: 156, scope: !3580)
!3609 = !DILocation(line: 287, column: 153, scope: !3580)
!3610 = !DILocation(line: 287, column: 143, scope: !3580)
!3611 = !DILocation(line: 287, column: 142, scope: !3580)
!3612 = !DILocation(line: 287, column: 135, scope: !3580)
!3613 = !DILocation(line: 287, column: 130, scope: !3580)
!3614 = !DILocation(line: 287, column: 160, scope: !3580)
!3615 = !DILocation(line: 287, column: 167, scope: !3580)
!3616 = !DILocation(line: 287, column: 36, scope: !3580)
!3617 = !DILocation(line: 287, column: 18, scope: !3580)
!3618 = !DILocation(line: 287, column: 13, scope: !3580)
!3619 = !DILocation(line: 287, column: 9, scope: !3580)
!3620 = !DILocation(line: 287, column: 16, scope: !3580)
!3621 = !DILocation(line: 288, column: 5, scope: !3580)
!3622 = !DILocation(line: 286, column: 24, scope: !3623)
!3623 = !DILexicalBlockFile(scope: !3575, file: !174, discriminator: 2)
!3624 = !DILocation(line: 286, column: 5, scope: !3623)
!3625 = distinct !{!3625, !3626}
!3626 = !DILocation(line: 286, column: 5, scope: !3525)
!3627 = !DILocation(line: 289, column: 1, scope: !3525)
!3628 = distinct !DISubprogram(name: "vertical_compose_fidelityiH0_8bit", scope: !174, file: !174, line: 256, type: !3346, isLocal: true, isDefinition: true, scopeLine: 257, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!3629 = !DILocalVariable(name: "_dst", arg: 1, scope: !3628, file: !174, line: 256, type: !20)
!3630 = !DILocation(line: 256, column: 56, scope: !3628)
!3631 = !DILocalVariable(name: "_b", arg: 2, scope: !3628, file: !174, line: 256, type: !3348)
!3632 = !DILocation(line: 256, column: 71, scope: !3628)
!3633 = !DILocalVariable(name: "width", arg: 3, scope: !3628, file: !174, line: 256, type: !18)
!3634 = !DILocation(line: 256, column: 82, scope: !3628)
!3635 = !DILocalVariable(name: "i", scope: !3628, file: !174, line: 258, type: !18)
!3636 = !DILocation(line: 258, column: 9, scope: !3628)
!3637 = !DILocalVariable(name: "dst", scope: !3628, file: !174, line: 259, type: !24)
!3638 = !DILocation(line: 259, column: 14, scope: !3628)
!3639 = !DILocation(line: 259, column: 31, scope: !3628)
!3640 = !DILocation(line: 259, column: 20, scope: !3628)
!3641 = !DILocalVariable(name: "b0", scope: !3628, file: !174, line: 260, type: !24)
!3642 = !DILocation(line: 260, column: 14, scope: !3628)
!3643 = !DILocation(line: 260, column: 30, scope: !3628)
!3644 = !DILocation(line: 260, column: 19, scope: !3628)
!3645 = !DILocalVariable(name: "b1", scope: !3628, file: !174, line: 261, type: !24)
!3646 = !DILocation(line: 261, column: 14, scope: !3628)
!3647 = !DILocation(line: 261, column: 30, scope: !3628)
!3648 = !DILocation(line: 261, column: 19, scope: !3628)
!3649 = !DILocalVariable(name: "b2", scope: !3628, file: !174, line: 262, type: !24)
!3650 = !DILocation(line: 262, column: 14, scope: !3628)
!3651 = !DILocation(line: 262, column: 30, scope: !3628)
!3652 = !DILocation(line: 262, column: 19, scope: !3628)
!3653 = !DILocalVariable(name: "b3", scope: !3628, file: !174, line: 263, type: !24)
!3654 = !DILocation(line: 263, column: 14, scope: !3628)
!3655 = !DILocation(line: 263, column: 30, scope: !3628)
!3656 = !DILocation(line: 263, column: 19, scope: !3628)
!3657 = !DILocalVariable(name: "b4", scope: !3628, file: !174, line: 264, type: !24)
!3658 = !DILocation(line: 264, column: 14, scope: !3628)
!3659 = !DILocation(line: 264, column: 30, scope: !3628)
!3660 = !DILocation(line: 264, column: 19, scope: !3628)
!3661 = !DILocalVariable(name: "b5", scope: !3628, file: !174, line: 265, type: !24)
!3662 = !DILocation(line: 265, column: 14, scope: !3628)
!3663 = !DILocation(line: 265, column: 30, scope: !3628)
!3664 = !DILocation(line: 265, column: 19, scope: !3628)
!3665 = !DILocalVariable(name: "b6", scope: !3628, file: !174, line: 266, type: !24)
!3666 = !DILocation(line: 266, column: 14, scope: !3628)
!3667 = !DILocation(line: 266, column: 30, scope: !3628)
!3668 = !DILocation(line: 266, column: 19, scope: !3628)
!3669 = !DILocalVariable(name: "b7", scope: !3628, file: !174, line: 267, type: !24)
!3670 = !DILocation(line: 267, column: 14, scope: !3628)
!3671 = !DILocation(line: 267, column: 30, scope: !3628)
!3672 = !DILocation(line: 267, column: 19, scope: !3628)
!3673 = !DILocation(line: 268, column: 10, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3628, file: !174, line: 268, column: 5)
!3675 = !DILocation(line: 268, column: 9, scope: !3674)
!3676 = !DILocation(line: 268, column: 14, scope: !3677)
!3677 = !DILexicalBlockFile(scope: !3678, file: !174, discriminator: 1)
!3678 = distinct !DILexicalBlock(scope: !3674, file: !174, line: 268, column: 5)
!3679 = !DILocation(line: 268, column: 16, scope: !3677)
!3680 = !DILocation(line: 268, column: 15, scope: !3677)
!3681 = !DILocation(line: 268, column: 5, scope: !3677)
!3682 = !DILocation(line: 269, column: 33, scope: !3683)
!3683 = distinct !DILexicalBlock(scope: !3678, file: !174, line: 268, column: 27)
!3684 = !DILocation(line: 269, column: 29, scope: !3683)
!3685 = !DILocation(line: 269, column: 19, scope: !3683)
!3686 = !DILocation(line: 269, column: 52, scope: !3683)
!3687 = !DILocation(line: 269, column: 49, scope: !3683)
!3688 = !DILocation(line: 269, column: 68, scope: !3683)
!3689 = !DILocation(line: 269, column: 65, scope: !3683)
!3690 = !DILocation(line: 269, column: 55, scope: !3683)
!3691 = !DILocation(line: 269, column: 54, scope: !3683)
!3692 = !DILocation(line: 269, column: 47, scope: !3683)
!3693 = !DILocation(line: 269, column: 81, scope: !3683)
!3694 = !DILocation(line: 269, column: 78, scope: !3683)
!3695 = !DILocation(line: 269, column: 97, scope: !3683)
!3696 = !DILocation(line: 269, column: 94, scope: !3683)
!3697 = !DILocation(line: 269, column: 84, scope: !3683)
!3698 = !DILocation(line: 269, column: 83, scope: !3683)
!3699 = !DILocation(line: 269, column: 76, scope: !3683)
!3700 = !DILocation(line: 269, column: 72, scope: !3683)
!3701 = !DILocation(line: 269, column: 110, scope: !3683)
!3702 = !DILocation(line: 269, column: 107, scope: !3683)
!3703 = !DILocation(line: 269, column: 126, scope: !3683)
!3704 = !DILocation(line: 269, column: 123, scope: !3683)
!3705 = !DILocation(line: 269, column: 113, scope: !3683)
!3706 = !DILocation(line: 269, column: 112, scope: !3683)
!3707 = !DILocation(line: 269, column: 105, scope: !3683)
!3708 = !DILocation(line: 269, column: 101, scope: !3683)
!3709 = !DILocation(line: 269, column: 139, scope: !3683)
!3710 = !DILocation(line: 269, column: 136, scope: !3683)
!3711 = !DILocation(line: 269, column: 155, scope: !3683)
!3712 = !DILocation(line: 269, column: 152, scope: !3683)
!3713 = !DILocation(line: 269, column: 142, scope: !3683)
!3714 = !DILocation(line: 269, column: 141, scope: !3683)
!3715 = !DILocation(line: 269, column: 134, scope: !3683)
!3716 = !DILocation(line: 269, column: 130, scope: !3683)
!3717 = !DILocation(line: 269, column: 159, scope: !3683)
!3718 = !DILocation(line: 269, column: 166, scope: !3683)
!3719 = !DILocation(line: 269, column: 36, scope: !3683)
!3720 = !DILocation(line: 269, column: 18, scope: !3683)
!3721 = !DILocation(line: 269, column: 13, scope: !3683)
!3722 = !DILocation(line: 269, column: 9, scope: !3683)
!3723 = !DILocation(line: 269, column: 16, scope: !3683)
!3724 = !DILocation(line: 270, column: 5, scope: !3683)
!3725 = !DILocation(line: 268, column: 24, scope: !3726)
!3726 = !DILexicalBlockFile(scope: !3678, file: !174, discriminator: 2)
!3727 = !DILocation(line: 268, column: 5, scope: !3726)
!3728 = distinct !{!3728, !3729}
!3729 = !DILocation(line: 268, column: 5, scope: !3628)
!3730 = !DILocation(line: 271, column: 1, scope: !3628)
!3731 = distinct !DISubprogram(name: "horizontal_compose_fidelityi_8bit", scope: !174, file: !174, line: 154, type: !63, isLocal: true, isDefinition: true, scopeLine: 155, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!3732 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !3733)
!3733 = distinct !DILocation(line: 170, column: 24, scope: !3734)
!3734 = distinct !DILexicalBlock(scope: !3735, file: !174, line: 169, column: 9)
!3735 = distinct !DILexicalBlock(scope: !3736, file: !174, line: 169, column: 9)
!3736 = distinct !DILexicalBlock(scope: !3737, file: !174, line: 168, column: 30)
!3737 = distinct !DILexicalBlock(scope: !3738, file: !174, line: 168, column: 5)
!3738 = distinct !DILexicalBlock(scope: !3731, file: !174, line: 168, column: 5)
!3739 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !3733)
!3740 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !3733)
!3741 = !DILocation(line: 55, column: 76, scope: !2297, inlinedAt: !3742)
!3742 = distinct !DILocation(line: 174, column: 5, scope: !3731)
!3743 = !DILocation(line: 55, column: 90, scope: !2297, inlinedAt: !3742)
!3744 = !DILocation(line: 55, column: 105, scope: !2297, inlinedAt: !3742)
!3745 = !DILocation(line: 55, column: 115, scope: !2297, inlinedAt: !3742)
!3746 = !DILocation(line: 56, column: 53, scope: !2297, inlinedAt: !3742)
!3747 = !DILocation(line: 56, column: 62, scope: !2297, inlinedAt: !3742)
!3748 = !DILocation(line: 58, column: 9, scope: !2297, inlinedAt: !3742)
!3749 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !3750)
!3750 = distinct !DILocation(line: 164, column: 22, scope: !3751)
!3751 = distinct !DILexicalBlock(scope: !3752, file: !174, line: 163, column: 9)
!3752 = distinct !DILexicalBlock(scope: !3753, file: !174, line: 163, column: 9)
!3753 = distinct !DILexicalBlock(scope: !3754, file: !174, line: 162, column: 30)
!3754 = distinct !DILexicalBlock(scope: !3755, file: !174, line: 162, column: 5)
!3755 = distinct !DILexicalBlock(scope: !3731, file: !174, line: 162, column: 5)
!3756 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !3750)
!3757 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !3750)
!3758 = !DILocalVariable(name: "_b", arg: 1, scope: !3731, file: !174, line: 154, type: !20)
!3759 = !DILocation(line: 154, column: 56, scope: !3731)
!3760 = !DILocalVariable(name: "_tmp", arg: 2, scope: !3731, file: !174, line: 154, type: !20)
!3761 = !DILocation(line: 154, column: 69, scope: !3731)
!3762 = !DILocalVariable(name: "w", arg: 3, scope: !3731, file: !174, line: 154, type: !18)
!3763 = !DILocation(line: 154, column: 79, scope: !3731)
!3764 = !DILocalVariable(name: "w2", scope: !3731, file: !174, line: 156, type: !1931)
!3765 = !DILocation(line: 156, column: 15, scope: !3731)
!3766 = !DILocation(line: 156, column: 20, scope: !3731)
!3767 = !DILocation(line: 156, column: 22, scope: !3731)
!3768 = !DILocalVariable(name: "i", scope: !3731, file: !174, line: 157, type: !18)
!3769 = !DILocation(line: 157, column: 9, scope: !3731)
!3770 = !DILocalVariable(name: "x", scope: !3731, file: !174, line: 157, type: !18)
!3771 = !DILocation(line: 157, column: 12, scope: !3731)
!3772 = !DILocalVariable(name: "v", scope: !3731, file: !174, line: 158, type: !3773)
!3773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !25, size: 128, align: 16, elements: !72)
!3774 = !DILocation(line: 158, column: 13, scope: !3731)
!3775 = !DILocalVariable(name: "b", scope: !3731, file: !174, line: 159, type: !24)
!3776 = !DILocation(line: 159, column: 14, scope: !3731)
!3777 = !DILocation(line: 159, column: 29, scope: !3731)
!3778 = !DILocation(line: 159, column: 18, scope: !3731)
!3779 = !DILocalVariable(name: "tmp", scope: !3731, file: !174, line: 160, type: !24)
!3780 = !DILocation(line: 160, column: 14, scope: !3731)
!3781 = !DILocation(line: 160, column: 31, scope: !3731)
!3782 = !DILocation(line: 160, column: 20, scope: !3731)
!3783 = !DILocation(line: 162, column: 12, scope: !3755)
!3784 = !DILocation(line: 162, column: 10, scope: !3755)
!3785 = !DILocation(line: 162, column: 17, scope: !3786)
!3786 = !DILexicalBlockFile(scope: !3754, file: !174, discriminator: 1)
!3787 = !DILocation(line: 162, column: 21, scope: !3786)
!3788 = !DILocation(line: 162, column: 19, scope: !3786)
!3789 = !DILocation(line: 162, column: 5, scope: !3786)
!3790 = !DILocation(line: 163, column: 16, scope: !3752)
!3791 = !DILocation(line: 163, column: 14, scope: !3752)
!3792 = !DILocation(line: 163, column: 21, scope: !3793)
!3793 = !DILexicalBlockFile(scope: !3751, file: !174, discriminator: 1)
!3794 = !DILocation(line: 163, column: 23, scope: !3793)
!3795 = !DILocation(line: 163, column: 9, scope: !3793)
!3796 = !DILocation(line: 164, column: 32, scope: !3751)
!3797 = !DILocation(line: 164, column: 33, scope: !3751)
!3798 = !DILocation(line: 164, column: 36, scope: !3751)
!3799 = !DILocation(line: 164, column: 35, scope: !3751)
!3800 = !DILocation(line: 164, column: 42, scope: !3751)
!3801 = !DILocation(line: 164, column: 44, scope: !3751)
!3802 = !DILocation(line: 164, column: 22, scope: !3751)
!3803 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !3750)
!3804 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !3750)
!3805 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !3750)
!3806 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !3750)
!3807 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !3750)
!3808 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !3750)
!3809 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !3750)
!3810 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !3750)
!3811 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !3750)
!3812 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !3750)
!3813 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !3750)
!3814 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !3750)
!3815 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !3750)
!3816 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !3750)
!3817 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !3750)
!3818 = !DILocation(line: 164, column: 20, scope: !3751)
!3819 = !DILocation(line: 164, column: 15, scope: !3751)
!3820 = !DILocation(line: 164, column: 13, scope: !3751)
!3821 = !DILocation(line: 164, column: 18, scope: !3751)
!3822 = !DILocation(line: 163, column: 29, scope: !3823)
!3823 = !DILexicalBlockFile(scope: !3751, file: !174, discriminator: 2)
!3824 = !DILocation(line: 163, column: 9, scope: !3823)
!3825 = distinct !{!3825, !3826}
!3826 = !DILocation(line: 163, column: 9, scope: !3753)
!3827 = !DILocation(line: 165, column: 31, scope: !3753)
!3828 = !DILocation(line: 165, column: 33, scope: !3753)
!3829 = !DILocation(line: 165, column: 32, scope: !3753)
!3830 = !DILocation(line: 165, column: 29, scope: !3753)
!3831 = !DILocation(line: 165, column: 19, scope: !3753)
!3832 = !DILocation(line: 165, column: 50, scope: !3753)
!3833 = !DILocation(line: 165, column: 65, scope: !3753)
!3834 = !DILocation(line: 165, column: 55, scope: !3753)
!3835 = !DILocation(line: 165, column: 54, scope: !3753)
!3836 = !DILocation(line: 165, column: 48, scope: !3753)
!3837 = !DILocation(line: 165, column: 77, scope: !3753)
!3838 = !DILocation(line: 165, column: 92, scope: !3753)
!3839 = !DILocation(line: 165, column: 82, scope: !3753)
!3840 = !DILocation(line: 165, column: 81, scope: !3753)
!3841 = !DILocation(line: 165, column: 75, scope: !3753)
!3842 = !DILocation(line: 165, column: 71, scope: !3753)
!3843 = !DILocation(line: 165, column: 104, scope: !3753)
!3844 = !DILocation(line: 165, column: 119, scope: !3753)
!3845 = !DILocation(line: 165, column: 109, scope: !3753)
!3846 = !DILocation(line: 165, column: 108, scope: !3753)
!3847 = !DILocation(line: 165, column: 102, scope: !3753)
!3848 = !DILocation(line: 165, column: 98, scope: !3753)
!3849 = !DILocation(line: 165, column: 131, scope: !3753)
!3850 = !DILocation(line: 165, column: 146, scope: !3753)
!3851 = !DILocation(line: 165, column: 136, scope: !3753)
!3852 = !DILocation(line: 165, column: 135, scope: !3753)
!3853 = !DILocation(line: 165, column: 129, scope: !3753)
!3854 = !DILocation(line: 165, column: 125, scope: !3753)
!3855 = !DILocation(line: 165, column: 152, scope: !3753)
!3856 = !DILocation(line: 165, column: 159, scope: !3753)
!3857 = !DILocation(line: 165, column: 37, scope: !3753)
!3858 = !DILocation(line: 165, column: 18, scope: !3753)
!3859 = !DILocation(line: 165, column: 13, scope: !3753)
!3860 = !DILocation(line: 165, column: 9, scope: !3753)
!3861 = !DILocation(line: 165, column: 16, scope: !3753)
!3862 = !DILocation(line: 166, column: 5, scope: !3753)
!3863 = !DILocation(line: 162, column: 26, scope: !3864)
!3864 = !DILexicalBlockFile(scope: !3754, file: !174, discriminator: 2)
!3865 = !DILocation(line: 162, column: 5, scope: !3864)
!3866 = distinct !{!3866, !3867}
!3867 = !DILocation(line: 162, column: 5, scope: !3731)
!3868 = !DILocation(line: 168, column: 12, scope: !3738)
!3869 = !DILocation(line: 168, column: 10, scope: !3738)
!3870 = !DILocation(line: 168, column: 17, scope: !3871)
!3871 = !DILexicalBlockFile(scope: !3737, file: !174, discriminator: 1)
!3872 = !DILocation(line: 168, column: 21, scope: !3871)
!3873 = !DILocation(line: 168, column: 19, scope: !3871)
!3874 = !DILocation(line: 168, column: 5, scope: !3871)
!3875 = !DILocation(line: 169, column: 16, scope: !3735)
!3876 = !DILocation(line: 169, column: 14, scope: !3735)
!3877 = !DILocation(line: 169, column: 21, scope: !3878)
!3878 = !DILexicalBlockFile(scope: !3734, file: !174, discriminator: 1)
!3879 = !DILocation(line: 169, column: 23, scope: !3878)
!3880 = !DILocation(line: 169, column: 9, scope: !3878)
!3881 = !DILocation(line: 170, column: 34, scope: !3734)
!3882 = !DILocation(line: 170, column: 35, scope: !3734)
!3883 = !DILocation(line: 170, column: 38, scope: !3734)
!3884 = !DILocation(line: 170, column: 37, scope: !3734)
!3885 = !DILocation(line: 170, column: 44, scope: !3734)
!3886 = !DILocation(line: 170, column: 46, scope: !3734)
!3887 = !DILocation(line: 170, column: 24, scope: !3734)
!3888 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !3733)
!3889 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !3733)
!3890 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !3733)
!3891 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !3733)
!3892 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !3733)
!3893 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !3733)
!3894 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !3733)
!3895 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !3733)
!3896 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !3733)
!3897 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !3733)
!3898 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !3733)
!3899 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !3733)
!3900 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !3733)
!3901 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !3733)
!3902 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !3733)
!3903 = !DILocation(line: 170, column: 20, scope: !3734)
!3904 = !DILocation(line: 170, column: 15, scope: !3734)
!3905 = !DILocation(line: 170, column: 13, scope: !3734)
!3906 = !DILocation(line: 170, column: 18, scope: !3734)
!3907 = !DILocation(line: 169, column: 29, scope: !3908)
!3908 = !DILexicalBlockFile(scope: !3734, file: !174, discriminator: 2)
!3909 = !DILocation(line: 169, column: 9, scope: !3908)
!3910 = distinct !{!3910, !3911}
!3911 = !DILocation(line: 169, column: 9, scope: !3736)
!3912 = !DILocation(line: 171, column: 34, scope: !3736)
!3913 = !DILocation(line: 171, column: 32, scope: !3736)
!3914 = !DILocation(line: 171, column: 22, scope: !3736)
!3915 = !DILocation(line: 171, column: 50, scope: !3736)
!3916 = !DILocation(line: 171, column: 65, scope: !3736)
!3917 = !DILocation(line: 171, column: 55, scope: !3736)
!3918 = !DILocation(line: 171, column: 54, scope: !3736)
!3919 = !DILocation(line: 171, column: 48, scope: !3736)
!3920 = !DILocation(line: 171, column: 77, scope: !3736)
!3921 = !DILocation(line: 171, column: 92, scope: !3736)
!3922 = !DILocation(line: 171, column: 82, scope: !3736)
!3923 = !DILocation(line: 171, column: 81, scope: !3736)
!3924 = !DILocation(line: 171, column: 75, scope: !3736)
!3925 = !DILocation(line: 171, column: 71, scope: !3736)
!3926 = !DILocation(line: 171, column: 104, scope: !3736)
!3927 = !DILocation(line: 171, column: 119, scope: !3736)
!3928 = !DILocation(line: 171, column: 109, scope: !3736)
!3929 = !DILocation(line: 171, column: 108, scope: !3736)
!3930 = !DILocation(line: 171, column: 102, scope: !3736)
!3931 = !DILocation(line: 171, column: 98, scope: !3736)
!3932 = !DILocation(line: 171, column: 132, scope: !3736)
!3933 = !DILocation(line: 171, column: 147, scope: !3736)
!3934 = !DILocation(line: 171, column: 137, scope: !3736)
!3935 = !DILocation(line: 171, column: 136, scope: !3736)
!3936 = !DILocation(line: 171, column: 130, scope: !3736)
!3937 = !DILocation(line: 171, column: 125, scope: !3736)
!3938 = !DILocation(line: 171, column: 153, scope: !3736)
!3939 = !DILocation(line: 171, column: 160, scope: !3736)
!3940 = !DILocation(line: 171, column: 37, scope: !3736)
!3941 = !DILocation(line: 171, column: 21, scope: !3736)
!3942 = !DILocation(line: 171, column: 13, scope: !3736)
!3943 = !DILocation(line: 171, column: 15, scope: !3736)
!3944 = !DILocation(line: 171, column: 14, scope: !3736)
!3945 = !DILocation(line: 171, column: 9, scope: !3736)
!3946 = !DILocation(line: 171, column: 19, scope: !3736)
!3947 = !DILocation(line: 172, column: 5, scope: !3736)
!3948 = !DILocation(line: 168, column: 26, scope: !3949)
!3949 = !DILexicalBlockFile(scope: !3737, file: !174, discriminator: 2)
!3950 = !DILocation(line: 168, column: 5, scope: !3949)
!3951 = distinct !{!3951, !3952}
!3952 = !DILocation(line: 168, column: 5, scope: !3731)
!3953 = !DILocation(line: 174, column: 21, scope: !3731)
!3954 = !DILocation(line: 174, column: 24, scope: !3731)
!3955 = !DILocation(line: 174, column: 28, scope: !3731)
!3956 = !DILocation(line: 174, column: 27, scope: !3731)
!3957 = !DILocation(line: 174, column: 32, scope: !3731)
!3958 = !DILocation(line: 174, column: 37, scope: !3731)
!3959 = !DILocation(line: 174, column: 5, scope: !3731)
!3960 = !DILocation(line: 59, column: 12, scope: !2432, inlinedAt: !3742)
!3961 = !DILocation(line: 59, column: 10, scope: !2432, inlinedAt: !3742)
!3962 = !DILocation(line: 59, column: 17, scope: !2435, inlinedAt: !3742)
!3963 = !DILocation(line: 59, column: 21, scope: !2435, inlinedAt: !3742)
!3964 = !DILocation(line: 59, column: 19, scope: !2435, inlinedAt: !3742)
!3965 = !DILocation(line: 59, column: 5, scope: !2435, inlinedAt: !3742)
!3966 = !DILocation(line: 60, column: 33, scope: !2441, inlinedAt: !3742)
!3967 = !DILocation(line: 60, column: 28, scope: !2441, inlinedAt: !3742)
!3968 = !DILocation(line: 60, column: 48, scope: !2441, inlinedAt: !3742)
!3969 = !DILocation(line: 60, column: 36, scope: !2441, inlinedAt: !3742)
!3970 = !DILocation(line: 60, column: 57, scope: !2441, inlinedAt: !3742)
!3971 = !DILocation(line: 60, column: 54, scope: !2441, inlinedAt: !3742)
!3972 = !DILocation(line: 60, column: 21, scope: !2441, inlinedAt: !3742)
!3973 = !DILocation(line: 60, column: 15, scope: !2441, inlinedAt: !3742)
!3974 = !DILocation(line: 60, column: 14, scope: !2441, inlinedAt: !3742)
!3975 = !DILocation(line: 60, column: 9, scope: !2441, inlinedAt: !3742)
!3976 = !DILocation(line: 60, column: 19, scope: !2441, inlinedAt: !3742)
!3977 = !DILocation(line: 61, column: 34, scope: !2441, inlinedAt: !3742)
!3978 = !DILocation(line: 61, column: 29, scope: !2441, inlinedAt: !3742)
!3979 = !DILocation(line: 61, column: 49, scope: !2441, inlinedAt: !3742)
!3980 = !DILocation(line: 61, column: 37, scope: !2441, inlinedAt: !3742)
!3981 = !DILocation(line: 61, column: 58, scope: !2441, inlinedAt: !3742)
!3982 = !DILocation(line: 61, column: 55, scope: !2441, inlinedAt: !3742)
!3983 = !DILocation(line: 61, column: 22, scope: !2441, inlinedAt: !3742)
!3984 = !DILocation(line: 61, column: 15, scope: !2441, inlinedAt: !3742)
!3985 = !DILocation(line: 61, column: 14, scope: !2441, inlinedAt: !3742)
!3986 = !DILocation(line: 61, column: 16, scope: !2441, inlinedAt: !3742)
!3987 = !DILocation(line: 61, column: 9, scope: !2441, inlinedAt: !3742)
!3988 = !DILocation(line: 61, column: 20, scope: !2441, inlinedAt: !3742)
!3989 = !DILocation(line: 59, column: 26, scope: !2465, inlinedAt: !3742)
!3990 = !DILocation(line: 59, column: 5, scope: !2465, inlinedAt: !3742)
!3991 = !DILocation(line: 175, column: 1, scope: !3731)
!3992 = distinct !DISubprogram(name: "spatial_compose_daub97i_dy_8bit", scope: !174, file: !174, line: 451, type: !1596, isLocal: true, isDefinition: true, scopeLine: 452, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!3993 = !DILocation(line: 338, column: 91, scope: !1103, inlinedAt: !3994)
!3994 = distinct !DILocation(line: 464, column: 24, scope: !3992)
!3995 = !DILocation(line: 338, column: 98, scope: !1103, inlinedAt: !3994)
!3996 = !DILocation(line: 338, column: 91, scope: !1103, inlinedAt: !3997)
!3997 = distinct !DILocation(line: 463, column: 24, scope: !3992)
!3998 = !DILocation(line: 338, column: 98, scope: !1103, inlinedAt: !3997)
!3999 = !DILocalVariable(name: "d", arg: 1, scope: !3992, file: !174, line: 451, type: !37)
!4000 = !DILocation(line: 451, column: 57, scope: !3992)
!4001 = !DILocalVariable(name: "level", arg: 2, scope: !3992, file: !174, line: 451, type: !18)
!4002 = !DILocation(line: 451, column: 64, scope: !3992)
!4003 = !DILocalVariable(name: "width", arg: 3, scope: !3992, file: !174, line: 451, type: !18)
!4004 = !DILocation(line: 451, column: 75, scope: !3992)
!4005 = !DILocalVariable(name: "height", arg: 4, scope: !3992, file: !174, line: 451, type: !18)
!4006 = !DILocation(line: 451, column: 86, scope: !3992)
!4007 = !DILocalVariable(name: "stride", arg: 5, scope: !3992, file: !174, line: 451, type: !18)
!4008 = !DILocation(line: 451, column: 98, scope: !3992)
!4009 = !DILocalVariable(name: "vertical_compose_l0", scope: !3992, file: !174, line: 453, type: !1617)
!4010 = !DILocation(line: 453, column: 27, scope: !3992)
!4011 = !DILocation(line: 453, column: 56, scope: !3992)
!4012 = !DILocation(line: 453, column: 59, scope: !3992)
!4013 = !DILocation(line: 453, column: 49, scope: !3992)
!4014 = !DILocalVariable(name: "vertical_compose_h0", scope: !3992, file: !174, line: 454, type: !1617)
!4015 = !DILocation(line: 454, column: 27, scope: !3992)
!4016 = !DILocation(line: 454, column: 56, scope: !3992)
!4017 = !DILocation(line: 454, column: 59, scope: !3992)
!4018 = !DILocation(line: 454, column: 49, scope: !3992)
!4019 = !DILocalVariable(name: "vertical_compose_l1", scope: !3992, file: !174, line: 455, type: !1617)
!4020 = !DILocation(line: 455, column: 27, scope: !3992)
!4021 = !DILocation(line: 455, column: 56, scope: !3992)
!4022 = !DILocation(line: 455, column: 59, scope: !3992)
!4023 = !DILocation(line: 455, column: 49, scope: !3992)
!4024 = !DILocalVariable(name: "vertical_compose_h1", scope: !3992, file: !174, line: 456, type: !1617)
!4025 = !DILocation(line: 456, column: 27, scope: !3992)
!4026 = !DILocation(line: 456, column: 56, scope: !3992)
!4027 = !DILocation(line: 456, column: 59, scope: !3992)
!4028 = !DILocation(line: 456, column: 49, scope: !3992)
!4029 = !DILocalVariable(name: "cs", scope: !3992, file: !174, line: 457, type: !903)
!4030 = !DILocation(line: 457, column: 17, scope: !3992)
!4031 = !DILocation(line: 457, column: 22, scope: !3992)
!4032 = !DILocation(line: 457, column: 25, scope: !3992)
!4033 = !DILocation(line: 457, column: 30, scope: !3992)
!4034 = !DILocation(line: 457, column: 28, scope: !3992)
!4035 = !DILocalVariable(name: "i", scope: !3992, file: !174, line: 459, type: !18)
!4036 = !DILocation(line: 459, column: 9, scope: !3992)
!4037 = !DILocalVariable(name: "y", scope: !3992, file: !174, line: 459, type: !18)
!4038 = !DILocation(line: 459, column: 12, scope: !3992)
!4039 = !DILocation(line: 459, column: 16, scope: !3992)
!4040 = !DILocation(line: 459, column: 20, scope: !3992)
!4041 = !DILocalVariable(name: "b", scope: !3992, file: !174, line: 460, type: !4042)
!4042 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 384, align: 64, elements: !4043)
!4043 = !{!4044}
!4044 = !DISubrange(count: 6)
!4045 = !DILocation(line: 460, column: 14, scope: !3992)
!4046 = !DILocation(line: 461, column: 12, scope: !4047)
!4047 = distinct !DILexicalBlock(scope: !3992, file: !174, line: 461, column: 5)
!4048 = !DILocation(line: 461, column: 10, scope: !4047)
!4049 = !DILocation(line: 461, column: 17, scope: !4050)
!4050 = !DILexicalBlockFile(scope: !4051, file: !174, discriminator: 1)
!4051 = distinct !DILexicalBlock(scope: !4047, file: !174, line: 461, column: 5)
!4052 = !DILocation(line: 461, column: 19, scope: !4050)
!4053 = !DILocation(line: 461, column: 5, scope: !4050)
!4054 = !DILocation(line: 462, column: 22, scope: !4051)
!4055 = !DILocation(line: 462, column: 16, scope: !4051)
!4056 = !DILocation(line: 462, column: 20, scope: !4051)
!4057 = !DILocation(line: 462, column: 11, scope: !4051)
!4058 = !DILocation(line: 462, column: 9, scope: !4051)
!4059 = !DILocation(line: 462, column: 14, scope: !4051)
!4060 = !DILocation(line: 461, column: 25, scope: !4061)
!4061 = !DILexicalBlockFile(scope: !4051, file: !174, discriminator: 2)
!4062 = !DILocation(line: 461, column: 5, scope: !4061)
!4063 = distinct !{!4063, !4064}
!4064 = !DILocation(line: 461, column: 5, scope: !3992)
!4065 = !DILocation(line: 463, column: 12, scope: !3992)
!4066 = !DILocation(line: 463, column: 15, scope: !3992)
!4067 = !DILocation(line: 463, column: 38, scope: !3992)
!4068 = !DILocation(line: 463, column: 39, scope: !3992)
!4069 = !DILocation(line: 463, column: 43, scope: !3992)
!4070 = !DILocation(line: 463, column: 49, scope: !3992)
!4071 = !DILocation(line: 463, column: 24, scope: !3992)
!4072 = !DILocation(line: 340, column: 10, scope: !1127, inlinedAt: !3997)
!4073 = !DILocation(line: 340, column: 9, scope: !1103, inlinedAt: !3997)
!4074 = !DILocation(line: 341, column: 9, scope: !1127, inlinedAt: !3997)
!4075 = !DILocation(line: 343, column: 5, scope: !1103, inlinedAt: !3997)
!4076 = !DILocation(line: 343, column: 22, scope: !1132, inlinedAt: !3997)
!4077 = !DILocation(line: 343, column: 36, scope: !1132, inlinedAt: !3997)
!4078 = !DILocation(line: 343, column: 24, scope: !1132, inlinedAt: !3997)
!4079 = !DILocation(line: 343, column: 5, scope: !1132, inlinedAt: !3997)
!4080 = !DILocation(line: 344, column: 14, scope: !1137, inlinedAt: !3997)
!4081 = !DILocation(line: 344, column: 13, scope: !1137, inlinedAt: !3997)
!4082 = !DILocation(line: 344, column: 11, scope: !1137, inlinedAt: !3997)
!4083 = !DILocation(line: 345, column: 13, scope: !1141, inlinedAt: !3997)
!4084 = !DILocation(line: 345, column: 15, scope: !1141, inlinedAt: !3997)
!4085 = !DILocation(line: 345, column: 13, scope: !1137, inlinedAt: !3997)
!4086 = !DILocation(line: 346, column: 22, scope: !1141, inlinedAt: !3997)
!4087 = !DILocation(line: 346, column: 20, scope: !1141, inlinedAt: !3997)
!4088 = !DILocation(line: 346, column: 15, scope: !1141, inlinedAt: !3997)
!4089 = !DILocation(line: 346, column: 13, scope: !1141, inlinedAt: !3997)
!4090 = !DILocation(line: 343, column: 5, scope: !1149, inlinedAt: !3997)
!4091 = !DILocation(line: 348, column: 12, scope: !1103, inlinedAt: !3997)
!4092 = !DILocation(line: 348, column: 5, scope: !1103, inlinedAt: !3997)
!4093 = !DILocation(line: 349, column: 1, scope: !1103, inlinedAt: !3997)
!4094 = !DILocation(line: 463, column: 53, scope: !3992)
!4095 = !DILocation(line: 463, column: 52, scope: !3992)
!4096 = !DILocation(line: 463, column: 22, scope: !3992)
!4097 = !DILocation(line: 463, column: 5, scope: !3992)
!4098 = !DILocation(line: 463, column: 10, scope: !3992)
!4099 = !DILocation(line: 464, column: 12, scope: !3992)
!4100 = !DILocation(line: 464, column: 15, scope: !3992)
!4101 = !DILocation(line: 464, column: 38, scope: !3992)
!4102 = !DILocation(line: 464, column: 39, scope: !3992)
!4103 = !DILocation(line: 464, column: 43, scope: !3992)
!4104 = !DILocation(line: 464, column: 49, scope: !3992)
!4105 = !DILocation(line: 464, column: 24, scope: !3992)
!4106 = !DILocation(line: 340, column: 10, scope: !1127, inlinedAt: !3994)
!4107 = !DILocation(line: 340, column: 9, scope: !1103, inlinedAt: !3994)
!4108 = !DILocation(line: 341, column: 9, scope: !1127, inlinedAt: !3994)
!4109 = !DILocation(line: 343, column: 5, scope: !1103, inlinedAt: !3994)
!4110 = !DILocation(line: 343, column: 22, scope: !1132, inlinedAt: !3994)
!4111 = !DILocation(line: 343, column: 36, scope: !1132, inlinedAt: !3994)
!4112 = !DILocation(line: 343, column: 24, scope: !1132, inlinedAt: !3994)
!4113 = !DILocation(line: 343, column: 5, scope: !1132, inlinedAt: !3994)
!4114 = !DILocation(line: 344, column: 14, scope: !1137, inlinedAt: !3994)
!4115 = !DILocation(line: 344, column: 13, scope: !1137, inlinedAt: !3994)
!4116 = !DILocation(line: 344, column: 11, scope: !1137, inlinedAt: !3994)
!4117 = !DILocation(line: 345, column: 13, scope: !1141, inlinedAt: !3994)
!4118 = !DILocation(line: 345, column: 15, scope: !1141, inlinedAt: !3994)
!4119 = !DILocation(line: 345, column: 13, scope: !1137, inlinedAt: !3994)
!4120 = !DILocation(line: 346, column: 22, scope: !1141, inlinedAt: !3994)
!4121 = !DILocation(line: 346, column: 20, scope: !1141, inlinedAt: !3994)
!4122 = !DILocation(line: 346, column: 15, scope: !1141, inlinedAt: !3994)
!4123 = !DILocation(line: 346, column: 13, scope: !1141, inlinedAt: !3994)
!4124 = !DILocation(line: 343, column: 5, scope: !1149, inlinedAt: !3994)
!4125 = !DILocation(line: 348, column: 12, scope: !1103, inlinedAt: !3994)
!4126 = !DILocation(line: 348, column: 5, scope: !1103, inlinedAt: !3994)
!4127 = !DILocation(line: 349, column: 1, scope: !1103, inlinedAt: !3994)
!4128 = !DILocation(line: 464, column: 53, scope: !3992)
!4129 = !DILocation(line: 464, column: 52, scope: !3992)
!4130 = !DILocation(line: 464, column: 22, scope: !3992)
!4131 = !DILocation(line: 464, column: 5, scope: !3992)
!4132 = !DILocation(line: 464, column: 10, scope: !3992)
!4133 = !DILocation(line: 466, column: 8, scope: !4134)
!4134 = distinct !DILexicalBlock(scope: !3992, file: !174, line: 466, column: 8)
!4135 = !DILocation(line: 466, column: 9, scope: !4134)
!4136 = !DILocation(line: 466, column: 22, scope: !4134)
!4137 = !DILocation(line: 466, column: 11, scope: !4134)
!4138 = !DILocation(line: 466, column: 8, scope: !3992)
!4139 = !DILocation(line: 466, column: 30, scope: !4140)
!4140 = !DILexicalBlockFile(scope: !4134, file: !174, discriminator: 1)
!4141 = !DILocation(line: 466, column: 50, scope: !4140)
!4142 = !DILocation(line: 466, column: 56, scope: !4140)
!4143 = !DILocation(line: 466, column: 62, scope: !4140)
!4144 = !DILocation(line: 466, column: 68, scope: !4140)
!4145 = !DILocation(line: 467, column: 8, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !3992, file: !174, line: 467, column: 8)
!4147 = !DILocation(line: 467, column: 9, scope: !4146)
!4148 = !DILocation(line: 467, column: 22, scope: !4146)
!4149 = !DILocation(line: 467, column: 11, scope: !4146)
!4150 = !DILocation(line: 467, column: 8, scope: !3992)
!4151 = !DILocation(line: 467, column: 30, scope: !4152)
!4152 = !DILexicalBlockFile(scope: !4146, file: !174, discriminator: 1)
!4153 = !DILocation(line: 467, column: 50, scope: !4152)
!4154 = !DILocation(line: 467, column: 56, scope: !4152)
!4155 = !DILocation(line: 467, column: 62, scope: !4152)
!4156 = !DILocation(line: 467, column: 68, scope: !4152)
!4157 = !DILocation(line: 468, column: 8, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !3992, file: !174, line: 468, column: 8)
!4159 = !DILocation(line: 468, column: 9, scope: !4158)
!4160 = !DILocation(line: 468, column: 22, scope: !4158)
!4161 = !DILocation(line: 468, column: 11, scope: !4158)
!4162 = !DILocation(line: 468, column: 8, scope: !3992)
!4163 = !DILocation(line: 468, column: 30, scope: !4164)
!4164 = !DILexicalBlockFile(scope: !4158, file: !174, discriminator: 1)
!4165 = !DILocation(line: 468, column: 50, scope: !4164)
!4166 = !DILocation(line: 468, column: 56, scope: !4164)
!4167 = !DILocation(line: 468, column: 62, scope: !4164)
!4168 = !DILocation(line: 468, column: 68, scope: !4164)
!4169 = !DILocation(line: 469, column: 8, scope: !4170)
!4170 = distinct !DILexicalBlock(scope: !3992, file: !174, line: 469, column: 8)
!4171 = !DILocation(line: 469, column: 9, scope: !4170)
!4172 = !DILocation(line: 469, column: 22, scope: !4170)
!4173 = !DILocation(line: 469, column: 11, scope: !4170)
!4174 = !DILocation(line: 469, column: 8, scope: !3992)
!4175 = !DILocation(line: 469, column: 30, scope: !4176)
!4176 = !DILexicalBlockFile(scope: !4170, file: !174, discriminator: 1)
!4177 = !DILocation(line: 469, column: 50, scope: !4176)
!4178 = !DILocation(line: 469, column: 56, scope: !4176)
!4179 = !DILocation(line: 469, column: 62, scope: !4176)
!4180 = !DILocation(line: 469, column: 68, scope: !4176)
!4181 = !DILocation(line: 471, column: 8, scope: !4182)
!4182 = distinct !DILexicalBlock(scope: !3992, file: !174, line: 471, column: 8)
!4183 = !DILocation(line: 471, column: 9, scope: !4182)
!4184 = !DILocation(line: 471, column: 22, scope: !4182)
!4185 = !DILocation(line: 471, column: 11, scope: !4182)
!4186 = !DILocation(line: 471, column: 8, scope: !3992)
!4187 = !DILocation(line: 471, column: 30, scope: !4188)
!4188 = !DILexicalBlockFile(scope: !4182, file: !174, discriminator: 1)
!4189 = !DILocation(line: 471, column: 33, scope: !4188)
!4190 = !DILocation(line: 471, column: 52, scope: !4188)
!4191 = !DILocation(line: 471, column: 58, scope: !4188)
!4192 = !DILocation(line: 471, column: 61, scope: !4188)
!4193 = !DILocation(line: 471, column: 67, scope: !4188)
!4194 = !DILocation(line: 472, column: 8, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !3992, file: !174, line: 472, column: 8)
!4196 = !DILocation(line: 472, column: 9, scope: !4195)
!4197 = !DILocation(line: 472, column: 22, scope: !4195)
!4198 = !DILocation(line: 472, column: 11, scope: !4195)
!4199 = !DILocation(line: 472, column: 8, scope: !3992)
!4200 = !DILocation(line: 472, column: 30, scope: !4201)
!4201 = !DILexicalBlockFile(scope: !4195, file: !174, discriminator: 1)
!4202 = !DILocation(line: 472, column: 33, scope: !4201)
!4203 = !DILocation(line: 472, column: 52, scope: !4201)
!4204 = !DILocation(line: 472, column: 58, scope: !4201)
!4205 = !DILocation(line: 472, column: 61, scope: !4201)
!4206 = !DILocation(line: 472, column: 67, scope: !4201)
!4207 = !DILocation(line: 474, column: 12, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !3992, file: !174, line: 474, column: 5)
!4209 = !DILocation(line: 474, column: 10, scope: !4208)
!4210 = !DILocation(line: 474, column: 17, scope: !4211)
!4211 = !DILexicalBlockFile(scope: !4212, file: !174, discriminator: 1)
!4212 = distinct !DILexicalBlock(scope: !4208, file: !174, line: 474, column: 5)
!4213 = !DILocation(line: 474, column: 19, scope: !4211)
!4214 = !DILocation(line: 474, column: 5, scope: !4211)
!4215 = !DILocation(line: 475, column: 22, scope: !4212)
!4216 = !DILocation(line: 475, column: 23, scope: !4212)
!4217 = !DILocation(line: 475, column: 20, scope: !4212)
!4218 = !DILocation(line: 475, column: 15, scope: !4212)
!4219 = !DILocation(line: 475, column: 9, scope: !4212)
!4220 = !DILocation(line: 475, column: 13, scope: !4212)
!4221 = !DILocation(line: 475, column: 18, scope: !4212)
!4222 = !DILocation(line: 474, column: 25, scope: !4223)
!4223 = !DILexicalBlockFile(scope: !4212, file: !174, discriminator: 2)
!4224 = !DILocation(line: 474, column: 5, scope: !4223)
!4225 = distinct !{!4225, !4226}
!4226 = !DILocation(line: 474, column: 5, scope: !3992)
!4227 = !DILocation(line: 476, column: 5, scope: !3992)
!4228 = !DILocation(line: 476, column: 9, scope: !3992)
!4229 = !DILocation(line: 476, column: 11, scope: !3992)
!4230 = !DILocation(line: 477, column: 1, scope: !3992)
!4231 = distinct !DISubprogram(name: "vertical_compose_daub97iL0_8bit", scope: !174, file: !174, line: 315, type: !1619, isLocal: true, isDefinition: true, scopeLine: 316, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!4232 = !DILocalVariable(name: "_b0", arg: 1, scope: !4231, file: !174, line: 315, type: !20)
!4233 = !DILocation(line: 315, column: 54, scope: !4231)
!4234 = !DILocalVariable(name: "_b1", arg: 2, scope: !4231, file: !174, line: 315, type: !20)
!4235 = !DILocation(line: 315, column: 68, scope: !4231)
!4236 = !DILocalVariable(name: "_b2", arg: 3, scope: !4231, file: !174, line: 315, type: !20)
!4237 = !DILocation(line: 315, column: 82, scope: !4231)
!4238 = !DILocalVariable(name: "width", arg: 4, scope: !4231, file: !174, line: 315, type: !18)
!4239 = !DILocation(line: 315, column: 91, scope: !4231)
!4240 = !DILocalVariable(name: "i", scope: !4231, file: !174, line: 317, type: !18)
!4241 = !DILocation(line: 317, column: 9, scope: !4231)
!4242 = !DILocalVariable(name: "b0", scope: !4231, file: !174, line: 318, type: !24)
!4243 = !DILocation(line: 318, column: 14, scope: !4231)
!4244 = !DILocation(line: 318, column: 30, scope: !4231)
!4245 = !DILocation(line: 318, column: 19, scope: !4231)
!4246 = !DILocalVariable(name: "b1", scope: !4231, file: !174, line: 319, type: !24)
!4247 = !DILocation(line: 319, column: 14, scope: !4231)
!4248 = !DILocation(line: 319, column: 30, scope: !4231)
!4249 = !DILocation(line: 319, column: 19, scope: !4231)
!4250 = !DILocalVariable(name: "b2", scope: !4231, file: !174, line: 320, type: !24)
!4251 = !DILocation(line: 320, column: 14, scope: !4231)
!4252 = !DILocation(line: 320, column: 30, scope: !4231)
!4253 = !DILocation(line: 320, column: 19, scope: !4231)
!4254 = !DILocation(line: 322, column: 10, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4231, file: !174, line: 322, column: 5)
!4256 = !DILocation(line: 322, column: 9, scope: !4255)
!4257 = !DILocation(line: 322, column: 14, scope: !4258)
!4258 = !DILexicalBlockFile(scope: !4259, file: !174, discriminator: 1)
!4259 = distinct !DILexicalBlock(scope: !4255, file: !174, line: 322, column: 5)
!4260 = !DILocation(line: 322, column: 16, scope: !4258)
!4261 = !DILocation(line: 322, column: 15, scope: !4258)
!4262 = !DILocation(line: 322, column: 5, scope: !4258)
!4263 = !DILocation(line: 323, column: 32, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4259, file: !174, line: 322, column: 27)
!4265 = !DILocation(line: 323, column: 29, scope: !4264)
!4266 = !DILocation(line: 323, column: 18, scope: !4264)
!4267 = !DILocation(line: 323, column: 54, scope: !4264)
!4268 = !DILocation(line: 323, column: 51, scope: !4264)
!4269 = !DILocation(line: 323, column: 72, scope: !4264)
!4270 = !DILocation(line: 323, column: 69, scope: !4264)
!4271 = !DILocation(line: 323, column: 59, scope: !4264)
!4272 = !DILocation(line: 323, column: 57, scope: !4264)
!4273 = !DILocation(line: 323, column: 49, scope: !4264)
!4274 = !DILocation(line: 323, column: 76, scope: !4264)
!4275 = !DILocation(line: 323, column: 84, scope: !4264)
!4276 = !DILocation(line: 323, column: 36, scope: !4264)
!4277 = !DILocation(line: 323, column: 17, scope: !4264)
!4278 = !DILocation(line: 323, column: 12, scope: !4264)
!4279 = !DILocation(line: 323, column: 9, scope: !4264)
!4280 = !DILocation(line: 323, column: 15, scope: !4264)
!4281 = !DILocation(line: 324, column: 5, scope: !4264)
!4282 = !DILocation(line: 322, column: 24, scope: !4283)
!4283 = !DILexicalBlockFile(scope: !4259, file: !174, discriminator: 2)
!4284 = !DILocation(line: 322, column: 5, scope: !4283)
!4285 = distinct !{!4285, !4286}
!4286 = !DILocation(line: 322, column: 5, scope: !4231)
!4287 = !DILocation(line: 325, column: 1, scope: !4231)
!4288 = distinct !DISubprogram(name: "vertical_compose_daub97iH0_8bit", scope: !174, file: !174, line: 291, type: !1619, isLocal: true, isDefinition: true, scopeLine: 292, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!4289 = !DILocalVariable(name: "_b0", arg: 1, scope: !4288, file: !174, line: 291, type: !20)
!4290 = !DILocation(line: 291, column: 54, scope: !4288)
!4291 = !DILocalVariable(name: "_b1", arg: 2, scope: !4288, file: !174, line: 291, type: !20)
!4292 = !DILocation(line: 291, column: 68, scope: !4288)
!4293 = !DILocalVariable(name: "_b2", arg: 3, scope: !4288, file: !174, line: 291, type: !20)
!4294 = !DILocation(line: 291, column: 82, scope: !4288)
!4295 = !DILocalVariable(name: "width", arg: 4, scope: !4288, file: !174, line: 291, type: !18)
!4296 = !DILocation(line: 291, column: 91, scope: !4288)
!4297 = !DILocalVariable(name: "i", scope: !4288, file: !174, line: 293, type: !18)
!4298 = !DILocation(line: 293, column: 9, scope: !4288)
!4299 = !DILocalVariable(name: "b0", scope: !4288, file: !174, line: 294, type: !24)
!4300 = !DILocation(line: 294, column: 14, scope: !4288)
!4301 = !DILocation(line: 294, column: 30, scope: !4288)
!4302 = !DILocation(line: 294, column: 19, scope: !4288)
!4303 = !DILocalVariable(name: "b1", scope: !4288, file: !174, line: 295, type: !24)
!4304 = !DILocation(line: 295, column: 14, scope: !4288)
!4305 = !DILocation(line: 295, column: 30, scope: !4288)
!4306 = !DILocation(line: 295, column: 19, scope: !4288)
!4307 = !DILocalVariable(name: "b2", scope: !4288, file: !174, line: 296, type: !24)
!4308 = !DILocation(line: 296, column: 14, scope: !4288)
!4309 = !DILocation(line: 296, column: 30, scope: !4288)
!4310 = !DILocation(line: 296, column: 19, scope: !4288)
!4311 = !DILocation(line: 298, column: 10, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4288, file: !174, line: 298, column: 5)
!4313 = !DILocation(line: 298, column: 9, scope: !4312)
!4314 = !DILocation(line: 298, column: 14, scope: !4315)
!4315 = !DILexicalBlockFile(scope: !4316, file: !174, discriminator: 1)
!4316 = distinct !DILexicalBlock(scope: !4312, file: !174, line: 298, column: 5)
!4317 = !DILocation(line: 298, column: 16, scope: !4315)
!4318 = !DILocation(line: 298, column: 15, scope: !4315)
!4319 = !DILocation(line: 298, column: 5, scope: !4315)
!4320 = !DILocation(line: 299, column: 32, scope: !4321)
!4321 = distinct !DILexicalBlock(scope: !4316, file: !174, line: 298, column: 27)
!4322 = !DILocation(line: 299, column: 29, scope: !4321)
!4323 = !DILocation(line: 299, column: 18, scope: !4321)
!4324 = !DILocation(line: 299, column: 54, scope: !4321)
!4325 = !DILocation(line: 299, column: 51, scope: !4321)
!4326 = !DILocation(line: 299, column: 72, scope: !4321)
!4327 = !DILocation(line: 299, column: 69, scope: !4321)
!4328 = !DILocation(line: 299, column: 59, scope: !4321)
!4329 = !DILocation(line: 299, column: 57, scope: !4321)
!4330 = !DILocation(line: 299, column: 49, scope: !4321)
!4331 = !DILocation(line: 299, column: 76, scope: !4321)
!4332 = !DILocation(line: 299, column: 84, scope: !4321)
!4333 = !DILocation(line: 299, column: 36, scope: !4321)
!4334 = !DILocation(line: 299, column: 17, scope: !4321)
!4335 = !DILocation(line: 299, column: 12, scope: !4321)
!4336 = !DILocation(line: 299, column: 9, scope: !4321)
!4337 = !DILocation(line: 299, column: 15, scope: !4321)
!4338 = !DILocation(line: 300, column: 5, scope: !4321)
!4339 = !DILocation(line: 298, column: 24, scope: !4340)
!4340 = !DILexicalBlockFile(scope: !4316, file: !174, discriminator: 2)
!4341 = !DILocation(line: 298, column: 5, scope: !4340)
!4342 = distinct !{!4342, !4343}
!4343 = !DILocation(line: 298, column: 5, scope: !4288)
!4344 = !DILocation(line: 301, column: 1, scope: !4288)
!4345 = distinct !DISubprogram(name: "vertical_compose_daub97iL1_8bit", scope: !174, file: !174, line: 327, type: !1619, isLocal: true, isDefinition: true, scopeLine: 328, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!4346 = !DILocalVariable(name: "_b0", arg: 1, scope: !4345, file: !174, line: 327, type: !20)
!4347 = !DILocation(line: 327, column: 54, scope: !4345)
!4348 = !DILocalVariable(name: "_b1", arg: 2, scope: !4345, file: !174, line: 327, type: !20)
!4349 = !DILocation(line: 327, column: 68, scope: !4345)
!4350 = !DILocalVariable(name: "_b2", arg: 3, scope: !4345, file: !174, line: 327, type: !20)
!4351 = !DILocation(line: 327, column: 82, scope: !4345)
!4352 = !DILocalVariable(name: "width", arg: 4, scope: !4345, file: !174, line: 327, type: !18)
!4353 = !DILocation(line: 327, column: 91, scope: !4345)
!4354 = !DILocalVariable(name: "i", scope: !4345, file: !174, line: 329, type: !18)
!4355 = !DILocation(line: 329, column: 9, scope: !4345)
!4356 = !DILocalVariable(name: "b0", scope: !4345, file: !174, line: 330, type: !24)
!4357 = !DILocation(line: 330, column: 14, scope: !4345)
!4358 = !DILocation(line: 330, column: 30, scope: !4345)
!4359 = !DILocation(line: 330, column: 19, scope: !4345)
!4360 = !DILocalVariable(name: "b1", scope: !4345, file: !174, line: 331, type: !24)
!4361 = !DILocation(line: 331, column: 14, scope: !4345)
!4362 = !DILocation(line: 331, column: 30, scope: !4345)
!4363 = !DILocation(line: 331, column: 19, scope: !4345)
!4364 = !DILocalVariable(name: "b2", scope: !4345, file: !174, line: 332, type: !24)
!4365 = !DILocation(line: 332, column: 14, scope: !4345)
!4366 = !DILocation(line: 332, column: 30, scope: !4345)
!4367 = !DILocation(line: 332, column: 19, scope: !4345)
!4368 = !DILocation(line: 334, column: 10, scope: !4369)
!4369 = distinct !DILexicalBlock(scope: !4345, file: !174, line: 334, column: 5)
!4370 = !DILocation(line: 334, column: 9, scope: !4369)
!4371 = !DILocation(line: 334, column: 14, scope: !4372)
!4372 = !DILexicalBlockFile(scope: !4373, file: !174, discriminator: 1)
!4373 = distinct !DILexicalBlock(scope: !4369, file: !174, line: 334, column: 5)
!4374 = !DILocation(line: 334, column: 16, scope: !4372)
!4375 = !DILocation(line: 334, column: 15, scope: !4372)
!4376 = !DILocation(line: 334, column: 5, scope: !4372)
!4377 = !DILocation(line: 335, column: 32, scope: !4378)
!4378 = distinct !DILexicalBlock(scope: !4373, file: !174, line: 334, column: 27)
!4379 = !DILocation(line: 335, column: 29, scope: !4378)
!4380 = !DILocation(line: 335, column: 18, scope: !4378)
!4381 = !DILocation(line: 335, column: 54, scope: !4378)
!4382 = !DILocation(line: 335, column: 51, scope: !4378)
!4383 = !DILocation(line: 335, column: 72, scope: !4378)
!4384 = !DILocation(line: 335, column: 69, scope: !4378)
!4385 = !DILocation(line: 335, column: 59, scope: !4378)
!4386 = !DILocation(line: 335, column: 57, scope: !4378)
!4387 = !DILocation(line: 335, column: 49, scope: !4378)
!4388 = !DILocation(line: 335, column: 76, scope: !4378)
!4389 = !DILocation(line: 335, column: 84, scope: !4378)
!4390 = !DILocation(line: 335, column: 36, scope: !4378)
!4391 = !DILocation(line: 335, column: 17, scope: !4378)
!4392 = !DILocation(line: 335, column: 12, scope: !4378)
!4393 = !DILocation(line: 335, column: 9, scope: !4378)
!4394 = !DILocation(line: 335, column: 15, scope: !4378)
!4395 = !DILocation(line: 336, column: 5, scope: !4378)
!4396 = !DILocation(line: 334, column: 24, scope: !4397)
!4397 = !DILexicalBlockFile(scope: !4373, file: !174, discriminator: 2)
!4398 = !DILocation(line: 334, column: 5, scope: !4397)
!4399 = distinct !{!4399, !4400}
!4400 = !DILocation(line: 334, column: 5, scope: !4345)
!4401 = !DILocation(line: 337, column: 1, scope: !4345)
!4402 = distinct !DISubprogram(name: "vertical_compose_daub97iH1_8bit", scope: !174, file: !174, line: 303, type: !1619, isLocal: true, isDefinition: true, scopeLine: 304, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!4403 = !DILocalVariable(name: "_b0", arg: 1, scope: !4402, file: !174, line: 303, type: !20)
!4404 = !DILocation(line: 303, column: 54, scope: !4402)
!4405 = !DILocalVariable(name: "_b1", arg: 2, scope: !4402, file: !174, line: 303, type: !20)
!4406 = !DILocation(line: 303, column: 68, scope: !4402)
!4407 = !DILocalVariable(name: "_b2", arg: 3, scope: !4402, file: !174, line: 303, type: !20)
!4408 = !DILocation(line: 303, column: 82, scope: !4402)
!4409 = !DILocalVariable(name: "width", arg: 4, scope: !4402, file: !174, line: 303, type: !18)
!4410 = !DILocation(line: 303, column: 91, scope: !4402)
!4411 = !DILocalVariable(name: "i", scope: !4402, file: !174, line: 305, type: !18)
!4412 = !DILocation(line: 305, column: 9, scope: !4402)
!4413 = !DILocalVariable(name: "b0", scope: !4402, file: !174, line: 306, type: !24)
!4414 = !DILocation(line: 306, column: 14, scope: !4402)
!4415 = !DILocation(line: 306, column: 30, scope: !4402)
!4416 = !DILocation(line: 306, column: 19, scope: !4402)
!4417 = !DILocalVariable(name: "b1", scope: !4402, file: !174, line: 307, type: !24)
!4418 = !DILocation(line: 307, column: 14, scope: !4402)
!4419 = !DILocation(line: 307, column: 30, scope: !4402)
!4420 = !DILocation(line: 307, column: 19, scope: !4402)
!4421 = !DILocalVariable(name: "b2", scope: !4402, file: !174, line: 308, type: !24)
!4422 = !DILocation(line: 308, column: 14, scope: !4402)
!4423 = !DILocation(line: 308, column: 30, scope: !4402)
!4424 = !DILocation(line: 308, column: 19, scope: !4402)
!4425 = !DILocation(line: 310, column: 10, scope: !4426)
!4426 = distinct !DILexicalBlock(scope: !4402, file: !174, line: 310, column: 5)
!4427 = !DILocation(line: 310, column: 9, scope: !4426)
!4428 = !DILocation(line: 310, column: 14, scope: !4429)
!4429 = !DILexicalBlockFile(scope: !4430, file: !174, discriminator: 1)
!4430 = distinct !DILexicalBlock(scope: !4426, file: !174, line: 310, column: 5)
!4431 = !DILocation(line: 310, column: 16, scope: !4429)
!4432 = !DILocation(line: 310, column: 15, scope: !4429)
!4433 = !DILocation(line: 310, column: 5, scope: !4429)
!4434 = !DILocation(line: 311, column: 32, scope: !4435)
!4435 = distinct !DILexicalBlock(scope: !4430, file: !174, line: 310, column: 27)
!4436 = !DILocation(line: 311, column: 29, scope: !4435)
!4437 = !DILocation(line: 311, column: 18, scope: !4435)
!4438 = !DILocation(line: 311, column: 54, scope: !4435)
!4439 = !DILocation(line: 311, column: 51, scope: !4435)
!4440 = !DILocation(line: 311, column: 72, scope: !4435)
!4441 = !DILocation(line: 311, column: 69, scope: !4435)
!4442 = !DILocation(line: 311, column: 59, scope: !4435)
!4443 = !DILocation(line: 311, column: 57, scope: !4435)
!4444 = !DILocation(line: 311, column: 49, scope: !4435)
!4445 = !DILocation(line: 311, column: 76, scope: !4435)
!4446 = !DILocation(line: 311, column: 82, scope: !4435)
!4447 = !DILocation(line: 311, column: 36, scope: !4435)
!4448 = !DILocation(line: 311, column: 17, scope: !4435)
!4449 = !DILocation(line: 311, column: 12, scope: !4435)
!4450 = !DILocation(line: 311, column: 9, scope: !4435)
!4451 = !DILocation(line: 311, column: 15, scope: !4435)
!4452 = !DILocation(line: 312, column: 5, scope: !4435)
!4453 = !DILocation(line: 310, column: 24, scope: !4454)
!4454 = !DILexicalBlockFile(scope: !4430, file: !174, discriminator: 2)
!4455 = !DILocation(line: 310, column: 5, scope: !4454)
!4456 = distinct !{!4456, !4457}
!4457 = !DILocation(line: 310, column: 5, scope: !4402)
!4458 = !DILocation(line: 313, column: 1, scope: !4402)
!4459 = distinct !DISubprogram(name: "horizontal_compose_daub97i_8bit", scope: !174, file: !174, line: 177, type: !63, isLocal: true, isDefinition: true, scopeLine: 178, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!4460 = !DILocalVariable(name: "_b", arg: 1, scope: !4459, file: !174, line: 177, type: !20)
!4461 = !DILocation(line: 177, column: 54, scope: !4459)
!4462 = !DILocalVariable(name: "_temp", arg: 2, scope: !4459, file: !174, line: 177, type: !20)
!4463 = !DILocation(line: 177, column: 67, scope: !4459)
!4464 = !DILocalVariable(name: "w", arg: 3, scope: !4459, file: !174, line: 177, type: !18)
!4465 = !DILocation(line: 177, column: 78, scope: !4459)
!4466 = !DILocalVariable(name: "w2", scope: !4459, file: !174, line: 179, type: !1931)
!4467 = !DILocation(line: 179, column: 15, scope: !4459)
!4468 = !DILocation(line: 179, column: 20, scope: !4459)
!4469 = !DILocation(line: 179, column: 22, scope: !4459)
!4470 = !DILocalVariable(name: "x", scope: !4459, file: !174, line: 180, type: !18)
!4471 = !DILocation(line: 180, column: 9, scope: !4459)
!4472 = !DILocalVariable(name: "b0", scope: !4459, file: !174, line: 180, type: !18)
!4473 = !DILocation(line: 180, column: 12, scope: !4459)
!4474 = !DILocalVariable(name: "b1", scope: !4459, file: !174, line: 180, type: !18)
!4475 = !DILocation(line: 180, column: 16, scope: !4459)
!4476 = !DILocalVariable(name: "b2", scope: !4459, file: !174, line: 180, type: !18)
!4477 = !DILocation(line: 180, column: 20, scope: !4459)
!4478 = !DILocalVariable(name: "b", scope: !4459, file: !174, line: 181, type: !24)
!4479 = !DILocation(line: 181, column: 14, scope: !4459)
!4480 = !DILocation(line: 181, column: 29, scope: !4459)
!4481 = !DILocation(line: 181, column: 18, scope: !4459)
!4482 = !DILocalVariable(name: "temp", scope: !4459, file: !174, line: 182, type: !24)
!4483 = !DILocation(line: 182, column: 14, scope: !4459)
!4484 = !DILocation(line: 182, column: 32, scope: !4459)
!4485 = !DILocation(line: 182, column: 21, scope: !4459)
!4486 = !DILocation(line: 184, column: 27, scope: !4459)
!4487 = !DILocation(line: 184, column: 16, scope: !4459)
!4488 = !DILocation(line: 184, column: 50, scope: !4459)
!4489 = !DILocation(line: 184, column: 48, scope: !4459)
!4490 = !DILocation(line: 184, column: 68, scope: !4459)
!4491 = !DILocation(line: 184, column: 66, scope: !4459)
!4492 = !DILocation(line: 184, column: 56, scope: !4459)
!4493 = !DILocation(line: 184, column: 54, scope: !4459)
!4494 = !DILocation(line: 184, column: 46, scope: !4459)
!4495 = !DILocation(line: 184, column: 73, scope: !4459)
!4496 = !DILocation(line: 184, column: 81, scope: !4459)
!4497 = !DILocation(line: 184, column: 33, scope: !4459)
!4498 = !DILocation(line: 184, column: 15, scope: !4459)
!4499 = !DILocation(line: 184, column: 5, scope: !4459)
!4500 = !DILocation(line: 184, column: 13, scope: !4459)
!4501 = !DILocation(line: 185, column: 12, scope: !4502)
!4502 = distinct !DILexicalBlock(scope: !4459, file: !174, line: 185, column: 5)
!4503 = !DILocation(line: 185, column: 10, scope: !4502)
!4504 = !DILocation(line: 185, column: 17, scope: !4505)
!4505 = !DILexicalBlockFile(scope: !4506, file: !174, discriminator: 1)
!4506 = distinct !DILexicalBlock(scope: !4502, file: !174, line: 185, column: 5)
!4507 = !DILocation(line: 185, column: 21, scope: !4505)
!4508 = !DILocation(line: 185, column: 19, scope: !4505)
!4509 = !DILocation(line: 185, column: 5, scope: !4505)
!4510 = !DILocation(line: 186, column: 34, scope: !4511)
!4511 = distinct !DILexicalBlock(scope: !4506, file: !174, line: 185, column: 30)
!4512 = !DILocation(line: 186, column: 32, scope: !4511)
!4513 = !DILocation(line: 186, column: 21, scope: !4511)
!4514 = !DILocation(line: 186, column: 56, scope: !4511)
!4515 = !DILocation(line: 186, column: 58, scope: !4511)
!4516 = !DILocation(line: 186, column: 57, scope: !4511)
!4517 = !DILocation(line: 186, column: 60, scope: !4511)
!4518 = !DILocation(line: 186, column: 54, scope: !4511)
!4519 = !DILocation(line: 186, column: 78, scope: !4511)
!4520 = !DILocation(line: 186, column: 80, scope: !4511)
!4521 = !DILocation(line: 186, column: 79, scope: !4511)
!4522 = !DILocation(line: 186, column: 76, scope: !4511)
!4523 = !DILocation(line: 186, column: 66, scope: !4511)
!4524 = !DILocation(line: 186, column: 64, scope: !4511)
!4525 = !DILocation(line: 186, column: 52, scope: !4511)
!4526 = !DILocation(line: 186, column: 85, scope: !4511)
!4527 = !DILocation(line: 186, column: 93, scope: !4511)
!4528 = !DILocation(line: 186, column: 39, scope: !4511)
!4529 = !DILocation(line: 186, column: 20, scope: !4511)
!4530 = !DILocation(line: 186, column: 14, scope: !4511)
!4531 = !DILocation(line: 186, column: 9, scope: !4511)
!4532 = !DILocation(line: 186, column: 18, scope: !4511)
!4533 = !DILocation(line: 187, column: 38, scope: !4511)
!4534 = !DILocation(line: 187, column: 40, scope: !4511)
!4535 = !DILocation(line: 187, column: 39, scope: !4511)
!4536 = !DILocation(line: 187, column: 42, scope: !4511)
!4537 = !DILocation(line: 187, column: 36, scope: !4511)
!4538 = !DILocation(line: 187, column: 25, scope: !4511)
!4539 = !DILocation(line: 187, column: 67, scope: !4511)
!4540 = !DILocation(line: 187, column: 68, scope: !4511)
!4541 = !DILocation(line: 187, column: 62, scope: !4511)
!4542 = !DILocation(line: 187, column: 89, scope: !4511)
!4543 = !DILocation(line: 187, column: 84, scope: !4511)
!4544 = !DILocation(line: 187, column: 74, scope: !4511)
!4545 = !DILocation(line: 187, column: 72, scope: !4511)
!4546 = !DILocation(line: 187, column: 60, scope: !4511)
!4547 = !DILocation(line: 187, column: 93, scope: !4511)
!4548 = !DILocation(line: 187, column: 99, scope: !4511)
!4549 = !DILocation(line: 187, column: 47, scope: !4511)
!4550 = !DILocation(line: 187, column: 24, scope: !4511)
!4551 = !DILocation(line: 187, column: 14, scope: !4511)
!4552 = !DILocation(line: 187, column: 16, scope: !4511)
!4553 = !DILocation(line: 187, column: 15, scope: !4511)
!4554 = !DILocation(line: 187, column: 18, scope: !4511)
!4555 = !DILocation(line: 187, column: 9, scope: !4511)
!4556 = !DILocation(line: 187, column: 22, scope: !4511)
!4557 = !DILocation(line: 188, column: 5, scope: !4511)
!4558 = !DILocation(line: 185, column: 26, scope: !4559)
!4559 = !DILexicalBlockFile(scope: !4506, file: !174, discriminator: 2)
!4560 = !DILocation(line: 185, column: 5, scope: !4559)
!4561 = distinct !{!4561, !4562}
!4562 = !DILocation(line: 185, column: 5, scope: !4459)
!4563 = !DILocation(line: 189, column: 31, scope: !4459)
!4564 = !DILocation(line: 189, column: 32, scope: !4459)
!4565 = !DILocation(line: 189, column: 29, scope: !4459)
!4566 = !DILocation(line: 189, column: 18, scope: !4459)
!4567 = !DILocation(line: 189, column: 57, scope: !4459)
!4568 = !DILocation(line: 189, column: 59, scope: !4459)
!4569 = !DILocation(line: 189, column: 52, scope: !4459)
!4570 = !DILocation(line: 189, column: 80, scope: !4459)
!4571 = !DILocation(line: 189, column: 82, scope: !4459)
!4572 = !DILocation(line: 189, column: 75, scope: !4459)
!4573 = !DILocation(line: 189, column: 65, scope: !4459)
!4574 = !DILocation(line: 189, column: 63, scope: !4459)
!4575 = !DILocation(line: 189, column: 50, scope: !4459)
!4576 = !DILocation(line: 189, column: 87, scope: !4459)
!4577 = !DILocation(line: 189, column: 93, scope: !4459)
!4578 = !DILocation(line: 189, column: 37, scope: !4459)
!4579 = !DILocation(line: 189, column: 17, scope: !4459)
!4580 = !DILocation(line: 189, column: 10, scope: !4459)
!4581 = !DILocation(line: 189, column: 11, scope: !4459)
!4582 = !DILocation(line: 189, column: 5, scope: !4459)
!4583 = !DILocation(line: 189, column: 15, scope: !4459)
!4584 = !DILocation(line: 192, column: 27, scope: !4459)
!4585 = !DILocation(line: 192, column: 16, scope: !4459)
!4586 = !DILocation(line: 192, column: 56, scope: !4459)
!4587 = !DILocation(line: 192, column: 51, scope: !4459)
!4588 = !DILocation(line: 192, column: 77, scope: !4459)
!4589 = !DILocation(line: 192, column: 72, scope: !4459)
!4590 = !DILocation(line: 192, column: 62, scope: !4459)
!4591 = !DILocation(line: 192, column: 60, scope: !4459)
!4592 = !DILocation(line: 192, column: 49, scope: !4459)
!4593 = !DILocation(line: 192, column: 82, scope: !4459)
!4594 = !DILocation(line: 192, column: 90, scope: !4459)
!4595 = !DILocation(line: 192, column: 36, scope: !4459)
!4596 = !DILocation(line: 192, column: 13, scope: !4459)
!4597 = !DILocation(line: 192, column: 8, scope: !4459)
!4598 = !DILocation(line: 193, column: 16, scope: !4459)
!4599 = !DILocation(line: 193, column: 15, scope: !4459)
!4600 = !DILocation(line: 193, column: 20, scope: !4459)
!4601 = !DILocation(line: 193, column: 12, scope: !4459)
!4602 = !DILocation(line: 193, column: 5, scope: !4459)
!4603 = !DILocation(line: 193, column: 10, scope: !4459)
!4604 = !DILocation(line: 194, column: 12, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4459, file: !174, line: 194, column: 5)
!4606 = !DILocation(line: 194, column: 10, scope: !4605)
!4607 = !DILocation(line: 194, column: 17, scope: !4608)
!4608 = !DILexicalBlockFile(scope: !4609, file: !174, discriminator: 1)
!4609 = distinct !DILexicalBlock(scope: !4605, file: !174, line: 194, column: 5)
!4610 = !DILocation(line: 194, column: 21, scope: !4608)
!4611 = !DILocation(line: 194, column: 19, scope: !4608)
!4612 = !DILocation(line: 194, column: 5, scope: !4608)
!4613 = !DILocation(line: 195, column: 31, scope: !4614)
!4614 = distinct !DILexicalBlock(scope: !4609, file: !174, line: 194, column: 30)
!4615 = !DILocation(line: 195, column: 26, scope: !4614)
!4616 = !DILocation(line: 195, column: 15, scope: !4614)
!4617 = !DILocation(line: 195, column: 56, scope: !4614)
!4618 = !DILocation(line: 195, column: 58, scope: !4614)
!4619 = !DILocation(line: 195, column: 57, scope: !4614)
!4620 = !DILocation(line: 195, column: 60, scope: !4614)
!4621 = !DILocation(line: 195, column: 51, scope: !4614)
!4622 = !DILocation(line: 195, column: 81, scope: !4614)
!4623 = !DILocation(line: 195, column: 83, scope: !4614)
!4624 = !DILocation(line: 195, column: 82, scope: !4614)
!4625 = !DILocation(line: 195, column: 76, scope: !4614)
!4626 = !DILocation(line: 195, column: 66, scope: !4614)
!4627 = !DILocation(line: 195, column: 64, scope: !4614)
!4628 = !DILocation(line: 195, column: 49, scope: !4614)
!4629 = !DILocation(line: 195, column: 88, scope: !4614)
!4630 = !DILocation(line: 195, column: 96, scope: !4614)
!4631 = !DILocation(line: 195, column: 36, scope: !4614)
!4632 = !DILocation(line: 195, column: 12, scope: !4614)
!4633 = !DILocation(line: 196, column: 31, scope: !4614)
!4634 = !DILocation(line: 196, column: 33, scope: !4614)
!4635 = !DILocation(line: 196, column: 32, scope: !4614)
!4636 = !DILocation(line: 196, column: 35, scope: !4614)
!4637 = !DILocation(line: 196, column: 26, scope: !4614)
!4638 = !DILocation(line: 196, column: 15, scope: !4614)
!4639 = !DILocation(line: 196, column: 55, scope: !4614)
!4640 = !DILocation(line: 196, column: 70, scope: !4614)
!4641 = !DILocation(line: 196, column: 58, scope: !4614)
!4642 = !DILocation(line: 196, column: 53, scope: !4614)
!4643 = !DILocation(line: 196, column: 74, scope: !4614)
!4644 = !DILocation(line: 196, column: 82, scope: !4614)
!4645 = !DILocation(line: 196, column: 40, scope: !4614)
!4646 = !DILocation(line: 196, column: 12, scope: !4614)
!4647 = !DILocation(line: 197, column: 24, scope: !4614)
!4648 = !DILocation(line: 197, column: 23, scope: !4614)
!4649 = !DILocation(line: 197, column: 28, scope: !4614)
!4650 = !DILocation(line: 197, column: 20, scope: !4614)
!4651 = !DILocation(line: 197, column: 13, scope: !4614)
!4652 = !DILocation(line: 197, column: 12, scope: !4614)
!4653 = !DILocation(line: 197, column: 14, scope: !4614)
!4654 = !DILocation(line: 197, column: 9, scope: !4614)
!4655 = !DILocation(line: 197, column: 18, scope: !4614)
!4656 = !DILocation(line: 198, column: 23, scope: !4614)
!4657 = !DILocation(line: 198, column: 22, scope: !4614)
!4658 = !DILocation(line: 198, column: 27, scope: !4614)
!4659 = !DILocation(line: 198, column: 19, scope: !4614)
!4660 = !DILocation(line: 198, column: 13, scope: !4614)
!4661 = !DILocation(line: 198, column: 12, scope: !4614)
!4662 = !DILocation(line: 198, column: 9, scope: !4614)
!4663 = !DILocation(line: 198, column: 17, scope: !4614)
!4664 = !DILocation(line: 199, column: 14, scope: !4614)
!4665 = !DILocation(line: 199, column: 12, scope: !4614)
!4666 = !DILocation(line: 200, column: 5, scope: !4614)
!4667 = !DILocation(line: 194, column: 26, scope: !4668)
!4668 = !DILexicalBlockFile(scope: !4609, file: !174, discriminator: 2)
!4669 = !DILocation(line: 194, column: 5, scope: !4668)
!4670 = distinct !{!4670, !4671}
!4671 = !DILocation(line: 194, column: 5, scope: !4459)
!4672 = !DILocation(line: 201, column: 35, scope: !4459)
!4673 = !DILocation(line: 201, column: 36, scope: !4459)
!4674 = !DILocation(line: 201, column: 30, scope: !4459)
!4675 = !DILocation(line: 201, column: 19, scope: !4459)
!4676 = !DILocation(line: 201, column: 56, scope: !4459)
!4677 = !DILocation(line: 201, column: 71, scope: !4459)
!4678 = !DILocation(line: 201, column: 59, scope: !4459)
!4679 = !DILocation(line: 201, column: 54, scope: !4459)
!4680 = !DILocation(line: 201, column: 75, scope: !4459)
!4681 = !DILocation(line: 201, column: 83, scope: !4459)
!4682 = !DILocation(line: 201, column: 41, scope: !4459)
!4683 = !DILocation(line: 201, column: 17, scope: !4459)
!4684 = !DILocation(line: 201, column: 92, scope: !4459)
!4685 = !DILocation(line: 201, column: 14, scope: !4459)
!4686 = !DILocation(line: 201, column: 7, scope: !4459)
!4687 = !DILocation(line: 201, column: 8, scope: !4459)
!4688 = !DILocation(line: 201, column: 5, scope: !4459)
!4689 = !DILocation(line: 201, column: 12, scope: !4459)
!4690 = !DILocation(line: 202, column: 1, scope: !4459)
!4691 = distinct !DISubprogram(name: "spatial_compose_dd97i_init_10bit", scope: !174, file: !174, line: 495, type: !901, isLocal: true, isDefinition: true, scopeLine: 496, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!4692 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !4693)
!4693 = distinct !DILocation(line: 498, column: 25, scope: !4691)
!4694 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !4693)
!4695 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !4693)
!4696 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !4697)
!4697 = distinct !DILocation(line: 499, column: 25, scope: !4691)
!4698 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !4697)
!4699 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !4697)
!4700 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !4701)
!4701 = distinct !DILocation(line: 500, column: 25, scope: !4691)
!4702 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !4701)
!4703 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !4701)
!4704 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !4705)
!4705 = distinct !DILocation(line: 501, column: 25, scope: !4691)
!4706 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !4705)
!4707 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !4705)
!4708 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !4709)
!4709 = distinct !DILocation(line: 502, column: 25, scope: !4691)
!4710 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !4709)
!4711 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !4709)
!4712 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !4713)
!4713 = distinct !DILocation(line: 497, column: 25, scope: !4691)
!4714 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !4713)
!4715 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !4713)
!4716 = !DILocalVariable(name: "cs", arg: 1, scope: !4691, file: !174, line: 495, type: !903)
!4717 = !DILocation(line: 495, column: 58, scope: !4691)
!4718 = !DILocalVariable(name: "buffer", arg: 2, scope: !4691, file: !174, line: 495, type: !20)
!4719 = !DILocation(line: 495, column: 71, scope: !4691)
!4720 = !DILocalVariable(name: "height", arg: 3, scope: !4691, file: !174, line: 495, type: !18)
!4721 = !DILocation(line: 495, column: 83, scope: !4691)
!4722 = !DILocalVariable(name: "stride", arg: 4, scope: !4691, file: !174, line: 495, type: !18)
!4723 = !DILocation(line: 495, column: 95, scope: !4691)
!4724 = !DILocation(line: 497, column: 16, scope: !4691)
!4725 = !DILocation(line: 497, column: 44, scope: !4691)
!4726 = !DILocation(line: 497, column: 50, scope: !4691)
!4727 = !DILocation(line: 497, column: 25, scope: !4691)
!4728 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !4713)
!4729 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !4713)
!4730 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !4713)
!4731 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !4713)
!4732 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !4713)
!4733 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !4713)
!4734 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !4713)
!4735 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !4713)
!4736 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !4713)
!4737 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !4713)
!4738 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !4713)
!4739 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !4713)
!4740 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !4713)
!4741 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !4713)
!4742 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !4713)
!4743 = !DILocation(line: 497, column: 54, scope: !4691)
!4744 = !DILocation(line: 497, column: 53, scope: !4691)
!4745 = !DILocation(line: 497, column: 23, scope: !4691)
!4746 = !DILocation(line: 497, column: 5, scope: !4691)
!4747 = !DILocation(line: 497, column: 9, scope: !4691)
!4748 = !DILocation(line: 497, column: 14, scope: !4691)
!4749 = !DILocation(line: 498, column: 16, scope: !4691)
!4750 = !DILocation(line: 498, column: 43, scope: !4691)
!4751 = !DILocation(line: 498, column: 49, scope: !4691)
!4752 = !DILocation(line: 498, column: 25, scope: !4691)
!4753 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !4693)
!4754 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !4693)
!4755 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !4693)
!4756 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !4693)
!4757 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !4693)
!4758 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !4693)
!4759 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !4693)
!4760 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !4693)
!4761 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !4693)
!4762 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !4693)
!4763 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !4693)
!4764 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !4693)
!4765 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !4693)
!4766 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !4693)
!4767 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !4693)
!4768 = !DILocation(line: 498, column: 53, scope: !4691)
!4769 = !DILocation(line: 498, column: 52, scope: !4691)
!4770 = !DILocation(line: 498, column: 23, scope: !4691)
!4771 = !DILocation(line: 498, column: 5, scope: !4691)
!4772 = !DILocation(line: 498, column: 9, scope: !4691)
!4773 = !DILocation(line: 498, column: 14, scope: !4691)
!4774 = !DILocation(line: 499, column: 16, scope: !4691)
!4775 = !DILocation(line: 499, column: 44, scope: !4691)
!4776 = !DILocation(line: 499, column: 50, scope: !4691)
!4777 = !DILocation(line: 499, column: 25, scope: !4691)
!4778 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !4697)
!4779 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !4697)
!4780 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !4697)
!4781 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !4697)
!4782 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !4697)
!4783 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !4697)
!4784 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !4697)
!4785 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !4697)
!4786 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !4697)
!4787 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !4697)
!4788 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !4697)
!4789 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !4697)
!4790 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !4697)
!4791 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !4697)
!4792 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !4697)
!4793 = !DILocation(line: 499, column: 54, scope: !4691)
!4794 = !DILocation(line: 499, column: 53, scope: !4691)
!4795 = !DILocation(line: 499, column: 23, scope: !4691)
!4796 = !DILocation(line: 499, column: 5, scope: !4691)
!4797 = !DILocation(line: 499, column: 9, scope: !4691)
!4798 = !DILocation(line: 499, column: 14, scope: !4691)
!4799 = !DILocation(line: 500, column: 16, scope: !4691)
!4800 = !DILocation(line: 500, column: 44, scope: !4691)
!4801 = !DILocation(line: 500, column: 50, scope: !4691)
!4802 = !DILocation(line: 500, column: 25, scope: !4691)
!4803 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !4701)
!4804 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !4701)
!4805 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !4701)
!4806 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !4701)
!4807 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !4701)
!4808 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !4701)
!4809 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !4701)
!4810 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !4701)
!4811 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !4701)
!4812 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !4701)
!4813 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !4701)
!4814 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !4701)
!4815 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !4701)
!4816 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !4701)
!4817 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !4701)
!4818 = !DILocation(line: 500, column: 54, scope: !4691)
!4819 = !DILocation(line: 500, column: 53, scope: !4691)
!4820 = !DILocation(line: 500, column: 23, scope: !4691)
!4821 = !DILocation(line: 500, column: 5, scope: !4691)
!4822 = !DILocation(line: 500, column: 9, scope: !4691)
!4823 = !DILocation(line: 500, column: 14, scope: !4691)
!4824 = !DILocation(line: 501, column: 16, scope: !4691)
!4825 = !DILocation(line: 501, column: 44, scope: !4691)
!4826 = !DILocation(line: 501, column: 50, scope: !4691)
!4827 = !DILocation(line: 501, column: 25, scope: !4691)
!4828 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !4705)
!4829 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !4705)
!4830 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !4705)
!4831 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !4705)
!4832 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !4705)
!4833 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !4705)
!4834 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !4705)
!4835 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !4705)
!4836 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !4705)
!4837 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !4705)
!4838 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !4705)
!4839 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !4705)
!4840 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !4705)
!4841 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !4705)
!4842 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !4705)
!4843 = !DILocation(line: 501, column: 54, scope: !4691)
!4844 = !DILocation(line: 501, column: 53, scope: !4691)
!4845 = !DILocation(line: 501, column: 23, scope: !4691)
!4846 = !DILocation(line: 501, column: 5, scope: !4691)
!4847 = !DILocation(line: 501, column: 9, scope: !4691)
!4848 = !DILocation(line: 501, column: 14, scope: !4691)
!4849 = !DILocation(line: 502, column: 16, scope: !4691)
!4850 = !DILocation(line: 502, column: 44, scope: !4691)
!4851 = !DILocation(line: 502, column: 50, scope: !4691)
!4852 = !DILocation(line: 502, column: 25, scope: !4691)
!4853 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !4709)
!4854 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !4709)
!4855 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !4709)
!4856 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !4709)
!4857 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !4709)
!4858 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !4709)
!4859 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !4709)
!4860 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !4709)
!4861 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !4709)
!4862 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !4709)
!4863 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !4709)
!4864 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !4709)
!4865 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !4709)
!4866 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !4709)
!4867 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !4709)
!4868 = !DILocation(line: 502, column: 54, scope: !4691)
!4869 = !DILocation(line: 502, column: 53, scope: !4691)
!4870 = !DILocation(line: 502, column: 23, scope: !4691)
!4871 = !DILocation(line: 502, column: 5, scope: !4691)
!4872 = !DILocation(line: 502, column: 9, scope: !4691)
!4873 = !DILocation(line: 502, column: 14, scope: !4691)
!4874 = !DILocation(line: 503, column: 5, scope: !4691)
!4875 = !DILocation(line: 503, column: 9, scope: !4691)
!4876 = !DILocation(line: 503, column: 11, scope: !4691)
!4877 = !DILocation(line: 504, column: 1, scope: !4691)
!4878 = distinct !DISubprogram(name: "spatial_compose53i_init_10bit", scope: !174, file: !174, line: 488, type: !901, isLocal: true, isDefinition: true, scopeLine: 489, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!4879 = !DILocation(line: 338, column: 91, scope: !1103, inlinedAt: !4880)
!4880 = distinct !DILocation(line: 491, column: 25, scope: !4878)
!4881 = !DILocation(line: 338, column: 98, scope: !1103, inlinedAt: !4880)
!4882 = !DILocation(line: 338, column: 91, scope: !1103, inlinedAt: !4883)
!4883 = distinct !DILocation(line: 490, column: 25, scope: !4878)
!4884 = !DILocation(line: 338, column: 98, scope: !1103, inlinedAt: !4883)
!4885 = !DILocalVariable(name: "cs", arg: 1, scope: !4878, file: !174, line: 488, type: !903)
!4886 = !DILocation(line: 488, column: 55, scope: !4878)
!4887 = !DILocalVariable(name: "buffer", arg: 2, scope: !4878, file: !174, line: 488, type: !20)
!4888 = !DILocation(line: 488, column: 68, scope: !4878)
!4889 = !DILocalVariable(name: "height", arg: 3, scope: !4878, file: !174, line: 488, type: !18)
!4890 = !DILocation(line: 488, column: 80, scope: !4878)
!4891 = !DILocalVariable(name: "stride", arg: 4, scope: !4878, file: !174, line: 488, type: !18)
!4892 = !DILocation(line: 488, column: 92, scope: !4878)
!4893 = !DILocation(line: 490, column: 16, scope: !4878)
!4894 = !DILocation(line: 490, column: 45, scope: !4878)
!4895 = !DILocation(line: 490, column: 51, scope: !4878)
!4896 = !DILocation(line: 490, column: 25, scope: !4878)
!4897 = !DILocation(line: 340, column: 10, scope: !1127, inlinedAt: !4883)
!4898 = !DILocation(line: 340, column: 9, scope: !1103, inlinedAt: !4883)
!4899 = !DILocation(line: 341, column: 9, scope: !1127, inlinedAt: !4883)
!4900 = !DILocation(line: 343, column: 5, scope: !1103, inlinedAt: !4883)
!4901 = !DILocation(line: 343, column: 22, scope: !1132, inlinedAt: !4883)
!4902 = !DILocation(line: 343, column: 36, scope: !1132, inlinedAt: !4883)
!4903 = !DILocation(line: 343, column: 24, scope: !1132, inlinedAt: !4883)
!4904 = !DILocation(line: 343, column: 5, scope: !1132, inlinedAt: !4883)
!4905 = !DILocation(line: 344, column: 14, scope: !1137, inlinedAt: !4883)
!4906 = !DILocation(line: 344, column: 13, scope: !1137, inlinedAt: !4883)
!4907 = !DILocation(line: 344, column: 11, scope: !1137, inlinedAt: !4883)
!4908 = !DILocation(line: 345, column: 13, scope: !1141, inlinedAt: !4883)
!4909 = !DILocation(line: 345, column: 15, scope: !1141, inlinedAt: !4883)
!4910 = !DILocation(line: 345, column: 13, scope: !1137, inlinedAt: !4883)
!4911 = !DILocation(line: 346, column: 22, scope: !1141, inlinedAt: !4883)
!4912 = !DILocation(line: 346, column: 20, scope: !1141, inlinedAt: !4883)
!4913 = !DILocation(line: 346, column: 15, scope: !1141, inlinedAt: !4883)
!4914 = !DILocation(line: 346, column: 13, scope: !1141, inlinedAt: !4883)
!4915 = !DILocation(line: 343, column: 5, scope: !1149, inlinedAt: !4883)
!4916 = !DILocation(line: 348, column: 12, scope: !1103, inlinedAt: !4883)
!4917 = !DILocation(line: 348, column: 5, scope: !1103, inlinedAt: !4883)
!4918 = !DILocation(line: 349, column: 1, scope: !1103, inlinedAt: !4883)
!4919 = !DILocation(line: 490, column: 55, scope: !4878)
!4920 = !DILocation(line: 490, column: 54, scope: !4878)
!4921 = !DILocation(line: 490, column: 23, scope: !4878)
!4922 = !DILocation(line: 490, column: 5, scope: !4878)
!4923 = !DILocation(line: 490, column: 9, scope: !4878)
!4924 = !DILocation(line: 490, column: 14, scope: !4878)
!4925 = !DILocation(line: 491, column: 16, scope: !4878)
!4926 = !DILocation(line: 491, column: 44, scope: !4878)
!4927 = !DILocation(line: 491, column: 50, scope: !4878)
!4928 = !DILocation(line: 491, column: 25, scope: !4878)
!4929 = !DILocation(line: 340, column: 10, scope: !1127, inlinedAt: !4880)
!4930 = !DILocation(line: 340, column: 9, scope: !1103, inlinedAt: !4880)
!4931 = !DILocation(line: 341, column: 9, scope: !1127, inlinedAt: !4880)
!4932 = !DILocation(line: 343, column: 5, scope: !1103, inlinedAt: !4880)
!4933 = !DILocation(line: 343, column: 22, scope: !1132, inlinedAt: !4880)
!4934 = !DILocation(line: 343, column: 36, scope: !1132, inlinedAt: !4880)
!4935 = !DILocation(line: 343, column: 24, scope: !1132, inlinedAt: !4880)
!4936 = !DILocation(line: 343, column: 5, scope: !1132, inlinedAt: !4880)
!4937 = !DILocation(line: 344, column: 14, scope: !1137, inlinedAt: !4880)
!4938 = !DILocation(line: 344, column: 13, scope: !1137, inlinedAt: !4880)
!4939 = !DILocation(line: 344, column: 11, scope: !1137, inlinedAt: !4880)
!4940 = !DILocation(line: 345, column: 13, scope: !1141, inlinedAt: !4880)
!4941 = !DILocation(line: 345, column: 15, scope: !1141, inlinedAt: !4880)
!4942 = !DILocation(line: 345, column: 13, scope: !1137, inlinedAt: !4880)
!4943 = !DILocation(line: 346, column: 22, scope: !1141, inlinedAt: !4880)
!4944 = !DILocation(line: 346, column: 20, scope: !1141, inlinedAt: !4880)
!4945 = !DILocation(line: 346, column: 15, scope: !1141, inlinedAt: !4880)
!4946 = !DILocation(line: 346, column: 13, scope: !1141, inlinedAt: !4880)
!4947 = !DILocation(line: 343, column: 5, scope: !1149, inlinedAt: !4880)
!4948 = !DILocation(line: 348, column: 12, scope: !1103, inlinedAt: !4880)
!4949 = !DILocation(line: 348, column: 5, scope: !1103, inlinedAt: !4880)
!4950 = !DILocation(line: 349, column: 1, scope: !1103, inlinedAt: !4880)
!4951 = !DILocation(line: 491, column: 54, scope: !4878)
!4952 = !DILocation(line: 491, column: 53, scope: !4878)
!4953 = !DILocation(line: 491, column: 23, scope: !4878)
!4954 = !DILocation(line: 491, column: 5, scope: !4878)
!4955 = !DILocation(line: 491, column: 9, scope: !4878)
!4956 = !DILocation(line: 491, column: 14, scope: !4878)
!4957 = !DILocation(line: 492, column: 5, scope: !4878)
!4958 = !DILocation(line: 492, column: 9, scope: !4878)
!4959 = !DILocation(line: 492, column: 11, scope: !4878)
!4960 = !DILocation(line: 493, column: 1, scope: !4878)
!4961 = distinct !DISubprogram(name: "spatial_compose_dd137i_init_10bit", scope: !174, file: !174, line: 506, type: !901, isLocal: true, isDefinition: true, scopeLine: 507, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!4962 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !4963)
!4963 = distinct !DILocation(line: 509, column: 25, scope: !4961)
!4964 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !4963)
!4965 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !4963)
!4966 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !4967)
!4967 = distinct !DILocation(line: 510, column: 25, scope: !4961)
!4968 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !4967)
!4969 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !4967)
!4970 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !4971)
!4971 = distinct !DILocation(line: 511, column: 25, scope: !4961)
!4972 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !4971)
!4973 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !4971)
!4974 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !4975)
!4975 = distinct !DILocation(line: 512, column: 25, scope: !4961)
!4976 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !4975)
!4977 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !4975)
!4978 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !4979)
!4979 = distinct !DILocation(line: 513, column: 25, scope: !4961)
!4980 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !4979)
!4981 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !4979)
!4982 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !4983)
!4983 = distinct !DILocation(line: 514, column: 25, scope: !4961)
!4984 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !4983)
!4985 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !4983)
!4986 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !4987)
!4987 = distinct !DILocation(line: 515, column: 25, scope: !4961)
!4988 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !4987)
!4989 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !4987)
!4990 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !4991)
!4991 = distinct !DILocation(line: 508, column: 25, scope: !4961)
!4992 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !4991)
!4993 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !4991)
!4994 = !DILocalVariable(name: "cs", arg: 1, scope: !4961, file: !174, line: 506, type: !903)
!4995 = !DILocation(line: 506, column: 59, scope: !4961)
!4996 = !DILocalVariable(name: "buffer", arg: 2, scope: !4961, file: !174, line: 506, type: !20)
!4997 = !DILocation(line: 506, column: 72, scope: !4961)
!4998 = !DILocalVariable(name: "height", arg: 3, scope: !4961, file: !174, line: 506, type: !18)
!4999 = !DILocation(line: 506, column: 84, scope: !4961)
!5000 = !DILocalVariable(name: "stride", arg: 4, scope: !4961, file: !174, line: 506, type: !18)
!5001 = !DILocation(line: 506, column: 96, scope: !4961)
!5002 = !DILocation(line: 508, column: 16, scope: !4961)
!5003 = !DILocation(line: 508, column: 44, scope: !4961)
!5004 = !DILocation(line: 508, column: 50, scope: !4961)
!5005 = !DILocation(line: 508, column: 25, scope: !4961)
!5006 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !4991)
!5007 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !4991)
!5008 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !4991)
!5009 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !4991)
!5010 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !4991)
!5011 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !4991)
!5012 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !4991)
!5013 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !4991)
!5014 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !4991)
!5015 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !4991)
!5016 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !4991)
!5017 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !4991)
!5018 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !4991)
!5019 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !4991)
!5020 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !4991)
!5021 = !DILocation(line: 508, column: 54, scope: !4961)
!5022 = !DILocation(line: 508, column: 53, scope: !4961)
!5023 = !DILocation(line: 508, column: 23, scope: !4961)
!5024 = !DILocation(line: 508, column: 5, scope: !4961)
!5025 = !DILocation(line: 508, column: 9, scope: !4961)
!5026 = !DILocation(line: 508, column: 14, scope: !4961)
!5027 = !DILocation(line: 509, column: 16, scope: !4961)
!5028 = !DILocation(line: 509, column: 43, scope: !4961)
!5029 = !DILocation(line: 509, column: 49, scope: !4961)
!5030 = !DILocation(line: 509, column: 25, scope: !4961)
!5031 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !4963)
!5032 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !4963)
!5033 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !4963)
!5034 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !4963)
!5035 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !4963)
!5036 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !4963)
!5037 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !4963)
!5038 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !4963)
!5039 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !4963)
!5040 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !4963)
!5041 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !4963)
!5042 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !4963)
!5043 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !4963)
!5044 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !4963)
!5045 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !4963)
!5046 = !DILocation(line: 509, column: 53, scope: !4961)
!5047 = !DILocation(line: 509, column: 52, scope: !4961)
!5048 = !DILocation(line: 509, column: 23, scope: !4961)
!5049 = !DILocation(line: 509, column: 5, scope: !4961)
!5050 = !DILocation(line: 509, column: 9, scope: !4961)
!5051 = !DILocation(line: 509, column: 14, scope: !4961)
!5052 = !DILocation(line: 510, column: 16, scope: !4961)
!5053 = !DILocation(line: 510, column: 44, scope: !4961)
!5054 = !DILocation(line: 510, column: 50, scope: !4961)
!5055 = !DILocation(line: 510, column: 25, scope: !4961)
!5056 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !4967)
!5057 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !4967)
!5058 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !4967)
!5059 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !4967)
!5060 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !4967)
!5061 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !4967)
!5062 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !4967)
!5063 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !4967)
!5064 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !4967)
!5065 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !4967)
!5066 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !4967)
!5067 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !4967)
!5068 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !4967)
!5069 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !4967)
!5070 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !4967)
!5071 = !DILocation(line: 510, column: 54, scope: !4961)
!5072 = !DILocation(line: 510, column: 53, scope: !4961)
!5073 = !DILocation(line: 510, column: 23, scope: !4961)
!5074 = !DILocation(line: 510, column: 5, scope: !4961)
!5075 = !DILocation(line: 510, column: 9, scope: !4961)
!5076 = !DILocation(line: 510, column: 14, scope: !4961)
!5077 = !DILocation(line: 511, column: 16, scope: !4961)
!5078 = !DILocation(line: 511, column: 44, scope: !4961)
!5079 = !DILocation(line: 511, column: 50, scope: !4961)
!5080 = !DILocation(line: 511, column: 25, scope: !4961)
!5081 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !4971)
!5082 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !4971)
!5083 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !4971)
!5084 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !4971)
!5085 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !4971)
!5086 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !4971)
!5087 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !4971)
!5088 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !4971)
!5089 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !4971)
!5090 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !4971)
!5091 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !4971)
!5092 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !4971)
!5093 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !4971)
!5094 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !4971)
!5095 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !4971)
!5096 = !DILocation(line: 511, column: 54, scope: !4961)
!5097 = !DILocation(line: 511, column: 53, scope: !4961)
!5098 = !DILocation(line: 511, column: 23, scope: !4961)
!5099 = !DILocation(line: 511, column: 5, scope: !4961)
!5100 = !DILocation(line: 511, column: 9, scope: !4961)
!5101 = !DILocation(line: 511, column: 14, scope: !4961)
!5102 = !DILocation(line: 512, column: 16, scope: !4961)
!5103 = !DILocation(line: 512, column: 44, scope: !4961)
!5104 = !DILocation(line: 512, column: 50, scope: !4961)
!5105 = !DILocation(line: 512, column: 25, scope: !4961)
!5106 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !4975)
!5107 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !4975)
!5108 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !4975)
!5109 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !4975)
!5110 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !4975)
!5111 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !4975)
!5112 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !4975)
!5113 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !4975)
!5114 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !4975)
!5115 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !4975)
!5116 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !4975)
!5117 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !4975)
!5118 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !4975)
!5119 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !4975)
!5120 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !4975)
!5121 = !DILocation(line: 512, column: 54, scope: !4961)
!5122 = !DILocation(line: 512, column: 53, scope: !4961)
!5123 = !DILocation(line: 512, column: 23, scope: !4961)
!5124 = !DILocation(line: 512, column: 5, scope: !4961)
!5125 = !DILocation(line: 512, column: 9, scope: !4961)
!5126 = !DILocation(line: 512, column: 14, scope: !4961)
!5127 = !DILocation(line: 513, column: 16, scope: !4961)
!5128 = !DILocation(line: 513, column: 44, scope: !4961)
!5129 = !DILocation(line: 513, column: 50, scope: !4961)
!5130 = !DILocation(line: 513, column: 25, scope: !4961)
!5131 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !4979)
!5132 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !4979)
!5133 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !4979)
!5134 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !4979)
!5135 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !4979)
!5136 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !4979)
!5137 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !4979)
!5138 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !4979)
!5139 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !4979)
!5140 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !4979)
!5141 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !4979)
!5142 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !4979)
!5143 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !4979)
!5144 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !4979)
!5145 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !4979)
!5146 = !DILocation(line: 513, column: 54, scope: !4961)
!5147 = !DILocation(line: 513, column: 53, scope: !4961)
!5148 = !DILocation(line: 513, column: 23, scope: !4961)
!5149 = !DILocation(line: 513, column: 5, scope: !4961)
!5150 = !DILocation(line: 513, column: 9, scope: !4961)
!5151 = !DILocation(line: 513, column: 14, scope: !4961)
!5152 = !DILocation(line: 514, column: 16, scope: !4961)
!5153 = !DILocation(line: 514, column: 44, scope: !4961)
!5154 = !DILocation(line: 514, column: 50, scope: !4961)
!5155 = !DILocation(line: 514, column: 25, scope: !4961)
!5156 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !4983)
!5157 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !4983)
!5158 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !4983)
!5159 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !4983)
!5160 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !4983)
!5161 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !4983)
!5162 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !4983)
!5163 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !4983)
!5164 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !4983)
!5165 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !4983)
!5166 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !4983)
!5167 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !4983)
!5168 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !4983)
!5169 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !4983)
!5170 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !4983)
!5171 = !DILocation(line: 514, column: 54, scope: !4961)
!5172 = !DILocation(line: 514, column: 53, scope: !4961)
!5173 = !DILocation(line: 514, column: 23, scope: !4961)
!5174 = !DILocation(line: 514, column: 5, scope: !4961)
!5175 = !DILocation(line: 514, column: 9, scope: !4961)
!5176 = !DILocation(line: 514, column: 14, scope: !4961)
!5177 = !DILocation(line: 515, column: 16, scope: !4961)
!5178 = !DILocation(line: 515, column: 44, scope: !4961)
!5179 = !DILocation(line: 515, column: 50, scope: !4961)
!5180 = !DILocation(line: 515, column: 25, scope: !4961)
!5181 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !4987)
!5182 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !4987)
!5183 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !4987)
!5184 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !4987)
!5185 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !4987)
!5186 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !4987)
!5187 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !4987)
!5188 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !4987)
!5189 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !4987)
!5190 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !4987)
!5191 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !4987)
!5192 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !4987)
!5193 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !4987)
!5194 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !4987)
!5195 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !4987)
!5196 = !DILocation(line: 515, column: 54, scope: !4961)
!5197 = !DILocation(line: 515, column: 53, scope: !4961)
!5198 = !DILocation(line: 515, column: 23, scope: !4961)
!5199 = !DILocation(line: 515, column: 5, scope: !4961)
!5200 = !DILocation(line: 515, column: 9, scope: !4961)
!5201 = !DILocation(line: 515, column: 14, scope: !4961)
!5202 = !DILocation(line: 516, column: 5, scope: !4961)
!5203 = !DILocation(line: 516, column: 9, scope: !4961)
!5204 = !DILocation(line: 516, column: 11, scope: !4961)
!5205 = !DILocation(line: 517, column: 1, scope: !4961)
!5206 = distinct !DISubprogram(name: "spatial_compose97i_init_10bit", scope: !174, file: !174, line: 479, type: !901, isLocal: true, isDefinition: true, scopeLine: 480, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!5207 = !DILocation(line: 338, column: 91, scope: !1103, inlinedAt: !5208)
!5208 = distinct !DILocation(line: 482, column: 25, scope: !5206)
!5209 = !DILocation(line: 338, column: 98, scope: !1103, inlinedAt: !5208)
!5210 = !DILocation(line: 338, column: 91, scope: !1103, inlinedAt: !5211)
!5211 = distinct !DILocation(line: 483, column: 25, scope: !5206)
!5212 = !DILocation(line: 338, column: 98, scope: !1103, inlinedAt: !5211)
!5213 = !DILocation(line: 338, column: 91, scope: !1103, inlinedAt: !5214)
!5214 = distinct !DILocation(line: 484, column: 25, scope: !5206)
!5215 = !DILocation(line: 338, column: 98, scope: !1103, inlinedAt: !5214)
!5216 = !DILocation(line: 338, column: 91, scope: !1103, inlinedAt: !5217)
!5217 = distinct !DILocation(line: 481, column: 25, scope: !5206)
!5218 = !DILocation(line: 338, column: 98, scope: !1103, inlinedAt: !5217)
!5219 = !DILocalVariable(name: "cs", arg: 1, scope: !5206, file: !174, line: 479, type: !903)
!5220 = !DILocation(line: 479, column: 55, scope: !5206)
!5221 = !DILocalVariable(name: "buffer", arg: 2, scope: !5206, file: !174, line: 479, type: !20)
!5222 = !DILocation(line: 479, column: 68, scope: !5206)
!5223 = !DILocalVariable(name: "height", arg: 3, scope: !5206, file: !174, line: 479, type: !18)
!5224 = !DILocation(line: 479, column: 80, scope: !5206)
!5225 = !DILocalVariable(name: "stride", arg: 4, scope: !5206, file: !174, line: 479, type: !18)
!5226 = !DILocation(line: 479, column: 92, scope: !5206)
!5227 = !DILocation(line: 481, column: 16, scope: !5206)
!5228 = !DILocation(line: 481, column: 45, scope: !5206)
!5229 = !DILocation(line: 481, column: 51, scope: !5206)
!5230 = !DILocation(line: 481, column: 25, scope: !5206)
!5231 = !DILocation(line: 340, column: 10, scope: !1127, inlinedAt: !5217)
!5232 = !DILocation(line: 340, column: 9, scope: !1103, inlinedAt: !5217)
!5233 = !DILocation(line: 341, column: 9, scope: !1127, inlinedAt: !5217)
!5234 = !DILocation(line: 343, column: 5, scope: !1103, inlinedAt: !5217)
!5235 = !DILocation(line: 343, column: 22, scope: !1132, inlinedAt: !5217)
!5236 = !DILocation(line: 343, column: 36, scope: !1132, inlinedAt: !5217)
!5237 = !DILocation(line: 343, column: 24, scope: !1132, inlinedAt: !5217)
!5238 = !DILocation(line: 343, column: 5, scope: !1132, inlinedAt: !5217)
!5239 = !DILocation(line: 344, column: 14, scope: !1137, inlinedAt: !5217)
!5240 = !DILocation(line: 344, column: 13, scope: !1137, inlinedAt: !5217)
!5241 = !DILocation(line: 344, column: 11, scope: !1137, inlinedAt: !5217)
!5242 = !DILocation(line: 345, column: 13, scope: !1141, inlinedAt: !5217)
!5243 = !DILocation(line: 345, column: 15, scope: !1141, inlinedAt: !5217)
!5244 = !DILocation(line: 345, column: 13, scope: !1137, inlinedAt: !5217)
!5245 = !DILocation(line: 346, column: 22, scope: !1141, inlinedAt: !5217)
!5246 = !DILocation(line: 346, column: 20, scope: !1141, inlinedAt: !5217)
!5247 = !DILocation(line: 346, column: 15, scope: !1141, inlinedAt: !5217)
!5248 = !DILocation(line: 346, column: 13, scope: !1141, inlinedAt: !5217)
!5249 = !DILocation(line: 343, column: 5, scope: !1149, inlinedAt: !5217)
!5250 = !DILocation(line: 348, column: 12, scope: !1103, inlinedAt: !5217)
!5251 = !DILocation(line: 348, column: 5, scope: !1103, inlinedAt: !5217)
!5252 = !DILocation(line: 349, column: 1, scope: !1103, inlinedAt: !5217)
!5253 = !DILocation(line: 481, column: 55, scope: !5206)
!5254 = !DILocation(line: 481, column: 54, scope: !5206)
!5255 = !DILocation(line: 481, column: 23, scope: !5206)
!5256 = !DILocation(line: 481, column: 5, scope: !5206)
!5257 = !DILocation(line: 481, column: 9, scope: !5206)
!5258 = !DILocation(line: 481, column: 14, scope: !5206)
!5259 = !DILocation(line: 482, column: 16, scope: !5206)
!5260 = !DILocation(line: 482, column: 44, scope: !5206)
!5261 = !DILocation(line: 482, column: 50, scope: !5206)
!5262 = !DILocation(line: 482, column: 25, scope: !5206)
!5263 = !DILocation(line: 340, column: 10, scope: !1127, inlinedAt: !5208)
!5264 = !DILocation(line: 340, column: 9, scope: !1103, inlinedAt: !5208)
!5265 = !DILocation(line: 341, column: 9, scope: !1127, inlinedAt: !5208)
!5266 = !DILocation(line: 343, column: 5, scope: !1103, inlinedAt: !5208)
!5267 = !DILocation(line: 343, column: 22, scope: !1132, inlinedAt: !5208)
!5268 = !DILocation(line: 343, column: 36, scope: !1132, inlinedAt: !5208)
!5269 = !DILocation(line: 343, column: 24, scope: !1132, inlinedAt: !5208)
!5270 = !DILocation(line: 343, column: 5, scope: !1132, inlinedAt: !5208)
!5271 = !DILocation(line: 344, column: 14, scope: !1137, inlinedAt: !5208)
!5272 = !DILocation(line: 344, column: 13, scope: !1137, inlinedAt: !5208)
!5273 = !DILocation(line: 344, column: 11, scope: !1137, inlinedAt: !5208)
!5274 = !DILocation(line: 345, column: 13, scope: !1141, inlinedAt: !5208)
!5275 = !DILocation(line: 345, column: 15, scope: !1141, inlinedAt: !5208)
!5276 = !DILocation(line: 345, column: 13, scope: !1137, inlinedAt: !5208)
!5277 = !DILocation(line: 346, column: 22, scope: !1141, inlinedAt: !5208)
!5278 = !DILocation(line: 346, column: 20, scope: !1141, inlinedAt: !5208)
!5279 = !DILocation(line: 346, column: 15, scope: !1141, inlinedAt: !5208)
!5280 = !DILocation(line: 346, column: 13, scope: !1141, inlinedAt: !5208)
!5281 = !DILocation(line: 343, column: 5, scope: !1149, inlinedAt: !5208)
!5282 = !DILocation(line: 348, column: 12, scope: !1103, inlinedAt: !5208)
!5283 = !DILocation(line: 348, column: 5, scope: !1103, inlinedAt: !5208)
!5284 = !DILocation(line: 349, column: 1, scope: !1103, inlinedAt: !5208)
!5285 = !DILocation(line: 482, column: 54, scope: !5206)
!5286 = !DILocation(line: 482, column: 53, scope: !5206)
!5287 = !DILocation(line: 482, column: 23, scope: !5206)
!5288 = !DILocation(line: 482, column: 5, scope: !5206)
!5289 = !DILocation(line: 482, column: 9, scope: !5206)
!5290 = !DILocation(line: 482, column: 14, scope: !5206)
!5291 = !DILocation(line: 483, column: 16, scope: !5206)
!5292 = !DILocation(line: 483, column: 45, scope: !5206)
!5293 = !DILocation(line: 483, column: 51, scope: !5206)
!5294 = !DILocation(line: 483, column: 25, scope: !5206)
!5295 = !DILocation(line: 340, column: 10, scope: !1127, inlinedAt: !5211)
!5296 = !DILocation(line: 340, column: 9, scope: !1103, inlinedAt: !5211)
!5297 = !DILocation(line: 341, column: 9, scope: !1127, inlinedAt: !5211)
!5298 = !DILocation(line: 343, column: 5, scope: !1103, inlinedAt: !5211)
!5299 = !DILocation(line: 343, column: 22, scope: !1132, inlinedAt: !5211)
!5300 = !DILocation(line: 343, column: 36, scope: !1132, inlinedAt: !5211)
!5301 = !DILocation(line: 343, column: 24, scope: !1132, inlinedAt: !5211)
!5302 = !DILocation(line: 343, column: 5, scope: !1132, inlinedAt: !5211)
!5303 = !DILocation(line: 344, column: 14, scope: !1137, inlinedAt: !5211)
!5304 = !DILocation(line: 344, column: 13, scope: !1137, inlinedAt: !5211)
!5305 = !DILocation(line: 344, column: 11, scope: !1137, inlinedAt: !5211)
!5306 = !DILocation(line: 345, column: 13, scope: !1141, inlinedAt: !5211)
!5307 = !DILocation(line: 345, column: 15, scope: !1141, inlinedAt: !5211)
!5308 = !DILocation(line: 345, column: 13, scope: !1137, inlinedAt: !5211)
!5309 = !DILocation(line: 346, column: 22, scope: !1141, inlinedAt: !5211)
!5310 = !DILocation(line: 346, column: 20, scope: !1141, inlinedAt: !5211)
!5311 = !DILocation(line: 346, column: 15, scope: !1141, inlinedAt: !5211)
!5312 = !DILocation(line: 346, column: 13, scope: !1141, inlinedAt: !5211)
!5313 = !DILocation(line: 343, column: 5, scope: !1149, inlinedAt: !5211)
!5314 = !DILocation(line: 348, column: 12, scope: !1103, inlinedAt: !5211)
!5315 = !DILocation(line: 348, column: 5, scope: !1103, inlinedAt: !5211)
!5316 = !DILocation(line: 349, column: 1, scope: !1103, inlinedAt: !5211)
!5317 = !DILocation(line: 483, column: 55, scope: !5206)
!5318 = !DILocation(line: 483, column: 54, scope: !5206)
!5319 = !DILocation(line: 483, column: 23, scope: !5206)
!5320 = !DILocation(line: 483, column: 5, scope: !5206)
!5321 = !DILocation(line: 483, column: 9, scope: !5206)
!5322 = !DILocation(line: 483, column: 14, scope: !5206)
!5323 = !DILocation(line: 484, column: 16, scope: !5206)
!5324 = !DILocation(line: 484, column: 45, scope: !5206)
!5325 = !DILocation(line: 484, column: 51, scope: !5206)
!5326 = !DILocation(line: 484, column: 25, scope: !5206)
!5327 = !DILocation(line: 340, column: 10, scope: !1127, inlinedAt: !5214)
!5328 = !DILocation(line: 340, column: 9, scope: !1103, inlinedAt: !5214)
!5329 = !DILocation(line: 341, column: 9, scope: !1127, inlinedAt: !5214)
!5330 = !DILocation(line: 343, column: 5, scope: !1103, inlinedAt: !5214)
!5331 = !DILocation(line: 343, column: 22, scope: !1132, inlinedAt: !5214)
!5332 = !DILocation(line: 343, column: 36, scope: !1132, inlinedAt: !5214)
!5333 = !DILocation(line: 343, column: 24, scope: !1132, inlinedAt: !5214)
!5334 = !DILocation(line: 343, column: 5, scope: !1132, inlinedAt: !5214)
!5335 = !DILocation(line: 344, column: 14, scope: !1137, inlinedAt: !5214)
!5336 = !DILocation(line: 344, column: 13, scope: !1137, inlinedAt: !5214)
!5337 = !DILocation(line: 344, column: 11, scope: !1137, inlinedAt: !5214)
!5338 = !DILocation(line: 345, column: 13, scope: !1141, inlinedAt: !5214)
!5339 = !DILocation(line: 345, column: 15, scope: !1141, inlinedAt: !5214)
!5340 = !DILocation(line: 345, column: 13, scope: !1137, inlinedAt: !5214)
!5341 = !DILocation(line: 346, column: 22, scope: !1141, inlinedAt: !5214)
!5342 = !DILocation(line: 346, column: 20, scope: !1141, inlinedAt: !5214)
!5343 = !DILocation(line: 346, column: 15, scope: !1141, inlinedAt: !5214)
!5344 = !DILocation(line: 346, column: 13, scope: !1141, inlinedAt: !5214)
!5345 = !DILocation(line: 343, column: 5, scope: !1149, inlinedAt: !5214)
!5346 = !DILocation(line: 348, column: 12, scope: !1103, inlinedAt: !5214)
!5347 = !DILocation(line: 348, column: 5, scope: !1103, inlinedAt: !5214)
!5348 = !DILocation(line: 349, column: 1, scope: !1103, inlinedAt: !5214)
!5349 = !DILocation(line: 484, column: 55, scope: !5206)
!5350 = !DILocation(line: 484, column: 54, scope: !5206)
!5351 = !DILocation(line: 484, column: 23, scope: !5206)
!5352 = !DILocation(line: 484, column: 5, scope: !5206)
!5353 = !DILocation(line: 484, column: 9, scope: !5206)
!5354 = !DILocation(line: 484, column: 14, scope: !5206)
!5355 = !DILocation(line: 485, column: 5, scope: !5206)
!5356 = !DILocation(line: 485, column: 9, scope: !5206)
!5357 = !DILocation(line: 485, column: 11, scope: !5206)
!5358 = !DILocation(line: 486, column: 1, scope: !5206)
!5359 = distinct !DISubprogram(name: "spatial_compose_dd97i_dy_10bit", scope: !174, file: !174, line: 339, type: !1596, isLocal: true, isDefinition: true, scopeLine: 340, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!5360 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !5361)
!5361 = distinct !DILocation(line: 350, column: 24, scope: !5359)
!5362 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !5361)
!5363 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !5361)
!5364 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !5365)
!5365 = distinct !DILocation(line: 349, column: 24, scope: !5359)
!5366 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !5365)
!5367 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !5365)
!5368 = !DILocalVariable(name: "d", arg: 1, scope: !5359, file: !174, line: 339, type: !37)
!5369 = !DILocation(line: 339, column: 56, scope: !5359)
!5370 = !DILocalVariable(name: "level", arg: 2, scope: !5359, file: !174, line: 339, type: !18)
!5371 = !DILocation(line: 339, column: 63, scope: !5359)
!5372 = !DILocalVariable(name: "width", arg: 3, scope: !5359, file: !174, line: 339, type: !18)
!5373 = !DILocation(line: 339, column: 74, scope: !5359)
!5374 = !DILocalVariable(name: "height", arg: 4, scope: !5359, file: !174, line: 339, type: !18)
!5375 = !DILocation(line: 339, column: 85, scope: !5359)
!5376 = !DILocalVariable(name: "stride", arg: 5, scope: !5359, file: !174, line: 339, type: !18)
!5377 = !DILocation(line: 339, column: 97, scope: !5359)
!5378 = !DILocalVariable(name: "vertical_compose_l0", scope: !5359, file: !174, line: 341, type: !1617)
!5379 = !DILocation(line: 341, column: 27, scope: !5359)
!5380 = !DILocation(line: 341, column: 56, scope: !5359)
!5381 = !DILocation(line: 341, column: 59, scope: !5359)
!5382 = !DILocation(line: 341, column: 49, scope: !5359)
!5383 = !DILocalVariable(name: "vertical_compose_h0", scope: !5359, file: !174, line: 342, type: !1626)
!5384 = !DILocation(line: 342, column: 27, scope: !5359)
!5385 = !DILocation(line: 342, column: 56, scope: !5359)
!5386 = !DILocation(line: 342, column: 59, scope: !5359)
!5387 = !DILocation(line: 342, column: 49, scope: !5359)
!5388 = !DILocalVariable(name: "cs", scope: !5359, file: !174, line: 343, type: !903)
!5389 = !DILocation(line: 343, column: 17, scope: !5359)
!5390 = !DILocation(line: 343, column: 22, scope: !5359)
!5391 = !DILocation(line: 343, column: 25, scope: !5359)
!5392 = !DILocation(line: 343, column: 30, scope: !5359)
!5393 = !DILocation(line: 343, column: 28, scope: !5359)
!5394 = !DILocalVariable(name: "i", scope: !5359, file: !174, line: 345, type: !18)
!5395 = !DILocation(line: 345, column: 9, scope: !5359)
!5396 = !DILocalVariable(name: "y", scope: !5359, file: !174, line: 345, type: !18)
!5397 = !DILocation(line: 345, column: 12, scope: !5359)
!5398 = !DILocation(line: 345, column: 16, scope: !5359)
!5399 = !DILocation(line: 345, column: 20, scope: !5359)
!5400 = !DILocalVariable(name: "b", scope: !5359, file: !174, line: 346, type: !71)
!5401 = !DILocation(line: 346, column: 14, scope: !5359)
!5402 = !DILocation(line: 347, column: 12, scope: !5403)
!5403 = distinct !DILexicalBlock(scope: !5359, file: !174, line: 347, column: 5)
!5404 = !DILocation(line: 347, column: 10, scope: !5403)
!5405 = !DILocation(line: 347, column: 17, scope: !5406)
!5406 = !DILexicalBlockFile(scope: !5407, file: !174, discriminator: 1)
!5407 = distinct !DILexicalBlock(scope: !5403, file: !174, line: 347, column: 5)
!5408 = !DILocation(line: 347, column: 19, scope: !5406)
!5409 = !DILocation(line: 347, column: 5, scope: !5406)
!5410 = !DILocation(line: 348, column: 22, scope: !5407)
!5411 = !DILocation(line: 348, column: 16, scope: !5407)
!5412 = !DILocation(line: 348, column: 20, scope: !5407)
!5413 = !DILocation(line: 348, column: 11, scope: !5407)
!5414 = !DILocation(line: 348, column: 9, scope: !5407)
!5415 = !DILocation(line: 348, column: 14, scope: !5407)
!5416 = !DILocation(line: 347, column: 25, scope: !5417)
!5417 = !DILexicalBlockFile(scope: !5407, file: !174, discriminator: 2)
!5418 = !DILocation(line: 347, column: 5, scope: !5417)
!5419 = distinct !{!5419, !5420}
!5420 = !DILocation(line: 347, column: 5, scope: !5359)
!5421 = !DILocation(line: 349, column: 12, scope: !5359)
!5422 = !DILocation(line: 349, column: 15, scope: !5359)
!5423 = !DILocation(line: 349, column: 34, scope: !5359)
!5424 = !DILocation(line: 349, column: 35, scope: !5359)
!5425 = !DILocation(line: 349, column: 42, scope: !5359)
!5426 = !DILocation(line: 349, column: 48, scope: !5359)
!5427 = !DILocation(line: 349, column: 24, scope: !5359)
!5428 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !5365)
!5429 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !5365)
!5430 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !5365)
!5431 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !5365)
!5432 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !5365)
!5433 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !5365)
!5434 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !5365)
!5435 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !5365)
!5436 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !5365)
!5437 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !5365)
!5438 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !5365)
!5439 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !5365)
!5440 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !5365)
!5441 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !5365)
!5442 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !5365)
!5443 = !DILocation(line: 349, column: 52, scope: !5359)
!5444 = !DILocation(line: 349, column: 51, scope: !5359)
!5445 = !DILocation(line: 349, column: 22, scope: !5359)
!5446 = !DILocation(line: 349, column: 5, scope: !5359)
!5447 = !DILocation(line: 349, column: 10, scope: !5359)
!5448 = !DILocation(line: 350, column: 12, scope: !5359)
!5449 = !DILocation(line: 350, column: 15, scope: !5359)
!5450 = !DILocation(line: 350, column: 34, scope: !5359)
!5451 = !DILocation(line: 350, column: 35, scope: !5359)
!5452 = !DILocation(line: 350, column: 42, scope: !5359)
!5453 = !DILocation(line: 350, column: 48, scope: !5359)
!5454 = !DILocation(line: 350, column: 24, scope: !5359)
!5455 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !5361)
!5456 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !5361)
!5457 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !5361)
!5458 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !5361)
!5459 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !5361)
!5460 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !5361)
!5461 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !5361)
!5462 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !5361)
!5463 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !5361)
!5464 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !5361)
!5465 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !5361)
!5466 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !5361)
!5467 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !5361)
!5468 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !5361)
!5469 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !5361)
!5470 = !DILocation(line: 350, column: 52, scope: !5359)
!5471 = !DILocation(line: 350, column: 51, scope: !5359)
!5472 = !DILocation(line: 350, column: 22, scope: !5359)
!5473 = !DILocation(line: 350, column: 5, scope: !5359)
!5474 = !DILocation(line: 350, column: 10, scope: !5359)
!5475 = !DILocation(line: 352, column: 8, scope: !5476)
!5476 = distinct !DILexicalBlock(scope: !5359, file: !174, line: 352, column: 8)
!5477 = !DILocation(line: 352, column: 9, scope: !5476)
!5478 = !DILocation(line: 352, column: 22, scope: !5476)
!5479 = !DILocation(line: 352, column: 11, scope: !5476)
!5480 = !DILocation(line: 352, column: 8, scope: !5359)
!5481 = !DILocation(line: 352, column: 30, scope: !5482)
!5482 = !DILexicalBlockFile(scope: !5476, file: !174, discriminator: 1)
!5483 = !DILocation(line: 352, column: 51, scope: !5482)
!5484 = !DILocation(line: 352, column: 57, scope: !5482)
!5485 = !DILocation(line: 352, column: 63, scope: !5482)
!5486 = !DILocation(line: 352, column: 69, scope: !5482)
!5487 = !DILocation(line: 353, column: 8, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5359, file: !174, line: 353, column: 8)
!5489 = !DILocation(line: 353, column: 9, scope: !5488)
!5490 = !DILocation(line: 353, column: 22, scope: !5488)
!5491 = !DILocation(line: 353, column: 11, scope: !5488)
!5492 = !DILocation(line: 353, column: 8, scope: !5359)
!5493 = !DILocation(line: 353, column: 30, scope: !5494)
!5494 = !DILexicalBlockFile(scope: !5488, file: !174, discriminator: 1)
!5495 = !DILocation(line: 353, column: 50, scope: !5494)
!5496 = !DILocation(line: 353, column: 56, scope: !5494)
!5497 = !DILocation(line: 353, column: 62, scope: !5494)
!5498 = !DILocation(line: 353, column: 68, scope: !5494)
!5499 = !DILocation(line: 353, column: 74, scope: !5494)
!5500 = !DILocation(line: 353, column: 80, scope: !5494)
!5501 = !DILocation(line: 355, column: 8, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !5359, file: !174, line: 355, column: 8)
!5503 = !DILocation(line: 355, column: 9, scope: !5502)
!5504 = !DILocation(line: 355, column: 22, scope: !5502)
!5505 = !DILocation(line: 355, column: 11, scope: !5502)
!5506 = !DILocation(line: 355, column: 8, scope: !5359)
!5507 = !DILocation(line: 355, column: 30, scope: !5508)
!5508 = !DILexicalBlockFile(scope: !5502, file: !174, discriminator: 1)
!5509 = !DILocation(line: 355, column: 33, scope: !5508)
!5510 = !DILocation(line: 355, column: 52, scope: !5508)
!5511 = !DILocation(line: 355, column: 58, scope: !5508)
!5512 = !DILocation(line: 355, column: 61, scope: !5508)
!5513 = !DILocation(line: 355, column: 67, scope: !5508)
!5514 = !DILocation(line: 356, column: 8, scope: !5515)
!5515 = distinct !DILexicalBlock(scope: !5359, file: !174, line: 356, column: 8)
!5516 = !DILocation(line: 356, column: 9, scope: !5515)
!5517 = !DILocation(line: 356, column: 22, scope: !5515)
!5518 = !DILocation(line: 356, column: 11, scope: !5515)
!5519 = !DILocation(line: 356, column: 8, scope: !5359)
!5520 = !DILocation(line: 356, column: 30, scope: !5521)
!5521 = !DILexicalBlockFile(scope: !5515, file: !174, discriminator: 1)
!5522 = !DILocation(line: 356, column: 33, scope: !5521)
!5523 = !DILocation(line: 356, column: 52, scope: !5521)
!5524 = !DILocation(line: 356, column: 58, scope: !5521)
!5525 = !DILocation(line: 356, column: 61, scope: !5521)
!5526 = !DILocation(line: 356, column: 67, scope: !5521)
!5527 = !DILocation(line: 358, column: 12, scope: !5528)
!5528 = distinct !DILexicalBlock(scope: !5359, file: !174, line: 358, column: 5)
!5529 = !DILocation(line: 358, column: 10, scope: !5528)
!5530 = !DILocation(line: 358, column: 17, scope: !5531)
!5531 = !DILexicalBlockFile(scope: !5532, file: !174, discriminator: 1)
!5532 = distinct !DILexicalBlock(scope: !5528, file: !174, line: 358, column: 5)
!5533 = !DILocation(line: 358, column: 19, scope: !5531)
!5534 = !DILocation(line: 358, column: 5, scope: !5531)
!5535 = !DILocation(line: 359, column: 22, scope: !5532)
!5536 = !DILocation(line: 359, column: 23, scope: !5532)
!5537 = !DILocation(line: 359, column: 20, scope: !5532)
!5538 = !DILocation(line: 359, column: 15, scope: !5532)
!5539 = !DILocation(line: 359, column: 9, scope: !5532)
!5540 = !DILocation(line: 359, column: 13, scope: !5532)
!5541 = !DILocation(line: 359, column: 18, scope: !5532)
!5542 = !DILocation(line: 358, column: 25, scope: !5543)
!5543 = !DILexicalBlockFile(scope: !5532, file: !174, discriminator: 2)
!5544 = !DILocation(line: 358, column: 5, scope: !5543)
!5545 = distinct !{!5545, !5546}
!5546 = !DILocation(line: 358, column: 5, scope: !5359)
!5547 = !DILocation(line: 360, column: 5, scope: !5359)
!5548 = !DILocation(line: 360, column: 9, scope: !5359)
!5549 = !DILocation(line: 360, column: 11, scope: !5359)
!5550 = !DILocation(line: 361, column: 1, scope: !5359)
!5551 = distinct !DISubprogram(name: "vertical_compose53iL0_10bit", scope: !174, file: !174, line: 44, type: !1619, isLocal: true, isDefinition: true, scopeLine: 46, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!5552 = !DILocalVariable(name: "_b0", arg: 1, scope: !5551, file: !174, line: 44, type: !20)
!5553 = !DILocation(line: 44, column: 50, scope: !5551)
!5554 = !DILocalVariable(name: "_b1", arg: 2, scope: !5551, file: !174, line: 44, type: !20)
!5555 = !DILocation(line: 44, column: 64, scope: !5551)
!5556 = !DILocalVariable(name: "_b2", arg: 3, scope: !5551, file: !174, line: 44, type: !20)
!5557 = !DILocation(line: 44, column: 78, scope: !5551)
!5558 = !DILocalVariable(name: "width", arg: 4, scope: !5551, file: !174, line: 45, type: !18)
!5559 = !DILocation(line: 45, column: 47, scope: !5551)
!5560 = !DILocalVariable(name: "i", scope: !5551, file: !174, line: 47, type: !18)
!5561 = !DILocation(line: 47, column: 9, scope: !5551)
!5562 = !DILocalVariable(name: "b0", scope: !5551, file: !174, line: 48, type: !28)
!5563 = !DILocation(line: 48, column: 14, scope: !5551)
!5564 = !DILocation(line: 48, column: 30, scope: !5551)
!5565 = !DILocation(line: 48, column: 19, scope: !5551)
!5566 = !DILocalVariable(name: "b1", scope: !5551, file: !174, line: 49, type: !28)
!5567 = !DILocation(line: 49, column: 14, scope: !5551)
!5568 = !DILocation(line: 49, column: 30, scope: !5551)
!5569 = !DILocation(line: 49, column: 19, scope: !5551)
!5570 = !DILocalVariable(name: "b2", scope: !5551, file: !174, line: 50, type: !28)
!5571 = !DILocation(line: 50, column: 14, scope: !5551)
!5572 = !DILocation(line: 50, column: 30, scope: !5551)
!5573 = !DILocation(line: 50, column: 19, scope: !5551)
!5574 = !DILocation(line: 51, column: 12, scope: !5575)
!5575 = distinct !DILexicalBlock(scope: !5551, file: !174, line: 51, column: 5)
!5576 = !DILocation(line: 51, column: 10, scope: !5575)
!5577 = !DILocation(line: 51, column: 17, scope: !5578)
!5578 = !DILexicalBlockFile(scope: !5579, file: !174, discriminator: 1)
!5579 = distinct !DILexicalBlock(scope: !5575, file: !174, line: 51, column: 5)
!5580 = !DILocation(line: 51, column: 21, scope: !5578)
!5581 = !DILocation(line: 51, column: 19, scope: !5578)
!5582 = !DILocation(line: 51, column: 5, scope: !5578)
!5583 = !DILocation(line: 52, column: 38, scope: !5579)
!5584 = !DILocation(line: 52, column: 35, scope: !5579)
!5585 = !DILocation(line: 52, column: 56, scope: !5579)
!5586 = !DILocation(line: 52, column: 53, scope: !5579)
!5587 = !DILocation(line: 52, column: 41, scope: !5579)
!5588 = !DILocation(line: 52, column: 59, scope: !5579)
!5589 = !DILocation(line: 52, column: 64, scope: !5579)
!5590 = !DILocation(line: 52, column: 12, scope: !5579)
!5591 = !DILocation(line: 52, column: 9, scope: !5579)
!5592 = !DILocation(line: 52, column: 15, scope: !5579)
!5593 = !DILocation(line: 51, column: 29, scope: !5594)
!5594 = !DILexicalBlockFile(scope: !5579, file: !174, discriminator: 2)
!5595 = !DILocation(line: 51, column: 5, scope: !5594)
!5596 = distinct !{!5596, !5597}
!5597 = !DILocation(line: 51, column: 5, scope: !5551)
!5598 = !DILocation(line: 53, column: 1, scope: !5551)
!5599 = distinct !DISubprogram(name: "vertical_compose_dd97iH0_10bit", scope: !174, file: !174, line: 216, type: !1628, isLocal: true, isDefinition: true, scopeLine: 218, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!5600 = !DILocalVariable(name: "_b0", arg: 1, scope: !5599, file: !174, line: 216, type: !20)
!5601 = !DILocation(line: 216, column: 53, scope: !5599)
!5602 = !DILocalVariable(name: "_b1", arg: 2, scope: !5599, file: !174, line: 216, type: !20)
!5603 = !DILocation(line: 216, column: 67, scope: !5599)
!5604 = !DILocalVariable(name: "_b2", arg: 3, scope: !5599, file: !174, line: 216, type: !20)
!5605 = !DILocation(line: 216, column: 81, scope: !5599)
!5606 = !DILocalVariable(name: "_b3", arg: 4, scope: !5599, file: !174, line: 217, type: !20)
!5607 = !DILocation(line: 217, column: 55, scope: !5599)
!5608 = !DILocalVariable(name: "_b4", arg: 5, scope: !5599, file: !174, line: 217, type: !20)
!5609 = !DILocation(line: 217, column: 69, scope: !5599)
!5610 = !DILocalVariable(name: "width", arg: 6, scope: !5599, file: !174, line: 217, type: !18)
!5611 = !DILocation(line: 217, column: 78, scope: !5599)
!5612 = !DILocalVariable(name: "i", scope: !5599, file: !174, line: 219, type: !18)
!5613 = !DILocation(line: 219, column: 9, scope: !5599)
!5614 = !DILocalVariable(name: "b0", scope: !5599, file: !174, line: 220, type: !28)
!5615 = !DILocation(line: 220, column: 14, scope: !5599)
!5616 = !DILocation(line: 220, column: 30, scope: !5599)
!5617 = !DILocation(line: 220, column: 19, scope: !5599)
!5618 = !DILocalVariable(name: "b1", scope: !5599, file: !174, line: 221, type: !28)
!5619 = !DILocation(line: 221, column: 14, scope: !5599)
!5620 = !DILocation(line: 221, column: 30, scope: !5599)
!5621 = !DILocation(line: 221, column: 19, scope: !5599)
!5622 = !DILocalVariable(name: "b2", scope: !5599, file: !174, line: 222, type: !28)
!5623 = !DILocation(line: 222, column: 14, scope: !5599)
!5624 = !DILocation(line: 222, column: 30, scope: !5599)
!5625 = !DILocation(line: 222, column: 19, scope: !5599)
!5626 = !DILocalVariable(name: "b3", scope: !5599, file: !174, line: 223, type: !28)
!5627 = !DILocation(line: 223, column: 14, scope: !5599)
!5628 = !DILocation(line: 223, column: 30, scope: !5599)
!5629 = !DILocation(line: 223, column: 19, scope: !5599)
!5630 = !DILocalVariable(name: "b4", scope: !5599, file: !174, line: 224, type: !28)
!5631 = !DILocation(line: 224, column: 14, scope: !5599)
!5632 = !DILocation(line: 224, column: 30, scope: !5599)
!5633 = !DILocation(line: 224, column: 19, scope: !5599)
!5634 = !DILocation(line: 225, column: 10, scope: !5635)
!5635 = distinct !DILexicalBlock(scope: !5599, file: !174, line: 225, column: 5)
!5636 = !DILocation(line: 225, column: 9, scope: !5635)
!5637 = !DILocation(line: 225, column: 14, scope: !5638)
!5638 = !DILexicalBlockFile(scope: !5639, file: !174, discriminator: 1)
!5639 = distinct !DILexicalBlock(scope: !5635, file: !174, line: 225, column: 5)
!5640 = !DILocation(line: 225, column: 16, scope: !5638)
!5641 = !DILocation(line: 225, column: 15, scope: !5638)
!5642 = !DILocation(line: 225, column: 5, scope: !5638)
!5643 = !DILocation(line: 226, column: 38, scope: !5644)
!5644 = distinct !DILexicalBlock(scope: !5639, file: !174, line: 225, column: 27)
!5645 = !DILocation(line: 226, column: 35, scope: !5644)
!5646 = !DILocation(line: 226, column: 57, scope: !5644)
!5647 = !DILocation(line: 226, column: 54, scope: !5644)
!5648 = !DILocation(line: 226, column: 53, scope: !5644)
!5649 = !DILocation(line: 226, column: 68, scope: !5644)
!5650 = !DILocation(line: 226, column: 65, scope: !5644)
!5651 = !DILocation(line: 226, column: 64, scope: !5644)
!5652 = !DILocation(line: 226, column: 60, scope: !5644)
!5653 = !DILocation(line: 226, column: 76, scope: !5644)
!5654 = !DILocation(line: 226, column: 73, scope: !5644)
!5655 = !DILocation(line: 226, column: 71, scope: !5644)
!5656 = !DILocation(line: 226, column: 84, scope: !5644)
!5657 = !DILocation(line: 226, column: 81, scope: !5644)
!5658 = !DILocation(line: 226, column: 79, scope: !5644)
!5659 = !DILocation(line: 226, column: 87, scope: !5644)
!5660 = !DILocation(line: 226, column: 92, scope: !5644)
!5661 = !DILocation(line: 226, column: 42, scope: !5644)
!5662 = !DILocation(line: 226, column: 12, scope: !5644)
!5663 = !DILocation(line: 226, column: 9, scope: !5644)
!5664 = !DILocation(line: 226, column: 15, scope: !5644)
!5665 = !DILocation(line: 227, column: 5, scope: !5644)
!5666 = !DILocation(line: 225, column: 24, scope: !5667)
!5667 = !DILexicalBlockFile(scope: !5639, file: !174, discriminator: 2)
!5668 = !DILocation(line: 225, column: 5, scope: !5667)
!5669 = distinct !{!5669, !5670}
!5670 = !DILocation(line: 225, column: 5, scope: !5599)
!5671 = !DILocation(line: 228, column: 1, scope: !5599)
!5672 = distinct !DISubprogram(name: "horizontal_compose_dd97i_10bit", scope: !174, file: !174, line: 82, type: !63, isLocal: true, isDefinition: true, scopeLine: 83, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!5673 = !DILocalVariable(name: "_b", arg: 1, scope: !5672, file: !174, line: 82, type: !20)
!5674 = !DILocation(line: 82, column: 53, scope: !5672)
!5675 = !DILocalVariable(name: "_tmp", arg: 2, scope: !5672, file: !174, line: 82, type: !20)
!5676 = !DILocation(line: 82, column: 66, scope: !5672)
!5677 = !DILocalVariable(name: "w", arg: 3, scope: !5672, file: !174, line: 82, type: !18)
!5678 = !DILocation(line: 82, column: 76, scope: !5672)
!5679 = !DILocalVariable(name: "x", scope: !5672, file: !174, line: 84, type: !18)
!5680 = !DILocation(line: 84, column: 9, scope: !5672)
!5681 = !DILocalVariable(name: "w2", scope: !5672, file: !174, line: 85, type: !1931)
!5682 = !DILocation(line: 85, column: 15, scope: !5672)
!5683 = !DILocation(line: 85, column: 20, scope: !5672)
!5684 = !DILocation(line: 85, column: 22, scope: !5672)
!5685 = !DILocalVariable(name: "b", scope: !5672, file: !174, line: 86, type: !28)
!5686 = !DILocation(line: 86, column: 14, scope: !5672)
!5687 = !DILocation(line: 86, column: 29, scope: !5672)
!5688 = !DILocation(line: 86, column: 18, scope: !5672)
!5689 = !DILocalVariable(name: "tmp", scope: !5672, file: !174, line: 87, type: !28)
!5690 = !DILocation(line: 87, column: 14, scope: !5672)
!5691 = !DILocation(line: 87, column: 31, scope: !5672)
!5692 = !DILocation(line: 87, column: 20, scope: !5672)
!5693 = !DILocation(line: 89, column: 15, scope: !5672)
!5694 = !DILocation(line: 89, column: 41, scope: !5672)
!5695 = !DILocation(line: 89, column: 39, scope: !5672)
!5696 = !DILocation(line: 89, column: 60, scope: !5672)
!5697 = !DILocation(line: 89, column: 58, scope: !5672)
!5698 = !DILocation(line: 89, column: 45, scope: !5672)
!5699 = !DILocation(line: 89, column: 65, scope: !5672)
!5700 = !DILocation(line: 89, column: 70, scope: !5672)
!5701 = !DILocation(line: 89, column: 20, scope: !5672)
!5702 = !DILocation(line: 89, column: 5, scope: !5672)
!5703 = !DILocation(line: 89, column: 12, scope: !5672)
!5704 = !DILocation(line: 90, column: 12, scope: !5705)
!5705 = distinct !DILexicalBlock(scope: !5672, file: !174, line: 90, column: 5)
!5706 = !DILocation(line: 90, column: 10, scope: !5705)
!5707 = !DILocation(line: 90, column: 17, scope: !5708)
!5708 = !DILexicalBlockFile(scope: !5709, file: !174, discriminator: 1)
!5709 = distinct !DILexicalBlock(scope: !5705, file: !174, line: 90, column: 5)
!5710 = !DILocation(line: 90, column: 21, scope: !5708)
!5711 = !DILocation(line: 90, column: 19, scope: !5708)
!5712 = !DILocation(line: 90, column: 5, scope: !5708)
!5713 = !DILocation(line: 91, column: 21, scope: !5709)
!5714 = !DILocation(line: 91, column: 19, scope: !5709)
!5715 = !DILocation(line: 91, column: 45, scope: !5709)
!5716 = !DILocation(line: 91, column: 47, scope: !5709)
!5717 = !DILocation(line: 91, column: 46, scope: !5709)
!5718 = !DILocation(line: 91, column: 49, scope: !5709)
!5719 = !DILocation(line: 91, column: 43, scope: !5709)
!5720 = !DILocation(line: 91, column: 68, scope: !5709)
!5721 = !DILocation(line: 91, column: 70, scope: !5709)
!5722 = !DILocation(line: 91, column: 69, scope: !5709)
!5723 = !DILocation(line: 91, column: 66, scope: !5709)
!5724 = !DILocation(line: 91, column: 53, scope: !5709)
!5725 = !DILocation(line: 91, column: 75, scope: !5709)
!5726 = !DILocation(line: 91, column: 80, scope: !5709)
!5727 = !DILocation(line: 91, column: 24, scope: !5709)
!5728 = !DILocation(line: 91, column: 13, scope: !5709)
!5729 = !DILocation(line: 91, column: 9, scope: !5709)
!5730 = !DILocation(line: 91, column: 16, scope: !5709)
!5731 = !DILocation(line: 90, column: 26, scope: !5732)
!5732 = !DILexicalBlockFile(scope: !5709, file: !174, discriminator: 2)
!5733 = !DILocation(line: 90, column: 5, scope: !5732)
!5734 = distinct !{!5734, !5735}
!5735 = !DILocation(line: 90, column: 5, scope: !5672)
!5736 = !DILocation(line: 94, column: 15, scope: !5672)
!5737 = !DILocation(line: 94, column: 5, scope: !5672)
!5738 = !DILocation(line: 94, column: 13, scope: !5672)
!5739 = !DILocation(line: 95, column: 31, scope: !5672)
!5740 = !DILocation(line: 95, column: 33, scope: !5672)
!5741 = !DILocation(line: 95, column: 27, scope: !5672)
!5742 = !DILocation(line: 95, column: 21, scope: !5672)
!5743 = !DILocation(line: 95, column: 17, scope: !5672)
!5744 = !DILocation(line: 95, column: 25, scope: !5672)
!5745 = !DILocation(line: 95, column: 9, scope: !5672)
!5746 = !DILocation(line: 95, column: 11, scope: !5672)
!5747 = !DILocation(line: 95, column: 5, scope: !5672)
!5748 = !DILocation(line: 95, column: 15, scope: !5672)
!5749 = !DILocation(line: 97, column: 12, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5672, file: !174, line: 97, column: 5)
!5751 = !DILocation(line: 97, column: 10, scope: !5750)
!5752 = !DILocation(line: 97, column: 17, scope: !5753)
!5753 = !DILexicalBlockFile(scope: !5754, file: !174, discriminator: 1)
!5754 = distinct !DILexicalBlock(scope: !5750, file: !174, line: 97, column: 5)
!5755 = !DILocation(line: 97, column: 21, scope: !5753)
!5756 = !DILocation(line: 97, column: 19, scope: !5753)
!5757 = !DILocation(line: 97, column: 5, scope: !5753)
!5758 = !DILocation(line: 98, column: 30, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5754, file: !174, line: 97, column: 30)
!5760 = !DILocation(line: 98, column: 26, scope: !5759)
!5761 = !DILocation(line: 98, column: 33, scope: !5759)
!5762 = !DILocation(line: 98, column: 39, scope: !5759)
!5763 = !DILocation(line: 98, column: 13, scope: !5759)
!5764 = !DILocation(line: 98, column: 12, scope: !5759)
!5765 = !DILocation(line: 98, column: 9, scope: !5759)
!5766 = !DILocation(line: 98, column: 17, scope: !5759)
!5767 = !DILocation(line: 99, column: 47, scope: !5759)
!5768 = !DILocation(line: 99, column: 49, scope: !5759)
!5769 = !DILocation(line: 99, column: 48, scope: !5759)
!5770 = !DILocation(line: 99, column: 45, scope: !5759)
!5771 = !DILocation(line: 99, column: 70, scope: !5759)
!5772 = !DILocation(line: 99, column: 66, scope: !5759)
!5773 = !DILocation(line: 99, column: 65, scope: !5759)
!5774 = !DILocation(line: 99, column: 82, scope: !5759)
!5775 = !DILocation(line: 99, column: 83, scope: !5759)
!5776 = !DILocation(line: 99, column: 78, scope: !5759)
!5777 = !DILocation(line: 99, column: 77, scope: !5759)
!5778 = !DILocation(line: 99, column: 73, scope: !5759)
!5779 = !DILocation(line: 99, column: 93, scope: !5759)
!5780 = !DILocation(line: 99, column: 94, scope: !5759)
!5781 = !DILocation(line: 99, column: 89, scope: !5759)
!5782 = !DILocation(line: 99, column: 87, scope: !5759)
!5783 = !DILocation(line: 99, column: 104, scope: !5759)
!5784 = !DILocation(line: 99, column: 105, scope: !5759)
!5785 = !DILocation(line: 99, column: 100, scope: !5759)
!5786 = !DILocation(line: 99, column: 98, scope: !5759)
!5787 = !DILocation(line: 99, column: 109, scope: !5759)
!5788 = !DILocation(line: 99, column: 114, scope: !5759)
!5789 = !DILocation(line: 99, column: 54, scope: !5759)
!5790 = !DILocation(line: 99, column: 122, scope: !5759)
!5791 = !DILocation(line: 99, column: 128, scope: !5759)
!5792 = !DILocation(line: 99, column: 13, scope: !5759)
!5793 = !DILocation(line: 99, column: 12, scope: !5759)
!5794 = !DILocation(line: 99, column: 14, scope: !5759)
!5795 = !DILocation(line: 99, column: 9, scope: !5759)
!5796 = !DILocation(line: 99, column: 18, scope: !5759)
!5797 = !DILocation(line: 100, column: 5, scope: !5759)
!5798 = !DILocation(line: 97, column: 26, scope: !5799)
!5799 = !DILexicalBlockFile(scope: !5754, file: !174, discriminator: 2)
!5800 = !DILocation(line: 97, column: 5, scope: !5799)
!5801 = distinct !{!5801, !5802}
!5802 = !DILocation(line: 97, column: 5, scope: !5672)
!5803 = !DILocation(line: 101, column: 1, scope: !5672)
!5804 = distinct !DISubprogram(name: "spatial_compose_dirac53i_dy_10bit", scope: !174, file: !174, line: 363, type: !1596, isLocal: true, isDefinition: true, scopeLine: 364, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!5805 = !DILocation(line: 338, column: 91, scope: !1103, inlinedAt: !5806)
!5806 = distinct !DILocation(line: 372, column: 24, scope: !5804)
!5807 = !DILocation(line: 338, column: 98, scope: !1103, inlinedAt: !5806)
!5808 = !DILocation(line: 338, column: 91, scope: !1103, inlinedAt: !5809)
!5809 = distinct !DILocation(line: 371, column: 24, scope: !5804)
!5810 = !DILocation(line: 338, column: 98, scope: !1103, inlinedAt: !5809)
!5811 = !DILocalVariable(name: "d", arg: 1, scope: !5804, file: !174, line: 363, type: !37)
!5812 = !DILocation(line: 363, column: 59, scope: !5804)
!5813 = !DILocalVariable(name: "level", arg: 2, scope: !5804, file: !174, line: 363, type: !18)
!5814 = !DILocation(line: 363, column: 66, scope: !5804)
!5815 = !DILocalVariable(name: "width", arg: 3, scope: !5804, file: !174, line: 363, type: !18)
!5816 = !DILocation(line: 363, column: 77, scope: !5804)
!5817 = !DILocalVariable(name: "height", arg: 4, scope: !5804, file: !174, line: 363, type: !18)
!5818 = !DILocation(line: 363, column: 88, scope: !5804)
!5819 = !DILocalVariable(name: "stride", arg: 5, scope: !5804, file: !174, line: 363, type: !18)
!5820 = !DILocation(line: 363, column: 100, scope: !5804)
!5821 = !DILocalVariable(name: "vertical_compose_l0", scope: !5804, file: !174, line: 365, type: !1617)
!5822 = !DILocation(line: 365, column: 27, scope: !5804)
!5823 = !DILocation(line: 365, column: 56, scope: !5804)
!5824 = !DILocation(line: 365, column: 59, scope: !5804)
!5825 = !DILocation(line: 365, column: 49, scope: !5804)
!5826 = !DILocalVariable(name: "vertical_compose_h0", scope: !5804, file: !174, line: 366, type: !1617)
!5827 = !DILocation(line: 366, column: 27, scope: !5804)
!5828 = !DILocation(line: 366, column: 56, scope: !5804)
!5829 = !DILocation(line: 366, column: 59, scope: !5804)
!5830 = !DILocation(line: 366, column: 49, scope: !5804)
!5831 = !DILocalVariable(name: "cs", scope: !5804, file: !174, line: 367, type: !903)
!5832 = !DILocation(line: 367, column: 17, scope: !5804)
!5833 = !DILocation(line: 367, column: 22, scope: !5804)
!5834 = !DILocation(line: 367, column: 25, scope: !5804)
!5835 = !DILocation(line: 367, column: 30, scope: !5804)
!5836 = !DILocation(line: 367, column: 28, scope: !5804)
!5837 = !DILocalVariable(name: "y", scope: !5804, file: !174, line: 369, type: !18)
!5838 = !DILocation(line: 369, column: 9, scope: !5804)
!5839 = !DILocation(line: 369, column: 12, scope: !5804)
!5840 = !DILocation(line: 369, column: 16, scope: !5804)
!5841 = !DILocalVariable(name: "b", scope: !5804, file: !174, line: 370, type: !2099)
!5842 = !DILocation(line: 370, column: 14, scope: !5804)
!5843 = !DILocation(line: 370, column: 21, scope: !5804)
!5844 = !DILocation(line: 370, column: 23, scope: !5804)
!5845 = !DILocation(line: 370, column: 27, scope: !5804)
!5846 = !DILocation(line: 370, column: 33, scope: !5804)
!5847 = !DILocation(line: 370, column: 37, scope: !5804)
!5848 = !DILocation(line: 370, column: 21, scope: !5849)
!5849 = !DILexicalBlockFile(scope: !5804, file: !174, discriminator: 1)
!5850 = !DILocation(line: 371, column: 12, scope: !5804)
!5851 = !DILocation(line: 371, column: 15, scope: !5804)
!5852 = !DILocation(line: 371, column: 38, scope: !5804)
!5853 = !DILocation(line: 371, column: 39, scope: !5804)
!5854 = !DILocation(line: 371, column: 43, scope: !5804)
!5855 = !DILocation(line: 371, column: 49, scope: !5804)
!5856 = !DILocation(line: 371, column: 24, scope: !5804)
!5857 = !DILocation(line: 340, column: 10, scope: !1127, inlinedAt: !5809)
!5858 = !DILocation(line: 340, column: 9, scope: !1103, inlinedAt: !5809)
!5859 = !DILocation(line: 341, column: 9, scope: !1127, inlinedAt: !5809)
!5860 = !DILocation(line: 343, column: 5, scope: !1103, inlinedAt: !5809)
!5861 = !DILocation(line: 343, column: 22, scope: !1132, inlinedAt: !5809)
!5862 = !DILocation(line: 343, column: 36, scope: !1132, inlinedAt: !5809)
!5863 = !DILocation(line: 343, column: 24, scope: !1132, inlinedAt: !5809)
!5864 = !DILocation(line: 343, column: 5, scope: !1132, inlinedAt: !5809)
!5865 = !DILocation(line: 344, column: 14, scope: !1137, inlinedAt: !5809)
!5866 = !DILocation(line: 344, column: 13, scope: !1137, inlinedAt: !5809)
!5867 = !DILocation(line: 344, column: 11, scope: !1137, inlinedAt: !5809)
!5868 = !DILocation(line: 345, column: 13, scope: !1141, inlinedAt: !5809)
!5869 = !DILocation(line: 345, column: 15, scope: !1141, inlinedAt: !5809)
!5870 = !DILocation(line: 345, column: 13, scope: !1137, inlinedAt: !5809)
!5871 = !DILocation(line: 346, column: 22, scope: !1141, inlinedAt: !5809)
!5872 = !DILocation(line: 346, column: 20, scope: !1141, inlinedAt: !5809)
!5873 = !DILocation(line: 346, column: 15, scope: !1141, inlinedAt: !5809)
!5874 = !DILocation(line: 346, column: 13, scope: !1141, inlinedAt: !5809)
!5875 = !DILocation(line: 343, column: 5, scope: !1149, inlinedAt: !5809)
!5876 = !DILocation(line: 348, column: 12, scope: !1103, inlinedAt: !5809)
!5877 = !DILocation(line: 348, column: 5, scope: !1103, inlinedAt: !5809)
!5878 = !DILocation(line: 349, column: 1, scope: !1103, inlinedAt: !5809)
!5879 = !DILocation(line: 371, column: 53, scope: !5804)
!5880 = !DILocation(line: 371, column: 52, scope: !5804)
!5881 = !DILocation(line: 371, column: 22, scope: !5804)
!5882 = !DILocation(line: 371, column: 5, scope: !5804)
!5883 = !DILocation(line: 371, column: 10, scope: !5804)
!5884 = !DILocation(line: 372, column: 12, scope: !5804)
!5885 = !DILocation(line: 372, column: 15, scope: !5804)
!5886 = !DILocation(line: 372, column: 38, scope: !5804)
!5887 = !DILocation(line: 372, column: 39, scope: !5804)
!5888 = !DILocation(line: 372, column: 43, scope: !5804)
!5889 = !DILocation(line: 372, column: 49, scope: !5804)
!5890 = !DILocation(line: 372, column: 24, scope: !5804)
!5891 = !DILocation(line: 340, column: 10, scope: !1127, inlinedAt: !5806)
!5892 = !DILocation(line: 340, column: 9, scope: !1103, inlinedAt: !5806)
!5893 = !DILocation(line: 341, column: 9, scope: !1127, inlinedAt: !5806)
!5894 = !DILocation(line: 343, column: 5, scope: !1103, inlinedAt: !5806)
!5895 = !DILocation(line: 343, column: 22, scope: !1132, inlinedAt: !5806)
!5896 = !DILocation(line: 343, column: 36, scope: !1132, inlinedAt: !5806)
!5897 = !DILocation(line: 343, column: 24, scope: !1132, inlinedAt: !5806)
!5898 = !DILocation(line: 343, column: 5, scope: !1132, inlinedAt: !5806)
!5899 = !DILocation(line: 344, column: 14, scope: !1137, inlinedAt: !5806)
!5900 = !DILocation(line: 344, column: 13, scope: !1137, inlinedAt: !5806)
!5901 = !DILocation(line: 344, column: 11, scope: !1137, inlinedAt: !5806)
!5902 = !DILocation(line: 345, column: 13, scope: !1141, inlinedAt: !5806)
!5903 = !DILocation(line: 345, column: 15, scope: !1141, inlinedAt: !5806)
!5904 = !DILocation(line: 345, column: 13, scope: !1137, inlinedAt: !5806)
!5905 = !DILocation(line: 346, column: 22, scope: !1141, inlinedAt: !5806)
!5906 = !DILocation(line: 346, column: 20, scope: !1141, inlinedAt: !5806)
!5907 = !DILocation(line: 346, column: 15, scope: !1141, inlinedAt: !5806)
!5908 = !DILocation(line: 346, column: 13, scope: !1141, inlinedAt: !5806)
!5909 = !DILocation(line: 343, column: 5, scope: !1149, inlinedAt: !5806)
!5910 = !DILocation(line: 348, column: 12, scope: !1103, inlinedAt: !5806)
!5911 = !DILocation(line: 348, column: 5, scope: !1103, inlinedAt: !5806)
!5912 = !DILocation(line: 349, column: 1, scope: !1103, inlinedAt: !5806)
!5913 = !DILocation(line: 372, column: 53, scope: !5804)
!5914 = !DILocation(line: 372, column: 52, scope: !5804)
!5915 = !DILocation(line: 372, column: 22, scope: !5804)
!5916 = !DILocation(line: 372, column: 5, scope: !5804)
!5917 = !DILocation(line: 372, column: 10, scope: !5804)
!5918 = !DILocation(line: 374, column: 8, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5804, file: !174, line: 374, column: 8)
!5920 = !DILocation(line: 374, column: 9, scope: !5919)
!5921 = !DILocation(line: 374, column: 22, scope: !5919)
!5922 = !DILocation(line: 374, column: 11, scope: !5919)
!5923 = !DILocation(line: 374, column: 8, scope: !5804)
!5924 = !DILocation(line: 374, column: 30, scope: !5925)
!5925 = !DILexicalBlockFile(scope: !5919, file: !174, discriminator: 1)
!5926 = !DILocation(line: 374, column: 50, scope: !5925)
!5927 = !DILocation(line: 374, column: 56, scope: !5925)
!5928 = !DILocation(line: 374, column: 62, scope: !5925)
!5929 = !DILocation(line: 374, column: 68, scope: !5925)
!5930 = !DILocation(line: 375, column: 8, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5804, file: !174, line: 375, column: 8)
!5932 = !DILocation(line: 375, column: 9, scope: !5931)
!5933 = !DILocation(line: 375, column: 22, scope: !5931)
!5934 = !DILocation(line: 375, column: 11, scope: !5931)
!5935 = !DILocation(line: 375, column: 8, scope: !5804)
!5936 = !DILocation(line: 375, column: 30, scope: !5937)
!5937 = !DILexicalBlockFile(scope: !5931, file: !174, discriminator: 1)
!5938 = !DILocation(line: 375, column: 50, scope: !5937)
!5939 = !DILocation(line: 375, column: 56, scope: !5937)
!5940 = !DILocation(line: 375, column: 62, scope: !5937)
!5941 = !DILocation(line: 375, column: 68, scope: !5937)
!5942 = !DILocation(line: 377, column: 8, scope: !5943)
!5943 = distinct !DILexicalBlock(scope: !5804, file: !174, line: 377, column: 8)
!5944 = !DILocation(line: 377, column: 9, scope: !5943)
!5945 = !DILocation(line: 377, column: 22, scope: !5943)
!5946 = !DILocation(line: 377, column: 11, scope: !5943)
!5947 = !DILocation(line: 377, column: 8, scope: !5804)
!5948 = !DILocation(line: 377, column: 30, scope: !5949)
!5949 = !DILexicalBlockFile(scope: !5943, file: !174, discriminator: 1)
!5950 = !DILocation(line: 377, column: 33, scope: !5949)
!5951 = !DILocation(line: 377, column: 52, scope: !5949)
!5952 = !DILocation(line: 377, column: 58, scope: !5949)
!5953 = !DILocation(line: 377, column: 61, scope: !5949)
!5954 = !DILocation(line: 377, column: 67, scope: !5949)
!5955 = !DILocation(line: 378, column: 8, scope: !5956)
!5956 = distinct !DILexicalBlock(scope: !5804, file: !174, line: 378, column: 8)
!5957 = !DILocation(line: 378, column: 9, scope: !5956)
!5958 = !DILocation(line: 378, column: 22, scope: !5956)
!5959 = !DILocation(line: 378, column: 11, scope: !5956)
!5960 = !DILocation(line: 378, column: 8, scope: !5804)
!5961 = !DILocation(line: 378, column: 30, scope: !5962)
!5962 = !DILexicalBlockFile(scope: !5956, file: !174, discriminator: 1)
!5963 = !DILocation(line: 378, column: 33, scope: !5962)
!5964 = !DILocation(line: 378, column: 52, scope: !5962)
!5965 = !DILocation(line: 378, column: 58, scope: !5962)
!5966 = !DILocation(line: 378, column: 61, scope: !5962)
!5967 = !DILocation(line: 378, column: 67, scope: !5962)
!5968 = !DILocation(line: 380, column: 16, scope: !5804)
!5969 = !DILocation(line: 380, column: 5, scope: !5804)
!5970 = !DILocation(line: 380, column: 9, scope: !5804)
!5971 = !DILocation(line: 380, column: 14, scope: !5804)
!5972 = !DILocation(line: 381, column: 16, scope: !5804)
!5973 = !DILocation(line: 381, column: 5, scope: !5804)
!5974 = !DILocation(line: 381, column: 9, scope: !5804)
!5975 = !DILocation(line: 381, column: 14, scope: !5804)
!5976 = !DILocation(line: 382, column: 5, scope: !5804)
!5977 = !DILocation(line: 382, column: 9, scope: !5804)
!5978 = !DILocation(line: 382, column: 11, scope: !5804)
!5979 = !DILocation(line: 383, column: 1, scope: !5804)
!5980 = distinct !DISubprogram(name: "vertical_compose_dirac53iH0_10bit", scope: !174, file: !174, line: 204, type: !1619, isLocal: true, isDefinition: true, scopeLine: 206, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!5981 = !DILocalVariable(name: "_b0", arg: 1, scope: !5980, file: !174, line: 204, type: !20)
!5982 = !DILocation(line: 204, column: 56, scope: !5980)
!5983 = !DILocalVariable(name: "_b1", arg: 2, scope: !5980, file: !174, line: 204, type: !20)
!5984 = !DILocation(line: 204, column: 70, scope: !5980)
!5985 = !DILocalVariable(name: "_b2", arg: 3, scope: !5980, file: !174, line: 204, type: !20)
!5986 = !DILocation(line: 204, column: 84, scope: !5980)
!5987 = !DILocalVariable(name: "width", arg: 4, scope: !5980, file: !174, line: 205, type: !18)
!5988 = !DILocation(line: 205, column: 53, scope: !5980)
!5989 = !DILocalVariable(name: "i", scope: !5980, file: !174, line: 207, type: !18)
!5990 = !DILocation(line: 207, column: 9, scope: !5980)
!5991 = !DILocalVariable(name: "b0", scope: !5980, file: !174, line: 208, type: !28)
!5992 = !DILocation(line: 208, column: 14, scope: !5980)
!5993 = !DILocation(line: 208, column: 30, scope: !5980)
!5994 = !DILocation(line: 208, column: 19, scope: !5980)
!5995 = !DILocalVariable(name: "b1", scope: !5980, file: !174, line: 209, type: !28)
!5996 = !DILocation(line: 209, column: 14, scope: !5980)
!5997 = !DILocation(line: 209, column: 30, scope: !5980)
!5998 = !DILocation(line: 209, column: 19, scope: !5980)
!5999 = !DILocalVariable(name: "b2", scope: !5980, file: !174, line: 210, type: !28)
!6000 = !DILocation(line: 210, column: 14, scope: !5980)
!6001 = !DILocation(line: 210, column: 30, scope: !5980)
!6002 = !DILocation(line: 210, column: 19, scope: !5980)
!6003 = !DILocation(line: 211, column: 10, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !5980, file: !174, line: 211, column: 5)
!6005 = !DILocation(line: 211, column: 9, scope: !6004)
!6006 = !DILocation(line: 211, column: 14, scope: !6007)
!6007 = !DILexicalBlockFile(scope: !6008, file: !174, discriminator: 1)
!6008 = distinct !DILexicalBlock(scope: !6004, file: !174, line: 211, column: 5)
!6009 = !DILocation(line: 211, column: 16, scope: !6007)
!6010 = !DILocation(line: 211, column: 15, scope: !6007)
!6011 = !DILocation(line: 211, column: 5, scope: !6007)
!6012 = !DILocation(line: 212, column: 21, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !6008, file: !174, line: 211, column: 27)
!6014 = !DILocation(line: 212, column: 18, scope: !6013)
!6015 = !DILocation(line: 212, column: 46, scope: !6013)
!6016 = !DILocation(line: 212, column: 43, scope: !6013)
!6017 = !DILocation(line: 212, column: 65, scope: !6013)
!6018 = !DILocation(line: 212, column: 62, scope: !6013)
!6019 = !DILocation(line: 212, column: 49, scope: !6013)
!6020 = !DILocation(line: 212, column: 69, scope: !6013)
!6021 = !DILocation(line: 212, column: 74, scope: !6013)
!6022 = !DILocation(line: 212, column: 24, scope: !6013)
!6023 = !DILocation(line: 212, column: 12, scope: !6013)
!6024 = !DILocation(line: 212, column: 9, scope: !6013)
!6025 = !DILocation(line: 212, column: 15, scope: !6013)
!6026 = !DILocation(line: 213, column: 5, scope: !6013)
!6027 = !DILocation(line: 211, column: 24, scope: !6028)
!6028 = !DILexicalBlockFile(scope: !6008, file: !174, discriminator: 2)
!6029 = !DILocation(line: 211, column: 5, scope: !6028)
!6030 = distinct !{!6030, !6031}
!6031 = !DILocation(line: 211, column: 5, scope: !5980)
!6032 = !DILocation(line: 214, column: 1, scope: !5980)
!6033 = distinct !DISubprogram(name: "horizontal_compose_dirac53i_10bit", scope: !174, file: !174, line: 65, type: !63, isLocal: true, isDefinition: true, scopeLine: 66, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!6034 = !DILocalVariable(name: "dst", arg: 1, scope: !6035, file: !174, line: 55, type: !28)
!6035 = distinct !DISubprogram(name: "interleave_10bit", scope: !174, file: !174, line: 55, type: !6036, isLocal: true, isDefinition: true, scopeLine: 57, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!6036 = !DISubroutineType(types: !6037)
!6037 = !{null, !28, !28, !28, !18, !18, !18}
!6038 = !DILocation(line: 55, column: 77, scope: !6035, inlinedAt: !6039)
!6039 = distinct !DILocation(line: 79, column: 5, scope: !6033)
!6040 = !DILocalVariable(name: "src0", arg: 2, scope: !6035, file: !174, line: 55, type: !28)
!6041 = !DILocation(line: 55, column: 91, scope: !6035, inlinedAt: !6039)
!6042 = !DILocalVariable(name: "src1", arg: 3, scope: !6035, file: !174, line: 55, type: !28)
!6043 = !DILocation(line: 55, column: 106, scope: !6035, inlinedAt: !6039)
!6044 = !DILocalVariable(name: "w2", arg: 4, scope: !6035, file: !174, line: 55, type: !18)
!6045 = !DILocation(line: 55, column: 116, scope: !6035, inlinedAt: !6039)
!6046 = !DILocalVariable(name: "add", arg: 5, scope: !6035, file: !174, line: 56, type: !18)
!6047 = !DILocation(line: 56, column: 53, scope: !6035, inlinedAt: !6039)
!6048 = !DILocalVariable(name: "shift", arg: 6, scope: !6035, file: !174, line: 56, type: !18)
!6049 = !DILocation(line: 56, column: 62, scope: !6035, inlinedAt: !6039)
!6050 = !DILocalVariable(name: "i", scope: !6035, file: !174, line: 58, type: !18)
!6051 = !DILocation(line: 58, column: 9, scope: !6035, inlinedAt: !6039)
!6052 = !DILocalVariable(name: "_b", arg: 1, scope: !6033, file: !174, line: 65, type: !20)
!6053 = !DILocation(line: 65, column: 56, scope: !6033)
!6054 = !DILocalVariable(name: "_temp", arg: 2, scope: !6033, file: !174, line: 65, type: !20)
!6055 = !DILocation(line: 65, column: 69, scope: !6033)
!6056 = !DILocalVariable(name: "w", arg: 3, scope: !6033, file: !174, line: 65, type: !18)
!6057 = !DILocation(line: 65, column: 80, scope: !6033)
!6058 = !DILocalVariable(name: "x", scope: !6033, file: !174, line: 67, type: !18)
!6059 = !DILocation(line: 67, column: 9, scope: !6033)
!6060 = !DILocalVariable(name: "w2", scope: !6033, file: !174, line: 68, type: !1931)
!6061 = !DILocation(line: 68, column: 15, scope: !6033)
!6062 = !DILocation(line: 68, column: 20, scope: !6033)
!6063 = !DILocation(line: 68, column: 22, scope: !6033)
!6064 = !DILocalVariable(name: "b", scope: !6033, file: !174, line: 69, type: !28)
!6065 = !DILocation(line: 69, column: 14, scope: !6033)
!6066 = !DILocation(line: 69, column: 29, scope: !6033)
!6067 = !DILocation(line: 69, column: 18, scope: !6033)
!6068 = !DILocalVariable(name: "temp", scope: !6033, file: !174, line: 70, type: !28)
!6069 = !DILocation(line: 70, column: 14, scope: !6033)
!6070 = !DILocation(line: 70, column: 32, scope: !6033)
!6071 = !DILocation(line: 70, column: 21, scope: !6033)
!6072 = !DILocation(line: 72, column: 16, scope: !6033)
!6073 = !DILocation(line: 72, column: 42, scope: !6033)
!6074 = !DILocation(line: 72, column: 40, scope: !6033)
!6075 = !DILocation(line: 72, column: 61, scope: !6033)
!6076 = !DILocation(line: 72, column: 59, scope: !6033)
!6077 = !DILocation(line: 72, column: 46, scope: !6033)
!6078 = !DILocation(line: 72, column: 66, scope: !6033)
!6079 = !DILocation(line: 72, column: 71, scope: !6033)
!6080 = !DILocation(line: 72, column: 21, scope: !6033)
!6081 = !DILocation(line: 72, column: 5, scope: !6033)
!6082 = !DILocation(line: 72, column: 13, scope: !6033)
!6083 = !DILocation(line: 73, column: 12, scope: !6084)
!6084 = distinct !DILexicalBlock(scope: !6033, file: !174, line: 73, column: 5)
!6085 = !DILocation(line: 73, column: 10, scope: !6084)
!6086 = !DILocation(line: 73, column: 17, scope: !6087)
!6087 = !DILexicalBlockFile(scope: !6088, file: !174, discriminator: 1)
!6088 = distinct !DILexicalBlock(scope: !6084, file: !174, line: 73, column: 5)
!6089 = !DILocation(line: 73, column: 21, scope: !6087)
!6090 = !DILocation(line: 73, column: 19, scope: !6087)
!6091 = !DILocation(line: 73, column: 5, scope: !6087)
!6092 = !DILocation(line: 74, column: 23, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6088, file: !174, line: 73, column: 30)
!6094 = !DILocation(line: 74, column: 21, scope: !6093)
!6095 = !DILocation(line: 74, column: 48, scope: !6093)
!6096 = !DILocation(line: 74, column: 50, scope: !6093)
!6097 = !DILocation(line: 74, column: 49, scope: !6093)
!6098 = !DILocation(line: 74, column: 52, scope: !6093)
!6099 = !DILocation(line: 74, column: 46, scope: !6093)
!6100 = !DILocation(line: 74, column: 71, scope: !6093)
!6101 = !DILocation(line: 74, column: 73, scope: !6093)
!6102 = !DILocation(line: 74, column: 72, scope: !6093)
!6103 = !DILocation(line: 74, column: 69, scope: !6093)
!6104 = !DILocation(line: 74, column: 56, scope: !6093)
!6105 = !DILocation(line: 74, column: 78, scope: !6093)
!6106 = !DILocation(line: 74, column: 83, scope: !6093)
!6107 = !DILocation(line: 74, column: 27, scope: !6093)
!6108 = !DILocation(line: 74, column: 14, scope: !6093)
!6109 = !DILocation(line: 74, column: 9, scope: !6093)
!6110 = !DILocation(line: 74, column: 18, scope: !6093)
!6111 = !DILocation(line: 75, column: 27, scope: !6093)
!6112 = !DILocation(line: 75, column: 29, scope: !6093)
!6113 = !DILocation(line: 75, column: 28, scope: !6093)
!6114 = !DILocation(line: 75, column: 31, scope: !6093)
!6115 = !DILocation(line: 75, column: 25, scope: !6093)
!6116 = !DILocation(line: 75, column: 59, scope: !6093)
!6117 = !DILocation(line: 75, column: 60, scope: !6093)
!6118 = !DILocation(line: 75, column: 54, scope: !6093)
!6119 = !DILocation(line: 75, column: 82, scope: !6093)
!6120 = !DILocation(line: 75, column: 77, scope: !6093)
!6121 = !DILocation(line: 75, column: 64, scope: !6093)
!6122 = !DILocation(line: 75, column: 86, scope: !6093)
!6123 = !DILocation(line: 75, column: 91, scope: !6093)
!6124 = !DILocation(line: 75, column: 35, scope: !6093)
!6125 = !DILocation(line: 75, column: 14, scope: !6093)
!6126 = !DILocation(line: 75, column: 16, scope: !6093)
!6127 = !DILocation(line: 75, column: 15, scope: !6093)
!6128 = !DILocation(line: 75, column: 18, scope: !6093)
!6129 = !DILocation(line: 75, column: 9, scope: !6093)
!6130 = !DILocation(line: 75, column: 22, scope: !6093)
!6131 = !DILocation(line: 76, column: 5, scope: !6093)
!6132 = !DILocation(line: 73, column: 26, scope: !6133)
!6133 = !DILexicalBlockFile(scope: !6088, file: !174, discriminator: 2)
!6134 = !DILocation(line: 73, column: 5, scope: !6133)
!6135 = distinct !{!6135, !6136}
!6136 = !DILocation(line: 73, column: 5, scope: !6033)
!6137 = !DILocation(line: 77, column: 20, scope: !6033)
!6138 = !DILocation(line: 77, column: 21, scope: !6033)
!6139 = !DILocation(line: 77, column: 18, scope: !6033)
!6140 = !DILocation(line: 77, column: 49, scope: !6033)
!6141 = !DILocation(line: 77, column: 51, scope: !6033)
!6142 = !DILocation(line: 77, column: 44, scope: !6033)
!6143 = !DILocation(line: 77, column: 73, scope: !6033)
!6144 = !DILocation(line: 77, column: 75, scope: !6033)
!6145 = !DILocation(line: 77, column: 68, scope: !6033)
!6146 = !DILocation(line: 77, column: 55, scope: !6033)
!6147 = !DILocation(line: 77, column: 80, scope: !6033)
!6148 = !DILocation(line: 77, column: 85, scope: !6033)
!6149 = !DILocation(line: 77, column: 25, scope: !6033)
!6150 = !DILocation(line: 77, column: 10, scope: !6033)
!6151 = !DILocation(line: 77, column: 11, scope: !6033)
!6152 = !DILocation(line: 77, column: 5, scope: !6033)
!6153 = !DILocation(line: 77, column: 15, scope: !6033)
!6154 = !DILocation(line: 79, column: 22, scope: !6033)
!6155 = !DILocation(line: 79, column: 25, scope: !6033)
!6156 = !DILocation(line: 79, column: 31, scope: !6033)
!6157 = !DILocation(line: 79, column: 36, scope: !6033)
!6158 = !DILocation(line: 79, column: 35, scope: !6033)
!6159 = !DILocation(line: 79, column: 40, scope: !6033)
!6160 = !DILocation(line: 79, column: 5, scope: !6033)
!6161 = !DILocation(line: 59, column: 12, scope: !6162, inlinedAt: !6039)
!6162 = distinct !DILexicalBlock(scope: !6035, file: !174, line: 59, column: 5)
!6163 = !DILocation(line: 59, column: 10, scope: !6162, inlinedAt: !6039)
!6164 = !DILocation(line: 59, column: 17, scope: !6165, inlinedAt: !6039)
!6165 = !DILexicalBlockFile(scope: !6166, file: !174, discriminator: 1)
!6166 = distinct !DILexicalBlock(scope: !6162, file: !174, line: 59, column: 5)
!6167 = !DILocation(line: 59, column: 21, scope: !6165, inlinedAt: !6039)
!6168 = !DILocation(line: 59, column: 19, scope: !6165, inlinedAt: !6039)
!6169 = !DILocation(line: 59, column: 5, scope: !6165, inlinedAt: !6039)
!6170 = !DILocation(line: 60, column: 33, scope: !6171, inlinedAt: !6039)
!6171 = distinct !DILexicalBlock(scope: !6166, file: !174, line: 59, column: 30)
!6172 = !DILocation(line: 60, column: 28, scope: !6171, inlinedAt: !6039)
!6173 = !DILocation(line: 60, column: 48, scope: !6171, inlinedAt: !6039)
!6174 = !DILocation(line: 60, column: 36, scope: !6171, inlinedAt: !6039)
!6175 = !DILocation(line: 60, column: 57, scope: !6171, inlinedAt: !6039)
!6176 = !DILocation(line: 60, column: 54, scope: !6171, inlinedAt: !6039)
!6177 = !DILocation(line: 60, column: 15, scope: !6171, inlinedAt: !6039)
!6178 = !DILocation(line: 60, column: 14, scope: !6171, inlinedAt: !6039)
!6179 = !DILocation(line: 60, column: 9, scope: !6171, inlinedAt: !6039)
!6180 = !DILocation(line: 60, column: 19, scope: !6171, inlinedAt: !6039)
!6181 = !DILocation(line: 61, column: 34, scope: !6171, inlinedAt: !6039)
!6182 = !DILocation(line: 61, column: 29, scope: !6171, inlinedAt: !6039)
!6183 = !DILocation(line: 61, column: 49, scope: !6171, inlinedAt: !6039)
!6184 = !DILocation(line: 61, column: 37, scope: !6171, inlinedAt: !6039)
!6185 = !DILocation(line: 61, column: 58, scope: !6171, inlinedAt: !6039)
!6186 = !DILocation(line: 61, column: 55, scope: !6171, inlinedAt: !6039)
!6187 = !DILocation(line: 61, column: 15, scope: !6171, inlinedAt: !6039)
!6188 = !DILocation(line: 61, column: 14, scope: !6171, inlinedAt: !6039)
!6189 = !DILocation(line: 61, column: 16, scope: !6171, inlinedAt: !6039)
!6190 = !DILocation(line: 61, column: 9, scope: !6171, inlinedAt: !6039)
!6191 = !DILocation(line: 61, column: 20, scope: !6171, inlinedAt: !6039)
!6192 = !DILocation(line: 59, column: 26, scope: !6193, inlinedAt: !6039)
!6193 = !DILexicalBlockFile(scope: !6166, file: !174, discriminator: 2)
!6194 = !DILocation(line: 59, column: 5, scope: !6193, inlinedAt: !6039)
!6195 = distinct !{!6195, !6196}
!6196 = !DILocation(line: 59, column: 5, scope: !6035)
!6197 = !DILocation(line: 80, column: 1, scope: !6033)
!6198 = distinct !DISubprogram(name: "spatial_compose_dd137i_dy_10bit", scope: !174, file: !174, line: 385, type: !1596, isLocal: true, isDefinition: true, scopeLine: 386, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!6199 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !6200)
!6200 = distinct !DILocation(line: 396, column: 24, scope: !6198)
!6201 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !6200)
!6202 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !6200)
!6203 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !6204)
!6204 = distinct !DILocation(line: 395, column: 24, scope: !6198)
!6205 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !6204)
!6206 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !6204)
!6207 = !DILocalVariable(name: "d", arg: 1, scope: !6198, file: !174, line: 385, type: !37)
!6208 = !DILocation(line: 385, column: 57, scope: !6198)
!6209 = !DILocalVariable(name: "level", arg: 2, scope: !6198, file: !174, line: 385, type: !18)
!6210 = !DILocation(line: 385, column: 64, scope: !6198)
!6211 = !DILocalVariable(name: "width", arg: 3, scope: !6198, file: !174, line: 385, type: !18)
!6212 = !DILocation(line: 385, column: 75, scope: !6198)
!6213 = !DILocalVariable(name: "height", arg: 4, scope: !6198, file: !174, line: 385, type: !18)
!6214 = !DILocation(line: 385, column: 86, scope: !6198)
!6215 = !DILocalVariable(name: "stride", arg: 5, scope: !6198, file: !174, line: 385, type: !18)
!6216 = !DILocation(line: 385, column: 98, scope: !6198)
!6217 = !DILocalVariable(name: "vertical_compose_l0", scope: !6198, file: !174, line: 387, type: !1626)
!6218 = !DILocation(line: 387, column: 27, scope: !6198)
!6219 = !DILocation(line: 387, column: 56, scope: !6198)
!6220 = !DILocation(line: 387, column: 59, scope: !6198)
!6221 = !DILocation(line: 387, column: 49, scope: !6198)
!6222 = !DILocalVariable(name: "vertical_compose_h0", scope: !6198, file: !174, line: 388, type: !1626)
!6223 = !DILocation(line: 388, column: 27, scope: !6198)
!6224 = !DILocation(line: 388, column: 56, scope: !6198)
!6225 = !DILocation(line: 388, column: 59, scope: !6198)
!6226 = !DILocation(line: 388, column: 49, scope: !6198)
!6227 = !DILocalVariable(name: "cs", scope: !6198, file: !174, line: 389, type: !903)
!6228 = !DILocation(line: 389, column: 17, scope: !6198)
!6229 = !DILocation(line: 389, column: 22, scope: !6198)
!6230 = !DILocation(line: 389, column: 25, scope: !6198)
!6231 = !DILocation(line: 389, column: 30, scope: !6198)
!6232 = !DILocation(line: 389, column: 28, scope: !6198)
!6233 = !DILocalVariable(name: "i", scope: !6198, file: !174, line: 391, type: !18)
!6234 = !DILocation(line: 391, column: 9, scope: !6198)
!6235 = !DILocalVariable(name: "y", scope: !6198, file: !174, line: 391, type: !18)
!6236 = !DILocation(line: 391, column: 12, scope: !6198)
!6237 = !DILocation(line: 391, column: 16, scope: !6198)
!6238 = !DILocation(line: 391, column: 20, scope: !6198)
!6239 = !DILocalVariable(name: "b", scope: !6198, file: !174, line: 392, type: !2512)
!6240 = !DILocation(line: 392, column: 14, scope: !6198)
!6241 = !DILocation(line: 393, column: 12, scope: !6242)
!6242 = distinct !DILexicalBlock(scope: !6198, file: !174, line: 393, column: 5)
!6243 = !DILocation(line: 393, column: 10, scope: !6242)
!6244 = !DILocation(line: 393, column: 17, scope: !6245)
!6245 = !DILexicalBlockFile(scope: !6246, file: !174, discriminator: 1)
!6246 = distinct !DILexicalBlock(scope: !6242, file: !174, line: 393, column: 5)
!6247 = !DILocation(line: 393, column: 19, scope: !6245)
!6248 = !DILocation(line: 393, column: 5, scope: !6245)
!6249 = !DILocation(line: 394, column: 22, scope: !6246)
!6250 = !DILocation(line: 394, column: 16, scope: !6246)
!6251 = !DILocation(line: 394, column: 20, scope: !6246)
!6252 = !DILocation(line: 394, column: 11, scope: !6246)
!6253 = !DILocation(line: 394, column: 9, scope: !6246)
!6254 = !DILocation(line: 394, column: 14, scope: !6246)
!6255 = !DILocation(line: 393, column: 25, scope: !6256)
!6256 = !DILexicalBlockFile(scope: !6246, file: !174, discriminator: 2)
!6257 = !DILocation(line: 393, column: 5, scope: !6256)
!6258 = distinct !{!6258, !6259}
!6259 = !DILocation(line: 393, column: 5, scope: !6198)
!6260 = !DILocation(line: 395, column: 12, scope: !6198)
!6261 = !DILocation(line: 395, column: 15, scope: !6198)
!6262 = !DILocation(line: 395, column: 34, scope: !6198)
!6263 = !DILocation(line: 395, column: 35, scope: !6198)
!6264 = !DILocation(line: 395, column: 42, scope: !6198)
!6265 = !DILocation(line: 395, column: 48, scope: !6198)
!6266 = !DILocation(line: 395, column: 24, scope: !6198)
!6267 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !6204)
!6268 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !6204)
!6269 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !6204)
!6270 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !6204)
!6271 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !6204)
!6272 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !6204)
!6273 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !6204)
!6274 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !6204)
!6275 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !6204)
!6276 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !6204)
!6277 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !6204)
!6278 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !6204)
!6279 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !6204)
!6280 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !6204)
!6281 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !6204)
!6282 = !DILocation(line: 395, column: 52, scope: !6198)
!6283 = !DILocation(line: 395, column: 51, scope: !6198)
!6284 = !DILocation(line: 395, column: 22, scope: !6198)
!6285 = !DILocation(line: 395, column: 5, scope: !6198)
!6286 = !DILocation(line: 395, column: 10, scope: !6198)
!6287 = !DILocation(line: 396, column: 12, scope: !6198)
!6288 = !DILocation(line: 396, column: 15, scope: !6198)
!6289 = !DILocation(line: 396, column: 34, scope: !6198)
!6290 = !DILocation(line: 396, column: 35, scope: !6198)
!6291 = !DILocation(line: 396, column: 42, scope: !6198)
!6292 = !DILocation(line: 396, column: 48, scope: !6198)
!6293 = !DILocation(line: 396, column: 24, scope: !6198)
!6294 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !6200)
!6295 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !6200)
!6296 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !6200)
!6297 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !6200)
!6298 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !6200)
!6299 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !6200)
!6300 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !6200)
!6301 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !6200)
!6302 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !6200)
!6303 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !6200)
!6304 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !6200)
!6305 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !6200)
!6306 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !6200)
!6307 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !6200)
!6308 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !6200)
!6309 = !DILocation(line: 396, column: 52, scope: !6198)
!6310 = !DILocation(line: 396, column: 51, scope: !6198)
!6311 = !DILocation(line: 396, column: 22, scope: !6198)
!6312 = !DILocation(line: 396, column: 5, scope: !6198)
!6313 = !DILocation(line: 396, column: 10, scope: !6198)
!6314 = !DILocation(line: 398, column: 8, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6198, file: !174, line: 398, column: 8)
!6316 = !DILocation(line: 398, column: 9, scope: !6315)
!6317 = !DILocation(line: 398, column: 22, scope: !6315)
!6318 = !DILocation(line: 398, column: 11, scope: !6315)
!6319 = !DILocation(line: 398, column: 8, scope: !6198)
!6320 = !DILocation(line: 398, column: 30, scope: !6321)
!6321 = !DILexicalBlockFile(scope: !6315, file: !174, discriminator: 1)
!6322 = !DILocation(line: 398, column: 50, scope: !6321)
!6323 = !DILocation(line: 398, column: 56, scope: !6321)
!6324 = !DILocation(line: 398, column: 62, scope: !6321)
!6325 = !DILocation(line: 398, column: 68, scope: !6321)
!6326 = !DILocation(line: 398, column: 74, scope: !6321)
!6327 = !DILocation(line: 398, column: 80, scope: !6321)
!6328 = !DILocation(line: 399, column: 8, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6198, file: !174, line: 399, column: 8)
!6330 = !DILocation(line: 399, column: 9, scope: !6329)
!6331 = !DILocation(line: 399, column: 22, scope: !6329)
!6332 = !DILocation(line: 399, column: 11, scope: !6329)
!6333 = !DILocation(line: 399, column: 8, scope: !6198)
!6334 = !DILocation(line: 399, column: 30, scope: !6335)
!6335 = !DILexicalBlockFile(scope: !6329, file: !174, discriminator: 1)
!6336 = !DILocation(line: 399, column: 50, scope: !6335)
!6337 = !DILocation(line: 399, column: 56, scope: !6335)
!6338 = !DILocation(line: 399, column: 62, scope: !6335)
!6339 = !DILocation(line: 399, column: 68, scope: !6335)
!6340 = !DILocation(line: 399, column: 74, scope: !6335)
!6341 = !DILocation(line: 399, column: 80, scope: !6335)
!6342 = !DILocation(line: 401, column: 8, scope: !6343)
!6343 = distinct !DILexicalBlock(scope: !6198, file: !174, line: 401, column: 8)
!6344 = !DILocation(line: 401, column: 9, scope: !6343)
!6345 = !DILocation(line: 401, column: 22, scope: !6343)
!6346 = !DILocation(line: 401, column: 11, scope: !6343)
!6347 = !DILocation(line: 401, column: 8, scope: !6198)
!6348 = !DILocation(line: 401, column: 30, scope: !6349)
!6349 = !DILexicalBlockFile(scope: !6343, file: !174, discriminator: 1)
!6350 = !DILocation(line: 401, column: 33, scope: !6349)
!6351 = !DILocation(line: 401, column: 52, scope: !6349)
!6352 = !DILocation(line: 401, column: 58, scope: !6349)
!6353 = !DILocation(line: 401, column: 61, scope: !6349)
!6354 = !DILocation(line: 401, column: 67, scope: !6349)
!6355 = !DILocation(line: 402, column: 8, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6198, file: !174, line: 402, column: 8)
!6357 = !DILocation(line: 402, column: 9, scope: !6356)
!6358 = !DILocation(line: 402, column: 22, scope: !6356)
!6359 = !DILocation(line: 402, column: 11, scope: !6356)
!6360 = !DILocation(line: 402, column: 8, scope: !6198)
!6361 = !DILocation(line: 402, column: 30, scope: !6362)
!6362 = !DILexicalBlockFile(scope: !6356, file: !174, discriminator: 1)
!6363 = !DILocation(line: 402, column: 33, scope: !6362)
!6364 = !DILocation(line: 402, column: 52, scope: !6362)
!6365 = !DILocation(line: 402, column: 58, scope: !6362)
!6366 = !DILocation(line: 402, column: 61, scope: !6362)
!6367 = !DILocation(line: 402, column: 67, scope: !6362)
!6368 = !DILocation(line: 404, column: 12, scope: !6369)
!6369 = distinct !DILexicalBlock(scope: !6198, file: !174, line: 404, column: 5)
!6370 = !DILocation(line: 404, column: 10, scope: !6369)
!6371 = !DILocation(line: 404, column: 17, scope: !6372)
!6372 = !DILexicalBlockFile(scope: !6373, file: !174, discriminator: 1)
!6373 = distinct !DILexicalBlock(scope: !6369, file: !174, line: 404, column: 5)
!6374 = !DILocation(line: 404, column: 19, scope: !6372)
!6375 = !DILocation(line: 404, column: 5, scope: !6372)
!6376 = !DILocation(line: 405, column: 22, scope: !6373)
!6377 = !DILocation(line: 405, column: 23, scope: !6373)
!6378 = !DILocation(line: 405, column: 20, scope: !6373)
!6379 = !DILocation(line: 405, column: 15, scope: !6373)
!6380 = !DILocation(line: 405, column: 9, scope: !6373)
!6381 = !DILocation(line: 405, column: 13, scope: !6373)
!6382 = !DILocation(line: 405, column: 18, scope: !6373)
!6383 = !DILocation(line: 404, column: 25, scope: !6384)
!6384 = !DILexicalBlockFile(scope: !6373, file: !174, discriminator: 2)
!6385 = !DILocation(line: 404, column: 5, scope: !6384)
!6386 = distinct !{!6386, !6387}
!6387 = !DILocation(line: 404, column: 5, scope: !6198)
!6388 = !DILocation(line: 406, column: 5, scope: !6198)
!6389 = !DILocation(line: 406, column: 9, scope: !6198)
!6390 = !DILocation(line: 406, column: 11, scope: !6198)
!6391 = !DILocation(line: 407, column: 1, scope: !6198)
!6392 = distinct !DISubprogram(name: "vertical_compose_dd137iL0_10bit", scope: !174, file: !174, line: 230, type: !1628, isLocal: true, isDefinition: true, scopeLine: 232, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!6393 = !DILocalVariable(name: "_b0", arg: 1, scope: !6392, file: !174, line: 230, type: !20)
!6394 = !DILocation(line: 230, column: 54, scope: !6392)
!6395 = !DILocalVariable(name: "_b1", arg: 2, scope: !6392, file: !174, line: 230, type: !20)
!6396 = !DILocation(line: 230, column: 68, scope: !6392)
!6397 = !DILocalVariable(name: "_b2", arg: 3, scope: !6392, file: !174, line: 230, type: !20)
!6398 = !DILocation(line: 230, column: 82, scope: !6392)
!6399 = !DILocalVariable(name: "_b3", arg: 4, scope: !6392, file: !174, line: 231, type: !20)
!6400 = !DILocation(line: 231, column: 56, scope: !6392)
!6401 = !DILocalVariable(name: "_b4", arg: 5, scope: !6392, file: !174, line: 231, type: !20)
!6402 = !DILocation(line: 231, column: 70, scope: !6392)
!6403 = !DILocalVariable(name: "width", arg: 6, scope: !6392, file: !174, line: 231, type: !18)
!6404 = !DILocation(line: 231, column: 79, scope: !6392)
!6405 = !DILocalVariable(name: "i", scope: !6392, file: !174, line: 233, type: !18)
!6406 = !DILocation(line: 233, column: 9, scope: !6392)
!6407 = !DILocalVariable(name: "b0", scope: !6392, file: !174, line: 234, type: !28)
!6408 = !DILocation(line: 234, column: 14, scope: !6392)
!6409 = !DILocation(line: 234, column: 30, scope: !6392)
!6410 = !DILocation(line: 234, column: 19, scope: !6392)
!6411 = !DILocalVariable(name: "b1", scope: !6392, file: !174, line: 235, type: !28)
!6412 = !DILocation(line: 235, column: 14, scope: !6392)
!6413 = !DILocation(line: 235, column: 30, scope: !6392)
!6414 = !DILocation(line: 235, column: 19, scope: !6392)
!6415 = !DILocalVariable(name: "b2", scope: !6392, file: !174, line: 236, type: !28)
!6416 = !DILocation(line: 236, column: 14, scope: !6392)
!6417 = !DILocation(line: 236, column: 30, scope: !6392)
!6418 = !DILocation(line: 236, column: 19, scope: !6392)
!6419 = !DILocalVariable(name: "b3", scope: !6392, file: !174, line: 237, type: !28)
!6420 = !DILocation(line: 237, column: 14, scope: !6392)
!6421 = !DILocation(line: 237, column: 30, scope: !6392)
!6422 = !DILocation(line: 237, column: 19, scope: !6392)
!6423 = !DILocalVariable(name: "b4", scope: !6392, file: !174, line: 238, type: !28)
!6424 = !DILocation(line: 238, column: 14, scope: !6392)
!6425 = !DILocation(line: 238, column: 30, scope: !6392)
!6426 = !DILocation(line: 238, column: 19, scope: !6392)
!6427 = !DILocation(line: 239, column: 10, scope: !6428)
!6428 = distinct !DILexicalBlock(scope: !6392, file: !174, line: 239, column: 5)
!6429 = !DILocation(line: 239, column: 9, scope: !6428)
!6430 = !DILocation(line: 239, column: 14, scope: !6431)
!6431 = !DILexicalBlockFile(scope: !6432, file: !174, discriminator: 1)
!6432 = distinct !DILexicalBlock(scope: !6428, file: !174, line: 239, column: 5)
!6433 = !DILocation(line: 239, column: 16, scope: !6431)
!6434 = !DILocation(line: 239, column: 15, scope: !6431)
!6435 = !DILocation(line: 239, column: 5, scope: !6431)
!6436 = !DILocation(line: 240, column: 38, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6432, file: !174, line: 239, column: 27)
!6438 = !DILocation(line: 240, column: 35, scope: !6437)
!6439 = !DILocation(line: 240, column: 57, scope: !6437)
!6440 = !DILocation(line: 240, column: 54, scope: !6437)
!6441 = !DILocation(line: 240, column: 53, scope: !6437)
!6442 = !DILocation(line: 240, column: 68, scope: !6437)
!6443 = !DILocation(line: 240, column: 65, scope: !6437)
!6444 = !DILocation(line: 240, column: 64, scope: !6437)
!6445 = !DILocation(line: 240, column: 60, scope: !6437)
!6446 = !DILocation(line: 240, column: 76, scope: !6437)
!6447 = !DILocation(line: 240, column: 73, scope: !6437)
!6448 = !DILocation(line: 240, column: 71, scope: !6437)
!6449 = !DILocation(line: 240, column: 84, scope: !6437)
!6450 = !DILocation(line: 240, column: 81, scope: !6437)
!6451 = !DILocation(line: 240, column: 79, scope: !6437)
!6452 = !DILocation(line: 240, column: 87, scope: !6437)
!6453 = !DILocation(line: 240, column: 93, scope: !6437)
!6454 = !DILocation(line: 240, column: 42, scope: !6437)
!6455 = !DILocation(line: 240, column: 12, scope: !6437)
!6456 = !DILocation(line: 240, column: 9, scope: !6437)
!6457 = !DILocation(line: 240, column: 15, scope: !6437)
!6458 = !DILocation(line: 241, column: 5, scope: !6437)
!6459 = !DILocation(line: 239, column: 24, scope: !6460)
!6460 = !DILexicalBlockFile(scope: !6432, file: !174, discriminator: 2)
!6461 = !DILocation(line: 239, column: 5, scope: !6460)
!6462 = distinct !{!6462, !6463}
!6463 = !DILocation(line: 239, column: 5, scope: !6392)
!6464 = !DILocation(line: 242, column: 1, scope: !6392)
!6465 = distinct !DISubprogram(name: "horizontal_compose_dd137i_10bit", scope: !174, file: !174, line: 103, type: !63, isLocal: true, isDefinition: true, scopeLine: 104, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!6466 = !DILocalVariable(name: "_b", arg: 1, scope: !6465, file: !174, line: 103, type: !20)
!6467 = !DILocation(line: 103, column: 54, scope: !6465)
!6468 = !DILocalVariable(name: "_tmp", arg: 2, scope: !6465, file: !174, line: 103, type: !20)
!6469 = !DILocation(line: 103, column: 67, scope: !6465)
!6470 = !DILocalVariable(name: "w", arg: 3, scope: !6465, file: !174, line: 103, type: !18)
!6471 = !DILocation(line: 103, column: 77, scope: !6465)
!6472 = !DILocalVariable(name: "w2", scope: !6465, file: !174, line: 105, type: !1931)
!6473 = !DILocation(line: 105, column: 15, scope: !6465)
!6474 = !DILocation(line: 105, column: 20, scope: !6465)
!6475 = !DILocation(line: 105, column: 22, scope: !6465)
!6476 = !DILocalVariable(name: "x", scope: !6465, file: !174, line: 106, type: !18)
!6477 = !DILocation(line: 106, column: 9, scope: !6465)
!6478 = !DILocalVariable(name: "b", scope: !6465, file: !174, line: 107, type: !28)
!6479 = !DILocation(line: 107, column: 14, scope: !6465)
!6480 = !DILocation(line: 107, column: 29, scope: !6465)
!6481 = !DILocation(line: 107, column: 18, scope: !6465)
!6482 = !DILocalVariable(name: "tmp", scope: !6465, file: !174, line: 108, type: !28)
!6483 = !DILocation(line: 108, column: 14, scope: !6465)
!6484 = !DILocation(line: 108, column: 31, scope: !6465)
!6485 = !DILocation(line: 108, column: 20, scope: !6465)
!6486 = !DILocation(line: 110, column: 32, scope: !6465)
!6487 = !DILocation(line: 110, column: 52, scope: !6465)
!6488 = !DILocation(line: 110, column: 50, scope: !6465)
!6489 = !DILocation(line: 110, column: 49, scope: !6465)
!6490 = !DILocation(line: 110, column: 63, scope: !6465)
!6491 = !DILocation(line: 110, column: 61, scope: !6465)
!6492 = !DILocation(line: 110, column: 60, scope: !6465)
!6493 = !DILocation(line: 110, column: 56, scope: !6465)
!6494 = !DILocation(line: 110, column: 72, scope: !6465)
!6495 = !DILocation(line: 110, column: 74, scope: !6465)
!6496 = !DILocation(line: 110, column: 70, scope: !6465)
!6497 = !DILocation(line: 110, column: 68, scope: !6465)
!6498 = !DILocation(line: 110, column: 82, scope: !6465)
!6499 = !DILocation(line: 110, column: 80, scope: !6465)
!6500 = !DILocation(line: 110, column: 78, scope: !6465)
!6501 = !DILocation(line: 110, column: 86, scope: !6465)
!6502 = !DILocation(line: 110, column: 92, scope: !6465)
!6503 = !DILocation(line: 110, column: 38, scope: !6465)
!6504 = !DILocation(line: 110, column: 5, scope: !6465)
!6505 = !DILocation(line: 110, column: 12, scope: !6465)
!6506 = !DILocation(line: 111, column: 32, scope: !6465)
!6507 = !DILocation(line: 111, column: 52, scope: !6465)
!6508 = !DILocation(line: 111, column: 50, scope: !6465)
!6509 = !DILocation(line: 111, column: 49, scope: !6465)
!6510 = !DILocation(line: 111, column: 63, scope: !6465)
!6511 = !DILocation(line: 111, column: 65, scope: !6465)
!6512 = !DILocation(line: 111, column: 61, scope: !6465)
!6513 = !DILocation(line: 111, column: 60, scope: !6465)
!6514 = !DILocation(line: 111, column: 56, scope: !6465)
!6515 = !DILocation(line: 111, column: 73, scope: !6465)
!6516 = !DILocation(line: 111, column: 75, scope: !6465)
!6517 = !DILocation(line: 111, column: 71, scope: !6465)
!6518 = !DILocation(line: 111, column: 69, scope: !6465)
!6519 = !DILocation(line: 111, column: 83, scope: !6465)
!6520 = !DILocation(line: 111, column: 81, scope: !6465)
!6521 = !DILocation(line: 111, column: 79, scope: !6465)
!6522 = !DILocation(line: 111, column: 87, scope: !6465)
!6523 = !DILocation(line: 111, column: 93, scope: !6465)
!6524 = !DILocation(line: 111, column: 38, scope: !6465)
!6525 = !DILocation(line: 111, column: 5, scope: !6465)
!6526 = !DILocation(line: 111, column: 12, scope: !6465)
!6527 = !DILocation(line: 112, column: 12, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6465, file: !174, line: 112, column: 5)
!6529 = !DILocation(line: 112, column: 10, scope: !6528)
!6530 = !DILocation(line: 112, column: 17, scope: !6531)
!6531 = !DILexicalBlockFile(scope: !6532, file: !174, discriminator: 1)
!6532 = distinct !DILexicalBlock(scope: !6528, file: !174, line: 112, column: 5)
!6533 = !DILocation(line: 112, column: 21, scope: !6531)
!6534 = !DILocation(line: 112, column: 23, scope: !6531)
!6535 = !DILocation(line: 112, column: 19, scope: !6531)
!6536 = !DILocation(line: 112, column: 5, scope: !6531)
!6537 = !DILocation(line: 113, column: 38, scope: !6532)
!6538 = !DILocation(line: 113, column: 36, scope: !6532)
!6539 = !DILocation(line: 113, column: 56, scope: !6532)
!6540 = !DILocation(line: 113, column: 58, scope: !6532)
!6541 = !DILocation(line: 113, column: 57, scope: !6532)
!6542 = !DILocation(line: 113, column: 60, scope: !6532)
!6543 = !DILocation(line: 113, column: 54, scope: !6532)
!6544 = !DILocation(line: 113, column: 53, scope: !6532)
!6545 = !DILocation(line: 113, column: 71, scope: !6532)
!6546 = !DILocation(line: 113, column: 73, scope: !6532)
!6547 = !DILocation(line: 113, column: 72, scope: !6532)
!6548 = !DILocation(line: 113, column: 69, scope: !6532)
!6549 = !DILocation(line: 113, column: 68, scope: !6532)
!6550 = !DILocation(line: 113, column: 64, scope: !6532)
!6551 = !DILocation(line: 113, column: 81, scope: !6532)
!6552 = !DILocation(line: 113, column: 83, scope: !6532)
!6553 = !DILocation(line: 113, column: 82, scope: !6532)
!6554 = !DILocation(line: 113, column: 85, scope: !6532)
!6555 = !DILocation(line: 113, column: 79, scope: !6532)
!6556 = !DILocation(line: 113, column: 77, scope: !6532)
!6557 = !DILocation(line: 113, column: 93, scope: !6532)
!6558 = !DILocation(line: 113, column: 95, scope: !6532)
!6559 = !DILocation(line: 113, column: 94, scope: !6532)
!6560 = !DILocation(line: 113, column: 97, scope: !6532)
!6561 = !DILocation(line: 113, column: 91, scope: !6532)
!6562 = !DILocation(line: 113, column: 89, scope: !6532)
!6563 = !DILocation(line: 113, column: 101, scope: !6532)
!6564 = !DILocation(line: 113, column: 107, scope: !6532)
!6565 = !DILocation(line: 113, column: 42, scope: !6532)
!6566 = !DILocation(line: 113, column: 13, scope: !6532)
!6567 = !DILocation(line: 113, column: 9, scope: !6532)
!6568 = !DILocation(line: 113, column: 16, scope: !6532)
!6569 = !DILocation(line: 112, column: 28, scope: !6570)
!6570 = !DILexicalBlockFile(scope: !6532, file: !174, discriminator: 2)
!6571 = !DILocation(line: 112, column: 5, scope: !6570)
!6572 = distinct !{!6572, !6573}
!6573 = !DILocation(line: 112, column: 5, scope: !6465)
!6574 = !DILocation(line: 114, column: 37, scope: !6465)
!6575 = !DILocation(line: 114, column: 39, scope: !6465)
!6576 = !DILocation(line: 114, column: 35, scope: !6465)
!6577 = !DILocation(line: 114, column: 58, scope: !6465)
!6578 = !DILocation(line: 114, column: 59, scope: !6465)
!6579 = !DILocation(line: 114, column: 56, scope: !6465)
!6580 = !DILocation(line: 114, column: 55, scope: !6465)
!6581 = !DILocation(line: 114, column: 70, scope: !6465)
!6582 = !DILocation(line: 114, column: 71, scope: !6465)
!6583 = !DILocation(line: 114, column: 68, scope: !6465)
!6584 = !DILocation(line: 114, column: 67, scope: !6465)
!6585 = !DILocation(line: 114, column: 63, scope: !6465)
!6586 = !DILocation(line: 114, column: 79, scope: !6465)
!6587 = !DILocation(line: 114, column: 80, scope: !6465)
!6588 = !DILocation(line: 114, column: 77, scope: !6465)
!6589 = !DILocation(line: 114, column: 75, scope: !6465)
!6590 = !DILocation(line: 114, column: 88, scope: !6465)
!6591 = !DILocation(line: 114, column: 89, scope: !6465)
!6592 = !DILocation(line: 114, column: 86, scope: !6465)
!6593 = !DILocation(line: 114, column: 84, scope: !6465)
!6594 = !DILocation(line: 114, column: 93, scope: !6465)
!6595 = !DILocation(line: 114, column: 99, scope: !6465)
!6596 = !DILocation(line: 114, column: 44, scope: !6465)
!6597 = !DILocation(line: 114, column: 9, scope: !6465)
!6598 = !DILocation(line: 114, column: 11, scope: !6465)
!6599 = !DILocation(line: 114, column: 5, scope: !6465)
!6600 = !DILocation(line: 114, column: 15, scope: !6465)
!6601 = !DILocation(line: 117, column: 15, scope: !6465)
!6602 = !DILocation(line: 117, column: 5, scope: !6465)
!6603 = !DILocation(line: 117, column: 13, scope: !6465)
!6604 = !DILocation(line: 118, column: 31, scope: !6465)
!6605 = !DILocation(line: 118, column: 33, scope: !6465)
!6606 = !DILocation(line: 118, column: 27, scope: !6465)
!6607 = !DILocation(line: 118, column: 21, scope: !6465)
!6608 = !DILocation(line: 118, column: 17, scope: !6465)
!6609 = !DILocation(line: 118, column: 25, scope: !6465)
!6610 = !DILocation(line: 118, column: 9, scope: !6465)
!6611 = !DILocation(line: 118, column: 11, scope: !6465)
!6612 = !DILocation(line: 118, column: 5, scope: !6465)
!6613 = !DILocation(line: 118, column: 15, scope: !6465)
!6614 = !DILocation(line: 120, column: 12, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6465, file: !174, line: 120, column: 5)
!6616 = !DILocation(line: 120, column: 10, scope: !6615)
!6617 = !DILocation(line: 120, column: 17, scope: !6618)
!6618 = !DILexicalBlockFile(scope: !6619, file: !174, discriminator: 1)
!6619 = distinct !DILexicalBlock(scope: !6615, file: !174, line: 120, column: 5)
!6620 = !DILocation(line: 120, column: 21, scope: !6618)
!6621 = !DILocation(line: 120, column: 19, scope: !6618)
!6622 = !DILocation(line: 120, column: 5, scope: !6618)
!6623 = !DILocation(line: 121, column: 30, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6619, file: !174, line: 120, column: 30)
!6625 = !DILocation(line: 121, column: 26, scope: !6624)
!6626 = !DILocation(line: 121, column: 33, scope: !6624)
!6627 = !DILocation(line: 121, column: 39, scope: !6624)
!6628 = !DILocation(line: 121, column: 13, scope: !6624)
!6629 = !DILocation(line: 121, column: 12, scope: !6624)
!6630 = !DILocation(line: 121, column: 9, scope: !6624)
!6631 = !DILocation(line: 121, column: 17, scope: !6624)
!6632 = !DILocation(line: 122, column: 47, scope: !6624)
!6633 = !DILocation(line: 122, column: 49, scope: !6624)
!6634 = !DILocation(line: 122, column: 48, scope: !6624)
!6635 = !DILocation(line: 122, column: 45, scope: !6624)
!6636 = !DILocation(line: 122, column: 70, scope: !6624)
!6637 = !DILocation(line: 122, column: 66, scope: !6624)
!6638 = !DILocation(line: 122, column: 65, scope: !6624)
!6639 = !DILocation(line: 122, column: 82, scope: !6624)
!6640 = !DILocation(line: 122, column: 83, scope: !6624)
!6641 = !DILocation(line: 122, column: 78, scope: !6624)
!6642 = !DILocation(line: 122, column: 77, scope: !6624)
!6643 = !DILocation(line: 122, column: 73, scope: !6624)
!6644 = !DILocation(line: 122, column: 93, scope: !6624)
!6645 = !DILocation(line: 122, column: 94, scope: !6624)
!6646 = !DILocation(line: 122, column: 89, scope: !6624)
!6647 = !DILocation(line: 122, column: 87, scope: !6624)
!6648 = !DILocation(line: 122, column: 104, scope: !6624)
!6649 = !DILocation(line: 122, column: 105, scope: !6624)
!6650 = !DILocation(line: 122, column: 100, scope: !6624)
!6651 = !DILocation(line: 122, column: 98, scope: !6624)
!6652 = !DILocation(line: 122, column: 109, scope: !6624)
!6653 = !DILocation(line: 122, column: 114, scope: !6624)
!6654 = !DILocation(line: 122, column: 54, scope: !6624)
!6655 = !DILocation(line: 122, column: 122, scope: !6624)
!6656 = !DILocation(line: 122, column: 128, scope: !6624)
!6657 = !DILocation(line: 122, column: 13, scope: !6624)
!6658 = !DILocation(line: 122, column: 12, scope: !6624)
!6659 = !DILocation(line: 122, column: 14, scope: !6624)
!6660 = !DILocation(line: 122, column: 9, scope: !6624)
!6661 = !DILocation(line: 122, column: 18, scope: !6624)
!6662 = !DILocation(line: 123, column: 5, scope: !6624)
!6663 = !DILocation(line: 120, column: 26, scope: !6664)
!6664 = !DILexicalBlockFile(scope: !6619, file: !174, discriminator: 2)
!6665 = !DILocation(line: 120, column: 5, scope: !6664)
!6666 = distinct !{!6666, !6667}
!6667 = !DILocation(line: 120, column: 5, scope: !6465)
!6668 = !DILocation(line: 124, column: 1, scope: !6465)
!6669 = distinct !DISubprogram(name: "spatial_compose_haari_dy_10bit", scope: !174, file: !174, line: 410, type: !1596, isLocal: true, isDefinition: true, scopeLine: 411, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!6670 = !DILocalVariable(name: "d", arg: 1, scope: !6669, file: !174, line: 410, type: !37)
!6671 = !DILocation(line: 410, column: 56, scope: !6669)
!6672 = !DILocalVariable(name: "level", arg: 2, scope: !6669, file: !174, line: 410, type: !18)
!6673 = !DILocation(line: 410, column: 63, scope: !6669)
!6674 = !DILocalVariable(name: "width", arg: 3, scope: !6669, file: !174, line: 410, type: !18)
!6675 = !DILocation(line: 410, column: 74, scope: !6669)
!6676 = !DILocalVariable(name: "height", arg: 4, scope: !6669, file: !174, line: 410, type: !18)
!6677 = !DILocation(line: 410, column: 85, scope: !6669)
!6678 = !DILocalVariable(name: "stride", arg: 5, scope: !6669, file: !174, line: 410, type: !18)
!6679 = !DILocation(line: 410, column: 97, scope: !6669)
!6680 = !DILocalVariable(name: "vertical_compose", scope: !6669, file: !174, line: 412, type: !2969)
!6681 = !DILocation(line: 412, column: 27, scope: !6669)
!6682 = !DILocation(line: 412, column: 53, scope: !6669)
!6683 = !DILocation(line: 412, column: 56, scope: !6669)
!6684 = !DILocation(line: 412, column: 46, scope: !6669)
!6685 = !DILocalVariable(name: "y", scope: !6669, file: !174, line: 413, type: !18)
!6686 = !DILocation(line: 413, column: 9, scope: !6669)
!6687 = !DILocation(line: 413, column: 19, scope: !6669)
!6688 = !DILocation(line: 413, column: 13, scope: !6669)
!6689 = !DILocation(line: 413, column: 16, scope: !6669)
!6690 = !DILocation(line: 413, column: 26, scope: !6669)
!6691 = !DILocalVariable(name: "b0", scope: !6669, file: !174, line: 414, type: !20)
!6692 = !DILocation(line: 414, column: 14, scope: !6669)
!6693 = !DILocation(line: 414, column: 19, scope: !6669)
!6694 = !DILocation(line: 414, column: 22, scope: !6669)
!6695 = !DILocation(line: 414, column: 32, scope: !6669)
!6696 = !DILocation(line: 414, column: 33, scope: !6669)
!6697 = !DILocation(line: 414, column: 37, scope: !6669)
!6698 = !DILocation(line: 414, column: 36, scope: !6669)
!6699 = !DILocation(line: 414, column: 29, scope: !6669)
!6700 = !DILocalVariable(name: "b1", scope: !6669, file: !174, line: 415, type: !20)
!6701 = !DILocation(line: 415, column: 14, scope: !6669)
!6702 = !DILocation(line: 415, column: 19, scope: !6669)
!6703 = !DILocation(line: 415, column: 22, scope: !6669)
!6704 = !DILocation(line: 415, column: 32, scope: !6669)
!6705 = !DILocation(line: 415, column: 36, scope: !6669)
!6706 = !DILocation(line: 415, column: 35, scope: !6669)
!6707 = !DILocation(line: 415, column: 29, scope: !6669)
!6708 = !DILocation(line: 417, column: 5, scope: !6669)
!6709 = !DILocation(line: 417, column: 22, scope: !6669)
!6710 = !DILocation(line: 417, column: 26, scope: !6669)
!6711 = !DILocation(line: 417, column: 30, scope: !6669)
!6712 = !DILocation(line: 418, column: 5, scope: !6669)
!6713 = !DILocation(line: 418, column: 8, scope: !6669)
!6714 = !DILocation(line: 418, column: 27, scope: !6669)
!6715 = !DILocation(line: 418, column: 31, scope: !6669)
!6716 = !DILocation(line: 418, column: 34, scope: !6669)
!6717 = !DILocation(line: 418, column: 40, scope: !6669)
!6718 = !DILocation(line: 419, column: 5, scope: !6669)
!6719 = !DILocation(line: 419, column: 8, scope: !6669)
!6720 = !DILocation(line: 419, column: 27, scope: !6669)
!6721 = !DILocation(line: 419, column: 31, scope: !6669)
!6722 = !DILocation(line: 419, column: 34, scope: !6669)
!6723 = !DILocation(line: 419, column: 40, scope: !6669)
!6724 = !DILocation(line: 421, column: 11, scope: !6669)
!6725 = !DILocation(line: 421, column: 5, scope: !6669)
!6726 = !DILocation(line: 421, column: 8, scope: !6669)
!6727 = !DILocation(line: 421, column: 18, scope: !6669)
!6728 = !DILocation(line: 421, column: 20, scope: !6669)
!6729 = !DILocation(line: 422, column: 1, scope: !6669)
!6730 = distinct !DISubprogram(name: "vertical_compose_haar_10bit", scope: !174, file: !174, line: 244, type: !63, isLocal: true, isDefinition: true, scopeLine: 245, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!6731 = !DILocalVariable(name: "_b0", arg: 1, scope: !6730, file: !174, line: 244, type: !20)
!6732 = !DILocation(line: 244, column: 50, scope: !6730)
!6733 = !DILocalVariable(name: "_b1", arg: 2, scope: !6730, file: !174, line: 244, type: !20)
!6734 = !DILocation(line: 244, column: 64, scope: !6730)
!6735 = !DILocalVariable(name: "width", arg: 3, scope: !6730, file: !174, line: 244, type: !18)
!6736 = !DILocation(line: 244, column: 73, scope: !6730)
!6737 = !DILocalVariable(name: "i", scope: !6730, file: !174, line: 246, type: !18)
!6738 = !DILocation(line: 246, column: 9, scope: !6730)
!6739 = !DILocalVariable(name: "b0", scope: !6730, file: !174, line: 247, type: !28)
!6740 = !DILocation(line: 247, column: 14, scope: !6730)
!6741 = !DILocation(line: 247, column: 30, scope: !6730)
!6742 = !DILocation(line: 247, column: 19, scope: !6730)
!6743 = !DILocalVariable(name: "b1", scope: !6730, file: !174, line: 248, type: !28)
!6744 = !DILocation(line: 248, column: 14, scope: !6730)
!6745 = !DILocation(line: 248, column: 30, scope: !6730)
!6746 = !DILocation(line: 248, column: 19, scope: !6730)
!6747 = !DILocation(line: 250, column: 12, scope: !6748)
!6748 = distinct !DILexicalBlock(scope: !6730, file: !174, line: 250, column: 5)
!6749 = !DILocation(line: 250, column: 10, scope: !6748)
!6750 = !DILocation(line: 250, column: 17, scope: !6751)
!6751 = !DILexicalBlockFile(scope: !6752, file: !174, discriminator: 1)
!6752 = distinct !DILexicalBlock(scope: !6748, file: !174, line: 250, column: 5)
!6753 = !DILocation(line: 250, column: 21, scope: !6751)
!6754 = !DILocation(line: 250, column: 19, scope: !6751)
!6755 = !DILocation(line: 250, column: 5, scope: !6751)
!6756 = !DILocation(line: 251, column: 27, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6752, file: !174, line: 250, column: 33)
!6758 = !DILocation(line: 251, column: 24, scope: !6757)
!6759 = !DILocation(line: 251, column: 52, scope: !6757)
!6760 = !DILocation(line: 251, column: 49, scope: !6757)
!6761 = !DILocation(line: 251, column: 55, scope: !6757)
!6762 = !DILocation(line: 251, column: 61, scope: !6757)
!6763 = !DILocation(line: 251, column: 30, scope: !6757)
!6764 = !DILocation(line: 251, column: 12, scope: !6757)
!6765 = !DILocation(line: 251, column: 9, scope: !6757)
!6766 = !DILocation(line: 251, column: 15, scope: !6757)
!6767 = !DILocation(line: 252, column: 27, scope: !6757)
!6768 = !DILocation(line: 252, column: 24, scope: !6757)
!6769 = !DILocation(line: 252, column: 46, scope: !6757)
!6770 = !DILocation(line: 252, column: 43, scope: !6757)
!6771 = !DILocation(line: 252, column: 30, scope: !6757)
!6772 = !DILocation(line: 252, column: 12, scope: !6757)
!6773 = !DILocation(line: 252, column: 9, scope: !6757)
!6774 = !DILocation(line: 252, column: 15, scope: !6757)
!6775 = !DILocation(line: 253, column: 5, scope: !6757)
!6776 = !DILocation(line: 250, column: 29, scope: !6777)
!6777 = !DILexicalBlockFile(scope: !6752, file: !174, discriminator: 2)
!6778 = !DILocation(line: 250, column: 5, scope: !6777)
!6779 = distinct !{!6779, !6780}
!6780 = !DILocation(line: 250, column: 5, scope: !6730)
!6781 = !DILocation(line: 254, column: 1, scope: !6730)
!6782 = distinct !DISubprogram(name: "horizontal_compose_haar0i_10bit", scope: !174, file: !174, line: 140, type: !63, isLocal: true, isDefinition: true, scopeLine: 141, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!6783 = !DILocation(line: 55, column: 77, scope: !6035, inlinedAt: !6784)
!6784 = distinct !DILocation(line: 137, column: 5, scope: !6785, inlinedAt: !6788)
!6785 = distinct !DISubprogram(name: "horizontal_compose_haari_10bit", scope: !174, file: !174, line: 126, type: !6786, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!6786 = !DISubroutineType(types: !6787)
!6787 = !{null, !28, !28, !18, !18}
!6788 = distinct !DILocation(line: 144, column: 5, scope: !6782)
!6789 = !DILocation(line: 55, column: 91, scope: !6035, inlinedAt: !6784)
!6790 = !DILocation(line: 55, column: 106, scope: !6035, inlinedAt: !6784)
!6791 = !DILocation(line: 55, column: 116, scope: !6035, inlinedAt: !6784)
!6792 = !DILocation(line: 56, column: 53, scope: !6035, inlinedAt: !6784)
!6793 = !DILocation(line: 56, column: 62, scope: !6035, inlinedAt: !6784)
!6794 = !DILocation(line: 58, column: 9, scope: !6035, inlinedAt: !6784)
!6795 = !DILocalVariable(name: "b", arg: 1, scope: !6785, file: !174, line: 126, type: !28)
!6796 = !DILocation(line: 126, column: 91, scope: !6785, inlinedAt: !6788)
!6797 = !DILocalVariable(name: "temp", arg: 2, scope: !6785, file: !174, line: 126, type: !28)
!6798 = !DILocation(line: 126, column: 103, scope: !6785, inlinedAt: !6788)
!6799 = !DILocalVariable(name: "w", arg: 3, scope: !6785, file: !174, line: 127, type: !18)
!6800 = !DILocation(line: 127, column: 67, scope: !6785, inlinedAt: !6788)
!6801 = !DILocalVariable(name: "shift", arg: 4, scope: !6785, file: !174, line: 127, type: !18)
!6802 = !DILocation(line: 127, column: 74, scope: !6785, inlinedAt: !6788)
!6803 = !DILocalVariable(name: "w2", scope: !6785, file: !174, line: 129, type: !1931)
!6804 = !DILocation(line: 129, column: 15, scope: !6785, inlinedAt: !6788)
!6805 = !DILocalVariable(name: "x", scope: !6785, file: !174, line: 130, type: !18)
!6806 = !DILocation(line: 130, column: 9, scope: !6785, inlinedAt: !6788)
!6807 = !DILocalVariable(name: "_b", arg: 1, scope: !6782, file: !174, line: 140, type: !20)
!6808 = !DILocation(line: 140, column: 54, scope: !6782)
!6809 = !DILocalVariable(name: "_temp", arg: 2, scope: !6782, file: !174, line: 140, type: !20)
!6810 = !DILocation(line: 140, column: 67, scope: !6782)
!6811 = !DILocalVariable(name: "w", arg: 3, scope: !6782, file: !174, line: 140, type: !18)
!6812 = !DILocation(line: 140, column: 78, scope: !6782)
!6813 = !DILocalVariable(name: "b", scope: !6782, file: !174, line: 142, type: !28)
!6814 = !DILocation(line: 142, column: 14, scope: !6782)
!6815 = !DILocation(line: 142, column: 29, scope: !6782)
!6816 = !DILocation(line: 142, column: 18, scope: !6782)
!6817 = !DILocalVariable(name: "temp", scope: !6782, file: !174, line: 143, type: !28)
!6818 = !DILocation(line: 143, column: 14, scope: !6782)
!6819 = !DILocation(line: 143, column: 32, scope: !6782)
!6820 = !DILocation(line: 143, column: 21, scope: !6782)
!6821 = !DILocation(line: 144, column: 36, scope: !6782)
!6822 = !DILocation(line: 144, column: 39, scope: !6782)
!6823 = !DILocation(line: 144, column: 45, scope: !6782)
!6824 = !DILocation(line: 144, column: 5, scope: !6782)
!6825 = !DILocation(line: 129, column: 20, scope: !6785, inlinedAt: !6788)
!6826 = !DILocation(line: 129, column: 22, scope: !6785, inlinedAt: !6788)
!6827 = !DILocation(line: 132, column: 12, scope: !6828, inlinedAt: !6788)
!6828 = distinct !DILexicalBlock(scope: !6785, file: !174, line: 132, column: 5)
!6829 = !DILocation(line: 132, column: 10, scope: !6828, inlinedAt: !6788)
!6830 = !DILocation(line: 132, column: 17, scope: !6831, inlinedAt: !6788)
!6831 = !DILexicalBlockFile(scope: !6832, file: !174, discriminator: 1)
!6832 = distinct !DILexicalBlock(scope: !6828, file: !174, line: 132, column: 5)
!6833 = !DILocation(line: 132, column: 21, scope: !6831, inlinedAt: !6788)
!6834 = !DILocation(line: 132, column: 19, scope: !6831, inlinedAt: !6788)
!6835 = !DILocation(line: 132, column: 5, scope: !6831, inlinedAt: !6788)
!6836 = !DILocation(line: 133, column: 29, scope: !6837, inlinedAt: !6788)
!6837 = distinct !DILexicalBlock(scope: !6832, file: !174, line: 132, column: 30)
!6838 = !DILocation(line: 133, column: 27, scope: !6837, inlinedAt: !6788)
!6839 = !DILocation(line: 133, column: 54, scope: !6837, inlinedAt: !6788)
!6840 = !DILocation(line: 133, column: 56, scope: !6837, inlinedAt: !6788)
!6841 = !DILocation(line: 133, column: 55, scope: !6837, inlinedAt: !6788)
!6842 = !DILocation(line: 133, column: 52, scope: !6837, inlinedAt: !6788)
!6843 = !DILocation(line: 133, column: 60, scope: !6837, inlinedAt: !6788)
!6844 = !DILocation(line: 133, column: 66, scope: !6837, inlinedAt: !6788)
!6845 = !DILocation(line: 133, column: 33, scope: !6837, inlinedAt: !6788)
!6846 = !DILocation(line: 133, column: 14, scope: !6837, inlinedAt: !6788)
!6847 = !DILocation(line: 133, column: 9, scope: !6837, inlinedAt: !6788)
!6848 = !DILocation(line: 133, column: 18, scope: !6837, inlinedAt: !6788)
!6849 = !DILocation(line: 134, column: 31, scope: !6837, inlinedAt: !6788)
!6850 = !DILocation(line: 134, column: 33, scope: !6837, inlinedAt: !6788)
!6851 = !DILocation(line: 134, column: 32, scope: !6837, inlinedAt: !6788)
!6852 = !DILocation(line: 134, column: 29, scope: !6837, inlinedAt: !6788)
!6853 = !DILocation(line: 134, column: 55, scope: !6837, inlinedAt: !6788)
!6854 = !DILocation(line: 134, column: 50, scope: !6837, inlinedAt: !6788)
!6855 = !DILocation(line: 134, column: 37, scope: !6837, inlinedAt: !6788)
!6856 = !DILocation(line: 134, column: 14, scope: !6837, inlinedAt: !6788)
!6857 = !DILocation(line: 134, column: 16, scope: !6837, inlinedAt: !6788)
!6858 = !DILocation(line: 134, column: 15, scope: !6837, inlinedAt: !6788)
!6859 = !DILocation(line: 134, column: 9, scope: !6837, inlinedAt: !6788)
!6860 = !DILocation(line: 134, column: 20, scope: !6837, inlinedAt: !6788)
!6861 = !DILocation(line: 132, column: 26, scope: !6862, inlinedAt: !6788)
!6862 = !DILexicalBlockFile(scope: !6832, file: !174, discriminator: 2)
!6863 = !DILocation(line: 132, column: 5, scope: !6862, inlinedAt: !6788)
!6864 = distinct !{!6864, !6865}
!6865 = !DILocation(line: 132, column: 5, scope: !6785)
!6866 = !DILocation(line: 137, column: 22, scope: !6785, inlinedAt: !6788)
!6867 = !DILocation(line: 137, column: 25, scope: !6785, inlinedAt: !6788)
!6868 = !DILocation(line: 137, column: 31, scope: !6785, inlinedAt: !6788)
!6869 = !DILocation(line: 137, column: 36, scope: !6785, inlinedAt: !6788)
!6870 = !DILocation(line: 137, column: 35, scope: !6785, inlinedAt: !6788)
!6871 = !DILocation(line: 137, column: 40, scope: !6785, inlinedAt: !6788)
!6872 = !DILocation(line: 137, column: 44, scope: !6785, inlinedAt: !6788)
!6873 = !DILocation(line: 137, column: 51, scope: !6785, inlinedAt: !6788)
!6874 = !DILocation(line: 137, column: 5, scope: !6785, inlinedAt: !6788)
!6875 = !DILocation(line: 59, column: 12, scope: !6162, inlinedAt: !6784)
!6876 = !DILocation(line: 59, column: 10, scope: !6162, inlinedAt: !6784)
!6877 = !DILocation(line: 59, column: 17, scope: !6165, inlinedAt: !6784)
!6878 = !DILocation(line: 59, column: 21, scope: !6165, inlinedAt: !6784)
!6879 = !DILocation(line: 59, column: 19, scope: !6165, inlinedAt: !6784)
!6880 = !DILocation(line: 59, column: 5, scope: !6165, inlinedAt: !6784)
!6881 = !DILocation(line: 60, column: 33, scope: !6171, inlinedAt: !6784)
!6882 = !DILocation(line: 60, column: 28, scope: !6171, inlinedAt: !6784)
!6883 = !DILocation(line: 60, column: 48, scope: !6171, inlinedAt: !6784)
!6884 = !DILocation(line: 60, column: 36, scope: !6171, inlinedAt: !6784)
!6885 = !DILocation(line: 60, column: 57, scope: !6171, inlinedAt: !6784)
!6886 = !DILocation(line: 60, column: 54, scope: !6171, inlinedAt: !6784)
!6887 = !DILocation(line: 60, column: 15, scope: !6171, inlinedAt: !6784)
!6888 = !DILocation(line: 60, column: 14, scope: !6171, inlinedAt: !6784)
!6889 = !DILocation(line: 60, column: 9, scope: !6171, inlinedAt: !6784)
!6890 = !DILocation(line: 60, column: 19, scope: !6171, inlinedAt: !6784)
!6891 = !DILocation(line: 61, column: 34, scope: !6171, inlinedAt: !6784)
!6892 = !DILocation(line: 61, column: 29, scope: !6171, inlinedAt: !6784)
!6893 = !DILocation(line: 61, column: 49, scope: !6171, inlinedAt: !6784)
!6894 = !DILocation(line: 61, column: 37, scope: !6171, inlinedAt: !6784)
!6895 = !DILocation(line: 61, column: 58, scope: !6171, inlinedAt: !6784)
!6896 = !DILocation(line: 61, column: 55, scope: !6171, inlinedAt: !6784)
!6897 = !DILocation(line: 61, column: 15, scope: !6171, inlinedAt: !6784)
!6898 = !DILocation(line: 61, column: 14, scope: !6171, inlinedAt: !6784)
!6899 = !DILocation(line: 61, column: 16, scope: !6171, inlinedAt: !6784)
!6900 = !DILocation(line: 61, column: 9, scope: !6171, inlinedAt: !6784)
!6901 = !DILocation(line: 61, column: 20, scope: !6171, inlinedAt: !6784)
!6902 = !DILocation(line: 59, column: 26, scope: !6193, inlinedAt: !6784)
!6903 = !DILocation(line: 59, column: 5, scope: !6193, inlinedAt: !6784)
!6904 = !DILocation(line: 145, column: 1, scope: !6782)
!6905 = distinct !DISubprogram(name: "horizontal_compose_haar1i_10bit", scope: !174, file: !174, line: 147, type: !63, isLocal: true, isDefinition: true, scopeLine: 148, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!6906 = !DILocation(line: 55, column: 77, scope: !6035, inlinedAt: !6907)
!6907 = distinct !DILocation(line: 137, column: 5, scope: !6785, inlinedAt: !6908)
!6908 = distinct !DILocation(line: 151, column: 5, scope: !6905)
!6909 = !DILocation(line: 55, column: 91, scope: !6035, inlinedAt: !6907)
!6910 = !DILocation(line: 55, column: 106, scope: !6035, inlinedAt: !6907)
!6911 = !DILocation(line: 55, column: 116, scope: !6035, inlinedAt: !6907)
!6912 = !DILocation(line: 56, column: 53, scope: !6035, inlinedAt: !6907)
!6913 = !DILocation(line: 56, column: 62, scope: !6035, inlinedAt: !6907)
!6914 = !DILocation(line: 58, column: 9, scope: !6035, inlinedAt: !6907)
!6915 = !DILocation(line: 126, column: 91, scope: !6785, inlinedAt: !6908)
!6916 = !DILocation(line: 126, column: 103, scope: !6785, inlinedAt: !6908)
!6917 = !DILocation(line: 127, column: 67, scope: !6785, inlinedAt: !6908)
!6918 = !DILocation(line: 127, column: 74, scope: !6785, inlinedAt: !6908)
!6919 = !DILocation(line: 129, column: 15, scope: !6785, inlinedAt: !6908)
!6920 = !DILocation(line: 130, column: 9, scope: !6785, inlinedAt: !6908)
!6921 = !DILocalVariable(name: "_b", arg: 1, scope: !6905, file: !174, line: 147, type: !20)
!6922 = !DILocation(line: 147, column: 54, scope: !6905)
!6923 = !DILocalVariable(name: "_temp", arg: 2, scope: !6905, file: !174, line: 147, type: !20)
!6924 = !DILocation(line: 147, column: 67, scope: !6905)
!6925 = !DILocalVariable(name: "w", arg: 3, scope: !6905, file: !174, line: 147, type: !18)
!6926 = !DILocation(line: 147, column: 78, scope: !6905)
!6927 = !DILocalVariable(name: "b", scope: !6905, file: !174, line: 149, type: !28)
!6928 = !DILocation(line: 149, column: 14, scope: !6905)
!6929 = !DILocation(line: 149, column: 29, scope: !6905)
!6930 = !DILocation(line: 149, column: 18, scope: !6905)
!6931 = !DILocalVariable(name: "temp", scope: !6905, file: !174, line: 150, type: !28)
!6932 = !DILocation(line: 150, column: 14, scope: !6905)
!6933 = !DILocation(line: 150, column: 32, scope: !6905)
!6934 = !DILocation(line: 150, column: 21, scope: !6905)
!6935 = !DILocation(line: 151, column: 36, scope: !6905)
!6936 = !DILocation(line: 151, column: 39, scope: !6905)
!6937 = !DILocation(line: 151, column: 45, scope: !6905)
!6938 = !DILocation(line: 151, column: 5, scope: !6905)
!6939 = !DILocation(line: 129, column: 20, scope: !6785, inlinedAt: !6908)
!6940 = !DILocation(line: 129, column: 22, scope: !6785, inlinedAt: !6908)
!6941 = !DILocation(line: 132, column: 12, scope: !6828, inlinedAt: !6908)
!6942 = !DILocation(line: 132, column: 10, scope: !6828, inlinedAt: !6908)
!6943 = !DILocation(line: 132, column: 17, scope: !6831, inlinedAt: !6908)
!6944 = !DILocation(line: 132, column: 21, scope: !6831, inlinedAt: !6908)
!6945 = !DILocation(line: 132, column: 19, scope: !6831, inlinedAt: !6908)
!6946 = !DILocation(line: 132, column: 5, scope: !6831, inlinedAt: !6908)
!6947 = !DILocation(line: 133, column: 29, scope: !6837, inlinedAt: !6908)
!6948 = !DILocation(line: 133, column: 27, scope: !6837, inlinedAt: !6908)
!6949 = !DILocation(line: 133, column: 54, scope: !6837, inlinedAt: !6908)
!6950 = !DILocation(line: 133, column: 56, scope: !6837, inlinedAt: !6908)
!6951 = !DILocation(line: 133, column: 55, scope: !6837, inlinedAt: !6908)
!6952 = !DILocation(line: 133, column: 52, scope: !6837, inlinedAt: !6908)
!6953 = !DILocation(line: 133, column: 60, scope: !6837, inlinedAt: !6908)
!6954 = !DILocation(line: 133, column: 66, scope: !6837, inlinedAt: !6908)
!6955 = !DILocation(line: 133, column: 33, scope: !6837, inlinedAt: !6908)
!6956 = !DILocation(line: 133, column: 14, scope: !6837, inlinedAt: !6908)
!6957 = !DILocation(line: 133, column: 9, scope: !6837, inlinedAt: !6908)
!6958 = !DILocation(line: 133, column: 18, scope: !6837, inlinedAt: !6908)
!6959 = !DILocation(line: 134, column: 31, scope: !6837, inlinedAt: !6908)
!6960 = !DILocation(line: 134, column: 33, scope: !6837, inlinedAt: !6908)
!6961 = !DILocation(line: 134, column: 32, scope: !6837, inlinedAt: !6908)
!6962 = !DILocation(line: 134, column: 29, scope: !6837, inlinedAt: !6908)
!6963 = !DILocation(line: 134, column: 55, scope: !6837, inlinedAt: !6908)
!6964 = !DILocation(line: 134, column: 50, scope: !6837, inlinedAt: !6908)
!6965 = !DILocation(line: 134, column: 37, scope: !6837, inlinedAt: !6908)
!6966 = !DILocation(line: 134, column: 14, scope: !6837, inlinedAt: !6908)
!6967 = !DILocation(line: 134, column: 16, scope: !6837, inlinedAt: !6908)
!6968 = !DILocation(line: 134, column: 15, scope: !6837, inlinedAt: !6908)
!6969 = !DILocation(line: 134, column: 9, scope: !6837, inlinedAt: !6908)
!6970 = !DILocation(line: 134, column: 20, scope: !6837, inlinedAt: !6908)
!6971 = !DILocation(line: 132, column: 26, scope: !6862, inlinedAt: !6908)
!6972 = !DILocation(line: 132, column: 5, scope: !6862, inlinedAt: !6908)
!6973 = !DILocation(line: 137, column: 22, scope: !6785, inlinedAt: !6908)
!6974 = !DILocation(line: 137, column: 25, scope: !6785, inlinedAt: !6908)
!6975 = !DILocation(line: 137, column: 31, scope: !6785, inlinedAt: !6908)
!6976 = !DILocation(line: 137, column: 36, scope: !6785, inlinedAt: !6908)
!6977 = !DILocation(line: 137, column: 35, scope: !6785, inlinedAt: !6908)
!6978 = !DILocation(line: 137, column: 40, scope: !6785, inlinedAt: !6908)
!6979 = !DILocation(line: 137, column: 44, scope: !6785, inlinedAt: !6908)
!6980 = !DILocation(line: 137, column: 51, scope: !6785, inlinedAt: !6908)
!6981 = !DILocation(line: 137, column: 5, scope: !6785, inlinedAt: !6908)
!6982 = !DILocation(line: 59, column: 12, scope: !6162, inlinedAt: !6907)
!6983 = !DILocation(line: 59, column: 10, scope: !6162, inlinedAt: !6907)
!6984 = !DILocation(line: 59, column: 17, scope: !6165, inlinedAt: !6907)
!6985 = !DILocation(line: 59, column: 21, scope: !6165, inlinedAt: !6907)
!6986 = !DILocation(line: 59, column: 19, scope: !6165, inlinedAt: !6907)
!6987 = !DILocation(line: 59, column: 5, scope: !6165, inlinedAt: !6907)
!6988 = !DILocation(line: 60, column: 33, scope: !6171, inlinedAt: !6907)
!6989 = !DILocation(line: 60, column: 28, scope: !6171, inlinedAt: !6907)
!6990 = !DILocation(line: 60, column: 48, scope: !6171, inlinedAt: !6907)
!6991 = !DILocation(line: 60, column: 36, scope: !6171, inlinedAt: !6907)
!6992 = !DILocation(line: 60, column: 57, scope: !6171, inlinedAt: !6907)
!6993 = !DILocation(line: 60, column: 54, scope: !6171, inlinedAt: !6907)
!6994 = !DILocation(line: 60, column: 15, scope: !6171, inlinedAt: !6907)
!6995 = !DILocation(line: 60, column: 14, scope: !6171, inlinedAt: !6907)
!6996 = !DILocation(line: 60, column: 9, scope: !6171, inlinedAt: !6907)
!6997 = !DILocation(line: 60, column: 19, scope: !6171, inlinedAt: !6907)
!6998 = !DILocation(line: 61, column: 34, scope: !6171, inlinedAt: !6907)
!6999 = !DILocation(line: 61, column: 29, scope: !6171, inlinedAt: !6907)
!7000 = !DILocation(line: 61, column: 49, scope: !6171, inlinedAt: !6907)
!7001 = !DILocation(line: 61, column: 37, scope: !6171, inlinedAt: !6907)
!7002 = !DILocation(line: 61, column: 58, scope: !6171, inlinedAt: !6907)
!7003 = !DILocation(line: 61, column: 55, scope: !6171, inlinedAt: !6907)
!7004 = !DILocation(line: 61, column: 15, scope: !6171, inlinedAt: !6907)
!7005 = !DILocation(line: 61, column: 14, scope: !6171, inlinedAt: !6907)
!7006 = !DILocation(line: 61, column: 16, scope: !6171, inlinedAt: !6907)
!7007 = !DILocation(line: 61, column: 9, scope: !6171, inlinedAt: !6907)
!7008 = !DILocation(line: 61, column: 20, scope: !6171, inlinedAt: !6907)
!7009 = !DILocation(line: 59, column: 26, scope: !6193, inlinedAt: !6907)
!7010 = !DILocation(line: 59, column: 5, scope: !6193, inlinedAt: !6907)
!7011 = !DILocation(line: 152, column: 1, scope: !6905)
!7012 = distinct !DISubprogram(name: "spatial_compose_fidelity_10bit", scope: !174, file: !174, line: 426, type: !1596, isLocal: true, isDefinition: true, scopeLine: 427, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!7013 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !7014)
!7014 = distinct !DILocation(line: 441, column: 32, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !7016, file: !174, line: 440, column: 9)
!7016 = distinct !DILexicalBlock(scope: !7017, file: !174, line: 440, column: 9)
!7017 = distinct !DILexicalBlock(scope: !7018, file: !174, line: 439, column: 37)
!7018 = distinct !DILexicalBlock(scope: !7019, file: !174, line: 439, column: 5)
!7019 = distinct !DILexicalBlock(scope: !7012, file: !174, line: 439, column: 5)
!7020 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !7014)
!7021 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !7014)
!7022 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !7023)
!7023 = distinct !DILocation(line: 435, column: 32, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !7025, file: !174, line: 434, column: 9)
!7025 = distinct !DILexicalBlock(scope: !7026, file: !174, line: 434, column: 9)
!7026 = distinct !DILexicalBlock(scope: !7027, file: !174, line: 433, column: 37)
!7027 = distinct !DILexicalBlock(scope: !7028, file: !174, line: 433, column: 5)
!7028 = distinct !DILexicalBlock(scope: !7012, file: !174, line: 433, column: 5)
!7029 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !7023)
!7030 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !7023)
!7031 = !DILocalVariable(name: "d", arg: 1, scope: !7012, file: !174, line: 426, type: !37)
!7032 = !DILocation(line: 426, column: 56, scope: !7012)
!7033 = !DILocalVariable(name: "level", arg: 2, scope: !7012, file: !174, line: 426, type: !18)
!7034 = !DILocation(line: 426, column: 63, scope: !7012)
!7035 = !DILocalVariable(name: "width", arg: 3, scope: !7012, file: !174, line: 426, type: !18)
!7036 = !DILocation(line: 426, column: 74, scope: !7012)
!7037 = !DILocalVariable(name: "height", arg: 4, scope: !7012, file: !174, line: 426, type: !18)
!7038 = !DILocation(line: 426, column: 85, scope: !7012)
!7039 = !DILocalVariable(name: "stride", arg: 5, scope: !7012, file: !174, line: 426, type: !18)
!7040 = !DILocation(line: 426, column: 97, scope: !7012)
!7041 = !DILocalVariable(name: "vertical_compose_l0", scope: !7012, file: !174, line: 428, type: !3344)
!7042 = !DILocation(line: 428, column: 27, scope: !7012)
!7043 = !DILocation(line: 428, column: 56, scope: !7012)
!7044 = !DILocation(line: 428, column: 59, scope: !7012)
!7045 = !DILocation(line: 428, column: 49, scope: !7012)
!7046 = !DILocalVariable(name: "vertical_compose_h0", scope: !7012, file: !174, line: 429, type: !3344)
!7047 = !DILocation(line: 429, column: 27, scope: !7012)
!7048 = !DILocation(line: 429, column: 56, scope: !7012)
!7049 = !DILocation(line: 429, column: 59, scope: !7012)
!7050 = !DILocation(line: 429, column: 49, scope: !7012)
!7051 = !DILocalVariable(name: "i", scope: !7012, file: !174, line: 430, type: !18)
!7052 = !DILocation(line: 430, column: 9, scope: !7012)
!7053 = !DILocalVariable(name: "y", scope: !7012, file: !174, line: 430, type: !18)
!7054 = !DILocation(line: 430, column: 12, scope: !7012)
!7055 = !DILocalVariable(name: "b", scope: !7012, file: !174, line: 431, type: !71)
!7056 = !DILocation(line: 431, column: 14, scope: !7012)
!7057 = !DILocation(line: 433, column: 12, scope: !7028)
!7058 = !DILocation(line: 433, column: 10, scope: !7028)
!7059 = !DILocation(line: 433, column: 17, scope: !7060)
!7060 = !DILexicalBlockFile(scope: !7027, file: !174, discriminator: 1)
!7061 = !DILocation(line: 433, column: 21, scope: !7060)
!7062 = !DILocation(line: 433, column: 19, scope: !7060)
!7063 = !DILocation(line: 433, column: 5, scope: !7060)
!7064 = !DILocation(line: 434, column: 16, scope: !7025)
!7065 = !DILocation(line: 434, column: 14, scope: !7025)
!7066 = !DILocation(line: 434, column: 21, scope: !7067)
!7067 = !DILexicalBlockFile(scope: !7024, file: !174, discriminator: 1)
!7068 = !DILocation(line: 434, column: 23, scope: !7067)
!7069 = !DILocation(line: 434, column: 9, scope: !7067)
!7070 = !DILocation(line: 435, column: 20, scope: !7024)
!7071 = !DILocation(line: 435, column: 23, scope: !7024)
!7072 = !DILocation(line: 435, column: 43, scope: !7024)
!7073 = !DILocation(line: 435, column: 44, scope: !7024)
!7074 = !DILocation(line: 435, column: 51, scope: !7024)
!7075 = !DILocation(line: 435, column: 50, scope: !7024)
!7076 = !DILocation(line: 435, column: 47, scope: !7024)
!7077 = !DILocation(line: 435, column: 58, scope: !7024)
!7078 = !DILocation(line: 435, column: 64, scope: !7024)
!7079 = !DILocation(line: 435, column: 32, scope: !7024)
!7080 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !7023)
!7081 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !7023)
!7082 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !7023)
!7083 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !7023)
!7084 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !7023)
!7085 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !7023)
!7086 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !7023)
!7087 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !7023)
!7088 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !7023)
!7089 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !7023)
!7090 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !7023)
!7091 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !7023)
!7092 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !7023)
!7093 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !7023)
!7094 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !7023)
!7095 = !DILocation(line: 435, column: 68, scope: !7024)
!7096 = !DILocation(line: 435, column: 67, scope: !7024)
!7097 = !DILocation(line: 435, column: 30, scope: !7024)
!7098 = !DILocation(line: 435, column: 15, scope: !7024)
!7099 = !DILocation(line: 435, column: 13, scope: !7024)
!7100 = !DILocation(line: 435, column: 18, scope: !7024)
!7101 = !DILocation(line: 434, column: 29, scope: !7102)
!7102 = !DILexicalBlockFile(scope: !7024, file: !174, discriminator: 2)
!7103 = !DILocation(line: 434, column: 9, scope: !7102)
!7104 = distinct !{!7104, !7105}
!7105 = !DILocation(line: 434, column: 9, scope: !7026)
!7106 = !DILocation(line: 436, column: 9, scope: !7026)
!7107 = !DILocation(line: 436, column: 29, scope: !7026)
!7108 = !DILocation(line: 436, column: 32, scope: !7026)
!7109 = !DILocation(line: 436, column: 41, scope: !7026)
!7110 = !DILocation(line: 436, column: 43, scope: !7026)
!7111 = !DILocation(line: 436, column: 42, scope: !7026)
!7112 = !DILocation(line: 436, column: 39, scope: !7026)
!7113 = !DILocation(line: 436, column: 51, scope: !7026)
!7114 = !DILocation(line: 436, column: 54, scope: !7026)
!7115 = !DILocation(line: 437, column: 5, scope: !7026)
!7116 = !DILocation(line: 433, column: 31, scope: !7117)
!7117 = !DILexicalBlockFile(scope: !7027, file: !174, discriminator: 2)
!7118 = !DILocation(line: 433, column: 5, scope: !7117)
!7119 = distinct !{!7119, !7120}
!7120 = !DILocation(line: 433, column: 5, scope: !7012)
!7121 = !DILocation(line: 439, column: 12, scope: !7019)
!7122 = !DILocation(line: 439, column: 10, scope: !7019)
!7123 = !DILocation(line: 439, column: 17, scope: !7124)
!7124 = !DILexicalBlockFile(scope: !7018, file: !174, discriminator: 1)
!7125 = !DILocation(line: 439, column: 21, scope: !7124)
!7126 = !DILocation(line: 439, column: 19, scope: !7124)
!7127 = !DILocation(line: 439, column: 5, scope: !7124)
!7128 = !DILocation(line: 440, column: 16, scope: !7016)
!7129 = !DILocation(line: 440, column: 14, scope: !7016)
!7130 = !DILocation(line: 440, column: 21, scope: !7131)
!7131 = !DILexicalBlockFile(scope: !7015, file: !174, discriminator: 1)
!7132 = !DILocation(line: 440, column: 23, scope: !7131)
!7133 = !DILocation(line: 440, column: 9, scope: !7131)
!7134 = !DILocation(line: 441, column: 20, scope: !7015)
!7135 = !DILocation(line: 441, column: 23, scope: !7015)
!7136 = !DILocation(line: 441, column: 43, scope: !7015)
!7137 = !DILocation(line: 441, column: 44, scope: !7015)
!7138 = !DILocation(line: 441, column: 51, scope: !7015)
!7139 = !DILocation(line: 441, column: 50, scope: !7015)
!7140 = !DILocation(line: 441, column: 47, scope: !7015)
!7141 = !DILocation(line: 441, column: 58, scope: !7015)
!7142 = !DILocation(line: 441, column: 64, scope: !7015)
!7143 = !DILocation(line: 441, column: 32, scope: !7015)
!7144 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !7014)
!7145 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !7014)
!7146 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !7014)
!7147 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !7014)
!7148 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !7014)
!7149 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !7014)
!7150 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !7014)
!7151 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !7014)
!7152 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !7014)
!7153 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !7014)
!7154 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !7014)
!7155 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !7014)
!7156 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !7014)
!7157 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !7014)
!7158 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !7014)
!7159 = !DILocation(line: 441, column: 68, scope: !7015)
!7160 = !DILocation(line: 441, column: 67, scope: !7015)
!7161 = !DILocation(line: 441, column: 30, scope: !7015)
!7162 = !DILocation(line: 441, column: 15, scope: !7015)
!7163 = !DILocation(line: 441, column: 13, scope: !7015)
!7164 = !DILocation(line: 441, column: 18, scope: !7015)
!7165 = !DILocation(line: 440, column: 29, scope: !7166)
!7166 = !DILexicalBlockFile(scope: !7015, file: !174, discriminator: 2)
!7167 = !DILocation(line: 440, column: 9, scope: !7166)
!7168 = distinct !{!7168, !7169}
!7169 = !DILocation(line: 440, column: 9, scope: !7017)
!7170 = !DILocation(line: 442, column: 9, scope: !7017)
!7171 = !DILocation(line: 442, column: 29, scope: !7017)
!7172 = !DILocation(line: 442, column: 32, scope: !7017)
!7173 = !DILocation(line: 442, column: 41, scope: !7017)
!7174 = !DILocation(line: 442, column: 43, scope: !7017)
!7175 = !DILocation(line: 442, column: 42, scope: !7017)
!7176 = !DILocation(line: 442, column: 39, scope: !7017)
!7177 = !DILocation(line: 442, column: 51, scope: !7017)
!7178 = !DILocation(line: 442, column: 54, scope: !7017)
!7179 = !DILocation(line: 443, column: 5, scope: !7017)
!7180 = !DILocation(line: 439, column: 31, scope: !7181)
!7181 = !DILexicalBlockFile(scope: !7018, file: !174, discriminator: 2)
!7182 = !DILocation(line: 439, column: 5, scope: !7181)
!7183 = distinct !{!7183, !7184}
!7184 = !DILocation(line: 439, column: 5, scope: !7012)
!7185 = !DILocation(line: 445, column: 12, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7012, file: !174, line: 445, column: 5)
!7187 = !DILocation(line: 445, column: 10, scope: !7186)
!7188 = !DILocation(line: 445, column: 17, scope: !7189)
!7189 = !DILexicalBlockFile(scope: !7190, file: !174, discriminator: 1)
!7190 = distinct !DILexicalBlock(scope: !7186, file: !174, line: 445, column: 5)
!7191 = !DILocation(line: 445, column: 21, scope: !7189)
!7192 = !DILocation(line: 445, column: 19, scope: !7189)
!7193 = !DILocation(line: 445, column: 5, scope: !7189)
!7194 = !DILocation(line: 446, column: 9, scope: !7190)
!7195 = !DILocation(line: 446, column: 12, scope: !7190)
!7196 = !DILocation(line: 446, column: 31, scope: !7190)
!7197 = !DILocation(line: 446, column: 34, scope: !7190)
!7198 = !DILocation(line: 446, column: 43, scope: !7190)
!7199 = !DILocation(line: 446, column: 45, scope: !7190)
!7200 = !DILocation(line: 446, column: 44, scope: !7190)
!7201 = !DILocation(line: 446, column: 41, scope: !7190)
!7202 = !DILocation(line: 446, column: 53, scope: !7190)
!7203 = !DILocation(line: 446, column: 56, scope: !7190)
!7204 = !DILocation(line: 446, column: 62, scope: !7190)
!7205 = !DILocation(line: 445, column: 30, scope: !7206)
!7206 = !DILexicalBlockFile(scope: !7190, file: !174, discriminator: 2)
!7207 = !DILocation(line: 445, column: 5, scope: !7206)
!7208 = distinct !{!7208, !7209}
!7209 = !DILocation(line: 445, column: 5, scope: !7012)
!7210 = !DILocation(line: 448, column: 22, scope: !7012)
!7211 = !DILocation(line: 448, column: 28, scope: !7012)
!7212 = !DILocation(line: 448, column: 11, scope: !7012)
!7213 = !DILocation(line: 448, column: 5, scope: !7012)
!7214 = !DILocation(line: 448, column: 8, scope: !7012)
!7215 = !DILocation(line: 448, column: 18, scope: !7012)
!7216 = !DILocation(line: 448, column: 20, scope: !7012)
!7217 = !DILocation(line: 449, column: 1, scope: !7012)
!7218 = distinct !DISubprogram(name: "vertical_compose_fidelityiL0_10bit", scope: !174, file: !174, line: 273, type: !3346, isLocal: true, isDefinition: true, scopeLine: 274, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!7219 = !DILocalVariable(name: "_dst", arg: 1, scope: !7218, file: !174, line: 273, type: !20)
!7220 = !DILocation(line: 273, column: 57, scope: !7218)
!7221 = !DILocalVariable(name: "_b", arg: 2, scope: !7218, file: !174, line: 273, type: !3348)
!7222 = !DILocation(line: 273, column: 72, scope: !7218)
!7223 = !DILocalVariable(name: "width", arg: 3, scope: !7218, file: !174, line: 273, type: !18)
!7224 = !DILocation(line: 273, column: 83, scope: !7218)
!7225 = !DILocalVariable(name: "i", scope: !7218, file: !174, line: 275, type: !18)
!7226 = !DILocation(line: 275, column: 9, scope: !7218)
!7227 = !DILocalVariable(name: "dst", scope: !7218, file: !174, line: 276, type: !28)
!7228 = !DILocation(line: 276, column: 14, scope: !7218)
!7229 = !DILocation(line: 276, column: 31, scope: !7218)
!7230 = !DILocation(line: 276, column: 20, scope: !7218)
!7231 = !DILocalVariable(name: "b0", scope: !7218, file: !174, line: 277, type: !28)
!7232 = !DILocation(line: 277, column: 14, scope: !7218)
!7233 = !DILocation(line: 277, column: 30, scope: !7218)
!7234 = !DILocation(line: 277, column: 19, scope: !7218)
!7235 = !DILocalVariable(name: "b1", scope: !7218, file: !174, line: 278, type: !28)
!7236 = !DILocation(line: 278, column: 14, scope: !7218)
!7237 = !DILocation(line: 278, column: 30, scope: !7218)
!7238 = !DILocation(line: 278, column: 19, scope: !7218)
!7239 = !DILocalVariable(name: "b2", scope: !7218, file: !174, line: 279, type: !28)
!7240 = !DILocation(line: 279, column: 14, scope: !7218)
!7241 = !DILocation(line: 279, column: 30, scope: !7218)
!7242 = !DILocation(line: 279, column: 19, scope: !7218)
!7243 = !DILocalVariable(name: "b3", scope: !7218, file: !174, line: 280, type: !28)
!7244 = !DILocation(line: 280, column: 14, scope: !7218)
!7245 = !DILocation(line: 280, column: 30, scope: !7218)
!7246 = !DILocation(line: 280, column: 19, scope: !7218)
!7247 = !DILocalVariable(name: "b4", scope: !7218, file: !174, line: 281, type: !28)
!7248 = !DILocation(line: 281, column: 14, scope: !7218)
!7249 = !DILocation(line: 281, column: 30, scope: !7218)
!7250 = !DILocation(line: 281, column: 19, scope: !7218)
!7251 = !DILocalVariable(name: "b5", scope: !7218, file: !174, line: 282, type: !28)
!7252 = !DILocation(line: 282, column: 14, scope: !7218)
!7253 = !DILocation(line: 282, column: 30, scope: !7218)
!7254 = !DILocation(line: 282, column: 19, scope: !7218)
!7255 = !DILocalVariable(name: "b6", scope: !7218, file: !174, line: 283, type: !28)
!7256 = !DILocation(line: 283, column: 14, scope: !7218)
!7257 = !DILocation(line: 283, column: 30, scope: !7218)
!7258 = !DILocation(line: 283, column: 19, scope: !7218)
!7259 = !DILocalVariable(name: "b7", scope: !7218, file: !174, line: 284, type: !28)
!7260 = !DILocation(line: 284, column: 14, scope: !7218)
!7261 = !DILocation(line: 284, column: 30, scope: !7218)
!7262 = !DILocation(line: 284, column: 19, scope: !7218)
!7263 = !DILocation(line: 286, column: 10, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7218, file: !174, line: 286, column: 5)
!7265 = !DILocation(line: 286, column: 9, scope: !7264)
!7266 = !DILocation(line: 286, column: 14, scope: !7267)
!7267 = !DILexicalBlockFile(scope: !7268, file: !174, discriminator: 1)
!7268 = distinct !DILexicalBlock(scope: !7264, file: !174, line: 286, column: 5)
!7269 = !DILocation(line: 286, column: 16, scope: !7267)
!7270 = !DILocation(line: 286, column: 15, scope: !7267)
!7271 = !DILocation(line: 286, column: 5, scope: !7267)
!7272 = !DILocation(line: 287, column: 33, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7268, file: !174, line: 286, column: 27)
!7274 = !DILocation(line: 287, column: 29, scope: !7273)
!7275 = !DILocation(line: 287, column: 52, scope: !7273)
!7276 = !DILocation(line: 287, column: 49, scope: !7273)
!7277 = !DILocation(line: 287, column: 68, scope: !7273)
!7278 = !DILocation(line: 287, column: 65, scope: !7273)
!7279 = !DILocation(line: 287, column: 54, scope: !7273)
!7280 = !DILocation(line: 287, column: 47, scope: !7273)
!7281 = !DILocation(line: 287, column: 81, scope: !7273)
!7282 = !DILocation(line: 287, column: 78, scope: !7273)
!7283 = !DILocation(line: 287, column: 97, scope: !7273)
!7284 = !DILocation(line: 287, column: 94, scope: !7273)
!7285 = !DILocation(line: 287, column: 83, scope: !7273)
!7286 = !DILocation(line: 287, column: 76, scope: !7273)
!7287 = !DILocation(line: 287, column: 72, scope: !7273)
!7288 = !DILocation(line: 287, column: 110, scope: !7273)
!7289 = !DILocation(line: 287, column: 107, scope: !7273)
!7290 = !DILocation(line: 287, column: 126, scope: !7273)
!7291 = !DILocation(line: 287, column: 123, scope: !7273)
!7292 = !DILocation(line: 287, column: 112, scope: !7273)
!7293 = !DILocation(line: 287, column: 105, scope: !7273)
!7294 = !DILocation(line: 287, column: 101, scope: !7273)
!7295 = !DILocation(line: 287, column: 140, scope: !7273)
!7296 = !DILocation(line: 287, column: 137, scope: !7273)
!7297 = !DILocation(line: 287, column: 156, scope: !7273)
!7298 = !DILocation(line: 287, column: 153, scope: !7273)
!7299 = !DILocation(line: 287, column: 142, scope: !7273)
!7300 = !DILocation(line: 287, column: 135, scope: !7273)
!7301 = !DILocation(line: 287, column: 130, scope: !7273)
!7302 = !DILocation(line: 287, column: 160, scope: !7273)
!7303 = !DILocation(line: 287, column: 167, scope: !7273)
!7304 = !DILocation(line: 287, column: 36, scope: !7273)
!7305 = !DILocation(line: 287, column: 13, scope: !7273)
!7306 = !DILocation(line: 287, column: 9, scope: !7273)
!7307 = !DILocation(line: 287, column: 16, scope: !7273)
!7308 = !DILocation(line: 288, column: 5, scope: !7273)
!7309 = !DILocation(line: 286, column: 24, scope: !7310)
!7310 = !DILexicalBlockFile(scope: !7268, file: !174, discriminator: 2)
!7311 = !DILocation(line: 286, column: 5, scope: !7310)
!7312 = distinct !{!7312, !7313}
!7313 = !DILocation(line: 286, column: 5, scope: !7218)
!7314 = !DILocation(line: 289, column: 1, scope: !7218)
!7315 = distinct !DISubprogram(name: "vertical_compose_fidelityiH0_10bit", scope: !174, file: !174, line: 256, type: !3346, isLocal: true, isDefinition: true, scopeLine: 257, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!7316 = !DILocalVariable(name: "_dst", arg: 1, scope: !7315, file: !174, line: 256, type: !20)
!7317 = !DILocation(line: 256, column: 57, scope: !7315)
!7318 = !DILocalVariable(name: "_b", arg: 2, scope: !7315, file: !174, line: 256, type: !3348)
!7319 = !DILocation(line: 256, column: 72, scope: !7315)
!7320 = !DILocalVariable(name: "width", arg: 3, scope: !7315, file: !174, line: 256, type: !18)
!7321 = !DILocation(line: 256, column: 83, scope: !7315)
!7322 = !DILocalVariable(name: "i", scope: !7315, file: !174, line: 258, type: !18)
!7323 = !DILocation(line: 258, column: 9, scope: !7315)
!7324 = !DILocalVariable(name: "dst", scope: !7315, file: !174, line: 259, type: !28)
!7325 = !DILocation(line: 259, column: 14, scope: !7315)
!7326 = !DILocation(line: 259, column: 31, scope: !7315)
!7327 = !DILocation(line: 259, column: 20, scope: !7315)
!7328 = !DILocalVariable(name: "b0", scope: !7315, file: !174, line: 260, type: !28)
!7329 = !DILocation(line: 260, column: 14, scope: !7315)
!7330 = !DILocation(line: 260, column: 30, scope: !7315)
!7331 = !DILocation(line: 260, column: 19, scope: !7315)
!7332 = !DILocalVariable(name: "b1", scope: !7315, file: !174, line: 261, type: !28)
!7333 = !DILocation(line: 261, column: 14, scope: !7315)
!7334 = !DILocation(line: 261, column: 30, scope: !7315)
!7335 = !DILocation(line: 261, column: 19, scope: !7315)
!7336 = !DILocalVariable(name: "b2", scope: !7315, file: !174, line: 262, type: !28)
!7337 = !DILocation(line: 262, column: 14, scope: !7315)
!7338 = !DILocation(line: 262, column: 30, scope: !7315)
!7339 = !DILocation(line: 262, column: 19, scope: !7315)
!7340 = !DILocalVariable(name: "b3", scope: !7315, file: !174, line: 263, type: !28)
!7341 = !DILocation(line: 263, column: 14, scope: !7315)
!7342 = !DILocation(line: 263, column: 30, scope: !7315)
!7343 = !DILocation(line: 263, column: 19, scope: !7315)
!7344 = !DILocalVariable(name: "b4", scope: !7315, file: !174, line: 264, type: !28)
!7345 = !DILocation(line: 264, column: 14, scope: !7315)
!7346 = !DILocation(line: 264, column: 30, scope: !7315)
!7347 = !DILocation(line: 264, column: 19, scope: !7315)
!7348 = !DILocalVariable(name: "b5", scope: !7315, file: !174, line: 265, type: !28)
!7349 = !DILocation(line: 265, column: 14, scope: !7315)
!7350 = !DILocation(line: 265, column: 30, scope: !7315)
!7351 = !DILocation(line: 265, column: 19, scope: !7315)
!7352 = !DILocalVariable(name: "b6", scope: !7315, file: !174, line: 266, type: !28)
!7353 = !DILocation(line: 266, column: 14, scope: !7315)
!7354 = !DILocation(line: 266, column: 30, scope: !7315)
!7355 = !DILocation(line: 266, column: 19, scope: !7315)
!7356 = !DILocalVariable(name: "b7", scope: !7315, file: !174, line: 267, type: !28)
!7357 = !DILocation(line: 267, column: 14, scope: !7315)
!7358 = !DILocation(line: 267, column: 30, scope: !7315)
!7359 = !DILocation(line: 267, column: 19, scope: !7315)
!7360 = !DILocation(line: 268, column: 10, scope: !7361)
!7361 = distinct !DILexicalBlock(scope: !7315, file: !174, line: 268, column: 5)
!7362 = !DILocation(line: 268, column: 9, scope: !7361)
!7363 = !DILocation(line: 268, column: 14, scope: !7364)
!7364 = !DILexicalBlockFile(scope: !7365, file: !174, discriminator: 1)
!7365 = distinct !DILexicalBlock(scope: !7361, file: !174, line: 268, column: 5)
!7366 = !DILocation(line: 268, column: 16, scope: !7364)
!7367 = !DILocation(line: 268, column: 15, scope: !7364)
!7368 = !DILocation(line: 268, column: 5, scope: !7364)
!7369 = !DILocation(line: 269, column: 33, scope: !7370)
!7370 = distinct !DILexicalBlock(scope: !7365, file: !174, line: 268, column: 27)
!7371 = !DILocation(line: 269, column: 29, scope: !7370)
!7372 = !DILocation(line: 269, column: 52, scope: !7370)
!7373 = !DILocation(line: 269, column: 49, scope: !7370)
!7374 = !DILocation(line: 269, column: 68, scope: !7370)
!7375 = !DILocation(line: 269, column: 65, scope: !7370)
!7376 = !DILocation(line: 269, column: 54, scope: !7370)
!7377 = !DILocation(line: 269, column: 47, scope: !7370)
!7378 = !DILocation(line: 269, column: 81, scope: !7370)
!7379 = !DILocation(line: 269, column: 78, scope: !7370)
!7380 = !DILocation(line: 269, column: 97, scope: !7370)
!7381 = !DILocation(line: 269, column: 94, scope: !7370)
!7382 = !DILocation(line: 269, column: 83, scope: !7370)
!7383 = !DILocation(line: 269, column: 76, scope: !7370)
!7384 = !DILocation(line: 269, column: 72, scope: !7370)
!7385 = !DILocation(line: 269, column: 110, scope: !7370)
!7386 = !DILocation(line: 269, column: 107, scope: !7370)
!7387 = !DILocation(line: 269, column: 126, scope: !7370)
!7388 = !DILocation(line: 269, column: 123, scope: !7370)
!7389 = !DILocation(line: 269, column: 112, scope: !7370)
!7390 = !DILocation(line: 269, column: 105, scope: !7370)
!7391 = !DILocation(line: 269, column: 101, scope: !7370)
!7392 = !DILocation(line: 269, column: 139, scope: !7370)
!7393 = !DILocation(line: 269, column: 136, scope: !7370)
!7394 = !DILocation(line: 269, column: 155, scope: !7370)
!7395 = !DILocation(line: 269, column: 152, scope: !7370)
!7396 = !DILocation(line: 269, column: 141, scope: !7370)
!7397 = !DILocation(line: 269, column: 134, scope: !7370)
!7398 = !DILocation(line: 269, column: 130, scope: !7370)
!7399 = !DILocation(line: 269, column: 159, scope: !7370)
!7400 = !DILocation(line: 269, column: 166, scope: !7370)
!7401 = !DILocation(line: 269, column: 36, scope: !7370)
!7402 = !DILocation(line: 269, column: 13, scope: !7370)
!7403 = !DILocation(line: 269, column: 9, scope: !7370)
!7404 = !DILocation(line: 269, column: 16, scope: !7370)
!7405 = !DILocation(line: 270, column: 5, scope: !7370)
!7406 = !DILocation(line: 268, column: 24, scope: !7407)
!7407 = !DILexicalBlockFile(scope: !7365, file: !174, discriminator: 2)
!7408 = !DILocation(line: 268, column: 5, scope: !7407)
!7409 = distinct !{!7409, !7410}
!7410 = !DILocation(line: 268, column: 5, scope: !7315)
!7411 = !DILocation(line: 271, column: 1, scope: !7315)
!7412 = distinct !DISubprogram(name: "horizontal_compose_fidelityi_10bit", scope: !174, file: !174, line: 154, type: !63, isLocal: true, isDefinition: true, scopeLine: 155, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!7413 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !7414)
!7414 = distinct !DILocation(line: 170, column: 24, scope: !7415)
!7415 = distinct !DILexicalBlock(scope: !7416, file: !174, line: 169, column: 9)
!7416 = distinct !DILexicalBlock(scope: !7417, file: !174, line: 169, column: 9)
!7417 = distinct !DILexicalBlock(scope: !7418, file: !174, line: 168, column: 30)
!7418 = distinct !DILexicalBlock(scope: !7419, file: !174, line: 168, column: 5)
!7419 = distinct !DILexicalBlock(scope: !7412, file: !174, line: 168, column: 5)
!7420 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !7414)
!7421 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !7414)
!7422 = !DILocation(line: 55, column: 77, scope: !6035, inlinedAt: !7423)
!7423 = distinct !DILocation(line: 174, column: 5, scope: !7412)
!7424 = !DILocation(line: 55, column: 91, scope: !6035, inlinedAt: !7423)
!7425 = !DILocation(line: 55, column: 106, scope: !6035, inlinedAt: !7423)
!7426 = !DILocation(line: 55, column: 116, scope: !6035, inlinedAt: !7423)
!7427 = !DILocation(line: 56, column: 53, scope: !6035, inlinedAt: !7423)
!7428 = !DILocation(line: 56, column: 62, scope: !6035, inlinedAt: !7423)
!7429 = !DILocation(line: 58, column: 9, scope: !6035, inlinedAt: !7423)
!7430 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !7431)
!7431 = distinct !DILocation(line: 164, column: 22, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7433, file: !174, line: 163, column: 9)
!7433 = distinct !DILexicalBlock(scope: !7434, file: !174, line: 163, column: 9)
!7434 = distinct !DILexicalBlock(scope: !7435, file: !174, line: 162, column: 30)
!7435 = distinct !DILexicalBlock(scope: !7436, file: !174, line: 162, column: 5)
!7436 = distinct !DILexicalBlock(scope: !7412, file: !174, line: 162, column: 5)
!7437 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !7431)
!7438 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !7431)
!7439 = !DILocalVariable(name: "_b", arg: 1, scope: !7412, file: !174, line: 154, type: !20)
!7440 = !DILocation(line: 154, column: 57, scope: !7412)
!7441 = !DILocalVariable(name: "_tmp", arg: 2, scope: !7412, file: !174, line: 154, type: !20)
!7442 = !DILocation(line: 154, column: 70, scope: !7412)
!7443 = !DILocalVariable(name: "w", arg: 3, scope: !7412, file: !174, line: 154, type: !18)
!7444 = !DILocation(line: 154, column: 80, scope: !7412)
!7445 = !DILocalVariable(name: "w2", scope: !7412, file: !174, line: 156, type: !1931)
!7446 = !DILocation(line: 156, column: 15, scope: !7412)
!7447 = !DILocation(line: 156, column: 20, scope: !7412)
!7448 = !DILocation(line: 156, column: 22, scope: !7412)
!7449 = !DILocalVariable(name: "i", scope: !7412, file: !174, line: 157, type: !18)
!7450 = !DILocation(line: 157, column: 9, scope: !7412)
!7451 = !DILocalVariable(name: "x", scope: !7412, file: !174, line: 157, type: !18)
!7452 = !DILocation(line: 157, column: 12, scope: !7412)
!7453 = !DILocalVariable(name: "v", scope: !7412, file: !174, line: 158, type: !7454)
!7454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !29, size: 256, align: 32, elements: !72)
!7455 = !DILocation(line: 158, column: 13, scope: !7412)
!7456 = !DILocalVariable(name: "b", scope: !7412, file: !174, line: 159, type: !28)
!7457 = !DILocation(line: 159, column: 14, scope: !7412)
!7458 = !DILocation(line: 159, column: 29, scope: !7412)
!7459 = !DILocation(line: 159, column: 18, scope: !7412)
!7460 = !DILocalVariable(name: "tmp", scope: !7412, file: !174, line: 160, type: !28)
!7461 = !DILocation(line: 160, column: 14, scope: !7412)
!7462 = !DILocation(line: 160, column: 31, scope: !7412)
!7463 = !DILocation(line: 160, column: 20, scope: !7412)
!7464 = !DILocation(line: 162, column: 12, scope: !7436)
!7465 = !DILocation(line: 162, column: 10, scope: !7436)
!7466 = !DILocation(line: 162, column: 17, scope: !7467)
!7467 = !DILexicalBlockFile(scope: !7435, file: !174, discriminator: 1)
!7468 = !DILocation(line: 162, column: 21, scope: !7467)
!7469 = !DILocation(line: 162, column: 19, scope: !7467)
!7470 = !DILocation(line: 162, column: 5, scope: !7467)
!7471 = !DILocation(line: 163, column: 16, scope: !7433)
!7472 = !DILocation(line: 163, column: 14, scope: !7433)
!7473 = !DILocation(line: 163, column: 21, scope: !7474)
!7474 = !DILexicalBlockFile(scope: !7432, file: !174, discriminator: 1)
!7475 = !DILocation(line: 163, column: 23, scope: !7474)
!7476 = !DILocation(line: 163, column: 9, scope: !7474)
!7477 = !DILocation(line: 164, column: 32, scope: !7432)
!7478 = !DILocation(line: 164, column: 33, scope: !7432)
!7479 = !DILocation(line: 164, column: 36, scope: !7432)
!7480 = !DILocation(line: 164, column: 35, scope: !7432)
!7481 = !DILocation(line: 164, column: 42, scope: !7432)
!7482 = !DILocation(line: 164, column: 44, scope: !7432)
!7483 = !DILocation(line: 164, column: 22, scope: !7432)
!7484 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !7431)
!7485 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !7431)
!7486 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !7431)
!7487 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !7431)
!7488 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !7431)
!7489 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !7431)
!7490 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !7431)
!7491 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !7431)
!7492 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !7431)
!7493 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !7431)
!7494 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !7431)
!7495 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !7431)
!7496 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !7431)
!7497 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !7431)
!7498 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !7431)
!7499 = !DILocation(line: 164, column: 20, scope: !7432)
!7500 = !DILocation(line: 164, column: 15, scope: !7432)
!7501 = !DILocation(line: 164, column: 13, scope: !7432)
!7502 = !DILocation(line: 164, column: 18, scope: !7432)
!7503 = !DILocation(line: 163, column: 29, scope: !7504)
!7504 = !DILexicalBlockFile(scope: !7432, file: !174, discriminator: 2)
!7505 = !DILocation(line: 163, column: 9, scope: !7504)
!7506 = distinct !{!7506, !7507}
!7507 = !DILocation(line: 163, column: 9, scope: !7434)
!7508 = !DILocation(line: 165, column: 31, scope: !7434)
!7509 = !DILocation(line: 165, column: 33, scope: !7434)
!7510 = !DILocation(line: 165, column: 32, scope: !7434)
!7511 = !DILocation(line: 165, column: 29, scope: !7434)
!7512 = !DILocation(line: 165, column: 50, scope: !7434)
!7513 = !DILocation(line: 165, column: 65, scope: !7434)
!7514 = !DILocation(line: 165, column: 54, scope: !7434)
!7515 = !DILocation(line: 165, column: 48, scope: !7434)
!7516 = !DILocation(line: 165, column: 77, scope: !7434)
!7517 = !DILocation(line: 165, column: 92, scope: !7434)
!7518 = !DILocation(line: 165, column: 81, scope: !7434)
!7519 = !DILocation(line: 165, column: 75, scope: !7434)
!7520 = !DILocation(line: 165, column: 71, scope: !7434)
!7521 = !DILocation(line: 165, column: 104, scope: !7434)
!7522 = !DILocation(line: 165, column: 119, scope: !7434)
!7523 = !DILocation(line: 165, column: 108, scope: !7434)
!7524 = !DILocation(line: 165, column: 102, scope: !7434)
!7525 = !DILocation(line: 165, column: 98, scope: !7434)
!7526 = !DILocation(line: 165, column: 131, scope: !7434)
!7527 = !DILocation(line: 165, column: 146, scope: !7434)
!7528 = !DILocation(line: 165, column: 135, scope: !7434)
!7529 = !DILocation(line: 165, column: 129, scope: !7434)
!7530 = !DILocation(line: 165, column: 125, scope: !7434)
!7531 = !DILocation(line: 165, column: 152, scope: !7434)
!7532 = !DILocation(line: 165, column: 159, scope: !7434)
!7533 = !DILocation(line: 165, column: 37, scope: !7434)
!7534 = !DILocation(line: 165, column: 13, scope: !7434)
!7535 = !DILocation(line: 165, column: 9, scope: !7434)
!7536 = !DILocation(line: 165, column: 16, scope: !7434)
!7537 = !DILocation(line: 166, column: 5, scope: !7434)
!7538 = !DILocation(line: 162, column: 26, scope: !7539)
!7539 = !DILexicalBlockFile(scope: !7435, file: !174, discriminator: 2)
!7540 = !DILocation(line: 162, column: 5, scope: !7539)
!7541 = distinct !{!7541, !7542}
!7542 = !DILocation(line: 162, column: 5, scope: !7412)
!7543 = !DILocation(line: 168, column: 12, scope: !7419)
!7544 = !DILocation(line: 168, column: 10, scope: !7419)
!7545 = !DILocation(line: 168, column: 17, scope: !7546)
!7546 = !DILexicalBlockFile(scope: !7418, file: !174, discriminator: 1)
!7547 = !DILocation(line: 168, column: 21, scope: !7546)
!7548 = !DILocation(line: 168, column: 19, scope: !7546)
!7549 = !DILocation(line: 168, column: 5, scope: !7546)
!7550 = !DILocation(line: 169, column: 16, scope: !7416)
!7551 = !DILocation(line: 169, column: 14, scope: !7416)
!7552 = !DILocation(line: 169, column: 21, scope: !7553)
!7553 = !DILexicalBlockFile(scope: !7415, file: !174, discriminator: 1)
!7554 = !DILocation(line: 169, column: 23, scope: !7553)
!7555 = !DILocation(line: 169, column: 9, scope: !7553)
!7556 = !DILocation(line: 170, column: 34, scope: !7415)
!7557 = !DILocation(line: 170, column: 35, scope: !7415)
!7558 = !DILocation(line: 170, column: 38, scope: !7415)
!7559 = !DILocation(line: 170, column: 37, scope: !7415)
!7560 = !DILocation(line: 170, column: 44, scope: !7415)
!7561 = !DILocation(line: 170, column: 46, scope: !7415)
!7562 = !DILocation(line: 170, column: 24, scope: !7415)
!7563 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !7414)
!7564 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !7414)
!7565 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !7414)
!7566 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !7414)
!7567 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !7414)
!7568 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !7414)
!7569 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !7414)
!7570 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !7414)
!7571 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !7414)
!7572 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !7414)
!7573 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !7414)
!7574 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !7414)
!7575 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !7414)
!7576 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !7414)
!7577 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !7414)
!7578 = !DILocation(line: 170, column: 20, scope: !7415)
!7579 = !DILocation(line: 170, column: 15, scope: !7415)
!7580 = !DILocation(line: 170, column: 13, scope: !7415)
!7581 = !DILocation(line: 170, column: 18, scope: !7415)
!7582 = !DILocation(line: 169, column: 29, scope: !7583)
!7583 = !DILexicalBlockFile(scope: !7415, file: !174, discriminator: 2)
!7584 = !DILocation(line: 169, column: 9, scope: !7583)
!7585 = distinct !{!7585, !7586}
!7586 = !DILocation(line: 169, column: 9, scope: !7417)
!7587 = !DILocation(line: 171, column: 34, scope: !7417)
!7588 = !DILocation(line: 171, column: 32, scope: !7417)
!7589 = !DILocation(line: 171, column: 50, scope: !7417)
!7590 = !DILocation(line: 171, column: 65, scope: !7417)
!7591 = !DILocation(line: 171, column: 54, scope: !7417)
!7592 = !DILocation(line: 171, column: 48, scope: !7417)
!7593 = !DILocation(line: 171, column: 77, scope: !7417)
!7594 = !DILocation(line: 171, column: 92, scope: !7417)
!7595 = !DILocation(line: 171, column: 81, scope: !7417)
!7596 = !DILocation(line: 171, column: 75, scope: !7417)
!7597 = !DILocation(line: 171, column: 71, scope: !7417)
!7598 = !DILocation(line: 171, column: 104, scope: !7417)
!7599 = !DILocation(line: 171, column: 119, scope: !7417)
!7600 = !DILocation(line: 171, column: 108, scope: !7417)
!7601 = !DILocation(line: 171, column: 102, scope: !7417)
!7602 = !DILocation(line: 171, column: 98, scope: !7417)
!7603 = !DILocation(line: 171, column: 132, scope: !7417)
!7604 = !DILocation(line: 171, column: 147, scope: !7417)
!7605 = !DILocation(line: 171, column: 136, scope: !7417)
!7606 = !DILocation(line: 171, column: 130, scope: !7417)
!7607 = !DILocation(line: 171, column: 125, scope: !7417)
!7608 = !DILocation(line: 171, column: 153, scope: !7417)
!7609 = !DILocation(line: 171, column: 160, scope: !7417)
!7610 = !DILocation(line: 171, column: 37, scope: !7417)
!7611 = !DILocation(line: 171, column: 13, scope: !7417)
!7612 = !DILocation(line: 171, column: 15, scope: !7417)
!7613 = !DILocation(line: 171, column: 14, scope: !7417)
!7614 = !DILocation(line: 171, column: 9, scope: !7417)
!7615 = !DILocation(line: 171, column: 19, scope: !7417)
!7616 = !DILocation(line: 172, column: 5, scope: !7417)
!7617 = !DILocation(line: 168, column: 26, scope: !7618)
!7618 = !DILexicalBlockFile(scope: !7418, file: !174, discriminator: 2)
!7619 = !DILocation(line: 168, column: 5, scope: !7618)
!7620 = distinct !{!7620, !7621}
!7621 = !DILocation(line: 168, column: 5, scope: !7412)
!7622 = !DILocation(line: 174, column: 22, scope: !7412)
!7623 = !DILocation(line: 174, column: 25, scope: !7412)
!7624 = !DILocation(line: 174, column: 29, scope: !7412)
!7625 = !DILocation(line: 174, column: 28, scope: !7412)
!7626 = !DILocation(line: 174, column: 33, scope: !7412)
!7627 = !DILocation(line: 174, column: 38, scope: !7412)
!7628 = !DILocation(line: 174, column: 5, scope: !7412)
!7629 = !DILocation(line: 59, column: 12, scope: !6162, inlinedAt: !7423)
!7630 = !DILocation(line: 59, column: 10, scope: !6162, inlinedAt: !7423)
!7631 = !DILocation(line: 59, column: 17, scope: !6165, inlinedAt: !7423)
!7632 = !DILocation(line: 59, column: 21, scope: !6165, inlinedAt: !7423)
!7633 = !DILocation(line: 59, column: 19, scope: !6165, inlinedAt: !7423)
!7634 = !DILocation(line: 59, column: 5, scope: !6165, inlinedAt: !7423)
!7635 = !DILocation(line: 60, column: 33, scope: !6171, inlinedAt: !7423)
!7636 = !DILocation(line: 60, column: 28, scope: !6171, inlinedAt: !7423)
!7637 = !DILocation(line: 60, column: 48, scope: !6171, inlinedAt: !7423)
!7638 = !DILocation(line: 60, column: 36, scope: !6171, inlinedAt: !7423)
!7639 = !DILocation(line: 60, column: 57, scope: !6171, inlinedAt: !7423)
!7640 = !DILocation(line: 60, column: 54, scope: !6171, inlinedAt: !7423)
!7641 = !DILocation(line: 60, column: 15, scope: !6171, inlinedAt: !7423)
!7642 = !DILocation(line: 60, column: 14, scope: !6171, inlinedAt: !7423)
!7643 = !DILocation(line: 60, column: 9, scope: !6171, inlinedAt: !7423)
!7644 = !DILocation(line: 60, column: 19, scope: !6171, inlinedAt: !7423)
!7645 = !DILocation(line: 61, column: 34, scope: !6171, inlinedAt: !7423)
!7646 = !DILocation(line: 61, column: 29, scope: !6171, inlinedAt: !7423)
!7647 = !DILocation(line: 61, column: 49, scope: !6171, inlinedAt: !7423)
!7648 = !DILocation(line: 61, column: 37, scope: !6171, inlinedAt: !7423)
!7649 = !DILocation(line: 61, column: 58, scope: !6171, inlinedAt: !7423)
!7650 = !DILocation(line: 61, column: 55, scope: !6171, inlinedAt: !7423)
!7651 = !DILocation(line: 61, column: 15, scope: !6171, inlinedAt: !7423)
!7652 = !DILocation(line: 61, column: 14, scope: !6171, inlinedAt: !7423)
!7653 = !DILocation(line: 61, column: 16, scope: !6171, inlinedAt: !7423)
!7654 = !DILocation(line: 61, column: 9, scope: !6171, inlinedAt: !7423)
!7655 = !DILocation(line: 61, column: 20, scope: !6171, inlinedAt: !7423)
!7656 = !DILocation(line: 59, column: 26, scope: !6193, inlinedAt: !7423)
!7657 = !DILocation(line: 59, column: 5, scope: !6193, inlinedAt: !7423)
!7658 = !DILocation(line: 175, column: 1, scope: !7412)
!7659 = distinct !DISubprogram(name: "spatial_compose_daub97i_dy_10bit", scope: !174, file: !174, line: 451, type: !1596, isLocal: true, isDefinition: true, scopeLine: 452, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!7660 = !DILocation(line: 338, column: 91, scope: !1103, inlinedAt: !7661)
!7661 = distinct !DILocation(line: 464, column: 24, scope: !7659)
!7662 = !DILocation(line: 338, column: 98, scope: !1103, inlinedAt: !7661)
!7663 = !DILocation(line: 338, column: 91, scope: !1103, inlinedAt: !7664)
!7664 = distinct !DILocation(line: 463, column: 24, scope: !7659)
!7665 = !DILocation(line: 338, column: 98, scope: !1103, inlinedAt: !7664)
!7666 = !DILocalVariable(name: "d", arg: 1, scope: !7659, file: !174, line: 451, type: !37)
!7667 = !DILocation(line: 451, column: 58, scope: !7659)
!7668 = !DILocalVariable(name: "level", arg: 2, scope: !7659, file: !174, line: 451, type: !18)
!7669 = !DILocation(line: 451, column: 65, scope: !7659)
!7670 = !DILocalVariable(name: "width", arg: 3, scope: !7659, file: !174, line: 451, type: !18)
!7671 = !DILocation(line: 451, column: 76, scope: !7659)
!7672 = !DILocalVariable(name: "height", arg: 4, scope: !7659, file: !174, line: 451, type: !18)
!7673 = !DILocation(line: 451, column: 87, scope: !7659)
!7674 = !DILocalVariable(name: "stride", arg: 5, scope: !7659, file: !174, line: 451, type: !18)
!7675 = !DILocation(line: 451, column: 99, scope: !7659)
!7676 = !DILocalVariable(name: "vertical_compose_l0", scope: !7659, file: !174, line: 453, type: !1617)
!7677 = !DILocation(line: 453, column: 27, scope: !7659)
!7678 = !DILocation(line: 453, column: 56, scope: !7659)
!7679 = !DILocation(line: 453, column: 59, scope: !7659)
!7680 = !DILocation(line: 453, column: 49, scope: !7659)
!7681 = !DILocalVariable(name: "vertical_compose_h0", scope: !7659, file: !174, line: 454, type: !1617)
!7682 = !DILocation(line: 454, column: 27, scope: !7659)
!7683 = !DILocation(line: 454, column: 56, scope: !7659)
!7684 = !DILocation(line: 454, column: 59, scope: !7659)
!7685 = !DILocation(line: 454, column: 49, scope: !7659)
!7686 = !DILocalVariable(name: "vertical_compose_l1", scope: !7659, file: !174, line: 455, type: !1617)
!7687 = !DILocation(line: 455, column: 27, scope: !7659)
!7688 = !DILocation(line: 455, column: 56, scope: !7659)
!7689 = !DILocation(line: 455, column: 59, scope: !7659)
!7690 = !DILocation(line: 455, column: 49, scope: !7659)
!7691 = !DILocalVariable(name: "vertical_compose_h1", scope: !7659, file: !174, line: 456, type: !1617)
!7692 = !DILocation(line: 456, column: 27, scope: !7659)
!7693 = !DILocation(line: 456, column: 56, scope: !7659)
!7694 = !DILocation(line: 456, column: 59, scope: !7659)
!7695 = !DILocation(line: 456, column: 49, scope: !7659)
!7696 = !DILocalVariable(name: "cs", scope: !7659, file: !174, line: 457, type: !903)
!7697 = !DILocation(line: 457, column: 17, scope: !7659)
!7698 = !DILocation(line: 457, column: 22, scope: !7659)
!7699 = !DILocation(line: 457, column: 25, scope: !7659)
!7700 = !DILocation(line: 457, column: 30, scope: !7659)
!7701 = !DILocation(line: 457, column: 28, scope: !7659)
!7702 = !DILocalVariable(name: "i", scope: !7659, file: !174, line: 459, type: !18)
!7703 = !DILocation(line: 459, column: 9, scope: !7659)
!7704 = !DILocalVariable(name: "y", scope: !7659, file: !174, line: 459, type: !18)
!7705 = !DILocation(line: 459, column: 12, scope: !7659)
!7706 = !DILocation(line: 459, column: 16, scope: !7659)
!7707 = !DILocation(line: 459, column: 20, scope: !7659)
!7708 = !DILocalVariable(name: "b", scope: !7659, file: !174, line: 460, type: !4042)
!7709 = !DILocation(line: 460, column: 14, scope: !7659)
!7710 = !DILocation(line: 461, column: 12, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7659, file: !174, line: 461, column: 5)
!7712 = !DILocation(line: 461, column: 10, scope: !7711)
!7713 = !DILocation(line: 461, column: 17, scope: !7714)
!7714 = !DILexicalBlockFile(scope: !7715, file: !174, discriminator: 1)
!7715 = distinct !DILexicalBlock(scope: !7711, file: !174, line: 461, column: 5)
!7716 = !DILocation(line: 461, column: 19, scope: !7714)
!7717 = !DILocation(line: 461, column: 5, scope: !7714)
!7718 = !DILocation(line: 462, column: 22, scope: !7715)
!7719 = !DILocation(line: 462, column: 16, scope: !7715)
!7720 = !DILocation(line: 462, column: 20, scope: !7715)
!7721 = !DILocation(line: 462, column: 11, scope: !7715)
!7722 = !DILocation(line: 462, column: 9, scope: !7715)
!7723 = !DILocation(line: 462, column: 14, scope: !7715)
!7724 = !DILocation(line: 461, column: 25, scope: !7725)
!7725 = !DILexicalBlockFile(scope: !7715, file: !174, discriminator: 2)
!7726 = !DILocation(line: 461, column: 5, scope: !7725)
!7727 = distinct !{!7727, !7728}
!7728 = !DILocation(line: 461, column: 5, scope: !7659)
!7729 = !DILocation(line: 463, column: 12, scope: !7659)
!7730 = !DILocation(line: 463, column: 15, scope: !7659)
!7731 = !DILocation(line: 463, column: 38, scope: !7659)
!7732 = !DILocation(line: 463, column: 39, scope: !7659)
!7733 = !DILocation(line: 463, column: 43, scope: !7659)
!7734 = !DILocation(line: 463, column: 49, scope: !7659)
!7735 = !DILocation(line: 463, column: 24, scope: !7659)
!7736 = !DILocation(line: 340, column: 10, scope: !1127, inlinedAt: !7664)
!7737 = !DILocation(line: 340, column: 9, scope: !1103, inlinedAt: !7664)
!7738 = !DILocation(line: 341, column: 9, scope: !1127, inlinedAt: !7664)
!7739 = !DILocation(line: 343, column: 5, scope: !1103, inlinedAt: !7664)
!7740 = !DILocation(line: 343, column: 22, scope: !1132, inlinedAt: !7664)
!7741 = !DILocation(line: 343, column: 36, scope: !1132, inlinedAt: !7664)
!7742 = !DILocation(line: 343, column: 24, scope: !1132, inlinedAt: !7664)
!7743 = !DILocation(line: 343, column: 5, scope: !1132, inlinedAt: !7664)
!7744 = !DILocation(line: 344, column: 14, scope: !1137, inlinedAt: !7664)
!7745 = !DILocation(line: 344, column: 13, scope: !1137, inlinedAt: !7664)
!7746 = !DILocation(line: 344, column: 11, scope: !1137, inlinedAt: !7664)
!7747 = !DILocation(line: 345, column: 13, scope: !1141, inlinedAt: !7664)
!7748 = !DILocation(line: 345, column: 15, scope: !1141, inlinedAt: !7664)
!7749 = !DILocation(line: 345, column: 13, scope: !1137, inlinedAt: !7664)
!7750 = !DILocation(line: 346, column: 22, scope: !1141, inlinedAt: !7664)
!7751 = !DILocation(line: 346, column: 20, scope: !1141, inlinedAt: !7664)
!7752 = !DILocation(line: 346, column: 15, scope: !1141, inlinedAt: !7664)
!7753 = !DILocation(line: 346, column: 13, scope: !1141, inlinedAt: !7664)
!7754 = !DILocation(line: 343, column: 5, scope: !1149, inlinedAt: !7664)
!7755 = !DILocation(line: 348, column: 12, scope: !1103, inlinedAt: !7664)
!7756 = !DILocation(line: 348, column: 5, scope: !1103, inlinedAt: !7664)
!7757 = !DILocation(line: 349, column: 1, scope: !1103, inlinedAt: !7664)
!7758 = !DILocation(line: 463, column: 53, scope: !7659)
!7759 = !DILocation(line: 463, column: 52, scope: !7659)
!7760 = !DILocation(line: 463, column: 22, scope: !7659)
!7761 = !DILocation(line: 463, column: 5, scope: !7659)
!7762 = !DILocation(line: 463, column: 10, scope: !7659)
!7763 = !DILocation(line: 464, column: 12, scope: !7659)
!7764 = !DILocation(line: 464, column: 15, scope: !7659)
!7765 = !DILocation(line: 464, column: 38, scope: !7659)
!7766 = !DILocation(line: 464, column: 39, scope: !7659)
!7767 = !DILocation(line: 464, column: 43, scope: !7659)
!7768 = !DILocation(line: 464, column: 49, scope: !7659)
!7769 = !DILocation(line: 464, column: 24, scope: !7659)
!7770 = !DILocation(line: 340, column: 10, scope: !1127, inlinedAt: !7661)
!7771 = !DILocation(line: 340, column: 9, scope: !1103, inlinedAt: !7661)
!7772 = !DILocation(line: 341, column: 9, scope: !1127, inlinedAt: !7661)
!7773 = !DILocation(line: 343, column: 5, scope: !1103, inlinedAt: !7661)
!7774 = !DILocation(line: 343, column: 22, scope: !1132, inlinedAt: !7661)
!7775 = !DILocation(line: 343, column: 36, scope: !1132, inlinedAt: !7661)
!7776 = !DILocation(line: 343, column: 24, scope: !1132, inlinedAt: !7661)
!7777 = !DILocation(line: 343, column: 5, scope: !1132, inlinedAt: !7661)
!7778 = !DILocation(line: 344, column: 14, scope: !1137, inlinedAt: !7661)
!7779 = !DILocation(line: 344, column: 13, scope: !1137, inlinedAt: !7661)
!7780 = !DILocation(line: 344, column: 11, scope: !1137, inlinedAt: !7661)
!7781 = !DILocation(line: 345, column: 13, scope: !1141, inlinedAt: !7661)
!7782 = !DILocation(line: 345, column: 15, scope: !1141, inlinedAt: !7661)
!7783 = !DILocation(line: 345, column: 13, scope: !1137, inlinedAt: !7661)
!7784 = !DILocation(line: 346, column: 22, scope: !1141, inlinedAt: !7661)
!7785 = !DILocation(line: 346, column: 20, scope: !1141, inlinedAt: !7661)
!7786 = !DILocation(line: 346, column: 15, scope: !1141, inlinedAt: !7661)
!7787 = !DILocation(line: 346, column: 13, scope: !1141, inlinedAt: !7661)
!7788 = !DILocation(line: 343, column: 5, scope: !1149, inlinedAt: !7661)
!7789 = !DILocation(line: 348, column: 12, scope: !1103, inlinedAt: !7661)
!7790 = !DILocation(line: 348, column: 5, scope: !1103, inlinedAt: !7661)
!7791 = !DILocation(line: 349, column: 1, scope: !1103, inlinedAt: !7661)
!7792 = !DILocation(line: 464, column: 53, scope: !7659)
!7793 = !DILocation(line: 464, column: 52, scope: !7659)
!7794 = !DILocation(line: 464, column: 22, scope: !7659)
!7795 = !DILocation(line: 464, column: 5, scope: !7659)
!7796 = !DILocation(line: 464, column: 10, scope: !7659)
!7797 = !DILocation(line: 466, column: 8, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7659, file: !174, line: 466, column: 8)
!7799 = !DILocation(line: 466, column: 9, scope: !7798)
!7800 = !DILocation(line: 466, column: 22, scope: !7798)
!7801 = !DILocation(line: 466, column: 11, scope: !7798)
!7802 = !DILocation(line: 466, column: 8, scope: !7659)
!7803 = !DILocation(line: 466, column: 30, scope: !7804)
!7804 = !DILexicalBlockFile(scope: !7798, file: !174, discriminator: 1)
!7805 = !DILocation(line: 466, column: 50, scope: !7804)
!7806 = !DILocation(line: 466, column: 56, scope: !7804)
!7807 = !DILocation(line: 466, column: 62, scope: !7804)
!7808 = !DILocation(line: 466, column: 68, scope: !7804)
!7809 = !DILocation(line: 467, column: 8, scope: !7810)
!7810 = distinct !DILexicalBlock(scope: !7659, file: !174, line: 467, column: 8)
!7811 = !DILocation(line: 467, column: 9, scope: !7810)
!7812 = !DILocation(line: 467, column: 22, scope: !7810)
!7813 = !DILocation(line: 467, column: 11, scope: !7810)
!7814 = !DILocation(line: 467, column: 8, scope: !7659)
!7815 = !DILocation(line: 467, column: 30, scope: !7816)
!7816 = !DILexicalBlockFile(scope: !7810, file: !174, discriminator: 1)
!7817 = !DILocation(line: 467, column: 50, scope: !7816)
!7818 = !DILocation(line: 467, column: 56, scope: !7816)
!7819 = !DILocation(line: 467, column: 62, scope: !7816)
!7820 = !DILocation(line: 467, column: 68, scope: !7816)
!7821 = !DILocation(line: 468, column: 8, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7659, file: !174, line: 468, column: 8)
!7823 = !DILocation(line: 468, column: 9, scope: !7822)
!7824 = !DILocation(line: 468, column: 22, scope: !7822)
!7825 = !DILocation(line: 468, column: 11, scope: !7822)
!7826 = !DILocation(line: 468, column: 8, scope: !7659)
!7827 = !DILocation(line: 468, column: 30, scope: !7828)
!7828 = !DILexicalBlockFile(scope: !7822, file: !174, discriminator: 1)
!7829 = !DILocation(line: 468, column: 50, scope: !7828)
!7830 = !DILocation(line: 468, column: 56, scope: !7828)
!7831 = !DILocation(line: 468, column: 62, scope: !7828)
!7832 = !DILocation(line: 468, column: 68, scope: !7828)
!7833 = !DILocation(line: 469, column: 8, scope: !7834)
!7834 = distinct !DILexicalBlock(scope: !7659, file: !174, line: 469, column: 8)
!7835 = !DILocation(line: 469, column: 9, scope: !7834)
!7836 = !DILocation(line: 469, column: 22, scope: !7834)
!7837 = !DILocation(line: 469, column: 11, scope: !7834)
!7838 = !DILocation(line: 469, column: 8, scope: !7659)
!7839 = !DILocation(line: 469, column: 30, scope: !7840)
!7840 = !DILexicalBlockFile(scope: !7834, file: !174, discriminator: 1)
!7841 = !DILocation(line: 469, column: 50, scope: !7840)
!7842 = !DILocation(line: 469, column: 56, scope: !7840)
!7843 = !DILocation(line: 469, column: 62, scope: !7840)
!7844 = !DILocation(line: 469, column: 68, scope: !7840)
!7845 = !DILocation(line: 471, column: 8, scope: !7846)
!7846 = distinct !DILexicalBlock(scope: !7659, file: !174, line: 471, column: 8)
!7847 = !DILocation(line: 471, column: 9, scope: !7846)
!7848 = !DILocation(line: 471, column: 22, scope: !7846)
!7849 = !DILocation(line: 471, column: 11, scope: !7846)
!7850 = !DILocation(line: 471, column: 8, scope: !7659)
!7851 = !DILocation(line: 471, column: 30, scope: !7852)
!7852 = !DILexicalBlockFile(scope: !7846, file: !174, discriminator: 1)
!7853 = !DILocation(line: 471, column: 33, scope: !7852)
!7854 = !DILocation(line: 471, column: 52, scope: !7852)
!7855 = !DILocation(line: 471, column: 58, scope: !7852)
!7856 = !DILocation(line: 471, column: 61, scope: !7852)
!7857 = !DILocation(line: 471, column: 67, scope: !7852)
!7858 = !DILocation(line: 472, column: 8, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7659, file: !174, line: 472, column: 8)
!7860 = !DILocation(line: 472, column: 9, scope: !7859)
!7861 = !DILocation(line: 472, column: 22, scope: !7859)
!7862 = !DILocation(line: 472, column: 11, scope: !7859)
!7863 = !DILocation(line: 472, column: 8, scope: !7659)
!7864 = !DILocation(line: 472, column: 30, scope: !7865)
!7865 = !DILexicalBlockFile(scope: !7859, file: !174, discriminator: 1)
!7866 = !DILocation(line: 472, column: 33, scope: !7865)
!7867 = !DILocation(line: 472, column: 52, scope: !7865)
!7868 = !DILocation(line: 472, column: 58, scope: !7865)
!7869 = !DILocation(line: 472, column: 61, scope: !7865)
!7870 = !DILocation(line: 472, column: 67, scope: !7865)
!7871 = !DILocation(line: 474, column: 12, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7659, file: !174, line: 474, column: 5)
!7873 = !DILocation(line: 474, column: 10, scope: !7872)
!7874 = !DILocation(line: 474, column: 17, scope: !7875)
!7875 = !DILexicalBlockFile(scope: !7876, file: !174, discriminator: 1)
!7876 = distinct !DILexicalBlock(scope: !7872, file: !174, line: 474, column: 5)
!7877 = !DILocation(line: 474, column: 19, scope: !7875)
!7878 = !DILocation(line: 474, column: 5, scope: !7875)
!7879 = !DILocation(line: 475, column: 22, scope: !7876)
!7880 = !DILocation(line: 475, column: 23, scope: !7876)
!7881 = !DILocation(line: 475, column: 20, scope: !7876)
!7882 = !DILocation(line: 475, column: 15, scope: !7876)
!7883 = !DILocation(line: 475, column: 9, scope: !7876)
!7884 = !DILocation(line: 475, column: 13, scope: !7876)
!7885 = !DILocation(line: 475, column: 18, scope: !7876)
!7886 = !DILocation(line: 474, column: 25, scope: !7887)
!7887 = !DILexicalBlockFile(scope: !7876, file: !174, discriminator: 2)
!7888 = !DILocation(line: 474, column: 5, scope: !7887)
!7889 = distinct !{!7889, !7890}
!7890 = !DILocation(line: 474, column: 5, scope: !7659)
!7891 = !DILocation(line: 476, column: 5, scope: !7659)
!7892 = !DILocation(line: 476, column: 9, scope: !7659)
!7893 = !DILocation(line: 476, column: 11, scope: !7659)
!7894 = !DILocation(line: 477, column: 1, scope: !7659)
!7895 = distinct !DISubprogram(name: "vertical_compose_daub97iL0_10bit", scope: !174, file: !174, line: 315, type: !1619, isLocal: true, isDefinition: true, scopeLine: 316, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!7896 = !DILocalVariable(name: "_b0", arg: 1, scope: !7895, file: !174, line: 315, type: !20)
!7897 = !DILocation(line: 315, column: 55, scope: !7895)
!7898 = !DILocalVariable(name: "_b1", arg: 2, scope: !7895, file: !174, line: 315, type: !20)
!7899 = !DILocation(line: 315, column: 69, scope: !7895)
!7900 = !DILocalVariable(name: "_b2", arg: 3, scope: !7895, file: !174, line: 315, type: !20)
!7901 = !DILocation(line: 315, column: 83, scope: !7895)
!7902 = !DILocalVariable(name: "width", arg: 4, scope: !7895, file: !174, line: 315, type: !18)
!7903 = !DILocation(line: 315, column: 92, scope: !7895)
!7904 = !DILocalVariable(name: "i", scope: !7895, file: !174, line: 317, type: !18)
!7905 = !DILocation(line: 317, column: 9, scope: !7895)
!7906 = !DILocalVariable(name: "b0", scope: !7895, file: !174, line: 318, type: !28)
!7907 = !DILocation(line: 318, column: 14, scope: !7895)
!7908 = !DILocation(line: 318, column: 30, scope: !7895)
!7909 = !DILocation(line: 318, column: 19, scope: !7895)
!7910 = !DILocalVariable(name: "b1", scope: !7895, file: !174, line: 319, type: !28)
!7911 = !DILocation(line: 319, column: 14, scope: !7895)
!7912 = !DILocation(line: 319, column: 30, scope: !7895)
!7913 = !DILocation(line: 319, column: 19, scope: !7895)
!7914 = !DILocalVariable(name: "b2", scope: !7895, file: !174, line: 320, type: !28)
!7915 = !DILocation(line: 320, column: 14, scope: !7895)
!7916 = !DILocation(line: 320, column: 30, scope: !7895)
!7917 = !DILocation(line: 320, column: 19, scope: !7895)
!7918 = !DILocation(line: 322, column: 10, scope: !7919)
!7919 = distinct !DILexicalBlock(scope: !7895, file: !174, line: 322, column: 5)
!7920 = !DILocation(line: 322, column: 9, scope: !7919)
!7921 = !DILocation(line: 322, column: 14, scope: !7922)
!7922 = !DILexicalBlockFile(scope: !7923, file: !174, discriminator: 1)
!7923 = distinct !DILexicalBlock(scope: !7919, file: !174, line: 322, column: 5)
!7924 = !DILocation(line: 322, column: 16, scope: !7922)
!7925 = !DILocation(line: 322, column: 15, scope: !7922)
!7926 = !DILocation(line: 322, column: 5, scope: !7922)
!7927 = !DILocation(line: 323, column: 32, scope: !7928)
!7928 = distinct !DILexicalBlock(scope: !7923, file: !174, line: 322, column: 27)
!7929 = !DILocation(line: 323, column: 29, scope: !7928)
!7930 = !DILocation(line: 323, column: 54, scope: !7928)
!7931 = !DILocation(line: 323, column: 51, scope: !7928)
!7932 = !DILocation(line: 323, column: 72, scope: !7928)
!7933 = !DILocation(line: 323, column: 69, scope: !7928)
!7934 = !DILocation(line: 323, column: 57, scope: !7928)
!7935 = !DILocation(line: 323, column: 49, scope: !7928)
!7936 = !DILocation(line: 323, column: 76, scope: !7928)
!7937 = !DILocation(line: 323, column: 84, scope: !7928)
!7938 = !DILocation(line: 323, column: 36, scope: !7928)
!7939 = !DILocation(line: 323, column: 12, scope: !7928)
!7940 = !DILocation(line: 323, column: 9, scope: !7928)
!7941 = !DILocation(line: 323, column: 15, scope: !7928)
!7942 = !DILocation(line: 324, column: 5, scope: !7928)
!7943 = !DILocation(line: 322, column: 24, scope: !7944)
!7944 = !DILexicalBlockFile(scope: !7923, file: !174, discriminator: 2)
!7945 = !DILocation(line: 322, column: 5, scope: !7944)
!7946 = distinct !{!7946, !7947}
!7947 = !DILocation(line: 322, column: 5, scope: !7895)
!7948 = !DILocation(line: 325, column: 1, scope: !7895)
!7949 = distinct !DISubprogram(name: "vertical_compose_daub97iH0_10bit", scope: !174, file: !174, line: 291, type: !1619, isLocal: true, isDefinition: true, scopeLine: 292, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!7950 = !DILocalVariable(name: "_b0", arg: 1, scope: !7949, file: !174, line: 291, type: !20)
!7951 = !DILocation(line: 291, column: 55, scope: !7949)
!7952 = !DILocalVariable(name: "_b1", arg: 2, scope: !7949, file: !174, line: 291, type: !20)
!7953 = !DILocation(line: 291, column: 69, scope: !7949)
!7954 = !DILocalVariable(name: "_b2", arg: 3, scope: !7949, file: !174, line: 291, type: !20)
!7955 = !DILocation(line: 291, column: 83, scope: !7949)
!7956 = !DILocalVariable(name: "width", arg: 4, scope: !7949, file: !174, line: 291, type: !18)
!7957 = !DILocation(line: 291, column: 92, scope: !7949)
!7958 = !DILocalVariable(name: "i", scope: !7949, file: !174, line: 293, type: !18)
!7959 = !DILocation(line: 293, column: 9, scope: !7949)
!7960 = !DILocalVariable(name: "b0", scope: !7949, file: !174, line: 294, type: !28)
!7961 = !DILocation(line: 294, column: 14, scope: !7949)
!7962 = !DILocation(line: 294, column: 30, scope: !7949)
!7963 = !DILocation(line: 294, column: 19, scope: !7949)
!7964 = !DILocalVariable(name: "b1", scope: !7949, file: !174, line: 295, type: !28)
!7965 = !DILocation(line: 295, column: 14, scope: !7949)
!7966 = !DILocation(line: 295, column: 30, scope: !7949)
!7967 = !DILocation(line: 295, column: 19, scope: !7949)
!7968 = !DILocalVariable(name: "b2", scope: !7949, file: !174, line: 296, type: !28)
!7969 = !DILocation(line: 296, column: 14, scope: !7949)
!7970 = !DILocation(line: 296, column: 30, scope: !7949)
!7971 = !DILocation(line: 296, column: 19, scope: !7949)
!7972 = !DILocation(line: 298, column: 10, scope: !7973)
!7973 = distinct !DILexicalBlock(scope: !7949, file: !174, line: 298, column: 5)
!7974 = !DILocation(line: 298, column: 9, scope: !7973)
!7975 = !DILocation(line: 298, column: 14, scope: !7976)
!7976 = !DILexicalBlockFile(scope: !7977, file: !174, discriminator: 1)
!7977 = distinct !DILexicalBlock(scope: !7973, file: !174, line: 298, column: 5)
!7978 = !DILocation(line: 298, column: 16, scope: !7976)
!7979 = !DILocation(line: 298, column: 15, scope: !7976)
!7980 = !DILocation(line: 298, column: 5, scope: !7976)
!7981 = !DILocation(line: 299, column: 32, scope: !7982)
!7982 = distinct !DILexicalBlock(scope: !7977, file: !174, line: 298, column: 27)
!7983 = !DILocation(line: 299, column: 29, scope: !7982)
!7984 = !DILocation(line: 299, column: 54, scope: !7982)
!7985 = !DILocation(line: 299, column: 51, scope: !7982)
!7986 = !DILocation(line: 299, column: 72, scope: !7982)
!7987 = !DILocation(line: 299, column: 69, scope: !7982)
!7988 = !DILocation(line: 299, column: 57, scope: !7982)
!7989 = !DILocation(line: 299, column: 49, scope: !7982)
!7990 = !DILocation(line: 299, column: 76, scope: !7982)
!7991 = !DILocation(line: 299, column: 84, scope: !7982)
!7992 = !DILocation(line: 299, column: 36, scope: !7982)
!7993 = !DILocation(line: 299, column: 12, scope: !7982)
!7994 = !DILocation(line: 299, column: 9, scope: !7982)
!7995 = !DILocation(line: 299, column: 15, scope: !7982)
!7996 = !DILocation(line: 300, column: 5, scope: !7982)
!7997 = !DILocation(line: 298, column: 24, scope: !7998)
!7998 = !DILexicalBlockFile(scope: !7977, file: !174, discriminator: 2)
!7999 = !DILocation(line: 298, column: 5, scope: !7998)
!8000 = distinct !{!8000, !8001}
!8001 = !DILocation(line: 298, column: 5, scope: !7949)
!8002 = !DILocation(line: 301, column: 1, scope: !7949)
!8003 = distinct !DISubprogram(name: "vertical_compose_daub97iL1_10bit", scope: !174, file: !174, line: 327, type: !1619, isLocal: true, isDefinition: true, scopeLine: 328, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!8004 = !DILocalVariable(name: "_b0", arg: 1, scope: !8003, file: !174, line: 327, type: !20)
!8005 = !DILocation(line: 327, column: 55, scope: !8003)
!8006 = !DILocalVariable(name: "_b1", arg: 2, scope: !8003, file: !174, line: 327, type: !20)
!8007 = !DILocation(line: 327, column: 69, scope: !8003)
!8008 = !DILocalVariable(name: "_b2", arg: 3, scope: !8003, file: !174, line: 327, type: !20)
!8009 = !DILocation(line: 327, column: 83, scope: !8003)
!8010 = !DILocalVariable(name: "width", arg: 4, scope: !8003, file: !174, line: 327, type: !18)
!8011 = !DILocation(line: 327, column: 92, scope: !8003)
!8012 = !DILocalVariable(name: "i", scope: !8003, file: !174, line: 329, type: !18)
!8013 = !DILocation(line: 329, column: 9, scope: !8003)
!8014 = !DILocalVariable(name: "b0", scope: !8003, file: !174, line: 330, type: !28)
!8015 = !DILocation(line: 330, column: 14, scope: !8003)
!8016 = !DILocation(line: 330, column: 30, scope: !8003)
!8017 = !DILocation(line: 330, column: 19, scope: !8003)
!8018 = !DILocalVariable(name: "b1", scope: !8003, file: !174, line: 331, type: !28)
!8019 = !DILocation(line: 331, column: 14, scope: !8003)
!8020 = !DILocation(line: 331, column: 30, scope: !8003)
!8021 = !DILocation(line: 331, column: 19, scope: !8003)
!8022 = !DILocalVariable(name: "b2", scope: !8003, file: !174, line: 332, type: !28)
!8023 = !DILocation(line: 332, column: 14, scope: !8003)
!8024 = !DILocation(line: 332, column: 30, scope: !8003)
!8025 = !DILocation(line: 332, column: 19, scope: !8003)
!8026 = !DILocation(line: 334, column: 10, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !8003, file: !174, line: 334, column: 5)
!8028 = !DILocation(line: 334, column: 9, scope: !8027)
!8029 = !DILocation(line: 334, column: 14, scope: !8030)
!8030 = !DILexicalBlockFile(scope: !8031, file: !174, discriminator: 1)
!8031 = distinct !DILexicalBlock(scope: !8027, file: !174, line: 334, column: 5)
!8032 = !DILocation(line: 334, column: 16, scope: !8030)
!8033 = !DILocation(line: 334, column: 15, scope: !8030)
!8034 = !DILocation(line: 334, column: 5, scope: !8030)
!8035 = !DILocation(line: 335, column: 32, scope: !8036)
!8036 = distinct !DILexicalBlock(scope: !8031, file: !174, line: 334, column: 27)
!8037 = !DILocation(line: 335, column: 29, scope: !8036)
!8038 = !DILocation(line: 335, column: 54, scope: !8036)
!8039 = !DILocation(line: 335, column: 51, scope: !8036)
!8040 = !DILocation(line: 335, column: 72, scope: !8036)
!8041 = !DILocation(line: 335, column: 69, scope: !8036)
!8042 = !DILocation(line: 335, column: 57, scope: !8036)
!8043 = !DILocation(line: 335, column: 49, scope: !8036)
!8044 = !DILocation(line: 335, column: 76, scope: !8036)
!8045 = !DILocation(line: 335, column: 84, scope: !8036)
!8046 = !DILocation(line: 335, column: 36, scope: !8036)
!8047 = !DILocation(line: 335, column: 12, scope: !8036)
!8048 = !DILocation(line: 335, column: 9, scope: !8036)
!8049 = !DILocation(line: 335, column: 15, scope: !8036)
!8050 = !DILocation(line: 336, column: 5, scope: !8036)
!8051 = !DILocation(line: 334, column: 24, scope: !8052)
!8052 = !DILexicalBlockFile(scope: !8031, file: !174, discriminator: 2)
!8053 = !DILocation(line: 334, column: 5, scope: !8052)
!8054 = distinct !{!8054, !8055}
!8055 = !DILocation(line: 334, column: 5, scope: !8003)
!8056 = !DILocation(line: 337, column: 1, scope: !8003)
!8057 = distinct !DISubprogram(name: "vertical_compose_daub97iH1_10bit", scope: !174, file: !174, line: 303, type: !1619, isLocal: true, isDefinition: true, scopeLine: 304, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!8058 = !DILocalVariable(name: "_b0", arg: 1, scope: !8057, file: !174, line: 303, type: !20)
!8059 = !DILocation(line: 303, column: 55, scope: !8057)
!8060 = !DILocalVariable(name: "_b1", arg: 2, scope: !8057, file: !174, line: 303, type: !20)
!8061 = !DILocation(line: 303, column: 69, scope: !8057)
!8062 = !DILocalVariable(name: "_b2", arg: 3, scope: !8057, file: !174, line: 303, type: !20)
!8063 = !DILocation(line: 303, column: 83, scope: !8057)
!8064 = !DILocalVariable(name: "width", arg: 4, scope: !8057, file: !174, line: 303, type: !18)
!8065 = !DILocation(line: 303, column: 92, scope: !8057)
!8066 = !DILocalVariable(name: "i", scope: !8057, file: !174, line: 305, type: !18)
!8067 = !DILocation(line: 305, column: 9, scope: !8057)
!8068 = !DILocalVariable(name: "b0", scope: !8057, file: !174, line: 306, type: !28)
!8069 = !DILocation(line: 306, column: 14, scope: !8057)
!8070 = !DILocation(line: 306, column: 30, scope: !8057)
!8071 = !DILocation(line: 306, column: 19, scope: !8057)
!8072 = !DILocalVariable(name: "b1", scope: !8057, file: !174, line: 307, type: !28)
!8073 = !DILocation(line: 307, column: 14, scope: !8057)
!8074 = !DILocation(line: 307, column: 30, scope: !8057)
!8075 = !DILocation(line: 307, column: 19, scope: !8057)
!8076 = !DILocalVariable(name: "b2", scope: !8057, file: !174, line: 308, type: !28)
!8077 = !DILocation(line: 308, column: 14, scope: !8057)
!8078 = !DILocation(line: 308, column: 30, scope: !8057)
!8079 = !DILocation(line: 308, column: 19, scope: !8057)
!8080 = !DILocation(line: 310, column: 10, scope: !8081)
!8081 = distinct !DILexicalBlock(scope: !8057, file: !174, line: 310, column: 5)
!8082 = !DILocation(line: 310, column: 9, scope: !8081)
!8083 = !DILocation(line: 310, column: 14, scope: !8084)
!8084 = !DILexicalBlockFile(scope: !8085, file: !174, discriminator: 1)
!8085 = distinct !DILexicalBlock(scope: !8081, file: !174, line: 310, column: 5)
!8086 = !DILocation(line: 310, column: 16, scope: !8084)
!8087 = !DILocation(line: 310, column: 15, scope: !8084)
!8088 = !DILocation(line: 310, column: 5, scope: !8084)
!8089 = !DILocation(line: 311, column: 32, scope: !8090)
!8090 = distinct !DILexicalBlock(scope: !8085, file: !174, line: 310, column: 27)
!8091 = !DILocation(line: 311, column: 29, scope: !8090)
!8092 = !DILocation(line: 311, column: 54, scope: !8090)
!8093 = !DILocation(line: 311, column: 51, scope: !8090)
!8094 = !DILocation(line: 311, column: 72, scope: !8090)
!8095 = !DILocation(line: 311, column: 69, scope: !8090)
!8096 = !DILocation(line: 311, column: 57, scope: !8090)
!8097 = !DILocation(line: 311, column: 49, scope: !8090)
!8098 = !DILocation(line: 311, column: 76, scope: !8090)
!8099 = !DILocation(line: 311, column: 82, scope: !8090)
!8100 = !DILocation(line: 311, column: 36, scope: !8090)
!8101 = !DILocation(line: 311, column: 12, scope: !8090)
!8102 = !DILocation(line: 311, column: 9, scope: !8090)
!8103 = !DILocation(line: 311, column: 15, scope: !8090)
!8104 = !DILocation(line: 312, column: 5, scope: !8090)
!8105 = !DILocation(line: 310, column: 24, scope: !8106)
!8106 = !DILexicalBlockFile(scope: !8085, file: !174, discriminator: 2)
!8107 = !DILocation(line: 310, column: 5, scope: !8106)
!8108 = distinct !{!8108, !8109}
!8109 = !DILocation(line: 310, column: 5, scope: !8057)
!8110 = !DILocation(line: 313, column: 1, scope: !8057)
!8111 = distinct !DISubprogram(name: "horizontal_compose_daub97i_10bit", scope: !174, file: !174, line: 177, type: !63, isLocal: true, isDefinition: true, scopeLine: 178, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!8112 = !DILocalVariable(name: "_b", arg: 1, scope: !8111, file: !174, line: 177, type: !20)
!8113 = !DILocation(line: 177, column: 55, scope: !8111)
!8114 = !DILocalVariable(name: "_temp", arg: 2, scope: !8111, file: !174, line: 177, type: !20)
!8115 = !DILocation(line: 177, column: 68, scope: !8111)
!8116 = !DILocalVariable(name: "w", arg: 3, scope: !8111, file: !174, line: 177, type: !18)
!8117 = !DILocation(line: 177, column: 79, scope: !8111)
!8118 = !DILocalVariable(name: "w2", scope: !8111, file: !174, line: 179, type: !1931)
!8119 = !DILocation(line: 179, column: 15, scope: !8111)
!8120 = !DILocation(line: 179, column: 20, scope: !8111)
!8121 = !DILocation(line: 179, column: 22, scope: !8111)
!8122 = !DILocalVariable(name: "x", scope: !8111, file: !174, line: 180, type: !18)
!8123 = !DILocation(line: 180, column: 9, scope: !8111)
!8124 = !DILocalVariable(name: "b0", scope: !8111, file: !174, line: 180, type: !18)
!8125 = !DILocation(line: 180, column: 12, scope: !8111)
!8126 = !DILocalVariable(name: "b1", scope: !8111, file: !174, line: 180, type: !18)
!8127 = !DILocation(line: 180, column: 16, scope: !8111)
!8128 = !DILocalVariable(name: "b2", scope: !8111, file: !174, line: 180, type: !18)
!8129 = !DILocation(line: 180, column: 20, scope: !8111)
!8130 = !DILocalVariable(name: "b", scope: !8111, file: !174, line: 181, type: !28)
!8131 = !DILocation(line: 181, column: 14, scope: !8111)
!8132 = !DILocation(line: 181, column: 29, scope: !8111)
!8133 = !DILocation(line: 181, column: 18, scope: !8111)
!8134 = !DILocalVariable(name: "temp", scope: !8111, file: !174, line: 182, type: !28)
!8135 = !DILocation(line: 182, column: 14, scope: !8111)
!8136 = !DILocation(line: 182, column: 32, scope: !8111)
!8137 = !DILocation(line: 182, column: 21, scope: !8111)
!8138 = !DILocation(line: 184, column: 27, scope: !8111)
!8139 = !DILocation(line: 184, column: 50, scope: !8111)
!8140 = !DILocation(line: 184, column: 48, scope: !8111)
!8141 = !DILocation(line: 184, column: 68, scope: !8111)
!8142 = !DILocation(line: 184, column: 66, scope: !8111)
!8143 = !DILocation(line: 184, column: 54, scope: !8111)
!8144 = !DILocation(line: 184, column: 46, scope: !8111)
!8145 = !DILocation(line: 184, column: 73, scope: !8111)
!8146 = !DILocation(line: 184, column: 81, scope: !8111)
!8147 = !DILocation(line: 184, column: 33, scope: !8111)
!8148 = !DILocation(line: 184, column: 5, scope: !8111)
!8149 = !DILocation(line: 184, column: 13, scope: !8111)
!8150 = !DILocation(line: 185, column: 12, scope: !8151)
!8151 = distinct !DILexicalBlock(scope: !8111, file: !174, line: 185, column: 5)
!8152 = !DILocation(line: 185, column: 10, scope: !8151)
!8153 = !DILocation(line: 185, column: 17, scope: !8154)
!8154 = !DILexicalBlockFile(scope: !8155, file: !174, discriminator: 1)
!8155 = distinct !DILexicalBlock(scope: !8151, file: !174, line: 185, column: 5)
!8156 = !DILocation(line: 185, column: 21, scope: !8154)
!8157 = !DILocation(line: 185, column: 19, scope: !8154)
!8158 = !DILocation(line: 185, column: 5, scope: !8154)
!8159 = !DILocation(line: 186, column: 34, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8155, file: !174, line: 185, column: 30)
!8161 = !DILocation(line: 186, column: 32, scope: !8160)
!8162 = !DILocation(line: 186, column: 56, scope: !8160)
!8163 = !DILocation(line: 186, column: 58, scope: !8160)
!8164 = !DILocation(line: 186, column: 57, scope: !8160)
!8165 = !DILocation(line: 186, column: 60, scope: !8160)
!8166 = !DILocation(line: 186, column: 54, scope: !8160)
!8167 = !DILocation(line: 186, column: 78, scope: !8160)
!8168 = !DILocation(line: 186, column: 80, scope: !8160)
!8169 = !DILocation(line: 186, column: 79, scope: !8160)
!8170 = !DILocation(line: 186, column: 76, scope: !8160)
!8171 = !DILocation(line: 186, column: 64, scope: !8160)
!8172 = !DILocation(line: 186, column: 52, scope: !8160)
!8173 = !DILocation(line: 186, column: 85, scope: !8160)
!8174 = !DILocation(line: 186, column: 93, scope: !8160)
!8175 = !DILocation(line: 186, column: 39, scope: !8160)
!8176 = !DILocation(line: 186, column: 14, scope: !8160)
!8177 = !DILocation(line: 186, column: 9, scope: !8160)
!8178 = !DILocation(line: 186, column: 18, scope: !8160)
!8179 = !DILocation(line: 187, column: 38, scope: !8160)
!8180 = !DILocation(line: 187, column: 40, scope: !8160)
!8181 = !DILocation(line: 187, column: 39, scope: !8160)
!8182 = !DILocation(line: 187, column: 42, scope: !8160)
!8183 = !DILocation(line: 187, column: 36, scope: !8160)
!8184 = !DILocation(line: 187, column: 67, scope: !8160)
!8185 = !DILocation(line: 187, column: 68, scope: !8160)
!8186 = !DILocation(line: 187, column: 62, scope: !8160)
!8187 = !DILocation(line: 187, column: 89, scope: !8160)
!8188 = !DILocation(line: 187, column: 84, scope: !8160)
!8189 = !DILocation(line: 187, column: 72, scope: !8160)
!8190 = !DILocation(line: 187, column: 60, scope: !8160)
!8191 = !DILocation(line: 187, column: 93, scope: !8160)
!8192 = !DILocation(line: 187, column: 99, scope: !8160)
!8193 = !DILocation(line: 187, column: 47, scope: !8160)
!8194 = !DILocation(line: 187, column: 14, scope: !8160)
!8195 = !DILocation(line: 187, column: 16, scope: !8160)
!8196 = !DILocation(line: 187, column: 15, scope: !8160)
!8197 = !DILocation(line: 187, column: 18, scope: !8160)
!8198 = !DILocation(line: 187, column: 9, scope: !8160)
!8199 = !DILocation(line: 187, column: 22, scope: !8160)
!8200 = !DILocation(line: 188, column: 5, scope: !8160)
!8201 = !DILocation(line: 185, column: 26, scope: !8202)
!8202 = !DILexicalBlockFile(scope: !8155, file: !174, discriminator: 2)
!8203 = !DILocation(line: 185, column: 5, scope: !8202)
!8204 = distinct !{!8204, !8205}
!8205 = !DILocation(line: 185, column: 5, scope: !8111)
!8206 = !DILocation(line: 189, column: 31, scope: !8111)
!8207 = !DILocation(line: 189, column: 32, scope: !8111)
!8208 = !DILocation(line: 189, column: 29, scope: !8111)
!8209 = !DILocation(line: 189, column: 57, scope: !8111)
!8210 = !DILocation(line: 189, column: 59, scope: !8111)
!8211 = !DILocation(line: 189, column: 52, scope: !8111)
!8212 = !DILocation(line: 189, column: 80, scope: !8111)
!8213 = !DILocation(line: 189, column: 82, scope: !8111)
!8214 = !DILocation(line: 189, column: 75, scope: !8111)
!8215 = !DILocation(line: 189, column: 63, scope: !8111)
!8216 = !DILocation(line: 189, column: 50, scope: !8111)
!8217 = !DILocation(line: 189, column: 87, scope: !8111)
!8218 = !DILocation(line: 189, column: 93, scope: !8111)
!8219 = !DILocation(line: 189, column: 37, scope: !8111)
!8220 = !DILocation(line: 189, column: 10, scope: !8111)
!8221 = !DILocation(line: 189, column: 11, scope: !8111)
!8222 = !DILocation(line: 189, column: 5, scope: !8111)
!8223 = !DILocation(line: 189, column: 15, scope: !8111)
!8224 = !DILocation(line: 192, column: 27, scope: !8111)
!8225 = !DILocation(line: 192, column: 56, scope: !8111)
!8226 = !DILocation(line: 192, column: 51, scope: !8111)
!8227 = !DILocation(line: 192, column: 77, scope: !8111)
!8228 = !DILocation(line: 192, column: 72, scope: !8111)
!8229 = !DILocation(line: 192, column: 60, scope: !8111)
!8230 = !DILocation(line: 192, column: 49, scope: !8111)
!8231 = !DILocation(line: 192, column: 82, scope: !8111)
!8232 = !DILocation(line: 192, column: 90, scope: !8111)
!8233 = !DILocation(line: 192, column: 36, scope: !8111)
!8234 = !DILocation(line: 192, column: 13, scope: !8111)
!8235 = !DILocation(line: 192, column: 8, scope: !8111)
!8236 = !DILocation(line: 193, column: 16, scope: !8111)
!8237 = !DILocation(line: 193, column: 15, scope: !8111)
!8238 = !DILocation(line: 193, column: 20, scope: !8111)
!8239 = !DILocation(line: 193, column: 12, scope: !8111)
!8240 = !DILocation(line: 193, column: 5, scope: !8111)
!8241 = !DILocation(line: 193, column: 10, scope: !8111)
!8242 = !DILocation(line: 194, column: 12, scope: !8243)
!8243 = distinct !DILexicalBlock(scope: !8111, file: !174, line: 194, column: 5)
!8244 = !DILocation(line: 194, column: 10, scope: !8243)
!8245 = !DILocation(line: 194, column: 17, scope: !8246)
!8246 = !DILexicalBlockFile(scope: !8247, file: !174, discriminator: 1)
!8247 = distinct !DILexicalBlock(scope: !8243, file: !174, line: 194, column: 5)
!8248 = !DILocation(line: 194, column: 21, scope: !8246)
!8249 = !DILocation(line: 194, column: 19, scope: !8246)
!8250 = !DILocation(line: 194, column: 5, scope: !8246)
!8251 = !DILocation(line: 195, column: 31, scope: !8252)
!8252 = distinct !DILexicalBlock(scope: !8247, file: !174, line: 194, column: 30)
!8253 = !DILocation(line: 195, column: 26, scope: !8252)
!8254 = !DILocation(line: 195, column: 56, scope: !8252)
!8255 = !DILocation(line: 195, column: 58, scope: !8252)
!8256 = !DILocation(line: 195, column: 57, scope: !8252)
!8257 = !DILocation(line: 195, column: 60, scope: !8252)
!8258 = !DILocation(line: 195, column: 51, scope: !8252)
!8259 = !DILocation(line: 195, column: 81, scope: !8252)
!8260 = !DILocation(line: 195, column: 83, scope: !8252)
!8261 = !DILocation(line: 195, column: 82, scope: !8252)
!8262 = !DILocation(line: 195, column: 76, scope: !8252)
!8263 = !DILocation(line: 195, column: 64, scope: !8252)
!8264 = !DILocation(line: 195, column: 49, scope: !8252)
!8265 = !DILocation(line: 195, column: 88, scope: !8252)
!8266 = !DILocation(line: 195, column: 96, scope: !8252)
!8267 = !DILocation(line: 195, column: 36, scope: !8252)
!8268 = !DILocation(line: 195, column: 12, scope: !8252)
!8269 = !DILocation(line: 196, column: 31, scope: !8252)
!8270 = !DILocation(line: 196, column: 33, scope: !8252)
!8271 = !DILocation(line: 196, column: 32, scope: !8252)
!8272 = !DILocation(line: 196, column: 35, scope: !8252)
!8273 = !DILocation(line: 196, column: 26, scope: !8252)
!8274 = !DILocation(line: 196, column: 55, scope: !8252)
!8275 = !DILocation(line: 196, column: 70, scope: !8252)
!8276 = !DILocation(line: 196, column: 58, scope: !8252)
!8277 = !DILocation(line: 196, column: 53, scope: !8252)
!8278 = !DILocation(line: 196, column: 74, scope: !8252)
!8279 = !DILocation(line: 196, column: 82, scope: !8252)
!8280 = !DILocation(line: 196, column: 40, scope: !8252)
!8281 = !DILocation(line: 196, column: 12, scope: !8252)
!8282 = !DILocation(line: 197, column: 24, scope: !8252)
!8283 = !DILocation(line: 197, column: 23, scope: !8252)
!8284 = !DILocation(line: 197, column: 28, scope: !8252)
!8285 = !DILocation(line: 197, column: 20, scope: !8252)
!8286 = !DILocation(line: 197, column: 13, scope: !8252)
!8287 = !DILocation(line: 197, column: 12, scope: !8252)
!8288 = !DILocation(line: 197, column: 14, scope: !8252)
!8289 = !DILocation(line: 197, column: 9, scope: !8252)
!8290 = !DILocation(line: 197, column: 18, scope: !8252)
!8291 = !DILocation(line: 198, column: 23, scope: !8252)
!8292 = !DILocation(line: 198, column: 22, scope: !8252)
!8293 = !DILocation(line: 198, column: 27, scope: !8252)
!8294 = !DILocation(line: 198, column: 19, scope: !8252)
!8295 = !DILocation(line: 198, column: 13, scope: !8252)
!8296 = !DILocation(line: 198, column: 12, scope: !8252)
!8297 = !DILocation(line: 198, column: 9, scope: !8252)
!8298 = !DILocation(line: 198, column: 17, scope: !8252)
!8299 = !DILocation(line: 199, column: 14, scope: !8252)
!8300 = !DILocation(line: 199, column: 12, scope: !8252)
!8301 = !DILocation(line: 200, column: 5, scope: !8252)
!8302 = !DILocation(line: 194, column: 26, scope: !8303)
!8303 = !DILexicalBlockFile(scope: !8247, file: !174, discriminator: 2)
!8304 = !DILocation(line: 194, column: 5, scope: !8303)
!8305 = distinct !{!8305, !8306}
!8306 = !DILocation(line: 194, column: 5, scope: !8111)
!8307 = !DILocation(line: 201, column: 35, scope: !8111)
!8308 = !DILocation(line: 201, column: 36, scope: !8111)
!8309 = !DILocation(line: 201, column: 30, scope: !8111)
!8310 = !DILocation(line: 201, column: 56, scope: !8111)
!8311 = !DILocation(line: 201, column: 71, scope: !8111)
!8312 = !DILocation(line: 201, column: 59, scope: !8111)
!8313 = !DILocation(line: 201, column: 54, scope: !8111)
!8314 = !DILocation(line: 201, column: 75, scope: !8111)
!8315 = !DILocation(line: 201, column: 83, scope: !8111)
!8316 = !DILocation(line: 201, column: 41, scope: !8111)
!8317 = !DILocation(line: 201, column: 17, scope: !8111)
!8318 = !DILocation(line: 201, column: 92, scope: !8111)
!8319 = !DILocation(line: 201, column: 14, scope: !8111)
!8320 = !DILocation(line: 201, column: 7, scope: !8111)
!8321 = !DILocation(line: 201, column: 8, scope: !8111)
!8322 = !DILocation(line: 201, column: 5, scope: !8111)
!8323 = !DILocation(line: 201, column: 12, scope: !8111)
!8324 = !DILocation(line: 202, column: 1, scope: !8111)
!8325 = distinct !DISubprogram(name: "spatial_compose_dd97i_init_12bit", scope: !174, file: !174, line: 495, type: !901, isLocal: true, isDefinition: true, scopeLine: 496, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!8326 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !8327)
!8327 = distinct !DILocation(line: 498, column: 25, scope: !8325)
!8328 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !8327)
!8329 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !8327)
!8330 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !8331)
!8331 = distinct !DILocation(line: 499, column: 25, scope: !8325)
!8332 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !8331)
!8333 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !8331)
!8334 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !8335)
!8335 = distinct !DILocation(line: 500, column: 25, scope: !8325)
!8336 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !8335)
!8337 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !8335)
!8338 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !8339)
!8339 = distinct !DILocation(line: 501, column: 25, scope: !8325)
!8340 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !8339)
!8341 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !8339)
!8342 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !8343)
!8343 = distinct !DILocation(line: 502, column: 25, scope: !8325)
!8344 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !8343)
!8345 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !8343)
!8346 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !8347)
!8347 = distinct !DILocation(line: 497, column: 25, scope: !8325)
!8348 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !8347)
!8349 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !8347)
!8350 = !DILocalVariable(name: "cs", arg: 1, scope: !8325, file: !174, line: 495, type: !903)
!8351 = !DILocation(line: 495, column: 58, scope: !8325)
!8352 = !DILocalVariable(name: "buffer", arg: 2, scope: !8325, file: !174, line: 495, type: !20)
!8353 = !DILocation(line: 495, column: 71, scope: !8325)
!8354 = !DILocalVariable(name: "height", arg: 3, scope: !8325, file: !174, line: 495, type: !18)
!8355 = !DILocation(line: 495, column: 83, scope: !8325)
!8356 = !DILocalVariable(name: "stride", arg: 4, scope: !8325, file: !174, line: 495, type: !18)
!8357 = !DILocation(line: 495, column: 95, scope: !8325)
!8358 = !DILocation(line: 497, column: 16, scope: !8325)
!8359 = !DILocation(line: 497, column: 44, scope: !8325)
!8360 = !DILocation(line: 497, column: 50, scope: !8325)
!8361 = !DILocation(line: 497, column: 25, scope: !8325)
!8362 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !8347)
!8363 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !8347)
!8364 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !8347)
!8365 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !8347)
!8366 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !8347)
!8367 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !8347)
!8368 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !8347)
!8369 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !8347)
!8370 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !8347)
!8371 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !8347)
!8372 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !8347)
!8373 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !8347)
!8374 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !8347)
!8375 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !8347)
!8376 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !8347)
!8377 = !DILocation(line: 497, column: 54, scope: !8325)
!8378 = !DILocation(line: 497, column: 53, scope: !8325)
!8379 = !DILocation(line: 497, column: 23, scope: !8325)
!8380 = !DILocation(line: 497, column: 5, scope: !8325)
!8381 = !DILocation(line: 497, column: 9, scope: !8325)
!8382 = !DILocation(line: 497, column: 14, scope: !8325)
!8383 = !DILocation(line: 498, column: 16, scope: !8325)
!8384 = !DILocation(line: 498, column: 43, scope: !8325)
!8385 = !DILocation(line: 498, column: 49, scope: !8325)
!8386 = !DILocation(line: 498, column: 25, scope: !8325)
!8387 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !8327)
!8388 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !8327)
!8389 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !8327)
!8390 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !8327)
!8391 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !8327)
!8392 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !8327)
!8393 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !8327)
!8394 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !8327)
!8395 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !8327)
!8396 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !8327)
!8397 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !8327)
!8398 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !8327)
!8399 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !8327)
!8400 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !8327)
!8401 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !8327)
!8402 = !DILocation(line: 498, column: 53, scope: !8325)
!8403 = !DILocation(line: 498, column: 52, scope: !8325)
!8404 = !DILocation(line: 498, column: 23, scope: !8325)
!8405 = !DILocation(line: 498, column: 5, scope: !8325)
!8406 = !DILocation(line: 498, column: 9, scope: !8325)
!8407 = !DILocation(line: 498, column: 14, scope: !8325)
!8408 = !DILocation(line: 499, column: 16, scope: !8325)
!8409 = !DILocation(line: 499, column: 44, scope: !8325)
!8410 = !DILocation(line: 499, column: 50, scope: !8325)
!8411 = !DILocation(line: 499, column: 25, scope: !8325)
!8412 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !8331)
!8413 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !8331)
!8414 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !8331)
!8415 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !8331)
!8416 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !8331)
!8417 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !8331)
!8418 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !8331)
!8419 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !8331)
!8420 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !8331)
!8421 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !8331)
!8422 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !8331)
!8423 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !8331)
!8424 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !8331)
!8425 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !8331)
!8426 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !8331)
!8427 = !DILocation(line: 499, column: 54, scope: !8325)
!8428 = !DILocation(line: 499, column: 53, scope: !8325)
!8429 = !DILocation(line: 499, column: 23, scope: !8325)
!8430 = !DILocation(line: 499, column: 5, scope: !8325)
!8431 = !DILocation(line: 499, column: 9, scope: !8325)
!8432 = !DILocation(line: 499, column: 14, scope: !8325)
!8433 = !DILocation(line: 500, column: 16, scope: !8325)
!8434 = !DILocation(line: 500, column: 44, scope: !8325)
!8435 = !DILocation(line: 500, column: 50, scope: !8325)
!8436 = !DILocation(line: 500, column: 25, scope: !8325)
!8437 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !8335)
!8438 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !8335)
!8439 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !8335)
!8440 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !8335)
!8441 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !8335)
!8442 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !8335)
!8443 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !8335)
!8444 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !8335)
!8445 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !8335)
!8446 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !8335)
!8447 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !8335)
!8448 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !8335)
!8449 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !8335)
!8450 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !8335)
!8451 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !8335)
!8452 = !DILocation(line: 500, column: 54, scope: !8325)
!8453 = !DILocation(line: 500, column: 53, scope: !8325)
!8454 = !DILocation(line: 500, column: 23, scope: !8325)
!8455 = !DILocation(line: 500, column: 5, scope: !8325)
!8456 = !DILocation(line: 500, column: 9, scope: !8325)
!8457 = !DILocation(line: 500, column: 14, scope: !8325)
!8458 = !DILocation(line: 501, column: 16, scope: !8325)
!8459 = !DILocation(line: 501, column: 44, scope: !8325)
!8460 = !DILocation(line: 501, column: 50, scope: !8325)
!8461 = !DILocation(line: 501, column: 25, scope: !8325)
!8462 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !8339)
!8463 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !8339)
!8464 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !8339)
!8465 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !8339)
!8466 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !8339)
!8467 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !8339)
!8468 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !8339)
!8469 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !8339)
!8470 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !8339)
!8471 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !8339)
!8472 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !8339)
!8473 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !8339)
!8474 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !8339)
!8475 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !8339)
!8476 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !8339)
!8477 = !DILocation(line: 501, column: 54, scope: !8325)
!8478 = !DILocation(line: 501, column: 53, scope: !8325)
!8479 = !DILocation(line: 501, column: 23, scope: !8325)
!8480 = !DILocation(line: 501, column: 5, scope: !8325)
!8481 = !DILocation(line: 501, column: 9, scope: !8325)
!8482 = !DILocation(line: 501, column: 14, scope: !8325)
!8483 = !DILocation(line: 502, column: 16, scope: !8325)
!8484 = !DILocation(line: 502, column: 44, scope: !8325)
!8485 = !DILocation(line: 502, column: 50, scope: !8325)
!8486 = !DILocation(line: 502, column: 25, scope: !8325)
!8487 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !8343)
!8488 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !8343)
!8489 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !8343)
!8490 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !8343)
!8491 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !8343)
!8492 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !8343)
!8493 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !8343)
!8494 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !8343)
!8495 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !8343)
!8496 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !8343)
!8497 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !8343)
!8498 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !8343)
!8499 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !8343)
!8500 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !8343)
!8501 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !8343)
!8502 = !DILocation(line: 502, column: 54, scope: !8325)
!8503 = !DILocation(line: 502, column: 53, scope: !8325)
!8504 = !DILocation(line: 502, column: 23, scope: !8325)
!8505 = !DILocation(line: 502, column: 5, scope: !8325)
!8506 = !DILocation(line: 502, column: 9, scope: !8325)
!8507 = !DILocation(line: 502, column: 14, scope: !8325)
!8508 = !DILocation(line: 503, column: 5, scope: !8325)
!8509 = !DILocation(line: 503, column: 9, scope: !8325)
!8510 = !DILocation(line: 503, column: 11, scope: !8325)
!8511 = !DILocation(line: 504, column: 1, scope: !8325)
!8512 = distinct !DISubprogram(name: "spatial_compose53i_init_12bit", scope: !174, file: !174, line: 488, type: !901, isLocal: true, isDefinition: true, scopeLine: 489, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!8513 = !DILocation(line: 338, column: 91, scope: !1103, inlinedAt: !8514)
!8514 = distinct !DILocation(line: 491, column: 25, scope: !8512)
!8515 = !DILocation(line: 338, column: 98, scope: !1103, inlinedAt: !8514)
!8516 = !DILocation(line: 338, column: 91, scope: !1103, inlinedAt: !8517)
!8517 = distinct !DILocation(line: 490, column: 25, scope: !8512)
!8518 = !DILocation(line: 338, column: 98, scope: !1103, inlinedAt: !8517)
!8519 = !DILocalVariable(name: "cs", arg: 1, scope: !8512, file: !174, line: 488, type: !903)
!8520 = !DILocation(line: 488, column: 55, scope: !8512)
!8521 = !DILocalVariable(name: "buffer", arg: 2, scope: !8512, file: !174, line: 488, type: !20)
!8522 = !DILocation(line: 488, column: 68, scope: !8512)
!8523 = !DILocalVariable(name: "height", arg: 3, scope: !8512, file: !174, line: 488, type: !18)
!8524 = !DILocation(line: 488, column: 80, scope: !8512)
!8525 = !DILocalVariable(name: "stride", arg: 4, scope: !8512, file: !174, line: 488, type: !18)
!8526 = !DILocation(line: 488, column: 92, scope: !8512)
!8527 = !DILocation(line: 490, column: 16, scope: !8512)
!8528 = !DILocation(line: 490, column: 45, scope: !8512)
!8529 = !DILocation(line: 490, column: 51, scope: !8512)
!8530 = !DILocation(line: 490, column: 25, scope: !8512)
!8531 = !DILocation(line: 340, column: 10, scope: !1127, inlinedAt: !8517)
!8532 = !DILocation(line: 340, column: 9, scope: !1103, inlinedAt: !8517)
!8533 = !DILocation(line: 341, column: 9, scope: !1127, inlinedAt: !8517)
!8534 = !DILocation(line: 343, column: 5, scope: !1103, inlinedAt: !8517)
!8535 = !DILocation(line: 343, column: 22, scope: !1132, inlinedAt: !8517)
!8536 = !DILocation(line: 343, column: 36, scope: !1132, inlinedAt: !8517)
!8537 = !DILocation(line: 343, column: 24, scope: !1132, inlinedAt: !8517)
!8538 = !DILocation(line: 343, column: 5, scope: !1132, inlinedAt: !8517)
!8539 = !DILocation(line: 344, column: 14, scope: !1137, inlinedAt: !8517)
!8540 = !DILocation(line: 344, column: 13, scope: !1137, inlinedAt: !8517)
!8541 = !DILocation(line: 344, column: 11, scope: !1137, inlinedAt: !8517)
!8542 = !DILocation(line: 345, column: 13, scope: !1141, inlinedAt: !8517)
!8543 = !DILocation(line: 345, column: 15, scope: !1141, inlinedAt: !8517)
!8544 = !DILocation(line: 345, column: 13, scope: !1137, inlinedAt: !8517)
!8545 = !DILocation(line: 346, column: 22, scope: !1141, inlinedAt: !8517)
!8546 = !DILocation(line: 346, column: 20, scope: !1141, inlinedAt: !8517)
!8547 = !DILocation(line: 346, column: 15, scope: !1141, inlinedAt: !8517)
!8548 = !DILocation(line: 346, column: 13, scope: !1141, inlinedAt: !8517)
!8549 = !DILocation(line: 343, column: 5, scope: !1149, inlinedAt: !8517)
!8550 = !DILocation(line: 348, column: 12, scope: !1103, inlinedAt: !8517)
!8551 = !DILocation(line: 348, column: 5, scope: !1103, inlinedAt: !8517)
!8552 = !DILocation(line: 349, column: 1, scope: !1103, inlinedAt: !8517)
!8553 = !DILocation(line: 490, column: 55, scope: !8512)
!8554 = !DILocation(line: 490, column: 54, scope: !8512)
!8555 = !DILocation(line: 490, column: 23, scope: !8512)
!8556 = !DILocation(line: 490, column: 5, scope: !8512)
!8557 = !DILocation(line: 490, column: 9, scope: !8512)
!8558 = !DILocation(line: 490, column: 14, scope: !8512)
!8559 = !DILocation(line: 491, column: 16, scope: !8512)
!8560 = !DILocation(line: 491, column: 44, scope: !8512)
!8561 = !DILocation(line: 491, column: 50, scope: !8512)
!8562 = !DILocation(line: 491, column: 25, scope: !8512)
!8563 = !DILocation(line: 340, column: 10, scope: !1127, inlinedAt: !8514)
!8564 = !DILocation(line: 340, column: 9, scope: !1103, inlinedAt: !8514)
!8565 = !DILocation(line: 341, column: 9, scope: !1127, inlinedAt: !8514)
!8566 = !DILocation(line: 343, column: 5, scope: !1103, inlinedAt: !8514)
!8567 = !DILocation(line: 343, column: 22, scope: !1132, inlinedAt: !8514)
!8568 = !DILocation(line: 343, column: 36, scope: !1132, inlinedAt: !8514)
!8569 = !DILocation(line: 343, column: 24, scope: !1132, inlinedAt: !8514)
!8570 = !DILocation(line: 343, column: 5, scope: !1132, inlinedAt: !8514)
!8571 = !DILocation(line: 344, column: 14, scope: !1137, inlinedAt: !8514)
!8572 = !DILocation(line: 344, column: 13, scope: !1137, inlinedAt: !8514)
!8573 = !DILocation(line: 344, column: 11, scope: !1137, inlinedAt: !8514)
!8574 = !DILocation(line: 345, column: 13, scope: !1141, inlinedAt: !8514)
!8575 = !DILocation(line: 345, column: 15, scope: !1141, inlinedAt: !8514)
!8576 = !DILocation(line: 345, column: 13, scope: !1137, inlinedAt: !8514)
!8577 = !DILocation(line: 346, column: 22, scope: !1141, inlinedAt: !8514)
!8578 = !DILocation(line: 346, column: 20, scope: !1141, inlinedAt: !8514)
!8579 = !DILocation(line: 346, column: 15, scope: !1141, inlinedAt: !8514)
!8580 = !DILocation(line: 346, column: 13, scope: !1141, inlinedAt: !8514)
!8581 = !DILocation(line: 343, column: 5, scope: !1149, inlinedAt: !8514)
!8582 = !DILocation(line: 348, column: 12, scope: !1103, inlinedAt: !8514)
!8583 = !DILocation(line: 348, column: 5, scope: !1103, inlinedAt: !8514)
!8584 = !DILocation(line: 349, column: 1, scope: !1103, inlinedAt: !8514)
!8585 = !DILocation(line: 491, column: 54, scope: !8512)
!8586 = !DILocation(line: 491, column: 53, scope: !8512)
!8587 = !DILocation(line: 491, column: 23, scope: !8512)
!8588 = !DILocation(line: 491, column: 5, scope: !8512)
!8589 = !DILocation(line: 491, column: 9, scope: !8512)
!8590 = !DILocation(line: 491, column: 14, scope: !8512)
!8591 = !DILocation(line: 492, column: 5, scope: !8512)
!8592 = !DILocation(line: 492, column: 9, scope: !8512)
!8593 = !DILocation(line: 492, column: 11, scope: !8512)
!8594 = !DILocation(line: 493, column: 1, scope: !8512)
!8595 = distinct !DISubprogram(name: "spatial_compose_dd137i_init_12bit", scope: !174, file: !174, line: 506, type: !901, isLocal: true, isDefinition: true, scopeLine: 507, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!8596 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !8597)
!8597 = distinct !DILocation(line: 509, column: 25, scope: !8595)
!8598 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !8597)
!8599 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !8597)
!8600 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !8601)
!8601 = distinct !DILocation(line: 510, column: 25, scope: !8595)
!8602 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !8601)
!8603 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !8601)
!8604 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !8605)
!8605 = distinct !DILocation(line: 511, column: 25, scope: !8595)
!8606 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !8605)
!8607 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !8605)
!8608 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !8609)
!8609 = distinct !DILocation(line: 512, column: 25, scope: !8595)
!8610 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !8609)
!8611 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !8609)
!8612 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !8613)
!8613 = distinct !DILocation(line: 513, column: 25, scope: !8595)
!8614 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !8613)
!8615 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !8613)
!8616 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !8617)
!8617 = distinct !DILocation(line: 514, column: 25, scope: !8595)
!8618 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !8617)
!8619 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !8617)
!8620 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !8621)
!8621 = distinct !DILocation(line: 515, column: 25, scope: !8595)
!8622 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !8621)
!8623 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !8621)
!8624 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !8625)
!8625 = distinct !DILocation(line: 508, column: 25, scope: !8595)
!8626 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !8625)
!8627 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !8625)
!8628 = !DILocalVariable(name: "cs", arg: 1, scope: !8595, file: !174, line: 506, type: !903)
!8629 = !DILocation(line: 506, column: 59, scope: !8595)
!8630 = !DILocalVariable(name: "buffer", arg: 2, scope: !8595, file: !174, line: 506, type: !20)
!8631 = !DILocation(line: 506, column: 72, scope: !8595)
!8632 = !DILocalVariable(name: "height", arg: 3, scope: !8595, file: !174, line: 506, type: !18)
!8633 = !DILocation(line: 506, column: 84, scope: !8595)
!8634 = !DILocalVariable(name: "stride", arg: 4, scope: !8595, file: !174, line: 506, type: !18)
!8635 = !DILocation(line: 506, column: 96, scope: !8595)
!8636 = !DILocation(line: 508, column: 16, scope: !8595)
!8637 = !DILocation(line: 508, column: 44, scope: !8595)
!8638 = !DILocation(line: 508, column: 50, scope: !8595)
!8639 = !DILocation(line: 508, column: 25, scope: !8595)
!8640 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !8625)
!8641 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !8625)
!8642 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !8625)
!8643 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !8625)
!8644 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !8625)
!8645 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !8625)
!8646 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !8625)
!8647 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !8625)
!8648 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !8625)
!8649 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !8625)
!8650 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !8625)
!8651 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !8625)
!8652 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !8625)
!8653 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !8625)
!8654 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !8625)
!8655 = !DILocation(line: 508, column: 54, scope: !8595)
!8656 = !DILocation(line: 508, column: 53, scope: !8595)
!8657 = !DILocation(line: 508, column: 23, scope: !8595)
!8658 = !DILocation(line: 508, column: 5, scope: !8595)
!8659 = !DILocation(line: 508, column: 9, scope: !8595)
!8660 = !DILocation(line: 508, column: 14, scope: !8595)
!8661 = !DILocation(line: 509, column: 16, scope: !8595)
!8662 = !DILocation(line: 509, column: 43, scope: !8595)
!8663 = !DILocation(line: 509, column: 49, scope: !8595)
!8664 = !DILocation(line: 509, column: 25, scope: !8595)
!8665 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !8597)
!8666 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !8597)
!8667 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !8597)
!8668 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !8597)
!8669 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !8597)
!8670 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !8597)
!8671 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !8597)
!8672 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !8597)
!8673 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !8597)
!8674 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !8597)
!8675 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !8597)
!8676 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !8597)
!8677 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !8597)
!8678 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !8597)
!8679 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !8597)
!8680 = !DILocation(line: 509, column: 53, scope: !8595)
!8681 = !DILocation(line: 509, column: 52, scope: !8595)
!8682 = !DILocation(line: 509, column: 23, scope: !8595)
!8683 = !DILocation(line: 509, column: 5, scope: !8595)
!8684 = !DILocation(line: 509, column: 9, scope: !8595)
!8685 = !DILocation(line: 509, column: 14, scope: !8595)
!8686 = !DILocation(line: 510, column: 16, scope: !8595)
!8687 = !DILocation(line: 510, column: 44, scope: !8595)
!8688 = !DILocation(line: 510, column: 50, scope: !8595)
!8689 = !DILocation(line: 510, column: 25, scope: !8595)
!8690 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !8601)
!8691 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !8601)
!8692 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !8601)
!8693 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !8601)
!8694 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !8601)
!8695 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !8601)
!8696 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !8601)
!8697 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !8601)
!8698 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !8601)
!8699 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !8601)
!8700 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !8601)
!8701 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !8601)
!8702 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !8601)
!8703 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !8601)
!8704 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !8601)
!8705 = !DILocation(line: 510, column: 54, scope: !8595)
!8706 = !DILocation(line: 510, column: 53, scope: !8595)
!8707 = !DILocation(line: 510, column: 23, scope: !8595)
!8708 = !DILocation(line: 510, column: 5, scope: !8595)
!8709 = !DILocation(line: 510, column: 9, scope: !8595)
!8710 = !DILocation(line: 510, column: 14, scope: !8595)
!8711 = !DILocation(line: 511, column: 16, scope: !8595)
!8712 = !DILocation(line: 511, column: 44, scope: !8595)
!8713 = !DILocation(line: 511, column: 50, scope: !8595)
!8714 = !DILocation(line: 511, column: 25, scope: !8595)
!8715 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !8605)
!8716 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !8605)
!8717 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !8605)
!8718 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !8605)
!8719 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !8605)
!8720 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !8605)
!8721 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !8605)
!8722 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !8605)
!8723 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !8605)
!8724 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !8605)
!8725 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !8605)
!8726 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !8605)
!8727 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !8605)
!8728 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !8605)
!8729 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !8605)
!8730 = !DILocation(line: 511, column: 54, scope: !8595)
!8731 = !DILocation(line: 511, column: 53, scope: !8595)
!8732 = !DILocation(line: 511, column: 23, scope: !8595)
!8733 = !DILocation(line: 511, column: 5, scope: !8595)
!8734 = !DILocation(line: 511, column: 9, scope: !8595)
!8735 = !DILocation(line: 511, column: 14, scope: !8595)
!8736 = !DILocation(line: 512, column: 16, scope: !8595)
!8737 = !DILocation(line: 512, column: 44, scope: !8595)
!8738 = !DILocation(line: 512, column: 50, scope: !8595)
!8739 = !DILocation(line: 512, column: 25, scope: !8595)
!8740 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !8609)
!8741 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !8609)
!8742 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !8609)
!8743 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !8609)
!8744 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !8609)
!8745 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !8609)
!8746 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !8609)
!8747 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !8609)
!8748 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !8609)
!8749 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !8609)
!8750 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !8609)
!8751 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !8609)
!8752 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !8609)
!8753 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !8609)
!8754 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !8609)
!8755 = !DILocation(line: 512, column: 54, scope: !8595)
!8756 = !DILocation(line: 512, column: 53, scope: !8595)
!8757 = !DILocation(line: 512, column: 23, scope: !8595)
!8758 = !DILocation(line: 512, column: 5, scope: !8595)
!8759 = !DILocation(line: 512, column: 9, scope: !8595)
!8760 = !DILocation(line: 512, column: 14, scope: !8595)
!8761 = !DILocation(line: 513, column: 16, scope: !8595)
!8762 = !DILocation(line: 513, column: 44, scope: !8595)
!8763 = !DILocation(line: 513, column: 50, scope: !8595)
!8764 = !DILocation(line: 513, column: 25, scope: !8595)
!8765 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !8613)
!8766 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !8613)
!8767 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !8613)
!8768 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !8613)
!8769 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !8613)
!8770 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !8613)
!8771 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !8613)
!8772 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !8613)
!8773 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !8613)
!8774 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !8613)
!8775 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !8613)
!8776 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !8613)
!8777 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !8613)
!8778 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !8613)
!8779 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !8613)
!8780 = !DILocation(line: 513, column: 54, scope: !8595)
!8781 = !DILocation(line: 513, column: 53, scope: !8595)
!8782 = !DILocation(line: 513, column: 23, scope: !8595)
!8783 = !DILocation(line: 513, column: 5, scope: !8595)
!8784 = !DILocation(line: 513, column: 9, scope: !8595)
!8785 = !DILocation(line: 513, column: 14, scope: !8595)
!8786 = !DILocation(line: 514, column: 16, scope: !8595)
!8787 = !DILocation(line: 514, column: 44, scope: !8595)
!8788 = !DILocation(line: 514, column: 50, scope: !8595)
!8789 = !DILocation(line: 514, column: 25, scope: !8595)
!8790 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !8617)
!8791 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !8617)
!8792 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !8617)
!8793 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !8617)
!8794 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !8617)
!8795 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !8617)
!8796 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !8617)
!8797 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !8617)
!8798 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !8617)
!8799 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !8617)
!8800 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !8617)
!8801 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !8617)
!8802 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !8617)
!8803 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !8617)
!8804 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !8617)
!8805 = !DILocation(line: 514, column: 54, scope: !8595)
!8806 = !DILocation(line: 514, column: 53, scope: !8595)
!8807 = !DILocation(line: 514, column: 23, scope: !8595)
!8808 = !DILocation(line: 514, column: 5, scope: !8595)
!8809 = !DILocation(line: 514, column: 9, scope: !8595)
!8810 = !DILocation(line: 514, column: 14, scope: !8595)
!8811 = !DILocation(line: 515, column: 16, scope: !8595)
!8812 = !DILocation(line: 515, column: 44, scope: !8595)
!8813 = !DILocation(line: 515, column: 50, scope: !8595)
!8814 = !DILocation(line: 515, column: 25, scope: !8595)
!8815 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !8621)
!8816 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !8621)
!8817 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !8621)
!8818 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !8621)
!8819 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !8621)
!8820 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !8621)
!8821 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !8621)
!8822 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !8621)
!8823 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !8621)
!8824 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !8621)
!8825 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !8621)
!8826 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !8621)
!8827 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !8621)
!8828 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !8621)
!8829 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !8621)
!8830 = !DILocation(line: 515, column: 54, scope: !8595)
!8831 = !DILocation(line: 515, column: 53, scope: !8595)
!8832 = !DILocation(line: 515, column: 23, scope: !8595)
!8833 = !DILocation(line: 515, column: 5, scope: !8595)
!8834 = !DILocation(line: 515, column: 9, scope: !8595)
!8835 = !DILocation(line: 515, column: 14, scope: !8595)
!8836 = !DILocation(line: 516, column: 5, scope: !8595)
!8837 = !DILocation(line: 516, column: 9, scope: !8595)
!8838 = !DILocation(line: 516, column: 11, scope: !8595)
!8839 = !DILocation(line: 517, column: 1, scope: !8595)
!8840 = distinct !DISubprogram(name: "spatial_compose97i_init_12bit", scope: !174, file: !174, line: 479, type: !901, isLocal: true, isDefinition: true, scopeLine: 480, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!8841 = !DILocation(line: 338, column: 91, scope: !1103, inlinedAt: !8842)
!8842 = distinct !DILocation(line: 482, column: 25, scope: !8840)
!8843 = !DILocation(line: 338, column: 98, scope: !1103, inlinedAt: !8842)
!8844 = !DILocation(line: 338, column: 91, scope: !1103, inlinedAt: !8845)
!8845 = distinct !DILocation(line: 483, column: 25, scope: !8840)
!8846 = !DILocation(line: 338, column: 98, scope: !1103, inlinedAt: !8845)
!8847 = !DILocation(line: 338, column: 91, scope: !1103, inlinedAt: !8848)
!8848 = distinct !DILocation(line: 484, column: 25, scope: !8840)
!8849 = !DILocation(line: 338, column: 98, scope: !1103, inlinedAt: !8848)
!8850 = !DILocation(line: 338, column: 91, scope: !1103, inlinedAt: !8851)
!8851 = distinct !DILocation(line: 481, column: 25, scope: !8840)
!8852 = !DILocation(line: 338, column: 98, scope: !1103, inlinedAt: !8851)
!8853 = !DILocalVariable(name: "cs", arg: 1, scope: !8840, file: !174, line: 479, type: !903)
!8854 = !DILocation(line: 479, column: 55, scope: !8840)
!8855 = !DILocalVariable(name: "buffer", arg: 2, scope: !8840, file: !174, line: 479, type: !20)
!8856 = !DILocation(line: 479, column: 68, scope: !8840)
!8857 = !DILocalVariable(name: "height", arg: 3, scope: !8840, file: !174, line: 479, type: !18)
!8858 = !DILocation(line: 479, column: 80, scope: !8840)
!8859 = !DILocalVariable(name: "stride", arg: 4, scope: !8840, file: !174, line: 479, type: !18)
!8860 = !DILocation(line: 479, column: 92, scope: !8840)
!8861 = !DILocation(line: 481, column: 16, scope: !8840)
!8862 = !DILocation(line: 481, column: 45, scope: !8840)
!8863 = !DILocation(line: 481, column: 51, scope: !8840)
!8864 = !DILocation(line: 481, column: 25, scope: !8840)
!8865 = !DILocation(line: 340, column: 10, scope: !1127, inlinedAt: !8851)
!8866 = !DILocation(line: 340, column: 9, scope: !1103, inlinedAt: !8851)
!8867 = !DILocation(line: 341, column: 9, scope: !1127, inlinedAt: !8851)
!8868 = !DILocation(line: 343, column: 5, scope: !1103, inlinedAt: !8851)
!8869 = !DILocation(line: 343, column: 22, scope: !1132, inlinedAt: !8851)
!8870 = !DILocation(line: 343, column: 36, scope: !1132, inlinedAt: !8851)
!8871 = !DILocation(line: 343, column: 24, scope: !1132, inlinedAt: !8851)
!8872 = !DILocation(line: 343, column: 5, scope: !1132, inlinedAt: !8851)
!8873 = !DILocation(line: 344, column: 14, scope: !1137, inlinedAt: !8851)
!8874 = !DILocation(line: 344, column: 13, scope: !1137, inlinedAt: !8851)
!8875 = !DILocation(line: 344, column: 11, scope: !1137, inlinedAt: !8851)
!8876 = !DILocation(line: 345, column: 13, scope: !1141, inlinedAt: !8851)
!8877 = !DILocation(line: 345, column: 15, scope: !1141, inlinedAt: !8851)
!8878 = !DILocation(line: 345, column: 13, scope: !1137, inlinedAt: !8851)
!8879 = !DILocation(line: 346, column: 22, scope: !1141, inlinedAt: !8851)
!8880 = !DILocation(line: 346, column: 20, scope: !1141, inlinedAt: !8851)
!8881 = !DILocation(line: 346, column: 15, scope: !1141, inlinedAt: !8851)
!8882 = !DILocation(line: 346, column: 13, scope: !1141, inlinedAt: !8851)
!8883 = !DILocation(line: 343, column: 5, scope: !1149, inlinedAt: !8851)
!8884 = !DILocation(line: 348, column: 12, scope: !1103, inlinedAt: !8851)
!8885 = !DILocation(line: 348, column: 5, scope: !1103, inlinedAt: !8851)
!8886 = !DILocation(line: 349, column: 1, scope: !1103, inlinedAt: !8851)
!8887 = !DILocation(line: 481, column: 55, scope: !8840)
!8888 = !DILocation(line: 481, column: 54, scope: !8840)
!8889 = !DILocation(line: 481, column: 23, scope: !8840)
!8890 = !DILocation(line: 481, column: 5, scope: !8840)
!8891 = !DILocation(line: 481, column: 9, scope: !8840)
!8892 = !DILocation(line: 481, column: 14, scope: !8840)
!8893 = !DILocation(line: 482, column: 16, scope: !8840)
!8894 = !DILocation(line: 482, column: 44, scope: !8840)
!8895 = !DILocation(line: 482, column: 50, scope: !8840)
!8896 = !DILocation(line: 482, column: 25, scope: !8840)
!8897 = !DILocation(line: 340, column: 10, scope: !1127, inlinedAt: !8842)
!8898 = !DILocation(line: 340, column: 9, scope: !1103, inlinedAt: !8842)
!8899 = !DILocation(line: 341, column: 9, scope: !1127, inlinedAt: !8842)
!8900 = !DILocation(line: 343, column: 5, scope: !1103, inlinedAt: !8842)
!8901 = !DILocation(line: 343, column: 22, scope: !1132, inlinedAt: !8842)
!8902 = !DILocation(line: 343, column: 36, scope: !1132, inlinedAt: !8842)
!8903 = !DILocation(line: 343, column: 24, scope: !1132, inlinedAt: !8842)
!8904 = !DILocation(line: 343, column: 5, scope: !1132, inlinedAt: !8842)
!8905 = !DILocation(line: 344, column: 14, scope: !1137, inlinedAt: !8842)
!8906 = !DILocation(line: 344, column: 13, scope: !1137, inlinedAt: !8842)
!8907 = !DILocation(line: 344, column: 11, scope: !1137, inlinedAt: !8842)
!8908 = !DILocation(line: 345, column: 13, scope: !1141, inlinedAt: !8842)
!8909 = !DILocation(line: 345, column: 15, scope: !1141, inlinedAt: !8842)
!8910 = !DILocation(line: 345, column: 13, scope: !1137, inlinedAt: !8842)
!8911 = !DILocation(line: 346, column: 22, scope: !1141, inlinedAt: !8842)
!8912 = !DILocation(line: 346, column: 20, scope: !1141, inlinedAt: !8842)
!8913 = !DILocation(line: 346, column: 15, scope: !1141, inlinedAt: !8842)
!8914 = !DILocation(line: 346, column: 13, scope: !1141, inlinedAt: !8842)
!8915 = !DILocation(line: 343, column: 5, scope: !1149, inlinedAt: !8842)
!8916 = !DILocation(line: 348, column: 12, scope: !1103, inlinedAt: !8842)
!8917 = !DILocation(line: 348, column: 5, scope: !1103, inlinedAt: !8842)
!8918 = !DILocation(line: 349, column: 1, scope: !1103, inlinedAt: !8842)
!8919 = !DILocation(line: 482, column: 54, scope: !8840)
!8920 = !DILocation(line: 482, column: 53, scope: !8840)
!8921 = !DILocation(line: 482, column: 23, scope: !8840)
!8922 = !DILocation(line: 482, column: 5, scope: !8840)
!8923 = !DILocation(line: 482, column: 9, scope: !8840)
!8924 = !DILocation(line: 482, column: 14, scope: !8840)
!8925 = !DILocation(line: 483, column: 16, scope: !8840)
!8926 = !DILocation(line: 483, column: 45, scope: !8840)
!8927 = !DILocation(line: 483, column: 51, scope: !8840)
!8928 = !DILocation(line: 483, column: 25, scope: !8840)
!8929 = !DILocation(line: 340, column: 10, scope: !1127, inlinedAt: !8845)
!8930 = !DILocation(line: 340, column: 9, scope: !1103, inlinedAt: !8845)
!8931 = !DILocation(line: 341, column: 9, scope: !1127, inlinedAt: !8845)
!8932 = !DILocation(line: 343, column: 5, scope: !1103, inlinedAt: !8845)
!8933 = !DILocation(line: 343, column: 22, scope: !1132, inlinedAt: !8845)
!8934 = !DILocation(line: 343, column: 36, scope: !1132, inlinedAt: !8845)
!8935 = !DILocation(line: 343, column: 24, scope: !1132, inlinedAt: !8845)
!8936 = !DILocation(line: 343, column: 5, scope: !1132, inlinedAt: !8845)
!8937 = !DILocation(line: 344, column: 14, scope: !1137, inlinedAt: !8845)
!8938 = !DILocation(line: 344, column: 13, scope: !1137, inlinedAt: !8845)
!8939 = !DILocation(line: 344, column: 11, scope: !1137, inlinedAt: !8845)
!8940 = !DILocation(line: 345, column: 13, scope: !1141, inlinedAt: !8845)
!8941 = !DILocation(line: 345, column: 15, scope: !1141, inlinedAt: !8845)
!8942 = !DILocation(line: 345, column: 13, scope: !1137, inlinedAt: !8845)
!8943 = !DILocation(line: 346, column: 22, scope: !1141, inlinedAt: !8845)
!8944 = !DILocation(line: 346, column: 20, scope: !1141, inlinedAt: !8845)
!8945 = !DILocation(line: 346, column: 15, scope: !1141, inlinedAt: !8845)
!8946 = !DILocation(line: 346, column: 13, scope: !1141, inlinedAt: !8845)
!8947 = !DILocation(line: 343, column: 5, scope: !1149, inlinedAt: !8845)
!8948 = !DILocation(line: 348, column: 12, scope: !1103, inlinedAt: !8845)
!8949 = !DILocation(line: 348, column: 5, scope: !1103, inlinedAt: !8845)
!8950 = !DILocation(line: 349, column: 1, scope: !1103, inlinedAt: !8845)
!8951 = !DILocation(line: 483, column: 55, scope: !8840)
!8952 = !DILocation(line: 483, column: 54, scope: !8840)
!8953 = !DILocation(line: 483, column: 23, scope: !8840)
!8954 = !DILocation(line: 483, column: 5, scope: !8840)
!8955 = !DILocation(line: 483, column: 9, scope: !8840)
!8956 = !DILocation(line: 483, column: 14, scope: !8840)
!8957 = !DILocation(line: 484, column: 16, scope: !8840)
!8958 = !DILocation(line: 484, column: 45, scope: !8840)
!8959 = !DILocation(line: 484, column: 51, scope: !8840)
!8960 = !DILocation(line: 484, column: 25, scope: !8840)
!8961 = !DILocation(line: 340, column: 10, scope: !1127, inlinedAt: !8848)
!8962 = !DILocation(line: 340, column: 9, scope: !1103, inlinedAt: !8848)
!8963 = !DILocation(line: 341, column: 9, scope: !1127, inlinedAt: !8848)
!8964 = !DILocation(line: 343, column: 5, scope: !1103, inlinedAt: !8848)
!8965 = !DILocation(line: 343, column: 22, scope: !1132, inlinedAt: !8848)
!8966 = !DILocation(line: 343, column: 36, scope: !1132, inlinedAt: !8848)
!8967 = !DILocation(line: 343, column: 24, scope: !1132, inlinedAt: !8848)
!8968 = !DILocation(line: 343, column: 5, scope: !1132, inlinedAt: !8848)
!8969 = !DILocation(line: 344, column: 14, scope: !1137, inlinedAt: !8848)
!8970 = !DILocation(line: 344, column: 13, scope: !1137, inlinedAt: !8848)
!8971 = !DILocation(line: 344, column: 11, scope: !1137, inlinedAt: !8848)
!8972 = !DILocation(line: 345, column: 13, scope: !1141, inlinedAt: !8848)
!8973 = !DILocation(line: 345, column: 15, scope: !1141, inlinedAt: !8848)
!8974 = !DILocation(line: 345, column: 13, scope: !1137, inlinedAt: !8848)
!8975 = !DILocation(line: 346, column: 22, scope: !1141, inlinedAt: !8848)
!8976 = !DILocation(line: 346, column: 20, scope: !1141, inlinedAt: !8848)
!8977 = !DILocation(line: 346, column: 15, scope: !1141, inlinedAt: !8848)
!8978 = !DILocation(line: 346, column: 13, scope: !1141, inlinedAt: !8848)
!8979 = !DILocation(line: 343, column: 5, scope: !1149, inlinedAt: !8848)
!8980 = !DILocation(line: 348, column: 12, scope: !1103, inlinedAt: !8848)
!8981 = !DILocation(line: 348, column: 5, scope: !1103, inlinedAt: !8848)
!8982 = !DILocation(line: 349, column: 1, scope: !1103, inlinedAt: !8848)
!8983 = !DILocation(line: 484, column: 55, scope: !8840)
!8984 = !DILocation(line: 484, column: 54, scope: !8840)
!8985 = !DILocation(line: 484, column: 23, scope: !8840)
!8986 = !DILocation(line: 484, column: 5, scope: !8840)
!8987 = !DILocation(line: 484, column: 9, scope: !8840)
!8988 = !DILocation(line: 484, column: 14, scope: !8840)
!8989 = !DILocation(line: 485, column: 5, scope: !8840)
!8990 = !DILocation(line: 485, column: 9, scope: !8840)
!8991 = !DILocation(line: 485, column: 11, scope: !8840)
!8992 = !DILocation(line: 486, column: 1, scope: !8840)
!8993 = distinct !DISubprogram(name: "spatial_compose_dd97i_dy_12bit", scope: !174, file: !174, line: 339, type: !1596, isLocal: true, isDefinition: true, scopeLine: 340, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!8994 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !8995)
!8995 = distinct !DILocation(line: 350, column: 24, scope: !8993)
!8996 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !8995)
!8997 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !8995)
!8998 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !8999)
!8999 = distinct !DILocation(line: 349, column: 24, scope: !8993)
!9000 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !8999)
!9001 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !8999)
!9002 = !DILocalVariable(name: "d", arg: 1, scope: !8993, file: !174, line: 339, type: !37)
!9003 = !DILocation(line: 339, column: 56, scope: !8993)
!9004 = !DILocalVariable(name: "level", arg: 2, scope: !8993, file: !174, line: 339, type: !18)
!9005 = !DILocation(line: 339, column: 63, scope: !8993)
!9006 = !DILocalVariable(name: "width", arg: 3, scope: !8993, file: !174, line: 339, type: !18)
!9007 = !DILocation(line: 339, column: 74, scope: !8993)
!9008 = !DILocalVariable(name: "height", arg: 4, scope: !8993, file: !174, line: 339, type: !18)
!9009 = !DILocation(line: 339, column: 85, scope: !8993)
!9010 = !DILocalVariable(name: "stride", arg: 5, scope: !8993, file: !174, line: 339, type: !18)
!9011 = !DILocation(line: 339, column: 97, scope: !8993)
!9012 = !DILocalVariable(name: "vertical_compose_l0", scope: !8993, file: !174, line: 341, type: !1617)
!9013 = !DILocation(line: 341, column: 27, scope: !8993)
!9014 = !DILocation(line: 341, column: 56, scope: !8993)
!9015 = !DILocation(line: 341, column: 59, scope: !8993)
!9016 = !DILocation(line: 341, column: 49, scope: !8993)
!9017 = !DILocalVariable(name: "vertical_compose_h0", scope: !8993, file: !174, line: 342, type: !1626)
!9018 = !DILocation(line: 342, column: 27, scope: !8993)
!9019 = !DILocation(line: 342, column: 56, scope: !8993)
!9020 = !DILocation(line: 342, column: 59, scope: !8993)
!9021 = !DILocation(line: 342, column: 49, scope: !8993)
!9022 = !DILocalVariable(name: "cs", scope: !8993, file: !174, line: 343, type: !903)
!9023 = !DILocation(line: 343, column: 17, scope: !8993)
!9024 = !DILocation(line: 343, column: 22, scope: !8993)
!9025 = !DILocation(line: 343, column: 25, scope: !8993)
!9026 = !DILocation(line: 343, column: 30, scope: !8993)
!9027 = !DILocation(line: 343, column: 28, scope: !8993)
!9028 = !DILocalVariable(name: "i", scope: !8993, file: !174, line: 345, type: !18)
!9029 = !DILocation(line: 345, column: 9, scope: !8993)
!9030 = !DILocalVariable(name: "y", scope: !8993, file: !174, line: 345, type: !18)
!9031 = !DILocation(line: 345, column: 12, scope: !8993)
!9032 = !DILocation(line: 345, column: 16, scope: !8993)
!9033 = !DILocation(line: 345, column: 20, scope: !8993)
!9034 = !DILocalVariable(name: "b", scope: !8993, file: !174, line: 346, type: !71)
!9035 = !DILocation(line: 346, column: 14, scope: !8993)
!9036 = !DILocation(line: 347, column: 12, scope: !9037)
!9037 = distinct !DILexicalBlock(scope: !8993, file: !174, line: 347, column: 5)
!9038 = !DILocation(line: 347, column: 10, scope: !9037)
!9039 = !DILocation(line: 347, column: 17, scope: !9040)
!9040 = !DILexicalBlockFile(scope: !9041, file: !174, discriminator: 1)
!9041 = distinct !DILexicalBlock(scope: !9037, file: !174, line: 347, column: 5)
!9042 = !DILocation(line: 347, column: 19, scope: !9040)
!9043 = !DILocation(line: 347, column: 5, scope: !9040)
!9044 = !DILocation(line: 348, column: 22, scope: !9041)
!9045 = !DILocation(line: 348, column: 16, scope: !9041)
!9046 = !DILocation(line: 348, column: 20, scope: !9041)
!9047 = !DILocation(line: 348, column: 11, scope: !9041)
!9048 = !DILocation(line: 348, column: 9, scope: !9041)
!9049 = !DILocation(line: 348, column: 14, scope: !9041)
!9050 = !DILocation(line: 347, column: 25, scope: !9051)
!9051 = !DILexicalBlockFile(scope: !9041, file: !174, discriminator: 2)
!9052 = !DILocation(line: 347, column: 5, scope: !9051)
!9053 = distinct !{!9053, !9054}
!9054 = !DILocation(line: 347, column: 5, scope: !8993)
!9055 = !DILocation(line: 349, column: 12, scope: !8993)
!9056 = !DILocation(line: 349, column: 15, scope: !8993)
!9057 = !DILocation(line: 349, column: 34, scope: !8993)
!9058 = !DILocation(line: 349, column: 35, scope: !8993)
!9059 = !DILocation(line: 349, column: 42, scope: !8993)
!9060 = !DILocation(line: 349, column: 48, scope: !8993)
!9061 = !DILocation(line: 349, column: 24, scope: !8993)
!9062 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !8999)
!9063 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !8999)
!9064 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !8999)
!9065 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !8999)
!9066 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !8999)
!9067 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !8999)
!9068 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !8999)
!9069 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !8999)
!9070 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !8999)
!9071 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !8999)
!9072 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !8999)
!9073 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !8999)
!9074 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !8999)
!9075 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !8999)
!9076 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !8999)
!9077 = !DILocation(line: 349, column: 52, scope: !8993)
!9078 = !DILocation(line: 349, column: 51, scope: !8993)
!9079 = !DILocation(line: 349, column: 22, scope: !8993)
!9080 = !DILocation(line: 349, column: 5, scope: !8993)
!9081 = !DILocation(line: 349, column: 10, scope: !8993)
!9082 = !DILocation(line: 350, column: 12, scope: !8993)
!9083 = !DILocation(line: 350, column: 15, scope: !8993)
!9084 = !DILocation(line: 350, column: 34, scope: !8993)
!9085 = !DILocation(line: 350, column: 35, scope: !8993)
!9086 = !DILocation(line: 350, column: 42, scope: !8993)
!9087 = !DILocation(line: 350, column: 48, scope: !8993)
!9088 = !DILocation(line: 350, column: 24, scope: !8993)
!9089 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !8995)
!9090 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !8995)
!9091 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !8995)
!9092 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !8995)
!9093 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !8995)
!9094 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !8995)
!9095 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !8995)
!9096 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !8995)
!9097 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !8995)
!9098 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !8995)
!9099 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !8995)
!9100 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !8995)
!9101 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !8995)
!9102 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !8995)
!9103 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !8995)
!9104 = !DILocation(line: 350, column: 52, scope: !8993)
!9105 = !DILocation(line: 350, column: 51, scope: !8993)
!9106 = !DILocation(line: 350, column: 22, scope: !8993)
!9107 = !DILocation(line: 350, column: 5, scope: !8993)
!9108 = !DILocation(line: 350, column: 10, scope: !8993)
!9109 = !DILocation(line: 352, column: 8, scope: !9110)
!9110 = distinct !DILexicalBlock(scope: !8993, file: !174, line: 352, column: 8)
!9111 = !DILocation(line: 352, column: 9, scope: !9110)
!9112 = !DILocation(line: 352, column: 22, scope: !9110)
!9113 = !DILocation(line: 352, column: 11, scope: !9110)
!9114 = !DILocation(line: 352, column: 8, scope: !8993)
!9115 = !DILocation(line: 352, column: 30, scope: !9116)
!9116 = !DILexicalBlockFile(scope: !9110, file: !174, discriminator: 1)
!9117 = !DILocation(line: 352, column: 51, scope: !9116)
!9118 = !DILocation(line: 352, column: 57, scope: !9116)
!9119 = !DILocation(line: 352, column: 63, scope: !9116)
!9120 = !DILocation(line: 352, column: 69, scope: !9116)
!9121 = !DILocation(line: 353, column: 8, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !8993, file: !174, line: 353, column: 8)
!9123 = !DILocation(line: 353, column: 9, scope: !9122)
!9124 = !DILocation(line: 353, column: 22, scope: !9122)
!9125 = !DILocation(line: 353, column: 11, scope: !9122)
!9126 = !DILocation(line: 353, column: 8, scope: !8993)
!9127 = !DILocation(line: 353, column: 30, scope: !9128)
!9128 = !DILexicalBlockFile(scope: !9122, file: !174, discriminator: 1)
!9129 = !DILocation(line: 353, column: 50, scope: !9128)
!9130 = !DILocation(line: 353, column: 56, scope: !9128)
!9131 = !DILocation(line: 353, column: 62, scope: !9128)
!9132 = !DILocation(line: 353, column: 68, scope: !9128)
!9133 = !DILocation(line: 353, column: 74, scope: !9128)
!9134 = !DILocation(line: 353, column: 80, scope: !9128)
!9135 = !DILocation(line: 355, column: 8, scope: !9136)
!9136 = distinct !DILexicalBlock(scope: !8993, file: !174, line: 355, column: 8)
!9137 = !DILocation(line: 355, column: 9, scope: !9136)
!9138 = !DILocation(line: 355, column: 22, scope: !9136)
!9139 = !DILocation(line: 355, column: 11, scope: !9136)
!9140 = !DILocation(line: 355, column: 8, scope: !8993)
!9141 = !DILocation(line: 355, column: 30, scope: !9142)
!9142 = !DILexicalBlockFile(scope: !9136, file: !174, discriminator: 1)
!9143 = !DILocation(line: 355, column: 33, scope: !9142)
!9144 = !DILocation(line: 355, column: 52, scope: !9142)
!9145 = !DILocation(line: 355, column: 58, scope: !9142)
!9146 = !DILocation(line: 355, column: 61, scope: !9142)
!9147 = !DILocation(line: 355, column: 67, scope: !9142)
!9148 = !DILocation(line: 356, column: 8, scope: !9149)
!9149 = distinct !DILexicalBlock(scope: !8993, file: !174, line: 356, column: 8)
!9150 = !DILocation(line: 356, column: 9, scope: !9149)
!9151 = !DILocation(line: 356, column: 22, scope: !9149)
!9152 = !DILocation(line: 356, column: 11, scope: !9149)
!9153 = !DILocation(line: 356, column: 8, scope: !8993)
!9154 = !DILocation(line: 356, column: 30, scope: !9155)
!9155 = !DILexicalBlockFile(scope: !9149, file: !174, discriminator: 1)
!9156 = !DILocation(line: 356, column: 33, scope: !9155)
!9157 = !DILocation(line: 356, column: 52, scope: !9155)
!9158 = !DILocation(line: 356, column: 58, scope: !9155)
!9159 = !DILocation(line: 356, column: 61, scope: !9155)
!9160 = !DILocation(line: 356, column: 67, scope: !9155)
!9161 = !DILocation(line: 358, column: 12, scope: !9162)
!9162 = distinct !DILexicalBlock(scope: !8993, file: !174, line: 358, column: 5)
!9163 = !DILocation(line: 358, column: 10, scope: !9162)
!9164 = !DILocation(line: 358, column: 17, scope: !9165)
!9165 = !DILexicalBlockFile(scope: !9166, file: !174, discriminator: 1)
!9166 = distinct !DILexicalBlock(scope: !9162, file: !174, line: 358, column: 5)
!9167 = !DILocation(line: 358, column: 19, scope: !9165)
!9168 = !DILocation(line: 358, column: 5, scope: !9165)
!9169 = !DILocation(line: 359, column: 22, scope: !9166)
!9170 = !DILocation(line: 359, column: 23, scope: !9166)
!9171 = !DILocation(line: 359, column: 20, scope: !9166)
!9172 = !DILocation(line: 359, column: 15, scope: !9166)
!9173 = !DILocation(line: 359, column: 9, scope: !9166)
!9174 = !DILocation(line: 359, column: 13, scope: !9166)
!9175 = !DILocation(line: 359, column: 18, scope: !9166)
!9176 = !DILocation(line: 358, column: 25, scope: !9177)
!9177 = !DILexicalBlockFile(scope: !9166, file: !174, discriminator: 2)
!9178 = !DILocation(line: 358, column: 5, scope: !9177)
!9179 = distinct !{!9179, !9180}
!9180 = !DILocation(line: 358, column: 5, scope: !8993)
!9181 = !DILocation(line: 360, column: 5, scope: !8993)
!9182 = !DILocation(line: 360, column: 9, scope: !8993)
!9183 = !DILocation(line: 360, column: 11, scope: !8993)
!9184 = !DILocation(line: 361, column: 1, scope: !8993)
!9185 = distinct !DISubprogram(name: "vertical_compose53iL0_12bit", scope: !174, file: !174, line: 44, type: !1619, isLocal: true, isDefinition: true, scopeLine: 46, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!9186 = !DILocalVariable(name: "_b0", arg: 1, scope: !9185, file: !174, line: 44, type: !20)
!9187 = !DILocation(line: 44, column: 50, scope: !9185)
!9188 = !DILocalVariable(name: "_b1", arg: 2, scope: !9185, file: !174, line: 44, type: !20)
!9189 = !DILocation(line: 44, column: 64, scope: !9185)
!9190 = !DILocalVariable(name: "_b2", arg: 3, scope: !9185, file: !174, line: 44, type: !20)
!9191 = !DILocation(line: 44, column: 78, scope: !9185)
!9192 = !DILocalVariable(name: "width", arg: 4, scope: !9185, file: !174, line: 45, type: !18)
!9193 = !DILocation(line: 45, column: 47, scope: !9185)
!9194 = !DILocalVariable(name: "i", scope: !9185, file: !174, line: 47, type: !18)
!9195 = !DILocation(line: 47, column: 9, scope: !9185)
!9196 = !DILocalVariable(name: "b0", scope: !9185, file: !174, line: 48, type: !28)
!9197 = !DILocation(line: 48, column: 14, scope: !9185)
!9198 = !DILocation(line: 48, column: 30, scope: !9185)
!9199 = !DILocation(line: 48, column: 19, scope: !9185)
!9200 = !DILocalVariable(name: "b1", scope: !9185, file: !174, line: 49, type: !28)
!9201 = !DILocation(line: 49, column: 14, scope: !9185)
!9202 = !DILocation(line: 49, column: 30, scope: !9185)
!9203 = !DILocation(line: 49, column: 19, scope: !9185)
!9204 = !DILocalVariable(name: "b2", scope: !9185, file: !174, line: 50, type: !28)
!9205 = !DILocation(line: 50, column: 14, scope: !9185)
!9206 = !DILocation(line: 50, column: 30, scope: !9185)
!9207 = !DILocation(line: 50, column: 19, scope: !9185)
!9208 = !DILocation(line: 51, column: 12, scope: !9209)
!9209 = distinct !DILexicalBlock(scope: !9185, file: !174, line: 51, column: 5)
!9210 = !DILocation(line: 51, column: 10, scope: !9209)
!9211 = !DILocation(line: 51, column: 17, scope: !9212)
!9212 = !DILexicalBlockFile(scope: !9213, file: !174, discriminator: 1)
!9213 = distinct !DILexicalBlock(scope: !9209, file: !174, line: 51, column: 5)
!9214 = !DILocation(line: 51, column: 21, scope: !9212)
!9215 = !DILocation(line: 51, column: 19, scope: !9212)
!9216 = !DILocation(line: 51, column: 5, scope: !9212)
!9217 = !DILocation(line: 52, column: 38, scope: !9213)
!9218 = !DILocation(line: 52, column: 35, scope: !9213)
!9219 = !DILocation(line: 52, column: 56, scope: !9213)
!9220 = !DILocation(line: 52, column: 53, scope: !9213)
!9221 = !DILocation(line: 52, column: 41, scope: !9213)
!9222 = !DILocation(line: 52, column: 59, scope: !9213)
!9223 = !DILocation(line: 52, column: 64, scope: !9213)
!9224 = !DILocation(line: 52, column: 12, scope: !9213)
!9225 = !DILocation(line: 52, column: 9, scope: !9213)
!9226 = !DILocation(line: 52, column: 15, scope: !9213)
!9227 = !DILocation(line: 51, column: 29, scope: !9228)
!9228 = !DILexicalBlockFile(scope: !9213, file: !174, discriminator: 2)
!9229 = !DILocation(line: 51, column: 5, scope: !9228)
!9230 = distinct !{!9230, !9231}
!9231 = !DILocation(line: 51, column: 5, scope: !9185)
!9232 = !DILocation(line: 53, column: 1, scope: !9185)
!9233 = distinct !DISubprogram(name: "vertical_compose_dd97iH0_12bit", scope: !174, file: !174, line: 216, type: !1628, isLocal: true, isDefinition: true, scopeLine: 218, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!9234 = !DILocalVariable(name: "_b0", arg: 1, scope: !9233, file: !174, line: 216, type: !20)
!9235 = !DILocation(line: 216, column: 53, scope: !9233)
!9236 = !DILocalVariable(name: "_b1", arg: 2, scope: !9233, file: !174, line: 216, type: !20)
!9237 = !DILocation(line: 216, column: 67, scope: !9233)
!9238 = !DILocalVariable(name: "_b2", arg: 3, scope: !9233, file: !174, line: 216, type: !20)
!9239 = !DILocation(line: 216, column: 81, scope: !9233)
!9240 = !DILocalVariable(name: "_b3", arg: 4, scope: !9233, file: !174, line: 217, type: !20)
!9241 = !DILocation(line: 217, column: 55, scope: !9233)
!9242 = !DILocalVariable(name: "_b4", arg: 5, scope: !9233, file: !174, line: 217, type: !20)
!9243 = !DILocation(line: 217, column: 69, scope: !9233)
!9244 = !DILocalVariable(name: "width", arg: 6, scope: !9233, file: !174, line: 217, type: !18)
!9245 = !DILocation(line: 217, column: 78, scope: !9233)
!9246 = !DILocalVariable(name: "i", scope: !9233, file: !174, line: 219, type: !18)
!9247 = !DILocation(line: 219, column: 9, scope: !9233)
!9248 = !DILocalVariable(name: "b0", scope: !9233, file: !174, line: 220, type: !28)
!9249 = !DILocation(line: 220, column: 14, scope: !9233)
!9250 = !DILocation(line: 220, column: 30, scope: !9233)
!9251 = !DILocation(line: 220, column: 19, scope: !9233)
!9252 = !DILocalVariable(name: "b1", scope: !9233, file: !174, line: 221, type: !28)
!9253 = !DILocation(line: 221, column: 14, scope: !9233)
!9254 = !DILocation(line: 221, column: 30, scope: !9233)
!9255 = !DILocation(line: 221, column: 19, scope: !9233)
!9256 = !DILocalVariable(name: "b2", scope: !9233, file: !174, line: 222, type: !28)
!9257 = !DILocation(line: 222, column: 14, scope: !9233)
!9258 = !DILocation(line: 222, column: 30, scope: !9233)
!9259 = !DILocation(line: 222, column: 19, scope: !9233)
!9260 = !DILocalVariable(name: "b3", scope: !9233, file: !174, line: 223, type: !28)
!9261 = !DILocation(line: 223, column: 14, scope: !9233)
!9262 = !DILocation(line: 223, column: 30, scope: !9233)
!9263 = !DILocation(line: 223, column: 19, scope: !9233)
!9264 = !DILocalVariable(name: "b4", scope: !9233, file: !174, line: 224, type: !28)
!9265 = !DILocation(line: 224, column: 14, scope: !9233)
!9266 = !DILocation(line: 224, column: 30, scope: !9233)
!9267 = !DILocation(line: 224, column: 19, scope: !9233)
!9268 = !DILocation(line: 225, column: 10, scope: !9269)
!9269 = distinct !DILexicalBlock(scope: !9233, file: !174, line: 225, column: 5)
!9270 = !DILocation(line: 225, column: 9, scope: !9269)
!9271 = !DILocation(line: 225, column: 14, scope: !9272)
!9272 = !DILexicalBlockFile(scope: !9273, file: !174, discriminator: 1)
!9273 = distinct !DILexicalBlock(scope: !9269, file: !174, line: 225, column: 5)
!9274 = !DILocation(line: 225, column: 16, scope: !9272)
!9275 = !DILocation(line: 225, column: 15, scope: !9272)
!9276 = !DILocation(line: 225, column: 5, scope: !9272)
!9277 = !DILocation(line: 226, column: 38, scope: !9278)
!9278 = distinct !DILexicalBlock(scope: !9273, file: !174, line: 225, column: 27)
!9279 = !DILocation(line: 226, column: 35, scope: !9278)
!9280 = !DILocation(line: 226, column: 57, scope: !9278)
!9281 = !DILocation(line: 226, column: 54, scope: !9278)
!9282 = !DILocation(line: 226, column: 53, scope: !9278)
!9283 = !DILocation(line: 226, column: 68, scope: !9278)
!9284 = !DILocation(line: 226, column: 65, scope: !9278)
!9285 = !DILocation(line: 226, column: 64, scope: !9278)
!9286 = !DILocation(line: 226, column: 60, scope: !9278)
!9287 = !DILocation(line: 226, column: 76, scope: !9278)
!9288 = !DILocation(line: 226, column: 73, scope: !9278)
!9289 = !DILocation(line: 226, column: 71, scope: !9278)
!9290 = !DILocation(line: 226, column: 84, scope: !9278)
!9291 = !DILocation(line: 226, column: 81, scope: !9278)
!9292 = !DILocation(line: 226, column: 79, scope: !9278)
!9293 = !DILocation(line: 226, column: 87, scope: !9278)
!9294 = !DILocation(line: 226, column: 92, scope: !9278)
!9295 = !DILocation(line: 226, column: 42, scope: !9278)
!9296 = !DILocation(line: 226, column: 12, scope: !9278)
!9297 = !DILocation(line: 226, column: 9, scope: !9278)
!9298 = !DILocation(line: 226, column: 15, scope: !9278)
!9299 = !DILocation(line: 227, column: 5, scope: !9278)
!9300 = !DILocation(line: 225, column: 24, scope: !9301)
!9301 = !DILexicalBlockFile(scope: !9273, file: !174, discriminator: 2)
!9302 = !DILocation(line: 225, column: 5, scope: !9301)
!9303 = distinct !{!9303, !9304}
!9304 = !DILocation(line: 225, column: 5, scope: !9233)
!9305 = !DILocation(line: 228, column: 1, scope: !9233)
!9306 = distinct !DISubprogram(name: "horizontal_compose_dd97i_12bit", scope: !174, file: !174, line: 82, type: !63, isLocal: true, isDefinition: true, scopeLine: 83, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!9307 = !DILocalVariable(name: "_b", arg: 1, scope: !9306, file: !174, line: 82, type: !20)
!9308 = !DILocation(line: 82, column: 53, scope: !9306)
!9309 = !DILocalVariable(name: "_tmp", arg: 2, scope: !9306, file: !174, line: 82, type: !20)
!9310 = !DILocation(line: 82, column: 66, scope: !9306)
!9311 = !DILocalVariable(name: "w", arg: 3, scope: !9306, file: !174, line: 82, type: !18)
!9312 = !DILocation(line: 82, column: 76, scope: !9306)
!9313 = !DILocalVariable(name: "x", scope: !9306, file: !174, line: 84, type: !18)
!9314 = !DILocation(line: 84, column: 9, scope: !9306)
!9315 = !DILocalVariable(name: "w2", scope: !9306, file: !174, line: 85, type: !1931)
!9316 = !DILocation(line: 85, column: 15, scope: !9306)
!9317 = !DILocation(line: 85, column: 20, scope: !9306)
!9318 = !DILocation(line: 85, column: 22, scope: !9306)
!9319 = !DILocalVariable(name: "b", scope: !9306, file: !174, line: 86, type: !28)
!9320 = !DILocation(line: 86, column: 14, scope: !9306)
!9321 = !DILocation(line: 86, column: 29, scope: !9306)
!9322 = !DILocation(line: 86, column: 18, scope: !9306)
!9323 = !DILocalVariable(name: "tmp", scope: !9306, file: !174, line: 87, type: !28)
!9324 = !DILocation(line: 87, column: 14, scope: !9306)
!9325 = !DILocation(line: 87, column: 31, scope: !9306)
!9326 = !DILocation(line: 87, column: 20, scope: !9306)
!9327 = !DILocation(line: 89, column: 15, scope: !9306)
!9328 = !DILocation(line: 89, column: 41, scope: !9306)
!9329 = !DILocation(line: 89, column: 39, scope: !9306)
!9330 = !DILocation(line: 89, column: 60, scope: !9306)
!9331 = !DILocation(line: 89, column: 58, scope: !9306)
!9332 = !DILocation(line: 89, column: 45, scope: !9306)
!9333 = !DILocation(line: 89, column: 65, scope: !9306)
!9334 = !DILocation(line: 89, column: 70, scope: !9306)
!9335 = !DILocation(line: 89, column: 20, scope: !9306)
!9336 = !DILocation(line: 89, column: 5, scope: !9306)
!9337 = !DILocation(line: 89, column: 12, scope: !9306)
!9338 = !DILocation(line: 90, column: 12, scope: !9339)
!9339 = distinct !DILexicalBlock(scope: !9306, file: !174, line: 90, column: 5)
!9340 = !DILocation(line: 90, column: 10, scope: !9339)
!9341 = !DILocation(line: 90, column: 17, scope: !9342)
!9342 = !DILexicalBlockFile(scope: !9343, file: !174, discriminator: 1)
!9343 = distinct !DILexicalBlock(scope: !9339, file: !174, line: 90, column: 5)
!9344 = !DILocation(line: 90, column: 21, scope: !9342)
!9345 = !DILocation(line: 90, column: 19, scope: !9342)
!9346 = !DILocation(line: 90, column: 5, scope: !9342)
!9347 = !DILocation(line: 91, column: 21, scope: !9343)
!9348 = !DILocation(line: 91, column: 19, scope: !9343)
!9349 = !DILocation(line: 91, column: 45, scope: !9343)
!9350 = !DILocation(line: 91, column: 47, scope: !9343)
!9351 = !DILocation(line: 91, column: 46, scope: !9343)
!9352 = !DILocation(line: 91, column: 49, scope: !9343)
!9353 = !DILocation(line: 91, column: 43, scope: !9343)
!9354 = !DILocation(line: 91, column: 68, scope: !9343)
!9355 = !DILocation(line: 91, column: 70, scope: !9343)
!9356 = !DILocation(line: 91, column: 69, scope: !9343)
!9357 = !DILocation(line: 91, column: 66, scope: !9343)
!9358 = !DILocation(line: 91, column: 53, scope: !9343)
!9359 = !DILocation(line: 91, column: 75, scope: !9343)
!9360 = !DILocation(line: 91, column: 80, scope: !9343)
!9361 = !DILocation(line: 91, column: 24, scope: !9343)
!9362 = !DILocation(line: 91, column: 13, scope: !9343)
!9363 = !DILocation(line: 91, column: 9, scope: !9343)
!9364 = !DILocation(line: 91, column: 16, scope: !9343)
!9365 = !DILocation(line: 90, column: 26, scope: !9366)
!9366 = !DILexicalBlockFile(scope: !9343, file: !174, discriminator: 2)
!9367 = !DILocation(line: 90, column: 5, scope: !9366)
!9368 = distinct !{!9368, !9369}
!9369 = !DILocation(line: 90, column: 5, scope: !9306)
!9370 = !DILocation(line: 94, column: 15, scope: !9306)
!9371 = !DILocation(line: 94, column: 5, scope: !9306)
!9372 = !DILocation(line: 94, column: 13, scope: !9306)
!9373 = !DILocation(line: 95, column: 31, scope: !9306)
!9374 = !DILocation(line: 95, column: 33, scope: !9306)
!9375 = !DILocation(line: 95, column: 27, scope: !9306)
!9376 = !DILocation(line: 95, column: 21, scope: !9306)
!9377 = !DILocation(line: 95, column: 17, scope: !9306)
!9378 = !DILocation(line: 95, column: 25, scope: !9306)
!9379 = !DILocation(line: 95, column: 9, scope: !9306)
!9380 = !DILocation(line: 95, column: 11, scope: !9306)
!9381 = !DILocation(line: 95, column: 5, scope: !9306)
!9382 = !DILocation(line: 95, column: 15, scope: !9306)
!9383 = !DILocation(line: 97, column: 12, scope: !9384)
!9384 = distinct !DILexicalBlock(scope: !9306, file: !174, line: 97, column: 5)
!9385 = !DILocation(line: 97, column: 10, scope: !9384)
!9386 = !DILocation(line: 97, column: 17, scope: !9387)
!9387 = !DILexicalBlockFile(scope: !9388, file: !174, discriminator: 1)
!9388 = distinct !DILexicalBlock(scope: !9384, file: !174, line: 97, column: 5)
!9389 = !DILocation(line: 97, column: 21, scope: !9387)
!9390 = !DILocation(line: 97, column: 19, scope: !9387)
!9391 = !DILocation(line: 97, column: 5, scope: !9387)
!9392 = !DILocation(line: 98, column: 30, scope: !9393)
!9393 = distinct !DILexicalBlock(scope: !9388, file: !174, line: 97, column: 30)
!9394 = !DILocation(line: 98, column: 26, scope: !9393)
!9395 = !DILocation(line: 98, column: 33, scope: !9393)
!9396 = !DILocation(line: 98, column: 39, scope: !9393)
!9397 = !DILocation(line: 98, column: 13, scope: !9393)
!9398 = !DILocation(line: 98, column: 12, scope: !9393)
!9399 = !DILocation(line: 98, column: 9, scope: !9393)
!9400 = !DILocation(line: 98, column: 17, scope: !9393)
!9401 = !DILocation(line: 99, column: 47, scope: !9393)
!9402 = !DILocation(line: 99, column: 49, scope: !9393)
!9403 = !DILocation(line: 99, column: 48, scope: !9393)
!9404 = !DILocation(line: 99, column: 45, scope: !9393)
!9405 = !DILocation(line: 99, column: 70, scope: !9393)
!9406 = !DILocation(line: 99, column: 66, scope: !9393)
!9407 = !DILocation(line: 99, column: 65, scope: !9393)
!9408 = !DILocation(line: 99, column: 82, scope: !9393)
!9409 = !DILocation(line: 99, column: 83, scope: !9393)
!9410 = !DILocation(line: 99, column: 78, scope: !9393)
!9411 = !DILocation(line: 99, column: 77, scope: !9393)
!9412 = !DILocation(line: 99, column: 73, scope: !9393)
!9413 = !DILocation(line: 99, column: 93, scope: !9393)
!9414 = !DILocation(line: 99, column: 94, scope: !9393)
!9415 = !DILocation(line: 99, column: 89, scope: !9393)
!9416 = !DILocation(line: 99, column: 87, scope: !9393)
!9417 = !DILocation(line: 99, column: 104, scope: !9393)
!9418 = !DILocation(line: 99, column: 105, scope: !9393)
!9419 = !DILocation(line: 99, column: 100, scope: !9393)
!9420 = !DILocation(line: 99, column: 98, scope: !9393)
!9421 = !DILocation(line: 99, column: 109, scope: !9393)
!9422 = !DILocation(line: 99, column: 114, scope: !9393)
!9423 = !DILocation(line: 99, column: 54, scope: !9393)
!9424 = !DILocation(line: 99, column: 122, scope: !9393)
!9425 = !DILocation(line: 99, column: 128, scope: !9393)
!9426 = !DILocation(line: 99, column: 13, scope: !9393)
!9427 = !DILocation(line: 99, column: 12, scope: !9393)
!9428 = !DILocation(line: 99, column: 14, scope: !9393)
!9429 = !DILocation(line: 99, column: 9, scope: !9393)
!9430 = !DILocation(line: 99, column: 18, scope: !9393)
!9431 = !DILocation(line: 100, column: 5, scope: !9393)
!9432 = !DILocation(line: 97, column: 26, scope: !9433)
!9433 = !DILexicalBlockFile(scope: !9388, file: !174, discriminator: 2)
!9434 = !DILocation(line: 97, column: 5, scope: !9433)
!9435 = distinct !{!9435, !9436}
!9436 = !DILocation(line: 97, column: 5, scope: !9306)
!9437 = !DILocation(line: 101, column: 1, scope: !9306)
!9438 = distinct !DISubprogram(name: "spatial_compose_dirac53i_dy_12bit", scope: !174, file: !174, line: 363, type: !1596, isLocal: true, isDefinition: true, scopeLine: 364, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!9439 = !DILocation(line: 338, column: 91, scope: !1103, inlinedAt: !9440)
!9440 = distinct !DILocation(line: 372, column: 24, scope: !9438)
!9441 = !DILocation(line: 338, column: 98, scope: !1103, inlinedAt: !9440)
!9442 = !DILocation(line: 338, column: 91, scope: !1103, inlinedAt: !9443)
!9443 = distinct !DILocation(line: 371, column: 24, scope: !9438)
!9444 = !DILocation(line: 338, column: 98, scope: !1103, inlinedAt: !9443)
!9445 = !DILocalVariable(name: "d", arg: 1, scope: !9438, file: !174, line: 363, type: !37)
!9446 = !DILocation(line: 363, column: 59, scope: !9438)
!9447 = !DILocalVariable(name: "level", arg: 2, scope: !9438, file: !174, line: 363, type: !18)
!9448 = !DILocation(line: 363, column: 66, scope: !9438)
!9449 = !DILocalVariable(name: "width", arg: 3, scope: !9438, file: !174, line: 363, type: !18)
!9450 = !DILocation(line: 363, column: 77, scope: !9438)
!9451 = !DILocalVariable(name: "height", arg: 4, scope: !9438, file: !174, line: 363, type: !18)
!9452 = !DILocation(line: 363, column: 88, scope: !9438)
!9453 = !DILocalVariable(name: "stride", arg: 5, scope: !9438, file: !174, line: 363, type: !18)
!9454 = !DILocation(line: 363, column: 100, scope: !9438)
!9455 = !DILocalVariable(name: "vertical_compose_l0", scope: !9438, file: !174, line: 365, type: !1617)
!9456 = !DILocation(line: 365, column: 27, scope: !9438)
!9457 = !DILocation(line: 365, column: 56, scope: !9438)
!9458 = !DILocation(line: 365, column: 59, scope: !9438)
!9459 = !DILocation(line: 365, column: 49, scope: !9438)
!9460 = !DILocalVariable(name: "vertical_compose_h0", scope: !9438, file: !174, line: 366, type: !1617)
!9461 = !DILocation(line: 366, column: 27, scope: !9438)
!9462 = !DILocation(line: 366, column: 56, scope: !9438)
!9463 = !DILocation(line: 366, column: 59, scope: !9438)
!9464 = !DILocation(line: 366, column: 49, scope: !9438)
!9465 = !DILocalVariable(name: "cs", scope: !9438, file: !174, line: 367, type: !903)
!9466 = !DILocation(line: 367, column: 17, scope: !9438)
!9467 = !DILocation(line: 367, column: 22, scope: !9438)
!9468 = !DILocation(line: 367, column: 25, scope: !9438)
!9469 = !DILocation(line: 367, column: 30, scope: !9438)
!9470 = !DILocation(line: 367, column: 28, scope: !9438)
!9471 = !DILocalVariable(name: "y", scope: !9438, file: !174, line: 369, type: !18)
!9472 = !DILocation(line: 369, column: 9, scope: !9438)
!9473 = !DILocation(line: 369, column: 12, scope: !9438)
!9474 = !DILocation(line: 369, column: 16, scope: !9438)
!9475 = !DILocalVariable(name: "b", scope: !9438, file: !174, line: 370, type: !2099)
!9476 = !DILocation(line: 370, column: 14, scope: !9438)
!9477 = !DILocation(line: 370, column: 21, scope: !9438)
!9478 = !DILocation(line: 370, column: 23, scope: !9438)
!9479 = !DILocation(line: 370, column: 27, scope: !9438)
!9480 = !DILocation(line: 370, column: 33, scope: !9438)
!9481 = !DILocation(line: 370, column: 37, scope: !9438)
!9482 = !DILocation(line: 370, column: 21, scope: !9483)
!9483 = !DILexicalBlockFile(scope: !9438, file: !174, discriminator: 1)
!9484 = !DILocation(line: 371, column: 12, scope: !9438)
!9485 = !DILocation(line: 371, column: 15, scope: !9438)
!9486 = !DILocation(line: 371, column: 38, scope: !9438)
!9487 = !DILocation(line: 371, column: 39, scope: !9438)
!9488 = !DILocation(line: 371, column: 43, scope: !9438)
!9489 = !DILocation(line: 371, column: 49, scope: !9438)
!9490 = !DILocation(line: 371, column: 24, scope: !9438)
!9491 = !DILocation(line: 340, column: 10, scope: !1127, inlinedAt: !9443)
!9492 = !DILocation(line: 340, column: 9, scope: !1103, inlinedAt: !9443)
!9493 = !DILocation(line: 341, column: 9, scope: !1127, inlinedAt: !9443)
!9494 = !DILocation(line: 343, column: 5, scope: !1103, inlinedAt: !9443)
!9495 = !DILocation(line: 343, column: 22, scope: !1132, inlinedAt: !9443)
!9496 = !DILocation(line: 343, column: 36, scope: !1132, inlinedAt: !9443)
!9497 = !DILocation(line: 343, column: 24, scope: !1132, inlinedAt: !9443)
!9498 = !DILocation(line: 343, column: 5, scope: !1132, inlinedAt: !9443)
!9499 = !DILocation(line: 344, column: 14, scope: !1137, inlinedAt: !9443)
!9500 = !DILocation(line: 344, column: 13, scope: !1137, inlinedAt: !9443)
!9501 = !DILocation(line: 344, column: 11, scope: !1137, inlinedAt: !9443)
!9502 = !DILocation(line: 345, column: 13, scope: !1141, inlinedAt: !9443)
!9503 = !DILocation(line: 345, column: 15, scope: !1141, inlinedAt: !9443)
!9504 = !DILocation(line: 345, column: 13, scope: !1137, inlinedAt: !9443)
!9505 = !DILocation(line: 346, column: 22, scope: !1141, inlinedAt: !9443)
!9506 = !DILocation(line: 346, column: 20, scope: !1141, inlinedAt: !9443)
!9507 = !DILocation(line: 346, column: 15, scope: !1141, inlinedAt: !9443)
!9508 = !DILocation(line: 346, column: 13, scope: !1141, inlinedAt: !9443)
!9509 = !DILocation(line: 343, column: 5, scope: !1149, inlinedAt: !9443)
!9510 = !DILocation(line: 348, column: 12, scope: !1103, inlinedAt: !9443)
!9511 = !DILocation(line: 348, column: 5, scope: !1103, inlinedAt: !9443)
!9512 = !DILocation(line: 349, column: 1, scope: !1103, inlinedAt: !9443)
!9513 = !DILocation(line: 371, column: 53, scope: !9438)
!9514 = !DILocation(line: 371, column: 52, scope: !9438)
!9515 = !DILocation(line: 371, column: 22, scope: !9438)
!9516 = !DILocation(line: 371, column: 5, scope: !9438)
!9517 = !DILocation(line: 371, column: 10, scope: !9438)
!9518 = !DILocation(line: 372, column: 12, scope: !9438)
!9519 = !DILocation(line: 372, column: 15, scope: !9438)
!9520 = !DILocation(line: 372, column: 38, scope: !9438)
!9521 = !DILocation(line: 372, column: 39, scope: !9438)
!9522 = !DILocation(line: 372, column: 43, scope: !9438)
!9523 = !DILocation(line: 372, column: 49, scope: !9438)
!9524 = !DILocation(line: 372, column: 24, scope: !9438)
!9525 = !DILocation(line: 340, column: 10, scope: !1127, inlinedAt: !9440)
!9526 = !DILocation(line: 340, column: 9, scope: !1103, inlinedAt: !9440)
!9527 = !DILocation(line: 341, column: 9, scope: !1127, inlinedAt: !9440)
!9528 = !DILocation(line: 343, column: 5, scope: !1103, inlinedAt: !9440)
!9529 = !DILocation(line: 343, column: 22, scope: !1132, inlinedAt: !9440)
!9530 = !DILocation(line: 343, column: 36, scope: !1132, inlinedAt: !9440)
!9531 = !DILocation(line: 343, column: 24, scope: !1132, inlinedAt: !9440)
!9532 = !DILocation(line: 343, column: 5, scope: !1132, inlinedAt: !9440)
!9533 = !DILocation(line: 344, column: 14, scope: !1137, inlinedAt: !9440)
!9534 = !DILocation(line: 344, column: 13, scope: !1137, inlinedAt: !9440)
!9535 = !DILocation(line: 344, column: 11, scope: !1137, inlinedAt: !9440)
!9536 = !DILocation(line: 345, column: 13, scope: !1141, inlinedAt: !9440)
!9537 = !DILocation(line: 345, column: 15, scope: !1141, inlinedAt: !9440)
!9538 = !DILocation(line: 345, column: 13, scope: !1137, inlinedAt: !9440)
!9539 = !DILocation(line: 346, column: 22, scope: !1141, inlinedAt: !9440)
!9540 = !DILocation(line: 346, column: 20, scope: !1141, inlinedAt: !9440)
!9541 = !DILocation(line: 346, column: 15, scope: !1141, inlinedAt: !9440)
!9542 = !DILocation(line: 346, column: 13, scope: !1141, inlinedAt: !9440)
!9543 = !DILocation(line: 343, column: 5, scope: !1149, inlinedAt: !9440)
!9544 = !DILocation(line: 348, column: 12, scope: !1103, inlinedAt: !9440)
!9545 = !DILocation(line: 348, column: 5, scope: !1103, inlinedAt: !9440)
!9546 = !DILocation(line: 349, column: 1, scope: !1103, inlinedAt: !9440)
!9547 = !DILocation(line: 372, column: 53, scope: !9438)
!9548 = !DILocation(line: 372, column: 52, scope: !9438)
!9549 = !DILocation(line: 372, column: 22, scope: !9438)
!9550 = !DILocation(line: 372, column: 5, scope: !9438)
!9551 = !DILocation(line: 372, column: 10, scope: !9438)
!9552 = !DILocation(line: 374, column: 8, scope: !9553)
!9553 = distinct !DILexicalBlock(scope: !9438, file: !174, line: 374, column: 8)
!9554 = !DILocation(line: 374, column: 9, scope: !9553)
!9555 = !DILocation(line: 374, column: 22, scope: !9553)
!9556 = !DILocation(line: 374, column: 11, scope: !9553)
!9557 = !DILocation(line: 374, column: 8, scope: !9438)
!9558 = !DILocation(line: 374, column: 30, scope: !9559)
!9559 = !DILexicalBlockFile(scope: !9553, file: !174, discriminator: 1)
!9560 = !DILocation(line: 374, column: 50, scope: !9559)
!9561 = !DILocation(line: 374, column: 56, scope: !9559)
!9562 = !DILocation(line: 374, column: 62, scope: !9559)
!9563 = !DILocation(line: 374, column: 68, scope: !9559)
!9564 = !DILocation(line: 375, column: 8, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9438, file: !174, line: 375, column: 8)
!9566 = !DILocation(line: 375, column: 9, scope: !9565)
!9567 = !DILocation(line: 375, column: 22, scope: !9565)
!9568 = !DILocation(line: 375, column: 11, scope: !9565)
!9569 = !DILocation(line: 375, column: 8, scope: !9438)
!9570 = !DILocation(line: 375, column: 30, scope: !9571)
!9571 = !DILexicalBlockFile(scope: !9565, file: !174, discriminator: 1)
!9572 = !DILocation(line: 375, column: 50, scope: !9571)
!9573 = !DILocation(line: 375, column: 56, scope: !9571)
!9574 = !DILocation(line: 375, column: 62, scope: !9571)
!9575 = !DILocation(line: 375, column: 68, scope: !9571)
!9576 = !DILocation(line: 377, column: 8, scope: !9577)
!9577 = distinct !DILexicalBlock(scope: !9438, file: !174, line: 377, column: 8)
!9578 = !DILocation(line: 377, column: 9, scope: !9577)
!9579 = !DILocation(line: 377, column: 22, scope: !9577)
!9580 = !DILocation(line: 377, column: 11, scope: !9577)
!9581 = !DILocation(line: 377, column: 8, scope: !9438)
!9582 = !DILocation(line: 377, column: 30, scope: !9583)
!9583 = !DILexicalBlockFile(scope: !9577, file: !174, discriminator: 1)
!9584 = !DILocation(line: 377, column: 33, scope: !9583)
!9585 = !DILocation(line: 377, column: 52, scope: !9583)
!9586 = !DILocation(line: 377, column: 58, scope: !9583)
!9587 = !DILocation(line: 377, column: 61, scope: !9583)
!9588 = !DILocation(line: 377, column: 67, scope: !9583)
!9589 = !DILocation(line: 378, column: 8, scope: !9590)
!9590 = distinct !DILexicalBlock(scope: !9438, file: !174, line: 378, column: 8)
!9591 = !DILocation(line: 378, column: 9, scope: !9590)
!9592 = !DILocation(line: 378, column: 22, scope: !9590)
!9593 = !DILocation(line: 378, column: 11, scope: !9590)
!9594 = !DILocation(line: 378, column: 8, scope: !9438)
!9595 = !DILocation(line: 378, column: 30, scope: !9596)
!9596 = !DILexicalBlockFile(scope: !9590, file: !174, discriminator: 1)
!9597 = !DILocation(line: 378, column: 33, scope: !9596)
!9598 = !DILocation(line: 378, column: 52, scope: !9596)
!9599 = !DILocation(line: 378, column: 58, scope: !9596)
!9600 = !DILocation(line: 378, column: 61, scope: !9596)
!9601 = !DILocation(line: 378, column: 67, scope: !9596)
!9602 = !DILocation(line: 380, column: 16, scope: !9438)
!9603 = !DILocation(line: 380, column: 5, scope: !9438)
!9604 = !DILocation(line: 380, column: 9, scope: !9438)
!9605 = !DILocation(line: 380, column: 14, scope: !9438)
!9606 = !DILocation(line: 381, column: 16, scope: !9438)
!9607 = !DILocation(line: 381, column: 5, scope: !9438)
!9608 = !DILocation(line: 381, column: 9, scope: !9438)
!9609 = !DILocation(line: 381, column: 14, scope: !9438)
!9610 = !DILocation(line: 382, column: 5, scope: !9438)
!9611 = !DILocation(line: 382, column: 9, scope: !9438)
!9612 = !DILocation(line: 382, column: 11, scope: !9438)
!9613 = !DILocation(line: 383, column: 1, scope: !9438)
!9614 = distinct !DISubprogram(name: "vertical_compose_dirac53iH0_12bit", scope: !174, file: !174, line: 204, type: !1619, isLocal: true, isDefinition: true, scopeLine: 206, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!9615 = !DILocalVariable(name: "_b0", arg: 1, scope: !9614, file: !174, line: 204, type: !20)
!9616 = !DILocation(line: 204, column: 56, scope: !9614)
!9617 = !DILocalVariable(name: "_b1", arg: 2, scope: !9614, file: !174, line: 204, type: !20)
!9618 = !DILocation(line: 204, column: 70, scope: !9614)
!9619 = !DILocalVariable(name: "_b2", arg: 3, scope: !9614, file: !174, line: 204, type: !20)
!9620 = !DILocation(line: 204, column: 84, scope: !9614)
!9621 = !DILocalVariable(name: "width", arg: 4, scope: !9614, file: !174, line: 205, type: !18)
!9622 = !DILocation(line: 205, column: 53, scope: !9614)
!9623 = !DILocalVariable(name: "i", scope: !9614, file: !174, line: 207, type: !18)
!9624 = !DILocation(line: 207, column: 9, scope: !9614)
!9625 = !DILocalVariable(name: "b0", scope: !9614, file: !174, line: 208, type: !28)
!9626 = !DILocation(line: 208, column: 14, scope: !9614)
!9627 = !DILocation(line: 208, column: 30, scope: !9614)
!9628 = !DILocation(line: 208, column: 19, scope: !9614)
!9629 = !DILocalVariable(name: "b1", scope: !9614, file: !174, line: 209, type: !28)
!9630 = !DILocation(line: 209, column: 14, scope: !9614)
!9631 = !DILocation(line: 209, column: 30, scope: !9614)
!9632 = !DILocation(line: 209, column: 19, scope: !9614)
!9633 = !DILocalVariable(name: "b2", scope: !9614, file: !174, line: 210, type: !28)
!9634 = !DILocation(line: 210, column: 14, scope: !9614)
!9635 = !DILocation(line: 210, column: 30, scope: !9614)
!9636 = !DILocation(line: 210, column: 19, scope: !9614)
!9637 = !DILocation(line: 211, column: 10, scope: !9638)
!9638 = distinct !DILexicalBlock(scope: !9614, file: !174, line: 211, column: 5)
!9639 = !DILocation(line: 211, column: 9, scope: !9638)
!9640 = !DILocation(line: 211, column: 14, scope: !9641)
!9641 = !DILexicalBlockFile(scope: !9642, file: !174, discriminator: 1)
!9642 = distinct !DILexicalBlock(scope: !9638, file: !174, line: 211, column: 5)
!9643 = !DILocation(line: 211, column: 16, scope: !9641)
!9644 = !DILocation(line: 211, column: 15, scope: !9641)
!9645 = !DILocation(line: 211, column: 5, scope: !9641)
!9646 = !DILocation(line: 212, column: 21, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !9642, file: !174, line: 211, column: 27)
!9648 = !DILocation(line: 212, column: 18, scope: !9647)
!9649 = !DILocation(line: 212, column: 46, scope: !9647)
!9650 = !DILocation(line: 212, column: 43, scope: !9647)
!9651 = !DILocation(line: 212, column: 65, scope: !9647)
!9652 = !DILocation(line: 212, column: 62, scope: !9647)
!9653 = !DILocation(line: 212, column: 49, scope: !9647)
!9654 = !DILocation(line: 212, column: 69, scope: !9647)
!9655 = !DILocation(line: 212, column: 74, scope: !9647)
!9656 = !DILocation(line: 212, column: 24, scope: !9647)
!9657 = !DILocation(line: 212, column: 12, scope: !9647)
!9658 = !DILocation(line: 212, column: 9, scope: !9647)
!9659 = !DILocation(line: 212, column: 15, scope: !9647)
!9660 = !DILocation(line: 213, column: 5, scope: !9647)
!9661 = !DILocation(line: 211, column: 24, scope: !9662)
!9662 = !DILexicalBlockFile(scope: !9642, file: !174, discriminator: 2)
!9663 = !DILocation(line: 211, column: 5, scope: !9662)
!9664 = distinct !{!9664, !9665}
!9665 = !DILocation(line: 211, column: 5, scope: !9614)
!9666 = !DILocation(line: 214, column: 1, scope: !9614)
!9667 = distinct !DISubprogram(name: "horizontal_compose_dirac53i_12bit", scope: !174, file: !174, line: 65, type: !63, isLocal: true, isDefinition: true, scopeLine: 66, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!9668 = !DILocalVariable(name: "dst", arg: 1, scope: !9669, file: !174, line: 55, type: !28)
!9669 = distinct !DISubprogram(name: "interleave_12bit", scope: !174, file: !174, line: 55, type: !6036, isLocal: true, isDefinition: true, scopeLine: 57, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!9670 = !DILocation(line: 55, column: 77, scope: !9669, inlinedAt: !9671)
!9671 = distinct !DILocation(line: 79, column: 5, scope: !9667)
!9672 = !DILocalVariable(name: "src0", arg: 2, scope: !9669, file: !174, line: 55, type: !28)
!9673 = !DILocation(line: 55, column: 91, scope: !9669, inlinedAt: !9671)
!9674 = !DILocalVariable(name: "src1", arg: 3, scope: !9669, file: !174, line: 55, type: !28)
!9675 = !DILocation(line: 55, column: 106, scope: !9669, inlinedAt: !9671)
!9676 = !DILocalVariable(name: "w2", arg: 4, scope: !9669, file: !174, line: 55, type: !18)
!9677 = !DILocation(line: 55, column: 116, scope: !9669, inlinedAt: !9671)
!9678 = !DILocalVariable(name: "add", arg: 5, scope: !9669, file: !174, line: 56, type: !18)
!9679 = !DILocation(line: 56, column: 53, scope: !9669, inlinedAt: !9671)
!9680 = !DILocalVariable(name: "shift", arg: 6, scope: !9669, file: !174, line: 56, type: !18)
!9681 = !DILocation(line: 56, column: 62, scope: !9669, inlinedAt: !9671)
!9682 = !DILocalVariable(name: "i", scope: !9669, file: !174, line: 58, type: !18)
!9683 = !DILocation(line: 58, column: 9, scope: !9669, inlinedAt: !9671)
!9684 = !DILocalVariable(name: "_b", arg: 1, scope: !9667, file: !174, line: 65, type: !20)
!9685 = !DILocation(line: 65, column: 56, scope: !9667)
!9686 = !DILocalVariable(name: "_temp", arg: 2, scope: !9667, file: !174, line: 65, type: !20)
!9687 = !DILocation(line: 65, column: 69, scope: !9667)
!9688 = !DILocalVariable(name: "w", arg: 3, scope: !9667, file: !174, line: 65, type: !18)
!9689 = !DILocation(line: 65, column: 80, scope: !9667)
!9690 = !DILocalVariable(name: "x", scope: !9667, file: !174, line: 67, type: !18)
!9691 = !DILocation(line: 67, column: 9, scope: !9667)
!9692 = !DILocalVariable(name: "w2", scope: !9667, file: !174, line: 68, type: !1931)
!9693 = !DILocation(line: 68, column: 15, scope: !9667)
!9694 = !DILocation(line: 68, column: 20, scope: !9667)
!9695 = !DILocation(line: 68, column: 22, scope: !9667)
!9696 = !DILocalVariable(name: "b", scope: !9667, file: !174, line: 69, type: !28)
!9697 = !DILocation(line: 69, column: 14, scope: !9667)
!9698 = !DILocation(line: 69, column: 29, scope: !9667)
!9699 = !DILocation(line: 69, column: 18, scope: !9667)
!9700 = !DILocalVariable(name: "temp", scope: !9667, file: !174, line: 70, type: !28)
!9701 = !DILocation(line: 70, column: 14, scope: !9667)
!9702 = !DILocation(line: 70, column: 32, scope: !9667)
!9703 = !DILocation(line: 70, column: 21, scope: !9667)
!9704 = !DILocation(line: 72, column: 16, scope: !9667)
!9705 = !DILocation(line: 72, column: 42, scope: !9667)
!9706 = !DILocation(line: 72, column: 40, scope: !9667)
!9707 = !DILocation(line: 72, column: 61, scope: !9667)
!9708 = !DILocation(line: 72, column: 59, scope: !9667)
!9709 = !DILocation(line: 72, column: 46, scope: !9667)
!9710 = !DILocation(line: 72, column: 66, scope: !9667)
!9711 = !DILocation(line: 72, column: 71, scope: !9667)
!9712 = !DILocation(line: 72, column: 21, scope: !9667)
!9713 = !DILocation(line: 72, column: 5, scope: !9667)
!9714 = !DILocation(line: 72, column: 13, scope: !9667)
!9715 = !DILocation(line: 73, column: 12, scope: !9716)
!9716 = distinct !DILexicalBlock(scope: !9667, file: !174, line: 73, column: 5)
!9717 = !DILocation(line: 73, column: 10, scope: !9716)
!9718 = !DILocation(line: 73, column: 17, scope: !9719)
!9719 = !DILexicalBlockFile(scope: !9720, file: !174, discriminator: 1)
!9720 = distinct !DILexicalBlock(scope: !9716, file: !174, line: 73, column: 5)
!9721 = !DILocation(line: 73, column: 21, scope: !9719)
!9722 = !DILocation(line: 73, column: 19, scope: !9719)
!9723 = !DILocation(line: 73, column: 5, scope: !9719)
!9724 = !DILocation(line: 74, column: 23, scope: !9725)
!9725 = distinct !DILexicalBlock(scope: !9720, file: !174, line: 73, column: 30)
!9726 = !DILocation(line: 74, column: 21, scope: !9725)
!9727 = !DILocation(line: 74, column: 48, scope: !9725)
!9728 = !DILocation(line: 74, column: 50, scope: !9725)
!9729 = !DILocation(line: 74, column: 49, scope: !9725)
!9730 = !DILocation(line: 74, column: 52, scope: !9725)
!9731 = !DILocation(line: 74, column: 46, scope: !9725)
!9732 = !DILocation(line: 74, column: 71, scope: !9725)
!9733 = !DILocation(line: 74, column: 73, scope: !9725)
!9734 = !DILocation(line: 74, column: 72, scope: !9725)
!9735 = !DILocation(line: 74, column: 69, scope: !9725)
!9736 = !DILocation(line: 74, column: 56, scope: !9725)
!9737 = !DILocation(line: 74, column: 78, scope: !9725)
!9738 = !DILocation(line: 74, column: 83, scope: !9725)
!9739 = !DILocation(line: 74, column: 27, scope: !9725)
!9740 = !DILocation(line: 74, column: 14, scope: !9725)
!9741 = !DILocation(line: 74, column: 9, scope: !9725)
!9742 = !DILocation(line: 74, column: 18, scope: !9725)
!9743 = !DILocation(line: 75, column: 27, scope: !9725)
!9744 = !DILocation(line: 75, column: 29, scope: !9725)
!9745 = !DILocation(line: 75, column: 28, scope: !9725)
!9746 = !DILocation(line: 75, column: 31, scope: !9725)
!9747 = !DILocation(line: 75, column: 25, scope: !9725)
!9748 = !DILocation(line: 75, column: 59, scope: !9725)
!9749 = !DILocation(line: 75, column: 60, scope: !9725)
!9750 = !DILocation(line: 75, column: 54, scope: !9725)
!9751 = !DILocation(line: 75, column: 82, scope: !9725)
!9752 = !DILocation(line: 75, column: 77, scope: !9725)
!9753 = !DILocation(line: 75, column: 64, scope: !9725)
!9754 = !DILocation(line: 75, column: 86, scope: !9725)
!9755 = !DILocation(line: 75, column: 91, scope: !9725)
!9756 = !DILocation(line: 75, column: 35, scope: !9725)
!9757 = !DILocation(line: 75, column: 14, scope: !9725)
!9758 = !DILocation(line: 75, column: 16, scope: !9725)
!9759 = !DILocation(line: 75, column: 15, scope: !9725)
!9760 = !DILocation(line: 75, column: 18, scope: !9725)
!9761 = !DILocation(line: 75, column: 9, scope: !9725)
!9762 = !DILocation(line: 75, column: 22, scope: !9725)
!9763 = !DILocation(line: 76, column: 5, scope: !9725)
!9764 = !DILocation(line: 73, column: 26, scope: !9765)
!9765 = !DILexicalBlockFile(scope: !9720, file: !174, discriminator: 2)
!9766 = !DILocation(line: 73, column: 5, scope: !9765)
!9767 = distinct !{!9767, !9768}
!9768 = !DILocation(line: 73, column: 5, scope: !9667)
!9769 = !DILocation(line: 77, column: 20, scope: !9667)
!9770 = !DILocation(line: 77, column: 21, scope: !9667)
!9771 = !DILocation(line: 77, column: 18, scope: !9667)
!9772 = !DILocation(line: 77, column: 49, scope: !9667)
!9773 = !DILocation(line: 77, column: 51, scope: !9667)
!9774 = !DILocation(line: 77, column: 44, scope: !9667)
!9775 = !DILocation(line: 77, column: 73, scope: !9667)
!9776 = !DILocation(line: 77, column: 75, scope: !9667)
!9777 = !DILocation(line: 77, column: 68, scope: !9667)
!9778 = !DILocation(line: 77, column: 55, scope: !9667)
!9779 = !DILocation(line: 77, column: 80, scope: !9667)
!9780 = !DILocation(line: 77, column: 85, scope: !9667)
!9781 = !DILocation(line: 77, column: 25, scope: !9667)
!9782 = !DILocation(line: 77, column: 10, scope: !9667)
!9783 = !DILocation(line: 77, column: 11, scope: !9667)
!9784 = !DILocation(line: 77, column: 5, scope: !9667)
!9785 = !DILocation(line: 77, column: 15, scope: !9667)
!9786 = !DILocation(line: 79, column: 22, scope: !9667)
!9787 = !DILocation(line: 79, column: 25, scope: !9667)
!9788 = !DILocation(line: 79, column: 31, scope: !9667)
!9789 = !DILocation(line: 79, column: 36, scope: !9667)
!9790 = !DILocation(line: 79, column: 35, scope: !9667)
!9791 = !DILocation(line: 79, column: 40, scope: !9667)
!9792 = !DILocation(line: 79, column: 5, scope: !9667)
!9793 = !DILocation(line: 59, column: 12, scope: !9794, inlinedAt: !9671)
!9794 = distinct !DILexicalBlock(scope: !9669, file: !174, line: 59, column: 5)
!9795 = !DILocation(line: 59, column: 10, scope: !9794, inlinedAt: !9671)
!9796 = !DILocation(line: 59, column: 17, scope: !9797, inlinedAt: !9671)
!9797 = !DILexicalBlockFile(scope: !9798, file: !174, discriminator: 1)
!9798 = distinct !DILexicalBlock(scope: !9794, file: !174, line: 59, column: 5)
!9799 = !DILocation(line: 59, column: 21, scope: !9797, inlinedAt: !9671)
!9800 = !DILocation(line: 59, column: 19, scope: !9797, inlinedAt: !9671)
!9801 = !DILocation(line: 59, column: 5, scope: !9797, inlinedAt: !9671)
!9802 = !DILocation(line: 60, column: 33, scope: !9803, inlinedAt: !9671)
!9803 = distinct !DILexicalBlock(scope: !9798, file: !174, line: 59, column: 30)
!9804 = !DILocation(line: 60, column: 28, scope: !9803, inlinedAt: !9671)
!9805 = !DILocation(line: 60, column: 48, scope: !9803, inlinedAt: !9671)
!9806 = !DILocation(line: 60, column: 36, scope: !9803, inlinedAt: !9671)
!9807 = !DILocation(line: 60, column: 57, scope: !9803, inlinedAt: !9671)
!9808 = !DILocation(line: 60, column: 54, scope: !9803, inlinedAt: !9671)
!9809 = !DILocation(line: 60, column: 15, scope: !9803, inlinedAt: !9671)
!9810 = !DILocation(line: 60, column: 14, scope: !9803, inlinedAt: !9671)
!9811 = !DILocation(line: 60, column: 9, scope: !9803, inlinedAt: !9671)
!9812 = !DILocation(line: 60, column: 19, scope: !9803, inlinedAt: !9671)
!9813 = !DILocation(line: 61, column: 34, scope: !9803, inlinedAt: !9671)
!9814 = !DILocation(line: 61, column: 29, scope: !9803, inlinedAt: !9671)
!9815 = !DILocation(line: 61, column: 49, scope: !9803, inlinedAt: !9671)
!9816 = !DILocation(line: 61, column: 37, scope: !9803, inlinedAt: !9671)
!9817 = !DILocation(line: 61, column: 58, scope: !9803, inlinedAt: !9671)
!9818 = !DILocation(line: 61, column: 55, scope: !9803, inlinedAt: !9671)
!9819 = !DILocation(line: 61, column: 15, scope: !9803, inlinedAt: !9671)
!9820 = !DILocation(line: 61, column: 14, scope: !9803, inlinedAt: !9671)
!9821 = !DILocation(line: 61, column: 16, scope: !9803, inlinedAt: !9671)
!9822 = !DILocation(line: 61, column: 9, scope: !9803, inlinedAt: !9671)
!9823 = !DILocation(line: 61, column: 20, scope: !9803, inlinedAt: !9671)
!9824 = !DILocation(line: 59, column: 26, scope: !9825, inlinedAt: !9671)
!9825 = !DILexicalBlockFile(scope: !9798, file: !174, discriminator: 2)
!9826 = !DILocation(line: 59, column: 5, scope: !9825, inlinedAt: !9671)
!9827 = distinct !{!9827, !9828}
!9828 = !DILocation(line: 59, column: 5, scope: !9669)
!9829 = !DILocation(line: 80, column: 1, scope: !9667)
!9830 = distinct !DISubprogram(name: "spatial_compose_dd137i_dy_12bit", scope: !174, file: !174, line: 385, type: !1596, isLocal: true, isDefinition: true, scopeLine: 386, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!9831 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !9832)
!9832 = distinct !DILocation(line: 396, column: 24, scope: !9830)
!9833 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !9832)
!9834 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !9832)
!9835 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !9836)
!9836 = distinct !DILocation(line: 395, column: 24, scope: !9830)
!9837 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !9836)
!9838 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !9836)
!9839 = !DILocalVariable(name: "d", arg: 1, scope: !9830, file: !174, line: 385, type: !37)
!9840 = !DILocation(line: 385, column: 57, scope: !9830)
!9841 = !DILocalVariable(name: "level", arg: 2, scope: !9830, file: !174, line: 385, type: !18)
!9842 = !DILocation(line: 385, column: 64, scope: !9830)
!9843 = !DILocalVariable(name: "width", arg: 3, scope: !9830, file: !174, line: 385, type: !18)
!9844 = !DILocation(line: 385, column: 75, scope: !9830)
!9845 = !DILocalVariable(name: "height", arg: 4, scope: !9830, file: !174, line: 385, type: !18)
!9846 = !DILocation(line: 385, column: 86, scope: !9830)
!9847 = !DILocalVariable(name: "stride", arg: 5, scope: !9830, file: !174, line: 385, type: !18)
!9848 = !DILocation(line: 385, column: 98, scope: !9830)
!9849 = !DILocalVariable(name: "vertical_compose_l0", scope: !9830, file: !174, line: 387, type: !1626)
!9850 = !DILocation(line: 387, column: 27, scope: !9830)
!9851 = !DILocation(line: 387, column: 56, scope: !9830)
!9852 = !DILocation(line: 387, column: 59, scope: !9830)
!9853 = !DILocation(line: 387, column: 49, scope: !9830)
!9854 = !DILocalVariable(name: "vertical_compose_h0", scope: !9830, file: !174, line: 388, type: !1626)
!9855 = !DILocation(line: 388, column: 27, scope: !9830)
!9856 = !DILocation(line: 388, column: 56, scope: !9830)
!9857 = !DILocation(line: 388, column: 59, scope: !9830)
!9858 = !DILocation(line: 388, column: 49, scope: !9830)
!9859 = !DILocalVariable(name: "cs", scope: !9830, file: !174, line: 389, type: !903)
!9860 = !DILocation(line: 389, column: 17, scope: !9830)
!9861 = !DILocation(line: 389, column: 22, scope: !9830)
!9862 = !DILocation(line: 389, column: 25, scope: !9830)
!9863 = !DILocation(line: 389, column: 30, scope: !9830)
!9864 = !DILocation(line: 389, column: 28, scope: !9830)
!9865 = !DILocalVariable(name: "i", scope: !9830, file: !174, line: 391, type: !18)
!9866 = !DILocation(line: 391, column: 9, scope: !9830)
!9867 = !DILocalVariable(name: "y", scope: !9830, file: !174, line: 391, type: !18)
!9868 = !DILocation(line: 391, column: 12, scope: !9830)
!9869 = !DILocation(line: 391, column: 16, scope: !9830)
!9870 = !DILocation(line: 391, column: 20, scope: !9830)
!9871 = !DILocalVariable(name: "b", scope: !9830, file: !174, line: 392, type: !2512)
!9872 = !DILocation(line: 392, column: 14, scope: !9830)
!9873 = !DILocation(line: 393, column: 12, scope: !9874)
!9874 = distinct !DILexicalBlock(scope: !9830, file: !174, line: 393, column: 5)
!9875 = !DILocation(line: 393, column: 10, scope: !9874)
!9876 = !DILocation(line: 393, column: 17, scope: !9877)
!9877 = !DILexicalBlockFile(scope: !9878, file: !174, discriminator: 1)
!9878 = distinct !DILexicalBlock(scope: !9874, file: !174, line: 393, column: 5)
!9879 = !DILocation(line: 393, column: 19, scope: !9877)
!9880 = !DILocation(line: 393, column: 5, scope: !9877)
!9881 = !DILocation(line: 394, column: 22, scope: !9878)
!9882 = !DILocation(line: 394, column: 16, scope: !9878)
!9883 = !DILocation(line: 394, column: 20, scope: !9878)
!9884 = !DILocation(line: 394, column: 11, scope: !9878)
!9885 = !DILocation(line: 394, column: 9, scope: !9878)
!9886 = !DILocation(line: 394, column: 14, scope: !9878)
!9887 = !DILocation(line: 393, column: 25, scope: !9888)
!9888 = !DILexicalBlockFile(scope: !9878, file: !174, discriminator: 2)
!9889 = !DILocation(line: 393, column: 5, scope: !9888)
!9890 = distinct !{!9890, !9891}
!9891 = !DILocation(line: 393, column: 5, scope: !9830)
!9892 = !DILocation(line: 395, column: 12, scope: !9830)
!9893 = !DILocation(line: 395, column: 15, scope: !9830)
!9894 = !DILocation(line: 395, column: 34, scope: !9830)
!9895 = !DILocation(line: 395, column: 35, scope: !9830)
!9896 = !DILocation(line: 395, column: 42, scope: !9830)
!9897 = !DILocation(line: 395, column: 48, scope: !9830)
!9898 = !DILocation(line: 395, column: 24, scope: !9830)
!9899 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !9836)
!9900 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !9836)
!9901 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !9836)
!9902 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !9836)
!9903 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !9836)
!9904 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !9836)
!9905 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !9836)
!9906 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !9836)
!9907 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !9836)
!9908 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !9836)
!9909 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !9836)
!9910 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !9836)
!9911 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !9836)
!9912 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !9836)
!9913 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !9836)
!9914 = !DILocation(line: 395, column: 52, scope: !9830)
!9915 = !DILocation(line: 395, column: 51, scope: !9830)
!9916 = !DILocation(line: 395, column: 22, scope: !9830)
!9917 = !DILocation(line: 395, column: 5, scope: !9830)
!9918 = !DILocation(line: 395, column: 10, scope: !9830)
!9919 = !DILocation(line: 396, column: 12, scope: !9830)
!9920 = !DILocation(line: 396, column: 15, scope: !9830)
!9921 = !DILocation(line: 396, column: 34, scope: !9830)
!9922 = !DILocation(line: 396, column: 35, scope: !9830)
!9923 = !DILocation(line: 396, column: 42, scope: !9830)
!9924 = !DILocation(line: 396, column: 48, scope: !9830)
!9925 = !DILocation(line: 396, column: 24, scope: !9830)
!9926 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !9832)
!9927 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !9832)
!9928 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !9832)
!9929 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !9832)
!9930 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !9832)
!9931 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !9832)
!9932 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !9832)
!9933 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !9832)
!9934 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !9832)
!9935 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !9832)
!9936 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !9832)
!9937 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !9832)
!9938 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !9832)
!9939 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !9832)
!9940 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !9832)
!9941 = !DILocation(line: 396, column: 52, scope: !9830)
!9942 = !DILocation(line: 396, column: 51, scope: !9830)
!9943 = !DILocation(line: 396, column: 22, scope: !9830)
!9944 = !DILocation(line: 396, column: 5, scope: !9830)
!9945 = !DILocation(line: 396, column: 10, scope: !9830)
!9946 = !DILocation(line: 398, column: 8, scope: !9947)
!9947 = distinct !DILexicalBlock(scope: !9830, file: !174, line: 398, column: 8)
!9948 = !DILocation(line: 398, column: 9, scope: !9947)
!9949 = !DILocation(line: 398, column: 22, scope: !9947)
!9950 = !DILocation(line: 398, column: 11, scope: !9947)
!9951 = !DILocation(line: 398, column: 8, scope: !9830)
!9952 = !DILocation(line: 398, column: 30, scope: !9953)
!9953 = !DILexicalBlockFile(scope: !9947, file: !174, discriminator: 1)
!9954 = !DILocation(line: 398, column: 50, scope: !9953)
!9955 = !DILocation(line: 398, column: 56, scope: !9953)
!9956 = !DILocation(line: 398, column: 62, scope: !9953)
!9957 = !DILocation(line: 398, column: 68, scope: !9953)
!9958 = !DILocation(line: 398, column: 74, scope: !9953)
!9959 = !DILocation(line: 398, column: 80, scope: !9953)
!9960 = !DILocation(line: 399, column: 8, scope: !9961)
!9961 = distinct !DILexicalBlock(scope: !9830, file: !174, line: 399, column: 8)
!9962 = !DILocation(line: 399, column: 9, scope: !9961)
!9963 = !DILocation(line: 399, column: 22, scope: !9961)
!9964 = !DILocation(line: 399, column: 11, scope: !9961)
!9965 = !DILocation(line: 399, column: 8, scope: !9830)
!9966 = !DILocation(line: 399, column: 30, scope: !9967)
!9967 = !DILexicalBlockFile(scope: !9961, file: !174, discriminator: 1)
!9968 = !DILocation(line: 399, column: 50, scope: !9967)
!9969 = !DILocation(line: 399, column: 56, scope: !9967)
!9970 = !DILocation(line: 399, column: 62, scope: !9967)
!9971 = !DILocation(line: 399, column: 68, scope: !9967)
!9972 = !DILocation(line: 399, column: 74, scope: !9967)
!9973 = !DILocation(line: 399, column: 80, scope: !9967)
!9974 = !DILocation(line: 401, column: 8, scope: !9975)
!9975 = distinct !DILexicalBlock(scope: !9830, file: !174, line: 401, column: 8)
!9976 = !DILocation(line: 401, column: 9, scope: !9975)
!9977 = !DILocation(line: 401, column: 22, scope: !9975)
!9978 = !DILocation(line: 401, column: 11, scope: !9975)
!9979 = !DILocation(line: 401, column: 8, scope: !9830)
!9980 = !DILocation(line: 401, column: 30, scope: !9981)
!9981 = !DILexicalBlockFile(scope: !9975, file: !174, discriminator: 1)
!9982 = !DILocation(line: 401, column: 33, scope: !9981)
!9983 = !DILocation(line: 401, column: 52, scope: !9981)
!9984 = !DILocation(line: 401, column: 58, scope: !9981)
!9985 = !DILocation(line: 401, column: 61, scope: !9981)
!9986 = !DILocation(line: 401, column: 67, scope: !9981)
!9987 = !DILocation(line: 402, column: 8, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !9830, file: !174, line: 402, column: 8)
!9989 = !DILocation(line: 402, column: 9, scope: !9988)
!9990 = !DILocation(line: 402, column: 22, scope: !9988)
!9991 = !DILocation(line: 402, column: 11, scope: !9988)
!9992 = !DILocation(line: 402, column: 8, scope: !9830)
!9993 = !DILocation(line: 402, column: 30, scope: !9994)
!9994 = !DILexicalBlockFile(scope: !9988, file: !174, discriminator: 1)
!9995 = !DILocation(line: 402, column: 33, scope: !9994)
!9996 = !DILocation(line: 402, column: 52, scope: !9994)
!9997 = !DILocation(line: 402, column: 58, scope: !9994)
!9998 = !DILocation(line: 402, column: 61, scope: !9994)
!9999 = !DILocation(line: 402, column: 67, scope: !9994)
!10000 = !DILocation(line: 404, column: 12, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !9830, file: !174, line: 404, column: 5)
!10002 = !DILocation(line: 404, column: 10, scope: !10001)
!10003 = !DILocation(line: 404, column: 17, scope: !10004)
!10004 = !DILexicalBlockFile(scope: !10005, file: !174, discriminator: 1)
!10005 = distinct !DILexicalBlock(scope: !10001, file: !174, line: 404, column: 5)
!10006 = !DILocation(line: 404, column: 19, scope: !10004)
!10007 = !DILocation(line: 404, column: 5, scope: !10004)
!10008 = !DILocation(line: 405, column: 22, scope: !10005)
!10009 = !DILocation(line: 405, column: 23, scope: !10005)
!10010 = !DILocation(line: 405, column: 20, scope: !10005)
!10011 = !DILocation(line: 405, column: 15, scope: !10005)
!10012 = !DILocation(line: 405, column: 9, scope: !10005)
!10013 = !DILocation(line: 405, column: 13, scope: !10005)
!10014 = !DILocation(line: 405, column: 18, scope: !10005)
!10015 = !DILocation(line: 404, column: 25, scope: !10016)
!10016 = !DILexicalBlockFile(scope: !10005, file: !174, discriminator: 2)
!10017 = !DILocation(line: 404, column: 5, scope: !10016)
!10018 = distinct !{!10018, !10019}
!10019 = !DILocation(line: 404, column: 5, scope: !9830)
!10020 = !DILocation(line: 406, column: 5, scope: !9830)
!10021 = !DILocation(line: 406, column: 9, scope: !9830)
!10022 = !DILocation(line: 406, column: 11, scope: !9830)
!10023 = !DILocation(line: 407, column: 1, scope: !9830)
!10024 = distinct !DISubprogram(name: "vertical_compose_dd137iL0_12bit", scope: !174, file: !174, line: 230, type: !1628, isLocal: true, isDefinition: true, scopeLine: 232, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!10025 = !DILocalVariable(name: "_b0", arg: 1, scope: !10024, file: !174, line: 230, type: !20)
!10026 = !DILocation(line: 230, column: 54, scope: !10024)
!10027 = !DILocalVariable(name: "_b1", arg: 2, scope: !10024, file: !174, line: 230, type: !20)
!10028 = !DILocation(line: 230, column: 68, scope: !10024)
!10029 = !DILocalVariable(name: "_b2", arg: 3, scope: !10024, file: !174, line: 230, type: !20)
!10030 = !DILocation(line: 230, column: 82, scope: !10024)
!10031 = !DILocalVariable(name: "_b3", arg: 4, scope: !10024, file: !174, line: 231, type: !20)
!10032 = !DILocation(line: 231, column: 56, scope: !10024)
!10033 = !DILocalVariable(name: "_b4", arg: 5, scope: !10024, file: !174, line: 231, type: !20)
!10034 = !DILocation(line: 231, column: 70, scope: !10024)
!10035 = !DILocalVariable(name: "width", arg: 6, scope: !10024, file: !174, line: 231, type: !18)
!10036 = !DILocation(line: 231, column: 79, scope: !10024)
!10037 = !DILocalVariable(name: "i", scope: !10024, file: !174, line: 233, type: !18)
!10038 = !DILocation(line: 233, column: 9, scope: !10024)
!10039 = !DILocalVariable(name: "b0", scope: !10024, file: !174, line: 234, type: !28)
!10040 = !DILocation(line: 234, column: 14, scope: !10024)
!10041 = !DILocation(line: 234, column: 30, scope: !10024)
!10042 = !DILocation(line: 234, column: 19, scope: !10024)
!10043 = !DILocalVariable(name: "b1", scope: !10024, file: !174, line: 235, type: !28)
!10044 = !DILocation(line: 235, column: 14, scope: !10024)
!10045 = !DILocation(line: 235, column: 30, scope: !10024)
!10046 = !DILocation(line: 235, column: 19, scope: !10024)
!10047 = !DILocalVariable(name: "b2", scope: !10024, file: !174, line: 236, type: !28)
!10048 = !DILocation(line: 236, column: 14, scope: !10024)
!10049 = !DILocation(line: 236, column: 30, scope: !10024)
!10050 = !DILocation(line: 236, column: 19, scope: !10024)
!10051 = !DILocalVariable(name: "b3", scope: !10024, file: !174, line: 237, type: !28)
!10052 = !DILocation(line: 237, column: 14, scope: !10024)
!10053 = !DILocation(line: 237, column: 30, scope: !10024)
!10054 = !DILocation(line: 237, column: 19, scope: !10024)
!10055 = !DILocalVariable(name: "b4", scope: !10024, file: !174, line: 238, type: !28)
!10056 = !DILocation(line: 238, column: 14, scope: !10024)
!10057 = !DILocation(line: 238, column: 30, scope: !10024)
!10058 = !DILocation(line: 238, column: 19, scope: !10024)
!10059 = !DILocation(line: 239, column: 10, scope: !10060)
!10060 = distinct !DILexicalBlock(scope: !10024, file: !174, line: 239, column: 5)
!10061 = !DILocation(line: 239, column: 9, scope: !10060)
!10062 = !DILocation(line: 239, column: 14, scope: !10063)
!10063 = !DILexicalBlockFile(scope: !10064, file: !174, discriminator: 1)
!10064 = distinct !DILexicalBlock(scope: !10060, file: !174, line: 239, column: 5)
!10065 = !DILocation(line: 239, column: 16, scope: !10063)
!10066 = !DILocation(line: 239, column: 15, scope: !10063)
!10067 = !DILocation(line: 239, column: 5, scope: !10063)
!10068 = !DILocation(line: 240, column: 38, scope: !10069)
!10069 = distinct !DILexicalBlock(scope: !10064, file: !174, line: 239, column: 27)
!10070 = !DILocation(line: 240, column: 35, scope: !10069)
!10071 = !DILocation(line: 240, column: 57, scope: !10069)
!10072 = !DILocation(line: 240, column: 54, scope: !10069)
!10073 = !DILocation(line: 240, column: 53, scope: !10069)
!10074 = !DILocation(line: 240, column: 68, scope: !10069)
!10075 = !DILocation(line: 240, column: 65, scope: !10069)
!10076 = !DILocation(line: 240, column: 64, scope: !10069)
!10077 = !DILocation(line: 240, column: 60, scope: !10069)
!10078 = !DILocation(line: 240, column: 76, scope: !10069)
!10079 = !DILocation(line: 240, column: 73, scope: !10069)
!10080 = !DILocation(line: 240, column: 71, scope: !10069)
!10081 = !DILocation(line: 240, column: 84, scope: !10069)
!10082 = !DILocation(line: 240, column: 81, scope: !10069)
!10083 = !DILocation(line: 240, column: 79, scope: !10069)
!10084 = !DILocation(line: 240, column: 87, scope: !10069)
!10085 = !DILocation(line: 240, column: 93, scope: !10069)
!10086 = !DILocation(line: 240, column: 42, scope: !10069)
!10087 = !DILocation(line: 240, column: 12, scope: !10069)
!10088 = !DILocation(line: 240, column: 9, scope: !10069)
!10089 = !DILocation(line: 240, column: 15, scope: !10069)
!10090 = !DILocation(line: 241, column: 5, scope: !10069)
!10091 = !DILocation(line: 239, column: 24, scope: !10092)
!10092 = !DILexicalBlockFile(scope: !10064, file: !174, discriminator: 2)
!10093 = !DILocation(line: 239, column: 5, scope: !10092)
!10094 = distinct !{!10094, !10095}
!10095 = !DILocation(line: 239, column: 5, scope: !10024)
!10096 = !DILocation(line: 242, column: 1, scope: !10024)
!10097 = distinct !DISubprogram(name: "horizontal_compose_dd137i_12bit", scope: !174, file: !174, line: 103, type: !63, isLocal: true, isDefinition: true, scopeLine: 104, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!10098 = !DILocalVariable(name: "_b", arg: 1, scope: !10097, file: !174, line: 103, type: !20)
!10099 = !DILocation(line: 103, column: 54, scope: !10097)
!10100 = !DILocalVariable(name: "_tmp", arg: 2, scope: !10097, file: !174, line: 103, type: !20)
!10101 = !DILocation(line: 103, column: 67, scope: !10097)
!10102 = !DILocalVariable(name: "w", arg: 3, scope: !10097, file: !174, line: 103, type: !18)
!10103 = !DILocation(line: 103, column: 77, scope: !10097)
!10104 = !DILocalVariable(name: "w2", scope: !10097, file: !174, line: 105, type: !1931)
!10105 = !DILocation(line: 105, column: 15, scope: !10097)
!10106 = !DILocation(line: 105, column: 20, scope: !10097)
!10107 = !DILocation(line: 105, column: 22, scope: !10097)
!10108 = !DILocalVariable(name: "x", scope: !10097, file: !174, line: 106, type: !18)
!10109 = !DILocation(line: 106, column: 9, scope: !10097)
!10110 = !DILocalVariable(name: "b", scope: !10097, file: !174, line: 107, type: !28)
!10111 = !DILocation(line: 107, column: 14, scope: !10097)
!10112 = !DILocation(line: 107, column: 29, scope: !10097)
!10113 = !DILocation(line: 107, column: 18, scope: !10097)
!10114 = !DILocalVariable(name: "tmp", scope: !10097, file: !174, line: 108, type: !28)
!10115 = !DILocation(line: 108, column: 14, scope: !10097)
!10116 = !DILocation(line: 108, column: 31, scope: !10097)
!10117 = !DILocation(line: 108, column: 20, scope: !10097)
!10118 = !DILocation(line: 110, column: 32, scope: !10097)
!10119 = !DILocation(line: 110, column: 52, scope: !10097)
!10120 = !DILocation(line: 110, column: 50, scope: !10097)
!10121 = !DILocation(line: 110, column: 49, scope: !10097)
!10122 = !DILocation(line: 110, column: 63, scope: !10097)
!10123 = !DILocation(line: 110, column: 61, scope: !10097)
!10124 = !DILocation(line: 110, column: 60, scope: !10097)
!10125 = !DILocation(line: 110, column: 56, scope: !10097)
!10126 = !DILocation(line: 110, column: 72, scope: !10097)
!10127 = !DILocation(line: 110, column: 74, scope: !10097)
!10128 = !DILocation(line: 110, column: 70, scope: !10097)
!10129 = !DILocation(line: 110, column: 68, scope: !10097)
!10130 = !DILocation(line: 110, column: 82, scope: !10097)
!10131 = !DILocation(line: 110, column: 80, scope: !10097)
!10132 = !DILocation(line: 110, column: 78, scope: !10097)
!10133 = !DILocation(line: 110, column: 86, scope: !10097)
!10134 = !DILocation(line: 110, column: 92, scope: !10097)
!10135 = !DILocation(line: 110, column: 38, scope: !10097)
!10136 = !DILocation(line: 110, column: 5, scope: !10097)
!10137 = !DILocation(line: 110, column: 12, scope: !10097)
!10138 = !DILocation(line: 111, column: 32, scope: !10097)
!10139 = !DILocation(line: 111, column: 52, scope: !10097)
!10140 = !DILocation(line: 111, column: 50, scope: !10097)
!10141 = !DILocation(line: 111, column: 49, scope: !10097)
!10142 = !DILocation(line: 111, column: 63, scope: !10097)
!10143 = !DILocation(line: 111, column: 65, scope: !10097)
!10144 = !DILocation(line: 111, column: 61, scope: !10097)
!10145 = !DILocation(line: 111, column: 60, scope: !10097)
!10146 = !DILocation(line: 111, column: 56, scope: !10097)
!10147 = !DILocation(line: 111, column: 73, scope: !10097)
!10148 = !DILocation(line: 111, column: 75, scope: !10097)
!10149 = !DILocation(line: 111, column: 71, scope: !10097)
!10150 = !DILocation(line: 111, column: 69, scope: !10097)
!10151 = !DILocation(line: 111, column: 83, scope: !10097)
!10152 = !DILocation(line: 111, column: 81, scope: !10097)
!10153 = !DILocation(line: 111, column: 79, scope: !10097)
!10154 = !DILocation(line: 111, column: 87, scope: !10097)
!10155 = !DILocation(line: 111, column: 93, scope: !10097)
!10156 = !DILocation(line: 111, column: 38, scope: !10097)
!10157 = !DILocation(line: 111, column: 5, scope: !10097)
!10158 = !DILocation(line: 111, column: 12, scope: !10097)
!10159 = !DILocation(line: 112, column: 12, scope: !10160)
!10160 = distinct !DILexicalBlock(scope: !10097, file: !174, line: 112, column: 5)
!10161 = !DILocation(line: 112, column: 10, scope: !10160)
!10162 = !DILocation(line: 112, column: 17, scope: !10163)
!10163 = !DILexicalBlockFile(scope: !10164, file: !174, discriminator: 1)
!10164 = distinct !DILexicalBlock(scope: !10160, file: !174, line: 112, column: 5)
!10165 = !DILocation(line: 112, column: 21, scope: !10163)
!10166 = !DILocation(line: 112, column: 23, scope: !10163)
!10167 = !DILocation(line: 112, column: 19, scope: !10163)
!10168 = !DILocation(line: 112, column: 5, scope: !10163)
!10169 = !DILocation(line: 113, column: 38, scope: !10164)
!10170 = !DILocation(line: 113, column: 36, scope: !10164)
!10171 = !DILocation(line: 113, column: 56, scope: !10164)
!10172 = !DILocation(line: 113, column: 58, scope: !10164)
!10173 = !DILocation(line: 113, column: 57, scope: !10164)
!10174 = !DILocation(line: 113, column: 60, scope: !10164)
!10175 = !DILocation(line: 113, column: 54, scope: !10164)
!10176 = !DILocation(line: 113, column: 53, scope: !10164)
!10177 = !DILocation(line: 113, column: 71, scope: !10164)
!10178 = !DILocation(line: 113, column: 73, scope: !10164)
!10179 = !DILocation(line: 113, column: 72, scope: !10164)
!10180 = !DILocation(line: 113, column: 69, scope: !10164)
!10181 = !DILocation(line: 113, column: 68, scope: !10164)
!10182 = !DILocation(line: 113, column: 64, scope: !10164)
!10183 = !DILocation(line: 113, column: 81, scope: !10164)
!10184 = !DILocation(line: 113, column: 83, scope: !10164)
!10185 = !DILocation(line: 113, column: 82, scope: !10164)
!10186 = !DILocation(line: 113, column: 85, scope: !10164)
!10187 = !DILocation(line: 113, column: 79, scope: !10164)
!10188 = !DILocation(line: 113, column: 77, scope: !10164)
!10189 = !DILocation(line: 113, column: 93, scope: !10164)
!10190 = !DILocation(line: 113, column: 95, scope: !10164)
!10191 = !DILocation(line: 113, column: 94, scope: !10164)
!10192 = !DILocation(line: 113, column: 97, scope: !10164)
!10193 = !DILocation(line: 113, column: 91, scope: !10164)
!10194 = !DILocation(line: 113, column: 89, scope: !10164)
!10195 = !DILocation(line: 113, column: 101, scope: !10164)
!10196 = !DILocation(line: 113, column: 107, scope: !10164)
!10197 = !DILocation(line: 113, column: 42, scope: !10164)
!10198 = !DILocation(line: 113, column: 13, scope: !10164)
!10199 = !DILocation(line: 113, column: 9, scope: !10164)
!10200 = !DILocation(line: 113, column: 16, scope: !10164)
!10201 = !DILocation(line: 112, column: 28, scope: !10202)
!10202 = !DILexicalBlockFile(scope: !10164, file: !174, discriminator: 2)
!10203 = !DILocation(line: 112, column: 5, scope: !10202)
!10204 = distinct !{!10204, !10205}
!10205 = !DILocation(line: 112, column: 5, scope: !10097)
!10206 = !DILocation(line: 114, column: 37, scope: !10097)
!10207 = !DILocation(line: 114, column: 39, scope: !10097)
!10208 = !DILocation(line: 114, column: 35, scope: !10097)
!10209 = !DILocation(line: 114, column: 58, scope: !10097)
!10210 = !DILocation(line: 114, column: 59, scope: !10097)
!10211 = !DILocation(line: 114, column: 56, scope: !10097)
!10212 = !DILocation(line: 114, column: 55, scope: !10097)
!10213 = !DILocation(line: 114, column: 70, scope: !10097)
!10214 = !DILocation(line: 114, column: 71, scope: !10097)
!10215 = !DILocation(line: 114, column: 68, scope: !10097)
!10216 = !DILocation(line: 114, column: 67, scope: !10097)
!10217 = !DILocation(line: 114, column: 63, scope: !10097)
!10218 = !DILocation(line: 114, column: 79, scope: !10097)
!10219 = !DILocation(line: 114, column: 80, scope: !10097)
!10220 = !DILocation(line: 114, column: 77, scope: !10097)
!10221 = !DILocation(line: 114, column: 75, scope: !10097)
!10222 = !DILocation(line: 114, column: 88, scope: !10097)
!10223 = !DILocation(line: 114, column: 89, scope: !10097)
!10224 = !DILocation(line: 114, column: 86, scope: !10097)
!10225 = !DILocation(line: 114, column: 84, scope: !10097)
!10226 = !DILocation(line: 114, column: 93, scope: !10097)
!10227 = !DILocation(line: 114, column: 99, scope: !10097)
!10228 = !DILocation(line: 114, column: 44, scope: !10097)
!10229 = !DILocation(line: 114, column: 9, scope: !10097)
!10230 = !DILocation(line: 114, column: 11, scope: !10097)
!10231 = !DILocation(line: 114, column: 5, scope: !10097)
!10232 = !DILocation(line: 114, column: 15, scope: !10097)
!10233 = !DILocation(line: 117, column: 15, scope: !10097)
!10234 = !DILocation(line: 117, column: 5, scope: !10097)
!10235 = !DILocation(line: 117, column: 13, scope: !10097)
!10236 = !DILocation(line: 118, column: 31, scope: !10097)
!10237 = !DILocation(line: 118, column: 33, scope: !10097)
!10238 = !DILocation(line: 118, column: 27, scope: !10097)
!10239 = !DILocation(line: 118, column: 21, scope: !10097)
!10240 = !DILocation(line: 118, column: 17, scope: !10097)
!10241 = !DILocation(line: 118, column: 25, scope: !10097)
!10242 = !DILocation(line: 118, column: 9, scope: !10097)
!10243 = !DILocation(line: 118, column: 11, scope: !10097)
!10244 = !DILocation(line: 118, column: 5, scope: !10097)
!10245 = !DILocation(line: 118, column: 15, scope: !10097)
!10246 = !DILocation(line: 120, column: 12, scope: !10247)
!10247 = distinct !DILexicalBlock(scope: !10097, file: !174, line: 120, column: 5)
!10248 = !DILocation(line: 120, column: 10, scope: !10247)
!10249 = !DILocation(line: 120, column: 17, scope: !10250)
!10250 = !DILexicalBlockFile(scope: !10251, file: !174, discriminator: 1)
!10251 = distinct !DILexicalBlock(scope: !10247, file: !174, line: 120, column: 5)
!10252 = !DILocation(line: 120, column: 21, scope: !10250)
!10253 = !DILocation(line: 120, column: 19, scope: !10250)
!10254 = !DILocation(line: 120, column: 5, scope: !10250)
!10255 = !DILocation(line: 121, column: 30, scope: !10256)
!10256 = distinct !DILexicalBlock(scope: !10251, file: !174, line: 120, column: 30)
!10257 = !DILocation(line: 121, column: 26, scope: !10256)
!10258 = !DILocation(line: 121, column: 33, scope: !10256)
!10259 = !DILocation(line: 121, column: 39, scope: !10256)
!10260 = !DILocation(line: 121, column: 13, scope: !10256)
!10261 = !DILocation(line: 121, column: 12, scope: !10256)
!10262 = !DILocation(line: 121, column: 9, scope: !10256)
!10263 = !DILocation(line: 121, column: 17, scope: !10256)
!10264 = !DILocation(line: 122, column: 47, scope: !10256)
!10265 = !DILocation(line: 122, column: 49, scope: !10256)
!10266 = !DILocation(line: 122, column: 48, scope: !10256)
!10267 = !DILocation(line: 122, column: 45, scope: !10256)
!10268 = !DILocation(line: 122, column: 70, scope: !10256)
!10269 = !DILocation(line: 122, column: 66, scope: !10256)
!10270 = !DILocation(line: 122, column: 65, scope: !10256)
!10271 = !DILocation(line: 122, column: 82, scope: !10256)
!10272 = !DILocation(line: 122, column: 83, scope: !10256)
!10273 = !DILocation(line: 122, column: 78, scope: !10256)
!10274 = !DILocation(line: 122, column: 77, scope: !10256)
!10275 = !DILocation(line: 122, column: 73, scope: !10256)
!10276 = !DILocation(line: 122, column: 93, scope: !10256)
!10277 = !DILocation(line: 122, column: 94, scope: !10256)
!10278 = !DILocation(line: 122, column: 89, scope: !10256)
!10279 = !DILocation(line: 122, column: 87, scope: !10256)
!10280 = !DILocation(line: 122, column: 104, scope: !10256)
!10281 = !DILocation(line: 122, column: 105, scope: !10256)
!10282 = !DILocation(line: 122, column: 100, scope: !10256)
!10283 = !DILocation(line: 122, column: 98, scope: !10256)
!10284 = !DILocation(line: 122, column: 109, scope: !10256)
!10285 = !DILocation(line: 122, column: 114, scope: !10256)
!10286 = !DILocation(line: 122, column: 54, scope: !10256)
!10287 = !DILocation(line: 122, column: 122, scope: !10256)
!10288 = !DILocation(line: 122, column: 128, scope: !10256)
!10289 = !DILocation(line: 122, column: 13, scope: !10256)
!10290 = !DILocation(line: 122, column: 12, scope: !10256)
!10291 = !DILocation(line: 122, column: 14, scope: !10256)
!10292 = !DILocation(line: 122, column: 9, scope: !10256)
!10293 = !DILocation(line: 122, column: 18, scope: !10256)
!10294 = !DILocation(line: 123, column: 5, scope: !10256)
!10295 = !DILocation(line: 120, column: 26, scope: !10296)
!10296 = !DILexicalBlockFile(scope: !10251, file: !174, discriminator: 2)
!10297 = !DILocation(line: 120, column: 5, scope: !10296)
!10298 = distinct !{!10298, !10299}
!10299 = !DILocation(line: 120, column: 5, scope: !10097)
!10300 = !DILocation(line: 124, column: 1, scope: !10097)
!10301 = distinct !DISubprogram(name: "spatial_compose_haari_dy_12bit", scope: !174, file: !174, line: 410, type: !1596, isLocal: true, isDefinition: true, scopeLine: 411, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!10302 = !DILocalVariable(name: "d", arg: 1, scope: !10301, file: !174, line: 410, type: !37)
!10303 = !DILocation(line: 410, column: 56, scope: !10301)
!10304 = !DILocalVariable(name: "level", arg: 2, scope: !10301, file: !174, line: 410, type: !18)
!10305 = !DILocation(line: 410, column: 63, scope: !10301)
!10306 = !DILocalVariable(name: "width", arg: 3, scope: !10301, file: !174, line: 410, type: !18)
!10307 = !DILocation(line: 410, column: 74, scope: !10301)
!10308 = !DILocalVariable(name: "height", arg: 4, scope: !10301, file: !174, line: 410, type: !18)
!10309 = !DILocation(line: 410, column: 85, scope: !10301)
!10310 = !DILocalVariable(name: "stride", arg: 5, scope: !10301, file: !174, line: 410, type: !18)
!10311 = !DILocation(line: 410, column: 97, scope: !10301)
!10312 = !DILocalVariable(name: "vertical_compose", scope: !10301, file: !174, line: 412, type: !2969)
!10313 = !DILocation(line: 412, column: 27, scope: !10301)
!10314 = !DILocation(line: 412, column: 53, scope: !10301)
!10315 = !DILocation(line: 412, column: 56, scope: !10301)
!10316 = !DILocation(line: 412, column: 46, scope: !10301)
!10317 = !DILocalVariable(name: "y", scope: !10301, file: !174, line: 413, type: !18)
!10318 = !DILocation(line: 413, column: 9, scope: !10301)
!10319 = !DILocation(line: 413, column: 19, scope: !10301)
!10320 = !DILocation(line: 413, column: 13, scope: !10301)
!10321 = !DILocation(line: 413, column: 16, scope: !10301)
!10322 = !DILocation(line: 413, column: 26, scope: !10301)
!10323 = !DILocalVariable(name: "b0", scope: !10301, file: !174, line: 414, type: !20)
!10324 = !DILocation(line: 414, column: 14, scope: !10301)
!10325 = !DILocation(line: 414, column: 19, scope: !10301)
!10326 = !DILocation(line: 414, column: 22, scope: !10301)
!10327 = !DILocation(line: 414, column: 32, scope: !10301)
!10328 = !DILocation(line: 414, column: 33, scope: !10301)
!10329 = !DILocation(line: 414, column: 37, scope: !10301)
!10330 = !DILocation(line: 414, column: 36, scope: !10301)
!10331 = !DILocation(line: 414, column: 29, scope: !10301)
!10332 = !DILocalVariable(name: "b1", scope: !10301, file: !174, line: 415, type: !20)
!10333 = !DILocation(line: 415, column: 14, scope: !10301)
!10334 = !DILocation(line: 415, column: 19, scope: !10301)
!10335 = !DILocation(line: 415, column: 22, scope: !10301)
!10336 = !DILocation(line: 415, column: 32, scope: !10301)
!10337 = !DILocation(line: 415, column: 36, scope: !10301)
!10338 = !DILocation(line: 415, column: 35, scope: !10301)
!10339 = !DILocation(line: 415, column: 29, scope: !10301)
!10340 = !DILocation(line: 417, column: 5, scope: !10301)
!10341 = !DILocation(line: 417, column: 22, scope: !10301)
!10342 = !DILocation(line: 417, column: 26, scope: !10301)
!10343 = !DILocation(line: 417, column: 30, scope: !10301)
!10344 = !DILocation(line: 418, column: 5, scope: !10301)
!10345 = !DILocation(line: 418, column: 8, scope: !10301)
!10346 = !DILocation(line: 418, column: 27, scope: !10301)
!10347 = !DILocation(line: 418, column: 31, scope: !10301)
!10348 = !DILocation(line: 418, column: 34, scope: !10301)
!10349 = !DILocation(line: 418, column: 40, scope: !10301)
!10350 = !DILocation(line: 419, column: 5, scope: !10301)
!10351 = !DILocation(line: 419, column: 8, scope: !10301)
!10352 = !DILocation(line: 419, column: 27, scope: !10301)
!10353 = !DILocation(line: 419, column: 31, scope: !10301)
!10354 = !DILocation(line: 419, column: 34, scope: !10301)
!10355 = !DILocation(line: 419, column: 40, scope: !10301)
!10356 = !DILocation(line: 421, column: 11, scope: !10301)
!10357 = !DILocation(line: 421, column: 5, scope: !10301)
!10358 = !DILocation(line: 421, column: 8, scope: !10301)
!10359 = !DILocation(line: 421, column: 18, scope: !10301)
!10360 = !DILocation(line: 421, column: 20, scope: !10301)
!10361 = !DILocation(line: 422, column: 1, scope: !10301)
!10362 = distinct !DISubprogram(name: "vertical_compose_haar_12bit", scope: !174, file: !174, line: 244, type: !63, isLocal: true, isDefinition: true, scopeLine: 245, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!10363 = !DILocalVariable(name: "_b0", arg: 1, scope: !10362, file: !174, line: 244, type: !20)
!10364 = !DILocation(line: 244, column: 50, scope: !10362)
!10365 = !DILocalVariable(name: "_b1", arg: 2, scope: !10362, file: !174, line: 244, type: !20)
!10366 = !DILocation(line: 244, column: 64, scope: !10362)
!10367 = !DILocalVariable(name: "width", arg: 3, scope: !10362, file: !174, line: 244, type: !18)
!10368 = !DILocation(line: 244, column: 73, scope: !10362)
!10369 = !DILocalVariable(name: "i", scope: !10362, file: !174, line: 246, type: !18)
!10370 = !DILocation(line: 246, column: 9, scope: !10362)
!10371 = !DILocalVariable(name: "b0", scope: !10362, file: !174, line: 247, type: !28)
!10372 = !DILocation(line: 247, column: 14, scope: !10362)
!10373 = !DILocation(line: 247, column: 30, scope: !10362)
!10374 = !DILocation(line: 247, column: 19, scope: !10362)
!10375 = !DILocalVariable(name: "b1", scope: !10362, file: !174, line: 248, type: !28)
!10376 = !DILocation(line: 248, column: 14, scope: !10362)
!10377 = !DILocation(line: 248, column: 30, scope: !10362)
!10378 = !DILocation(line: 248, column: 19, scope: !10362)
!10379 = !DILocation(line: 250, column: 12, scope: !10380)
!10380 = distinct !DILexicalBlock(scope: !10362, file: !174, line: 250, column: 5)
!10381 = !DILocation(line: 250, column: 10, scope: !10380)
!10382 = !DILocation(line: 250, column: 17, scope: !10383)
!10383 = !DILexicalBlockFile(scope: !10384, file: !174, discriminator: 1)
!10384 = distinct !DILexicalBlock(scope: !10380, file: !174, line: 250, column: 5)
!10385 = !DILocation(line: 250, column: 21, scope: !10383)
!10386 = !DILocation(line: 250, column: 19, scope: !10383)
!10387 = !DILocation(line: 250, column: 5, scope: !10383)
!10388 = !DILocation(line: 251, column: 27, scope: !10389)
!10389 = distinct !DILexicalBlock(scope: !10384, file: !174, line: 250, column: 33)
!10390 = !DILocation(line: 251, column: 24, scope: !10389)
!10391 = !DILocation(line: 251, column: 52, scope: !10389)
!10392 = !DILocation(line: 251, column: 49, scope: !10389)
!10393 = !DILocation(line: 251, column: 55, scope: !10389)
!10394 = !DILocation(line: 251, column: 61, scope: !10389)
!10395 = !DILocation(line: 251, column: 30, scope: !10389)
!10396 = !DILocation(line: 251, column: 12, scope: !10389)
!10397 = !DILocation(line: 251, column: 9, scope: !10389)
!10398 = !DILocation(line: 251, column: 15, scope: !10389)
!10399 = !DILocation(line: 252, column: 27, scope: !10389)
!10400 = !DILocation(line: 252, column: 24, scope: !10389)
!10401 = !DILocation(line: 252, column: 46, scope: !10389)
!10402 = !DILocation(line: 252, column: 43, scope: !10389)
!10403 = !DILocation(line: 252, column: 30, scope: !10389)
!10404 = !DILocation(line: 252, column: 12, scope: !10389)
!10405 = !DILocation(line: 252, column: 9, scope: !10389)
!10406 = !DILocation(line: 252, column: 15, scope: !10389)
!10407 = !DILocation(line: 253, column: 5, scope: !10389)
!10408 = !DILocation(line: 250, column: 29, scope: !10409)
!10409 = !DILexicalBlockFile(scope: !10384, file: !174, discriminator: 2)
!10410 = !DILocation(line: 250, column: 5, scope: !10409)
!10411 = distinct !{!10411, !10412}
!10412 = !DILocation(line: 250, column: 5, scope: !10362)
!10413 = !DILocation(line: 254, column: 1, scope: !10362)
!10414 = distinct !DISubprogram(name: "horizontal_compose_haar0i_12bit", scope: !174, file: !174, line: 140, type: !63, isLocal: true, isDefinition: true, scopeLine: 141, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!10415 = !DILocation(line: 55, column: 77, scope: !9669, inlinedAt: !10416)
!10416 = distinct !DILocation(line: 137, column: 5, scope: !10417, inlinedAt: !10418)
!10417 = distinct !DISubprogram(name: "horizontal_compose_haari_12bit", scope: !174, file: !174, line: 126, type: !6786, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!10418 = distinct !DILocation(line: 144, column: 5, scope: !10414)
!10419 = !DILocation(line: 55, column: 91, scope: !9669, inlinedAt: !10416)
!10420 = !DILocation(line: 55, column: 106, scope: !9669, inlinedAt: !10416)
!10421 = !DILocation(line: 55, column: 116, scope: !9669, inlinedAt: !10416)
!10422 = !DILocation(line: 56, column: 53, scope: !9669, inlinedAt: !10416)
!10423 = !DILocation(line: 56, column: 62, scope: !9669, inlinedAt: !10416)
!10424 = !DILocation(line: 58, column: 9, scope: !9669, inlinedAt: !10416)
!10425 = !DILocalVariable(name: "b", arg: 1, scope: !10417, file: !174, line: 126, type: !28)
!10426 = !DILocation(line: 126, column: 91, scope: !10417, inlinedAt: !10418)
!10427 = !DILocalVariable(name: "temp", arg: 2, scope: !10417, file: !174, line: 126, type: !28)
!10428 = !DILocation(line: 126, column: 103, scope: !10417, inlinedAt: !10418)
!10429 = !DILocalVariable(name: "w", arg: 3, scope: !10417, file: !174, line: 127, type: !18)
!10430 = !DILocation(line: 127, column: 67, scope: !10417, inlinedAt: !10418)
!10431 = !DILocalVariable(name: "shift", arg: 4, scope: !10417, file: !174, line: 127, type: !18)
!10432 = !DILocation(line: 127, column: 74, scope: !10417, inlinedAt: !10418)
!10433 = !DILocalVariable(name: "w2", scope: !10417, file: !174, line: 129, type: !1931)
!10434 = !DILocation(line: 129, column: 15, scope: !10417, inlinedAt: !10418)
!10435 = !DILocalVariable(name: "x", scope: !10417, file: !174, line: 130, type: !18)
!10436 = !DILocation(line: 130, column: 9, scope: !10417, inlinedAt: !10418)
!10437 = !DILocalVariable(name: "_b", arg: 1, scope: !10414, file: !174, line: 140, type: !20)
!10438 = !DILocation(line: 140, column: 54, scope: !10414)
!10439 = !DILocalVariable(name: "_temp", arg: 2, scope: !10414, file: !174, line: 140, type: !20)
!10440 = !DILocation(line: 140, column: 67, scope: !10414)
!10441 = !DILocalVariable(name: "w", arg: 3, scope: !10414, file: !174, line: 140, type: !18)
!10442 = !DILocation(line: 140, column: 78, scope: !10414)
!10443 = !DILocalVariable(name: "b", scope: !10414, file: !174, line: 142, type: !28)
!10444 = !DILocation(line: 142, column: 14, scope: !10414)
!10445 = !DILocation(line: 142, column: 29, scope: !10414)
!10446 = !DILocation(line: 142, column: 18, scope: !10414)
!10447 = !DILocalVariable(name: "temp", scope: !10414, file: !174, line: 143, type: !28)
!10448 = !DILocation(line: 143, column: 14, scope: !10414)
!10449 = !DILocation(line: 143, column: 32, scope: !10414)
!10450 = !DILocation(line: 143, column: 21, scope: !10414)
!10451 = !DILocation(line: 144, column: 36, scope: !10414)
!10452 = !DILocation(line: 144, column: 39, scope: !10414)
!10453 = !DILocation(line: 144, column: 45, scope: !10414)
!10454 = !DILocation(line: 144, column: 5, scope: !10414)
!10455 = !DILocation(line: 129, column: 20, scope: !10417, inlinedAt: !10418)
!10456 = !DILocation(line: 129, column: 22, scope: !10417, inlinedAt: !10418)
!10457 = !DILocation(line: 132, column: 12, scope: !10458, inlinedAt: !10418)
!10458 = distinct !DILexicalBlock(scope: !10417, file: !174, line: 132, column: 5)
!10459 = !DILocation(line: 132, column: 10, scope: !10458, inlinedAt: !10418)
!10460 = !DILocation(line: 132, column: 17, scope: !10461, inlinedAt: !10418)
!10461 = !DILexicalBlockFile(scope: !10462, file: !174, discriminator: 1)
!10462 = distinct !DILexicalBlock(scope: !10458, file: !174, line: 132, column: 5)
!10463 = !DILocation(line: 132, column: 21, scope: !10461, inlinedAt: !10418)
!10464 = !DILocation(line: 132, column: 19, scope: !10461, inlinedAt: !10418)
!10465 = !DILocation(line: 132, column: 5, scope: !10461, inlinedAt: !10418)
!10466 = !DILocation(line: 133, column: 29, scope: !10467, inlinedAt: !10418)
!10467 = distinct !DILexicalBlock(scope: !10462, file: !174, line: 132, column: 30)
!10468 = !DILocation(line: 133, column: 27, scope: !10467, inlinedAt: !10418)
!10469 = !DILocation(line: 133, column: 54, scope: !10467, inlinedAt: !10418)
!10470 = !DILocation(line: 133, column: 56, scope: !10467, inlinedAt: !10418)
!10471 = !DILocation(line: 133, column: 55, scope: !10467, inlinedAt: !10418)
!10472 = !DILocation(line: 133, column: 52, scope: !10467, inlinedAt: !10418)
!10473 = !DILocation(line: 133, column: 60, scope: !10467, inlinedAt: !10418)
!10474 = !DILocation(line: 133, column: 66, scope: !10467, inlinedAt: !10418)
!10475 = !DILocation(line: 133, column: 33, scope: !10467, inlinedAt: !10418)
!10476 = !DILocation(line: 133, column: 14, scope: !10467, inlinedAt: !10418)
!10477 = !DILocation(line: 133, column: 9, scope: !10467, inlinedAt: !10418)
!10478 = !DILocation(line: 133, column: 18, scope: !10467, inlinedAt: !10418)
!10479 = !DILocation(line: 134, column: 31, scope: !10467, inlinedAt: !10418)
!10480 = !DILocation(line: 134, column: 33, scope: !10467, inlinedAt: !10418)
!10481 = !DILocation(line: 134, column: 32, scope: !10467, inlinedAt: !10418)
!10482 = !DILocation(line: 134, column: 29, scope: !10467, inlinedAt: !10418)
!10483 = !DILocation(line: 134, column: 55, scope: !10467, inlinedAt: !10418)
!10484 = !DILocation(line: 134, column: 50, scope: !10467, inlinedAt: !10418)
!10485 = !DILocation(line: 134, column: 37, scope: !10467, inlinedAt: !10418)
!10486 = !DILocation(line: 134, column: 14, scope: !10467, inlinedAt: !10418)
!10487 = !DILocation(line: 134, column: 16, scope: !10467, inlinedAt: !10418)
!10488 = !DILocation(line: 134, column: 15, scope: !10467, inlinedAt: !10418)
!10489 = !DILocation(line: 134, column: 9, scope: !10467, inlinedAt: !10418)
!10490 = !DILocation(line: 134, column: 20, scope: !10467, inlinedAt: !10418)
!10491 = !DILocation(line: 132, column: 26, scope: !10492, inlinedAt: !10418)
!10492 = !DILexicalBlockFile(scope: !10462, file: !174, discriminator: 2)
!10493 = !DILocation(line: 132, column: 5, scope: !10492, inlinedAt: !10418)
!10494 = distinct !{!10494, !10495}
!10495 = !DILocation(line: 132, column: 5, scope: !10417)
!10496 = !DILocation(line: 137, column: 22, scope: !10417, inlinedAt: !10418)
!10497 = !DILocation(line: 137, column: 25, scope: !10417, inlinedAt: !10418)
!10498 = !DILocation(line: 137, column: 31, scope: !10417, inlinedAt: !10418)
!10499 = !DILocation(line: 137, column: 36, scope: !10417, inlinedAt: !10418)
!10500 = !DILocation(line: 137, column: 35, scope: !10417, inlinedAt: !10418)
!10501 = !DILocation(line: 137, column: 40, scope: !10417, inlinedAt: !10418)
!10502 = !DILocation(line: 137, column: 44, scope: !10417, inlinedAt: !10418)
!10503 = !DILocation(line: 137, column: 51, scope: !10417, inlinedAt: !10418)
!10504 = !DILocation(line: 137, column: 5, scope: !10417, inlinedAt: !10418)
!10505 = !DILocation(line: 59, column: 12, scope: !9794, inlinedAt: !10416)
!10506 = !DILocation(line: 59, column: 10, scope: !9794, inlinedAt: !10416)
!10507 = !DILocation(line: 59, column: 17, scope: !9797, inlinedAt: !10416)
!10508 = !DILocation(line: 59, column: 21, scope: !9797, inlinedAt: !10416)
!10509 = !DILocation(line: 59, column: 19, scope: !9797, inlinedAt: !10416)
!10510 = !DILocation(line: 59, column: 5, scope: !9797, inlinedAt: !10416)
!10511 = !DILocation(line: 60, column: 33, scope: !9803, inlinedAt: !10416)
!10512 = !DILocation(line: 60, column: 28, scope: !9803, inlinedAt: !10416)
!10513 = !DILocation(line: 60, column: 48, scope: !9803, inlinedAt: !10416)
!10514 = !DILocation(line: 60, column: 36, scope: !9803, inlinedAt: !10416)
!10515 = !DILocation(line: 60, column: 57, scope: !9803, inlinedAt: !10416)
!10516 = !DILocation(line: 60, column: 54, scope: !9803, inlinedAt: !10416)
!10517 = !DILocation(line: 60, column: 15, scope: !9803, inlinedAt: !10416)
!10518 = !DILocation(line: 60, column: 14, scope: !9803, inlinedAt: !10416)
!10519 = !DILocation(line: 60, column: 9, scope: !9803, inlinedAt: !10416)
!10520 = !DILocation(line: 60, column: 19, scope: !9803, inlinedAt: !10416)
!10521 = !DILocation(line: 61, column: 34, scope: !9803, inlinedAt: !10416)
!10522 = !DILocation(line: 61, column: 29, scope: !9803, inlinedAt: !10416)
!10523 = !DILocation(line: 61, column: 49, scope: !9803, inlinedAt: !10416)
!10524 = !DILocation(line: 61, column: 37, scope: !9803, inlinedAt: !10416)
!10525 = !DILocation(line: 61, column: 58, scope: !9803, inlinedAt: !10416)
!10526 = !DILocation(line: 61, column: 55, scope: !9803, inlinedAt: !10416)
!10527 = !DILocation(line: 61, column: 15, scope: !9803, inlinedAt: !10416)
!10528 = !DILocation(line: 61, column: 14, scope: !9803, inlinedAt: !10416)
!10529 = !DILocation(line: 61, column: 16, scope: !9803, inlinedAt: !10416)
!10530 = !DILocation(line: 61, column: 9, scope: !9803, inlinedAt: !10416)
!10531 = !DILocation(line: 61, column: 20, scope: !9803, inlinedAt: !10416)
!10532 = !DILocation(line: 59, column: 26, scope: !9825, inlinedAt: !10416)
!10533 = !DILocation(line: 59, column: 5, scope: !9825, inlinedAt: !10416)
!10534 = !DILocation(line: 145, column: 1, scope: !10414)
!10535 = distinct !DISubprogram(name: "horizontal_compose_haar1i_12bit", scope: !174, file: !174, line: 147, type: !63, isLocal: true, isDefinition: true, scopeLine: 148, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!10536 = !DILocation(line: 55, column: 77, scope: !9669, inlinedAt: !10537)
!10537 = distinct !DILocation(line: 137, column: 5, scope: !10417, inlinedAt: !10538)
!10538 = distinct !DILocation(line: 151, column: 5, scope: !10535)
!10539 = !DILocation(line: 55, column: 91, scope: !9669, inlinedAt: !10537)
!10540 = !DILocation(line: 55, column: 106, scope: !9669, inlinedAt: !10537)
!10541 = !DILocation(line: 55, column: 116, scope: !9669, inlinedAt: !10537)
!10542 = !DILocation(line: 56, column: 53, scope: !9669, inlinedAt: !10537)
!10543 = !DILocation(line: 56, column: 62, scope: !9669, inlinedAt: !10537)
!10544 = !DILocation(line: 58, column: 9, scope: !9669, inlinedAt: !10537)
!10545 = !DILocation(line: 126, column: 91, scope: !10417, inlinedAt: !10538)
!10546 = !DILocation(line: 126, column: 103, scope: !10417, inlinedAt: !10538)
!10547 = !DILocation(line: 127, column: 67, scope: !10417, inlinedAt: !10538)
!10548 = !DILocation(line: 127, column: 74, scope: !10417, inlinedAt: !10538)
!10549 = !DILocation(line: 129, column: 15, scope: !10417, inlinedAt: !10538)
!10550 = !DILocation(line: 130, column: 9, scope: !10417, inlinedAt: !10538)
!10551 = !DILocalVariable(name: "_b", arg: 1, scope: !10535, file: !174, line: 147, type: !20)
!10552 = !DILocation(line: 147, column: 54, scope: !10535)
!10553 = !DILocalVariable(name: "_temp", arg: 2, scope: !10535, file: !174, line: 147, type: !20)
!10554 = !DILocation(line: 147, column: 67, scope: !10535)
!10555 = !DILocalVariable(name: "w", arg: 3, scope: !10535, file: !174, line: 147, type: !18)
!10556 = !DILocation(line: 147, column: 78, scope: !10535)
!10557 = !DILocalVariable(name: "b", scope: !10535, file: !174, line: 149, type: !28)
!10558 = !DILocation(line: 149, column: 14, scope: !10535)
!10559 = !DILocation(line: 149, column: 29, scope: !10535)
!10560 = !DILocation(line: 149, column: 18, scope: !10535)
!10561 = !DILocalVariable(name: "temp", scope: !10535, file: !174, line: 150, type: !28)
!10562 = !DILocation(line: 150, column: 14, scope: !10535)
!10563 = !DILocation(line: 150, column: 32, scope: !10535)
!10564 = !DILocation(line: 150, column: 21, scope: !10535)
!10565 = !DILocation(line: 151, column: 36, scope: !10535)
!10566 = !DILocation(line: 151, column: 39, scope: !10535)
!10567 = !DILocation(line: 151, column: 45, scope: !10535)
!10568 = !DILocation(line: 151, column: 5, scope: !10535)
!10569 = !DILocation(line: 129, column: 20, scope: !10417, inlinedAt: !10538)
!10570 = !DILocation(line: 129, column: 22, scope: !10417, inlinedAt: !10538)
!10571 = !DILocation(line: 132, column: 12, scope: !10458, inlinedAt: !10538)
!10572 = !DILocation(line: 132, column: 10, scope: !10458, inlinedAt: !10538)
!10573 = !DILocation(line: 132, column: 17, scope: !10461, inlinedAt: !10538)
!10574 = !DILocation(line: 132, column: 21, scope: !10461, inlinedAt: !10538)
!10575 = !DILocation(line: 132, column: 19, scope: !10461, inlinedAt: !10538)
!10576 = !DILocation(line: 132, column: 5, scope: !10461, inlinedAt: !10538)
!10577 = !DILocation(line: 133, column: 29, scope: !10467, inlinedAt: !10538)
!10578 = !DILocation(line: 133, column: 27, scope: !10467, inlinedAt: !10538)
!10579 = !DILocation(line: 133, column: 54, scope: !10467, inlinedAt: !10538)
!10580 = !DILocation(line: 133, column: 56, scope: !10467, inlinedAt: !10538)
!10581 = !DILocation(line: 133, column: 55, scope: !10467, inlinedAt: !10538)
!10582 = !DILocation(line: 133, column: 52, scope: !10467, inlinedAt: !10538)
!10583 = !DILocation(line: 133, column: 60, scope: !10467, inlinedAt: !10538)
!10584 = !DILocation(line: 133, column: 66, scope: !10467, inlinedAt: !10538)
!10585 = !DILocation(line: 133, column: 33, scope: !10467, inlinedAt: !10538)
!10586 = !DILocation(line: 133, column: 14, scope: !10467, inlinedAt: !10538)
!10587 = !DILocation(line: 133, column: 9, scope: !10467, inlinedAt: !10538)
!10588 = !DILocation(line: 133, column: 18, scope: !10467, inlinedAt: !10538)
!10589 = !DILocation(line: 134, column: 31, scope: !10467, inlinedAt: !10538)
!10590 = !DILocation(line: 134, column: 33, scope: !10467, inlinedAt: !10538)
!10591 = !DILocation(line: 134, column: 32, scope: !10467, inlinedAt: !10538)
!10592 = !DILocation(line: 134, column: 29, scope: !10467, inlinedAt: !10538)
!10593 = !DILocation(line: 134, column: 55, scope: !10467, inlinedAt: !10538)
!10594 = !DILocation(line: 134, column: 50, scope: !10467, inlinedAt: !10538)
!10595 = !DILocation(line: 134, column: 37, scope: !10467, inlinedAt: !10538)
!10596 = !DILocation(line: 134, column: 14, scope: !10467, inlinedAt: !10538)
!10597 = !DILocation(line: 134, column: 16, scope: !10467, inlinedAt: !10538)
!10598 = !DILocation(line: 134, column: 15, scope: !10467, inlinedAt: !10538)
!10599 = !DILocation(line: 134, column: 9, scope: !10467, inlinedAt: !10538)
!10600 = !DILocation(line: 134, column: 20, scope: !10467, inlinedAt: !10538)
!10601 = !DILocation(line: 132, column: 26, scope: !10492, inlinedAt: !10538)
!10602 = !DILocation(line: 132, column: 5, scope: !10492, inlinedAt: !10538)
!10603 = !DILocation(line: 137, column: 22, scope: !10417, inlinedAt: !10538)
!10604 = !DILocation(line: 137, column: 25, scope: !10417, inlinedAt: !10538)
!10605 = !DILocation(line: 137, column: 31, scope: !10417, inlinedAt: !10538)
!10606 = !DILocation(line: 137, column: 36, scope: !10417, inlinedAt: !10538)
!10607 = !DILocation(line: 137, column: 35, scope: !10417, inlinedAt: !10538)
!10608 = !DILocation(line: 137, column: 40, scope: !10417, inlinedAt: !10538)
!10609 = !DILocation(line: 137, column: 44, scope: !10417, inlinedAt: !10538)
!10610 = !DILocation(line: 137, column: 51, scope: !10417, inlinedAt: !10538)
!10611 = !DILocation(line: 137, column: 5, scope: !10417, inlinedAt: !10538)
!10612 = !DILocation(line: 59, column: 12, scope: !9794, inlinedAt: !10537)
!10613 = !DILocation(line: 59, column: 10, scope: !9794, inlinedAt: !10537)
!10614 = !DILocation(line: 59, column: 17, scope: !9797, inlinedAt: !10537)
!10615 = !DILocation(line: 59, column: 21, scope: !9797, inlinedAt: !10537)
!10616 = !DILocation(line: 59, column: 19, scope: !9797, inlinedAt: !10537)
!10617 = !DILocation(line: 59, column: 5, scope: !9797, inlinedAt: !10537)
!10618 = !DILocation(line: 60, column: 33, scope: !9803, inlinedAt: !10537)
!10619 = !DILocation(line: 60, column: 28, scope: !9803, inlinedAt: !10537)
!10620 = !DILocation(line: 60, column: 48, scope: !9803, inlinedAt: !10537)
!10621 = !DILocation(line: 60, column: 36, scope: !9803, inlinedAt: !10537)
!10622 = !DILocation(line: 60, column: 57, scope: !9803, inlinedAt: !10537)
!10623 = !DILocation(line: 60, column: 54, scope: !9803, inlinedAt: !10537)
!10624 = !DILocation(line: 60, column: 15, scope: !9803, inlinedAt: !10537)
!10625 = !DILocation(line: 60, column: 14, scope: !9803, inlinedAt: !10537)
!10626 = !DILocation(line: 60, column: 9, scope: !9803, inlinedAt: !10537)
!10627 = !DILocation(line: 60, column: 19, scope: !9803, inlinedAt: !10537)
!10628 = !DILocation(line: 61, column: 34, scope: !9803, inlinedAt: !10537)
!10629 = !DILocation(line: 61, column: 29, scope: !9803, inlinedAt: !10537)
!10630 = !DILocation(line: 61, column: 49, scope: !9803, inlinedAt: !10537)
!10631 = !DILocation(line: 61, column: 37, scope: !9803, inlinedAt: !10537)
!10632 = !DILocation(line: 61, column: 58, scope: !9803, inlinedAt: !10537)
!10633 = !DILocation(line: 61, column: 55, scope: !9803, inlinedAt: !10537)
!10634 = !DILocation(line: 61, column: 15, scope: !9803, inlinedAt: !10537)
!10635 = !DILocation(line: 61, column: 14, scope: !9803, inlinedAt: !10537)
!10636 = !DILocation(line: 61, column: 16, scope: !9803, inlinedAt: !10537)
!10637 = !DILocation(line: 61, column: 9, scope: !9803, inlinedAt: !10537)
!10638 = !DILocation(line: 61, column: 20, scope: !9803, inlinedAt: !10537)
!10639 = !DILocation(line: 59, column: 26, scope: !9825, inlinedAt: !10537)
!10640 = !DILocation(line: 59, column: 5, scope: !9825, inlinedAt: !10537)
!10641 = !DILocation(line: 152, column: 1, scope: !10535)
!10642 = distinct !DISubprogram(name: "spatial_compose_fidelity_12bit", scope: !174, file: !174, line: 426, type: !1596, isLocal: true, isDefinition: true, scopeLine: 427, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!10643 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !10644)
!10644 = distinct !DILocation(line: 441, column: 32, scope: !10645)
!10645 = distinct !DILexicalBlock(scope: !10646, file: !174, line: 440, column: 9)
!10646 = distinct !DILexicalBlock(scope: !10647, file: !174, line: 440, column: 9)
!10647 = distinct !DILexicalBlock(scope: !10648, file: !174, line: 439, column: 37)
!10648 = distinct !DILexicalBlock(scope: !10649, file: !174, line: 439, column: 5)
!10649 = distinct !DILexicalBlock(scope: !10642, file: !174, line: 439, column: 5)
!10650 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !10644)
!10651 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !10644)
!10652 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !10653)
!10653 = distinct !DILocation(line: 435, column: 32, scope: !10654)
!10654 = distinct !DILexicalBlock(scope: !10655, file: !174, line: 434, column: 9)
!10655 = distinct !DILexicalBlock(scope: !10656, file: !174, line: 434, column: 9)
!10656 = distinct !DILexicalBlock(scope: !10657, file: !174, line: 433, column: 37)
!10657 = distinct !DILexicalBlock(scope: !10658, file: !174, line: 433, column: 5)
!10658 = distinct !DILexicalBlock(scope: !10642, file: !174, line: 433, column: 5)
!10659 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !10653)
!10660 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !10653)
!10661 = !DILocalVariable(name: "d", arg: 1, scope: !10642, file: !174, line: 426, type: !37)
!10662 = !DILocation(line: 426, column: 56, scope: !10642)
!10663 = !DILocalVariable(name: "level", arg: 2, scope: !10642, file: !174, line: 426, type: !18)
!10664 = !DILocation(line: 426, column: 63, scope: !10642)
!10665 = !DILocalVariable(name: "width", arg: 3, scope: !10642, file: !174, line: 426, type: !18)
!10666 = !DILocation(line: 426, column: 74, scope: !10642)
!10667 = !DILocalVariable(name: "height", arg: 4, scope: !10642, file: !174, line: 426, type: !18)
!10668 = !DILocation(line: 426, column: 85, scope: !10642)
!10669 = !DILocalVariable(name: "stride", arg: 5, scope: !10642, file: !174, line: 426, type: !18)
!10670 = !DILocation(line: 426, column: 97, scope: !10642)
!10671 = !DILocalVariable(name: "vertical_compose_l0", scope: !10642, file: !174, line: 428, type: !3344)
!10672 = !DILocation(line: 428, column: 27, scope: !10642)
!10673 = !DILocation(line: 428, column: 56, scope: !10642)
!10674 = !DILocation(line: 428, column: 59, scope: !10642)
!10675 = !DILocation(line: 428, column: 49, scope: !10642)
!10676 = !DILocalVariable(name: "vertical_compose_h0", scope: !10642, file: !174, line: 429, type: !3344)
!10677 = !DILocation(line: 429, column: 27, scope: !10642)
!10678 = !DILocation(line: 429, column: 56, scope: !10642)
!10679 = !DILocation(line: 429, column: 59, scope: !10642)
!10680 = !DILocation(line: 429, column: 49, scope: !10642)
!10681 = !DILocalVariable(name: "i", scope: !10642, file: !174, line: 430, type: !18)
!10682 = !DILocation(line: 430, column: 9, scope: !10642)
!10683 = !DILocalVariable(name: "y", scope: !10642, file: !174, line: 430, type: !18)
!10684 = !DILocation(line: 430, column: 12, scope: !10642)
!10685 = !DILocalVariable(name: "b", scope: !10642, file: !174, line: 431, type: !71)
!10686 = !DILocation(line: 431, column: 14, scope: !10642)
!10687 = !DILocation(line: 433, column: 12, scope: !10658)
!10688 = !DILocation(line: 433, column: 10, scope: !10658)
!10689 = !DILocation(line: 433, column: 17, scope: !10690)
!10690 = !DILexicalBlockFile(scope: !10657, file: !174, discriminator: 1)
!10691 = !DILocation(line: 433, column: 21, scope: !10690)
!10692 = !DILocation(line: 433, column: 19, scope: !10690)
!10693 = !DILocation(line: 433, column: 5, scope: !10690)
!10694 = !DILocation(line: 434, column: 16, scope: !10655)
!10695 = !DILocation(line: 434, column: 14, scope: !10655)
!10696 = !DILocation(line: 434, column: 21, scope: !10697)
!10697 = !DILexicalBlockFile(scope: !10654, file: !174, discriminator: 1)
!10698 = !DILocation(line: 434, column: 23, scope: !10697)
!10699 = !DILocation(line: 434, column: 9, scope: !10697)
!10700 = !DILocation(line: 435, column: 20, scope: !10654)
!10701 = !DILocation(line: 435, column: 23, scope: !10654)
!10702 = !DILocation(line: 435, column: 43, scope: !10654)
!10703 = !DILocation(line: 435, column: 44, scope: !10654)
!10704 = !DILocation(line: 435, column: 51, scope: !10654)
!10705 = !DILocation(line: 435, column: 50, scope: !10654)
!10706 = !DILocation(line: 435, column: 47, scope: !10654)
!10707 = !DILocation(line: 435, column: 58, scope: !10654)
!10708 = !DILocation(line: 435, column: 64, scope: !10654)
!10709 = !DILocation(line: 435, column: 32, scope: !10654)
!10710 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !10653)
!10711 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !10653)
!10712 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !10653)
!10713 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !10653)
!10714 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !10653)
!10715 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !10653)
!10716 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !10653)
!10717 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !10653)
!10718 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !10653)
!10719 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !10653)
!10720 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !10653)
!10721 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !10653)
!10722 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !10653)
!10723 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !10653)
!10724 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !10653)
!10725 = !DILocation(line: 435, column: 68, scope: !10654)
!10726 = !DILocation(line: 435, column: 67, scope: !10654)
!10727 = !DILocation(line: 435, column: 30, scope: !10654)
!10728 = !DILocation(line: 435, column: 15, scope: !10654)
!10729 = !DILocation(line: 435, column: 13, scope: !10654)
!10730 = !DILocation(line: 435, column: 18, scope: !10654)
!10731 = !DILocation(line: 434, column: 29, scope: !10732)
!10732 = !DILexicalBlockFile(scope: !10654, file: !174, discriminator: 2)
!10733 = !DILocation(line: 434, column: 9, scope: !10732)
!10734 = distinct !{!10734, !10735}
!10735 = !DILocation(line: 434, column: 9, scope: !10656)
!10736 = !DILocation(line: 436, column: 9, scope: !10656)
!10737 = !DILocation(line: 436, column: 29, scope: !10656)
!10738 = !DILocation(line: 436, column: 32, scope: !10656)
!10739 = !DILocation(line: 436, column: 41, scope: !10656)
!10740 = !DILocation(line: 436, column: 43, scope: !10656)
!10741 = !DILocation(line: 436, column: 42, scope: !10656)
!10742 = !DILocation(line: 436, column: 39, scope: !10656)
!10743 = !DILocation(line: 436, column: 51, scope: !10656)
!10744 = !DILocation(line: 436, column: 54, scope: !10656)
!10745 = !DILocation(line: 437, column: 5, scope: !10656)
!10746 = !DILocation(line: 433, column: 31, scope: !10747)
!10747 = !DILexicalBlockFile(scope: !10657, file: !174, discriminator: 2)
!10748 = !DILocation(line: 433, column: 5, scope: !10747)
!10749 = distinct !{!10749, !10750}
!10750 = !DILocation(line: 433, column: 5, scope: !10642)
!10751 = !DILocation(line: 439, column: 12, scope: !10649)
!10752 = !DILocation(line: 439, column: 10, scope: !10649)
!10753 = !DILocation(line: 439, column: 17, scope: !10754)
!10754 = !DILexicalBlockFile(scope: !10648, file: !174, discriminator: 1)
!10755 = !DILocation(line: 439, column: 21, scope: !10754)
!10756 = !DILocation(line: 439, column: 19, scope: !10754)
!10757 = !DILocation(line: 439, column: 5, scope: !10754)
!10758 = !DILocation(line: 440, column: 16, scope: !10646)
!10759 = !DILocation(line: 440, column: 14, scope: !10646)
!10760 = !DILocation(line: 440, column: 21, scope: !10761)
!10761 = !DILexicalBlockFile(scope: !10645, file: !174, discriminator: 1)
!10762 = !DILocation(line: 440, column: 23, scope: !10761)
!10763 = !DILocation(line: 440, column: 9, scope: !10761)
!10764 = !DILocation(line: 441, column: 20, scope: !10645)
!10765 = !DILocation(line: 441, column: 23, scope: !10645)
!10766 = !DILocation(line: 441, column: 43, scope: !10645)
!10767 = !DILocation(line: 441, column: 44, scope: !10645)
!10768 = !DILocation(line: 441, column: 51, scope: !10645)
!10769 = !DILocation(line: 441, column: 50, scope: !10645)
!10770 = !DILocation(line: 441, column: 47, scope: !10645)
!10771 = !DILocation(line: 441, column: 58, scope: !10645)
!10772 = !DILocation(line: 441, column: 64, scope: !10645)
!10773 = !DILocation(line: 441, column: 32, scope: !10645)
!10774 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !10644)
!10775 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !10644)
!10776 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !10644)
!10777 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !10644)
!10778 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !10644)
!10779 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !10644)
!10780 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !10644)
!10781 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !10644)
!10782 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !10644)
!10783 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !10644)
!10784 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !10644)
!10785 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !10644)
!10786 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !10644)
!10787 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !10644)
!10788 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !10644)
!10789 = !DILocation(line: 441, column: 68, scope: !10645)
!10790 = !DILocation(line: 441, column: 67, scope: !10645)
!10791 = !DILocation(line: 441, column: 30, scope: !10645)
!10792 = !DILocation(line: 441, column: 15, scope: !10645)
!10793 = !DILocation(line: 441, column: 13, scope: !10645)
!10794 = !DILocation(line: 441, column: 18, scope: !10645)
!10795 = !DILocation(line: 440, column: 29, scope: !10796)
!10796 = !DILexicalBlockFile(scope: !10645, file: !174, discriminator: 2)
!10797 = !DILocation(line: 440, column: 9, scope: !10796)
!10798 = distinct !{!10798, !10799}
!10799 = !DILocation(line: 440, column: 9, scope: !10647)
!10800 = !DILocation(line: 442, column: 9, scope: !10647)
!10801 = !DILocation(line: 442, column: 29, scope: !10647)
!10802 = !DILocation(line: 442, column: 32, scope: !10647)
!10803 = !DILocation(line: 442, column: 41, scope: !10647)
!10804 = !DILocation(line: 442, column: 43, scope: !10647)
!10805 = !DILocation(line: 442, column: 42, scope: !10647)
!10806 = !DILocation(line: 442, column: 39, scope: !10647)
!10807 = !DILocation(line: 442, column: 51, scope: !10647)
!10808 = !DILocation(line: 442, column: 54, scope: !10647)
!10809 = !DILocation(line: 443, column: 5, scope: !10647)
!10810 = !DILocation(line: 439, column: 31, scope: !10811)
!10811 = !DILexicalBlockFile(scope: !10648, file: !174, discriminator: 2)
!10812 = !DILocation(line: 439, column: 5, scope: !10811)
!10813 = distinct !{!10813, !10814}
!10814 = !DILocation(line: 439, column: 5, scope: !10642)
!10815 = !DILocation(line: 445, column: 12, scope: !10816)
!10816 = distinct !DILexicalBlock(scope: !10642, file: !174, line: 445, column: 5)
!10817 = !DILocation(line: 445, column: 10, scope: !10816)
!10818 = !DILocation(line: 445, column: 17, scope: !10819)
!10819 = !DILexicalBlockFile(scope: !10820, file: !174, discriminator: 1)
!10820 = distinct !DILexicalBlock(scope: !10816, file: !174, line: 445, column: 5)
!10821 = !DILocation(line: 445, column: 21, scope: !10819)
!10822 = !DILocation(line: 445, column: 19, scope: !10819)
!10823 = !DILocation(line: 445, column: 5, scope: !10819)
!10824 = !DILocation(line: 446, column: 9, scope: !10820)
!10825 = !DILocation(line: 446, column: 12, scope: !10820)
!10826 = !DILocation(line: 446, column: 31, scope: !10820)
!10827 = !DILocation(line: 446, column: 34, scope: !10820)
!10828 = !DILocation(line: 446, column: 43, scope: !10820)
!10829 = !DILocation(line: 446, column: 45, scope: !10820)
!10830 = !DILocation(line: 446, column: 44, scope: !10820)
!10831 = !DILocation(line: 446, column: 41, scope: !10820)
!10832 = !DILocation(line: 446, column: 53, scope: !10820)
!10833 = !DILocation(line: 446, column: 56, scope: !10820)
!10834 = !DILocation(line: 446, column: 62, scope: !10820)
!10835 = !DILocation(line: 445, column: 30, scope: !10836)
!10836 = !DILexicalBlockFile(scope: !10820, file: !174, discriminator: 2)
!10837 = !DILocation(line: 445, column: 5, scope: !10836)
!10838 = distinct !{!10838, !10839}
!10839 = !DILocation(line: 445, column: 5, scope: !10642)
!10840 = !DILocation(line: 448, column: 22, scope: !10642)
!10841 = !DILocation(line: 448, column: 28, scope: !10642)
!10842 = !DILocation(line: 448, column: 11, scope: !10642)
!10843 = !DILocation(line: 448, column: 5, scope: !10642)
!10844 = !DILocation(line: 448, column: 8, scope: !10642)
!10845 = !DILocation(line: 448, column: 18, scope: !10642)
!10846 = !DILocation(line: 448, column: 20, scope: !10642)
!10847 = !DILocation(line: 449, column: 1, scope: !10642)
!10848 = distinct !DISubprogram(name: "vertical_compose_fidelityiL0_12bit", scope: !174, file: !174, line: 273, type: !3346, isLocal: true, isDefinition: true, scopeLine: 274, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!10849 = !DILocalVariable(name: "_dst", arg: 1, scope: !10848, file: !174, line: 273, type: !20)
!10850 = !DILocation(line: 273, column: 57, scope: !10848)
!10851 = !DILocalVariable(name: "_b", arg: 2, scope: !10848, file: !174, line: 273, type: !3348)
!10852 = !DILocation(line: 273, column: 72, scope: !10848)
!10853 = !DILocalVariable(name: "width", arg: 3, scope: !10848, file: !174, line: 273, type: !18)
!10854 = !DILocation(line: 273, column: 83, scope: !10848)
!10855 = !DILocalVariable(name: "i", scope: !10848, file: !174, line: 275, type: !18)
!10856 = !DILocation(line: 275, column: 9, scope: !10848)
!10857 = !DILocalVariable(name: "dst", scope: !10848, file: !174, line: 276, type: !28)
!10858 = !DILocation(line: 276, column: 14, scope: !10848)
!10859 = !DILocation(line: 276, column: 31, scope: !10848)
!10860 = !DILocation(line: 276, column: 20, scope: !10848)
!10861 = !DILocalVariable(name: "b0", scope: !10848, file: !174, line: 277, type: !28)
!10862 = !DILocation(line: 277, column: 14, scope: !10848)
!10863 = !DILocation(line: 277, column: 30, scope: !10848)
!10864 = !DILocation(line: 277, column: 19, scope: !10848)
!10865 = !DILocalVariable(name: "b1", scope: !10848, file: !174, line: 278, type: !28)
!10866 = !DILocation(line: 278, column: 14, scope: !10848)
!10867 = !DILocation(line: 278, column: 30, scope: !10848)
!10868 = !DILocation(line: 278, column: 19, scope: !10848)
!10869 = !DILocalVariable(name: "b2", scope: !10848, file: !174, line: 279, type: !28)
!10870 = !DILocation(line: 279, column: 14, scope: !10848)
!10871 = !DILocation(line: 279, column: 30, scope: !10848)
!10872 = !DILocation(line: 279, column: 19, scope: !10848)
!10873 = !DILocalVariable(name: "b3", scope: !10848, file: !174, line: 280, type: !28)
!10874 = !DILocation(line: 280, column: 14, scope: !10848)
!10875 = !DILocation(line: 280, column: 30, scope: !10848)
!10876 = !DILocation(line: 280, column: 19, scope: !10848)
!10877 = !DILocalVariable(name: "b4", scope: !10848, file: !174, line: 281, type: !28)
!10878 = !DILocation(line: 281, column: 14, scope: !10848)
!10879 = !DILocation(line: 281, column: 30, scope: !10848)
!10880 = !DILocation(line: 281, column: 19, scope: !10848)
!10881 = !DILocalVariable(name: "b5", scope: !10848, file: !174, line: 282, type: !28)
!10882 = !DILocation(line: 282, column: 14, scope: !10848)
!10883 = !DILocation(line: 282, column: 30, scope: !10848)
!10884 = !DILocation(line: 282, column: 19, scope: !10848)
!10885 = !DILocalVariable(name: "b6", scope: !10848, file: !174, line: 283, type: !28)
!10886 = !DILocation(line: 283, column: 14, scope: !10848)
!10887 = !DILocation(line: 283, column: 30, scope: !10848)
!10888 = !DILocation(line: 283, column: 19, scope: !10848)
!10889 = !DILocalVariable(name: "b7", scope: !10848, file: !174, line: 284, type: !28)
!10890 = !DILocation(line: 284, column: 14, scope: !10848)
!10891 = !DILocation(line: 284, column: 30, scope: !10848)
!10892 = !DILocation(line: 284, column: 19, scope: !10848)
!10893 = !DILocation(line: 286, column: 10, scope: !10894)
!10894 = distinct !DILexicalBlock(scope: !10848, file: !174, line: 286, column: 5)
!10895 = !DILocation(line: 286, column: 9, scope: !10894)
!10896 = !DILocation(line: 286, column: 14, scope: !10897)
!10897 = !DILexicalBlockFile(scope: !10898, file: !174, discriminator: 1)
!10898 = distinct !DILexicalBlock(scope: !10894, file: !174, line: 286, column: 5)
!10899 = !DILocation(line: 286, column: 16, scope: !10897)
!10900 = !DILocation(line: 286, column: 15, scope: !10897)
!10901 = !DILocation(line: 286, column: 5, scope: !10897)
!10902 = !DILocation(line: 287, column: 33, scope: !10903)
!10903 = distinct !DILexicalBlock(scope: !10898, file: !174, line: 286, column: 27)
!10904 = !DILocation(line: 287, column: 29, scope: !10903)
!10905 = !DILocation(line: 287, column: 52, scope: !10903)
!10906 = !DILocation(line: 287, column: 49, scope: !10903)
!10907 = !DILocation(line: 287, column: 68, scope: !10903)
!10908 = !DILocation(line: 287, column: 65, scope: !10903)
!10909 = !DILocation(line: 287, column: 54, scope: !10903)
!10910 = !DILocation(line: 287, column: 47, scope: !10903)
!10911 = !DILocation(line: 287, column: 81, scope: !10903)
!10912 = !DILocation(line: 287, column: 78, scope: !10903)
!10913 = !DILocation(line: 287, column: 97, scope: !10903)
!10914 = !DILocation(line: 287, column: 94, scope: !10903)
!10915 = !DILocation(line: 287, column: 83, scope: !10903)
!10916 = !DILocation(line: 287, column: 76, scope: !10903)
!10917 = !DILocation(line: 287, column: 72, scope: !10903)
!10918 = !DILocation(line: 287, column: 110, scope: !10903)
!10919 = !DILocation(line: 287, column: 107, scope: !10903)
!10920 = !DILocation(line: 287, column: 126, scope: !10903)
!10921 = !DILocation(line: 287, column: 123, scope: !10903)
!10922 = !DILocation(line: 287, column: 112, scope: !10903)
!10923 = !DILocation(line: 287, column: 105, scope: !10903)
!10924 = !DILocation(line: 287, column: 101, scope: !10903)
!10925 = !DILocation(line: 287, column: 140, scope: !10903)
!10926 = !DILocation(line: 287, column: 137, scope: !10903)
!10927 = !DILocation(line: 287, column: 156, scope: !10903)
!10928 = !DILocation(line: 287, column: 153, scope: !10903)
!10929 = !DILocation(line: 287, column: 142, scope: !10903)
!10930 = !DILocation(line: 287, column: 135, scope: !10903)
!10931 = !DILocation(line: 287, column: 130, scope: !10903)
!10932 = !DILocation(line: 287, column: 160, scope: !10903)
!10933 = !DILocation(line: 287, column: 167, scope: !10903)
!10934 = !DILocation(line: 287, column: 36, scope: !10903)
!10935 = !DILocation(line: 287, column: 13, scope: !10903)
!10936 = !DILocation(line: 287, column: 9, scope: !10903)
!10937 = !DILocation(line: 287, column: 16, scope: !10903)
!10938 = !DILocation(line: 288, column: 5, scope: !10903)
!10939 = !DILocation(line: 286, column: 24, scope: !10940)
!10940 = !DILexicalBlockFile(scope: !10898, file: !174, discriminator: 2)
!10941 = !DILocation(line: 286, column: 5, scope: !10940)
!10942 = distinct !{!10942, !10943}
!10943 = !DILocation(line: 286, column: 5, scope: !10848)
!10944 = !DILocation(line: 289, column: 1, scope: !10848)
!10945 = distinct !DISubprogram(name: "vertical_compose_fidelityiH0_12bit", scope: !174, file: !174, line: 256, type: !3346, isLocal: true, isDefinition: true, scopeLine: 257, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!10946 = !DILocalVariable(name: "_dst", arg: 1, scope: !10945, file: !174, line: 256, type: !20)
!10947 = !DILocation(line: 256, column: 57, scope: !10945)
!10948 = !DILocalVariable(name: "_b", arg: 2, scope: !10945, file: !174, line: 256, type: !3348)
!10949 = !DILocation(line: 256, column: 72, scope: !10945)
!10950 = !DILocalVariable(name: "width", arg: 3, scope: !10945, file: !174, line: 256, type: !18)
!10951 = !DILocation(line: 256, column: 83, scope: !10945)
!10952 = !DILocalVariable(name: "i", scope: !10945, file: !174, line: 258, type: !18)
!10953 = !DILocation(line: 258, column: 9, scope: !10945)
!10954 = !DILocalVariable(name: "dst", scope: !10945, file: !174, line: 259, type: !28)
!10955 = !DILocation(line: 259, column: 14, scope: !10945)
!10956 = !DILocation(line: 259, column: 31, scope: !10945)
!10957 = !DILocation(line: 259, column: 20, scope: !10945)
!10958 = !DILocalVariable(name: "b0", scope: !10945, file: !174, line: 260, type: !28)
!10959 = !DILocation(line: 260, column: 14, scope: !10945)
!10960 = !DILocation(line: 260, column: 30, scope: !10945)
!10961 = !DILocation(line: 260, column: 19, scope: !10945)
!10962 = !DILocalVariable(name: "b1", scope: !10945, file: !174, line: 261, type: !28)
!10963 = !DILocation(line: 261, column: 14, scope: !10945)
!10964 = !DILocation(line: 261, column: 30, scope: !10945)
!10965 = !DILocation(line: 261, column: 19, scope: !10945)
!10966 = !DILocalVariable(name: "b2", scope: !10945, file: !174, line: 262, type: !28)
!10967 = !DILocation(line: 262, column: 14, scope: !10945)
!10968 = !DILocation(line: 262, column: 30, scope: !10945)
!10969 = !DILocation(line: 262, column: 19, scope: !10945)
!10970 = !DILocalVariable(name: "b3", scope: !10945, file: !174, line: 263, type: !28)
!10971 = !DILocation(line: 263, column: 14, scope: !10945)
!10972 = !DILocation(line: 263, column: 30, scope: !10945)
!10973 = !DILocation(line: 263, column: 19, scope: !10945)
!10974 = !DILocalVariable(name: "b4", scope: !10945, file: !174, line: 264, type: !28)
!10975 = !DILocation(line: 264, column: 14, scope: !10945)
!10976 = !DILocation(line: 264, column: 30, scope: !10945)
!10977 = !DILocation(line: 264, column: 19, scope: !10945)
!10978 = !DILocalVariable(name: "b5", scope: !10945, file: !174, line: 265, type: !28)
!10979 = !DILocation(line: 265, column: 14, scope: !10945)
!10980 = !DILocation(line: 265, column: 30, scope: !10945)
!10981 = !DILocation(line: 265, column: 19, scope: !10945)
!10982 = !DILocalVariable(name: "b6", scope: !10945, file: !174, line: 266, type: !28)
!10983 = !DILocation(line: 266, column: 14, scope: !10945)
!10984 = !DILocation(line: 266, column: 30, scope: !10945)
!10985 = !DILocation(line: 266, column: 19, scope: !10945)
!10986 = !DILocalVariable(name: "b7", scope: !10945, file: !174, line: 267, type: !28)
!10987 = !DILocation(line: 267, column: 14, scope: !10945)
!10988 = !DILocation(line: 267, column: 30, scope: !10945)
!10989 = !DILocation(line: 267, column: 19, scope: !10945)
!10990 = !DILocation(line: 268, column: 10, scope: !10991)
!10991 = distinct !DILexicalBlock(scope: !10945, file: !174, line: 268, column: 5)
!10992 = !DILocation(line: 268, column: 9, scope: !10991)
!10993 = !DILocation(line: 268, column: 14, scope: !10994)
!10994 = !DILexicalBlockFile(scope: !10995, file: !174, discriminator: 1)
!10995 = distinct !DILexicalBlock(scope: !10991, file: !174, line: 268, column: 5)
!10996 = !DILocation(line: 268, column: 16, scope: !10994)
!10997 = !DILocation(line: 268, column: 15, scope: !10994)
!10998 = !DILocation(line: 268, column: 5, scope: !10994)
!10999 = !DILocation(line: 269, column: 33, scope: !11000)
!11000 = distinct !DILexicalBlock(scope: !10995, file: !174, line: 268, column: 27)
!11001 = !DILocation(line: 269, column: 29, scope: !11000)
!11002 = !DILocation(line: 269, column: 52, scope: !11000)
!11003 = !DILocation(line: 269, column: 49, scope: !11000)
!11004 = !DILocation(line: 269, column: 68, scope: !11000)
!11005 = !DILocation(line: 269, column: 65, scope: !11000)
!11006 = !DILocation(line: 269, column: 54, scope: !11000)
!11007 = !DILocation(line: 269, column: 47, scope: !11000)
!11008 = !DILocation(line: 269, column: 81, scope: !11000)
!11009 = !DILocation(line: 269, column: 78, scope: !11000)
!11010 = !DILocation(line: 269, column: 97, scope: !11000)
!11011 = !DILocation(line: 269, column: 94, scope: !11000)
!11012 = !DILocation(line: 269, column: 83, scope: !11000)
!11013 = !DILocation(line: 269, column: 76, scope: !11000)
!11014 = !DILocation(line: 269, column: 72, scope: !11000)
!11015 = !DILocation(line: 269, column: 110, scope: !11000)
!11016 = !DILocation(line: 269, column: 107, scope: !11000)
!11017 = !DILocation(line: 269, column: 126, scope: !11000)
!11018 = !DILocation(line: 269, column: 123, scope: !11000)
!11019 = !DILocation(line: 269, column: 112, scope: !11000)
!11020 = !DILocation(line: 269, column: 105, scope: !11000)
!11021 = !DILocation(line: 269, column: 101, scope: !11000)
!11022 = !DILocation(line: 269, column: 139, scope: !11000)
!11023 = !DILocation(line: 269, column: 136, scope: !11000)
!11024 = !DILocation(line: 269, column: 155, scope: !11000)
!11025 = !DILocation(line: 269, column: 152, scope: !11000)
!11026 = !DILocation(line: 269, column: 141, scope: !11000)
!11027 = !DILocation(line: 269, column: 134, scope: !11000)
!11028 = !DILocation(line: 269, column: 130, scope: !11000)
!11029 = !DILocation(line: 269, column: 159, scope: !11000)
!11030 = !DILocation(line: 269, column: 166, scope: !11000)
!11031 = !DILocation(line: 269, column: 36, scope: !11000)
!11032 = !DILocation(line: 269, column: 13, scope: !11000)
!11033 = !DILocation(line: 269, column: 9, scope: !11000)
!11034 = !DILocation(line: 269, column: 16, scope: !11000)
!11035 = !DILocation(line: 270, column: 5, scope: !11000)
!11036 = !DILocation(line: 268, column: 24, scope: !11037)
!11037 = !DILexicalBlockFile(scope: !10995, file: !174, discriminator: 2)
!11038 = !DILocation(line: 268, column: 5, scope: !11037)
!11039 = distinct !{!11039, !11040}
!11040 = !DILocation(line: 268, column: 5, scope: !10945)
!11041 = !DILocation(line: 271, column: 1, scope: !10945)
!11042 = distinct !DISubprogram(name: "horizontal_compose_fidelityi_12bit", scope: !174, file: !174, line: 154, type: !63, isLocal: true, isDefinition: true, scopeLine: 155, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!11043 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !11044)
!11044 = distinct !DILocation(line: 170, column: 24, scope: !11045)
!11045 = distinct !DILexicalBlock(scope: !11046, file: !174, line: 169, column: 9)
!11046 = distinct !DILexicalBlock(scope: !11047, file: !174, line: 169, column: 9)
!11047 = distinct !DILexicalBlock(scope: !11048, file: !174, line: 168, column: 30)
!11048 = distinct !DILexicalBlock(scope: !11049, file: !174, line: 168, column: 5)
!11049 = distinct !DILexicalBlock(scope: !11042, file: !174, line: 168, column: 5)
!11050 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !11044)
!11051 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !11044)
!11052 = !DILocation(line: 55, column: 77, scope: !9669, inlinedAt: !11053)
!11053 = distinct !DILocation(line: 174, column: 5, scope: !11042)
!11054 = !DILocation(line: 55, column: 91, scope: !9669, inlinedAt: !11053)
!11055 = !DILocation(line: 55, column: 106, scope: !9669, inlinedAt: !11053)
!11056 = !DILocation(line: 55, column: 116, scope: !9669, inlinedAt: !11053)
!11057 = !DILocation(line: 56, column: 53, scope: !9669, inlinedAt: !11053)
!11058 = !DILocation(line: 56, column: 62, scope: !9669, inlinedAt: !11053)
!11059 = !DILocation(line: 58, column: 9, scope: !9669, inlinedAt: !11053)
!11060 = !DILocation(line: 127, column: 87, scope: !905, inlinedAt: !11061)
!11061 = distinct !DILocation(line: 164, column: 22, scope: !11062)
!11062 = distinct !DILexicalBlock(scope: !11063, file: !174, line: 163, column: 9)
!11063 = distinct !DILexicalBlock(scope: !11064, file: !174, line: 163, column: 9)
!11064 = distinct !DILexicalBlock(scope: !11065, file: !174, line: 162, column: 30)
!11065 = distinct !DILexicalBlock(scope: !11066, file: !174, line: 162, column: 5)
!11066 = distinct !DILexicalBlock(scope: !11042, file: !174, line: 162, column: 5)
!11067 = !DILocation(line: 127, column: 94, scope: !905, inlinedAt: !11061)
!11068 = !DILocation(line: 127, column: 104, scope: !905, inlinedAt: !11061)
!11069 = !DILocalVariable(name: "_b", arg: 1, scope: !11042, file: !174, line: 154, type: !20)
!11070 = !DILocation(line: 154, column: 57, scope: !11042)
!11071 = !DILocalVariable(name: "_tmp", arg: 2, scope: !11042, file: !174, line: 154, type: !20)
!11072 = !DILocation(line: 154, column: 70, scope: !11042)
!11073 = !DILocalVariable(name: "w", arg: 3, scope: !11042, file: !174, line: 154, type: !18)
!11074 = !DILocation(line: 154, column: 80, scope: !11042)
!11075 = !DILocalVariable(name: "w2", scope: !11042, file: !174, line: 156, type: !1931)
!11076 = !DILocation(line: 156, column: 15, scope: !11042)
!11077 = !DILocation(line: 156, column: 20, scope: !11042)
!11078 = !DILocation(line: 156, column: 22, scope: !11042)
!11079 = !DILocalVariable(name: "i", scope: !11042, file: !174, line: 157, type: !18)
!11080 = !DILocation(line: 157, column: 9, scope: !11042)
!11081 = !DILocalVariable(name: "x", scope: !11042, file: !174, line: 157, type: !18)
!11082 = !DILocation(line: 157, column: 12, scope: !11042)
!11083 = !DILocalVariable(name: "v", scope: !11042, file: !174, line: 158, type: !7454)
!11084 = !DILocation(line: 158, column: 13, scope: !11042)
!11085 = !DILocalVariable(name: "b", scope: !11042, file: !174, line: 159, type: !28)
!11086 = !DILocation(line: 159, column: 14, scope: !11042)
!11087 = !DILocation(line: 159, column: 29, scope: !11042)
!11088 = !DILocation(line: 159, column: 18, scope: !11042)
!11089 = !DILocalVariable(name: "tmp", scope: !11042, file: !174, line: 160, type: !28)
!11090 = !DILocation(line: 160, column: 14, scope: !11042)
!11091 = !DILocation(line: 160, column: 31, scope: !11042)
!11092 = !DILocation(line: 160, column: 20, scope: !11042)
!11093 = !DILocation(line: 162, column: 12, scope: !11066)
!11094 = !DILocation(line: 162, column: 10, scope: !11066)
!11095 = !DILocation(line: 162, column: 17, scope: !11096)
!11096 = !DILexicalBlockFile(scope: !11065, file: !174, discriminator: 1)
!11097 = !DILocation(line: 162, column: 21, scope: !11096)
!11098 = !DILocation(line: 162, column: 19, scope: !11096)
!11099 = !DILocation(line: 162, column: 5, scope: !11096)
!11100 = !DILocation(line: 163, column: 16, scope: !11063)
!11101 = !DILocation(line: 163, column: 14, scope: !11063)
!11102 = !DILocation(line: 163, column: 21, scope: !11103)
!11103 = !DILexicalBlockFile(scope: !11062, file: !174, discriminator: 1)
!11104 = !DILocation(line: 163, column: 23, scope: !11103)
!11105 = !DILocation(line: 163, column: 9, scope: !11103)
!11106 = !DILocation(line: 164, column: 32, scope: !11062)
!11107 = !DILocation(line: 164, column: 33, scope: !11062)
!11108 = !DILocation(line: 164, column: 36, scope: !11062)
!11109 = !DILocation(line: 164, column: 35, scope: !11062)
!11110 = !DILocation(line: 164, column: 42, scope: !11062)
!11111 = !DILocation(line: 164, column: 44, scope: !11062)
!11112 = !DILocation(line: 164, column: 22, scope: !11062)
!11113 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !11061)
!11114 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !11061)
!11115 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !11061)
!11116 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !11061)
!11117 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !11061)
!11118 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !11061)
!11119 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !11061)
!11120 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !11061)
!11121 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !11061)
!11122 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !11061)
!11123 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !11061)
!11124 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !11061)
!11125 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !11061)
!11126 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !11061)
!11127 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !11061)
!11128 = !DILocation(line: 164, column: 20, scope: !11062)
!11129 = !DILocation(line: 164, column: 15, scope: !11062)
!11130 = !DILocation(line: 164, column: 13, scope: !11062)
!11131 = !DILocation(line: 164, column: 18, scope: !11062)
!11132 = !DILocation(line: 163, column: 29, scope: !11133)
!11133 = !DILexicalBlockFile(scope: !11062, file: !174, discriminator: 2)
!11134 = !DILocation(line: 163, column: 9, scope: !11133)
!11135 = distinct !{!11135, !11136}
!11136 = !DILocation(line: 163, column: 9, scope: !11064)
!11137 = !DILocation(line: 165, column: 31, scope: !11064)
!11138 = !DILocation(line: 165, column: 33, scope: !11064)
!11139 = !DILocation(line: 165, column: 32, scope: !11064)
!11140 = !DILocation(line: 165, column: 29, scope: !11064)
!11141 = !DILocation(line: 165, column: 50, scope: !11064)
!11142 = !DILocation(line: 165, column: 65, scope: !11064)
!11143 = !DILocation(line: 165, column: 54, scope: !11064)
!11144 = !DILocation(line: 165, column: 48, scope: !11064)
!11145 = !DILocation(line: 165, column: 77, scope: !11064)
!11146 = !DILocation(line: 165, column: 92, scope: !11064)
!11147 = !DILocation(line: 165, column: 81, scope: !11064)
!11148 = !DILocation(line: 165, column: 75, scope: !11064)
!11149 = !DILocation(line: 165, column: 71, scope: !11064)
!11150 = !DILocation(line: 165, column: 104, scope: !11064)
!11151 = !DILocation(line: 165, column: 119, scope: !11064)
!11152 = !DILocation(line: 165, column: 108, scope: !11064)
!11153 = !DILocation(line: 165, column: 102, scope: !11064)
!11154 = !DILocation(line: 165, column: 98, scope: !11064)
!11155 = !DILocation(line: 165, column: 131, scope: !11064)
!11156 = !DILocation(line: 165, column: 146, scope: !11064)
!11157 = !DILocation(line: 165, column: 135, scope: !11064)
!11158 = !DILocation(line: 165, column: 129, scope: !11064)
!11159 = !DILocation(line: 165, column: 125, scope: !11064)
!11160 = !DILocation(line: 165, column: 152, scope: !11064)
!11161 = !DILocation(line: 165, column: 159, scope: !11064)
!11162 = !DILocation(line: 165, column: 37, scope: !11064)
!11163 = !DILocation(line: 165, column: 13, scope: !11064)
!11164 = !DILocation(line: 165, column: 9, scope: !11064)
!11165 = !DILocation(line: 165, column: 16, scope: !11064)
!11166 = !DILocation(line: 166, column: 5, scope: !11064)
!11167 = !DILocation(line: 162, column: 26, scope: !11168)
!11168 = !DILexicalBlockFile(scope: !11065, file: !174, discriminator: 2)
!11169 = !DILocation(line: 162, column: 5, scope: !11168)
!11170 = distinct !{!11170, !11171}
!11171 = !DILocation(line: 162, column: 5, scope: !11042)
!11172 = !DILocation(line: 168, column: 12, scope: !11049)
!11173 = !DILocation(line: 168, column: 10, scope: !11049)
!11174 = !DILocation(line: 168, column: 17, scope: !11175)
!11175 = !DILexicalBlockFile(scope: !11048, file: !174, discriminator: 1)
!11176 = !DILocation(line: 168, column: 21, scope: !11175)
!11177 = !DILocation(line: 168, column: 19, scope: !11175)
!11178 = !DILocation(line: 168, column: 5, scope: !11175)
!11179 = !DILocation(line: 169, column: 16, scope: !11046)
!11180 = !DILocation(line: 169, column: 14, scope: !11046)
!11181 = !DILocation(line: 169, column: 21, scope: !11182)
!11182 = !DILexicalBlockFile(scope: !11045, file: !174, discriminator: 1)
!11183 = !DILocation(line: 169, column: 23, scope: !11182)
!11184 = !DILocation(line: 169, column: 9, scope: !11182)
!11185 = !DILocation(line: 170, column: 34, scope: !11045)
!11186 = !DILocation(line: 170, column: 35, scope: !11045)
!11187 = !DILocation(line: 170, column: 38, scope: !11045)
!11188 = !DILocation(line: 170, column: 37, scope: !11045)
!11189 = !DILocation(line: 170, column: 44, scope: !11045)
!11190 = !DILocation(line: 170, column: 46, scope: !11045)
!11191 = !DILocation(line: 170, column: 24, scope: !11045)
!11192 = !DILocation(line: 132, column: 9, scope: !948, inlinedAt: !11044)
!11193 = !DILocation(line: 132, column: 13, scope: !948, inlinedAt: !11044)
!11194 = !DILocation(line: 132, column: 11, scope: !948, inlinedAt: !11044)
!11195 = !DILocation(line: 132, column: 9, scope: !905, inlinedAt: !11044)
!11196 = !DILocation(line: 132, column: 26, scope: !953, inlinedAt: !11044)
!11197 = !DILocation(line: 132, column: 19, scope: !953, inlinedAt: !11044)
!11198 = !DILocation(line: 133, column: 14, scope: !956, inlinedAt: !11044)
!11199 = !DILocation(line: 133, column: 18, scope: !956, inlinedAt: !11044)
!11200 = !DILocation(line: 133, column: 16, scope: !956, inlinedAt: !11044)
!11201 = !DILocation(line: 133, column: 14, scope: !948, inlinedAt: !11044)
!11202 = !DILocation(line: 133, column: 31, scope: !961, inlinedAt: !11044)
!11203 = !DILocation(line: 133, column: 24, scope: !961, inlinedAt: !11044)
!11204 = !DILocation(line: 134, column: 17, scope: !956, inlinedAt: !11044)
!11205 = !DILocation(line: 134, column: 10, scope: !956, inlinedAt: !11044)
!11206 = !DILocation(line: 135, column: 1, scope: !905, inlinedAt: !11044)
!11207 = !DILocation(line: 170, column: 20, scope: !11045)
!11208 = !DILocation(line: 170, column: 15, scope: !11045)
!11209 = !DILocation(line: 170, column: 13, scope: !11045)
!11210 = !DILocation(line: 170, column: 18, scope: !11045)
!11211 = !DILocation(line: 169, column: 29, scope: !11212)
!11212 = !DILexicalBlockFile(scope: !11045, file: !174, discriminator: 2)
!11213 = !DILocation(line: 169, column: 9, scope: !11212)
!11214 = distinct !{!11214, !11215}
!11215 = !DILocation(line: 169, column: 9, scope: !11047)
!11216 = !DILocation(line: 171, column: 34, scope: !11047)
!11217 = !DILocation(line: 171, column: 32, scope: !11047)
!11218 = !DILocation(line: 171, column: 50, scope: !11047)
!11219 = !DILocation(line: 171, column: 65, scope: !11047)
!11220 = !DILocation(line: 171, column: 54, scope: !11047)
!11221 = !DILocation(line: 171, column: 48, scope: !11047)
!11222 = !DILocation(line: 171, column: 77, scope: !11047)
!11223 = !DILocation(line: 171, column: 92, scope: !11047)
!11224 = !DILocation(line: 171, column: 81, scope: !11047)
!11225 = !DILocation(line: 171, column: 75, scope: !11047)
!11226 = !DILocation(line: 171, column: 71, scope: !11047)
!11227 = !DILocation(line: 171, column: 104, scope: !11047)
!11228 = !DILocation(line: 171, column: 119, scope: !11047)
!11229 = !DILocation(line: 171, column: 108, scope: !11047)
!11230 = !DILocation(line: 171, column: 102, scope: !11047)
!11231 = !DILocation(line: 171, column: 98, scope: !11047)
!11232 = !DILocation(line: 171, column: 132, scope: !11047)
!11233 = !DILocation(line: 171, column: 147, scope: !11047)
!11234 = !DILocation(line: 171, column: 136, scope: !11047)
!11235 = !DILocation(line: 171, column: 130, scope: !11047)
!11236 = !DILocation(line: 171, column: 125, scope: !11047)
!11237 = !DILocation(line: 171, column: 153, scope: !11047)
!11238 = !DILocation(line: 171, column: 160, scope: !11047)
!11239 = !DILocation(line: 171, column: 37, scope: !11047)
!11240 = !DILocation(line: 171, column: 13, scope: !11047)
!11241 = !DILocation(line: 171, column: 15, scope: !11047)
!11242 = !DILocation(line: 171, column: 14, scope: !11047)
!11243 = !DILocation(line: 171, column: 9, scope: !11047)
!11244 = !DILocation(line: 171, column: 19, scope: !11047)
!11245 = !DILocation(line: 172, column: 5, scope: !11047)
!11246 = !DILocation(line: 168, column: 26, scope: !11247)
!11247 = !DILexicalBlockFile(scope: !11048, file: !174, discriminator: 2)
!11248 = !DILocation(line: 168, column: 5, scope: !11247)
!11249 = distinct !{!11249, !11250}
!11250 = !DILocation(line: 168, column: 5, scope: !11042)
!11251 = !DILocation(line: 174, column: 22, scope: !11042)
!11252 = !DILocation(line: 174, column: 25, scope: !11042)
!11253 = !DILocation(line: 174, column: 29, scope: !11042)
!11254 = !DILocation(line: 174, column: 28, scope: !11042)
!11255 = !DILocation(line: 174, column: 33, scope: !11042)
!11256 = !DILocation(line: 174, column: 38, scope: !11042)
!11257 = !DILocation(line: 174, column: 5, scope: !11042)
!11258 = !DILocation(line: 59, column: 12, scope: !9794, inlinedAt: !11053)
!11259 = !DILocation(line: 59, column: 10, scope: !9794, inlinedAt: !11053)
!11260 = !DILocation(line: 59, column: 17, scope: !9797, inlinedAt: !11053)
!11261 = !DILocation(line: 59, column: 21, scope: !9797, inlinedAt: !11053)
!11262 = !DILocation(line: 59, column: 19, scope: !9797, inlinedAt: !11053)
!11263 = !DILocation(line: 59, column: 5, scope: !9797, inlinedAt: !11053)
!11264 = !DILocation(line: 60, column: 33, scope: !9803, inlinedAt: !11053)
!11265 = !DILocation(line: 60, column: 28, scope: !9803, inlinedAt: !11053)
!11266 = !DILocation(line: 60, column: 48, scope: !9803, inlinedAt: !11053)
!11267 = !DILocation(line: 60, column: 36, scope: !9803, inlinedAt: !11053)
!11268 = !DILocation(line: 60, column: 57, scope: !9803, inlinedAt: !11053)
!11269 = !DILocation(line: 60, column: 54, scope: !9803, inlinedAt: !11053)
!11270 = !DILocation(line: 60, column: 15, scope: !9803, inlinedAt: !11053)
!11271 = !DILocation(line: 60, column: 14, scope: !9803, inlinedAt: !11053)
!11272 = !DILocation(line: 60, column: 9, scope: !9803, inlinedAt: !11053)
!11273 = !DILocation(line: 60, column: 19, scope: !9803, inlinedAt: !11053)
!11274 = !DILocation(line: 61, column: 34, scope: !9803, inlinedAt: !11053)
!11275 = !DILocation(line: 61, column: 29, scope: !9803, inlinedAt: !11053)
!11276 = !DILocation(line: 61, column: 49, scope: !9803, inlinedAt: !11053)
!11277 = !DILocation(line: 61, column: 37, scope: !9803, inlinedAt: !11053)
!11278 = !DILocation(line: 61, column: 58, scope: !9803, inlinedAt: !11053)
!11279 = !DILocation(line: 61, column: 55, scope: !9803, inlinedAt: !11053)
!11280 = !DILocation(line: 61, column: 15, scope: !9803, inlinedAt: !11053)
!11281 = !DILocation(line: 61, column: 14, scope: !9803, inlinedAt: !11053)
!11282 = !DILocation(line: 61, column: 16, scope: !9803, inlinedAt: !11053)
!11283 = !DILocation(line: 61, column: 9, scope: !9803, inlinedAt: !11053)
!11284 = !DILocation(line: 61, column: 20, scope: !9803, inlinedAt: !11053)
!11285 = !DILocation(line: 59, column: 26, scope: !9825, inlinedAt: !11053)
!11286 = !DILocation(line: 59, column: 5, scope: !9825, inlinedAt: !11053)
!11287 = !DILocation(line: 175, column: 1, scope: !11042)
!11288 = distinct !DISubprogram(name: "spatial_compose_daub97i_dy_12bit", scope: !174, file: !174, line: 451, type: !1596, isLocal: true, isDefinition: true, scopeLine: 452, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!11289 = !DILocation(line: 338, column: 91, scope: !1103, inlinedAt: !11290)
!11290 = distinct !DILocation(line: 464, column: 24, scope: !11288)
!11291 = !DILocation(line: 338, column: 98, scope: !1103, inlinedAt: !11290)
!11292 = !DILocation(line: 338, column: 91, scope: !1103, inlinedAt: !11293)
!11293 = distinct !DILocation(line: 463, column: 24, scope: !11288)
!11294 = !DILocation(line: 338, column: 98, scope: !1103, inlinedAt: !11293)
!11295 = !DILocalVariable(name: "d", arg: 1, scope: !11288, file: !174, line: 451, type: !37)
!11296 = !DILocation(line: 451, column: 58, scope: !11288)
!11297 = !DILocalVariable(name: "level", arg: 2, scope: !11288, file: !174, line: 451, type: !18)
!11298 = !DILocation(line: 451, column: 65, scope: !11288)
!11299 = !DILocalVariable(name: "width", arg: 3, scope: !11288, file: !174, line: 451, type: !18)
!11300 = !DILocation(line: 451, column: 76, scope: !11288)
!11301 = !DILocalVariable(name: "height", arg: 4, scope: !11288, file: !174, line: 451, type: !18)
!11302 = !DILocation(line: 451, column: 87, scope: !11288)
!11303 = !DILocalVariable(name: "stride", arg: 5, scope: !11288, file: !174, line: 451, type: !18)
!11304 = !DILocation(line: 451, column: 99, scope: !11288)
!11305 = !DILocalVariable(name: "vertical_compose_l0", scope: !11288, file: !174, line: 453, type: !1617)
!11306 = !DILocation(line: 453, column: 27, scope: !11288)
!11307 = !DILocation(line: 453, column: 56, scope: !11288)
!11308 = !DILocation(line: 453, column: 59, scope: !11288)
!11309 = !DILocation(line: 453, column: 49, scope: !11288)
!11310 = !DILocalVariable(name: "vertical_compose_h0", scope: !11288, file: !174, line: 454, type: !1617)
!11311 = !DILocation(line: 454, column: 27, scope: !11288)
!11312 = !DILocation(line: 454, column: 56, scope: !11288)
!11313 = !DILocation(line: 454, column: 59, scope: !11288)
!11314 = !DILocation(line: 454, column: 49, scope: !11288)
!11315 = !DILocalVariable(name: "vertical_compose_l1", scope: !11288, file: !174, line: 455, type: !1617)
!11316 = !DILocation(line: 455, column: 27, scope: !11288)
!11317 = !DILocation(line: 455, column: 56, scope: !11288)
!11318 = !DILocation(line: 455, column: 59, scope: !11288)
!11319 = !DILocation(line: 455, column: 49, scope: !11288)
!11320 = !DILocalVariable(name: "vertical_compose_h1", scope: !11288, file: !174, line: 456, type: !1617)
!11321 = !DILocation(line: 456, column: 27, scope: !11288)
!11322 = !DILocation(line: 456, column: 56, scope: !11288)
!11323 = !DILocation(line: 456, column: 59, scope: !11288)
!11324 = !DILocation(line: 456, column: 49, scope: !11288)
!11325 = !DILocalVariable(name: "cs", scope: !11288, file: !174, line: 457, type: !903)
!11326 = !DILocation(line: 457, column: 17, scope: !11288)
!11327 = !DILocation(line: 457, column: 22, scope: !11288)
!11328 = !DILocation(line: 457, column: 25, scope: !11288)
!11329 = !DILocation(line: 457, column: 30, scope: !11288)
!11330 = !DILocation(line: 457, column: 28, scope: !11288)
!11331 = !DILocalVariable(name: "i", scope: !11288, file: !174, line: 459, type: !18)
!11332 = !DILocation(line: 459, column: 9, scope: !11288)
!11333 = !DILocalVariable(name: "y", scope: !11288, file: !174, line: 459, type: !18)
!11334 = !DILocation(line: 459, column: 12, scope: !11288)
!11335 = !DILocation(line: 459, column: 16, scope: !11288)
!11336 = !DILocation(line: 459, column: 20, scope: !11288)
!11337 = !DILocalVariable(name: "b", scope: !11288, file: !174, line: 460, type: !4042)
!11338 = !DILocation(line: 460, column: 14, scope: !11288)
!11339 = !DILocation(line: 461, column: 12, scope: !11340)
!11340 = distinct !DILexicalBlock(scope: !11288, file: !174, line: 461, column: 5)
!11341 = !DILocation(line: 461, column: 10, scope: !11340)
!11342 = !DILocation(line: 461, column: 17, scope: !11343)
!11343 = !DILexicalBlockFile(scope: !11344, file: !174, discriminator: 1)
!11344 = distinct !DILexicalBlock(scope: !11340, file: !174, line: 461, column: 5)
!11345 = !DILocation(line: 461, column: 19, scope: !11343)
!11346 = !DILocation(line: 461, column: 5, scope: !11343)
!11347 = !DILocation(line: 462, column: 22, scope: !11344)
!11348 = !DILocation(line: 462, column: 16, scope: !11344)
!11349 = !DILocation(line: 462, column: 20, scope: !11344)
!11350 = !DILocation(line: 462, column: 11, scope: !11344)
!11351 = !DILocation(line: 462, column: 9, scope: !11344)
!11352 = !DILocation(line: 462, column: 14, scope: !11344)
!11353 = !DILocation(line: 461, column: 25, scope: !11354)
!11354 = !DILexicalBlockFile(scope: !11344, file: !174, discriminator: 2)
!11355 = !DILocation(line: 461, column: 5, scope: !11354)
!11356 = distinct !{!11356, !11357}
!11357 = !DILocation(line: 461, column: 5, scope: !11288)
!11358 = !DILocation(line: 463, column: 12, scope: !11288)
!11359 = !DILocation(line: 463, column: 15, scope: !11288)
!11360 = !DILocation(line: 463, column: 38, scope: !11288)
!11361 = !DILocation(line: 463, column: 39, scope: !11288)
!11362 = !DILocation(line: 463, column: 43, scope: !11288)
!11363 = !DILocation(line: 463, column: 49, scope: !11288)
!11364 = !DILocation(line: 463, column: 24, scope: !11288)
!11365 = !DILocation(line: 340, column: 10, scope: !1127, inlinedAt: !11293)
!11366 = !DILocation(line: 340, column: 9, scope: !1103, inlinedAt: !11293)
!11367 = !DILocation(line: 341, column: 9, scope: !1127, inlinedAt: !11293)
!11368 = !DILocation(line: 343, column: 5, scope: !1103, inlinedAt: !11293)
!11369 = !DILocation(line: 343, column: 22, scope: !1132, inlinedAt: !11293)
!11370 = !DILocation(line: 343, column: 36, scope: !1132, inlinedAt: !11293)
!11371 = !DILocation(line: 343, column: 24, scope: !1132, inlinedAt: !11293)
!11372 = !DILocation(line: 343, column: 5, scope: !1132, inlinedAt: !11293)
!11373 = !DILocation(line: 344, column: 14, scope: !1137, inlinedAt: !11293)
!11374 = !DILocation(line: 344, column: 13, scope: !1137, inlinedAt: !11293)
!11375 = !DILocation(line: 344, column: 11, scope: !1137, inlinedAt: !11293)
!11376 = !DILocation(line: 345, column: 13, scope: !1141, inlinedAt: !11293)
!11377 = !DILocation(line: 345, column: 15, scope: !1141, inlinedAt: !11293)
!11378 = !DILocation(line: 345, column: 13, scope: !1137, inlinedAt: !11293)
!11379 = !DILocation(line: 346, column: 22, scope: !1141, inlinedAt: !11293)
!11380 = !DILocation(line: 346, column: 20, scope: !1141, inlinedAt: !11293)
!11381 = !DILocation(line: 346, column: 15, scope: !1141, inlinedAt: !11293)
!11382 = !DILocation(line: 346, column: 13, scope: !1141, inlinedAt: !11293)
!11383 = !DILocation(line: 343, column: 5, scope: !1149, inlinedAt: !11293)
!11384 = !DILocation(line: 348, column: 12, scope: !1103, inlinedAt: !11293)
!11385 = !DILocation(line: 348, column: 5, scope: !1103, inlinedAt: !11293)
!11386 = !DILocation(line: 349, column: 1, scope: !1103, inlinedAt: !11293)
!11387 = !DILocation(line: 463, column: 53, scope: !11288)
!11388 = !DILocation(line: 463, column: 52, scope: !11288)
!11389 = !DILocation(line: 463, column: 22, scope: !11288)
!11390 = !DILocation(line: 463, column: 5, scope: !11288)
!11391 = !DILocation(line: 463, column: 10, scope: !11288)
!11392 = !DILocation(line: 464, column: 12, scope: !11288)
!11393 = !DILocation(line: 464, column: 15, scope: !11288)
!11394 = !DILocation(line: 464, column: 38, scope: !11288)
!11395 = !DILocation(line: 464, column: 39, scope: !11288)
!11396 = !DILocation(line: 464, column: 43, scope: !11288)
!11397 = !DILocation(line: 464, column: 49, scope: !11288)
!11398 = !DILocation(line: 464, column: 24, scope: !11288)
!11399 = !DILocation(line: 340, column: 10, scope: !1127, inlinedAt: !11290)
!11400 = !DILocation(line: 340, column: 9, scope: !1103, inlinedAt: !11290)
!11401 = !DILocation(line: 341, column: 9, scope: !1127, inlinedAt: !11290)
!11402 = !DILocation(line: 343, column: 5, scope: !1103, inlinedAt: !11290)
!11403 = !DILocation(line: 343, column: 22, scope: !1132, inlinedAt: !11290)
!11404 = !DILocation(line: 343, column: 36, scope: !1132, inlinedAt: !11290)
!11405 = !DILocation(line: 343, column: 24, scope: !1132, inlinedAt: !11290)
!11406 = !DILocation(line: 343, column: 5, scope: !1132, inlinedAt: !11290)
!11407 = !DILocation(line: 344, column: 14, scope: !1137, inlinedAt: !11290)
!11408 = !DILocation(line: 344, column: 13, scope: !1137, inlinedAt: !11290)
!11409 = !DILocation(line: 344, column: 11, scope: !1137, inlinedAt: !11290)
!11410 = !DILocation(line: 345, column: 13, scope: !1141, inlinedAt: !11290)
!11411 = !DILocation(line: 345, column: 15, scope: !1141, inlinedAt: !11290)
!11412 = !DILocation(line: 345, column: 13, scope: !1137, inlinedAt: !11290)
!11413 = !DILocation(line: 346, column: 22, scope: !1141, inlinedAt: !11290)
!11414 = !DILocation(line: 346, column: 20, scope: !1141, inlinedAt: !11290)
!11415 = !DILocation(line: 346, column: 15, scope: !1141, inlinedAt: !11290)
!11416 = !DILocation(line: 346, column: 13, scope: !1141, inlinedAt: !11290)
!11417 = !DILocation(line: 343, column: 5, scope: !1149, inlinedAt: !11290)
!11418 = !DILocation(line: 348, column: 12, scope: !1103, inlinedAt: !11290)
!11419 = !DILocation(line: 348, column: 5, scope: !1103, inlinedAt: !11290)
!11420 = !DILocation(line: 349, column: 1, scope: !1103, inlinedAt: !11290)
!11421 = !DILocation(line: 464, column: 53, scope: !11288)
!11422 = !DILocation(line: 464, column: 52, scope: !11288)
!11423 = !DILocation(line: 464, column: 22, scope: !11288)
!11424 = !DILocation(line: 464, column: 5, scope: !11288)
!11425 = !DILocation(line: 464, column: 10, scope: !11288)
!11426 = !DILocation(line: 466, column: 8, scope: !11427)
!11427 = distinct !DILexicalBlock(scope: !11288, file: !174, line: 466, column: 8)
!11428 = !DILocation(line: 466, column: 9, scope: !11427)
!11429 = !DILocation(line: 466, column: 22, scope: !11427)
!11430 = !DILocation(line: 466, column: 11, scope: !11427)
!11431 = !DILocation(line: 466, column: 8, scope: !11288)
!11432 = !DILocation(line: 466, column: 30, scope: !11433)
!11433 = !DILexicalBlockFile(scope: !11427, file: !174, discriminator: 1)
!11434 = !DILocation(line: 466, column: 50, scope: !11433)
!11435 = !DILocation(line: 466, column: 56, scope: !11433)
!11436 = !DILocation(line: 466, column: 62, scope: !11433)
!11437 = !DILocation(line: 466, column: 68, scope: !11433)
!11438 = !DILocation(line: 467, column: 8, scope: !11439)
!11439 = distinct !DILexicalBlock(scope: !11288, file: !174, line: 467, column: 8)
!11440 = !DILocation(line: 467, column: 9, scope: !11439)
!11441 = !DILocation(line: 467, column: 22, scope: !11439)
!11442 = !DILocation(line: 467, column: 11, scope: !11439)
!11443 = !DILocation(line: 467, column: 8, scope: !11288)
!11444 = !DILocation(line: 467, column: 30, scope: !11445)
!11445 = !DILexicalBlockFile(scope: !11439, file: !174, discriminator: 1)
!11446 = !DILocation(line: 467, column: 50, scope: !11445)
!11447 = !DILocation(line: 467, column: 56, scope: !11445)
!11448 = !DILocation(line: 467, column: 62, scope: !11445)
!11449 = !DILocation(line: 467, column: 68, scope: !11445)
!11450 = !DILocation(line: 468, column: 8, scope: !11451)
!11451 = distinct !DILexicalBlock(scope: !11288, file: !174, line: 468, column: 8)
!11452 = !DILocation(line: 468, column: 9, scope: !11451)
!11453 = !DILocation(line: 468, column: 22, scope: !11451)
!11454 = !DILocation(line: 468, column: 11, scope: !11451)
!11455 = !DILocation(line: 468, column: 8, scope: !11288)
!11456 = !DILocation(line: 468, column: 30, scope: !11457)
!11457 = !DILexicalBlockFile(scope: !11451, file: !174, discriminator: 1)
!11458 = !DILocation(line: 468, column: 50, scope: !11457)
!11459 = !DILocation(line: 468, column: 56, scope: !11457)
!11460 = !DILocation(line: 468, column: 62, scope: !11457)
!11461 = !DILocation(line: 468, column: 68, scope: !11457)
!11462 = !DILocation(line: 469, column: 8, scope: !11463)
!11463 = distinct !DILexicalBlock(scope: !11288, file: !174, line: 469, column: 8)
!11464 = !DILocation(line: 469, column: 9, scope: !11463)
!11465 = !DILocation(line: 469, column: 22, scope: !11463)
!11466 = !DILocation(line: 469, column: 11, scope: !11463)
!11467 = !DILocation(line: 469, column: 8, scope: !11288)
!11468 = !DILocation(line: 469, column: 30, scope: !11469)
!11469 = !DILexicalBlockFile(scope: !11463, file: !174, discriminator: 1)
!11470 = !DILocation(line: 469, column: 50, scope: !11469)
!11471 = !DILocation(line: 469, column: 56, scope: !11469)
!11472 = !DILocation(line: 469, column: 62, scope: !11469)
!11473 = !DILocation(line: 469, column: 68, scope: !11469)
!11474 = !DILocation(line: 471, column: 8, scope: !11475)
!11475 = distinct !DILexicalBlock(scope: !11288, file: !174, line: 471, column: 8)
!11476 = !DILocation(line: 471, column: 9, scope: !11475)
!11477 = !DILocation(line: 471, column: 22, scope: !11475)
!11478 = !DILocation(line: 471, column: 11, scope: !11475)
!11479 = !DILocation(line: 471, column: 8, scope: !11288)
!11480 = !DILocation(line: 471, column: 30, scope: !11481)
!11481 = !DILexicalBlockFile(scope: !11475, file: !174, discriminator: 1)
!11482 = !DILocation(line: 471, column: 33, scope: !11481)
!11483 = !DILocation(line: 471, column: 52, scope: !11481)
!11484 = !DILocation(line: 471, column: 58, scope: !11481)
!11485 = !DILocation(line: 471, column: 61, scope: !11481)
!11486 = !DILocation(line: 471, column: 67, scope: !11481)
!11487 = !DILocation(line: 472, column: 8, scope: !11488)
!11488 = distinct !DILexicalBlock(scope: !11288, file: !174, line: 472, column: 8)
!11489 = !DILocation(line: 472, column: 9, scope: !11488)
!11490 = !DILocation(line: 472, column: 22, scope: !11488)
!11491 = !DILocation(line: 472, column: 11, scope: !11488)
!11492 = !DILocation(line: 472, column: 8, scope: !11288)
!11493 = !DILocation(line: 472, column: 30, scope: !11494)
!11494 = !DILexicalBlockFile(scope: !11488, file: !174, discriminator: 1)
!11495 = !DILocation(line: 472, column: 33, scope: !11494)
!11496 = !DILocation(line: 472, column: 52, scope: !11494)
!11497 = !DILocation(line: 472, column: 58, scope: !11494)
!11498 = !DILocation(line: 472, column: 61, scope: !11494)
!11499 = !DILocation(line: 472, column: 67, scope: !11494)
!11500 = !DILocation(line: 474, column: 12, scope: !11501)
!11501 = distinct !DILexicalBlock(scope: !11288, file: !174, line: 474, column: 5)
!11502 = !DILocation(line: 474, column: 10, scope: !11501)
!11503 = !DILocation(line: 474, column: 17, scope: !11504)
!11504 = !DILexicalBlockFile(scope: !11505, file: !174, discriminator: 1)
!11505 = distinct !DILexicalBlock(scope: !11501, file: !174, line: 474, column: 5)
!11506 = !DILocation(line: 474, column: 19, scope: !11504)
!11507 = !DILocation(line: 474, column: 5, scope: !11504)
!11508 = !DILocation(line: 475, column: 22, scope: !11505)
!11509 = !DILocation(line: 475, column: 23, scope: !11505)
!11510 = !DILocation(line: 475, column: 20, scope: !11505)
!11511 = !DILocation(line: 475, column: 15, scope: !11505)
!11512 = !DILocation(line: 475, column: 9, scope: !11505)
!11513 = !DILocation(line: 475, column: 13, scope: !11505)
!11514 = !DILocation(line: 475, column: 18, scope: !11505)
!11515 = !DILocation(line: 474, column: 25, scope: !11516)
!11516 = !DILexicalBlockFile(scope: !11505, file: !174, discriminator: 2)
!11517 = !DILocation(line: 474, column: 5, scope: !11516)
!11518 = distinct !{!11518, !11519}
!11519 = !DILocation(line: 474, column: 5, scope: !11288)
!11520 = !DILocation(line: 476, column: 5, scope: !11288)
!11521 = !DILocation(line: 476, column: 9, scope: !11288)
!11522 = !DILocation(line: 476, column: 11, scope: !11288)
!11523 = !DILocation(line: 477, column: 1, scope: !11288)
!11524 = distinct !DISubprogram(name: "vertical_compose_daub97iL0_12bit", scope: !174, file: !174, line: 315, type: !1619, isLocal: true, isDefinition: true, scopeLine: 316, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!11525 = !DILocalVariable(name: "_b0", arg: 1, scope: !11524, file: !174, line: 315, type: !20)
!11526 = !DILocation(line: 315, column: 55, scope: !11524)
!11527 = !DILocalVariable(name: "_b1", arg: 2, scope: !11524, file: !174, line: 315, type: !20)
!11528 = !DILocation(line: 315, column: 69, scope: !11524)
!11529 = !DILocalVariable(name: "_b2", arg: 3, scope: !11524, file: !174, line: 315, type: !20)
!11530 = !DILocation(line: 315, column: 83, scope: !11524)
!11531 = !DILocalVariable(name: "width", arg: 4, scope: !11524, file: !174, line: 315, type: !18)
!11532 = !DILocation(line: 315, column: 92, scope: !11524)
!11533 = !DILocalVariable(name: "i", scope: !11524, file: !174, line: 317, type: !18)
!11534 = !DILocation(line: 317, column: 9, scope: !11524)
!11535 = !DILocalVariable(name: "b0", scope: !11524, file: !174, line: 318, type: !28)
!11536 = !DILocation(line: 318, column: 14, scope: !11524)
!11537 = !DILocation(line: 318, column: 30, scope: !11524)
!11538 = !DILocation(line: 318, column: 19, scope: !11524)
!11539 = !DILocalVariable(name: "b1", scope: !11524, file: !174, line: 319, type: !28)
!11540 = !DILocation(line: 319, column: 14, scope: !11524)
!11541 = !DILocation(line: 319, column: 30, scope: !11524)
!11542 = !DILocation(line: 319, column: 19, scope: !11524)
!11543 = !DILocalVariable(name: "b2", scope: !11524, file: !174, line: 320, type: !28)
!11544 = !DILocation(line: 320, column: 14, scope: !11524)
!11545 = !DILocation(line: 320, column: 30, scope: !11524)
!11546 = !DILocation(line: 320, column: 19, scope: !11524)
!11547 = !DILocation(line: 322, column: 10, scope: !11548)
!11548 = distinct !DILexicalBlock(scope: !11524, file: !174, line: 322, column: 5)
!11549 = !DILocation(line: 322, column: 9, scope: !11548)
!11550 = !DILocation(line: 322, column: 14, scope: !11551)
!11551 = !DILexicalBlockFile(scope: !11552, file: !174, discriminator: 1)
!11552 = distinct !DILexicalBlock(scope: !11548, file: !174, line: 322, column: 5)
!11553 = !DILocation(line: 322, column: 16, scope: !11551)
!11554 = !DILocation(line: 322, column: 15, scope: !11551)
!11555 = !DILocation(line: 322, column: 5, scope: !11551)
!11556 = !DILocation(line: 323, column: 32, scope: !11557)
!11557 = distinct !DILexicalBlock(scope: !11552, file: !174, line: 322, column: 27)
!11558 = !DILocation(line: 323, column: 29, scope: !11557)
!11559 = !DILocation(line: 323, column: 54, scope: !11557)
!11560 = !DILocation(line: 323, column: 51, scope: !11557)
!11561 = !DILocation(line: 323, column: 72, scope: !11557)
!11562 = !DILocation(line: 323, column: 69, scope: !11557)
!11563 = !DILocation(line: 323, column: 57, scope: !11557)
!11564 = !DILocation(line: 323, column: 49, scope: !11557)
!11565 = !DILocation(line: 323, column: 76, scope: !11557)
!11566 = !DILocation(line: 323, column: 84, scope: !11557)
!11567 = !DILocation(line: 323, column: 36, scope: !11557)
!11568 = !DILocation(line: 323, column: 12, scope: !11557)
!11569 = !DILocation(line: 323, column: 9, scope: !11557)
!11570 = !DILocation(line: 323, column: 15, scope: !11557)
!11571 = !DILocation(line: 324, column: 5, scope: !11557)
!11572 = !DILocation(line: 322, column: 24, scope: !11573)
!11573 = !DILexicalBlockFile(scope: !11552, file: !174, discriminator: 2)
!11574 = !DILocation(line: 322, column: 5, scope: !11573)
!11575 = distinct !{!11575, !11576}
!11576 = !DILocation(line: 322, column: 5, scope: !11524)
!11577 = !DILocation(line: 325, column: 1, scope: !11524)
!11578 = distinct !DISubprogram(name: "vertical_compose_daub97iH0_12bit", scope: !174, file: !174, line: 291, type: !1619, isLocal: true, isDefinition: true, scopeLine: 292, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!11579 = !DILocalVariable(name: "_b0", arg: 1, scope: !11578, file: !174, line: 291, type: !20)
!11580 = !DILocation(line: 291, column: 55, scope: !11578)
!11581 = !DILocalVariable(name: "_b1", arg: 2, scope: !11578, file: !174, line: 291, type: !20)
!11582 = !DILocation(line: 291, column: 69, scope: !11578)
!11583 = !DILocalVariable(name: "_b2", arg: 3, scope: !11578, file: !174, line: 291, type: !20)
!11584 = !DILocation(line: 291, column: 83, scope: !11578)
!11585 = !DILocalVariable(name: "width", arg: 4, scope: !11578, file: !174, line: 291, type: !18)
!11586 = !DILocation(line: 291, column: 92, scope: !11578)
!11587 = !DILocalVariable(name: "i", scope: !11578, file: !174, line: 293, type: !18)
!11588 = !DILocation(line: 293, column: 9, scope: !11578)
!11589 = !DILocalVariable(name: "b0", scope: !11578, file: !174, line: 294, type: !28)
!11590 = !DILocation(line: 294, column: 14, scope: !11578)
!11591 = !DILocation(line: 294, column: 30, scope: !11578)
!11592 = !DILocation(line: 294, column: 19, scope: !11578)
!11593 = !DILocalVariable(name: "b1", scope: !11578, file: !174, line: 295, type: !28)
!11594 = !DILocation(line: 295, column: 14, scope: !11578)
!11595 = !DILocation(line: 295, column: 30, scope: !11578)
!11596 = !DILocation(line: 295, column: 19, scope: !11578)
!11597 = !DILocalVariable(name: "b2", scope: !11578, file: !174, line: 296, type: !28)
!11598 = !DILocation(line: 296, column: 14, scope: !11578)
!11599 = !DILocation(line: 296, column: 30, scope: !11578)
!11600 = !DILocation(line: 296, column: 19, scope: !11578)
!11601 = !DILocation(line: 298, column: 10, scope: !11602)
!11602 = distinct !DILexicalBlock(scope: !11578, file: !174, line: 298, column: 5)
!11603 = !DILocation(line: 298, column: 9, scope: !11602)
!11604 = !DILocation(line: 298, column: 14, scope: !11605)
!11605 = !DILexicalBlockFile(scope: !11606, file: !174, discriminator: 1)
!11606 = distinct !DILexicalBlock(scope: !11602, file: !174, line: 298, column: 5)
!11607 = !DILocation(line: 298, column: 16, scope: !11605)
!11608 = !DILocation(line: 298, column: 15, scope: !11605)
!11609 = !DILocation(line: 298, column: 5, scope: !11605)
!11610 = !DILocation(line: 299, column: 32, scope: !11611)
!11611 = distinct !DILexicalBlock(scope: !11606, file: !174, line: 298, column: 27)
!11612 = !DILocation(line: 299, column: 29, scope: !11611)
!11613 = !DILocation(line: 299, column: 54, scope: !11611)
!11614 = !DILocation(line: 299, column: 51, scope: !11611)
!11615 = !DILocation(line: 299, column: 72, scope: !11611)
!11616 = !DILocation(line: 299, column: 69, scope: !11611)
!11617 = !DILocation(line: 299, column: 57, scope: !11611)
!11618 = !DILocation(line: 299, column: 49, scope: !11611)
!11619 = !DILocation(line: 299, column: 76, scope: !11611)
!11620 = !DILocation(line: 299, column: 84, scope: !11611)
!11621 = !DILocation(line: 299, column: 36, scope: !11611)
!11622 = !DILocation(line: 299, column: 12, scope: !11611)
!11623 = !DILocation(line: 299, column: 9, scope: !11611)
!11624 = !DILocation(line: 299, column: 15, scope: !11611)
!11625 = !DILocation(line: 300, column: 5, scope: !11611)
!11626 = !DILocation(line: 298, column: 24, scope: !11627)
!11627 = !DILexicalBlockFile(scope: !11606, file: !174, discriminator: 2)
!11628 = !DILocation(line: 298, column: 5, scope: !11627)
!11629 = distinct !{!11629, !11630}
!11630 = !DILocation(line: 298, column: 5, scope: !11578)
!11631 = !DILocation(line: 301, column: 1, scope: !11578)
!11632 = distinct !DISubprogram(name: "vertical_compose_daub97iL1_12bit", scope: !174, file: !174, line: 327, type: !1619, isLocal: true, isDefinition: true, scopeLine: 328, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!11633 = !DILocalVariable(name: "_b0", arg: 1, scope: !11632, file: !174, line: 327, type: !20)
!11634 = !DILocation(line: 327, column: 55, scope: !11632)
!11635 = !DILocalVariable(name: "_b1", arg: 2, scope: !11632, file: !174, line: 327, type: !20)
!11636 = !DILocation(line: 327, column: 69, scope: !11632)
!11637 = !DILocalVariable(name: "_b2", arg: 3, scope: !11632, file: !174, line: 327, type: !20)
!11638 = !DILocation(line: 327, column: 83, scope: !11632)
!11639 = !DILocalVariable(name: "width", arg: 4, scope: !11632, file: !174, line: 327, type: !18)
!11640 = !DILocation(line: 327, column: 92, scope: !11632)
!11641 = !DILocalVariable(name: "i", scope: !11632, file: !174, line: 329, type: !18)
!11642 = !DILocation(line: 329, column: 9, scope: !11632)
!11643 = !DILocalVariable(name: "b0", scope: !11632, file: !174, line: 330, type: !28)
!11644 = !DILocation(line: 330, column: 14, scope: !11632)
!11645 = !DILocation(line: 330, column: 30, scope: !11632)
!11646 = !DILocation(line: 330, column: 19, scope: !11632)
!11647 = !DILocalVariable(name: "b1", scope: !11632, file: !174, line: 331, type: !28)
!11648 = !DILocation(line: 331, column: 14, scope: !11632)
!11649 = !DILocation(line: 331, column: 30, scope: !11632)
!11650 = !DILocation(line: 331, column: 19, scope: !11632)
!11651 = !DILocalVariable(name: "b2", scope: !11632, file: !174, line: 332, type: !28)
!11652 = !DILocation(line: 332, column: 14, scope: !11632)
!11653 = !DILocation(line: 332, column: 30, scope: !11632)
!11654 = !DILocation(line: 332, column: 19, scope: !11632)
!11655 = !DILocation(line: 334, column: 10, scope: !11656)
!11656 = distinct !DILexicalBlock(scope: !11632, file: !174, line: 334, column: 5)
!11657 = !DILocation(line: 334, column: 9, scope: !11656)
!11658 = !DILocation(line: 334, column: 14, scope: !11659)
!11659 = !DILexicalBlockFile(scope: !11660, file: !174, discriminator: 1)
!11660 = distinct !DILexicalBlock(scope: !11656, file: !174, line: 334, column: 5)
!11661 = !DILocation(line: 334, column: 16, scope: !11659)
!11662 = !DILocation(line: 334, column: 15, scope: !11659)
!11663 = !DILocation(line: 334, column: 5, scope: !11659)
!11664 = !DILocation(line: 335, column: 32, scope: !11665)
!11665 = distinct !DILexicalBlock(scope: !11660, file: !174, line: 334, column: 27)
!11666 = !DILocation(line: 335, column: 29, scope: !11665)
!11667 = !DILocation(line: 335, column: 54, scope: !11665)
!11668 = !DILocation(line: 335, column: 51, scope: !11665)
!11669 = !DILocation(line: 335, column: 72, scope: !11665)
!11670 = !DILocation(line: 335, column: 69, scope: !11665)
!11671 = !DILocation(line: 335, column: 57, scope: !11665)
!11672 = !DILocation(line: 335, column: 49, scope: !11665)
!11673 = !DILocation(line: 335, column: 76, scope: !11665)
!11674 = !DILocation(line: 335, column: 84, scope: !11665)
!11675 = !DILocation(line: 335, column: 36, scope: !11665)
!11676 = !DILocation(line: 335, column: 12, scope: !11665)
!11677 = !DILocation(line: 335, column: 9, scope: !11665)
!11678 = !DILocation(line: 335, column: 15, scope: !11665)
!11679 = !DILocation(line: 336, column: 5, scope: !11665)
!11680 = !DILocation(line: 334, column: 24, scope: !11681)
!11681 = !DILexicalBlockFile(scope: !11660, file: !174, discriminator: 2)
!11682 = !DILocation(line: 334, column: 5, scope: !11681)
!11683 = distinct !{!11683, !11684}
!11684 = !DILocation(line: 334, column: 5, scope: !11632)
!11685 = !DILocation(line: 337, column: 1, scope: !11632)
!11686 = distinct !DISubprogram(name: "vertical_compose_daub97iH1_12bit", scope: !174, file: !174, line: 303, type: !1619, isLocal: true, isDefinition: true, scopeLine: 304, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!11687 = !DILocalVariable(name: "_b0", arg: 1, scope: !11686, file: !174, line: 303, type: !20)
!11688 = !DILocation(line: 303, column: 55, scope: !11686)
!11689 = !DILocalVariable(name: "_b1", arg: 2, scope: !11686, file: !174, line: 303, type: !20)
!11690 = !DILocation(line: 303, column: 69, scope: !11686)
!11691 = !DILocalVariable(name: "_b2", arg: 3, scope: !11686, file: !174, line: 303, type: !20)
!11692 = !DILocation(line: 303, column: 83, scope: !11686)
!11693 = !DILocalVariable(name: "width", arg: 4, scope: !11686, file: !174, line: 303, type: !18)
!11694 = !DILocation(line: 303, column: 92, scope: !11686)
!11695 = !DILocalVariable(name: "i", scope: !11686, file: !174, line: 305, type: !18)
!11696 = !DILocation(line: 305, column: 9, scope: !11686)
!11697 = !DILocalVariable(name: "b0", scope: !11686, file: !174, line: 306, type: !28)
!11698 = !DILocation(line: 306, column: 14, scope: !11686)
!11699 = !DILocation(line: 306, column: 30, scope: !11686)
!11700 = !DILocation(line: 306, column: 19, scope: !11686)
!11701 = !DILocalVariable(name: "b1", scope: !11686, file: !174, line: 307, type: !28)
!11702 = !DILocation(line: 307, column: 14, scope: !11686)
!11703 = !DILocation(line: 307, column: 30, scope: !11686)
!11704 = !DILocation(line: 307, column: 19, scope: !11686)
!11705 = !DILocalVariable(name: "b2", scope: !11686, file: !174, line: 308, type: !28)
!11706 = !DILocation(line: 308, column: 14, scope: !11686)
!11707 = !DILocation(line: 308, column: 30, scope: !11686)
!11708 = !DILocation(line: 308, column: 19, scope: !11686)
!11709 = !DILocation(line: 310, column: 10, scope: !11710)
!11710 = distinct !DILexicalBlock(scope: !11686, file: !174, line: 310, column: 5)
!11711 = !DILocation(line: 310, column: 9, scope: !11710)
!11712 = !DILocation(line: 310, column: 14, scope: !11713)
!11713 = !DILexicalBlockFile(scope: !11714, file: !174, discriminator: 1)
!11714 = distinct !DILexicalBlock(scope: !11710, file: !174, line: 310, column: 5)
!11715 = !DILocation(line: 310, column: 16, scope: !11713)
!11716 = !DILocation(line: 310, column: 15, scope: !11713)
!11717 = !DILocation(line: 310, column: 5, scope: !11713)
!11718 = !DILocation(line: 311, column: 32, scope: !11719)
!11719 = distinct !DILexicalBlock(scope: !11714, file: !174, line: 310, column: 27)
!11720 = !DILocation(line: 311, column: 29, scope: !11719)
!11721 = !DILocation(line: 311, column: 54, scope: !11719)
!11722 = !DILocation(line: 311, column: 51, scope: !11719)
!11723 = !DILocation(line: 311, column: 72, scope: !11719)
!11724 = !DILocation(line: 311, column: 69, scope: !11719)
!11725 = !DILocation(line: 311, column: 57, scope: !11719)
!11726 = !DILocation(line: 311, column: 49, scope: !11719)
!11727 = !DILocation(line: 311, column: 76, scope: !11719)
!11728 = !DILocation(line: 311, column: 82, scope: !11719)
!11729 = !DILocation(line: 311, column: 36, scope: !11719)
!11730 = !DILocation(line: 311, column: 12, scope: !11719)
!11731 = !DILocation(line: 311, column: 9, scope: !11719)
!11732 = !DILocation(line: 311, column: 15, scope: !11719)
!11733 = !DILocation(line: 312, column: 5, scope: !11719)
!11734 = !DILocation(line: 310, column: 24, scope: !11735)
!11735 = !DILexicalBlockFile(scope: !11714, file: !174, discriminator: 2)
!11736 = !DILocation(line: 310, column: 5, scope: !11735)
!11737 = distinct !{!11737, !11738}
!11738 = !DILocation(line: 310, column: 5, scope: !11686)
!11739 = !DILocation(line: 313, column: 1, scope: !11686)
!11740 = distinct !DISubprogram(name: "horizontal_compose_daub97i_12bit", scope: !174, file: !174, line: 177, type: !63, isLocal: true, isDefinition: true, scopeLine: 178, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !85)
!11741 = !DILocalVariable(name: "_b", arg: 1, scope: !11740, file: !174, line: 177, type: !20)
!11742 = !DILocation(line: 177, column: 55, scope: !11740)
!11743 = !DILocalVariable(name: "_temp", arg: 2, scope: !11740, file: !174, line: 177, type: !20)
!11744 = !DILocation(line: 177, column: 68, scope: !11740)
!11745 = !DILocalVariable(name: "w", arg: 3, scope: !11740, file: !174, line: 177, type: !18)
!11746 = !DILocation(line: 177, column: 79, scope: !11740)
!11747 = !DILocalVariable(name: "w2", scope: !11740, file: !174, line: 179, type: !1931)
!11748 = !DILocation(line: 179, column: 15, scope: !11740)
!11749 = !DILocation(line: 179, column: 20, scope: !11740)
!11750 = !DILocation(line: 179, column: 22, scope: !11740)
!11751 = !DILocalVariable(name: "x", scope: !11740, file: !174, line: 180, type: !18)
!11752 = !DILocation(line: 180, column: 9, scope: !11740)
!11753 = !DILocalVariable(name: "b0", scope: !11740, file: !174, line: 180, type: !18)
!11754 = !DILocation(line: 180, column: 12, scope: !11740)
!11755 = !DILocalVariable(name: "b1", scope: !11740, file: !174, line: 180, type: !18)
!11756 = !DILocation(line: 180, column: 16, scope: !11740)
!11757 = !DILocalVariable(name: "b2", scope: !11740, file: !174, line: 180, type: !18)
!11758 = !DILocation(line: 180, column: 20, scope: !11740)
!11759 = !DILocalVariable(name: "b", scope: !11740, file: !174, line: 181, type: !28)
!11760 = !DILocation(line: 181, column: 14, scope: !11740)
!11761 = !DILocation(line: 181, column: 29, scope: !11740)
!11762 = !DILocation(line: 181, column: 18, scope: !11740)
!11763 = !DILocalVariable(name: "temp", scope: !11740, file: !174, line: 182, type: !28)
!11764 = !DILocation(line: 182, column: 14, scope: !11740)
!11765 = !DILocation(line: 182, column: 32, scope: !11740)
!11766 = !DILocation(line: 182, column: 21, scope: !11740)
!11767 = !DILocation(line: 184, column: 27, scope: !11740)
!11768 = !DILocation(line: 184, column: 50, scope: !11740)
!11769 = !DILocation(line: 184, column: 48, scope: !11740)
!11770 = !DILocation(line: 184, column: 68, scope: !11740)
!11771 = !DILocation(line: 184, column: 66, scope: !11740)
!11772 = !DILocation(line: 184, column: 54, scope: !11740)
!11773 = !DILocation(line: 184, column: 46, scope: !11740)
!11774 = !DILocation(line: 184, column: 73, scope: !11740)
!11775 = !DILocation(line: 184, column: 81, scope: !11740)
!11776 = !DILocation(line: 184, column: 33, scope: !11740)
!11777 = !DILocation(line: 184, column: 5, scope: !11740)
!11778 = !DILocation(line: 184, column: 13, scope: !11740)
!11779 = !DILocation(line: 185, column: 12, scope: !11780)
!11780 = distinct !DILexicalBlock(scope: !11740, file: !174, line: 185, column: 5)
!11781 = !DILocation(line: 185, column: 10, scope: !11780)
!11782 = !DILocation(line: 185, column: 17, scope: !11783)
!11783 = !DILexicalBlockFile(scope: !11784, file: !174, discriminator: 1)
!11784 = distinct !DILexicalBlock(scope: !11780, file: !174, line: 185, column: 5)
!11785 = !DILocation(line: 185, column: 21, scope: !11783)
!11786 = !DILocation(line: 185, column: 19, scope: !11783)
!11787 = !DILocation(line: 185, column: 5, scope: !11783)
!11788 = !DILocation(line: 186, column: 34, scope: !11789)
!11789 = distinct !DILexicalBlock(scope: !11784, file: !174, line: 185, column: 30)
!11790 = !DILocation(line: 186, column: 32, scope: !11789)
!11791 = !DILocation(line: 186, column: 56, scope: !11789)
!11792 = !DILocation(line: 186, column: 58, scope: !11789)
!11793 = !DILocation(line: 186, column: 57, scope: !11789)
!11794 = !DILocation(line: 186, column: 60, scope: !11789)
!11795 = !DILocation(line: 186, column: 54, scope: !11789)
!11796 = !DILocation(line: 186, column: 78, scope: !11789)
!11797 = !DILocation(line: 186, column: 80, scope: !11789)
!11798 = !DILocation(line: 186, column: 79, scope: !11789)
!11799 = !DILocation(line: 186, column: 76, scope: !11789)
!11800 = !DILocation(line: 186, column: 64, scope: !11789)
!11801 = !DILocation(line: 186, column: 52, scope: !11789)
!11802 = !DILocation(line: 186, column: 85, scope: !11789)
!11803 = !DILocation(line: 186, column: 93, scope: !11789)
!11804 = !DILocation(line: 186, column: 39, scope: !11789)
!11805 = !DILocation(line: 186, column: 14, scope: !11789)
!11806 = !DILocation(line: 186, column: 9, scope: !11789)
!11807 = !DILocation(line: 186, column: 18, scope: !11789)
!11808 = !DILocation(line: 187, column: 38, scope: !11789)
!11809 = !DILocation(line: 187, column: 40, scope: !11789)
!11810 = !DILocation(line: 187, column: 39, scope: !11789)
!11811 = !DILocation(line: 187, column: 42, scope: !11789)
!11812 = !DILocation(line: 187, column: 36, scope: !11789)
!11813 = !DILocation(line: 187, column: 67, scope: !11789)
!11814 = !DILocation(line: 187, column: 68, scope: !11789)
!11815 = !DILocation(line: 187, column: 62, scope: !11789)
!11816 = !DILocation(line: 187, column: 89, scope: !11789)
!11817 = !DILocation(line: 187, column: 84, scope: !11789)
!11818 = !DILocation(line: 187, column: 72, scope: !11789)
!11819 = !DILocation(line: 187, column: 60, scope: !11789)
!11820 = !DILocation(line: 187, column: 93, scope: !11789)
!11821 = !DILocation(line: 187, column: 99, scope: !11789)
!11822 = !DILocation(line: 187, column: 47, scope: !11789)
!11823 = !DILocation(line: 187, column: 14, scope: !11789)
!11824 = !DILocation(line: 187, column: 16, scope: !11789)
!11825 = !DILocation(line: 187, column: 15, scope: !11789)
!11826 = !DILocation(line: 187, column: 18, scope: !11789)
!11827 = !DILocation(line: 187, column: 9, scope: !11789)
!11828 = !DILocation(line: 187, column: 22, scope: !11789)
!11829 = !DILocation(line: 188, column: 5, scope: !11789)
!11830 = !DILocation(line: 185, column: 26, scope: !11831)
!11831 = !DILexicalBlockFile(scope: !11784, file: !174, discriminator: 2)
!11832 = !DILocation(line: 185, column: 5, scope: !11831)
!11833 = distinct !{!11833, !11834}
!11834 = !DILocation(line: 185, column: 5, scope: !11740)
!11835 = !DILocation(line: 189, column: 31, scope: !11740)
!11836 = !DILocation(line: 189, column: 32, scope: !11740)
!11837 = !DILocation(line: 189, column: 29, scope: !11740)
!11838 = !DILocation(line: 189, column: 57, scope: !11740)
!11839 = !DILocation(line: 189, column: 59, scope: !11740)
!11840 = !DILocation(line: 189, column: 52, scope: !11740)
!11841 = !DILocation(line: 189, column: 80, scope: !11740)
!11842 = !DILocation(line: 189, column: 82, scope: !11740)
!11843 = !DILocation(line: 189, column: 75, scope: !11740)
!11844 = !DILocation(line: 189, column: 63, scope: !11740)
!11845 = !DILocation(line: 189, column: 50, scope: !11740)
!11846 = !DILocation(line: 189, column: 87, scope: !11740)
!11847 = !DILocation(line: 189, column: 93, scope: !11740)
!11848 = !DILocation(line: 189, column: 37, scope: !11740)
!11849 = !DILocation(line: 189, column: 10, scope: !11740)
!11850 = !DILocation(line: 189, column: 11, scope: !11740)
!11851 = !DILocation(line: 189, column: 5, scope: !11740)
!11852 = !DILocation(line: 189, column: 15, scope: !11740)
!11853 = !DILocation(line: 192, column: 27, scope: !11740)
!11854 = !DILocation(line: 192, column: 56, scope: !11740)
!11855 = !DILocation(line: 192, column: 51, scope: !11740)
!11856 = !DILocation(line: 192, column: 77, scope: !11740)
!11857 = !DILocation(line: 192, column: 72, scope: !11740)
!11858 = !DILocation(line: 192, column: 60, scope: !11740)
!11859 = !DILocation(line: 192, column: 49, scope: !11740)
!11860 = !DILocation(line: 192, column: 82, scope: !11740)
!11861 = !DILocation(line: 192, column: 90, scope: !11740)
!11862 = !DILocation(line: 192, column: 36, scope: !11740)
!11863 = !DILocation(line: 192, column: 13, scope: !11740)
!11864 = !DILocation(line: 192, column: 8, scope: !11740)
!11865 = !DILocation(line: 193, column: 16, scope: !11740)
!11866 = !DILocation(line: 193, column: 15, scope: !11740)
!11867 = !DILocation(line: 193, column: 20, scope: !11740)
!11868 = !DILocation(line: 193, column: 12, scope: !11740)
!11869 = !DILocation(line: 193, column: 5, scope: !11740)
!11870 = !DILocation(line: 193, column: 10, scope: !11740)
!11871 = !DILocation(line: 194, column: 12, scope: !11872)
!11872 = distinct !DILexicalBlock(scope: !11740, file: !174, line: 194, column: 5)
!11873 = !DILocation(line: 194, column: 10, scope: !11872)
!11874 = !DILocation(line: 194, column: 17, scope: !11875)
!11875 = !DILexicalBlockFile(scope: !11876, file: !174, discriminator: 1)
!11876 = distinct !DILexicalBlock(scope: !11872, file: !174, line: 194, column: 5)
!11877 = !DILocation(line: 194, column: 21, scope: !11875)
!11878 = !DILocation(line: 194, column: 19, scope: !11875)
!11879 = !DILocation(line: 194, column: 5, scope: !11875)
!11880 = !DILocation(line: 195, column: 31, scope: !11881)
!11881 = distinct !DILexicalBlock(scope: !11876, file: !174, line: 194, column: 30)
!11882 = !DILocation(line: 195, column: 26, scope: !11881)
!11883 = !DILocation(line: 195, column: 56, scope: !11881)
!11884 = !DILocation(line: 195, column: 58, scope: !11881)
!11885 = !DILocation(line: 195, column: 57, scope: !11881)
!11886 = !DILocation(line: 195, column: 60, scope: !11881)
!11887 = !DILocation(line: 195, column: 51, scope: !11881)
!11888 = !DILocation(line: 195, column: 81, scope: !11881)
!11889 = !DILocation(line: 195, column: 83, scope: !11881)
!11890 = !DILocation(line: 195, column: 82, scope: !11881)
!11891 = !DILocation(line: 195, column: 76, scope: !11881)
!11892 = !DILocation(line: 195, column: 64, scope: !11881)
!11893 = !DILocation(line: 195, column: 49, scope: !11881)
!11894 = !DILocation(line: 195, column: 88, scope: !11881)
!11895 = !DILocation(line: 195, column: 96, scope: !11881)
!11896 = !DILocation(line: 195, column: 36, scope: !11881)
!11897 = !DILocation(line: 195, column: 12, scope: !11881)
!11898 = !DILocation(line: 196, column: 31, scope: !11881)
!11899 = !DILocation(line: 196, column: 33, scope: !11881)
!11900 = !DILocation(line: 196, column: 32, scope: !11881)
!11901 = !DILocation(line: 196, column: 35, scope: !11881)
!11902 = !DILocation(line: 196, column: 26, scope: !11881)
!11903 = !DILocation(line: 196, column: 55, scope: !11881)
!11904 = !DILocation(line: 196, column: 70, scope: !11881)
!11905 = !DILocation(line: 196, column: 58, scope: !11881)
!11906 = !DILocation(line: 196, column: 53, scope: !11881)
!11907 = !DILocation(line: 196, column: 74, scope: !11881)
!11908 = !DILocation(line: 196, column: 82, scope: !11881)
!11909 = !DILocation(line: 196, column: 40, scope: !11881)
!11910 = !DILocation(line: 196, column: 12, scope: !11881)
!11911 = !DILocation(line: 197, column: 24, scope: !11881)
!11912 = !DILocation(line: 197, column: 23, scope: !11881)
!11913 = !DILocation(line: 197, column: 28, scope: !11881)
!11914 = !DILocation(line: 197, column: 20, scope: !11881)
!11915 = !DILocation(line: 197, column: 13, scope: !11881)
!11916 = !DILocation(line: 197, column: 12, scope: !11881)
!11917 = !DILocation(line: 197, column: 14, scope: !11881)
!11918 = !DILocation(line: 197, column: 9, scope: !11881)
!11919 = !DILocation(line: 197, column: 18, scope: !11881)
!11920 = !DILocation(line: 198, column: 23, scope: !11881)
!11921 = !DILocation(line: 198, column: 22, scope: !11881)
!11922 = !DILocation(line: 198, column: 27, scope: !11881)
!11923 = !DILocation(line: 198, column: 19, scope: !11881)
!11924 = !DILocation(line: 198, column: 13, scope: !11881)
!11925 = !DILocation(line: 198, column: 12, scope: !11881)
!11926 = !DILocation(line: 198, column: 9, scope: !11881)
!11927 = !DILocation(line: 198, column: 17, scope: !11881)
!11928 = !DILocation(line: 199, column: 14, scope: !11881)
!11929 = !DILocation(line: 199, column: 12, scope: !11881)
!11930 = !DILocation(line: 200, column: 5, scope: !11881)
!11931 = !DILocation(line: 194, column: 26, scope: !11932)
!11932 = !DILexicalBlockFile(scope: !11876, file: !174, discriminator: 2)
!11933 = !DILocation(line: 194, column: 5, scope: !11932)
!11934 = distinct !{!11934, !11935}
!11935 = !DILocation(line: 194, column: 5, scope: !11740)
!11936 = !DILocation(line: 201, column: 35, scope: !11740)
!11937 = !DILocation(line: 201, column: 36, scope: !11740)
!11938 = !DILocation(line: 201, column: 30, scope: !11740)
!11939 = !DILocation(line: 201, column: 56, scope: !11740)
!11940 = !DILocation(line: 201, column: 71, scope: !11740)
!11941 = !DILocation(line: 201, column: 59, scope: !11740)
!11942 = !DILocation(line: 201, column: 54, scope: !11740)
!11943 = !DILocation(line: 201, column: 75, scope: !11740)
!11944 = !DILocation(line: 201, column: 83, scope: !11740)
!11945 = !DILocation(line: 201, column: 41, scope: !11740)
!11946 = !DILocation(line: 201, column: 17, scope: !11740)
!11947 = !DILocation(line: 201, column: 92, scope: !11740)
!11948 = !DILocation(line: 201, column: 14, scope: !11740)
!11949 = !DILocation(line: 201, column: 7, scope: !11740)
!11950 = !DILocation(line: 201, column: 8, scope: !11740)
!11951 = !DILocation(line: 201, column: 5, scope: !11740)
!11952 = !DILocation(line: 201, column: 12, scope: !11740)
!11953 = !DILocation(line: 202, column: 1, scope: !11740)
