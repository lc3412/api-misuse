; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavformat--mxfdec.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavformat--mxfdec.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVInputFormat = type { i8*, i8*, i32, i8*, %struct.AVCodecTag**, %struct.AVClass*, i8*, %struct.AVInputFormat*, i32, i32, i32 (%struct.AVProbeData*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, i32, i64, i32)*, i64 (%struct.AVFormatContext*, i32, i64*, i64)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, i32, i64, i64, i64, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* }
%struct.AVCodecTag = type { i32, i32 }
%struct.AVProbeData = type { i8*, i8*, i32, i8* }
%struct.AVFormatContext = type { %struct.AVClass*, %struct.AVInputFormat*, %struct.AVOutputFormat*, i8*, %struct.AVIOContext*, i32, i32, %struct.AVStream**, [1024 x i8], i8*, i64, i64, i64, i32, i32, i32, i64, i64, i8*, i32, i32, %struct.AVProgram**, i32, i32, i32, i32, i32, i32, %struct.AVChapter**, %struct.AVDictionary*, i64, i32, i32, %struct.AVIOInterruptCB, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i8*, i8*, %struct.AVFormatInternal*, i32, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, i32, i8*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i64, i8*, i32, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVIOInterruptCB*, %struct.AVDictionary**)*, i8*, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)*, void (%struct.AVFormatContext*, %struct.AVIOContext*)*, i8*, i32, i32 }
%struct.AVOutputFormat = type { i8*, i8*, i8*, i8*, i32, i32, i32, i32, %struct.AVCodecTag**, %struct.AVClass*, %struct.AVOutputFormat*, i32, {}*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, {}*, i32 (%struct.AVFormatContext*, %struct.AVPacket*, %struct.AVPacket*, i32)*, i32 (i32, i32)*, void (%struct.AVFormatContext*, i32, i64*, i64*)*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i32 (%struct.AVFormatContext*, i32, %struct.AVFrame**, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32, {}*, void (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* }
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVRational = type { i32, i32 }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVIOContext = type { %struct.AVClass*, i8*, i32, i8*, i8*, i8*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i64, i32, i32, i32, i64, i8*, i64 (i64, i8*, i32)*, i32, i32 (i8*, i32)*, i64 (i8*, i32, i64, i32)*, i32, i64, i32, i64, i32, i32, i32, i32, i8*, i8*, i32 (i8*, i8*, i32, i32, i64)*, i32, i32, i64, i32 (i8*)*, i64, i8*, i32 }
%struct.AVStream = type { i32, i32, %struct.AVCodecContext*, i8*, %struct.AVRational, i64, i64, i64, i32, i32, %struct.AVRational, %struct.AVDictionary*, %struct.AVRational, %struct.AVPacket, %struct.AVPacketSideData*, i32, i32, %struct.AVRational, i8*, %struct.AVCodecParameters*, %struct.anon*, i32, i64, i64, i64, i32, i32, i32, i32, %struct.AVCodecParserContext*, %struct.AVPacketList*, %struct.AVProbeData, [17 x i64], %struct.AVIndexEntry*, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i64, i64, i64, i32, i64, i64, i32, i32, [17 x i64], [17 x i8], i64, i8, i8, i32, %struct.AVRational, %struct.AVStreamInternal* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodecInternal = type opaque
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVProfile = type { i32, i8* }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.anon = type { i64, i64, i32, i64, [2 x [399 x double]]*, i64, i64, i32, i32, i64, i64, i32, i64, i32 }
%struct.AVCodecParserContext = type { i8*, %struct.AVCodecParser*, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32, i32, [4 x i64], [4 x i64], [4 x i64], i32, i64, [4 x i64], i32, i64, i32, i32, i32, [4 x i64], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParser = type { [5 x i32], i32, i32 (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecParserContext*, %struct.AVCodecContext*, i8**, i32*, i8*, i32)*, void (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, %struct.AVCodecParser* }
%struct.AVPacketList = type { %struct.AVPacket, %struct.AVPacketList* }
%struct.AVIndexEntry = type { i64, i64, i32, i32 }
%struct.AVStreamInternal = type { i32, %struct.AVBSFContext**, i32, i32, %struct.AVCodecContext*, i32, i32, %struct.anon.0, i32, %struct.FFFrac* }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.anon.0 = type { %struct.AVBSFContext*, %struct.AVPacket*, i32 }
%struct.FFFrac = type { i64, i64, i64 }
%struct.AVProgram = type { i32, i32, i32, i32*, i32, %struct.AVDictionary*, i32, i32, i32, i32, i64, i64, i64, i32 }
%struct.AVChapter = type { i32, %struct.AVRational, i64, i64, %struct.AVDictionary* }
%struct.AVDictionary = type opaque
%struct.AVIOInterruptCB = type { i32 (i8*)*, i8* }
%struct.AVFormatInternal = type { i32, %struct.AVPacketList*, %struct.AVPacketList*, i64, %struct.AVPacketList*, %struct.AVPacketList*, %struct.AVPacketList*, %struct.AVPacketList*, i32, i64, %struct.AVRational, i32, i32, i32, i64, i32, i32, %struct.AVDictionary*, i32 }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVCodecDefault = type opaque
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVDeviceInfoList = type opaque
%struct.AVDeviceCapabilitiesQuery = type opaque
%struct.MXFMetadataReadTableEntry = type { [16 x i8], i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)*, i32, i32 }
%struct.MXFCodecUL = type { [16 x i8], i32, i32, i8*, i32, i32 }
%union.unaligned_32 = type { i32 }
%union.unaligned_16 = type { i16 }
%struct.MXFContext = type { %struct.AVClass*, %struct.MXFPartition*, i32, i32, [16 x i8]*, i32, [16 x i8]*, i32, %struct.MXFMetadataSet**, i32, %struct.AVFormatContext*, %struct.AVAES*, i8*, i32, i64, %struct.KLVPacket, i32, %struct.MXFPartition*, i32, i64, i32, i32, %struct.MXFIndexTable*, i32 }
%struct.MXFMetadataSet = type { [16 x i8], i32 }
%struct.AVAES = type opaque
%struct.KLVPacket = type { [16 x i8], i64, i64, i64 }
%struct.MXFPartition = type { i32, i32, i32, i64, i32, i32, i64, i64, i64, i32, i64, i64, i32, i64, i64, %struct.KLVPacket }
%struct.MXFIndexTable = type { i32, i32, i32, i64, i64*, i32, %struct.MXFIndexTableSegment**, %struct.AVIndexEntry*, i8* }
%struct.MXFIndexTableSegment = type { [16 x i8], i32, i32, i32, i32, %struct.AVRational, i64, i64, i8*, i32*, i64*, i32 }
%struct.MXFTrack = type { [16 x i8], i32, %struct.MXFSequence*, [16 x i8], i32, i8*, [4 x i8], %struct.AVRational, i32, i64, i64, i32, i32, i32, i32 }
%struct.MXFSequence = type { [16 x i8], i32, [16 x i8], [16 x i8]*, i32, i64, i8 }
%struct.MXFPackage = type { [16 x i8], i32, [16 x i8], [16 x i8], [16 x i8]*, i32, %struct.MXFDescriptor*, [16 x i8], i8*, [16 x i8]*, i32 }
%struct.MXFDescriptor = type { [16 x i8], i32, [16 x i8], [16 x i8], [16 x i8], %struct.AVRational, %struct.AVRational, i32, i32, i32, [2 x i32], i32, i32, i32, i64, i32, i32, i32, [16 x i8]*, i32, i32, i8*, i32, i32 }
%struct.MXFStructuralComponent = type { [16 x i8], i32, [16 x i8], [16 x i8], [16 x i8], i64, i64, i32 }
%struct.MXFTrack.1 = type { [16 x i8], i32, i32, i32, %struct.AVRational, %struct.AVTimecode }
%struct.AVTimecode = type { i32, i32, %struct.AVRational, i32 }
%struct.MXFEssenceContainerData = type { [16 x i8], i32, [16 x i8], [16 x i8], i32, i32 }
%struct.MXFCryptoContext = type { [16 x i8], i32, [16 x i8] }
%struct.MXFEssenceGroup = type { [16 x i8], i32, [16 x i8]*, i32, i64 }
%struct.MXFTaggedValue = type { [16 x i8], i32, i8*, i8* }
%struct.MXFPulldownComponent = type { [16 x i8], i32, [16 x i8] }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.MXFSamplesPerFrame = type { %struct.AVRational, [6 x i32] }

@.str = private unnamed_addr constant [4 x i8] c"mxf\00", align 1
@.str.1 = private unnamed_addr constant [31 x i8] c"MXF (Material eXchange Format)\00", align 1
@demuxer_class = internal constant %struct.AVClass { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* (i8*)* @av_default_item_name, %struct.AVOption* getelementptr inbounds ([2 x %struct.AVOption], [2 x %struct.AVOption]* @options, i32 0, i32 0), i32 3676772, i32 0, i32 0, i8* (i8*, i8*)* null, %struct.AVClass* (%struct.AVClass*)* null, i32 4, i32 (i8*)* null, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* null }, align 8
@ff_mxf_demuxer = global %struct.AVInputFormat { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i32 0, i32 0), i32 67108864, i8* null, %struct.AVCodecTag** null, %struct.AVClass* @demuxer_class, i8* null, %struct.AVInputFormat* null, i32 0, i32 208, i32 (%struct.AVProbeData*)* @mxf_probe, i32 (%struct.AVFormatContext*)* @mxf_read_header, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* @mxf_read_packet, i32 (%struct.AVFormatContext*)* @mxf_read_close, i32 (%struct.AVFormatContext*, i32, i64, i32)* @mxf_read_seek, i64 (%struct.AVFormatContext*, i32, i64*, i64)* null, i32 (%struct.AVFormatContext*)* null, i32 (%struct.AVFormatContext*)* null, i32 (%struct.AVFormatContext*, i32, i64, i64, i64, i32)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* null, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* null }, align 8
@options = internal constant [2 x %struct.AVOption] [%struct.AVOption { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i32 0, i32 0), i32 200, i32 18, %union.anon zeroinitializer, double 0.000000e+00, double 1.000000e+00, i32 2, i8* null }, %struct.AVOption zeroinitializer], align 16
@.str.2 = private unnamed_addr constant [15 x i8] c"eia608_extract\00", align 1
@.str.3 = private unnamed_addr constant [42 x i8] c"extract eia 608 captions from s436m track\00", align 1
@mxf_header_partition_pack_key = internal constant [14 x i8] c"\06\0E+4\02\05\01\01\0D\01\02\01\01\02", align 1
@.str.4 = private unnamed_addr constant [42 x i8] c"could not find header partition pack key\0A\00", align 1
@.str.5 = private unnamed_addr constant [22 x i8] c"size %lu offset %#lx\0A\00", align 1
@mxf_encrypted_triplet_key = internal constant [16 x i8] c"\06\0E+4\02\04\01\07\0D\01\03\01\02~\01\00", align 16
@mxf_essence_element_key = internal constant [12 x i8] c"\06\0E+4\01\02\01\01\0D\01\03\01", align 1
@mxf_canopus_essence_element_key = internal constant [12 x i8] c"\06\0E+4\01\02\01\0A\0E\0F\03\01", align 1
@mxf_avid_essence_element_key = internal constant [12 x i8] c"\06\0E+4\01\02\01\01\0E\04\03\01", align 1
@mxf_system_item_key_cp = internal constant [13 x i8] c"\06\0E+4\02\05\01\01\0D\01\03\01\04", align 1
@mxf_system_item_key_gc = internal constant [13 x i8] c"\06\0E+4\02S\01\01\0D\01\03\01\14", align 1
@.str.6 = private unnamed_addr constant [44 x i8] c"found essence prior to first PartitionPack\0A\00", align 1
@mxf_metadata_read_table = internal constant [39 x %struct.MXFMetadataReadTableEntry] [%struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02\05\01\01\0D\01\02\01\01\05\01\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_primer_pack, i32 0, i32 0 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02\05\01\01\0D\01\02\01\01\02\01\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_partition_pack, i32 0, i32 0 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02\05\01\01\0D\01\02\01\01\02\02\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_partition_pack, i32 0, i32 0 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02\05\01\01\0D\01\02\01\01\02\03\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_partition_pack, i32 0, i32 0 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02\05\01\01\0D\01\02\01\01\02\04\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_partition_pack, i32 0, i32 0 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02\05\01\01\0D\01\02\01\01\03\01\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_partition_pack, i32 0, i32 0 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02\05\01\01\0D\01\02\01\01\03\02\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_partition_pack, i32 0, i32 0 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02\05\01\01\0D\01\02\01\01\03\03\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_partition_pack, i32 0, i32 0 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02\05\01\01\0D\01\02\01\01\03\04\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_partition_pack, i32 0, i32 0 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02\05\01\01\0D\01\02\01\01\04\02\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_partition_pack, i32 0, i32 0 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02\05\01\01\0D\01\02\01\01\04\04\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_partition_pack, i32 0, i32 0 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02S\01\01\0D\01\01\01\01\01/\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_preface_metadata, i32 0, i32 0 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02S\01\01\0D\01\01\01\01\010\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_identification_metadata, i32 0, i32 0 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02S\01\01\0D\01\01\01\01\01\18\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_content_storage, i32 0, i32 0 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02S\01\01\0D\01\01\01\01\017\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_package, i32 120, i32 2 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02S\01\01\0D\01\01\01\01\016\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_package, i32 120, i32 1 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02S\01\01\0D\01\01\01\01\01\0F\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_sequence, i32 72, i32 6 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02S\01\01\0D\01\01\01\01\01\05\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_essence_group, i32 48, i32 17 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02S\01\01\0D\01\01\01\01\01\11\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_source_clip, i32 96, i32 3 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02S\01\01\0D\01\01\01\01\01?\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_tagged_value, i32 40, i32 18 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02S\01\01\0D\01\01\01\01\01D\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_generic_descriptor, i32 176, i32 7 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02S\01\01\0D\01\01\01\01\01B\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_generic_descriptor, i32 176, i32 8 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02S\01\01\0D\01\01\01\01\01(\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_generic_descriptor, i32 176, i32 8 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02S\01\01\0D\01\01\01\01\01)\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_generic_descriptor, i32 176, i32 8 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02S\01\01\0D\01\01\01\01\01H\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_generic_descriptor, i32 176, i32 8 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02S\01\01\0D\01\01\01\01\01G\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_generic_descriptor, i32 176, i32 8 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02S\01\01\0D\01\01\01\01\01Q\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_generic_descriptor, i32 176, i32 8 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02S\01\01\0D\01\01\01\01\01[\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_generic_descriptor, i32 176, i32 8 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02S\01\01\0D\01\01\01\01\01\5C\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_generic_descriptor, i32 176, i32 8 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02S\01\01\0D\01\01\01\01\01^\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_generic_descriptor, i32 176, i32 8 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02S\01\01\0D\01\01\01\01\01d\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_generic_descriptor, i32 176, i32 8 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02S\01\01\0D\01\01\01\01\01:\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_track, i32 112, i32 9 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02S\01\01\0D\01\01\01\01\01;\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_track, i32 112, i32 9 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02S\01\01\0D\01\01\01\01\01\14\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_timecode_component, i32 56, i32 4 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02S\01\01\0D\01\01\01\01\01\0C\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_pulldown_component, i32 36, i32 5 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02S\01\01\0D\01\04\01\02\02\00\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_cryptographic_context, i32 36, i32 10 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02S\01\01\0D\01\02\01\01\10\01\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_index_table_segment, i32 88, i32 15 }, %struct.MXFMetadataReadTableEntry { [16 x i8] c"\06\0E+4\02S\01\01\0D\01\01\01\01\01#\00", i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_essence_container_data, i32 60, i32 16 }, %struct.MXFMetadataReadTableEntry zeroinitializer], align 16
@.str.7 = private unnamed_addr constant [90 x i8] c"Dark key %02x.%02x.%02x.%02x.%02x.%02x.%02x.%02x.%02x.%02x.%02x.%02x.%02x.%02x.%02x.%02x\0A\00", align 1
@.str.8 = private unnamed_addr constant [12 x i8] c"no essence\0A\00", align 1
@.str.9 = private unnamed_addr constant [69 x i8] c"got %i index tables - only the first one (IndexSID %i) will be used\0A\00", align 1
@.str.10 = private unnamed_addr constant [38 x i8] c"cannot demux OPAtom without an index\0A\00", align 1
@mxf_random_index_pack_key = internal constant [16 x i8] c"\06\0E+4\02\05\01\01\0D\01\02\01\01\11\01\00", align 16
@.str.11 = private unnamed_addr constant [39 x i8] c"bad FooterPartition in RIP - ignoring\0A\00", align 1
@mxf_klv_key = internal constant [4 x i8] c"\06\0E+4", align 1
@.str.12 = private unnamed_addr constant [31 x i8] c"seeking to previous partition\0A\00", align 1
@.str.13 = private unnamed_addr constant [34 x i8] c"failed to read PartitionPack KLV\0A\00", align 1
@.str.14 = private unnamed_addr constant [47 x i8] c"PreviousPartition @ %lx isn't a PartitionPack\0A\00", align 1
@.str.15 = private unnamed_addr constant [71 x i8] c"PreviousPartition for PartitionPack @ %lx indirectly points to itself\0A\00", align 1
@.str.16 = private unnamed_addr constant [27 x i8] c"unknown partition type %i\0A\00", align 1
@.str.17 = private unnamed_addr constant [20 x i8] c"Failed reading UID\0A\00", align 1
@.str.18 = private unnamed_addr constant [46 x i8] c"PreviousPartition equal to ThisPartition %lx\0A\00", align 1
@.str.19 = private unnamed_addr constant [39 x i8] c"Overriding PreviousPartition with %lx\0A\00", align 1
@.str.20 = private unnamed_addr constant [48 x i8] c"inconsistent FooterPartition value: %lu != %lu\0A\00", align 1
@.str.21 = private unnamed_addr constant [119 x i8] c"PartitionPack: ThisPartition = 0x%lX, PreviousPartition = 0x%lX, FooterPartition = 0x%lX, IndexSID = %i, BodySID = %i\0A\00", align 1
@.str.22 = private unnamed_addr constant [55 x i8] c"PreviousPartition points to this partition or forward\0A\00", align 1
@.str.23 = private unnamed_addr constant [36 x i8] c"\22OPAtom\22 with %u ECs - assuming %s\0A\00", align 1
@.str.24 = private unnamed_addr constant [5 x i8] c"OP1a\00", align 1
@.str.25 = private unnamed_addr constant [7 x i8] c"OPAtom\00", align 1
@.str.26 = private unnamed_addr constant [58 x i8] c"unknown operational pattern: %02xh %02xh - guessing OP1a\0A\00", align 1
@.str.27 = private unnamed_addr constant [31 x i8] c"invalid KAGSize %d - guessing \00", align 1
@.str.28 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@.str.29 = private unnamed_addr constant [20 x i8] c"no FooterPartition\0A\00", align 1
@.str.30 = private unnamed_addr constant [28 x i8] c"seeking to FooterPartition\0A\00", align 1
@.str.31 = private unnamed_addr constant [52 x i8] c"file is not seekable - not parsing FooterPartition\0A\00", align 1
@.str.32 = private unnamed_addr constant [65 x i8] c"failed to seek to FooterPartition @ 0x%lx (%ld) - partial file?\0A\00", align 1
@.str.33 = private unnamed_addr constant [27 x i8] c"Primer pack item length %d\00", align 1
@.str.34 = private unnamed_addr constant [26 x i8] c"item_num %d is too large\0A\00", align 1
@.str.35 = private unnamed_addr constant [23 x i8] c"Multiple primer packs\0A\00", align 1
@mxf_avid_project_name = internal constant [16 x i8] c"\A5\FB{%\F6\15\94\B9b\FC7\17I-B\BF", align 16
@.str.36 = private unnamed_addr constant [13 x i8] c"project_name\00", align 1
@.str.37 = private unnamed_addr constant [13 x i8] c"company_name\00", align 1
@.str.38 = private unnamed_addr constant [13 x i8] c"product_name\00", align 1
@.str.39 = private unnamed_addr constant [16 x i8] c"product_version\00", align 1
@.str.40 = private unnamed_addr constant [12 x i8] c"product_uid\00", align 1
@.str.41 = private unnamed_addr constant [18 x i8] c"modification_date\00", align 1
@.str.42 = private unnamed_addr constant [21 x i8] c"application_platform\00", align 1
@.str.43 = private unnamed_addr constant [15 x i8] c"generation_uid\00", align 1
@.str.44 = private unnamed_addr constant [4 x i8] c"uid\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c"%.2x\00", align 1
@.str.46 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.47 = private unnamed_addr constant [24 x i8] c"Multiple packages_refs\0A\00", align 1
@mxf_indirect_value_utf16le = internal constant [17 x i8] c"L\00\02\10\01\00\00\00\00\06\0E+4\01\04\01\01", align 16
@mxf_indirect_value_utf16be = internal constant [17 x i8] c"B\01\10\02\00\00\00\00\00\06\0E+4\01\04\01\01", align 16
@.str.48 = private unnamed_addr constant [54 x i8] c"VideoLineMap element size %d currently not supported\0A\00", align 1
@mxf_sony_mpeg4_extradata = internal constant [16 x i8] c"\06\0E+4\04\01\01\01\0E\06\06\02\02\01\00\00", align 16
@.str.49 = private unnamed_addr constant [32 x i8] c"Duplicate sony_mpeg4_extradata\0A\00", align 1
@mxf_jp2k_rsiz = internal constant [16 x i8] c"\06\0E+4\02\05\01\01\0D\01\02\01\01\02\01\00", align 16
@.str.50 = private unnamed_addr constant [24 x i8] c"pixel layout: code %#x\0A\00", align 1
@mxf_crypto_source_container_ul = internal constant [16 x i8] c"\06\0E+4\01\01\01\09\06\01\01\02\02\00\00\00", align 16
@.str.51 = private unnamed_addr constant [22 x i8] c"EditUnitByteCount %d\0A\00", align 1
@.str.52 = private unnamed_addr constant [13 x i8] c"IndexSID %d\0A\00", align 1
@.str.53 = private unnamed_addr constant [12 x i8] c"BodySID %d\0A\00", align 1
@.str.54 = private unnamed_addr constant [23 x i8] c"IndexEntryArray found\0A\00", align 1
@.str.55 = private unnamed_addr constant [21 x i8] c"IndexEditRate %d/%d\0A\00", align 1
@.str.56 = private unnamed_addr constant [24 x i8] c"IndexStartPosition %ld\0A\00", align 1
@.str.57 = private unnamed_addr constant [19 x i8] c"IndexDuration %ld\0A\00", align 1
@.str.58 = private unnamed_addr constant [29 x i8] c"read past end of KLV @ %#lx\0A\00", align 1
@.str.59 = private unnamed_addr constant [31 x i8] c"error reading header metadata\0A\00", align 1
@.str.60 = private unnamed_addr constant [25 x i8] c"local tag %#04x size %d\0A\00", align 1
@.str.61 = private unnamed_addr constant [29 x i8] c"local tag %#04x with 0 size\0A\00", align 1
@.str.62 = private unnamed_addr constant [17 x i8] c"local tag %#04x\0A\00", align 1
@.str.63 = private unnamed_addr constant [54 x i8] c"local tag %#04x extends past end of local set @ %#lx\0A\00", align 1
@.str.64 = private unnamed_addr constant [24 x i8] c"metadata sets count %d\0A\00", align 1
@.str.65 = private unnamed_addr constant [27 x i8] c"no material package found\0A\00", align 1
@.str.66 = private unnamed_addr constant [22 x i8] c"material_package_umid\00", align 1
@.str.67 = private unnamed_addr constant [22 x i8] c"material_package_name\00", align 1
@.str.68 = private unnamed_addr constant [45 x i8] c"could not resolve material track strong ref\0A\00", align 1
@.str.69 = private unnamed_addr constant [9 x i8] c"timecode\00", align 1
@.str.70 = private unnamed_addr constant [54 x i8] c"could not resolve material track sequence strong ref\0A\00", align 1
@.str.71 = private unnamed_addr constant [38 x i8] c"material track %d: has %d components\0A\00", align 1
@.str.72 = private unnamed_addr constant [58 x i8] c"material track %d: no corresponding source package found\0A\00", align 1
@.str.73 = private unnamed_addr constant [43 x i8] c"could not resolve source track strong ref\0A\00", align 1
@.str.74 = private unnamed_addr constant [56 x i8] c"material track %d: no corresponding source track found\0A\00", align 1
@.str.75 = private unnamed_addr constant [53 x i8] c"could not resolve essence container data strong ref\0A\00", align 1
@.str.76 = private unnamed_addr constant [52 x i8] c"could not resolve source track sequence strong ref\0A\00", align 1
@.str.77 = private unnamed_addr constant [44 x i8] c"material track %d: DataDefinition mismatch\0A\00", align 1
@.str.78 = private unnamed_addr constant [27 x i8] c"could not allocate stream\0A\00", align 1
@.str.79 = private unnamed_addr constant [67 x i8] c"Invalid edit rate (%d/%d) found on stream #%d, defaulting to 25/1\0A\00", align 1
@ff_mxf_data_definition_uls = external constant [0 x %struct.MXFCodecUL], align 8
@.str.80 = private unnamed_addr constant [49 x i8] c"source track %d: stream %d, no descriptor found\0A\00", align 1
@.str.81 = private unnamed_addr constant [34 x i8] c"wrapping of stream %d is unknown\0A\00", align 1
@mxf_encrypted_essence_container = internal constant [16 x i8] c"\06\0E+4\04\01\01\07\0D\01\03\01\02\0B\01\00", align 16
@.str.82 = private unnamed_addr constant [27 x i8] c"broken encrypted mxf file\0A\00", align 1
@ff_mxf_codec_uls = external constant [0 x %struct.MXFCodecUL], align 8
@.str.83 = private unnamed_addr constant [22 x i8] c"%s: Universal Label: \00", align 1
@.str.84 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.85 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.86 = private unnamed_addr constant [18 x i8] c"file_package_umid\00", align 1
@.str.87 = private unnamed_addr constant [18 x i8] c"file_package_name\00", align 1
@.str.88 = private unnamed_addr constant [11 x i8] c"track_name\00", align 1
@mxf_picture_essence_container_uls = internal constant [16 x %struct.MXFCodecUL] [%struct.MXFCodecUL { [16 x i8] c"\06\0E+4\04\01\01\07\0D\01\03\01\02\0C\01\00", i32 14, i32 88, i8* null, i32 14, i32 0 }, %struct.MXFCodecUL { [16 x i8] c"\06\0E+4\04\01\01\02\0D\01\03\01\02\10`\01", i32 14, i32 27, i8* null, i32 15, i32 0 }, %struct.MXFCodecUL { [16 x i8] c"\06\0E+4\04\01\01\02\0D\01\03\01\02\11\01\00", i32 14, i32 99, i8* null, i32 14, i32 0 }, %struct.MXFCodecUL { [16 x i8] c"\06\0E+4\04\01\01\02\0D\01\03\01\02\12\01\00", i32 14, i32 70, i8* null, i32 14, i32 0 }, %struct.MXFCodecUL { [16 x i8] c"\06\0E+4\04\01\01\02\0D\01\03\01\02\14\01\00", i32 14, i32 96, i8* null, i32 14, i32 0 }, %struct.MXFCodecUL { [16 x i8] c"\06\0E+4\04\01\01\02\0D\01\03\01\02\15\01\00", i32 14, i32 116, i8* null, i32 14, i32 0 }, %struct.MXFCodecUL { [16 x i8] c"\06\0E+4\04\01\01\02\0D\01\03\01\02\1B\01\00", i32 14, i32 32784, i8* null, i32 14, i32 0 }, %struct.MXFCodecUL { [16 x i8] c"\06\0E+4\04\01\01\02\0D\01\03\01\02\1C\01\00", i32 14, i32 147, i8* null, i32 14, i32 0 }, %struct.MXFCodecUL { [16 x i8] c"\06\0E+4\04\01\01\02\0D\01\03\01\02\04`\01", i32 14, i32 2, i8* null, i32 15, i32 0 }, %struct.MXFCodecUL { [16 x i8] c"\06\0E+4\04\01\01\01\0D\01\03\01\02\01\04\01", i32 14, i32 2, i8* null, i32 15, i32 1 }, %struct.MXFCodecUL { [16 x i8] c"\06\0E+4\04\01\01\01\0D\01\03\01\02\02A\01", i32 14, i32 24, i8* null, i32 15, i32 0 }, %struct.MXFCodecUL { [16 x i8] c"\06\0E+4\04\01\01\01\0D\01\03\01\02\05\00\00", i32 14, i32 13, i8* null, i32 15, i32 3 }, %struct.MXFCodecUL { [16 x i8] c"\06\0E+4\04\01\01\0A\0E\0F\03\01\02 \01\01", i32 15, i32 186, i8* null, i32 0, i32 0 }, %struct.MXFCodecUL { [16 x i8] c"\06\0E+4\04\01\01\0A\0E\0F\03\01\02 \02\01", i32 15, i32 184, i8* null, i32 0, i32 0 }, %struct.MXFCodecUL { [16 x i8] c"\06\0E+4\01\01\01\FFKFAA\00\0DMO", i32 14, i32 13, i8* null, i32 0, i32 0 }, %struct.MXFCodecUL zeroinitializer], align 16
@.str.89 = private unnamed_addr constant [49 x i8] c"OneField frame layout isn't currently supported\0A\00", align 1
@.str.90 = private unnamed_addr constant [47 x i8] c"video_line_map: (%d, %d), field_dominance: %d\0A\00", align 1
@.str.91 = private unnamed_addr constant [27 x i8] c"Field dominance %d support\00", align 1
@.str.92 = private unnamed_addr constant [31 x i8] c"Unknown frame layout type: %d\0A\00", align 1
@ff_mxf_pixel_format_uls = external constant [0 x %struct.MXFCodecUL], align 8
@ff_mxf_codec_tag_uls = external constant [0 x %struct.MXFCodecUL], align 8
@.str.93 = private unnamed_addr constant [22 x i8] c"material_track_origin\00", align 1
@.str.94 = private unnamed_addr constant [20 x i8] c"source_track_origin\00", align 1
@mxf_sound_essence_container_uls = internal constant [6 x %struct.MXFCodecUL] [%struct.MXFCodecUL { [16 x i8] c"\06\0E+4\04\01\01\01\0D\01\03\01\02\06\01\00", i32 14, i32 65536, i8* null, i32 14, i32 2 }, %struct.MXFCodecUL { [16 x i8] c"\06\0E+4\04\01\01\02\0D\01\03\01\02\04@\01", i32 14, i32 86016, i8* null, i32 15, i32 0 }, %struct.MXFCodecUL { [16 x i8] c"\06\0E+4\04\01\01\01\0D\01\03\01\02\01\01\01", i32 14, i32 65536, i8* null, i32 13, i32 0 }, %struct.MXFCodecUL { [16 x i8] c"\06\0E+4\01\01\01\FFKFAA\00\0DMO", i32 14, i32 65536, i8* null, i32 0, i32 0 }, %struct.MXFCodecUL { [16 x i8] c"\06\0E+4\04\01\01\03\04\02\02\02\03\03\01\00", i32 14, i32 86018, i8* null, i32 0, i32 0 }, %struct.MXFCodecUL zeroinitializer], align 16
@.str.95 = private unnamed_addr constant [79 x i8] c"invalid sample rate (%d/%d) found for stream #%d, time base forced to 1/48000\0A\00", align 1
@mxf_data_essence_container_uls = internal constant [4 x %struct.MXFCodecUL] [%struct.MXFCodecUL { [16 x i8] c"\06\0E+4\04\01\01\09\0D\01\03\01\02\0D\00\00", i32 16, i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.106, i32 0, i32 0), i32 11, i32 0 }, %struct.MXFCodecUL { [16 x i8] c"\06\0E+4\04\01\01\09\0D\01\03\01\02\0E\00\00", i32 16, i32 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.97, i32 0, i32 0), i32 11, i32 0 }, %struct.MXFCodecUL { [16 x i8] c"\06\0E+4\04\01\01\09\0D\01\03\01\02\13\01\01", i32 16, i32 96271, i8* null, i32 0, i32 0 }, %struct.MXFCodecUL zeroinitializer], align 16
@.str.96 = private unnamed_addr constant [10 x i8] c"data_type\00", align 1
@.str.97 = private unnamed_addr constant [20 x i8] c"vbi_vanc_smpte_436M\00", align 1
@mxf_intra_only_picture_coded_width = internal constant [5 x %struct.MXFCodecUL] [%struct.MXFCodecUL { [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02\012!\01", i32 16, i32 1440, i8* null, i32 0, i32 0 }, %struct.MXFCodecUL { [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02\012!\02", i32 16, i32 1440, i8* null, i32 0, i32 0 }, %struct.MXFCodecUL { [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02\012!\03", i32 16, i32 1440, i8* null, i32 0, i32 0 }, %struct.MXFCodecUL { [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02\012!\04", i32 16, i32 1440, i8* null, i32 0, i32 0 }, %struct.MXFCodecUL zeroinitializer], align 16
@.str.98 = private unnamed_addr constant [3 x i8] c"0x\00", align 1
@.str.99 = private unnamed_addr constant [5 x i8] c"%.2X\00", align 1
@.str.100 = private unnamed_addr constant [11 x i8] c"comment_%s\00", align 1
@.str.101 = private unnamed_addr constant [36 x i8] c"could not allocate metadata stream\0A\00", align 1
@.str.102 = private unnamed_addr constant [45 x i8] c"could not resolve sub descriptor strong ref\0A\00", align 1
@.str.103 = private unnamed_addr constant [10 x i8] c"reel_umid\00", align 1
@.str.104 = private unnamed_addr constant [10 x i8] c"reel_name\00", align 1
@.str.105 = private unnamed_addr constant [81 x i8] c"Invalid edit rate (%d/%d) found on structural component #%d, defaulting to 25/1\0A\00", align 1
@mxf_intra_only_essence_container_uls = internal constant [2 x %struct.MXFCodecUL] [%struct.MXFCodecUL { [16 x i8] c"\06\0E+4\04\01\01\01\0D\01\03\01\02\01\00\00", i32 14, i32 2, i8* null, i32 0, i32 0 }, %struct.MXFCodecUL zeroinitializer], align 16
@mxf_intra_only_picture_essence_coding_uls = internal constant [3 x %struct.MXFCodecUL] [%struct.MXFCodecUL { [16 x i8] c"\06\0E+4\04\01\01\0A\04\01\02\02\012\00\00", i32 14, i32 27, i8* null, i32 0, i32 0 }, %struct.MXFCodecUL { [16 x i8] c"\06\0E+4\04\01\01\07\04\01\02\02\03\01\01\00", i32 14, i32 88, i8* null, i32 0, i32 0 }, %struct.MXFCodecUL zeroinitializer], align 16
@.str.106 = private unnamed_addr constant [15 x i8] c"vbi_smpte_436M\00", align 1
@.str.107 = private unnamed_addr constant [60 x i8] c"guessing index for stream %d using edit unit byte count %d\0A\00", align 1
@.str.108 = private unnamed_addr constant [23 x i8] c"broken or empty index\0A\00", align 1
@.str.109 = private unnamed_addr constant [28 x i8] c"found inconsistent BodySID\0A\00", align 1
@.str.110 = private unnamed_addr constant [33 x i8] c"failed to allocate index tables\0A\00", align 1
@.str.111 = private unnamed_addr constant [52 x i8] c"failed to allocate IndexTableSegment pointer array\0A\00", align 1
@.str.112 = private unnamed_addr constant [71 x i8] c"IndexSID %i starts at EditUnit %ld - seeking may not work as expected\0A\00", align 1
@.str.113 = private unnamed_addr constant [50 x i8] c"IndexSID %i segment %i has invalid IndexEditRate\0A\00", align 1
@.str.114 = private unnamed_addr constant [81 x i8] c"IndexSID %i segment %i has zero IndexDuration and there's more than one segment\0A\00", align 1
@.str.115 = private unnamed_addr constant [13 x i8] c"no streams?\0A\00", align 1
@.str.116 = private unnamed_addr constant [74 x i8] c"IndexSID %i segment at %ld missing EditUnitByteCount and IndexEntryArray\0A\00", align 1
@.str.117 = private unnamed_addr constant [45 x i8] c"ignoring IndexSID %d, duration is too large\0A\00", align 1
@.str.118 = private unnamed_addr constant [57 x i8] c"x >= nb_ptses - IndexEntryCount %i < IndexDuration %ld?\0A\00", align 1
@.str.119 = private unnamed_addr constant [65 x i8] c"index entry %i + TemporalOffset %i = %i, which is out of bounds\0A\00", align 1
@.str.120 = private unnamed_addr constant [39 x i8] c"partition %i: bad ThisPartition = %lX\0A\00", align 1
@.str.121 = private unnamed_addr constant [25 x i8] c"invalid encoded triplet\0A\00", align 1
@.str.122 = private unnamed_addr constant [31 x i8] c"error getting stream index %u\0A\00", align 1
@.str.123 = private unnamed_addr constant [59 x i8] c"Huge KLV without proper index in non-frame wrapped essence\00", align 1
@.str.124 = private unnamed_addr constant [15 x i8] c"bad size: %ld\0A\00", align 1
@.str.125 = private unnamed_addr constant [31 x i8] c"error reading D-10 aes3 frame\0A\00", align 1
@mxf_decrypt_triplet.checkv = internal constant [16 x i8] c"CHUKCHUKCHUKCHUK", align 16
@.str.126 = private unnamed_addr constant [35 x i8] c"probably incorrect decryption key\0A\00", align 1
@.str.127 = private unnamed_addr constant [47 x i8] c"unable to compute the size of the last packet\0A\00", align 1
@.str.128 = private unnamed_addr constant [61 x i8] c"cannot find current edit unit for stream %d, invalid index?\0A\00", align 1
@.str.129 = private unnamed_addr constant [50 x i8] c"failed to find next track edit unit in stream %d\0A\00", align 1
@.str.130 = private unnamed_addr constant [59 x i8] c"edit unit sync lost on stream %d, jumping from %ld to %ld\0A\00", align 1
@.str.131 = private unnamed_addr constant [54 x i8] c"IndexSID %i segment at %ld IndexEntryArray too small\0A\00", align 1
@.str.132 = private unnamed_addr constant [56 x i8] c"failed to map EditUnit %ld in IndexSID %i to an offset\0A\00", align 1
@.str.133 = private unnamed_addr constant [69 x i8] c"failed to find absolute offset of %lX in BodySID %i - partial file?\0A\00", align 1
@.str.134 = private unnamed_addr constant [109 x i8] c"seeking detected on stream #%d with time base (%d/%d) and sample rate (%d/%d), audio pts won't be accurate.\0A\00", align 1
@.str.135 = private unnamed_addr constant [54 x i8] c"unsupported multiple ANC packets (%d) per KLV packet\0A\00", align 1
@.str.136 = private unnamed_addr constant [32 x i8] c"error reading s436m packet %ld\0A\00", align 1
@.str.137 = private unnamed_addr constant [40 x i8] c"unsupported s436m 10 bit sample coding\0A\00", align 1
@.str.138 = private unnamed_addr constant [32 x i8] c"unsupported did or sdid: %x %x\0A\00", align 1
@.str.139 = private unnamed_addr constant [25 x i8] c"wrong cdp identifier %x\0A\00", align 1
@.str.140 = private unnamed_addr constant [27 x i8] c"wrong cdp data section %x\0A\00", align 1
@.str.141 = private unnamed_addr constant [31 x i8] c"wrong cdp size %d cc count %d\0A\00", align 1
@.str.142 = private unnamed_addr constant [29 x i8] c"wrong cdp footer section %x\0A\00", align 1
@.str.143 = private unnamed_addr constant [45 x i8] c"attempted seek in an UnknownWrapped essence\0A\00", align 1
@.str.144 = private unnamed_addr constant [40 x i8] c"attempted seek out of clip wrapped KLV\0A\00", align 1

; Function Attrs: nounwind uwtable
define internal i32 @mxf_probe(%struct.AVProbeData* %p) #0 !dbg !2509 {
entry:
  %retval = alloca i32, align 4
  %p.addr = alloca %struct.AVProbeData*, align 8
  %bufp = alloca i8*, align 8
  %end = alloca i8*, align 8
  store %struct.AVProbeData* %p, %struct.AVProbeData** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVProbeData** %p.addr, metadata !2510, metadata !2511), !dbg !2512
  call void @llvm.dbg.declare(metadata i8** %bufp, metadata !2513, metadata !2511), !dbg !2514
  %0 = load %struct.AVProbeData*, %struct.AVProbeData** %p.addr, align 8, !dbg !2515
  %buf = getelementptr inbounds %struct.AVProbeData, %struct.AVProbeData* %0, i32 0, i32 1, !dbg !2516
  %1 = load i8*, i8** %buf, align 8, !dbg !2516
  store i8* %1, i8** %bufp, align 8, !dbg !2514
  call void @llvm.dbg.declare(metadata i8** %end, metadata !2517, metadata !2511), !dbg !2518
  %2 = load %struct.AVProbeData*, %struct.AVProbeData** %p.addr, align 8, !dbg !2519
  %buf1 = getelementptr inbounds %struct.AVProbeData, %struct.AVProbeData* %2, i32 0, i32 1, !dbg !2520
  %3 = load i8*, i8** %buf1, align 8, !dbg !2520
  %4 = load %struct.AVProbeData*, %struct.AVProbeData** %p.addr, align 8, !dbg !2521
  %buf_size = getelementptr inbounds %struct.AVProbeData, %struct.AVProbeData* %4, i32 0, i32 2, !dbg !2522
  %5 = load i32, i32* %buf_size, align 8, !dbg !2522
  %idx.ext = sext i32 %5 to i64, !dbg !2523
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %idx.ext, !dbg !2523
  store i8* %add.ptr, i8** %end, align 8, !dbg !2518
  %6 = load %struct.AVProbeData*, %struct.AVProbeData** %p.addr, align 8, !dbg !2524
  %buf_size2 = getelementptr inbounds %struct.AVProbeData, %struct.AVProbeData* %6, i32 0, i32 2, !dbg !2526
  %7 = load i32, i32* %buf_size2, align 8, !dbg !2526
  %conv = sext i32 %7 to i64, !dbg !2524
  %cmp = icmp ult i64 %conv, 14, !dbg !2527
  br i1 %cmp, label %if.then, label %if.end, !dbg !2528

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !2529
  br label %return, !dbg !2529

if.end:                                           ; preds = %entry
  %8 = load i8*, i8** %end, align 8, !dbg !2530
  %add.ptr4 = getelementptr inbounds i8, i8* %8, i64 -14, !dbg !2530
  store i8* %add.ptr4, i8** %end, align 8, !dbg !2530
  br label %for.cond, !dbg !2531

for.cond:                                         ; preds = %if.end30, %if.end
  %9 = load i8*, i8** %bufp, align 8, !dbg !2532
  %10 = load i8*, i8** %end, align 8, !dbg !2536
  %cmp5 = icmp ult i8* %9, %10, !dbg !2537
  br i1 %cmp5, label %for.body, label %for.end, !dbg !2538

for.body:                                         ; preds = %for.cond
  %11 = load i8*, i8** %bufp, align 8, !dbg !2539
  %arrayidx = getelementptr inbounds i8, i8* %11, i64 13, !dbg !2539
  %12 = load i8, i8* %arrayidx, align 1, !dbg !2539
  %conv7 = zext i8 %12 to i32, !dbg !2539
  %sub = sub nsw i32 %conv7, 1, !dbg !2542
  %and = and i32 %sub, 242, !dbg !2543
  %tobool = icmp ne i32 %and, 0, !dbg !2543
  br i1 %tobool, label %if.else, label %if.then8, !dbg !2544

if.then8:                                         ; preds = %for.body
  %13 = load i8*, i8** %bufp, align 8, !dbg !2545
  %14 = bitcast i8* %13 to %union.unaligned_32*, !dbg !2548
  %l = bitcast %union.unaligned_32* %14 to i32*, !dbg !2548
  %15 = load i32, i32* %l, align 1, !dbg !2548
  %16 = load i32, i32* bitcast ([14 x i8]* @mxf_header_partition_pack_key to i32*), align 1, !dbg !2549
  %cmp9 = icmp eq i32 %15, %16, !dbg !2550
  br i1 %cmp9, label %land.lhs.true, label %if.end28, !dbg !2551

land.lhs.true:                                    ; preds = %if.then8
  %17 = load i8*, i8** %bufp, align 8, !dbg !2552
  %add.ptr11 = getelementptr inbounds i8, i8* %17, i64 4, !dbg !2553
  %18 = bitcast i8* %add.ptr11 to %union.unaligned_32*, !dbg !2554
  %l12 = bitcast %union.unaligned_32* %18 to i32*, !dbg !2554
  %19 = load i32, i32* %l12, align 1, !dbg !2554
  %20 = load i32, i32* bitcast (i8* getelementptr inbounds ([14 x i8], [14 x i8]* @mxf_header_partition_pack_key, i32 0, i64 4) to i32*), align 1, !dbg !2555
  %cmp13 = icmp eq i32 %19, %20, !dbg !2556
  br i1 %cmp13, label %land.lhs.true15, label %if.end28, !dbg !2557

land.lhs.true15:                                  ; preds = %land.lhs.true
  %21 = load i8*, i8** %bufp, align 8, !dbg !2558
  %add.ptr16 = getelementptr inbounds i8, i8* %21, i64 8, !dbg !2559
  %22 = bitcast i8* %add.ptr16 to %union.unaligned_32*, !dbg !2560
  %l17 = bitcast %union.unaligned_32* %22 to i32*, !dbg !2560
  %23 = load i32, i32* %l17, align 1, !dbg !2560
  %24 = load i32, i32* bitcast (i8* getelementptr inbounds ([14 x i8], [14 x i8]* @mxf_header_partition_pack_key, i32 0, i64 8) to i32*), align 1, !dbg !2561
  %cmp18 = icmp eq i32 %23, %24, !dbg !2562
  br i1 %cmp18, label %land.lhs.true20, label %if.end28, !dbg !2563

land.lhs.true20:                                  ; preds = %land.lhs.true15
  %25 = load i8*, i8** %bufp, align 8, !dbg !2564
  %add.ptr21 = getelementptr inbounds i8, i8* %25, i64 12, !dbg !2565
  %26 = bitcast i8* %add.ptr21 to %union.unaligned_16*, !dbg !2566
  %l22 = bitcast %union.unaligned_16* %26 to i16*, !dbg !2566
  %27 = load i16, i16* %l22, align 1, !dbg !2566
  %conv23 = zext i16 %27 to i32, !dbg !2567
  %28 = load i16, i16* bitcast (i8* getelementptr inbounds ([14 x i8], [14 x i8]* @mxf_header_partition_pack_key, i32 0, i64 12) to i16*), align 1, !dbg !2568
  %conv24 = zext i16 %28 to i32, !dbg !2569
  %cmp25 = icmp eq i32 %conv23, %conv24, !dbg !2570
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !2571

if.then27:                                        ; preds = %land.lhs.true20
  store i32 100, i32* %retval, align 4, !dbg !2573
  br label %return, !dbg !2573

if.end28:                                         ; preds = %land.lhs.true20, %land.lhs.true15, %land.lhs.true, %if.then8
  %29 = load i8*, i8** %bufp, align 8, !dbg !2574
  %incdec.ptr = getelementptr inbounds i8, i8* %29, i32 1, !dbg !2574
  store i8* %incdec.ptr, i8** %bufp, align 8, !dbg !2574
  br label %if.end30, !dbg !2575

if.else:                                          ; preds = %for.body
  %30 = load i8*, i8** %bufp, align 8, !dbg !2576
  %add.ptr29 = getelementptr inbounds i8, i8* %30, i64 10, !dbg !2576
  store i8* %add.ptr29, i8** %bufp, align 8, !dbg !2576
  br label %if.end30

if.end30:                                         ; preds = %if.else, %if.end28
  br label %for.cond, !dbg !2577, !llvm.loop !2579

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !2580
  br label %return, !dbg !2580

return:                                           ; preds = %for.end, %if.then27, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !2581
  ret i32 %31, !dbg !2581
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_read_header(%struct.AVFormatContext* %s) #0 !dbg !2582 {
entry:
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2585, metadata !2511), !dbg !2589
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %klv = alloca %struct.KLVPacket, align 8
  %essence_offset = alloca i64, align 8
  %ret = alloca i32, align 4
  %metadata = alloca %struct.MXFMetadataReadTableEntry*, align 8
  %i = alloca i32, align 4
  %i194 = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !2591, metadata !2511), !dbg !2592
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !2593, metadata !2511), !dbg !2662
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2663
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !2664
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2664
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !2663
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !2662
  call void @llvm.dbg.declare(metadata %struct.KLVPacket* %klv, metadata !2665, metadata !2511), !dbg !2666
  call void @llvm.dbg.declare(metadata i64* %essence_offset, metadata !2667, metadata !2511), !dbg !2668
  store i64 0, i64* %essence_offset, align 8, !dbg !2668
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2669, metadata !2511), !dbg !2670
  %3 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2671
  %last_forward_tell = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %3, i32 0, i32 19, !dbg !2672
  store i64 9223372036854775807, i64* %last_forward_tell, align 8, !dbg !2673
  %4 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2674
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %4, i32 0, i32 4, !dbg !2676
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !2676
  %call = call i32 @mxf_read_sync(%struct.AVIOContext* %5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @mxf_header_partition_pack_key, i32 0, i32 0), i32 14), !dbg !2677
  %tobool = icmp ne i32 %call, 0, !dbg !2677
  br i1 %tobool, label %if.end, label %if.then, !dbg !2678

if.then:                                          ; preds = %entry
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2679
  %7 = bitcast %struct.AVFormatContext* %6 to i8*, !dbg !2679
  call void (i8*, i32, i8*, ...) @av_log(i8* %7, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.4, i32 0, i32 0)), !dbg !2681
  store i32 -1094995529, i32* %retval, align 4, !dbg !2682
  br label %return, !dbg !2682

if.end:                                           ; preds = %entry
  %8 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2683
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %8, i32 0, i32 4, !dbg !2684
  %9 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !2684
  %call2 = call i64 @avio_seek(%struct.AVIOContext* %9, i64 -14, i32 1), !dbg !2685
  %10 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2686
  %11 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2687
  %fc = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %11, i32 0, i32 10, !dbg !2688
  store %struct.AVFormatContext* %10, %struct.AVFormatContext** %fc, align 8, !dbg !2689
  %12 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2690
  %pb3 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %12, i32 0, i32 4, !dbg !2691
  %13 = load %struct.AVIOContext*, %struct.AVIOContext** %pb3, align 8, !dbg !2691
  store %struct.AVIOContext* %13, %struct.AVIOContext** %s.addr.i, align 8, !dbg !2692
  %14 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !2693
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %14, i64 0, i32 1) #8, !dbg !2694
  %conv = trunc i64 %call.i to i32, !dbg !2692
  %15 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2695
  %run_in = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %15, i32 0, i32 16, !dbg !2696
  store i32 %conv, i32* %run_in, align 8, !dbg !2697
  %16 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2698
  call void @mxf_read_random_index_pack(%struct.AVFormatContext* %16), !dbg !2699
  br label %while.cond, !dbg !2700

while.cond:                                       ; preds = %if.end151, %if.then78, %if.end63, %if.else, %if.end
  %17 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2701
  %pb5 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %17, i32 0, i32 4, !dbg !2703
  %18 = load %struct.AVIOContext*, %struct.AVIOContext** %pb5, align 8, !dbg !2703
  %call6 = call i32 @avio_feof(%struct.AVIOContext* %18), !dbg !2704
  %tobool7 = icmp ne i32 %call6, 0, !dbg !2705
  %lnot = xor i1 %tobool7, true, !dbg !2705
  br i1 %lnot, label %while.body, label %while.end, !dbg !2706

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.MXFMetadataReadTableEntry** %metadata, metadata !2707, metadata !2511), !dbg !2710
  %19 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2711
  %pb8 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %19, i32 0, i32 4, !dbg !2713
  %20 = load %struct.AVIOContext*, %struct.AVIOContext** %pb8, align 8, !dbg !2713
  %call9 = call i32 @klv_read_packet(%struct.KLVPacket* %klv, %struct.AVIOContext* %20), !dbg !2714
  %cmp = icmp slt i32 %call9, 0, !dbg !2715
  br i1 %cmp, label %if.then11, label %if.end16, !dbg !2716

if.then11:                                        ; preds = %while.body
  %21 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2717
  %call12 = call i32 @mxf_parse_handle_partition_or_eof(%struct.MXFContext* %21), !dbg !2720
  %cmp13 = icmp sle i32 %call12, 0, !dbg !2721
  br i1 %cmp13, label %if.then15, label %if.else, !dbg !2722

if.then15:                                        ; preds = %if.then11
  br label %while.end, !dbg !2723

if.else:                                          ; preds = %if.then11
  br label %while.cond, !dbg !2724, !llvm.loop !2725

if.end16:                                         ; preds = %while.body
  br label %do.body, !dbg !2726, !llvm.loop !2727

do.body:                                          ; preds = %if.end16
  br label %do.end, !dbg !2728

do.end:                                           ; preds = %do.body
  %22 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2731
  %23 = bitcast %struct.AVFormatContext* %22 to i8*, !dbg !2731
  %length = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 2, !dbg !2732
  %24 = load i64, i64* %length, align 8, !dbg !2732
  %offset = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 1, !dbg !2733
  %25 = load i64, i64* %offset, align 8, !dbg !2733
  call void (i8*, i32, i8*, ...) @av_log(i8* %23, i32 56, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i32 0, i32 0), i64 %24, i64 %25), !dbg !2734
  %key = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !2735
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %key, i32 0, i32 0, !dbg !2737
  %call17 = call i32 @memcmp(i8* %arraydecay, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @mxf_encrypted_triplet_key, i32 0, i32 0), i64 16) #9, !dbg !2738
  %tobool18 = icmp ne i32 %call17, 0, !dbg !2738
  br i1 %tobool18, label %lor.lhs.false, label %if.then43, !dbg !2739

lor.lhs.false:                                    ; preds = %do.end
  %key19 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !2740
  %arraydecay20 = getelementptr inbounds [16 x i8], [16 x i8]* %key19, i32 0, i32 0, !dbg !2741
  %call21 = call i32 @memcmp(i8* %arraydecay20, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @mxf_essence_element_key, i32 0, i32 0), i64 12) #9, !dbg !2742
  %tobool22 = icmp ne i32 %call21, 0, !dbg !2742
  br i1 %tobool22, label %lor.lhs.false23, label %if.then43, !dbg !2743

lor.lhs.false23:                                  ; preds = %lor.lhs.false
  %key24 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !2744
  %arraydecay25 = getelementptr inbounds [16 x i8], [16 x i8]* %key24, i32 0, i32 0, !dbg !2745
  %call26 = call i32 @memcmp(i8* %arraydecay25, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @mxf_canopus_essence_element_key, i32 0, i32 0), i64 12) #9, !dbg !2746
  %tobool27 = icmp ne i32 %call26, 0, !dbg !2746
  br i1 %tobool27, label %lor.lhs.false28, label %if.then43, !dbg !2747

lor.lhs.false28:                                  ; preds = %lor.lhs.false23
  %key29 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !2748
  %arraydecay30 = getelementptr inbounds [16 x i8], [16 x i8]* %key29, i32 0, i32 0, !dbg !2749
  %call31 = call i32 @memcmp(i8* %arraydecay30, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @mxf_avid_essence_element_key, i32 0, i32 0), i64 12) #9, !dbg !2750
  %tobool32 = icmp ne i32 %call31, 0, !dbg !2750
  br i1 %tobool32, label %lor.lhs.false33, label %if.then43, !dbg !2751

lor.lhs.false33:                                  ; preds = %lor.lhs.false28
  %key34 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !2752
  %arraydecay35 = getelementptr inbounds [16 x i8], [16 x i8]* %key34, i32 0, i32 0, !dbg !2753
  %call36 = call i32 @memcmp(i8* %arraydecay35, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @mxf_system_item_key_cp, i32 0, i32 0), i64 13) #9, !dbg !2754
  %tobool37 = icmp ne i32 %call36, 0, !dbg !2754
  br i1 %tobool37, label %lor.lhs.false38, label %if.then43, !dbg !2755

lor.lhs.false38:                                  ; preds = %lor.lhs.false33
  %key39 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !2756
  %arraydecay40 = getelementptr inbounds [16 x i8], [16 x i8]* %key39, i32 0, i32 0, !dbg !2757
  %call41 = call i32 @memcmp(i8* %arraydecay40, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @mxf_system_item_key_gc, i32 0, i32 0), i64 13) #9, !dbg !2758
  %tobool42 = icmp ne i32 %call41, 0, !dbg !2758
  br i1 %tobool42, label %if.else64, label %if.then43, !dbg !2759

if.then43:                                        ; preds = %lor.lhs.false38, %lor.lhs.false33, %lor.lhs.false28, %lor.lhs.false23, %lor.lhs.false, %do.end
  %26 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2761
  %current_partition = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %26, i32 0, i32 17, !dbg !2764
  %27 = load %struct.MXFPartition*, %struct.MXFPartition** %current_partition, align 8, !dbg !2764
  %tobool44 = icmp ne %struct.MXFPartition* %27, null, !dbg !2761
  br i1 %tobool44, label %if.end47, label %if.then45, !dbg !2765

if.then45:                                        ; preds = %if.then43
  %28 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2766
  %fc46 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %28, i32 0, i32 10, !dbg !2768
  %29 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc46, align 8, !dbg !2768
  %30 = bitcast %struct.AVFormatContext* %29 to i8*, !dbg !2766
  call void (i8*, i32, i8*, ...) @av_log(i8* %30, i32 16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i32 0, i32 0)), !dbg !2769
  store i32 -1094995529, i32* %retval, align 4, !dbg !2770
  br label %return, !dbg !2770

if.end47:                                         ; preds = %if.then43
  %31 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2771
  %current_partition48 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %31, i32 0, i32 17, !dbg !2773
  %32 = load %struct.MXFPartition*, %struct.MXFPartition** %current_partition48, align 8, !dbg !2773
  %first_essence_klv = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %32, i32 0, i32 15, !dbg !2774
  %offset49 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %first_essence_klv, i32 0, i32 1, !dbg !2775
  %33 = load i64, i64* %offset49, align 8, !dbg !2775
  %tobool50 = icmp ne i64 %33, 0, !dbg !2771
  br i1 %tobool50, label %if.end54, label %if.then51, !dbg !2776

if.then51:                                        ; preds = %if.end47
  %34 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2777
  %current_partition52 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %34, i32 0, i32 17, !dbg !2778
  %35 = load %struct.MXFPartition*, %struct.MXFPartition** %current_partition52, align 8, !dbg !2778
  %first_essence_klv53 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %35, i32 0, i32 15, !dbg !2779
  %36 = bitcast %struct.KLVPacket* %first_essence_klv53 to i8*, !dbg !2780
  %37 = bitcast %struct.KLVPacket* %klv to i8*, !dbg !2780
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 40, i32 8, i1 false), !dbg !2780
  br label %if.end54, !dbg !2777

if.end54:                                         ; preds = %if.then51, %if.end47
  %38 = load i64, i64* %essence_offset, align 8, !dbg !2781
  %tobool55 = icmp ne i64 %38, 0, !dbg !2781
  br i1 %tobool55, label %if.end58, label %if.then56, !dbg !2783

if.then56:                                        ; preds = %if.end54
  %offset57 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 1, !dbg !2784
  %39 = load i64, i64* %offset57, align 8, !dbg !2784
  store i64 %39, i64* %essence_offset, align 8, !dbg !2785
  br label %if.end58, !dbg !2786

if.end58:                                         ; preds = %if.then56, %if.end54
  %40 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2787
  %call59 = call i32 @mxf_parse_handle_essence(%struct.MXFContext* %40), !dbg !2789
  %cmp60 = icmp sle i32 %call59, 0, !dbg !2790
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !2791

if.then62:                                        ; preds = %if.end58
  br label %while.end, !dbg !2792

if.end63:                                         ; preds = %if.end58
  br label %while.cond, !dbg !2793, !llvm.loop !2725

if.else64:                                        ; preds = %lor.lhs.false38
  %key65 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !2794
  %arraydecay66 = getelementptr inbounds [16 x i8], [16 x i8]* %key65, i32 0, i32 0, !dbg !2796
  %call67 = call i32 @mxf_is_partition_pack_key(i8* %arraydecay66), !dbg !2797
  %tobool68 = icmp ne i32 %call67, 0, !dbg !2797
  br i1 %tobool68, label %land.lhs.true, label %if.end81, !dbg !2798

land.lhs.true:                                    ; preds = %if.else64
  %41 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2799
  %current_partition69 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %41, i32 0, i32 17, !dbg !2801
  %42 = load %struct.MXFPartition*, %struct.MXFPartition** %current_partition69, align 8, !dbg !2801
  %tobool70 = icmp ne %struct.MXFPartition* %42, null, !dbg !2799
  br i1 %tobool70, label %if.then71, label %if.end81, !dbg !2802

if.then71:                                        ; preds = %land.lhs.true
  %43 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2803
  %call72 = call i32 @mxf_parse_handle_partition_or_eof(%struct.MXFContext* %43), !dbg !2806
  %cmp73 = icmp sle i32 %call72, 0, !dbg !2807
  br i1 %cmp73, label %if.then75, label %if.else76, !dbg !2808

if.then75:                                        ; preds = %if.then71
  br label %while.end, !dbg !2809

if.else76:                                        ; preds = %if.then71
  %44 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2810
  %parsing_backward = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %44, i32 0, i32 18, !dbg !2812
  %45 = load i32, i32* %parsing_backward, align 8, !dbg !2812
  %tobool77 = icmp ne i32 %45, 0, !dbg !2810
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !2813

if.then78:                                        ; preds = %if.else76
  br label %while.cond, !dbg !2814, !llvm.loop !2725

if.end79:                                         ; preds = %if.else76
  br label %if.end80

if.end80:                                         ; preds = %if.end79
  br label %if.end81, !dbg !2815

if.end81:                                         ; preds = %if.end80, %land.lhs.true, %if.else64
  br label %if.end82

if.end82:                                         ; preds = %if.end81
  store %struct.MXFMetadataReadTableEntry* getelementptr inbounds ([39 x %struct.MXFMetadataReadTableEntry], [39 x %struct.MXFMetadataReadTableEntry]* @mxf_metadata_read_table, i32 0, i32 0), %struct.MXFMetadataReadTableEntry** %metadata, align 8, !dbg !2816
  br label %for.cond, !dbg !2818

for.cond:                                         ; preds = %for.inc, %if.end82
  %46 = load %struct.MXFMetadataReadTableEntry*, %struct.MXFMetadataReadTableEntry** %metadata, align 8, !dbg !2819
  %read = getelementptr inbounds %struct.MXFMetadataReadTableEntry, %struct.MXFMetadataReadTableEntry* %46, i32 0, i32 1, !dbg !2822
  %47 = load i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)*, i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)** %read, align 8, !dbg !2822
  %tobool83 = icmp ne i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* %47, null, !dbg !2823
  br i1 %tobool83, label %for.body, label %for.end, !dbg !2823

for.body:                                         ; preds = %for.cond
  %key84 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !2824
  %arraydecay85 = getelementptr inbounds [16 x i8], [16 x i8]* %key84, i32 0, i32 0, !dbg !2827
  %48 = load %struct.MXFMetadataReadTableEntry*, %struct.MXFMetadataReadTableEntry** %metadata, align 8, !dbg !2828
  %key86 = getelementptr inbounds %struct.MXFMetadataReadTableEntry, %struct.MXFMetadataReadTableEntry* %48, i32 0, i32 0, !dbg !2829
  %arraydecay87 = getelementptr inbounds [16 x i8], [16 x i8]* %key86, i32 0, i32 0, !dbg !2828
  %call88 = call i32 @memcmp(i8* %arraydecay85, i8* %arraydecay87, i64 16) #9, !dbg !2830
  %tobool89 = icmp ne i32 %call88, 0, !dbg !2830
  br i1 %tobool89, label %if.end97, label %if.then90, !dbg !2831

if.then90:                                        ; preds = %for.body
  %49 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2832
  %50 = load %struct.MXFMetadataReadTableEntry*, %struct.MXFMetadataReadTableEntry** %metadata, align 8, !dbg !2835
  %read91 = getelementptr inbounds %struct.MXFMetadataReadTableEntry, %struct.MXFMetadataReadTableEntry* %50, i32 0, i32 1, !dbg !2836
  %51 = load i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)*, i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)** %read91, align 8, !dbg !2836
  %52 = load %struct.MXFMetadataReadTableEntry*, %struct.MXFMetadataReadTableEntry** %metadata, align 8, !dbg !2837
  %ctx_size = getelementptr inbounds %struct.MXFMetadataReadTableEntry, %struct.MXFMetadataReadTableEntry* %52, i32 0, i32 2, !dbg !2838
  %53 = load i32, i32* %ctx_size, align 8, !dbg !2838
  %54 = load %struct.MXFMetadataReadTableEntry*, %struct.MXFMetadataReadTableEntry** %metadata, align 8, !dbg !2839
  %type = getelementptr inbounds %struct.MXFMetadataReadTableEntry, %struct.MXFMetadataReadTableEntry* %54, i32 0, i32 3, !dbg !2840
  %55 = load i32, i32* %type, align 4, !dbg !2840
  %call92 = call i32 @mxf_parse_klv(%struct.MXFContext* %49, %struct.KLVPacket* byval align 8 %klv, i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* %51, i32 %53, i32 %55), !dbg !2841
  store i32 %call92, i32* %ret, align 4, !dbg !2842
  %cmp93 = icmp slt i32 %call92, 0, !dbg !2843
  br i1 %cmp93, label %if.then95, label %if.end96, !dbg !2844

if.then95:                                        ; preds = %if.then90
  br label %fail, !dbg !2845

if.end96:                                         ; preds = %if.then90
  br label %for.end, !dbg !2846

if.end97:                                         ; preds = %for.body
  br label %for.inc, !dbg !2847

for.inc:                                          ; preds = %if.end97
  %56 = load %struct.MXFMetadataReadTableEntry*, %struct.MXFMetadataReadTableEntry** %metadata, align 8, !dbg !2848
  %incdec.ptr = getelementptr inbounds %struct.MXFMetadataReadTableEntry, %struct.MXFMetadataReadTableEntry* %56, i32 1, !dbg !2848
  store %struct.MXFMetadataReadTableEntry* %incdec.ptr, %struct.MXFMetadataReadTableEntry** %metadata, align 8, !dbg !2848
  br label %for.cond, !dbg !2850, !llvm.loop !2851

for.end:                                          ; preds = %if.end96, %for.cond
  %57 = load %struct.MXFMetadataReadTableEntry*, %struct.MXFMetadataReadTableEntry** %metadata, align 8, !dbg !2853
  %read98 = getelementptr inbounds %struct.MXFMetadataReadTableEntry, %struct.MXFMetadataReadTableEntry* %57, i32 0, i32 1, !dbg !2855
  %58 = load i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)*, i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)** %read98, align 8, !dbg !2855
  %tobool99 = icmp ne i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* %58, null, !dbg !2853
  br i1 %tobool99, label %if.end151, label %if.then100, !dbg !2856

if.then100:                                       ; preds = %for.end
  %59 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2857
  %60 = bitcast %struct.AVFormatContext* %59 to i8*, !dbg !2857
  %key101 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !2859
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %key101, i64 0, i64 0, !dbg !2860
  %61 = load i8, i8* %arrayidx, align 8, !dbg !2860
  %conv102 = zext i8 %61 to i32, !dbg !2860
  %key103 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !2861
  %arrayidx104 = getelementptr inbounds [16 x i8], [16 x i8]* %key103, i64 0, i64 1, !dbg !2862
  %62 = load i8, i8* %arrayidx104, align 1, !dbg !2862
  %conv105 = zext i8 %62 to i32, !dbg !2862
  %key106 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !2863
  %arrayidx107 = getelementptr inbounds [16 x i8], [16 x i8]* %key106, i64 0, i64 2, !dbg !2864
  %63 = load i8, i8* %arrayidx107, align 2, !dbg !2864
  %conv108 = zext i8 %63 to i32, !dbg !2864
  %key109 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !2865
  %arrayidx110 = getelementptr inbounds [16 x i8], [16 x i8]* %key109, i64 0, i64 3, !dbg !2866
  %64 = load i8, i8* %arrayidx110, align 1, !dbg !2866
  %conv111 = zext i8 %64 to i32, !dbg !2866
  %key112 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !2867
  %arrayidx113 = getelementptr inbounds [16 x i8], [16 x i8]* %key112, i64 0, i64 4, !dbg !2868
  %65 = load i8, i8* %arrayidx113, align 4, !dbg !2868
  %conv114 = zext i8 %65 to i32, !dbg !2868
  %key115 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !2869
  %arrayidx116 = getelementptr inbounds [16 x i8], [16 x i8]* %key115, i64 0, i64 5, !dbg !2870
  %66 = load i8, i8* %arrayidx116, align 1, !dbg !2870
  %conv117 = zext i8 %66 to i32, !dbg !2870
  %key118 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !2871
  %arrayidx119 = getelementptr inbounds [16 x i8], [16 x i8]* %key118, i64 0, i64 6, !dbg !2872
  %67 = load i8, i8* %arrayidx119, align 2, !dbg !2872
  %conv120 = zext i8 %67 to i32, !dbg !2872
  %key121 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !2873
  %arrayidx122 = getelementptr inbounds [16 x i8], [16 x i8]* %key121, i64 0, i64 7, !dbg !2874
  %68 = load i8, i8* %arrayidx122, align 1, !dbg !2874
  %conv123 = zext i8 %68 to i32, !dbg !2874
  %key124 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !2875
  %arrayidx125 = getelementptr inbounds [16 x i8], [16 x i8]* %key124, i64 0, i64 8, !dbg !2876
  %69 = load i8, i8* %arrayidx125, align 8, !dbg !2876
  %conv126 = zext i8 %69 to i32, !dbg !2876
  %key127 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !2877
  %arrayidx128 = getelementptr inbounds [16 x i8], [16 x i8]* %key127, i64 0, i64 9, !dbg !2878
  %70 = load i8, i8* %arrayidx128, align 1, !dbg !2878
  %conv129 = zext i8 %70 to i32, !dbg !2878
  %key130 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !2879
  %arrayidx131 = getelementptr inbounds [16 x i8], [16 x i8]* %key130, i64 0, i64 10, !dbg !2880
  %71 = load i8, i8* %arrayidx131, align 2, !dbg !2880
  %conv132 = zext i8 %71 to i32, !dbg !2880
  %key133 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !2881
  %arrayidx134 = getelementptr inbounds [16 x i8], [16 x i8]* %key133, i64 0, i64 11, !dbg !2882
  %72 = load i8, i8* %arrayidx134, align 1, !dbg !2882
  %conv135 = zext i8 %72 to i32, !dbg !2882
  %key136 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !2883
  %arrayidx137 = getelementptr inbounds [16 x i8], [16 x i8]* %key136, i64 0, i64 12, !dbg !2884
  %73 = load i8, i8* %arrayidx137, align 4, !dbg !2884
  %conv138 = zext i8 %73 to i32, !dbg !2884
  %key139 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !2885
  %arrayidx140 = getelementptr inbounds [16 x i8], [16 x i8]* %key139, i64 0, i64 13, !dbg !2886
  %74 = load i8, i8* %arrayidx140, align 1, !dbg !2886
  %conv141 = zext i8 %74 to i32, !dbg !2886
  %key142 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !2887
  %arrayidx143 = getelementptr inbounds [16 x i8], [16 x i8]* %key142, i64 0, i64 14, !dbg !2888
  %75 = load i8, i8* %arrayidx143, align 2, !dbg !2888
  %conv144 = zext i8 %75 to i32, !dbg !2888
  %key145 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !2889
  %arrayidx146 = getelementptr inbounds [16 x i8], [16 x i8]* %key145, i64 0, i64 15, !dbg !2890
  %76 = load i8, i8* %arrayidx146, align 1, !dbg !2890
  %conv147 = zext i8 %76 to i32, !dbg !2890
  call void (i8*, i32, i8*, ...) @av_log(i8* %60, i32 40, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.7, i32 0, i32 0), i32 %conv102, i32 %conv105, i32 %conv108, i32 %conv111, i32 %conv114, i32 %conv117, i32 %conv120, i32 %conv123, i32 %conv126, i32 %conv129, i32 %conv132, i32 %conv135, i32 %conv138, i32 %conv141, i32 %conv144, i32 %conv147), !dbg !2891
  %77 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2892
  %pb148 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %77, i32 0, i32 4, !dbg !2893
  %78 = load %struct.AVIOContext*, %struct.AVIOContext** %pb148, align 8, !dbg !2893
  %length149 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 2, !dbg !2894
  %79 = load i64, i64* %length149, align 8, !dbg !2894
  %call150 = call i64 @avio_skip(%struct.AVIOContext* %78, i64 %79), !dbg !2895
  br label %if.end151, !dbg !2896

if.end151:                                        ; preds = %if.then100, %for.end
  br label %while.cond, !dbg !2897, !llvm.loop !2725

while.end:                                        ; preds = %if.then75, %if.then62, %if.then15, %while.cond
  %80 = load i64, i64* %essence_offset, align 8, !dbg !2899
  %tobool152 = icmp ne i64 %80, 0, !dbg !2899
  br i1 %tobool152, label %if.end154, label %if.then153, !dbg !2901

if.then153:                                       ; preds = %while.end
  %81 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2902
  %82 = bitcast %struct.AVFormatContext* %81 to i8*, !dbg !2902
  call void (i8*, i32, i8*, ...) @av_log(i8* %82, i32 16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i32 0, i32 0)), !dbg !2904
  store i32 -1094995529, i32* %ret, align 4, !dbg !2905
  br label %fail, !dbg !2906

if.end154:                                        ; preds = %while.end
  %83 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2907
  %pb155 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %83, i32 0, i32 4, !dbg !2908
  %84 = load %struct.AVIOContext*, %struct.AVIOContext** %pb155, align 8, !dbg !2908
  %85 = load i64, i64* %essence_offset, align 8, !dbg !2909
  %call156 = call i64 @avio_seek(%struct.AVIOContext* %84, i64 %85, i32 0), !dbg !2910
  %86 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2911
  %call157 = call i32 @mxf_parse_structural_metadata(%struct.MXFContext* %86), !dbg !2913
  store i32 %call157, i32* %ret, align 4, !dbg !2914
  %cmp158 = icmp slt i32 %call157, 0, !dbg !2915
  br i1 %cmp158, label %if.then160, label %if.end161, !dbg !2916

if.then160:                                       ; preds = %if.end154
  br label %fail, !dbg !2917

if.end161:                                        ; preds = %if.end154
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2918, metadata !2511), !dbg !2920
  store i32 0, i32* %i, align 4, !dbg !2920
  br label %for.cond162, !dbg !2921

for.cond162:                                      ; preds = %for.inc168, %if.end161
  %87 = load i32, i32* %i, align 4, !dbg !2922
  %88 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2925
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %88, i32 0, i32 6, !dbg !2926
  %89 = load i32, i32* %nb_streams, align 4, !dbg !2926
  %cmp163 = icmp ult i32 %87, %89, !dbg !2927
  br i1 %cmp163, label %for.body165, label %for.end169, !dbg !2928

for.body165:                                      ; preds = %for.cond162
  %90 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2929
  %91 = load i32, i32* %i, align 4, !dbg !2930
  %idxprom = sext i32 %91 to i64, !dbg !2931
  %92 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2931
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %92, i32 0, i32 7, !dbg !2932
  %93 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !2932
  %arrayidx166 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %93, i64 %idxprom, !dbg !2931
  %94 = load %struct.AVStream*, %struct.AVStream** %arrayidx166, align 8, !dbg !2931
  %call167 = call i32 @mxf_handle_missing_index_segment(%struct.MXFContext* %90, %struct.AVStream* %94), !dbg !2933
  br label %for.inc168, !dbg !2933

for.inc168:                                       ; preds = %for.body165
  %95 = load i32, i32* %i, align 4, !dbg !2934
  %inc = add nsw i32 %95, 1, !dbg !2934
  store i32 %inc, i32* %i, align 4, !dbg !2934
  br label %for.cond162, !dbg !2936, !llvm.loop !2937

for.end169:                                       ; preds = %for.cond162
  %96 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2939
  %call170 = call i32 @mxf_compute_index_tables(%struct.MXFContext* %96), !dbg !2941
  store i32 %call170, i32* %ret, align 4, !dbg !2942
  %cmp171 = icmp slt i32 %call170, 0, !dbg !2943
  br i1 %cmp171, label %if.then173, label %if.end174, !dbg !2944

if.then173:                                       ; preds = %for.end169
  br label %fail, !dbg !2945

if.end174:                                        ; preds = %for.end169
  %97 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2946
  %nb_index_tables = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %97, i32 0, i32 21, !dbg !2948
  %98 = load i32, i32* %nb_index_tables, align 4, !dbg !2948
  %cmp175 = icmp sgt i32 %98, 1, !dbg !2949
  br i1 %cmp175, label %if.then177, label %if.else181, !dbg !2950

if.then177:                                       ; preds = %if.end174
  %99 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2951
  %fc178 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %99, i32 0, i32 10, !dbg !2953
  %100 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc178, align 8, !dbg !2953
  %101 = bitcast %struct.AVFormatContext* %100 to i8*, !dbg !2951
  %102 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2954
  %nb_index_tables179 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %102, i32 0, i32 21, !dbg !2955
  %103 = load i32, i32* %nb_index_tables179, align 4, !dbg !2955
  %104 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2956
  %index_tables = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %104, i32 0, i32 22, !dbg !2957
  %105 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_tables, align 8, !dbg !2957
  %arrayidx180 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %105, i64 0, !dbg !2956
  %index_sid = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %arrayidx180, i32 0, i32 0, !dbg !2958
  %106 = load i32, i32* %index_sid, align 8, !dbg !2958
  call void (i8*, i32, i8*, ...) @av_log(i8* %101, i32 32, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.9, i32 0, i32 0), i32 %103, i32 %106), !dbg !2959
  br label %if.end193, !dbg !2960

if.else181:                                       ; preds = %if.end174
  %107 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2961
  %nb_index_tables182 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %107, i32 0, i32 21, !dbg !2964
  %108 = load i32, i32* %nb_index_tables182, align 4, !dbg !2964
  %cmp183 = icmp eq i32 %108, 0, !dbg !2965
  br i1 %cmp183, label %land.lhs.true185, label %if.end192, !dbg !2966

land.lhs.true185:                                 ; preds = %if.else181
  %109 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2967
  %op = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %109, i32 0, i32 3, !dbg !2969
  %110 = load i32, i32* %op, align 4, !dbg !2969
  %cmp186 = icmp eq i32 %110, 10, !dbg !2970
  br i1 %cmp186, label %land.lhs.true188, label %if.end192, !dbg !2971

land.lhs.true188:                                 ; preds = %land.lhs.true185
  %111 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2972
  %error_recognition = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %111, i32 0, i32 32, !dbg !2974
  %112 = load i32, i32* %error_recognition, align 4, !dbg !2974
  %and = and i32 %112, 8, !dbg !2975
  %tobool189 = icmp ne i32 %and, 0, !dbg !2975
  br i1 %tobool189, label %if.then190, label %if.end192, !dbg !2976

if.then190:                                       ; preds = %land.lhs.true188
  %113 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2977
  %fc191 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %113, i32 0, i32 10, !dbg !2979
  %114 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc191, align 8, !dbg !2979
  %115 = bitcast %struct.AVFormatContext* %114 to i8*, !dbg !2977
  call void (i8*, i32, i8*, ...) @av_log(i8* %115, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10, i32 0, i32 0)), !dbg !2980
  store i32 -1094995529, i32* %ret, align 4, !dbg !2981
  br label %fail, !dbg !2982

if.end192:                                        ; preds = %land.lhs.true188, %land.lhs.true185, %if.else181
  br label %if.end193

if.end193:                                        ; preds = %if.end192, %if.then177
  %116 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2983
  call void @mxf_compute_essence_containers(%struct.AVFormatContext* %116), !dbg !2984
  call void @llvm.dbg.declare(metadata i32* %i194, metadata !2985, metadata !2511), !dbg !2987
  store i32 0, i32* %i194, align 4, !dbg !2987
  br label %for.cond195, !dbg !2988

for.cond195:                                      ; preds = %for.inc203, %if.end193
  %117 = load i32, i32* %i194, align 4, !dbg !2989
  %118 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2992
  %nb_streams196 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %118, i32 0, i32 6, !dbg !2993
  %119 = load i32, i32* %nb_streams196, align 4, !dbg !2993
  %cmp197 = icmp ult i32 %117, %119, !dbg !2994
  br i1 %cmp197, label %for.body199, label %for.end205, !dbg !2995

for.body199:                                      ; preds = %for.cond195
  %120 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !2996
  %121 = load i32, i32* %i194, align 4, !dbg !2997
  %idxprom200 = sext i32 %121 to i64, !dbg !2998
  %122 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !2998
  %streams201 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %122, i32 0, i32 7, !dbg !2999
  %123 = load %struct.AVStream**, %struct.AVStream*** %streams201, align 8, !dbg !2999
  %arrayidx202 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %123, i64 %idxprom200, !dbg !2998
  %124 = load %struct.AVStream*, %struct.AVStream** %arrayidx202, align 8, !dbg !2998
  call void @mxf_compute_edit_units_per_packet(%struct.MXFContext* %120, %struct.AVStream* %124), !dbg !3000
  br label %for.inc203, !dbg !3000

for.inc203:                                       ; preds = %for.body199
  %125 = load i32, i32* %i194, align 4, !dbg !3001
  %inc204 = add nsw i32 %125, 1, !dbg !3001
  store i32 %inc204, i32* %i194, align 4, !dbg !3001
  br label %for.cond195, !dbg !3003, !llvm.loop !3004

for.end205:                                       ; preds = %for.cond195
  store i32 0, i32* %retval, align 4, !dbg !3006
  br label %return, !dbg !3006

fail:                                             ; preds = %if.then190, %if.then173, %if.then160, %if.then153, %if.then95
  %126 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3007
  %call206 = call i32 @mxf_read_close(%struct.AVFormatContext* %126), !dbg !3008
  %127 = load i32, i32* %ret, align 4, !dbg !3009
  store i32 %127, i32* %retval, align 4, !dbg !3010
  br label %return, !dbg !3010

return:                                           ; preds = %fail, %for.end205, %if.then45, %if.then
  %128 = load i32, i32* %retval, align 4, !dbg !3011
  ret i32 %128, !dbg !3011
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_read_packet(%struct.AVFormatContext* %s, %struct.AVPacket* %pkt) #0 !dbg !3012 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !3015, metadata !2511), !dbg !3020
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2585, metadata !2511), !dbg !3027
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %klv = alloca %struct.KLVPacket, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %ret = alloca i32, align 4
  %max_data_size = alloca i64, align 8
  %pos = alloca i64, align 8
  %.compoundliteral = alloca %struct.KLVPacket, align 8
  %body_sid = alloca i32, align 4
  %index = alloca i32, align 4
  %next_ofs = alloca i64, align 8
  %st = alloca %struct.AVStream*, align 8
  %track = alloca %struct.MXFTrack*, align 8
  %size = alloca i64, align 8
  %.compoundliteral116 = alloca %struct.KLVPacket, align 8
  %.compoundliteral141 = alloca %struct.KLVPacket, align 8
  %.compoundliteral157 = alloca %struct.KLVPacket, align 8
  %.compoundliteral173 = alloca %struct.KLVPacket, align 8
  %.compoundliteral187 = alloca %struct.KLVPacket, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !3029, metadata !2511), !dbg !3030
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !3031, metadata !2511), !dbg !3032
  call void @llvm.dbg.declare(metadata %struct.KLVPacket* %klv, metadata !3033, metadata !2511), !dbg !3034
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !3035, metadata !2511), !dbg !3036
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3037
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !3038
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3038
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !3037
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !3036
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3039, metadata !2511), !dbg !3040
  br label %while.body, !dbg !3041

while.body:                                       ; preds = %entry, %if.end193
  call void @llvm.dbg.declare(metadata i64* %max_data_size, metadata !3042, metadata !2511), !dbg !3043
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !3044, metadata !2511), !dbg !3045
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3046
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 4, !dbg !3047
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3047
  store %struct.AVIOContext* %4, %struct.AVIOContext** %s.addr.i, align 8, !dbg !3048
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !3049
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %5, i64 0, i32 1) #8, !dbg !3050
  store i64 %call.i, i64* %pos, align 8, !dbg !3045
  %6 = load i64, i64* %pos, align 8, !dbg !3051
  %7 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3053
  %current_klv_data = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %7, i32 0, i32 15, !dbg !3054
  %next_klv = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %current_klv_data, i32 0, i32 3, !dbg !3055
  %8 = load i64, i64* %next_klv, align 8, !dbg !3055
  %9 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3056
  %current_klv_data1 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %9, i32 0, i32 15, !dbg !3057
  %length = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %current_klv_data1, i32 0, i32 2, !dbg !3058
  %10 = load i64, i64* %length, align 8, !dbg !3058
  %sub = sub i64 %8, %10, !dbg !3059
  %cmp = icmp ult i64 %6, %sub, !dbg !3060
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3061

lor.lhs.false:                                    ; preds = %while.body
  %11 = load i64, i64* %pos, align 8, !dbg !3062
  %12 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3064
  %current_klv_data2 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %12, i32 0, i32 15, !dbg !3065
  %next_klv3 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %current_klv_data2, i32 0, i32 3, !dbg !3066
  %13 = load i64, i64* %next_klv3, align 8, !dbg !3066
  %cmp4 = icmp sge i64 %11, %13, !dbg !3067
  br i1 %cmp4, label %if.then, label %if.else, !dbg !3068

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %14 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3069
  %current_klv_data5 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %14, i32 0, i32 15, !dbg !3071
  %15 = bitcast %struct.KLVPacket* %.compoundliteral to i8*, !dbg !3072
  call void @llvm.memset.p0i8.i64(i8* %15, i8 0, i64 40, i32 8, i1 false), !dbg !3072
  %key = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %.compoundliteral, i32 0, i32 0, !dbg !3073
  %arrayinit.begin = getelementptr inbounds [16 x i8], [16 x i8]* %key, i64 0, i64 0, !dbg !3074
  store i8 0, i8* %arrayinit.begin, align 1, !dbg !3074
  %16 = bitcast %struct.KLVPacket* %current_klv_data5 to i8*, !dbg !3072
  %17 = bitcast %struct.KLVPacket* %.compoundliteral to i8*, !dbg !3072
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 40, i32 8, i1 false), !dbg !3075
  %18 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3077
  %pb8 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %18, i32 0, i32 4, !dbg !3078
  %19 = load %struct.AVIOContext*, %struct.AVIOContext** %pb8, align 8, !dbg !3078
  %call9 = call i32 @klv_read_packet(%struct.KLVPacket* %klv, %struct.AVIOContext* %19), !dbg !3079
  store i32 %call9, i32* %ret, align 4, !dbg !3080
  %20 = load i32, i32* %ret, align 4, !dbg !3081
  %cmp10 = icmp slt i32 %20, 0, !dbg !3083
  br i1 %cmp10, label %if.then11, label %if.end, !dbg !3084

if.then11:                                        ; preds = %if.then
  br label %while.end, !dbg !3085

if.end:                                           ; preds = %if.then
  %length12 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 2, !dbg !3086
  %21 = load i64, i64* %length12, align 8, !dbg !3086
  store i64 %21, i64* %max_data_size, align 8, !dbg !3087
  %next_klv13 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 3, !dbg !3088
  %22 = load i64, i64* %next_klv13, align 8, !dbg !3088
  %length14 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 2, !dbg !3089
  %23 = load i64, i64* %length14, align 8, !dbg !3089
  %sub15 = sub i64 %22, %23, !dbg !3090
  store i64 %sub15, i64* %pos, align 8, !dbg !3091
  br label %do.body, !dbg !3092, !llvm.loop !3093

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !3094

do.end:                                           ; preds = %do.body
  %24 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3097
  %25 = bitcast %struct.AVFormatContext* %24 to i8*, !dbg !3097
  %length16 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 2, !dbg !3098
  %26 = load i64, i64* %length16, align 8, !dbg !3098
  %offset = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 1, !dbg !3099
  %27 = load i64, i64* %offset, align 8, !dbg !3099
  call void (i8*, i32, i8*, ...) @av_log(i8* %25, i32 56, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i32 0, i32 0), i64 %26, i64 %27), !dbg !3100
  %key17 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !3101
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %key17, i32 0, i32 0, !dbg !3103
  %call18 = call i32 @memcmp(i8* %arraydecay, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @mxf_encrypted_triplet_key, i32 0, i32 0), i64 16) #9, !dbg !3104
  %tobool = icmp ne i32 %call18, 0, !dbg !3104
  br i1 %tobool, label %if.end24, label %if.then19, !dbg !3105

if.then19:                                        ; preds = %do.end
  %28 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3106
  %29 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3108
  %call20 = call i32 @mxf_decrypt_triplet(%struct.AVFormatContext* %28, %struct.AVPacket* %29, %struct.KLVPacket* %klv), !dbg !3109
  store i32 %call20, i32* %ret, align 4, !dbg !3110
  %30 = load i32, i32* %ret, align 4, !dbg !3111
  %cmp21 = icmp slt i32 %30, 0, !dbg !3113
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !3114

if.then22:                                        ; preds = %if.then19
  %31 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3115
  %32 = bitcast %struct.AVFormatContext* %31 to i8*, !dbg !3115
  call void (i8*, i32, i8*, ...) @av_log(i8* %32, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.121, i32 0, i32 0)), !dbg !3117
  %33 = load i32, i32* %ret, align 4, !dbg !3118
  store i32 %33, i32* %retval, align 4, !dbg !3119
  br label %return, !dbg !3119

if.end23:                                         ; preds = %if.then19
  store i32 0, i32* %retval, align 4, !dbg !3120
  br label %return, !dbg !3120

if.end24:                                         ; preds = %do.end
  br label %if.end28, !dbg !3121

if.else:                                          ; preds = %lor.lhs.false
  %34 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3122
  %current_klv_data25 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %34, i32 0, i32 15, !dbg !3124
  %35 = bitcast %struct.KLVPacket* %klv to i8*, !dbg !3124
  %36 = bitcast %struct.KLVPacket* %current_klv_data25 to i8*, !dbg !3124
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 40, i32 8, i1 false), !dbg !3124
  %next_klv26 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 3, !dbg !3125
  %37 = load i64, i64* %next_klv26, align 8, !dbg !3125
  %38 = load i64, i64* %pos, align 8, !dbg !3126
  %sub27 = sub nsw i64 %37, %38, !dbg !3127
  store i64 %sub27, i64* %max_data_size, align 8, !dbg !3128
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.end24
  %key29 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !3129
  %arraydecay30 = getelementptr inbounds [16 x i8], [16 x i8]* %key29, i32 0, i32 0, !dbg !3130
  %call31 = call i32 @memcmp(i8* %arraydecay30, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @mxf_essence_element_key, i32 0, i32 0), i64 12) #9, !dbg !3131
  %tobool32 = icmp ne i32 %call31, 0, !dbg !3131
  br i1 %tobool32, label %lor.lhs.false33, label %if.then43, !dbg !3132

lor.lhs.false33:                                  ; preds = %if.end28
  %key34 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !3133
  %arraydecay35 = getelementptr inbounds [16 x i8], [16 x i8]* %key34, i32 0, i32 0, !dbg !3134
  %call36 = call i32 @memcmp(i8* %arraydecay35, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @mxf_canopus_essence_element_key, i32 0, i32 0), i64 12) #9, !dbg !3135
  %tobool37 = icmp ne i32 %call36, 0, !dbg !3135
  br i1 %tobool37, label %lor.lhs.false38, label %if.then43, !dbg !3136

lor.lhs.false38:                                  ; preds = %lor.lhs.false33
  %key39 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !3137
  %arraydecay40 = getelementptr inbounds [16 x i8], [16 x i8]* %key39, i32 0, i32 0, !dbg !3138
  %call41 = call i32 @memcmp(i8* %arraydecay40, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @mxf_avid_essence_element_key, i32 0, i32 0), i64 12) #9, !dbg !3139
  %tobool42 = icmp ne i32 %call41, 0, !dbg !3139
  br i1 %tobool42, label %if.else183, label %if.then43, !dbg !3140

if.then43:                                        ; preds = %lor.lhs.false38, %lor.lhs.false33, %if.end28
  call void @llvm.dbg.declare(metadata i32* %body_sid, metadata !3142, metadata !2511), !dbg !3143
  %39 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3144
  %offset44 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 1, !dbg !3145
  %40 = load i64, i64* %offset44, align 8, !dbg !3145
  %call45 = call i32 @find_body_sid_by_offset(%struct.MXFContext* %39, i64 %40), !dbg !3146
  store i32 %call45, i32* %body_sid, align 4, !dbg !3143
  call void @llvm.dbg.declare(metadata i32* %index, metadata !3147, metadata !2511), !dbg !3148
  %41 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3149
  %42 = load i32, i32* %body_sid, align 4, !dbg !3150
  %call46 = call i32 @mxf_get_stream_index(%struct.AVFormatContext* %41, %struct.KLVPacket* %klv, i32 %42), !dbg !3151
  store i32 %call46, i32* %index, align 4, !dbg !3148
  call void @llvm.dbg.declare(metadata i64* %next_ofs, metadata !3152, metadata !2511), !dbg !3153
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !3154, metadata !2511), !dbg !3155
  call void @llvm.dbg.declare(metadata %struct.MXFTrack** %track, metadata !3156, metadata !2511), !dbg !3157
  %43 = load i32, i32* %index, align 4, !dbg !3158
  %cmp47 = icmp slt i32 %43, 0, !dbg !3159
  br i1 %cmp47, label %if.then48, label %if.end52, !dbg !3160

if.then48:                                        ; preds = %if.then43
  %44 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3161
  %45 = bitcast %struct.AVFormatContext* %44 to i8*, !dbg !3161
  %key49 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !3162
  %arraydecay50 = getelementptr inbounds [16 x i8], [16 x i8]* %key49, i32 0, i32 0, !dbg !3163
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay50, i64 12, !dbg !3164
  %46 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !3165
  %l = bitcast %union.unaligned_32* %46 to i32*, !dbg !3165
  %47 = load i32, i32* %l, align 1, !dbg !3165
  store i32 %47, i32* %x.addr.i, align 4, !dbg !3166
  %48 = load i32, i32* %x.addr.i, align 4, !dbg !3167
  %shl.i = shl i32 %48, 8, !dbg !3168
  %and.i = and i32 %shl.i, 65280, !dbg !3169
  %49 = load i32, i32* %x.addr.i, align 4, !dbg !3170
  %shr.i = lshr i32 %49, 8, !dbg !3171
  %and1.i = and i32 %shr.i, 255, !dbg !3172
  %or.i = or i32 %and.i, %and1.i, !dbg !3173
  %shl2.i = shl i32 %or.i, 16, !dbg !3174
  %50 = load i32, i32* %x.addr.i, align 4, !dbg !3175
  %shr3.i = lshr i32 %50, 16, !dbg !3176
  %shl4.i = shl i32 %shr3.i, 8, !dbg !3177
  %and5.i = and i32 %shl4.i, 65280, !dbg !3178
  %51 = load i32, i32* %x.addr.i, align 4, !dbg !3179
  %shr6.i = lshr i32 %51, 16, !dbg !3180
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !3181
  %and8.i = and i32 %shr7.i, 255, !dbg !3182
  %or9.i = or i32 %and5.i, %and8.i, !dbg !3183
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !3184
  call void (i8*, i32, i8*, ...) @av_log(i8* %45, i32 16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.122, i32 0, i32 0), i32 %or10.i), !dbg !3185
  br label %skip, !dbg !3186

if.end52:                                         ; preds = %if.then43
  %52 = load i32, i32* %index, align 4, !dbg !3187
  %idxprom = sext i32 %52 to i64, !dbg !3188
  %53 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3188
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %53, i32 0, i32 7, !dbg !3189
  %54 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !3189
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %54, i64 %idxprom, !dbg !3188
  %55 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !3188
  store %struct.AVStream* %55, %struct.AVStream** %st, align 8, !dbg !3190
  %56 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3191
  %priv_data53 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %56, i32 0, i32 3, !dbg !3192
  %57 = load i8*, i8** %priv_data53, align 8, !dbg !3192
  %58 = bitcast i8* %57 to %struct.MXFTrack*, !dbg !3191
  store %struct.MXFTrack* %58, %struct.MXFTrack** %track, align 8, !dbg !3193
  %59 = load i32, i32* %index, align 4, !dbg !3194
  %idxprom54 = sext i32 %59 to i64, !dbg !3196
  %60 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3196
  %streams55 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %60, i32 0, i32 7, !dbg !3197
  %61 = load %struct.AVStream**, %struct.AVStream*** %streams55, align 8, !dbg !3197
  %arrayidx56 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %61, i64 %idxprom54, !dbg !3196
  %62 = load %struct.AVStream*, %struct.AVStream** %arrayidx56, align 8, !dbg !3196
  %discard = getelementptr inbounds %struct.AVStream, %struct.AVStream* %62, i32 0, i32 9, !dbg !3198
  %63 = load i32, i32* %discard, align 4, !dbg !3198
  %cmp57 = icmp eq i32 %63, 48, !dbg !3199
  br i1 %cmp57, label %if.then58, label %if.end59, !dbg !3200

if.then58:                                        ; preds = %if.end52
  br label %skip, !dbg !3201

if.end59:                                         ; preds = %if.end52
  %64 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3202
  %65 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3203
  %66 = load i64, i64* %pos, align 8, !dbg !3204
  %call60 = call i64 @mxf_set_current_edit_unit(%struct.MXFContext* %64, %struct.AVStream* %65, i64 %66, i32 1), !dbg !3205
  store i64 %call60, i64* %next_ofs, align 8, !dbg !3206
  %67 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !3207
  %wrapping = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %67, i32 0, i32 13, !dbg !3209
  %68 = load i32, i32* %wrapping, align 8, !dbg !3209
  %cmp61 = icmp ne i32 %68, 1, !dbg !3210
  br i1 %cmp61, label %if.then62, label %if.end88, !dbg !3211

if.then62:                                        ; preds = %if.end59
  call void @llvm.dbg.declare(metadata i64* %size, metadata !3212, metadata !2511), !dbg !3214
  %69 = load i64, i64* %next_ofs, align 8, !dbg !3215
  %cmp63 = icmp sle i64 %69, 0, !dbg !3217
  br i1 %cmp63, label %if.then64, label %if.else73, !dbg !3218

if.then64:                                        ; preds = %if.then62
  %next_klv65 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 3, !dbg !3219
  %70 = load i64, i64* %next_klv65, align 8, !dbg !3219
  %length66 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 2, !dbg !3222
  %71 = load i64, i64* %length66, align 8, !dbg !3222
  %sub67 = sub i64 %70, %71, !dbg !3223
  %72 = load i64, i64* %pos, align 8, !dbg !3224
  %cmp68 = icmp eq i64 %sub67, %72, !dbg !3225
  br i1 %cmp68, label %land.lhs.true, label %if.end71, !dbg !3226

land.lhs.true:                                    ; preds = %if.then64
  %73 = load i64, i64* %max_data_size, align 8, !dbg !3227
  %cmp69 = icmp sgt i64 %73, 33554432, !dbg !3229
  br i1 %cmp69, label %if.then70, label %if.end71, !dbg !3230

if.then70:                                        ; preds = %land.lhs.true
  %74 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3231
  %need_parsing = getelementptr inbounds %struct.AVStream, %struct.AVStream* %74, i32 0, i32 28, !dbg !3233
  store i32 1, i32* %need_parsing, align 4, !dbg !3234
  %75 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3235
  %76 = bitcast %struct.AVFormatContext* %75 to i8*, !dbg !3235
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %76, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.123, i32 0, i32 0)), !dbg !3236
  br label %if.end71, !dbg !3237

if.end71:                                         ; preds = %if.then70, %land.lhs.true, %if.then64
  %77 = load i64, i64* %max_data_size, align 8, !dbg !3238
  %cmp72 = icmp sgt i64 %77, 33554432, !dbg !3239
  br i1 %cmp72, label %cond.true, label %cond.false, !dbg !3240

cond.true:                                        ; preds = %if.end71
  br label %cond.end, !dbg !3241

cond.false:                                       ; preds = %if.end71
  %78 = load i64, i64* %max_data_size, align 8, !dbg !3243
  br label %cond.end, !dbg !3245

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 33554432, %cond.true ], [ %78, %cond.false ], !dbg !3246
  store i64 %cond, i64* %size, align 8, !dbg !3248
  br label %if.end81, !dbg !3249

if.else73:                                        ; preds = %if.then62
  %79 = load i64, i64* %next_ofs, align 8, !dbg !3250
  %80 = load i64, i64* %pos, align 8, !dbg !3253
  %sub74 = sub nsw i64 %79, %80, !dbg !3254
  store i64 %sub74, i64* %size, align 8, !dbg !3255
  %cmp75 = icmp sle i64 %sub74, 0, !dbg !3256
  br i1 %cmp75, label %if.then76, label %if.end77, !dbg !3257

if.then76:                                        ; preds = %if.else73
  %81 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3258
  %82 = bitcast %struct.AVFormatContext* %81 to i8*, !dbg !3258
  %83 = load i64, i64* %size, align 8, !dbg !3260
  call void (i8*, i32, i8*, ...) @av_log(i8* %82, i32 16, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.124, i32 0, i32 0), i64 %83), !dbg !3261
  store i32 -1094995529, i32* %ret, align 4, !dbg !3262
  br label %skip, !dbg !3263

if.end77:                                         ; preds = %if.else73
  %84 = load i64, i64* %size, align 8, !dbg !3264
  %85 = load i64, i64* %max_data_size, align 8, !dbg !3266
  %cmp78 = icmp sgt i64 %84, %85, !dbg !3267
  br i1 %cmp78, label %if.then79, label %if.end80, !dbg !3268

if.then79:                                        ; preds = %if.end77
  %86 = load i64, i64* %max_data_size, align 8, !dbg !3269
  store i64 %86, i64* %size, align 8, !dbg !3270
  br label %if.end80, !dbg !3271

if.end80:                                         ; preds = %if.then79, %if.end77
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %cond.end
  %87 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3272
  %current_klv_data82 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %87, i32 0, i32 15, !dbg !3273
  %88 = bitcast %struct.KLVPacket* %current_klv_data82 to i8*, !dbg !3274
  %89 = bitcast %struct.KLVPacket* %klv to i8*, !dbg !3274
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %88, i8* %89, i64 40, i32 8, i1 false), !dbg !3274
  %90 = load i64, i64* %pos, align 8, !dbg !3275
  %offset83 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 1, !dbg !3276
  store i64 %90, i64* %offset83, align 8, !dbg !3277
  %91 = load i64, i64* %size, align 8, !dbg !3278
  %length84 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 2, !dbg !3279
  store i64 %91, i64* %length84, align 8, !dbg !3280
  %offset85 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 1, !dbg !3281
  %92 = load i64, i64* %offset85, align 8, !dbg !3281
  %length86 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 2, !dbg !3282
  %93 = load i64, i64* %length86, align 8, !dbg !3282
  %add = add i64 %92, %93, !dbg !3283
  %next_klv87 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 3, !dbg !3284
  store i64 %add, i64* %next_klv87, align 8, !dbg !3285
  br label %if.end88, !dbg !3286

if.end88:                                         ; preds = %if.end81, %if.end59
  %key89 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !3287
  %arrayidx90 = getelementptr inbounds [16 x i8], [16 x i8]* %key89, i64 0, i64 12, !dbg !3289
  %94 = load i8, i8* %arrayidx90, align 4, !dbg !3289
  %conv = zext i8 %94 to i32, !dbg !3289
  %cmp91 = icmp eq i32 %conv, 6, !dbg !3290
  br i1 %cmp91, label %land.lhs.true93, label %if.else123, !dbg !3291

land.lhs.true93:                                  ; preds = %if.end88
  %key94 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !3292
  %arrayidx95 = getelementptr inbounds [16 x i8], [16 x i8]* %key94, i64 0, i64 13, !dbg !3294
  %95 = load i8, i8* %arrayidx95, align 1, !dbg !3294
  %conv96 = zext i8 %95 to i32, !dbg !3294
  %cmp97 = icmp eq i32 %conv96, 1, !dbg !3295
  br i1 %cmp97, label %land.lhs.true99, label %if.else123, !dbg !3296

land.lhs.true99:                                  ; preds = %land.lhs.true93
  %key100 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !3297
  %arrayidx101 = getelementptr inbounds [16 x i8], [16 x i8]* %key100, i64 0, i64 14, !dbg !3299
  %96 = load i8, i8* %arrayidx101, align 2, !dbg !3299
  %conv102 = zext i8 %96 to i32, !dbg !3299
  %cmp103 = icmp eq i32 %conv102, 16, !dbg !3300
  br i1 %cmp103, label %if.then105, label %if.else123, !dbg !3301

if.then105:                                       ; preds = %land.lhs.true99
  %97 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3302
  %pb106 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %97, i32 0, i32 4, !dbg !3304
  %98 = load %struct.AVIOContext*, %struct.AVIOContext** %pb106, align 8, !dbg !3304
  %99 = load i32, i32* %index, align 4, !dbg !3305
  %idxprom107 = sext i32 %99 to i64, !dbg !3306
  %100 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3306
  %streams108 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %100, i32 0, i32 7, !dbg !3307
  %101 = load %struct.AVStream**, %struct.AVStream*** %streams108, align 8, !dbg !3307
  %arrayidx109 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %101, i64 %idxprom107, !dbg !3306
  %102 = load %struct.AVStream*, %struct.AVStream** %arrayidx109, align 8, !dbg !3306
  %103 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3308
  %length110 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 2, !dbg !3309
  %104 = load i64, i64* %length110, align 8, !dbg !3309
  %call111 = call i32 @mxf_get_d10_aes3_packet(%struct.AVIOContext* %98, %struct.AVStream* %102, %struct.AVPacket* %103, i64 %104), !dbg !3310
  store i32 %call111, i32* %ret, align 4, !dbg !3311
  %105 = load i32, i32* %ret, align 4, !dbg !3312
  %cmp112 = icmp slt i32 %105, 0, !dbg !3314
  br i1 %cmp112, label %if.then114, label %if.end122, !dbg !3315

if.then114:                                       ; preds = %if.then105
  %106 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3316
  %107 = bitcast %struct.AVFormatContext* %106 to i8*, !dbg !3316
  call void (i8*, i32, i8*, ...) @av_log(i8* %107, i32 16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.125, i32 0, i32 0)), !dbg !3318
  %108 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3319
  %current_klv_data115 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %108, i32 0, i32 15, !dbg !3320
  %109 = bitcast %struct.KLVPacket* %.compoundliteral116 to i8*, !dbg !3321
  call void @llvm.memset.p0i8.i64(i8* %109, i8 0, i64 40, i32 8, i1 false), !dbg !3321
  %key117 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %.compoundliteral116, i32 0, i32 0, !dbg !3322
  %arrayinit.begin118 = getelementptr inbounds [16 x i8], [16 x i8]* %key117, i64 0, i64 0, !dbg !3323
  store i8 0, i8* %arrayinit.begin118, align 1, !dbg !3323
  %110 = bitcast %struct.KLVPacket* %current_klv_data115 to i8*, !dbg !3321
  %111 = bitcast %struct.KLVPacket* %.compoundliteral116 to i8*, !dbg !3321
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %110, i8* %111, i64 40, i32 8, i1 false), !dbg !3324
  %112 = load i32, i32* %ret, align 4, !dbg !3326
  store i32 %112, i32* %retval, align 4, !dbg !3327
  br label %return, !dbg !3327

if.end122:                                        ; preds = %if.then105
  br label %if.end165, !dbg !3328

if.else123:                                       ; preds = %land.lhs.true99, %land.lhs.true93, %if.end88
  %113 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3329
  %eia608_extract = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %113, i32 0, i32 23, !dbg !3332
  %114 = load i32, i32* %eia608_extract, align 8, !dbg !3332
  %tobool124 = icmp ne i32 %114, 0, !dbg !3329
  br i1 %tobool124, label %land.lhs.true125, label %if.else148, !dbg !3333

land.lhs.true125:                                 ; preds = %if.else123
  %115 = load i32, i32* %index, align 4, !dbg !3334
  %idxprom126 = sext i32 %115 to i64, !dbg !3335
  %116 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3335
  %streams127 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %116, i32 0, i32 7, !dbg !3336
  %117 = load %struct.AVStream**, %struct.AVStream*** %streams127, align 8, !dbg !3336
  %arrayidx128 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %117, i64 %idxprom126, !dbg !3335
  %118 = load %struct.AVStream*, %struct.AVStream** %arrayidx128, align 8, !dbg !3335
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %118, i32 0, i32 19, !dbg !3337
  %119 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !3337
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %119, i32 0, i32 1, !dbg !3338
  %120 = load i32, i32* %codec_id, align 4, !dbg !3338
  %cmp129 = icmp eq i32 %120, 96257, !dbg !3339
  br i1 %cmp129, label %if.then131, label %if.else148, !dbg !3340

if.then131:                                       ; preds = %land.lhs.true125
  %121 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3341
  %122 = load i32, i32* %index, align 4, !dbg !3343
  %idxprom132 = sext i32 %122 to i64, !dbg !3344
  %123 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3344
  %streams133 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %123, i32 0, i32 7, !dbg !3345
  %124 = load %struct.AVStream**, %struct.AVStream*** %streams133, align 8, !dbg !3345
  %arrayidx134 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %124, i64 %idxprom132, !dbg !3344
  %125 = load %struct.AVStream*, %struct.AVStream** %arrayidx134, align 8, !dbg !3344
  %126 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3346
  %length135 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 2, !dbg !3347
  %127 = load i64, i64* %length135, align 8, !dbg !3347
  %call136 = call i32 @mxf_get_eia608_packet(%struct.AVFormatContext* %121, %struct.AVStream* %125, %struct.AVPacket* %126, i64 %127), !dbg !3348
  store i32 %call136, i32* %ret, align 4, !dbg !3349
  %128 = load i32, i32* %ret, align 4, !dbg !3350
  %cmp137 = icmp slt i32 %128, 0, !dbg !3352
  br i1 %cmp137, label %if.then139, label %if.end147, !dbg !3353

if.then139:                                       ; preds = %if.then131
  %129 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3354
  %current_klv_data140 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %129, i32 0, i32 15, !dbg !3356
  %130 = bitcast %struct.KLVPacket* %.compoundliteral141 to i8*, !dbg !3357
  call void @llvm.memset.p0i8.i64(i8* %130, i8 0, i64 40, i32 8, i1 false), !dbg !3357
  %key142 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %.compoundliteral141, i32 0, i32 0, !dbg !3358
  %arrayinit.begin143 = getelementptr inbounds [16 x i8], [16 x i8]* %key142, i64 0, i64 0, !dbg !3359
  store i8 0, i8* %arrayinit.begin143, align 1, !dbg !3359
  %131 = bitcast %struct.KLVPacket* %current_klv_data140 to i8*, !dbg !3357
  %132 = bitcast %struct.KLVPacket* %.compoundliteral141 to i8*, !dbg !3357
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %131, i8* %132, i64 40, i32 8, i1 false), !dbg !3360
  %133 = load i32, i32* %ret, align 4, !dbg !3362
  store i32 %133, i32* %retval, align 4, !dbg !3363
  br label %return, !dbg !3363

if.end147:                                        ; preds = %if.then131
  br label %if.end164, !dbg !3364

if.else148:                                       ; preds = %land.lhs.true125, %if.else123
  %134 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3365
  %pb149 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %134, i32 0, i32 4, !dbg !3367
  %135 = load %struct.AVIOContext*, %struct.AVIOContext** %pb149, align 8, !dbg !3367
  %136 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3368
  %length150 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 2, !dbg !3369
  %137 = load i64, i64* %length150, align 8, !dbg !3369
  %conv151 = trunc i64 %137 to i32, !dbg !3370
  %call152 = call i32 @av_get_packet(%struct.AVIOContext* %135, %struct.AVPacket* %136, i32 %conv151), !dbg !3371
  store i32 %call152, i32* %ret, align 4, !dbg !3372
  %138 = load i32, i32* %ret, align 4, !dbg !3373
  %cmp153 = icmp slt i32 %138, 0, !dbg !3375
  br i1 %cmp153, label %if.then155, label %if.end163, !dbg !3376

if.then155:                                       ; preds = %if.else148
  %139 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3377
  %current_klv_data156 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %139, i32 0, i32 15, !dbg !3379
  %140 = bitcast %struct.KLVPacket* %.compoundliteral157 to i8*, !dbg !3380
  call void @llvm.memset.p0i8.i64(i8* %140, i8 0, i64 40, i32 8, i1 false), !dbg !3380
  %key158 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %.compoundliteral157, i32 0, i32 0, !dbg !3381
  %arrayinit.begin159 = getelementptr inbounds [16 x i8], [16 x i8]* %key158, i64 0, i64 0, !dbg !3382
  store i8 0, i8* %arrayinit.begin159, align 1, !dbg !3382
  %141 = bitcast %struct.KLVPacket* %current_klv_data156 to i8*, !dbg !3380
  %142 = bitcast %struct.KLVPacket* %.compoundliteral157 to i8*, !dbg !3380
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %141, i8* %142, i64 40, i32 8, i1 false), !dbg !3383
  %143 = load i32, i32* %ret, align 4, !dbg !3385
  store i32 %143, i32* %retval, align 4, !dbg !3386
  br label %return, !dbg !3386

if.end163:                                        ; preds = %if.else148
  br label %if.end164

if.end164:                                        ; preds = %if.end163, %if.end147
  br label %if.end165

if.end165:                                        ; preds = %if.end164, %if.end122
  %144 = load i32, i32* %index, align 4, !dbg !3387
  %145 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3388
  %stream_index = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %145, i32 0, i32 5, !dbg !3389
  store i32 %144, i32* %stream_index, align 4, !dbg !3390
  %offset166 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 1, !dbg !3391
  %146 = load i64, i64* %offset166, align 8, !dbg !3391
  %147 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3392
  %pos167 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %147, i32 0, i32 10, !dbg !3393
  store i64 %146, i64* %pos167, align 8, !dbg !3394
  %148 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3395
  %149 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3396
  %150 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !3397
  %call168 = call i32 @mxf_set_pts(%struct.MXFContext* %148, %struct.AVStream* %149, %struct.AVPacket* %150), !dbg !3398
  store i32 %call168, i32* %ret, align 4, !dbg !3399
  %151 = load i32, i32* %ret, align 4, !dbg !3400
  %cmp169 = icmp slt i32 %151, 0, !dbg !3402
  br i1 %cmp169, label %if.then171, label %if.end179, !dbg !3403

if.then171:                                       ; preds = %if.end165
  %152 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3404
  %current_klv_data172 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %152, i32 0, i32 15, !dbg !3406
  %153 = bitcast %struct.KLVPacket* %.compoundliteral173 to i8*, !dbg !3407
  call void @llvm.memset.p0i8.i64(i8* %153, i8 0, i64 40, i32 8, i1 false), !dbg !3407
  %key174 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %.compoundliteral173, i32 0, i32 0, !dbg !3408
  %arrayinit.begin175 = getelementptr inbounds [16 x i8], [16 x i8]* %key174, i64 0, i64 0, !dbg !3409
  store i8 0, i8* %arrayinit.begin175, align 1, !dbg !3409
  %154 = bitcast %struct.KLVPacket* %current_klv_data172 to i8*, !dbg !3407
  %155 = bitcast %struct.KLVPacket* %.compoundliteral173 to i8*, !dbg !3407
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %154, i8* %155, i64 40, i32 8, i1 false), !dbg !3410
  %156 = load i32, i32* %ret, align 4, !dbg !3412
  store i32 %156, i32* %retval, align 4, !dbg !3413
  br label %return, !dbg !3413

if.end179:                                        ; preds = %if.end165
  %157 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3414
  %pb180 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %157, i32 0, i32 4, !dbg !3415
  %158 = load %struct.AVIOContext*, %struct.AVIOContext** %pb180, align 8, !dbg !3415
  %next_klv181 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 3, !dbg !3416
  %159 = load i64, i64* %next_klv181, align 8, !dbg !3416
  %call182 = call i64 @avio_seek(%struct.AVIOContext* %158, i64 %159, i32 0), !dbg !3417
  store i32 0, i32* %retval, align 4, !dbg !3418
  br label %return, !dbg !3418

if.else183:                                       ; preds = %lor.lhs.false38
  br label %skip, !dbg !3419

skip:                                             ; preds = %if.else183, %if.then76, %if.then58, %if.then48
  %160 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3420
  %pb184 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %160, i32 0, i32 4, !dbg !3422
  %161 = load %struct.AVIOContext*, %struct.AVIOContext** %pb184, align 8, !dbg !3422
  %162 = load i64, i64* %max_data_size, align 8, !dbg !3423
  %call185 = call i64 @avio_skip(%struct.AVIOContext* %161, i64 %162), !dbg !3424
  %163 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3425
  %current_klv_data186 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %163, i32 0, i32 15, !dbg !3426
  %164 = bitcast %struct.KLVPacket* %.compoundliteral187 to i8*, !dbg !3427
  call void @llvm.memset.p0i8.i64(i8* %164, i8 0, i64 40, i32 8, i1 false), !dbg !3427
  %key188 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %.compoundliteral187, i32 0, i32 0, !dbg !3428
  %arrayinit.begin189 = getelementptr inbounds [16 x i8], [16 x i8]* %key188, i64 0, i64 0, !dbg !3429
  store i8 0, i8* %arrayinit.begin189, align 1, !dbg !3429
  %165 = bitcast %struct.KLVPacket* %current_klv_data186 to i8*, !dbg !3427
  %166 = bitcast %struct.KLVPacket* %.compoundliteral187 to i8*, !dbg !3427
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %165, i8* %166, i64 40, i32 8, i1 false), !dbg !3430
  br label %if.end193

if.end193:                                        ; preds = %skip
  br label %while.body, !dbg !3432, !llvm.loop !3434

while.end:                                        ; preds = %if.then11
  %167 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3435
  %pb194 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %167, i32 0, i32 4, !dbg !3436
  %168 = load %struct.AVIOContext*, %struct.AVIOContext** %pb194, align 8, !dbg !3436
  %call195 = call i32 @avio_feof(%struct.AVIOContext* %168), !dbg !3437
  %tobool196 = icmp ne i32 %call195, 0, !dbg !3437
  br i1 %tobool196, label %cond.true197, label %cond.false198, !dbg !3437

cond.true197:                                     ; preds = %while.end
  br label %cond.end199, !dbg !3438

cond.false198:                                    ; preds = %while.end
  %169 = load i32, i32* %ret, align 4, !dbg !3439
  br label %cond.end199, !dbg !3441

cond.end199:                                      ; preds = %cond.false198, %cond.true197
  %cond200 = phi i32 [ -541478725, %cond.true197 ], [ %169, %cond.false198 ], !dbg !3442
  store i32 %cond200, i32* %retval, align 4, !dbg !3444
  br label %return, !dbg !3444

return:                                           ; preds = %cond.end199, %if.end179, %if.then171, %if.then155, %if.then139, %if.then114, %if.end23, %if.then22
  %170 = load i32, i32* %retval, align 4, !dbg !3445
  ret i32 %170, !dbg !3445
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_read_close(%struct.AVFormatContext* %s) #0 !dbg !3446 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %i = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !3447, metadata !2511), !dbg !3448
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !3449, metadata !2511), !dbg !3450
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3451
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !3452
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3452
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !3451
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !3450
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3453, metadata !2511), !dbg !3454
  %3 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3455
  %packages_refs = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %3, i32 0, i32 4, !dbg !3456
  %4 = bitcast [16 x i8]** %packages_refs to i8*, !dbg !3457
  call void @av_freep(i8* %4), !dbg !3458
  %5 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3459
  %essence_container_data_refs = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %5, i32 0, i32 6, !dbg !3460
  %6 = bitcast [16 x i8]** %essence_container_data_refs to i8*, !dbg !3461
  call void @av_freep(i8* %6), !dbg !3462
  store i32 0, i32* %i, align 4, !dbg !3463
  br label %for.cond, !dbg !3465

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !dbg !3466
  %8 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3469
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %8, i32 0, i32 6, !dbg !3470
  %9 = load i32, i32* %nb_streams, align 4, !dbg !3470
  %cmp = icmp ult i32 %7, %9, !dbg !3471
  br i1 %cmp, label %for.body, label %for.end, !dbg !3472

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %i, align 4, !dbg !3473
  %idxprom = sext i32 %10 to i64, !dbg !3474
  %11 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3474
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %11, i32 0, i32 7, !dbg !3475
  %12 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !3475
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %12, i64 %idxprom, !dbg !3474
  %13 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !3474
  %priv_data1 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %13, i32 0, i32 3, !dbg !3476
  store i8* null, i8** %priv_data1, align 8, !dbg !3477
  br label %for.inc, !dbg !3474

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !3478
  %inc = add nsw i32 %14, 1, !dbg !3478
  store i32 %inc, i32* %i, align 4, !dbg !3478
  br label %for.cond, !dbg !3480, !llvm.loop !3481

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !3483
  br label %for.cond2, !dbg !3485

for.cond2:                                        ; preds = %for.inc5, %for.end
  %15 = load i32, i32* %i, align 4, !dbg !3486
  %16 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3489
  %metadata_sets_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %16, i32 0, i32 9, !dbg !3490
  %17 = load i32, i32* %metadata_sets_count, align 8, !dbg !3490
  %cmp3 = icmp slt i32 %15, %17, !dbg !3491
  br i1 %cmp3, label %for.body4, label %for.end7, !dbg !3492

for.body4:                                        ; preds = %for.cond2
  %18 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3493
  %metadata_sets = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %18, i32 0, i32 8, !dbg !3495
  %19 = load %struct.MXFMetadataSet**, %struct.MXFMetadataSet*** %metadata_sets, align 8, !dbg !3495
  %20 = load i32, i32* %i, align 4, !dbg !3496
  %idx.ext = sext i32 %20 to i64, !dbg !3497
  %add.ptr = getelementptr inbounds %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %19, i64 %idx.ext, !dbg !3497
  call void @mxf_free_metadataset(%struct.MXFMetadataSet** %add.ptr, i32 1), !dbg !3498
  br label %for.inc5, !dbg !3499

for.inc5:                                         ; preds = %for.body4
  %21 = load i32, i32* %i, align 4, !dbg !3500
  %inc6 = add nsw i32 %21, 1, !dbg !3500
  store i32 %inc6, i32* %i, align 4, !dbg !3500
  br label %for.cond2, !dbg !3502, !llvm.loop !3503

for.end7:                                         ; preds = %for.cond2
  %22 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3505
  %partitions = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %22, i32 0, i32 1, !dbg !3506
  %23 = bitcast %struct.MXFPartition** %partitions to i8*, !dbg !3507
  call void @av_freep(i8* %23), !dbg !3508
  %24 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3509
  %metadata_sets8 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %24, i32 0, i32 8, !dbg !3510
  %25 = bitcast %struct.MXFMetadataSet*** %metadata_sets8 to i8*, !dbg !3511
  call void @av_freep(i8* %25), !dbg !3512
  %26 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3513
  %aesc = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %26, i32 0, i32 11, !dbg !3514
  %27 = bitcast %struct.AVAES** %aesc to i8*, !dbg !3515
  call void @av_freep(i8* %27), !dbg !3516
  %28 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3517
  %local_tags = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %28, i32 0, i32 12, !dbg !3518
  %29 = bitcast i8** %local_tags to i8*, !dbg !3519
  call void @av_freep(i8* %29), !dbg !3520
  %30 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3521
  %index_tables = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %30, i32 0, i32 22, !dbg !3523
  %31 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_tables, align 8, !dbg !3523
  %tobool = icmp ne %struct.MXFIndexTable* %31, null, !dbg !3521
  br i1 %tobool, label %if.then, label %if.end, !dbg !3524

if.then:                                          ; preds = %for.end7
  store i32 0, i32* %i, align 4, !dbg !3525
  br label %for.cond9, !dbg !3528

for.cond9:                                        ; preds = %for.inc24, %if.then
  %32 = load i32, i32* %i, align 4, !dbg !3529
  %33 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3532
  %nb_index_tables = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %33, i32 0, i32 21, !dbg !3533
  %34 = load i32, i32* %nb_index_tables, align 4, !dbg !3533
  %cmp10 = icmp slt i32 %32, %34, !dbg !3534
  br i1 %cmp10, label %for.body11, label %for.end26, !dbg !3535

for.body11:                                       ; preds = %for.cond9
  %35 = load i32, i32* %i, align 4, !dbg !3536
  %idxprom12 = sext i32 %35 to i64, !dbg !3538
  %36 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3538
  %index_tables13 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %36, i32 0, i32 22, !dbg !3539
  %37 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_tables13, align 8, !dbg !3539
  %arrayidx14 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %37, i64 %idxprom12, !dbg !3538
  %segments = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %arrayidx14, i32 0, i32 6, !dbg !3540
  %38 = bitcast %struct.MXFIndexTableSegment*** %segments to i8*, !dbg !3541
  call void @av_freep(i8* %38), !dbg !3542
  %39 = load i32, i32* %i, align 4, !dbg !3543
  %idxprom15 = sext i32 %39 to i64, !dbg !3544
  %40 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3544
  %index_tables16 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %40, i32 0, i32 22, !dbg !3545
  %41 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_tables16, align 8, !dbg !3545
  %arrayidx17 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %41, i64 %idxprom15, !dbg !3544
  %ptses = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %arrayidx17, i32 0, i32 4, !dbg !3546
  %42 = bitcast i64** %ptses to i8*, !dbg !3547
  call void @av_freep(i8* %42), !dbg !3548
  %43 = load i32, i32* %i, align 4, !dbg !3549
  %idxprom18 = sext i32 %43 to i64, !dbg !3550
  %44 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3550
  %index_tables19 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %44, i32 0, i32 22, !dbg !3551
  %45 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_tables19, align 8, !dbg !3551
  %arrayidx20 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %45, i64 %idxprom18, !dbg !3550
  %fake_index = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %arrayidx20, i32 0, i32 7, !dbg !3552
  %46 = bitcast %struct.AVIndexEntry** %fake_index to i8*, !dbg !3553
  call void @av_freep(i8* %46), !dbg !3554
  %47 = load i32, i32* %i, align 4, !dbg !3555
  %idxprom21 = sext i32 %47 to i64, !dbg !3556
  %48 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3556
  %index_tables22 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %48, i32 0, i32 22, !dbg !3557
  %49 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_tables22, align 8, !dbg !3557
  %arrayidx23 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %49, i64 %idxprom21, !dbg !3556
  %offsets = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %arrayidx23, i32 0, i32 8, !dbg !3558
  %50 = bitcast i8** %offsets to i8*, !dbg !3559
  call void @av_freep(i8* %50), !dbg !3560
  br label %for.inc24, !dbg !3561

for.inc24:                                        ; preds = %for.body11
  %51 = load i32, i32* %i, align 4, !dbg !3562
  %inc25 = add nsw i32 %51, 1, !dbg !3562
  store i32 %inc25, i32* %i, align 4, !dbg !3562
  br label %for.cond9, !dbg !3564, !llvm.loop !3565

for.end26:                                        ; preds = %for.cond9
  br label %if.end, !dbg !3567

if.end:                                           ; preds = %for.end26, %for.end7
  %52 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3568
  %index_tables27 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %52, i32 0, i32 22, !dbg !3569
  %53 = bitcast %struct.MXFIndexTable** %index_tables27 to i8*, !dbg !3570
  call void @av_freep(i8* %53), !dbg !3571
  ret i32 0, !dbg !3572
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_read_seek(%struct.AVFormatContext* %s, i32 %stream_index, i64 %sample_time, i32 %flags) #0 !dbg !3573 {
entry:
  %retval.i = alloca %struct.AVRational, align 4
  %q.i = alloca %struct.AVRational, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %q.i, metadata !3576, metadata !2511), !dbg !3580
  %r.i = alloca %struct.AVRational, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %r.i, metadata !3583, metadata !2511), !dbg !3584
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %stream_index.addr = alloca i32, align 4
  %sample_time.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %st = alloca %struct.AVStream*, align 8
  %seconds = alloca i64, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %seekpos = alloca i64, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %t = alloca %struct.MXFIndexTable*, align 8
  %source_track = alloca %struct.MXFTrack*, align 8
  %agg.tmp = alloca %struct.AVRational, align 4
  %.compoundliteral = alloca %struct.KLVPacket, align 8
  %partition = alloca %struct.MXFPartition*, align 8
  %new_source_track = alloca %struct.MXFTrack*, align 8
  %klv = alloca %struct.KLVPacket, align 8
  %.compoundliteral129 = alloca %struct.KLVPacket, align 8
  %cur_st = alloca %struct.AVStream*, align 8
  %cur_track = alloca %struct.MXFTrack*, align 8
  %track_edit_unit = alloca i64, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !3585, metadata !2511), !dbg !3586
  store i32 %stream_index, i32* %stream_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stream_index.addr, metadata !3587, metadata !2511), !dbg !3588
  store i64 %sample_time, i64* %sample_time.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %sample_time.addr, metadata !3589, metadata !2511), !dbg !3590
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !3591, metadata !2511), !dbg !3592
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !3593, metadata !2511), !dbg !3594
  %0 = load i32, i32* %stream_index.addr, align 4, !dbg !3595
  %idxprom = sext i32 %0 to i64, !dbg !3596
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3596
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %1, i32 0, i32 7, !dbg !3597
  %2 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !3597
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %2, i64 %idxprom, !dbg !3596
  %3 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !3596
  store %struct.AVStream* %3, %struct.AVStream** %st, align 8, !dbg !3594
  call void @llvm.dbg.declare(metadata i64* %seconds, metadata !3598, metadata !2511), !dbg !3599
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !3600, metadata !2511), !dbg !3601
  %4 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3602
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %4, i32 0, i32 3, !dbg !3603
  %5 = load i8*, i8** %priv_data, align 8, !dbg !3603
  %6 = bitcast i8* %5 to %struct.MXFContext*, !dbg !3602
  store %struct.MXFContext* %6, %struct.MXFContext** %mxf, align 8, !dbg !3601
  call void @llvm.dbg.declare(metadata i64* %seekpos, metadata !3604, metadata !2511), !dbg !3605
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3606, metadata !2511), !dbg !3607
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3608, metadata !2511), !dbg !3609
  call void @llvm.dbg.declare(metadata %struct.MXFIndexTable** %t, metadata !3610, metadata !2511), !dbg !3611
  call void @llvm.dbg.declare(metadata %struct.MXFTrack** %source_track, metadata !3612, metadata !2511), !dbg !3613
  %7 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3614
  %priv_data1 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %7, i32 0, i32 3, !dbg !3615
  %8 = load i8*, i8** %priv_data1, align 8, !dbg !3615
  %9 = bitcast i8* %8 to %struct.MXFTrack*, !dbg !3614
  store %struct.MXFTrack* %9, %struct.MXFTrack** %source_track, align 8, !dbg !3613
  %10 = load %struct.MXFTrack*, %struct.MXFTrack** %source_track, align 8, !dbg !3616
  %tobool = icmp ne %struct.MXFTrack* %10, null, !dbg !3616
  br i1 %tobool, label %if.end, label %if.then, !dbg !3618

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3619
  br label %return, !dbg !3619

if.end:                                           ; preds = %entry
  %11 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3620
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %11, i32 0, i32 19, !dbg !3621
  %12 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !3621
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %12, i32 0, i32 0, !dbg !3622
  %13 = load i32, i32* %codec_type, align 8, !dbg !3622
  %cmp = icmp eq i32 %13, 1, !dbg !3623
  br i1 %cmp, label %if.then2, label %if.end4, !dbg !3624

if.then2:                                         ; preds = %if.end
  %14 = load i64, i64* %sample_time.addr, align 8, !dbg !3625
  %15 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3626
  %time_base = getelementptr inbounds %struct.AVStream, %struct.AVStream* %15, i32 0, i32 4, !dbg !3627
  %16 = load %struct.MXFTrack*, %struct.MXFTrack** %source_track, align 8, !dbg !3628
  %edit_rate = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %16, i32 0, i32 7, !dbg !3629
  %17 = bitcast %struct.AVRational* %edit_rate to i64*, !dbg !3630
  %18 = load i64, i64* %17, align 4, !dbg !3630
  %19 = bitcast %struct.AVRational* %q.i to i64*, !dbg !3630
  store i64 %18, i64* %19, align 4, !dbg !3630
  %num.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r.i, i32 0, i32 0, !dbg !3631
  %den.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q.i, i32 0, i32 1, !dbg !3632
  %20 = load i32, i32* %den.i, align 4, !dbg !3632
  store i32 %20, i32* %num.i, align 4, !dbg !3631
  %den1.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r.i, i32 0, i32 1, !dbg !3631
  %num2.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q.i, i32 0, i32 0, !dbg !3633
  %21 = load i32, i32* %num2.i, align 4, !dbg !3633
  store i32 %21, i32* %den1.i, align 4, !dbg !3631
  %22 = bitcast %struct.AVRational* %retval.i to i8*, !dbg !3634
  %23 = bitcast %struct.AVRational* %r.i to i8*, !dbg !3634
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 4, i1 false) #8, !dbg !3634
  %24 = bitcast %struct.AVRational* %retval.i to i64*, !dbg !3635
  %25 = load i64, i64* %24, align 4, !dbg !3635
  %26 = bitcast %struct.AVRational* %agg.tmp to i64*, !dbg !3630
  store i64 %25, i64* %26, align 4, !dbg !3630
  %27 = bitcast %struct.AVRational* %time_base to i64*, !dbg !3636
  %28 = load i64, i64* %27, align 8, !dbg !3636
  %29 = bitcast %struct.AVRational* %agg.tmp to i64*, !dbg !3636
  %30 = load i64, i64* %29, align 4, !dbg !3636
  %call3 = call i64 @av_rescale_q(i64 %14, i64 %28, i64 %30) #2, !dbg !3636
  store i64 %call3, i64* %sample_time.addr, align 8, !dbg !3637
  br label %if.end4, !dbg !3638

if.end4:                                          ; preds = %if.then2, %if.end
  %31 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3639
  %nb_index_tables = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %31, i32 0, i32 21, !dbg !3641
  %32 = load i32, i32* %nb_index_tables, align 4, !dbg !3641
  %cmp5 = icmp sle i32 %32, 0, !dbg !3642
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !3643

if.then6:                                         ; preds = %if.end4
  %33 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3644
  %bit_rate = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %33, i32 0, i32 12, !dbg !3647
  %34 = load i64, i64* %bit_rate, align 8, !dbg !3647
  %tobool7 = icmp ne i64 %34, 0, !dbg !3644
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !3648

if.then8:                                         ; preds = %if.then6
  store i32 -1094995529, i32* %retval, align 4, !dbg !3649
  br label %return, !dbg !3649

if.end9:                                          ; preds = %if.then6
  %35 = load i64, i64* %sample_time.addr, align 8, !dbg !3650
  %cmp10 = icmp slt i64 %35, 0, !dbg !3652
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !3653

if.then11:                                        ; preds = %if.end9
  store i64 0, i64* %sample_time.addr, align 8, !dbg !3654
  br label %if.end12, !dbg !3655

if.end12:                                         ; preds = %if.then11, %if.end9
  %36 = load i64, i64* %sample_time.addr, align 8, !dbg !3656
  %37 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3657
  %time_base13 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %37, i32 0, i32 4, !dbg !3658
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base13, i32 0, i32 0, !dbg !3659
  %38 = load i32, i32* %num, align 8, !dbg !3659
  %conv = sext i32 %38 to i64, !dbg !3657
  %39 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3660
  %time_base14 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %39, i32 0, i32 4, !dbg !3661
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base14, i32 0, i32 1, !dbg !3662
  %40 = load i32, i32* %den, align 4, !dbg !3662
  %conv15 = sext i32 %40 to i64, !dbg !3660
  %call16 = call i64 @av_rescale(i64 %36, i64 %conv, i64 %conv15) #2, !dbg !3663
  store i64 %call16, i64* %seconds, align 8, !dbg !3664
  %41 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3665
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %41, i32 0, i32 4, !dbg !3666
  %42 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !3666
  %43 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3667
  %bit_rate17 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %43, i32 0, i32 12, !dbg !3668
  %44 = load i64, i64* %bit_rate17, align 8, !dbg !3668
  %45 = load i64, i64* %seconds, align 8, !dbg !3669
  %mul = mul nsw i64 %44, %45, !dbg !3670
  %shr = ashr i64 %mul, 3, !dbg !3671
  %call18 = call i64 @avio_seek(%struct.AVIOContext* %42, i64 %shr, i32 0), !dbg !3672
  store i64 %call18, i64* %seekpos, align 8, !dbg !3673
  %46 = load i64, i64* %seekpos, align 8, !dbg !3674
  %cmp19 = icmp slt i64 %46, 0, !dbg !3676
  br i1 %cmp19, label %if.then21, label %if.end23, !dbg !3677

if.then21:                                        ; preds = %if.end12
  %47 = load i64, i64* %seekpos, align 8, !dbg !3678
  %conv22 = trunc i64 %47 to i32, !dbg !3678
  store i32 %conv22, i32* %retval, align 4, !dbg !3679
  br label %return, !dbg !3679

if.end23:                                         ; preds = %if.end12
  %48 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3680
  %49 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3681
  %50 = load i64, i64* %sample_time.addr, align 8, !dbg !3682
  call void @ff_update_cur_dts(%struct.AVFormatContext* %48, %struct.AVStream* %49, i64 %50), !dbg !3683
  %51 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3684
  %current_klv_data = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %51, i32 0, i32 15, !dbg !3685
  %52 = bitcast %struct.KLVPacket* %.compoundliteral to i8*, !dbg !3686
  call void @llvm.memset.p0i8.i64(i8* %52, i8 0, i64 40, i32 8, i1 false), !dbg !3686
  %key = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %.compoundliteral, i32 0, i32 0, !dbg !3687
  %arrayinit.begin = getelementptr inbounds [16 x i8], [16 x i8]* %key, i64 0, i64 0, !dbg !3688
  store i8 0, i8* %arrayinit.begin, align 1, !dbg !3688
  %53 = bitcast %struct.KLVPacket* %current_klv_data to i8*, !dbg !3686
  %54 = bitcast %struct.KLVPacket* %.compoundliteral to i8*, !dbg !3686
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 40, i32 8, i1 false), !dbg !3689
  br label %if.end137, !dbg !3691

if.else:                                          ; preds = %if.end4
  call void @llvm.dbg.declare(metadata %struct.MXFPartition** %partition, metadata !3692, metadata !2511), !dbg !3694
  %55 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3695
  %index_tables = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %55, i32 0, i32 22, !dbg !3696
  %56 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_tables, align 8, !dbg !3696
  %arrayidx24 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %56, i64 0, !dbg !3695
  store %struct.MXFIndexTable* %arrayidx24, %struct.MXFIndexTable** %t, align 8, !dbg !3697
  %57 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !3698
  %index_sid = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %57, i32 0, i32 0, !dbg !3700
  %58 = load i32, i32* %index_sid, align 8, !dbg !3700
  %59 = load %struct.MXFTrack*, %struct.MXFTrack** %source_track, align 8, !dbg !3701
  %index_sid25 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %59, i32 0, i32 11, !dbg !3702
  %60 = load i32, i32* %index_sid25, align 8, !dbg !3702
  %cmp26 = icmp ne i32 %58, %60, !dbg !3703
  br i1 %cmp26, label %if.then28, label %if.end53, !dbg !3704

if.then28:                                        ; preds = %if.else
  store i32 0, i32* %i, align 4, !dbg !3705
  br label %for.cond, !dbg !3708

for.cond:                                         ; preds = %for.inc, %if.then28
  %61 = load i32, i32* %i, align 4, !dbg !3709
  %62 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3712
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %62, i32 0, i32 6, !dbg !3713
  %63 = load i32, i32* %nb_streams, align 4, !dbg !3713
  %cmp29 = icmp ult i32 %61, %63, !dbg !3714
  br i1 %cmp29, label %for.body, label %for.end, !dbg !3715

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MXFTrack** %new_source_track, metadata !3716, metadata !2511), !dbg !3718
  %64 = load i32, i32* %i, align 4, !dbg !3719
  %idxprom31 = sext i32 %64 to i64, !dbg !3720
  %65 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3720
  %streams32 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %65, i32 0, i32 7, !dbg !3721
  %66 = load %struct.AVStream**, %struct.AVStream*** %streams32, align 8, !dbg !3721
  %arrayidx33 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %66, i64 %idxprom31, !dbg !3720
  %67 = load %struct.AVStream*, %struct.AVStream** %arrayidx33, align 8, !dbg !3720
  %priv_data34 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %67, i32 0, i32 3, !dbg !3722
  %68 = load i8*, i8** %priv_data34, align 8, !dbg !3722
  %69 = bitcast i8* %68 to %struct.MXFTrack*, !dbg !3720
  store %struct.MXFTrack* %69, %struct.MXFTrack** %new_source_track, align 8, !dbg !3718
  %70 = load %struct.MXFTrack*, %struct.MXFTrack** %new_source_track, align 8, !dbg !3723
  %tobool35 = icmp ne %struct.MXFTrack* %70, null, !dbg !3723
  br i1 %tobool35, label %land.lhs.true, label %if.end47, !dbg !3725

land.lhs.true:                                    ; preds = %for.body
  %71 = load %struct.MXFTrack*, %struct.MXFTrack** %new_source_track, align 8, !dbg !3726
  %index_sid36 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %71, i32 0, i32 11, !dbg !3728
  %72 = load i32, i32* %index_sid36, align 8, !dbg !3728
  %73 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !3729
  %index_sid37 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %73, i32 0, i32 0, !dbg !3730
  %74 = load i32, i32* %index_sid37, align 8, !dbg !3730
  %cmp38 = icmp eq i32 %72, %74, !dbg !3731
  br i1 %cmp38, label %if.then40, label %if.end47, !dbg !3732

if.then40:                                        ; preds = %land.lhs.true
  %75 = load i64, i64* %sample_time.addr, align 8, !dbg !3733
  %76 = load %struct.MXFTrack*, %struct.MXFTrack** %new_source_track, align 8, !dbg !3735
  %edit_rate41 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %76, i32 0, i32 7, !dbg !3736
  %77 = load %struct.MXFTrack*, %struct.MXFTrack** %source_track, align 8, !dbg !3737
  %edit_rate42 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %77, i32 0, i32 7, !dbg !3738
  %78 = bitcast %struct.AVRational* %edit_rate41 to i64*, !dbg !3739
  %79 = load i64, i64* %78, align 4, !dbg !3739
  %80 = bitcast %struct.AVRational* %edit_rate42 to i64*, !dbg !3739
  %81 = load i64, i64* %80, align 4, !dbg !3739
  %call43 = call i64 @av_rescale_q(i64 %75, i64 %79, i64 %81) #2, !dbg !3739
  store i64 %call43, i64* %sample_time.addr, align 8, !dbg !3740
  %82 = load %struct.MXFTrack*, %struct.MXFTrack** %new_source_track, align 8, !dbg !3741
  store %struct.MXFTrack* %82, %struct.MXFTrack** %source_track, align 8, !dbg !3742
  %83 = load i32, i32* %i, align 4, !dbg !3743
  %idxprom44 = sext i32 %83 to i64, !dbg !3744
  %84 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3744
  %streams45 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %84, i32 0, i32 7, !dbg !3745
  %85 = load %struct.AVStream**, %struct.AVStream*** %streams45, align 8, !dbg !3745
  %arrayidx46 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %85, i64 %idxprom44, !dbg !3744
  %86 = load %struct.AVStream*, %struct.AVStream** %arrayidx46, align 8, !dbg !3744
  store %struct.AVStream* %86, %struct.AVStream** %st, align 8, !dbg !3746
  br label %for.end, !dbg !3747

if.end47:                                         ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !3748

for.inc:                                          ; preds = %if.end47
  %87 = load i32, i32* %i, align 4, !dbg !3749
  %inc = add nsw i32 %87, 1, !dbg !3749
  store i32 %inc, i32* %i, align 4, !dbg !3749
  br label %for.cond, !dbg !3751, !llvm.loop !3752

for.end:                                          ; preds = %if.then40, %for.cond
  %88 = load i32, i32* %i, align 4, !dbg !3754
  %89 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3756
  %nb_streams48 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %89, i32 0, i32 6, !dbg !3757
  %90 = load i32, i32* %nb_streams48, align 4, !dbg !3757
  %cmp49 = icmp eq i32 %88, %90, !dbg !3758
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !3759

if.then51:                                        ; preds = %for.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !3760
  br label %return, !dbg !3760

if.end52:                                         ; preds = %for.end
  br label %if.end53, !dbg !3761

if.end53:                                         ; preds = %if.end52, %if.else
  %91 = load i64, i64* %sample_time.addr, align 8, !dbg !3762
  %cmp54 = icmp sgt i64 %91, 0, !dbg !3763
  br i1 %cmp54, label %cond.true, label %cond.false, !dbg !3764

cond.true:                                        ; preds = %if.end53
  %92 = load i64, i64* %sample_time.addr, align 8, !dbg !3765
  br label %cond.end, !dbg !3767

cond.false:                                       ; preds = %if.end53
  br label %cond.end, !dbg !3768

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %92, %cond.true ], [ 0, %cond.false ], !dbg !3770
  store i64 %cond, i64* %sample_time.addr, align 8, !dbg !3772
  %93 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !3773
  %fake_index = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %93, i32 0, i32 7, !dbg !3775
  %94 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %fake_index, align 8, !dbg !3775
  %tobool56 = icmp ne %struct.AVIndexEntry* %94, null, !dbg !3773
  br i1 %tobool56, label %if.then57, label %if.else93, !dbg !3776

if.then57:                                        ; preds = %cond.end
  %95 = load i32, i32* %flags.addr, align 4, !dbg !3777
  %and = and i32 %95, 4, !dbg !3780
  %tobool58 = icmp ne i32 %and, 0, !dbg !3780
  br i1 %tobool58, label %if.end82, label %land.lhs.true59, !dbg !3781

land.lhs.true59:                                  ; preds = %if.then57
  %96 = load i32, i32* %flags.addr, align 4, !dbg !3782
  %and60 = and i32 %96, 1, !dbg !3783
  %tobool61 = icmp ne i32 %and60, 0, !dbg !3783
  br i1 %tobool61, label %land.lhs.true62, label %if.end82, !dbg !3784

land.lhs.true62:                                  ; preds = %land.lhs.true59
  %97 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !3785
  %ptses = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %97, i32 0, i32 4, !dbg !3786
  %98 = load i64*, i64** %ptses, align 8, !dbg !3786
  %arrayidx63 = getelementptr inbounds i64, i64* %98, i64 0, !dbg !3785
  %99 = load i64, i64* %arrayidx63, align 8, !dbg !3785
  %cmp64 = icmp ne i64 %99, -9223372036854775808, !dbg !3787
  br i1 %cmp64, label %land.lhs.true66, label %if.end82, !dbg !3788

land.lhs.true66:                                  ; preds = %land.lhs.true62
  %100 = load i64, i64* %sample_time.addr, align 8, !dbg !3789
  %101 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !3790
  %ptses67 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %101, i32 0, i32 4, !dbg !3791
  %102 = load i64*, i64** %ptses67, align 8, !dbg !3791
  %arrayidx68 = getelementptr inbounds i64, i64* %102, i64 0, !dbg !3790
  %103 = load i64, i64* %arrayidx68, align 8, !dbg !3790
  %cmp69 = icmp slt i64 %100, %103, !dbg !3792
  br i1 %cmp69, label %land.lhs.true71, label %if.end82, !dbg !3793

land.lhs.true71:                                  ; preds = %land.lhs.true66
  %104 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !3794
  %ptses72 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %104, i32 0, i32 4, !dbg !3795
  %105 = load i64*, i64** %ptses72, align 8, !dbg !3795
  %arrayidx73 = getelementptr inbounds i64, i64* %105, i64 0, !dbg !3794
  %106 = load i64, i64* %arrayidx73, align 8, !dbg !3794
  %107 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !3796
  %fake_index74 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %107, i32 0, i32 7, !dbg !3797
  %108 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %fake_index74, align 8, !dbg !3797
  %arrayidx75 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %108, i64 %106, !dbg !3796
  %flags76 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %arrayidx75, i32 0, i32 2, !dbg !3798
  %bf.load = load i32, i32* %flags76, align 8, !dbg !3798
  %bf.shl = shl i32 %bf.load, 30, !dbg !3798
  %bf.ashr = ashr i32 %bf.shl, 30, !dbg !3798
  %and77 = and i32 %bf.ashr, 1, !dbg !3799
  %tobool78 = icmp ne i32 %and77, 0, !dbg !3799
  br i1 %tobool78, label %if.then79, label %if.end82, !dbg !3800

if.then79:                                        ; preds = %land.lhs.true71
  %109 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !3802
  %ptses80 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %109, i32 0, i32 4, !dbg !3803
  %110 = load i64*, i64** %ptses80, align 8, !dbg !3803
  %arrayidx81 = getelementptr inbounds i64, i64* %110, i64 0, !dbg !3802
  %111 = load i64, i64* %arrayidx81, align 8, !dbg !3802
  store i64 %111, i64* %sample_time.addr, align 8, !dbg !3804
  br label %if.end82, !dbg !3805

if.end82:                                         ; preds = %if.then79, %land.lhs.true71, %land.lhs.true66, %land.lhs.true62, %land.lhs.true59, %if.then57
  %112 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !3806
  %fake_index83 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %112, i32 0, i32 7, !dbg !3808
  %113 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %fake_index83, align 8, !dbg !3808
  %114 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !3809
  %nb_ptses = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %114, i32 0, i32 2, !dbg !3810
  %115 = load i32, i32* %nb_ptses, align 8, !dbg !3810
  %116 = load i64, i64* %sample_time.addr, align 8, !dbg !3811
  %117 = load i32, i32* %flags.addr, align 4, !dbg !3812
  %call84 = call i32 @ff_index_search_timestamp(%struct.AVIndexEntry* %113, i32 %115, i64 %116, i32 %117), !dbg !3813
  %conv85 = sext i32 %call84 to i64, !dbg !3813
  store i64 %conv85, i64* %sample_time.addr, align 8, !dbg !3814
  %cmp86 = icmp slt i64 %conv85, 0, !dbg !3815
  br i1 %cmp86, label %if.then88, label %if.end90, !dbg !3816

if.then88:                                        ; preds = %if.end82
  %118 = load i64, i64* %sample_time.addr, align 8, !dbg !3817
  %conv89 = trunc i64 %118 to i32, !dbg !3817
  store i32 %conv89, i32* %retval, align 4, !dbg !3818
  br label %return, !dbg !3818

if.end90:                                         ; preds = %if.end82
  %119 = load i64, i64* %sample_time.addr, align 8, !dbg !3819
  %120 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !3820
  %offsets = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %120, i32 0, i32 8, !dbg !3821
  %121 = load i8*, i8** %offsets, align 8, !dbg !3821
  %arrayidx91 = getelementptr inbounds i8, i8* %121, i64 %119, !dbg !3820
  %122 = load i8, i8* %arrayidx91, align 1, !dbg !3820
  %conv92 = sext i8 %122 to i64, !dbg !3820
  %123 = load i64, i64* %sample_time.addr, align 8, !dbg !3822
  %add = add nsw i64 %123, %conv92, !dbg !3822
  store i64 %add, i64* %sample_time.addr, align 8, !dbg !3822
  br label %if.end102, !dbg !3823

if.else93:                                        ; preds = %cond.end
  %124 = load i64, i64* %sample_time.addr, align 8, !dbg !3824
  %125 = load %struct.MXFTrack*, %struct.MXFTrack** %source_track, align 8, !dbg !3826
  %original_duration = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %125, i32 0, i32 10, !dbg !3827
  %126 = load i64, i64* %original_duration, align 8, !dbg !3827
  %sub = sub nsw i64 %126, 1, !dbg !3828
  %cmp94 = icmp sgt i64 %124, %sub, !dbg !3829
  br i1 %cmp94, label %cond.true96, label %cond.false99, !dbg !3830

cond.true96:                                      ; preds = %if.else93
  %127 = load %struct.MXFTrack*, %struct.MXFTrack** %source_track, align 8, !dbg !3831
  %original_duration97 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %127, i32 0, i32 10, !dbg !3833
  %128 = load i64, i64* %original_duration97, align 8, !dbg !3833
  %sub98 = sub nsw i64 %128, 1, !dbg !3834
  br label %cond.end100, !dbg !3835

cond.false99:                                     ; preds = %if.else93
  %129 = load i64, i64* %sample_time.addr, align 8, !dbg !3836
  br label %cond.end100, !dbg !3838

cond.end100:                                      ; preds = %cond.false99, %cond.true96
  %cond101 = phi i64 [ %sub98, %cond.true96 ], [ %129, %cond.false99 ], !dbg !3839
  store i64 %cond101, i64* %sample_time.addr, align 8, !dbg !3841
  br label %if.end102

if.end102:                                        ; preds = %cond.end100, %if.end90
  %130 = load %struct.MXFTrack*, %struct.MXFTrack** %source_track, align 8, !dbg !3842
  %wrapping = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %130, i32 0, i32 13, !dbg !3844
  %131 = load i32, i32* %wrapping, align 8, !dbg !3844
  %cmp103 = icmp eq i32 %131, 0, !dbg !3845
  br i1 %cmp103, label %if.then105, label %if.end106, !dbg !3846

if.then105:                                       ; preds = %if.end102
  %132 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3847
  %fc = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %132, i32 0, i32 10, !dbg !3848
  %133 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc, align 8, !dbg !3848
  %134 = bitcast %struct.AVFormatContext* %133 to i8*, !dbg !3847
  call void (i8*, i32, i8*, ...) @av_log(i8* %134, i32 24, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.143, i32 0, i32 0)), !dbg !3849
  br label %if.end106, !dbg !3849

if.end106:                                        ; preds = %if.then105, %if.end102
  %135 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3850
  %136 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !3852
  %137 = load i64, i64* %sample_time.addr, align 8, !dbg !3853
  %138 = load %struct.MXFTrack*, %struct.MXFTrack** %source_track, align 8, !dbg !3854
  %edit_rate107 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %138, i32 0, i32 7, !dbg !3855
  %139 = bitcast %struct.AVRational* %edit_rate107 to i64*, !dbg !3856
  %140 = load i64, i64* %139, align 4, !dbg !3856
  %call108 = call i32 @mxf_edit_unit_absolute_offset(%struct.MXFContext* %135, %struct.MXFIndexTable* %136, i64 %137, i64 %140, i64* %sample_time.addr, i64* %seekpos, %struct.MXFPartition** %partition, i32 1), !dbg !3856
  store i32 %call108, i32* %ret, align 4, !dbg !3857
  %cmp109 = icmp slt i32 %call108, 0, !dbg !3858
  br i1 %cmp109, label %if.then111, label %if.end112, !dbg !3859

if.then111:                                       ; preds = %if.end106
  %141 = load i32, i32* %ret, align 4, !dbg !3860
  store i32 %141, i32* %retval, align 4, !dbg !3861
  br label %return, !dbg !3861

if.end112:                                        ; preds = %if.end106
  %142 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3862
  %143 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3863
  %144 = load i64, i64* %sample_time.addr, align 8, !dbg !3864
  call void @ff_update_cur_dts(%struct.AVFormatContext* %142, %struct.AVStream* %143, i64 %144), !dbg !3865
  %145 = load %struct.MXFTrack*, %struct.MXFTrack** %source_track, align 8, !dbg !3866
  %wrapping113 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %145, i32 0, i32 13, !dbg !3868
  %146 = load i32, i32* %wrapping113, align 8, !dbg !3868
  %cmp114 = icmp eq i32 %146, 2, !dbg !3869
  br i1 %cmp114, label %if.then116, label %if.else127, !dbg !3870

if.then116:                                       ; preds = %if.end112
  call void @llvm.dbg.declare(metadata %struct.KLVPacket* %klv, metadata !3871, metadata !2511), !dbg !3873
  %147 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !3874
  %first_essence_klv = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %147, i32 0, i32 15, !dbg !3875
  %148 = bitcast %struct.KLVPacket* %klv to i8*, !dbg !3875
  %149 = bitcast %struct.KLVPacket* %first_essence_klv to i8*, !dbg !3875
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %148, i8* %149, i64 40, i32 8, i1 false), !dbg !3875
  %150 = load i64, i64* %seekpos, align 8, !dbg !3876
  %next_klv = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 3, !dbg !3878
  %151 = load i64, i64* %next_klv, align 8, !dbg !3878
  %length = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 2, !dbg !3879
  %152 = load i64, i64* %length, align 8, !dbg !3879
  %sub117 = sub i64 %151, %152, !dbg !3880
  %cmp118 = icmp ult i64 %150, %sub117, !dbg !3881
  br i1 %cmp118, label %if.then123, label %lor.lhs.false, !dbg !3882

lor.lhs.false:                                    ; preds = %if.then116
  %153 = load i64, i64* %seekpos, align 8, !dbg !3883
  %next_klv120 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 3, !dbg !3885
  %154 = load i64, i64* %next_klv120, align 8, !dbg !3885
  %cmp121 = icmp sge i64 %153, %154, !dbg !3886
  br i1 %cmp121, label %if.then123, label %if.end125, !dbg !3887

if.then123:                                       ; preds = %lor.lhs.false, %if.then116
  %155 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3888
  %fc124 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %155, i32 0, i32 10, !dbg !3890
  %156 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc124, align 8, !dbg !3890
  %157 = bitcast %struct.AVFormatContext* %156 to i8*, !dbg !3888
  call void (i8*, i32, i8*, ...) @av_log(i8* %157, i32 16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.144, i32 0, i32 0)), !dbg !3891
  store i32 -1094995529, i32* %retval, align 4, !dbg !3892
  br label %return, !dbg !3892

if.end125:                                        ; preds = %lor.lhs.false
  %158 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3893
  %current_klv_data126 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %158, i32 0, i32 15, !dbg !3894
  %159 = bitcast %struct.KLVPacket* %current_klv_data126 to i8*, !dbg !3895
  %160 = bitcast %struct.KLVPacket* %klv to i8*, !dbg !3895
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %159, i8* %160, i64 40, i32 8, i1 false), !dbg !3895
  br label %if.end134, !dbg !3896

if.else127:                                       ; preds = %if.end112
  %161 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3897
  %current_klv_data128 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %161, i32 0, i32 15, !dbg !3899
  %162 = bitcast %struct.KLVPacket* %.compoundliteral129 to i8*, !dbg !3900
  call void @llvm.memset.p0i8.i64(i8* %162, i8 0, i64 40, i32 8, i1 false), !dbg !3900
  %key130 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %.compoundliteral129, i32 0, i32 0, !dbg !3901
  %arrayinit.begin131 = getelementptr inbounds [16 x i8], [16 x i8]* %key130, i64 0, i64 0, !dbg !3902
  store i8 0, i8* %arrayinit.begin131, align 1, !dbg !3902
  %163 = bitcast %struct.KLVPacket* %current_klv_data128 to i8*, !dbg !3900
  %164 = bitcast %struct.KLVPacket* %.compoundliteral129 to i8*, !dbg !3900
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %163, i8* %164, i64 40, i32 8, i1 false), !dbg !3903
  br label %if.end134

if.end134:                                        ; preds = %if.else127, %if.end125
  %165 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3905
  %pb135 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %165, i32 0, i32 4, !dbg !3906
  %166 = load %struct.AVIOContext*, %struct.AVIOContext** %pb135, align 8, !dbg !3906
  %167 = load i64, i64* %seekpos, align 8, !dbg !3907
  %call136 = call i64 @avio_seek(%struct.AVIOContext* %166, i64 %167, i32 0), !dbg !3908
  br label %if.end137

if.end137:                                        ; preds = %if.end134, %if.end23
  store i32 0, i32* %i, align 4, !dbg !3909
  br label %for.cond138, !dbg !3911

for.cond138:                                      ; preds = %for.inc156, %if.end137
  %168 = load i32, i32* %i, align 4, !dbg !3912
  %169 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3915
  %nb_streams139 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %169, i32 0, i32 6, !dbg !3916
  %170 = load i32, i32* %nb_streams139, align 4, !dbg !3916
  %cmp140 = icmp ult i32 %168, %170, !dbg !3917
  br i1 %cmp140, label %for.body142, label %for.end158, !dbg !3918

for.body142:                                      ; preds = %for.cond138
  call void @llvm.dbg.declare(metadata %struct.AVStream** %cur_st, metadata !3919, metadata !2511), !dbg !3921
  %171 = load i32, i32* %i, align 4, !dbg !3922
  %idxprom143 = sext i32 %171 to i64, !dbg !3923
  %172 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !3923
  %streams144 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %172, i32 0, i32 7, !dbg !3924
  %173 = load %struct.AVStream**, %struct.AVStream*** %streams144, align 8, !dbg !3924
  %arrayidx145 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %173, i64 %idxprom143, !dbg !3923
  %174 = load %struct.AVStream*, %struct.AVStream** %arrayidx145, align 8, !dbg !3923
  store %struct.AVStream* %174, %struct.AVStream** %cur_st, align 8, !dbg !3921
  call void @llvm.dbg.declare(metadata %struct.MXFTrack** %cur_track, metadata !3925, metadata !2511), !dbg !3926
  %175 = load %struct.AVStream*, %struct.AVStream** %cur_st, align 8, !dbg !3927
  %priv_data146 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %175, i32 0, i32 3, !dbg !3928
  %176 = load i8*, i8** %priv_data146, align 8, !dbg !3928
  %177 = bitcast i8* %176 to %struct.MXFTrack*, !dbg !3927
  store %struct.MXFTrack* %177, %struct.MXFTrack** %cur_track, align 8, !dbg !3926
  %178 = load %struct.MXFTrack*, %struct.MXFTrack** %cur_track, align 8, !dbg !3929
  %tobool147 = icmp ne %struct.MXFTrack* %178, null, !dbg !3929
  br i1 %tobool147, label %if.then148, label %if.end155, !dbg !3931

if.then148:                                       ; preds = %for.body142
  call void @llvm.dbg.declare(metadata i64* %track_edit_unit, metadata !3932, metadata !2511), !dbg !3934
  %179 = load i64, i64* %sample_time.addr, align 8, !dbg !3935
  store i64 %179, i64* %track_edit_unit, align 8, !dbg !3934
  %180 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !3936
  %181 = load %struct.AVStream*, %struct.AVStream** %cur_st, align 8, !dbg !3938
  %cmp149 = icmp ne %struct.AVStream* %180, %181, !dbg !3939
  br i1 %cmp149, label %if.then151, label %if.end153, !dbg !3940

if.then151:                                       ; preds = %if.then148
  %182 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3941
  %183 = load %struct.MXFTrack*, %struct.MXFTrack** %cur_track, align 8, !dbg !3942
  %184 = load i64, i64* %seekpos, align 8, !dbg !3943
  %call152 = call i32 @mxf_get_next_track_edit_unit(%struct.MXFContext* %182, %struct.MXFTrack* %183, i64 %184, i64* %track_edit_unit), !dbg !3944
  br label %if.end153, !dbg !3944

if.end153:                                        ; preds = %if.then151, %if.then148
  %185 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !3945
  %186 = load %struct.AVStream*, %struct.AVStream** %cur_st, align 8, !dbg !3946
  %187 = load i64, i64* %track_edit_unit, align 8, !dbg !3947
  %call154 = call i64 @mxf_compute_sample_count(%struct.MXFContext* %185, %struct.AVStream* %186, i64 %187), !dbg !3948
  %188 = load %struct.MXFTrack*, %struct.MXFTrack** %cur_track, align 8, !dbg !3949
  %sample_count = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %188, i32 0, i32 9, !dbg !3950
  store i64 %call154, i64* %sample_count, align 8, !dbg !3951
  br label %if.end155, !dbg !3952

if.end155:                                        ; preds = %if.end153, %for.body142
  br label %for.inc156, !dbg !3953

for.inc156:                                       ; preds = %if.end155
  %189 = load i32, i32* %i, align 4, !dbg !3954
  %inc157 = add nsw i32 %189, 1, !dbg !3954
  store i32 %inc157, i32* %i, align 4, !dbg !3954
  br label %for.cond138, !dbg !3956, !llvm.loop !3957

for.end158:                                       ; preds = %for.cond138
  store i32 0, i32* %retval, align 4, !dbg !3959
  br label %return, !dbg !3959

return:                                           ; preds = %for.end158, %if.then123, %if.then111, %if.then88, %if.then51, %if.then21, %if.then8, %if.then
  %190 = load i32, i32* %retval, align 4, !dbg !3960
  ret i32 %190, !dbg !3960
}

declare i8* @av_default_item_name(i8*) #1

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nounwind uwtable
define internal i32 @mxf_read_sync(%struct.AVIOContext* %pb, i8* %key, i32 %size) #0 !dbg !3961 {
entry:
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %key.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %b = alloca i32, align 4
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !3964, metadata !2511), !dbg !3965
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !3966, metadata !2511), !dbg !3967
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !3968, metadata !2511), !dbg !3969
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3970, metadata !2511), !dbg !3971
  call void @llvm.dbg.declare(metadata i32* %b, metadata !3972, metadata !2511), !dbg !3973
  store i32 0, i32* %i, align 4, !dbg !3974
  br label %for.cond, !dbg !3976

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3977
  %1 = load i32, i32* %size.addr, align 4, !dbg !3980
  %cmp = icmp ult i32 %0, %1, !dbg !3981
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3982

land.rhs:                                         ; preds = %for.cond
  %2 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !3983
  %call = call i32 @avio_feof(%struct.AVIOContext* %2), !dbg !3985
  %tobool = icmp ne i32 %call, 0, !dbg !3986
  %lnot = xor i1 %tobool, true, !dbg !3986
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %3 = phi i1 [ false, %for.cond ], [ %lnot, %land.rhs ]
  br i1 %3, label %for.body, label %for.end, !dbg !3987

for.body:                                         ; preds = %land.end
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !3989
  %call1 = call i32 @avio_r8(%struct.AVIOContext* %4), !dbg !3991
  store i32 %call1, i32* %b, align 4, !dbg !3992
  %5 = load i32, i32* %b, align 4, !dbg !3993
  %6 = load i8*, i8** %key.addr, align 8, !dbg !3995
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 0, !dbg !3995
  %7 = load i8, i8* %arrayidx, align 1, !dbg !3995
  %conv = zext i8 %7 to i32, !dbg !3995
  %cmp2 = icmp eq i32 %5, %conv, !dbg !3996
  br i1 %cmp2, label %if.then, label %if.else, !dbg !3997

if.then:                                          ; preds = %for.body
  store i32 0, i32* %i, align 4, !dbg !3998
  br label %if.end9, !dbg !3999

if.else:                                          ; preds = %for.body
  %8 = load i32, i32* %b, align 4, !dbg !4000
  %9 = load i32, i32* %i, align 4, !dbg !4002
  %idxprom = sext i32 %9 to i64, !dbg !4003
  %10 = load i8*, i8** %key.addr, align 8, !dbg !4003
  %arrayidx4 = getelementptr inbounds i8, i8* %10, i64 %idxprom, !dbg !4003
  %11 = load i8, i8* %arrayidx4, align 1, !dbg !4003
  %conv5 = zext i8 %11 to i32, !dbg !4003
  %cmp6 = icmp ne i32 %8, %conv5, !dbg !4004
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !4005

if.then8:                                         ; preds = %if.else
  store i32 -1, i32* %i, align 4, !dbg !4006
  br label %if.end, !dbg !4007

if.end:                                           ; preds = %if.then8, %if.else
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  br label %for.inc, !dbg !4008

for.inc:                                          ; preds = %if.end9
  %12 = load i32, i32* %i, align 4, !dbg !4009
  %inc = add nsw i32 %12, 1, !dbg !4009
  store i32 %inc, i32* %i, align 4, !dbg !4009
  br label %for.cond, !dbg !4011, !llvm.loop !4012

for.end:                                          ; preds = %land.end
  %13 = load i32, i32* %i, align 4, !dbg !4014
  %14 = load i32, i32* %size.addr, align 4, !dbg !4015
  %cmp10 = icmp eq i32 %13, %14, !dbg !4016
  %conv11 = zext i1 %cmp10 to i32, !dbg !4016
  ret i32 %conv11, !dbg !4017
}

declare void @av_log(i8*, i32, i8*, ...) #1

declare i64 @avio_seek(%struct.AVIOContext*, i64, i32) #1

; Function Attrs: nounwind uwtable
define internal void @mxf_read_random_index_pack(%struct.AVFormatContext* %s) #0 !dbg !4018 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %length = alloca i32, align 4
  %file_size = alloca i64, align 8
  %max_rip_length = alloca i64, align 8
  %min_rip_length = alloca i64, align 8
  %klv = alloca %struct.KLVPacket, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !4021, metadata !2511), !dbg !4022
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !4023, metadata !2511), !dbg !4024
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4025
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !4026
  %1 = load i8*, i8** %priv_data, align 8, !dbg !4026
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !4025
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !4024
  call void @llvm.dbg.declare(metadata i32* %length, metadata !4027, metadata !2511), !dbg !4028
  call void @llvm.dbg.declare(metadata i64* %file_size, metadata !4029, metadata !2511), !dbg !4030
  call void @llvm.dbg.declare(metadata i64* %max_rip_length, metadata !4031, metadata !2511), !dbg !4032
  call void @llvm.dbg.declare(metadata i64* %min_rip_length, metadata !4033, metadata !2511), !dbg !4034
  call void @llvm.dbg.declare(metadata %struct.KLVPacket* %klv, metadata !4035, metadata !2511), !dbg !4036
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4037
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 4, !dbg !4039
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4039
  %seekable = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %4, i32 0, i32 19, !dbg !4040
  %5 = load i32, i32* %seekable, align 8, !dbg !4040
  %and = and i32 %5, 1, !dbg !4041
  %tobool = icmp ne i32 %and, 0, !dbg !4041
  br i1 %tobool, label %if.end, label %if.then, !dbg !4042

if.then:                                          ; preds = %entry
  br label %return, !dbg !4043

if.end:                                           ; preds = %entry
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4044
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %6, i32 0, i32 4, !dbg !4045
  %7 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !4045
  %call = call i64 @avio_size(%struct.AVIOContext* %7), !dbg !4046
  store i64 %call, i64* %file_size, align 8, !dbg !4047
  %8 = load i64, i64* %file_size, align 8, !dbg !4048
  %9 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !4049
  %run_in = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %9, i32 0, i32 16, !dbg !4050
  %10 = load i32, i32* %run_in, align 8, !dbg !4050
  %conv = sext i32 %10 to i64, !dbg !4049
  %sub = sub nsw i64 %8, %conv, !dbg !4051
  %div = sdiv i64 %sub, 105, !dbg !4052
  %mul = mul nsw i64 %div, 12, !dbg !4053
  %add = add nsw i64 %mul, 28, !dbg !4054
  store i64 %add, i64* %max_rip_length, align 8, !dbg !4055
  %11 = load i64, i64* %max_rip_length, align 8, !dbg !4056
  %cmp = icmp sgt i64 %11, 2147483647, !dbg !4057
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4058

cond.true:                                        ; preds = %if.end
  br label %cond.end, !dbg !4059

cond.false:                                       ; preds = %if.end
  %12 = load i64, i64* %max_rip_length, align 8, !dbg !4061
  br label %cond.end, !dbg !4063

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 2147483647, %cond.true ], [ %12, %cond.false ], !dbg !4064
  store i64 %cond, i64* %max_rip_length, align 8, !dbg !4066
  store i64 45, i64* %min_rip_length, align 8, !dbg !4067
  %13 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4068
  %pb3 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %13, i32 0, i32 4, !dbg !4069
  %14 = load %struct.AVIOContext*, %struct.AVIOContext** %pb3, align 8, !dbg !4069
  %15 = load i64, i64* %file_size, align 8, !dbg !4070
  %sub4 = sub nsw i64 %15, 4, !dbg !4071
  %call5 = call i64 @avio_seek(%struct.AVIOContext* %14, i64 %sub4, i32 0), !dbg !4072
  %16 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4073
  %pb6 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %16, i32 0, i32 4, !dbg !4074
  %17 = load %struct.AVIOContext*, %struct.AVIOContext** %pb6, align 8, !dbg !4074
  %call7 = call i32 @avio_rb32(%struct.AVIOContext* %17), !dbg !4075
  store i32 %call7, i32* %length, align 4, !dbg !4076
  %18 = load i32, i32* %length, align 4, !dbg !4077
  %conv8 = zext i32 %18 to i64, !dbg !4077
  %19 = load i64, i64* %min_rip_length, align 8, !dbg !4079
  %cmp9 = icmp slt i64 %conv8, %19, !dbg !4080
  br i1 %cmp9, label %if.then14, label %lor.lhs.false, !dbg !4081

lor.lhs.false:                                    ; preds = %cond.end
  %20 = load i32, i32* %length, align 4, !dbg !4082
  %conv11 = zext i32 %20 to i64, !dbg !4082
  %21 = load i64, i64* %max_rip_length, align 8, !dbg !4084
  %cmp12 = icmp sgt i64 %conv11, %21, !dbg !4085
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !4086

if.then14:                                        ; preds = %lor.lhs.false, %cond.end
  br label %end, !dbg !4087

if.end15:                                         ; preds = %lor.lhs.false
  %22 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4088
  %pb16 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %22, i32 0, i32 4, !dbg !4089
  %23 = load %struct.AVIOContext*, %struct.AVIOContext** %pb16, align 8, !dbg !4089
  %24 = load i64, i64* %file_size, align 8, !dbg !4090
  %25 = load i32, i32* %length, align 4, !dbg !4091
  %conv17 = zext i32 %25 to i64, !dbg !4091
  %sub18 = sub nsw i64 %24, %conv17, !dbg !4092
  %call19 = call i64 @avio_seek(%struct.AVIOContext* %23, i64 %sub18, i32 0), !dbg !4093
  %26 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4094
  %pb20 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %26, i32 0, i32 4, !dbg !4096
  %27 = load %struct.AVIOContext*, %struct.AVIOContext** %pb20, align 8, !dbg !4096
  %call21 = call i32 @klv_read_packet(%struct.KLVPacket* %klv, %struct.AVIOContext* %27), !dbg !4097
  %cmp22 = icmp slt i32 %call21, 0, !dbg !4098
  br i1 %cmp22, label %if.then33, label %lor.lhs.false24, !dbg !4099

lor.lhs.false24:                                  ; preds = %if.end15
  %key = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !4100
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %key, i32 0, i32 0, !dbg !4101
  %call25 = call i32 @memcmp(i8* %arraydecay, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @mxf_random_index_pack_key, i32 0, i32 0), i64 16) #9, !dbg !4102
  %tobool26 = icmp ne i32 %call25, 0, !dbg !4102
  br i1 %tobool26, label %if.then33, label %lor.lhs.false27, !dbg !4103

lor.lhs.false27:                                  ; preds = %lor.lhs.false24
  %length28 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 2, !dbg !4104
  %28 = load i64, i64* %length28, align 8, !dbg !4104
  %29 = load i32, i32* %length, align 4, !dbg !4105
  %sub29 = sub i32 %29, 20, !dbg !4106
  %conv30 = zext i32 %sub29 to i64, !dbg !4105
  %cmp31 = icmp ne i64 %28, %conv30, !dbg !4107
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !4108

if.then33:                                        ; preds = %lor.lhs.false27, %lor.lhs.false24, %if.end15
  br label %end, !dbg !4109

if.end34:                                         ; preds = %lor.lhs.false27
  %30 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4110
  %pb35 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %30, i32 0, i32 4, !dbg !4111
  %31 = load %struct.AVIOContext*, %struct.AVIOContext** %pb35, align 8, !dbg !4111
  %length36 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 2, !dbg !4112
  %32 = load i64, i64* %length36, align 8, !dbg !4112
  %sub37 = sub i64 %32, 12, !dbg !4113
  %call38 = call i64 @avio_skip(%struct.AVIOContext* %31, i64 %sub37), !dbg !4114
  %33 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4115
  %pb39 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %33, i32 0, i32 4, !dbg !4116
  %34 = load %struct.AVIOContext*, %struct.AVIOContext** %pb39, align 8, !dbg !4116
  %call40 = call i64 @avio_rb64(%struct.AVIOContext* %34), !dbg !4117
  %35 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !4118
  %footer_partition = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %35, i32 0, i32 14, !dbg !4119
  store i64 %call40, i64* %footer_partition, align 8, !dbg !4120
  %36 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !4121
  %run_in41 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %36, i32 0, i32 16, !dbg !4123
  %37 = load i32, i32* %run_in41, align 8, !dbg !4123
  %conv42 = sext i32 %37 to i64, !dbg !4121
  %38 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !4124
  %footer_partition43 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %38, i32 0, i32 14, !dbg !4125
  %39 = load i64, i64* %footer_partition43, align 8, !dbg !4125
  %add44 = add i64 %conv42, %39, !dbg !4126
  %40 = load i64, i64* %file_size, align 8, !dbg !4127
  %cmp45 = icmp uge i64 %add44, %40, !dbg !4128
  br i1 %cmp45, label %if.then47, label %if.end49, !dbg !4129

if.then47:                                        ; preds = %if.end34
  %41 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4130
  %42 = bitcast %struct.AVFormatContext* %41 to i8*, !dbg !4130
  call void (i8*, i32, i8*, ...) @av_log(i8* %42, i32 24, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.11, i32 0, i32 0)), !dbg !4132
  %43 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !4133
  %footer_partition48 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %43, i32 0, i32 14, !dbg !4134
  store i64 0, i64* %footer_partition48, align 8, !dbg !4135
  br label %if.end49, !dbg !4136

if.end49:                                         ; preds = %if.then47, %if.end34
  br label %end, !dbg !4137

end:                                              ; preds = %if.end49, %if.then33, %if.then14
  %44 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !4139
  %pb50 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %44, i32 0, i32 4, !dbg !4140
  %45 = load %struct.AVIOContext*, %struct.AVIOContext** %pb50, align 8, !dbg !4140
  %46 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !4141
  %run_in51 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %46, i32 0, i32 16, !dbg !4142
  %47 = load i32, i32* %run_in51, align 8, !dbg !4142
  %conv52 = sext i32 %47 to i64, !dbg !4141
  %call53 = call i64 @avio_seek(%struct.AVIOContext* %45, i64 %conv52, i32 0), !dbg !4143
  br label %return, !dbg !4144

return:                                           ; preds = %end, %if.then
  ret void, !dbg !4145
}

declare i32 @avio_feof(%struct.AVIOContext*) #1

; Function Attrs: nounwind uwtable
define internal i32 @klv_read_packet(%struct.KLVPacket* %klv, %struct.AVIOContext* %pb) #0 !dbg !4146 {
entry:
  %s.addr.i15 = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i15, metadata !2585, metadata !2511), !dbg !4149
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2585, metadata !2511), !dbg !4151
  %retval = alloca i32, align 4
  %klv.addr = alloca %struct.KLVPacket*, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %length = alloca i64, align 8
  %pos = alloca i64, align 8
  store %struct.KLVPacket* %klv, %struct.KLVPacket** %klv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KLVPacket** %klv.addr, metadata !4153, metadata !2511), !dbg !4154
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !4155, metadata !2511), !dbg !4156
  call void @llvm.dbg.declare(metadata i64* %length, metadata !4157, metadata !2511), !dbg !4158
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !4159, metadata !2511), !dbg !4160
  %0 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4161
  %call = call i32 @mxf_read_sync(%struct.AVIOContext* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @mxf_klv_key, i32 0, i32 0), i32 4), !dbg !4163
  %tobool = icmp ne i32 %call, 0, !dbg !4163
  br i1 %tobool, label %if.end, label %if.then, !dbg !4164

if.then:                                          ; preds = %entry
  store i32 -1094995529, i32* %retval, align 4, !dbg !4165
  br label %return, !dbg !4165

if.end:                                           ; preds = %entry
  %1 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4166
  store %struct.AVIOContext* %1, %struct.AVIOContext** %s.addr.i, align 8, !dbg !4167
  %2 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !4168
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %2, i64 0, i32 1) #8, !dbg !4169
  %sub = sub nsw i64 %call.i, 4, !dbg !4170
  %3 = load %struct.KLVPacket*, %struct.KLVPacket** %klv.addr, align 8, !dbg !4171
  %offset = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %3, i32 0, i32 1, !dbg !4172
  store i64 %sub, i64* %offset, align 8, !dbg !4173
  %4 = load %struct.KLVPacket*, %struct.KLVPacket** %klv.addr, align 8, !dbg !4174
  %key = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %4, i32 0, i32 0, !dbg !4175
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %key, i32 0, i32 0, !dbg !4176
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @mxf_klv_key, i32 0, i32 0), i64 4, i32 1, i1 false), !dbg !4176
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4177
  %6 = load %struct.KLVPacket*, %struct.KLVPacket** %klv.addr, align 8, !dbg !4178
  %key2 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %6, i32 0, i32 0, !dbg !4179
  %arraydecay3 = getelementptr inbounds [16 x i8], [16 x i8]* %key2, i32 0, i32 0, !dbg !4178
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay3, i64 4, !dbg !4180
  %call4 = call i32 @avio_read(%struct.AVIOContext* %5, i8* %add.ptr, i32 12), !dbg !4181
  %7 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4182
  %call5 = call i64 @klv_decode_ber_length(%struct.AVIOContext* %7), !dbg !4183
  store i64 %call5, i64* %length, align 8, !dbg !4184
  %8 = load i64, i64* %length, align 8, !dbg !4185
  %cmp = icmp slt i64 %8, 0, !dbg !4187
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !4188

if.then6:                                         ; preds = %if.end
  %9 = load i64, i64* %length, align 8, !dbg !4189
  %conv = trunc i64 %9 to i32, !dbg !4189
  store i32 %conv, i32* %retval, align 4, !dbg !4190
  br label %return, !dbg !4190

if.end7:                                          ; preds = %if.end
  %10 = load i64, i64* %length, align 8, !dbg !4191
  %11 = load %struct.KLVPacket*, %struct.KLVPacket** %klv.addr, align 8, !dbg !4192
  %length8 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %11, i32 0, i32 2, !dbg !4193
  store i64 %10, i64* %length8, align 8, !dbg !4194
  %12 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !4195
  store %struct.AVIOContext* %12, %struct.AVIOContext** %s.addr.i15, align 8, !dbg !4196
  %13 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i15, align 8, !dbg !4197
  %call.i16 = call i64 @avio_seek(%struct.AVIOContext* %13, i64 0, i32 1) #8, !dbg !4198
  store i64 %call.i16, i64* %pos, align 8, !dbg !4199
  %14 = load i64, i64* %pos, align 8, !dbg !4200
  %15 = load i64, i64* %length, align 8, !dbg !4202
  %sub10 = sub nsw i64 9223372036854775807, %15, !dbg !4203
  %cmp11 = icmp sgt i64 %14, %sub10, !dbg !4204
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !4205

if.then13:                                        ; preds = %if.end7
  store i32 -1094995529, i32* %retval, align 4, !dbg !4206
  br label %return, !dbg !4206

if.end14:                                         ; preds = %if.end7
  %16 = load i64, i64* %pos, align 8, !dbg !4207
  %17 = load i64, i64* %length, align 8, !dbg !4208
  %add = add nsw i64 %16, %17, !dbg !4209
  %18 = load %struct.KLVPacket*, %struct.KLVPacket** %klv.addr, align 8, !dbg !4210
  %next_klv = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %18, i32 0, i32 3, !dbg !4211
  store i64 %add, i64* %next_klv, align 8, !dbg !4212
  store i32 0, i32* %retval, align 4, !dbg !4213
  br label %return, !dbg !4213

return:                                           ; preds = %if.end14, %if.then13, %if.then6, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !4214
  ret i32 %19, !dbg !4214
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_parse_handle_partition_or_eof(%struct.MXFContext* %mxf) #0 !dbg !4215 {
entry:
  %mxf.addr = alloca %struct.MXFContext*, align 8
  store %struct.MXFContext* %mxf, %struct.MXFContext** %mxf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf.addr, metadata !4218, metadata !2511), !dbg !4219
  %0 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4220
  %parsing_backward = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %0, i32 0, i32 18, !dbg !4221
  %1 = load i32, i32* %parsing_backward, align 8, !dbg !4221
  %tobool = icmp ne i32 %1, 0, !dbg !4220
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4220

cond.true:                                        ; preds = %entry
  %2 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4222
  %call = call i32 @mxf_seek_to_previous_partition(%struct.MXFContext* %2), !dbg !4224
  br label %cond.end, !dbg !4225

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4226

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ 1, %cond.false ], !dbg !4228
  ret i32 %cond, !dbg !4230
}

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define internal i32 @mxf_parse_handle_essence(%struct.MXFContext* %mxf) #0 !dbg !4231 {
entry:
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2585, metadata !2511), !dbg !4232
  %retval = alloca i32, align 4
  %mxf.addr = alloca %struct.MXFContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %ret = alloca i64, align 8
  store %struct.MXFContext* %mxf, %struct.MXFContext** %mxf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf.addr, metadata !4236, metadata !2511), !dbg !4237
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !4238, metadata !2511), !dbg !4239
  %0 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4240
  %fc = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %0, i32 0, i32 10, !dbg !4241
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc, align 8, !dbg !4241
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %1, i32 0, i32 4, !dbg !4242
  %2 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !4242
  store %struct.AVIOContext* %2, %struct.AVIOContext** %pb, align 8, !dbg !4239
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !4243, metadata !2511), !dbg !4244
  %3 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4245
  %parsing_backward = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %3, i32 0, i32 18, !dbg !4246
  %4 = load i32, i32* %parsing_backward, align 8, !dbg !4246
  %tobool = icmp ne i32 %4, 0, !dbg !4245
  br i1 %tobool, label %if.then, label %if.else, !dbg !4247

if.then:                                          ; preds = %entry
  %5 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4248
  %call = call i32 @mxf_seek_to_previous_partition(%struct.MXFContext* %5), !dbg !4250
  store i32 %call, i32* %retval, align 4, !dbg !4251
  br label %return, !dbg !4251

if.else:                                          ; preds = %entry
  %6 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4252
  %footer_partition = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %6, i32 0, i32 14, !dbg !4254
  %7 = load i64, i64* %footer_partition, align 8, !dbg !4254
  %tobool2 = icmp ne i64 %7, 0, !dbg !4252
  br i1 %tobool2, label %if.end, label %if.then3, !dbg !4255

if.then3:                                         ; preds = %if.else
  %8 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4256
  %fc4 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %8, i32 0, i32 10, !dbg !4258
  %9 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc4, align 8, !dbg !4258
  %10 = bitcast %struct.AVFormatContext* %9 to i8*, !dbg !4256
  call void (i8*, i32, i8*, ...) @av_log(i8* %10, i32 56, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.29, i32 0, i32 0)), !dbg !4259
  store i32 0, i32* %retval, align 4, !dbg !4260
  br label %return, !dbg !4260

if.end:                                           ; preds = %if.else
  %11 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4261
  %fc5 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %11, i32 0, i32 10, !dbg !4262
  %12 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc5, align 8, !dbg !4262
  %13 = bitcast %struct.AVFormatContext* %12 to i8*, !dbg !4261
  call void (i8*, i32, i8*, ...) @av_log(i8* %13, i32 56, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.30, i32 0, i32 0)), !dbg !4263
  %14 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4264
  store %struct.AVIOContext* %14, %struct.AVIOContext** %s.addr.i, align 8, !dbg !4265
  %15 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !4266
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %15, i64 0, i32 1) #8, !dbg !4267
  %16 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4268
  %last_forward_tell = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %16, i32 0, i32 19, !dbg !4269
  store i64 %call.i, i64* %last_forward_tell, align 8, !dbg !4270
  %17 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4271
  %seekable = getelementptr inbounds %struct.AVIOContext, %struct.AVIOContext* %17, i32 0, i32 19, !dbg !4273
  %18 = load i32, i32* %seekable, align 8, !dbg !4273
  %and = and i32 %18, 1, !dbg !4274
  %tobool7 = icmp ne i32 %and, 0, !dbg !4274
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !4275

if.then8:                                         ; preds = %if.end
  %19 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4276
  %fc9 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %19, i32 0, i32 10, !dbg !4278
  %20 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc9, align 8, !dbg !4278
  %21 = bitcast %struct.AVFormatContext* %20 to i8*, !dbg !4276
  call void (i8*, i32, i8*, ...) @av_log(i8* %21, i32 32, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.31, i32 0, i32 0)), !dbg !4279
  store i32 -1, i32* %retval, align 4, !dbg !4280
  br label %return, !dbg !4280

if.end10:                                         ; preds = %if.end
  %22 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4281
  %23 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4283
  %run_in = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %23, i32 0, i32 16, !dbg !4284
  %24 = load i32, i32* %run_in, align 8, !dbg !4284
  %conv = sext i32 %24 to i64, !dbg !4283
  %25 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4285
  %footer_partition11 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %25, i32 0, i32 14, !dbg !4286
  %26 = load i64, i64* %footer_partition11, align 8, !dbg !4286
  %add = add i64 %conv, %26, !dbg !4287
  %call12 = call i64 @avio_seek(%struct.AVIOContext* %22, i64 %add, i32 0), !dbg !4288
  store i64 %call12, i64* %ret, align 8, !dbg !4289
  %cmp = icmp slt i64 %call12, 0, !dbg !4290
  br i1 %cmp, label %if.then14, label %if.end21, !dbg !4291

if.then14:                                        ; preds = %if.end10
  %27 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4292
  %fc15 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %27, i32 0, i32 10, !dbg !4294
  %28 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc15, align 8, !dbg !4294
  %29 = bitcast %struct.AVFormatContext* %28 to i8*, !dbg !4292
  %30 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4295
  %run_in16 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %30, i32 0, i32 16, !dbg !4296
  %31 = load i32, i32* %run_in16, align 8, !dbg !4296
  %conv17 = sext i32 %31 to i64, !dbg !4295
  %32 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4297
  %footer_partition18 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %32, i32 0, i32 14, !dbg !4298
  %33 = load i64, i64* %footer_partition18, align 8, !dbg !4298
  %add19 = add i64 %conv17, %33, !dbg !4299
  %34 = load i64, i64* %ret, align 8, !dbg !4300
  call void (i8*, i32, i8*, ...) @av_log(i8* %29, i32 16, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.32, i32 0, i32 0), i64 %add19, i64 %34), !dbg !4301
  %35 = load i64, i64* %ret, align 8, !dbg !4302
  %conv20 = trunc i64 %35 to i32, !dbg !4302
  store i32 %conv20, i32* %retval, align 4, !dbg !4303
  br label %return, !dbg !4303

if.end21:                                         ; preds = %if.end10
  %36 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4304
  %current_partition = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %36, i32 0, i32 17, !dbg !4305
  store %struct.MXFPartition* null, %struct.MXFPartition** %current_partition, align 8, !dbg !4306
  %37 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4307
  %parsing_backward22 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %37, i32 0, i32 18, !dbg !4308
  store i32 1, i32* %parsing_backward22, align 8, !dbg !4309
  br label %if.end23

if.end23:                                         ; preds = %if.end21
  store i32 1, i32* %retval, align 4, !dbg !4310
  br label %return, !dbg !4310

return:                                           ; preds = %if.end23, %if.then14, %if.then8, %if.then3, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !4311
  ret i32 %38, !dbg !4311
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_is_partition_pack_key(i8* %key) #0 !dbg !4312 {
entry:
  %key.addr = alloca i8*, align 8
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !4315, metadata !2511), !dbg !4316
  %0 = load i8*, i8** %key.addr, align 8, !dbg !4317
  %call = call i32 @memcmp(i8* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @mxf_header_partition_pack_key, i32 0, i32 0), i64 13) #9, !dbg !4318
  %tobool = icmp ne i32 %call, 0, !dbg !4318
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !4319

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %key.addr, align 8, !dbg !4320
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 13, !dbg !4320
  %2 = load i8, i8* %arrayidx, align 1, !dbg !4320
  %conv = zext i8 %2 to i32, !dbg !4320
  %cmp = icmp sge i32 %conv, 2, !dbg !4321
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4322

land.rhs:                                         ; preds = %land.lhs.true
  %3 = load i8*, i8** %key.addr, align 8, !dbg !4323
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 13, !dbg !4323
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !4323
  %conv3 = zext i8 %4 to i32, !dbg !4323
  %cmp4 = icmp sle i32 %conv3, 4, !dbg !4325
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %5 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp4, %land.rhs ]
  %land.ext = zext i1 %5 to i32, !dbg !4326
  ret i32 %land.ext, !dbg !4328
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_parse_klv(%struct.MXFContext* %mxf, %struct.KLVPacket* byval align 8 %klv, i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* %read, i32 %ctx_size, i32 %type) #0 !dbg !4329 {
entry:
  %s.addr.i21 = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i21, metadata !2585, metadata !2511), !dbg !4332
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2585, metadata !2511), !dbg !4337
  %retval = alloca i32, align 4
  %mxf.addr = alloca %struct.MXFContext*, align 8
  %read.addr = alloca i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)*, align 8
  %ctx_size.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %s = alloca %struct.AVFormatContext*, align 8
  %res = alloca i32, align 4
  %next = alloca i64, align 8
  store %struct.MXFContext* %mxf, %struct.MXFContext** %mxf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf.addr, metadata !4339, metadata !2511), !dbg !4340
  call void @llvm.dbg.declare(metadata %struct.KLVPacket* %klv, metadata !4341, metadata !2511), !dbg !4342
  store i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* %read, i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)** %read.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)** %read.addr, metadata !4343, metadata !2511), !dbg !4344
  store i32 %ctx_size, i32* %ctx_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ctx_size.addr, metadata !4345, metadata !2511), !dbg !4346
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !4347, metadata !2511), !dbg !4348
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s, metadata !4349, metadata !2511), !dbg !4350
  %0 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4351
  %fc = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %0, i32 0, i32 10, !dbg !4352
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc, align 8, !dbg !4352
  store %struct.AVFormatContext* %1, %struct.AVFormatContext** %s, align 8, !dbg !4350
  call void @llvm.dbg.declare(metadata i32* %res, metadata !4353, metadata !2511), !dbg !4354
  %key = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !4355
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %key, i64 0, i64 5, !dbg !4356
  %2 = load i8, i8* %arrayidx, align 1, !dbg !4356
  %conv = zext i8 %2 to i32, !dbg !4356
  %cmp = icmp eq i32 %conv, 83, !dbg !4357
  br i1 %cmp, label %if.then, label %if.else, !dbg !4358

if.then:                                          ; preds = %entry
  %3 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4359
  %4 = load i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)*, i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)** %read.addr, align 8, !dbg !4361
  %5 = load i32, i32* %ctx_size.addr, align 4, !dbg !4362
  %6 = load i32, i32* %type.addr, align 4, !dbg !4363
  %call = call i32 @mxf_read_local_tags(%struct.MXFContext* %3, %struct.KLVPacket* %klv, i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* %4, i32 %5, i32 %6), !dbg !4364
  store i32 %call, i32* %res, align 4, !dbg !4365
  br label %if.end16, !dbg !4366

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %next, metadata !4367, metadata !2511), !dbg !4368
  %7 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s, align 8, !dbg !4369
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %7, i32 0, i32 4, !dbg !4370
  %8 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !4370
  store %struct.AVIOContext* %8, %struct.AVIOContext** %s.addr.i, align 8, !dbg !4371
  %9 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !4372
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %9, i64 0, i32 1) #8, !dbg !4373
  %length = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 2, !dbg !4374
  %10 = load i64, i64* %length, align 8, !dbg !4374
  %add = add i64 %call.i, %10, !dbg !4375
  store i64 %add, i64* %next, align 8, !dbg !4368
  %11 = load i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)*, i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)** %read.addr, align 8, !dbg !4376
  %12 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4377
  %13 = bitcast %struct.MXFContext* %12 to i8*, !dbg !4377
  %14 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s, align 8, !dbg !4378
  %pb3 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %14, i32 0, i32 4, !dbg !4379
  %15 = load %struct.AVIOContext*, %struct.AVIOContext** %pb3, align 8, !dbg !4379
  %length4 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 2, !dbg !4380
  %16 = load i64, i64* %length4, align 8, !dbg !4380
  %conv5 = trunc i64 %16 to i32, !dbg !4381
  %key6 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !4382
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %key6, i32 0, i32 0, !dbg !4383
  %offset = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 1, !dbg !4384
  %17 = load i64, i64* %offset, align 8, !dbg !4384
  %call7 = call i32 %11(i8* %13, %struct.AVIOContext* %15, i32 0, i32 %conv5, i8* %arraydecay, i64 %17), !dbg !4376
  store i32 %call7, i32* %res, align 4, !dbg !4385
  %18 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s, align 8, !dbg !4386
  %pb8 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %18, i32 0, i32 4, !dbg !4387
  %19 = load %struct.AVIOContext*, %struct.AVIOContext** %pb8, align 8, !dbg !4387
  store %struct.AVIOContext* %19, %struct.AVIOContext** %s.addr.i21, align 8, !dbg !4388
  %20 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i21, align 8, !dbg !4389
  %call.i22 = call i64 @avio_seek(%struct.AVIOContext* %20, i64 0, i32 1) #8, !dbg !4390
  %21 = load i64, i64* %next, align 8, !dbg !4391
  %cmp10 = icmp ugt i64 %call.i22, %21, !dbg !4392
  br i1 %cmp10, label %if.then12, label %if.end, !dbg !4393

if.then12:                                        ; preds = %if.else
  %22 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s, align 8, !dbg !4394
  %23 = bitcast %struct.AVFormatContext* %22 to i8*, !dbg !4394
  %offset13 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 1, !dbg !4396
  %24 = load i64, i64* %offset13, align 8, !dbg !4396
  call void (i8*, i32, i8*, ...) @av_log(i8* %23, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.58, i32 0, i32 0), i64 %24), !dbg !4397
  store i32 -1094995529, i32* %retval, align 4, !dbg !4398
  br label %return, !dbg !4398

if.end:                                           ; preds = %if.else
  %25 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s, align 8, !dbg !4399
  %pb14 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %25, i32 0, i32 4, !dbg !4400
  %26 = load %struct.AVIOContext*, %struct.AVIOContext** %pb14, align 8, !dbg !4400
  %27 = load i64, i64* %next, align 8, !dbg !4401
  %call15 = call i64 @avio_seek(%struct.AVIOContext* %26, i64 %27, i32 0), !dbg !4402
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then
  %28 = load i32, i32* %res, align 4, !dbg !4403
  %cmp17 = icmp slt i32 %28, 0, !dbg !4405
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !4406

if.then19:                                        ; preds = %if.end16
  %29 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s, align 8, !dbg !4407
  %30 = bitcast %struct.AVFormatContext* %29 to i8*, !dbg !4407
  call void (i8*, i32, i8*, ...) @av_log(i8* %30, i32 16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.59, i32 0, i32 0)), !dbg !4409
  %31 = load i32, i32* %res, align 4, !dbg !4410
  store i32 %31, i32* %retval, align 4, !dbg !4411
  br label %return, !dbg !4411

if.end20:                                         ; preds = %if.end16
  store i32 0, i32* %retval, align 4, !dbg !4412
  br label %return, !dbg !4412

return:                                           ; preds = %if.end20, %if.then19, %if.then12
  %32 = load i32, i32* %retval, align 4, !dbg !4413
  ret i32 %32, !dbg !4413
}

declare i64 @avio_skip(%struct.AVIOContext*, i64) #1

; Function Attrs: nounwind uwtable
define internal i32 @mxf_parse_structural_metadata(%struct.MXFContext* %mxf) #0 !dbg !4414 {
entry:
  %retval.i = alloca %struct.AVRational, align 4
  %q.i = alloca %struct.AVRational, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %q.i, metadata !3576, metadata !2511), !dbg !4415
  %r.i = alloca %struct.AVRational, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %r.i, metadata !3583, metadata !2511), !dbg !4424
  %retval = alloca i32, align 4
  %mxf.addr = alloca %struct.MXFContext*, align 8
  %material_package = alloca %struct.MXFPackage*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %ret = alloca i32, align 4
  %source_package = alloca %struct.MXFPackage*, align 8
  %material_track = alloca %struct.MXFTrack*, align 8
  %source_track = alloca %struct.MXFTrack*, align 8
  %temp_track = alloca %struct.MXFTrack*, align 8
  %descriptor = alloca %struct.MXFDescriptor*, align 8
  %component = alloca %struct.MXFStructuralComponent*, align 8
  %mxf_tc = alloca %struct.MXFTrack.1*, align 8
  %essence_container_ul = alloca [16 x i8]*, align 8
  %codec_ul = alloca %struct.MXFCodecUL*, align 8
  %container_ul = alloca %struct.MXFCodecUL*, align 8
  %pix_fmt_ul = alloca %struct.MXFCodecUL*, align 8
  %st = alloca %struct.AVStream*, align 8
  %tc = alloca %struct.AVTimecode, align 4
  %flags = alloca i32, align 4
  %essence_data = alloca %struct.MXFEssenceContainerData*, align 8
  %.compoundliteral = alloca %struct.AVRational, align 4
  %metadata298 = alloca %struct.MXFMetadataSet*, align 8
  %agg.tmp = alloca %struct.AVRational, align 4
  %type680 = alloca i32, align 4
  %coded_width = alloca i32, align 4
  store %struct.MXFContext* %mxf, %struct.MXFContext** %mxf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf.addr, metadata !4425, metadata !2511), !dbg !4426
  call void @llvm.dbg.declare(metadata %struct.MXFPackage** %material_package, metadata !4427, metadata !2511), !dbg !4428
  store %struct.MXFPackage* null, %struct.MXFPackage** %material_package, align 8, !dbg !4428
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4429, metadata !2511), !dbg !4430
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4431, metadata !2511), !dbg !4432
  call void @llvm.dbg.declare(metadata i32* %k, metadata !4433, metadata !2511), !dbg !4434
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4435, metadata !2511), !dbg !4436
  %0 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4437
  %fc = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %0, i32 0, i32 10, !dbg !4438
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc, align 8, !dbg !4438
  %2 = bitcast %struct.AVFormatContext* %1 to i8*, !dbg !4437
  %3 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4439
  %metadata_sets_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %3, i32 0, i32 9, !dbg !4440
  %4 = load i32, i32* %metadata_sets_count, align 8, !dbg !4440
  call void (i8*, i32, i8*, ...) @av_log(i8* %2, i32 56, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.64, i32 0, i32 0), i32 %4), !dbg !4441
  store i32 0, i32* %i, align 4, !dbg !4442
  br label %for.cond, !dbg !4444

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %i, align 4, !dbg !4445
  %6 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4448
  %packages_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %6, i32 0, i32 5, !dbg !4449
  %7 = load i32, i32* %packages_count, align 8, !dbg !4449
  %cmp = icmp slt i32 %5, %7, !dbg !4450
  br i1 %cmp, label %for.body, label %for.end, !dbg !4451

for.body:                                         ; preds = %for.cond
  %8 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4452
  %9 = load i32, i32* %i, align 4, !dbg !4454
  %idxprom = sext i32 %9 to i64, !dbg !4455
  %10 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4455
  %packages_refs = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %10, i32 0, i32 4, !dbg !4456
  %11 = load [16 x i8]*, [16 x i8]** %packages_refs, align 8, !dbg !4456
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %11, i64 %idxprom, !dbg !4455
  %call = call i8* @mxf_resolve_strong_ref(%struct.MXFContext* %8, [16 x i8]* %arrayidx, i32 1), !dbg !4457
  %12 = bitcast i8* %call to %struct.MXFPackage*, !dbg !4457
  store %struct.MXFPackage* %12, %struct.MXFPackage** %material_package, align 8, !dbg !4458
  %13 = load %struct.MXFPackage*, %struct.MXFPackage** %material_package, align 8, !dbg !4459
  %tobool = icmp ne %struct.MXFPackage* %13, null, !dbg !4459
  br i1 %tobool, label %if.then, label %if.end, !dbg !4461

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !4462

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4464

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %i, align 4, !dbg !4465
  %inc = add nsw i32 %14, 1, !dbg !4465
  store i32 %inc, i32* %i, align 4, !dbg !4465
  br label %for.cond, !dbg !4467, !llvm.loop !4468

for.end:                                          ; preds = %if.then, %for.cond
  %15 = load %struct.MXFPackage*, %struct.MXFPackage** %material_package, align 8, !dbg !4470
  %tobool1 = icmp ne %struct.MXFPackage* %15, null, !dbg !4470
  br i1 %tobool1, label %if.end4, label %if.then2, !dbg !4472

if.then2:                                         ; preds = %for.end
  %16 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4473
  %fc3 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %16, i32 0, i32 10, !dbg !4475
  %17 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc3, align 8, !dbg !4475
  %18 = bitcast %struct.AVFormatContext* %17 to i8*, !dbg !4473
  call void (i8*, i32, i8*, ...) @av_log(i8* %18, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.65, i32 0, i32 0)), !dbg !4476
  store i32 -1094995529, i32* %retval, align 4, !dbg !4477
  br label %return, !dbg !4477

if.end4:                                          ; preds = %for.end
  %19 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4478
  %fc5 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %19, i32 0, i32 10, !dbg !4479
  %20 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc5, align 8, !dbg !4479
  %metadata = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %20, i32 0, i32 29, !dbg !4480
  %21 = load %struct.MXFPackage*, %struct.MXFPackage** %material_package, align 8, !dbg !4481
  %call6 = call i32 @mxf_add_umid_metadata(%struct.AVDictionary** %metadata, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.66, i32 0, i32 0), %struct.MXFPackage* %21), !dbg !4482
  %22 = load %struct.MXFPackage*, %struct.MXFPackage** %material_package, align 8, !dbg !4483
  %name = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %22, i32 0, i32 8, !dbg !4485
  %23 = load i8*, i8** %name, align 8, !dbg !4485
  %tobool7 = icmp ne i8* %23, null, !dbg !4483
  br i1 %tobool7, label %land.lhs.true, label %if.end16, !dbg !4486

land.lhs.true:                                    ; preds = %if.end4
  %24 = load %struct.MXFPackage*, %struct.MXFPackage** %material_package, align 8, !dbg !4487
  %name8 = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %24, i32 0, i32 8, !dbg !4489
  %25 = load i8*, i8** %name8, align 8, !dbg !4489
  %arrayidx9 = getelementptr inbounds i8, i8* %25, i64 0, !dbg !4487
  %26 = load i8, i8* %arrayidx9, align 1, !dbg !4487
  %conv = sext i8 %26 to i32, !dbg !4487
  %tobool10 = icmp ne i32 %conv, 0, !dbg !4487
  br i1 %tobool10, label %if.then11, label %if.end16, !dbg !4490

if.then11:                                        ; preds = %land.lhs.true
  %27 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4491
  %fc12 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %27, i32 0, i32 10, !dbg !4492
  %28 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc12, align 8, !dbg !4492
  %metadata13 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %28, i32 0, i32 29, !dbg !4493
  %29 = load %struct.MXFPackage*, %struct.MXFPackage** %material_package, align 8, !dbg !4494
  %name14 = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %29, i32 0, i32 8, !dbg !4495
  %30 = load i8*, i8** %name14, align 8, !dbg !4495
  %call15 = call i32 @av_dict_set(%struct.AVDictionary** %metadata13, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.67, i32 0, i32 0), i8* %30, i32 0), !dbg !4496
  br label %if.end16, !dbg !4496

if.end16:                                         ; preds = %if.then11, %land.lhs.true, %if.end4
  %31 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4497
  %32 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4498
  %fc17 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %32, i32 0, i32 10, !dbg !4499
  %33 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc17, align 8, !dbg !4499
  %metadata18 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %33, i32 0, i32 29, !dbg !4500
  %34 = load %struct.MXFPackage*, %struct.MXFPackage** %material_package, align 8, !dbg !4501
  %call19 = call i32 @mxf_parse_package_comments(%struct.MXFContext* %31, %struct.AVDictionary** %metadata18, %struct.MXFPackage* %34), !dbg !4502
  store i32 0, i32* %i, align 4, !dbg !4503
  br label %for.cond20, !dbg !4504

for.cond20:                                       ; preds = %for.inc764, %if.end16
  %35 = load i32, i32* %i, align 4, !dbg !4505
  %36 = load %struct.MXFPackage*, %struct.MXFPackage** %material_package, align 8, !dbg !4507
  %tracks_count = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %36, i32 0, i32 5, !dbg !4508
  %37 = load i32, i32* %tracks_count, align 8, !dbg !4508
  %cmp21 = icmp slt i32 %35, %37, !dbg !4509
  br i1 %cmp21, label %for.body23, label %for.end766, !dbg !4510

for.body23:                                       ; preds = %for.cond20
  call void @llvm.dbg.declare(metadata %struct.MXFPackage** %source_package, metadata !4511, metadata !2511), !dbg !4512
  store %struct.MXFPackage* null, %struct.MXFPackage** %source_package, align 8, !dbg !4512
  call void @llvm.dbg.declare(metadata %struct.MXFTrack** %material_track, metadata !4513, metadata !2511), !dbg !4514
  store %struct.MXFTrack* null, %struct.MXFTrack** %material_track, align 8, !dbg !4514
  call void @llvm.dbg.declare(metadata %struct.MXFTrack** %source_track, metadata !4515, metadata !2511), !dbg !4516
  store %struct.MXFTrack* null, %struct.MXFTrack** %source_track, align 8, !dbg !4516
  call void @llvm.dbg.declare(metadata %struct.MXFTrack** %temp_track, metadata !4517, metadata !2511), !dbg !4518
  store %struct.MXFTrack* null, %struct.MXFTrack** %temp_track, align 8, !dbg !4518
  call void @llvm.dbg.declare(metadata %struct.MXFDescriptor** %descriptor, metadata !4519, metadata !2511), !dbg !4520
  store %struct.MXFDescriptor* null, %struct.MXFDescriptor** %descriptor, align 8, !dbg !4520
  call void @llvm.dbg.declare(metadata %struct.MXFStructuralComponent** %component, metadata !4521, metadata !2511), !dbg !4534
  store %struct.MXFStructuralComponent* null, %struct.MXFStructuralComponent** %component, align 8, !dbg !4534
  call void @llvm.dbg.declare(metadata %struct.MXFTrack.1** %mxf_tc, metadata !4535, metadata !2511), !dbg !4536
  store %struct.MXFTrack.1* null, %struct.MXFTrack.1** %mxf_tc, align 8, !dbg !4536
  call void @llvm.dbg.declare(metadata [16 x i8]** %essence_container_ul, metadata !4537, metadata !2511), !dbg !4538
  store [16 x i8]* null, [16 x i8]** %essence_container_ul, align 8, !dbg !4538
  call void @llvm.dbg.declare(metadata %struct.MXFCodecUL** %codec_ul, metadata !4539, metadata !2511), !dbg !4541
  store %struct.MXFCodecUL* null, %struct.MXFCodecUL** %codec_ul, align 8, !dbg !4541
  call void @llvm.dbg.declare(metadata %struct.MXFCodecUL** %container_ul, metadata !4542, metadata !2511), !dbg !4543
  store %struct.MXFCodecUL* null, %struct.MXFCodecUL** %container_ul, align 8, !dbg !4543
  call void @llvm.dbg.declare(metadata %struct.MXFCodecUL** %pix_fmt_ul, metadata !4544, metadata !2511), !dbg !4545
  store %struct.MXFCodecUL* null, %struct.MXFCodecUL** %pix_fmt_ul, align 8, !dbg !4545
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !4546, metadata !2511), !dbg !4547
  call void @llvm.dbg.declare(metadata %struct.AVTimecode* %tc, metadata !4548, metadata !2511), !dbg !4549
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !4550, metadata !2511), !dbg !4551
  %38 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4552
  %39 = load i32, i32* %i, align 4, !dbg !4554
  %idxprom24 = sext i32 %39 to i64, !dbg !4555
  %40 = load %struct.MXFPackage*, %struct.MXFPackage** %material_package, align 8, !dbg !4555
  %tracks_refs = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %40, i32 0, i32 4, !dbg !4556
  %41 = load [16 x i8]*, [16 x i8]** %tracks_refs, align 8, !dbg !4556
  %arrayidx25 = getelementptr inbounds [16 x i8], [16 x i8]* %41, i64 %idxprom24, !dbg !4555
  %call26 = call i8* @mxf_resolve_strong_ref(%struct.MXFContext* %38, [16 x i8]* %arrayidx25, i32 9), !dbg !4557
  %42 = bitcast i8* %call26 to %struct.MXFTrack*, !dbg !4557
  store %struct.MXFTrack* %42, %struct.MXFTrack** %material_track, align 8, !dbg !4558
  %tobool27 = icmp ne %struct.MXFTrack* %42, null, !dbg !4558
  br i1 %tobool27, label %if.end30, label %if.then28, !dbg !4559

if.then28:                                        ; preds = %for.body23
  %43 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4560
  %fc29 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %43, i32 0, i32 10, !dbg !4562
  %44 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc29, align 8, !dbg !4562
  %45 = bitcast %struct.AVFormatContext* %44 to i8*, !dbg !4560
  call void (i8*, i32, i8*, ...) @av_log(i8* %45, i32 16, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.68, i32 0, i32 0)), !dbg !4563
  br label %for.inc764, !dbg !4564

if.end30:                                         ; preds = %for.body23
  %46 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4565
  %47 = load %struct.MXFTrack*, %struct.MXFTrack** %material_track, align 8, !dbg !4567
  %sequence_ref = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %47, i32 0, i32 3, !dbg !4568
  %call31 = call i8* @mxf_resolve_strong_ref(%struct.MXFContext* %46, [16 x i8]* %sequence_ref, i32 4), !dbg !4569
  %48 = bitcast i8* %call31 to %struct.MXFStructuralComponent*, !dbg !4569
  store %struct.MXFStructuralComponent* %48, %struct.MXFStructuralComponent** %component, align 8, !dbg !4570
  %tobool32 = icmp ne %struct.MXFStructuralComponent* %48, null, !dbg !4570
  br i1 %tobool32, label %if.then33, label %if.end45, !dbg !4571

if.then33:                                        ; preds = %if.end30
  %49 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %component, align 8, !dbg !4572
  %50 = bitcast %struct.MXFStructuralComponent* %49 to %struct.MXFTrack.1*, !dbg !4574
  store %struct.MXFTrack.1* %50, %struct.MXFTrack.1** %mxf_tc, align 8, !dbg !4575
  %51 = load %struct.MXFTrack.1*, %struct.MXFTrack.1** %mxf_tc, align 8, !dbg !4576
  %drop_frame = getelementptr inbounds %struct.MXFTrack.1, %struct.MXFTrack.1* %51, i32 0, i32 2, !dbg !4577
  %52 = load i32, i32* %drop_frame, align 4, !dbg !4577
  %cmp34 = icmp eq i32 %52, 1, !dbg !4578
  %cond = select i1 %cmp34, i32 1, i32 0, !dbg !4576
  store i32 %cond, i32* %flags, align 4, !dbg !4579
  %53 = load %struct.MXFTrack.1*, %struct.MXFTrack.1** %mxf_tc, align 8, !dbg !4580
  %rate = getelementptr inbounds %struct.MXFTrack.1, %struct.MXFTrack.1* %53, i32 0, i32 4, !dbg !4582
  %54 = load i32, i32* %flags, align 4, !dbg !4583
  %55 = load %struct.MXFTrack.1*, %struct.MXFTrack.1** %mxf_tc, align 8, !dbg !4584
  %start_frame = getelementptr inbounds %struct.MXFTrack.1, %struct.MXFTrack.1* %55, i32 0, i32 3, !dbg !4585
  %56 = load i32, i32* %start_frame, align 4, !dbg !4585
  %57 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4586
  %fc36 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %57, i32 0, i32 10, !dbg !4587
  %58 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc36, align 8, !dbg !4587
  %59 = bitcast %struct.AVFormatContext* %58 to i8*, !dbg !4586
  %60 = bitcast %struct.AVRational* %rate to i64*, !dbg !4588
  %61 = load i64, i64* %60, align 4, !dbg !4588
  %call37 = call i32 @av_timecode_init(%struct.AVTimecode* %tc, i64 %61, i32 %54, i32 %56, i8* %59), !dbg !4588
  %cmp38 = icmp eq i32 %call37, 0, !dbg !4589
  br i1 %cmp38, label %if.then40, label %if.end44, !dbg !4590

if.then40:                                        ; preds = %if.then33
  %62 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4591
  %fc41 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %62, i32 0, i32 10, !dbg !4593
  %63 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc41, align 8, !dbg !4593
  %metadata42 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %63, i32 0, i32 29, !dbg !4594
  %call43 = call i32 @mxf_add_timecode_metadata(%struct.AVDictionary** %metadata42, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.69, i32 0, i32 0), %struct.AVTimecode* %tc), !dbg !4595
  br label %if.end44, !dbg !4596

if.end44:                                         ; preds = %if.then40, %if.then33
  br label %if.end45, !dbg !4597

if.end45:                                         ; preds = %if.end44, %if.end30
  %64 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4598
  %65 = load %struct.MXFTrack*, %struct.MXFTrack** %material_track, align 8, !dbg !4600
  %sequence_ref46 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %65, i32 0, i32 3, !dbg !4601
  %call47 = call i8* @mxf_resolve_strong_ref(%struct.MXFContext* %64, [16 x i8]* %sequence_ref46, i32 6), !dbg !4602
  %66 = bitcast i8* %call47 to %struct.MXFSequence*, !dbg !4602
  %67 = load %struct.MXFTrack*, %struct.MXFTrack** %material_track, align 8, !dbg !4603
  %sequence = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %67, i32 0, i32 2, !dbg !4604
  store %struct.MXFSequence* %66, %struct.MXFSequence** %sequence, align 8, !dbg !4605
  %tobool48 = icmp ne %struct.MXFSequence* %66, null, !dbg !4605
  br i1 %tobool48, label %if.end51, label %if.then49, !dbg !4606

if.then49:                                        ; preds = %if.end45
  %68 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4607
  %fc50 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %68, i32 0, i32 10, !dbg !4609
  %69 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc50, align 8, !dbg !4609
  %70 = bitcast %struct.AVFormatContext* %69 to i8*, !dbg !4607
  call void (i8*, i32, i8*, ...) @av_log(i8* %70, i32 16, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.70, i32 0, i32 0)), !dbg !4610
  br label %for.inc764, !dbg !4611

if.end51:                                         ; preds = %if.end45
  store i32 0, i32* %j, align 4, !dbg !4612
  br label %for.cond52, !dbg !4614

for.cond52:                                       ; preds = %for.inc79, %if.end51
  %71 = load i32, i32* %j, align 4, !dbg !4615
  %72 = load %struct.MXFTrack*, %struct.MXFTrack** %material_track, align 8, !dbg !4618
  %sequence53 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %72, i32 0, i32 2, !dbg !4619
  %73 = load %struct.MXFSequence*, %struct.MXFSequence** %sequence53, align 8, !dbg !4619
  %structural_components_count = getelementptr inbounds %struct.MXFSequence, %struct.MXFSequence* %73, i32 0, i32 4, !dbg !4620
  %74 = load i32, i32* %structural_components_count, align 8, !dbg !4620
  %cmp54 = icmp slt i32 %71, %74, !dbg !4621
  br i1 %cmp54, label %for.body56, label %for.end81, !dbg !4622

for.body56:                                       ; preds = %for.cond52
  %75 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4623
  %76 = load i32, i32* %j, align 4, !dbg !4625
  %idxprom57 = sext i32 %76 to i64, !dbg !4626
  %77 = load %struct.MXFTrack*, %struct.MXFTrack** %material_track, align 8, !dbg !4626
  %sequence58 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %77, i32 0, i32 2, !dbg !4627
  %78 = load %struct.MXFSequence*, %struct.MXFSequence** %sequence58, align 8, !dbg !4627
  %structural_components_refs = getelementptr inbounds %struct.MXFSequence, %struct.MXFSequence* %78, i32 0, i32 3, !dbg !4628
  %79 = load [16 x i8]*, [16 x i8]** %structural_components_refs, align 8, !dbg !4628
  %arrayidx59 = getelementptr inbounds [16 x i8], [16 x i8]* %79, i64 %idxprom57, !dbg !4626
  %call60 = call i8* @mxf_resolve_strong_ref(%struct.MXFContext* %75, [16 x i8]* %arrayidx59, i32 4), !dbg !4629
  %80 = bitcast i8* %call60 to %struct.MXFStructuralComponent*, !dbg !4629
  store %struct.MXFStructuralComponent* %80, %struct.MXFStructuralComponent** %component, align 8, !dbg !4630
  %81 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %component, align 8, !dbg !4631
  %tobool61 = icmp ne %struct.MXFStructuralComponent* %81, null, !dbg !4631
  br i1 %tobool61, label %if.end63, label %if.then62, !dbg !4633

if.then62:                                        ; preds = %for.body56
  br label %for.inc79, !dbg !4634

if.end63:                                         ; preds = %for.body56
  %82 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %component, align 8, !dbg !4635
  %83 = bitcast %struct.MXFStructuralComponent* %82 to %struct.MXFTrack.1*, !dbg !4636
  store %struct.MXFTrack.1* %83, %struct.MXFTrack.1** %mxf_tc, align 8, !dbg !4637
  %84 = load %struct.MXFTrack.1*, %struct.MXFTrack.1** %mxf_tc, align 8, !dbg !4638
  %drop_frame64 = getelementptr inbounds %struct.MXFTrack.1, %struct.MXFTrack.1* %84, i32 0, i32 2, !dbg !4639
  %85 = load i32, i32* %drop_frame64, align 4, !dbg !4639
  %cmp65 = icmp eq i32 %85, 1, !dbg !4640
  %cond67 = select i1 %cmp65, i32 1, i32 0, !dbg !4638
  store i32 %cond67, i32* %flags, align 4, !dbg !4641
  %86 = load %struct.MXFTrack.1*, %struct.MXFTrack.1** %mxf_tc, align 8, !dbg !4642
  %rate68 = getelementptr inbounds %struct.MXFTrack.1, %struct.MXFTrack.1* %86, i32 0, i32 4, !dbg !4644
  %87 = load i32, i32* %flags, align 4, !dbg !4645
  %88 = load %struct.MXFTrack.1*, %struct.MXFTrack.1** %mxf_tc, align 8, !dbg !4646
  %start_frame69 = getelementptr inbounds %struct.MXFTrack.1, %struct.MXFTrack.1* %88, i32 0, i32 3, !dbg !4647
  %89 = load i32, i32* %start_frame69, align 4, !dbg !4647
  %90 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4648
  %fc70 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %90, i32 0, i32 10, !dbg !4649
  %91 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc70, align 8, !dbg !4649
  %92 = bitcast %struct.AVFormatContext* %91 to i8*, !dbg !4648
  %93 = bitcast %struct.AVRational* %rate68 to i64*, !dbg !4650
  %94 = load i64, i64* %93, align 4, !dbg !4650
  %call71 = call i32 @av_timecode_init(%struct.AVTimecode* %tc, i64 %94, i32 %87, i32 %89, i8* %92), !dbg !4650
  %cmp72 = icmp eq i32 %call71, 0, !dbg !4651
  br i1 %cmp72, label %if.then74, label %if.end78, !dbg !4652

if.then74:                                        ; preds = %if.end63
  %95 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4653
  %fc75 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %95, i32 0, i32 10, !dbg !4655
  %96 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc75, align 8, !dbg !4655
  %metadata76 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %96, i32 0, i32 29, !dbg !4656
  %call77 = call i32 @mxf_add_timecode_metadata(%struct.AVDictionary** %metadata76, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.69, i32 0, i32 0), %struct.AVTimecode* %tc), !dbg !4657
  br label %for.end81, !dbg !4658

if.end78:                                         ; preds = %if.end63
  br label %for.inc79, !dbg !4659

for.inc79:                                        ; preds = %if.end78, %if.then62
  %97 = load i32, i32* %j, align 4, !dbg !4660
  %inc80 = add nsw i32 %97, 1, !dbg !4660
  store i32 %inc80, i32* %j, align 4, !dbg !4660
  br label %for.cond52, !dbg !4662, !llvm.loop !4663

for.end81:                                        ; preds = %if.then74, %for.cond52
  %98 = load %struct.MXFTrack*, %struct.MXFTrack** %material_track, align 8, !dbg !4665
  %sequence82 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %98, i32 0, i32 2, !dbg !4667
  %99 = load %struct.MXFSequence*, %struct.MXFSequence** %sequence82, align 8, !dbg !4667
  %structural_components_count83 = getelementptr inbounds %struct.MXFSequence, %struct.MXFSequence* %99, i32 0, i32 4, !dbg !4668
  %100 = load i32, i32* %structural_components_count83, align 8, !dbg !4668
  %cmp84 = icmp sgt i32 %100, 1, !dbg !4669
  br i1 %cmp84, label %if.then86, label %if.end90, !dbg !4670

if.then86:                                        ; preds = %for.end81
  %101 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4671
  %fc87 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %101, i32 0, i32 10, !dbg !4672
  %102 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc87, align 8, !dbg !4672
  %103 = bitcast %struct.AVFormatContext* %102 to i8*, !dbg !4671
  %104 = load %struct.MXFTrack*, %struct.MXFTrack** %material_track, align 8, !dbg !4673
  %track_id = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %104, i32 0, i32 4, !dbg !4674
  %105 = load i32, i32* %track_id, align 8, !dbg !4674
  %106 = load %struct.MXFTrack*, %struct.MXFTrack** %material_track, align 8, !dbg !4675
  %sequence88 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %106, i32 0, i32 2, !dbg !4676
  %107 = load %struct.MXFSequence*, %struct.MXFSequence** %sequence88, align 8, !dbg !4676
  %structural_components_count89 = getelementptr inbounds %struct.MXFSequence, %struct.MXFSequence* %107, i32 0, i32 4, !dbg !4677
  %108 = load i32, i32* %structural_components_count89, align 8, !dbg !4677
  call void (i8*, i32, i8*, ...) @av_log(i8* %103, i32 24, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.71, i32 0, i32 0), i32 %105, i32 %108), !dbg !4678
  br label %if.end90, !dbg !4678

if.end90:                                         ; preds = %if.then86, %for.end81
  store i32 0, i32* %j, align 4, !dbg !4679
  br label %for.cond91, !dbg !4681

for.cond91:                                       ; preds = %for.inc172, %if.end90
  %109 = load i32, i32* %j, align 4, !dbg !4682
  %110 = load %struct.MXFTrack*, %struct.MXFTrack** %material_track, align 8, !dbg !4685
  %sequence92 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %110, i32 0, i32 2, !dbg !4686
  %111 = load %struct.MXFSequence*, %struct.MXFSequence** %sequence92, align 8, !dbg !4686
  %structural_components_count93 = getelementptr inbounds %struct.MXFSequence, %struct.MXFSequence* %111, i32 0, i32 4, !dbg !4687
  %112 = load i32, i32* %structural_components_count93, align 8, !dbg !4687
  %cmp94 = icmp slt i32 %109, %112, !dbg !4688
  br i1 %cmp94, label %for.body96, label %for.end174, !dbg !4689

for.body96:                                       ; preds = %for.cond91
  %113 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4690
  %114 = load i32, i32* %j, align 4, !dbg !4692
  %idxprom97 = sext i32 %114 to i64, !dbg !4693
  %115 = load %struct.MXFTrack*, %struct.MXFTrack** %material_track, align 8, !dbg !4693
  %sequence98 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %115, i32 0, i32 2, !dbg !4694
  %116 = load %struct.MXFSequence*, %struct.MXFSequence** %sequence98, align 8, !dbg !4694
  %structural_components_refs99 = getelementptr inbounds %struct.MXFSequence, %struct.MXFSequence* %116, i32 0, i32 3, !dbg !4695
  %117 = load [16 x i8]*, [16 x i8]** %structural_components_refs99, align 8, !dbg !4695
  %arrayidx100 = getelementptr inbounds [16 x i8], [16 x i8]* %117, i64 %idxprom97, !dbg !4693
  %call101 = call %struct.MXFStructuralComponent* @mxf_resolve_sourceclip(%struct.MXFContext* %113, [16 x i8]* %arrayidx100), !dbg !4696
  store %struct.MXFStructuralComponent* %call101, %struct.MXFStructuralComponent** %component, align 8, !dbg !4697
  %118 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %component, align 8, !dbg !4698
  %tobool102 = icmp ne %struct.MXFStructuralComponent* %118, null, !dbg !4698
  br i1 %tobool102, label %if.end104, label %if.then103, !dbg !4700

if.then103:                                       ; preds = %for.body96
  br label %for.inc172, !dbg !4701

if.end104:                                        ; preds = %for.body96
  %119 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4702
  %120 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %component, align 8, !dbg !4703
  %source_package_ul = getelementptr inbounds %struct.MXFStructuralComponent, %struct.MXFStructuralComponent* %120, i32 0, i32 2, !dbg !4704
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %source_package_ul, i32 0, i32 0, !dbg !4703
  %121 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %component, align 8, !dbg !4705
  %source_package_uid = getelementptr inbounds %struct.MXFStructuralComponent, %struct.MXFStructuralComponent* %121, i32 0, i32 3, !dbg !4706
  %arraydecay105 = getelementptr inbounds [16 x i8], [16 x i8]* %source_package_uid, i32 0, i32 0, !dbg !4705
  %call106 = call %struct.MXFPackage* @mxf_resolve_source_package(%struct.MXFContext* %119, i8* %arraydecay, i8* %arraydecay105), !dbg !4707
  store %struct.MXFPackage* %call106, %struct.MXFPackage** %source_package, align 8, !dbg !4708
  %122 = load %struct.MXFPackage*, %struct.MXFPackage** %source_package, align 8, !dbg !4709
  %tobool107 = icmp ne %struct.MXFPackage* %122, null, !dbg !4709
  br i1 %tobool107, label %if.end111, label %if.then108, !dbg !4711

if.then108:                                       ; preds = %if.end104
  %123 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4712
  %fc109 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %123, i32 0, i32 10, !dbg !4714
  %124 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc109, align 8, !dbg !4714
  %125 = bitcast %struct.AVFormatContext* %124 to i8*, !dbg !4712
  %126 = load %struct.MXFTrack*, %struct.MXFTrack** %material_track, align 8, !dbg !4715
  %track_id110 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %126, i32 0, i32 4, !dbg !4716
  %127 = load i32, i32* %track_id110, align 8, !dbg !4716
  call void (i8*, i32, i8*, ...) @av_log(i8* %125, i32 56, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.72, i32 0, i32 0), i32 %127), !dbg !4717
  br label %for.inc172, !dbg !4718

if.end111:                                        ; preds = %if.end104
  store i32 0, i32* %k, align 4, !dbg !4719
  br label %for.cond112, !dbg !4721

for.cond112:                                      ; preds = %for.inc130, %if.end111
  %128 = load i32, i32* %k, align 4, !dbg !4722
  %129 = load %struct.MXFPackage*, %struct.MXFPackage** %source_package, align 8, !dbg !4725
  %tracks_count113 = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %129, i32 0, i32 5, !dbg !4726
  %130 = load i32, i32* %tracks_count113, align 8, !dbg !4726
  %cmp114 = icmp slt i32 %128, %130, !dbg !4727
  br i1 %cmp114, label %for.body116, label %for.end132, !dbg !4728

for.body116:                                      ; preds = %for.cond112
  %131 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4729
  %132 = load i32, i32* %k, align 4, !dbg !4732
  %idxprom117 = sext i32 %132 to i64, !dbg !4733
  %133 = load %struct.MXFPackage*, %struct.MXFPackage** %source_package, align 8, !dbg !4733
  %tracks_refs118 = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %133, i32 0, i32 4, !dbg !4734
  %134 = load [16 x i8]*, [16 x i8]** %tracks_refs118, align 8, !dbg !4734
  %arrayidx119 = getelementptr inbounds [16 x i8], [16 x i8]* %134, i64 %idxprom117, !dbg !4733
  %call120 = call i8* @mxf_resolve_strong_ref(%struct.MXFContext* %131, [16 x i8]* %arrayidx119, i32 9), !dbg !4735
  %135 = bitcast i8* %call120 to %struct.MXFTrack*, !dbg !4735
  store %struct.MXFTrack* %135, %struct.MXFTrack** %temp_track, align 8, !dbg !4736
  %tobool121 = icmp ne %struct.MXFTrack* %135, null, !dbg !4736
  br i1 %tobool121, label %if.end124, label %if.then122, !dbg !4737

if.then122:                                       ; preds = %for.body116
  %136 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4738
  %fc123 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %136, i32 0, i32 10, !dbg !4740
  %137 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc123, align 8, !dbg !4740
  %138 = bitcast %struct.AVFormatContext* %137 to i8*, !dbg !4738
  call void (i8*, i32, i8*, ...) @av_log(i8* %138, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.73, i32 0, i32 0)), !dbg !4741
  store i32 -1094995529, i32* %ret, align 4, !dbg !4742
  br label %fail_and_free, !dbg !4743

if.end124:                                        ; preds = %for.body116
  %139 = load %struct.MXFTrack*, %struct.MXFTrack** %temp_track, align 8, !dbg !4744
  %track_id125 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %139, i32 0, i32 4, !dbg !4746
  %140 = load i32, i32* %track_id125, align 8, !dbg !4746
  %141 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %component, align 8, !dbg !4747
  %source_track_id = getelementptr inbounds %struct.MXFStructuralComponent, %struct.MXFStructuralComponent* %141, i32 0, i32 7, !dbg !4748
  %142 = load i32, i32* %source_track_id, align 8, !dbg !4748
  %cmp126 = icmp eq i32 %140, %142, !dbg !4749
  br i1 %cmp126, label %if.then128, label %if.end129, !dbg !4750

if.then128:                                       ; preds = %if.end124
  %143 = load %struct.MXFTrack*, %struct.MXFTrack** %temp_track, align 8, !dbg !4751
  store %struct.MXFTrack* %143, %struct.MXFTrack** %source_track, align 8, !dbg !4753
  br label %for.end132, !dbg !4754

if.end129:                                        ; preds = %if.end124
  br label %for.inc130, !dbg !4755

for.inc130:                                       ; preds = %if.end129
  %144 = load i32, i32* %k, align 4, !dbg !4756
  %inc131 = add nsw i32 %144, 1, !dbg !4756
  store i32 %inc131, i32* %k, align 4, !dbg !4756
  br label %for.cond112, !dbg !4758, !llvm.loop !4759

for.end132:                                       ; preds = %if.then128, %for.cond112
  %145 = load %struct.MXFTrack*, %struct.MXFTrack** %source_track, align 8, !dbg !4761
  %tobool133 = icmp ne %struct.MXFTrack* %145, null, !dbg !4761
  br i1 %tobool133, label %if.end137, label %if.then134, !dbg !4763

if.then134:                                       ; preds = %for.end132
  %146 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4764
  %fc135 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %146, i32 0, i32 10, !dbg !4766
  %147 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc135, align 8, !dbg !4766
  %148 = bitcast %struct.AVFormatContext* %147 to i8*, !dbg !4764
  %149 = load %struct.MXFTrack*, %struct.MXFTrack** %material_track, align 8, !dbg !4767
  %track_id136 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %149, i32 0, i32 4, !dbg !4768
  %150 = load i32, i32* %track_id136, align 8, !dbg !4768
  call void (i8*, i32, i8*, ...) @av_log(i8* %148, i32 16, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.74, i32 0, i32 0), i32 %150), !dbg !4769
  br label %for.end174, !dbg !4770

if.end137:                                        ; preds = %for.end132
  store i32 0, i32* %k, align 4, !dbg !4771
  br label %for.cond138, !dbg !4773

for.cond138:                                      ; preds = %for.inc164, %if.end137
  %151 = load i32, i32* %k, align 4, !dbg !4774
  %152 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4777
  %essence_container_data_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %152, i32 0, i32 7, !dbg !4778
  %153 = load i32, i32* %essence_container_data_count, align 8, !dbg !4778
  %cmp139 = icmp slt i32 %151, %153, !dbg !4779
  br i1 %cmp139, label %for.body141, label %for.end166, !dbg !4780

for.body141:                                      ; preds = %for.cond138
  call void @llvm.dbg.declare(metadata %struct.MXFEssenceContainerData** %essence_data, metadata !4781, metadata !2511), !dbg !4793
  %154 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4794
  %155 = load i32, i32* %k, align 4, !dbg !4796
  %idxprom142 = sext i32 %155 to i64, !dbg !4797
  %156 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4797
  %essence_container_data_refs = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %156, i32 0, i32 6, !dbg !4798
  %157 = load [16 x i8]*, [16 x i8]** %essence_container_data_refs, align 8, !dbg !4798
  %arrayidx143 = getelementptr inbounds [16 x i8], [16 x i8]* %157, i64 %idxprom142, !dbg !4797
  %call144 = call i8* @mxf_resolve_strong_ref(%struct.MXFContext* %154, [16 x i8]* %arrayidx143, i32 16), !dbg !4799
  %158 = bitcast i8* %call144 to %struct.MXFEssenceContainerData*, !dbg !4799
  store %struct.MXFEssenceContainerData* %158, %struct.MXFEssenceContainerData** %essence_data, align 8, !dbg !4800
  %tobool145 = icmp ne %struct.MXFEssenceContainerData* %158, null, !dbg !4800
  br i1 %tobool145, label %if.end148, label %if.then146, !dbg !4801

if.then146:                                       ; preds = %for.body141
  %159 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4802
  %fc147 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %159, i32 0, i32 10, !dbg !4804
  %160 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc147, align 8, !dbg !4804
  %161 = bitcast %struct.AVFormatContext* %160 to i8*, !dbg !4802
  call void (i8*, i32, i8*, ...) @av_log(i8* %161, i32 56, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.75, i32 0, i32 0)), !dbg !4805
  br label %for.inc164, !dbg !4806

if.end148:                                        ; preds = %for.body141
  %162 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %component, align 8, !dbg !4807
  %source_package_ul149 = getelementptr inbounds %struct.MXFStructuralComponent, %struct.MXFStructuralComponent* %162, i32 0, i32 2, !dbg !4809
  %arraydecay150 = getelementptr inbounds [16 x i8], [16 x i8]* %source_package_ul149, i32 0, i32 0, !dbg !4807
  %163 = load %struct.MXFEssenceContainerData*, %struct.MXFEssenceContainerData** %essence_data, align 8, !dbg !4810
  %package_ul = getelementptr inbounds %struct.MXFEssenceContainerData, %struct.MXFEssenceContainerData* %163, i32 0, i32 3, !dbg !4811
  %arraydecay151 = getelementptr inbounds [16 x i8], [16 x i8]* %package_ul, i32 0, i32 0, !dbg !4810
  %call152 = call i32 @memcmp(i8* %arraydecay150, i8* %arraydecay151, i64 16) #9, !dbg !4812
  %tobool153 = icmp ne i32 %call152, 0, !dbg !4812
  br i1 %tobool153, label %if.end163, label %land.lhs.true154, !dbg !4813

land.lhs.true154:                                 ; preds = %if.end148
  %164 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %component, align 8, !dbg !4814
  %source_package_uid155 = getelementptr inbounds %struct.MXFStructuralComponent, %struct.MXFStructuralComponent* %164, i32 0, i32 3, !dbg !4816
  %arraydecay156 = getelementptr inbounds [16 x i8], [16 x i8]* %source_package_uid155, i32 0, i32 0, !dbg !4814
  %165 = load %struct.MXFEssenceContainerData*, %struct.MXFEssenceContainerData** %essence_data, align 8, !dbg !4817
  %package_uid = getelementptr inbounds %struct.MXFEssenceContainerData, %struct.MXFEssenceContainerData* %165, i32 0, i32 2, !dbg !4818
  %arraydecay157 = getelementptr inbounds [16 x i8], [16 x i8]* %package_uid, i32 0, i32 0, !dbg !4817
  %call158 = call i32 @memcmp(i8* %arraydecay156, i8* %arraydecay157, i64 16) #9, !dbg !4819
  %tobool159 = icmp ne i32 %call158, 0, !dbg !4819
  br i1 %tobool159, label %if.end163, label %if.then160, !dbg !4820

if.then160:                                       ; preds = %land.lhs.true154
  %166 = load %struct.MXFEssenceContainerData*, %struct.MXFEssenceContainerData** %essence_data, align 8, !dbg !4821
  %body_sid = getelementptr inbounds %struct.MXFEssenceContainerData, %struct.MXFEssenceContainerData* %166, i32 0, i32 5, !dbg !4823
  %167 = load i32, i32* %body_sid, align 4, !dbg !4823
  %168 = load %struct.MXFTrack*, %struct.MXFTrack** %source_track, align 8, !dbg !4824
  %body_sid161 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %168, i32 0, i32 12, !dbg !4825
  store i32 %167, i32* %body_sid161, align 4, !dbg !4826
  %169 = load %struct.MXFEssenceContainerData*, %struct.MXFEssenceContainerData** %essence_data, align 8, !dbg !4827
  %index_sid = getelementptr inbounds %struct.MXFEssenceContainerData, %struct.MXFEssenceContainerData* %169, i32 0, i32 4, !dbg !4828
  %170 = load i32, i32* %index_sid, align 4, !dbg !4828
  %171 = load %struct.MXFTrack*, %struct.MXFTrack** %source_track, align 8, !dbg !4829
  %index_sid162 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %171, i32 0, i32 11, !dbg !4830
  store i32 %170, i32* %index_sid162, align 8, !dbg !4831
  br label %for.end166, !dbg !4832

if.end163:                                        ; preds = %land.lhs.true154, %if.end148
  br label %for.inc164, !dbg !4833

for.inc164:                                       ; preds = %if.end163, %if.then146
  %172 = load i32, i32* %k, align 4, !dbg !4834
  %inc165 = add nsw i32 %172, 1, !dbg !4834
  store i32 %inc165, i32* %k, align 4, !dbg !4834
  br label %for.cond138, !dbg !4836, !llvm.loop !4837

for.end166:                                       ; preds = %if.then160, %for.cond138
  %173 = load %struct.MXFTrack*, %struct.MXFTrack** %source_track, align 8, !dbg !4839
  %tobool167 = icmp ne %struct.MXFTrack* %173, null, !dbg !4839
  br i1 %tobool167, label %land.lhs.true168, label %if.end171, !dbg !4841

land.lhs.true168:                                 ; preds = %for.end166
  %174 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %component, align 8, !dbg !4842
  %tobool169 = icmp ne %struct.MXFStructuralComponent* %174, null, !dbg !4842
  br i1 %tobool169, label %if.then170, label %if.end171, !dbg !4844

if.then170:                                       ; preds = %land.lhs.true168
  br label %for.end174, !dbg !4845

if.end171:                                        ; preds = %land.lhs.true168, %for.end166
  br label %for.inc172, !dbg !4846

for.inc172:                                       ; preds = %if.end171, %if.then108, %if.then103
  %175 = load i32, i32* %j, align 4, !dbg !4847
  %inc173 = add nsw i32 %175, 1, !dbg !4847
  store i32 %inc173, i32* %j, align 4, !dbg !4847
  br label %for.cond91, !dbg !4849, !llvm.loop !4850

for.end174:                                       ; preds = %if.then170, %if.then134, %for.cond91
  %176 = load %struct.MXFTrack*, %struct.MXFTrack** %source_track, align 8, !dbg !4852
  %tobool175 = icmp ne %struct.MXFTrack* %176, null, !dbg !4852
  br i1 %tobool175, label %lor.lhs.false, label %if.then179, !dbg !4854

lor.lhs.false:                                    ; preds = %for.end174
  %177 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %component, align 8, !dbg !4855
  %tobool176 = icmp ne %struct.MXFStructuralComponent* %177, null, !dbg !4855
  br i1 %tobool176, label %lor.lhs.false177, label %if.then179, !dbg !4857

lor.lhs.false177:                                 ; preds = %lor.lhs.false
  %178 = load %struct.MXFPackage*, %struct.MXFPackage** %source_package, align 8, !dbg !4858
  %tobool178 = icmp ne %struct.MXFPackage* %178, null, !dbg !4858
  br i1 %tobool178, label %if.end184, label %if.then179, !dbg !4860

if.then179:                                       ; preds = %lor.lhs.false177, %lor.lhs.false, %for.end174
  %179 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4861
  %180 = load %struct.MXFTrack*, %struct.MXFTrack** %material_track, align 8, !dbg !4864
  %call180 = call i32 @mxf_add_metadata_stream(%struct.MXFContext* %179, %struct.MXFTrack* %180), !dbg !4865
  store i32 %call180, i32* %ret, align 4, !dbg !4866
  %tobool181 = icmp ne i32 %call180, 0, !dbg !4866
  br i1 %tobool181, label %if.then182, label %if.end183, !dbg !4867

if.then182:                                       ; preds = %if.then179
  br label %fail_and_free, !dbg !4868

if.end183:                                        ; preds = %if.then179
  br label %for.inc764, !dbg !4869

if.end184:                                        ; preds = %lor.lhs.false177
  %181 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4870
  %182 = load %struct.MXFTrack*, %struct.MXFTrack** %source_track, align 8, !dbg !4872
  %sequence_ref185 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %182, i32 0, i32 3, !dbg !4873
  %call186 = call i8* @mxf_resolve_strong_ref(%struct.MXFContext* %181, [16 x i8]* %sequence_ref185, i32 6), !dbg !4874
  %183 = bitcast i8* %call186 to %struct.MXFSequence*, !dbg !4874
  %184 = load %struct.MXFTrack*, %struct.MXFTrack** %source_track, align 8, !dbg !4875
  %sequence187 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %184, i32 0, i32 2, !dbg !4876
  store %struct.MXFSequence* %183, %struct.MXFSequence** %sequence187, align 8, !dbg !4877
  %tobool188 = icmp ne %struct.MXFSequence* %183, null, !dbg !4877
  br i1 %tobool188, label %if.end191, label %if.then189, !dbg !4878

if.then189:                                       ; preds = %if.end184
  %185 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4879
  %fc190 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %185, i32 0, i32 10, !dbg !4881
  %186 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc190, align 8, !dbg !4881
  %187 = bitcast %struct.AVFormatContext* %186 to i8*, !dbg !4879
  call void (i8*, i32, i8*, ...) @av_log(i8* %187, i32 16, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.76, i32 0, i32 0)), !dbg !4882
  store i32 -1094995529, i32* %ret, align 4, !dbg !4883
  br label %fail_and_free, !dbg !4884

if.end191:                                        ; preds = %if.end184
  %188 = load %struct.MXFTrack*, %struct.MXFTrack** %material_track, align 8, !dbg !4885
  %sequence192 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %188, i32 0, i32 2, !dbg !4887
  %189 = load %struct.MXFSequence*, %struct.MXFSequence** %sequence192, align 8, !dbg !4887
  %data_definition_ul = getelementptr inbounds %struct.MXFSequence, %struct.MXFSequence* %189, i32 0, i32 2, !dbg !4888
  %arraydecay193 = getelementptr inbounds [16 x i8], [16 x i8]* %data_definition_ul, i32 0, i32 0, !dbg !4885
  %190 = load %struct.MXFTrack*, %struct.MXFTrack** %source_track, align 8, !dbg !4889
  %sequence194 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %190, i32 0, i32 2, !dbg !4890
  %191 = load %struct.MXFSequence*, %struct.MXFSequence** %sequence194, align 8, !dbg !4890
  %data_definition_ul195 = getelementptr inbounds %struct.MXFSequence, %struct.MXFSequence* %191, i32 0, i32 2, !dbg !4891
  %arraydecay196 = getelementptr inbounds [16 x i8], [16 x i8]* %data_definition_ul195, i32 0, i32 0, !dbg !4889
  %call197 = call i32 @memcmp(i8* %arraydecay193, i8* %arraydecay196, i64 16) #9, !dbg !4892
  %tobool198 = icmp ne i32 %call197, 0, !dbg !4892
  br i1 %tobool198, label %if.then199, label %if.end202, !dbg !4893

if.then199:                                       ; preds = %if.end191
  %192 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4894
  %fc200 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %192, i32 0, i32 10, !dbg !4896
  %193 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc200, align 8, !dbg !4896
  %194 = bitcast %struct.AVFormatContext* %193 to i8*, !dbg !4894
  %195 = load %struct.MXFTrack*, %struct.MXFTrack** %material_track, align 8, !dbg !4897
  %track_id201 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %195, i32 0, i32 4, !dbg !4898
  %196 = load i32, i32* %track_id201, align 8, !dbg !4898
  call void (i8*, i32, i8*, ...) @av_log(i8* %194, i32 16, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.77, i32 0, i32 0), i32 %196), !dbg !4899
  br label %for.inc764, !dbg !4900

if.end202:                                        ; preds = %if.end191
  %197 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4901
  %fc203 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %197, i32 0, i32 10, !dbg !4902
  %198 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc203, align 8, !dbg !4902
  %call204 = call %struct.AVStream* @avformat_new_stream(%struct.AVFormatContext* %198, %struct.AVCodec* null), !dbg !4903
  store %struct.AVStream* %call204, %struct.AVStream** %st, align 8, !dbg !4904
  %199 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !4905
  %tobool205 = icmp ne %struct.AVStream* %199, null, !dbg !4905
  br i1 %tobool205, label %if.end208, label %if.then206, !dbg !4907

if.then206:                                       ; preds = %if.end202
  %200 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4908
  %fc207 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %200, i32 0, i32 10, !dbg !4910
  %201 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc207, align 8, !dbg !4910
  %202 = bitcast %struct.AVFormatContext* %201 to i8*, !dbg !4908
  call void (i8*, i32, i8*, ...) @av_log(i8* %202, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.78, i32 0, i32 0)), !dbg !4911
  store i32 -12, i32* %ret, align 4, !dbg !4912
  br label %fail_and_free, !dbg !4913

if.end208:                                        ; preds = %if.end202
  %203 = load %struct.MXFTrack*, %struct.MXFTrack** %material_track, align 8, !dbg !4914
  %track_id209 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %203, i32 0, i32 4, !dbg !4915
  %204 = load i32, i32* %track_id209, align 8, !dbg !4915
  %205 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !4916
  %id = getelementptr inbounds %struct.AVStream, %struct.AVStream* %205, i32 0, i32 1, !dbg !4917
  store i32 %204, i32* %id, align 4, !dbg !4918
  %206 = load %struct.MXFTrack*, %struct.MXFTrack** %source_track, align 8, !dbg !4919
  %207 = bitcast %struct.MXFTrack* %206 to i8*, !dbg !4919
  %208 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !4920
  %priv_data = getelementptr inbounds %struct.AVStream, %struct.AVStream* %208, i32 0, i32 3, !dbg !4921
  store i8* %207, i8** %priv_data, align 8, !dbg !4922
  %209 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4923
  %210 = load %struct.MXFPackage*, %struct.MXFPackage** %source_package, align 8, !dbg !4924
  %descriptor_ref = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %210, i32 0, i32 7, !dbg !4925
  %call210 = call i8* @mxf_resolve_strong_ref(%struct.MXFContext* %209, [16 x i8]* %descriptor_ref, i32 0), !dbg !4926
  %211 = bitcast i8* %call210 to %struct.MXFDescriptor*, !dbg !4926
  %212 = load %struct.MXFPackage*, %struct.MXFPackage** %source_package, align 8, !dbg !4927
  %descriptor211 = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %212, i32 0, i32 6, !dbg !4928
  store %struct.MXFDescriptor* %211, %struct.MXFDescriptor** %descriptor211, align 8, !dbg !4929
  %213 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4930
  %214 = load %struct.MXFPackage*, %struct.MXFPackage** %source_package, align 8, !dbg !4931
  %descriptor212 = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %214, i32 0, i32 6, !dbg !4932
  %215 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor212, align 8, !dbg !4932
  %216 = load %struct.MXFTrack*, %struct.MXFTrack** %source_track, align 8, !dbg !4933
  %track_id213 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %216, i32 0, i32 4, !dbg !4934
  %217 = load i32, i32* %track_id213, align 8, !dbg !4934
  %call214 = call %struct.MXFDescriptor* @mxf_resolve_multidescriptor(%struct.MXFContext* %213, %struct.MXFDescriptor* %215, i32 %217), !dbg !4935
  store %struct.MXFDescriptor* %call214, %struct.MXFDescriptor** %descriptor, align 8, !dbg !4936
  %218 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !4937
  %tobool215 = icmp ne %struct.MXFDescriptor* %218, null, !dbg !4937
  br i1 %tobool215, label %land.lhs.true216, label %if.else, !dbg !4939

land.lhs.true216:                                 ; preds = %if.end208
  %219 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !4940
  %duration = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %219, i32 0, i32 14, !dbg !4942
  %220 = load i64, i64* %duration, align 8, !dbg !4942
  %cmp217 = icmp ne i64 %220, -9223372036854775808, !dbg !4943
  br i1 %cmp217, label %if.then219, label %if.else, !dbg !4944

if.then219:                                       ; preds = %land.lhs.true216
  %221 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !4945
  %duration220 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %221, i32 0, i32 14, !dbg !4946
  %222 = load i64, i64* %duration220, align 8, !dbg !4946
  %223 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %component, align 8, !dbg !4947
  %duration221 = getelementptr inbounds %struct.MXFStructuralComponent, %struct.MXFStructuralComponent* %223, i32 0, i32 5, !dbg !4948
  %224 = load i64, i64* %duration221, align 8, !dbg !4948
  %cmp222 = icmp sgt i64 %222, %224, !dbg !4949
  br i1 %cmp222, label %cond.true, label %cond.false, !dbg !4950

cond.true:                                        ; preds = %if.then219
  %225 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %component, align 8, !dbg !4951
  %duration224 = getelementptr inbounds %struct.MXFStructuralComponent, %struct.MXFStructuralComponent* %225, i32 0, i32 5, !dbg !4952
  %226 = load i64, i64* %duration224, align 8, !dbg !4952
  br label %cond.end, !dbg !4953

cond.false:                                       ; preds = %if.then219
  %227 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !4954
  %duration225 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %227, i32 0, i32 14, !dbg !4956
  %228 = load i64, i64* %duration225, align 8, !dbg !4956
  br label %cond.end, !dbg !4957

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond226 = phi i64 [ %226, %cond.true ], [ %228, %cond.false ], !dbg !4958
  %229 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !4960
  %duration227 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %229, i32 0, i32 6, !dbg !4961
  store i64 %cond226, i64* %duration227, align 8, !dbg !4962
  %230 = load %struct.MXFTrack*, %struct.MXFTrack** %source_track, align 8, !dbg !4963
  %original_duration = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %230, i32 0, i32 10, !dbg !4964
  store i64 %cond226, i64* %original_duration, align 8, !dbg !4965
  br label %if.end231, !dbg !4963

if.else:                                          ; preds = %land.lhs.true216, %if.end208
  %231 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %component, align 8, !dbg !4966
  %duration228 = getelementptr inbounds %struct.MXFStructuralComponent, %struct.MXFStructuralComponent* %231, i32 0, i32 5, !dbg !4967
  %232 = load i64, i64* %duration228, align 8, !dbg !4967
  %233 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !4968
  %duration229 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %233, i32 0, i32 6, !dbg !4969
  store i64 %232, i64* %duration229, align 8, !dbg !4970
  %234 = load %struct.MXFTrack*, %struct.MXFTrack** %source_track, align 8, !dbg !4971
  %original_duration230 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %234, i32 0, i32 10, !dbg !4972
  store i64 %232, i64* %original_duration230, align 8, !dbg !4973
  br label %if.end231

if.end231:                                        ; preds = %if.else, %cond.end
  %235 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !4974
  %duration232 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %235, i32 0, i32 6, !dbg !4976
  %236 = load i64, i64* %duration232, align 8, !dbg !4976
  %cmp233 = icmp eq i64 %236, -1, !dbg !4977
  br i1 %cmp233, label %if.then235, label %if.end237, !dbg !4978

if.then235:                                       ; preds = %if.end231
  %237 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !4979
  %duration236 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %237, i32 0, i32 6, !dbg !4980
  store i64 -9223372036854775808, i64* %duration236, align 8, !dbg !4981
  br label %if.end237, !dbg !4979

if.end237:                                        ; preds = %if.then235, %if.end231
  %238 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %component, align 8, !dbg !4982
  %start_position = getelementptr inbounds %struct.MXFStructuralComponent, %struct.MXFStructuralComponent* %238, i32 0, i32 6, !dbg !4983
  %239 = load i64, i64* %start_position, align 8, !dbg !4983
  %240 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !4984
  %start_time = getelementptr inbounds %struct.AVStream, %struct.AVStream* %240, i32 0, i32 5, !dbg !4985
  store i64 %239, i64* %start_time, align 8, !dbg !4986
  %241 = load %struct.MXFTrack*, %struct.MXFTrack** %material_track, align 8, !dbg !4987
  %edit_rate = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %241, i32 0, i32 7, !dbg !4989
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %edit_rate, i32 0, i32 0, !dbg !4990
  %242 = load i32, i32* %num, align 4, !dbg !4990
  %cmp238 = icmp sle i32 %242, 0, !dbg !4991
  br i1 %cmp238, label %if.then244, label %lor.lhs.false240, !dbg !4992

lor.lhs.false240:                                 ; preds = %if.end237
  %243 = load %struct.MXFTrack*, %struct.MXFTrack** %material_track, align 8, !dbg !4993
  %edit_rate241 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %243, i32 0, i32 7, !dbg !4994
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %edit_rate241, i32 0, i32 1, !dbg !4995
  %244 = load i32, i32* %den, align 4, !dbg !4995
  %cmp242 = icmp sle i32 %244, 0, !dbg !4996
  br i1 %cmp242, label %if.then244, label %if.end253, !dbg !4997

if.then244:                                       ; preds = %lor.lhs.false240, %if.end237
  %245 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !4999
  %fc245 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %245, i32 0, i32 10, !dbg !5001
  %246 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc245, align 8, !dbg !5001
  %247 = bitcast %struct.AVFormatContext* %246 to i8*, !dbg !4999
  %248 = load %struct.MXFTrack*, %struct.MXFTrack** %material_track, align 8, !dbg !5002
  %edit_rate246 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %248, i32 0, i32 7, !dbg !5003
  %num247 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %edit_rate246, i32 0, i32 0, !dbg !5004
  %249 = load i32, i32* %num247, align 4, !dbg !5004
  %250 = load %struct.MXFTrack*, %struct.MXFTrack** %material_track, align 8, !dbg !5005
  %edit_rate248 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %250, i32 0, i32 7, !dbg !5006
  %den249 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %edit_rate248, i32 0, i32 1, !dbg !5007
  %251 = load i32, i32* %den249, align 4, !dbg !5007
  %252 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5008
  %index = getelementptr inbounds %struct.AVStream, %struct.AVStream* %252, i32 0, i32 0, !dbg !5009
  %253 = load i32, i32* %index, align 8, !dbg !5009
  call void (i8*, i32, i8*, ...) @av_log(i8* %247, i32 24, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.79, i32 0, i32 0), i32 %249, i32 %251, i32 %253), !dbg !5010
  %254 = load %struct.MXFTrack*, %struct.MXFTrack** %material_track, align 8, !dbg !5011
  %edit_rate250 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %254, i32 0, i32 7, !dbg !5012
  %num251 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 0, !dbg !5013
  store i32 25, i32* %num251, align 4, !dbg !5013
  %den252 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 1, !dbg !5013
  store i32 1, i32* %den252, align 4, !dbg !5013
  %255 = bitcast %struct.AVRational* %edit_rate250 to i8*, !dbg !5014
  %256 = bitcast %struct.AVRational* %.compoundliteral to i8*, !dbg !5014
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %255, i8* %256, i64 8, i32 4, i1 false), !dbg !5014
  br label %if.end253, !dbg !5015

if.end253:                                        ; preds = %if.then244, %lor.lhs.false240
  %257 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5016
  %258 = load %struct.MXFTrack*, %struct.MXFTrack** %material_track, align 8, !dbg !5017
  %edit_rate254 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %258, i32 0, i32 7, !dbg !5018
  %den255 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %edit_rate254, i32 0, i32 1, !dbg !5019
  %259 = load i32, i32* %den255, align 4, !dbg !5019
  %260 = load %struct.MXFTrack*, %struct.MXFTrack** %material_track, align 8, !dbg !5020
  %edit_rate256 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %260, i32 0, i32 7, !dbg !5021
  %num257 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %edit_rate256, i32 0, i32 0, !dbg !5022
  %261 = load i32, i32* %num257, align 4, !dbg !5022
  call void @avpriv_set_pts_info(%struct.AVStream* %257, i32 64, i32 %259, i32 %261), !dbg !5023
  %262 = load %struct.MXFTrack*, %struct.MXFTrack** %source_track, align 8, !dbg !5024
  %edit_rate258 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %262, i32 0, i32 7, !dbg !5025
  %263 = load %struct.MXFTrack*, %struct.MXFTrack** %material_track, align 8, !dbg !5026
  %edit_rate259 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %263, i32 0, i32 7, !dbg !5027
  %264 = bitcast %struct.AVRational* %edit_rate258 to i8*, !dbg !5027
  %265 = bitcast %struct.AVRational* %edit_rate259 to i8*, !dbg !5027
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %264, i8* %265, i64 8, i32 4, i1 false), !dbg !5027
  br label %do.body, !dbg !5028, !llvm.loop !5029

do.body:                                          ; preds = %if.end253
  br label %do.end, !dbg !5030

do.end:                                           ; preds = %do.body
  %266 = load %struct.MXFTrack*, %struct.MXFTrack** %source_track, align 8, !dbg !5033
  %sequence260 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %266, i32 0, i32 2, !dbg !5034
  %267 = load %struct.MXFSequence*, %struct.MXFSequence** %sequence260, align 8, !dbg !5034
  %data_definition_ul261 = getelementptr inbounds %struct.MXFSequence, %struct.MXFSequence* %267, i32 0, i32 2, !dbg !5035
  %call262 = call %struct.MXFCodecUL* @mxf_get_codec_ul(%struct.MXFCodecUL* getelementptr inbounds ([0 x %struct.MXFCodecUL], [0 x %struct.MXFCodecUL]* @ff_mxf_data_definition_uls, i32 0, i32 0), [16 x i8]* %data_definition_ul261), !dbg !5036
  store %struct.MXFCodecUL* %call262, %struct.MXFCodecUL** %codec_ul, align 8, !dbg !5037
  %268 = load %struct.MXFCodecUL*, %struct.MXFCodecUL** %codec_ul, align 8, !dbg !5038
  %id263 = getelementptr inbounds %struct.MXFCodecUL, %struct.MXFCodecUL* %268, i32 0, i32 2, !dbg !5039
  %269 = load i32, i32* %id263, align 4, !dbg !5039
  %270 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5040
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %270, i32 0, i32 19, !dbg !5041
  %271 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !5041
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %271, i32 0, i32 0, !dbg !5042
  store i32 %269, i32* %codec_type, align 8, !dbg !5043
  %272 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5044
  %tobool264 = icmp ne %struct.MXFDescriptor* %272, null, !dbg !5044
  br i1 %tobool264, label %if.end269, label %if.then265, !dbg !5046

if.then265:                                       ; preds = %do.end
  %273 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !5047
  %fc266 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %273, i32 0, i32 10, !dbg !5049
  %274 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc266, align 8, !dbg !5049
  %275 = bitcast %struct.AVFormatContext* %274 to i8*, !dbg !5047
  %276 = load %struct.MXFTrack*, %struct.MXFTrack** %source_track, align 8, !dbg !5050
  %track_id267 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %276, i32 0, i32 4, !dbg !5051
  %277 = load i32, i32* %track_id267, align 8, !dbg !5051
  %278 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5052
  %index268 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %278, i32 0, i32 0, !dbg !5053
  %279 = load i32, i32* %index268, align 8, !dbg !5053
  call void (i8*, i32, i8*, ...) @av_log(i8* %275, i32 32, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.80, i32 0, i32 0), i32 %277, i32 %279), !dbg !5054
  br label %for.inc764, !dbg !5055

if.end269:                                        ; preds = %do.end
  br label %do.body270, !dbg !5056, !llvm.loop !5057

do.body270:                                       ; preds = %if.end269
  br label %do.end271, !dbg !5058

do.end271:                                        ; preds = %do.body270
  br label %do.body272, !dbg !5061, !llvm.loop !5062

do.body272:                                       ; preds = %do.end271
  br label %do.end273, !dbg !5063

do.end273:                                        ; preds = %do.body272
  %280 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5066
  %essence_container_ul274 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %280, i32 0, i32 2, !dbg !5067
  store [16 x i8]* %essence_container_ul274, [16 x i8]** %essence_container_ul, align 8, !dbg !5068
  %281 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !5069
  %op = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %281, i32 0, i32 3, !dbg !5070
  %282 = load i32, i32* %op, align 4, !dbg !5070
  %cmp275 = icmp eq i32 %282, 10, !dbg !5071
  br i1 %cmp275, label %cond.true277, label %cond.false278, !dbg !5072

cond.true277:                                     ; preds = %do.end273
  br label %cond.end280, !dbg !5073

cond.false278:                                    ; preds = %do.end273
  %283 = load [16 x i8]*, [16 x i8]** %essence_container_ul, align 8, !dbg !5074
  %call279 = call i32 @mxf_get_wrapping_kind([16 x i8]* %283), !dbg !5076
  br label %cond.end280, !dbg !5077

cond.end280:                                      ; preds = %cond.false278, %cond.true277
  %cond281 = phi i32 [ 2, %cond.true277 ], [ %call279, %cond.false278 ], !dbg !5078
  %284 = load %struct.MXFTrack*, %struct.MXFTrack** %source_track, align 8, !dbg !5080
  %wrapping = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %284, i32 0, i32 13, !dbg !5081
  store i32 %cond281, i32* %wrapping, align 8, !dbg !5082
  %285 = load %struct.MXFTrack*, %struct.MXFTrack** %source_track, align 8, !dbg !5083
  %wrapping282 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %285, i32 0, i32 13, !dbg !5085
  %286 = load i32, i32* %wrapping282, align 8, !dbg !5085
  %cmp283 = icmp eq i32 %286, 0, !dbg !5086
  br i1 %cmp283, label %if.then285, label %if.end288, !dbg !5087

if.then285:                                       ; preds = %cond.end280
  %287 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !5088
  %fc286 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %287, i32 0, i32 10, !dbg !5089
  %288 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc286, align 8, !dbg !5089
  %289 = bitcast %struct.AVFormatContext* %288 to i8*, !dbg !5088
  %290 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5090
  %index287 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %290, i32 0, i32 0, !dbg !5091
  %291 = load i32, i32* %index287, align 8, !dbg !5091
  call void (i8*, i32, i8*, ...) @av_log(i8* %289, i32 32, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.81, i32 0, i32 0), i32 %291), !dbg !5092
  br label %if.end288, !dbg !5092

if.end288:                                        ; preds = %if.then285, %cond.end280
  %292 = load [16 x i8]*, [16 x i8]** %essence_container_ul, align 8, !dbg !5093
  %293 = bitcast [16 x i8]* %292 to i8*, !dbg !5093
  %call289 = call i32 @memcmp(i8* %293, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @mxf_encrypted_essence_container, i32 0, i32 0), i64 16) #9, !dbg !5095
  %tobool290 = icmp ne i32 %call289, 0, !dbg !5095
  br i1 %tobool290, label %if.end308, label %if.then291, !dbg !5096

if.then291:                                       ; preds = %if.end288
  %294 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !5097
  %fc292 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %294, i32 0, i32 10, !dbg !5099
  %295 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc292, align 8, !dbg !5099
  %296 = bitcast %struct.AVFormatContext* %295 to i8*, !dbg !5097
  call void (i8*, i32, i8*, ...) @av_log(i8* %296, i32 32, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.82, i32 0, i32 0)), !dbg !5100
  store i32 0, i32* %k, align 4, !dbg !5101
  br label %for.cond293, !dbg !5103

for.cond293:                                      ; preds = %for.inc305, %if.then291
  %297 = load i32, i32* %k, align 4, !dbg !5104
  %298 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !5107
  %metadata_sets_count294 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %298, i32 0, i32 9, !dbg !5108
  %299 = load i32, i32* %metadata_sets_count294, align 8, !dbg !5108
  %cmp295 = icmp slt i32 %297, %299, !dbg !5109
  br i1 %cmp295, label %for.body297, label %for.end307, !dbg !5110

for.body297:                                      ; preds = %for.cond293
  call void @llvm.dbg.declare(metadata %struct.MXFMetadataSet** %metadata298, metadata !5111, metadata !2511), !dbg !5113
  %300 = load i32, i32* %k, align 4, !dbg !5114
  %idxprom299 = sext i32 %300 to i64, !dbg !5115
  %301 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !5115
  %metadata_sets = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %301, i32 0, i32 8, !dbg !5116
  %302 = load %struct.MXFMetadataSet**, %struct.MXFMetadataSet*** %metadata_sets, align 8, !dbg !5116
  %arrayidx300 = getelementptr inbounds %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %302, i64 %idxprom299, !dbg !5115
  %303 = load %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %arrayidx300, align 8, !dbg !5115
  store %struct.MXFMetadataSet* %303, %struct.MXFMetadataSet** %metadata298, align 8, !dbg !5113
  %304 = load %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %metadata298, align 8, !dbg !5117
  %type = getelementptr inbounds %struct.MXFMetadataSet, %struct.MXFMetadataSet* %304, i32 0, i32 1, !dbg !5119
  %305 = load i32, i32* %type, align 4, !dbg !5119
  %cmp301 = icmp eq i32 %305, 10, !dbg !5120
  br i1 %cmp301, label %if.then303, label %if.end304, !dbg !5121

if.then303:                                       ; preds = %for.body297
  %306 = load %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %metadata298, align 8, !dbg !5122
  %307 = bitcast %struct.MXFMetadataSet* %306 to %struct.MXFCryptoContext*, !dbg !5124
  %source_container_ul = getelementptr inbounds %struct.MXFCryptoContext, %struct.MXFCryptoContext* %307, i32 0, i32 2, !dbg !5124
  store [16 x i8]* %source_container_ul, [16 x i8]** %essence_container_ul, align 8, !dbg !5125
  br label %for.end307, !dbg !5126

if.end304:                                        ; preds = %for.body297
  br label %for.inc305, !dbg !5127

for.inc305:                                       ; preds = %if.end304
  %308 = load i32, i32* %k, align 4, !dbg !5128
  %inc306 = add nsw i32 %308, 1, !dbg !5128
  store i32 %inc306, i32* %k, align 4, !dbg !5128
  br label %for.cond293, !dbg !5130, !llvm.loop !5131

for.end307:                                       ; preds = %if.then303, %for.cond293
  br label %if.end308, !dbg !5133

if.end308:                                        ; preds = %for.end307, %if.end288
  %309 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5134
  %essence_codec_ul = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %309, i32 0, i32 3, !dbg !5135
  %call309 = call %struct.MXFCodecUL* @mxf_get_codec_ul(%struct.MXFCodecUL* getelementptr inbounds ([0 x %struct.MXFCodecUL], [0 x %struct.MXFCodecUL]* @ff_mxf_codec_uls, i32 0, i32 0), [16 x i8]* %essence_codec_ul), !dbg !5136
  store %struct.MXFCodecUL* %call309, %struct.MXFCodecUL** %codec_ul, align 8, !dbg !5137
  %310 = load %struct.MXFCodecUL*, %struct.MXFCodecUL** %codec_ul, align 8, !dbg !5138
  %id310 = getelementptr inbounds %struct.MXFCodecUL, %struct.MXFCodecUL* %310, i32 0, i32 2, !dbg !5139
  %311 = load i32, i32* %id310, align 4, !dbg !5139
  %312 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5140
  %codecpar311 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %312, i32 0, i32 19, !dbg !5141
  %313 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar311, align 8, !dbg !5141
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %313, i32 0, i32 1, !dbg !5142
  store i32 %311, i32* %codec_id, align 4, !dbg !5143
  %314 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5144
  %codecpar312 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %314, i32 0, i32 19, !dbg !5146
  %315 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar312, align 8, !dbg !5146
  %codec_id313 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %315, i32 0, i32 1, !dbg !5147
  %316 = load i32, i32* %codec_id313, align 4, !dbg !5147
  %cmp314 = icmp eq i32 %316, 0, !dbg !5148
  br i1 %cmp314, label %if.then316, label %if.end322, !dbg !5149

if.then316:                                       ; preds = %if.end308
  %317 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5150
  %codec_ul317 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %317, i32 0, i32 4, !dbg !5152
  %call318 = call %struct.MXFCodecUL* @mxf_get_codec_ul(%struct.MXFCodecUL* getelementptr inbounds ([0 x %struct.MXFCodecUL], [0 x %struct.MXFCodecUL]* @ff_mxf_codec_uls, i32 0, i32 0), [16 x i8]* %codec_ul317), !dbg !5153
  store %struct.MXFCodecUL* %call318, %struct.MXFCodecUL** %codec_ul, align 8, !dbg !5154
  %318 = load %struct.MXFCodecUL*, %struct.MXFCodecUL** %codec_ul, align 8, !dbg !5155
  %id319 = getelementptr inbounds %struct.MXFCodecUL, %struct.MXFCodecUL* %318, i32 0, i32 2, !dbg !5156
  %319 = load i32, i32* %id319, align 4, !dbg !5156
  %320 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5157
  %codecpar320 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %320, i32 0, i32 19, !dbg !5158
  %321 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar320, align 8, !dbg !5158
  %codec_id321 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %321, i32 0, i32 1, !dbg !5159
  store i32 %319, i32* %codec_id321, align 4, !dbg !5160
  br label %if.end322, !dbg !5161

if.end322:                                        ; preds = %if.then316, %if.end308
  %322 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !5162
  %fc323 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %322, i32 0, i32 10, !dbg !5163
  %323 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc323, align 8, !dbg !5163
  %324 = bitcast %struct.AVFormatContext* %323 to i8*, !dbg !5162
  %325 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5164
  %codecpar324 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %325, i32 0, i32 19, !dbg !5165
  %326 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar324, align 8, !dbg !5165
  %codec_id325 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %326, i32 0, i32 1, !dbg !5166
  %327 = load i32, i32* %codec_id325, align 4, !dbg !5166
  %call326 = call i8* @avcodec_get_name(i32 %327), !dbg !5167
  call void (i8*, i32, i8*, ...) @av_log(i8* %324, i32 40, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.83, i32 0, i32 0), i8* %call326), !dbg !5168
  store i32 0, i32* %k, align 4, !dbg !5169
  br label %for.cond327, !dbg !5171

for.cond327:                                      ; preds = %for.inc343, %if.end322
  %328 = load i32, i32* %k, align 4, !dbg !5172
  %cmp328 = icmp slt i32 %328, 16, !dbg !5175
  br i1 %cmp328, label %for.body330, label %for.end345, !dbg !5176

for.body330:                                      ; preds = %for.cond327
  %329 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !5177
  %fc331 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %329, i32 0, i32 10, !dbg !5179
  %330 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc331, align 8, !dbg !5179
  %331 = bitcast %struct.AVFormatContext* %330 to i8*, !dbg !5177
  %332 = load i32, i32* %k, align 4, !dbg !5180
  %idxprom332 = sext i32 %332 to i64, !dbg !5181
  %333 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5181
  %essence_codec_ul333 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %333, i32 0, i32 3, !dbg !5182
  %arrayidx334 = getelementptr inbounds [16 x i8], [16 x i8]* %essence_codec_ul333, i64 0, i64 %idxprom332, !dbg !5181
  %334 = load i8, i8* %arrayidx334, align 1, !dbg !5181
  %conv335 = zext i8 %334 to i32, !dbg !5181
  call void (i8*, i32, i8*, ...) @av_log(i8* %331, i32 40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i32 0, i32 0), i32 %conv335), !dbg !5183
  %335 = load i32, i32* %k, align 4, !dbg !5184
  %add = add nsw i32 %335, 1, !dbg !5186
  %and = and i32 %add, 19, !dbg !5187
  %tobool336 = icmp ne i32 %and, 0, !dbg !5187
  br i1 %tobool336, label %lor.lhs.false337, label %if.then340, !dbg !5188

lor.lhs.false337:                                 ; preds = %for.body330
  %336 = load i32, i32* %k, align 4, !dbg !5189
  %cmp338 = icmp eq i32 %336, 5, !dbg !5191
  br i1 %cmp338, label %if.then340, label %if.end342, !dbg !5192

if.then340:                                       ; preds = %lor.lhs.false337, %for.body330
  %337 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !5193
  %fc341 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %337, i32 0, i32 10, !dbg !5194
  %338 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc341, align 8, !dbg !5194
  %339 = bitcast %struct.AVFormatContext* %338 to i8*, !dbg !5193
  call void (i8*, i32, i8*, ...) @av_log(i8* %339, i32 40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.84, i32 0, i32 0)), !dbg !5195
  br label %if.end342, !dbg !5195

if.end342:                                        ; preds = %if.then340, %lor.lhs.false337
  br label %for.inc343, !dbg !5196

for.inc343:                                       ; preds = %if.end342
  %340 = load i32, i32* %k, align 4, !dbg !5197
  %inc344 = add nsw i32 %340, 1, !dbg !5197
  store i32 %inc344, i32* %k, align 4, !dbg !5197
  br label %for.cond327, !dbg !5199, !llvm.loop !5200

for.end345:                                       ; preds = %for.cond327
  %341 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !5202
  %fc346 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %341, i32 0, i32 10, !dbg !5203
  %342 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc346, align 8, !dbg !5203
  %343 = bitcast %struct.AVFormatContext* %342 to i8*, !dbg !5202
  call void (i8*, i32, i8*, ...) @av_log(i8* %343, i32 40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85, i32 0, i32 0)), !dbg !5204
  %344 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5205
  %metadata347 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %344, i32 0, i32 11, !dbg !5206
  %345 = load %struct.MXFPackage*, %struct.MXFPackage** %source_package, align 8, !dbg !5207
  %call348 = call i32 @mxf_add_umid_metadata(%struct.AVDictionary** %metadata347, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.86, i32 0, i32 0), %struct.MXFPackage* %345), !dbg !5208
  %346 = load %struct.MXFPackage*, %struct.MXFPackage** %source_package, align 8, !dbg !5209
  %name349 = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %346, i32 0, i32 8, !dbg !5211
  %347 = load i8*, i8** %name349, align 8, !dbg !5211
  %tobool350 = icmp ne i8* %347, null, !dbg !5209
  br i1 %tobool350, label %land.lhs.true351, label %if.end360, !dbg !5212

land.lhs.true351:                                 ; preds = %for.end345
  %348 = load %struct.MXFPackage*, %struct.MXFPackage** %source_package, align 8, !dbg !5213
  %name352 = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %348, i32 0, i32 8, !dbg !5215
  %349 = load i8*, i8** %name352, align 8, !dbg !5215
  %arrayidx353 = getelementptr inbounds i8, i8* %349, i64 0, !dbg !5213
  %350 = load i8, i8* %arrayidx353, align 1, !dbg !5213
  %conv354 = sext i8 %350 to i32, !dbg !5213
  %tobool355 = icmp ne i32 %conv354, 0, !dbg !5213
  br i1 %tobool355, label %if.then356, label %if.end360, !dbg !5216

if.then356:                                       ; preds = %land.lhs.true351
  %351 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5217
  %metadata357 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %351, i32 0, i32 11, !dbg !5218
  %352 = load %struct.MXFPackage*, %struct.MXFPackage** %source_package, align 8, !dbg !5219
  %name358 = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %352, i32 0, i32 8, !dbg !5220
  %353 = load i8*, i8** %name358, align 8, !dbg !5220
  %call359 = call i32 @av_dict_set(%struct.AVDictionary** %metadata357, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.87, i32 0, i32 0), i8* %353, i32 0), !dbg !5221
  br label %if.end360, !dbg !5221

if.end360:                                        ; preds = %if.then356, %land.lhs.true351, %for.end345
  %354 = load %struct.MXFTrack*, %struct.MXFTrack** %material_track, align 8, !dbg !5222
  %name361 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %354, i32 0, i32 5, !dbg !5224
  %355 = load i8*, i8** %name361, align 8, !dbg !5224
  %tobool362 = icmp ne i8* %355, null, !dbg !5222
  br i1 %tobool362, label %land.lhs.true363, label %if.end372, !dbg !5225

land.lhs.true363:                                 ; preds = %if.end360
  %356 = load %struct.MXFTrack*, %struct.MXFTrack** %material_track, align 8, !dbg !5226
  %name364 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %356, i32 0, i32 5, !dbg !5228
  %357 = load i8*, i8** %name364, align 8, !dbg !5228
  %arrayidx365 = getelementptr inbounds i8, i8* %357, i64 0, !dbg !5226
  %358 = load i8, i8* %arrayidx365, align 1, !dbg !5226
  %conv366 = sext i8 %358 to i32, !dbg !5226
  %tobool367 = icmp ne i32 %conv366, 0, !dbg !5226
  br i1 %tobool367, label %if.then368, label %if.end372, !dbg !5229

if.then368:                                       ; preds = %land.lhs.true363
  %359 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5230
  %metadata369 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %359, i32 0, i32 11, !dbg !5231
  %360 = load %struct.MXFTrack*, %struct.MXFTrack** %material_track, align 8, !dbg !5232
  %name370 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %360, i32 0, i32 5, !dbg !5233
  %361 = load i8*, i8** %name370, align 8, !dbg !5233
  %call371 = call i32 @av_dict_set(%struct.AVDictionary** %metadata369, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.88, i32 0, i32 0), i8* %361, i32 0), !dbg !5234
  br label %if.end372, !dbg !5234

if.end372:                                        ; preds = %if.then368, %land.lhs.true363, %if.end360
  %362 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !5235
  %363 = load %struct.MXFTrack*, %struct.MXFTrack** %source_track, align 8, !dbg !5236
  %364 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5237
  %call373 = call i32 @mxf_parse_physical_source_package(%struct.MXFContext* %362, %struct.MXFTrack* %363, %struct.AVStream* %364), !dbg !5238
  %365 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5239
  %codecpar374 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %365, i32 0, i32 19, !dbg !5240
  %366 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar374, align 8, !dbg !5240
  %codec_type375 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %366, i32 0, i32 0, !dbg !5241
  %367 = load i32, i32* %codec_type375, align 8, !dbg !5241
  %cmp376 = icmp eq i32 %367, 0, !dbg !5242
  br i1 %cmp376, label %if.then378, label %if.else553, !dbg !5243

if.then378:                                       ; preds = %if.end372
  %368 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5244
  %call379 = call i32 @mxf_is_intra_only(%struct.MXFDescriptor* %368), !dbg !5246
  %369 = load %struct.MXFTrack*, %struct.MXFTrack** %source_track, align 8, !dbg !5247
  %intra_only = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %369, i32 0, i32 8, !dbg !5248
  store i32 %call379, i32* %intra_only, align 4, !dbg !5249
  %370 = load [16 x i8]*, [16 x i8]** %essence_container_ul, align 8, !dbg !5250
  %call380 = call %struct.MXFCodecUL* @mxf_get_codec_ul(%struct.MXFCodecUL* getelementptr inbounds ([16 x %struct.MXFCodecUL], [16 x %struct.MXFCodecUL]* @mxf_picture_essence_container_uls, i32 0, i32 0), [16 x i8]* %370), !dbg !5251
  store %struct.MXFCodecUL* %call380, %struct.MXFCodecUL** %container_ul, align 8, !dbg !5252
  %371 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5253
  %codecpar381 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %371, i32 0, i32 19, !dbg !5255
  %372 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar381, align 8, !dbg !5255
  %codec_id382 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %372, i32 0, i32 1, !dbg !5256
  %373 = load i32, i32* %codec_id382, align 4, !dbg !5256
  %cmp383 = icmp eq i32 %373, 0, !dbg !5257
  br i1 %cmp383, label %if.then385, label %if.end389, !dbg !5258

if.then385:                                       ; preds = %if.then378
  %374 = load %struct.MXFCodecUL*, %struct.MXFCodecUL** %container_ul, align 8, !dbg !5259
  %id386 = getelementptr inbounds %struct.MXFCodecUL, %struct.MXFCodecUL* %374, i32 0, i32 2, !dbg !5260
  %375 = load i32, i32* %id386, align 4, !dbg !5260
  %376 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5261
  %codecpar387 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %376, i32 0, i32 19, !dbg !5262
  %377 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar387, align 8, !dbg !5262
  %codec_id388 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %377, i32 0, i32 1, !dbg !5263
  store i32 %375, i32* %codec_id388, align 4, !dbg !5264
  br label %if.end389, !dbg !5261

if.end389:                                        ; preds = %if.then385, %if.then378
  %378 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5265
  %width = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %378, i32 0, i32 7, !dbg !5266
  %379 = load i32, i32* %width, align 4, !dbg !5266
  %380 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5267
  %codecpar390 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %380, i32 0, i32 19, !dbg !5268
  %381 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar390, align 8, !dbg !5268
  %width391 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %381, i32 0, i32 11, !dbg !5269
  store i32 %379, i32* %width391, align 8, !dbg !5270
  %382 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5271
  %height = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %382, i32 0, i32 8, !dbg !5272
  %383 = load i32, i32* %height, align 8, !dbg !5272
  %384 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5273
  %codecpar392 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %384, i32 0, i32 19, !dbg !5274
  %385 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar392, align 8, !dbg !5274
  %height393 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %385, i32 0, i32 12, !dbg !5275
  store i32 %383, i32* %height393, align 4, !dbg !5276
  %386 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5277
  %frame_layout = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %386, i32 0, i32 9, !dbg !5278
  %387 = load i32, i32* %frame_layout, align 4, !dbg !5278
  switch i32 %387, label %sw.default448 [
    i32 0, label %sw.bb
    i32 2, label %sw.bb395
    i32 3, label %sw.bb397
    i32 4, label %sw.bb398
    i32 1, label %sw.bb401
  ], !dbg !5279

sw.bb:                                            ; preds = %if.end389
  %388 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5280
  %codecpar394 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %388, i32 0, i32 19, !dbg !5282
  %389 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar394, align 8, !dbg !5282
  %field_order = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %389, i32 0, i32 14, !dbg !5283
  store i32 1, i32* %field_order, align 8, !dbg !5284
  br label %sw.epilog451, !dbg !5285

sw.bb395:                                         ; preds = %if.end389
  %390 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !5286
  %fc396 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %390, i32 0, i32 10, !dbg !5287
  %391 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc396, align 8, !dbg !5287
  %392 = bitcast %struct.AVFormatContext* %391 to i8*, !dbg !5286
  call void (i8*, i32, i8*, ...) @av_log(i8* %392, i32 32, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.89, i32 0, i32 0)), !dbg !5288
  br label %sw.epilog451, !dbg !5289

sw.bb397:                                         ; preds = %if.end389
  br label %sw.epilog451, !dbg !5290

sw.bb398:                                         ; preds = %if.end389
  %393 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5291
  %codecpar399 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %393, i32 0, i32 19, !dbg !5292
  %394 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar399, align 8, !dbg !5292
  %field_order400 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %394, i32 0, i32 14, !dbg !5293
  store i32 1, i32* %field_order400, align 8, !dbg !5294
  br label %sw.bb401, !dbg !5291

sw.bb401:                                         ; preds = %if.end389, %sw.bb398
  %395 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !5295
  %fc402 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %395, i32 0, i32 10, !dbg !5296
  %396 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc402, align 8, !dbg !5296
  %397 = bitcast %struct.AVFormatContext* %396 to i8*, !dbg !5295
  %398 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5297
  %video_line_map = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %398, i32 0, i32 10, !dbg !5298
  %arrayidx403 = getelementptr inbounds [2 x i32], [2 x i32]* %video_line_map, i64 0, i64 0, !dbg !5297
  %399 = load i32, i32* %arrayidx403, align 8, !dbg !5297
  %400 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5299
  %video_line_map404 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %400, i32 0, i32 10, !dbg !5300
  %arrayidx405 = getelementptr inbounds [2 x i32], [2 x i32]* %video_line_map404, i64 0, i64 1, !dbg !5299
  %401 = load i32, i32* %arrayidx405, align 4, !dbg !5299
  %402 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5301
  %field_dominance = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %402, i32 0, i32 11, !dbg !5302
  %403 = load i32, i32* %field_dominance, align 8, !dbg !5302
  call void (i8*, i32, i8*, ...) @av_log(i8* %397, i32 48, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.90, i32 0, i32 0), i32 %399, i32 %401, i32 %403), !dbg !5303
  %404 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5304
  %video_line_map406 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %404, i32 0, i32 10, !dbg !5306
  %arrayidx407 = getelementptr inbounds [2 x i32], [2 x i32]* %video_line_map406, i64 0, i64 0, !dbg !5304
  %405 = load i32, i32* %arrayidx407, align 8, !dbg !5304
  %cmp408 = icmp sgt i32 %405, 0, !dbg !5307
  br i1 %cmp408, label %land.lhs.true410, label %if.end445, !dbg !5308

land.lhs.true410:                                 ; preds = %sw.bb401
  %406 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5309
  %video_line_map411 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %406, i32 0, i32 10, !dbg !5311
  %arrayidx412 = getelementptr inbounds [2 x i32], [2 x i32]* %video_line_map411, i64 0, i64 1, !dbg !5309
  %407 = load i32, i32* %arrayidx412, align 4, !dbg !5309
  %cmp413 = icmp sgt i32 %407, 0, !dbg !5312
  br i1 %cmp413, label %if.then415, label %if.end445, !dbg !5313

if.then415:                                       ; preds = %land.lhs.true410
  %408 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5314
  %video_line_map416 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %408, i32 0, i32 10, !dbg !5317
  %arrayidx417 = getelementptr inbounds [2 x i32], [2 x i32]* %video_line_map416, i64 0, i64 0, !dbg !5314
  %409 = load i32, i32* %arrayidx417, align 8, !dbg !5314
  %410 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5318
  %video_line_map418 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %410, i32 0, i32 10, !dbg !5319
  %arrayidx419 = getelementptr inbounds [2 x i32], [2 x i32]* %video_line_map418, i64 0, i64 1, !dbg !5318
  %411 = load i32, i32* %arrayidx419, align 4, !dbg !5318
  %add420 = add nsw i32 %409, %411, !dbg !5320
  %rem = srem i32 %add420, 2, !dbg !5321
  %tobool421 = icmp ne i32 %rem, 0, !dbg !5321
  br i1 %tobool421, label %if.then422, label %if.else432, !dbg !5322

if.then422:                                       ; preds = %if.then415
  %412 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5323
  %field_dominance423 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %412, i32 0, i32 11, !dbg !5325
  %413 = load i32, i32* %field_dominance423, align 8, !dbg !5325
  switch i32 %413, label %sw.default [
    i32 0, label %sw.bb424
    i32 1, label %sw.bb424
    i32 2, label %sw.bb427
  ], !dbg !5326

sw.bb424:                                         ; preds = %if.then422, %if.then422
  %414 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5327
  %codecpar425 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %414, i32 0, i32 19, !dbg !5329
  %415 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar425, align 8, !dbg !5329
  %field_order426 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %415, i32 0, i32 14, !dbg !5330
  store i32 2, i32* %field_order426, align 8, !dbg !5331
  br label %sw.epilog, !dbg !5332

sw.bb427:                                         ; preds = %if.then422
  %416 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5333
  %codecpar428 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %416, i32 0, i32 19, !dbg !5334
  %417 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar428, align 8, !dbg !5334
  %field_order429 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %417, i32 0, i32 14, !dbg !5335
  store i32 4, i32* %field_order429, align 8, !dbg !5336
  br label %sw.epilog, !dbg !5337

sw.default:                                       ; preds = %if.then422
  %418 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !5338
  %fc430 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %418, i32 0, i32 10, !dbg !5339
  %419 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc430, align 8, !dbg !5339
  %420 = bitcast %struct.AVFormatContext* %419 to i8*, !dbg !5338
  %421 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5340
  %field_dominance431 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %421, i32 0, i32 11, !dbg !5341
  %422 = load i32, i32* %field_dominance431, align 8, !dbg !5341
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %420, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.91, i32 0, i32 0), i32 %422), !dbg !5342
  br label %sw.epilog, !dbg !5343

sw.epilog:                                        ; preds = %sw.default, %sw.bb427, %sw.bb424
  br label %if.end444, !dbg !5344

if.else432:                                       ; preds = %if.then415
  %423 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5345
  %field_dominance433 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %423, i32 0, i32 11, !dbg !5347
  %424 = load i32, i32* %field_dominance433, align 8, !dbg !5347
  switch i32 %424, label %sw.default440 [
    i32 0, label %sw.bb434
    i32 1, label %sw.bb434
    i32 2, label %sw.bb437
  ], !dbg !5348

sw.bb434:                                         ; preds = %if.else432, %if.else432
  %425 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5349
  %codecpar435 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %425, i32 0, i32 19, !dbg !5351
  %426 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar435, align 8, !dbg !5351
  %field_order436 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %426, i32 0, i32 14, !dbg !5352
  store i32 3, i32* %field_order436, align 8, !dbg !5353
  br label %sw.epilog443, !dbg !5354

sw.bb437:                                         ; preds = %if.else432
  %427 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5355
  %codecpar438 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %427, i32 0, i32 19, !dbg !5356
  %428 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar438, align 8, !dbg !5356
  %field_order439 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %428, i32 0, i32 14, !dbg !5357
  store i32 5, i32* %field_order439, align 8, !dbg !5358
  br label %sw.epilog443, !dbg !5359

sw.default440:                                    ; preds = %if.else432
  %429 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !5360
  %fc441 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %429, i32 0, i32 10, !dbg !5361
  %430 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc441, align 8, !dbg !5361
  %431 = bitcast %struct.AVFormatContext* %430 to i8*, !dbg !5360
  %432 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5362
  %field_dominance442 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %432, i32 0, i32 11, !dbg !5363
  %433 = load i32, i32* %field_dominance442, align 8, !dbg !5363
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %431, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.91, i32 0, i32 0), i32 %433), !dbg !5364
  br label %sw.epilog443, !dbg !5365

sw.epilog443:                                     ; preds = %sw.default440, %sw.bb437, %sw.bb434
  br label %if.end444

if.end444:                                        ; preds = %sw.epilog443, %sw.epilog
  br label %if.end445, !dbg !5366

if.end445:                                        ; preds = %if.end444, %land.lhs.true410, %sw.bb401
  %434 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5367
  %codecpar446 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %434, i32 0, i32 19, !dbg !5368
  %435 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar446, align 8, !dbg !5368
  %height447 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %435, i32 0, i32 12, !dbg !5369
  %436 = load i32, i32* %height447, align 4, !dbg !5370
  %mul = mul nsw i32 %436, 2, !dbg !5370
  store i32 %mul, i32* %height447, align 4, !dbg !5370
  br label %sw.epilog451, !dbg !5371

sw.default448:                                    ; preds = %if.end389
  %437 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !5372
  %fc449 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %437, i32 0, i32 10, !dbg !5373
  %438 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc449, align 8, !dbg !5373
  %439 = bitcast %struct.AVFormatContext* %438 to i8*, !dbg !5372
  %440 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5374
  %frame_layout450 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %440, i32 0, i32 9, !dbg !5375
  %441 = load i32, i32* %frame_layout450, align 4, !dbg !5375
  call void (i8*, i32, i8*, ...) @av_log(i8* %439, i32 32, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.92, i32 0, i32 0), i32 %441), !dbg !5376
  br label %sw.epilog451, !dbg !5377

sw.epilog451:                                     ; preds = %sw.default448, %if.end445, %sw.bb397, %sw.bb395, %sw.bb
  %442 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5378
  %codecpar452 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %442, i32 0, i32 19, !dbg !5380
  %443 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar452, align 8, !dbg !5380
  %codec_id453 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %443, i32 0, i32 1, !dbg !5381
  %444 = load i32, i32* %codec_id453, align 4, !dbg !5381
  %cmp454 = icmp eq i32 %444, 147, !dbg !5382
  br i1 %cmp454, label %if.then456, label %if.end478, !dbg !5383

if.then456:                                       ; preds = %sw.epilog451
  %445 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5384
  %essence_codec_ul457 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %445, i32 0, i32 3, !dbg !5386
  %arrayidx458 = getelementptr inbounds [16 x i8], [16 x i8]* %essence_codec_ul457, i64 0, i64 14, !dbg !5384
  %446 = load i8, i8* %arrayidx458, align 2, !dbg !5384
  %conv459 = zext i8 %446 to i32, !dbg !5384
  switch i32 %conv459, label %sw.epilog477 [
    i32 1, label %sw.bb460
    i32 2, label %sw.bb462
    i32 3, label %sw.bb465
    i32 4, label %sw.bb468
    i32 5, label %sw.bb471
    i32 6, label %sw.bb474
  ], !dbg !5387

sw.bb460:                                         ; preds = %if.then456
  %447 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5388
  %codecpar461 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %447, i32 0, i32 19, !dbg !5390
  %448 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar461, align 8, !dbg !5390
  %codec_tag = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %448, i32 0, i32 2, !dbg !5391
  store i32 1868787809, i32* %codec_tag, align 8, !dbg !5392
  br label %sw.epilog477, !dbg !5393

sw.bb462:                                         ; preds = %if.then456
  %449 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5394
  %codecpar463 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %449, i32 0, i32 19, !dbg !5395
  %450 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar463, align 8, !dbg !5395
  %codec_tag464 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %450, i32 0, i32 2, !dbg !5396
  store i32 1935896673, i32* %codec_tag464, align 8, !dbg !5397
  br label %sw.epilog477, !dbg !5398

sw.bb465:                                         ; preds = %if.then456
  %451 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5399
  %codecpar466 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %451, i32 0, i32 19, !dbg !5400
  %452 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar466, align 8, !dbg !5400
  %codec_tag467 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %452, i32 0, i32 2, !dbg !5401
  store i32 1852010593, i32* %codec_tag467, align 8, !dbg !5402
  br label %sw.epilog477, !dbg !5403

sw.bb468:                                         ; preds = %if.then456
  %453 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5404
  %codecpar469 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %453, i32 0, i32 19, !dbg !5405
  %454 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar469, align 8, !dbg !5405
  %codec_tag470 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %454, i32 0, i32 2, !dbg !5406
  store i32 1751347297, i32* %codec_tag470, align 8, !dbg !5407
  br label %sw.epilog477, !dbg !5408

sw.bb471:                                         ; preds = %if.then456
  %455 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5409
  %codecpar472 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %455, i32 0, i32 19, !dbg !5410
  %456 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar472, align 8, !dbg !5410
  %codec_tag473 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %456, i32 0, i32 2, !dbg !5411
  store i32 1748267105, i32* %codec_tag473, align 8, !dbg !5412
  br label %sw.epilog477, !dbg !5413

sw.bb474:                                         ; preds = %if.then456
  %457 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5414
  %codecpar475 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %457, i32 0, i32 19, !dbg !5415
  %458 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar475, align 8, !dbg !5415
  %codec_tag476 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %458, i32 0, i32 2, !dbg !5416
  store i32 2016702561, i32* %codec_tag476, align 8, !dbg !5417
  br label %sw.epilog477, !dbg !5418

sw.epilog477:                                     ; preds = %if.then456, %sw.bb474, %sw.bb471, %sw.bb468, %sw.bb465, %sw.bb462, %sw.bb460
  br label %if.end478, !dbg !5419

if.end478:                                        ; preds = %sw.epilog477, %sw.epilog451
  %459 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5420
  %codecpar479 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %459, i32 0, i32 19, !dbg !5422
  %460 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar479, align 8, !dbg !5422
  %codec_id480 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %460, i32 0, i32 1, !dbg !5423
  %461 = load i32, i32* %codec_id480, align 4, !dbg !5423
  %cmp481 = icmp eq i32 %461, 13, !dbg !5424
  br i1 %cmp481, label %if.then483, label %if.end524, !dbg !5425

if.then483:                                       ; preds = %if.end478
  %462 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5426
  %pix_fmt = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %462, i32 0, i32 23, !dbg !5428
  %463 = load i32, i32* %pix_fmt, align 4, !dbg !5428
  %464 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5429
  %codecpar484 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %464, i32 0, i32 19, !dbg !5430
  %465 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar484, align 8, !dbg !5430
  %format = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %465, i32 0, i32 5, !dbg !5431
  store i32 %463, i32* %format, align 4, !dbg !5432
  %466 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5433
  %codecpar485 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %466, i32 0, i32 19, !dbg !5435
  %467 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar485, align 8, !dbg !5435
  %format486 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %467, i32 0, i32 5, !dbg !5436
  %468 = load i32, i32* %format486, align 4, !dbg !5436
  %cmp487 = icmp eq i32 %468, -1, !dbg !5437
  br i1 %cmp487, label %if.then489, label %if.end523, !dbg !5438

if.then489:                                       ; preds = %if.then483
  %469 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5439
  %essence_codec_ul490 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %469, i32 0, i32 3, !dbg !5441
  %call491 = call %struct.MXFCodecUL* @mxf_get_codec_ul(%struct.MXFCodecUL* getelementptr inbounds ([0 x %struct.MXFCodecUL], [0 x %struct.MXFCodecUL]* @ff_mxf_pixel_format_uls, i32 0, i32 0), [16 x i8]* %essence_codec_ul490), !dbg !5442
  store %struct.MXFCodecUL* %call491, %struct.MXFCodecUL** %pix_fmt_ul, align 8, !dbg !5443
  %470 = load %struct.MXFCodecUL*, %struct.MXFCodecUL** %pix_fmt_ul, align 8, !dbg !5444
  %id492 = getelementptr inbounds %struct.MXFCodecUL, %struct.MXFCodecUL* %470, i32 0, i32 2, !dbg !5445
  %471 = load i32, i32* %id492, align 4, !dbg !5445
  %472 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5446
  %codecpar493 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %472, i32 0, i32 19, !dbg !5447
  %473 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar493, align 8, !dbg !5447
  %format494 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %473, i32 0, i32 5, !dbg !5448
  store i32 %471, i32* %format494, align 4, !dbg !5449
  %474 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5450
  %codecpar495 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %474, i32 0, i32 19, !dbg !5452
  %475 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar495, align 8, !dbg !5452
  %format496 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %475, i32 0, i32 5, !dbg !5453
  %476 = load i32, i32* %format496, align 4, !dbg !5453
  %cmp497 = icmp eq i32 %476, -1, !dbg !5454
  br i1 %cmp497, label %if.then499, label %if.end522, !dbg !5455

if.then499:                                       ; preds = %if.then489
  %477 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5456
  %essence_codec_ul500 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %477, i32 0, i32 3, !dbg !5458
  %call501 = call %struct.MXFCodecUL* @mxf_get_codec_ul(%struct.MXFCodecUL* getelementptr inbounds ([0 x %struct.MXFCodecUL], [0 x %struct.MXFCodecUL]* @ff_mxf_codec_tag_uls, i32 0, i32 0), [16 x i8]* %essence_codec_ul500), !dbg !5459
  %id502 = getelementptr inbounds %struct.MXFCodecUL, %struct.MXFCodecUL* %call501, i32 0, i32 2, !dbg !5460
  %478 = load i32, i32* %id502, align 4, !dbg !5460
  %479 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5461
  %codecpar503 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %479, i32 0, i32 19, !dbg !5462
  %480 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar503, align 8, !dbg !5462
  %codec_tag504 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %480, i32 0, i32 2, !dbg !5463
  store i32 %478, i32* %codec_tag504, align 8, !dbg !5464
  %481 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5465
  %codecpar505 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %481, i32 0, i32 19, !dbg !5467
  %482 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar505, align 8, !dbg !5467
  %codec_tag506 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %482, i32 0, i32 2, !dbg !5468
  %483 = load i32, i32* %codec_tag506, align 8, !dbg !5468
  %tobool507 = icmp ne i32 %483, 0, !dbg !5465
  br i1 %tobool507, label %if.end521, label %if.then508, !dbg !5469

if.then508:                                       ; preds = %if.then499
  %484 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5470
  %horiz_subsampling = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %484, i32 0, i32 16, !dbg !5473
  %485 = load i32, i32* %horiz_subsampling, align 4, !dbg !5473
  %cmp509 = icmp eq i32 %485, 2, !dbg !5474
  br i1 %cmp509, label %land.lhs.true511, label %if.end520, !dbg !5475

land.lhs.true511:                                 ; preds = %if.then508
  %486 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5476
  %vert_subsampling = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %486, i32 0, i32 17, !dbg !5477
  %487 = load i32, i32* %vert_subsampling, align 8, !dbg !5477
  %cmp512 = icmp eq i32 %487, 1, !dbg !5478
  br i1 %cmp512, label %land.lhs.true514, label %if.end520, !dbg !5479

land.lhs.true514:                                 ; preds = %land.lhs.true511
  %488 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5480
  %component_depth = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %488, i32 0, i32 15, !dbg !5481
  %489 = load i32, i32* %component_depth, align 8, !dbg !5481
  %cmp515 = icmp eq i32 %489, 8, !dbg !5482
  br i1 %cmp515, label %if.then517, label %if.end520, !dbg !5483

if.then517:                                       ; preds = %land.lhs.true514
  %490 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5485
  %codecpar518 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %490, i32 0, i32 19, !dbg !5487
  %491 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar518, align 8, !dbg !5487
  %format519 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %491, i32 0, i32 5, !dbg !5488
  store i32 15, i32* %format519, align 4, !dbg !5489
  br label %if.end520, !dbg !5490

if.end520:                                        ; preds = %if.then517, %land.lhs.true514, %land.lhs.true511, %if.then508
  br label %if.end521, !dbg !5491

if.end521:                                        ; preds = %if.end520, %if.then499
  br label %if.end522, !dbg !5492

if.end522:                                        ; preds = %if.end521, %if.then489
  br label %if.end523, !dbg !5493

if.end523:                                        ; preds = %if.end522, %if.then483
  br label %if.end524, !dbg !5494

if.end524:                                        ; preds = %if.end523, %if.end478
  %492 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5495
  %need_parsing = getelementptr inbounds %struct.AVStream, %struct.AVStream* %492, i32 0, i32 28, !dbg !5496
  store i32 2, i32* %need_parsing, align 4, !dbg !5497
  %493 = load %struct.MXFTrack*, %struct.MXFTrack** %material_track, align 8, !dbg !5498
  %sequence525 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %493, i32 0, i32 2, !dbg !5500
  %494 = load %struct.MXFSequence*, %struct.MXFSequence** %sequence525, align 8, !dbg !5500
  %origin = getelementptr inbounds %struct.MXFSequence, %struct.MXFSequence* %494, i32 0, i32 6, !dbg !5501
  %495 = load i8, i8* %origin, align 8, !dbg !5501
  %tobool526 = icmp ne i8 %495, 0, !dbg !5498
  br i1 %tobool526, label %if.then527, label %if.end533, !dbg !5502

if.then527:                                       ; preds = %if.end524
  %496 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5503
  %metadata528 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %496, i32 0, i32 11, !dbg !5505
  %497 = load %struct.MXFTrack*, %struct.MXFTrack** %material_track, align 8, !dbg !5506
  %sequence529 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %497, i32 0, i32 2, !dbg !5507
  %498 = load %struct.MXFSequence*, %struct.MXFSequence** %sequence529, align 8, !dbg !5507
  %origin530 = getelementptr inbounds %struct.MXFSequence, %struct.MXFSequence* %498, i32 0, i32 6, !dbg !5508
  %499 = load i8, i8* %origin530, align 8, !dbg !5508
  %conv531 = zext i8 %499 to i64, !dbg !5506
  %call532 = call i32 @av_dict_set_int(%struct.AVDictionary** %metadata528, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.93, i32 0, i32 0), i64 %conv531, i32 0), !dbg !5509
  br label %if.end533, !dbg !5510

if.end533:                                        ; preds = %if.then527, %if.end524
  %500 = load %struct.MXFTrack*, %struct.MXFTrack** %source_track, align 8, !dbg !5511
  %sequence534 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %500, i32 0, i32 2, !dbg !5513
  %501 = load %struct.MXFSequence*, %struct.MXFSequence** %sequence534, align 8, !dbg !5513
  %origin535 = getelementptr inbounds %struct.MXFSequence, %struct.MXFSequence* %501, i32 0, i32 6, !dbg !5514
  %502 = load i8, i8* %origin535, align 8, !dbg !5514
  %tobool536 = icmp ne i8 %502, 0, !dbg !5511
  br i1 %tobool536, label %if.then537, label %if.end543, !dbg !5515

if.then537:                                       ; preds = %if.end533
  %503 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5516
  %metadata538 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %503, i32 0, i32 11, !dbg !5518
  %504 = load %struct.MXFTrack*, %struct.MXFTrack** %source_track, align 8, !dbg !5519
  %sequence539 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %504, i32 0, i32 2, !dbg !5520
  %505 = load %struct.MXFSequence*, %struct.MXFSequence** %sequence539, align 8, !dbg !5520
  %origin540 = getelementptr inbounds %struct.MXFSequence, %struct.MXFSequence* %505, i32 0, i32 6, !dbg !5521
  %506 = load i8, i8* %origin540, align 8, !dbg !5521
  %conv541 = zext i8 %506 to i64, !dbg !5519
  %call542 = call i32 @av_dict_set_int(%struct.AVDictionary** %metadata538, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.94, i32 0, i32 0), i64 %conv541, i32 0), !dbg !5522
  br label %if.end543, !dbg !5523

if.end543:                                        ; preds = %if.then537, %if.end533
  %507 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5524
  %aspect_ratio = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %507, i32 0, i32 6, !dbg !5526
  %num544 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %aspect_ratio, i32 0, i32 0, !dbg !5527
  %508 = load i32, i32* %num544, align 4, !dbg !5527
  %tobool545 = icmp ne i32 %508, 0, !dbg !5524
  br i1 %tobool545, label %land.lhs.true546, label %if.end552, !dbg !5528

land.lhs.true546:                                 ; preds = %if.end543
  %509 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5529
  %aspect_ratio547 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %509, i32 0, i32 6, !dbg !5531
  %den548 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %aspect_ratio547, i32 0, i32 1, !dbg !5532
  %510 = load i32, i32* %den548, align 4, !dbg !5532
  %tobool549 = icmp ne i32 %510, 0, !dbg !5529
  br i1 %tobool549, label %if.then550, label %if.end552, !dbg !5533

if.then550:                                       ; preds = %land.lhs.true546
  %511 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5534
  %display_aspect_ratio = getelementptr inbounds %struct.AVStream, %struct.AVStream* %511, i32 0, i32 59, !dbg !5535
  %512 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5536
  %aspect_ratio551 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %512, i32 0, i32 6, !dbg !5537
  %513 = bitcast %struct.AVRational* %display_aspect_ratio to i8*, !dbg !5537
  %514 = bitcast %struct.AVRational* %aspect_ratio551 to i8*, !dbg !5537
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %513, i8* %514, i64 8, i32 4, i1 false), !dbg !5537
  br label %if.end552, !dbg !5534

if.end552:                                        ; preds = %if.then550, %land.lhs.true546, %if.end543
  br label %if.end719, !dbg !5538

if.else553:                                       ; preds = %if.end372
  %515 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5539
  %codecpar554 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %515, i32 0, i32 19, !dbg !5541
  %516 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar554, align 8, !dbg !5541
  %codec_type555 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %516, i32 0, i32 0, !dbg !5542
  %517 = load i32, i32* %codec_type555, align 8, !dbg !5542
  %cmp556 = icmp eq i32 %517, 1, !dbg !5543
  br i1 %cmp556, label %if.then558, label %if.else674, !dbg !5539

if.then558:                                       ; preds = %if.else553
  %518 = load [16 x i8]*, [16 x i8]** %essence_container_ul, align 8, !dbg !5544
  %call559 = call %struct.MXFCodecUL* @mxf_get_codec_ul(%struct.MXFCodecUL* getelementptr inbounds ([6 x %struct.MXFCodecUL], [6 x %struct.MXFCodecUL]* @mxf_sound_essence_container_uls, i32 0, i32 0), [16 x i8]* %518), !dbg !5545
  store %struct.MXFCodecUL* %call559, %struct.MXFCodecUL** %container_ul, align 8, !dbg !5546
  %519 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5547
  %codecpar560 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %519, i32 0, i32 19, !dbg !5549
  %520 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar560, align 8, !dbg !5549
  %codec_id561 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %520, i32 0, i32 1, !dbg !5550
  %521 = load i32, i32* %codec_id561, align 4, !dbg !5550
  %cmp562 = icmp eq i32 %521, 0, !dbg !5551
  br i1 %cmp562, label %if.then573, label %lor.lhs.false564, !dbg !5552

lor.lhs.false564:                                 ; preds = %if.then558
  %522 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5553
  %codecpar565 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %522, i32 0, i32 19, !dbg !5555
  %523 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar565, align 8, !dbg !5555
  %codec_id566 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %523, i32 0, i32 1, !dbg !5556
  %524 = load i32, i32* %codec_id566, align 4, !dbg !5556
  %cmp567 = icmp eq i32 %524, 65543, !dbg !5557
  br i1 %cmp567, label %land.lhs.true569, label %if.end577, !dbg !5558

land.lhs.true569:                                 ; preds = %lor.lhs.false564
  %525 = load %struct.MXFCodecUL*, %struct.MXFCodecUL** %container_ul, align 8, !dbg !5559
  %id570 = getelementptr inbounds %struct.MXFCodecUL, %struct.MXFCodecUL* %525, i32 0, i32 2, !dbg !5561
  %526 = load i32, i32* %id570, align 4, !dbg !5561
  %cmp571 = icmp ne i32 %526, 0, !dbg !5562
  br i1 %cmp571, label %if.then573, label %if.end577, !dbg !5563

if.then573:                                       ; preds = %land.lhs.true569, %if.then558
  %527 = load %struct.MXFCodecUL*, %struct.MXFCodecUL** %container_ul, align 8, !dbg !5564
  %id574 = getelementptr inbounds %struct.MXFCodecUL, %struct.MXFCodecUL* %527, i32 0, i32 2, !dbg !5565
  %528 = load i32, i32* %id574, align 4, !dbg !5565
  %529 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5566
  %codecpar575 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %529, i32 0, i32 19, !dbg !5567
  %530 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar575, align 8, !dbg !5567
  %codec_id576 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %530, i32 0, i32 1, !dbg !5568
  store i32 %528, i32* %codec_id576, align 4, !dbg !5569
  br label %if.end577, !dbg !5566

if.end577:                                        ; preds = %if.then573, %land.lhs.true569, %lor.lhs.false564
  %531 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5570
  %channels = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %531, i32 0, i32 12, !dbg !5571
  %532 = load i32, i32* %channels, align 4, !dbg !5571
  %533 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5572
  %codecpar578 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %533, i32 0, i32 19, !dbg !5573
  %534 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar578, align 8, !dbg !5573
  %channels579 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %534, i32 0, i32 22, !dbg !5574
  store i32 %532, i32* %channels579, align 8, !dbg !5575
  %535 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5576
  %sample_rate = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %535, i32 0, i32 5, !dbg !5578
  %den580 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_rate, i32 0, i32 1, !dbg !5579
  %536 = load i32, i32* %den580, align 4, !dbg !5579
  %cmp581 = icmp sgt i32 %536, 0, !dbg !5580
  br i1 %cmp581, label %if.then583, label %if.else594, !dbg !5581

if.then583:                                       ; preds = %if.end577
  %537 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5582
  %sample_rate584 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %537, i32 0, i32 5, !dbg !5584
  %num585 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_rate584, i32 0, i32 0, !dbg !5585
  %538 = load i32, i32* %num585, align 4, !dbg !5585
  %539 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5586
  %sample_rate586 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %539, i32 0, i32 5, !dbg !5587
  %den587 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_rate586, i32 0, i32 1, !dbg !5588
  %540 = load i32, i32* %den587, align 4, !dbg !5588
  %div = sdiv i32 %538, %540, !dbg !5589
  %541 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5590
  %codecpar588 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %541, i32 0, i32 19, !dbg !5591
  %542 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar588, align 8, !dbg !5591
  %sample_rate589 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %542, i32 0, i32 23, !dbg !5592
  store i32 %div, i32* %sample_rate589, align 4, !dbg !5593
  %543 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5594
  %544 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5595
  %sample_rate590 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %544, i32 0, i32 5, !dbg !5596
  %den591 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_rate590, i32 0, i32 1, !dbg !5597
  %545 = load i32, i32* %den591, align 4, !dbg !5597
  %546 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5598
  %sample_rate592 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %546, i32 0, i32 5, !dbg !5599
  %num593 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_rate592, i32 0, i32 0, !dbg !5600
  %547 = load i32, i32* %num593, align 4, !dbg !5600
  call void @avpriv_set_pts_info(%struct.AVStream* %543, i32 64, i32 %545, i32 %547), !dbg !5601
  br label %if.end601, !dbg !5602

if.else594:                                       ; preds = %if.end577
  %548 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !5603
  %fc595 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %548, i32 0, i32 10, !dbg !5605
  %549 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc595, align 8, !dbg !5605
  %550 = bitcast %struct.AVFormatContext* %549 to i8*, !dbg !5603
  %551 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5606
  %sample_rate596 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %551, i32 0, i32 5, !dbg !5607
  %num597 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_rate596, i32 0, i32 0, !dbg !5608
  %552 = load i32, i32* %num597, align 4, !dbg !5608
  %553 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5609
  %sample_rate598 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %553, i32 0, i32 5, !dbg !5610
  %den599 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_rate598, i32 0, i32 1, !dbg !5611
  %554 = load i32, i32* %den599, align 4, !dbg !5611
  %555 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5612
  %index600 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %555, i32 0, i32 0, !dbg !5613
  %556 = load i32, i32* %index600, align 8, !dbg !5613
  call void (i8*, i32, i8*, ...) @av_log(i8* %550, i32 24, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.95, i32 0, i32 0), i32 %552, i32 %554, i32 %556), !dbg !5614
  %557 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5615
  call void @avpriv_set_pts_info(%struct.AVStream* %557, i32 64, i32 1, i32 48000), !dbg !5616
  br label %if.end601

if.end601:                                        ; preds = %if.else594, %if.then583
  %558 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5617
  %duration602 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %558, i32 0, i32 6, !dbg !5618
  %559 = load i64, i64* %duration602, align 8, !dbg !5618
  %cmp603 = icmp ne i64 %559, -9223372036854775808, !dbg !5619
  br i1 %cmp603, label %if.then605, label %if.end611, !dbg !5620

if.then605:                                       ; preds = %if.end601
  %560 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5621
  %duration606 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %560, i32 0, i32 6, !dbg !5622
  %561 = load i64, i64* %duration606, align 8, !dbg !5622
  %562 = load %struct.MXFTrack*, %struct.MXFTrack** %material_track, align 8, !dbg !5623
  %edit_rate607 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %562, i32 0, i32 7, !dbg !5624
  %563 = bitcast %struct.AVRational* %edit_rate607 to i64*, !dbg !5625
  %564 = load i64, i64* %563, align 4, !dbg !5625
  %565 = bitcast %struct.AVRational* %q.i to i64*, !dbg !5625
  store i64 %564, i64* %565, align 4, !dbg !5625
  %num.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r.i, i32 0, i32 0, !dbg !5626
  %den.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q.i, i32 0, i32 1, !dbg !5627
  %566 = load i32, i32* %den.i, align 4, !dbg !5627
  store i32 %566, i32* %num.i, align 4, !dbg !5626
  %den1.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r.i, i32 0, i32 1, !dbg !5626
  %num2.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q.i, i32 0, i32 0, !dbg !5628
  %567 = load i32, i32* %num2.i, align 4, !dbg !5628
  store i32 %567, i32* %den1.i, align 4, !dbg !5626
  %568 = bitcast %struct.AVRational* %retval.i to i8*, !dbg !5629
  %569 = bitcast %struct.AVRational* %r.i to i8*, !dbg !5629
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %568, i8* %569, i64 8, i32 4, i1 false) #8, !dbg !5629
  %570 = bitcast %struct.AVRational* %retval.i to i64*, !dbg !5630
  %571 = load i64, i64* %570, align 4, !dbg !5630
  %572 = bitcast %struct.AVRational* %agg.tmp to i64*, !dbg !5625
  store i64 %571, i64* %572, align 4, !dbg !5625
  %573 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5631
  %time_base = getelementptr inbounds %struct.AVStream, %struct.AVStream* %573, i32 0, i32 4, !dbg !5632
  %574 = bitcast %struct.AVRational* %agg.tmp to i64*, !dbg !5633
  %575 = load i64, i64* %574, align 4, !dbg !5633
  %576 = bitcast %struct.AVRational* %time_base to i64*, !dbg !5633
  %577 = load i64, i64* %576, align 8, !dbg !5633
  %call609 = call i64 @av_rescale_q(i64 %561, i64 %575, i64 %577) #2, !dbg !5633
  %578 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5634
  %duration610 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %578, i32 0, i32 6, !dbg !5635
  store i64 %call609, i64* %duration610, align 8, !dbg !5636
  br label %if.end611, !dbg !5634

if.end611:                                        ; preds = %if.then605, %if.end601
  %579 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5637
  %codecpar612 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %579, i32 0, i32 19, !dbg !5639
  %580 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar612, align 8, !dbg !5639
  %codec_id613 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %580, i32 0, i32 1, !dbg !5640
  %581 = load i32, i32* %codec_id613, align 4, !dbg !5640
  %cmp614 = icmp eq i32 %581, 65536, !dbg !5641
  br i1 %cmp614, label %if.then616, label %if.else635, !dbg !5642

if.then616:                                       ; preds = %if.end611
  %582 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5643
  %bits_per_sample = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %582, i32 0, i32 13, !dbg !5646
  %583 = load i32, i32* %bits_per_sample, align 8, !dbg !5646
  %cmp617 = icmp sgt i32 %583, 16, !dbg !5647
  br i1 %cmp617, label %land.lhs.true619, label %if.else626, !dbg !5648

land.lhs.true619:                                 ; preds = %if.then616
  %584 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5649
  %bits_per_sample620 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %584, i32 0, i32 13, !dbg !5651
  %585 = load i32, i32* %bits_per_sample620, align 8, !dbg !5651
  %cmp621 = icmp sle i32 %585, 24, !dbg !5652
  br i1 %cmp621, label %if.then623, label %if.else626, !dbg !5653

if.then623:                                       ; preds = %land.lhs.true619
  %586 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5654
  %codecpar624 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %586, i32 0, i32 19, !dbg !5655
  %587 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar624, align 8, !dbg !5655
  %codec_id625 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %587, i32 0, i32 1, !dbg !5656
  store i32 65548, i32* %codec_id625, align 4, !dbg !5657
  br label %if.end634, !dbg !5654

if.else626:                                       ; preds = %land.lhs.true619, %if.then616
  %588 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5658
  %bits_per_sample627 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %588, i32 0, i32 13, !dbg !5660
  %589 = load i32, i32* %bits_per_sample627, align 8, !dbg !5660
  %cmp628 = icmp eq i32 %589, 32, !dbg !5661
  br i1 %cmp628, label %if.then630, label %if.end633, !dbg !5662

if.then630:                                       ; preds = %if.else626
  %590 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5663
  %codecpar631 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %590, i32 0, i32 19, !dbg !5664
  %591 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar631, align 8, !dbg !5664
  %codec_id632 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %591, i32 0, i32 1, !dbg !5665
  store i32 65544, i32* %codec_id632, align 4, !dbg !5666
  br label %if.end633, !dbg !5663

if.end633:                                        ; preds = %if.then630, %if.else626
  br label %if.end634

if.end634:                                        ; preds = %if.end633, %if.then623
  br label %if.end669, !dbg !5667

if.else635:                                       ; preds = %if.end611
  %592 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5668
  %codecpar636 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %592, i32 0, i32 19, !dbg !5671
  %593 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar636, align 8, !dbg !5671
  %codec_id637 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %593, i32 0, i32 1, !dbg !5672
  %594 = load i32, i32* %codec_id637, align 4, !dbg !5672
  %cmp638 = icmp eq i32 %594, 65537, !dbg !5673
  br i1 %cmp638, label %if.then640, label %if.else660, !dbg !5668

if.then640:                                       ; preds = %if.else635
  %595 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5674
  %bits_per_sample641 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %595, i32 0, i32 13, !dbg !5677
  %596 = load i32, i32* %bits_per_sample641, align 8, !dbg !5677
  %cmp642 = icmp sgt i32 %596, 16, !dbg !5678
  br i1 %cmp642, label %land.lhs.true644, label %if.else651, !dbg !5679

land.lhs.true644:                                 ; preds = %if.then640
  %597 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5680
  %bits_per_sample645 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %597, i32 0, i32 13, !dbg !5682
  %598 = load i32, i32* %bits_per_sample645, align 8, !dbg !5682
  %cmp646 = icmp sle i32 %598, 24, !dbg !5683
  br i1 %cmp646, label %if.then648, label %if.else651, !dbg !5684

if.then648:                                       ; preds = %land.lhs.true644
  %599 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5685
  %codecpar649 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %599, i32 0, i32 19, !dbg !5686
  %600 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar649, align 8, !dbg !5686
  %codec_id650 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %600, i32 0, i32 1, !dbg !5687
  store i32 65549, i32* %codec_id650, align 4, !dbg !5688
  br label %if.end659, !dbg !5685

if.else651:                                       ; preds = %land.lhs.true644, %if.then640
  %601 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5689
  %bits_per_sample652 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %601, i32 0, i32 13, !dbg !5691
  %602 = load i32, i32* %bits_per_sample652, align 8, !dbg !5691
  %cmp653 = icmp eq i32 %602, 32, !dbg !5692
  br i1 %cmp653, label %if.then655, label %if.end658, !dbg !5693

if.then655:                                       ; preds = %if.else651
  %603 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5694
  %codecpar656 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %603, i32 0, i32 19, !dbg !5695
  %604 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar656, align 8, !dbg !5695
  %codec_id657 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %604, i32 0, i32 1, !dbg !5696
  store i32 65545, i32* %codec_id657, align 4, !dbg !5697
  br label %if.end658, !dbg !5694

if.end658:                                        ; preds = %if.then655, %if.else651
  br label %if.end659

if.end659:                                        ; preds = %if.end658, %if.then648
  br label %if.end668, !dbg !5698

if.else660:                                       ; preds = %if.else635
  %605 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5699
  %codecpar661 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %605, i32 0, i32 19, !dbg !5702
  %606 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar661, align 8, !dbg !5702
  %codec_id662 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %606, i32 0, i32 1, !dbg !5703
  %607 = load i32, i32* %codec_id662, align 4, !dbg !5703
  %cmp663 = icmp eq i32 %607, 86016, !dbg !5704
  br i1 %cmp663, label %if.then665, label %if.end667, !dbg !5699

if.then665:                                       ; preds = %if.else660
  %608 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5705
  %need_parsing666 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %608, i32 0, i32 28, !dbg !5707
  store i32 1, i32* %need_parsing666, align 4, !dbg !5708
  br label %if.end667, !dbg !5709

if.end667:                                        ; preds = %if.then665, %if.else660
  br label %if.end668

if.end668:                                        ; preds = %if.end667, %if.end659
  br label %if.end669

if.end669:                                        ; preds = %if.end668, %if.end634
  %609 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5710
  %codecpar670 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %609, i32 0, i32 19, !dbg !5711
  %610 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar670, align 8, !dbg !5711
  %codec_id671 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %610, i32 0, i32 1, !dbg !5712
  %611 = load i32, i32* %codec_id671, align 4, !dbg !5712
  %call672 = call i32 @av_get_bits_per_sample(i32 %611), !dbg !5713
  %612 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5714
  %codecpar673 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %612, i32 0, i32 19, !dbg !5715
  %613 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar673, align 8, !dbg !5715
  %bits_per_coded_sample = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %613, i32 0, i32 7, !dbg !5716
  store i32 %call672, i32* %bits_per_coded_sample, align 8, !dbg !5717
  br label %if.end718, !dbg !5718

if.else674:                                       ; preds = %if.else553
  %614 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5719
  %codecpar675 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %614, i32 0, i32 19, !dbg !5722
  %615 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar675, align 8, !dbg !5722
  %codec_type676 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %615, i32 0, i32 0, !dbg !5723
  %616 = load i32, i32* %codec_type676, align 8, !dbg !5723
  %cmp677 = icmp eq i32 %616, 2, !dbg !5724
  br i1 %cmp677, label %if.then679, label %if.end717, !dbg !5719

if.then679:                                       ; preds = %if.else674
  call void @llvm.dbg.declare(metadata i32* %type680, metadata !5725, metadata !2511), !dbg !5727
  %617 = load [16 x i8]*, [16 x i8]** %essence_container_ul, align 8, !dbg !5728
  %call681 = call %struct.MXFCodecUL* @mxf_get_codec_ul(%struct.MXFCodecUL* getelementptr inbounds ([4 x %struct.MXFCodecUL], [4 x %struct.MXFCodecUL]* @mxf_data_essence_container_uls, i32 0, i32 0), [16 x i8]* %617), !dbg !5729
  store %struct.MXFCodecUL* %call681, %struct.MXFCodecUL** %container_ul, align 8, !dbg !5730
  %618 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5731
  %codecpar682 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %618, i32 0, i32 19, !dbg !5733
  %619 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar682, align 8, !dbg !5733
  %codec_id683 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %619, i32 0, i32 1, !dbg !5734
  %620 = load i32, i32* %codec_id683, align 4, !dbg !5734
  %cmp684 = icmp eq i32 %620, 0, !dbg !5735
  br i1 %cmp684, label %if.then686, label %if.end690, !dbg !5736

if.then686:                                       ; preds = %if.then679
  %621 = load %struct.MXFCodecUL*, %struct.MXFCodecUL** %container_ul, align 8, !dbg !5737
  %id687 = getelementptr inbounds %struct.MXFCodecUL, %struct.MXFCodecUL* %621, i32 0, i32 2, !dbg !5738
  %622 = load i32, i32* %id687, align 4, !dbg !5738
  %623 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5739
  %codecpar688 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %623, i32 0, i32 19, !dbg !5740
  %624 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar688, align 8, !dbg !5740
  %codec_id689 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %624, i32 0, i32 1, !dbg !5741
  store i32 %622, i32* %codec_id689, align 4, !dbg !5742
  br label %if.end690, !dbg !5739

if.end690:                                        ; preds = %if.then686, %if.then679
  %625 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5743
  %codecpar691 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %625, i32 0, i32 19, !dbg !5744
  %626 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar691, align 8, !dbg !5744
  %codec_id692 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %626, i32 0, i32 1, !dbg !5745
  %627 = load i32, i32* %codec_id692, align 4, !dbg !5745
  %call693 = call i32 @avcodec_get_type(i32 %627), !dbg !5746
  store i32 %call693, i32* %type680, align 4, !dbg !5747
  %628 = load i32, i32* %type680, align 4, !dbg !5748
  %cmp694 = icmp eq i32 %628, 3, !dbg !5750
  br i1 %cmp694, label %if.then696, label %if.end699, !dbg !5751

if.then696:                                       ; preds = %if.end690
  %629 = load i32, i32* %type680, align 4, !dbg !5752
  %630 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5753
  %codecpar697 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %630, i32 0, i32 19, !dbg !5754
  %631 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar697, align 8, !dbg !5754
  %codec_type698 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %631, i32 0, i32 0, !dbg !5755
  store i32 %629, i32* %codec_type698, align 8, !dbg !5756
  br label %if.end699, !dbg !5753

if.end699:                                        ; preds = %if.then696, %if.end690
  %632 = load %struct.MXFCodecUL*, %struct.MXFCodecUL** %container_ul, align 8, !dbg !5757
  %desc = getelementptr inbounds %struct.MXFCodecUL, %struct.MXFCodecUL* %632, i32 0, i32 3, !dbg !5759
  %633 = load i8*, i8** %desc, align 8, !dbg !5759
  %tobool700 = icmp ne i8* %633, null, !dbg !5757
  br i1 %tobool700, label %if.then701, label %if.end705, !dbg !5760

if.then701:                                       ; preds = %if.end699
  %634 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5761
  %metadata702 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %634, i32 0, i32 11, !dbg !5762
  %635 = load %struct.MXFCodecUL*, %struct.MXFCodecUL** %container_ul, align 8, !dbg !5763
  %desc703 = getelementptr inbounds %struct.MXFCodecUL, %struct.MXFCodecUL* %635, i32 0, i32 3, !dbg !5764
  %636 = load i8*, i8** %desc703, align 8, !dbg !5764
  %call704 = call i32 @av_dict_set(%struct.AVDictionary** %metadata702, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.96, i32 0, i32 0), i8* %636, i32 0), !dbg !5765
  br label %if.end705, !dbg !5765

if.end705:                                        ; preds = %if.then701, %if.end699
  %637 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !5766
  %eia608_extract = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %637, i32 0, i32 23, !dbg !5768
  %638 = load i32, i32* %eia608_extract, align 8, !dbg !5768
  %tobool706 = icmp ne i32 %638, 0, !dbg !5766
  br i1 %tobool706, label %land.lhs.true707, label %if.end716, !dbg !5769

land.lhs.true707:                                 ; preds = %if.end705
  %639 = load %struct.MXFCodecUL*, %struct.MXFCodecUL** %container_ul, align 8, !dbg !5770
  %desc708 = getelementptr inbounds %struct.MXFCodecUL, %struct.MXFCodecUL* %639, i32 0, i32 3, !dbg !5771
  %640 = load i8*, i8** %desc708, align 8, !dbg !5771
  %call709 = call i32 @strcmp(i8* %640, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.97, i32 0, i32 0)) #9, !dbg !5772
  %tobool710 = icmp ne i32 %call709, 0, !dbg !5772
  br i1 %tobool710, label %if.end716, label %if.then711, !dbg !5773

if.then711:                                       ; preds = %land.lhs.true707
  %641 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5775
  %codecpar712 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %641, i32 0, i32 19, !dbg !5777
  %642 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar712, align 8, !dbg !5777
  %codec_type713 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %642, i32 0, i32 0, !dbg !5778
  store i32 3, i32* %codec_type713, align 8, !dbg !5779
  %643 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5780
  %codecpar714 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %643, i32 0, i32 19, !dbg !5781
  %644 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar714, align 8, !dbg !5781
  %codec_id715 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %644, i32 0, i32 1, !dbg !5782
  store i32 96257, i32* %codec_id715, align 4, !dbg !5783
  br label %if.end716, !dbg !5784

if.end716:                                        ; preds = %if.then711, %land.lhs.true707, %if.end705
  br label %if.end717, !dbg !5785

if.end717:                                        ; preds = %if.end716, %if.else674
  br label %if.end718

if.end718:                                        ; preds = %if.end717, %if.end669
  br label %if.end719

if.end719:                                        ; preds = %if.end718, %if.end552
  %645 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5786
  %extradata = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %645, i32 0, i32 21, !dbg !5788
  %646 = load i8*, i8** %extradata, align 8, !dbg !5788
  %tobool720 = icmp ne i8* %646, null, !dbg !5786
  br i1 %tobool720, label %if.then721, label %if.else732, !dbg !5789

if.then721:                                       ; preds = %if.end719
  %647 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5790
  %codecpar722 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %647, i32 0, i32 19, !dbg !5793
  %648 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar722, align 8, !dbg !5793
  %649 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5794
  %extradata_size = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %649, i32 0, i32 22, !dbg !5795
  %650 = load i32, i32* %extradata_size, align 8, !dbg !5795
  %call723 = call i32 @ff_alloc_extradata(%struct.AVCodecParameters* %648, i32 %650), !dbg !5796
  %tobool724 = icmp ne i32 %call723, 0, !dbg !5796
  br i1 %tobool724, label %if.end731, label %if.then725, !dbg !5797

if.then725:                                       ; preds = %if.then721
  %651 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5798
  %codecpar726 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %651, i32 0, i32 19, !dbg !5800
  %652 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar726, align 8, !dbg !5800
  %extradata727 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %652, i32 0, i32 3, !dbg !5801
  %653 = load i8*, i8** %extradata727, align 8, !dbg !5801
  %654 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5802
  %extradata728 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %654, i32 0, i32 21, !dbg !5803
  %655 = load i8*, i8** %extradata728, align 8, !dbg !5803
  %656 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5804
  %extradata_size729 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %656, i32 0, i32 22, !dbg !5805
  %657 = load i32, i32* %extradata_size729, align 8, !dbg !5805
  %conv730 = sext i32 %657 to i64, !dbg !5804
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %653, i8* %655, i64 %conv730, i32 1, i1 false), !dbg !5806
  br label %if.end731, !dbg !5807

if.end731:                                        ; preds = %if.then725, %if.then721
  br label %if.end752, !dbg !5808

if.else732:                                       ; preds = %if.end719
  %658 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5809
  %codecpar733 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %658, i32 0, i32 19, !dbg !5812
  %659 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar733, align 8, !dbg !5812
  %codec_id734 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %659, i32 0, i32 1, !dbg !5813
  %660 = load i32, i32* %codec_id734, align 4, !dbg !5813
  %cmp735 = icmp eq i32 %660, 27, !dbg !5814
  br i1 %cmp735, label %if.then737, label %if.end751, !dbg !5809

if.then737:                                       ; preds = %if.else732
  call void @llvm.dbg.declare(metadata i32* %coded_width, metadata !5815, metadata !2511), !dbg !5817
  %661 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !5818
  %essence_codec_ul738 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %661, i32 0, i32 3, !dbg !5819
  %call739 = call %struct.MXFCodecUL* @mxf_get_codec_ul(%struct.MXFCodecUL* getelementptr inbounds ([5 x %struct.MXFCodecUL], [5 x %struct.MXFCodecUL]* @mxf_intra_only_picture_coded_width, i32 0, i32 0), [16 x i8]* %essence_codec_ul738), !dbg !5820
  %id740 = getelementptr inbounds %struct.MXFCodecUL, %struct.MXFCodecUL* %call739, i32 0, i32 2, !dbg !5821
  %662 = load i32, i32* %id740, align 4, !dbg !5821
  store i32 %662, i32* %coded_width, align 4, !dbg !5817
  %663 = load i32, i32* %coded_width, align 4, !dbg !5822
  %tobool741 = icmp ne i32 %663, 0, !dbg !5822
  br i1 %tobool741, label %if.then742, label %if.end745, !dbg !5824

if.then742:                                       ; preds = %if.then737
  %664 = load i32, i32* %coded_width, align 4, !dbg !5825
  %665 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5826
  %codecpar743 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %665, i32 0, i32 19, !dbg !5827
  %666 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar743, align 8, !dbg !5827
  %width744 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %666, i32 0, i32 11, !dbg !5828
  store i32 %664, i32* %width744, align 8, !dbg !5829
  br label %if.end745, !dbg !5826

if.end745:                                        ; preds = %if.then742, %if.then737
  %667 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5830
  %call746 = call i32 @ff_generate_avci_extradata(%struct.AVStream* %667), !dbg !5831
  store i32 %call746, i32* %ret, align 4, !dbg !5832
  %668 = load i32, i32* %ret, align 4, !dbg !5833
  %cmp747 = icmp slt i32 %668, 0, !dbg !5835
  br i1 %cmp747, label %if.then749, label %if.end750, !dbg !5836

if.then749:                                       ; preds = %if.end745
  %669 = load i32, i32* %ret, align 4, !dbg !5837
  store i32 %669, i32* %retval, align 4, !dbg !5838
  br label %return, !dbg !5838

if.end750:                                        ; preds = %if.end745
  br label %if.end751, !dbg !5839

if.end751:                                        ; preds = %if.end750, %if.else732
  br label %if.end752

if.end752:                                        ; preds = %if.end751, %if.end731
  %670 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5840
  %codecpar753 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %670, i32 0, i32 19, !dbg !5842
  %671 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar753, align 8, !dbg !5842
  %codec_type754 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %671, i32 0, i32 0, !dbg !5843
  %672 = load i32, i32* %codec_type754, align 8, !dbg !5843
  %cmp755 = icmp ne i32 %672, 2, !dbg !5844
  br i1 %cmp755, label %land.lhs.true757, label %if.end763, !dbg !5845

land.lhs.true757:                                 ; preds = %if.end752
  %673 = load %struct.MXFTrack*, %struct.MXFTrack** %source_track, align 8, !dbg !5846
  %wrapping758 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %673, i32 0, i32 13, !dbg !5848
  %674 = load i32, i32* %wrapping758, align 8, !dbg !5848
  %cmp759 = icmp ne i32 %674, 1, !dbg !5849
  br i1 %cmp759, label %if.then761, label %if.end763, !dbg !5850

if.then761:                                       ; preds = %land.lhs.true757
  %675 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !5851
  %need_parsing762 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %675, i32 0, i32 28, !dbg !5853
  store i32 3, i32* %need_parsing762, align 4, !dbg !5854
  br label %if.end763, !dbg !5855

if.end763:                                        ; preds = %if.then761, %land.lhs.true757, %if.end752
  br label %for.inc764, !dbg !5856

for.inc764:                                       ; preds = %if.end763, %if.then265, %if.then199, %if.end183, %if.then49, %if.then28
  %676 = load i32, i32* %i, align 4, !dbg !5857
  %inc765 = add nsw i32 %676, 1, !dbg !5857
  store i32 %inc765, i32* %i, align 4, !dbg !5857
  br label %for.cond20, !dbg !5859, !llvm.loop !5860

for.end766:                                       ; preds = %for.cond20
  store i32 0, i32* %ret, align 4, !dbg !5862
  br label %fail_and_free, !dbg !5863

fail_and_free:                                    ; preds = %for.end766, %if.then206, %if.then189, %if.then182, %if.then122
  %677 = load i32, i32* %ret, align 4, !dbg !5864
  store i32 %677, i32* %retval, align 4, !dbg !5865
  br label %return, !dbg !5865

return:                                           ; preds = %fail_and_free, %if.then749, %if.then2
  %678 = load i32, i32* %retval, align 4, !dbg !5866
  ret i32 %678, !dbg !5866
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_handle_missing_index_segment(%struct.MXFContext* %mxf, %struct.AVStream* %st) #0 !dbg !5867 {
entry:
  %retval.i = alloca %struct.AVRational, align 4
  %q.i = alloca %struct.AVRational, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %q.i, metadata !3576, metadata !2511), !dbg !5870
  %r.i = alloca %struct.AVRational, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %r.i, metadata !3583, metadata !2511), !dbg !5872
  %retval = alloca i32, align 4
  %mxf.addr = alloca %struct.MXFContext*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %track = alloca %struct.MXFTrack*, align 8
  %segment = alloca %struct.MXFIndexTableSegment*, align 8
  %p = alloca %struct.MXFPartition*, align 8
  %essence_partition_count = alloca i32, align 4
  %edit_unit_byte_count = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %s = alloca %struct.MXFIndexTableSegment*, align 8
  %coerce = alloca %struct.AVRational, align 4
  store %struct.MXFContext* %mxf, %struct.MXFContext** %mxf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf.addr, metadata !5873, metadata !2511), !dbg !5874
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !5875, metadata !2511), !dbg !5876
  call void @llvm.dbg.declare(metadata %struct.MXFTrack** %track, metadata !5877, metadata !2511), !dbg !5878
  %0 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !5879
  %priv_data = getelementptr inbounds %struct.AVStream, %struct.AVStream* %0, i32 0, i32 3, !dbg !5880
  %1 = load i8*, i8** %priv_data, align 8, !dbg !5880
  %2 = bitcast i8* %1 to %struct.MXFTrack*, !dbg !5879
  store %struct.MXFTrack* %2, %struct.MXFTrack** %track, align 8, !dbg !5878
  call void @llvm.dbg.declare(metadata %struct.MXFIndexTableSegment** %segment, metadata !5881, metadata !2511), !dbg !5882
  store %struct.MXFIndexTableSegment* null, %struct.MXFIndexTableSegment** %segment, align 8, !dbg !5882
  call void @llvm.dbg.declare(metadata %struct.MXFPartition** %p, metadata !5883, metadata !2511), !dbg !5884
  store %struct.MXFPartition* null, %struct.MXFPartition** %p, align 8, !dbg !5884
  call void @llvm.dbg.declare(metadata i32* %essence_partition_count, metadata !5885, metadata !2511), !dbg !5886
  store i32 0, i32* %essence_partition_count, align 4, !dbg !5886
  call void @llvm.dbg.declare(metadata i32* %edit_unit_byte_count, metadata !5887, metadata !2511), !dbg !5888
  store i32 0, i32* %edit_unit_byte_count, align 4, !dbg !5888
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5889, metadata !2511), !dbg !5890
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5891, metadata !2511), !dbg !5892
  %3 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !5893
  %tobool = icmp ne %struct.MXFTrack* %3, null, !dbg !5893
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5895

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !5896
  %wrapping = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %4, i32 0, i32 13, !dbg !5898
  %5 = load i32, i32* %wrapping, align 8, !dbg !5898
  %cmp = icmp ne i32 %5, 2, !dbg !5899
  br i1 %cmp, label %if.then, label %if.end, !dbg !5900

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !5901
  br label %return, !dbg !5901

if.end:                                           ; preds = %lor.lhs.false
  store i32 0, i32* %i, align 4, !dbg !5902
  br label %for.cond, !dbg !5904

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i32, i32* %i, align 4, !dbg !5905
  %7 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !5908
  %metadata_sets_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %7, i32 0, i32 9, !dbg !5909
  %8 = load i32, i32* %metadata_sets_count, align 8, !dbg !5909
  %cmp1 = icmp slt i32 %6, %8, !dbg !5910
  br i1 %cmp1, label %for.body, label %for.end, !dbg !5911

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %i, align 4, !dbg !5912
  %idxprom = sext i32 %9 to i64, !dbg !5915
  %10 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !5915
  %metadata_sets = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %10, i32 0, i32 8, !dbg !5916
  %11 = load %struct.MXFMetadataSet**, %struct.MXFMetadataSet*** %metadata_sets, align 8, !dbg !5916
  %arrayidx = getelementptr inbounds %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %11, i64 %idxprom, !dbg !5915
  %12 = load %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %arrayidx, align 8, !dbg !5915
  %type = getelementptr inbounds %struct.MXFMetadataSet, %struct.MXFMetadataSet* %12, i32 0, i32 1, !dbg !5917
  %13 = load i32, i32* %type, align 4, !dbg !5917
  %cmp2 = icmp eq i32 %13, 15, !dbg !5918
  br i1 %cmp2, label %if.then3, label %if.end11, !dbg !5919

if.then3:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.MXFIndexTableSegment** %s, metadata !5920, metadata !2511), !dbg !5922
  %14 = load i32, i32* %i, align 4, !dbg !5923
  %idxprom4 = sext i32 %14 to i64, !dbg !5924
  %15 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !5924
  %metadata_sets5 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %15, i32 0, i32 8, !dbg !5925
  %16 = load %struct.MXFMetadataSet**, %struct.MXFMetadataSet*** %metadata_sets5, align 8, !dbg !5925
  %arrayidx6 = getelementptr inbounds %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %16, i64 %idxprom4, !dbg !5924
  %17 = load %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %arrayidx6, align 8, !dbg !5924
  %18 = bitcast %struct.MXFMetadataSet* %17 to %struct.MXFIndexTableSegment*, !dbg !5926
  store %struct.MXFIndexTableSegment* %18, %struct.MXFIndexTableSegment** %s, align 8, !dbg !5922
  %19 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s, align 8, !dbg !5927
  %body_sid = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %19, i32 0, i32 4, !dbg !5929
  %20 = load i32, i32* %body_sid, align 4, !dbg !5929
  %21 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !5930
  %body_sid7 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %21, i32 0, i32 12, !dbg !5931
  %22 = load i32, i32* %body_sid7, align 4, !dbg !5931
  %cmp8 = icmp eq i32 %20, %22, !dbg !5932
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !5933

if.then9:                                         ; preds = %if.then3
  store i32 0, i32* %retval, align 4, !dbg !5934
  br label %return, !dbg !5934

if.end10:                                         ; preds = %if.then3
  br label %if.end11, !dbg !5935

if.end11:                                         ; preds = %if.end10, %for.body
  br label %for.inc, !dbg !5936

for.inc:                                          ; preds = %if.end11
  %23 = load i32, i32* %i, align 4, !dbg !5937
  %inc = add nsw i32 %23, 1, !dbg !5937
  store i32 %inc, i32* %i, align 4, !dbg !5937
  br label %for.cond, !dbg !5939, !llvm.loop !5940

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !5942
  br label %for.cond12, !dbg !5944

for.cond12:                                       ; preds = %for.inc26, %for.end
  %24 = load i32, i32* %i, align 4, !dbg !5945
  %25 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !5948
  %partitions_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %25, i32 0, i32 2, !dbg !5949
  %26 = load i32, i32* %partitions_count, align 8, !dbg !5949
  %cmp13 = icmp ult i32 %24, %26, !dbg !5950
  br i1 %cmp13, label %for.body14, label %for.end28, !dbg !5951

for.body14:                                       ; preds = %for.cond12
  %27 = load i32, i32* %i, align 4, !dbg !5952
  %idxprom15 = sext i32 %27 to i64, !dbg !5955
  %28 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !5955
  %partitions = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %28, i32 0, i32 1, !dbg !5956
  %29 = load %struct.MXFPartition*, %struct.MXFPartition** %partitions, align 8, !dbg !5956
  %arrayidx16 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %29, i64 %idxprom15, !dbg !5955
  %body_sid17 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %arrayidx16, i32 0, i32 5, !dbg !5957
  %30 = load i32, i32* %body_sid17, align 4, !dbg !5957
  %31 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !5958
  %body_sid18 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %31, i32 0, i32 12, !dbg !5959
  %32 = load i32, i32* %body_sid18, align 4, !dbg !5959
  %cmp19 = icmp ne i32 %30, %32, !dbg !5960
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !5961

if.then20:                                        ; preds = %for.body14
  br label %for.inc26, !dbg !5962

if.end21:                                         ; preds = %for.body14
  %33 = load i32, i32* %i, align 4, !dbg !5963
  %idxprom22 = sext i32 %33 to i64, !dbg !5964
  %34 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !5964
  %partitions23 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %34, i32 0, i32 1, !dbg !5965
  %35 = load %struct.MXFPartition*, %struct.MXFPartition** %partitions23, align 8, !dbg !5965
  %arrayidx24 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %35, i64 %idxprom22, !dbg !5964
  store %struct.MXFPartition* %arrayidx24, %struct.MXFPartition** %p, align 8, !dbg !5966
  %36 = load i32, i32* %essence_partition_count, align 4, !dbg !5967
  %inc25 = add nsw i32 %36, 1, !dbg !5967
  store i32 %inc25, i32* %essence_partition_count, align 4, !dbg !5967
  br label %for.inc26, !dbg !5968

for.inc26:                                        ; preds = %if.end21, %if.then20
  %37 = load i32, i32* %i, align 4, !dbg !5969
  %inc27 = add nsw i32 %37, 1, !dbg !5969
  store i32 %inc27, i32* %i, align 4, !dbg !5969
  br label %for.cond12, !dbg !5971, !llvm.loop !5972

for.end28:                                        ; preds = %for.cond12
  %38 = load i32, i32* %essence_partition_count, align 4, !dbg !5974
  %cmp29 = icmp ne i32 %38, 1, !dbg !5976
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !5977

if.then30:                                        ; preds = %for.end28
  store i32 0, i32* %retval, align 4, !dbg !5978
  br label %return, !dbg !5978

if.end31:                                         ; preds = %for.end28
  %39 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !5979
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %39, i32 0, i32 19, !dbg !5981
  %40 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !5981
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %40, i32 0, i32 0, !dbg !5982
  %41 = load i32, i32* %codec_type, align 8, !dbg !5982
  %cmp32 = icmp eq i32 %41, 1, !dbg !5983
  br i1 %cmp32, label %land.lhs.true, label %if.else, !dbg !5984

land.lhs.true:                                    ; preds = %if.end31
  %42 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !5985
  %codecpar33 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %42, i32 0, i32 19, !dbg !5987
  %43 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar33, align 8, !dbg !5987
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %43, i32 0, i32 1, !dbg !5988
  %44 = load i32, i32* %codec_id, align 4, !dbg !5988
  %call = call i32 @is_pcm(i32 %44), !dbg !5989
  %tobool34 = icmp ne i32 %call, 0, !dbg !5989
  br i1 %tobool34, label %if.then35, label %if.else, !dbg !5990

if.then35:                                        ; preds = %land.lhs.true
  %45 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !5991
  %codecpar36 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %45, i32 0, i32 19, !dbg !5993
  %46 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar36, align 8, !dbg !5993
  %codec_id37 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %46, i32 0, i32 1, !dbg !5994
  %47 = load i32, i32* %codec_id37, align 4, !dbg !5994
  %call38 = call i32 @av_get_bits_per_sample(i32 %47), !dbg !5995
  %48 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !5996
  %codecpar39 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %48, i32 0, i32 19, !dbg !5997
  %49 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar39, align 8, !dbg !5997
  %channels = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %49, i32 0, i32 22, !dbg !5998
  %50 = load i32, i32* %channels, align 8, !dbg !5998
  %mul = mul nsw i32 %call38, %50, !dbg !5999
  %shr = ashr i32 %mul, 3, !dbg !6000
  store i32 %shr, i32* %edit_unit_byte_count, align 4, !dbg !6001
  br label %if.end53, !dbg !6002

if.else:                                          ; preds = %land.lhs.true, %if.end31
  %51 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !6003
  %duration = getelementptr inbounds %struct.AVStream, %struct.AVStream* %51, i32 0, i32 6, !dbg !6006
  %52 = load i64, i64* %duration, align 8, !dbg !6006
  %cmp40 = icmp sgt i64 %52, 0, !dbg !6007
  br i1 %cmp40, label %land.lhs.true41, label %if.end52, !dbg !6008

land.lhs.true41:                                  ; preds = %if.else
  %53 = load %struct.MXFPartition*, %struct.MXFPartition** %p, align 8, !dbg !6009
  %first_essence_klv = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %53, i32 0, i32 15, !dbg !6011
  %length = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %first_essence_klv, i32 0, i32 2, !dbg !6012
  %54 = load i64, i64* %length, align 8, !dbg !6012
  %cmp42 = icmp ugt i64 %54, 0, !dbg !6013
  br i1 %cmp42, label %land.lhs.true43, label %if.end52, !dbg !6014

land.lhs.true43:                                  ; preds = %land.lhs.true41
  %55 = load %struct.MXFPartition*, %struct.MXFPartition** %p, align 8, !dbg !6015
  %first_essence_klv44 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %55, i32 0, i32 15, !dbg !6017
  %length45 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %first_essence_klv44, i32 0, i32 2, !dbg !6018
  %56 = load i64, i64* %length45, align 8, !dbg !6018
  %57 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !6019
  %duration46 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %57, i32 0, i32 6, !dbg !6020
  %58 = load i64, i64* %duration46, align 8, !dbg !6020
  %rem = urem i64 %56, %58, !dbg !6021
  %cmp47 = icmp eq i64 %rem, 0, !dbg !6022
  br i1 %cmp47, label %if.then48, label %if.end52, !dbg !6023

if.then48:                                        ; preds = %land.lhs.true43
  %59 = load %struct.MXFPartition*, %struct.MXFPartition** %p, align 8, !dbg !6024
  %first_essence_klv49 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %59, i32 0, i32 15, !dbg !6026
  %length50 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %first_essence_klv49, i32 0, i32 2, !dbg !6027
  %60 = load i64, i64* %length50, align 8, !dbg !6027
  %61 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !6028
  %duration51 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %61, i32 0, i32 6, !dbg !6029
  %62 = load i64, i64* %duration51, align 8, !dbg !6029
  %div = udiv i64 %60, %62, !dbg !6030
  %conv = trunc i64 %div to i32, !dbg !6024
  store i32 %conv, i32* %edit_unit_byte_count, align 4, !dbg !6031
  br label %if.end52, !dbg !6032

if.end52:                                         ; preds = %if.then48, %land.lhs.true43, %land.lhs.true41, %if.else
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.then35
  %63 = load i32, i32* %edit_unit_byte_count, align 4, !dbg !6033
  %cmp54 = icmp sle i32 %63, 0, !dbg !6035
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !6036

if.then56:                                        ; preds = %if.end53
  store i32 0, i32* %retval, align 4, !dbg !6037
  br label %return, !dbg !6037

if.end57:                                         ; preds = %if.end53
  %64 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6038
  %fc = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %64, i32 0, i32 10, !dbg !6039
  %65 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc, align 8, !dbg !6039
  %66 = bitcast %struct.AVFormatContext* %65 to i8*, !dbg !6038
  %67 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !6040
  %index = getelementptr inbounds %struct.AVStream, %struct.AVStream* %67, i32 0, i32 0, !dbg !6041
  %68 = load i32, i32* %index, align 8, !dbg !6041
  %69 = load i32, i32* %edit_unit_byte_count, align 4, !dbg !6042
  call void (i8*, i32, i8*, ...) @av_log(i8* %66, i32 24, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.107, i32 0, i32 0), i32 %68, i32 %69), !dbg !6043
  %call58 = call noalias i8* @av_mallocz(i64 88), !dbg !6044
  %70 = bitcast i8* %call58 to %struct.MXFIndexTableSegment*, !dbg !6044
  store %struct.MXFIndexTableSegment* %70, %struct.MXFIndexTableSegment** %segment, align 8, !dbg !6046
  %tobool59 = icmp ne %struct.MXFIndexTableSegment* %70, null, !dbg !6046
  br i1 %tobool59, label %if.end61, label %if.then60, !dbg !6047

if.then60:                                        ; preds = %if.end57
  store i32 -12, i32* %retval, align 4, !dbg !6048
  br label %return, !dbg !6048

if.end61:                                         ; preds = %if.end57
  %71 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6049
  %72 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment, align 8, !dbg !6051
  %73 = bitcast %struct.MXFIndexTableSegment* %72 to i8*, !dbg !6051
  %call62 = call i32 @mxf_add_metadata_set(%struct.MXFContext* %71, i8* %73), !dbg !6052
  store i32 %call62, i32* %ret, align 4, !dbg !6053
  %tobool63 = icmp ne i32 %call62, 0, !dbg !6053
  br i1 %tobool63, label %if.then64, label %if.end65, !dbg !6054

if.then64:                                        ; preds = %if.end61
  %74 = bitcast %struct.MXFIndexTableSegment** %segment to %struct.MXFMetadataSet**, !dbg !6055
  call void @mxf_free_metadataset(%struct.MXFMetadataSet** %74, i32 1), !dbg !6057
  %75 = load i32, i32* %ret, align 4, !dbg !6058
  store i32 %75, i32* %retval, align 4, !dbg !6059
  br label %return, !dbg !6059

if.end65:                                         ; preds = %if.end61
  %76 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !6060
  %index_sid = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %76, i32 0, i32 11, !dbg !6062
  %77 = load i32, i32* %index_sid, align 8, !dbg !6062
  %tobool66 = icmp ne i32 %77, 0, !dbg !6060
  br i1 %tobool66, label %if.end70, label %if.then67, !dbg !6063

if.then67:                                        ; preds = %if.end65
  %78 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !6064
  %body_sid68 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %78, i32 0, i32 12, !dbg !6065
  %79 = load i32, i32* %body_sid68, align 4, !dbg !6065
  %80 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !6066
  %index_sid69 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %80, i32 0, i32 11, !dbg !6067
  store i32 %79, i32* %index_sid69, align 8, !dbg !6068
  br label %if.end70, !dbg !6066

if.end70:                                         ; preds = %if.then67, %if.end65
  %81 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment, align 8, !dbg !6069
  %type71 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %81, i32 0, i32 1, !dbg !6070
  store i32 15, i32* %type71, align 8, !dbg !6071
  %82 = load i32, i32* %edit_unit_byte_count, align 4, !dbg !6072
  %83 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment, align 8, !dbg !6073
  %edit_unit_byte_count72 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %83, i32 0, i32 2, !dbg !6074
  store i32 %82, i32* %edit_unit_byte_count72, align 4, !dbg !6075
  %84 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment, align 8, !dbg !6076
  %index_start_position = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %84, i32 0, i32 6, !dbg !6077
  store i64 0, i64* %index_start_position, align 8, !dbg !6078
  %85 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !6079
  %duration73 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %85, i32 0, i32 6, !dbg !6080
  %86 = load i64, i64* %duration73, align 8, !dbg !6080
  %87 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment, align 8, !dbg !6081
  %index_duration = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %87, i32 0, i32 7, !dbg !6082
  store i64 %86, i64* %index_duration, align 8, !dbg !6083
  %88 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment, align 8, !dbg !6084
  %index_edit_rate = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %88, i32 0, i32 5, !dbg !6085
  %89 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !6086
  %time_base = getelementptr inbounds %struct.AVStream, %struct.AVStream* %89, i32 0, i32 4, !dbg !6087
  %90 = bitcast %struct.AVRational* %time_base to i64*, !dbg !6088
  %91 = load i64, i64* %90, align 8, !dbg !6088
  %92 = bitcast %struct.AVRational* %q.i to i64*, !dbg !6088
  store i64 %91, i64* %92, align 4, !dbg !6088
  %num.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r.i, i32 0, i32 0, !dbg !6089
  %den.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q.i, i32 0, i32 1, !dbg !6090
  %93 = load i32, i32* %den.i, align 4, !dbg !6090
  store i32 %93, i32* %num.i, align 4, !dbg !6089
  %den1.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r.i, i32 0, i32 1, !dbg !6089
  %num2.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q.i, i32 0, i32 0, !dbg !6091
  %94 = load i32, i32* %num2.i, align 4, !dbg !6091
  store i32 %94, i32* %den1.i, align 4, !dbg !6089
  %95 = bitcast %struct.AVRational* %retval.i to i8*, !dbg !6092
  %96 = bitcast %struct.AVRational* %r.i to i8*, !dbg !6092
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %95, i8* %96, i64 8, i32 4, i1 false) #8, !dbg !6092
  %97 = bitcast %struct.AVRational* %retval.i to i64*, !dbg !6093
  %98 = load i64, i64* %97, align 4, !dbg !6093
  %99 = bitcast %struct.AVRational* %coerce to i64*, !dbg !6088
  store i64 %98, i64* %99, align 4, !dbg !6088
  %100 = bitcast %struct.AVRational* %index_edit_rate to i8*, !dbg !6088
  %101 = bitcast %struct.AVRational* %coerce to i8*, !dbg !6088
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %100, i8* %101, i64 8, i32 4, i1 false), !dbg !6094
  %102 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !6096
  %index_sid75 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %102, i32 0, i32 11, !dbg !6097
  %103 = load i32, i32* %index_sid75, align 8, !dbg !6097
  %104 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment, align 8, !dbg !6098
  %index_sid76 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %104, i32 0, i32 3, !dbg !6099
  store i32 %103, i32* %index_sid76, align 8, !dbg !6100
  %105 = load %struct.MXFPartition*, %struct.MXFPartition** %p, align 8, !dbg !6101
  %body_sid77 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %105, i32 0, i32 5, !dbg !6102
  %106 = load i32, i32* %body_sid77, align 4, !dbg !6102
  %107 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment, align 8, !dbg !6103
  %body_sid78 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %107, i32 0, i32 4, !dbg !6104
  store i32 %106, i32* %body_sid78, align 4, !dbg !6105
  store i32 0, i32* %retval, align 4, !dbg !6106
  br label %return, !dbg !6106

return:                                           ; preds = %if.end70, %if.then64, %if.then60, %if.then56, %if.then30, %if.then9, %if.then
  %108 = load i32, i32* %retval, align 4, !dbg !6107
  ret i32 %108, !dbg !6107
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_compute_index_tables(%struct.MXFContext* %mxf) #0 !dbg !6108 {
entry:
  %retval = alloca i32, align 4
  %mxf.addr = alloca %struct.MXFContext*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %ret = alloca i32, align 4
  %nb_sorted_segments = alloca i32, align 4
  %sorted_segments = alloca %struct.MXFIndexTableSegment**, align 8
  %t = alloca %struct.MXFIndexTable*, align 8
  %mxf_track = alloca %struct.MXFTrack*, align 8
  %track = alloca %struct.MXFTrack*, align 8
  store %struct.MXFContext* %mxf, %struct.MXFContext** %mxf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf.addr, metadata !6109, metadata !2511), !dbg !6110
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6111, metadata !2511), !dbg !6112
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6113, metadata !2511), !dbg !6114
  call void @llvm.dbg.declare(metadata i32* %k, metadata !6115, metadata !2511), !dbg !6116
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6117, metadata !2511), !dbg !6118
  call void @llvm.dbg.declare(metadata i32* %nb_sorted_segments, metadata !6119, metadata !2511), !dbg !6120
  call void @llvm.dbg.declare(metadata %struct.MXFIndexTableSegment*** %sorted_segments, metadata !6121, metadata !2511), !dbg !6122
  store %struct.MXFIndexTableSegment** null, %struct.MXFIndexTableSegment*** %sorted_segments, align 8, !dbg !6122
  %0 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6123
  %call = call i32 @mxf_get_sorted_table_segments(%struct.MXFContext* %0, i32* %nb_sorted_segments, %struct.MXFIndexTableSegment*** %sorted_segments), !dbg !6125
  store i32 %call, i32* %ret, align 4, !dbg !6126
  %tobool = icmp ne i32 %call, 0, !dbg !6126
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !6127

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %nb_sorted_segments, align 4, !dbg !6128
  %cmp = icmp sle i32 %1, 0, !dbg !6129
  br i1 %cmp, label %if.then, label %if.end, !dbg !6130

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6132
  %fc = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %2, i32 0, i32 10, !dbg !6134
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc, align 8, !dbg !6134
  %4 = bitcast %struct.AVFormatContext* %3 to i8*, !dbg !6132
  call void (i8*, i32, i8*, ...) @av_log(i8* %4, i32 24, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.108, i32 0, i32 0)), !dbg !6135
  store i32 0, i32* %retval, align 4, !dbg !6136
  br label %return, !dbg !6136

if.end:                                           ; preds = %lor.lhs.false
  store i32 0, i32* %i, align 4, !dbg !6137
  br label %for.cond, !dbg !6139

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, i32* %i, align 4, !dbg !6140
  %6 = load i32, i32* %nb_sorted_segments, align 4, !dbg !6143
  %cmp1 = icmp slt i32 %5, %6, !dbg !6144
  br i1 %cmp1, label %for.body, label %for.end, !dbg !6145

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %i, align 4, !dbg !6146
  %cmp2 = icmp eq i32 %7, 0, !dbg !6149
  br i1 %cmp2, label %if.then8, label %lor.lhs.false3, !dbg !6150

lor.lhs.false3:                                   ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !6151
  %sub = sub nsw i32 %8, 1, !dbg !6153
  %idxprom = sext i32 %sub to i64, !dbg !6154
  %9 = load %struct.MXFIndexTableSegment**, %struct.MXFIndexTableSegment*** %sorted_segments, align 8, !dbg !6154
  %arrayidx = getelementptr inbounds %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %9, i64 %idxprom, !dbg !6154
  %10 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %arrayidx, align 8, !dbg !6154
  %index_sid = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %10, i32 0, i32 3, !dbg !6155
  %11 = load i32, i32* %index_sid, align 8, !dbg !6155
  %12 = load i32, i32* %i, align 4, !dbg !6156
  %idxprom4 = sext i32 %12 to i64, !dbg !6157
  %13 = load %struct.MXFIndexTableSegment**, %struct.MXFIndexTableSegment*** %sorted_segments, align 8, !dbg !6157
  %arrayidx5 = getelementptr inbounds %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %13, i64 %idxprom4, !dbg !6157
  %14 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %arrayidx5, align 8, !dbg !6157
  %index_sid6 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %14, i32 0, i32 3, !dbg !6158
  %15 = load i32, i32* %index_sid6, align 8, !dbg !6158
  %cmp7 = icmp ne i32 %11, %15, !dbg !6159
  br i1 %cmp7, label %if.then8, label %if.else, !dbg !6160

if.then8:                                         ; preds = %lor.lhs.false3, %for.body
  %16 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6161
  %nb_index_tables = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %16, i32 0, i32 21, !dbg !6162
  %17 = load i32, i32* %nb_index_tables, align 4, !dbg !6163
  %inc = add nsw i32 %17, 1, !dbg !6163
  store i32 %inc, i32* %nb_index_tables, align 4, !dbg !6163
  br label %if.end19, !dbg !6161

if.else:                                          ; preds = %lor.lhs.false3
  %18 = load i32, i32* %i, align 4, !dbg !6164
  %sub9 = sub nsw i32 %18, 1, !dbg !6166
  %idxprom10 = sext i32 %sub9 to i64, !dbg !6167
  %19 = load %struct.MXFIndexTableSegment**, %struct.MXFIndexTableSegment*** %sorted_segments, align 8, !dbg !6167
  %arrayidx11 = getelementptr inbounds %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %19, i64 %idxprom10, !dbg !6167
  %20 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %arrayidx11, align 8, !dbg !6167
  %body_sid = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %20, i32 0, i32 4, !dbg !6168
  %21 = load i32, i32* %body_sid, align 4, !dbg !6168
  %22 = load i32, i32* %i, align 4, !dbg !6169
  %idxprom12 = sext i32 %22 to i64, !dbg !6170
  %23 = load %struct.MXFIndexTableSegment**, %struct.MXFIndexTableSegment*** %sorted_segments, align 8, !dbg !6170
  %arrayidx13 = getelementptr inbounds %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %23, i64 %idxprom12, !dbg !6170
  %24 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %arrayidx13, align 8, !dbg !6170
  %body_sid14 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %24, i32 0, i32 4, !dbg !6171
  %25 = load i32, i32* %body_sid14, align 4, !dbg !6171
  %cmp15 = icmp ne i32 %21, %25, !dbg !6172
  br i1 %cmp15, label %if.then16, label %if.end18, !dbg !6173

if.then16:                                        ; preds = %if.else
  %26 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6174
  %fc17 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %26, i32 0, i32 10, !dbg !6176
  %27 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc17, align 8, !dbg !6176
  %28 = bitcast %struct.AVFormatContext* %27 to i8*, !dbg !6174
  call void (i8*, i32, i8*, ...) @av_log(i8* %28, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.109, i32 0, i32 0)), !dbg !6177
  store i32 -1094995529, i32* %ret, align 4, !dbg !6178
  br label %finish_decoding_index, !dbg !6179

if.end18:                                         ; preds = %if.else
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.then8
  br label %for.inc, !dbg !6180

for.inc:                                          ; preds = %if.end19
  %29 = load i32, i32* %i, align 4, !dbg !6181
  %inc20 = add nsw i32 %29, 1, !dbg !6181
  store i32 %inc20, i32* %i, align 4, !dbg !6181
  br label %for.cond, !dbg !6183, !llvm.loop !6184

for.end:                                          ; preds = %for.cond
  %30 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6186
  %nb_index_tables21 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %30, i32 0, i32 21, !dbg !6187
  %31 = load i32, i32* %nb_index_tables21, align 4, !dbg !6187
  %conv = sext i32 %31 to i64, !dbg !6186
  %call22 = call i8* @av_mallocz_array(i64 %conv, i64 64), !dbg !6188
  %32 = bitcast i8* %call22 to %struct.MXFIndexTable*, !dbg !6188
  %33 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6189
  %index_tables = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %33, i32 0, i32 22, !dbg !6190
  store %struct.MXFIndexTable* %32, %struct.MXFIndexTable** %index_tables, align 8, !dbg !6191
  %34 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6192
  %index_tables23 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %34, i32 0, i32 22, !dbg !6194
  %35 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_tables23, align 8, !dbg !6194
  %tobool24 = icmp ne %struct.MXFIndexTable* %35, null, !dbg !6192
  br i1 %tobool24, label %if.end27, label %if.then25, !dbg !6195

if.then25:                                        ; preds = %for.end
  %36 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6196
  %fc26 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %36, i32 0, i32 10, !dbg !6198
  %37 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc26, align 8, !dbg !6198
  %38 = bitcast %struct.AVFormatContext* %37 to i8*, !dbg !6196
  call void (i8*, i32, i8*, ...) @av_log(i8* %38, i32 16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.110, i32 0, i32 0)), !dbg !6199
  store i32 -12, i32* %ret, align 4, !dbg !6200
  br label %finish_decoding_index, !dbg !6201

if.end27:                                         ; preds = %for.end
  store i32 0, i32* %j, align 4, !dbg !6202
  store i32 0, i32* %i, align 4, !dbg !6204
  br label %for.cond28, !dbg !6205

for.cond28:                                       ; preds = %for.inc50, %if.end27
  %39 = load i32, i32* %i, align 4, !dbg !6206
  %40 = load i32, i32* %nb_sorted_segments, align 4, !dbg !6209
  %cmp29 = icmp slt i32 %39, %40, !dbg !6210
  br i1 %cmp29, label %for.body31, label %for.end52, !dbg !6211

for.body31:                                       ; preds = %for.cond28
  %41 = load i32, i32* %i, align 4, !dbg !6212
  %cmp32 = icmp ne i32 %41, 0, !dbg !6215
  br i1 %cmp32, label %land.lhs.true, label %if.end45, !dbg !6216

land.lhs.true:                                    ; preds = %for.body31
  %42 = load i32, i32* %i, align 4, !dbg !6217
  %sub34 = sub nsw i32 %42, 1, !dbg !6219
  %idxprom35 = sext i32 %sub34 to i64, !dbg !6220
  %43 = load %struct.MXFIndexTableSegment**, %struct.MXFIndexTableSegment*** %sorted_segments, align 8, !dbg !6220
  %arrayidx36 = getelementptr inbounds %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %43, i64 %idxprom35, !dbg !6220
  %44 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %arrayidx36, align 8, !dbg !6220
  %index_sid37 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %44, i32 0, i32 3, !dbg !6221
  %45 = load i32, i32* %index_sid37, align 8, !dbg !6221
  %46 = load i32, i32* %i, align 4, !dbg !6222
  %idxprom38 = sext i32 %46 to i64, !dbg !6223
  %47 = load %struct.MXFIndexTableSegment**, %struct.MXFIndexTableSegment*** %sorted_segments, align 8, !dbg !6223
  %arrayidx39 = getelementptr inbounds %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %47, i64 %idxprom38, !dbg !6223
  %48 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %arrayidx39, align 8, !dbg !6223
  %index_sid40 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %48, i32 0, i32 3, !dbg !6224
  %49 = load i32, i32* %index_sid40, align 8, !dbg !6224
  %cmp41 = icmp ne i32 %45, %49, !dbg !6225
  br i1 %cmp41, label %if.then43, label %if.end45, !dbg !6226

if.then43:                                        ; preds = %land.lhs.true
  %50 = load i32, i32* %j, align 4, !dbg !6227
  %inc44 = add nsw i32 %50, 1, !dbg !6227
  store i32 %inc44, i32* %j, align 4, !dbg !6227
  br label %if.end45, !dbg !6229

if.end45:                                         ; preds = %if.then43, %land.lhs.true, %for.body31
  %51 = load i32, i32* %j, align 4, !dbg !6230
  %idxprom46 = sext i32 %51 to i64, !dbg !6231
  %52 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6231
  %index_tables47 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %52, i32 0, i32 22, !dbg !6232
  %53 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_tables47, align 8, !dbg !6232
  %arrayidx48 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %53, i64 %idxprom46, !dbg !6231
  %nb_segments = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %arrayidx48, i32 0, i32 5, !dbg !6233
  %54 = load i32, i32* %nb_segments, align 8, !dbg !6234
  %inc49 = add nsw i32 %54, 1, !dbg !6234
  store i32 %inc49, i32* %nb_segments, align 8, !dbg !6234
  br label %for.inc50, !dbg !6235

for.inc50:                                        ; preds = %if.end45
  %55 = load i32, i32* %i, align 4, !dbg !6236
  %inc51 = add nsw i32 %55, 1, !dbg !6236
  store i32 %inc51, i32* %i, align 4, !dbg !6236
  br label %for.cond28, !dbg !6238, !llvm.loop !6239

for.end52:                                        ; preds = %for.cond28
  store i32 0, i32* %j, align 4, !dbg !6241
  store i32 0, i32* %i, align 4, !dbg !6243
  br label %for.cond53, !dbg !6244

for.cond53:                                       ; preds = %for.inc168, %for.end52
  %56 = load i32, i32* %j, align 4, !dbg !6245
  %57 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6248
  %nb_index_tables54 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %57, i32 0, i32 21, !dbg !6249
  %58 = load i32, i32* %nb_index_tables54, align 4, !dbg !6249
  %cmp55 = icmp slt i32 %56, %58, !dbg !6250
  br i1 %cmp55, label %for.body57, label %for.end174, !dbg !6251

for.body57:                                       ; preds = %for.cond53
  call void @llvm.dbg.declare(metadata %struct.MXFIndexTable** %t, metadata !6252, metadata !2511), !dbg !6254
  %59 = load i32, i32* %j, align 4, !dbg !6255
  %idxprom58 = sext i32 %59 to i64, !dbg !6256
  %60 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6256
  %index_tables59 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %60, i32 0, i32 22, !dbg !6257
  %61 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_tables59, align 8, !dbg !6257
  %arrayidx60 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %61, i64 %idxprom58, !dbg !6256
  store %struct.MXFIndexTable* %arrayidx60, %struct.MXFIndexTable** %t, align 8, !dbg !6254
  call void @llvm.dbg.declare(metadata %struct.MXFTrack** %mxf_track, metadata !6258, metadata !2511), !dbg !6259
  store %struct.MXFTrack* null, %struct.MXFTrack** %mxf_track, align 8, !dbg !6259
  %62 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !6260
  %nb_segments61 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %62, i32 0, i32 5, !dbg !6261
  %63 = load i32, i32* %nb_segments61, align 8, !dbg !6261
  %conv62 = sext i32 %63 to i64, !dbg !6260
  %call63 = call i8* @av_mallocz_array(i64 %conv62, i64 8), !dbg !6262
  %64 = bitcast i8* %call63 to %struct.MXFIndexTableSegment**, !dbg !6262
  %65 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !6263
  %segments = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %65, i32 0, i32 6, !dbg !6264
  store %struct.MXFIndexTableSegment** %64, %struct.MXFIndexTableSegment*** %segments, align 8, !dbg !6265
  %66 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !6266
  %segments64 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %66, i32 0, i32 6, !dbg !6268
  %67 = load %struct.MXFIndexTableSegment**, %struct.MXFIndexTableSegment*** %segments64, align 8, !dbg !6268
  %tobool65 = icmp ne %struct.MXFIndexTableSegment** %67, null, !dbg !6266
  br i1 %tobool65, label %if.end68, label %if.then66, !dbg !6269

if.then66:                                        ; preds = %for.body57
  %68 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6270
  %fc67 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %68, i32 0, i32 10, !dbg !6272
  %69 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc67, align 8, !dbg !6272
  %70 = bitcast %struct.AVFormatContext* %69 to i8*, !dbg !6270
  call void (i8*, i32, i8*, ...) @av_log(i8* %70, i32 16, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.111, i32 0, i32 0)), !dbg !6273
  store i32 -12, i32* %ret, align 4, !dbg !6274
  br label %finish_decoding_index, !dbg !6275

if.end68:                                         ; preds = %for.body57
  %71 = load i32, i32* %i, align 4, !dbg !6276
  %idxprom69 = sext i32 %71 to i64, !dbg !6278
  %72 = load %struct.MXFIndexTableSegment**, %struct.MXFIndexTableSegment*** %sorted_segments, align 8, !dbg !6278
  %arrayidx70 = getelementptr inbounds %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %72, i64 %idxprom69, !dbg !6278
  %73 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %arrayidx70, align 8, !dbg !6278
  %index_start_position = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %73, i32 0, i32 6, !dbg !6279
  %74 = load i64, i64* %index_start_position, align 8, !dbg !6279
  %tobool71 = icmp ne i64 %74, 0, !dbg !6278
  br i1 %tobool71, label %if.then72, label %if.end80, !dbg !6280

if.then72:                                        ; preds = %if.end68
  %75 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6281
  %fc73 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %75, i32 0, i32 10, !dbg !6282
  %76 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc73, align 8, !dbg !6282
  %77 = bitcast %struct.AVFormatContext* %76 to i8*, !dbg !6281
  %78 = load i32, i32* %i, align 4, !dbg !6283
  %idxprom74 = sext i32 %78 to i64, !dbg !6284
  %79 = load %struct.MXFIndexTableSegment**, %struct.MXFIndexTableSegment*** %sorted_segments, align 8, !dbg !6284
  %arrayidx75 = getelementptr inbounds %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %79, i64 %idxprom74, !dbg !6284
  %80 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %arrayidx75, align 8, !dbg !6284
  %index_sid76 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %80, i32 0, i32 3, !dbg !6285
  %81 = load i32, i32* %index_sid76, align 8, !dbg !6285
  %82 = load i32, i32* %i, align 4, !dbg !6286
  %idxprom77 = sext i32 %82 to i64, !dbg !6287
  %83 = load %struct.MXFIndexTableSegment**, %struct.MXFIndexTableSegment*** %sorted_segments, align 8, !dbg !6287
  %arrayidx78 = getelementptr inbounds %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %83, i64 %idxprom77, !dbg !6287
  %84 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %arrayidx78, align 8, !dbg !6287
  %index_start_position79 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %84, i32 0, i32 6, !dbg !6288
  %85 = load i64, i64* %index_start_position79, align 8, !dbg !6288
  call void (i8*, i32, i8*, ...) @av_log(i8* %77, i32 24, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.112, i32 0, i32 0), i32 %81, i64 %85), !dbg !6289
  br label %if.end80, !dbg !6289

if.end80:                                         ; preds = %if.then72, %if.end68
  %86 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !6290
  %segments81 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %86, i32 0, i32 6, !dbg !6291
  %87 = load %struct.MXFIndexTableSegment**, %struct.MXFIndexTableSegment*** %segments81, align 8, !dbg !6291
  %88 = bitcast %struct.MXFIndexTableSegment** %87 to i8*, !dbg !6292
  %89 = load i32, i32* %i, align 4, !dbg !6293
  %idxprom82 = sext i32 %89 to i64, !dbg !6294
  %90 = load %struct.MXFIndexTableSegment**, %struct.MXFIndexTableSegment*** %sorted_segments, align 8, !dbg !6294
  %arrayidx83 = getelementptr inbounds %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %90, i64 %idxprom82, !dbg !6294
  %91 = bitcast %struct.MXFIndexTableSegment** %arrayidx83 to i8*, !dbg !6292
  %92 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !6295
  %nb_segments84 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %92, i32 0, i32 5, !dbg !6296
  %93 = load i32, i32* %nb_segments84, align 8, !dbg !6296
  %conv85 = sext i32 %93 to i64, !dbg !6295
  %mul = mul i64 %conv85, 8, !dbg !6297
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %88, i8* %91, i64 %mul, i32 8, i1 false), !dbg !6292
  %94 = load i32, i32* %i, align 4, !dbg !6298
  %idxprom86 = sext i32 %94 to i64, !dbg !6299
  %95 = load %struct.MXFIndexTableSegment**, %struct.MXFIndexTableSegment*** %sorted_segments, align 8, !dbg !6299
  %arrayidx87 = getelementptr inbounds %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %95, i64 %idxprom86, !dbg !6299
  %96 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %arrayidx87, align 8, !dbg !6299
  %index_sid88 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %96, i32 0, i32 3, !dbg !6300
  %97 = load i32, i32* %index_sid88, align 8, !dbg !6300
  %98 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !6301
  %index_sid89 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %98, i32 0, i32 0, !dbg !6302
  store i32 %97, i32* %index_sid89, align 8, !dbg !6303
  %99 = load i32, i32* %i, align 4, !dbg !6304
  %idxprom90 = sext i32 %99 to i64, !dbg !6305
  %100 = load %struct.MXFIndexTableSegment**, %struct.MXFIndexTableSegment*** %sorted_segments, align 8, !dbg !6305
  %arrayidx91 = getelementptr inbounds %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %100, i64 %idxprom90, !dbg !6305
  %101 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %arrayidx91, align 8, !dbg !6305
  %body_sid92 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %101, i32 0, i32 4, !dbg !6306
  %102 = load i32, i32* %body_sid92, align 4, !dbg !6306
  %103 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !6307
  %body_sid93 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %103, i32 0, i32 1, !dbg !6308
  store i32 %102, i32* %body_sid93, align 4, !dbg !6309
  %104 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6310
  %105 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !6312
  %call94 = call i32 @mxf_compute_ptses_fake_index(%struct.MXFContext* %104, %struct.MXFIndexTable* %105), !dbg !6313
  store i32 %call94, i32* %ret, align 4, !dbg !6314
  %cmp95 = icmp slt i32 %call94, 0, !dbg !6315
  br i1 %cmp95, label %if.then97, label %if.end98, !dbg !6316

if.then97:                                        ; preds = %if.end80
  br label %finish_decoding_index, !dbg !6317

if.end98:                                         ; preds = %if.end80
  store i32 0, i32* %k, align 4, !dbg !6318
  br label %for.cond99, !dbg !6320

for.cond99:                                       ; preds = %for.inc115, %if.end98
  %106 = load i32, i32* %k, align 4, !dbg !6321
  %107 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6324
  %fc100 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %107, i32 0, i32 10, !dbg !6325
  %108 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc100, align 8, !dbg !6325
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %108, i32 0, i32 6, !dbg !6326
  %109 = load i32, i32* %nb_streams, align 4, !dbg !6326
  %cmp101 = icmp ult i32 %106, %109, !dbg !6327
  br i1 %cmp101, label %for.body103, label %for.end117, !dbg !6328

for.body103:                                      ; preds = %for.cond99
  call void @llvm.dbg.declare(metadata %struct.MXFTrack** %track, metadata !6329, metadata !2511), !dbg !6331
  %110 = load i32, i32* %k, align 4, !dbg !6332
  %idxprom104 = sext i32 %110 to i64, !dbg !6333
  %111 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6333
  %fc105 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %111, i32 0, i32 10, !dbg !6334
  %112 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc105, align 8, !dbg !6334
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %112, i32 0, i32 7, !dbg !6335
  %113 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !6335
  %arrayidx106 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %113, i64 %idxprom104, !dbg !6333
  %114 = load %struct.AVStream*, %struct.AVStream** %arrayidx106, align 8, !dbg !6333
  %priv_data = getelementptr inbounds %struct.AVStream, %struct.AVStream* %114, i32 0, i32 3, !dbg !6336
  %115 = load i8*, i8** %priv_data, align 8, !dbg !6336
  %116 = bitcast i8* %115 to %struct.MXFTrack*, !dbg !6333
  store %struct.MXFTrack* %116, %struct.MXFTrack** %track, align 8, !dbg !6331
  %117 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !6337
  %tobool107 = icmp ne %struct.MXFTrack* %117, null, !dbg !6337
  br i1 %tobool107, label %land.lhs.true108, label %if.end114, !dbg !6339

land.lhs.true108:                                 ; preds = %for.body103
  %118 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !6340
  %index_sid109 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %118, i32 0, i32 11, !dbg !6342
  %119 = load i32, i32* %index_sid109, align 8, !dbg !6342
  %120 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !6343
  %index_sid110 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %120, i32 0, i32 0, !dbg !6344
  %121 = load i32, i32* %index_sid110, align 8, !dbg !6344
  %cmp111 = icmp eq i32 %119, %121, !dbg !6345
  br i1 %cmp111, label %if.then113, label %if.end114, !dbg !6346

if.then113:                                       ; preds = %land.lhs.true108
  %122 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !6347
  store %struct.MXFTrack* %122, %struct.MXFTrack** %mxf_track, align 8, !dbg !6349
  br label %for.end117, !dbg !6350

if.end114:                                        ; preds = %land.lhs.true108, %for.body103
  br label %for.inc115, !dbg !6351

for.inc115:                                       ; preds = %if.end114
  %123 = load i32, i32* %k, align 4, !dbg !6352
  %inc116 = add nsw i32 %123, 1, !dbg !6352
  store i32 %inc116, i32* %k, align 4, !dbg !6352
  br label %for.cond99, !dbg !6354, !llvm.loop !6355

for.end117:                                       ; preds = %if.then113, %for.cond99
  store i32 0, i32* %k, align 4, !dbg !6357
  br label %for.cond118, !dbg !6359

for.cond118:                                      ; preds = %for.inc165, %for.end117
  %124 = load i32, i32* %k, align 4, !dbg !6360
  %125 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !6363
  %nb_segments119 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %125, i32 0, i32 5, !dbg !6364
  %126 = load i32, i32* %nb_segments119, align 8, !dbg !6364
  %cmp120 = icmp slt i32 %124, %126, !dbg !6365
  br i1 %cmp120, label %for.body122, label %for.end167, !dbg !6366

for.body122:                                      ; preds = %for.cond118
  %127 = load i32, i32* %k, align 4, !dbg !6367
  %idxprom123 = sext i32 %127 to i64, !dbg !6370
  %128 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !6370
  %segments124 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %128, i32 0, i32 6, !dbg !6371
  %129 = load %struct.MXFIndexTableSegment**, %struct.MXFIndexTableSegment*** %segments124, align 8, !dbg !6371
  %arrayidx125 = getelementptr inbounds %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %129, i64 %idxprom123, !dbg !6370
  %130 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %arrayidx125, align 8, !dbg !6370
  %index_edit_rate = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %130, i32 0, i32 5, !dbg !6372
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %index_edit_rate, i32 0, i32 0, !dbg !6373
  %131 = load i32, i32* %num, align 8, !dbg !6373
  %tobool126 = icmp ne i32 %131, 0, !dbg !6370
  br i1 %tobool126, label %lor.lhs.false127, label %if.then133, !dbg !6374

lor.lhs.false127:                                 ; preds = %for.body122
  %132 = load i32, i32* %k, align 4, !dbg !6375
  %idxprom128 = sext i32 %132 to i64, !dbg !6377
  %133 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !6377
  %segments129 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %133, i32 0, i32 6, !dbg !6378
  %134 = load %struct.MXFIndexTableSegment**, %struct.MXFIndexTableSegment*** %segments129, align 8, !dbg !6378
  %arrayidx130 = getelementptr inbounds %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %134, i64 %idxprom128, !dbg !6377
  %135 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %arrayidx130, align 8, !dbg !6377
  %index_edit_rate131 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %135, i32 0, i32 5, !dbg !6379
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %index_edit_rate131, i32 0, i32 1, !dbg !6380
  %136 = load i32, i32* %den, align 4, !dbg !6380
  %tobool132 = icmp ne i32 %136, 0, !dbg !6377
  br i1 %tobool132, label %if.end143, label %if.then133, !dbg !6381

if.then133:                                       ; preds = %lor.lhs.false127, %for.body122
  %137 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6382
  %fc134 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %137, i32 0, i32 10, !dbg !6384
  %138 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc134, align 8, !dbg !6384
  %139 = bitcast %struct.AVFormatContext* %138 to i8*, !dbg !6382
  %140 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !6385
  %index_sid135 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %140, i32 0, i32 0, !dbg !6386
  %141 = load i32, i32* %index_sid135, align 8, !dbg !6386
  %142 = load i32, i32* %k, align 4, !dbg !6387
  call void (i8*, i32, i8*, ...) @av_log(i8* %139, i32 24, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.113, i32 0, i32 0), i32 %141, i32 %142), !dbg !6388
  %143 = load %struct.MXFTrack*, %struct.MXFTrack** %mxf_track, align 8, !dbg !6389
  %tobool136 = icmp ne %struct.MXFTrack* %143, null, !dbg !6389
  br i1 %tobool136, label %if.then137, label %if.end142, !dbg !6391

if.then137:                                       ; preds = %if.then133
  %144 = load i32, i32* %k, align 4, !dbg !6392
  %idxprom138 = sext i32 %144 to i64, !dbg !6393
  %145 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !6393
  %segments139 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %145, i32 0, i32 6, !dbg !6394
  %146 = load %struct.MXFIndexTableSegment**, %struct.MXFIndexTableSegment*** %segments139, align 8, !dbg !6394
  %arrayidx140 = getelementptr inbounds %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %146, i64 %idxprom138, !dbg !6393
  %147 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %arrayidx140, align 8, !dbg !6393
  %index_edit_rate141 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %147, i32 0, i32 5, !dbg !6395
  %148 = load %struct.MXFTrack*, %struct.MXFTrack** %mxf_track, align 8, !dbg !6396
  %edit_rate = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %148, i32 0, i32 7, !dbg !6397
  %149 = bitcast %struct.AVRational* %index_edit_rate141 to i8*, !dbg !6397
  %150 = bitcast %struct.AVRational* %edit_rate to i8*, !dbg !6397
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %149, i8* %150, i64 8, i32 4, i1 false), !dbg !6397
  br label %if.end142, !dbg !6393

if.end142:                                        ; preds = %if.then137, %if.then133
  br label %if.end143, !dbg !6398

if.end143:                                        ; preds = %if.end142, %lor.lhs.false127
  %151 = load i32, i32* %k, align 4, !dbg !6399
  %idxprom144 = sext i32 %151 to i64, !dbg !6401
  %152 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !6401
  %segments145 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %152, i32 0, i32 6, !dbg !6402
  %153 = load %struct.MXFIndexTableSegment**, %struct.MXFIndexTableSegment*** %segments145, align 8, !dbg !6402
  %arrayidx146 = getelementptr inbounds %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %153, i64 %idxprom144, !dbg !6401
  %154 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %arrayidx146, align 8, !dbg !6401
  %index_duration = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %154, i32 0, i32 7, !dbg !6403
  %155 = load i64, i64* %index_duration, align 8, !dbg !6403
  %tobool147 = icmp ne i64 %155, 0, !dbg !6401
  br i1 %tobool147, label %if.then148, label %if.end149, !dbg !6404

if.then148:                                       ; preds = %if.end143
  br label %for.inc165, !dbg !6405

if.end149:                                        ; preds = %if.end143
  %156 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !6406
  %nb_segments150 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %156, i32 0, i32 5, !dbg !6408
  %157 = load i32, i32* %nb_segments150, align 8, !dbg !6408
  %cmp151 = icmp sgt i32 %157, 1, !dbg !6409
  br i1 %cmp151, label %if.then153, label %if.end156, !dbg !6410

if.then153:                                       ; preds = %if.end149
  %158 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6411
  %fc154 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %158, i32 0, i32 10, !dbg !6412
  %159 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc154, align 8, !dbg !6412
  %160 = bitcast %struct.AVFormatContext* %159 to i8*, !dbg !6411
  %161 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !6413
  %index_sid155 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %161, i32 0, i32 0, !dbg !6414
  %162 = load i32, i32* %index_sid155, align 8, !dbg !6414
  %163 = load i32, i32* %k, align 4, !dbg !6415
  call void (i8*, i32, i8*, ...) @av_log(i8* %160, i32 24, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.114, i32 0, i32 0), i32 %162, i32 %163), !dbg !6416
  br label %if.end156, !dbg !6416

if.end156:                                        ; preds = %if.then153, %if.end149
  %164 = load %struct.MXFTrack*, %struct.MXFTrack** %mxf_track, align 8, !dbg !6417
  %tobool157 = icmp ne %struct.MXFTrack* %164, null, !dbg !6417
  br i1 %tobool157, label %if.end160, label %if.then158, !dbg !6419

if.then158:                                       ; preds = %if.end156
  %165 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6420
  %fc159 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %165, i32 0, i32 10, !dbg !6422
  %166 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc159, align 8, !dbg !6422
  %167 = bitcast %struct.AVFormatContext* %166 to i8*, !dbg !6420
  call void (i8*, i32, i8*, ...) @av_log(i8* %167, i32 24, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.115, i32 0, i32 0)), !dbg !6423
  br label %for.end167, !dbg !6424

if.end160:                                        ; preds = %if.end156
  %168 = load %struct.MXFTrack*, %struct.MXFTrack** %mxf_track, align 8, !dbg !6425
  %original_duration = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %168, i32 0, i32 10, !dbg !6426
  %169 = load i64, i64* %original_duration, align 8, !dbg !6426
  %170 = load i32, i32* %k, align 4, !dbg !6427
  %idxprom161 = sext i32 %170 to i64, !dbg !6428
  %171 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !6428
  %segments162 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %171, i32 0, i32 6, !dbg !6429
  %172 = load %struct.MXFIndexTableSegment**, %struct.MXFIndexTableSegment*** %segments162, align 8, !dbg !6429
  %arrayidx163 = getelementptr inbounds %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %172, i64 %idxprom161, !dbg !6428
  %173 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %arrayidx163, align 8, !dbg !6428
  %index_duration164 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %173, i32 0, i32 7, !dbg !6430
  store i64 %169, i64* %index_duration164, align 8, !dbg !6431
  br label %for.end167, !dbg !6432

for.inc165:                                       ; preds = %if.then148
  %174 = load i32, i32* %k, align 4, !dbg !6433
  %inc166 = add nsw i32 %174, 1, !dbg !6433
  store i32 %inc166, i32* %k, align 4, !dbg !6433
  br label %for.cond118, !dbg !6435, !llvm.loop !6436

for.end167:                                       ; preds = %if.end160, %if.then158, %for.cond118
  br label %for.inc168, !dbg !6438

for.inc168:                                       ; preds = %for.end167
  %175 = load i32, i32* %j, align 4, !dbg !6439
  %inc169 = add nsw i32 %175, 1, !dbg !6439
  store i32 %inc169, i32* %j, align 4, !dbg !6439
  %idxprom170 = sext i32 %175 to i64, !dbg !6441
  %176 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6441
  %index_tables171 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %176, i32 0, i32 22, !dbg !6442
  %177 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_tables171, align 8, !dbg !6442
  %arrayidx172 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %177, i64 %idxprom170, !dbg !6441
  %nb_segments173 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %arrayidx172, i32 0, i32 5, !dbg !6443
  %178 = load i32, i32* %nb_segments173, align 8, !dbg !6443
  %179 = load i32, i32* %i, align 4, !dbg !6444
  %add = add nsw i32 %179, %178, !dbg !6444
  store i32 %add, i32* %i, align 4, !dbg !6444
  br label %for.cond53, !dbg !6445, !llvm.loop !6446

for.end174:                                       ; preds = %for.cond53
  store i32 0, i32* %ret, align 4, !dbg !6448
  br label %finish_decoding_index, !dbg !6449

finish_decoding_index:                            ; preds = %for.end174, %if.then97, %if.then66, %if.then25, %if.then16
  %180 = load %struct.MXFIndexTableSegment**, %struct.MXFIndexTableSegment*** %sorted_segments, align 8, !dbg !6450
  %181 = bitcast %struct.MXFIndexTableSegment** %180 to i8*, !dbg !6450
  call void @av_free(i8* %181), !dbg !6451
  %182 = load i32, i32* %ret, align 4, !dbg !6452
  store i32 %182, i32* %retval, align 4, !dbg !6453
  br label %return, !dbg !6453

return:                                           ; preds = %finish_decoding_index, %if.then
  %183 = load i32, i32* %retval, align 4, !dbg !6454
  ret i32 %183, !dbg !6454
}

; Function Attrs: nounwind uwtable
define internal void @mxf_compute_essence_containers(%struct.AVFormatContext* %s) #0 !dbg !6455 {
entry:
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %x = alloca i32, align 4
  %p = alloca %struct.MXFPartition*, align 8
  %wrapping = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !6456, metadata !2511), !dbg !6457
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !6458, metadata !2511), !dbg !6459
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6460
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !6461
  %1 = load i8*, i8** %priv_data, align 8, !dbg !6461
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !6460
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !6459
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6462, metadata !2511), !dbg !6463
  store i32 0, i32* %x, align 4, !dbg !6464
  br label %for.cond, !dbg !6466

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %x, align 4, !dbg !6467
  %4 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6470
  %partitions_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %4, i32 0, i32 2, !dbg !6471
  %5 = load i32, i32* %partitions_count, align 8, !dbg !6471
  %cmp = icmp ult i32 %3, %5, !dbg !6472
  br i1 %cmp, label %for.body, label %for.end, !dbg !6473

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MXFPartition** %p, metadata !6474, metadata !2511), !dbg !6476
  %6 = load i32, i32* %x, align 4, !dbg !6477
  %idxprom = sext i32 %6 to i64, !dbg !6478
  %7 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6478
  %partitions = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %7, i32 0, i32 1, !dbg !6479
  %8 = load %struct.MXFPartition*, %struct.MXFPartition** %partitions, align 8, !dbg !6479
  %arrayidx = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %8, i64 %idxprom, !dbg !6478
  store %struct.MXFPartition* %arrayidx, %struct.MXFPartition** %p, align 8, !dbg !6476
  call void @llvm.dbg.declare(metadata i32* %wrapping, metadata !6480, metadata !2511), !dbg !6481
  %9 = load %struct.MXFPartition*, %struct.MXFPartition** %p, align 8, !dbg !6482
  %body_sid = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %9, i32 0, i32 5, !dbg !6484
  %10 = load i32, i32* %body_sid, align 4, !dbg !6484
  %tobool = icmp ne i32 %10, 0, !dbg !6482
  br i1 %tobool, label %if.end, label %if.then, !dbg !6485

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !6486

if.end:                                           ; preds = %for.body
  %11 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6487
  %op = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %11, i32 0, i32 3, !dbg !6488
  %12 = load i32, i32* %op, align 4, !dbg !6488
  %cmp1 = icmp eq i32 %12, 10, !dbg !6489
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !6490

cond.true:                                        ; preds = %if.end
  br label %cond.end, !dbg !6491

cond.false:                                       ; preds = %if.end
  %13 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !6493
  %14 = load %struct.MXFPartition*, %struct.MXFPartition** %p, align 8, !dbg !6495
  %body_sid2 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %14, i32 0, i32 5, !dbg !6496
  %15 = load i32, i32* %body_sid2, align 4, !dbg !6496
  %call = call i32 @mxf_get_wrapping_by_body_sid(%struct.AVFormatContext* %13, i32 %15), !dbg !6497
  br label %cond.end, !dbg !6498

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 2, %cond.true ], [ %call, %cond.false ], !dbg !6499
  store i32 %cond, i32* %wrapping, align 4, !dbg !6501
  %16 = load i32, i32* %wrapping, align 4, !dbg !6502
  %cmp3 = icmp eq i32 %16, 2, !dbg !6504
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !6505

if.then4:                                         ; preds = %cond.end
  %17 = load %struct.MXFPartition*, %struct.MXFPartition** %p, align 8, !dbg !6506
  %first_essence_klv = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %17, i32 0, i32 15, !dbg !6508
  %next_klv = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %first_essence_klv, i32 0, i32 3, !dbg !6509
  %18 = load i64, i64* %next_klv, align 8, !dbg !6509
  %19 = load %struct.MXFPartition*, %struct.MXFPartition** %p, align 8, !dbg !6510
  %first_essence_klv5 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %19, i32 0, i32 15, !dbg !6511
  %length = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %first_essence_klv5, i32 0, i32 2, !dbg !6512
  %20 = load i64, i64* %length, align 8, !dbg !6512
  %sub = sub i64 %18, %20, !dbg !6513
  %21 = load %struct.MXFPartition*, %struct.MXFPartition** %p, align 8, !dbg !6514
  %essence_offset = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %21, i32 0, i32 7, !dbg !6515
  store i64 %sub, i64* %essence_offset, align 8, !dbg !6516
  %22 = load %struct.MXFPartition*, %struct.MXFPartition** %p, align 8, !dbg !6517
  %first_essence_klv6 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %22, i32 0, i32 15, !dbg !6518
  %length7 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %first_essence_klv6, i32 0, i32 2, !dbg !6519
  %23 = load i64, i64* %length7, align 8, !dbg !6519
  %24 = load %struct.MXFPartition*, %struct.MXFPartition** %p, align 8, !dbg !6520
  %essence_length = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %24, i32 0, i32 8, !dbg !6521
  store i64 %23, i64* %essence_length, align 8, !dbg !6522
  br label %if.end32, !dbg !6523

if.else:                                          ; preds = %cond.end
  %25 = load %struct.MXFPartition*, %struct.MXFPartition** %p, align 8, !dbg !6524
  %first_essence_klv8 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %25, i32 0, i32 15, !dbg !6526
  %offset = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %first_essence_klv8, i32 0, i32 1, !dbg !6527
  %26 = load i64, i64* %offset, align 8, !dbg !6527
  %27 = load %struct.MXFPartition*, %struct.MXFPartition** %p, align 8, !dbg !6528
  %essence_offset9 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %27, i32 0, i32 7, !dbg !6529
  store i64 %26, i64* %essence_offset9, align 8, !dbg !6530
  %28 = load i32, i32* %x, align 4, !dbg !6531
  %29 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6533
  %partitions_count10 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %29, i32 0, i32 2, !dbg !6534
  %30 = load i32, i32* %partitions_count10, align 8, !dbg !6534
  %sub11 = sub i32 %30, 1, !dbg !6535
  %cmp12 = icmp ult i32 %28, %sub11, !dbg !6536
  br i1 %cmp12, label %if.then13, label %if.end20, !dbg !6537

if.then13:                                        ; preds = %if.else
  %31 = load i32, i32* %x, align 4, !dbg !6538
  %add = add nsw i32 %31, 1, !dbg !6539
  %idxprom14 = sext i32 %add to i64, !dbg !6540
  %32 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6540
  %partitions15 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %32, i32 0, i32 1, !dbg !6541
  %33 = load %struct.MXFPartition*, %struct.MXFPartition** %partitions15, align 8, !dbg !6541
  %arrayidx16 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %33, i64 %idxprom14, !dbg !6540
  %this_partition = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %arrayidx16, i32 0, i32 6, !dbg !6542
  %34 = load i64, i64* %this_partition, align 8, !dbg !6542
  %35 = load %struct.MXFPartition*, %struct.MXFPartition** %p, align 8, !dbg !6543
  %essence_offset17 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %35, i32 0, i32 7, !dbg !6544
  %36 = load i64, i64* %essence_offset17, align 8, !dbg !6544
  %sub18 = sub nsw i64 %34, %36, !dbg !6545
  %37 = load %struct.MXFPartition*, %struct.MXFPartition** %p, align 8, !dbg !6546
  %essence_length19 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %37, i32 0, i32 8, !dbg !6547
  store i64 %sub18, i64* %essence_length19, align 8, !dbg !6548
  br label %if.end20, !dbg !6546

if.end20:                                         ; preds = %if.then13, %if.else
  %38 = load %struct.MXFPartition*, %struct.MXFPartition** %p, align 8, !dbg !6549
  %essence_length21 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %38, i32 0, i32 8, !dbg !6551
  %39 = load i64, i64* %essence_length21, align 8, !dbg !6551
  %cmp22 = icmp slt i64 %39, 0, !dbg !6552
  br i1 %cmp22, label %if.then23, label %if.end31, !dbg !6553

if.then23:                                        ; preds = %if.end20
  %40 = load %struct.MXFPartition*, %struct.MXFPartition** %p, align 8, !dbg !6554
  %essence_length24 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %40, i32 0, i32 8, !dbg !6556
  store i64 0, i64* %essence_length24, align 8, !dbg !6557
  %41 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6558
  %fc = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %41, i32 0, i32 10, !dbg !6559
  %42 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc, align 8, !dbg !6559
  %43 = bitcast %struct.AVFormatContext* %42 to i8*, !dbg !6558
  %44 = load i32, i32* %x, align 4, !dbg !6560
  %add25 = add nsw i32 %44, 1, !dbg !6561
  %45 = load i32, i32* %x, align 4, !dbg !6562
  %add26 = add nsw i32 %45, 1, !dbg !6563
  %idxprom27 = sext i32 %add26 to i64, !dbg !6564
  %46 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6564
  %partitions28 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %46, i32 0, i32 1, !dbg !6565
  %47 = load %struct.MXFPartition*, %struct.MXFPartition** %partitions28, align 8, !dbg !6565
  %arrayidx29 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %47, i64 %idxprom27, !dbg !6564
  %this_partition30 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %arrayidx29, i32 0, i32 6, !dbg !6566
  %48 = load i64, i64* %this_partition30, align 8, !dbg !6566
  call void (i8*, i32, i8*, ...) @av_log(i8* %43, i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.120, i32 0, i32 0), i32 %add25, i64 %48), !dbg !6567
  br label %if.end31, !dbg !6568

if.end31:                                         ; preds = %if.then23, %if.end20
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then4
  br label %for.inc, !dbg !6569

for.inc:                                          ; preds = %if.end32, %if.then
  %49 = load i32, i32* %x, align 4, !dbg !6570
  %inc = add nsw i32 %49, 1, !dbg !6570
  store i32 %inc, i32* %x, align 4, !dbg !6570
  br label %for.cond, !dbg !6572, !llvm.loop !6573

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6575
}

; Function Attrs: nounwind uwtable
define internal void @mxf_compute_edit_units_per_packet(%struct.MXFContext* %mxf, %struct.AVStream* %st) #0 !dbg !6576 {
entry:
  %mxf.addr = alloca %struct.MXFContext*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %track = alloca %struct.MXFTrack*, align 8
  %t = alloca %struct.MXFIndexTable*, align 8
  store %struct.MXFContext* %mxf, %struct.MXFContext** %mxf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf.addr, metadata !6579, metadata !2511), !dbg !6580
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !6581, metadata !2511), !dbg !6582
  call void @llvm.dbg.declare(metadata %struct.MXFTrack** %track, metadata !6583, metadata !2511), !dbg !6584
  %0 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !6585
  %priv_data = getelementptr inbounds %struct.AVStream, %struct.AVStream* %0, i32 0, i32 3, !dbg !6586
  %1 = load i8*, i8** %priv_data, align 8, !dbg !6586
  %2 = bitcast i8* %1 to %struct.MXFTrack*, !dbg !6585
  store %struct.MXFTrack* %2, %struct.MXFTrack** %track, align 8, !dbg !6584
  call void @llvm.dbg.declare(metadata %struct.MXFIndexTable** %t, metadata !6587, metadata !2511), !dbg !6588
  %3 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !6589
  %tobool = icmp ne %struct.MXFTrack* %3, null, !dbg !6589
  br i1 %tobool, label %if.end, label %if.then, !dbg !6591

if.then:                                          ; preds = %entry
  br label %return, !dbg !6592

if.end:                                           ; preds = %entry
  %4 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !6593
  %edit_units_per_packet = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %4, i32 0, i32 14, !dbg !6594
  store i32 1, i32* %edit_units_per_packet, align 4, !dbg !6595
  %5 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !6596
  %wrapping = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %5, i32 0, i32 13, !dbg !6598
  %6 = load i32, i32* %wrapping, align 8, !dbg !6598
  %cmp = icmp ne i32 %6, 2, !dbg !6599
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !6600

if.then1:                                         ; preds = %if.end
  br label %return, !dbg !6601

if.end2:                                          ; preds = %if.end
  %7 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6602
  %8 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !6603
  %index_sid = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %8, i32 0, i32 11, !dbg !6604
  %9 = load i32, i32* %index_sid, align 8, !dbg !6604
  %call = call %struct.MXFIndexTable* @mxf_find_index_table(%struct.MXFContext* %7, i32 %9), !dbg !6605
  store %struct.MXFIndexTable* %call, %struct.MXFIndexTable** %t, align 8, !dbg !6606
  %10 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !6607
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %10, i32 0, i32 19, !dbg !6609
  %11 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !6609
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %11, i32 0, i32 0, !dbg !6610
  %12 = load i32, i32* %codec_type, align 8, !dbg !6610
  %cmp3 = icmp ne i32 %12, 1, !dbg !6611
  br i1 %cmp3, label %if.then13, label %lor.lhs.false, !dbg !6612

lor.lhs.false:                                    ; preds = %if.end2
  %13 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !6613
  %codecpar4 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %13, i32 0, i32 19, !dbg !6614
  %14 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar4, align 8, !dbg !6614
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %14, i32 0, i32 1, !dbg !6615
  %15 = load i32, i32* %codec_id, align 4, !dbg !6615
  %call5 = call i32 @is_pcm(i32 %15), !dbg !6616
  %tobool6 = icmp ne i32 %call5, 0, !dbg !6616
  br i1 %tobool6, label %lor.lhs.false7, label %if.then13, !dbg !6617

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %16 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !6618
  %tobool8 = icmp ne %struct.MXFIndexTable* %16, null, !dbg !6618
  br i1 %tobool8, label %lor.lhs.false9, label %if.then13, !dbg !6619

lor.lhs.false9:                                   ; preds = %lor.lhs.false7
  %17 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !6620
  %nb_segments = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %17, i32 0, i32 5, !dbg !6621
  %18 = load i32, i32* %nb_segments, align 8, !dbg !6621
  %cmp10 = icmp ne i32 %18, 1, !dbg !6622
  br i1 %cmp10, label %if.then13, label %lor.lhs.false11, !dbg !6623

lor.lhs.false11:                                  ; preds = %lor.lhs.false9
  %19 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !6624
  %segments = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %19, i32 0, i32 6, !dbg !6625
  %20 = load %struct.MXFIndexTableSegment**, %struct.MXFIndexTableSegment*** %segments, align 8, !dbg !6625
  %arrayidx = getelementptr inbounds %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %20, i64 0, !dbg !6624
  %21 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %arrayidx, align 8, !dbg !6624
  %edit_unit_byte_count = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %21, i32 0, i32 2, !dbg !6626
  %22 = load i32, i32* %edit_unit_byte_count, align 4, !dbg !6626
  %cmp12 = icmp sge i32 %22, 32, !dbg !6627
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !6628

if.then13:                                        ; preds = %lor.lhs.false11, %lor.lhs.false9, %lor.lhs.false7, %lor.lhs.false, %if.end2
  br label %return, !dbg !6630

if.end14:                                         ; preds = %lor.lhs.false11
  %23 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !6631
  %edit_rate = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %23, i32 0, i32 7, !dbg !6632
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %edit_rate, i32 0, i32 0, !dbg !6633
  %24 = load i32, i32* %num, align 4, !dbg !6633
  %25 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !6634
  %edit_rate15 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %25, i32 0, i32 7, !dbg !6635
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %edit_rate15, i32 0, i32 1, !dbg !6636
  %26 = load i32, i32* %den, align 4, !dbg !6636
  %div = sdiv i32 %24, %26, !dbg !6637
  %div16 = sdiv i32 %div, 25, !dbg !6638
  %cmp17 = icmp sgt i32 1, %div16, !dbg !6639
  br i1 %cmp17, label %cond.true, label %cond.false, !dbg !6640

cond.true:                                        ; preds = %if.end14
  br label %cond.end, !dbg !6641

cond.false:                                       ; preds = %if.end14
  %27 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !6642
  %edit_rate18 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %27, i32 0, i32 7, !dbg !6644
  %num19 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %edit_rate18, i32 0, i32 0, !dbg !6645
  %28 = load i32, i32* %num19, align 4, !dbg !6645
  %29 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !6646
  %edit_rate20 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %29, i32 0, i32 7, !dbg !6647
  %den21 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %edit_rate20, i32 0, i32 1, !dbg !6648
  %30 = load i32, i32* %den21, align 4, !dbg !6648
  %div22 = sdiv i32 %28, %30, !dbg !6649
  %div23 = sdiv i32 %div22, 25, !dbg !6650
  br label %cond.end, !dbg !6651

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %div23, %cond.false ], !dbg !6652
  %31 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !6654
  %edit_units_per_packet24 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %31, i32 0, i32 14, !dbg !6655
  store i32 %cond, i32* %edit_units_per_packet24, align 4, !dbg !6656
  br label %return, !dbg !6657

return:                                           ; preds = %cond.end, %if.then13, %if.then1, %if.then
  ret void, !dbg !6658
}

declare i32 @avio_r8(%struct.AVIOContext*) #1

declare i64 @avio_size(%struct.AVIOContext*) #1

declare i32 @avio_rb32(%struct.AVIOContext*) #1

declare i64 @avio_rb64(%struct.AVIOContext*) #1

declare i32 @avio_read(%struct.AVIOContext*, i8*, i32) #1

; Function Attrs: nounwind uwtable
define internal i64 @klv_decode_ber_length(%struct.AVIOContext* %pb) #0 !dbg !6659 {
entry:
  %retval = alloca i64, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %size = alloca i64, align 8
  %bytes_num = alloca i32, align 4
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !6660, metadata !2511), !dbg !6661
  call void @llvm.dbg.declare(metadata i64* %size, metadata !6662, metadata !2511), !dbg !6663
  %0 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6664
  %call = call i32 @avio_r8(%struct.AVIOContext* %0), !dbg !6665
  %conv = sext i32 %call to i64, !dbg !6665
  store i64 %conv, i64* %size, align 8, !dbg !6663
  %1 = load i64, i64* %size, align 8, !dbg !6666
  %and = and i64 %1, 128, !dbg !6668
  %tobool = icmp ne i64 %and, 0, !dbg !6668
  br i1 %tobool, label %if.then, label %if.end8, !dbg !6669

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %bytes_num, metadata !6670, metadata !2511), !dbg !6672
  %2 = load i64, i64* %size, align 8, !dbg !6673
  %and1 = and i64 %2, 127, !dbg !6674
  %conv2 = trunc i64 %and1 to i32, !dbg !6673
  store i32 %conv2, i32* %bytes_num, align 4, !dbg !6672
  %3 = load i32, i32* %bytes_num, align 4, !dbg !6675
  %cmp = icmp sgt i32 %3, 8, !dbg !6677
  br i1 %cmp, label %if.then4, label %if.end, !dbg !6678

if.then4:                                         ; preds = %if.then
  store i64 -1094995529, i64* %retval, align 8, !dbg !6679
  br label %return, !dbg !6679

if.end:                                           ; preds = %if.then
  store i64 0, i64* %size, align 8, !dbg !6680
  br label %while.cond, !dbg !6681

while.cond:                                       ; preds = %while.body, %if.end
  %4 = load i32, i32* %bytes_num, align 4, !dbg !6682
  %dec = add nsw i32 %4, -1, !dbg !6682
  store i32 %dec, i32* %bytes_num, align 4, !dbg !6682
  %tobool5 = icmp ne i32 %4, 0, !dbg !6684
  br i1 %tobool5, label %while.body, label %while.end, !dbg !6684

while.body:                                       ; preds = %while.cond
  %5 = load i64, i64* %size, align 8, !dbg !6685
  %shl = shl i64 %5, 8, !dbg !6686
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6687
  %call6 = call i32 @avio_r8(%struct.AVIOContext* %6), !dbg !6688
  %conv7 = sext i32 %call6 to i64, !dbg !6688
  %or = or i64 %shl, %conv7, !dbg !6689
  store i64 %or, i64* %size, align 8, !dbg !6690
  br label %while.cond, !dbg !6691, !llvm.loop !6693

while.end:                                        ; preds = %while.cond
  br label %if.end8, !dbg !6694

if.end8:                                          ; preds = %while.end, %entry
  %7 = load i64, i64* %size, align 8, !dbg !6695
  %cmp9 = icmp ugt i64 %7, 9223372036854775807, !dbg !6697
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !6698

if.then11:                                        ; preds = %if.end8
  store i64 -1094995529, i64* %retval, align 8, !dbg !6699
  br label %return, !dbg !6699

if.end12:                                         ; preds = %if.end8
  %8 = load i64, i64* %size, align 8, !dbg !6700
  store i64 %8, i64* %retval, align 8, !dbg !6701
  br label %return, !dbg !6701

return:                                           ; preds = %if.end12, %if.then11, %if.then4
  %9 = load i64, i64* %retval, align 8, !dbg !6702
  ret i64 %9, !dbg !6702
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_seek_to_previous_partition(%struct.MXFContext* %mxf) #0 !dbg !6703 {
entry:
  %retval = alloca i32, align 4
  %mxf.addr = alloca %struct.MXFContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %klv = alloca %struct.KLVPacket, align 8
  %current_partition_ofs = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.MXFContext* %mxf, %struct.MXFContext** %mxf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf.addr, metadata !6704, metadata !2511), !dbg !6705
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !6706, metadata !2511), !dbg !6707
  %0 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6708
  %fc = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %0, i32 0, i32 10, !dbg !6709
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc, align 8, !dbg !6709
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %1, i32 0, i32 4, !dbg !6710
  %2 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !6710
  store %struct.AVIOContext* %2, %struct.AVIOContext** %pb, align 8, !dbg !6707
  call void @llvm.dbg.declare(metadata %struct.KLVPacket* %klv, metadata !6711, metadata !2511), !dbg !6712
  call void @llvm.dbg.declare(metadata i64* %current_partition_ofs, metadata !6713, metadata !2511), !dbg !6714
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6715, metadata !2511), !dbg !6716
  %3 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6717
  %current_partition = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %3, i32 0, i32 17, !dbg !6719
  %4 = load %struct.MXFPartition*, %struct.MXFPartition** %current_partition, align 8, !dbg !6719
  %tobool = icmp ne %struct.MXFPartition* %4, null, !dbg !6717
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6720

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6721
  %run_in = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %5, i32 0, i32 16, !dbg !6722
  %6 = load i32, i32* %run_in, align 8, !dbg !6722
  %conv = sext i32 %6 to i64, !dbg !6721
  %7 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6723
  %current_partition2 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %7, i32 0, i32 17, !dbg !6724
  %8 = load %struct.MXFPartition*, %struct.MXFPartition** %current_partition2, align 8, !dbg !6724
  %previous_partition = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %8, i32 0, i32 3, !dbg !6725
  %9 = load i64, i64* %previous_partition, align 8, !dbg !6725
  %add = add i64 %conv, %9, !dbg !6726
  %10 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6727
  %last_forward_tell = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %10, i32 0, i32 19, !dbg !6728
  %11 = load i64, i64* %last_forward_tell, align 8, !dbg !6728
  %cmp = icmp ule i64 %add, %11, !dbg !6729
  br i1 %cmp, label %if.then, label %if.end, !dbg !6730

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !6732
  br label %return, !dbg !6732

if.end:                                           ; preds = %lor.lhs.false
  %12 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6733
  %current_partition4 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %12, i32 0, i32 17, !dbg !6734
  %13 = load %struct.MXFPartition*, %struct.MXFPartition** %current_partition4, align 8, !dbg !6734
  %pack_ofs = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %13, i32 0, i32 13, !dbg !6735
  %14 = load i64, i64* %pack_ofs, align 8, !dbg !6735
  store i64 %14, i64* %current_partition_ofs, align 8, !dbg !6736
  %15 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6737
  %16 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6738
  %run_in5 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %16, i32 0, i32 16, !dbg !6739
  %17 = load i32, i32* %run_in5, align 8, !dbg !6739
  %conv6 = sext i32 %17 to i64, !dbg !6738
  %18 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6740
  %current_partition7 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %18, i32 0, i32 17, !dbg !6741
  %19 = load %struct.MXFPartition*, %struct.MXFPartition** %current_partition7, align 8, !dbg !6741
  %previous_partition8 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %19, i32 0, i32 3, !dbg !6742
  %20 = load i64, i64* %previous_partition8, align 8, !dbg !6742
  %add9 = add i64 %conv6, %20, !dbg !6743
  %call = call i64 @avio_seek(%struct.AVIOContext* %15, i64 %add9, i32 0), !dbg !6744
  %21 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6745
  %current_partition10 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %21, i32 0, i32 17, !dbg !6746
  store %struct.MXFPartition* null, %struct.MXFPartition** %current_partition10, align 8, !dbg !6747
  %22 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6748
  %fc11 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %22, i32 0, i32 10, !dbg !6749
  %23 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc11, align 8, !dbg !6749
  %24 = bitcast %struct.AVFormatContext* %23 to i8*, !dbg !6748
  call void (i8*, i32, i8*, ...) @av_log(i8* %24, i32 56, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12, i32 0, i32 0)), !dbg !6750
  %25 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !6751
  %call12 = call i32 @klv_read_packet(%struct.KLVPacket* %klv, %struct.AVIOContext* %25), !dbg !6753
  store i32 %call12, i32* %ret, align 4, !dbg !6754
  %cmp13 = icmp slt i32 %call12, 0, !dbg !6755
  br i1 %cmp13, label %if.then15, label %if.end17, !dbg !6756

if.then15:                                        ; preds = %if.end
  %26 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6757
  %fc16 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %26, i32 0, i32 10, !dbg !6759
  %27 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc16, align 8, !dbg !6759
  %28 = bitcast %struct.AVFormatContext* %27 to i8*, !dbg !6757
  call void (i8*, i32, i8*, ...) @av_log(i8* %28, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.13, i32 0, i32 0)), !dbg !6760
  %29 = load i32, i32* %ret, align 4, !dbg !6761
  store i32 %29, i32* %retval, align 4, !dbg !6762
  br label %return, !dbg !6762

if.end17:                                         ; preds = %if.end
  %key = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 0, !dbg !6763
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %key, i32 0, i32 0, !dbg !6765
  %call18 = call i32 @mxf_is_partition_pack_key(i8* %arraydecay), !dbg !6766
  %tobool19 = icmp ne i32 %call18, 0, !dbg !6766
  br i1 %tobool19, label %if.end22, label %if.then20, !dbg !6767

if.then20:                                        ; preds = %if.end17
  %30 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6768
  %fc21 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %30, i32 0, i32 10, !dbg !6770
  %31 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc21, align 8, !dbg !6770
  %32 = bitcast %struct.AVFormatContext* %31 to i8*, !dbg !6768
  %offset = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 1, !dbg !6771
  %33 = load i64, i64* %offset, align 8, !dbg !6771
  call void (i8*, i32, i8*, ...) @av_log(i8* %32, i32 16, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.14, i32 0, i32 0), i64 %33), !dbg !6772
  store i32 -1094995529, i32* %retval, align 4, !dbg !6773
  br label %return, !dbg !6773

if.end22:                                         ; preds = %if.end17
  %offset23 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %klv, i32 0, i32 1, !dbg !6774
  %34 = load i64, i64* %offset23, align 8, !dbg !6774
  %35 = load i64, i64* %current_partition_ofs, align 8, !dbg !6776
  %cmp24 = icmp sge i64 %34, %35, !dbg !6777
  br i1 %cmp24, label %if.then26, label %if.end28, !dbg !6778

if.then26:                                        ; preds = %if.end22
  %36 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6779
  %fc27 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %36, i32 0, i32 10, !dbg !6781
  %37 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc27, align 8, !dbg !6781
  %38 = bitcast %struct.AVFormatContext* %37 to i8*, !dbg !6779
  %39 = load i64, i64* %current_partition_ofs, align 8, !dbg !6782
  call void (i8*, i32, i8*, ...) @av_log(i8* %38, i32 16, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.15, i32 0, i32 0), i64 %39), !dbg !6783
  store i32 -1094995529, i32* %retval, align 4, !dbg !6784
  br label %return, !dbg !6784

if.end28:                                         ; preds = %if.end22
  %40 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !6785
  %call29 = call i32 @mxf_parse_klv(%struct.MXFContext* %40, %struct.KLVPacket* byval align 8 %klv, i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* @mxf_read_partition_pack, i32 0, i32 0), !dbg !6787
  store i32 %call29, i32* %ret, align 4, !dbg !6788
  %cmp30 = icmp slt i32 %call29, 0, !dbg !6789
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !6790

if.then32:                                        ; preds = %if.end28
  %41 = load i32, i32* %ret, align 4, !dbg !6791
  store i32 %41, i32* %retval, align 4, !dbg !6792
  br label %return, !dbg !6792

if.end33:                                         ; preds = %if.end28
  store i32 1, i32* %retval, align 4, !dbg !6793
  br label %return, !dbg !6793

return:                                           ; preds = %if.end33, %if.then32, %if.then26, %if.then20, %if.then15, %if.then
  %42 = load i32, i32* %retval, align 4, !dbg !6794
  ret i32 %42, !dbg !6794
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_read_partition_pack(i8* %arg, %struct.AVIOContext* %pb, i32 %tag, i32 %size, i8* %uid, i64 %klv_offset) #0 !dbg !6795 {
entry:
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2585, metadata !2511), !dbg !6796
  %retval = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %tag.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %uid.addr = alloca i8*, align 8
  %klv_offset.addr = alloca i64, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %partition = alloca %struct.MXFPartition*, align 8
  %tmp_part = alloca %struct.MXFPartition*, align 8
  %op = alloca [16 x i8], align 16
  %footer_partition = alloca i64, align 8
  %nb_essence_containers = alloca i32, align 4
  %prev = alloca %struct.MXFPartition*, align 8
  %op261 = alloca i32, align 4
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !6798, metadata !2511), !dbg !6799
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !6800, metadata !2511), !dbg !6801
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !6802, metadata !2511), !dbg !6803
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !6804, metadata !2511), !dbg !6805
  store i8* %uid, i8** %uid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %uid.addr, metadata !6806, metadata !2511), !dbg !6807
  store i64 %klv_offset, i64* %klv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %klv_offset.addr, metadata !6808, metadata !2511), !dbg !6809
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !6810, metadata !2511), !dbg !6811
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !6812
  %1 = bitcast i8* %0 to %struct.MXFContext*, !dbg !6812
  store %struct.MXFContext* %1, %struct.MXFContext** %mxf, align 8, !dbg !6811
  call void @llvm.dbg.declare(metadata %struct.MXFPartition** %partition, metadata !6813, metadata !2511), !dbg !6814
  call void @llvm.dbg.declare(metadata %struct.MXFPartition** %tmp_part, metadata !6815, metadata !2511), !dbg !6816
  call void @llvm.dbg.declare(metadata [16 x i8]* %op, metadata !6817, metadata !2511), !dbg !6818
  call void @llvm.dbg.declare(metadata i64* %footer_partition, metadata !6819, metadata !2511), !dbg !6820
  call void @llvm.dbg.declare(metadata i32* %nb_essence_containers, metadata !6821, metadata !2511), !dbg !6822
  %2 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6823
  %partitions_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %2, i32 0, i32 2, !dbg !6825
  %3 = load i32, i32* %partitions_count, align 8, !dbg !6825
  %cmp = icmp uge i32 %3, 1073741823, !dbg !6826
  br i1 %cmp, label %if.then, label %if.end, !dbg !6827

if.then:                                          ; preds = %entry
  store i32 -1094995529, i32* %retval, align 4, !dbg !6828
  br label %return, !dbg !6828

if.end:                                           ; preds = %entry
  %4 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6829
  %partitions = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %4, i32 0, i32 1, !dbg !6830
  %5 = load %struct.MXFPartition*, %struct.MXFPartition** %partitions, align 8, !dbg !6830
  %6 = bitcast %struct.MXFPartition* %5 to i8*, !dbg !6829
  %7 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6831
  %partitions_count1 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %7, i32 0, i32 2, !dbg !6832
  %8 = load i32, i32* %partitions_count1, align 8, !dbg !6832
  %add = add i32 %8, 1, !dbg !6833
  %conv = zext i32 %add to i64, !dbg !6831
  %call = call i8* @av_realloc_array(i8* %6, i64 %conv, i64 144), !dbg !6834
  %9 = bitcast i8* %call to %struct.MXFPartition*, !dbg !6834
  store %struct.MXFPartition* %9, %struct.MXFPartition** %tmp_part, align 8, !dbg !6835
  %10 = load %struct.MXFPartition*, %struct.MXFPartition** %tmp_part, align 8, !dbg !6836
  %tobool = icmp ne %struct.MXFPartition* %10, null, !dbg !6836
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !6838

if.then2:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !6839
  br label %return, !dbg !6839

if.end3:                                          ; preds = %if.end
  %11 = load %struct.MXFPartition*, %struct.MXFPartition** %tmp_part, align 8, !dbg !6840
  %12 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6841
  %partitions4 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %12, i32 0, i32 1, !dbg !6842
  store %struct.MXFPartition* %11, %struct.MXFPartition** %partitions4, align 8, !dbg !6843
  %13 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6844
  %parsing_backward = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %13, i32 0, i32 18, !dbg !6846
  %14 = load i32, i32* %parsing_backward, align 8, !dbg !6846
  %tobool5 = icmp ne i32 %14, 0, !dbg !6844
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !6847

if.then6:                                         ; preds = %if.end3
  %15 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6848
  %last_forward_partition = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %15, i32 0, i32 20, !dbg !6850
  %16 = load i32, i32* %last_forward_partition, align 8, !dbg !6850
  %add7 = add nsw i32 %16, 1, !dbg !6851
  %idxprom = sext i32 %add7 to i64, !dbg !6852
  %17 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6852
  %partitions8 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %17, i32 0, i32 1, !dbg !6853
  %18 = load %struct.MXFPartition*, %struct.MXFPartition** %partitions8, align 8, !dbg !6853
  %arrayidx = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %18, i64 %idxprom, !dbg !6852
  %19 = bitcast %struct.MXFPartition* %arrayidx to i8*, !dbg !6854
  %20 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6855
  %last_forward_partition9 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %20, i32 0, i32 20, !dbg !6856
  %21 = load i32, i32* %last_forward_partition9, align 8, !dbg !6856
  %idxprom10 = sext i32 %21 to i64, !dbg !6857
  %22 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6857
  %partitions11 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %22, i32 0, i32 1, !dbg !6858
  %23 = load %struct.MXFPartition*, %struct.MXFPartition** %partitions11, align 8, !dbg !6858
  %arrayidx12 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %23, i64 %idxprom10, !dbg !6857
  %24 = bitcast %struct.MXFPartition* %arrayidx12 to i8*, !dbg !6854
  %25 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6859
  %partitions_count13 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %25, i32 0, i32 2, !dbg !6860
  %26 = load i32, i32* %partitions_count13, align 8, !dbg !6860
  %27 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6861
  %last_forward_partition14 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %27, i32 0, i32 20, !dbg !6862
  %28 = load i32, i32* %last_forward_partition14, align 8, !dbg !6862
  %sub = sub i32 %26, %28, !dbg !6863
  %conv15 = zext i32 %sub to i64, !dbg !6864
  %mul = mul i64 %conv15, 144, !dbg !6865
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %19, i8* %24, i64 %mul, i32 8, i1 false), !dbg !6854
  %29 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6866
  %last_forward_partition16 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %29, i32 0, i32 20, !dbg !6867
  %30 = load i32, i32* %last_forward_partition16, align 8, !dbg !6867
  %idxprom17 = sext i32 %30 to i64, !dbg !6868
  %31 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6868
  %partitions18 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %31, i32 0, i32 1, !dbg !6869
  %32 = load %struct.MXFPartition*, %struct.MXFPartition** %partitions18, align 8, !dbg !6869
  %arrayidx19 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %32, i64 %idxprom17, !dbg !6868
  %33 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6870
  %current_partition = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %33, i32 0, i32 17, !dbg !6871
  store %struct.MXFPartition* %arrayidx19, %struct.MXFPartition** %current_partition, align 8, !dbg !6872
  store %struct.MXFPartition* %arrayidx19, %struct.MXFPartition** %partition, align 8, !dbg !6873
  br label %if.end26, !dbg !6874

if.else:                                          ; preds = %if.end3
  %34 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6875
  %last_forward_partition20 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %34, i32 0, i32 20, !dbg !6877
  %35 = load i32, i32* %last_forward_partition20, align 8, !dbg !6878
  %inc = add nsw i32 %35, 1, !dbg !6878
  store i32 %inc, i32* %last_forward_partition20, align 8, !dbg !6878
  %36 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6879
  %partitions_count21 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %36, i32 0, i32 2, !dbg !6880
  %37 = load i32, i32* %partitions_count21, align 8, !dbg !6880
  %idxprom22 = zext i32 %37 to i64, !dbg !6881
  %38 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6881
  %partitions23 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %38, i32 0, i32 1, !dbg !6882
  %39 = load %struct.MXFPartition*, %struct.MXFPartition** %partitions23, align 8, !dbg !6882
  %arrayidx24 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %39, i64 %idxprom22, !dbg !6881
  %40 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6883
  %current_partition25 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %40, i32 0, i32 17, !dbg !6884
  store %struct.MXFPartition* %arrayidx24, %struct.MXFPartition** %current_partition25, align 8, !dbg !6885
  store %struct.MXFPartition* %arrayidx24, %struct.MXFPartition** %partition, align 8, !dbg !6886
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then6
  %41 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !6887
  %42 = bitcast %struct.MXFPartition* %41 to i8*, !dbg !6888
  call void @llvm.memset.p0i8.i64(i8* %42, i8 0, i64 144, i32 8, i1 false), !dbg !6888
  %43 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6889
  %partitions_count27 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %43, i32 0, i32 2, !dbg !6890
  %44 = load i32, i32* %partitions_count27, align 8, !dbg !6891
  %inc28 = add i32 %44, 1, !dbg !6891
  store i32 %inc28, i32* %partitions_count27, align 8, !dbg !6891
  %45 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6892
  store %struct.AVIOContext* %45, %struct.AVIOContext** %s.addr.i, align 8, !dbg !6893
  %46 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !6894
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %46, i64 0, i32 1) #8, !dbg !6895
  %47 = load i64, i64* %klv_offset.addr, align 8, !dbg !6896
  %sub30 = sub nsw i64 %call.i, %47, !dbg !6897
  %48 = load i32, i32* %size.addr, align 4, !dbg !6898
  %conv31 = sext i32 %48 to i64, !dbg !6898
  %add32 = add nsw i64 %sub30, %conv31, !dbg !6899
  %conv33 = trunc i64 %add32 to i32, !dbg !6893
  %49 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !6900
  %pack_length = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %49, i32 0, i32 12, !dbg !6901
  store i32 %conv33, i32* %pack_length, align 8, !dbg !6902
  %50 = load i64, i64* %klv_offset.addr, align 8, !dbg !6903
  %51 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !6904
  %pack_ofs = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %51, i32 0, i32 13, !dbg !6905
  store i64 %50, i64* %pack_ofs, align 8, !dbg !6906
  %52 = load i8*, i8** %uid.addr, align 8, !dbg !6907
  %arrayidx34 = getelementptr inbounds i8, i8* %52, i64 13, !dbg !6907
  %53 = load i8, i8* %arrayidx34, align 1, !dbg !6907
  %conv35 = zext i8 %53 to i32, !dbg !6907
  switch i32 %conv35, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb36
    i32 4, label %sw.bb38
  ], !dbg !6908

sw.bb:                                            ; preds = %if.end26
  %54 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !6909
  %type = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %54, i32 0, i32 2, !dbg !6911
  store i32 0, i32* %type, align 8, !dbg !6912
  br label %sw.epilog, !dbg !6913

sw.bb36:                                          ; preds = %if.end26
  %55 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !6914
  %type37 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %55, i32 0, i32 2, !dbg !6915
  store i32 1, i32* %type37, align 8, !dbg !6916
  br label %sw.epilog, !dbg !6917

sw.bb38:                                          ; preds = %if.end26
  %56 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !6918
  %type39 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %56, i32 0, i32 2, !dbg !6919
  store i32 2, i32* %type39, align 8, !dbg !6920
  br label %sw.epilog, !dbg !6921

sw.default:                                       ; preds = %if.end26
  %57 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6922
  %fc = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %57, i32 0, i32 10, !dbg !6923
  %58 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc, align 8, !dbg !6923
  %59 = bitcast %struct.AVFormatContext* %58 to i8*, !dbg !6922
  %60 = load i8*, i8** %uid.addr, align 8, !dbg !6924
  %arrayidx40 = getelementptr inbounds i8, i8* %60, i64 13, !dbg !6924
  %61 = load i8, i8* %arrayidx40, align 1, !dbg !6924
  %conv41 = zext i8 %61 to i32, !dbg !6924
  call void (i8*, i32, i8*, ...) @av_log(i8* %59, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i32 0, i32 0), i32 %conv41), !dbg !6925
  store i32 -1094995529, i32* %retval, align 4, !dbg !6926
  br label %return, !dbg !6926

sw.epilog:                                        ; preds = %sw.bb38, %sw.bb36, %sw.bb
  %62 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !6927
  %type42 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %62, i32 0, i32 2, !dbg !6928
  %63 = load i32, i32* %type42, align 8, !dbg !6928
  %cmp43 = icmp eq i32 %63, 2, !dbg !6929
  br i1 %cmp43, label %lor.end, label %lor.rhs, !dbg !6930

lor.rhs:                                          ; preds = %sw.epilog
  %64 = load i8*, i8** %uid.addr, align 8, !dbg !6931
  %arrayidx45 = getelementptr inbounds i8, i8* %64, i64 14, !dbg !6931
  %65 = load i8, i8* %arrayidx45, align 1, !dbg !6931
  %conv46 = zext i8 %65 to i32, !dbg !6931
  %and = and i32 %conv46, 1, !dbg !6933
  %tobool47 = icmp ne i32 %and, 0, !dbg !6934
  %lnot = xor i1 %tobool47, true, !dbg !6934
  br label %lor.end, !dbg !6935

lor.end:                                          ; preds = %lor.rhs, %sw.epilog
  %66 = phi i1 [ true, %sw.epilog ], [ %lnot, %lor.rhs ]
  %lor.ext = zext i1 %66 to i32, !dbg !6936
  %67 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !6938
  %closed = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %67, i32 0, i32 0, !dbg !6939
  store i32 %lor.ext, i32* %closed, align 8, !dbg !6940
  %68 = load i8*, i8** %uid.addr, align 8, !dbg !6941
  %arrayidx48 = getelementptr inbounds i8, i8* %68, i64 14, !dbg !6941
  %69 = load i8, i8* %arrayidx48, align 1, !dbg !6941
  %conv49 = zext i8 %69 to i32, !dbg !6941
  %cmp50 = icmp sgt i32 %conv49, 2, !dbg !6942
  %conv51 = zext i1 %cmp50 to i32, !dbg !6942
  %70 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !6943
  %complete = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %70, i32 0, i32 1, !dbg !6944
  store i32 %conv51, i32* %complete, align 4, !dbg !6945
  %71 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6946
  %call52 = call i64 @avio_skip(%struct.AVIOContext* %71, i64 4), !dbg !6947
  %72 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6948
  %call53 = call i32 @avio_rb32(%struct.AVIOContext* %72), !dbg !6949
  %73 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !6950
  %kag_size = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %73, i32 0, i32 9, !dbg !6951
  store i32 %call53, i32* %kag_size, align 8, !dbg !6952
  %74 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6953
  %call54 = call i64 @avio_rb64(%struct.AVIOContext* %74), !dbg !6954
  %75 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !6955
  %this_partition = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %75, i32 0, i32 6, !dbg !6956
  store i64 %call54, i64* %this_partition, align 8, !dbg !6957
  %76 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6958
  %call55 = call i64 @avio_rb64(%struct.AVIOContext* %76), !dbg !6959
  %77 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !6960
  %previous_partition = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %77, i32 0, i32 3, !dbg !6961
  store i64 %call55, i64* %previous_partition, align 8, !dbg !6962
  %78 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6963
  %call56 = call i64 @avio_rb64(%struct.AVIOContext* %78), !dbg !6964
  store i64 %call56, i64* %footer_partition, align 8, !dbg !6965
  %79 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6966
  %call57 = call i64 @avio_rb64(%struct.AVIOContext* %79), !dbg !6967
  %80 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !6968
  %header_byte_count = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %80, i32 0, i32 10, !dbg !6969
  store i64 %call57, i64* %header_byte_count, align 8, !dbg !6970
  %81 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6971
  %call58 = call i64 @avio_rb64(%struct.AVIOContext* %81), !dbg !6972
  %82 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !6973
  %index_byte_count = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %82, i32 0, i32 11, !dbg !6974
  store i64 %call58, i64* %index_byte_count, align 8, !dbg !6975
  %83 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6976
  %call59 = call i32 @avio_rb32(%struct.AVIOContext* %83), !dbg !6977
  %84 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !6978
  %index_sid = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %84, i32 0, i32 4, !dbg !6979
  store i32 %call59, i32* %index_sid, align 8, !dbg !6980
  %85 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6981
  %call60 = call i64 @avio_rb64(%struct.AVIOContext* %85), !dbg !6982
  %86 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !6983
  %body_offset = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %86, i32 0, i32 14, !dbg !6984
  store i64 %call60, i64* %body_offset, align 8, !dbg !6985
  %87 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6986
  %call61 = call i32 @avio_rb32(%struct.AVIOContext* %87), !dbg !6987
  %88 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !6988
  %body_sid = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %88, i32 0, i32 5, !dbg !6989
  store i32 %call61, i32* %body_sid, align 4, !dbg !6990
  %89 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !6991
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %op, i32 0, i32 0, !dbg !6993
  %call62 = call i32 @avio_read(%struct.AVIOContext* %89, i8* %arraydecay, i32 16), !dbg !6994
  %conv63 = sext i32 %call62 to i64, !dbg !6994
  %cmp64 = icmp ne i64 %conv63, 16, !dbg !6995
  br i1 %cmp64, label %if.then66, label %if.end68, !dbg !6996

if.then66:                                        ; preds = %lor.end
  %90 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !6997
  %fc67 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %90, i32 0, i32 10, !dbg !6999
  %91 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc67, align 8, !dbg !6999
  %92 = bitcast %struct.AVFormatContext* %91 to i8*, !dbg !6997
  call void (i8*, i32, i8*, ...) @av_log(i8* %92, i32 16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i32 0, i32 0)), !dbg !7000
  store i32 -1094995529, i32* %retval, align 4, !dbg !7001
  br label %return, !dbg !7001

if.end68:                                         ; preds = %lor.end
  %93 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7002
  %call69 = call i32 @avio_rb32(%struct.AVIOContext* %93), !dbg !7003
  store i32 %call69, i32* %nb_essence_containers, align 4, !dbg !7004
  %94 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !7005
  %this_partition70 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %94, i32 0, i32 6, !dbg !7007
  %95 = load i64, i64* %this_partition70, align 8, !dbg !7007
  %tobool71 = icmp ne i64 %95, 0, !dbg !7005
  br i1 %tobool71, label %land.lhs.true, label %if.end101, !dbg !7008

land.lhs.true:                                    ; preds = %if.end68
  %96 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !7009
  %previous_partition72 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %96, i32 0, i32 3, !dbg !7010
  %97 = load i64, i64* %previous_partition72, align 8, !dbg !7010
  %98 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !7011
  %this_partition73 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %98, i32 0, i32 6, !dbg !7012
  %99 = load i64, i64* %this_partition73, align 8, !dbg !7012
  %cmp74 = icmp eq i64 %97, %99, !dbg !7013
  br i1 %cmp74, label %if.then76, label %if.end101, !dbg !7014

if.then76:                                        ; preds = %land.lhs.true
  %100 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7015
  %fc77 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %100, i32 0, i32 10, !dbg !7017
  %101 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc77, align 8, !dbg !7017
  %102 = bitcast %struct.AVFormatContext* %101 to i8*, !dbg !7015
  %103 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !7018
  %previous_partition78 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %103, i32 0, i32 3, !dbg !7019
  %104 = load i64, i64* %previous_partition78, align 8, !dbg !7019
  call void (i8*, i32, i8*, ...) @av_log(i8* %102, i32 16, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.18, i32 0, i32 0), i64 %104), !dbg !7020
  %105 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7021
  %parsing_backward79 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %105, i32 0, i32 18, !dbg !7023
  %106 = load i32, i32* %parsing_backward79, align 8, !dbg !7023
  %tobool80 = icmp ne i32 %106, 0, !dbg !7021
  br i1 %tobool80, label %if.end91, label %land.lhs.true81, !dbg !7024

land.lhs.true81:                                  ; preds = %if.then76
  %107 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7025
  %last_forward_partition82 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %107, i32 0, i32 20, !dbg !7027
  %108 = load i32, i32* %last_forward_partition82, align 8, !dbg !7027
  %cmp83 = icmp sgt i32 %108, 1, !dbg !7028
  br i1 %cmp83, label %if.then85, label %if.end91, !dbg !7029

if.then85:                                        ; preds = %land.lhs.true81
  call void @llvm.dbg.declare(metadata %struct.MXFPartition** %prev, metadata !7030, metadata !2511), !dbg !7032
  %109 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7033
  %partitions86 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %109, i32 0, i32 1, !dbg !7034
  %110 = load %struct.MXFPartition*, %struct.MXFPartition** %partitions86, align 8, !dbg !7034
  %111 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7035
  %last_forward_partition87 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %111, i32 0, i32 20, !dbg !7036
  %112 = load i32, i32* %last_forward_partition87, align 8, !dbg !7036
  %idx.ext = sext i32 %112 to i64, !dbg !7037
  %add.ptr = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %110, i64 %idx.ext, !dbg !7037
  %add.ptr88 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %add.ptr, i64 -2, !dbg !7038
  store %struct.MXFPartition* %add.ptr88, %struct.MXFPartition** %prev, align 8, !dbg !7032
  %113 = load %struct.MXFPartition*, %struct.MXFPartition** %prev, align 8, !dbg !7039
  %this_partition89 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %113, i32 0, i32 6, !dbg !7040
  %114 = load i64, i64* %this_partition89, align 8, !dbg !7040
  %115 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !7041
  %previous_partition90 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %115, i32 0, i32 3, !dbg !7042
  store i64 %114, i64* %previous_partition90, align 8, !dbg !7043
  br label %if.end91, !dbg !7044

if.end91:                                         ; preds = %if.then85, %land.lhs.true81, %if.then76
  %116 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !7045
  %previous_partition92 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %116, i32 0, i32 3, !dbg !7047
  %117 = load i64, i64* %previous_partition92, align 8, !dbg !7047
  %118 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !7048
  %this_partition93 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %118, i32 0, i32 6, !dbg !7049
  %119 = load i64, i64* %this_partition93, align 8, !dbg !7049
  %cmp94 = icmp eq i64 %117, %119, !dbg !7050
  br i1 %cmp94, label %if.then96, label %if.end98, !dbg !7051

if.then96:                                        ; preds = %if.end91
  %120 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !7052
  %previous_partition97 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %120, i32 0, i32 3, !dbg !7053
  store i64 0, i64* %previous_partition97, align 8, !dbg !7054
  br label %if.end98, !dbg !7052

if.end98:                                         ; preds = %if.then96, %if.end91
  %121 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7055
  %fc99 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %121, i32 0, i32 10, !dbg !7056
  %122 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc99, align 8, !dbg !7056
  %123 = bitcast %struct.AVFormatContext* %122 to i8*, !dbg !7055
  %124 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !7057
  %previous_partition100 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %124, i32 0, i32 3, !dbg !7058
  %125 = load i64, i64* %previous_partition100, align 8, !dbg !7058
  call void (i8*, i32, i8*, ...) @av_log(i8* %123, i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19, i32 0, i32 0), i64 %125), !dbg !7059
  br label %if.end101, !dbg !7060

if.end101:                                        ; preds = %if.end98, %land.lhs.true, %if.end68
  %126 = load i64, i64* %footer_partition, align 8, !dbg !7061
  %tobool102 = icmp ne i64 %126, 0, !dbg !7061
  br i1 %tobool102, label %if.then103, label %if.end116, !dbg !7063

if.then103:                                       ; preds = %if.end101
  %127 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7064
  %footer_partition104 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %127, i32 0, i32 14, !dbg !7067
  %128 = load i64, i64* %footer_partition104, align 8, !dbg !7067
  %tobool105 = icmp ne i64 %128, 0, !dbg !7064
  br i1 %tobool105, label %land.lhs.true106, label %if.else113, !dbg !7068

land.lhs.true106:                                 ; preds = %if.then103
  %129 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7069
  %footer_partition107 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %129, i32 0, i32 14, !dbg !7071
  %130 = load i64, i64* %footer_partition107, align 8, !dbg !7071
  %131 = load i64, i64* %footer_partition, align 8, !dbg !7072
  %cmp108 = icmp ne i64 %130, %131, !dbg !7073
  br i1 %cmp108, label %if.then110, label %if.else113, !dbg !7074

if.then110:                                       ; preds = %land.lhs.true106
  %132 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7075
  %fc111 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %132, i32 0, i32 10, !dbg !7077
  %133 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc111, align 8, !dbg !7077
  %134 = bitcast %struct.AVFormatContext* %133 to i8*, !dbg !7075
  %135 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7078
  %footer_partition112 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %135, i32 0, i32 14, !dbg !7079
  %136 = load i64, i64* %footer_partition112, align 8, !dbg !7079
  %137 = load i64, i64* %footer_partition, align 8, !dbg !7080
  call void (i8*, i32, i8*, ...) @av_log(i8* %134, i32 16, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.20, i32 0, i32 0), i64 %136, i64 %137), !dbg !7081
  br label %if.end115, !dbg !7082

if.else113:                                       ; preds = %land.lhs.true106, %if.then103
  %138 = load i64, i64* %footer_partition, align 8, !dbg !7083
  %139 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7085
  %footer_partition114 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %139, i32 0, i32 14, !dbg !7086
  store i64 %138, i64* %footer_partition114, align 8, !dbg !7087
  br label %if.end115

if.end115:                                        ; preds = %if.else113, %if.then110
  br label %if.end116, !dbg !7088

if.end116:                                        ; preds = %if.end115, %if.end101
  %140 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7089
  %fc117 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %140, i32 0, i32 10, !dbg !7090
  %141 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc117, align 8, !dbg !7090
  %142 = bitcast %struct.AVFormatContext* %141 to i8*, !dbg !7089
  %143 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !7091
  %this_partition118 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %143, i32 0, i32 6, !dbg !7092
  %144 = load i64, i64* %this_partition118, align 8, !dbg !7092
  %145 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !7093
  %previous_partition119 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %145, i32 0, i32 3, !dbg !7094
  %146 = load i64, i64* %previous_partition119, align 8, !dbg !7094
  %147 = load i64, i64* %footer_partition, align 8, !dbg !7095
  %148 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !7096
  %index_sid120 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %148, i32 0, i32 4, !dbg !7097
  %149 = load i32, i32* %index_sid120, align 8, !dbg !7097
  %150 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !7098
  %body_sid121 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %150, i32 0, i32 5, !dbg !7099
  %151 = load i32, i32* %body_sid121, align 4, !dbg !7099
  call void (i8*, i32, i8*, ...) @av_log(i8* %142, i32 56, i8* getelementptr inbounds ([119 x i8], [119 x i8]* @.str.21, i32 0, i32 0), i64 %144, i64 %146, i64 %147, i32 %149, i32 %151), !dbg !7100
  %152 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !7101
  %previous_partition122 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %152, i32 0, i32 3, !dbg !7103
  %153 = load i64, i64* %previous_partition122, align 8, !dbg !7103
  %tobool123 = icmp ne i64 %153, 0, !dbg !7101
  br i1 %tobool123, label %land.lhs.true124, label %if.end132, !dbg !7104

land.lhs.true124:                                 ; preds = %if.end116
  %154 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7105
  %run_in = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %154, i32 0, i32 16, !dbg !7106
  %155 = load i32, i32* %run_in, align 8, !dbg !7106
  %conv125 = sext i32 %155 to i64, !dbg !7105
  %156 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !7107
  %previous_partition126 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %156, i32 0, i32 3, !dbg !7108
  %157 = load i64, i64* %previous_partition126, align 8, !dbg !7108
  %add127 = add i64 %conv125, %157, !dbg !7109
  %158 = load i64, i64* %klv_offset.addr, align 8, !dbg !7110
  %cmp128 = icmp uge i64 %add127, %158, !dbg !7111
  br i1 %cmp128, label %if.then130, label %if.end132, !dbg !7112

if.then130:                                       ; preds = %land.lhs.true124
  %159 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7113
  %fc131 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %159, i32 0, i32 10, !dbg !7115
  %160 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc131, align 8, !dbg !7115
  %161 = bitcast %struct.AVFormatContext* %160 to i8*, !dbg !7113
  call void (i8*, i32, i8*, ...) @av_log(i8* %161, i32 16, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.22, i32 0, i32 0)), !dbg !7116
  store i32 -1094995529, i32* %retval, align 4, !dbg !7117
  br label %return, !dbg !7117

if.end132:                                        ; preds = %land.lhs.true124, %if.end116
  %arrayidx133 = getelementptr inbounds [16 x i8], [16 x i8]* %op, i64 0, i64 12, !dbg !7118
  %162 = load i8, i8* %arrayidx133, align 4, !dbg !7118
  %conv134 = zext i8 %162 to i32, !dbg !7118
  %cmp135 = icmp eq i32 %conv134, 1, !dbg !7120
  br i1 %cmp135, label %land.lhs.true137, label %if.else144, !dbg !7121

land.lhs.true137:                                 ; preds = %if.end132
  %arrayidx138 = getelementptr inbounds [16 x i8], [16 x i8]* %op, i64 0, i64 13, !dbg !7122
  %163 = load i8, i8* %arrayidx138, align 1, !dbg !7122
  %conv139 = zext i8 %163 to i32, !dbg !7122
  %cmp140 = icmp eq i32 %conv139, 1, !dbg !7124
  br i1 %cmp140, label %if.then142, label %if.else144, !dbg !7125

if.then142:                                       ; preds = %land.lhs.true137
  %164 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7126
  %op143 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %164, i32 0, i32 3, !dbg !7128
  store i32 1, i32* %op143, align 4, !dbg !7129
  br label %if.end292, !dbg !7126

if.else144:                                       ; preds = %land.lhs.true137, %if.end132
  %arrayidx145 = getelementptr inbounds [16 x i8], [16 x i8]* %op, i64 0, i64 12, !dbg !7130
  %165 = load i8, i8* %arrayidx145, align 4, !dbg !7130
  %conv146 = zext i8 %165 to i32, !dbg !7130
  %cmp147 = icmp eq i32 %conv146, 1, !dbg !7132
  br i1 %cmp147, label %land.lhs.true149, label %if.else156, !dbg !7133

land.lhs.true149:                                 ; preds = %if.else144
  %arrayidx150 = getelementptr inbounds [16 x i8], [16 x i8]* %op, i64 0, i64 13, !dbg !7134
  %166 = load i8, i8* %arrayidx150, align 1, !dbg !7134
  %conv151 = zext i8 %166 to i32, !dbg !7134
  %cmp152 = icmp eq i32 %conv151, 2, !dbg !7136
  br i1 %cmp152, label %if.then154, label %if.else156, !dbg !7137

if.then154:                                       ; preds = %land.lhs.true149
  %167 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7138
  %op155 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %167, i32 0, i32 3, !dbg !7140
  store i32 2, i32* %op155, align 4, !dbg !7141
  br label %if.end291, !dbg !7138

if.else156:                                       ; preds = %land.lhs.true149, %if.else144
  %arrayidx157 = getelementptr inbounds [16 x i8], [16 x i8]* %op, i64 0, i64 12, !dbg !7142
  %168 = load i8, i8* %arrayidx157, align 4, !dbg !7142
  %conv158 = zext i8 %168 to i32, !dbg !7142
  %cmp159 = icmp eq i32 %conv158, 1, !dbg !7144
  br i1 %cmp159, label %land.lhs.true161, label %if.else168, !dbg !7145

land.lhs.true161:                                 ; preds = %if.else156
  %arrayidx162 = getelementptr inbounds [16 x i8], [16 x i8]* %op, i64 0, i64 13, !dbg !7146
  %169 = load i8, i8* %arrayidx162, align 1, !dbg !7146
  %conv163 = zext i8 %169 to i32, !dbg !7146
  %cmp164 = icmp eq i32 %conv163, 3, !dbg !7148
  br i1 %cmp164, label %if.then166, label %if.else168, !dbg !7149

if.then166:                                       ; preds = %land.lhs.true161
  %170 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7150
  %op167 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %170, i32 0, i32 3, !dbg !7152
  store i32 3, i32* %op167, align 4, !dbg !7153
  br label %if.end290, !dbg !7150

if.else168:                                       ; preds = %land.lhs.true161, %if.else156
  %arrayidx169 = getelementptr inbounds [16 x i8], [16 x i8]* %op, i64 0, i64 12, !dbg !7154
  %171 = load i8, i8* %arrayidx169, align 4, !dbg !7154
  %conv170 = zext i8 %171 to i32, !dbg !7154
  %cmp171 = icmp eq i32 %conv170, 2, !dbg !7156
  br i1 %cmp171, label %land.lhs.true173, label %if.else180, !dbg !7157

land.lhs.true173:                                 ; preds = %if.else168
  %arrayidx174 = getelementptr inbounds [16 x i8], [16 x i8]* %op, i64 0, i64 13, !dbg !7158
  %172 = load i8, i8* %arrayidx174, align 1, !dbg !7158
  %conv175 = zext i8 %172 to i32, !dbg !7158
  %cmp176 = icmp eq i32 %conv175, 1, !dbg !7160
  br i1 %cmp176, label %if.then178, label %if.else180, !dbg !7161

if.then178:                                       ; preds = %land.lhs.true173
  %173 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7162
  %op179 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %173, i32 0, i32 3, !dbg !7164
  store i32 4, i32* %op179, align 4, !dbg !7165
  br label %if.end289, !dbg !7162

if.else180:                                       ; preds = %land.lhs.true173, %if.else168
  %arrayidx181 = getelementptr inbounds [16 x i8], [16 x i8]* %op, i64 0, i64 12, !dbg !7166
  %174 = load i8, i8* %arrayidx181, align 4, !dbg !7166
  %conv182 = zext i8 %174 to i32, !dbg !7166
  %cmp183 = icmp eq i32 %conv182, 2, !dbg !7168
  br i1 %cmp183, label %land.lhs.true185, label %if.else192, !dbg !7169

land.lhs.true185:                                 ; preds = %if.else180
  %arrayidx186 = getelementptr inbounds [16 x i8], [16 x i8]* %op, i64 0, i64 13, !dbg !7170
  %175 = load i8, i8* %arrayidx186, align 1, !dbg !7170
  %conv187 = zext i8 %175 to i32, !dbg !7170
  %cmp188 = icmp eq i32 %conv187, 2, !dbg !7172
  br i1 %cmp188, label %if.then190, label %if.else192, !dbg !7173

if.then190:                                       ; preds = %land.lhs.true185
  %176 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7174
  %op191 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %176, i32 0, i32 3, !dbg !7176
  store i32 5, i32* %op191, align 4, !dbg !7177
  br label %if.end288, !dbg !7174

if.else192:                                       ; preds = %land.lhs.true185, %if.else180
  %arrayidx193 = getelementptr inbounds [16 x i8], [16 x i8]* %op, i64 0, i64 12, !dbg !7178
  %177 = load i8, i8* %arrayidx193, align 4, !dbg !7178
  %conv194 = zext i8 %177 to i32, !dbg !7178
  %cmp195 = icmp eq i32 %conv194, 2, !dbg !7180
  br i1 %cmp195, label %land.lhs.true197, label %if.else204, !dbg !7181

land.lhs.true197:                                 ; preds = %if.else192
  %arrayidx198 = getelementptr inbounds [16 x i8], [16 x i8]* %op, i64 0, i64 13, !dbg !7182
  %178 = load i8, i8* %arrayidx198, align 1, !dbg !7182
  %conv199 = zext i8 %178 to i32, !dbg !7182
  %cmp200 = icmp eq i32 %conv199, 3, !dbg !7184
  br i1 %cmp200, label %if.then202, label %if.else204, !dbg !7185

if.then202:                                       ; preds = %land.lhs.true197
  %179 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7186
  %op203 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %179, i32 0, i32 3, !dbg !7188
  store i32 6, i32* %op203, align 4, !dbg !7189
  br label %if.end287, !dbg !7186

if.else204:                                       ; preds = %land.lhs.true197, %if.else192
  %arrayidx205 = getelementptr inbounds [16 x i8], [16 x i8]* %op, i64 0, i64 12, !dbg !7190
  %180 = load i8, i8* %arrayidx205, align 4, !dbg !7190
  %conv206 = zext i8 %180 to i32, !dbg !7190
  %cmp207 = icmp eq i32 %conv206, 3, !dbg !7192
  br i1 %cmp207, label %land.lhs.true209, label %if.else216, !dbg !7193

land.lhs.true209:                                 ; preds = %if.else204
  %arrayidx210 = getelementptr inbounds [16 x i8], [16 x i8]* %op, i64 0, i64 13, !dbg !7194
  %181 = load i8, i8* %arrayidx210, align 1, !dbg !7194
  %conv211 = zext i8 %181 to i32, !dbg !7194
  %cmp212 = icmp eq i32 %conv211, 1, !dbg !7196
  br i1 %cmp212, label %if.then214, label %if.else216, !dbg !7197

if.then214:                                       ; preds = %land.lhs.true209
  %182 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7198
  %op215 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %182, i32 0, i32 3, !dbg !7200
  store i32 7, i32* %op215, align 4, !dbg !7201
  br label %if.end286, !dbg !7198

if.else216:                                       ; preds = %land.lhs.true209, %if.else204
  %arrayidx217 = getelementptr inbounds [16 x i8], [16 x i8]* %op, i64 0, i64 12, !dbg !7202
  %183 = load i8, i8* %arrayidx217, align 4, !dbg !7202
  %conv218 = zext i8 %183 to i32, !dbg !7202
  %cmp219 = icmp eq i32 %conv218, 3, !dbg !7204
  br i1 %cmp219, label %land.lhs.true221, label %if.else228, !dbg !7205

land.lhs.true221:                                 ; preds = %if.else216
  %arrayidx222 = getelementptr inbounds [16 x i8], [16 x i8]* %op, i64 0, i64 13, !dbg !7206
  %184 = load i8, i8* %arrayidx222, align 1, !dbg !7206
  %conv223 = zext i8 %184 to i32, !dbg !7206
  %cmp224 = icmp eq i32 %conv223, 2, !dbg !7208
  br i1 %cmp224, label %if.then226, label %if.else228, !dbg !7209

if.then226:                                       ; preds = %land.lhs.true221
  %185 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7210
  %op227 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %185, i32 0, i32 3, !dbg !7212
  store i32 8, i32* %op227, align 4, !dbg !7213
  br label %if.end285, !dbg !7210

if.else228:                                       ; preds = %land.lhs.true221, %if.else216
  %arrayidx229 = getelementptr inbounds [16 x i8], [16 x i8]* %op, i64 0, i64 12, !dbg !7214
  %186 = load i8, i8* %arrayidx229, align 4, !dbg !7214
  %conv230 = zext i8 %186 to i32, !dbg !7214
  %cmp231 = icmp eq i32 %conv230, 3, !dbg !7216
  br i1 %cmp231, label %land.lhs.true233, label %if.else240, !dbg !7217

land.lhs.true233:                                 ; preds = %if.else228
  %arrayidx234 = getelementptr inbounds [16 x i8], [16 x i8]* %op, i64 0, i64 13, !dbg !7218
  %187 = load i8, i8* %arrayidx234, align 1, !dbg !7218
  %conv235 = zext i8 %187 to i32, !dbg !7218
  %cmp236 = icmp eq i32 %conv235, 3, !dbg !7220
  br i1 %cmp236, label %if.then238, label %if.else240, !dbg !7221

if.then238:                                       ; preds = %land.lhs.true233
  %188 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7222
  %op239 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %188, i32 0, i32 3, !dbg !7224
  store i32 9, i32* %op239, align 4, !dbg !7225
  br label %if.end284, !dbg !7222

if.else240:                                       ; preds = %land.lhs.true233, %if.else228
  %arrayidx241 = getelementptr inbounds [16 x i8], [16 x i8]* %op, i64 0, i64 12, !dbg !7226
  %189 = load i8, i8* %arrayidx241, align 4, !dbg !7226
  %conv242 = zext i8 %189 to i32, !dbg !7226
  %cmp243 = icmp eq i32 %conv242, 64, !dbg !7228
  br i1 %cmp243, label %land.lhs.true245, label %if.else252, !dbg !7229

land.lhs.true245:                                 ; preds = %if.else240
  %arrayidx246 = getelementptr inbounds [16 x i8], [16 x i8]* %op, i64 0, i64 13, !dbg !7230
  %190 = load i8, i8* %arrayidx246, align 1, !dbg !7230
  %conv247 = zext i8 %190 to i32, !dbg !7230
  %cmp248 = icmp eq i32 %conv247, 1, !dbg !7232
  br i1 %cmp248, label %if.then250, label %if.else252, !dbg !7233

if.then250:                                       ; preds = %land.lhs.true245
  %191 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7234
  %op251 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %191, i32 0, i32 3, !dbg !7236
  store i32 11, i32* %op251, align 4, !dbg !7237
  br label %if.end283, !dbg !7234

if.else252:                                       ; preds = %land.lhs.true245, %if.else240
  %arrayidx253 = getelementptr inbounds [16 x i8], [16 x i8]* %op, i64 0, i64 12, !dbg !7238
  %192 = load i8, i8* %arrayidx253, align 4, !dbg !7238
  %conv254 = zext i8 %192 to i32, !dbg !7238
  %cmp255 = icmp eq i32 %conv254, 16, !dbg !7240
  br i1 %cmp255, label %if.then257, label %if.else275, !dbg !7241

if.then257:                                       ; preds = %if.else252
  %193 = load i32, i32* %nb_essence_containers, align 4, !dbg !7242
  %cmp258 = icmp ne i32 %193, 1, !dbg !7245
  br i1 %cmp258, label %if.then260, label %if.else272, !dbg !7246

if.then260:                                       ; preds = %if.then257
  call void @llvm.dbg.declare(metadata i32* %op261, metadata !7247, metadata !2511), !dbg !7249
  %194 = load i32, i32* %nb_essence_containers, align 4, !dbg !7250
  %tobool262 = icmp ne i32 %194, 0, !dbg !7250
  %cond = select i1 %tobool262, i32 1, i32 10, !dbg !7250
  store i32 %cond, i32* %op261, align 4, !dbg !7249
  %195 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7251
  %op263 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %195, i32 0, i32 3, !dbg !7253
  %196 = load i32, i32* %op263, align 4, !dbg !7253
  %tobool264 = icmp ne i32 %196, 0, !dbg !7251
  br i1 %tobool264, label %if.end270, label %if.then265, !dbg !7254

if.then265:                                       ; preds = %if.then260
  %197 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7255
  %fc266 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %197, i32 0, i32 10, !dbg !7256
  %198 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc266, align 8, !dbg !7256
  %199 = bitcast %struct.AVFormatContext* %198 to i8*, !dbg !7255
  %200 = load i32, i32* %nb_essence_containers, align 4, !dbg !7257
  %201 = load i32, i32* %op261, align 4, !dbg !7258
  %cmp267 = icmp eq i32 %201, 1, !dbg !7259
  %cond269 = select i1 %cmp267, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i32 0, i32 0), !dbg !7258
  call void (i8*, i32, i8*, ...) @av_log(i8* %199, i32 24, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.23, i32 0, i32 0), i32 %200, i8* %cond269), !dbg !7260
  br label %if.end270, !dbg !7260

if.end270:                                        ; preds = %if.then265, %if.then260
  %202 = load i32, i32* %op261, align 4, !dbg !7261
  %203 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7262
  %op271 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %203, i32 0, i32 3, !dbg !7263
  store i32 %202, i32* %op271, align 4, !dbg !7264
  br label %if.end274, !dbg !7265

if.else272:                                       ; preds = %if.then257
  %204 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7266
  %op273 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %204, i32 0, i32 3, !dbg !7267
  store i32 10, i32* %op273, align 4, !dbg !7268
  br label %if.end274

if.end274:                                        ; preds = %if.else272, %if.end270
  br label %if.end282, !dbg !7269

if.else275:                                       ; preds = %if.else252
  %205 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7270
  %fc276 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %205, i32 0, i32 10, !dbg !7272
  %206 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc276, align 8, !dbg !7272
  %207 = bitcast %struct.AVFormatContext* %206 to i8*, !dbg !7270
  %arrayidx277 = getelementptr inbounds [16 x i8], [16 x i8]* %op, i64 0, i64 12, !dbg !7273
  %208 = load i8, i8* %arrayidx277, align 4, !dbg !7273
  %conv278 = zext i8 %208 to i32, !dbg !7273
  %arrayidx279 = getelementptr inbounds [16 x i8], [16 x i8]* %op, i64 0, i64 13, !dbg !7274
  %209 = load i8, i8* %arrayidx279, align 1, !dbg !7274
  %conv280 = zext i8 %209 to i32, !dbg !7274
  call void (i8*, i32, i8*, ...) @av_log(i8* %207, i32 16, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.26, i32 0, i32 0), i32 %conv278, i32 %conv280), !dbg !7275
  %210 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7276
  %op281 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %210, i32 0, i32 3, !dbg !7277
  store i32 1, i32* %op281, align 4, !dbg !7278
  br label %if.end282

if.end282:                                        ; preds = %if.else275, %if.end274
  br label %if.end283

if.end283:                                        ; preds = %if.end282, %if.then250
  br label %if.end284

if.end284:                                        ; preds = %if.end283, %if.then238
  br label %if.end285

if.end285:                                        ; preds = %if.end284, %if.then226
  br label %if.end286

if.end286:                                        ; preds = %if.end285, %if.then214
  br label %if.end287

if.end287:                                        ; preds = %if.end286, %if.then202
  br label %if.end288

if.end288:                                        ; preds = %if.end287, %if.then190
  br label %if.end289

if.end289:                                        ; preds = %if.end288, %if.then178
  br label %if.end290

if.end290:                                        ; preds = %if.end289, %if.then166
  br label %if.end291

if.end291:                                        ; preds = %if.end290, %if.then154
  br label %if.end292

if.end292:                                        ; preds = %if.end291, %if.then142
  %211 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !7279
  %kag_size293 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %211, i32 0, i32 9, !dbg !7281
  %212 = load i32, i32* %kag_size293, align 8, !dbg !7281
  %cmp294 = icmp sle i32 %212, 0, !dbg !7282
  br i1 %cmp294, label %if.then299, label %lor.lhs.false, !dbg !7283

lor.lhs.false:                                    ; preds = %if.end292
  %213 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !7284
  %kag_size296 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %213, i32 0, i32 9, !dbg !7286
  %214 = load i32, i32* %kag_size296, align 8, !dbg !7286
  %cmp297 = icmp sgt i32 %214, 1048576, !dbg !7287
  br i1 %cmp297, label %if.then299, label %if.end312, !dbg !7288

if.then299:                                       ; preds = %lor.lhs.false, %if.end292
  %215 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7289
  %fc300 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %215, i32 0, i32 10, !dbg !7291
  %216 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc300, align 8, !dbg !7291
  %217 = bitcast %struct.AVFormatContext* %216 to i8*, !dbg !7289
  %218 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !7292
  %kag_size301 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %218, i32 0, i32 9, !dbg !7293
  %219 = load i32, i32* %kag_size301, align 8, !dbg !7293
  call void (i8*, i32, i8*, ...) @av_log(i8* %217, i32 24, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.27, i32 0, i32 0), i32 %219), !dbg !7294
  %220 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7295
  %op302 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %220, i32 0, i32 3, !dbg !7297
  %221 = load i32, i32* %op302, align 4, !dbg !7297
  %cmp303 = icmp eq i32 %221, 11, !dbg !7298
  br i1 %cmp303, label %if.then305, label %if.else307, !dbg !7299

if.then305:                                       ; preds = %if.then299
  %222 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !7300
  %kag_size306 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %222, i32 0, i32 9, !dbg !7301
  store i32 512, i32* %kag_size306, align 8, !dbg !7302
  br label %if.end309, !dbg !7300

if.else307:                                       ; preds = %if.then299
  %223 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !7303
  %kag_size308 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %223, i32 0, i32 9, !dbg !7304
  store i32 1, i32* %kag_size308, align 8, !dbg !7305
  br label %if.end309

if.end309:                                        ; preds = %if.else307, %if.then305
  %224 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7306
  %fc310 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %224, i32 0, i32 10, !dbg !7307
  %225 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc310, align 8, !dbg !7307
  %226 = bitcast %struct.AVFormatContext* %225 to i8*, !dbg !7306
  %227 = load %struct.MXFPartition*, %struct.MXFPartition** %partition, align 8, !dbg !7308
  %kag_size311 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %227, i32 0, i32 9, !dbg !7309
  %228 = load i32, i32* %kag_size311, align 8, !dbg !7309
  call void (i8*, i32, i8*, ...) @av_log(i8* %226, i32 24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i32 0, i32 0), i32 %228), !dbg !7310
  br label %if.end312, !dbg !7311

if.end312:                                        ; preds = %if.end309, %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !7312
  br label %return, !dbg !7312

return:                                           ; preds = %if.end312, %if.then130, %if.then66, %sw.default, %if.then2, %if.then
  %229 = load i32, i32* %retval, align 4, !dbg !7313
  ret i32 %229, !dbg !7313
}

declare i8* @av_realloc_array(i8*, i64, i64) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define internal i32 @mxf_read_primer_pack(i8* %arg, %struct.AVIOContext* %pb, i32 %tag, i32 %size, i8* %uid, i64 %klv_offset) #0 !dbg !7314 {
entry:
  %retval = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %tag.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %uid.addr = alloca i8*, align 8
  %klv_offset.addr = alloca i64, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %item_num = alloca i32, align 4
  %item_len = alloca i32, align 4
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7315, metadata !2511), !dbg !7316
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !7317, metadata !2511), !dbg !7318
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !7319, metadata !2511), !dbg !7320
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7321, metadata !2511), !dbg !7322
  store i8* %uid, i8** %uid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %uid.addr, metadata !7323, metadata !2511), !dbg !7324
  store i64 %klv_offset, i64* %klv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %klv_offset.addr, metadata !7325, metadata !2511), !dbg !7326
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !7327, metadata !2511), !dbg !7328
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !7329
  %1 = bitcast i8* %0 to %struct.MXFContext*, !dbg !7329
  store %struct.MXFContext* %1, %struct.MXFContext** %mxf, align 8, !dbg !7328
  call void @llvm.dbg.declare(metadata i32* %item_num, metadata !7330, metadata !2511), !dbg !7331
  %2 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7332
  %call = call i32 @avio_rb32(%struct.AVIOContext* %2), !dbg !7333
  store i32 %call, i32* %item_num, align 4, !dbg !7331
  call void @llvm.dbg.declare(metadata i32* %item_len, metadata !7334, metadata !2511), !dbg !7335
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7336
  %call1 = call i32 @avio_rb32(%struct.AVIOContext* %3), !dbg !7337
  store i32 %call1, i32* %item_len, align 4, !dbg !7335
  %4 = load i32, i32* %item_len, align 4, !dbg !7338
  %cmp = icmp ne i32 %4, 18, !dbg !7340
  br i1 %cmp, label %if.then, label %if.end, !dbg !7341

if.then:                                          ; preds = %entry
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7342
  %6 = bitcast %struct.AVIOContext* %5 to i8*, !dbg !7342
  %7 = load i32, i32* %item_len, align 4, !dbg !7344
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %6, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.33, i32 0, i32 0), i32 %7), !dbg !7345
  store i32 -1163346256, i32* %retval, align 4, !dbg !7346
  br label %return, !dbg !7346

if.end:                                           ; preds = %entry
  %8 = load i32, i32* %item_num, align 4, !dbg !7347
  %cmp2 = icmp sgt i32 %8, 65536, !dbg !7349
  br i1 %cmp2, label %if.then4, label %lor.lhs.false, !dbg !7350

lor.lhs.false:                                    ; preds = %if.end
  %9 = load i32, i32* %item_num, align 4, !dbg !7351
  %cmp3 = icmp slt i32 %9, 0, !dbg !7353
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !7354

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %10 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7355
  %fc = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %10, i32 0, i32 10, !dbg !7357
  %11 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc, align 8, !dbg !7357
  %12 = bitcast %struct.AVFormatContext* %11 to i8*, !dbg !7355
  %13 = load i32, i32* %item_num, align 4, !dbg !7358
  call void (i8*, i32, i8*, ...) @av_log(i8* %12, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.34, i32 0, i32 0), i32 %13), !dbg !7359
  store i32 -1094995529, i32* %retval, align 4, !dbg !7360
  br label %return, !dbg !7360

if.end5:                                          ; preds = %lor.lhs.false
  %14 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7361
  %local_tags = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %14, i32 0, i32 12, !dbg !7363
  %15 = load i8*, i8** %local_tags, align 8, !dbg !7363
  %tobool = icmp ne i8* %15, null, !dbg !7361
  br i1 %tobool, label %if.then6, label %if.end8, !dbg !7364

if.then6:                                         ; preds = %if.end5
  %16 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7365
  %fc7 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %16, i32 0, i32 10, !dbg !7366
  %17 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc7, align 8, !dbg !7366
  %18 = bitcast %struct.AVFormatContext* %17 to i8*, !dbg !7365
  call void (i8*, i32, i8*, ...) @av_log(i8* %18, i32 40, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35, i32 0, i32 0)), !dbg !7367
  br label %if.end8, !dbg !7367

if.end8:                                          ; preds = %if.then6, %if.end5
  %19 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7368
  %local_tags9 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %19, i32 0, i32 12, !dbg !7369
  %20 = load i8*, i8** %local_tags9, align 8, !dbg !7369
  call void @av_free(i8* %20), !dbg !7370
  %21 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7371
  %local_tags_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %21, i32 0, i32 13, !dbg !7372
  store i32 0, i32* %local_tags_count, align 8, !dbg !7373
  %22 = load i32, i32* %item_num, align 4, !dbg !7374
  %conv = sext i32 %22 to i64, !dbg !7374
  %23 = load i32, i32* %item_len, align 4, !dbg !7375
  %conv10 = sext i32 %23 to i64, !dbg !7375
  %call11 = call noalias i8* @av_calloc(i64 %conv, i64 %conv10), !dbg !7376
  %24 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7377
  %local_tags12 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %24, i32 0, i32 12, !dbg !7378
  store i8* %call11, i8** %local_tags12, align 8, !dbg !7379
  %25 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7380
  %local_tags13 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %25, i32 0, i32 12, !dbg !7382
  %26 = load i8*, i8** %local_tags13, align 8, !dbg !7382
  %tobool14 = icmp ne i8* %26, null, !dbg !7380
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !7383

if.then15:                                        ; preds = %if.end8
  store i32 -12, i32* %retval, align 4, !dbg !7384
  br label %return, !dbg !7384

if.end16:                                         ; preds = %if.end8
  %27 = load i32, i32* %item_num, align 4, !dbg !7385
  %28 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7386
  %local_tags_count17 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %28, i32 0, i32 13, !dbg !7387
  store i32 %27, i32* %local_tags_count17, align 8, !dbg !7388
  %29 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7389
  %30 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7390
  %local_tags18 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %30, i32 0, i32 12, !dbg !7391
  %31 = load i8*, i8** %local_tags18, align 8, !dbg !7391
  %32 = load i32, i32* %item_num, align 4, !dbg !7392
  %33 = load i32, i32* %item_len, align 4, !dbg !7393
  %mul = mul nsw i32 %32, %33, !dbg !7394
  %call19 = call i32 @avio_read(%struct.AVIOContext* %29, i8* %31, i32 %mul), !dbg !7395
  store i32 0, i32* %retval, align 4, !dbg !7396
  br label %return, !dbg !7396

return:                                           ; preds = %if.end16, %if.then15, %if.then4, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !7397
  ret i32 %34, !dbg !7397
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_read_preface_metadata(i8* %arg, %struct.AVIOContext* %pb, i32 %tag, i32 %size, i8* %uid, i64 %klv_offset) #0 !dbg !7398 {
entry:
  %retval = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %tag.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %uid.addr = alloca i8*, align 8
  %klv_offset.addr = alloca i64, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %s = alloca %struct.AVFormatContext*, align 8
  %ret = alloca i32, align 4
  %str = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7399, metadata !2511), !dbg !7400
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !7401, metadata !2511), !dbg !7402
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !7403, metadata !2511), !dbg !7404
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7405, metadata !2511), !dbg !7406
  store i8* %uid, i8** %uid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %uid.addr, metadata !7407, metadata !2511), !dbg !7408
  store i64 %klv_offset, i64* %klv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %klv_offset.addr, metadata !7409, metadata !2511), !dbg !7410
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !7411, metadata !2511), !dbg !7412
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !7413
  %1 = bitcast i8* %0 to %struct.MXFContext*, !dbg !7413
  store %struct.MXFContext* %1, %struct.MXFContext** %mxf, align 8, !dbg !7412
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s, metadata !7414, metadata !2511), !dbg !7415
  %2 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7416
  %fc = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %2, i32 0, i32 10, !dbg !7417
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc, align 8, !dbg !7417
  store %struct.AVFormatContext* %3, %struct.AVFormatContext** %s, align 8, !dbg !7415
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7418, metadata !2511), !dbg !7419
  call void @llvm.dbg.declare(metadata i8** %str, metadata !7420, metadata !2511), !dbg !7421
  store i8* null, i8** %str, align 8, !dbg !7421
  %4 = load i32, i32* %tag.addr, align 4, !dbg !7422
  %cmp = icmp sge i32 %4, 32768, !dbg !7424
  br i1 %cmp, label %land.lhs.true, label %if.end5, !dbg !7425

land.lhs.true:                                    ; preds = %entry
  %5 = load i8*, i8** %uid.addr, align 8, !dbg !7426
  %call = call i32 @memcmp(i8* %5, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @mxf_avid_project_name, i32 0, i32 0), i64 16) #9, !dbg !7428
  %tobool = icmp ne i32 %call, 0, !dbg !7428
  br i1 %tobool, label %if.end5, label %if.then, !dbg !7429

if.then:                                          ; preds = %land.lhs.true
  br label %do.body, !dbg !7430, !llvm.loop !7432

do.body:                                          ; preds = %if.then
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7433
  %7 = load i32, i32* %size.addr, align 4, !dbg !7437
  %call1 = call i32 @mxf_read_utf16be_string(%struct.AVIOContext* %6, i32 %7, i8** %str), !dbg !7438
  store i32 %call1, i32* %ret, align 4, !dbg !7439
  %cmp2 = icmp slt i32 %call1, 0, !dbg !7440
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !7441

if.then3:                                         ; preds = %do.body
  %8 = load i32, i32* %ret, align 4, !dbg !7442
  store i32 %8, i32* %retval, align 4, !dbg !7444
  br label %return, !dbg !7444

if.end:                                           ; preds = %do.body
  %9 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s, align 8, !dbg !7445
  %metadata = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %9, i32 0, i32 29, !dbg !7447
  %10 = load i8*, i8** %str, align 8, !dbg !7448
  %call4 = call i32 @av_dict_set(%struct.AVDictionary** %metadata, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36, i32 0, i32 0), i8* %10, i32 8), !dbg !7449
  br label %do.end, !dbg !7450

do.end:                                           ; preds = %if.end
  br label %if.end5, !dbg !7451

if.end5:                                          ; preds = %do.end, %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !7452
  br label %return, !dbg !7452

return:                                           ; preds = %if.end5, %if.then3
  %11 = load i32, i32* %retval, align 4, !dbg !7453
  ret i32 %11, !dbg !7453
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_read_identification_metadata(i8* %arg, %struct.AVIOContext* %pb, i32 %tag, i32 %size, i8* %_uid, i64 %klv_offset) #0 !dbg !7454 {
entry:
  %retval = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %tag.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %_uid.addr = alloca i8*, align 8
  %klv_offset.addr = alloca i64, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %s = alloca %struct.AVFormatContext*, align 8
  %ret = alloca i32, align 4
  %uid = alloca [16 x i8], align 16
  %str = alloca i8*, align 8
  %ts = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7455, metadata !2511), !dbg !7456
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !7457, metadata !2511), !dbg !7458
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !7459, metadata !2511), !dbg !7460
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7461, metadata !2511), !dbg !7462
  store i8* %_uid, i8** %_uid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %_uid.addr, metadata !7463, metadata !2511), !dbg !7464
  store i64 %klv_offset, i64* %klv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %klv_offset.addr, metadata !7465, metadata !2511), !dbg !7466
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !7467, metadata !2511), !dbg !7468
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !7469
  %1 = bitcast i8* %0 to %struct.MXFContext*, !dbg !7469
  store %struct.MXFContext* %1, %struct.MXFContext** %mxf, align 8, !dbg !7468
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s, metadata !7470, metadata !2511), !dbg !7471
  %2 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7472
  %fc = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %2, i32 0, i32 10, !dbg !7473
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc, align 8, !dbg !7473
  store %struct.AVFormatContext* %3, %struct.AVFormatContext** %s, align 8, !dbg !7471
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7474, metadata !2511), !dbg !7475
  call void @llvm.dbg.declare(metadata [16 x i8]* %uid, metadata !7476, metadata !2511), !dbg !7477
  %4 = bitcast [16 x i8]* %uid to i8*, !dbg !7477
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 16, i32 16, i1 false), !dbg !7477
  call void @llvm.dbg.declare(metadata i8** %str, metadata !7478, metadata !2511), !dbg !7479
  store i8* null, i8** %str, align 8, !dbg !7479
  call void @llvm.dbg.declare(metadata i64* %ts, metadata !7480, metadata !2511), !dbg !7481
  %5 = load i32, i32* %tag.addr, align 4, !dbg !7482
  switch i32 %5, label %sw.epilog [
    i32 15361, label %sw.bb
    i32 15362, label %sw.bb2
    i32 15364, label %sw.bb11
    i32 15365, label %sw.bb20
    i32 15366, label %sw.bb31
    i32 15368, label %sw.bb41
    i32 15369, label %sw.bb50
    i32 15370, label %sw.bb62
  ], !dbg !7483

sw.bb:                                            ; preds = %entry
  br label %do.body, !dbg !7484, !llvm.loop !7486

do.body:                                          ; preds = %sw.bb
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7487
  %7 = load i32, i32* %size.addr, align 4, !dbg !7491
  %call = call i32 @mxf_read_utf16be_string(%struct.AVIOContext* %6, i32 %7, i8** %str), !dbg !7492
  store i32 %call, i32* %ret, align 4, !dbg !7493
  %cmp = icmp slt i32 %call, 0, !dbg !7494
  br i1 %cmp, label %if.then, label %if.end, !dbg !7495

if.then:                                          ; preds = %do.body
  %8 = load i32, i32* %ret, align 4, !dbg !7496
  store i32 %8, i32* %retval, align 4, !dbg !7498
  br label %return, !dbg !7498

if.end:                                           ; preds = %do.body
  %9 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s, align 8, !dbg !7499
  %metadata = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %9, i32 0, i32 29, !dbg !7501
  %10 = load i8*, i8** %str, align 8, !dbg !7502
  %call1 = call i32 @av_dict_set(%struct.AVDictionary** %metadata, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.37, i32 0, i32 0), i8* %10, i32 8), !dbg !7503
  br label %do.end, !dbg !7504

do.end:                                           ; preds = %if.end
  br label %sw.epilog, !dbg !7505

sw.bb2:                                           ; preds = %entry
  br label %do.body3, !dbg !7506, !llvm.loop !7507

do.body3:                                         ; preds = %sw.bb2
  %11 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7508
  %12 = load i32, i32* %size.addr, align 4, !dbg !7512
  %call4 = call i32 @mxf_read_utf16be_string(%struct.AVIOContext* %11, i32 %12, i8** %str), !dbg !7513
  store i32 %call4, i32* %ret, align 4, !dbg !7514
  %cmp5 = icmp slt i32 %call4, 0, !dbg !7515
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !7516

if.then6:                                         ; preds = %do.body3
  %13 = load i32, i32* %ret, align 4, !dbg !7517
  store i32 %13, i32* %retval, align 4, !dbg !7519
  br label %return, !dbg !7519

if.end7:                                          ; preds = %do.body3
  %14 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s, align 8, !dbg !7520
  %metadata8 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %14, i32 0, i32 29, !dbg !7522
  %15 = load i8*, i8** %str, align 8, !dbg !7523
  %call9 = call i32 @av_dict_set(%struct.AVDictionary** %metadata8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.38, i32 0, i32 0), i8* %15, i32 8), !dbg !7524
  br label %do.end10, !dbg !7525

do.end10:                                         ; preds = %if.end7
  br label %sw.epilog, !dbg !7526

sw.bb11:                                          ; preds = %entry
  br label %do.body12, !dbg !7527, !llvm.loop !7528

do.body12:                                        ; preds = %sw.bb11
  %16 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7529
  %17 = load i32, i32* %size.addr, align 4, !dbg !7533
  %call13 = call i32 @mxf_read_utf16be_string(%struct.AVIOContext* %16, i32 %17, i8** %str), !dbg !7534
  store i32 %call13, i32* %ret, align 4, !dbg !7535
  %cmp14 = icmp slt i32 %call13, 0, !dbg !7536
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !7537

if.then15:                                        ; preds = %do.body12
  %18 = load i32, i32* %ret, align 4, !dbg !7538
  store i32 %18, i32* %retval, align 4, !dbg !7540
  br label %return, !dbg !7540

if.end16:                                         ; preds = %do.body12
  %19 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s, align 8, !dbg !7541
  %metadata17 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %19, i32 0, i32 29, !dbg !7543
  %20 = load i8*, i8** %str, align 8, !dbg !7544
  %call18 = call i32 @av_dict_set(%struct.AVDictionary** %metadata17, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.39, i32 0, i32 0), i8* %20, i32 8), !dbg !7545
  br label %do.end19, !dbg !7546

do.end19:                                         ; preds = %if.end16
  br label %sw.epilog, !dbg !7547

sw.bb20:                                          ; preds = %entry
  br label %do.body21, !dbg !7548, !llvm.loop !7549

do.body21:                                        ; preds = %sw.bb20
  %21 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7550
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %uid, i32 0, i32 0, !dbg !7553
  %call22 = call i32 @avio_read(%struct.AVIOContext* %21, i8* %arraydecay, i32 16), !dbg !7554
  %arraydecay23 = getelementptr inbounds [16 x i8], [16 x i8]* %uid, i32 0, i32 0, !dbg !7555
  %call24 = call i32 @mxf_uid_to_str(i8* %arraydecay23, i8** %str), !dbg !7556
  store i32 %call24, i32* %ret, align 4, !dbg !7558
  %cmp25 = icmp slt i32 %call24, 0, !dbg !7559
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !7560

if.then26:                                        ; preds = %do.body21
  %22 = load i32, i32* %ret, align 4, !dbg !7561
  store i32 %22, i32* %retval, align 4, !dbg !7564
  br label %return, !dbg !7564

if.end27:                                         ; preds = %do.body21
  %23 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s, align 8, !dbg !7565
  %metadata28 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %23, i32 0, i32 29, !dbg !7567
  %24 = load i8*, i8** %str, align 8, !dbg !7568
  %call29 = call i32 @av_dict_set(%struct.AVDictionary** %metadata28, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.40, i32 0, i32 0), i8* %24, i32 8), !dbg !7569
  br label %do.end30, !dbg !7570

do.end30:                                         ; preds = %if.end27
  br label %sw.epilog, !dbg !7571

sw.bb31:                                          ; preds = %entry
  br label %do.body32, !dbg !7572, !llvm.loop !7573

do.body32:                                        ; preds = %sw.bb31
  %25 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7574
  %call33 = call i64 @avio_rb64(%struct.AVIOContext* %25), !dbg !7577
  store i64 %call33, i64* %ts, align 8, !dbg !7578
  %26 = load i64, i64* %ts, align 8, !dbg !7579
  %tobool = icmp ne i64 %26, 0, !dbg !7579
  br i1 %tobool, label %land.lhs.true, label %if.end39, !dbg !7580

land.lhs.true:                                    ; preds = %do.body32
  %27 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s, align 8, !dbg !7581
  %metadata34 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %27, i32 0, i32 29, !dbg !7584
  %28 = load i64, i64* %ts, align 8, !dbg !7585
  %call35 = call i64 @mxf_timestamp_to_int64(i64 %28), !dbg !7586
  %call36 = call i32 @avpriv_dict_set_timestamp(%struct.AVDictionary** %metadata34, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.41, i32 0, i32 0), i64 %call35), !dbg !7587
  store i32 %call36, i32* %ret, align 4, !dbg !7589
  %cmp37 = icmp slt i32 %call36, 0, !dbg !7590
  br i1 %cmp37, label %if.then38, label %if.end39, !dbg !7591

if.then38:                                        ; preds = %land.lhs.true
  %29 = load i32, i32* %ret, align 4, !dbg !7592
  store i32 %29, i32* %retval, align 4, !dbg !7594
  br label %return, !dbg !7594

if.end39:                                         ; preds = %land.lhs.true, %do.body32
  br label %do.end40, !dbg !7595

do.end40:                                         ; preds = %if.end39
  br label %sw.epilog, !dbg !7597

sw.bb41:                                          ; preds = %entry
  br label %do.body42, !dbg !7598, !llvm.loop !7599

do.body42:                                        ; preds = %sw.bb41
  %30 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7600
  %31 = load i32, i32* %size.addr, align 4, !dbg !7604
  %call43 = call i32 @mxf_read_utf16be_string(%struct.AVIOContext* %30, i32 %31, i8** %str), !dbg !7605
  store i32 %call43, i32* %ret, align 4, !dbg !7606
  %cmp44 = icmp slt i32 %call43, 0, !dbg !7607
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !7608

if.then45:                                        ; preds = %do.body42
  %32 = load i32, i32* %ret, align 4, !dbg !7609
  store i32 %32, i32* %retval, align 4, !dbg !7611
  br label %return, !dbg !7611

if.end46:                                         ; preds = %do.body42
  %33 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s, align 8, !dbg !7612
  %metadata47 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %33, i32 0, i32 29, !dbg !7614
  %34 = load i8*, i8** %str, align 8, !dbg !7615
  %call48 = call i32 @av_dict_set(%struct.AVDictionary** %metadata47, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.42, i32 0, i32 0), i8* %34, i32 8), !dbg !7616
  br label %do.end49, !dbg !7617

do.end49:                                         ; preds = %if.end46
  br label %sw.epilog, !dbg !7618

sw.bb50:                                          ; preds = %entry
  br label %do.body51, !dbg !7619, !llvm.loop !7620

do.body51:                                        ; preds = %sw.bb50
  %35 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7621
  %arraydecay52 = getelementptr inbounds [16 x i8], [16 x i8]* %uid, i32 0, i32 0, !dbg !7624
  %call53 = call i32 @avio_read(%struct.AVIOContext* %35, i8* %arraydecay52, i32 16), !dbg !7625
  %arraydecay54 = getelementptr inbounds [16 x i8], [16 x i8]* %uid, i32 0, i32 0, !dbg !7626
  %call55 = call i32 @mxf_uid_to_str(i8* %arraydecay54, i8** %str), !dbg !7627
  store i32 %call55, i32* %ret, align 4, !dbg !7629
  %cmp56 = icmp slt i32 %call55, 0, !dbg !7630
  br i1 %cmp56, label %if.then57, label %if.end58, !dbg !7631

if.then57:                                        ; preds = %do.body51
  %36 = load i32, i32* %ret, align 4, !dbg !7632
  store i32 %36, i32* %retval, align 4, !dbg !7635
  br label %return, !dbg !7635

if.end58:                                         ; preds = %do.body51
  %37 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s, align 8, !dbg !7636
  %metadata59 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %37, i32 0, i32 29, !dbg !7638
  %38 = load i8*, i8** %str, align 8, !dbg !7639
  %call60 = call i32 @av_dict_set(%struct.AVDictionary** %metadata59, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.43, i32 0, i32 0), i8* %38, i32 8), !dbg !7640
  br label %do.end61, !dbg !7641

do.end61:                                         ; preds = %if.end58
  br label %sw.epilog, !dbg !7642

sw.bb62:                                          ; preds = %entry
  br label %do.body63, !dbg !7643, !llvm.loop !7644

do.body63:                                        ; preds = %sw.bb62
  %39 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7645
  %arraydecay64 = getelementptr inbounds [16 x i8], [16 x i8]* %uid, i32 0, i32 0, !dbg !7648
  %call65 = call i32 @avio_read(%struct.AVIOContext* %39, i8* %arraydecay64, i32 16), !dbg !7649
  %arraydecay66 = getelementptr inbounds [16 x i8], [16 x i8]* %uid, i32 0, i32 0, !dbg !7650
  %call67 = call i32 @mxf_uid_to_str(i8* %arraydecay66, i8** %str), !dbg !7651
  store i32 %call67, i32* %ret, align 4, !dbg !7653
  %cmp68 = icmp slt i32 %call67, 0, !dbg !7654
  br i1 %cmp68, label %if.then69, label %if.end70, !dbg !7655

if.then69:                                        ; preds = %do.body63
  %40 = load i32, i32* %ret, align 4, !dbg !7656
  store i32 %40, i32* %retval, align 4, !dbg !7659
  br label %return, !dbg !7659

if.end70:                                         ; preds = %do.body63
  %41 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s, align 8, !dbg !7660
  %metadata71 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %41, i32 0, i32 29, !dbg !7662
  %42 = load i8*, i8** %str, align 8, !dbg !7663
  %call72 = call i32 @av_dict_set(%struct.AVDictionary** %metadata71, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i32 0, i32 0), i8* %42, i32 8), !dbg !7664
  br label %do.end73, !dbg !7665

do.end73:                                         ; preds = %if.end70
  br label %sw.epilog, !dbg !7666

sw.epilog:                                        ; preds = %entry, %do.end73, %do.end61, %do.end49, %do.end40, %do.end30, %do.end19, %do.end10, %do.end
  store i32 0, i32* %retval, align 4, !dbg !7667
  br label %return, !dbg !7667

return:                                           ; preds = %sw.epilog, %if.then69, %if.then57, %if.then45, %if.then38, %if.then26, %if.then15, %if.then6, %if.then
  %43 = load i32, i32* %retval, align 4, !dbg !7668
  ret i32 %43, !dbg !7668
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_read_content_storage(i8* %arg, %struct.AVIOContext* %pb, i32 %tag, i32 %size, i8* %uid, i64 %klv_offset) #0 !dbg !7669 {
entry:
  %retval = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %tag.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %uid.addr = alloca i8*, align 8
  %klv_offset.addr = alloca i64, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7670, metadata !2511), !dbg !7671
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !7672, metadata !2511), !dbg !7673
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !7674, metadata !2511), !dbg !7675
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7676, metadata !2511), !dbg !7677
  store i8* %uid, i8** %uid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %uid.addr, metadata !7678, metadata !2511), !dbg !7679
  store i64 %klv_offset, i64* %klv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %klv_offset.addr, metadata !7680, metadata !2511), !dbg !7681
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !7682, metadata !2511), !dbg !7683
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !7684
  %1 = bitcast i8* %0 to %struct.MXFContext*, !dbg !7684
  store %struct.MXFContext* %1, %struct.MXFContext** %mxf, align 8, !dbg !7683
  %2 = load i32, i32* %tag.addr, align 4, !dbg !7685
  switch i32 %2, label %sw.epilog [
    i32 6401, label %sw.bb
    i32 6402, label %sw.bb3
  ], !dbg !7686

sw.bb:                                            ; preds = %entry
  %3 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7687
  %packages_refs = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %3, i32 0, i32 4, !dbg !7690
  %4 = load [16 x i8]*, [16 x i8]** %packages_refs, align 8, !dbg !7690
  %tobool = icmp ne [16 x i8]* %4, null, !dbg !7687
  br i1 %tobool, label %if.then, label %if.end, !dbg !7691

if.then:                                          ; preds = %sw.bb
  %5 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7692
  %fc = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %5, i32 0, i32 10, !dbg !7693
  %6 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc, align 8, !dbg !7693
  %7 = bitcast %struct.AVFormatContext* %6 to i8*, !dbg !7692
  call void (i8*, i32, i8*, ...) @av_log(i8* %7, i32 40, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.47, i32 0, i32 0)), !dbg !7694
  br label %if.end, !dbg !7694

if.end:                                           ; preds = %if.then, %sw.bb
  %8 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7695
  %packages_refs1 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %8, i32 0, i32 4, !dbg !7696
  %9 = load [16 x i8]*, [16 x i8]** %packages_refs1, align 8, !dbg !7696
  %10 = bitcast [16 x i8]* %9 to i8*, !dbg !7695
  call void @av_free(i8* %10), !dbg !7697
  %11 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7698
  %12 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7699
  %packages_refs2 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %12, i32 0, i32 4, !dbg !7700
  %13 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7701
  %packages_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %13, i32 0, i32 5, !dbg !7702
  %call = call i32 @mxf_read_strong_ref_array(%struct.AVIOContext* %11, [16 x i8]** %packages_refs2, i32* %packages_count), !dbg !7703
  store i32 %call, i32* %retval, align 4, !dbg !7704
  br label %return, !dbg !7704

sw.bb3:                                           ; preds = %entry
  %14 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7705
  %essence_container_data_refs = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %14, i32 0, i32 6, !dbg !7706
  %15 = load [16 x i8]*, [16 x i8]** %essence_container_data_refs, align 8, !dbg !7706
  %16 = bitcast [16 x i8]* %15 to i8*, !dbg !7705
  call void @av_free(i8* %16), !dbg !7707
  %17 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7708
  %18 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7709
  %essence_container_data_refs4 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %18, i32 0, i32 6, !dbg !7710
  %19 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !7711
  %essence_container_data_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %19, i32 0, i32 7, !dbg !7712
  %call5 = call i32 @mxf_read_strong_ref_array(%struct.AVIOContext* %17, [16 x i8]** %essence_container_data_refs4, i32* %essence_container_data_count), !dbg !7713
  store i32 %call5, i32* %retval, align 4, !dbg !7714
  br label %return, !dbg !7714

sw.epilog:                                        ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7715
  br label %return, !dbg !7715

return:                                           ; preds = %sw.epilog, %sw.bb3, %if.end
  %20 = load i32, i32* %retval, align 4, !dbg !7716
  ret i32 %20, !dbg !7716
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_read_package(i8* %arg, %struct.AVIOContext* %pb, i32 %tag, i32 %size, i8* %uid, i64 %klv_offset) #0 !dbg !7717 {
entry:
  %retval = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %tag.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %uid.addr = alloca i8*, align 8
  %klv_offset.addr = alloca i64, align 8
  %package = alloca %struct.MXFPackage*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7718, metadata !2511), !dbg !7719
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !7720, metadata !2511), !dbg !7721
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !7722, metadata !2511), !dbg !7723
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7724, metadata !2511), !dbg !7725
  store i8* %uid, i8** %uid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %uid.addr, metadata !7726, metadata !2511), !dbg !7727
  store i64 %klv_offset, i64* %klv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %klv_offset.addr, metadata !7728, metadata !2511), !dbg !7729
  call void @llvm.dbg.declare(metadata %struct.MXFPackage** %package, metadata !7730, metadata !2511), !dbg !7731
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !7732
  %1 = bitcast i8* %0 to %struct.MXFPackage*, !dbg !7732
  store %struct.MXFPackage* %1, %struct.MXFPackage** %package, align 8, !dbg !7731
  %2 = load i32, i32* %tag.addr, align 4, !dbg !7733
  switch i32 %2, label %sw.epilog [
    i32 17411, label %sw.bb
    i32 17409, label %sw.bb1
    i32 18177, label %sw.bb5
    i32 17410, label %sw.bb8
    i32 17414, label %sw.bb10
  ], !dbg !7734

sw.bb:                                            ; preds = %entry
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7735
  %4 = load %struct.MXFPackage*, %struct.MXFPackage** %package, align 8, !dbg !7737
  %tracks_refs = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %4, i32 0, i32 4, !dbg !7738
  %5 = load %struct.MXFPackage*, %struct.MXFPackage** %package, align 8, !dbg !7739
  %tracks_count = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %5, i32 0, i32 5, !dbg !7740
  %call = call i32 @mxf_read_strong_ref_array(%struct.AVIOContext* %3, [16 x i8]** %tracks_refs, i32* %tracks_count), !dbg !7741
  store i32 %call, i32* %retval, align 4, !dbg !7742
  br label %return, !dbg !7742

sw.bb1:                                           ; preds = %entry
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7743
  %7 = load %struct.MXFPackage*, %struct.MXFPackage** %package, align 8, !dbg !7744
  %package_ul = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %7, i32 0, i32 3, !dbg !7745
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %package_ul, i32 0, i32 0, !dbg !7744
  %call2 = call i32 @avio_read(%struct.AVIOContext* %6, i8* %arraydecay, i32 16), !dbg !7746
  %8 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7747
  %9 = load %struct.MXFPackage*, %struct.MXFPackage** %package, align 8, !dbg !7748
  %package_uid = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %9, i32 0, i32 2, !dbg !7749
  %arraydecay3 = getelementptr inbounds [16 x i8], [16 x i8]* %package_uid, i32 0, i32 0, !dbg !7748
  %call4 = call i32 @avio_read(%struct.AVIOContext* %8, i8* %arraydecay3, i32 16), !dbg !7750
  br label %sw.epilog, !dbg !7751

sw.bb5:                                           ; preds = %entry
  %10 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7752
  %11 = load %struct.MXFPackage*, %struct.MXFPackage** %package, align 8, !dbg !7753
  %descriptor_ref = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %11, i32 0, i32 7, !dbg !7754
  %arraydecay6 = getelementptr inbounds [16 x i8], [16 x i8]* %descriptor_ref, i32 0, i32 0, !dbg !7753
  %call7 = call i32 @avio_read(%struct.AVIOContext* %10, i8* %arraydecay6, i32 16), !dbg !7755
  br label %sw.epilog, !dbg !7756

sw.bb8:                                           ; preds = %entry
  %12 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7757
  %13 = load i32, i32* %size.addr, align 4, !dbg !7758
  %14 = load %struct.MXFPackage*, %struct.MXFPackage** %package, align 8, !dbg !7759
  %name = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %14, i32 0, i32 8, !dbg !7760
  %call9 = call i32 @mxf_read_utf16be_string(%struct.AVIOContext* %12, i32 %13, i8** %name), !dbg !7761
  store i32 %call9, i32* %retval, align 4, !dbg !7762
  br label %return, !dbg !7762

sw.bb10:                                          ; preds = %entry
  %15 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7763
  %16 = load %struct.MXFPackage*, %struct.MXFPackage** %package, align 8, !dbg !7764
  %comment_refs = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %16, i32 0, i32 9, !dbg !7765
  %17 = load %struct.MXFPackage*, %struct.MXFPackage** %package, align 8, !dbg !7766
  %comment_count = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %17, i32 0, i32 10, !dbg !7767
  %call11 = call i32 @mxf_read_strong_ref_array(%struct.AVIOContext* %15, [16 x i8]** %comment_refs, i32* %comment_count), !dbg !7768
  store i32 %call11, i32* %retval, align 4, !dbg !7769
  br label %return, !dbg !7769

sw.epilog:                                        ; preds = %entry, %sw.bb5, %sw.bb1
  store i32 0, i32* %retval, align 4, !dbg !7770
  br label %return, !dbg !7770

return:                                           ; preds = %sw.epilog, %sw.bb10, %sw.bb8, %sw.bb
  %18 = load i32, i32* %retval, align 4, !dbg !7771
  ret i32 %18, !dbg !7771
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_read_sequence(i8* %arg, %struct.AVIOContext* %pb, i32 %tag, i32 %size, i8* %uid, i64 %klv_offset) #0 !dbg !7772 {
entry:
  %retval = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %tag.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %uid.addr = alloca i8*, align 8
  %klv_offset.addr = alloca i64, align 8
  %sequence = alloca %struct.MXFSequence*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7773, metadata !2511), !dbg !7774
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !7775, metadata !2511), !dbg !7776
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !7777, metadata !2511), !dbg !7778
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7779, metadata !2511), !dbg !7780
  store i8* %uid, i8** %uid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %uid.addr, metadata !7781, metadata !2511), !dbg !7782
  store i64 %klv_offset, i64* %klv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %klv_offset.addr, metadata !7783, metadata !2511), !dbg !7784
  call void @llvm.dbg.declare(metadata %struct.MXFSequence** %sequence, metadata !7785, metadata !2511), !dbg !7786
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !7787
  %1 = bitcast i8* %0 to %struct.MXFSequence*, !dbg !7787
  store %struct.MXFSequence* %1, %struct.MXFSequence** %sequence, align 8, !dbg !7786
  %2 = load i32, i32* %tag.addr, align 4, !dbg !7788
  switch i32 %2, label %sw.epilog [
    i32 514, label %sw.bb
    i32 513, label %sw.bb1
    i32 19202, label %sw.bb3
    i32 4097, label %sw.bb5
  ], !dbg !7789

sw.bb:                                            ; preds = %entry
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7790
  %call = call i64 @avio_rb64(%struct.AVIOContext* %3), !dbg !7792
  %4 = load %struct.MXFSequence*, %struct.MXFSequence** %sequence, align 8, !dbg !7793
  %duration = getelementptr inbounds %struct.MXFSequence, %struct.MXFSequence* %4, i32 0, i32 5, !dbg !7794
  store i64 %call, i64* %duration, align 8, !dbg !7795
  br label %sw.epilog, !dbg !7796

sw.bb1:                                           ; preds = %entry
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7797
  %6 = load %struct.MXFSequence*, %struct.MXFSequence** %sequence, align 8, !dbg !7798
  %data_definition_ul = getelementptr inbounds %struct.MXFSequence, %struct.MXFSequence* %6, i32 0, i32 2, !dbg !7799
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %data_definition_ul, i32 0, i32 0, !dbg !7798
  %call2 = call i32 @avio_read(%struct.AVIOContext* %5, i8* %arraydecay, i32 16), !dbg !7800
  br label %sw.epilog, !dbg !7801

sw.bb3:                                           ; preds = %entry
  %7 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7802
  %call4 = call i32 @avio_r8(%struct.AVIOContext* %7), !dbg !7803
  %conv = trunc i32 %call4 to i8, !dbg !7803
  %8 = load %struct.MXFSequence*, %struct.MXFSequence** %sequence, align 8, !dbg !7804
  %origin = getelementptr inbounds %struct.MXFSequence, %struct.MXFSequence* %8, i32 0, i32 6, !dbg !7805
  store i8 %conv, i8* %origin, align 8, !dbg !7806
  br label %sw.epilog, !dbg !7807

sw.bb5:                                           ; preds = %entry
  %9 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7808
  %10 = load %struct.MXFSequence*, %struct.MXFSequence** %sequence, align 8, !dbg !7809
  %structural_components_refs = getelementptr inbounds %struct.MXFSequence, %struct.MXFSequence* %10, i32 0, i32 3, !dbg !7810
  %11 = load %struct.MXFSequence*, %struct.MXFSequence** %sequence, align 8, !dbg !7811
  %structural_components_count = getelementptr inbounds %struct.MXFSequence, %struct.MXFSequence* %11, i32 0, i32 4, !dbg !7812
  %call6 = call i32 @mxf_read_strong_ref_array(%struct.AVIOContext* %9, [16 x i8]** %structural_components_refs, i32* %structural_components_count), !dbg !7813
  store i32 %call6, i32* %retval, align 4, !dbg !7814
  br label %return, !dbg !7814

sw.epilog:                                        ; preds = %entry, %sw.bb3, %sw.bb1, %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !7815
  br label %return, !dbg !7815

return:                                           ; preds = %sw.epilog, %sw.bb5
  %12 = load i32, i32* %retval, align 4, !dbg !7816
  ret i32 %12, !dbg !7816
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_read_essence_group(i8* %arg, %struct.AVIOContext* %pb, i32 %tag, i32 %size, i8* %uid, i64 %klv_offset) #0 !dbg !7817 {
entry:
  %retval = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %tag.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %uid.addr = alloca i8*, align 8
  %klv_offset.addr = alloca i64, align 8
  %essence_group = alloca %struct.MXFEssenceGroup*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7818, metadata !2511), !dbg !7819
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !7820, metadata !2511), !dbg !7821
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !7822, metadata !2511), !dbg !7823
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7824, metadata !2511), !dbg !7825
  store i8* %uid, i8** %uid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %uid.addr, metadata !7826, metadata !2511), !dbg !7827
  store i64 %klv_offset, i64* %klv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %klv_offset.addr, metadata !7828, metadata !2511), !dbg !7829
  call void @llvm.dbg.declare(metadata %struct.MXFEssenceGroup** %essence_group, metadata !7830, metadata !2511), !dbg !7831
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !7832
  %1 = bitcast i8* %0 to %struct.MXFEssenceGroup*, !dbg !7832
  store %struct.MXFEssenceGroup* %1, %struct.MXFEssenceGroup** %essence_group, align 8, !dbg !7831
  %2 = load i32, i32* %tag.addr, align 4, !dbg !7833
  switch i32 %2, label %sw.epilog [
    i32 514, label %sw.bb
    i32 1281, label %sw.bb1
  ], !dbg !7834

sw.bb:                                            ; preds = %entry
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7835
  %call = call i64 @avio_rb64(%struct.AVIOContext* %3), !dbg !7837
  %4 = load %struct.MXFEssenceGroup*, %struct.MXFEssenceGroup** %essence_group, align 8, !dbg !7838
  %duration = getelementptr inbounds %struct.MXFEssenceGroup, %struct.MXFEssenceGroup* %4, i32 0, i32 4, !dbg !7839
  store i64 %call, i64* %duration, align 8, !dbg !7840
  br label %sw.epilog, !dbg !7841

sw.bb1:                                           ; preds = %entry
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7842
  %6 = load %struct.MXFEssenceGroup*, %struct.MXFEssenceGroup** %essence_group, align 8, !dbg !7843
  %structural_components_refs = getelementptr inbounds %struct.MXFEssenceGroup, %struct.MXFEssenceGroup* %6, i32 0, i32 2, !dbg !7844
  %7 = load %struct.MXFEssenceGroup*, %struct.MXFEssenceGroup** %essence_group, align 8, !dbg !7845
  %structural_components_count = getelementptr inbounds %struct.MXFEssenceGroup, %struct.MXFEssenceGroup* %7, i32 0, i32 3, !dbg !7846
  %call2 = call i32 @mxf_read_strong_ref_array(%struct.AVIOContext* %5, [16 x i8]** %structural_components_refs, i32* %structural_components_count), !dbg !7847
  store i32 %call2, i32* %retval, align 4, !dbg !7848
  br label %return, !dbg !7848

sw.epilog:                                        ; preds = %entry, %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !7849
  br label %return, !dbg !7849

return:                                           ; preds = %sw.epilog, %sw.bb1
  %8 = load i32, i32* %retval, align 4, !dbg !7850
  ret i32 %8, !dbg !7850
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_read_source_clip(i8* %arg, %struct.AVIOContext* %pb, i32 %tag, i32 %size, i8* %uid, i64 %klv_offset) #0 !dbg !7851 {
entry:
  %arg.addr = alloca i8*, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %tag.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %uid.addr = alloca i8*, align 8
  %klv_offset.addr = alloca i64, align 8
  %source_clip = alloca %struct.MXFStructuralComponent*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7852, metadata !2511), !dbg !7853
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !7854, metadata !2511), !dbg !7855
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !7856, metadata !2511), !dbg !7857
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7858, metadata !2511), !dbg !7859
  store i8* %uid, i8** %uid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %uid.addr, metadata !7860, metadata !2511), !dbg !7861
  store i64 %klv_offset, i64* %klv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %klv_offset.addr, metadata !7862, metadata !2511), !dbg !7863
  call void @llvm.dbg.declare(metadata %struct.MXFStructuralComponent** %source_clip, metadata !7864, metadata !2511), !dbg !7865
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !7866
  %1 = bitcast i8* %0 to %struct.MXFStructuralComponent*, !dbg !7866
  store %struct.MXFStructuralComponent* %1, %struct.MXFStructuralComponent** %source_clip, align 8, !dbg !7865
  %2 = load i32, i32* %tag.addr, align 4, !dbg !7867
  switch i32 %2, label %sw.epilog [
    i32 514, label %sw.bb
    i32 4609, label %sw.bb1
    i32 4353, label %sw.bb3
    i32 4354, label %sw.bb7
  ], !dbg !7868

sw.bb:                                            ; preds = %entry
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7869
  %call = call i64 @avio_rb64(%struct.AVIOContext* %3), !dbg !7871
  %4 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %source_clip, align 8, !dbg !7872
  %duration = getelementptr inbounds %struct.MXFStructuralComponent, %struct.MXFStructuralComponent* %4, i32 0, i32 5, !dbg !7873
  store i64 %call, i64* %duration, align 8, !dbg !7874
  br label %sw.epilog, !dbg !7875

sw.bb1:                                           ; preds = %entry
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7876
  %call2 = call i64 @avio_rb64(%struct.AVIOContext* %5), !dbg !7877
  %6 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %source_clip, align 8, !dbg !7878
  %start_position = getelementptr inbounds %struct.MXFStructuralComponent, %struct.MXFStructuralComponent* %6, i32 0, i32 6, !dbg !7879
  store i64 %call2, i64* %start_position, align 8, !dbg !7880
  br label %sw.epilog, !dbg !7881

sw.bb3:                                           ; preds = %entry
  %7 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7882
  %8 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %source_clip, align 8, !dbg !7883
  %source_package_ul = getelementptr inbounds %struct.MXFStructuralComponent, %struct.MXFStructuralComponent* %8, i32 0, i32 2, !dbg !7884
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %source_package_ul, i32 0, i32 0, !dbg !7883
  %call4 = call i32 @avio_read(%struct.AVIOContext* %7, i8* %arraydecay, i32 16), !dbg !7885
  %9 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7886
  %10 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %source_clip, align 8, !dbg !7887
  %source_package_uid = getelementptr inbounds %struct.MXFStructuralComponent, %struct.MXFStructuralComponent* %10, i32 0, i32 3, !dbg !7888
  %arraydecay5 = getelementptr inbounds [16 x i8], [16 x i8]* %source_package_uid, i32 0, i32 0, !dbg !7887
  %call6 = call i32 @avio_read(%struct.AVIOContext* %9, i8* %arraydecay5, i32 16), !dbg !7889
  br label %sw.epilog, !dbg !7890

sw.bb7:                                           ; preds = %entry
  %11 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7891
  %call8 = call i32 @avio_rb32(%struct.AVIOContext* %11), !dbg !7892
  %12 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %source_clip, align 8, !dbg !7893
  %source_track_id = getelementptr inbounds %struct.MXFStructuralComponent, %struct.MXFStructuralComponent* %12, i32 0, i32 7, !dbg !7894
  store i32 %call8, i32* %source_track_id, align 8, !dbg !7895
  br label %sw.epilog, !dbg !7896

sw.epilog:                                        ; preds = %entry, %sw.bb7, %sw.bb3, %sw.bb1, %sw.bb
  ret i32 0, !dbg !7897
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_read_tagged_value(i8* %arg, %struct.AVIOContext* %pb, i32 %tag, i32 %size, i8* %uid, i64 %klv_offset) #0 !dbg !7898 {
entry:
  %retval = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %tag.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %uid.addr = alloca i8*, align 8
  %klv_offset.addr = alloca i64, align 8
  %tagged_value = alloca %struct.MXFTaggedValue*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7899, metadata !2511), !dbg !7900
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !7901, metadata !2511), !dbg !7902
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !7903, metadata !2511), !dbg !7904
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7905, metadata !2511), !dbg !7906
  store i8* %uid, i8** %uid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %uid.addr, metadata !7907, metadata !2511), !dbg !7908
  store i64 %klv_offset, i64* %klv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %klv_offset.addr, metadata !7909, metadata !2511), !dbg !7910
  call void @llvm.dbg.declare(metadata %struct.MXFTaggedValue** %tagged_value, metadata !7911, metadata !2511), !dbg !7912
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !7913
  %1 = bitcast i8* %0 to %struct.MXFTaggedValue*, !dbg !7913
  store %struct.MXFTaggedValue* %1, %struct.MXFTaggedValue** %tagged_value, align 8, !dbg !7912
  %2 = load i32, i32* %tag.addr, align 4, !dbg !7914
  switch i32 %2, label %sw.epilog [
    i32 20481, label %sw.bb
    i32 20483, label %sw.bb1
  ], !dbg !7915

sw.bb:                                            ; preds = %entry
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7916
  %4 = load i32, i32* %size.addr, align 4, !dbg !7918
  %5 = load %struct.MXFTaggedValue*, %struct.MXFTaggedValue** %tagged_value, align 8, !dbg !7919
  %name = getelementptr inbounds %struct.MXFTaggedValue, %struct.MXFTaggedValue* %5, i32 0, i32 2, !dbg !7920
  %call = call i32 @mxf_read_utf16be_string(%struct.AVIOContext* %3, i32 %4, i8** %name), !dbg !7921
  store i32 %call, i32* %retval, align 4, !dbg !7922
  br label %return, !dbg !7922

sw.bb1:                                           ; preds = %entry
  %6 = load %struct.MXFTaggedValue*, %struct.MXFTaggedValue** %tagged_value, align 8, !dbg !7923
  %7 = bitcast %struct.MXFTaggedValue* %6 to i8*, !dbg !7923
  %8 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7924
  %9 = load i32, i32* %size.addr, align 4, !dbg !7925
  %call2 = call i32 @mxf_read_indirect_value(i8* %7, %struct.AVIOContext* %8, i32 %9), !dbg !7926
  store i32 %call2, i32* %retval, align 4, !dbg !7927
  br label %return, !dbg !7927

sw.epilog:                                        ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7928
  br label %return, !dbg !7928

return:                                           ; preds = %sw.epilog, %sw.bb1, %sw.bb
  %10 = load i32, i32* %retval, align 4, !dbg !7929
  ret i32 %10, !dbg !7929
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_read_generic_descriptor(i8* %arg, %struct.AVIOContext* %pb, i32 %tag, i32 %size, i8* %uid, i64 %klv_offset) #0 !dbg !7930 {
entry:
  %retval = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %tag.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %uid.addr = alloca i8*, align 8
  %klv_offset.addr = alloca i64, align 8
  %descriptor = alloca %struct.MXFDescriptor*, align 8
  %entry_count = alloca i32, align 4
  %entry_size = alloca i32, align 4
  %rsiz = alloca i32, align 4
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7931, metadata !2511), !dbg !7932
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !7933, metadata !2511), !dbg !7934
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !7935, metadata !2511), !dbg !7936
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7937, metadata !2511), !dbg !7938
  store i8* %uid, i8** %uid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %uid.addr, metadata !7939, metadata !2511), !dbg !7940
  store i64 %klv_offset, i64* %klv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %klv_offset.addr, metadata !7941, metadata !2511), !dbg !7942
  call void @llvm.dbg.declare(metadata %struct.MXFDescriptor** %descriptor, metadata !7943, metadata !2511), !dbg !7944
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !7945
  %1 = bitcast i8* %0 to %struct.MXFDescriptor*, !dbg !7945
  store %struct.MXFDescriptor* %1, %struct.MXFDescriptor** %descriptor, align 8, !dbg !7944
  call void @llvm.dbg.declare(metadata i32* %entry_count, metadata !7946, metadata !2511), !dbg !7947
  call void @llvm.dbg.declare(metadata i32* %entry_size, metadata !7948, metadata !2511), !dbg !7949
  %2 = load i32, i32* %tag.addr, align 4, !dbg !7950
  switch i32 %2, label %sw.default [
    i32 16129, label %sw.bb
    i32 12290, label %sw.bb1
    i32 12292, label %sw.bb3
    i32 12293, label %sw.bb5
    i32 12294, label %sw.bb8
    i32 12801, label %sw.bb10
    i32 12803, label %sw.bb13
    i32 12802, label %sw.bb15
    i32 12812, label %sw.bb17
    i32 12813, label %sw.bb19
    i32 12814, label %sw.bb38
    i32 12818, label %sw.bb42
    i32 13057, label %sw.bb44
    i32 13058, label %sw.bb46
    i32 13064, label %sw.bb48
    i32 15619, label %sw.bb50
    i32 15622, label %sw.bb56
    i32 15623, label %sw.bb60
    i32 15617, label %sw.bb62
    i32 13313, label %sw.bb64
  ], !dbg !7951

sw.bb:                                            ; preds = %entry
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7952
  %4 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !7954
  %sub_descriptors_refs = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %4, i32 0, i32 18, !dbg !7955
  %5 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !7956
  %sub_descriptors_count = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %5, i32 0, i32 19, !dbg !7957
  %call = call i32 @mxf_read_strong_ref_array(%struct.AVIOContext* %3, [16 x i8]** %sub_descriptors_refs, i32* %sub_descriptors_count), !dbg !7958
  store i32 %call, i32* %retval, align 4, !dbg !7959
  br label %return, !dbg !7959

sw.bb1:                                           ; preds = %entry
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7960
  %call2 = call i64 @avio_rb64(%struct.AVIOContext* %6), !dbg !7961
  %7 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !7962
  %duration = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %7, i32 0, i32 14, !dbg !7963
  store i64 %call2, i64* %duration, align 8, !dbg !7964
  br label %sw.epilog, !dbg !7965

sw.bb3:                                           ; preds = %entry
  %8 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7966
  %9 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !7967
  %essence_container_ul = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %9, i32 0, i32 2, !dbg !7968
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %essence_container_ul, i32 0, i32 0, !dbg !7967
  %call4 = call i32 @avio_read(%struct.AVIOContext* %8, i8* %arraydecay, i32 16), !dbg !7969
  br label %sw.epilog, !dbg !7970

sw.bb5:                                           ; preds = %entry
  %10 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7971
  %11 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !7972
  %codec_ul = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %11, i32 0, i32 4, !dbg !7973
  %arraydecay6 = getelementptr inbounds [16 x i8], [16 x i8]* %codec_ul, i32 0, i32 0, !dbg !7972
  %call7 = call i32 @avio_read(%struct.AVIOContext* %10, i8* %arraydecay6, i32 16), !dbg !7974
  br label %sw.epilog, !dbg !7975

sw.bb8:                                           ; preds = %entry
  %12 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7976
  %call9 = call i32 @avio_rb32(%struct.AVIOContext* %12), !dbg !7977
  %13 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !7978
  %linked_track_id = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %13, i32 0, i32 20, !dbg !7979
  store i32 %call9, i32* %linked_track_id, align 4, !dbg !7980
  br label %sw.epilog, !dbg !7981

sw.bb10:                                          ; preds = %entry
  %14 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7982
  %15 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !7983
  %essence_codec_ul = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %15, i32 0, i32 3, !dbg !7984
  %arraydecay11 = getelementptr inbounds [16 x i8], [16 x i8]* %essence_codec_ul, i32 0, i32 0, !dbg !7983
  %call12 = call i32 @avio_read(%struct.AVIOContext* %14, i8* %arraydecay11, i32 16), !dbg !7985
  br label %sw.epilog, !dbg !7986

sw.bb13:                                          ; preds = %entry
  %16 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7987
  %call14 = call i32 @avio_rb32(%struct.AVIOContext* %16), !dbg !7988
  %17 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !7989
  %width = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %17, i32 0, i32 7, !dbg !7990
  store i32 %call14, i32* %width, align 4, !dbg !7991
  br label %sw.epilog, !dbg !7992

sw.bb15:                                          ; preds = %entry
  %18 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7993
  %call16 = call i32 @avio_rb32(%struct.AVIOContext* %18), !dbg !7994
  %19 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !7995
  %height = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %19, i32 0, i32 8, !dbg !7996
  store i32 %call16, i32* %height, align 8, !dbg !7997
  br label %sw.epilog, !dbg !7998

sw.bb17:                                          ; preds = %entry
  %20 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !7999
  %call18 = call i32 @avio_r8(%struct.AVIOContext* %20), !dbg !8000
  %21 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !8001
  %frame_layout = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %21, i32 0, i32 9, !dbg !8002
  store i32 %call18, i32* %frame_layout, align 4, !dbg !8003
  br label %sw.epilog, !dbg !8004

sw.bb19:                                          ; preds = %entry
  %22 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8005
  %call20 = call i32 @avio_rb32(%struct.AVIOContext* %22), !dbg !8006
  store i32 %call20, i32* %entry_count, align 4, !dbg !8007
  %23 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8008
  %call21 = call i32 @avio_rb32(%struct.AVIOContext* %23), !dbg !8009
  store i32 %call21, i32* %entry_size, align 4, !dbg !8010
  %24 = load i32, i32* %entry_size, align 4, !dbg !8011
  %cmp = icmp eq i32 %24, 4, !dbg !8013
  br i1 %cmp, label %if.then, label %if.else36, !dbg !8014

if.then:                                          ; preds = %sw.bb19
  %25 = load i32, i32* %entry_count, align 4, !dbg !8015
  %cmp22 = icmp sgt i32 %25, 0, !dbg !8018
  br i1 %cmp22, label %if.then23, label %if.else, !dbg !8019

if.then23:                                        ; preds = %if.then
  %26 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8020
  %call24 = call i32 @avio_rb32(%struct.AVIOContext* %26), !dbg !8021
  %27 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !8022
  %video_line_map = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %27, i32 0, i32 10, !dbg !8023
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %video_line_map, i64 0, i64 0, !dbg !8022
  store i32 %call24, i32* %arrayidx, align 8, !dbg !8024
  br label %if.end, !dbg !8022

if.else:                                          ; preds = %if.then
  %28 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !8025
  %video_line_map25 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %28, i32 0, i32 10, !dbg !8026
  %arrayidx26 = getelementptr inbounds [2 x i32], [2 x i32]* %video_line_map25, i64 0, i64 0, !dbg !8025
  store i32 0, i32* %arrayidx26, align 8, !dbg !8027
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then23
  %29 = load i32, i32* %entry_count, align 4, !dbg !8028
  %cmp27 = icmp sgt i32 %29, 1, !dbg !8030
  br i1 %cmp27, label %if.then28, label %if.else32, !dbg !8031

if.then28:                                        ; preds = %if.end
  %30 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8032
  %call29 = call i32 @avio_rb32(%struct.AVIOContext* %30), !dbg !8033
  %31 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !8034
  %video_line_map30 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %31, i32 0, i32 10, !dbg !8035
  %arrayidx31 = getelementptr inbounds [2 x i32], [2 x i32]* %video_line_map30, i64 0, i64 1, !dbg !8034
  store i32 %call29, i32* %arrayidx31, align 4, !dbg !8036
  br label %if.end35, !dbg !8034

if.else32:                                        ; preds = %if.end
  %32 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !8037
  %video_line_map33 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %32, i32 0, i32 10, !dbg !8038
  %arrayidx34 = getelementptr inbounds [2 x i32], [2 x i32]* %video_line_map33, i64 0, i64 1, !dbg !8037
  store i32 0, i32* %arrayidx34, align 4, !dbg !8039
  br label %if.end35

if.end35:                                         ; preds = %if.else32, %if.then28
  br label %if.end37, !dbg !8040

if.else36:                                        ; preds = %sw.bb19
  %33 = load i32, i32* %entry_size, align 4, !dbg !8041
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.48, i32 0, i32 0), i32 %33), !dbg !8042
  br label %if.end37

if.end37:                                         ; preds = %if.else36, %if.end35
  br label %sw.epilog, !dbg !8043

sw.bb38:                                          ; preds = %entry
  %34 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8044
  %call39 = call i32 @avio_rb32(%struct.AVIOContext* %34), !dbg !8045
  %35 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !8046
  %aspect_ratio = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %35, i32 0, i32 6, !dbg !8047
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %aspect_ratio, i32 0, i32 0, !dbg !8048
  store i32 %call39, i32* %num, align 4, !dbg !8049
  %36 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8050
  %call40 = call i32 @avio_rb32(%struct.AVIOContext* %36), !dbg !8051
  %37 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !8052
  %aspect_ratio41 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %37, i32 0, i32 6, !dbg !8053
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %aspect_ratio41, i32 0, i32 1, !dbg !8054
  store i32 %call40, i32* %den, align 4, !dbg !8055
  br label %sw.epilog, !dbg !8056

sw.bb42:                                          ; preds = %entry
  %38 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8057
  %call43 = call i32 @avio_r8(%struct.AVIOContext* %38), !dbg !8058
  %39 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !8059
  %field_dominance = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %39, i32 0, i32 11, !dbg !8060
  store i32 %call43, i32* %field_dominance, align 8, !dbg !8061
  br label %sw.epilog, !dbg !8062

sw.bb44:                                          ; preds = %entry
  %40 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8063
  %call45 = call i32 @avio_rb32(%struct.AVIOContext* %40), !dbg !8064
  %41 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !8065
  %component_depth = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %41, i32 0, i32 15, !dbg !8066
  store i32 %call45, i32* %component_depth, align 8, !dbg !8067
  br label %sw.epilog, !dbg !8068

sw.bb46:                                          ; preds = %entry
  %42 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8069
  %call47 = call i32 @avio_rb32(%struct.AVIOContext* %42), !dbg !8070
  %43 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !8071
  %horiz_subsampling = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %43, i32 0, i32 16, !dbg !8072
  store i32 %call47, i32* %horiz_subsampling, align 4, !dbg !8073
  br label %sw.epilog, !dbg !8074

sw.bb48:                                          ; preds = %entry
  %44 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8075
  %call49 = call i32 @avio_rb32(%struct.AVIOContext* %44), !dbg !8076
  %45 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !8077
  %vert_subsampling = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %45, i32 0, i32 17, !dbg !8078
  store i32 %call49, i32* %vert_subsampling, align 8, !dbg !8079
  br label %sw.epilog, !dbg !8080

sw.bb50:                                          ; preds = %entry
  %46 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8081
  %call51 = call i32 @avio_rb32(%struct.AVIOContext* %46), !dbg !8082
  %47 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !8083
  %sample_rate = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %47, i32 0, i32 5, !dbg !8084
  %num52 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_rate, i32 0, i32 0, !dbg !8085
  store i32 %call51, i32* %num52, align 4, !dbg !8086
  %48 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8087
  %call53 = call i32 @avio_rb32(%struct.AVIOContext* %48), !dbg !8088
  %49 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !8089
  %sample_rate54 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %49, i32 0, i32 5, !dbg !8090
  %den55 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_rate54, i32 0, i32 1, !dbg !8091
  store i32 %call53, i32* %den55, align 4, !dbg !8092
  br label %sw.epilog, !dbg !8093

sw.bb56:                                          ; preds = %entry
  %50 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8094
  %51 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !8095
  %essence_codec_ul57 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %51, i32 0, i32 3, !dbg !8096
  %arraydecay58 = getelementptr inbounds [16 x i8], [16 x i8]* %essence_codec_ul57, i32 0, i32 0, !dbg !8095
  %call59 = call i32 @avio_read(%struct.AVIOContext* %50, i8* %arraydecay58, i32 16), !dbg !8097
  br label %sw.epilog, !dbg !8098

sw.bb60:                                          ; preds = %entry
  %52 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8099
  %call61 = call i32 @avio_rb32(%struct.AVIOContext* %52), !dbg !8100
  %53 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !8101
  %channels = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %53, i32 0, i32 12, !dbg !8102
  store i32 %call61, i32* %channels, align 4, !dbg !8103
  br label %sw.epilog, !dbg !8104

sw.bb62:                                          ; preds = %entry
  %54 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8105
  %call63 = call i32 @avio_rb32(%struct.AVIOContext* %54), !dbg !8106
  %55 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !8107
  %bits_per_sample = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %55, i32 0, i32 13, !dbg !8108
  store i32 %call63, i32* %bits_per_sample, align 8, !dbg !8109
  br label %sw.epilog, !dbg !8110

sw.bb64:                                          ; preds = %entry
  %56 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8111
  %57 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !8112
  call void @mxf_read_pixel_layout(%struct.AVIOContext* %56, %struct.MXFDescriptor* %57), !dbg !8113
  br label %sw.epilog, !dbg !8114

sw.default:                                       ; preds = %entry
  %58 = load i8*, i8** %uid.addr, align 8, !dbg !8115
  %call65 = call i32 @memcmp(i8* %58, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @mxf_sony_mpeg4_extradata, i32 0, i32 0), i64 16) #9, !dbg !8117
  %tobool = icmp ne i32 %call65, 0, !dbg !8117
  br i1 %tobool, label %if.end80, label %if.then66, !dbg !8118

if.then66:                                        ; preds = %sw.default
  %59 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !8119
  %extradata = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %59, i32 0, i32 21, !dbg !8122
  %60 = load i8*, i8** %extradata, align 8, !dbg !8122
  %tobool67 = icmp ne i8* %60, null, !dbg !8119
  br i1 %tobool67, label %if.then68, label %if.end69, !dbg !8123

if.then68:                                        ; preds = %if.then66
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.49, i32 0, i32 0)), !dbg !8124
  br label %if.end69, !dbg !8124

if.end69:                                         ; preds = %if.then68, %if.then66
  %61 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !8125
  %extradata70 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %61, i32 0, i32 21, !dbg !8126
  %62 = load i8*, i8** %extradata70, align 8, !dbg !8126
  call void @av_free(i8* %62), !dbg !8127
  %63 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !8128
  %extradata_size = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %63, i32 0, i32 22, !dbg !8129
  store i32 0, i32* %extradata_size, align 8, !dbg !8130
  %64 = load i32, i32* %size.addr, align 4, !dbg !8131
  %conv = sext i32 %64 to i64, !dbg !8131
  %call71 = call noalias i8* @av_malloc(i64 %conv), !dbg !8132
  %65 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !8133
  %extradata72 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %65, i32 0, i32 21, !dbg !8134
  store i8* %call71, i8** %extradata72, align 8, !dbg !8135
  %66 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !8136
  %extradata73 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %66, i32 0, i32 21, !dbg !8138
  %67 = load i8*, i8** %extradata73, align 8, !dbg !8138
  %tobool74 = icmp ne i8* %67, null, !dbg !8136
  br i1 %tobool74, label %if.end76, label %if.then75, !dbg !8139

if.then75:                                        ; preds = %if.end69
  store i32 -12, i32* %retval, align 4, !dbg !8140
  br label %return, !dbg !8140

if.end76:                                         ; preds = %if.end69
  %68 = load i32, i32* %size.addr, align 4, !dbg !8141
  %69 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !8142
  %extradata_size77 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %69, i32 0, i32 22, !dbg !8143
  store i32 %68, i32* %extradata_size77, align 8, !dbg !8144
  %70 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8145
  %71 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !8146
  %extradata78 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %71, i32 0, i32 21, !dbg !8147
  %72 = load i8*, i8** %extradata78, align 8, !dbg !8147
  %73 = load i32, i32* %size.addr, align 4, !dbg !8148
  %call79 = call i32 @avio_read(%struct.AVIOContext* %70, i8* %72, i32 %73), !dbg !8149
  br label %if.end80, !dbg !8150

if.end80:                                         ; preds = %if.end76, %sw.default
  %74 = load i8*, i8** %uid.addr, align 8, !dbg !8151
  %call81 = call i32 @memcmp(i8* %74, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @mxf_jp2k_rsiz, i32 0, i32 0), i64 16) #9, !dbg !8153
  %tobool82 = icmp ne i32 %call81, 0, !dbg !8153
  br i1 %tobool82, label %if.end91, label %if.then83, !dbg !8154

if.then83:                                        ; preds = %if.end80
  call void @llvm.dbg.declare(metadata i32* %rsiz, metadata !8155, metadata !2511), !dbg !8157
  %75 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8158
  %call84 = call i32 @avio_rb16(%struct.AVIOContext* %75), !dbg !8159
  store i32 %call84, i32* %rsiz, align 4, !dbg !8157
  %76 = load i32, i32* %rsiz, align 4, !dbg !8160
  %cmp85 = icmp eq i32 %76, 3, !dbg !8162
  br i1 %cmp85, label %if.then89, label %lor.lhs.false, !dbg !8163

lor.lhs.false:                                    ; preds = %if.then83
  %77 = load i32, i32* %rsiz, align 4, !dbg !8164
  %cmp87 = icmp eq i32 %77, 4, !dbg !8165
  br i1 %cmp87, label %if.then89, label %if.end90, !dbg !8166

if.then89:                                        ; preds = %lor.lhs.false, %if.then83
  %78 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !8168
  %pix_fmt = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %78, i32 0, i32 23, !dbg !8169
  store i32 101, i32* %pix_fmt, align 4, !dbg !8170
  br label %if.end90, !dbg !8168

if.end90:                                         ; preds = %if.then89, %lor.lhs.false
  br label %if.end91, !dbg !8171

if.end91:                                         ; preds = %if.end90, %if.end80
  br label %sw.epilog, !dbg !8172

sw.epilog:                                        ; preds = %if.end91, %sw.bb64, %sw.bb62, %sw.bb60, %sw.bb56, %sw.bb50, %sw.bb48, %sw.bb46, %sw.bb44, %sw.bb42, %sw.bb38, %if.end37, %sw.bb17, %sw.bb15, %sw.bb13, %sw.bb10, %sw.bb8, %sw.bb5, %sw.bb3, %sw.bb1
  store i32 0, i32* %retval, align 4, !dbg !8173
  br label %return, !dbg !8173

return:                                           ; preds = %sw.epilog, %if.then75, %sw.bb
  %79 = load i32, i32* %retval, align 4, !dbg !8174
  ret i32 %79, !dbg !8174
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_read_track(i8* %arg, %struct.AVIOContext* %pb, i32 %tag, i32 %size, i8* %uid, i64 %klv_offset) #0 !dbg !8175 {
entry:
  %arg.addr = alloca i8*, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %tag.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %uid.addr = alloca i8*, align 8
  %klv_offset.addr = alloca i64, align 8
  %track = alloca %struct.MXFTrack*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8176, metadata !2511), !dbg !8177
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !8178, metadata !2511), !dbg !8179
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !8180, metadata !2511), !dbg !8181
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8182, metadata !2511), !dbg !8183
  store i8* %uid, i8** %uid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %uid.addr, metadata !8184, metadata !2511), !dbg !8185
  store i64 %klv_offset, i64* %klv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %klv_offset.addr, metadata !8186, metadata !2511), !dbg !8187
  call void @llvm.dbg.declare(metadata %struct.MXFTrack** %track, metadata !8188, metadata !2511), !dbg !8189
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !8190
  %1 = bitcast i8* %0 to %struct.MXFTrack*, !dbg !8190
  store %struct.MXFTrack* %1, %struct.MXFTrack** %track, align 8, !dbg !8189
  %2 = load i32, i32* %tag.addr, align 4, !dbg !8191
  switch i32 %2, label %sw.epilog [
    i32 18433, label %sw.bb
    i32 18436, label %sw.bb1
    i32 18434, label %sw.bb3
    i32 19201, label %sw.bb5
    i32 18435, label %sw.bb9
  ], !dbg !8192

sw.bb:                                            ; preds = %entry
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8193
  %call = call i32 @avio_rb32(%struct.AVIOContext* %3), !dbg !8195
  %4 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !8196
  %track_id = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %4, i32 0, i32 4, !dbg !8197
  store i32 %call, i32* %track_id, align 8, !dbg !8198
  br label %sw.epilog, !dbg !8199

sw.bb1:                                           ; preds = %entry
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8200
  %6 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !8201
  %track_number = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %6, i32 0, i32 6, !dbg !8202
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %track_number, i32 0, i32 0, !dbg !8201
  %call2 = call i32 @avio_read(%struct.AVIOContext* %5, i8* %arraydecay, i32 4), !dbg !8203
  br label %sw.epilog, !dbg !8204

sw.bb3:                                           ; preds = %entry
  %7 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8205
  %8 = load i32, i32* %size.addr, align 4, !dbg !8206
  %9 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !8207
  %name = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %9, i32 0, i32 5, !dbg !8208
  %call4 = call i32 @mxf_read_utf16be_string(%struct.AVIOContext* %7, i32 %8, i8** %name), !dbg !8209
  br label %sw.epilog, !dbg !8210

sw.bb5:                                           ; preds = %entry
  %10 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8211
  %call6 = call i32 @avio_rb32(%struct.AVIOContext* %10), !dbg !8212
  %11 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !8213
  %edit_rate = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %11, i32 0, i32 7, !dbg !8214
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %edit_rate, i32 0, i32 0, !dbg !8215
  store i32 %call6, i32* %num, align 4, !dbg !8216
  %12 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8217
  %call7 = call i32 @avio_rb32(%struct.AVIOContext* %12), !dbg !8218
  %13 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !8219
  %edit_rate8 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %13, i32 0, i32 7, !dbg !8220
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %edit_rate8, i32 0, i32 1, !dbg !8221
  store i32 %call7, i32* %den, align 4, !dbg !8222
  br label %sw.epilog, !dbg !8223

sw.bb9:                                           ; preds = %entry
  %14 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8224
  %15 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !8225
  %sequence_ref = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %15, i32 0, i32 3, !dbg !8226
  %arraydecay10 = getelementptr inbounds [16 x i8], [16 x i8]* %sequence_ref, i32 0, i32 0, !dbg !8225
  %call11 = call i32 @avio_read(%struct.AVIOContext* %14, i8* %arraydecay10, i32 16), !dbg !8227
  br label %sw.epilog, !dbg !8228

sw.epilog:                                        ; preds = %entry, %sw.bb9, %sw.bb5, %sw.bb3, %sw.bb1, %sw.bb
  ret i32 0, !dbg !8229
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_read_timecode_component(i8* %arg, %struct.AVIOContext* %pb, i32 %tag, i32 %size, i8* %uid, i64 %klv_offset) #0 !dbg !8230 {
entry:
  %arg.addr = alloca i8*, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %tag.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %uid.addr = alloca i8*, align 8
  %klv_offset.addr = alloca i64, align 8
  %mxf_timecode = alloca %struct.MXFTrack.1*, align 8
  %.compoundliteral = alloca %struct.AVRational, align 4
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8231, metadata !2511), !dbg !8232
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !8233, metadata !2511), !dbg !8234
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !8235, metadata !2511), !dbg !8236
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8237, metadata !2511), !dbg !8238
  store i8* %uid, i8** %uid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %uid.addr, metadata !8239, metadata !2511), !dbg !8240
  store i64 %klv_offset, i64* %klv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %klv_offset.addr, metadata !8241, metadata !2511), !dbg !8242
  call void @llvm.dbg.declare(metadata %struct.MXFTrack.1** %mxf_timecode, metadata !8243, metadata !2511), !dbg !8244
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !8245
  %1 = bitcast i8* %0 to %struct.MXFTrack.1*, !dbg !8245
  store %struct.MXFTrack.1* %1, %struct.MXFTrack.1** %mxf_timecode, align 8, !dbg !8244
  %2 = load i32, i32* %tag.addr, align 4, !dbg !8246
  switch i32 %2, label %sw.epilog [
    i32 5377, label %sw.bb
    i32 5378, label %sw.bb1
    i32 5379, label %sw.bb3
  ], !dbg !8247

sw.bb:                                            ; preds = %entry
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8248
  %call = call i64 @avio_rb64(%struct.AVIOContext* %3), !dbg !8250
  %conv = trunc i64 %call to i32, !dbg !8250
  %4 = load %struct.MXFTrack.1*, %struct.MXFTrack.1** %mxf_timecode, align 8, !dbg !8251
  %start_frame = getelementptr inbounds %struct.MXFTrack.1, %struct.MXFTrack.1* %4, i32 0, i32 3, !dbg !8252
  store i32 %conv, i32* %start_frame, align 4, !dbg !8253
  br label %sw.epilog, !dbg !8254

sw.bb1:                                           ; preds = %entry
  %5 = load %struct.MXFTrack.1*, %struct.MXFTrack.1** %mxf_timecode, align 8, !dbg !8255
  %rate = getelementptr inbounds %struct.MXFTrack.1, %struct.MXFTrack.1* %5, i32 0, i32 4, !dbg !8256
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 0, !dbg !8257
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8258
  %call2 = call i32 @avio_rb16(%struct.AVIOContext* %6), !dbg !8259
  store i32 %call2, i32* %num, align 4, !dbg !8257
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 1, !dbg !8257
  store i32 1, i32* %den, align 4, !dbg !8257
  %7 = bitcast %struct.AVRational* %rate to i8*, !dbg !8260
  %8 = bitcast %struct.AVRational* %.compoundliteral to i8*, !dbg !8260
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* %8, i64 8, i32 4, i1 false), !dbg !8261
  br label %sw.epilog, !dbg !8263

sw.bb3:                                           ; preds = %entry
  %9 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8264
  %call4 = call i32 @avio_r8(%struct.AVIOContext* %9), !dbg !8265
  %10 = load %struct.MXFTrack.1*, %struct.MXFTrack.1** %mxf_timecode, align 8, !dbg !8266
  %drop_frame = getelementptr inbounds %struct.MXFTrack.1, %struct.MXFTrack.1* %10, i32 0, i32 2, !dbg !8267
  store i32 %call4, i32* %drop_frame, align 4, !dbg !8268
  br label %sw.epilog, !dbg !8269

sw.epilog:                                        ; preds = %entry, %sw.bb3, %sw.bb1, %sw.bb
  ret i32 0, !dbg !8270
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_read_pulldown_component(i8* %arg, %struct.AVIOContext* %pb, i32 %tag, i32 %size, i8* %uid, i64 %klv_offset) #0 !dbg !8271 {
entry:
  %arg.addr = alloca i8*, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %tag.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %uid.addr = alloca i8*, align 8
  %klv_offset.addr = alloca i64, align 8
  %mxf_pulldown = alloca %struct.MXFPulldownComponent*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8272, metadata !2511), !dbg !8273
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !8274, metadata !2511), !dbg !8275
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !8276, metadata !2511), !dbg !8277
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8278, metadata !2511), !dbg !8279
  store i8* %uid, i8** %uid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %uid.addr, metadata !8280, metadata !2511), !dbg !8281
  store i64 %klv_offset, i64* %klv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %klv_offset.addr, metadata !8282, metadata !2511), !dbg !8283
  call void @llvm.dbg.declare(metadata %struct.MXFPulldownComponent** %mxf_pulldown, metadata !8284, metadata !2511), !dbg !8285
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !8286
  %1 = bitcast i8* %0 to %struct.MXFPulldownComponent*, !dbg !8286
  store %struct.MXFPulldownComponent* %1, %struct.MXFPulldownComponent** %mxf_pulldown, align 8, !dbg !8285
  %2 = load i32, i32* %tag.addr, align 4, !dbg !8287
  switch i32 %2, label %sw.epilog [
    i32 3329, label %sw.bb
  ], !dbg !8288

sw.bb:                                            ; preds = %entry
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8289
  %4 = load %struct.MXFPulldownComponent*, %struct.MXFPulldownComponent** %mxf_pulldown, align 8, !dbg !8291
  %input_segment_ref = getelementptr inbounds %struct.MXFPulldownComponent, %struct.MXFPulldownComponent* %4, i32 0, i32 2, !dbg !8292
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %input_segment_ref, i32 0, i32 0, !dbg !8291
  %call = call i32 @avio_read(%struct.AVIOContext* %3, i8* %arraydecay, i32 16), !dbg !8293
  br label %sw.epilog, !dbg !8294

sw.epilog:                                        ; preds = %entry, %sw.bb
  ret i32 0, !dbg !8295
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_read_cryptographic_context(i8* %arg, %struct.AVIOContext* %pb, i32 %tag, i32 %size, i8* %uid, i64 %klv_offset) #0 !dbg !8296 {
entry:
  %retval = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %tag.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %uid.addr = alloca i8*, align 8
  %klv_offset.addr = alloca i64, align 8
  %cryptocontext = alloca %struct.MXFCryptoContext*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8297, metadata !2511), !dbg !8298
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !8299, metadata !2511), !dbg !8300
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !8301, metadata !2511), !dbg !8302
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8303, metadata !2511), !dbg !8304
  store i8* %uid, i8** %uid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %uid.addr, metadata !8305, metadata !2511), !dbg !8306
  store i64 %klv_offset, i64* %klv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %klv_offset.addr, metadata !8307, metadata !2511), !dbg !8308
  call void @llvm.dbg.declare(metadata %struct.MXFCryptoContext** %cryptocontext, metadata !8309, metadata !2511), !dbg !8310
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !8311
  %1 = bitcast i8* %0 to %struct.MXFCryptoContext*, !dbg !8311
  store %struct.MXFCryptoContext* %1, %struct.MXFCryptoContext** %cryptocontext, align 8, !dbg !8310
  %2 = load i32, i32* %size.addr, align 4, !dbg !8312
  %cmp = icmp ne i32 %2, 16, !dbg !8314
  br i1 %cmp, label %if.then, label %if.end, !dbg !8315

if.then:                                          ; preds = %entry
  store i32 -1094995529, i32* %retval, align 4, !dbg !8316
  br label %return, !dbg !8316

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %uid.addr, align 8, !dbg !8317
  %call = call i32 @memcmp(i8* %3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @mxf_crypto_source_container_ul, i32 0, i32 0), i64 16) #9, !dbg !8319
  %tobool = icmp ne i32 %call, 0, !dbg !8319
  br i1 %tobool, label %if.end3, label %if.then1, !dbg !8320

if.then1:                                         ; preds = %if.end
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8321
  %5 = load %struct.MXFCryptoContext*, %struct.MXFCryptoContext** %cryptocontext, align 8, !dbg !8322
  %source_container_ul = getelementptr inbounds %struct.MXFCryptoContext, %struct.MXFCryptoContext* %5, i32 0, i32 2, !dbg !8323
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %source_container_ul, i32 0, i32 0, !dbg !8322
  %call2 = call i32 @avio_read(%struct.AVIOContext* %4, i8* %arraydecay, i32 16), !dbg !8324
  br label %if.end3, !dbg !8324

if.end3:                                          ; preds = %if.then1, %if.end
  store i32 0, i32* %retval, align 4, !dbg !8325
  br label %return, !dbg !8325

return:                                           ; preds = %if.end3, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !8326
  ret i32 %6, !dbg !8326
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_read_index_table_segment(i8* %arg, %struct.AVIOContext* %pb, i32 %tag, i32 %size, i8* %uid, i64 %klv_offset) #0 !dbg !8327 {
entry:
  %retval = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %tag.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %uid.addr = alloca i8*, align 8
  %klv_offset.addr = alloca i64, align 8
  %segment = alloca %struct.MXFIndexTableSegment*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8328, metadata !2511), !dbg !8329
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !8330, metadata !2511), !dbg !8331
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !8332, metadata !2511), !dbg !8333
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8334, metadata !2511), !dbg !8335
  store i8* %uid, i8** %uid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %uid.addr, metadata !8336, metadata !2511), !dbg !8337
  store i64 %klv_offset, i64* %klv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %klv_offset.addr, metadata !8338, metadata !2511), !dbg !8339
  call void @llvm.dbg.declare(metadata %struct.MXFIndexTableSegment** %segment, metadata !8340, metadata !2511), !dbg !8341
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !8342
  %1 = bitcast i8* %0 to %struct.MXFIndexTableSegment*, !dbg !8342
  store %struct.MXFIndexTableSegment* %1, %struct.MXFIndexTableSegment** %segment, align 8, !dbg !8341
  %2 = load i32, i32* %tag.addr, align 4, !dbg !8343
  switch i32 %2, label %sw.epilog [
    i32 16133, label %sw.bb
    i32 16134, label %sw.bb2
    i32 16135, label %sw.bb5
    i32 16138, label %sw.bb8
    i32 16139, label %sw.bb10
    i32 16140, label %sw.bb18
    i32 16141, label %sw.bb21
  ], !dbg !8344

sw.bb:                                            ; preds = %entry
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8345
  %call = call i32 @avio_rb32(%struct.AVIOContext* %3), !dbg !8347
  %4 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment, align 8, !dbg !8348
  %edit_unit_byte_count = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %4, i32 0, i32 2, !dbg !8349
  store i32 %call, i32* %edit_unit_byte_count, align 4, !dbg !8350
  %5 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment, align 8, !dbg !8351
  %edit_unit_byte_count1 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %5, i32 0, i32 2, !dbg !8352
  %6 = load i32, i32* %edit_unit_byte_count1, align 4, !dbg !8352
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 56, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.51, i32 0, i32 0), i32 %6), !dbg !8353
  br label %sw.epilog, !dbg !8354

sw.bb2:                                           ; preds = %entry
  %7 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8355
  %call3 = call i32 @avio_rb32(%struct.AVIOContext* %7), !dbg !8356
  %8 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment, align 8, !dbg !8357
  %index_sid = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %8, i32 0, i32 3, !dbg !8358
  store i32 %call3, i32* %index_sid, align 8, !dbg !8359
  %9 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment, align 8, !dbg !8360
  %index_sid4 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %9, i32 0, i32 3, !dbg !8361
  %10 = load i32, i32* %index_sid4, align 8, !dbg !8361
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 56, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.52, i32 0, i32 0), i32 %10), !dbg !8362
  br label %sw.epilog, !dbg !8363

sw.bb5:                                           ; preds = %entry
  %11 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8364
  %call6 = call i32 @avio_rb32(%struct.AVIOContext* %11), !dbg !8365
  %12 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment, align 8, !dbg !8366
  %body_sid = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %12, i32 0, i32 4, !dbg !8367
  store i32 %call6, i32* %body_sid, align 4, !dbg !8368
  %13 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment, align 8, !dbg !8369
  %body_sid7 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %13, i32 0, i32 4, !dbg !8370
  %14 = load i32, i32* %body_sid7, align 4, !dbg !8370
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 56, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.53, i32 0, i32 0), i32 %14), !dbg !8371
  br label %sw.epilog, !dbg !8372

sw.bb8:                                           ; preds = %entry
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 56, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.54, i32 0, i32 0)), !dbg !8373
  %15 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8374
  %16 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment, align 8, !dbg !8375
  %call9 = call i32 @mxf_read_index_entry_array(%struct.AVIOContext* %15, %struct.MXFIndexTableSegment* %16), !dbg !8376
  store i32 %call9, i32* %retval, align 4, !dbg !8377
  br label %return, !dbg !8377

sw.bb10:                                          ; preds = %entry
  %17 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8378
  %call11 = call i32 @avio_rb32(%struct.AVIOContext* %17), !dbg !8379
  %18 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment, align 8, !dbg !8380
  %index_edit_rate = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %18, i32 0, i32 5, !dbg !8381
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %index_edit_rate, i32 0, i32 0, !dbg !8382
  store i32 %call11, i32* %num, align 8, !dbg !8383
  %19 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8384
  %call12 = call i32 @avio_rb32(%struct.AVIOContext* %19), !dbg !8385
  %20 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment, align 8, !dbg !8386
  %index_edit_rate13 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %20, i32 0, i32 5, !dbg !8387
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %index_edit_rate13, i32 0, i32 1, !dbg !8388
  store i32 %call12, i32* %den, align 4, !dbg !8389
  %21 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment, align 8, !dbg !8390
  %index_edit_rate14 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %21, i32 0, i32 5, !dbg !8391
  %num15 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %index_edit_rate14, i32 0, i32 0, !dbg !8392
  %22 = load i32, i32* %num15, align 8, !dbg !8392
  %23 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment, align 8, !dbg !8393
  %index_edit_rate16 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %23, i32 0, i32 5, !dbg !8394
  %den17 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %index_edit_rate16, i32 0, i32 1, !dbg !8395
  %24 = load i32, i32* %den17, align 4, !dbg !8395
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 56, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.55, i32 0, i32 0), i32 %22, i32 %24), !dbg !8396
  br label %sw.epilog, !dbg !8397

sw.bb18:                                          ; preds = %entry
  %25 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8398
  %call19 = call i64 @avio_rb64(%struct.AVIOContext* %25), !dbg !8399
  %26 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment, align 8, !dbg !8400
  %index_start_position = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %26, i32 0, i32 6, !dbg !8401
  store i64 %call19, i64* %index_start_position, align 8, !dbg !8402
  %27 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment, align 8, !dbg !8403
  %index_start_position20 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %27, i32 0, i32 6, !dbg !8404
  %28 = load i64, i64* %index_start_position20, align 8, !dbg !8404
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 56, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.56, i32 0, i32 0), i64 %28), !dbg !8405
  br label %sw.epilog, !dbg !8406

sw.bb21:                                          ; preds = %entry
  %29 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8407
  %call22 = call i64 @avio_rb64(%struct.AVIOContext* %29), !dbg !8408
  %30 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment, align 8, !dbg !8409
  %index_duration = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %30, i32 0, i32 7, !dbg !8410
  store i64 %call22, i64* %index_duration, align 8, !dbg !8411
  %31 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment, align 8, !dbg !8412
  %index_duration23 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %31, i32 0, i32 7, !dbg !8413
  %32 = load i64, i64* %index_duration23, align 8, !dbg !8413
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 56, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.57, i32 0, i32 0), i64 %32), !dbg !8414
  br label %sw.epilog, !dbg !8415

sw.epilog:                                        ; preds = %entry, %sw.bb21, %sw.bb18, %sw.bb10, %sw.bb5, %sw.bb2, %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !8416
  br label %return, !dbg !8416

return:                                           ; preds = %sw.epilog, %sw.bb8
  %33 = load i32, i32* %retval, align 4, !dbg !8417
  ret i32 %33, !dbg !8417
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_read_essence_container_data(i8* %arg, %struct.AVIOContext* %pb, i32 %tag, i32 %size, i8* %uid, i64 %klv_offset) #0 !dbg !8418 {
entry:
  %arg.addr = alloca i8*, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %tag.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %uid.addr = alloca i8*, align 8
  %klv_offset.addr = alloca i64, align 8
  %essence_data = alloca %struct.MXFEssenceContainerData*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8419, metadata !2511), !dbg !8420
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !8421, metadata !2511), !dbg !8422
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !8423, metadata !2511), !dbg !8424
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8425, metadata !2511), !dbg !8426
  store i8* %uid, i8** %uid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %uid.addr, metadata !8427, metadata !2511), !dbg !8428
  store i64 %klv_offset, i64* %klv_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %klv_offset.addr, metadata !8429, metadata !2511), !dbg !8430
  call void @llvm.dbg.declare(metadata %struct.MXFEssenceContainerData** %essence_data, metadata !8431, metadata !2511), !dbg !8432
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !8433
  %1 = bitcast i8* %0 to %struct.MXFEssenceContainerData*, !dbg !8433
  store %struct.MXFEssenceContainerData* %1, %struct.MXFEssenceContainerData** %essence_data, align 8, !dbg !8432
  %2 = load i32, i32* %tag.addr, align 4, !dbg !8434
  switch i32 %2, label %sw.epilog [
    i32 9985, label %sw.bb
    i32 16134, label %sw.bb3
    i32 16135, label %sw.bb5
  ], !dbg !8435

sw.bb:                                            ; preds = %entry
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8436
  %4 = load %struct.MXFEssenceContainerData*, %struct.MXFEssenceContainerData** %essence_data, align 8, !dbg !8438
  %package_ul = getelementptr inbounds %struct.MXFEssenceContainerData, %struct.MXFEssenceContainerData* %4, i32 0, i32 3, !dbg !8439
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %package_ul, i32 0, i32 0, !dbg !8438
  %call = call i32 @avio_read(%struct.AVIOContext* %3, i8* %arraydecay, i32 16), !dbg !8440
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8441
  %6 = load %struct.MXFEssenceContainerData*, %struct.MXFEssenceContainerData** %essence_data, align 8, !dbg !8442
  %package_uid = getelementptr inbounds %struct.MXFEssenceContainerData, %struct.MXFEssenceContainerData* %6, i32 0, i32 2, !dbg !8443
  %arraydecay1 = getelementptr inbounds [16 x i8], [16 x i8]* %package_uid, i32 0, i32 0, !dbg !8442
  %call2 = call i32 @avio_read(%struct.AVIOContext* %5, i8* %arraydecay1, i32 16), !dbg !8444
  br label %sw.epilog, !dbg !8445

sw.bb3:                                           ; preds = %entry
  %7 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8446
  %call4 = call i32 @avio_rb32(%struct.AVIOContext* %7), !dbg !8447
  %8 = load %struct.MXFEssenceContainerData*, %struct.MXFEssenceContainerData** %essence_data, align 8, !dbg !8448
  %index_sid = getelementptr inbounds %struct.MXFEssenceContainerData, %struct.MXFEssenceContainerData* %8, i32 0, i32 4, !dbg !8449
  store i32 %call4, i32* %index_sid, align 4, !dbg !8450
  br label %sw.epilog, !dbg !8451

sw.bb5:                                           ; preds = %entry
  %9 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8452
  %call6 = call i32 @avio_rb32(%struct.AVIOContext* %9), !dbg !8453
  %10 = load %struct.MXFEssenceContainerData*, %struct.MXFEssenceContainerData** %essence_data, align 8, !dbg !8454
  %body_sid = getelementptr inbounds %struct.MXFEssenceContainerData, %struct.MXFEssenceContainerData* %10, i32 0, i32 5, !dbg !8455
  store i32 %call6, i32* %body_sid, align 4, !dbg !8456
  br label %sw.epilog, !dbg !8457

sw.epilog:                                        ; preds = %entry, %sw.bb5, %sw.bb3, %sw.bb
  ret i32 0, !dbg !8458
}

declare void @avpriv_request_sample(i8*, i8*, ...) #1

declare void @av_free(i8*) #1

declare noalias i8* @av_calloc(i64, i64) #1

; Function Attrs: nounwind uwtable
define internal i32 @mxf_read_utf16be_string(%struct.AVIOContext* %pb, i32 %size, i8** %str) #0 !dbg !8459 {
entry:
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %size.addr = alloca i32, align 4
  %str.addr = alloca i8**, align 8
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !8463, metadata !2511), !dbg !8464
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8465, metadata !2511), !dbg !8466
  store i8** %str, i8*** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %str.addr, metadata !8467, metadata !2511), !dbg !8468
  %0 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8469
  %1 = load i32, i32* %size.addr, align 4, !dbg !8470
  %2 = load i8**, i8*** %str.addr, align 8, !dbg !8471
  %call = call i32 @mxf_read_utf16_string(%struct.AVIOContext* %0, i32 %1, i8** %2, i32 1), !dbg !8472
  ret i32 %call, !dbg !8473
}

declare i32 @av_dict_set(%struct.AVDictionary**, i8*, i8*, i32) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @mxf_read_utf16_string(%struct.AVIOContext* %pb, i32 %size, i8** %str, i32 %be) #5 !dbg !8474 {
entry:
  %retval = alloca i32, align 4
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %size.addr = alloca i32, align 4
  %str.addr = alloca i8**, align 8
  %be.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %buf_size = alloca i64, align 8
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !8477, metadata !2511), !dbg !8478
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8479, metadata !2511), !dbg !8480
  store i8** %str, i8*** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %str.addr, metadata !8481, metadata !2511), !dbg !8482
  store i32 %be, i32* %be.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %be.addr, metadata !8483, metadata !2511), !dbg !8484
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8485, metadata !2511), !dbg !8486
  call void @llvm.dbg.declare(metadata i64* %buf_size, metadata !8487, metadata !2511), !dbg !8488
  %0 = load i32, i32* %size.addr, align 4, !dbg !8489
  %cmp = icmp slt i32 %0, 0, !dbg !8491
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8492

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %size.addr, align 4, !dbg !8493
  %cmp1 = icmp sgt i32 %1, 1073741823, !dbg !8495
  br i1 %cmp1, label %if.then, label %if.end, !dbg !8496

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !8497
  br label %return, !dbg !8497

if.end:                                           ; preds = %lor.lhs.false
  %2 = load i32, i32* %size.addr, align 4, !dbg !8498
  %3 = load i32, i32* %size.addr, align 4, !dbg !8499
  %div = sdiv i32 %3, 2, !dbg !8500
  %add = add nsw i32 %2, %div, !dbg !8501
  %add2 = add nsw i32 %add, 1, !dbg !8502
  %conv = sext i32 %add2 to i64, !dbg !8498
  store i64 %conv, i64* %buf_size, align 8, !dbg !8503
  %4 = load i64, i64* %buf_size, align 8, !dbg !8504
  %call = call noalias i8* @av_malloc(i64 %4), !dbg !8505
  %5 = load i8**, i8*** %str.addr, align 8, !dbg !8506
  store i8* %call, i8** %5, align 8, !dbg !8507
  %6 = load i8**, i8*** %str.addr, align 8, !dbg !8508
  %7 = load i8*, i8** %6, align 8, !dbg !8510
  %tobool = icmp ne i8* %7, null, !dbg !8510
  br i1 %tobool, label %if.end4, label %if.then3, !dbg !8511

if.then3:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !8512
  br label %return, !dbg !8512

if.end4:                                          ; preds = %if.end
  %8 = load i32, i32* %be.addr, align 4, !dbg !8513
  %tobool5 = icmp ne i32 %8, 0, !dbg !8513
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !8515

if.then6:                                         ; preds = %if.end4
  %9 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8516
  %10 = load i32, i32* %size.addr, align 4, !dbg !8517
  %11 = load i8**, i8*** %str.addr, align 8, !dbg !8518
  %12 = load i8*, i8** %11, align 8, !dbg !8519
  %13 = load i64, i64* %buf_size, align 8, !dbg !8520
  %conv7 = trunc i64 %13 to i32, !dbg !8520
  %call8 = call i32 @avio_get_str16be(%struct.AVIOContext* %9, i32 %10, i8* %12, i32 %conv7), !dbg !8521
  store i32 %call8, i32* %ret, align 4, !dbg !8522
  br label %if.end11, !dbg !8523

if.else:                                          ; preds = %if.end4
  %14 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8524
  %15 = load i32, i32* %size.addr, align 4, !dbg !8525
  %16 = load i8**, i8*** %str.addr, align 8, !dbg !8526
  %17 = load i8*, i8** %16, align 8, !dbg !8527
  %18 = load i64, i64* %buf_size, align 8, !dbg !8528
  %conv9 = trunc i64 %18 to i32, !dbg !8528
  %call10 = call i32 @avio_get_str16le(%struct.AVIOContext* %14, i32 %15, i8* %17, i32 %conv9), !dbg !8529
  store i32 %call10, i32* %ret, align 4, !dbg !8530
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then6
  %19 = load i32, i32* %ret, align 4, !dbg !8531
  %cmp12 = icmp slt i32 %19, 0, !dbg !8533
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !8534

if.then14:                                        ; preds = %if.end11
  %20 = load i8**, i8*** %str.addr, align 8, !dbg !8535
  %21 = bitcast i8** %20 to i8*, !dbg !8535
  call void @av_freep(i8* %21), !dbg !8537
  %22 = load i32, i32* %ret, align 4, !dbg !8538
  store i32 %22, i32* %retval, align 4, !dbg !8539
  br label %return, !dbg !8539

if.end15:                                         ; preds = %if.end11
  %23 = load i32, i32* %ret, align 4, !dbg !8540
  store i32 %23, i32* %retval, align 4, !dbg !8541
  br label %return, !dbg !8541

return:                                           ; preds = %if.end15, %if.then14, %if.then3, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !8542
  ret i32 %24, !dbg !8542
}

declare noalias i8* @av_malloc(i64) #1

declare i32 @avio_get_str16be(%struct.AVIOContext*, i32, i8*, i32) #1

declare i32 @avio_get_str16le(%struct.AVIOContext*, i32, i8*, i32) #1

declare void @av_freep(i8*) #1

; Function Attrs: nounwind uwtable
define internal i32 @mxf_uid_to_str(i8* %uid, i8** %str) #0 !dbg !8543 {
entry:
  %retval = alloca i32, align 4
  %uid.addr = alloca i8*, align 8
  %str.addr = alloca i8**, align 8
  %i = alloca i32, align 4
  %p = alloca i8*, align 8
  store i8* %uid, i8** %uid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %uid.addr, metadata !8546, metadata !2511), !dbg !8547
  store i8** %str, i8*** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %str.addr, metadata !8548, metadata !2511), !dbg !8549
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8550, metadata !2511), !dbg !8551
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8552, metadata !2511), !dbg !8553
  %call = call noalias i8* @av_mallocz(i64 37), !dbg !8554
  %0 = load i8**, i8*** %str.addr, align 8, !dbg !8555
  store i8* %call, i8** %0, align 8, !dbg !8556
  store i8* %call, i8** %p, align 8, !dbg !8557
  %1 = load i8*, i8** %p, align 8, !dbg !8558
  %tobool = icmp ne i8* %1, null, !dbg !8558
  br i1 %tobool, label %if.end, label %if.then, !dbg !8560

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !8561
  br label %return, !dbg !8561

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !8562
  br label %for.cond, !dbg !8564

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %i, align 4, !dbg !8565
  %conv = sext i32 %2 to i64, !dbg !8565
  %cmp = icmp ult i64 %conv, 16, !dbg !8568
  br i1 %cmp, label %for.body, label %for.end, !dbg !8569

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %p, align 8, !dbg !8570
  %4 = load i32, i32* %i, align 4, !dbg !8572
  %idxprom = sext i32 %4 to i64, !dbg !8573
  %5 = load i8*, i8** %uid.addr, align 8, !dbg !8573
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %idxprom, !dbg !8573
  %6 = load i8, i8* %arrayidx, align 1, !dbg !8573
  %conv2 = zext i8 %6 to i32, !dbg !8573
  %call3 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %3, i64 3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i32 0, i32 0), i32 %conv2) #8, !dbg !8574
  %7 = load i8*, i8** %p, align 8, !dbg !8575
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 2, !dbg !8575
  store i8* %add.ptr, i8** %p, align 8, !dbg !8575
  %8 = load i32, i32* %i, align 4, !dbg !8576
  %cmp4 = icmp eq i32 %8, 3, !dbg !8578
  br i1 %cmp4, label %if.then14, label %lor.lhs.false, !dbg !8579

lor.lhs.false:                                    ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !8580
  %cmp6 = icmp eq i32 %9, 5, !dbg !8582
  br i1 %cmp6, label %if.then14, label %lor.lhs.false8, !dbg !8583

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %10 = load i32, i32* %i, align 4, !dbg !8584
  %cmp9 = icmp eq i32 %10, 7, !dbg !8586
  br i1 %cmp9, label %if.then14, label %lor.lhs.false11, !dbg !8587

lor.lhs.false11:                                  ; preds = %lor.lhs.false8
  %11 = load i32, i32* %i, align 4, !dbg !8588
  %cmp12 = icmp eq i32 %11, 9, !dbg !8590
  br i1 %cmp12, label %if.then14, label %if.end16, !dbg !8591

if.then14:                                        ; preds = %lor.lhs.false11, %lor.lhs.false8, %lor.lhs.false, %for.body
  %12 = load i8*, i8** %p, align 8, !dbg !8592
  %call15 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %12, i64 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.46, i32 0, i32 0)) #8, !dbg !8594
  %13 = load i8*, i8** %p, align 8, !dbg !8595
  %incdec.ptr = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8595
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !8595
  br label %if.end16, !dbg !8596

if.end16:                                         ; preds = %if.then14, %lor.lhs.false11
  br label %for.inc, !dbg !8597

for.inc:                                          ; preds = %if.end16
  %14 = load i32, i32* %i, align 4, !dbg !8598
  %inc = add nsw i32 %14, 1, !dbg !8598
  store i32 %inc, i32* %i, align 4, !dbg !8598
  br label %for.cond, !dbg !8600, !llvm.loop !8601

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !8603
  br label %return, !dbg !8603

return:                                           ; preds = %for.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !8604
  ret i32 %15, !dbg !8604
}

declare i32 @avpriv_dict_set_timestamp(%struct.AVDictionary**, i8*, i64) #1

; Function Attrs: nounwind uwtable
define internal i64 @mxf_timestamp_to_int64(i64 %timestamp) #0 !dbg !8605 {
entry:
  %retval.i81 = alloca i32, align 4
  %a.addr.i82 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i82, metadata !8608, metadata !2511), !dbg !8613
  %amin.addr.i83 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i83, metadata !8615, metadata !2511), !dbg !8616
  %amax.addr.i84 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i84, metadata !8617, metadata !2511), !dbg !8618
  %retval.i70 = alloca i32, align 4
  %a.addr.i71 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i71, metadata !8608, metadata !2511), !dbg !8619
  %amin.addr.i72 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i72, metadata !8615, metadata !2511), !dbg !8621
  %amax.addr.i73 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i73, metadata !8617, metadata !2511), !dbg !8622
  %retval.i59 = alloca i32, align 4
  %a.addr.i60 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i60, metadata !8608, metadata !2511), !dbg !8623
  %amin.addr.i61 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i61, metadata !8615, metadata !2511), !dbg !8625
  %amax.addr.i62 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i62, metadata !8617, metadata !2511), !dbg !8626
  %retval.i48 = alloca i32, align 4
  %a.addr.i49 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i49, metadata !8608, metadata !2511), !dbg !8627
  %amin.addr.i50 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i50, metadata !8615, metadata !2511), !dbg !8629
  %amax.addr.i51 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i51, metadata !8617, metadata !2511), !dbg !8630
  %retval.i37 = alloca i32, align 4
  %a.addr.i38 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i38, metadata !8608, metadata !2511), !dbg !8631
  %amin.addr.i39 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i39, metadata !8615, metadata !2511), !dbg !8633
  %amax.addr.i40 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i40, metadata !8617, metadata !2511), !dbg !8634
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !8608, metadata !2511), !dbg !8635
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !8615, metadata !2511), !dbg !8637
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !8617, metadata !2511), !dbg !8638
  %timestamp.addr = alloca i64, align 8
  %time = alloca %struct.tm, align 8
  %msecs = alloca i32, align 4
  store i64 %timestamp, i64* %timestamp.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %timestamp.addr, metadata !8639, metadata !2511), !dbg !8640
  call void @llvm.dbg.declare(metadata %struct.tm* %time, metadata !8641, metadata !2511), !dbg !8656
  %0 = bitcast %struct.tm* %time to i8*, !dbg !8656
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 56, i32 8, i1 false), !dbg !8656
  call void @llvm.dbg.declare(metadata i32* %msecs, metadata !8657, metadata !2511), !dbg !8658
  %1 = load i64, i64* %timestamp.addr, align 8, !dbg !8659
  %shr = lshr i64 %1, 48, !dbg !8660
  %sub = sub i64 %shr, 1900, !dbg !8661
  %conv = trunc i64 %sub to i32, !dbg !8662
  %tm_year = getelementptr inbounds %struct.tm, %struct.tm* %time, i32 0, i32 5, !dbg !8663
  store i32 %conv, i32* %tm_year, align 4, !dbg !8664
  %2 = load i64, i64* %timestamp.addr, align 8, !dbg !8665
  %shr1 = lshr i64 %2, 40, !dbg !8666
  %and = and i64 %shr1, 255, !dbg !8667
  %sub2 = sub i64 %and, 1, !dbg !8668
  %conv3 = trunc i64 %sub2 to i32, !dbg !8669
  %tm_mon = getelementptr inbounds %struct.tm, %struct.tm* %time, i32 0, i32 4, !dbg !8670
  store i32 %conv3, i32* %tm_mon, align 8, !dbg !8671
  %3 = load i64, i64* %timestamp.addr, align 8, !dbg !8672
  %shr4 = lshr i64 %3, 32, !dbg !8673
  %and5 = and i64 %shr4, 255, !dbg !8674
  %conv6 = trunc i64 %and5 to i32, !dbg !8675
  %tm_mday = getelementptr inbounds %struct.tm, %struct.tm* %time, i32 0, i32 3, !dbg !8676
  store i32 %conv6, i32* %tm_mday, align 4, !dbg !8677
  %4 = load i64, i64* %timestamp.addr, align 8, !dbg !8678
  %shr7 = lshr i64 %4, 24, !dbg !8679
  %and8 = and i64 %shr7, 255, !dbg !8680
  %conv9 = trunc i64 %and8 to i32, !dbg !8681
  %tm_hour = getelementptr inbounds %struct.tm, %struct.tm* %time, i32 0, i32 2, !dbg !8682
  store i32 %conv9, i32* %tm_hour, align 8, !dbg !8683
  %5 = load i64, i64* %timestamp.addr, align 8, !dbg !8684
  %shr10 = lshr i64 %5, 16, !dbg !8685
  %and11 = and i64 %shr10, 255, !dbg !8686
  %conv12 = trunc i64 %and11 to i32, !dbg !8687
  %tm_min = getelementptr inbounds %struct.tm, %struct.tm* %time, i32 0, i32 1, !dbg !8688
  store i32 %conv12, i32* %tm_min, align 4, !dbg !8689
  %6 = load i64, i64* %timestamp.addr, align 8, !dbg !8690
  %shr13 = lshr i64 %6, 8, !dbg !8691
  %and14 = and i64 %shr13, 255, !dbg !8692
  %conv15 = trunc i64 %and14 to i32, !dbg !8693
  %tm_sec = getelementptr inbounds %struct.tm, %struct.tm* %time, i32 0, i32 0, !dbg !8694
  store i32 %conv15, i32* %tm_sec, align 8, !dbg !8695
  %7 = load i64, i64* %timestamp.addr, align 8, !dbg !8696
  %and16 = and i64 %7, 255, !dbg !8697
  %mul = mul i64 %and16, 4, !dbg !8698
  %conv17 = trunc i64 %mul to i32, !dbg !8699
  store i32 %conv17, i32* %msecs, align 4, !dbg !8700
  %tm_mon18 = getelementptr inbounds %struct.tm, %struct.tm* %time, i32 0, i32 4, !dbg !8701
  %8 = load i32, i32* %tm_mon18, align 8, !dbg !8701
  store i32 %8, i32* %a.addr.i, align 4, !dbg !8702
  store i32 0, i32* %amin.addr.i, align 4, !dbg !8702
  store i32 11, i32* %amax.addr.i, align 4, !dbg !8702
  %9 = load i32, i32* %a.addr.i, align 4, !dbg !8703
  %10 = load i32, i32* %amin.addr.i, align 4, !dbg !8705
  %cmp.i = icmp slt i32 %9, %10, !dbg !8706
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !8707

if.then.i:                                        ; preds = %entry
  %11 = load i32, i32* %amin.addr.i, align 4, !dbg !8708
  store i32 %11, i32* %retval.i, align 4, !dbg !8710
  br label %av_clip_c.exit, !dbg !8710

if.else.i:                                        ; preds = %entry
  %12 = load i32, i32* %a.addr.i, align 4, !dbg !8711
  %13 = load i32, i32* %amax.addr.i, align 4, !dbg !8713
  %cmp1.i = icmp sgt i32 %12, %13, !dbg !8714
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !8715

if.then2.i:                                       ; preds = %if.else.i
  %14 = load i32, i32* %amax.addr.i, align 4, !dbg !8716
  store i32 %14, i32* %retval.i, align 4, !dbg !8718
  br label %av_clip_c.exit, !dbg !8718

if.else3.i:                                       ; preds = %if.else.i
  %15 = load i32, i32* %a.addr.i, align 4, !dbg !8719
  store i32 %15, i32* %retval.i, align 4, !dbg !8720
  br label %av_clip_c.exit, !dbg !8720

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %16 = load i32, i32* %retval.i, align 4, !dbg !8721
  %tm_mon19 = getelementptr inbounds %struct.tm, %struct.tm* %time, i32 0, i32 4, !dbg !8722
  store i32 %16, i32* %tm_mon19, align 8, !dbg !8723
  %tm_mday20 = getelementptr inbounds %struct.tm, %struct.tm* %time, i32 0, i32 3, !dbg !8724
  %17 = load i32, i32* %tm_mday20, align 4, !dbg !8724
  store i32 %17, i32* %a.addr.i82, align 4, !dbg !8725
  store i32 1, i32* %amin.addr.i83, align 4, !dbg !8725
  store i32 31, i32* %amax.addr.i84, align 4, !dbg !8725
  %18 = load i32, i32* %a.addr.i82, align 4, !dbg !8726
  %19 = load i32, i32* %amin.addr.i83, align 4, !dbg !8727
  %cmp.i85 = icmp slt i32 %18, %19, !dbg !8728
  br i1 %cmp.i85, label %if.then.i86, label %if.else.i88, !dbg !8729

if.then.i86:                                      ; preds = %av_clip_c.exit
  %20 = load i32, i32* %amin.addr.i83, align 4, !dbg !8730
  store i32 %20, i32* %retval.i81, align 4, !dbg !8731
  br label %av_clip_c.exit91, !dbg !8731

if.else.i88:                                      ; preds = %av_clip_c.exit
  %21 = load i32, i32* %a.addr.i82, align 4, !dbg !8732
  %22 = load i32, i32* %amax.addr.i84, align 4, !dbg !8733
  %cmp1.i87 = icmp sgt i32 %21, %22, !dbg !8734
  br i1 %cmp1.i87, label %if.then2.i89, label %if.else3.i90, !dbg !8735

if.then2.i89:                                     ; preds = %if.else.i88
  %23 = load i32, i32* %amax.addr.i84, align 4, !dbg !8736
  store i32 %23, i32* %retval.i81, align 4, !dbg !8737
  br label %av_clip_c.exit91, !dbg !8737

if.else3.i90:                                     ; preds = %if.else.i88
  %24 = load i32, i32* %a.addr.i82, align 4, !dbg !8738
  store i32 %24, i32* %retval.i81, align 4, !dbg !8739
  br label %av_clip_c.exit91, !dbg !8739

av_clip_c.exit91:                                 ; preds = %if.then.i86, %if.then2.i89, %if.else3.i90
  %25 = load i32, i32* %retval.i81, align 4, !dbg !8740
  %tm_mday22 = getelementptr inbounds %struct.tm, %struct.tm* %time, i32 0, i32 3, !dbg !8741
  store i32 %25, i32* %tm_mday22, align 4, !dbg !8742
  %tm_hour23 = getelementptr inbounds %struct.tm, %struct.tm* %time, i32 0, i32 2, !dbg !8743
  %26 = load i32, i32* %tm_hour23, align 8, !dbg !8743
  store i32 %26, i32* %a.addr.i71, align 4, !dbg !8744
  store i32 0, i32* %amin.addr.i72, align 4, !dbg !8744
  store i32 23, i32* %amax.addr.i73, align 4, !dbg !8744
  %27 = load i32, i32* %a.addr.i71, align 4, !dbg !8745
  %28 = load i32, i32* %amin.addr.i72, align 4, !dbg !8746
  %cmp.i74 = icmp slt i32 %27, %28, !dbg !8747
  br i1 %cmp.i74, label %if.then.i75, label %if.else.i77, !dbg !8748

if.then.i75:                                      ; preds = %av_clip_c.exit91
  %29 = load i32, i32* %amin.addr.i72, align 4, !dbg !8749
  store i32 %29, i32* %retval.i70, align 4, !dbg !8750
  br label %av_clip_c.exit80, !dbg !8750

if.else.i77:                                      ; preds = %av_clip_c.exit91
  %30 = load i32, i32* %a.addr.i71, align 4, !dbg !8751
  %31 = load i32, i32* %amax.addr.i73, align 4, !dbg !8752
  %cmp1.i76 = icmp sgt i32 %30, %31, !dbg !8753
  br i1 %cmp1.i76, label %if.then2.i78, label %if.else3.i79, !dbg !8754

if.then2.i78:                                     ; preds = %if.else.i77
  %32 = load i32, i32* %amax.addr.i73, align 4, !dbg !8755
  store i32 %32, i32* %retval.i70, align 4, !dbg !8756
  br label %av_clip_c.exit80, !dbg !8756

if.else3.i79:                                     ; preds = %if.else.i77
  %33 = load i32, i32* %a.addr.i71, align 4, !dbg !8757
  store i32 %33, i32* %retval.i70, align 4, !dbg !8758
  br label %av_clip_c.exit80, !dbg !8758

av_clip_c.exit80:                                 ; preds = %if.then.i75, %if.then2.i78, %if.else3.i79
  %34 = load i32, i32* %retval.i70, align 4, !dbg !8759
  %tm_hour25 = getelementptr inbounds %struct.tm, %struct.tm* %time, i32 0, i32 2, !dbg !8760
  store i32 %34, i32* %tm_hour25, align 8, !dbg !8761
  %tm_min26 = getelementptr inbounds %struct.tm, %struct.tm* %time, i32 0, i32 1, !dbg !8762
  %35 = load i32, i32* %tm_min26, align 4, !dbg !8762
  store i32 %35, i32* %a.addr.i60, align 4, !dbg !8763
  store i32 0, i32* %amin.addr.i61, align 4, !dbg !8763
  store i32 59, i32* %amax.addr.i62, align 4, !dbg !8763
  %36 = load i32, i32* %a.addr.i60, align 4, !dbg !8764
  %37 = load i32, i32* %amin.addr.i61, align 4, !dbg !8765
  %cmp.i63 = icmp slt i32 %36, %37, !dbg !8766
  br i1 %cmp.i63, label %if.then.i64, label %if.else.i66, !dbg !8767

if.then.i64:                                      ; preds = %av_clip_c.exit80
  %38 = load i32, i32* %amin.addr.i61, align 4, !dbg !8768
  store i32 %38, i32* %retval.i59, align 4, !dbg !8769
  br label %av_clip_c.exit69, !dbg !8769

if.else.i66:                                      ; preds = %av_clip_c.exit80
  %39 = load i32, i32* %a.addr.i60, align 4, !dbg !8770
  %40 = load i32, i32* %amax.addr.i62, align 4, !dbg !8771
  %cmp1.i65 = icmp sgt i32 %39, %40, !dbg !8772
  br i1 %cmp1.i65, label %if.then2.i67, label %if.else3.i68, !dbg !8773

if.then2.i67:                                     ; preds = %if.else.i66
  %41 = load i32, i32* %amax.addr.i62, align 4, !dbg !8774
  store i32 %41, i32* %retval.i59, align 4, !dbg !8775
  br label %av_clip_c.exit69, !dbg !8775

if.else3.i68:                                     ; preds = %if.else.i66
  %42 = load i32, i32* %a.addr.i60, align 4, !dbg !8776
  store i32 %42, i32* %retval.i59, align 4, !dbg !8777
  br label %av_clip_c.exit69, !dbg !8777

av_clip_c.exit69:                                 ; preds = %if.then.i64, %if.then2.i67, %if.else3.i68
  %43 = load i32, i32* %retval.i59, align 4, !dbg !8778
  %tm_min28 = getelementptr inbounds %struct.tm, %struct.tm* %time, i32 0, i32 1, !dbg !8779
  store i32 %43, i32* %tm_min28, align 4, !dbg !8780
  %tm_sec29 = getelementptr inbounds %struct.tm, %struct.tm* %time, i32 0, i32 0, !dbg !8781
  %44 = load i32, i32* %tm_sec29, align 8, !dbg !8781
  store i32 %44, i32* %a.addr.i49, align 4, !dbg !8782
  store i32 0, i32* %amin.addr.i50, align 4, !dbg !8782
  store i32 59, i32* %amax.addr.i51, align 4, !dbg !8782
  %45 = load i32, i32* %a.addr.i49, align 4, !dbg !8783
  %46 = load i32, i32* %amin.addr.i50, align 4, !dbg !8784
  %cmp.i52 = icmp slt i32 %45, %46, !dbg !8785
  br i1 %cmp.i52, label %if.then.i53, label %if.else.i55, !dbg !8786

if.then.i53:                                      ; preds = %av_clip_c.exit69
  %47 = load i32, i32* %amin.addr.i50, align 4, !dbg !8787
  store i32 %47, i32* %retval.i48, align 4, !dbg !8788
  br label %av_clip_c.exit58, !dbg !8788

if.else.i55:                                      ; preds = %av_clip_c.exit69
  %48 = load i32, i32* %a.addr.i49, align 4, !dbg !8789
  %49 = load i32, i32* %amax.addr.i51, align 4, !dbg !8790
  %cmp1.i54 = icmp sgt i32 %48, %49, !dbg !8791
  br i1 %cmp1.i54, label %if.then2.i56, label %if.else3.i57, !dbg !8792

if.then2.i56:                                     ; preds = %if.else.i55
  %50 = load i32, i32* %amax.addr.i51, align 4, !dbg !8793
  store i32 %50, i32* %retval.i48, align 4, !dbg !8794
  br label %av_clip_c.exit58, !dbg !8794

if.else3.i57:                                     ; preds = %if.else.i55
  %51 = load i32, i32* %a.addr.i49, align 4, !dbg !8795
  store i32 %51, i32* %retval.i48, align 4, !dbg !8796
  br label %av_clip_c.exit58, !dbg !8796

av_clip_c.exit58:                                 ; preds = %if.then.i53, %if.then2.i56, %if.else3.i57
  %52 = load i32, i32* %retval.i48, align 4, !dbg !8797
  %tm_sec31 = getelementptr inbounds %struct.tm, %struct.tm* %time, i32 0, i32 0, !dbg !8798
  store i32 %52, i32* %tm_sec31, align 8, !dbg !8799
  %53 = load i32, i32* %msecs, align 4, !dbg !8800
  store i32 %53, i32* %a.addr.i38, align 4, !dbg !8801
  store i32 0, i32* %amin.addr.i39, align 4, !dbg !8801
  store i32 999, i32* %amax.addr.i40, align 4, !dbg !8801
  %54 = load i32, i32* %a.addr.i38, align 4, !dbg !8802
  %55 = load i32, i32* %amin.addr.i39, align 4, !dbg !8803
  %cmp.i41 = icmp slt i32 %54, %55, !dbg !8804
  br i1 %cmp.i41, label %if.then.i42, label %if.else.i44, !dbg !8805

if.then.i42:                                      ; preds = %av_clip_c.exit58
  %56 = load i32, i32* %amin.addr.i39, align 4, !dbg !8806
  store i32 %56, i32* %retval.i37, align 4, !dbg !8807
  br label %av_clip_c.exit47, !dbg !8807

if.else.i44:                                      ; preds = %av_clip_c.exit58
  %57 = load i32, i32* %a.addr.i38, align 4, !dbg !8808
  %58 = load i32, i32* %amax.addr.i40, align 4, !dbg !8809
  %cmp1.i43 = icmp sgt i32 %57, %58, !dbg !8810
  br i1 %cmp1.i43, label %if.then2.i45, label %if.else3.i46, !dbg !8811

if.then2.i45:                                     ; preds = %if.else.i44
  %59 = load i32, i32* %amax.addr.i40, align 4, !dbg !8812
  store i32 %59, i32* %retval.i37, align 4, !dbg !8813
  br label %av_clip_c.exit47, !dbg !8813

if.else3.i46:                                     ; preds = %if.else.i44
  %60 = load i32, i32* %a.addr.i38, align 4, !dbg !8814
  store i32 %60, i32* %retval.i37, align 4, !dbg !8815
  br label %av_clip_c.exit47, !dbg !8815

av_clip_c.exit47:                                 ; preds = %if.then.i42, %if.then2.i45, %if.else3.i46
  %61 = load i32, i32* %retval.i37, align 4, !dbg !8816
  store i32 %61, i32* %msecs, align 4, !dbg !8817
  %call33 = call i64 @av_timegm(%struct.tm* %time), !dbg !8818
  %mul34 = mul nsw i64 %call33, 1000000, !dbg !8819
  %62 = load i32, i32* %msecs, align 4, !dbg !8820
  %mul35 = mul nsw i32 %62, 1000, !dbg !8821
  %conv36 = sext i32 %mul35 to i64, !dbg !8820
  %add = add nsw i64 %mul34, %conv36, !dbg !8822
  ret i64 %add, !dbg !8823
}

declare noalias i8* @av_mallocz(i64) #1

; Function Attrs: nounwind
declare i32 @snprintf(i8*, i64, i8*, ...) #6

declare i64 @av_timegm(%struct.tm*) #1

; Function Attrs: nounwind uwtable
define internal i32 @mxf_read_strong_ref_array(%struct.AVIOContext* %pb, [16 x i8]** %refs, i32* %count) #0 !dbg !8824 {
entry:
  %retval = alloca i32, align 4
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %refs.addr = alloca [16 x i8]**, align 8
  %count.addr = alloca i32*, align 8
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !8828, metadata !2511), !dbg !8829
  store [16 x i8]** %refs, [16 x i8]*** %refs.addr, align 8
  call void @llvm.dbg.declare(metadata [16 x i8]*** %refs.addr, metadata !8830, metadata !2511), !dbg !8831
  store i32* %count, i32** %count.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %count.addr, metadata !8832, metadata !2511), !dbg !8833
  %0 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8834
  %call = call i32 @avio_rb32(%struct.AVIOContext* %0), !dbg !8835
  %1 = load i32*, i32** %count.addr, align 8, !dbg !8836
  store i32 %call, i32* %1, align 4, !dbg !8837
  %2 = load i32*, i32** %count.addr, align 8, !dbg !8838
  %3 = load i32, i32* %2, align 4, !dbg !8839
  %conv = sext i32 %3 to i64, !dbg !8839
  %call1 = call noalias i8* @av_calloc(i64 %conv, i64 16), !dbg !8840
  %4 = bitcast i8* %call1 to [16 x i8]*, !dbg !8840
  %5 = load [16 x i8]**, [16 x i8]*** %refs.addr, align 8, !dbg !8841
  store [16 x i8]* %4, [16 x i8]** %5, align 8, !dbg !8842
  %6 = load [16 x i8]**, [16 x i8]*** %refs.addr, align 8, !dbg !8843
  %7 = load [16 x i8]*, [16 x i8]** %6, align 8, !dbg !8845
  %tobool = icmp ne [16 x i8]* %7, null, !dbg !8845
  br i1 %tobool, label %if.end, label %if.then, !dbg !8846

if.then:                                          ; preds = %entry
  %8 = load i32*, i32** %count.addr, align 8, !dbg !8847
  store i32 0, i32* %8, align 4, !dbg !8849
  store i32 -12, i32* %retval, align 4, !dbg !8850
  br label %return, !dbg !8850

if.end:                                           ; preds = %entry
  %9 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8851
  %call2 = call i64 @avio_skip(%struct.AVIOContext* %9, i64 4), !dbg !8852
  %10 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8853
  %11 = load [16 x i8]**, [16 x i8]*** %refs.addr, align 8, !dbg !8854
  %12 = load [16 x i8]*, [16 x i8]** %11, align 8, !dbg !8855
  %13 = bitcast [16 x i8]* %12 to i8*, !dbg !8856
  %14 = load i32*, i32** %count.addr, align 8, !dbg !8857
  %15 = load i32, i32* %14, align 4, !dbg !8858
  %conv3 = sext i32 %15 to i64, !dbg !8858
  %mul = mul i64 %conv3, 16, !dbg !8859
  %conv4 = trunc i64 %mul to i32, !dbg !8858
  %call5 = call i32 @avio_read(%struct.AVIOContext* %10, i8* %13, i32 %conv4), !dbg !8860
  store i32 0, i32* %retval, align 4, !dbg !8861
  br label %return, !dbg !8861

return:                                           ; preds = %if.end, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !8862
  ret i32 %16, !dbg !8862
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_read_indirect_value(i8* %arg, %struct.AVIOContext* %pb, i32 %size) #0 !dbg !8863 {
entry:
  %retval = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %size.addr = alloca i32, align 4
  %tagged_value = alloca %struct.MXFTaggedValue*, align 8
  %key = alloca [17 x i8], align 16
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8866, metadata !2511), !dbg !8867
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !8868, metadata !2511), !dbg !8869
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8870, metadata !2511), !dbg !8871
  call void @llvm.dbg.declare(metadata %struct.MXFTaggedValue** %tagged_value, metadata !8872, metadata !2511), !dbg !8873
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !8874
  %1 = bitcast i8* %0 to %struct.MXFTaggedValue*, !dbg !8874
  store %struct.MXFTaggedValue* %1, %struct.MXFTaggedValue** %tagged_value, align 8, !dbg !8873
  call void @llvm.dbg.declare(metadata [17 x i8]* %key, metadata !8875, metadata !2511), !dbg !8876
  %2 = load i32, i32* %size.addr, align 4, !dbg !8877
  %cmp = icmp sle i32 %2, 17, !dbg !8879
  br i1 %cmp, label %if.then, label %if.end, !dbg !8880

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8881
  br label %return, !dbg !8881

if.end:                                           ; preds = %entry
  %3 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8882
  %arraydecay = getelementptr inbounds [17 x i8], [17 x i8]* %key, i32 0, i32 0, !dbg !8883
  %call = call i32 @avio_read(%struct.AVIOContext* %3, i8* %arraydecay, i32 17), !dbg !8884
  %arraydecay1 = getelementptr inbounds [17 x i8], [17 x i8]* %key, i32 0, i32 0, !dbg !8885
  %call2 = call i32 @memcmp(i8* %arraydecay1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @mxf_indirect_value_utf16le, i32 0, i32 0), i64 17) #9, !dbg !8887
  %cmp3 = icmp eq i32 %call2, 0, !dbg !8888
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !8889

if.then4:                                         ; preds = %if.end
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8890
  %5 = load i32, i32* %size.addr, align 4, !dbg !8892
  %sub = sub nsw i32 %5, 17, !dbg !8893
  %6 = load %struct.MXFTaggedValue*, %struct.MXFTaggedValue** %tagged_value, align 8, !dbg !8894
  %value = getelementptr inbounds %struct.MXFTaggedValue, %struct.MXFTaggedValue* %6, i32 0, i32 3, !dbg !8895
  %call5 = call i32 @mxf_read_utf16le_string(%struct.AVIOContext* %4, i32 %sub, i8** %value), !dbg !8896
  store i32 %call5, i32* %retval, align 4, !dbg !8897
  br label %return, !dbg !8897

if.else:                                          ; preds = %if.end
  %arraydecay6 = getelementptr inbounds [17 x i8], [17 x i8]* %key, i32 0, i32 0, !dbg !8898
  %call7 = call i32 @memcmp(i8* %arraydecay6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @mxf_indirect_value_utf16be, i32 0, i32 0), i64 17) #9, !dbg !8900
  %cmp8 = icmp eq i32 %call7, 0, !dbg !8901
  br i1 %cmp8, label %if.then9, label %if.end13, !dbg !8902

if.then9:                                         ; preds = %if.else
  %7 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8903
  %8 = load i32, i32* %size.addr, align 4, !dbg !8905
  %sub10 = sub nsw i32 %8, 17, !dbg !8906
  %9 = load %struct.MXFTaggedValue*, %struct.MXFTaggedValue** %tagged_value, align 8, !dbg !8907
  %value11 = getelementptr inbounds %struct.MXFTaggedValue, %struct.MXFTaggedValue* %9, i32 0, i32 3, !dbg !8908
  %call12 = call i32 @mxf_read_utf16be_string(%struct.AVIOContext* %7, i32 %sub10, i8** %value11), !dbg !8909
  store i32 %call12, i32* %retval, align 4, !dbg !8910
  br label %return, !dbg !8910

if.end13:                                         ; preds = %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end13
  store i32 0, i32* %retval, align 4, !dbg !8911
  br label %return, !dbg !8911

return:                                           ; preds = %if.end14, %if.then9, %if.then4, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !8912
  ret i32 %10, !dbg !8912
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_read_utf16le_string(%struct.AVIOContext* %pb, i32 %size, i8** %str) #0 !dbg !8913 {
entry:
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %size.addr = alloca i32, align 4
  %str.addr = alloca i8**, align 8
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !8914, metadata !2511), !dbg !8915
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8916, metadata !2511), !dbg !8917
  store i8** %str, i8*** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %str.addr, metadata !8918, metadata !2511), !dbg !8919
  %0 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8920
  %1 = load i32, i32* %size.addr, align 4, !dbg !8921
  %2 = load i8**, i8*** %str.addr, align 8, !dbg !8922
  %call = call i32 @mxf_read_utf16_string(%struct.AVIOContext* %0, i32 %1, i8** %2, i32 0), !dbg !8923
  ret i32 %call, !dbg !8924
}

; Function Attrs: nounwind uwtable
define internal void @mxf_read_pixel_layout(%struct.AVIOContext* %pb, %struct.MXFDescriptor* %descriptor) #0 !dbg !8925 {
entry:
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %descriptor.addr = alloca %struct.MXFDescriptor*, align 8
  %code = alloca i32, align 4
  %value = alloca i32, align 4
  %ofs = alloca i32, align 4
  %layout = alloca [16 x i8], align 16
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !8928, metadata !2511), !dbg !8929
  store %struct.MXFDescriptor* %descriptor, %struct.MXFDescriptor** %descriptor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFDescriptor** %descriptor.addr, metadata !8930, metadata !2511), !dbg !8931
  call void @llvm.dbg.declare(metadata i32* %code, metadata !8932, metadata !2511), !dbg !8933
  call void @llvm.dbg.declare(metadata i32* %value, metadata !8934, metadata !2511), !dbg !8935
  call void @llvm.dbg.declare(metadata i32* %ofs, metadata !8936, metadata !2511), !dbg !8937
  store i32 0, i32* %ofs, align 4, !dbg !8937
  call void @llvm.dbg.declare(metadata [16 x i8]* %layout, metadata !8938, metadata !2511), !dbg !8940
  %0 = bitcast [16 x i8]* %layout to i8*, !dbg !8940
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 16, i32 16, i1 false), !dbg !8940
  br label %do.body, !dbg !8941, !llvm.loop !8942

do.body:                                          ; preds = %do.cond, %entry
  %1 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8943
  %call = call i32 @avio_r8(%struct.AVIOContext* %1), !dbg !8945
  store i32 %call, i32* %code, align 4, !dbg !8946
  %2 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8947
  %call1 = call i32 @avio_r8(%struct.AVIOContext* %2), !dbg !8948
  store i32 %call1, i32* %value, align 4, !dbg !8949
  %3 = load i32, i32* %code, align 4, !dbg !8950
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 56, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.50, i32 0, i32 0), i32 %3), !dbg !8951
  %4 = load i32, i32* %ofs, align 4, !dbg !8952
  %cmp = icmp sle i32 %4, 14, !dbg !8954
  br i1 %cmp, label %if.then, label %if.else, !dbg !8955

if.then:                                          ; preds = %do.body
  %5 = load i32, i32* %code, align 4, !dbg !8956
  %conv = trunc i32 %5 to i8, !dbg !8956
  %6 = load i32, i32* %ofs, align 4, !dbg !8958
  %inc = add nsw i32 %6, 1, !dbg !8958
  store i32 %inc, i32* %ofs, align 4, !dbg !8958
  %idxprom = sext i32 %6 to i64, !dbg !8959
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %layout, i64 0, i64 %idxprom, !dbg !8959
  store i8 %conv, i8* %arrayidx, align 1, !dbg !8960
  %7 = load i32, i32* %value, align 4, !dbg !8961
  %conv2 = trunc i32 %7 to i8, !dbg !8961
  %8 = load i32, i32* %ofs, align 4, !dbg !8962
  %inc3 = add nsw i32 %8, 1, !dbg !8962
  store i32 %inc3, i32* %ofs, align 4, !dbg !8962
  %idxprom4 = sext i32 %8 to i64, !dbg !8963
  %arrayidx5 = getelementptr inbounds [16 x i8], [16 x i8]* %layout, i64 0, i64 %idxprom4, !dbg !8963
  store i8 %conv2, i8* %arrayidx5, align 1, !dbg !8964
  br label %if.end, !dbg !8965

if.else:                                          ; preds = %do.body
  br label %do.end, !dbg !8966

if.end:                                           ; preds = %if.then
  br label %do.cond, !dbg !8967

do.cond:                                          ; preds = %if.end
  %9 = load i32, i32* %code, align 4, !dbg !8968
  %cmp6 = icmp ne i32 %9, 0, !dbg !8970
  br i1 %cmp6, label %do.body, label %do.end, !dbg !8971, !llvm.loop !8942

do.end:                                           ; preds = %do.cond, %if.else
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %layout, i32 0, i32 0, !dbg !8972
  %10 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor.addr, align 8, !dbg !8973
  %pix_fmt = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %10, i32 0, i32 23, !dbg !8974
  %call8 = call i32 @ff_mxf_decode_pixel_layout(i8* %arraydecay, i32* %pix_fmt), !dbg !8975
  ret void, !dbg !8976
}

declare i32 @avio_rb16(%struct.AVIOContext*) #1

declare i32 @ff_mxf_decode_pixel_layout(i8*, i32*) #1

; Function Attrs: nounwind uwtable
define internal i32 @mxf_read_index_entry_array(%struct.AVIOContext* %pb, %struct.MXFIndexTableSegment* %segment) #0 !dbg !8977 {
entry:
  %retval = alloca i32, align 4
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %segment.addr = alloca %struct.MXFIndexTableSegment*, align 8
  %i = alloca i32, align 4
  %length = alloca i32, align 4
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !8980, metadata !2511), !dbg !8981
  store %struct.MXFIndexTableSegment* %segment, %struct.MXFIndexTableSegment** %segment.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFIndexTableSegment** %segment.addr, metadata !8982, metadata !2511), !dbg !8983
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8984, metadata !2511), !dbg !8985
  call void @llvm.dbg.declare(metadata i32* %length, metadata !8986, metadata !2511), !dbg !8987
  %0 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8988
  %call = call i32 @avio_rb32(%struct.AVIOContext* %0), !dbg !8989
  %1 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment.addr, align 8, !dbg !8990
  %nb_index_entries = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %1, i32 0, i32 11, !dbg !8991
  store i32 %call, i32* %nb_index_entries, align 8, !dbg !8992
  %2 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !8993
  %call1 = call i32 @avio_rb32(%struct.AVIOContext* %2), !dbg !8994
  store i32 %call1, i32* %length, align 4, !dbg !8995
  %3 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment.addr, align 8, !dbg !8996
  %nb_index_entries2 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %3, i32 0, i32 11, !dbg !8998
  %4 = load i32, i32* %nb_index_entries2, align 8, !dbg !8998
  %tobool = icmp ne i32 %4, 0, !dbg !8996
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8999

land.lhs.true:                                    ; preds = %entry
  %5 = load i32, i32* %length, align 4, !dbg !9000
  %cmp = icmp slt i32 %5, 11, !dbg !9002
  br i1 %cmp, label %if.then, label %if.end, !dbg !9003

if.then:                                          ; preds = %land.lhs.true
  store i32 -1094995529, i32* %retval, align 4, !dbg !9004
  br label %return, !dbg !9004

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment.addr, align 8, !dbg !9005
  %nb_index_entries3 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %6, i32 0, i32 11, !dbg !9007
  %7 = load i32, i32* %nb_index_entries3, align 8, !dbg !9007
  %conv = sext i32 %7 to i64, !dbg !9005
  %call4 = call noalias i8* @av_calloc(i64 %conv, i64 1), !dbg !9008
  %8 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment.addr, align 8, !dbg !9009
  %temporal_offset_entries = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %8, i32 0, i32 8, !dbg !9010
  store i8* %call4, i8** %temporal_offset_entries, align 8, !dbg !9011
  %tobool5 = icmp ne i8* %call4, null, !dbg !9011
  br i1 %tobool5, label %lor.lhs.false, label %if.then15, !dbg !9012

lor.lhs.false:                                    ; preds = %if.end
  %9 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment.addr, align 8, !dbg !9013
  %nb_index_entries6 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %9, i32 0, i32 11, !dbg !9014
  %10 = load i32, i32* %nb_index_entries6, align 8, !dbg !9014
  %conv7 = sext i32 %10 to i64, !dbg !9013
  %call8 = call noalias i8* @av_calloc(i64 %conv7, i64 4), !dbg !9015
  %11 = bitcast i8* %call8 to i32*, !dbg !9015
  %12 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment.addr, align 8, !dbg !9016
  %flag_entries = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %12, i32 0, i32 9, !dbg !9017
  store i32* %11, i32** %flag_entries, align 8, !dbg !9018
  %tobool9 = icmp ne i32* %11, null, !dbg !9018
  br i1 %tobool9, label %lor.lhs.false10, label %if.then15, !dbg !9019

lor.lhs.false10:                                  ; preds = %lor.lhs.false
  %13 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment.addr, align 8, !dbg !9020
  %nb_index_entries11 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %13, i32 0, i32 11, !dbg !9021
  %14 = load i32, i32* %nb_index_entries11, align 8, !dbg !9021
  %conv12 = sext i32 %14 to i64, !dbg !9020
  %call13 = call noalias i8* @av_calloc(i64 %conv12, i64 8), !dbg !9022
  %15 = bitcast i8* %call13 to i64*, !dbg !9022
  %16 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment.addr, align 8, !dbg !9023
  %stream_offset_entries = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %16, i32 0, i32 10, !dbg !9024
  store i64* %15, i64** %stream_offset_entries, align 8, !dbg !9025
  %tobool14 = icmp ne i64* %15, null, !dbg !9025
  br i1 %tobool14, label %if.end18, label %if.then15, !dbg !9026

if.then15:                                        ; preds = %lor.lhs.false10, %lor.lhs.false, %if.end
  %17 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment.addr, align 8, !dbg !9028
  %temporal_offset_entries16 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %17, i32 0, i32 8, !dbg !9030
  %18 = bitcast i8** %temporal_offset_entries16 to i8*, !dbg !9031
  call void @av_freep(i8* %18), !dbg !9032
  %19 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment.addr, align 8, !dbg !9033
  %flag_entries17 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %19, i32 0, i32 9, !dbg !9034
  %20 = bitcast i32** %flag_entries17 to i8*, !dbg !9035
  call void @av_freep(i8* %20), !dbg !9036
  store i32 -12, i32* %retval, align 4, !dbg !9037
  br label %return, !dbg !9037

if.end18:                                         ; preds = %lor.lhs.false10
  store i32 0, i32* %i, align 4, !dbg !9038
  br label %for.cond, !dbg !9040

for.cond:                                         ; preds = %for.inc, %if.end18
  %21 = load i32, i32* %i, align 4, !dbg !9041
  %22 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment.addr, align 8, !dbg !9044
  %nb_index_entries19 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %22, i32 0, i32 11, !dbg !9045
  %23 = load i32, i32* %nb_index_entries19, align 8, !dbg !9045
  %cmp20 = icmp slt i32 %21, %23, !dbg !9046
  br i1 %cmp20, label %for.body, label %for.end, !dbg !9047

for.body:                                         ; preds = %for.cond
  %24 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !9048
  %call22 = call i32 @avio_feof(%struct.AVIOContext* %24), !dbg !9051
  %tobool23 = icmp ne i32 %call22, 0, !dbg !9051
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !9052

if.then24:                                        ; preds = %for.body
  store i32 -1094995529, i32* %retval, align 4, !dbg !9053
  br label %return, !dbg !9053

if.end25:                                         ; preds = %for.body
  %25 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !9054
  %call26 = call i32 @avio_r8(%struct.AVIOContext* %25), !dbg !9055
  %conv27 = trunc i32 %call26 to i8, !dbg !9055
  %26 = load i32, i32* %i, align 4, !dbg !9056
  %idxprom = sext i32 %26 to i64, !dbg !9057
  %27 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment.addr, align 8, !dbg !9057
  %temporal_offset_entries28 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %27, i32 0, i32 8, !dbg !9058
  %28 = load i8*, i8** %temporal_offset_entries28, align 8, !dbg !9058
  %arrayidx = getelementptr inbounds i8, i8* %28, i64 %idxprom, !dbg !9057
  store i8 %conv27, i8* %arrayidx, align 1, !dbg !9059
  %29 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !9060
  %call29 = call i32 @avio_r8(%struct.AVIOContext* %29), !dbg !9061
  %30 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !9062
  %call30 = call i32 @avio_r8(%struct.AVIOContext* %30), !dbg !9063
  %31 = load i32, i32* %i, align 4, !dbg !9064
  %idxprom31 = sext i32 %31 to i64, !dbg !9065
  %32 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment.addr, align 8, !dbg !9065
  %flag_entries32 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %32, i32 0, i32 9, !dbg !9066
  %33 = load i32*, i32** %flag_entries32, align 8, !dbg !9066
  %arrayidx33 = getelementptr inbounds i32, i32* %33, i64 %idxprom31, !dbg !9065
  store i32 %call30, i32* %arrayidx33, align 4, !dbg !9067
  %34 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !9068
  %call34 = call i64 @avio_rb64(%struct.AVIOContext* %34), !dbg !9069
  %35 = load i32, i32* %i, align 4, !dbg !9070
  %idxprom35 = sext i32 %35 to i64, !dbg !9071
  %36 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %segment.addr, align 8, !dbg !9071
  %stream_offset_entries36 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %36, i32 0, i32 10, !dbg !9072
  %37 = load i64*, i64** %stream_offset_entries36, align 8, !dbg !9072
  %arrayidx37 = getelementptr inbounds i64, i64* %37, i64 %idxprom35, !dbg !9071
  store i64 %call34, i64* %arrayidx37, align 8, !dbg !9073
  %38 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !9074
  %39 = load i32, i32* %length, align 4, !dbg !9075
  %sub = sub nsw i32 %39, 11, !dbg !9076
  %conv38 = sext i32 %sub to i64, !dbg !9075
  %call39 = call i64 @avio_skip(%struct.AVIOContext* %38, i64 %conv38), !dbg !9077
  br label %for.inc, !dbg !9078

for.inc:                                          ; preds = %if.end25
  %40 = load i32, i32* %i, align 4, !dbg !9079
  %inc = add nsw i32 %40, 1, !dbg !9079
  store i32 %inc, i32* %i, align 4, !dbg !9079
  br label %for.cond, !dbg !9081, !llvm.loop !9082

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !9084
  br label %return, !dbg !9084

return:                                           ; preds = %for.end, %if.then24, %if.then15, %if.then
  %41 = load i32, i32* %retval, align 4, !dbg !9085
  ret i32 %41, !dbg !9085
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_read_local_tags(%struct.MXFContext* %mxf, %struct.KLVPacket* %klv, i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* %read_child, i32 %ctx_size, i32 %type) #0 !dbg !9086 {
entry:
  %s.addr.i88 = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i88, metadata !2585, metadata !2511), !dbg !9089
  %s.addr.i86 = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i86, metadata !2585, metadata !2511), !dbg !9094
  %x.addr.i = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr.i, metadata !9096, metadata !2511), !dbg !9100
  %s.addr.i84 = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i84, metadata !2585, metadata !2511), !dbg !9107
  %s.addr.i82 = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i82, metadata !2585, metadata !2511), !dbg !9109
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2585, metadata !2511), !dbg !9112
  %retval = alloca i32, align 4
  %mxf.addr = alloca %struct.MXFContext*, align 8
  %klv.addr = alloca %struct.KLVPacket*, align 8
  %read_child.addr = alloca i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)*, align 8
  %ctx_size.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %pb = alloca %struct.AVIOContext*, align 8
  %ctx = alloca %struct.MXFMetadataSet*, align 8
  %klv_end = alloca i64, align 8
  %ret = alloca i32, align 4
  %tag = alloca i32, align 4
  %size = alloca i32, align 4
  %next = alloca i64, align 8
  %uid = alloca [16 x i8], align 16
  %i = alloca i32, align 4
  %local_tag = alloca i32, align 4
  store %struct.MXFContext* %mxf, %struct.MXFContext** %mxf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf.addr, metadata !9114, metadata !2511), !dbg !9115
  store %struct.KLVPacket* %klv, %struct.KLVPacket** %klv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KLVPacket** %klv.addr, metadata !9116, metadata !2511), !dbg !9117
  store i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)* %read_child, i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)** %read_child.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)** %read_child.addr, metadata !9118, metadata !2511), !dbg !9119
  store i32 %ctx_size, i32* %ctx_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ctx_size.addr, metadata !9120, metadata !2511), !dbg !9121
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !9122, metadata !2511), !dbg !9123
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !9124, metadata !2511), !dbg !9125
  %0 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !9126
  %fc = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %0, i32 0, i32 10, !dbg !9127
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc, align 8, !dbg !9127
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %1, i32 0, i32 4, !dbg !9128
  %2 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !9128
  store %struct.AVIOContext* %2, %struct.AVIOContext** %pb, align 8, !dbg !9125
  call void @llvm.dbg.declare(metadata %struct.MXFMetadataSet** %ctx, metadata !9129, metadata !2511), !dbg !9130
  %3 = load i32, i32* %ctx_size.addr, align 4, !dbg !9131
  %tobool = icmp ne i32 %3, 0, !dbg !9131
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9131

cond.true:                                        ; preds = %entry
  %4 = load i32, i32* %ctx_size.addr, align 4, !dbg !9132
  %conv = sext i32 %4 to i64, !dbg !9132
  %call = call noalias i8* @av_mallocz(i64 %conv), !dbg !9133
  br label %cond.end, !dbg !9134

cond.false:                                       ; preds = %entry
  %5 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !9135
  %6 = bitcast %struct.MXFContext* %5 to i8*, !dbg !9135
  br label %cond.end, !dbg !9137

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %6, %cond.false ], !dbg !9138
  %7 = bitcast i8* %cond to %struct.MXFMetadataSet*, !dbg !9138
  store %struct.MXFMetadataSet* %7, %struct.MXFMetadataSet** %ctx, align 8, !dbg !9140
  call void @llvm.dbg.declare(metadata i64* %klv_end, metadata !9141, metadata !2511), !dbg !9142
  %8 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9143
  store %struct.AVIOContext* %8, %struct.AVIOContext** %s.addr.i, align 8, !dbg !9144
  %9 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !9145
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %9, i64 0, i32 1) #8, !dbg !9146
  %10 = load %struct.KLVPacket*, %struct.KLVPacket** %klv.addr, align 8, !dbg !9147
  %length = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %10, i32 0, i32 2, !dbg !9148
  %11 = load i64, i64* %length, align 8, !dbg !9148
  %add = add i64 %call.i, %11, !dbg !9149
  store i64 %add, i64* %klv_end, align 8, !dbg !9142
  %12 = load %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %ctx, align 8, !dbg !9150
  %tobool3 = icmp ne %struct.MXFMetadataSet* %12, null, !dbg !9150
  br i1 %tobool3, label %if.end, label %if.then, !dbg !9152

if.then:                                          ; preds = %cond.end
  store i32 -12, i32* %retval, align 4, !dbg !9153
  br label %return, !dbg !9153

if.end:                                           ; preds = %cond.end
  %13 = load %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %ctx, align 8, !dbg !9154
  %14 = load i32, i32* %type.addr, align 4, !dbg !9155
  %call4 = call i32 @mxf_metadataset_init(%struct.MXFMetadataSet* %13, i32 %14), !dbg !9156
  br label %while.cond, !dbg !9157

while.cond:                                       ; preds = %if.end71, %if.then17, %if.end
  %15 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9158
  store %struct.AVIOContext* %15, %struct.AVIOContext** %s.addr.i82, align 8, !dbg !9159
  %16 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i82, align 8, !dbg !9160
  %call.i83 = call i64 @avio_seek(%struct.AVIOContext* %16, i64 0, i32 1) #8, !dbg !9161
  %add6 = add nsw i64 %call.i83, 4, !dbg !9162
  %17 = load i64, i64* %klv_end, align 8, !dbg !9163
  %cmp = icmp ult i64 %add6, %17, !dbg !9164
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !9165

land.rhs:                                         ; preds = %while.cond
  %18 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9166
  %call8 = call i32 @avio_feof(%struct.AVIOContext* %18), !dbg !9167
  %tobool9 = icmp ne i32 %call8, 0, !dbg !9168
  %lnot = xor i1 %tobool9, true, !dbg !9168
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %19 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ]
  br i1 %19, label %while.body, label %while.end, !dbg !9169

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9170, metadata !2511), !dbg !9171
  call void @llvm.dbg.declare(metadata i32* %tag, metadata !9172, metadata !2511), !dbg !9173
  %20 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9174
  %call10 = call i32 @avio_rb16(%struct.AVIOContext* %20), !dbg !9175
  store i32 %call10, i32* %tag, align 4, !dbg !9173
  call void @llvm.dbg.declare(metadata i32* %size, metadata !9176, metadata !2511), !dbg !9177
  %21 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9178
  %call11 = call i32 @avio_rb16(%struct.AVIOContext* %21), !dbg !9179
  store i32 %call11, i32* %size, align 4, !dbg !9177
  call void @llvm.dbg.declare(metadata i64* %next, metadata !9180, metadata !2511), !dbg !9181
  %22 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9182
  store %struct.AVIOContext* %22, %struct.AVIOContext** %s.addr.i84, align 8, !dbg !9183
  %23 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i84, align 8, !dbg !9184
  %call.i85 = call i64 @avio_seek(%struct.AVIOContext* %23, i64 0, i32 1) #8, !dbg !9185
  %24 = load i32, i32* %size, align 4, !dbg !9186
  %conv13 = sext i32 %24 to i64, !dbg !9186
  %add14 = add nsw i64 %call.i85, %conv13, !dbg !9187
  store i64 %add14, i64* %next, align 8, !dbg !9181
  call void @llvm.dbg.declare(metadata [16 x i8]* %uid, metadata !9188, metadata !2511), !dbg !9189
  %25 = bitcast [16 x i8]* %uid to i8*, !dbg !9189
  call void @llvm.memset.p0i8.i64(i8* %25, i8 0, i64 16, i32 16, i1 false), !dbg !9189
  %26 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !9190
  %fc15 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %26, i32 0, i32 10, !dbg !9191
  %27 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc15, align 8, !dbg !9191
  %28 = bitcast %struct.AVFormatContext* %27 to i8*, !dbg !9190
  %29 = load i32, i32* %tag, align 4, !dbg !9192
  %30 = load i32, i32* %size, align 4, !dbg !9193
  call void (i8*, i32, i8*, ...) @av_log(i8* %28, i32 56, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.60, i32 0, i32 0), i32 %29, i32 %30), !dbg !9194
  %31 = load i32, i32* %size, align 4, !dbg !9195
  %tobool16 = icmp ne i32 %31, 0, !dbg !9195
  br i1 %tobool16, label %if.end19, label %if.then17, !dbg !9197

if.then17:                                        ; preds = %while.body
  %32 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !9198
  %fc18 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %32, i32 0, i32 10, !dbg !9200
  %33 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc18, align 8, !dbg !9200
  %34 = bitcast %struct.AVFormatContext* %33 to i8*, !dbg !9198
  %35 = load i32, i32* %tag, align 4, !dbg !9201
  call void (i8*, i32, i8*, ...) @av_log(i8* %34, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.61, i32 0, i32 0), i32 %35), !dbg !9202
  br label %while.cond, !dbg !9203, !llvm.loop !9204

if.end19:                                         ; preds = %while.body
  %36 = load i32, i32* %tag, align 4, !dbg !9205
  %cmp20 = icmp sgt i32 %36, 32767, !dbg !9206
  br i1 %cmp20, label %if.then22, label %if.end37, !dbg !9207

if.then22:                                        ; preds = %if.end19
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9208, metadata !2511), !dbg !9209
  store i32 0, i32* %i, align 4, !dbg !9210
  br label %for.cond, !dbg !9211

for.cond:                                         ; preds = %for.inc, %if.then22
  %37 = load i32, i32* %i, align 4, !dbg !9212
  %38 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !9214
  %local_tags_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %38, i32 0, i32 13, !dbg !9215
  %39 = load i32, i32* %local_tags_count, align 8, !dbg !9215
  %cmp23 = icmp slt i32 %37, %39, !dbg !9216
  br i1 %cmp23, label %for.body, label %for.end, !dbg !9217

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %local_tag, metadata !9218, metadata !2511), !dbg !9219
  %40 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !9220
  %local_tags = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %40, i32 0, i32 12, !dbg !9221
  %41 = load i8*, i8** %local_tags, align 8, !dbg !9221
  %42 = load i32, i32* %i, align 4, !dbg !9222
  %mul = mul nsw i32 %42, 18, !dbg !9223
  %idx.ext = sext i32 %mul to i64, !dbg !9224
  %add.ptr = getelementptr inbounds i8, i8* %41, i64 %idx.ext, !dbg !9224
  %43 = bitcast i8* %add.ptr to %union.unaligned_16*, !dbg !9225
  %l = bitcast %union.unaligned_16* %43 to i16*, !dbg !9225
  %44 = load i16, i16* %l, align 1, !dbg !9225
  store i16 %44, i16* %x.addr.i, align 2, !dbg !9226
  %45 = load i16, i16* %x.addr.i, align 2, !dbg !9227
  %conv.i = zext i16 %45 to i32, !dbg !9227
  %shr.i = ashr i32 %conv.i, 8, !dbg !9228
  %46 = load i16, i16* %x.addr.i, align 2, !dbg !9229
  %conv1.i = zext i16 %46 to i32, !dbg !9229
  %shl.i = shl i32 %conv1.i, 8, !dbg !9230
  %or.i = or i32 %shr.i, %shl.i, !dbg !9231
  %conv2.i = trunc i32 %or.i to i16, !dbg !9232
  store i16 %conv2.i, i16* %x.addr.i, align 2, !dbg !9233
  %47 = load i16, i16* %x.addr.i, align 2, !dbg !9234
  %conv26 = zext i16 %47 to i32, !dbg !9226
  store i32 %conv26, i32* %local_tag, align 4, !dbg !9219
  %48 = load i32, i32* %local_tag, align 4, !dbg !9235
  %49 = load i32, i32* %tag, align 4, !dbg !9237
  %cmp27 = icmp eq i32 %48, %49, !dbg !9238
  br i1 %cmp27, label %if.then29, label %if.end36, !dbg !9239

if.then29:                                        ; preds = %for.body
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %uid, i32 0, i32 0, !dbg !9240
  %50 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !9242
  %local_tags30 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %50, i32 0, i32 12, !dbg !9243
  %51 = load i8*, i8** %local_tags30, align 8, !dbg !9243
  %52 = load i32, i32* %i, align 4, !dbg !9244
  %mul31 = mul nsw i32 %52, 18, !dbg !9245
  %idx.ext32 = sext i32 %mul31 to i64, !dbg !9246
  %add.ptr33 = getelementptr inbounds i8, i8* %51, i64 %idx.ext32, !dbg !9246
  %add.ptr34 = getelementptr inbounds i8, i8* %add.ptr33, i64 2, !dbg !9247
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %add.ptr34, i64 16, i32 1, i1 false), !dbg !9240
  %53 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !9248
  %fc35 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %53, i32 0, i32 10, !dbg !9249
  %54 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc35, align 8, !dbg !9249
  %55 = bitcast %struct.AVFormatContext* %54 to i8*, !dbg !9248
  %56 = load i32, i32* %local_tag, align 4, !dbg !9250
  call void (i8*, i32, i8*, ...) @av_log(i8* %55, i32 56, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.62, i32 0, i32 0), i32 %56), !dbg !9251
  br label %do.body, !dbg !9252, !llvm.loop !9253

do.body:                                          ; preds = %if.then29
  br label %do.end, !dbg !9254

do.end:                                           ; preds = %do.body
  br label %if.end36, !dbg !9257

if.end36:                                         ; preds = %do.end, %for.body
  br label %for.inc, !dbg !9258

for.inc:                                          ; preds = %if.end36
  %57 = load i32, i32* %i, align 4, !dbg !9259
  %inc = add nsw i32 %57, 1, !dbg !9259
  store i32 %inc, i32* %i, align 4, !dbg !9259
  br label %for.cond, !dbg !9261, !llvm.loop !9262

for.end:                                          ; preds = %for.cond
  br label %if.end37, !dbg !9264

if.end37:                                         ; preds = %for.end, %if.end19
  %58 = load i32, i32* %ctx_size.addr, align 4, !dbg !9265
  %tobool38 = icmp ne i32 %58, 0, !dbg !9265
  br i1 %tobool38, label %land.lhs.true, label %if.else, !dbg !9267

land.lhs.true:                                    ; preds = %if.end37
  %59 = load i32, i32* %tag, align 4, !dbg !9268
  %cmp39 = icmp eq i32 %59, 15370, !dbg !9270
  br i1 %cmp39, label %if.then41, label %if.else, !dbg !9271

if.then41:                                        ; preds = %land.lhs.true
  %60 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9272
  %61 = load %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %ctx, align 8, !dbg !9274
  %uid42 = getelementptr inbounds %struct.MXFMetadataSet, %struct.MXFMetadataSet* %61, i32 0, i32 0, !dbg !9275
  %arraydecay43 = getelementptr inbounds [16 x i8], [16 x i8]* %uid42, i32 0, i32 0, !dbg !9274
  %call44 = call i32 @avio_read(%struct.AVIOContext* %60, i8* %arraydecay43, i32 16), !dbg !9276
  br label %if.end54, !dbg !9277

if.else:                                          ; preds = %land.lhs.true, %if.end37
  %62 = load i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)*, i32 (i8*, %struct.AVIOContext*, i32, i32, i8*, i64)** %read_child.addr, align 8, !dbg !9278
  %63 = load %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %ctx, align 8, !dbg !9281
  %64 = bitcast %struct.MXFMetadataSet* %63 to i8*, !dbg !9281
  %65 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9282
  %66 = load i32, i32* %tag, align 4, !dbg !9283
  %67 = load i32, i32* %size, align 4, !dbg !9284
  %arraydecay45 = getelementptr inbounds [16 x i8], [16 x i8]* %uid, i32 0, i32 0, !dbg !9285
  %call46 = call i32 %62(i8* %64, %struct.AVIOContext* %65, i32 %66, i32 %67, i8* %arraydecay45, i64 -1), !dbg !9278
  store i32 %call46, i32* %ret, align 4, !dbg !9286
  %cmp47 = icmp slt i32 %call46, 0, !dbg !9287
  br i1 %cmp47, label %if.then49, label %if.end53, !dbg !9288

if.then49:                                        ; preds = %if.else
  %68 = load i32, i32* %ctx_size.addr, align 4, !dbg !9289
  %tobool50 = icmp ne i32 %68, 0, !dbg !9289
  br i1 %tobool50, label %if.then51, label %if.end52, !dbg !9292

if.then51:                                        ; preds = %if.then49
  call void @mxf_free_metadataset(%struct.MXFMetadataSet** %ctx, i32 1), !dbg !9293
  br label %if.end52, !dbg !9293

if.end52:                                         ; preds = %if.then51, %if.then49
  %69 = load i32, i32* %ret, align 4, !dbg !9294
  store i32 %69, i32* %retval, align 4, !dbg !9295
  br label %return, !dbg !9295

if.end53:                                         ; preds = %if.else
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then41
  %70 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9296
  store %struct.AVIOContext* %70, %struct.AVIOContext** %s.addr.i86, align 8, !dbg !9297
  %71 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i86, align 8, !dbg !9298
  %call.i87 = call i64 @avio_seek(%struct.AVIOContext* %71, i64 0, i32 1) #8, !dbg !9299
  %72 = load i64, i64* %klv_end, align 8, !dbg !9300
  %cmp56 = icmp ugt i64 %call.i87, %72, !dbg !9301
  br i1 %cmp56, label %if.then58, label %if.else64, !dbg !9302

if.then58:                                        ; preds = %if.end54
  %73 = load i32, i32* %ctx_size.addr, align 4, !dbg !9303
  %tobool59 = icmp ne i32 %73, 0, !dbg !9303
  br i1 %tobool59, label %if.then60, label %if.end62, !dbg !9306

if.then60:                                        ; preds = %if.then58
  %74 = load i32, i32* %type.addr, align 4, !dbg !9307
  %75 = load %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %ctx, align 8, !dbg !9309
  %type61 = getelementptr inbounds %struct.MXFMetadataSet, %struct.MXFMetadataSet* %75, i32 0, i32 1, !dbg !9310
  store i32 %74, i32* %type61, align 4, !dbg !9311
  call void @mxf_free_metadataset(%struct.MXFMetadataSet** %ctx, i32 1), !dbg !9312
  br label %if.end62, !dbg !9313

if.end62:                                         ; preds = %if.then60, %if.then58
  %76 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !9314
  %fc63 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %76, i32 0, i32 10, !dbg !9315
  %77 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc63, align 8, !dbg !9315
  %78 = bitcast %struct.AVFormatContext* %77 to i8*, !dbg !9314
  %79 = load i32, i32* %tag, align 4, !dbg !9316
  %80 = load %struct.KLVPacket*, %struct.KLVPacket** %klv.addr, align 8, !dbg !9317
  %offset = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %80, i32 0, i32 1, !dbg !9318
  %81 = load i64, i64* %offset, align 8, !dbg !9318
  call void (i8*, i32, i8*, ...) @av_log(i8* %78, i32 16, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.63, i32 0, i32 0), i32 %79, i64 %81), !dbg !9319
  store i32 -1094995529, i32* %retval, align 4, !dbg !9320
  br label %return, !dbg !9320

if.else64:                                        ; preds = %if.end54
  %82 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9321
  store %struct.AVIOContext* %82, %struct.AVIOContext** %s.addr.i88, align 8, !dbg !9322
  %83 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i88, align 8, !dbg !9323
  %call.i89 = call i64 @avio_seek(%struct.AVIOContext* %83, i64 0, i32 1) #8, !dbg !9324
  %84 = load i64, i64* %next, align 8, !dbg !9325
  %cmp66 = icmp ule i64 %call.i89, %84, !dbg !9326
  br i1 %cmp66, label %if.then68, label %if.end70, !dbg !9327

if.then68:                                        ; preds = %if.else64
  %85 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !9328
  %86 = load i64, i64* %next, align 8, !dbg !9329
  %call69 = call i64 @avio_seek(%struct.AVIOContext* %85, i64 %86, i32 0), !dbg !9330
  br label %if.end70, !dbg !9330

if.end70:                                         ; preds = %if.then68, %if.else64
  br label %if.end71

if.end71:                                         ; preds = %if.end70
  br label %while.cond, !dbg !9331, !llvm.loop !9204

while.end:                                        ; preds = %land.end
  %87 = load i32, i32* %ctx_size.addr, align 4, !dbg !9333
  %tobool72 = icmp ne i32 %87, 0, !dbg !9333
  br i1 %tobool72, label %if.then73, label %if.end75, !dbg !9335

if.then73:                                        ; preds = %while.end
  %88 = load i32, i32* %type.addr, align 4, !dbg !9336
  %89 = load %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %ctx, align 8, !dbg !9338
  %type74 = getelementptr inbounds %struct.MXFMetadataSet, %struct.MXFMetadataSet* %89, i32 0, i32 1, !dbg !9339
  store i32 %88, i32* %type74, align 4, !dbg !9340
  br label %if.end75, !dbg !9338

if.end75:                                         ; preds = %if.then73, %while.end
  %90 = load i32, i32* %ctx_size.addr, align 4, !dbg !9341
  %tobool76 = icmp ne i32 %90, 0, !dbg !9341
  br i1 %tobool76, label %cond.true77, label %cond.false79, !dbg !9341

cond.true77:                                      ; preds = %if.end75
  %91 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !9342
  %92 = load %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %ctx, align 8, !dbg !9343
  %93 = bitcast %struct.MXFMetadataSet* %92 to i8*, !dbg !9343
  %call78 = call i32 @mxf_add_metadata_set(%struct.MXFContext* %91, i8* %93), !dbg !9344
  br label %cond.end80, !dbg !9345

cond.false79:                                     ; preds = %if.end75
  br label %cond.end80, !dbg !9346

cond.end80:                                       ; preds = %cond.false79, %cond.true77
  %cond81 = phi i32 [ %call78, %cond.true77 ], [ 0, %cond.false79 ], !dbg !9347
  store i32 %cond81, i32* %retval, align 4, !dbg !9348
  br label %return, !dbg !9348

return:                                           ; preds = %cond.end80, %if.end62, %if.end52, %if.then
  %94 = load i32, i32* %retval, align 4, !dbg !9349
  ret i32 %94, !dbg !9349
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_metadataset_init(%struct.MXFMetadataSet* %ctx, i32 %type) #0 !dbg !9350 {
entry:
  %ctx.addr = alloca %struct.MXFMetadataSet*, align 8
  %type.addr = alloca i32, align 4
  store %struct.MXFMetadataSet* %ctx, %struct.MXFMetadataSet** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFMetadataSet** %ctx.addr, metadata !9353, metadata !2511), !dbg !9354
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !9355, metadata !2511), !dbg !9356
  %0 = load i32, i32* %type.addr, align 4, !dbg !9357
  switch i32 %0, label %sw.default [
    i32 7, label %sw.bb
    i32 8, label %sw.bb
  ], !dbg !9358

sw.bb:                                            ; preds = %entry, %entry
  %1 = load %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %ctx.addr, align 8, !dbg !9359
  %2 = bitcast %struct.MXFMetadataSet* %1 to %struct.MXFDescriptor*, !dbg !9361
  %pix_fmt = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %2, i32 0, i32 23, !dbg !9361
  store i32 -1, i32* %pix_fmt, align 4, !dbg !9362
  %3 = load %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %ctx.addr, align 8, !dbg !9363
  %4 = bitcast %struct.MXFMetadataSet* %3 to %struct.MXFDescriptor*, !dbg !9364
  %duration = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %4, i32 0, i32 14, !dbg !9364
  store i64 -9223372036854775808, i64* %duration, align 8, !dbg !9365
  br label %sw.epilog, !dbg !9366

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !9367

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  ret i32 0, !dbg !9368
}

; Function Attrs: nounwind uwtable
define internal void @mxf_free_metadataset(%struct.MXFMetadataSet** %ctx, i32 %freectx) #0 !dbg !9369 {
entry:
  %ctx.addr = alloca %struct.MXFMetadataSet**, align 8
  %freectx.addr = alloca i32, align 4
  %seg = alloca %struct.MXFIndexTableSegment*, align 8
  store %struct.MXFMetadataSet** %ctx, %struct.MXFMetadataSet*** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFMetadataSet*** %ctx.addr, metadata !9372, metadata !2511), !dbg !9373
  store i32 %freectx, i32* %freectx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %freectx.addr, metadata !9374, metadata !2511), !dbg !9375
  call void @llvm.dbg.declare(metadata %struct.MXFIndexTableSegment** %seg, metadata !9376, metadata !2511), !dbg !9377
  %0 = load %struct.MXFMetadataSet**, %struct.MXFMetadataSet*** %ctx.addr, align 8, !dbg !9378
  %1 = load %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %0, align 8, !dbg !9379
  %type = getelementptr inbounds %struct.MXFMetadataSet, %struct.MXFMetadataSet* %1, i32 0, i32 1, !dbg !9380
  %2 = load i32, i32* %type, align 4, !dbg !9380
  switch i32 %2, label %sw.default [
    i32 8, label %sw.bb
    i32 7, label %sw.bb1
    i32 6, label %sw.bb2
    i32 17, label %sw.bb3
    i32 2, label %sw.bb5
    i32 1, label %sw.bb5
    i32 18, label %sw.bb6
    i32 9, label %sw.bb8
    i32 15, label %sw.bb10
  ], !dbg !9381

sw.bb:                                            ; preds = %entry
  %3 = load %struct.MXFMetadataSet**, %struct.MXFMetadataSet*** %ctx.addr, align 8, !dbg !9382
  %4 = load %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %3, align 8, !dbg !9384
  %5 = bitcast %struct.MXFMetadataSet* %4 to %struct.MXFDescriptor*, !dbg !9385
  %extradata = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %5, i32 0, i32 21, !dbg !9385
  %6 = bitcast i8** %extradata to i8*, !dbg !9386
  call void @av_freep(i8* %6), !dbg !9387
  br label %sw.epilog, !dbg !9388

sw.bb1:                                           ; preds = %entry
  %7 = load %struct.MXFMetadataSet**, %struct.MXFMetadataSet*** %ctx.addr, align 8, !dbg !9389
  %8 = load %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %7, align 8, !dbg !9390
  %9 = bitcast %struct.MXFMetadataSet* %8 to %struct.MXFDescriptor*, !dbg !9391
  %sub_descriptors_refs = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %9, i32 0, i32 18, !dbg !9391
  %10 = bitcast [16 x i8]** %sub_descriptors_refs to i8*, !dbg !9392
  call void @av_freep(i8* %10), !dbg !9393
  br label %sw.epilog, !dbg !9394

sw.bb2:                                           ; preds = %entry
  %11 = load %struct.MXFMetadataSet**, %struct.MXFMetadataSet*** %ctx.addr, align 8, !dbg !9395
  %12 = load %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %11, align 8, !dbg !9396
  %13 = bitcast %struct.MXFMetadataSet* %12 to %struct.MXFSequence*, !dbg !9397
  %structural_components_refs = getelementptr inbounds %struct.MXFSequence, %struct.MXFSequence* %13, i32 0, i32 3, !dbg !9397
  %14 = bitcast [16 x i8]** %structural_components_refs to i8*, !dbg !9398
  call void @av_freep(i8* %14), !dbg !9399
  br label %sw.epilog, !dbg !9400

sw.bb3:                                           ; preds = %entry
  %15 = load %struct.MXFMetadataSet**, %struct.MXFMetadataSet*** %ctx.addr, align 8, !dbg !9401
  %16 = load %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %15, align 8, !dbg !9402
  %17 = bitcast %struct.MXFMetadataSet* %16 to %struct.MXFEssenceGroup*, !dbg !9403
  %structural_components_refs4 = getelementptr inbounds %struct.MXFEssenceGroup, %struct.MXFEssenceGroup* %17, i32 0, i32 2, !dbg !9403
  %18 = bitcast [16 x i8]** %structural_components_refs4 to i8*, !dbg !9404
  call void @av_freep(i8* %18), !dbg !9405
  br label %sw.epilog, !dbg !9406

sw.bb5:                                           ; preds = %entry, %entry
  %19 = load %struct.MXFMetadataSet**, %struct.MXFMetadataSet*** %ctx.addr, align 8, !dbg !9407
  %20 = load %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %19, align 8, !dbg !9408
  %21 = bitcast %struct.MXFMetadataSet* %20 to %struct.MXFPackage*, !dbg !9409
  %tracks_refs = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %21, i32 0, i32 4, !dbg !9409
  %22 = bitcast [16 x i8]** %tracks_refs to i8*, !dbg !9410
  call void @av_freep(i8* %22), !dbg !9411
  %23 = load %struct.MXFMetadataSet**, %struct.MXFMetadataSet*** %ctx.addr, align 8, !dbg !9412
  %24 = load %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %23, align 8, !dbg !9413
  %25 = bitcast %struct.MXFMetadataSet* %24 to %struct.MXFPackage*, !dbg !9414
  %name = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %25, i32 0, i32 8, !dbg !9414
  %26 = bitcast i8** %name to i8*, !dbg !9415
  call void @av_freep(i8* %26), !dbg !9416
  %27 = load %struct.MXFMetadataSet**, %struct.MXFMetadataSet*** %ctx.addr, align 8, !dbg !9417
  %28 = load %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %27, align 8, !dbg !9418
  %29 = bitcast %struct.MXFMetadataSet* %28 to %struct.MXFPackage*, !dbg !9419
  %comment_refs = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %29, i32 0, i32 9, !dbg !9419
  %30 = bitcast [16 x i8]** %comment_refs to i8*, !dbg !9420
  call void @av_freep(i8* %30), !dbg !9421
  br label %sw.epilog, !dbg !9422

sw.bb6:                                           ; preds = %entry
  %31 = load %struct.MXFMetadataSet**, %struct.MXFMetadataSet*** %ctx.addr, align 8, !dbg !9423
  %32 = load %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %31, align 8, !dbg !9424
  %33 = bitcast %struct.MXFMetadataSet* %32 to %struct.MXFTaggedValue*, !dbg !9425
  %name7 = getelementptr inbounds %struct.MXFTaggedValue, %struct.MXFTaggedValue* %33, i32 0, i32 2, !dbg !9425
  %34 = bitcast i8** %name7 to i8*, !dbg !9426
  call void @av_freep(i8* %34), !dbg !9427
  %35 = load %struct.MXFMetadataSet**, %struct.MXFMetadataSet*** %ctx.addr, align 8, !dbg !9428
  %36 = load %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %35, align 8, !dbg !9429
  %37 = bitcast %struct.MXFMetadataSet* %36 to %struct.MXFTaggedValue*, !dbg !9430
  %value = getelementptr inbounds %struct.MXFTaggedValue, %struct.MXFTaggedValue* %37, i32 0, i32 3, !dbg !9430
  %38 = bitcast i8** %value to i8*, !dbg !9431
  call void @av_freep(i8* %38), !dbg !9432
  br label %sw.epilog, !dbg !9433

sw.bb8:                                           ; preds = %entry
  %39 = load %struct.MXFMetadataSet**, %struct.MXFMetadataSet*** %ctx.addr, align 8, !dbg !9434
  %40 = load %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %39, align 8, !dbg !9435
  %41 = bitcast %struct.MXFMetadataSet* %40 to %struct.MXFTrack*, !dbg !9436
  %name9 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %41, i32 0, i32 5, !dbg !9436
  %42 = bitcast i8** %name9 to i8*, !dbg !9437
  call void @av_freep(i8* %42), !dbg !9438
  br label %sw.epilog, !dbg !9439

sw.bb10:                                          ; preds = %entry
  %43 = load %struct.MXFMetadataSet**, %struct.MXFMetadataSet*** %ctx.addr, align 8, !dbg !9440
  %44 = load %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %43, align 8, !dbg !9441
  %45 = bitcast %struct.MXFMetadataSet* %44 to %struct.MXFIndexTableSegment*, !dbg !9442
  store %struct.MXFIndexTableSegment* %45, %struct.MXFIndexTableSegment** %seg, align 8, !dbg !9443
  %46 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %seg, align 8, !dbg !9444
  %temporal_offset_entries = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %46, i32 0, i32 8, !dbg !9445
  %47 = bitcast i8** %temporal_offset_entries to i8*, !dbg !9446
  call void @av_freep(i8* %47), !dbg !9447
  %48 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %seg, align 8, !dbg !9448
  %flag_entries = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %48, i32 0, i32 9, !dbg !9449
  %49 = bitcast i32** %flag_entries to i8*, !dbg !9450
  call void @av_freep(i8* %49), !dbg !9451
  %50 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %seg, align 8, !dbg !9452
  %stream_offset_entries = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %50, i32 0, i32 10, !dbg !9453
  %51 = bitcast i64** %stream_offset_entries to i8*, !dbg !9454
  call void @av_freep(i8* %51), !dbg !9455
  br label %sw.default, !dbg !9455

sw.default:                                       ; preds = %entry, %sw.bb10
  br label %sw.epilog, !dbg !9456

sw.epilog:                                        ; preds = %sw.default, %sw.bb8, %sw.bb6, %sw.bb5, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %52 = load i32, i32* %freectx.addr, align 4, !dbg !9457
  %tobool = icmp ne i32 %52, 0, !dbg !9457
  br i1 %tobool, label %if.then, label %if.end, !dbg !9459

if.then:                                          ; preds = %sw.epilog
  %53 = load %struct.MXFMetadataSet**, %struct.MXFMetadataSet*** %ctx.addr, align 8, !dbg !9460
  %54 = bitcast %struct.MXFMetadataSet** %53 to i8*, !dbg !9460
  call void @av_freep(i8* %54), !dbg !9461
  br label %if.end, !dbg !9461

if.end:                                           ; preds = %if.then, %sw.epilog
  ret void, !dbg !9462
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_add_metadata_set(%struct.MXFContext* %mxf, i8* %metadata_set) #0 !dbg !9463 {
entry:
  %retval = alloca i32, align 4
  %mxf.addr = alloca %struct.MXFContext*, align 8
  %metadata_set.addr = alloca i8*, align 8
  %tmp = alloca %struct.MXFMetadataSet**, align 8
  store %struct.MXFContext* %mxf, %struct.MXFContext** %mxf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf.addr, metadata !9466, metadata !2511), !dbg !9467
  store i8* %metadata_set, i8** %metadata_set.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %metadata_set.addr, metadata !9468, metadata !2511), !dbg !9469
  call void @llvm.dbg.declare(metadata %struct.MXFMetadataSet*** %tmp, metadata !9470, metadata !2511), !dbg !9471
  %0 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !9472
  %metadata_sets = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %0, i32 0, i32 8, !dbg !9473
  %1 = load %struct.MXFMetadataSet**, %struct.MXFMetadataSet*** %metadata_sets, align 8, !dbg !9473
  %2 = bitcast %struct.MXFMetadataSet** %1 to i8*, !dbg !9472
  %3 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !9474
  %metadata_sets_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %3, i32 0, i32 9, !dbg !9475
  %4 = load i32, i32* %metadata_sets_count, align 8, !dbg !9475
  %add = add nsw i32 %4, 1, !dbg !9476
  %conv = sext i32 %add to i64, !dbg !9474
  %call = call i8* @av_realloc_array(i8* %2, i64 %conv, i64 8), !dbg !9477
  %5 = bitcast i8* %call to %struct.MXFMetadataSet**, !dbg !9477
  store %struct.MXFMetadataSet** %5, %struct.MXFMetadataSet*** %tmp, align 8, !dbg !9478
  %6 = load %struct.MXFMetadataSet**, %struct.MXFMetadataSet*** %tmp, align 8, !dbg !9479
  %tobool = icmp ne %struct.MXFMetadataSet** %6, null, !dbg !9479
  br i1 %tobool, label %if.end, label %if.then, !dbg !9481

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !9482
  br label %return, !dbg !9482

if.end:                                           ; preds = %entry
  %7 = load %struct.MXFMetadataSet**, %struct.MXFMetadataSet*** %tmp, align 8, !dbg !9483
  %8 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !9484
  %metadata_sets1 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %8, i32 0, i32 8, !dbg !9485
  store %struct.MXFMetadataSet** %7, %struct.MXFMetadataSet*** %metadata_sets1, align 8, !dbg !9486
  %9 = load i8*, i8** %metadata_set.addr, align 8, !dbg !9487
  %10 = bitcast i8* %9 to %struct.MXFMetadataSet*, !dbg !9487
  %11 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !9488
  %metadata_sets_count2 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %11, i32 0, i32 9, !dbg !9489
  %12 = load i32, i32* %metadata_sets_count2, align 8, !dbg !9489
  %idxprom = sext i32 %12 to i64, !dbg !9490
  %13 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !9490
  %metadata_sets3 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %13, i32 0, i32 8, !dbg !9491
  %14 = load %struct.MXFMetadataSet**, %struct.MXFMetadataSet*** %metadata_sets3, align 8, !dbg !9491
  %arrayidx = getelementptr inbounds %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %14, i64 %idxprom, !dbg !9490
  store %struct.MXFMetadataSet* %10, %struct.MXFMetadataSet** %arrayidx, align 8, !dbg !9492
  %15 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !9493
  %metadata_sets_count4 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %15, i32 0, i32 9, !dbg !9494
  %16 = load i32, i32* %metadata_sets_count4, align 8, !dbg !9495
  %inc = add nsw i32 %16, 1, !dbg !9495
  store i32 %inc, i32* %metadata_sets_count4, align 8, !dbg !9495
  store i32 0, i32* %retval, align 4, !dbg !9496
  br label %return, !dbg !9496

return:                                           ; preds = %if.end, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !9497
  ret i32 %17, !dbg !9497
}

; Function Attrs: nounwind uwtable
define internal i8* @mxf_resolve_strong_ref(%struct.MXFContext* %mxf, [16 x i8]* %strong_ref, i32 %type) #0 !dbg !9498 {
entry:
  %retval = alloca i8*, align 8
  %mxf.addr = alloca %struct.MXFContext*, align 8
  %strong_ref.addr = alloca [16 x i8]*, align 8
  %type.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.MXFContext* %mxf, %struct.MXFContext** %mxf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf.addr, metadata !9501, metadata !2511), !dbg !9502
  store [16 x i8]* %strong_ref, [16 x i8]** %strong_ref.addr, align 8
  call void @llvm.dbg.declare(metadata [16 x i8]** %strong_ref.addr, metadata !9503, metadata !2511), !dbg !9504
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !9505, metadata !2511), !dbg !9506
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9507, metadata !2511), !dbg !9508
  %0 = load [16 x i8]*, [16 x i8]** %strong_ref.addr, align 8, !dbg !9509
  %tobool = icmp ne [16 x i8]* %0, null, !dbg !9509
  br i1 %tobool, label %if.end, label %if.then, !dbg !9511

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !9512
  br label %return, !dbg !9512

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !9513
  br label %for.cond, !dbg !9515

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load i32, i32* %i, align 4, !dbg !9516
  %2 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !9519
  %metadata_sets_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %2, i32 0, i32 9, !dbg !9520
  %3 = load i32, i32* %metadata_sets_count, align 8, !dbg !9520
  %cmp = icmp slt i32 %1, %3, !dbg !9521
  br i1 %cmp, label %for.body, label %for.end, !dbg !9522

for.body:                                         ; preds = %for.cond
  %4 = load [16 x i8]*, [16 x i8]** %strong_ref.addr, align 8, !dbg !9523
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !9526
  %5 = load i32, i32* %i, align 4, !dbg !9527
  %idxprom = sext i32 %5 to i64, !dbg !9528
  %6 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !9528
  %metadata_sets = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %6, i32 0, i32 8, !dbg !9529
  %7 = load %struct.MXFMetadataSet**, %struct.MXFMetadataSet*** %metadata_sets, align 8, !dbg !9529
  %arrayidx = getelementptr inbounds %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %7, i64 %idxprom, !dbg !9528
  %8 = load %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %arrayidx, align 8, !dbg !9528
  %uid = getelementptr inbounds %struct.MXFMetadataSet, %struct.MXFMetadataSet* %8, i32 0, i32 0, !dbg !9530
  %arraydecay1 = getelementptr inbounds [16 x i8], [16 x i8]* %uid, i32 0, i32 0, !dbg !9528
  %call = call i32 @memcmp(i8* %arraydecay, i8* %arraydecay1, i64 16) #9, !dbg !9531
  %tobool2 = icmp ne i32 %call, 0, !dbg !9531
  br i1 %tobool2, label %if.end13, label %land.lhs.true, !dbg !9532

land.lhs.true:                                    ; preds = %for.body
  %9 = load i32, i32* %type.addr, align 4, !dbg !9533
  %cmp3 = icmp eq i32 %9, 0, !dbg !9534
  br i1 %cmp3, label %if.then9, label %lor.lhs.false, !dbg !9535

lor.lhs.false:                                    ; preds = %land.lhs.true
  %10 = load i32, i32* %i, align 4, !dbg !9536
  %idxprom4 = sext i32 %10 to i64, !dbg !9538
  %11 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !9538
  %metadata_sets5 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %11, i32 0, i32 8, !dbg !9539
  %12 = load %struct.MXFMetadataSet**, %struct.MXFMetadataSet*** %metadata_sets5, align 8, !dbg !9539
  %arrayidx6 = getelementptr inbounds %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %12, i64 %idxprom4, !dbg !9538
  %13 = load %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %arrayidx6, align 8, !dbg !9538
  %type7 = getelementptr inbounds %struct.MXFMetadataSet, %struct.MXFMetadataSet* %13, i32 0, i32 1, !dbg !9540
  %14 = load i32, i32* %type7, align 4, !dbg !9540
  %15 = load i32, i32* %type.addr, align 4, !dbg !9541
  %cmp8 = icmp eq i32 %14, %15, !dbg !9542
  br i1 %cmp8, label %if.then9, label %if.end13, !dbg !9543

if.then9:                                         ; preds = %lor.lhs.false, %land.lhs.true
  %16 = load i32, i32* %i, align 4, !dbg !9545
  %idxprom10 = sext i32 %16 to i64, !dbg !9547
  %17 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !9547
  %metadata_sets11 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %17, i32 0, i32 8, !dbg !9548
  %18 = load %struct.MXFMetadataSet**, %struct.MXFMetadataSet*** %metadata_sets11, align 8, !dbg !9548
  %arrayidx12 = getelementptr inbounds %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %18, i64 %idxprom10, !dbg !9547
  %19 = load %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %arrayidx12, align 8, !dbg !9547
  %20 = bitcast %struct.MXFMetadataSet* %19 to i8*, !dbg !9547
  store i8* %20, i8** %retval, align 8, !dbg !9549
  br label %return, !dbg !9549

if.end13:                                         ; preds = %lor.lhs.false, %for.body
  br label %for.inc, !dbg !9550

for.inc:                                          ; preds = %if.end13
  %21 = load i32, i32* %i, align 4, !dbg !9551
  %inc = add nsw i32 %21, 1, !dbg !9551
  store i32 %inc, i32* %i, align 4, !dbg !9551
  br label %for.cond, !dbg !9553, !llvm.loop !9554

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !9556
  br label %return, !dbg !9556

return:                                           ; preds = %for.end, %if.then9, %if.then
  %22 = load i8*, i8** %retval, align 8, !dbg !9557
  ret i8* %22, !dbg !9557
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_add_umid_metadata(%struct.AVDictionary** %pm, i8* %key, %struct.MXFPackage* %package) #0 !dbg !9558 {
entry:
  %retval = alloca i32, align 4
  %pm.addr = alloca %struct.AVDictionary**, align 8
  %key.addr = alloca i8*, align 8
  %package.addr = alloca %struct.MXFPackage*, align 8
  %str = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.AVDictionary** %pm, %struct.AVDictionary*** %pm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVDictionary*** %pm.addr, metadata !9561, metadata !2511), !dbg !9562
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !9563, metadata !2511), !dbg !9564
  store %struct.MXFPackage* %package, %struct.MXFPackage** %package.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFPackage** %package.addr, metadata !9565, metadata !2511), !dbg !9566
  call void @llvm.dbg.declare(metadata i8** %str, metadata !9567, metadata !2511), !dbg !9568
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9569, metadata !2511), !dbg !9570
  %0 = load %struct.MXFPackage*, %struct.MXFPackage** %package.addr, align 8, !dbg !9571
  %tobool = icmp ne %struct.MXFPackage* %0, null, !dbg !9571
  br i1 %tobool, label %if.end, label %if.then, !dbg !9573

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !9574
  br label %return, !dbg !9574

if.end:                                           ; preds = %entry
  %1 = load %struct.MXFPackage*, %struct.MXFPackage** %package.addr, align 8, !dbg !9575
  %package_ul = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %1, i32 0, i32 3, !dbg !9577
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %package_ul, i32 0, i32 0, !dbg !9575
  %2 = load %struct.MXFPackage*, %struct.MXFPackage** %package.addr, align 8, !dbg !9578
  %package_uid = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %2, i32 0, i32 2, !dbg !9579
  %arraydecay1 = getelementptr inbounds [16 x i8], [16 x i8]* %package_uid, i32 0, i32 0, !dbg !9578
  %call = call i32 @mxf_umid_to_str(i8* %arraydecay, i8* %arraydecay1, i8** %str), !dbg !9580
  store i32 %call, i32* %ret, align 4, !dbg !9581
  %cmp = icmp slt i32 %call, 0, !dbg !9582
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !9583

if.then2:                                         ; preds = %if.end
  %3 = load i32, i32* %ret, align 4, !dbg !9584
  store i32 %3, i32* %retval, align 4, !dbg !9585
  br label %return, !dbg !9585

if.end3:                                          ; preds = %if.end
  %4 = load %struct.AVDictionary**, %struct.AVDictionary*** %pm.addr, align 8, !dbg !9586
  %5 = load i8*, i8** %key.addr, align 8, !dbg !9587
  %6 = load i8*, i8** %str, align 8, !dbg !9588
  %call4 = call i32 @av_dict_set(%struct.AVDictionary** %4, i8* %5, i8* %6, i32 8), !dbg !9589
  store i32 0, i32* %retval, align 4, !dbg !9590
  br label %return, !dbg !9590

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !9591
  ret i32 %7, !dbg !9591
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_parse_package_comments(%struct.MXFContext* %mxf, %struct.AVDictionary** %pm, %struct.MXFPackage* %package) #0 !dbg !9592 {
entry:
  %retval = alloca i32, align 4
  %mxf.addr = alloca %struct.MXFContext*, align 8
  %pm.addr = alloca %struct.AVDictionary**, align 8
  %package.addr = alloca %struct.MXFPackage*, align 8
  %tag = alloca %struct.MXFTaggedValue*, align 8
  %size = alloca i32, align 4
  %i = alloca i32, align 4
  %key = alloca i8*, align 8
  store %struct.MXFContext* %mxf, %struct.MXFContext** %mxf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf.addr, metadata !9595, metadata !2511), !dbg !9596
  store %struct.AVDictionary** %pm, %struct.AVDictionary*** %pm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVDictionary*** %pm.addr, metadata !9597, metadata !2511), !dbg !9598
  store %struct.MXFPackage* %package, %struct.MXFPackage** %package.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFPackage** %package.addr, metadata !9599, metadata !2511), !dbg !9600
  call void @llvm.dbg.declare(metadata %struct.MXFTaggedValue** %tag, metadata !9601, metadata !2511), !dbg !9602
  call void @llvm.dbg.declare(metadata i32* %size, metadata !9603, metadata !2511), !dbg !9604
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9605, metadata !2511), !dbg !9606
  call void @llvm.dbg.declare(metadata i8** %key, metadata !9607, metadata !2511), !dbg !9608
  store i8* null, i8** %key, align 8, !dbg !9608
  store i32 0, i32* %i, align 4, !dbg !9609
  br label %for.cond, !dbg !9611

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9612
  %1 = load %struct.MXFPackage*, %struct.MXFPackage** %package.addr, align 8, !dbg !9615
  %comment_count = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %1, i32 0, i32 10, !dbg !9616
  %2 = load i32, i32* %comment_count, align 8, !dbg !9616
  %cmp = icmp slt i32 %0, %2, !dbg !9617
  br i1 %cmp, label %for.body, label %for.end, !dbg !9618

for.body:                                         ; preds = %for.cond
  %3 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !9619
  %4 = load i32, i32* %i, align 4, !dbg !9621
  %idxprom = sext i32 %4 to i64, !dbg !9622
  %5 = load %struct.MXFPackage*, %struct.MXFPackage** %package.addr, align 8, !dbg !9622
  %comment_refs = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %5, i32 0, i32 9, !dbg !9623
  %6 = load [16 x i8]*, [16 x i8]** %comment_refs, align 8, !dbg !9623
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 %idxprom, !dbg !9622
  %call = call i8* @mxf_resolve_strong_ref(%struct.MXFContext* %3, [16 x i8]* %arrayidx, i32 18), !dbg !9624
  %7 = bitcast i8* %call to %struct.MXFTaggedValue*, !dbg !9624
  store %struct.MXFTaggedValue* %7, %struct.MXFTaggedValue** %tag, align 8, !dbg !9625
  %8 = load %struct.MXFTaggedValue*, %struct.MXFTaggedValue** %tag, align 8, !dbg !9626
  %tobool = icmp ne %struct.MXFTaggedValue* %8, null, !dbg !9626
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !9628

lor.lhs.false:                                    ; preds = %for.body
  %9 = load %struct.MXFTaggedValue*, %struct.MXFTaggedValue** %tag, align 8, !dbg !9629
  %name = getelementptr inbounds %struct.MXFTaggedValue, %struct.MXFTaggedValue* %9, i32 0, i32 2, !dbg !9631
  %10 = load i8*, i8** %name, align 8, !dbg !9631
  %tobool1 = icmp ne i8* %10, null, !dbg !9629
  br i1 %tobool1, label %lor.lhs.false2, label %if.then, !dbg !9632

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %11 = load %struct.MXFTaggedValue*, %struct.MXFTaggedValue** %tag, align 8, !dbg !9633
  %value = getelementptr inbounds %struct.MXFTaggedValue, %struct.MXFTaggedValue* %11, i32 0, i32 3, !dbg !9635
  %12 = load i8*, i8** %value, align 8, !dbg !9635
  %tobool3 = icmp ne i8* %12, null, !dbg !9633
  br i1 %tobool3, label %if.end, label %if.then, !dbg !9636

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %for.body
  br label %for.inc, !dbg !9637

if.end:                                           ; preds = %lor.lhs.false2
  %13 = load %struct.MXFTaggedValue*, %struct.MXFTaggedValue** %tag, align 8, !dbg !9638
  %name4 = getelementptr inbounds %struct.MXFTaggedValue, %struct.MXFTaggedValue* %13, i32 0, i32 2, !dbg !9639
  %14 = load i8*, i8** %name4, align 8, !dbg !9639
  %call5 = call i64 @strlen(i8* %14) #9, !dbg !9640
  %add = add i64 %call5, 8, !dbg !9641
  %add6 = add i64 %add, 1, !dbg !9642
  %conv = trunc i64 %add6 to i32, !dbg !9640
  store i32 %conv, i32* %size, align 4, !dbg !9643
  %15 = load i32, i32* %size, align 4, !dbg !9644
  %conv7 = sext i32 %15 to i64, !dbg !9644
  %call8 = call noalias i8* @av_mallocz(i64 %conv7), !dbg !9645
  store i8* %call8, i8** %key, align 8, !dbg !9646
  %16 = load i8*, i8** %key, align 8, !dbg !9647
  %tobool9 = icmp ne i8* %16, null, !dbg !9647
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !9649

if.then10:                                        ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !9650
  br label %return, !dbg !9650

if.end11:                                         ; preds = %if.end
  %17 = load i8*, i8** %key, align 8, !dbg !9651
  %18 = load i32, i32* %size, align 4, !dbg !9652
  %conv12 = sext i32 %18 to i64, !dbg !9652
  %19 = load %struct.MXFTaggedValue*, %struct.MXFTaggedValue** %tag, align 8, !dbg !9653
  %name13 = getelementptr inbounds %struct.MXFTaggedValue, %struct.MXFTaggedValue* %19, i32 0, i32 2, !dbg !9654
  %20 = load i8*, i8** %name13, align 8, !dbg !9654
  %call14 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %17, i64 %conv12, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.100, i32 0, i32 0), i8* %20) #8, !dbg !9655
  %21 = load %struct.AVDictionary**, %struct.AVDictionary*** %pm.addr, align 8, !dbg !9656
  %22 = load i8*, i8** %key, align 8, !dbg !9657
  %23 = load %struct.MXFTaggedValue*, %struct.MXFTaggedValue** %tag, align 8, !dbg !9658
  %value15 = getelementptr inbounds %struct.MXFTaggedValue, %struct.MXFTaggedValue* %23, i32 0, i32 3, !dbg !9659
  %24 = load i8*, i8** %value15, align 8, !dbg !9659
  %call16 = call i32 @av_dict_set(%struct.AVDictionary** %21, i8* %22, i8* %24, i32 4), !dbg !9660
  br label %for.inc, !dbg !9661

for.inc:                                          ; preds = %if.end11, %if.then
  %25 = load i32, i32* %i, align 4, !dbg !9662
  %inc = add nsw i32 %25, 1, !dbg !9662
  store i32 %inc, i32* %i, align 4, !dbg !9662
  br label %for.cond, !dbg !9664, !llvm.loop !9665

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !9667
  br label %return, !dbg !9667

return:                                           ; preds = %for.end, %if.then10
  %26 = load i32, i32* %retval, align 4, !dbg !9668
  ret i32 %26, !dbg !9668
}

declare i32 @av_timecode_init(%struct.AVTimecode*, i64, i32, i32, i8*) #1

; Function Attrs: nounwind uwtable
define internal i32 @mxf_add_timecode_metadata(%struct.AVDictionary** %pm, i8* %key, %struct.AVTimecode* %tc) #0 !dbg !9669 {
entry:
  %pm.addr = alloca %struct.AVDictionary**, align 8
  %key.addr = alloca i8*, align 8
  %tc.addr = alloca %struct.AVTimecode*, align 8
  %buf = alloca [23 x i8], align 16
  store %struct.AVDictionary** %pm, %struct.AVDictionary*** %pm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVDictionary*** %pm.addr, metadata !9673, metadata !2511), !dbg !9674
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !9675, metadata !2511), !dbg !9676
  store %struct.AVTimecode* %tc, %struct.AVTimecode** %tc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVTimecode** %tc.addr, metadata !9677, metadata !2511), !dbg !9678
  call void @llvm.dbg.declare(metadata [23 x i8]* %buf, metadata !9679, metadata !2511), !dbg !9683
  %0 = load %struct.AVDictionary**, %struct.AVDictionary*** %pm.addr, align 8, !dbg !9684
  %1 = load i8*, i8** %key.addr, align 8, !dbg !9685
  %2 = load %struct.AVTimecode*, %struct.AVTimecode** %tc.addr, align 8, !dbg !9686
  %arraydecay = getelementptr inbounds [23 x i8], [23 x i8]* %buf, i32 0, i32 0, !dbg !9687
  %call = call i8* @av_timecode_make_string(%struct.AVTimecode* %2, i8* %arraydecay, i32 0), !dbg !9688
  %call1 = call i32 @av_dict_set(%struct.AVDictionary** %0, i8* %1, i8* %call, i32 0), !dbg !9689
  ret i32 0, !dbg !9691
}

; Function Attrs: nounwind uwtable
define internal %struct.MXFStructuralComponent* @mxf_resolve_sourceclip(%struct.MXFContext* %mxf, [16 x i8]* %strong_ref) #0 !dbg !9692 {
entry:
  %retval = alloca %struct.MXFStructuralComponent*, align 8
  %mxf.addr = alloca %struct.MXFContext*, align 8
  %strong_ref.addr = alloca [16 x i8]*, align 8
  %component = alloca %struct.MXFStructuralComponent*, align 8
  store %struct.MXFContext* %mxf, %struct.MXFContext** %mxf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf.addr, metadata !9695, metadata !2511), !dbg !9696
  store [16 x i8]* %strong_ref, [16 x i8]** %strong_ref.addr, align 8
  call void @llvm.dbg.declare(metadata [16 x i8]** %strong_ref.addr, metadata !9697, metadata !2511), !dbg !9698
  call void @llvm.dbg.declare(metadata %struct.MXFStructuralComponent** %component, metadata !9699, metadata !2511), !dbg !9700
  store %struct.MXFStructuralComponent* null, %struct.MXFStructuralComponent** %component, align 8, !dbg !9700
  %0 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !9701
  %1 = load [16 x i8]*, [16 x i8]** %strong_ref.addr, align 8, !dbg !9702
  %call = call i8* @mxf_resolve_strong_ref(%struct.MXFContext* %0, [16 x i8]* %1, i32 0), !dbg !9703
  %2 = bitcast i8* %call to %struct.MXFStructuralComponent*, !dbg !9703
  store %struct.MXFStructuralComponent* %2, %struct.MXFStructuralComponent** %component, align 8, !dbg !9704
  %3 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %component, align 8, !dbg !9705
  %tobool = icmp ne %struct.MXFStructuralComponent* %3, null, !dbg !9705
  br i1 %tobool, label %if.end, label %if.then, !dbg !9707

if.then:                                          ; preds = %entry
  store %struct.MXFStructuralComponent* null, %struct.MXFStructuralComponent** %retval, align 8, !dbg !9708
  br label %return, !dbg !9708

if.end:                                           ; preds = %entry
  %4 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %component, align 8, !dbg !9709
  %type = getelementptr inbounds %struct.MXFStructuralComponent, %struct.MXFStructuralComponent* %4, i32 0, i32 1, !dbg !9710
  %5 = load i32, i32* %type, align 8, !dbg !9710
  switch i32 %5, label %sw.default [
    i32 3, label %sw.bb
    i32 17, label %sw.bb1
  ], !dbg !9711

sw.bb:                                            ; preds = %if.end
  %6 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %component, align 8, !dbg !9712
  store %struct.MXFStructuralComponent* %6, %struct.MXFStructuralComponent** %retval, align 8, !dbg !9714
  br label %return, !dbg !9714

sw.bb1:                                           ; preds = %if.end
  %7 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !9715
  %8 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %component, align 8, !dbg !9716
  %9 = bitcast %struct.MXFStructuralComponent* %8 to %struct.MXFEssenceGroup*, !dbg !9717
  %call2 = call %struct.MXFStructuralComponent* @mxf_resolve_essence_group_choice(%struct.MXFContext* %7, %struct.MXFEssenceGroup* %9), !dbg !9718
  store %struct.MXFStructuralComponent* %call2, %struct.MXFStructuralComponent** %retval, align 8, !dbg !9719
  br label %return, !dbg !9719

sw.default:                                       ; preds = %if.end
  br label %sw.epilog, !dbg !9720

sw.epilog:                                        ; preds = %sw.default
  store %struct.MXFStructuralComponent* null, %struct.MXFStructuralComponent** %retval, align 8, !dbg !9721
  br label %return, !dbg !9721

return:                                           ; preds = %sw.epilog, %sw.bb1, %sw.bb, %if.then
  %10 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %retval, align 8, !dbg !9722
  ret %struct.MXFStructuralComponent* %10, !dbg !9722
}

; Function Attrs: nounwind uwtable
define internal %struct.MXFPackage* @mxf_resolve_source_package(%struct.MXFContext* %mxf, i8* %package_ul, i8* %package_uid) #0 !dbg !9723 {
entry:
  %retval = alloca %struct.MXFPackage*, align 8
  %mxf.addr = alloca %struct.MXFContext*, align 8
  %package_ul.addr = alloca i8*, align 8
  %package_uid.addr = alloca i8*, align 8
  %package = alloca %struct.MXFPackage*, align 8
  %i = alloca i32, align 4
  store %struct.MXFContext* %mxf, %struct.MXFContext** %mxf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf.addr, metadata !9726, metadata !2511), !dbg !9727
  store i8* %package_ul, i8** %package_ul.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %package_ul.addr, metadata !9728, metadata !2511), !dbg !9729
  store i8* %package_uid, i8** %package_uid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %package_uid.addr, metadata !9730, metadata !2511), !dbg !9731
  call void @llvm.dbg.declare(metadata %struct.MXFPackage** %package, metadata !9732, metadata !2511), !dbg !9733
  store %struct.MXFPackage* null, %struct.MXFPackage** %package, align 8, !dbg !9733
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9734, metadata !2511), !dbg !9735
  store i32 0, i32* %i, align 4, !dbg !9736
  br label %for.cond, !dbg !9738

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9739
  %1 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !9742
  %packages_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %1, i32 0, i32 5, !dbg !9743
  %2 = load i32, i32* %packages_count, align 8, !dbg !9743
  %cmp = icmp slt i32 %0, %2, !dbg !9744
  br i1 %cmp, label %for.body, label %for.end, !dbg !9745

for.body:                                         ; preds = %for.cond
  %3 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !9746
  %4 = load i32, i32* %i, align 4, !dbg !9748
  %idxprom = sext i32 %4 to i64, !dbg !9749
  %5 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !9749
  %packages_refs = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %5, i32 0, i32 4, !dbg !9750
  %6 = load [16 x i8]*, [16 x i8]** %packages_refs, align 8, !dbg !9750
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 %idxprom, !dbg !9749
  %call = call i8* @mxf_resolve_strong_ref(%struct.MXFContext* %3, [16 x i8]* %arrayidx, i32 2), !dbg !9751
  %7 = bitcast i8* %call to %struct.MXFPackage*, !dbg !9751
  store %struct.MXFPackage* %7, %struct.MXFPackage** %package, align 8, !dbg !9752
  %8 = load %struct.MXFPackage*, %struct.MXFPackage** %package, align 8, !dbg !9753
  %tobool = icmp ne %struct.MXFPackage* %8, null, !dbg !9753
  br i1 %tobool, label %if.end, label %if.then, !dbg !9755

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !9756

if.end:                                           ; preds = %for.body
  %9 = load %struct.MXFPackage*, %struct.MXFPackage** %package, align 8, !dbg !9757
  %package_ul1 = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %9, i32 0, i32 3, !dbg !9759
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %package_ul1, i32 0, i32 0, !dbg !9757
  %10 = load i8*, i8** %package_ul.addr, align 8, !dbg !9760
  %call2 = call i32 @memcmp(i8* %arraydecay, i8* %10, i64 16) #9, !dbg !9761
  %tobool3 = icmp ne i32 %call2, 0, !dbg !9761
  br i1 %tobool3, label %if.end9, label %land.lhs.true, !dbg !9762

land.lhs.true:                                    ; preds = %if.end
  %11 = load %struct.MXFPackage*, %struct.MXFPackage** %package, align 8, !dbg !9763
  %package_uid4 = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %11, i32 0, i32 2, !dbg !9765
  %arraydecay5 = getelementptr inbounds [16 x i8], [16 x i8]* %package_uid4, i32 0, i32 0, !dbg !9763
  %12 = load i8*, i8** %package_uid.addr, align 8, !dbg !9766
  %call6 = call i32 @memcmp(i8* %arraydecay5, i8* %12, i64 16) #9, !dbg !9767
  %tobool7 = icmp ne i32 %call6, 0, !dbg !9767
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !9768

if.then8:                                         ; preds = %land.lhs.true
  %13 = load %struct.MXFPackage*, %struct.MXFPackage** %package, align 8, !dbg !9769
  store %struct.MXFPackage* %13, %struct.MXFPackage** %retval, align 8, !dbg !9770
  br label %return, !dbg !9770

if.end9:                                          ; preds = %land.lhs.true, %if.end
  br label %for.inc, !dbg !9771

for.inc:                                          ; preds = %if.end9, %if.then
  %14 = load i32, i32* %i, align 4, !dbg !9772
  %inc = add nsw i32 %14, 1, !dbg !9772
  store i32 %inc, i32* %i, align 4, !dbg !9772
  br label %for.cond, !dbg !9774, !llvm.loop !9775

for.end:                                          ; preds = %for.cond
  store %struct.MXFPackage* null, %struct.MXFPackage** %retval, align 8, !dbg !9777
  br label %return, !dbg !9777

return:                                           ; preds = %for.end, %if.then8
  %15 = load %struct.MXFPackage*, %struct.MXFPackage** %retval, align 8, !dbg !9778
  ret %struct.MXFPackage* %15, !dbg !9778
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_add_metadata_stream(%struct.MXFContext* %mxf, %struct.MXFTrack* %track) #0 !dbg !9779 {
entry:
  %retval = alloca i32, align 4
  %mxf.addr = alloca %struct.MXFContext*, align 8
  %track.addr = alloca %struct.MXFTrack*, align 8
  %component = alloca %struct.MXFStructuralComponent*, align 8
  %codec_ul = alloca %struct.MXFCodecUL*, align 8
  %tmp_package = alloca %struct.MXFPackage, align 8
  %st = alloca %struct.AVStream*, align 8
  %j = alloca i32, align 4
  store %struct.MXFContext* %mxf, %struct.MXFContext** %mxf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf.addr, metadata !9782, metadata !2511), !dbg !9783
  store %struct.MXFTrack* %track, %struct.MXFTrack** %track.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFTrack** %track.addr, metadata !9784, metadata !2511), !dbg !9785
  call void @llvm.dbg.declare(metadata %struct.MXFStructuralComponent** %component, metadata !9786, metadata !2511), !dbg !9787
  store %struct.MXFStructuralComponent* null, %struct.MXFStructuralComponent** %component, align 8, !dbg !9787
  call void @llvm.dbg.declare(metadata %struct.MXFCodecUL** %codec_ul, metadata !9788, metadata !2511), !dbg !9789
  store %struct.MXFCodecUL* null, %struct.MXFCodecUL** %codec_ul, align 8, !dbg !9789
  call void @llvm.dbg.declare(metadata %struct.MXFPackage* %tmp_package, metadata !9790, metadata !2511), !dbg !9791
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !9792, metadata !2511), !dbg !9793
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9794, metadata !2511), !dbg !9795
  store i32 0, i32* %j, align 4, !dbg !9796
  br label %for.cond, !dbg !9798

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %j, align 4, !dbg !9799
  %1 = load %struct.MXFTrack*, %struct.MXFTrack** %track.addr, align 8, !dbg !9802
  %sequence = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %1, i32 0, i32 2, !dbg !9803
  %2 = load %struct.MXFSequence*, %struct.MXFSequence** %sequence, align 8, !dbg !9803
  %structural_components_count = getelementptr inbounds %struct.MXFSequence, %struct.MXFSequence* %2, i32 0, i32 4, !dbg !9804
  %3 = load i32, i32* %structural_components_count, align 8, !dbg !9804
  %cmp = icmp slt i32 %0, %3, !dbg !9805
  br i1 %cmp, label %for.body, label %for.end, !dbg !9806

for.body:                                         ; preds = %for.cond
  %4 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !9807
  %5 = load i32, i32* %j, align 4, !dbg !9809
  %idxprom = sext i32 %5 to i64, !dbg !9810
  %6 = load %struct.MXFTrack*, %struct.MXFTrack** %track.addr, align 8, !dbg !9810
  %sequence1 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %6, i32 0, i32 2, !dbg !9811
  %7 = load %struct.MXFSequence*, %struct.MXFSequence** %sequence1, align 8, !dbg !9811
  %structural_components_refs = getelementptr inbounds %struct.MXFSequence, %struct.MXFSequence* %7, i32 0, i32 3, !dbg !9812
  %8 = load [16 x i8]*, [16 x i8]** %structural_components_refs, align 8, !dbg !9812
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %8, i64 %idxprom, !dbg !9810
  %call = call %struct.MXFStructuralComponent* @mxf_resolve_sourceclip(%struct.MXFContext* %4, [16 x i8]* %arrayidx), !dbg !9813
  store %struct.MXFStructuralComponent* %call, %struct.MXFStructuralComponent** %component, align 8, !dbg !9814
  %9 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %component, align 8, !dbg !9815
  %tobool = icmp ne %struct.MXFStructuralComponent* %9, null, !dbg !9815
  br i1 %tobool, label %if.end, label %if.then, !dbg !9817

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !9818

if.end:                                           ; preds = %for.body
  br label %for.end, !dbg !9819

for.inc:                                          ; preds = %if.then
  %10 = load i32, i32* %j, align 4, !dbg !9820
  %inc = add nsw i32 %10, 1, !dbg !9820
  store i32 %inc, i32* %j, align 4, !dbg !9820
  br label %for.cond, !dbg !9822, !llvm.loop !9823

for.end:                                          ; preds = %if.end, %for.cond
  %11 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %component, align 8, !dbg !9825
  %tobool2 = icmp ne %struct.MXFStructuralComponent* %11, null, !dbg !9825
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !9827

if.then3:                                         ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !9828
  br label %return, !dbg !9828

if.end4:                                          ; preds = %for.end
  %12 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !9829
  %fc = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %12, i32 0, i32 10, !dbg !9830
  %13 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc, align 8, !dbg !9830
  %call5 = call %struct.AVStream* @avformat_new_stream(%struct.AVFormatContext* %13, %struct.AVCodec* null), !dbg !9831
  store %struct.AVStream* %call5, %struct.AVStream** %st, align 8, !dbg !9832
  %14 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9833
  %tobool6 = icmp ne %struct.AVStream* %14, null, !dbg !9833
  br i1 %tobool6, label %if.end9, label %if.then7, !dbg !9835

if.then7:                                         ; preds = %if.end4
  %15 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !9836
  %fc8 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %15, i32 0, i32 10, !dbg !9838
  %16 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc8, align 8, !dbg !9838
  %17 = bitcast %struct.AVFormatContext* %16 to i8*, !dbg !9836
  call void (i8*, i32, i8*, ...) @av_log(i8* %17, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.101, i32 0, i32 0)), !dbg !9839
  store i32 -12, i32* %retval, align 4, !dbg !9840
  br label %return, !dbg !9840

if.end9:                                          ; preds = %if.end4
  %18 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9841
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %18, i32 0, i32 19, !dbg !9842
  %19 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !9842
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %19, i32 0, i32 0, !dbg !9843
  store i32 2, i32* %codec_type, align 8, !dbg !9844
  %20 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9845
  %codecpar10 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %20, i32 0, i32 19, !dbg !9846
  %21 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar10, align 8, !dbg !9846
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %21, i32 0, i32 1, !dbg !9847
  store i32 0, i32* %codec_id, align 4, !dbg !9848
  %22 = load %struct.MXFTrack*, %struct.MXFTrack** %track.addr, align 8, !dbg !9849
  %track_id = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %22, i32 0, i32 4, !dbg !9850
  %23 = load i32, i32* %track_id, align 8, !dbg !9850
  %24 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9851
  %id = getelementptr inbounds %struct.AVStream, %struct.AVStream* %24, i32 0, i32 1, !dbg !9852
  store i32 %23, i32* %id, align 4, !dbg !9853
  %package_ul = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %tmp_package, i32 0, i32 3, !dbg !9854
  %25 = bitcast [16 x i8]* %package_ul to i8*, !dbg !9855
  %26 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %component, align 8, !dbg !9856
  %source_package_ul = getelementptr inbounds %struct.MXFStructuralComponent, %struct.MXFStructuralComponent* %26, i32 0, i32 2, !dbg !9857
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %source_package_ul, i32 0, i32 0, !dbg !9855
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %arraydecay, i64 16, i32 4, i1 false), !dbg !9855
  %package_uid = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %tmp_package, i32 0, i32 2, !dbg !9858
  %27 = bitcast [16 x i8]* %package_uid to i8*, !dbg !9859
  %28 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %component, align 8, !dbg !9860
  %source_package_uid = getelementptr inbounds %struct.MXFStructuralComponent, %struct.MXFStructuralComponent* %28, i32 0, i32 3, !dbg !9861
  %arraydecay11 = getelementptr inbounds [16 x i8], [16 x i8]* %source_package_uid, i32 0, i32 0, !dbg !9859
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %arraydecay11, i64 16, i32 4, i1 false), !dbg !9859
  %29 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9862
  %metadata = getelementptr inbounds %struct.AVStream, %struct.AVStream* %29, i32 0, i32 11, !dbg !9863
  %call12 = call i32 @mxf_add_umid_metadata(%struct.AVDictionary** %metadata, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.86, i32 0, i32 0), %struct.MXFPackage* %tmp_package), !dbg !9864
  %30 = load %struct.MXFTrack*, %struct.MXFTrack** %track.addr, align 8, !dbg !9865
  %name = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %30, i32 0, i32 5, !dbg !9867
  %31 = load i8*, i8** %name, align 8, !dbg !9867
  %tobool13 = icmp ne i8* %31, null, !dbg !9865
  br i1 %tobool13, label %land.lhs.true, label %if.end21, !dbg !9868

land.lhs.true:                                    ; preds = %if.end9
  %32 = load %struct.MXFTrack*, %struct.MXFTrack** %track.addr, align 8, !dbg !9869
  %name14 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %32, i32 0, i32 5, !dbg !9871
  %33 = load i8*, i8** %name14, align 8, !dbg !9871
  %arrayidx15 = getelementptr inbounds i8, i8* %33, i64 0, !dbg !9869
  %34 = load i8, i8* %arrayidx15, align 1, !dbg !9869
  %conv = sext i8 %34 to i32, !dbg !9869
  %tobool16 = icmp ne i32 %conv, 0, !dbg !9869
  br i1 %tobool16, label %if.then17, label %if.end21, !dbg !9872

if.then17:                                        ; preds = %land.lhs.true
  %35 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9873
  %metadata18 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %35, i32 0, i32 11, !dbg !9874
  %36 = load %struct.MXFTrack*, %struct.MXFTrack** %track.addr, align 8, !dbg !9875
  %name19 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %36, i32 0, i32 5, !dbg !9876
  %37 = load i8*, i8** %name19, align 8, !dbg !9876
  %call20 = call i32 @av_dict_set(%struct.AVDictionary** %metadata18, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.88, i32 0, i32 0), i8* %37, i32 0), !dbg !9877
  br label %if.end21, !dbg !9877

if.end21:                                         ; preds = %if.then17, %land.lhs.true, %if.end9
  %38 = load %struct.MXFTrack*, %struct.MXFTrack** %track.addr, align 8, !dbg !9878
  %sequence22 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %38, i32 0, i32 2, !dbg !9879
  %39 = load %struct.MXFSequence*, %struct.MXFSequence** %sequence22, align 8, !dbg !9879
  %data_definition_ul = getelementptr inbounds %struct.MXFSequence, %struct.MXFSequence* %39, i32 0, i32 2, !dbg !9880
  %call23 = call %struct.MXFCodecUL* @mxf_get_codec_ul(%struct.MXFCodecUL* getelementptr inbounds ([0 x %struct.MXFCodecUL], [0 x %struct.MXFCodecUL]* @ff_mxf_data_definition_uls, i32 0, i32 0), [16 x i8]* %data_definition_ul), !dbg !9881
  store %struct.MXFCodecUL* %call23, %struct.MXFCodecUL** %codec_ul, align 8, !dbg !9882
  %40 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !9883
  %metadata24 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %40, i32 0, i32 11, !dbg !9884
  %41 = load %struct.MXFCodecUL*, %struct.MXFCodecUL** %codec_ul, align 8, !dbg !9885
  %id25 = getelementptr inbounds %struct.MXFCodecUL, %struct.MXFCodecUL* %41, i32 0, i32 2, !dbg !9886
  %42 = load i32, i32* %id25, align 4, !dbg !9886
  %call26 = call i8* @av_get_media_type_string(i32 %42), !dbg !9887
  %call27 = call i32 @av_dict_set(%struct.AVDictionary** %metadata24, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.96, i32 0, i32 0), i8* %call26, i32 0), !dbg !9888
  store i32 0, i32* %retval, align 4, !dbg !9890
  br label %return, !dbg !9890

return:                                           ; preds = %if.end21, %if.then7, %if.then3
  %43 = load i32, i32* %retval, align 4, !dbg !9891
  ret i32 %43, !dbg !9891
}

declare %struct.AVStream* @avformat_new_stream(%struct.AVFormatContext*, %struct.AVCodec*) #1

; Function Attrs: nounwind uwtable
define internal %struct.MXFDescriptor* @mxf_resolve_multidescriptor(%struct.MXFContext* %mxf, %struct.MXFDescriptor* %descriptor, i32 %track_id) #0 !dbg !9892 {
entry:
  %retval = alloca %struct.MXFDescriptor*, align 8
  %mxf.addr = alloca %struct.MXFContext*, align 8
  %descriptor.addr = alloca %struct.MXFDescriptor*, align 8
  %track_id.addr = alloca i32, align 4
  %sub_descriptor = alloca %struct.MXFDescriptor*, align 8
  %i = alloca i32, align 4
  store %struct.MXFContext* %mxf, %struct.MXFContext** %mxf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf.addr, metadata !9895, metadata !2511), !dbg !9896
  store %struct.MXFDescriptor* %descriptor, %struct.MXFDescriptor** %descriptor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFDescriptor** %descriptor.addr, metadata !9897, metadata !2511), !dbg !9898
  store i32 %track_id, i32* %track_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %track_id.addr, metadata !9899, metadata !2511), !dbg !9900
  call void @llvm.dbg.declare(metadata %struct.MXFDescriptor** %sub_descriptor, metadata !9901, metadata !2511), !dbg !9902
  store %struct.MXFDescriptor* null, %struct.MXFDescriptor** %sub_descriptor, align 8, !dbg !9902
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9903, metadata !2511), !dbg !9904
  %0 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor.addr, align 8, !dbg !9905
  %tobool = icmp ne %struct.MXFDescriptor* %0, null, !dbg !9905
  br i1 %tobool, label %if.end, label %if.then, !dbg !9907

if.then:                                          ; preds = %entry
  store %struct.MXFDescriptor* null, %struct.MXFDescriptor** %retval, align 8, !dbg !9908
  br label %return, !dbg !9908

if.end:                                           ; preds = %entry
  %1 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor.addr, align 8, !dbg !9909
  %type = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %1, i32 0, i32 1, !dbg !9911
  %2 = load i32, i32* %type, align 8, !dbg !9911
  %cmp = icmp eq i32 %2, 7, !dbg !9912
  br i1 %cmp, label %if.then1, label %if.else, !dbg !9913

if.then1:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !9914
  br label %for.cond, !dbg !9917

for.cond:                                         ; preds = %for.inc, %if.then1
  %3 = load i32, i32* %i, align 4, !dbg !9918
  %4 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor.addr, align 8, !dbg !9921
  %sub_descriptors_count = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %4, i32 0, i32 19, !dbg !9922
  %5 = load i32, i32* %sub_descriptors_count, align 8, !dbg !9922
  %cmp2 = icmp slt i32 %3, %5, !dbg !9923
  br i1 %cmp2, label %for.body, label %for.end, !dbg !9924

for.body:                                         ; preds = %for.cond
  %6 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !9925
  %7 = load i32, i32* %i, align 4, !dbg !9927
  %idxprom = sext i32 %7 to i64, !dbg !9928
  %8 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor.addr, align 8, !dbg !9928
  %sub_descriptors_refs = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %8, i32 0, i32 18, !dbg !9929
  %9 = load [16 x i8]*, [16 x i8]** %sub_descriptors_refs, align 8, !dbg !9929
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 %idxprom, !dbg !9928
  %call = call i8* @mxf_resolve_strong_ref(%struct.MXFContext* %6, [16 x i8]* %arrayidx, i32 8), !dbg !9930
  %10 = bitcast i8* %call to %struct.MXFDescriptor*, !dbg !9930
  store %struct.MXFDescriptor* %10, %struct.MXFDescriptor** %sub_descriptor, align 8, !dbg !9931
  %11 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %sub_descriptor, align 8, !dbg !9932
  %tobool3 = icmp ne %struct.MXFDescriptor* %11, null, !dbg !9932
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !9934

if.then4:                                         ; preds = %for.body
  %12 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !9935
  %fc = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %12, i32 0, i32 10, !dbg !9937
  %13 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc, align 8, !dbg !9937
  %14 = bitcast %struct.AVFormatContext* %13 to i8*, !dbg !9935
  call void (i8*, i32, i8*, ...) @av_log(i8* %14, i32 16, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.102, i32 0, i32 0)), !dbg !9938
  br label %for.inc, !dbg !9939

if.end5:                                          ; preds = %for.body
  %15 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %sub_descriptor, align 8, !dbg !9940
  %linked_track_id = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %15, i32 0, i32 20, !dbg !9942
  %16 = load i32, i32* %linked_track_id, align 4, !dbg !9942
  %17 = load i32, i32* %track_id.addr, align 4, !dbg !9943
  %cmp6 = icmp eq i32 %16, %17, !dbg !9944
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !9945

if.then7:                                         ; preds = %if.end5
  %18 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %sub_descriptor, align 8, !dbg !9946
  store %struct.MXFDescriptor* %18, %struct.MXFDescriptor** %retval, align 8, !dbg !9948
  br label %return, !dbg !9948

if.end8:                                          ; preds = %if.end5
  br label %for.inc, !dbg !9949

for.inc:                                          ; preds = %if.end8, %if.then4
  %19 = load i32, i32* %i, align 4, !dbg !9950
  %inc = add nsw i32 %19, 1, !dbg !9950
  store i32 %inc, i32* %i, align 4, !dbg !9950
  br label %for.cond, !dbg !9952, !llvm.loop !9953

for.end:                                          ; preds = %for.cond
  br label %if.end13, !dbg !9955

if.else:                                          ; preds = %if.end
  %20 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor.addr, align 8, !dbg !9956
  %type9 = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %20, i32 0, i32 1, !dbg !9959
  %21 = load i32, i32* %type9, align 8, !dbg !9959
  %cmp10 = icmp eq i32 %21, 8, !dbg !9960
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !9956

if.then11:                                        ; preds = %if.else
  %22 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor.addr, align 8, !dbg !9961
  store %struct.MXFDescriptor* %22, %struct.MXFDescriptor** %retval, align 8, !dbg !9962
  br label %return, !dbg !9962

if.end12:                                         ; preds = %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %for.end
  store %struct.MXFDescriptor* null, %struct.MXFDescriptor** %retval, align 8, !dbg !9963
  br label %return, !dbg !9963

return:                                           ; preds = %if.end13, %if.then11, %if.then7, %if.then
  %23 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %retval, align 8, !dbg !9964
  ret %struct.MXFDescriptor* %23, !dbg !9964
}

declare void @avpriv_set_pts_info(%struct.AVStream*, i32, i32, i32) #1

; Function Attrs: nounwind uwtable
define internal %struct.MXFCodecUL* @mxf_get_codec_ul(%struct.MXFCodecUL* %uls, [16 x i8]* %uid) #0 !dbg !9965 {
entry:
  %uls.addr = alloca %struct.MXFCodecUL*, align 8
  %uid.addr = alloca [16 x i8]*, align 8
  store %struct.MXFCodecUL* %uls, %struct.MXFCodecUL** %uls.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFCodecUL** %uls.addr, metadata !9968, metadata !2511), !dbg !9969
  store [16 x i8]* %uid, [16 x i8]** %uid.addr, align 8
  call void @llvm.dbg.declare(metadata [16 x i8]** %uid.addr, metadata !9970, metadata !2511), !dbg !9971
  br label %while.cond, !dbg !9972

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.MXFCodecUL*, %struct.MXFCodecUL** %uls.addr, align 8, !dbg !9973
  %uid1 = getelementptr inbounds %struct.MXFCodecUL, %struct.MXFCodecUL* %0, i32 0, i32 0, !dbg !9975
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %uid1, i64 0, i64 0, !dbg !9973
  %1 = load i8, i8* %arrayidx, align 8, !dbg !9973
  %tobool = icmp ne i8 %1, 0, !dbg !9976
  br i1 %tobool, label %while.body, label %while.end, !dbg !9976

while.body:                                       ; preds = %while.cond
  %2 = load %struct.MXFCodecUL*, %struct.MXFCodecUL** %uls.addr, align 8, !dbg !9977
  %uid2 = getelementptr inbounds %struct.MXFCodecUL, %struct.MXFCodecUL* %2, i32 0, i32 0, !dbg !9980
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %uid2, i32 0, i32 0, !dbg !9977
  %3 = load [16 x i8]*, [16 x i8]** %uid.addr, align 8, !dbg !9981
  %arraydecay3 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i32 0, i32 0, !dbg !9982
  %4 = load %struct.MXFCodecUL*, %struct.MXFCodecUL** %uls.addr, align 8, !dbg !9983
  %matching_len = getelementptr inbounds %struct.MXFCodecUL, %struct.MXFCodecUL* %4, i32 0, i32 1, !dbg !9984
  %5 = load i32, i32* %matching_len, align 8, !dbg !9984
  %call = call i32 @mxf_match_uid(i8* %arraydecay, i8* %arraydecay3, i32 %5), !dbg !9985
  %tobool4 = icmp ne i32 %call, 0, !dbg !9985
  br i1 %tobool4, label %if.then, label %if.end, !dbg !9986

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !9987

if.end:                                           ; preds = %while.body
  %6 = load %struct.MXFCodecUL*, %struct.MXFCodecUL** %uls.addr, align 8, !dbg !9988
  %incdec.ptr = getelementptr inbounds %struct.MXFCodecUL, %struct.MXFCodecUL* %6, i32 1, !dbg !9988
  store %struct.MXFCodecUL* %incdec.ptr, %struct.MXFCodecUL** %uls.addr, align 8, !dbg !9988
  br label %while.cond, !dbg !9989, !llvm.loop !9991

while.end:                                        ; preds = %if.then, %while.cond
  %7 = load %struct.MXFCodecUL*, %struct.MXFCodecUL** %uls.addr, align 8, !dbg !9992
  ret %struct.MXFCodecUL* %7, !dbg !9993
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_get_wrapping_kind([16 x i8]* %essence_container_ul) #0 !dbg !9994 {
entry:
  %retval = alloca i32, align 4
  %essence_container_ul.addr = alloca [16 x i8]*, align 8
  %val = alloca i32, align 4
  %codec_ul = alloca %struct.MXFCodecUL*, align 8
  store [16 x i8]* %essence_container_ul, [16 x i8]** %essence_container_ul.addr, align 8
  call void @llvm.dbg.declare(metadata [16 x i8]** %essence_container_ul.addr, metadata !9997, metadata !2511), !dbg !9998
  call void @llvm.dbg.declare(metadata i32* %val, metadata !9999, metadata !2511), !dbg !10000
  call void @llvm.dbg.declare(metadata %struct.MXFCodecUL** %codec_ul, metadata !10001, metadata !2511), !dbg !10002
  %0 = load [16 x i8]*, [16 x i8]** %essence_container_ul.addr, align 8, !dbg !10003
  %call = call %struct.MXFCodecUL* @mxf_get_codec_ul(%struct.MXFCodecUL* getelementptr inbounds ([16 x %struct.MXFCodecUL], [16 x %struct.MXFCodecUL]* @mxf_picture_essence_container_uls, i32 0, i32 0), [16 x i8]* %0), !dbg !10004
  store %struct.MXFCodecUL* %call, %struct.MXFCodecUL** %codec_ul, align 8, !dbg !10005
  %1 = load %struct.MXFCodecUL*, %struct.MXFCodecUL** %codec_ul, align 8, !dbg !10006
  %uid = getelementptr inbounds %struct.MXFCodecUL, %struct.MXFCodecUL* %1, i32 0, i32 0, !dbg !10008
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %uid, i64 0, i64 0, !dbg !10006
  %2 = load i8, i8* %arrayidx, align 8, !dbg !10006
  %tobool = icmp ne i8 %2, 0, !dbg !10006
  br i1 %tobool, label %if.end, label %if.then, !dbg !10009

if.then:                                          ; preds = %entry
  %3 = load [16 x i8]*, [16 x i8]** %essence_container_ul.addr, align 8, !dbg !10010
  %call1 = call %struct.MXFCodecUL* @mxf_get_codec_ul(%struct.MXFCodecUL* getelementptr inbounds ([6 x %struct.MXFCodecUL], [6 x %struct.MXFCodecUL]* @mxf_sound_essence_container_uls, i32 0, i32 0), [16 x i8]* %3), !dbg !10011
  store %struct.MXFCodecUL* %call1, %struct.MXFCodecUL** %codec_ul, align 8, !dbg !10012
  br label %if.end, !dbg !10013

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.MXFCodecUL*, %struct.MXFCodecUL** %codec_ul, align 8, !dbg !10014
  %uid2 = getelementptr inbounds %struct.MXFCodecUL, %struct.MXFCodecUL* %4, i32 0, i32 0, !dbg !10016
  %arrayidx3 = getelementptr inbounds [16 x i8], [16 x i8]* %uid2, i64 0, i64 0, !dbg !10014
  %5 = load i8, i8* %arrayidx3, align 8, !dbg !10014
  %tobool4 = icmp ne i8 %5, 0, !dbg !10014
  br i1 %tobool4, label %if.end7, label %if.then5, !dbg !10017

if.then5:                                         ; preds = %if.end
  %6 = load [16 x i8]*, [16 x i8]** %essence_container_ul.addr, align 8, !dbg !10018
  %call6 = call %struct.MXFCodecUL* @mxf_get_codec_ul(%struct.MXFCodecUL* getelementptr inbounds ([4 x %struct.MXFCodecUL], [4 x %struct.MXFCodecUL]* @mxf_data_essence_container_uls, i32 0, i32 0), [16 x i8]* %6), !dbg !10019
  store %struct.MXFCodecUL* %call6, %struct.MXFCodecUL** %codec_ul, align 8, !dbg !10020
  br label %if.end7, !dbg !10021

if.end7:                                          ; preds = %if.then5, %if.end
  %7 = load %struct.MXFCodecUL*, %struct.MXFCodecUL** %codec_ul, align 8, !dbg !10022
  %uid8 = getelementptr inbounds %struct.MXFCodecUL, %struct.MXFCodecUL* %7, i32 0, i32 0, !dbg !10024
  %arrayidx9 = getelementptr inbounds [16 x i8], [16 x i8]* %uid8, i64 0, i64 0, !dbg !10022
  %8 = load i8, i8* %arrayidx9, align 8, !dbg !10022
  %tobool10 = icmp ne i8 %8, 0, !dbg !10022
  br i1 %tobool10, label %lor.lhs.false, label %if.then12, !dbg !10025

lor.lhs.false:                                    ; preds = %if.end7
  %9 = load %struct.MXFCodecUL*, %struct.MXFCodecUL** %codec_ul, align 8, !dbg !10026
  %wrapping_indicator_pos = getelementptr inbounds %struct.MXFCodecUL, %struct.MXFCodecUL* %9, i32 0, i32 4, !dbg !10028
  %10 = load i32, i32* %wrapping_indicator_pos, align 8, !dbg !10028
  %tobool11 = icmp ne i32 %10, 0, !dbg !10026
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !10029

if.then12:                                        ; preds = %lor.lhs.false, %if.end7
  store i32 0, i32* %retval, align 4, !dbg !10030
  br label %return, !dbg !10030

if.end13:                                         ; preds = %lor.lhs.false
  %11 = load %struct.MXFCodecUL*, %struct.MXFCodecUL** %codec_ul, align 8, !dbg !10031
  %wrapping_indicator_pos14 = getelementptr inbounds %struct.MXFCodecUL, %struct.MXFCodecUL* %11, i32 0, i32 4, !dbg !10032
  %12 = load i32, i32* %wrapping_indicator_pos14, align 8, !dbg !10032
  %idxprom = zext i32 %12 to i64, !dbg !10033
  %13 = load [16 x i8]*, [16 x i8]** %essence_container_ul.addr, align 8, !dbg !10034
  %arrayidx15 = getelementptr inbounds [16 x i8], [16 x i8]* %13, i64 0, i64 %idxprom, !dbg !10033
  %14 = load i8, i8* %arrayidx15, align 1, !dbg !10033
  %conv = zext i8 %14 to i32, !dbg !10033
  store i32 %conv, i32* %val, align 4, !dbg !10035
  %15 = load %struct.MXFCodecUL*, %struct.MXFCodecUL** %codec_ul, align 8, !dbg !10036
  %wrapping_indicator_type = getelementptr inbounds %struct.MXFCodecUL, %struct.MXFCodecUL* %15, i32 0, i32 5, !dbg !10037
  %16 = load i32, i32* %wrapping_indicator_type, align 4, !dbg !10037
  switch i32 %16, label %sw.epilog [
    i32 3, label %sw.bb
    i32 2, label %sw.bb16
    i32 1, label %sw.bb23
  ], !dbg !10038

sw.bb:                                            ; preds = %if.end13
  %17 = load i32, i32* %val, align 4, !dbg !10039
  %rem = srem i32 %17, 4, !dbg !10041
  store i32 %rem, i32* %val, align 4, !dbg !10042
  br label %sw.epilog, !dbg !10043

sw.bb16:                                          ; preds = %if.end13
  %18 = load i32, i32* %val, align 4, !dbg !10044
  %cmp = icmp eq i32 %18, 3, !dbg !10046
  br i1 %cmp, label %if.then21, label %lor.lhs.false18, !dbg !10047

lor.lhs.false18:                                  ; preds = %sw.bb16
  %19 = load i32, i32* %val, align 4, !dbg !10048
  %cmp19 = icmp eq i32 %19, 4, !dbg !10050
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !10051

if.then21:                                        ; preds = %lor.lhs.false18, %sw.bb16
  %20 = load i32, i32* %val, align 4, !dbg !10052
  %sub = sub nsw i32 %20, 2, !dbg !10052
  store i32 %sub, i32* %val, align 4, !dbg !10052
  br label %if.end22, !dbg !10053

if.end22:                                         ; preds = %if.then21, %lor.lhs.false18
  br label %sw.epilog, !dbg !10054

sw.bb23:                                          ; preds = %if.end13
  %21 = load i32, i32* %val, align 4, !dbg !10055
  %cmp24 = icmp eq i32 %21, 2, !dbg !10057
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !10058

if.then26:                                        ; preds = %sw.bb23
  store i32 1, i32* %val, align 4, !dbg !10059
  br label %if.end27, !dbg !10060

if.end27:                                         ; preds = %if.then26, %sw.bb23
  br label %sw.epilog, !dbg !10061

sw.epilog:                                        ; preds = %if.end13, %if.end27, %if.end22, %sw.bb
  %22 = load i32, i32* %val, align 4, !dbg !10062
  %cmp28 = icmp eq i32 %22, 1, !dbg !10064
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !10065

if.then30:                                        ; preds = %sw.epilog
  store i32 1, i32* %retval, align 4, !dbg !10066
  br label %return, !dbg !10066

if.end31:                                         ; preds = %sw.epilog
  %23 = load i32, i32* %val, align 4, !dbg !10067
  %cmp32 = icmp eq i32 %23, 2, !dbg !10069
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !10070

if.then34:                                        ; preds = %if.end31
  store i32 2, i32* %retval, align 4, !dbg !10071
  br label %return, !dbg !10071

if.end35:                                         ; preds = %if.end31
  store i32 0, i32* %retval, align 4, !dbg !10072
  br label %return, !dbg !10072

return:                                           ; preds = %if.end35, %if.then34, %if.then30, %if.then12
  %24 = load i32, i32* %retval, align 4, !dbg !10073
  ret i32 %24, !dbg !10073
}

declare i8* @avcodec_get_name(i32) #1

; Function Attrs: nounwind uwtable
define internal i32 @mxf_parse_physical_source_package(%struct.MXFContext* %mxf, %struct.MXFTrack* %source_track, %struct.AVStream* %st) #0 !dbg !10074 {
entry:
  %retval = alloca i32, align 4
  %mxf.addr = alloca %struct.MXFContext*, align 8
  %source_track.addr = alloca %struct.MXFTrack*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %physical_package = alloca %struct.MXFPackage*, align 8
  %physical_track = alloca %struct.MXFTrack*, align 8
  %sourceclip = alloca %struct.MXFStructuralComponent*, align 8
  %mxf_tc = alloca %struct.MXFTrack.1*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %tc = alloca %struct.AVTimecode, align 4
  %flags = alloca i32, align 4
  %start_position = alloca i64, align 8
  %.compoundliteral = alloca %struct.AVRational, align 4
  store %struct.MXFContext* %mxf, %struct.MXFContext** %mxf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf.addr, metadata !10077, metadata !2511), !dbg !10078
  store %struct.MXFTrack* %source_track, %struct.MXFTrack** %source_track.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFTrack** %source_track.addr, metadata !10079, metadata !2511), !dbg !10080
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !10081, metadata !2511), !dbg !10082
  call void @llvm.dbg.declare(metadata %struct.MXFPackage** %physical_package, metadata !10083, metadata !2511), !dbg !10084
  store %struct.MXFPackage* null, %struct.MXFPackage** %physical_package, align 8, !dbg !10084
  call void @llvm.dbg.declare(metadata %struct.MXFTrack** %physical_track, metadata !10085, metadata !2511), !dbg !10086
  store %struct.MXFTrack* null, %struct.MXFTrack** %physical_track, align 8, !dbg !10086
  call void @llvm.dbg.declare(metadata %struct.MXFStructuralComponent** %sourceclip, metadata !10087, metadata !2511), !dbg !10088
  store %struct.MXFStructuralComponent* null, %struct.MXFStructuralComponent** %sourceclip, align 8, !dbg !10088
  call void @llvm.dbg.declare(metadata %struct.MXFTrack.1** %mxf_tc, metadata !10089, metadata !2511), !dbg !10090
  store %struct.MXFTrack.1* null, %struct.MXFTrack.1** %mxf_tc, align 8, !dbg !10090
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10091, metadata !2511), !dbg !10092
  call void @llvm.dbg.declare(metadata i32* %j, metadata !10093, metadata !2511), !dbg !10094
  call void @llvm.dbg.declare(metadata i32* %k, metadata !10095, metadata !2511), !dbg !10096
  call void @llvm.dbg.declare(metadata %struct.AVTimecode* %tc, metadata !10097, metadata !2511), !dbg !10098
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !10099, metadata !2511), !dbg !10100
  call void @llvm.dbg.declare(metadata i64* %start_position, metadata !10101, metadata !2511), !dbg !10102
  store i32 0, i32* %i, align 4, !dbg !10103
  br label %for.cond, !dbg !10105

for.cond:                                         ; preds = %for.inc81, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10106
  %1 = load %struct.MXFTrack*, %struct.MXFTrack** %source_track.addr, align 8, !dbg !10109
  %sequence = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %1, i32 0, i32 2, !dbg !10110
  %2 = load %struct.MXFSequence*, %struct.MXFSequence** %sequence, align 8, !dbg !10110
  %structural_components_count = getelementptr inbounds %struct.MXFSequence, %struct.MXFSequence* %2, i32 0, i32 4, !dbg !10111
  %3 = load i32, i32* %structural_components_count, align 8, !dbg !10111
  %cmp = icmp slt i32 %0, %3, !dbg !10112
  br i1 %cmp, label %for.body, label %for.end83, !dbg !10113

for.body:                                         ; preds = %for.cond
  %4 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !10114
  %5 = load i32, i32* %i, align 4, !dbg !10116
  %idxprom = sext i32 %5 to i64, !dbg !10117
  %6 = load %struct.MXFTrack*, %struct.MXFTrack** %source_track.addr, align 8, !dbg !10117
  %sequence1 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %6, i32 0, i32 2, !dbg !10118
  %7 = load %struct.MXFSequence*, %struct.MXFSequence** %sequence1, align 8, !dbg !10118
  %structural_components_refs = getelementptr inbounds %struct.MXFSequence, %struct.MXFSequence* %7, i32 0, i32 3, !dbg !10119
  %8 = load [16 x i8]*, [16 x i8]** %structural_components_refs, align 8, !dbg !10119
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %8, i64 %idxprom, !dbg !10117
  %call = call i8* @mxf_resolve_strong_ref(%struct.MXFContext* %4, [16 x i8]* %arrayidx, i32 3), !dbg !10120
  %9 = bitcast i8* %call to %struct.MXFStructuralComponent*, !dbg !10120
  store %struct.MXFStructuralComponent* %9, %struct.MXFStructuralComponent** %sourceclip, align 8, !dbg !10121
  %10 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %sourceclip, align 8, !dbg !10122
  %tobool = icmp ne %struct.MXFStructuralComponent* %10, null, !dbg !10122
  br i1 %tobool, label %if.end, label %if.then, !dbg !10124

if.then:                                          ; preds = %for.body
  br label %for.inc81, !dbg !10125

if.end:                                           ; preds = %for.body
  %11 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !10126
  %12 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %sourceclip, align 8, !dbg !10128
  %source_package_ul = getelementptr inbounds %struct.MXFStructuralComponent, %struct.MXFStructuralComponent* %12, i32 0, i32 2, !dbg !10129
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %source_package_ul, i32 0, i32 0, !dbg !10128
  %13 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %sourceclip, align 8, !dbg !10130
  %source_package_uid = getelementptr inbounds %struct.MXFStructuralComponent, %struct.MXFStructuralComponent* %13, i32 0, i32 3, !dbg !10131
  %arraydecay2 = getelementptr inbounds [16 x i8], [16 x i8]* %source_package_uid, i32 0, i32 0, !dbg !10130
  %call3 = call %struct.MXFPackage* @mxf_resolve_source_package(%struct.MXFContext* %11, i8* %arraydecay, i8* %arraydecay2), !dbg !10132
  store %struct.MXFPackage* %call3, %struct.MXFPackage** %physical_package, align 8, !dbg !10133
  %tobool4 = icmp ne %struct.MXFPackage* %call3, null, !dbg !10133
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !10134

if.then5:                                         ; preds = %if.end
  br label %for.end83, !dbg !10135

if.end6:                                          ; preds = %if.end
  %14 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !10136
  %metadata = getelementptr inbounds %struct.AVStream, %struct.AVStream* %14, i32 0, i32 11, !dbg !10137
  %15 = load %struct.MXFPackage*, %struct.MXFPackage** %physical_package, align 8, !dbg !10138
  %call7 = call i32 @mxf_add_umid_metadata(%struct.AVDictionary** %metadata, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.103, i32 0, i32 0), %struct.MXFPackage* %15), !dbg !10139
  %16 = load %struct.MXFPackage*, %struct.MXFPackage** %physical_package, align 8, !dbg !10140
  %name = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %16, i32 0, i32 8, !dbg !10142
  %17 = load i8*, i8** %name, align 8, !dbg !10142
  %tobool8 = icmp ne i8* %17, null, !dbg !10140
  br i1 %tobool8, label %land.lhs.true, label %if.end16, !dbg !10143

land.lhs.true:                                    ; preds = %if.end6
  %18 = load %struct.MXFPackage*, %struct.MXFPackage** %physical_package, align 8, !dbg !10144
  %name9 = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %18, i32 0, i32 8, !dbg !10146
  %19 = load i8*, i8** %name9, align 8, !dbg !10146
  %arrayidx10 = getelementptr inbounds i8, i8* %19, i64 0, !dbg !10144
  %20 = load i8, i8* %arrayidx10, align 1, !dbg !10144
  %conv = sext i8 %20 to i32, !dbg !10144
  %tobool11 = icmp ne i32 %conv, 0, !dbg !10144
  br i1 %tobool11, label %if.then12, label %if.end16, !dbg !10147

if.then12:                                        ; preds = %land.lhs.true
  %21 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !10148
  %metadata13 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %21, i32 0, i32 11, !dbg !10149
  %22 = load %struct.MXFPackage*, %struct.MXFPackage** %physical_package, align 8, !dbg !10150
  %name14 = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %22, i32 0, i32 8, !dbg !10151
  %23 = load i8*, i8** %name14, align 8, !dbg !10151
  %call15 = call i32 @av_dict_set(%struct.AVDictionary** %metadata13, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.104, i32 0, i32 0), i8* %23, i32 0), !dbg !10152
  br label %if.end16, !dbg !10152

if.end16:                                         ; preds = %if.then12, %land.lhs.true, %if.end6
  store i32 0, i32* %j, align 4, !dbg !10153
  br label %for.cond17, !dbg !10155

for.cond17:                                       ; preds = %for.inc78, %if.end16
  %24 = load i32, i32* %j, align 4, !dbg !10156
  %25 = load %struct.MXFPackage*, %struct.MXFPackage** %physical_package, align 8, !dbg !10159
  %tracks_count = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %25, i32 0, i32 5, !dbg !10160
  %26 = load i32, i32* %tracks_count, align 8, !dbg !10160
  %cmp18 = icmp slt i32 %24, %26, !dbg !10161
  br i1 %cmp18, label %for.body20, label %for.end80, !dbg !10162

for.body20:                                       ; preds = %for.cond17
  %27 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !10163
  %28 = load i32, i32* %j, align 4, !dbg !10166
  %idxprom21 = sext i32 %28 to i64, !dbg !10167
  %29 = load %struct.MXFPackage*, %struct.MXFPackage** %physical_package, align 8, !dbg !10167
  %tracks_refs = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %29, i32 0, i32 4, !dbg !10168
  %30 = load [16 x i8]*, [16 x i8]** %tracks_refs, align 8, !dbg !10168
  %arrayidx22 = getelementptr inbounds [16 x i8], [16 x i8]* %30, i64 %idxprom21, !dbg !10167
  %call23 = call i8* @mxf_resolve_strong_ref(%struct.MXFContext* %27, [16 x i8]* %arrayidx22, i32 9), !dbg !10169
  %31 = bitcast i8* %call23 to %struct.MXFTrack*, !dbg !10169
  store %struct.MXFTrack* %31, %struct.MXFTrack** %physical_track, align 8, !dbg !10170
  %tobool24 = icmp ne %struct.MXFTrack* %31, null, !dbg !10170
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !10171

if.then25:                                        ; preds = %for.body20
  %32 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !10172
  %fc = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %32, i32 0, i32 10, !dbg !10174
  %33 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc, align 8, !dbg !10174
  %34 = bitcast %struct.AVFormatContext* %33 to i8*, !dbg !10172
  call void (i8*, i32, i8*, ...) @av_log(i8* %34, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.73, i32 0, i32 0)), !dbg !10175
  br label %for.inc78, !dbg !10176

if.end26:                                         ; preds = %for.body20
  %35 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !10177
  %36 = load %struct.MXFTrack*, %struct.MXFTrack** %physical_track, align 8, !dbg !10179
  %sequence_ref = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %36, i32 0, i32 3, !dbg !10180
  %call27 = call i8* @mxf_resolve_strong_ref(%struct.MXFContext* %35, [16 x i8]* %sequence_ref, i32 6), !dbg !10181
  %37 = bitcast i8* %call27 to %struct.MXFSequence*, !dbg !10181
  %38 = load %struct.MXFTrack*, %struct.MXFTrack** %physical_track, align 8, !dbg !10182
  %sequence28 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %38, i32 0, i32 2, !dbg !10183
  store %struct.MXFSequence* %37, %struct.MXFSequence** %sequence28, align 8, !dbg !10184
  %tobool29 = icmp ne %struct.MXFSequence* %37, null, !dbg !10184
  br i1 %tobool29, label %if.end32, label %if.then30, !dbg !10185

if.then30:                                        ; preds = %if.end26
  %39 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !10186
  %fc31 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %39, i32 0, i32 10, !dbg !10188
  %40 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc31, align 8, !dbg !10188
  %41 = bitcast %struct.AVFormatContext* %40 to i8*, !dbg !10186
  call void (i8*, i32, i8*, ...) @av_log(i8* %41, i32 16, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.76, i32 0, i32 0)), !dbg !10189
  br label %for.inc78, !dbg !10190

if.end32:                                         ; preds = %if.end26
  %42 = load %struct.MXFTrack*, %struct.MXFTrack** %physical_track, align 8, !dbg !10191
  %edit_rate = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %42, i32 0, i32 7, !dbg !10193
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %edit_rate, i32 0, i32 0, !dbg !10194
  %43 = load i32, i32* %num, align 4, !dbg !10194
  %cmp33 = icmp sle i32 %43, 0, !dbg !10195
  br i1 %cmp33, label %if.then38, label %lor.lhs.false, !dbg !10196

lor.lhs.false:                                    ; preds = %if.end32
  %44 = load %struct.MXFTrack*, %struct.MXFTrack** %physical_track, align 8, !dbg !10197
  %edit_rate35 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %44, i32 0, i32 7, !dbg !10198
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %edit_rate35, i32 0, i32 1, !dbg !10199
  %45 = load i32, i32* %den, align 4, !dbg !10199
  %cmp36 = icmp sle i32 %45, 0, !dbg !10200
  br i1 %cmp36, label %if.then38, label %if.end47, !dbg !10201

if.then38:                                        ; preds = %lor.lhs.false, %if.end32
  %46 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !10203
  %fc39 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %46, i32 0, i32 10, !dbg !10205
  %47 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc39, align 8, !dbg !10205
  %48 = bitcast %struct.AVFormatContext* %47 to i8*, !dbg !10203
  %49 = load %struct.MXFTrack*, %struct.MXFTrack** %physical_track, align 8, !dbg !10206
  %edit_rate40 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %49, i32 0, i32 7, !dbg !10207
  %num41 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %edit_rate40, i32 0, i32 0, !dbg !10208
  %50 = load i32, i32* %num41, align 4, !dbg !10208
  %51 = load %struct.MXFTrack*, %struct.MXFTrack** %physical_track, align 8, !dbg !10209
  %edit_rate42 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %51, i32 0, i32 7, !dbg !10210
  %den43 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %edit_rate42, i32 0, i32 1, !dbg !10211
  %52 = load i32, i32* %den43, align 4, !dbg !10211
  %53 = load i32, i32* %i, align 4, !dbg !10212
  call void (i8*, i32, i8*, ...) @av_log(i8* %48, i32 24, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.105, i32 0, i32 0), i32 %50, i32 %52, i32 %53), !dbg !10213
  %54 = load %struct.MXFTrack*, %struct.MXFTrack** %physical_track, align 8, !dbg !10214
  %edit_rate44 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %54, i32 0, i32 7, !dbg !10215
  %num45 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 0, !dbg !10216
  store i32 25, i32* %num45, align 4, !dbg !10216
  %den46 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 1, !dbg !10216
  store i32 1, i32* %den46, align 4, !dbg !10216
  %55 = bitcast %struct.AVRational* %edit_rate44 to i8*, !dbg !10217
  %56 = bitcast %struct.AVRational* %.compoundliteral to i8*, !dbg !10217
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %55, i8* %56, i64 8, i32 4, i1 false), !dbg !10217
  br label %if.end47, !dbg !10218

if.end47:                                         ; preds = %if.then38, %lor.lhs.false
  store i32 0, i32* %k, align 4, !dbg !10219
  br label %for.cond48, !dbg !10221

for.cond48:                                       ; preds = %for.inc, %if.end47
  %57 = load i32, i32* %k, align 4, !dbg !10222
  %58 = load %struct.MXFTrack*, %struct.MXFTrack** %physical_track, align 8, !dbg !10225
  %sequence49 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %58, i32 0, i32 2, !dbg !10226
  %59 = load %struct.MXFSequence*, %struct.MXFSequence** %sequence49, align 8, !dbg !10226
  %structural_components_count50 = getelementptr inbounds %struct.MXFSequence, %struct.MXFSequence* %59, i32 0, i32 4, !dbg !10227
  %60 = load i32, i32* %structural_components_count50, align 8, !dbg !10227
  %cmp51 = icmp slt i32 %57, %60, !dbg !10228
  br i1 %cmp51, label %for.body53, label %for.end, !dbg !10229

for.body53:                                       ; preds = %for.cond48
  %61 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !10230
  %62 = load i32, i32* %k, align 4, !dbg !10233
  %idxprom54 = sext i32 %62 to i64, !dbg !10234
  %63 = load %struct.MXFTrack*, %struct.MXFTrack** %physical_track, align 8, !dbg !10234
  %sequence55 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %63, i32 0, i32 2, !dbg !10235
  %64 = load %struct.MXFSequence*, %struct.MXFSequence** %sequence55, align 8, !dbg !10235
  %structural_components_refs56 = getelementptr inbounds %struct.MXFSequence, %struct.MXFSequence* %64, i32 0, i32 3, !dbg !10236
  %65 = load [16 x i8]*, [16 x i8]** %structural_components_refs56, align 8, !dbg !10236
  %arrayidx57 = getelementptr inbounds [16 x i8], [16 x i8]* %65, i64 %idxprom54, !dbg !10234
  %call58 = call %struct.MXFTrack.1* @mxf_resolve_timecode_component(%struct.MXFContext* %61, [16 x i8]* %arrayidx57), !dbg !10237
  store %struct.MXFTrack.1* %call58, %struct.MXFTrack.1** %mxf_tc, align 8, !dbg !10238
  %tobool59 = icmp ne %struct.MXFTrack.1* %call58, null, !dbg !10238
  br i1 %tobool59, label %if.end61, label %if.then60, !dbg !10239

if.then60:                                        ; preds = %for.body53
  br label %for.inc, !dbg !10240

if.end61:                                         ; preds = %for.body53
  %66 = load %struct.MXFTrack.1*, %struct.MXFTrack.1** %mxf_tc, align 8, !dbg !10241
  %drop_frame = getelementptr inbounds %struct.MXFTrack.1, %struct.MXFTrack.1* %66, i32 0, i32 2, !dbg !10242
  %67 = load i32, i32* %drop_frame, align 4, !dbg !10242
  %cmp62 = icmp eq i32 %67, 1, !dbg !10243
  %cond = select i1 %cmp62, i32 1, i32 0, !dbg !10241
  store i32 %cond, i32* %flags, align 4, !dbg !10244
  %68 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %sourceclip, align 8, !dbg !10245
  %start_position64 = getelementptr inbounds %struct.MXFStructuralComponent, %struct.MXFStructuralComponent* %68, i32 0, i32 6, !dbg !10246
  %69 = load i64, i64* %start_position64, align 8, !dbg !10246
  %70 = load %struct.MXFTrack*, %struct.MXFTrack** %physical_track, align 8, !dbg !10247
  %edit_rate65 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %70, i32 0, i32 7, !dbg !10248
  %71 = load %struct.MXFTrack*, %struct.MXFTrack** %source_track.addr, align 8, !dbg !10249
  %edit_rate66 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %71, i32 0, i32 7, !dbg !10250
  %72 = bitcast %struct.AVRational* %edit_rate65 to i64*, !dbg !10251
  %73 = load i64, i64* %72, align 4, !dbg !10251
  %74 = bitcast %struct.AVRational* %edit_rate66 to i64*, !dbg !10251
  %75 = load i64, i64* %74, align 4, !dbg !10251
  %call67 = call i64 @av_rescale_q(i64 %69, i64 %73, i64 %75) #2, !dbg !10251
  store i64 %call67, i64* %start_position, align 8, !dbg !10252
  %76 = load %struct.MXFTrack.1*, %struct.MXFTrack.1** %mxf_tc, align 8, !dbg !10253
  %rate = getelementptr inbounds %struct.MXFTrack.1, %struct.MXFTrack.1* %76, i32 0, i32 4, !dbg !10255
  %77 = load i32, i32* %flags, align 4, !dbg !10256
  %78 = load i64, i64* %start_position, align 8, !dbg !10257
  %79 = load %struct.MXFTrack.1*, %struct.MXFTrack.1** %mxf_tc, align 8, !dbg !10258
  %start_frame = getelementptr inbounds %struct.MXFTrack.1, %struct.MXFTrack.1* %79, i32 0, i32 3, !dbg !10259
  %80 = load i32, i32* %start_frame, align 4, !dbg !10259
  %conv68 = sext i32 %80 to i64, !dbg !10258
  %add = add nsw i64 %78, %conv68, !dbg !10260
  %conv69 = trunc i64 %add to i32, !dbg !10257
  %81 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !10261
  %fc70 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %81, i32 0, i32 10, !dbg !10262
  %82 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc70, align 8, !dbg !10262
  %83 = bitcast %struct.AVFormatContext* %82 to i8*, !dbg !10261
  %84 = bitcast %struct.AVRational* %rate to i64*, !dbg !10263
  %85 = load i64, i64* %84, align 4, !dbg !10263
  %call71 = call i32 @av_timecode_init(%struct.AVTimecode* %tc, i64 %85, i32 %77, i32 %conv69, i8* %83), !dbg !10263
  %cmp72 = icmp eq i32 %call71, 0, !dbg !10264
  br i1 %cmp72, label %if.then74, label %if.end77, !dbg !10265

if.then74:                                        ; preds = %if.end61
  %86 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !10266
  %metadata75 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %86, i32 0, i32 11, !dbg !10268
  %call76 = call i32 @mxf_add_timecode_metadata(%struct.AVDictionary** %metadata75, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.69, i32 0, i32 0), %struct.AVTimecode* %tc), !dbg !10269
  store i32 0, i32* %retval, align 4, !dbg !10270
  br label %return, !dbg !10270

if.end77:                                         ; preds = %if.end61
  br label %for.inc, !dbg !10271

for.inc:                                          ; preds = %if.end77, %if.then60
  %87 = load i32, i32* %k, align 4, !dbg !10272
  %inc = add nsw i32 %87, 1, !dbg !10272
  store i32 %inc, i32* %k, align 4, !dbg !10272
  br label %for.cond48, !dbg !10274, !llvm.loop !10275

for.end:                                          ; preds = %for.cond48
  br label %for.inc78, !dbg !10277

for.inc78:                                        ; preds = %for.end, %if.then30, %if.then25
  %88 = load i32, i32* %j, align 4, !dbg !10278
  %inc79 = add nsw i32 %88, 1, !dbg !10278
  store i32 %inc79, i32* %j, align 4, !dbg !10278
  br label %for.cond17, !dbg !10280, !llvm.loop !10281

for.end80:                                        ; preds = %for.cond17
  br label %for.inc81, !dbg !10283

for.inc81:                                        ; preds = %for.end80, %if.then
  %89 = load i32, i32* %i, align 4, !dbg !10284
  %inc82 = add nsw i32 %89, 1, !dbg !10284
  store i32 %inc82, i32* %i, align 4, !dbg !10284
  br label %for.cond, !dbg !10286, !llvm.loop !10287

for.end83:                                        ; preds = %if.then5, %for.cond
  store i32 0, i32* %retval, align 4, !dbg !10289
  br label %return, !dbg !10289

return:                                           ; preds = %for.end83, %if.then74
  %90 = load i32, i32* %retval, align 4, !dbg !10290
  ret i32 %90, !dbg !10290
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_is_intra_only(%struct.MXFDescriptor* %descriptor) #0 !dbg !10291 {
entry:
  %descriptor.addr = alloca %struct.MXFDescriptor*, align 8
  store %struct.MXFDescriptor* %descriptor, %struct.MXFDescriptor** %descriptor.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFDescriptor** %descriptor.addr, metadata !10294, metadata !2511), !dbg !10295
  %0 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor.addr, align 8, !dbg !10296
  %essence_container_ul = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %0, i32 0, i32 2, !dbg !10297
  %call = call %struct.MXFCodecUL* @mxf_get_codec_ul(%struct.MXFCodecUL* getelementptr inbounds ([2 x %struct.MXFCodecUL], [2 x %struct.MXFCodecUL]* @mxf_intra_only_essence_container_uls, i32 0, i32 0), [16 x i8]* %essence_container_ul), !dbg !10298
  %id = getelementptr inbounds %struct.MXFCodecUL, %struct.MXFCodecUL* %call, i32 0, i32 2, !dbg !10299
  %1 = load i32, i32* %id, align 4, !dbg !10299
  %cmp = icmp ne i32 %1, 0, !dbg !10300
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !10301

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor.addr, align 8, !dbg !10302
  %essence_codec_ul = getelementptr inbounds %struct.MXFDescriptor, %struct.MXFDescriptor* %2, i32 0, i32 3, !dbg !10303
  %call1 = call %struct.MXFCodecUL* @mxf_get_codec_ul(%struct.MXFCodecUL* getelementptr inbounds ([3 x %struct.MXFCodecUL], [3 x %struct.MXFCodecUL]* @mxf_intra_only_picture_essence_coding_uls, i32 0, i32 0), [16 x i8]* %essence_codec_ul), !dbg !10304
  %id2 = getelementptr inbounds %struct.MXFCodecUL, %struct.MXFCodecUL* %call1, i32 0, i32 2, !dbg !10305
  %3 = load i32, i32* %id2, align 4, !dbg !10305
  %cmp3 = icmp ne i32 %3, 0, !dbg !10306
  br label %lor.end, !dbg !10307

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %cmp3, %lor.rhs ]
  %lor.ext = zext i1 %4 to i32, !dbg !10309
  ret i32 %lor.ext, !dbg !10311
}

declare i32 @av_dict_set_int(%struct.AVDictionary**, i8*, i64, i32) #1

; Function Attrs: nounwind readnone
declare i64 @av_rescale_q(i64, i64, i64) #7

declare i32 @av_get_bits_per_sample(i32) #1

declare i32 @avcodec_get_type(i32) #1

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #3

declare i32 @ff_alloc_extradata(%struct.AVCodecParameters*, i32) #1

declare i32 @ff_generate_avci_extradata(%struct.AVStream*) #1

; Function Attrs: nounwind uwtable
define internal i32 @mxf_umid_to_str(i8* %ul, i8* %uid, i8** %str) #0 !dbg !10312 {
entry:
  %retval = alloca i32, align 4
  %ul.addr = alloca i8*, align 8
  %uid.addr = alloca i8*, align 8
  %str.addr = alloca i8**, align 8
  %i = alloca i32, align 4
  %p = alloca i8*, align 8
  store i8* %ul, i8** %ul.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ul.addr, metadata !10315, metadata !2511), !dbg !10316
  store i8* %uid, i8** %uid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %uid.addr, metadata !10317, metadata !2511), !dbg !10318
  store i8** %str, i8*** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %str.addr, metadata !10319, metadata !2511), !dbg !10320
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10321, metadata !2511), !dbg !10322
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10323, metadata !2511), !dbg !10324
  %call = call noalias i8* @av_mallocz(i64 67), !dbg !10325
  %0 = load i8**, i8*** %str.addr, align 8, !dbg !10326
  store i8* %call, i8** %0, align 8, !dbg !10327
  store i8* %call, i8** %p, align 8, !dbg !10328
  %1 = load i8*, i8** %p, align 8, !dbg !10329
  %tobool = icmp ne i8* %1, null, !dbg !10329
  br i1 %tobool, label %if.end, label %if.then, !dbg !10331

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !10332
  br label %return, !dbg !10332

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %p, align 8, !dbg !10333
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %2, i64 3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.98, i32 0, i32 0)) #8, !dbg !10334
  %3 = load i8*, i8** %p, align 8, !dbg !10335
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 2, !dbg !10335
  store i8* %add.ptr, i8** %p, align 8, !dbg !10335
  store i32 0, i32* %i, align 4, !dbg !10336
  br label %for.cond, !dbg !10338

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i32, i32* %i, align 4, !dbg !10339
  %conv = sext i32 %4 to i64, !dbg !10339
  %cmp = icmp ult i64 %conv, 16, !dbg !10342
  br i1 %cmp, label %for.body, label %for.end, !dbg !10343

for.body:                                         ; preds = %for.cond
  %5 = load i8*, i8** %p, align 8, !dbg !10344
  %6 = load i32, i32* %i, align 4, !dbg !10346
  %idxprom = sext i32 %6 to i64, !dbg !10347
  %7 = load i8*, i8** %ul.addr, align 8, !dbg !10347
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !10347
  %8 = load i8, i8* %arrayidx, align 1, !dbg !10347
  %conv3 = zext i8 %8 to i32, !dbg !10347
  %call4 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %5, i64 3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.99, i32 0, i32 0), i32 %conv3) #8, !dbg !10348
  %9 = load i8*, i8** %p, align 8, !dbg !10349
  %add.ptr5 = getelementptr inbounds i8, i8* %9, i64 2, !dbg !10349
  store i8* %add.ptr5, i8** %p, align 8, !dbg !10349
  br label %for.inc, !dbg !10350

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !10351
  %inc = add nsw i32 %10, 1, !dbg !10351
  store i32 %inc, i32* %i, align 4, !dbg !10351
  br label %for.cond, !dbg !10353, !llvm.loop !10354

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !10356
  br label %for.cond6, !dbg !10358

for.cond6:                                        ; preds = %for.inc16, %for.end
  %11 = load i32, i32* %i, align 4, !dbg !10359
  %conv7 = sext i32 %11 to i64, !dbg !10359
  %cmp8 = icmp ult i64 %conv7, 16, !dbg !10362
  br i1 %cmp8, label %for.body10, label %for.end18, !dbg !10363

for.body10:                                       ; preds = %for.cond6
  %12 = load i8*, i8** %p, align 8, !dbg !10364
  %13 = load i32, i32* %i, align 4, !dbg !10366
  %idxprom11 = sext i32 %13 to i64, !dbg !10367
  %14 = load i8*, i8** %uid.addr, align 8, !dbg !10367
  %arrayidx12 = getelementptr inbounds i8, i8* %14, i64 %idxprom11, !dbg !10367
  %15 = load i8, i8* %arrayidx12, align 1, !dbg !10367
  %conv13 = zext i8 %15 to i32, !dbg !10367
  %call14 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %12, i64 3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.99, i32 0, i32 0), i32 %conv13) #8, !dbg !10368
  %16 = load i8*, i8** %p, align 8, !dbg !10369
  %add.ptr15 = getelementptr inbounds i8, i8* %16, i64 2, !dbg !10369
  store i8* %add.ptr15, i8** %p, align 8, !dbg !10369
  br label %for.inc16, !dbg !10370

for.inc16:                                        ; preds = %for.body10
  %17 = load i32, i32* %i, align 4, !dbg !10371
  %inc17 = add nsw i32 %17, 1, !dbg !10371
  store i32 %inc17, i32* %i, align 4, !dbg !10371
  br label %for.cond6, !dbg !10373, !llvm.loop !10374

for.end18:                                        ; preds = %for.cond6
  store i32 0, i32* %retval, align 4, !dbg !10376
  br label %return, !dbg !10376

return:                                           ; preds = %for.end18, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !10377
  ret i32 %18, !dbg !10377
}

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #3

declare i8* @av_timecode_make_string(%struct.AVTimecode*, i8*, i32) #1

; Function Attrs: nounwind uwtable
define internal %struct.MXFStructuralComponent* @mxf_resolve_essence_group_choice(%struct.MXFContext* %mxf, %struct.MXFEssenceGroup* %essence_group) #0 !dbg !10378 {
entry:
  %retval = alloca %struct.MXFStructuralComponent*, align 8
  %mxf.addr = alloca %struct.MXFContext*, align 8
  %essence_group.addr = alloca %struct.MXFEssenceGroup*, align 8
  %component = alloca %struct.MXFStructuralComponent*, align 8
  %package = alloca %struct.MXFPackage*, align 8
  %descriptor = alloca %struct.MXFDescriptor*, align 8
  %i = alloca i32, align 4
  store %struct.MXFContext* %mxf, %struct.MXFContext** %mxf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf.addr, metadata !10381, metadata !2511), !dbg !10382
  store %struct.MXFEssenceGroup* %essence_group, %struct.MXFEssenceGroup** %essence_group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFEssenceGroup** %essence_group.addr, metadata !10383, metadata !2511), !dbg !10384
  call void @llvm.dbg.declare(metadata %struct.MXFStructuralComponent** %component, metadata !10385, metadata !2511), !dbg !10386
  store %struct.MXFStructuralComponent* null, %struct.MXFStructuralComponent** %component, align 8, !dbg !10386
  call void @llvm.dbg.declare(metadata %struct.MXFPackage** %package, metadata !10387, metadata !2511), !dbg !10388
  store %struct.MXFPackage* null, %struct.MXFPackage** %package, align 8, !dbg !10388
  call void @llvm.dbg.declare(metadata %struct.MXFDescriptor** %descriptor, metadata !10389, metadata !2511), !dbg !10390
  store %struct.MXFDescriptor* null, %struct.MXFDescriptor** %descriptor, align 8, !dbg !10390
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10391, metadata !2511), !dbg !10392
  %0 = load %struct.MXFEssenceGroup*, %struct.MXFEssenceGroup** %essence_group.addr, align 8, !dbg !10393
  %tobool = icmp ne %struct.MXFEssenceGroup* %0, null, !dbg !10393
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !10395

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.MXFEssenceGroup*, %struct.MXFEssenceGroup** %essence_group.addr, align 8, !dbg !10396
  %structural_components_count = getelementptr inbounds %struct.MXFEssenceGroup, %struct.MXFEssenceGroup* %1, i32 0, i32 3, !dbg !10398
  %2 = load i32, i32* %structural_components_count, align 8, !dbg !10398
  %tobool1 = icmp ne i32 %2, 0, !dbg !10396
  br i1 %tobool1, label %if.end, label %if.then, !dbg !10399

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct.MXFStructuralComponent* null, %struct.MXFStructuralComponent** %retval, align 8, !dbg !10400
  br label %return, !dbg !10400

if.end:                                           ; preds = %lor.lhs.false
  store i32 0, i32* %i, align 4, !dbg !10401
  br label %for.cond, !dbg !10403

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %i, align 4, !dbg !10404
  %4 = load %struct.MXFEssenceGroup*, %struct.MXFEssenceGroup** %essence_group.addr, align 8, !dbg !10407
  %structural_components_count2 = getelementptr inbounds %struct.MXFEssenceGroup, %struct.MXFEssenceGroup* %4, i32 0, i32 3, !dbg !10408
  %5 = load i32, i32* %structural_components_count2, align 8, !dbg !10408
  %cmp = icmp slt i32 %3, %5, !dbg !10409
  br i1 %cmp, label %for.body, label %for.end, !dbg !10410

for.body:                                         ; preds = %for.cond
  %6 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !10411
  %7 = load i32, i32* %i, align 4, !dbg !10413
  %idxprom = sext i32 %7 to i64, !dbg !10414
  %8 = load %struct.MXFEssenceGroup*, %struct.MXFEssenceGroup** %essence_group.addr, align 8, !dbg !10414
  %structural_components_refs = getelementptr inbounds %struct.MXFEssenceGroup, %struct.MXFEssenceGroup* %8, i32 0, i32 2, !dbg !10415
  %9 = load [16 x i8]*, [16 x i8]** %structural_components_refs, align 8, !dbg !10415
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 %idxprom, !dbg !10414
  %call = call i8* @mxf_resolve_strong_ref(%struct.MXFContext* %6, [16 x i8]* %arrayidx, i32 3), !dbg !10416
  %10 = bitcast i8* %call to %struct.MXFStructuralComponent*, !dbg !10416
  store %struct.MXFStructuralComponent* %10, %struct.MXFStructuralComponent** %component, align 8, !dbg !10417
  %11 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %component, align 8, !dbg !10418
  %tobool3 = icmp ne %struct.MXFStructuralComponent* %11, null, !dbg !10418
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !10420

if.then4:                                         ; preds = %for.body
  br label %for.inc, !dbg !10421

if.end5:                                          ; preds = %for.body
  %12 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !10422
  %13 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %component, align 8, !dbg !10424
  %source_package_ul = getelementptr inbounds %struct.MXFStructuralComponent, %struct.MXFStructuralComponent* %13, i32 0, i32 2, !dbg !10425
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %source_package_ul, i32 0, i32 0, !dbg !10424
  %14 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %component, align 8, !dbg !10426
  %source_package_uid = getelementptr inbounds %struct.MXFStructuralComponent, %struct.MXFStructuralComponent* %14, i32 0, i32 3, !dbg !10427
  %arraydecay6 = getelementptr inbounds [16 x i8], [16 x i8]* %source_package_uid, i32 0, i32 0, !dbg !10426
  %call7 = call %struct.MXFPackage* @mxf_resolve_source_package(%struct.MXFContext* %12, i8* %arraydecay, i8* %arraydecay6), !dbg !10428
  store %struct.MXFPackage* %call7, %struct.MXFPackage** %package, align 8, !dbg !10429
  %tobool8 = icmp ne %struct.MXFPackage* %call7, null, !dbg !10429
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !10430

if.then9:                                         ; preds = %if.end5
  br label %for.inc, !dbg !10431

if.end10:                                         ; preds = %if.end5
  %15 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !10432
  %16 = load %struct.MXFPackage*, %struct.MXFPackage** %package, align 8, !dbg !10433
  %descriptor_ref = getelementptr inbounds %struct.MXFPackage, %struct.MXFPackage* %16, i32 0, i32 7, !dbg !10434
  %call11 = call i8* @mxf_resolve_strong_ref(%struct.MXFContext* %15, [16 x i8]* %descriptor_ref, i32 8), !dbg !10435
  %17 = bitcast i8* %call11 to %struct.MXFDescriptor*, !dbg !10435
  store %struct.MXFDescriptor* %17, %struct.MXFDescriptor** %descriptor, align 8, !dbg !10436
  %18 = load %struct.MXFDescriptor*, %struct.MXFDescriptor** %descriptor, align 8, !dbg !10437
  %tobool12 = icmp ne %struct.MXFDescriptor* %18, null, !dbg !10437
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !10439

if.then13:                                        ; preds = %if.end10
  %19 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %component, align 8, !dbg !10440
  store %struct.MXFStructuralComponent* %19, %struct.MXFStructuralComponent** %retval, align 8, !dbg !10441
  br label %return, !dbg !10441

if.end14:                                         ; preds = %if.end10
  br label %for.inc, !dbg !10442

for.inc:                                          ; preds = %if.end14, %if.then9, %if.then4
  %20 = load i32, i32* %i, align 4, !dbg !10443
  %inc = add nsw i32 %20, 1, !dbg !10443
  store i32 %inc, i32* %i, align 4, !dbg !10443
  br label %for.cond, !dbg !10445, !llvm.loop !10446

for.end:                                          ; preds = %for.cond
  store %struct.MXFStructuralComponent* null, %struct.MXFStructuralComponent** %retval, align 8, !dbg !10448
  br label %return, !dbg !10448

return:                                           ; preds = %for.end, %if.then13, %if.then
  %21 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %retval, align 8, !dbg !10449
  ret %struct.MXFStructuralComponent* %21, !dbg !10449
}

declare i8* @av_get_media_type_string(i32) #1

; Function Attrs: nounwind uwtable
define internal i32 @mxf_match_uid(i8* %key, i8* %uid, i32 %len) #0 !dbg !10450 {
entry:
  %retval = alloca i32, align 4
  %key.addr = alloca i8*, align 8
  %uid.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !10453, metadata !2511), !dbg !10454
  store i8* %uid, i8** %uid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %uid.addr, metadata !10455, metadata !2511), !dbg !10456
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !10457, metadata !2511), !dbg !10458
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10459, metadata !2511), !dbg !10460
  store i32 0, i32* %i, align 4, !dbg !10461
  br label %for.cond, !dbg !10463

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10464
  %1 = load i32, i32* %len.addr, align 4, !dbg !10467
  %cmp = icmp slt i32 %0, %1, !dbg !10468
  br i1 %cmp, label %for.body, label %for.end, !dbg !10469

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !10470
  %cmp1 = icmp ne i32 %2, 7, !dbg !10473
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !10474

land.lhs.true:                                    ; preds = %for.body
  %3 = load i32, i32* %i, align 4, !dbg !10475
  %idxprom = sext i32 %3 to i64, !dbg !10477
  %4 = load i8*, i8** %key.addr, align 8, !dbg !10477
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !10477
  %5 = load i8, i8* %arrayidx, align 1, !dbg !10477
  %conv = zext i8 %5 to i32, !dbg !10477
  %6 = load i32, i32* %i, align 4, !dbg !10478
  %idxprom2 = sext i32 %6 to i64, !dbg !10479
  %7 = load i8*, i8** %uid.addr, align 8, !dbg !10479
  %arrayidx3 = getelementptr inbounds i8, i8* %7, i64 %idxprom2, !dbg !10479
  %8 = load i8, i8* %arrayidx3, align 1, !dbg !10479
  %conv4 = zext i8 %8 to i32, !dbg !10479
  %cmp5 = icmp ne i32 %conv, %conv4, !dbg !10480
  br i1 %cmp5, label %if.then, label %if.end, !dbg !10481

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !10482
  br label %return, !dbg !10482

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !10483

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4, !dbg !10484
  %inc = add nsw i32 %9, 1, !dbg !10484
  store i32 %inc, i32* %i, align 4, !dbg !10484
  br label %for.cond, !dbg !10486, !llvm.loop !10487

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !10489
  br label %return, !dbg !10489

return:                                           ; preds = %for.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !10490
  ret i32 %10, !dbg !10490
}

; Function Attrs: nounwind uwtable
define internal %struct.MXFTrack.1* @mxf_resolve_timecode_component(%struct.MXFContext* %mxf, [16 x i8]* %strong_ref) #0 !dbg !10491 {
entry:
  %retval = alloca %struct.MXFTrack.1*, align 8
  %mxf.addr = alloca %struct.MXFContext*, align 8
  %strong_ref.addr = alloca [16 x i8]*, align 8
  %component = alloca %struct.MXFStructuralComponent*, align 8
  %pulldown = alloca %struct.MXFPulldownComponent*, align 8
  store %struct.MXFContext* %mxf, %struct.MXFContext** %mxf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf.addr, metadata !10494, metadata !2511), !dbg !10495
  store [16 x i8]* %strong_ref, [16 x i8]** %strong_ref.addr, align 8
  call void @llvm.dbg.declare(metadata [16 x i8]** %strong_ref.addr, metadata !10496, metadata !2511), !dbg !10497
  call void @llvm.dbg.declare(metadata %struct.MXFStructuralComponent** %component, metadata !10498, metadata !2511), !dbg !10499
  store %struct.MXFStructuralComponent* null, %struct.MXFStructuralComponent** %component, align 8, !dbg !10499
  call void @llvm.dbg.declare(metadata %struct.MXFPulldownComponent** %pulldown, metadata !10500, metadata !2511), !dbg !10501
  store %struct.MXFPulldownComponent* null, %struct.MXFPulldownComponent** %pulldown, align 8, !dbg !10501
  %0 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !10502
  %1 = load [16 x i8]*, [16 x i8]** %strong_ref.addr, align 8, !dbg !10503
  %call = call i8* @mxf_resolve_strong_ref(%struct.MXFContext* %0, [16 x i8]* %1, i32 0), !dbg !10504
  %2 = bitcast i8* %call to %struct.MXFStructuralComponent*, !dbg !10504
  store %struct.MXFStructuralComponent* %2, %struct.MXFStructuralComponent** %component, align 8, !dbg !10505
  %3 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %component, align 8, !dbg !10506
  %tobool = icmp ne %struct.MXFStructuralComponent* %3, null, !dbg !10506
  br i1 %tobool, label %if.end, label %if.then, !dbg !10508

if.then:                                          ; preds = %entry
  store %struct.MXFTrack.1* null, %struct.MXFTrack.1** %retval, align 8, !dbg !10509
  br label %return, !dbg !10509

if.end:                                           ; preds = %entry
  %4 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %component, align 8, !dbg !10510
  %type = getelementptr inbounds %struct.MXFStructuralComponent, %struct.MXFStructuralComponent* %4, i32 0, i32 1, !dbg !10511
  %5 = load i32, i32* %type, align 8, !dbg !10511
  switch i32 %5, label %sw.default [
    i32 4, label %sw.bb
    i32 5, label %sw.bb1
  ], !dbg !10512

sw.bb:                                            ; preds = %if.end
  %6 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %component, align 8, !dbg !10513
  %7 = bitcast %struct.MXFStructuralComponent* %6 to %struct.MXFTrack.1*, !dbg !10515
  store %struct.MXFTrack.1* %7, %struct.MXFTrack.1** %retval, align 8, !dbg !10516
  br label %return, !dbg !10516

sw.bb1:                                           ; preds = %if.end
  %8 = load %struct.MXFStructuralComponent*, %struct.MXFStructuralComponent** %component, align 8, !dbg !10517
  %9 = bitcast %struct.MXFStructuralComponent* %8 to %struct.MXFPulldownComponent*, !dbg !10518
  store %struct.MXFPulldownComponent* %9, %struct.MXFPulldownComponent** %pulldown, align 8, !dbg !10519
  %10 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !10520
  %11 = load %struct.MXFPulldownComponent*, %struct.MXFPulldownComponent** %pulldown, align 8, !dbg !10521
  %input_segment_ref = getelementptr inbounds %struct.MXFPulldownComponent, %struct.MXFPulldownComponent* %11, i32 0, i32 2, !dbg !10522
  %call2 = call i8* @mxf_resolve_strong_ref(%struct.MXFContext* %10, [16 x i8]* %input_segment_ref, i32 4), !dbg !10523
  %12 = bitcast i8* %call2 to %struct.MXFTrack.1*, !dbg !10523
  store %struct.MXFTrack.1* %12, %struct.MXFTrack.1** %retval, align 8, !dbg !10524
  br label %return, !dbg !10524

sw.default:                                       ; preds = %if.end
  br label %sw.epilog, !dbg !10525

sw.epilog:                                        ; preds = %sw.default
  store %struct.MXFTrack.1* null, %struct.MXFTrack.1** %retval, align 8, !dbg !10526
  br label %return, !dbg !10526

return:                                           ; preds = %sw.epilog, %sw.bb1, %sw.bb, %if.then
  %13 = load %struct.MXFTrack.1*, %struct.MXFTrack.1** %retval, align 8, !dbg !10527
  ret %struct.MXFTrack.1* %13, !dbg !10527
}

; Function Attrs: nounwind uwtable
define internal i32 @is_pcm(i32 %codec_id) #0 !dbg !10528 {
entry:
  %codec_id.addr = alloca i32, align 4
  store i32 %codec_id, i32* %codec_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %codec_id.addr, metadata !10531, metadata !2511), !dbg !10532
  %0 = load i32, i32* %codec_id.addr, align 4, !dbg !10533
  %cmp = icmp uge i32 %0, 65536, !dbg !10534
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !10535

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %codec_id.addr, align 4, !dbg !10536
  %cmp1 = icmp ult i32 %1, 65552, !dbg !10538
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ]
  %land.ext = zext i1 %2 to i32, !dbg !10539
  ret i32 %land.ext, !dbg !10541
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_get_sorted_table_segments(%struct.MXFContext* %mxf, i32* %nb_sorted_segments, %struct.MXFIndexTableSegment*** %sorted_segments) #0 !dbg !10542 {
entry:
  %retval = alloca i32, align 4
  %mxf.addr = alloca %struct.MXFContext*, align 8
  %nb_sorted_segments.addr = alloca i32*, align 8
  %sorted_segments.addr = alloca %struct.MXFIndexTableSegment***, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %nb_segments = alloca i32, align 4
  %unsorted_segments = alloca %struct.MXFIndexTableSegment**, align 8
  %last_body_sid = alloca i32, align 4
  %last_index_sid = alloca i32, align 4
  %last_index_start = alloca i32, align 4
  %s = alloca %struct.MXFIndexTableSegment*, align 8
  %best = alloca i32, align 4
  %best_body_sid = alloca i32, align 4
  %best_index_sid = alloca i32, align 4
  %best_index_start = alloca i32, align 4
  %best_index_duration = alloca i64, align 8
  %s49 = alloca %struct.MXFIndexTableSegment*, align 8
  store %struct.MXFContext* %mxf, %struct.MXFContext** %mxf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf.addr, metadata !10546, metadata !2511), !dbg !10547
  store i32* %nb_sorted_segments, i32** %nb_sorted_segments.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %nb_sorted_segments.addr, metadata !10548, metadata !2511), !dbg !10549
  store %struct.MXFIndexTableSegment*** %sorted_segments, %struct.MXFIndexTableSegment**** %sorted_segments.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFIndexTableSegment**** %sorted_segments.addr, metadata !10550, metadata !2511), !dbg !10551
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10552, metadata !2511), !dbg !10553
  call void @llvm.dbg.declare(metadata i32* %j, metadata !10554, metadata !2511), !dbg !10555
  call void @llvm.dbg.declare(metadata i32* %nb_segments, metadata !10556, metadata !2511), !dbg !10557
  store i32 0, i32* %nb_segments, align 4, !dbg !10557
  call void @llvm.dbg.declare(metadata %struct.MXFIndexTableSegment*** %unsorted_segments, metadata !10558, metadata !2511), !dbg !10559
  call void @llvm.dbg.declare(metadata i32* %last_body_sid, metadata !10560, metadata !2511), !dbg !10561
  store i32 -1, i32* %last_body_sid, align 4, !dbg !10561
  call void @llvm.dbg.declare(metadata i32* %last_index_sid, metadata !10562, metadata !2511), !dbg !10563
  store i32 -1, i32* %last_index_sid, align 4, !dbg !10563
  call void @llvm.dbg.declare(metadata i32* %last_index_start, metadata !10564, metadata !2511), !dbg !10565
  store i32 -1, i32* %last_index_start, align 4, !dbg !10565
  store i32 0, i32* %i, align 4, !dbg !10566
  br label %for.cond, !dbg !10568

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10569
  %1 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !10572
  %metadata_sets_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %1, i32 0, i32 9, !dbg !10573
  %2 = load i32, i32* %metadata_sets_count, align 8, !dbg !10573
  %cmp = icmp slt i32 %0, %2, !dbg !10574
  br i1 %cmp, label %for.body, label %for.end, !dbg !10575

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !10576
  %idxprom = sext i32 %3 to i64, !dbg !10578
  %4 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !10578
  %metadata_sets = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %4, i32 0, i32 8, !dbg !10579
  %5 = load %struct.MXFMetadataSet**, %struct.MXFMetadataSet*** %metadata_sets, align 8, !dbg !10579
  %arrayidx = getelementptr inbounds %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %5, i64 %idxprom, !dbg !10578
  %6 = load %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %arrayidx, align 8, !dbg !10578
  %type = getelementptr inbounds %struct.MXFMetadataSet, %struct.MXFMetadataSet* %6, i32 0, i32 1, !dbg !10580
  %7 = load i32, i32* %type, align 4, !dbg !10580
  %cmp1 = icmp eq i32 %7, 15, !dbg !10581
  br i1 %cmp1, label %if.then, label %if.end, !dbg !10582

if.then:                                          ; preds = %for.body
  %8 = load i32, i32* %nb_segments, align 4, !dbg !10583
  %inc = add nsw i32 %8, 1, !dbg !10583
  store i32 %inc, i32* %nb_segments, align 4, !dbg !10583
  br label %if.end, !dbg !10584

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !10585

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4, !dbg !10587
  %inc2 = add nsw i32 %9, 1, !dbg !10587
  store i32 %inc2, i32* %i, align 4, !dbg !10587
  br label %for.cond, !dbg !10589, !llvm.loop !10590

for.end:                                          ; preds = %for.cond
  %10 = load i32, i32* %nb_segments, align 4, !dbg !10592
  %tobool = icmp ne i32 %10, 0, !dbg !10592
  br i1 %tobool, label %if.end4, label %if.then3, !dbg !10594

if.then3:                                         ; preds = %for.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !10595
  br label %return, !dbg !10595

if.end4:                                          ; preds = %for.end
  %11 = load i32, i32* %nb_segments, align 4, !dbg !10596
  %conv = sext i32 %11 to i64, !dbg !10596
  %call = call noalias i8* @av_calloc(i64 %conv, i64 8), !dbg !10598
  %12 = bitcast i8* %call to %struct.MXFIndexTableSegment**, !dbg !10598
  store %struct.MXFIndexTableSegment** %12, %struct.MXFIndexTableSegment*** %unsorted_segments, align 8, !dbg !10599
  %tobool5 = icmp ne %struct.MXFIndexTableSegment** %12, null, !dbg !10599
  br i1 %tobool5, label %lor.lhs.false, label %if.then9, !dbg !10600

lor.lhs.false:                                    ; preds = %if.end4
  %13 = load i32, i32* %nb_segments, align 4, !dbg !10601
  %conv6 = sext i32 %13 to i64, !dbg !10601
  %call7 = call noalias i8* @av_calloc(i64 %conv6, i64 8), !dbg !10602
  %14 = bitcast i8* %call7 to %struct.MXFIndexTableSegment**, !dbg !10602
  %15 = load %struct.MXFIndexTableSegment***, %struct.MXFIndexTableSegment**** %sorted_segments.addr, align 8, !dbg !10603
  store %struct.MXFIndexTableSegment** %14, %struct.MXFIndexTableSegment*** %15, align 8, !dbg !10604
  %tobool8 = icmp ne %struct.MXFIndexTableSegment** %14, null, !dbg !10604
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !10605

if.then9:                                         ; preds = %lor.lhs.false, %if.end4
  %16 = load %struct.MXFIndexTableSegment***, %struct.MXFIndexTableSegment**** %sorted_segments.addr, align 8, !dbg !10607
  %17 = bitcast %struct.MXFIndexTableSegment*** %16 to i8*, !dbg !10607
  call void @av_freep(i8* %17), !dbg !10609
  %18 = load %struct.MXFIndexTableSegment**, %struct.MXFIndexTableSegment*** %unsorted_segments, align 8, !dbg !10610
  %19 = bitcast %struct.MXFIndexTableSegment** %18 to i8*, !dbg !10610
  call void @av_free(i8* %19), !dbg !10611
  store i32 -12, i32* %retval, align 4, !dbg !10612
  br label %return, !dbg !10612

if.end10:                                         ; preds = %lor.lhs.false
  store i32 0, i32* %nb_segments, align 4, !dbg !10613
  store i32 0, i32* %i, align 4, !dbg !10615
  br label %for.cond11, !dbg !10616

for.cond11:                                       ; preds = %for.inc35, %if.end10
  %20 = load i32, i32* %i, align 4, !dbg !10617
  %21 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !10620
  %metadata_sets_count12 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %21, i32 0, i32 9, !dbg !10621
  %22 = load i32, i32* %metadata_sets_count12, align 8, !dbg !10621
  %cmp13 = icmp slt i32 %20, %22, !dbg !10622
  br i1 %cmp13, label %for.body15, label %for.end37, !dbg !10623

for.body15:                                       ; preds = %for.cond11
  %23 = load i32, i32* %i, align 4, !dbg !10624
  %idxprom16 = sext i32 %23 to i64, !dbg !10627
  %24 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !10627
  %metadata_sets17 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %24, i32 0, i32 8, !dbg !10628
  %25 = load %struct.MXFMetadataSet**, %struct.MXFMetadataSet*** %metadata_sets17, align 8, !dbg !10628
  %arrayidx18 = getelementptr inbounds %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %25, i64 %idxprom16, !dbg !10627
  %26 = load %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %arrayidx18, align 8, !dbg !10627
  %type19 = getelementptr inbounds %struct.MXFMetadataSet, %struct.MXFMetadataSet* %26, i32 0, i32 1, !dbg !10629
  %27 = load i32, i32* %type19, align 4, !dbg !10629
  %cmp20 = icmp eq i32 %27, 15, !dbg !10630
  br i1 %cmp20, label %if.then22, label %if.end34, !dbg !10631

if.then22:                                        ; preds = %for.body15
  call void @llvm.dbg.declare(metadata %struct.MXFIndexTableSegment** %s, metadata !10632, metadata !2511), !dbg !10634
  %28 = load i32, i32* %i, align 4, !dbg !10635
  %idxprom23 = sext i32 %28 to i64, !dbg !10636
  %29 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !10636
  %metadata_sets24 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %29, i32 0, i32 8, !dbg !10637
  %30 = load %struct.MXFMetadataSet**, %struct.MXFMetadataSet*** %metadata_sets24, align 8, !dbg !10637
  %arrayidx25 = getelementptr inbounds %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %30, i64 %idxprom23, !dbg !10636
  %31 = load %struct.MXFMetadataSet*, %struct.MXFMetadataSet** %arrayidx25, align 8, !dbg !10636
  %32 = bitcast %struct.MXFMetadataSet* %31 to %struct.MXFIndexTableSegment*, !dbg !10638
  store %struct.MXFIndexTableSegment* %32, %struct.MXFIndexTableSegment** %s, align 8, !dbg !10634
  %33 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s, align 8, !dbg !10639
  %edit_unit_byte_count = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %33, i32 0, i32 2, !dbg !10641
  %34 = load i32, i32* %edit_unit_byte_count, align 4, !dbg !10641
  %tobool26 = icmp ne i32 %34, 0, !dbg !10639
  br i1 %tobool26, label %if.then29, label %lor.lhs.false27, !dbg !10642

lor.lhs.false27:                                  ; preds = %if.then22
  %35 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s, align 8, !dbg !10643
  %nb_index_entries = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %35, i32 0, i32 11, !dbg !10645
  %36 = load i32, i32* %nb_index_entries, align 8, !dbg !10645
  %tobool28 = icmp ne i32 %36, 0, !dbg !10643
  br i1 %tobool28, label %if.then29, label %if.else, !dbg !10646

if.then29:                                        ; preds = %lor.lhs.false27, %if.then22
  %37 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s, align 8, !dbg !10647
  %38 = load i32, i32* %nb_segments, align 4, !dbg !10648
  %inc30 = add nsw i32 %38, 1, !dbg !10648
  store i32 %inc30, i32* %nb_segments, align 4, !dbg !10648
  %idxprom31 = sext i32 %38 to i64, !dbg !10649
  %39 = load %struct.MXFIndexTableSegment**, %struct.MXFIndexTableSegment*** %unsorted_segments, align 8, !dbg !10649
  %arrayidx32 = getelementptr inbounds %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %39, i64 %idxprom31, !dbg !10649
  store %struct.MXFIndexTableSegment* %37, %struct.MXFIndexTableSegment** %arrayidx32, align 8, !dbg !10650
  br label %if.end33, !dbg !10649

if.else:                                          ; preds = %lor.lhs.false27
  %40 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !10651
  %fc = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %40, i32 0, i32 10, !dbg !10652
  %41 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc, align 8, !dbg !10652
  %42 = bitcast %struct.AVFormatContext* %41 to i8*, !dbg !10651
  %43 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s, align 8, !dbg !10653
  %index_sid = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %43, i32 0, i32 3, !dbg !10654
  %44 = load i32, i32* %index_sid, align 8, !dbg !10654
  %45 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s, align 8, !dbg !10655
  %index_start_position = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %45, i32 0, i32 6, !dbg !10656
  %46 = load i64, i64* %index_start_position, align 8, !dbg !10656
  call void (i8*, i32, i8*, ...) @av_log(i8* %42, i32 24, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.116, i32 0, i32 0), i32 %44, i64 %46), !dbg !10657
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.then29
  br label %if.end34, !dbg !10658

if.end34:                                         ; preds = %if.end33, %for.body15
  br label %for.inc35, !dbg !10659

for.inc35:                                        ; preds = %if.end34
  %47 = load i32, i32* %i, align 4, !dbg !10660
  %inc36 = add nsw i32 %47, 1, !dbg !10660
  store i32 %inc36, i32* %i, align 4, !dbg !10660
  br label %for.cond11, !dbg !10662, !llvm.loop !10663

for.end37:                                        ; preds = %for.cond11
  %48 = load i32, i32* %nb_segments, align 4, !dbg !10665
  %tobool38 = icmp ne i32 %48, 0, !dbg !10665
  br i1 %tobool38, label %if.end40, label %if.then39, !dbg !10667

if.then39:                                        ; preds = %for.end37
  %49 = load %struct.MXFIndexTableSegment***, %struct.MXFIndexTableSegment**** %sorted_segments.addr, align 8, !dbg !10668
  %50 = bitcast %struct.MXFIndexTableSegment*** %49 to i8*, !dbg !10668
  call void @av_freep(i8* %50), !dbg !10670
  %51 = load %struct.MXFIndexTableSegment**, %struct.MXFIndexTableSegment*** %unsorted_segments, align 8, !dbg !10671
  %52 = bitcast %struct.MXFIndexTableSegment** %51 to i8*, !dbg !10671
  call void @av_free(i8* %52), !dbg !10672
  store i32 -1094995529, i32* %retval, align 4, !dbg !10673
  br label %return, !dbg !10673

if.end40:                                         ; preds = %for.end37
  %53 = load i32*, i32** %nb_sorted_segments.addr, align 8, !dbg !10674
  store i32 0, i32* %53, align 4, !dbg !10675
  store i32 0, i32* %i, align 4, !dbg !10676
  br label %for.cond41, !dbg !10678

for.cond41:                                       ; preds = %for.inc140, %if.end40
  %54 = load i32, i32* %i, align 4, !dbg !10679
  %55 = load i32, i32* %nb_segments, align 4, !dbg !10682
  %cmp42 = icmp slt i32 %54, %55, !dbg !10683
  br i1 %cmp42, label %for.body44, label %for.end142, !dbg !10684

for.body44:                                       ; preds = %for.cond41
  call void @llvm.dbg.declare(metadata i32* %best, metadata !10685, metadata !2511), !dbg !10687
  store i32 -1, i32* %best, align 4, !dbg !10687
  call void @llvm.dbg.declare(metadata i32* %best_body_sid, metadata !10688, metadata !2511), !dbg !10689
  store i32 -1, i32* %best_body_sid, align 4, !dbg !10689
  call void @llvm.dbg.declare(metadata i32* %best_index_sid, metadata !10690, metadata !2511), !dbg !10691
  store i32 -1, i32* %best_index_sid, align 4, !dbg !10691
  call void @llvm.dbg.declare(metadata i32* %best_index_start, metadata !10692, metadata !2511), !dbg !10693
  store i32 -1, i32* %best_index_start, align 4, !dbg !10693
  call void @llvm.dbg.declare(metadata i64* %best_index_duration, metadata !10694, metadata !2511), !dbg !10695
  store i64 0, i64* %best_index_duration, align 8, !dbg !10695
  store i32 0, i32* %j, align 4, !dbg !10696
  br label %for.cond45, !dbg !10698

for.cond45:                                       ; preds = %for.inc128, %for.body44
  %56 = load i32, i32* %j, align 4, !dbg !10699
  %57 = load i32, i32* %nb_segments, align 4, !dbg !10702
  %cmp46 = icmp slt i32 %56, %57, !dbg !10703
  br i1 %cmp46, label %for.body48, label %for.end130, !dbg !10704

for.body48:                                       ; preds = %for.cond45
  call void @llvm.dbg.declare(metadata %struct.MXFIndexTableSegment** %s49, metadata !10705, metadata !2511), !dbg !10707
  %58 = load i32, i32* %j, align 4, !dbg !10708
  %idxprom50 = sext i32 %58 to i64, !dbg !10709
  %59 = load %struct.MXFIndexTableSegment**, %struct.MXFIndexTableSegment*** %unsorted_segments, align 8, !dbg !10709
  %arrayidx51 = getelementptr inbounds %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %59, i64 %idxprom50, !dbg !10709
  %60 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %arrayidx51, align 8, !dbg !10709
  store %struct.MXFIndexTableSegment* %60, %struct.MXFIndexTableSegment** %s49, align 8, !dbg !10707
  %61 = load i32, i32* %i, align 4, !dbg !10710
  %cmp52 = icmp eq i32 %61, 0, !dbg !10712
  br i1 %cmp52, label %land.lhs.true77, label %lor.lhs.false54, !dbg !10713

lor.lhs.false54:                                  ; preds = %for.body48
  %62 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s49, align 8, !dbg !10714
  %body_sid = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %62, i32 0, i32 4, !dbg !10715
  %63 = load i32, i32* %body_sid, align 4, !dbg !10715
  %64 = load i32, i32* %last_body_sid, align 4, !dbg !10716
  %cmp55 = icmp sgt i32 %63, %64, !dbg !10717
  br i1 %cmp55, label %land.lhs.true77, label %lor.lhs.false57, !dbg !10718

lor.lhs.false57:                                  ; preds = %lor.lhs.false54
  %65 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s49, align 8, !dbg !10719
  %body_sid58 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %65, i32 0, i32 4, !dbg !10720
  %66 = load i32, i32* %body_sid58, align 4, !dbg !10720
  %67 = load i32, i32* %last_body_sid, align 4, !dbg !10721
  %cmp59 = icmp eq i32 %66, %67, !dbg !10722
  br i1 %cmp59, label %land.lhs.true, label %lor.lhs.false64, !dbg !10723

land.lhs.true:                                    ; preds = %lor.lhs.false57
  %68 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s49, align 8, !dbg !10724
  %index_sid61 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %68, i32 0, i32 3, !dbg !10726
  %69 = load i32, i32* %index_sid61, align 8, !dbg !10726
  %70 = load i32, i32* %last_index_sid, align 4, !dbg !10727
  %cmp62 = icmp sgt i32 %69, %70, !dbg !10728
  br i1 %cmp62, label %land.lhs.true77, label %lor.lhs.false64, !dbg !10729

lor.lhs.false64:                                  ; preds = %land.lhs.true, %lor.lhs.false57
  %71 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s49, align 8, !dbg !10730
  %body_sid65 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %71, i32 0, i32 4, !dbg !10731
  %72 = load i32, i32* %body_sid65, align 4, !dbg !10731
  %73 = load i32, i32* %last_body_sid, align 4, !dbg !10732
  %cmp66 = icmp eq i32 %72, %73, !dbg !10733
  br i1 %cmp66, label %land.lhs.true68, label %if.end127, !dbg !10734

land.lhs.true68:                                  ; preds = %lor.lhs.false64
  %74 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s49, align 8, !dbg !10735
  %index_sid69 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %74, i32 0, i32 3, !dbg !10736
  %75 = load i32, i32* %index_sid69, align 8, !dbg !10736
  %76 = load i32, i32* %last_index_sid, align 4, !dbg !10737
  %cmp70 = icmp eq i32 %75, %76, !dbg !10738
  br i1 %cmp70, label %land.lhs.true72, label %if.end127, !dbg !10739

land.lhs.true72:                                  ; preds = %land.lhs.true68
  %77 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s49, align 8, !dbg !10740
  %index_start_position73 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %77, i32 0, i32 6, !dbg !10742
  %78 = load i64, i64* %index_start_position73, align 8, !dbg !10742
  %79 = load i32, i32* %last_index_start, align 4, !dbg !10743
  %conv74 = sext i32 %79 to i64, !dbg !10743
  %cmp75 = icmp ugt i64 %78, %conv74, !dbg !10744
  br i1 %cmp75, label %land.lhs.true77, label %if.end127, !dbg !10745

land.lhs.true77:                                  ; preds = %land.lhs.true72, %land.lhs.true, %lor.lhs.false54, %for.body48
  %80 = load i32, i32* %best, align 4, !dbg !10746
  %cmp78 = icmp eq i32 %80, -1, !dbg !10747
  br i1 %cmp78, label %if.then121, label %lor.lhs.false80, !dbg !10748

lor.lhs.false80:                                  ; preds = %land.lhs.true77
  %81 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s49, align 8, !dbg !10749
  %body_sid81 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %81, i32 0, i32 4, !dbg !10750
  %82 = load i32, i32* %body_sid81, align 4, !dbg !10750
  %83 = load i32, i32* %best_body_sid, align 4, !dbg !10751
  %cmp82 = icmp slt i32 %82, %83, !dbg !10752
  br i1 %cmp82, label %if.then121, label %lor.lhs.false84, !dbg !10753

lor.lhs.false84:                                  ; preds = %lor.lhs.false80
  %84 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s49, align 8, !dbg !10754
  %body_sid85 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %84, i32 0, i32 4, !dbg !10755
  %85 = load i32, i32* %body_sid85, align 4, !dbg !10755
  %86 = load i32, i32* %best_body_sid, align 4, !dbg !10756
  %cmp86 = icmp eq i32 %85, %86, !dbg !10757
  br i1 %cmp86, label %land.lhs.true88, label %lor.lhs.false92, !dbg !10758

land.lhs.true88:                                  ; preds = %lor.lhs.false84
  %87 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s49, align 8, !dbg !10759
  %index_sid89 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %87, i32 0, i32 3, !dbg !10760
  %88 = load i32, i32* %index_sid89, align 8, !dbg !10760
  %89 = load i32, i32* %best_index_sid, align 4, !dbg !10761
  %cmp90 = icmp slt i32 %88, %89, !dbg !10762
  br i1 %cmp90, label %if.then121, label %lor.lhs.false92, !dbg !10763

lor.lhs.false92:                                  ; preds = %land.lhs.true88, %lor.lhs.false84
  %90 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s49, align 8, !dbg !10764
  %body_sid93 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %90, i32 0, i32 4, !dbg !10765
  %91 = load i32, i32* %body_sid93, align 4, !dbg !10765
  %92 = load i32, i32* %best_body_sid, align 4, !dbg !10766
  %cmp94 = icmp eq i32 %91, %92, !dbg !10767
  br i1 %cmp94, label %land.lhs.true96, label %lor.lhs.false105, !dbg !10768

land.lhs.true96:                                  ; preds = %lor.lhs.false92
  %93 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s49, align 8, !dbg !10769
  %index_sid97 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %93, i32 0, i32 3, !dbg !10770
  %94 = load i32, i32* %index_sid97, align 8, !dbg !10770
  %95 = load i32, i32* %best_index_sid, align 4, !dbg !10771
  %cmp98 = icmp eq i32 %94, %95, !dbg !10772
  br i1 %cmp98, label %land.lhs.true100, label %lor.lhs.false105, !dbg !10773

land.lhs.true100:                                 ; preds = %land.lhs.true96
  %96 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s49, align 8, !dbg !10774
  %index_start_position101 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %96, i32 0, i32 6, !dbg !10775
  %97 = load i64, i64* %index_start_position101, align 8, !dbg !10775
  %98 = load i32, i32* %best_index_start, align 4, !dbg !10776
  %conv102 = sext i32 %98 to i64, !dbg !10776
  %cmp103 = icmp ult i64 %97, %conv102, !dbg !10777
  br i1 %cmp103, label %if.then121, label %lor.lhs.false105, !dbg !10778

lor.lhs.false105:                                 ; preds = %land.lhs.true100, %land.lhs.true96, %lor.lhs.false92
  %99 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s49, align 8, !dbg !10779
  %body_sid106 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %99, i32 0, i32 4, !dbg !10780
  %100 = load i32, i32* %body_sid106, align 4, !dbg !10780
  %101 = load i32, i32* %best_body_sid, align 4, !dbg !10781
  %cmp107 = icmp eq i32 %100, %101, !dbg !10782
  br i1 %cmp107, label %land.lhs.true109, label %if.end127, !dbg !10783

land.lhs.true109:                                 ; preds = %lor.lhs.false105
  %102 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s49, align 8, !dbg !10784
  %index_sid110 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %102, i32 0, i32 3, !dbg !10785
  %103 = load i32, i32* %index_sid110, align 8, !dbg !10785
  %104 = load i32, i32* %best_index_sid, align 4, !dbg !10786
  %cmp111 = icmp eq i32 %103, %104, !dbg !10787
  br i1 %cmp111, label %land.lhs.true113, label %if.end127, !dbg !10788

land.lhs.true113:                                 ; preds = %land.lhs.true109
  %105 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s49, align 8, !dbg !10789
  %index_start_position114 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %105, i32 0, i32 6, !dbg !10790
  %106 = load i64, i64* %index_start_position114, align 8, !dbg !10790
  %107 = load i32, i32* %best_index_start, align 4, !dbg !10791
  %conv115 = sext i32 %107 to i64, !dbg !10791
  %cmp116 = icmp eq i64 %106, %conv115, !dbg !10792
  br i1 %cmp116, label %land.lhs.true118, label %if.end127, !dbg !10793

land.lhs.true118:                                 ; preds = %land.lhs.true113
  %108 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s49, align 8, !dbg !10794
  %index_duration = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %108, i32 0, i32 7, !dbg !10796
  %109 = load i64, i64* %index_duration, align 8, !dbg !10796
  %110 = load i64, i64* %best_index_duration, align 8, !dbg !10797
  %cmp119 = icmp ugt i64 %109, %110, !dbg !10798
  br i1 %cmp119, label %if.then121, label %if.end127, !dbg !10799

if.then121:                                       ; preds = %land.lhs.true118, %land.lhs.true100, %land.lhs.true88, %lor.lhs.false80, %land.lhs.true77
  %111 = load i32, i32* %j, align 4, !dbg !10801
  store i32 %111, i32* %best, align 4, !dbg !10803
  %112 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s49, align 8, !dbg !10804
  %body_sid122 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %112, i32 0, i32 4, !dbg !10805
  %113 = load i32, i32* %body_sid122, align 4, !dbg !10805
  store i32 %113, i32* %best_body_sid, align 4, !dbg !10806
  %114 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s49, align 8, !dbg !10807
  %index_sid123 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %114, i32 0, i32 3, !dbg !10808
  %115 = load i32, i32* %index_sid123, align 8, !dbg !10808
  store i32 %115, i32* %best_index_sid, align 4, !dbg !10809
  %116 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s49, align 8, !dbg !10810
  %index_start_position124 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %116, i32 0, i32 6, !dbg !10811
  %117 = load i64, i64* %index_start_position124, align 8, !dbg !10811
  %conv125 = trunc i64 %117 to i32, !dbg !10810
  store i32 %conv125, i32* %best_index_start, align 4, !dbg !10812
  %118 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s49, align 8, !dbg !10813
  %index_duration126 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %118, i32 0, i32 7, !dbg !10814
  %119 = load i64, i64* %index_duration126, align 8, !dbg !10814
  store i64 %119, i64* %best_index_duration, align 8, !dbg !10815
  br label %if.end127, !dbg !10816

if.end127:                                        ; preds = %if.then121, %land.lhs.true118, %land.lhs.true113, %land.lhs.true109, %lor.lhs.false105, %land.lhs.true72, %land.lhs.true68, %lor.lhs.false64
  br label %for.inc128, !dbg !10817

for.inc128:                                       ; preds = %if.end127
  %120 = load i32, i32* %j, align 4, !dbg !10818
  %inc129 = add nsw i32 %120, 1, !dbg !10818
  store i32 %inc129, i32* %j, align 4, !dbg !10818
  br label %for.cond45, !dbg !10820, !llvm.loop !10821

for.end130:                                       ; preds = %for.cond45
  %121 = load i32, i32* %best, align 4, !dbg !10823
  %cmp131 = icmp eq i32 %121, -1, !dbg !10825
  br i1 %cmp131, label %if.then133, label %if.end134, !dbg !10826

if.then133:                                       ; preds = %for.end130
  br label %for.end142, !dbg !10827

if.end134:                                        ; preds = %for.end130
  %122 = load i32, i32* %best, align 4, !dbg !10828
  %idxprom135 = sext i32 %122 to i64, !dbg !10829
  %123 = load %struct.MXFIndexTableSegment**, %struct.MXFIndexTableSegment*** %unsorted_segments, align 8, !dbg !10829
  %arrayidx136 = getelementptr inbounds %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %123, i64 %idxprom135, !dbg !10829
  %124 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %arrayidx136, align 8, !dbg !10829
  %125 = load i32*, i32** %nb_sorted_segments.addr, align 8, !dbg !10830
  %126 = load i32, i32* %125, align 4, !dbg !10831
  %inc137 = add nsw i32 %126, 1, !dbg !10831
  store i32 %inc137, i32* %125, align 4, !dbg !10831
  %idxprom138 = sext i32 %126 to i64, !dbg !10832
  %127 = load %struct.MXFIndexTableSegment***, %struct.MXFIndexTableSegment**** %sorted_segments.addr, align 8, !dbg !10833
  %128 = load %struct.MXFIndexTableSegment**, %struct.MXFIndexTableSegment*** %127, align 8, !dbg !10834
  %arrayidx139 = getelementptr inbounds %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %128, i64 %idxprom138, !dbg !10832
  store %struct.MXFIndexTableSegment* %124, %struct.MXFIndexTableSegment** %arrayidx139, align 8, !dbg !10835
  %129 = load i32, i32* %best_body_sid, align 4, !dbg !10836
  store i32 %129, i32* %last_body_sid, align 4, !dbg !10837
  %130 = load i32, i32* %best_index_sid, align 4, !dbg !10838
  store i32 %130, i32* %last_index_sid, align 4, !dbg !10839
  %131 = load i32, i32* %best_index_start, align 4, !dbg !10840
  store i32 %131, i32* %last_index_start, align 4, !dbg !10841
  br label %for.inc140, !dbg !10842

for.inc140:                                       ; preds = %if.end134
  %132 = load i32, i32* %i, align 4, !dbg !10843
  %inc141 = add nsw i32 %132, 1, !dbg !10843
  store i32 %inc141, i32* %i, align 4, !dbg !10843
  br label %for.cond41, !dbg !10845, !llvm.loop !10846

for.end142:                                       ; preds = %if.then133, %for.cond41
  %133 = load %struct.MXFIndexTableSegment**, %struct.MXFIndexTableSegment*** %unsorted_segments, align 8, !dbg !10848
  %134 = bitcast %struct.MXFIndexTableSegment** %133 to i8*, !dbg !10848
  call void @av_free(i8* %134), !dbg !10849
  store i32 0, i32* %retval, align 4, !dbg !10850
  br label %return, !dbg !10850

return:                                           ; preds = %for.end142, %if.then39, %if.then9, %if.then3
  %135 = load i32, i32* %retval, align 4, !dbg !10851
  ret i32 %135, !dbg !10851
}

declare i8* @av_mallocz_array(i64, i64) #1

; Function Attrs: nounwind uwtable
define internal i32 @mxf_compute_ptses_fake_index(%struct.MXFContext* %mxf, %struct.MXFIndexTable* %index_table) #0 !dbg !10852 {
entry:
  %retval = alloca i32, align 4
  %mxf.addr = alloca %struct.MXFContext*, align 8
  %index_table.addr = alloca %struct.MXFIndexTable*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %x = alloca i32, align 4
  %max_temporal_offset = alloca i8, align 1
  %flags = alloca i8*, align 8
  %s = alloca %struct.MXFIndexTableSegment*, align 8
  %s54 = alloca %struct.MXFIndexTableSegment*, align 8
  %index_delta = alloca i32, align 4
  %n = alloca i32, align 4
  %offset = alloca i32, align 4
  %index = alloca i32, align 4
  store %struct.MXFContext* %mxf, %struct.MXFContext** %mxf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf.addr, metadata !10855, metadata !2511), !dbg !10856
  store %struct.MXFIndexTable* %index_table, %struct.MXFIndexTable** %index_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFIndexTable** %index_table.addr, metadata !10857, metadata !2511), !dbg !10858
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10859, metadata !2511), !dbg !10860
  call void @llvm.dbg.declare(metadata i32* %j, metadata !10861, metadata !2511), !dbg !10862
  call void @llvm.dbg.declare(metadata i32* %x, metadata !10863, metadata !2511), !dbg !10864
  call void @llvm.dbg.declare(metadata i8* %max_temporal_offset, metadata !10865, metadata !2511), !dbg !10866
  store i8 -128, i8* %max_temporal_offset, align 1, !dbg !10866
  call void @llvm.dbg.declare(metadata i8** %flags, metadata !10867, metadata !2511), !dbg !10868
  store i32 0, i32* %i, align 4, !dbg !10869
  br label %for.cond, !dbg !10871

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10872
  %1 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !10875
  %nb_segments = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %1, i32 0, i32 5, !dbg !10876
  %2 = load i32, i32* %nb_segments, align 8, !dbg !10876
  %cmp = icmp slt i32 %0, %2, !dbg !10877
  br i1 %cmp, label %for.body, label %for.end, !dbg !10878

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MXFIndexTableSegment** %s, metadata !10879, metadata !2511), !dbg !10881
  %3 = load i32, i32* %i, align 4, !dbg !10882
  %idxprom = sext i32 %3 to i64, !dbg !10883
  %4 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !10883
  %segments = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %4, i32 0, i32 6, !dbg !10884
  %5 = load %struct.MXFIndexTableSegment**, %struct.MXFIndexTableSegment*** %segments, align 8, !dbg !10884
  %arrayidx = getelementptr inbounds %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %5, i64 %idxprom, !dbg !10883
  %6 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %arrayidx, align 8, !dbg !10883
  store %struct.MXFIndexTableSegment* %6, %struct.MXFIndexTableSegment** %s, align 8, !dbg !10881
  %7 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s, align 8, !dbg !10885
  %nb_index_entries = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %7, i32 0, i32 11, !dbg !10887
  %8 = load i32, i32* %nb_index_entries, align 8, !dbg !10887
  %tobool = icmp ne i32 %8, 0, !dbg !10885
  br i1 %tobool, label %if.end, label %if.then, !dbg !10888

if.then:                                          ; preds = %for.body
  %9 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !10889
  %nb_ptses = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %9, i32 0, i32 2, !dbg !10891
  store i32 0, i32* %nb_ptses, align 8, !dbg !10892
  store i32 0, i32* %retval, align 4, !dbg !10893
  br label %return, !dbg !10893

if.end:                                           ; preds = %for.body
  %10 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s, align 8, !dbg !10894
  %index_duration = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %10, i32 0, i32 7, !dbg !10896
  %11 = load i64, i64* %index_duration, align 8, !dbg !10896
  %12 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !10897
  %nb_ptses1 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %12, i32 0, i32 2, !dbg !10898
  %13 = load i32, i32* %nb_ptses1, align 8, !dbg !10898
  %sub = sub nsw i32 2147483647, %13, !dbg !10899
  %conv = sext i32 %sub to i64, !dbg !10900
  %cmp2 = icmp ugt i64 %11, %conv, !dbg !10901
  br i1 %cmp2, label %if.then4, label %if.end6, !dbg !10902

if.then4:                                         ; preds = %if.end
  %14 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !10903
  %nb_ptses5 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %14, i32 0, i32 2, !dbg !10905
  store i32 0, i32* %nb_ptses5, align 8, !dbg !10906
  %15 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !10907
  %fc = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %15, i32 0, i32 10, !dbg !10908
  %16 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc, align 8, !dbg !10908
  %17 = bitcast %struct.AVFormatContext* %16 to i8*, !dbg !10907
  %18 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s, align 8, !dbg !10909
  %index_sid = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %18, i32 0, i32 3, !dbg !10910
  %19 = load i32, i32* %index_sid, align 8, !dbg !10910
  call void (i8*, i32, i8*, ...) @av_log(i8* %17, i32 16, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.117, i32 0, i32 0), i32 %19), !dbg !10911
  store i32 0, i32* %retval, align 4, !dbg !10912
  br label %return, !dbg !10912

if.end6:                                          ; preds = %if.end
  %20 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s, align 8, !dbg !10913
  %index_duration7 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %20, i32 0, i32 7, !dbg !10914
  %21 = load i64, i64* %index_duration7, align 8, !dbg !10914
  %22 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !10915
  %nb_ptses8 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %22, i32 0, i32 2, !dbg !10916
  %23 = load i32, i32* %nb_ptses8, align 8, !dbg !10917
  %conv9 = sext i32 %23 to i64, !dbg !10917
  %add = add i64 %conv9, %21, !dbg !10917
  %conv10 = trunc i64 %add to i32, !dbg !10917
  store i32 %conv10, i32* %nb_ptses8, align 8, !dbg !10917
  br label %for.inc, !dbg !10918

for.inc:                                          ; preds = %if.end6
  %24 = load i32, i32* %i, align 4, !dbg !10919
  %inc = add nsw i32 %24, 1, !dbg !10919
  store i32 %inc, i32* %i, align 4, !dbg !10919
  br label %for.cond, !dbg !10921, !llvm.loop !10922

for.end:                                          ; preds = %for.cond
  %25 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !10924
  %nb_ptses11 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %25, i32 0, i32 2, !dbg !10926
  %26 = load i32, i32* %nb_ptses11, align 8, !dbg !10926
  %cmp12 = icmp sle i32 %26, 0, !dbg !10927
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !10928

if.then14:                                        ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !10929
  br label %return, !dbg !10929

if.end15:                                         ; preds = %for.end
  %27 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !10930
  %nb_ptses16 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %27, i32 0, i32 2, !dbg !10932
  %28 = load i32, i32* %nb_ptses16, align 8, !dbg !10932
  %conv17 = sext i32 %28 to i64, !dbg !10930
  %call = call noalias i8* @av_calloc(i64 %conv17, i64 8), !dbg !10933
  %29 = bitcast i8* %call to i64*, !dbg !10933
  %30 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !10934
  %ptses = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %30, i32 0, i32 4, !dbg !10935
  store i64* %29, i64** %ptses, align 8, !dbg !10936
  %tobool18 = icmp ne i64* %29, null, !dbg !10936
  br i1 %tobool18, label %lor.lhs.false, label %if.then33, !dbg !10937

lor.lhs.false:                                    ; preds = %if.end15
  %31 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !10938
  %nb_ptses19 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %31, i32 0, i32 2, !dbg !10939
  %32 = load i32, i32* %nb_ptses19, align 8, !dbg !10939
  %conv20 = sext i32 %32 to i64, !dbg !10938
  %call21 = call noalias i8* @av_calloc(i64 %conv20, i64 24), !dbg !10940
  %33 = bitcast i8* %call21 to %struct.AVIndexEntry*, !dbg !10940
  %34 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !10941
  %fake_index = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %34, i32 0, i32 7, !dbg !10942
  store %struct.AVIndexEntry* %33, %struct.AVIndexEntry** %fake_index, align 8, !dbg !10943
  %tobool22 = icmp ne %struct.AVIndexEntry* %33, null, !dbg !10943
  br i1 %tobool22, label %lor.lhs.false23, label %if.then33, !dbg !10944

lor.lhs.false23:                                  ; preds = %lor.lhs.false
  %35 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !10945
  %nb_ptses24 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %35, i32 0, i32 2, !dbg !10946
  %36 = load i32, i32* %nb_ptses24, align 8, !dbg !10946
  %conv25 = sext i32 %36 to i64, !dbg !10945
  %call26 = call noalias i8* @av_calloc(i64 %conv25, i64 1), !dbg !10947
  %37 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !10948
  %offsets = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %37, i32 0, i32 8, !dbg !10949
  store i8* %call26, i8** %offsets, align 8, !dbg !10950
  %tobool27 = icmp ne i8* %call26, null, !dbg !10950
  br i1 %tobool27, label %lor.lhs.false28, label %if.then33, !dbg !10951

lor.lhs.false28:                                  ; preds = %lor.lhs.false23
  %38 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !10952
  %nb_ptses29 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %38, i32 0, i32 2, !dbg !10953
  %39 = load i32, i32* %nb_ptses29, align 8, !dbg !10953
  %conv30 = sext i32 %39 to i64, !dbg !10952
  %call31 = call noalias i8* @av_calloc(i64 %conv30, i64 1), !dbg !10954
  store i8* %call31, i8** %flags, align 8, !dbg !10955
  %tobool32 = icmp ne i8* %call31, null, !dbg !10955
  br i1 %tobool32, label %if.end37, label %if.then33, !dbg !10956

if.then33:                                        ; preds = %lor.lhs.false28, %lor.lhs.false23, %lor.lhs.false, %if.end15
  %40 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !10958
  %ptses34 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %40, i32 0, i32 4, !dbg !10960
  %41 = bitcast i64** %ptses34 to i8*, !dbg !10961
  call void @av_freep(i8* %41), !dbg !10962
  %42 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !10963
  %fake_index35 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %42, i32 0, i32 7, !dbg !10964
  %43 = bitcast %struct.AVIndexEntry** %fake_index35 to i8*, !dbg !10965
  call void @av_freep(i8* %43), !dbg !10966
  %44 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !10967
  %offsets36 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %44, i32 0, i32 8, !dbg !10968
  %45 = bitcast i8** %offsets36 to i8*, !dbg !10969
  call void @av_freep(i8* %45), !dbg !10970
  store i32 -12, i32* %retval, align 4, !dbg !10971
  br label %return, !dbg !10971

if.end37:                                         ; preds = %lor.lhs.false28
  store i32 0, i32* %x, align 4, !dbg !10972
  br label %for.cond38, !dbg !10974

for.cond38:                                       ; preds = %for.inc46, %if.end37
  %46 = load i32, i32* %x, align 4, !dbg !10975
  %47 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !10978
  %nb_ptses39 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %47, i32 0, i32 2, !dbg !10979
  %48 = load i32, i32* %nb_ptses39, align 8, !dbg !10979
  %cmp40 = icmp slt i32 %46, %48, !dbg !10980
  br i1 %cmp40, label %for.body42, label %for.end48, !dbg !10981

for.body42:                                       ; preds = %for.cond38
  %49 = load i32, i32* %x, align 4, !dbg !10982
  %idxprom43 = sext i32 %49 to i64, !dbg !10983
  %50 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !10983
  %ptses44 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %50, i32 0, i32 4, !dbg !10984
  %51 = load i64*, i64** %ptses44, align 8, !dbg !10984
  %arrayidx45 = getelementptr inbounds i64, i64* %51, i64 %idxprom43, !dbg !10983
  store i64 -9223372036854775808, i64* %arrayidx45, align 8, !dbg !10985
  br label %for.inc46, !dbg !10983

for.inc46:                                        ; preds = %for.body42
  %52 = load i32, i32* %x, align 4, !dbg !10986
  %inc47 = add nsw i32 %52, 1, !dbg !10986
  store i32 %inc47, i32* %x, align 4, !dbg !10986
  br label %for.cond38, !dbg !10988, !llvm.loop !10989

for.end48:                                        ; preds = %for.cond38
  store i32 0, i32* %x, align 4, !dbg !10991
  store i32 0, i32* %i, align 4, !dbg !10993
  br label %for.cond49, !dbg !10994

for.cond49:                                       ; preds = %for.inc116, %for.end48
  %53 = load i32, i32* %i, align 4, !dbg !10995
  %54 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !10998
  %nb_segments50 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %54, i32 0, i32 5, !dbg !10999
  %55 = load i32, i32* %nb_segments50, align 8, !dbg !10999
  %cmp51 = icmp slt i32 %53, %55, !dbg !11000
  br i1 %cmp51, label %for.body53, label %for.end118, !dbg !11001

for.body53:                                       ; preds = %for.cond49
  call void @llvm.dbg.declare(metadata %struct.MXFIndexTableSegment** %s54, metadata !11002, metadata !2511), !dbg !11004
  %56 = load i32, i32* %i, align 4, !dbg !11005
  %idxprom55 = sext i32 %56 to i64, !dbg !11006
  %57 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !11006
  %segments56 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %57, i32 0, i32 6, !dbg !11007
  %58 = load %struct.MXFIndexTableSegment**, %struct.MXFIndexTableSegment*** %segments56, align 8, !dbg !11007
  %arrayidx57 = getelementptr inbounds %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %58, i64 %idxprom55, !dbg !11006
  %59 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %arrayidx57, align 8, !dbg !11006
  store %struct.MXFIndexTableSegment* %59, %struct.MXFIndexTableSegment** %s54, align 8, !dbg !11004
  call void @llvm.dbg.declare(metadata i32* %index_delta, metadata !11008, metadata !2511), !dbg !11009
  store i32 1, i32* %index_delta, align 4, !dbg !11009
  call void @llvm.dbg.declare(metadata i32* %n, metadata !11010, metadata !2511), !dbg !11011
  %60 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s54, align 8, !dbg !11012
  %nb_index_entries58 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %60, i32 0, i32 11, !dbg !11013
  %61 = load i32, i32* %nb_index_entries58, align 8, !dbg !11013
  store i32 %61, i32* %n, align 4, !dbg !11011
  %62 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s54, align 8, !dbg !11014
  %nb_index_entries59 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %62, i32 0, i32 11, !dbg !11016
  %63 = load i32, i32* %nb_index_entries59, align 8, !dbg !11016
  %conv60 = sext i32 %63 to i64, !dbg !11014
  %64 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s54, align 8, !dbg !11017
  %index_duration61 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %64, i32 0, i32 7, !dbg !11018
  %65 = load i64, i64* %index_duration61, align 8, !dbg !11018
  %mul = mul i64 2, %65, !dbg !11019
  %add62 = add i64 %mul, 1, !dbg !11020
  %cmp63 = icmp eq i64 %conv60, %add62, !dbg !11021
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !11022

if.then65:                                        ; preds = %for.body53
  store i32 2, i32* %index_delta, align 4, !dbg !11023
  %66 = load i32, i32* %n, align 4, !dbg !11025
  %dec = add nsw i32 %66, -1, !dbg !11025
  store i32 %dec, i32* %n, align 4, !dbg !11025
  br label %if.end66, !dbg !11026

if.end66:                                         ; preds = %if.then65, %for.body53
  store i32 0, i32* %j, align 4, !dbg !11027
  br label %for.cond67, !dbg !11029

for.cond67:                                       ; preds = %for.inc112, %if.end66
  %67 = load i32, i32* %j, align 4, !dbg !11030
  %68 = load i32, i32* %n, align 4, !dbg !11033
  %cmp68 = icmp slt i32 %67, %68, !dbg !11034
  br i1 %cmp68, label %for.body70, label %for.end115, !dbg !11035

for.body70:                                       ; preds = %for.cond67
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !11036, metadata !2511), !dbg !11038
  %69 = load i32, i32* %j, align 4, !dbg !11039
  %idxprom71 = sext i32 %69 to i64, !dbg !11040
  %70 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s54, align 8, !dbg !11040
  %temporal_offset_entries = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %70, i32 0, i32 8, !dbg !11041
  %71 = load i8*, i8** %temporal_offset_entries, align 8, !dbg !11041
  %arrayidx72 = getelementptr inbounds i8, i8* %71, i64 %idxprom71, !dbg !11040
  %72 = load i8, i8* %arrayidx72, align 1, !dbg !11040
  %conv73 = sext i8 %72 to i32, !dbg !11040
  %73 = load i32, i32* %index_delta, align 4, !dbg !11042
  %div = sdiv i32 %conv73, %73, !dbg !11043
  store i32 %div, i32* %offset, align 4, !dbg !11038
  call void @llvm.dbg.declare(metadata i32* %index, metadata !11044, metadata !2511), !dbg !11045
  %74 = load i32, i32* %x, align 4, !dbg !11046
  %75 = load i32, i32* %offset, align 4, !dbg !11047
  %add74 = add nsw i32 %74, %75, !dbg !11048
  store i32 %add74, i32* %index, align 4, !dbg !11045
  %76 = load i32, i32* %x, align 4, !dbg !11049
  %77 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !11051
  %nb_ptses75 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %77, i32 0, i32 2, !dbg !11052
  %78 = load i32, i32* %nb_ptses75, align 8, !dbg !11052
  %cmp76 = icmp sge i32 %76, %78, !dbg !11053
  br i1 %cmp76, label %if.then78, label %if.end82, !dbg !11054

if.then78:                                        ; preds = %for.body70
  %79 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !11055
  %fc79 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %79, i32 0, i32 10, !dbg !11057
  %80 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc79, align 8, !dbg !11057
  %81 = bitcast %struct.AVFormatContext* %80 to i8*, !dbg !11055
  %82 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s54, align 8, !dbg !11058
  %nb_index_entries80 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %82, i32 0, i32 11, !dbg !11059
  %83 = load i32, i32* %nb_index_entries80, align 8, !dbg !11059
  %84 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s54, align 8, !dbg !11060
  %index_duration81 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %84, i32 0, i32 7, !dbg !11061
  %85 = load i64, i64* %index_duration81, align 8, !dbg !11061
  call void (i8*, i32, i8*, ...) @av_log(i8* %81, i32 16, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.118, i32 0, i32 0), i32 %83, i64 %85), !dbg !11062
  br label %for.end115, !dbg !11063

if.end82:                                         ; preds = %for.body70
  %86 = load i32, i32* %j, align 4, !dbg !11064
  %idxprom83 = sext i32 %86 to i64, !dbg !11065
  %87 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s54, align 8, !dbg !11065
  %flag_entries = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %87, i32 0, i32 9, !dbg !11066
  %88 = load i32*, i32** %flag_entries, align 8, !dbg !11066
  %arrayidx84 = getelementptr inbounds i32, i32* %88, i64 %idxprom83, !dbg !11065
  %89 = load i32, i32* %arrayidx84, align 4, !dbg !11065
  %and = and i32 %89, 48, !dbg !11067
  %tobool85 = icmp ne i32 %and, 0, !dbg !11068
  %lnot = xor i1 %tobool85, true, !dbg !11068
  %cond = select i1 %lnot, i32 1, i32 0, !dbg !11068
  %conv86 = trunc i32 %cond to i8, !dbg !11068
  %90 = load i32, i32* %x, align 4, !dbg !11069
  %idxprom87 = sext i32 %90 to i64, !dbg !11070
  %91 = load i8*, i8** %flags, align 8, !dbg !11070
  %arrayidx88 = getelementptr inbounds i8, i8* %91, i64 %idxprom87, !dbg !11070
  store i8 %conv86, i8* %arrayidx88, align 1, !dbg !11071
  %92 = load i32, i32* %index, align 4, !dbg !11072
  %cmp89 = icmp slt i32 %92, 0, !dbg !11074
  br i1 %cmp89, label %if.then95, label %lor.lhs.false91, !dbg !11075

lor.lhs.false91:                                  ; preds = %if.end82
  %93 = load i32, i32* %index, align 4, !dbg !11076
  %94 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !11078
  %nb_ptses92 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %94, i32 0, i32 2, !dbg !11079
  %95 = load i32, i32* %nb_ptses92, align 8, !dbg !11079
  %cmp93 = icmp sge i32 %93, %95, !dbg !11080
  br i1 %cmp93, label %if.then95, label %if.end97, !dbg !11081

if.then95:                                        ; preds = %lor.lhs.false91, %if.end82
  %96 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !11082
  %fc96 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %96, i32 0, i32 10, !dbg !11084
  %97 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc96, align 8, !dbg !11084
  %98 = bitcast %struct.AVFormatContext* %97 to i8*, !dbg !11082
  %99 = load i32, i32* %x, align 4, !dbg !11085
  %100 = load i32, i32* %offset, align 4, !dbg !11086
  %101 = load i32, i32* %index, align 4, !dbg !11087
  call void (i8*, i32, i8*, ...) @av_log(i8* %98, i32 16, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.119, i32 0, i32 0), i32 %99, i32 %100, i32 %101), !dbg !11088
  br label %for.inc112, !dbg !11089

if.end97:                                         ; preds = %lor.lhs.false91
  %102 = load i32, i32* %offset, align 4, !dbg !11090
  %conv98 = trunc i32 %102 to i8, !dbg !11090
  %103 = load i32, i32* %x, align 4, !dbg !11091
  %idxprom99 = sext i32 %103 to i64, !dbg !11092
  %104 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !11092
  %offsets100 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %104, i32 0, i32 8, !dbg !11093
  %105 = load i8*, i8** %offsets100, align 8, !dbg !11093
  %arrayidx101 = getelementptr inbounds i8, i8* %105, i64 %idxprom99, !dbg !11092
  store i8 %conv98, i8* %arrayidx101, align 1, !dbg !11094
  %106 = load i32, i32* %x, align 4, !dbg !11095
  %conv102 = sext i32 %106 to i64, !dbg !11095
  %107 = load i32, i32* %index, align 4, !dbg !11096
  %idxprom103 = sext i32 %107 to i64, !dbg !11097
  %108 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !11097
  %ptses104 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %108, i32 0, i32 4, !dbg !11098
  %109 = load i64*, i64** %ptses104, align 8, !dbg !11098
  %arrayidx105 = getelementptr inbounds i64, i64* %109, i64 %idxprom103, !dbg !11097
  store i64 %conv102, i64* %arrayidx105, align 8, !dbg !11099
  %110 = load i8, i8* %max_temporal_offset, align 1, !dbg !11100
  %conv106 = sext i8 %110 to i32, !dbg !11101
  %111 = load i32, i32* %offset, align 4, !dbg !11102
  %cmp107 = icmp sgt i32 %conv106, %111, !dbg !11103
  br i1 %cmp107, label %cond.true, label %cond.false, !dbg !11101

cond.true:                                        ; preds = %if.end97
  %112 = load i8, i8* %max_temporal_offset, align 1, !dbg !11104
  %conv109 = sext i8 %112 to i32, !dbg !11106
  br label %cond.end, !dbg !11107

cond.false:                                       ; preds = %if.end97
  %113 = load i32, i32* %offset, align 4, !dbg !11108
  br label %cond.end, !dbg !11110

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond110 = phi i32 [ %conv109, %cond.true ], [ %113, %cond.false ], !dbg !11111
  %conv111 = trunc i32 %cond110 to i8, !dbg !11113
  store i8 %conv111, i8* %max_temporal_offset, align 1, !dbg !11114
  br label %for.inc112, !dbg !11115

for.inc112:                                       ; preds = %cond.end, %if.then95
  %114 = load i32, i32* %index_delta, align 4, !dbg !11116
  %115 = load i32, i32* %j, align 4, !dbg !11118
  %add113 = add nsw i32 %115, %114, !dbg !11118
  store i32 %add113, i32* %j, align 4, !dbg !11118
  %116 = load i32, i32* %x, align 4, !dbg !11119
  %inc114 = add nsw i32 %116, 1, !dbg !11119
  store i32 %inc114, i32* %x, align 4, !dbg !11119
  br label %for.cond67, !dbg !11120, !llvm.loop !11121

for.end115:                                       ; preds = %if.then78, %for.cond67
  br label %for.inc116, !dbg !11123

for.inc116:                                       ; preds = %for.end115
  %117 = load i32, i32* %i, align 4, !dbg !11124
  %inc117 = add nsw i32 %117, 1, !dbg !11124
  store i32 %inc117, i32* %i, align 4, !dbg !11124
  br label %for.cond49, !dbg !11126, !llvm.loop !11127

for.end118:                                       ; preds = %for.cond49
  store i32 0, i32* %x, align 4, !dbg !11129
  br label %for.cond119, !dbg !11131

for.cond119:                                      ; preds = %for.inc144, %for.end118
  %118 = load i32, i32* %x, align 4, !dbg !11132
  %119 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !11135
  %nb_ptses120 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %119, i32 0, i32 2, !dbg !11136
  %120 = load i32, i32* %nb_ptses120, align 8, !dbg !11136
  %cmp121 = icmp slt i32 %118, %120, !dbg !11137
  br i1 %cmp121, label %for.body123, label %for.end146, !dbg !11138

for.body123:                                      ; preds = %for.cond119
  %121 = load i32, i32* %x, align 4, !dbg !11139
  %conv124 = sext i32 %121 to i64, !dbg !11139
  %122 = load i32, i32* %x, align 4, !dbg !11141
  %idxprom125 = sext i32 %122 to i64, !dbg !11142
  %123 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !11142
  %fake_index126 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %123, i32 0, i32 7, !dbg !11143
  %124 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %fake_index126, align 8, !dbg !11143
  %arrayidx127 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %124, i64 %idxprom125, !dbg !11142
  %timestamp = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %arrayidx127, i32 0, i32 1, !dbg !11144
  store i64 %conv124, i64* %timestamp, align 8, !dbg !11145
  %125 = load i32, i32* %x, align 4, !dbg !11146
  %idxprom128 = sext i32 %125 to i64, !dbg !11148
  %126 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !11148
  %ptses129 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %126, i32 0, i32 4, !dbg !11149
  %127 = load i64*, i64** %ptses129, align 8, !dbg !11149
  %arrayidx130 = getelementptr inbounds i64, i64* %127, i64 %idxprom128, !dbg !11148
  %128 = load i64, i64* %arrayidx130, align 8, !dbg !11148
  %cmp131 = icmp ne i64 %128, -9223372036854775808, !dbg !11150
  br i1 %cmp131, label %if.then133, label %if.end143, !dbg !11151

if.then133:                                       ; preds = %for.body123
  %129 = load i32, i32* %x, align 4, !dbg !11152
  %idxprom134 = sext i32 %129 to i64, !dbg !11153
  %130 = load i8*, i8** %flags, align 8, !dbg !11153
  %arrayidx135 = getelementptr inbounds i8, i8* %130, i64 %idxprom134, !dbg !11153
  %131 = load i8, i8* %arrayidx135, align 1, !dbg !11153
  %conv136 = zext i8 %131 to i32, !dbg !11153
  %132 = load i32, i32* %x, align 4, !dbg !11154
  %idxprom137 = sext i32 %132 to i64, !dbg !11155
  %133 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !11155
  %ptses138 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %133, i32 0, i32 4, !dbg !11156
  %134 = load i64*, i64** %ptses138, align 8, !dbg !11156
  %arrayidx139 = getelementptr inbounds i64, i64* %134, i64 %idxprom137, !dbg !11155
  %135 = load i64, i64* %arrayidx139, align 8, !dbg !11155
  %136 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !11157
  %fake_index140 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %136, i32 0, i32 7, !dbg !11158
  %137 = load %struct.AVIndexEntry*, %struct.AVIndexEntry** %fake_index140, align 8, !dbg !11158
  %arrayidx141 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %137, i64 %135, !dbg !11157
  %flags142 = getelementptr inbounds %struct.AVIndexEntry, %struct.AVIndexEntry* %arrayidx141, i32 0, i32 2, !dbg !11159
  %bf.load = load i32, i32* %flags142, align 8, !dbg !11160
  %bf.value = and i32 %conv136, 3, !dbg !11160
  %bf.clear = and i32 %bf.load, -4, !dbg !11160
  %bf.set = or i32 %bf.clear, %bf.value, !dbg !11160
  store i32 %bf.set, i32* %flags142, align 8, !dbg !11160
  %bf.result.shl = shl i32 %bf.value, 30, !dbg !11160
  %bf.result.ashr = ashr i32 %bf.result.shl, 30, !dbg !11160
  br label %if.end143, !dbg !11157

if.end143:                                        ; preds = %if.then133, %for.body123
  br label %for.inc144, !dbg !11161

for.inc144:                                       ; preds = %if.end143
  %138 = load i32, i32* %x, align 4, !dbg !11162
  %inc145 = add nsw i32 %138, 1, !dbg !11162
  store i32 %inc145, i32* %x, align 4, !dbg !11162
  br label %for.cond119, !dbg !11164, !llvm.loop !11165

for.end146:                                       ; preds = %for.cond119
  %139 = bitcast i8** %flags to i8*, !dbg !11167
  call void @av_freep(i8* %139), !dbg !11168
  %140 = load i8, i8* %max_temporal_offset, align 1, !dbg !11169
  %conv147 = sext i8 %140 to i32, !dbg !11169
  %sub148 = sub nsw i32 0, %conv147, !dbg !11170
  %conv149 = sext i32 %sub148 to i64, !dbg !11170
  %141 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !11171
  %first_dts = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %141, i32 0, i32 3, !dbg !11172
  store i64 %conv149, i64* %first_dts, align 8, !dbg !11173
  store i32 0, i32* %retval, align 4, !dbg !11174
  br label %return, !dbg !11174

return:                                           ; preds = %for.end146, %if.then33, %if.then14, %if.then4, %if.then
  %142 = load i32, i32* %retval, align 4, !dbg !11175
  ret i32 %142, !dbg !11175
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_get_wrapping_by_body_sid(%struct.AVFormatContext* %s, i32 %body_sid) #0 !dbg !11176 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %body_sid.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %track = alloca %struct.MXFTrack*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !11179, metadata !2511), !dbg !11180
  store i32 %body_sid, i32* %body_sid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %body_sid.addr, metadata !11181, metadata !2511), !dbg !11182
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11183, metadata !2511), !dbg !11185
  store i32 0, i32* %i, align 4, !dbg !11185
  br label %for.cond, !dbg !11186

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11187
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !11190
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %1, i32 0, i32 6, !dbg !11191
  %2 = load i32, i32* %nb_streams, align 4, !dbg !11191
  %cmp = icmp ult i32 %0, %2, !dbg !11192
  br i1 %cmp, label %for.body, label %for.end, !dbg !11193

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MXFTrack** %track, metadata !11194, metadata !2511), !dbg !11196
  %3 = load i32, i32* %i, align 4, !dbg !11197
  %idxprom = sext i32 %3 to i64, !dbg !11198
  %4 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !11198
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %4, i32 0, i32 7, !dbg !11199
  %5 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !11199
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %5, i64 %idxprom, !dbg !11198
  %6 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !11198
  %priv_data = getelementptr inbounds %struct.AVStream, %struct.AVStream* %6, i32 0, i32 3, !dbg !11200
  %7 = load i8*, i8** %priv_data, align 8, !dbg !11200
  %8 = bitcast i8* %7 to %struct.MXFTrack*, !dbg !11198
  store %struct.MXFTrack* %8, %struct.MXFTrack** %track, align 8, !dbg !11196
  %9 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !11201
  %tobool = icmp ne %struct.MXFTrack* %9, null, !dbg !11201
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !11203

land.lhs.true:                                    ; preds = %for.body
  %10 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !11204
  %body_sid1 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %10, i32 0, i32 12, !dbg !11206
  %11 = load i32, i32* %body_sid1, align 4, !dbg !11206
  %12 = load i32, i32* %body_sid.addr, align 4, !dbg !11207
  %cmp2 = icmp eq i32 %11, %12, !dbg !11208
  br i1 %cmp2, label %land.lhs.true3, label %if.end, !dbg !11209

land.lhs.true3:                                   ; preds = %land.lhs.true
  %13 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !11210
  %wrapping = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %13, i32 0, i32 13, !dbg !11212
  %14 = load i32, i32* %wrapping, align 8, !dbg !11212
  %cmp4 = icmp ne i32 %14, 0, !dbg !11213
  br i1 %cmp4, label %if.then, label %if.end, !dbg !11214

if.then:                                          ; preds = %land.lhs.true3
  %15 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !11215
  %wrapping5 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %15, i32 0, i32 13, !dbg !11216
  %16 = load i32, i32* %wrapping5, align 8, !dbg !11216
  store i32 %16, i32* %retval, align 4, !dbg !11217
  br label %return, !dbg !11217

if.end:                                           ; preds = %land.lhs.true3, %land.lhs.true, %for.body
  br label %for.inc, !dbg !11218

for.inc:                                          ; preds = %if.end
  %17 = load i32, i32* %i, align 4, !dbg !11219
  %inc = add nsw i32 %17, 1, !dbg !11219
  store i32 %inc, i32* %i, align 4, !dbg !11219
  br label %for.cond, !dbg !11221, !llvm.loop !11222

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !11224
  br label %return, !dbg !11224

return:                                           ; preds = %for.end, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !11225
  ret i32 %18, !dbg !11225
}

; Function Attrs: nounwind uwtable
define internal %struct.MXFIndexTable* @mxf_find_index_table(%struct.MXFContext* %mxf, i32 %index_sid) #0 !dbg !11226 {
entry:
  %retval = alloca %struct.MXFIndexTable*, align 8
  %mxf.addr = alloca %struct.MXFContext*, align 8
  %index_sid.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.MXFContext* %mxf, %struct.MXFContext** %mxf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf.addr, metadata !11229, metadata !2511), !dbg !11230
  store i32 %index_sid, i32* %index_sid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index_sid.addr, metadata !11231, metadata !2511), !dbg !11232
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11233, metadata !2511), !dbg !11234
  store i32 0, i32* %i, align 4, !dbg !11235
  br label %for.cond, !dbg !11237

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11238
  %1 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !11241
  %nb_index_tables = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %1, i32 0, i32 21, !dbg !11242
  %2 = load i32, i32* %nb_index_tables, align 4, !dbg !11242
  %cmp = icmp slt i32 %0, %2, !dbg !11243
  br i1 %cmp, label %for.body, label %for.end, !dbg !11244

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !11245
  %idxprom = sext i32 %3 to i64, !dbg !11247
  %4 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !11247
  %index_tables = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %4, i32 0, i32 22, !dbg !11248
  %5 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_tables, align 8, !dbg !11248
  %arrayidx = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %5, i64 %idxprom, !dbg !11247
  %index_sid1 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %arrayidx, i32 0, i32 0, !dbg !11249
  %6 = load i32, i32* %index_sid1, align 8, !dbg !11249
  %7 = load i32, i32* %index_sid.addr, align 4, !dbg !11250
  %cmp2 = icmp eq i32 %6, %7, !dbg !11251
  br i1 %cmp2, label %if.then, label %if.end, !dbg !11252

if.then:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !11253
  %idxprom3 = sext i32 %8 to i64, !dbg !11254
  %9 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !11254
  %index_tables4 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %9, i32 0, i32 22, !dbg !11255
  %10 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_tables4, align 8, !dbg !11255
  %arrayidx5 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %10, i64 %idxprom3, !dbg !11254
  store %struct.MXFIndexTable* %arrayidx5, %struct.MXFIndexTable** %retval, align 8, !dbg !11256
  br label %return, !dbg !11256

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !11257

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %i, align 4, !dbg !11259
  %inc = add nsw i32 %11, 1, !dbg !11259
  store i32 %inc, i32* %i, align 4, !dbg !11259
  br label %for.cond, !dbg !11261, !llvm.loop !11262

for.end:                                          ; preds = %for.cond
  store %struct.MXFIndexTable* null, %struct.MXFIndexTable** %retval, align 8, !dbg !11264
  br label %return, !dbg !11264

return:                                           ; preds = %for.end, %if.then
  %12 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %retval, align 8, !dbg !11265
  ret %struct.MXFIndexTable* %12, !dbg !11265
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_decrypt_triplet(%struct.AVFormatContext* %s, %struct.AVPacket* %pkt, %struct.KLVPacket* %klv) #0 !dbg !2492 {
entry:
  %s.addr.i90 = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i90, metadata !2585, metadata !2511), !dbg !11266
  %s.addr.i = alloca %struct.AVIOContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %s.addr.i, metadata !2585, metadata !2511), !dbg !11268
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %klv.addr = alloca %struct.KLVPacket*, align 8
  %mxf = alloca %struct.MXFContext*, align 8
  %pb = alloca %struct.AVIOContext*, align 8
  %end = alloca i64, align 8
  %size = alloca i64, align 8
  %orig_size = alloca i64, align 8
  %plaintext_size = alloca i64, align 8
  %ivec = alloca [16 x i8], align 16
  %tmpbuf = alloca [16 x i8], align 16
  %index = alloca i32, align 4
  %body_sid = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !11270, metadata !2511), !dbg !11271
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !11272, metadata !2511), !dbg !11273
  store %struct.KLVPacket* %klv, %struct.KLVPacket** %klv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KLVPacket** %klv.addr, metadata !11274, metadata !2511), !dbg !11275
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf, metadata !11276, metadata !2511), !dbg !11277
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !11278
  %priv_data = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 3, !dbg !11279
  %1 = load i8*, i8** %priv_data, align 8, !dbg !11279
  %2 = bitcast i8* %1 to %struct.MXFContext*, !dbg !11278
  store %struct.MXFContext* %2, %struct.MXFContext** %mxf, align 8, !dbg !11277
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb, metadata !11280, metadata !2511), !dbg !11281
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !11282
  %pb1 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 4, !dbg !11283
  %4 = load %struct.AVIOContext*, %struct.AVIOContext** %pb1, align 8, !dbg !11283
  store %struct.AVIOContext* %4, %struct.AVIOContext** %pb, align 8, !dbg !11281
  call void @llvm.dbg.declare(metadata i64* %end, metadata !11284, metadata !2511), !dbg !11285
  %5 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !11286
  store %struct.AVIOContext* %5, %struct.AVIOContext** %s.addr.i, align 8, !dbg !11287
  %6 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i, align 8, !dbg !11288
  %call.i = call i64 @avio_seek(%struct.AVIOContext* %6, i64 0, i32 1) #8, !dbg !11289
  %7 = load %struct.KLVPacket*, %struct.KLVPacket** %klv.addr, align 8, !dbg !11290
  %length = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %7, i32 0, i32 2, !dbg !11291
  %8 = load i64, i64* %length, align 8, !dbg !11291
  %add = add i64 %call.i, %8, !dbg !11292
  store i64 %add, i64* %end, align 8, !dbg !11285
  call void @llvm.dbg.declare(metadata i64* %size, metadata !11293, metadata !2511), !dbg !11294
  call void @llvm.dbg.declare(metadata i64* %orig_size, metadata !11295, metadata !2511), !dbg !11296
  call void @llvm.dbg.declare(metadata i64* %plaintext_size, metadata !11297, metadata !2511), !dbg !11298
  call void @llvm.dbg.declare(metadata [16 x i8]* %ivec, metadata !11299, metadata !2511), !dbg !11300
  call void @llvm.dbg.declare(metadata [16 x i8]* %tmpbuf, metadata !11301, metadata !2511), !dbg !11302
  call void @llvm.dbg.declare(metadata i32* %index, metadata !11303, metadata !2511), !dbg !11304
  call void @llvm.dbg.declare(metadata i32* %body_sid, metadata !11305, metadata !2511), !dbg !11306
  %9 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !11307
  %aesc = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %9, i32 0, i32 11, !dbg !11309
  %10 = load %struct.AVAES*, %struct.AVAES** %aesc, align 8, !dbg !11309
  %tobool = icmp ne %struct.AVAES* %10, null, !dbg !11307
  br i1 %tobool, label %if.end12, label %land.lhs.true, !dbg !11310

land.lhs.true:                                    ; preds = %entry
  %11 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !11311
  %key = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %11, i32 0, i32 18, !dbg !11313
  %12 = load i8*, i8** %key, align 8, !dbg !11313
  %tobool2 = icmp ne i8* %12, null, !dbg !11311
  br i1 %tobool2, label %land.lhs.true3, label %if.end12, !dbg !11314

land.lhs.true3:                                   ; preds = %land.lhs.true
  %13 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !11315
  %keylen = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %13, i32 0, i32 19, !dbg !11317
  %14 = load i32, i32* %keylen, align 8, !dbg !11317
  %cmp = icmp eq i32 %14, 16, !dbg !11318
  br i1 %cmp, label %if.then, label %if.end12, !dbg !11319

if.then:                                          ; preds = %land.lhs.true3
  %call4 = call %struct.AVAES* @av_aes_alloc(), !dbg !11320
  %15 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !11322
  %aesc5 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %15, i32 0, i32 11, !dbg !11323
  store %struct.AVAES* %call4, %struct.AVAES** %aesc5, align 8, !dbg !11324
  %16 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !11325
  %aesc6 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %16, i32 0, i32 11, !dbg !11327
  %17 = load %struct.AVAES*, %struct.AVAES** %aesc6, align 8, !dbg !11327
  %tobool7 = icmp ne %struct.AVAES* %17, null, !dbg !11325
  br i1 %tobool7, label %if.end, label %if.then8, !dbg !11328

if.then8:                                         ; preds = %if.then
  store i32 -12, i32* %retval, align 4, !dbg !11329
  br label %return, !dbg !11329

if.end:                                           ; preds = %if.then
  %18 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !11330
  %aesc9 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %18, i32 0, i32 11, !dbg !11331
  %19 = load %struct.AVAES*, %struct.AVAES** %aesc9, align 8, !dbg !11331
  %20 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !11332
  %key10 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %20, i32 0, i32 18, !dbg !11333
  %21 = load i8*, i8** %key10, align 8, !dbg !11333
  %call11 = call i32 @av_aes_init(%struct.AVAES* %19, i8* %21, i32 128, i32 1), !dbg !11334
  br label %if.end12, !dbg !11335

if.end12:                                         ; preds = %if.end, %land.lhs.true3, %land.lhs.true, %entry
  %22 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !11336
  %call13 = call i64 @klv_decode_ber_length(%struct.AVIOContext* %22), !dbg !11337
  store i64 %call13, i64* %size, align 8, !dbg !11338
  %23 = load i64, i64* %size, align 8, !dbg !11339
  %cmp14 = icmp slt i64 %23, 0, !dbg !11341
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !11342

if.then15:                                        ; preds = %if.end12
  %24 = load i64, i64* %size, align 8, !dbg !11343
  %conv = trunc i64 %24 to i32, !dbg !11343
  store i32 %conv, i32* %retval, align 4, !dbg !11344
  br label %return, !dbg !11344

if.end16:                                         ; preds = %if.end12
  %25 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !11345
  %26 = load i64, i64* %size, align 8, !dbg !11346
  %call17 = call i64 @avio_skip(%struct.AVIOContext* %25, i64 %26), !dbg !11347
  %27 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !11348
  %call18 = call i64 @klv_decode_ber_length(%struct.AVIOContext* %27), !dbg !11349
  %28 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !11350
  %call19 = call i64 @avio_rb64(%struct.AVIOContext* %28), !dbg !11351
  store i64 %call19, i64* %plaintext_size, align 8, !dbg !11352
  %29 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !11353
  %call20 = call i64 @klv_decode_ber_length(%struct.AVIOContext* %29), !dbg !11354
  %30 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !11355
  %31 = load %struct.KLVPacket*, %struct.KLVPacket** %klv.addr, align 8, !dbg !11356
  %key21 = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %31, i32 0, i32 0, !dbg !11357
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %key21, i32 0, i32 0, !dbg !11356
  %call22 = call i32 @avio_read(%struct.AVIOContext* %30, i8* %arraydecay, i32 16), !dbg !11358
  %32 = load %struct.KLVPacket*, %struct.KLVPacket** %klv.addr, align 8, !dbg !11359
  %33 = bitcast %struct.KLVPacket* %32 to i8*, !dbg !11359
  %call23 = call i32 @memcmp(i8* %33, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @mxf_essence_element_key, i32 0, i32 0), i64 12) #9, !dbg !11361
  %tobool24 = icmp ne i32 %call23, 0, !dbg !11361
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !11362

if.then25:                                        ; preds = %if.end16
  store i32 -1094995529, i32* %retval, align 4, !dbg !11363
  br label %return, !dbg !11363

if.end26:                                         ; preds = %if.end16
  %34 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !11364
  %35 = load %struct.KLVPacket*, %struct.KLVPacket** %klv.addr, align 8, !dbg !11365
  %offset = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %35, i32 0, i32 1, !dbg !11366
  %36 = load i64, i64* %offset, align 8, !dbg !11366
  %call27 = call i32 @find_body_sid_by_offset(%struct.MXFContext* %34, i64 %36), !dbg !11367
  store i32 %call27, i32* %body_sid, align 4, !dbg !11368
  %37 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !11369
  %38 = load %struct.KLVPacket*, %struct.KLVPacket** %klv.addr, align 8, !dbg !11370
  %39 = load i32, i32* %body_sid, align 4, !dbg !11371
  %call28 = call i32 @mxf_get_stream_index(%struct.AVFormatContext* %37, %struct.KLVPacket* %38, i32 %39), !dbg !11372
  store i32 %call28, i32* %index, align 4, !dbg !11373
  %40 = load i32, i32* %index, align 4, !dbg !11374
  %cmp29 = icmp slt i32 %40, 0, !dbg !11376
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !11377

if.then31:                                        ; preds = %if.end26
  store i32 -1094995529, i32* %retval, align 4, !dbg !11378
  br label %return, !dbg !11378

if.end32:                                         ; preds = %if.end26
  %41 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !11379
  %call33 = call i64 @klv_decode_ber_length(%struct.AVIOContext* %41), !dbg !11380
  %42 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !11381
  %call34 = call i64 @avio_rb64(%struct.AVIOContext* %42), !dbg !11382
  store i64 %call34, i64* %orig_size, align 8, !dbg !11383
  %43 = load i64, i64* %orig_size, align 8, !dbg !11384
  %44 = load i64, i64* %plaintext_size, align 8, !dbg !11386
  %cmp35 = icmp ult i64 %43, %44, !dbg !11387
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !11388

if.then37:                                        ; preds = %if.end32
  store i32 -1094995529, i32* %retval, align 4, !dbg !11389
  br label %return, !dbg !11389

if.end38:                                         ; preds = %if.end32
  %45 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !11390
  %call39 = call i64 @klv_decode_ber_length(%struct.AVIOContext* %45), !dbg !11391
  store i64 %call39, i64* %size, align 8, !dbg !11392
  %46 = load i64, i64* %size, align 8, !dbg !11393
  %cmp40 = icmp slt i64 %46, 32, !dbg !11395
  br i1 %cmp40, label %if.then44, label %lor.lhs.false, !dbg !11396

lor.lhs.false:                                    ; preds = %if.end38
  %47 = load i64, i64* %size, align 8, !dbg !11397
  %sub = sub nsw i64 %47, 32, !dbg !11399
  %48 = load i64, i64* %orig_size, align 8, !dbg !11400
  %cmp42 = icmp ult i64 %sub, %48, !dbg !11401
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !11402

if.then44:                                        ; preds = %lor.lhs.false, %if.end38
  store i32 -1094995529, i32* %retval, align 4, !dbg !11403
  br label %return, !dbg !11403

if.end45:                                         ; preds = %lor.lhs.false
  %49 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !11404
  %arraydecay46 = getelementptr inbounds [16 x i8], [16 x i8]* %ivec, i32 0, i32 0, !dbg !11405
  %call47 = call i32 @avio_read(%struct.AVIOContext* %49, i8* %arraydecay46, i32 16), !dbg !11406
  %50 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !11407
  %arraydecay48 = getelementptr inbounds [16 x i8], [16 x i8]* %tmpbuf, i32 0, i32 0, !dbg !11408
  %call49 = call i32 @avio_read(%struct.AVIOContext* %50, i8* %arraydecay48, i32 16), !dbg !11409
  %51 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !11410
  %aesc50 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %51, i32 0, i32 11, !dbg !11412
  %52 = load %struct.AVAES*, %struct.AVAES** %aesc50, align 8, !dbg !11412
  %tobool51 = icmp ne %struct.AVAES* %52, null, !dbg !11410
  br i1 %tobool51, label %if.then52, label %if.end57, !dbg !11413

if.then52:                                        ; preds = %if.end45
  %53 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !11414
  %aesc53 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %53, i32 0, i32 11, !dbg !11415
  %54 = load %struct.AVAES*, %struct.AVAES** %aesc53, align 8, !dbg !11415
  %arraydecay54 = getelementptr inbounds [16 x i8], [16 x i8]* %tmpbuf, i32 0, i32 0, !dbg !11416
  %arraydecay55 = getelementptr inbounds [16 x i8], [16 x i8]* %tmpbuf, i32 0, i32 0, !dbg !11417
  %arraydecay56 = getelementptr inbounds [16 x i8], [16 x i8]* %ivec, i32 0, i32 0, !dbg !11418
  call void @av_aes_crypt(%struct.AVAES* %54, i8* %arraydecay54, i8* %arraydecay55, i32 1, i8* %arraydecay56, i32 1), !dbg !11419
  br label %if.end57, !dbg !11419

if.end57:                                         ; preds = %if.then52, %if.end45
  %arraydecay58 = getelementptr inbounds [16 x i8], [16 x i8]* %tmpbuf, i32 0, i32 0, !dbg !11420
  %call59 = call i32 @memcmp(i8* %arraydecay58, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @mxf_decrypt_triplet.checkv, i32 0, i32 0), i64 16) #9, !dbg !11422
  %tobool60 = icmp ne i32 %call59, 0, !dbg !11422
  br i1 %tobool60, label %if.then61, label %if.end62, !dbg !11423

if.then61:                                        ; preds = %if.end57
  %55 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !11424
  %56 = bitcast %struct.AVFormatContext* %55 to i8*, !dbg !11424
  call void (i8*, i32, i8*, ...) @av_log(i8* %56, i32 16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.126, i32 0, i32 0)), !dbg !11425
  br label %if.end62, !dbg !11425

if.end62:                                         ; preds = %if.then61, %if.end57
  %57 = load i64, i64* %size, align 8, !dbg !11426
  %sub63 = sub nsw i64 %57, 32, !dbg !11426
  store i64 %sub63, i64* %size, align 8, !dbg !11426
  %58 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !11427
  %59 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !11428
  %60 = load i64, i64* %size, align 8, !dbg !11429
  %conv64 = trunc i64 %60 to i32, !dbg !11429
  %call65 = call i32 @av_get_packet(%struct.AVIOContext* %58, %struct.AVPacket* %59, i32 %conv64), !dbg !11430
  %conv66 = sext i32 %call65 to i64, !dbg !11430
  store i64 %conv66, i64* %size, align 8, !dbg !11431
  %61 = load i64, i64* %size, align 8, !dbg !11432
  %cmp67 = icmp slt i64 %61, 0, !dbg !11434
  br i1 %cmp67, label %if.then69, label %if.else, !dbg !11435

if.then69:                                        ; preds = %if.end62
  %62 = load i64, i64* %size, align 8, !dbg !11436
  %conv70 = trunc i64 %62 to i32, !dbg !11436
  store i32 %conv70, i32* %retval, align 4, !dbg !11437
  br label %return, !dbg !11437

if.else:                                          ; preds = %if.end62
  %63 = load i64, i64* %size, align 8, !dbg !11438
  %64 = load i64, i64* %plaintext_size, align 8, !dbg !11440
  %cmp71 = icmp ult i64 %63, %64, !dbg !11441
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !11442

if.then73:                                        ; preds = %if.else
  store i32 -1094995529, i32* %retval, align 4, !dbg !11443
  br label %return, !dbg !11443

if.end74:                                         ; preds = %if.else
  br label %if.end75

if.end75:                                         ; preds = %if.end74
  %65 = load i64, i64* %plaintext_size, align 8, !dbg !11444
  %66 = load i64, i64* %size, align 8, !dbg !11445
  %sub76 = sub i64 %66, %65, !dbg !11445
  store i64 %sub76, i64* %size, align 8, !dbg !11445
  %67 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !11446
  %aesc77 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %67, i32 0, i32 11, !dbg !11448
  %68 = load %struct.AVAES*, %struct.AVAES** %aesc77, align 8, !dbg !11448
  %tobool78 = icmp ne %struct.AVAES* %68, null, !dbg !11446
  br i1 %tobool78, label %if.then79, label %if.end85, !dbg !11449

if.then79:                                        ; preds = %if.end75
  %69 = load %struct.MXFContext*, %struct.MXFContext** %mxf, align 8, !dbg !11450
  %aesc80 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %69, i32 0, i32 11, !dbg !11451
  %70 = load %struct.AVAES*, %struct.AVAES** %aesc80, align 8, !dbg !11451
  %71 = load i64, i64* %plaintext_size, align 8, !dbg !11452
  %72 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !11453
  %data = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %72, i32 0, i32 3, !dbg !11454
  %73 = load i8*, i8** %data, align 8, !dbg !11454
  %arrayidx = getelementptr inbounds i8, i8* %73, i64 %71, !dbg !11453
  %74 = load i64, i64* %plaintext_size, align 8, !dbg !11455
  %75 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !11456
  %data81 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %75, i32 0, i32 3, !dbg !11457
  %76 = load i8*, i8** %data81, align 8, !dbg !11457
  %arrayidx82 = getelementptr inbounds i8, i8* %76, i64 %74, !dbg !11456
  %77 = load i64, i64* %size, align 8, !dbg !11458
  %shr = ashr i64 %77, 4, !dbg !11459
  %conv83 = trunc i64 %shr to i32, !dbg !11458
  %arraydecay84 = getelementptr inbounds [16 x i8], [16 x i8]* %ivec, i32 0, i32 0, !dbg !11460
  call void @av_aes_crypt(%struct.AVAES* %70, i8* %arrayidx, i8* %arrayidx82, i32 %conv83, i8* %arraydecay84, i32 1), !dbg !11461
  br label %if.end85, !dbg !11461

if.end85:                                         ; preds = %if.then79, %if.end75
  %78 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !11462
  %79 = load i64, i64* %orig_size, align 8, !dbg !11463
  %conv86 = trunc i64 %79 to i32, !dbg !11463
  call void @av_shrink_packet(%struct.AVPacket* %78, i32 %conv86), !dbg !11464
  %80 = load i32, i32* %index, align 4, !dbg !11465
  %81 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !11466
  %stream_index = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %81, i32 0, i32 5, !dbg !11467
  store i32 %80, i32* %stream_index, align 4, !dbg !11468
  %82 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !11469
  %83 = load i64, i64* %end, align 8, !dbg !11470
  %84 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !11471
  store %struct.AVIOContext* %84, %struct.AVIOContext** %s.addr.i90, align 8, !dbg !11472
  %85 = load %struct.AVIOContext*, %struct.AVIOContext** %s.addr.i90, align 8, !dbg !11473
  %call.i91 = call i64 @avio_seek(%struct.AVIOContext* %85, i64 0, i32 1) #8, !dbg !11474
  %sub88 = sub nsw i64 %83, %call.i91, !dbg !11475
  %call89 = call i64 @avio_skip(%struct.AVIOContext* %82, i64 %sub88), !dbg !11476
  store i32 0, i32* %retval, align 4, !dbg !11478
  br label %return, !dbg !11478

return:                                           ; preds = %if.end85, %if.then73, %if.then69, %if.then44, %if.then37, %if.then31, %if.then25, %if.then15, %if.then8
  %86 = load i32, i32* %retval, align 4, !dbg !11479
  ret i32 %86, !dbg !11479
}

; Function Attrs: nounwind uwtable
define internal i32 @find_body_sid_by_offset(%struct.MXFContext* %mxf, i64 %offset) #0 !dbg !11480 {
entry:
  %retval = alloca i32, align 4
  %mxf.addr = alloca %struct.MXFContext*, align 8
  %offset.addr = alloca i64, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %m = alloca i32, align 4
  %this_partition = alloca i64, align 8
  store %struct.MXFContext* %mxf, %struct.MXFContext** %mxf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf.addr, metadata !11483, metadata !2511), !dbg !11484
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !11485, metadata !2511), !dbg !11486
  call void @llvm.dbg.declare(metadata i32* %a, metadata !11487, metadata !2511), !dbg !11488
  call void @llvm.dbg.declare(metadata i32* %b, metadata !11489, metadata !2511), !dbg !11490
  call void @llvm.dbg.declare(metadata i32* %m, metadata !11491, metadata !2511), !dbg !11492
  call void @llvm.dbg.declare(metadata i64* %this_partition, metadata !11493, metadata !2511), !dbg !11494
  store i32 -1, i32* %a, align 4, !dbg !11495
  %0 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !11496
  %partitions_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %0, i32 0, i32 2, !dbg !11497
  %1 = load i32, i32* %partitions_count, align 8, !dbg !11497
  store i32 %1, i32* %b, align 4, !dbg !11498
  br label %while.cond, !dbg !11499

while.cond:                                       ; preds = %if.end, %entry
  %2 = load i32, i32* %b, align 4, !dbg !11500
  %3 = load i32, i32* %a, align 4, !dbg !11502
  %sub = sub nsw i32 %2, %3, !dbg !11503
  %cmp = icmp sgt i32 %sub, 1, !dbg !11504
  br i1 %cmp, label %while.body, label %while.end, !dbg !11505

while.body:                                       ; preds = %while.cond
  %4 = load i32, i32* %a, align 4, !dbg !11506
  %5 = load i32, i32* %b, align 4, !dbg !11508
  %add = add nsw i32 %4, %5, !dbg !11509
  %shr = ashr i32 %add, 1, !dbg !11510
  store i32 %shr, i32* %m, align 4, !dbg !11511
  %6 = load i32, i32* %m, align 4, !dbg !11512
  %idxprom = sext i32 %6 to i64, !dbg !11513
  %7 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !11513
  %partitions = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %7, i32 0, i32 1, !dbg !11514
  %8 = load %struct.MXFPartition*, %struct.MXFPartition** %partitions, align 8, !dbg !11514
  %arrayidx = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %8, i64 %idxprom, !dbg !11513
  %this_partition1 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %arrayidx, i32 0, i32 6, !dbg !11515
  %9 = load i64, i64* %this_partition1, align 8, !dbg !11515
  store i64 %9, i64* %this_partition, align 8, !dbg !11516
  %10 = load i64, i64* %this_partition, align 8, !dbg !11517
  %11 = load i64, i64* %offset.addr, align 8, !dbg !11519
  %cmp2 = icmp sle i64 %10, %11, !dbg !11520
  br i1 %cmp2, label %if.then, label %if.else, !dbg !11521

if.then:                                          ; preds = %while.body
  %12 = load i32, i32* %m, align 4, !dbg !11522
  store i32 %12, i32* %a, align 4, !dbg !11523
  br label %if.end, !dbg !11524

if.else:                                          ; preds = %while.body
  %13 = load i32, i32* %m, align 4, !dbg !11525
  store i32 %13, i32* %b, align 4, !dbg !11526
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %while.cond, !dbg !11527, !llvm.loop !11529

while.end:                                        ; preds = %while.cond
  %14 = load i32, i32* %a, align 4, !dbg !11530
  %cmp3 = icmp eq i32 %14, -1, !dbg !11532
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !11533

if.then4:                                         ; preds = %while.end
  store i32 0, i32* %retval, align 4, !dbg !11534
  br label %return, !dbg !11534

if.end5:                                          ; preds = %while.end
  %15 = load i32, i32* %a, align 4, !dbg !11535
  %idxprom6 = sext i32 %15 to i64, !dbg !11536
  %16 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !11536
  %partitions7 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %16, i32 0, i32 1, !dbg !11537
  %17 = load %struct.MXFPartition*, %struct.MXFPartition** %partitions7, align 8, !dbg !11537
  %arrayidx8 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %17, i64 %idxprom6, !dbg !11536
  %body_sid = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %arrayidx8, i32 0, i32 5, !dbg !11538
  %18 = load i32, i32* %body_sid, align 4, !dbg !11538
  store i32 %18, i32* %retval, align 4, !dbg !11539
  br label %return, !dbg !11539

return:                                           ; preds = %if.end5, %if.then4
  %19 = load i32, i32* %retval, align 4, !dbg !11540
  ret i32 %19, !dbg !11540
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_get_stream_index(%struct.AVFormatContext* %s, %struct.KLVPacket* %klv, i32 %body_sid) #0 !dbg !11541 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %klv.addr = alloca %struct.KLVPacket*, align 8
  %body_sid.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %track = alloca %struct.MXFTrack*, align 8
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !11544, metadata !2511), !dbg !11545
  store %struct.KLVPacket* %klv, %struct.KLVPacket** %klv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KLVPacket** %klv.addr, metadata !11546, metadata !2511), !dbg !11547
  store i32 %body_sid, i32* %body_sid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %body_sid.addr, metadata !11548, metadata !2511), !dbg !11549
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11550, metadata !2511), !dbg !11551
  store i32 0, i32* %i, align 4, !dbg !11552
  br label %for.cond, !dbg !11554

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11555
  %1 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !11558
  %nb_streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %1, i32 0, i32 6, !dbg !11559
  %2 = load i32, i32* %nb_streams, align 4, !dbg !11559
  %cmp = icmp ult i32 %0, %2, !dbg !11560
  br i1 %cmp, label %for.body, label %for.end, !dbg !11561

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MXFTrack** %track, metadata !11562, metadata !2511), !dbg !11564
  %3 = load i32, i32* %i, align 4, !dbg !11565
  %idxprom = sext i32 %3 to i64, !dbg !11566
  %4 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !11566
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %4, i32 0, i32 7, !dbg !11567
  %5 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !11567
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %5, i64 %idxprom, !dbg !11566
  %6 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !11566
  %priv_data = getelementptr inbounds %struct.AVStream, %struct.AVStream* %6, i32 0, i32 3, !dbg !11568
  %7 = load i8*, i8** %priv_data, align 8, !dbg !11568
  %8 = bitcast i8* %7 to %struct.MXFTrack*, !dbg !11566
  store %struct.MXFTrack* %8, %struct.MXFTrack** %track, align 8, !dbg !11564
  %9 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !11569
  %tobool = icmp ne %struct.MXFTrack* %9, null, !dbg !11569
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !11571

land.lhs.true:                                    ; preds = %for.body
  %10 = load i32, i32* %body_sid.addr, align 4, !dbg !11572
  %tobool1 = icmp ne i32 %10, 0, !dbg !11572
  br i1 %tobool1, label %lor.lhs.false, label %land.lhs.true7, !dbg !11574

lor.lhs.false:                                    ; preds = %land.lhs.true
  %11 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !11575
  %body_sid2 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %11, i32 0, i32 12, !dbg !11577
  %12 = load i32, i32* %body_sid2, align 4, !dbg !11577
  %tobool3 = icmp ne i32 %12, 0, !dbg !11575
  br i1 %tobool3, label %lor.lhs.false4, label %land.lhs.true7, !dbg !11578

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %13 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !11579
  %body_sid5 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %13, i32 0, i32 12, !dbg !11581
  %14 = load i32, i32* %body_sid5, align 4, !dbg !11581
  %15 = load i32, i32* %body_sid.addr, align 4, !dbg !11582
  %cmp6 = icmp eq i32 %14, %15, !dbg !11583
  br i1 %cmp6, label %land.lhs.true7, label %if.end, !dbg !11584

land.lhs.true7:                                   ; preds = %lor.lhs.false4, %lor.lhs.false, %land.lhs.true
  %16 = load %struct.KLVPacket*, %struct.KLVPacket** %klv.addr, align 8, !dbg !11585
  %key = getelementptr inbounds %struct.KLVPacket, %struct.KLVPacket* %16, i32 0, i32 0, !dbg !11587
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %key, i32 0, i32 0, !dbg !11585
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 12, !dbg !11588
  %17 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !11589
  %track_number = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %17, i32 0, i32 6, !dbg !11590
  %arraydecay8 = getelementptr inbounds [4 x i8], [4 x i8]* %track_number, i32 0, i32 0, !dbg !11589
  %call = call i32 @memcmp(i8* %add.ptr, i8* %arraydecay8, i64 4) #9, !dbg !11591
  %tobool9 = icmp ne i32 %call, 0, !dbg !11591
  br i1 %tobool9, label %if.end, label %if.then, !dbg !11592

if.then:                                          ; preds = %land.lhs.true7
  %18 = load i32, i32* %i, align 4, !dbg !11593
  store i32 %18, i32* %retval, align 4, !dbg !11594
  br label %return, !dbg !11594

if.end:                                           ; preds = %land.lhs.true7, %lor.lhs.false4, %for.body
  br label %for.inc, !dbg !11595

for.inc:                                          ; preds = %if.end
  %19 = load i32, i32* %i, align 4, !dbg !11596
  %inc = add nsw i32 %19, 1, !dbg !11596
  store i32 %inc, i32* %i, align 4, !dbg !11596
  br label %for.cond, !dbg !11598, !llvm.loop !11599

for.end:                                          ; preds = %for.cond
  %20 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !11601
  %nb_streams10 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %20, i32 0, i32 6, !dbg !11602
  %21 = load i32, i32* %nb_streams10, align 4, !dbg !11602
  %cmp11 = icmp eq i32 %21, 1, !dbg !11603
  br i1 %cmp11, label %land.rhs, label %land.end, !dbg !11604

land.rhs:                                         ; preds = %for.end
  %22 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !11605
  %streams12 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %22, i32 0, i32 7, !dbg !11607
  %23 = load %struct.AVStream**, %struct.AVStream*** %streams12, align 8, !dbg !11607
  %arrayidx13 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %23, i64 0, !dbg !11605
  %24 = load %struct.AVStream*, %struct.AVStream** %arrayidx13, align 8, !dbg !11605
  %priv_data14 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %24, i32 0, i32 3, !dbg !11608
  %25 = load i8*, i8** %priv_data14, align 8, !dbg !11608
  %tobool15 = icmp ne i8* %25, null, !dbg !11609
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.end
  %26 = phi i1 [ false, %for.end ], [ %tobool15, %land.rhs ]
  %cond = select i1 %26, i32 0, i32 -1, !dbg !11610
  store i32 %cond, i32* %retval, align 4, !dbg !11612
  br label %return, !dbg !11612

return:                                           ; preds = %land.end, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !11613
  ret i32 %27, !dbg !11613
}

; Function Attrs: nounwind uwtable
define internal i64 @mxf_set_current_edit_unit(%struct.MXFContext* %mxf, %struct.AVStream* %st, i64 %current_offset, i32 %resync) #0 !dbg !11614 {
entry:
  %retval.i = alloca %struct.AVRational, align 4
  %q.i = alloca %struct.AVRational, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %q.i, metadata !3576, metadata !2511), !dbg !11617
  %r.i = alloca %struct.AVRational, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %r.i, metadata !3583, metadata !2511), !dbg !11619
  %retval = alloca i64, align 8
  %mxf.addr = alloca %struct.MXFContext*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %current_offset.addr = alloca i64, align 8
  %resync.addr = alloca i32, align 4
  %next_ofs = alloca i64, align 8
  %track = alloca %struct.MXFTrack*, align 8
  %edit_unit = alloca i64, align 8
  %agg.tmp = alloca %struct.AVRational, align 4
  %new_edit_unit = alloca i64, align 8
  %t = alloca %struct.MXFIndexTable*, align 8
  store %struct.MXFContext* %mxf, %struct.MXFContext** %mxf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf.addr, metadata !11620, metadata !2511), !dbg !11621
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !11622, metadata !2511), !dbg !11623
  store i64 %current_offset, i64* %current_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %current_offset.addr, metadata !11624, metadata !2511), !dbg !11625
  store i32 %resync, i32* %resync.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %resync.addr, metadata !11626, metadata !2511), !dbg !11627
  call void @llvm.dbg.declare(metadata i64* %next_ofs, metadata !11628, metadata !2511), !dbg !11629
  store i64 -1, i64* %next_ofs, align 8, !dbg !11629
  call void @llvm.dbg.declare(metadata %struct.MXFTrack** %track, metadata !11630, metadata !2511), !dbg !11631
  %0 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !11632
  %priv_data = getelementptr inbounds %struct.AVStream, %struct.AVStream* %0, i32 0, i32 3, !dbg !11633
  %1 = load i8*, i8** %priv_data, align 8, !dbg !11633
  %2 = bitcast i8* %1 to %struct.MXFTrack*, !dbg !11632
  store %struct.MXFTrack* %2, %struct.MXFTrack** %track, align 8, !dbg !11631
  call void @llvm.dbg.declare(metadata i64* %edit_unit, metadata !11634, metadata !2511), !dbg !11635
  %3 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !11636
  %sample_count = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %3, i32 0, i32 9, !dbg !11637
  %4 = load i64, i64* %sample_count, align 8, !dbg !11637
  %5 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !11638
  %time_base = getelementptr inbounds %struct.AVStream, %struct.AVStream* %5, i32 0, i32 4, !dbg !11639
  %6 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !11640
  %edit_rate = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %6, i32 0, i32 7, !dbg !11641
  %7 = bitcast %struct.AVRational* %edit_rate to i64*, !dbg !11642
  %8 = load i64, i64* %7, align 4, !dbg !11642
  %9 = bitcast %struct.AVRational* %q.i to i64*, !dbg !11642
  store i64 %8, i64* %9, align 4, !dbg !11642
  %num.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r.i, i32 0, i32 0, !dbg !11643
  %den.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q.i, i32 0, i32 1, !dbg !11644
  %10 = load i32, i32* %den.i, align 4, !dbg !11644
  store i32 %10, i32* %num.i, align 4, !dbg !11643
  %den1.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r.i, i32 0, i32 1, !dbg !11643
  %num2.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q.i, i32 0, i32 0, !dbg !11645
  %11 = load i32, i32* %num2.i, align 4, !dbg !11645
  store i32 %11, i32* %den1.i, align 4, !dbg !11643
  %12 = bitcast %struct.AVRational* %retval.i to i8*, !dbg !11646
  %13 = bitcast %struct.AVRational* %r.i to i8*, !dbg !11646
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 4, i1 false) #8, !dbg !11646
  %14 = bitcast %struct.AVRational* %retval.i to i64*, !dbg !11647
  %15 = load i64, i64* %14, align 4, !dbg !11647
  %16 = bitcast %struct.AVRational* %agg.tmp to i64*, !dbg !11642
  store i64 %15, i64* %16, align 4, !dbg !11642
  %17 = bitcast %struct.AVRational* %time_base to i64*, !dbg !11648
  %18 = load i64, i64* %17, align 8, !dbg !11648
  %19 = bitcast %struct.AVRational* %agg.tmp to i64*, !dbg !11648
  %20 = load i64, i64* %19, align 4, !dbg !11648
  %call1 = call i64 @av_rescale_q(i64 %4, i64 %18, i64 %20) #2, !dbg !11649
  store i64 %call1, i64* %edit_unit, align 8, !dbg !11635
  call void @llvm.dbg.declare(metadata i64* %new_edit_unit, metadata !11651, metadata !2511), !dbg !11652
  call void @llvm.dbg.declare(metadata %struct.MXFIndexTable** %t, metadata !11653, metadata !2511), !dbg !11654
  %21 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !11655
  %22 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !11656
  %index_sid = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %22, i32 0, i32 11, !dbg !11657
  %23 = load i32, i32* %index_sid, align 8, !dbg !11657
  %call2 = call %struct.MXFIndexTable* @mxf_find_index_table(%struct.MXFContext* %21, i32 %23), !dbg !11658
  store %struct.MXFIndexTable* %call2, %struct.MXFIndexTable** %t, align 8, !dbg !11654
  %24 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !11659
  %tobool = icmp ne %struct.MXFIndexTable* %24, null, !dbg !11659
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !11661

lor.lhs.false:                                    ; preds = %entry
  %25 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !11662
  %wrapping = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %25, i32 0, i32 13, !dbg !11664
  %26 = load i32, i32* %wrapping, align 8, !dbg !11664
  %cmp = icmp eq i32 %26, 0, !dbg !11665
  br i1 %cmp, label %if.then, label %if.end, !dbg !11666

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i64 -1, i64* %retval, align 8, !dbg !11667
  br label %return, !dbg !11667

if.end:                                           ; preds = %lor.lhs.false
  %27 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !11668
  %28 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !11670
  %29 = load i64, i64* %edit_unit, align 8, !dbg !11671
  %30 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !11672
  %edit_units_per_packet = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %30, i32 0, i32 14, !dbg !11673
  %31 = load i32, i32* %edit_units_per_packet, align 4, !dbg !11673
  %conv = sext i32 %31 to i64, !dbg !11672
  %add = add nsw i64 %29, %conv, !dbg !11674
  %32 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !11675
  %edit_rate3 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %32, i32 0, i32 7, !dbg !11676
  %33 = bitcast %struct.AVRational* %edit_rate3 to i64*, !dbg !11677
  %34 = load i64, i64* %33, align 4, !dbg !11677
  %call4 = call i32 @mxf_edit_unit_absolute_offset(%struct.MXFContext* %27, %struct.MXFIndexTable* %28, i64 %add, i64 %34, i64* null, i64* %next_ofs, %struct.MXFPartition** null, i32 0), !dbg !11677
  %cmp5 = icmp slt i32 %call4, 0, !dbg !11678
  br i1 %cmp5, label %land.lhs.true, label %if.end11, !dbg !11679

land.lhs.true:                                    ; preds = %if.end
  %35 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !11680
  %36 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !11681
  %body_sid = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %36, i32 0, i32 1, !dbg !11682
  %37 = load i32, i32* %body_sid, align 4, !dbg !11682
  %call7 = call i64 @mxf_essence_container_end(%struct.MXFContext* %35, i32 %37), !dbg !11683
  store i64 %call7, i64* %next_ofs, align 8, !dbg !11684
  %cmp8 = icmp sle i64 %call7, 0, !dbg !11685
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !11686

if.then10:                                        ; preds = %land.lhs.true
  %38 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !11687
  %fc = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %38, i32 0, i32 10, !dbg !11689
  %39 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc, align 8, !dbg !11689
  %40 = bitcast %struct.AVFormatContext* %39 to i8*, !dbg !11687
  call void (i8*, i32, i8*, ...) @av_log(i8* %40, i32 16, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.127, i32 0, i32 0)), !dbg !11690
  store i64 -1, i64* %retval, align 8, !dbg !11691
  br label %return, !dbg !11691

if.end11:                                         ; preds = %land.lhs.true, %if.end
  %41 = load i64, i64* %next_ofs, align 8, !dbg !11692
  %42 = load i64, i64* %current_offset.addr, align 8, !dbg !11694
  %cmp12 = icmp sgt i64 %41, %42, !dbg !11695
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !11696

if.then14:                                        ; preds = %if.end11
  %43 = load i64, i64* %next_ofs, align 8, !dbg !11697
  store i64 %43, i64* %retval, align 8, !dbg !11698
  br label %return, !dbg !11698

if.end15:                                         ; preds = %if.end11
  %44 = load i32, i32* %resync.addr, align 4, !dbg !11699
  %tobool16 = icmp ne i32 %44, 0, !dbg !11699
  br i1 %tobool16, label %if.end19, label %if.then17, !dbg !11701

if.then17:                                        ; preds = %if.end15
  %45 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !11702
  %fc18 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %45, i32 0, i32 10, !dbg !11704
  %46 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc18, align 8, !dbg !11704
  %47 = bitcast %struct.AVFormatContext* %46 to i8*, !dbg !11702
  %48 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !11705
  %index = getelementptr inbounds %struct.AVStream, %struct.AVStream* %48, i32 0, i32 0, !dbg !11706
  %49 = load i32, i32* %index, align 8, !dbg !11706
  call void (i8*, i32, i8*, ...) @av_log(i8* %47, i32 16, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.128, i32 0, i32 0), i32 %49), !dbg !11707
  store i64 -1, i64* %retval, align 8, !dbg !11708
  br label %return, !dbg !11708

if.end19:                                         ; preds = %if.end15
  %50 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !11709
  %51 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !11711
  %52 = load i64, i64* %current_offset.addr, align 8, !dbg !11712
  %add20 = add nsw i64 %52, 1, !dbg !11713
  %call21 = call i32 @mxf_get_next_track_edit_unit(%struct.MXFContext* %50, %struct.MXFTrack* %51, i64 %add20, i64* %new_edit_unit), !dbg !11714
  %cmp22 = icmp slt i32 %call21, 0, !dbg !11715
  br i1 %cmp22, label %if.then27, label %lor.lhs.false24, !dbg !11716

lor.lhs.false24:                                  ; preds = %if.end19
  %53 = load i64, i64* %new_edit_unit, align 8, !dbg !11717
  %cmp25 = icmp sle i64 %53, 0, !dbg !11719
  br i1 %cmp25, label %if.then27, label %if.end30, !dbg !11720

if.then27:                                        ; preds = %lor.lhs.false24, %if.end19
  %54 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !11721
  %fc28 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %54, i32 0, i32 10, !dbg !11723
  %55 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc28, align 8, !dbg !11723
  %56 = bitcast %struct.AVFormatContext* %55 to i8*, !dbg !11721
  %57 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !11724
  %index29 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %57, i32 0, i32 0, !dbg !11725
  %58 = load i32, i32* %index29, align 8, !dbg !11725
  call void (i8*, i32, i8*, ...) @av_log(i8* %56, i32 16, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.129, i32 0, i32 0), i32 %58), !dbg !11726
  store i64 -1, i64* %retval, align 8, !dbg !11727
  br label %return, !dbg !11727

if.end30:                                         ; preds = %lor.lhs.false24
  %59 = load i64, i64* %new_edit_unit, align 8, !dbg !11728
  %dec = add nsw i64 %59, -1, !dbg !11728
  store i64 %dec, i64* %new_edit_unit, align 8, !dbg !11728
  %60 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !11729
  %61 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !11730
  %62 = load i64, i64* %new_edit_unit, align 8, !dbg !11731
  %call31 = call i64 @mxf_compute_sample_count(%struct.MXFContext* %60, %struct.AVStream* %61, i64 %62), !dbg !11732
  %63 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !11733
  %sample_count32 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %63, i32 0, i32 9, !dbg !11734
  store i64 %call31, i64* %sample_count32, align 8, !dbg !11735
  %64 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !11736
  %fc33 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %64, i32 0, i32 10, !dbg !11737
  %65 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc33, align 8, !dbg !11737
  %66 = bitcast %struct.AVFormatContext* %65 to i8*, !dbg !11736
  %67 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !11738
  %index34 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %67, i32 0, i32 0, !dbg !11739
  %68 = load i32, i32* %index34, align 8, !dbg !11739
  %69 = load i64, i64* %edit_unit, align 8, !dbg !11740
  %70 = load i64, i64* %new_edit_unit, align 8, !dbg !11741
  call void (i8*, i32, i8*, ...) @av_log(i8* %66, i32 24, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.130, i32 0, i32 0), i32 %68, i64 %69, i64 %70), !dbg !11742
  %71 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !11743
  %72 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !11744
  %73 = load i64, i64* %current_offset.addr, align 8, !dbg !11745
  %call35 = call i64 @mxf_set_current_edit_unit(%struct.MXFContext* %71, %struct.AVStream* %72, i64 %73, i32 0), !dbg !11746
  store i64 %call35, i64* %retval, align 8, !dbg !11747
  br label %return, !dbg !11747

return:                                           ; preds = %if.end30, %if.then27, %if.then17, %if.then14, %if.then10, %if.then
  %74 = load i64, i64* %retval, align 8, !dbg !11748
  ret i64 %74, !dbg !11748
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_get_d10_aes3_packet(%struct.AVIOContext* %pb, %struct.AVStream* %st, %struct.AVPacket* %pkt, i64 %length) #0 !dbg !11749 {
entry:
  %b.addr.i40 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i40, metadata !11752, metadata !2511), !dbg !11758
  %value.addr.i41 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i41, metadata !11767, metadata !2511), !dbg !11768
  %b.addr.i37 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i37, metadata !11769, metadata !2511), !dbg !11771
  %value.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i, metadata !11773, metadata !2511), !dbg !11774
  %b.addr.i = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i, metadata !11775, metadata !2511), !dbg !11779
  %retval = alloca i32, align 4
  %pb.addr = alloca %struct.AVIOContext*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %length.addr = alloca i64, align 8
  %buf_ptr = alloca i8*, align 8
  %end_ptr = alloca i8*, align 8
  %data_ptr = alloca i8*, align 8
  %i = alloca i32, align 4
  %sample = alloca i32, align 4
  store %struct.AVIOContext* %pb, %struct.AVIOContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVIOContext** %pb.addr, metadata !11781, metadata !2511), !dbg !11782
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !11783, metadata !2511), !dbg !11784
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !11785, metadata !2511), !dbg !11786
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !11787, metadata !2511), !dbg !11788
  call void @llvm.dbg.declare(metadata i8** %buf_ptr, metadata !11789, metadata !2511), !dbg !11790
  call void @llvm.dbg.declare(metadata i8** %end_ptr, metadata !11791, metadata !2511), !dbg !11792
  call void @llvm.dbg.declare(metadata i8** %data_ptr, metadata !11793, metadata !2511), !dbg !11794
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11795, metadata !2511), !dbg !11796
  %0 = load i64, i64* %length.addr, align 8, !dbg !11797
  %cmp = icmp sgt i64 %0, 61444, !dbg !11799
  br i1 %cmp, label %if.then, label %if.end, !dbg !11800

if.then:                                          ; preds = %entry
  store i32 -1094995529, i32* %retval, align 4, !dbg !11801
  br label %return, !dbg !11801

if.end:                                           ; preds = %entry
  %1 = load %struct.AVIOContext*, %struct.AVIOContext** %pb.addr, align 8, !dbg !11802
  %2 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !11803
  %3 = load i64, i64* %length.addr, align 8, !dbg !11804
  %conv = trunc i64 %3 to i32, !dbg !11804
  %call = call i32 @av_get_packet(%struct.AVIOContext* %1, %struct.AVPacket* %2, i32 %conv), !dbg !11805
  %conv1 = sext i32 %call to i64, !dbg !11805
  store i64 %conv1, i64* %length.addr, align 8, !dbg !11806
  %4 = load i64, i64* %length.addr, align 8, !dbg !11807
  %cmp2 = icmp slt i64 %4, 0, !dbg !11809
  br i1 %cmp2, label %if.then4, label %if.end6, !dbg !11810

if.then4:                                         ; preds = %if.end
  %5 = load i64, i64* %length.addr, align 8, !dbg !11811
  %conv5 = trunc i64 %5 to i32, !dbg !11811
  store i32 %conv5, i32* %retval, align 4, !dbg !11812
  br label %return, !dbg !11812

if.end6:                                          ; preds = %if.end
  %6 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !11813
  %data = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %6, i32 0, i32 3, !dbg !11814
  %7 = load i8*, i8** %data, align 8, !dbg !11814
  store i8* %7, i8** %data_ptr, align 8, !dbg !11815
  %8 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !11816
  %data7 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %8, i32 0, i32 3, !dbg !11817
  %9 = load i8*, i8** %data7, align 8, !dbg !11817
  %10 = load i64, i64* %length.addr, align 8, !dbg !11818
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 %10, !dbg !11819
  store i8* %add.ptr, i8** %end_ptr, align 8, !dbg !11820
  %11 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !11821
  %data8 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %11, i32 0, i32 3, !dbg !11822
  %12 = load i8*, i8** %data8, align 8, !dbg !11822
  %add.ptr9 = getelementptr inbounds i8, i8* %12, i64 4, !dbg !11823
  store i8* %add.ptr9, i8** %buf_ptr, align 8, !dbg !11824
  br label %for.cond, !dbg !11825

for.cond:                                         ; preds = %for.end, %if.end6
  %13 = load i8*, i8** %end_ptr, align 8, !dbg !11826
  %14 = load i8*, i8** %buf_ptr, align 8, !dbg !11828
  %sub.ptr.lhs.cast = ptrtoint i8* %13 to i64, !dbg !11829
  %sub.ptr.rhs.cast = ptrtoint i8* %14 to i64, !dbg !11829
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11829
  %15 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !11830
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %15, i32 0, i32 19, !dbg !11831
  %16 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !11831
  %channels = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %16, i32 0, i32 22, !dbg !11832
  %17 = load i32, i32* %channels, align 8, !dbg !11832
  %mul = mul nsw i32 %17, 4, !dbg !11833
  %conv10 = sext i32 %mul to i64, !dbg !11830
  %cmp11 = icmp sge i64 %sub.ptr.sub, %conv10, !dbg !11834
  br i1 %cmp11, label %for.body, label %for.end31, !dbg !11835

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !11836
  br label %for.cond13, !dbg !11837

for.cond13:                                       ; preds = %for.inc, %for.body
  %18 = load i32, i32* %i, align 4, !dbg !11838
  %19 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !11840
  %codecpar14 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %19, i32 0, i32 19, !dbg !11841
  %20 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar14, align 8, !dbg !11841
  %channels15 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %20, i32 0, i32 22, !dbg !11842
  %21 = load i32, i32* %channels15, align 8, !dbg !11842
  %cmp16 = icmp slt i32 %18, %21, !dbg !11843
  br i1 %cmp16, label %for.body18, label %for.end, !dbg !11844

for.body18:                                       ; preds = %for.cond13
  call void @llvm.dbg.declare(metadata i32* %sample, metadata !11845, metadata !2511), !dbg !11846
  store i8** %buf_ptr, i8*** %b.addr.i, align 8, !dbg !11847
  %22 = load i8**, i8*** %b.addr.i, align 8, !dbg !11848
  %23 = load i8*, i8** %22, align 8, !dbg !11849
  %add.ptr.i = getelementptr inbounds i8, i8* %23, i64 4, !dbg !11849
  store i8* %add.ptr.i, i8** %22, align 8, !dbg !11849
  %24 = load i8**, i8*** %b.addr.i, align 8, !dbg !11850
  %25 = load i8*, i8** %24, align 8, !dbg !11851
  %add.ptr1.i = getelementptr inbounds i8, i8* %25, i64 -4, !dbg !11852
  %26 = bitcast i8* %add.ptr1.i to %union.unaligned_32*, !dbg !11853
  %l.i = bitcast %union.unaligned_32* %26 to i32*, !dbg !11853
  %27 = load i32, i32* %l.i, align 1, !dbg !11853
  store i32 %27, i32* %sample, align 4, !dbg !11846
  %28 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !11854
  %codecpar20 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %28, i32 0, i32 19, !dbg !11855
  %29 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar20, align 8, !dbg !11855
  %bits_per_coded_sample = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %29, i32 0, i32 7, !dbg !11856
  %30 = load i32, i32* %bits_per_coded_sample, align 8, !dbg !11856
  %cmp21 = icmp eq i32 %30, 24, !dbg !11857
  br i1 %cmp21, label %if.then23, label %if.else, !dbg !11858

if.then23:                                        ; preds = %for.body18
  %31 = load i32, i32* %sample, align 4, !dbg !11859
  %shr = lshr i32 %31, 4, !dbg !11860
  %and = and i32 %shr, 16777215, !dbg !11861
  store i8** %data_ptr, i8*** %b.addr.i40, align 8, !dbg !11862
  store i32 %and, i32* %value.addr.i41, align 4, !dbg !11862
  %32 = load i32, i32* %value.addr.i41, align 4, !dbg !11863
  %conv.i42 = trunc i32 %32 to i8, !dbg !11866
  %33 = load i8**, i8*** %b.addr.i40, align 8, !dbg !11867
  %34 = load i8*, i8** %33, align 8, !dbg !11868
  store i8 %conv.i42, i8* %34, align 1, !dbg !11869
  %35 = load i32, i32* %value.addr.i41, align 4, !dbg !11870
  %shr.i = lshr i32 %35, 8, !dbg !11871
  %conv1.i = trunc i32 %shr.i to i8, !dbg !11872
  %36 = load i8**, i8*** %b.addr.i40, align 8, !dbg !11873
  %37 = load i8*, i8** %36, align 8, !dbg !11874
  %arrayidx2.i = getelementptr inbounds i8, i8* %37, i64 1, !dbg !11875
  store i8 %conv1.i, i8* %arrayidx2.i, align 1, !dbg !11876
  %38 = load i32, i32* %value.addr.i41, align 4, !dbg !11877
  %shr3.i = lshr i32 %38, 16, !dbg !11878
  %conv4.i = trunc i32 %shr3.i to i8, !dbg !11879
  %39 = load i8**, i8*** %b.addr.i40, align 8, !dbg !11880
  %40 = load i8*, i8** %39, align 8, !dbg !11881
  %arrayidx5.i = getelementptr inbounds i8, i8* %40, i64 2, !dbg !11882
  store i8 %conv4.i, i8* %arrayidx5.i, align 1, !dbg !11883
  %41 = load i8**, i8*** %b.addr.i40, align 8, !dbg !11884
  %42 = load i8*, i8** %41, align 8, !dbg !11886
  %add.ptr.i43 = getelementptr inbounds i8, i8* %42, i64 3, !dbg !11886
  store i8* %add.ptr.i43, i8** %41, align 8, !dbg !11886
  br label %if.end26, !dbg !11862

if.else:                                          ; preds = %for.body18
  %43 = load i32, i32* %sample, align 4, !dbg !11887
  %shr24 = lshr i32 %43, 12, !dbg !11888
  %and25 = and i32 %shr24, 65535, !dbg !11889
  store i8** %data_ptr, i8*** %b.addr.i37, align 8, !dbg !11890
  store i32 %and25, i32* %value.addr.i, align 4, !dbg !11890
  %44 = load i32, i32* %value.addr.i, align 4, !dbg !11891
  %conv.i = trunc i32 %44 to i16, !dbg !11892
  %45 = load i8**, i8*** %b.addr.i37, align 8, !dbg !11893
  %46 = load i8*, i8** %45, align 8, !dbg !11894
  %47 = bitcast i8* %46 to %union.unaligned_16*, !dbg !11895
  %l.i38 = bitcast %union.unaligned_16* %47 to i16*, !dbg !11895
  store i16 %conv.i, i16* %l.i38, align 1, !dbg !11896
  %48 = load i8**, i8*** %b.addr.i37, align 8, !dbg !11897
  %49 = load i8*, i8** %48, align 8, !dbg !11898
  %add.ptr.i39 = getelementptr inbounds i8, i8* %49, i64 2, !dbg !11898
  store i8* %add.ptr.i39, i8** %48, align 8, !dbg !11898
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then23
  br label %for.inc, !dbg !11899

for.inc:                                          ; preds = %if.end26
  %50 = load i32, i32* %i, align 4, !dbg !11900
  %inc = add nsw i32 %50, 1, !dbg !11900
  store i32 %inc, i32* %i, align 4, !dbg !11900
  br label %for.cond13, !dbg !11902, !llvm.loop !11903

for.end:                                          ; preds = %for.cond13
  %51 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !11905
  %codecpar27 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %51, i32 0, i32 19, !dbg !11906
  %52 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar27, align 8, !dbg !11906
  %channels28 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %52, i32 0, i32 22, !dbg !11907
  %53 = load i32, i32* %channels28, align 8, !dbg !11907
  %mul29 = mul nsw i32 %53, 4, !dbg !11908
  %sub = sub nsw i32 32, %mul29, !dbg !11909
  %54 = load i8*, i8** %buf_ptr, align 8, !dbg !11910
  %idx.ext = sext i32 %sub to i64, !dbg !11910
  %add.ptr30 = getelementptr inbounds i8, i8* %54, i64 %idx.ext, !dbg !11910
  store i8* %add.ptr30, i8** %buf_ptr, align 8, !dbg !11910
  br label %for.cond, !dbg !11911, !llvm.loop !11913

for.end31:                                        ; preds = %for.cond
  %55 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !11914
  %56 = load i8*, i8** %data_ptr, align 8, !dbg !11915
  %57 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !11916
  %data32 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %57, i32 0, i32 3, !dbg !11917
  %58 = load i8*, i8** %data32, align 8, !dbg !11917
  %sub.ptr.lhs.cast33 = ptrtoint i8* %56 to i64, !dbg !11918
  %sub.ptr.rhs.cast34 = ptrtoint i8* %58 to i64, !dbg !11918
  %sub.ptr.sub35 = sub i64 %sub.ptr.lhs.cast33, %sub.ptr.rhs.cast34, !dbg !11918
  %conv36 = trunc i64 %sub.ptr.sub35 to i32, !dbg !11915
  call void @av_shrink_packet(%struct.AVPacket* %55, i32 %conv36), !dbg !11919
  store i32 0, i32* %retval, align 4, !dbg !11920
  br label %return, !dbg !11920

return:                                           ; preds = %for.end31, %if.then4, %if.then
  %59 = load i32, i32* %retval, align 4, !dbg !11921
  ret i32 %59, !dbg !11921
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_get_eia608_packet(%struct.AVFormatContext* %s, %struct.AVStream* %st, %struct.AVPacket* %pkt, i64 %length) #0 !dbg !11922 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.AVFormatContext*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %length.addr = alloca i64, align 8
  %count = alloca i32, align 4
  %cdp_identifier = alloca i32, align 4
  %cdp_length = alloca i32, align 4
  %cdp_footer_id = alloca i32, align 4
  %ccdata_id = alloca i32, align 4
  %cc_count = alloca i32, align 4
  %line_num = alloca i32, align 4
  %sample_coding = alloca i32, align 4
  %sample_count = alloca i32, align 4
  %did = alloca i32, align 4
  %sdid = alloca i32, align 4
  %data_length = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.AVFormatContext* %s, %struct.AVFormatContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFormatContext** %s.addr, metadata !11925, metadata !2511), !dbg !11926
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !11927, metadata !2511), !dbg !11928
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !11929, metadata !2511), !dbg !11930
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !11931, metadata !2511), !dbg !11932
  call void @llvm.dbg.declare(metadata i32* %count, metadata !11933, metadata !2511), !dbg !11934
  %0 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !11935
  %pb = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %0, i32 0, i32 4, !dbg !11936
  %1 = load %struct.AVIOContext*, %struct.AVIOContext** %pb, align 8, !dbg !11936
  %call = call i32 @avio_rb16(%struct.AVIOContext* %1), !dbg !11937
  store i32 %call, i32* %count, align 4, !dbg !11934
  call void @llvm.dbg.declare(metadata i32* %cdp_identifier, metadata !11938, metadata !2511), !dbg !11939
  call void @llvm.dbg.declare(metadata i32* %cdp_length, metadata !11940, metadata !2511), !dbg !11941
  call void @llvm.dbg.declare(metadata i32* %cdp_footer_id, metadata !11942, metadata !2511), !dbg !11943
  call void @llvm.dbg.declare(metadata i32* %ccdata_id, metadata !11944, metadata !2511), !dbg !11945
  call void @llvm.dbg.declare(metadata i32* %cc_count, metadata !11946, metadata !2511), !dbg !11947
  call void @llvm.dbg.declare(metadata i32* %line_num, metadata !11948, metadata !2511), !dbg !11949
  call void @llvm.dbg.declare(metadata i32* %sample_coding, metadata !11950, metadata !2511), !dbg !11951
  call void @llvm.dbg.declare(metadata i32* %sample_count, metadata !11952, metadata !2511), !dbg !11953
  call void @llvm.dbg.declare(metadata i32* %did, metadata !11954, metadata !2511), !dbg !11955
  call void @llvm.dbg.declare(metadata i32* %sdid, metadata !11956, metadata !2511), !dbg !11957
  call void @llvm.dbg.declare(metadata i32* %data_length, metadata !11958, metadata !2511), !dbg !11959
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11960, metadata !2511), !dbg !11961
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11962, metadata !2511), !dbg !11963
  %2 = load i32, i32* %count, align 4, !dbg !11964
  %cmp = icmp ne i32 %2, 1, !dbg !11966
  br i1 %cmp, label %if.then, label %if.end, !dbg !11967

if.then:                                          ; preds = %entry
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !11968
  %4 = bitcast %struct.AVFormatContext* %3 to i8*, !dbg !11968
  %5 = load i32, i32* %count, align 4, !dbg !11969
  call void (i8*, i32, i8*, ...) @av_log(i8* %4, i32 24, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.135, i32 0, i32 0), i32 %5), !dbg !11970
  br label %if.end, !dbg !11970

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4, !dbg !11971
  br label %for.cond, !dbg !11973

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i32, i32* %i, align 4, !dbg !11974
  %7 = load i32, i32* %count, align 4, !dbg !11977
  %cmp1 = icmp slt i32 %6, %7, !dbg !11978
  br i1 %cmp1, label %for.body, label %for.end, !dbg !11979

for.body:                                         ; preds = %for.cond
  %8 = load i64, i64* %length.addr, align 8, !dbg !11980
  %cmp2 = icmp slt i64 %8, 6, !dbg !11983
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !11984

if.then3:                                         ; preds = %for.body
  %9 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !11985
  %10 = bitcast %struct.AVFormatContext* %9 to i8*, !dbg !11985
  %11 = load i64, i64* %length.addr, align 8, !dbg !11987
  call void (i8*, i32, i8*, ...) @av_log(i8* %10, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.136, i32 0, i32 0), i64 %11), !dbg !11988
  store i32 -1094995529, i32* %retval, align 4, !dbg !11989
  br label %return, !dbg !11989

if.end4:                                          ; preds = %for.body
  %12 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !11990
  %pb5 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %12, i32 0, i32 4, !dbg !11991
  %13 = load %struct.AVIOContext*, %struct.AVIOContext** %pb5, align 8, !dbg !11991
  %call6 = call i32 @avio_rb16(%struct.AVIOContext* %13), !dbg !11992
  store i32 %call6, i32* %line_num, align 4, !dbg !11993
  %14 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !11994
  %pb7 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %14, i32 0, i32 4, !dbg !11995
  %15 = load %struct.AVIOContext*, %struct.AVIOContext** %pb7, align 8, !dbg !11995
  %call8 = call i32 @avio_r8(%struct.AVIOContext* %15), !dbg !11996
  %16 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !11997
  %pb9 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %16, i32 0, i32 4, !dbg !11998
  %17 = load %struct.AVIOContext*, %struct.AVIOContext** %pb9, align 8, !dbg !11998
  %call10 = call i32 @avio_r8(%struct.AVIOContext* %17), !dbg !11999
  store i32 %call10, i32* %sample_coding, align 4, !dbg !12000
  %18 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12001
  %pb11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %18, i32 0, i32 4, !dbg !12002
  %19 = load %struct.AVIOContext*, %struct.AVIOContext** %pb11, align 8, !dbg !12002
  %call12 = call i32 @avio_rb16(%struct.AVIOContext* %19), !dbg !12003
  store i32 %call12, i32* %sample_count, align 4, !dbg !12004
  %20 = load i32, i32* %sample_count, align 4, !dbg !12005
  %add = add nsw i32 14, %20, !dbg !12006
  %conv = sext i32 %add to i64, !dbg !12007
  %21 = load i64, i64* %length.addr, align 8, !dbg !12008
  %sub = sub nsw i64 %21, %conv, !dbg !12008
  store i64 %sub, i64* %length.addr, align 8, !dbg !12008
  %22 = load i32, i32* %line_num, align 4, !dbg !12009
  %cmp13 = icmp ne i32 %22, 9, !dbg !12011
  br i1 %cmp13, label %land.lhs.true, label %if.end18, !dbg !12012

land.lhs.true:                                    ; preds = %if.end4
  %23 = load i32, i32* %line_num, align 4, !dbg !12013
  %cmp15 = icmp ne i32 %23, 11, !dbg !12015
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !12016

if.then17:                                        ; preds = %land.lhs.true
  br label %for.inc, !dbg !12017

if.end18:                                         ; preds = %land.lhs.true, %if.end4
  %24 = load i32, i32* %sample_coding, align 4, !dbg !12018
  %cmp19 = icmp eq i32 %24, 7, !dbg !12020
  br i1 %cmp19, label %if.then26, label %lor.lhs.false, !dbg !12021

lor.lhs.false:                                    ; preds = %if.end18
  %25 = load i32, i32* %sample_coding, align 4, !dbg !12022
  %cmp21 = icmp eq i32 %25, 8, !dbg !12024
  br i1 %cmp21, label %if.then26, label %lor.lhs.false23, !dbg !12025

lor.lhs.false23:                                  ; preds = %lor.lhs.false
  %26 = load i32, i32* %sample_coding, align 4, !dbg !12026
  %cmp24 = icmp eq i32 %26, 9, !dbg !12028
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !12029

if.then26:                                        ; preds = %lor.lhs.false23, %lor.lhs.false, %if.end18
  %27 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12030
  %28 = bitcast %struct.AVFormatContext* %27 to i8*, !dbg !12030
  call void (i8*, i32, i8*, ...) @av_log(i8* %28, i32 24, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.137, i32 0, i32 0)), !dbg !12032
  br label %for.inc, !dbg !12033

if.end27:                                         ; preds = %lor.lhs.false23
  %29 = load i64, i64* %length.addr, align 8, !dbg !12034
  %cmp28 = icmp slt i64 %29, 0, !dbg !12036
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !12037

if.then30:                                        ; preds = %if.end27
  store i32 -1094995529, i32* %retval, align 4, !dbg !12038
  br label %return, !dbg !12038

if.end31:                                         ; preds = %if.end27
  %30 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12039
  %pb32 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %30, i32 0, i32 4, !dbg !12040
  %31 = load %struct.AVIOContext*, %struct.AVIOContext** %pb32, align 8, !dbg !12040
  %call33 = call i32 @avio_rb32(%struct.AVIOContext* %31), !dbg !12041
  %32 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12042
  %pb34 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %32, i32 0, i32 4, !dbg !12043
  %33 = load %struct.AVIOContext*, %struct.AVIOContext** %pb34, align 8, !dbg !12043
  %call35 = call i32 @avio_rb32(%struct.AVIOContext* %33), !dbg !12044
  %34 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12045
  %pb36 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %34, i32 0, i32 4, !dbg !12046
  %35 = load %struct.AVIOContext*, %struct.AVIOContext** %pb36, align 8, !dbg !12046
  %call37 = call i32 @avio_r8(%struct.AVIOContext* %35), !dbg !12047
  store i32 %call37, i32* %did, align 4, !dbg !12048
  %36 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12049
  %pb38 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %36, i32 0, i32 4, !dbg !12050
  %37 = load %struct.AVIOContext*, %struct.AVIOContext** %pb38, align 8, !dbg !12050
  %call39 = call i32 @avio_r8(%struct.AVIOContext* %37), !dbg !12051
  store i32 %call39, i32* %sdid, align 4, !dbg !12052
  %38 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12053
  %pb40 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %38, i32 0, i32 4, !dbg !12054
  %39 = load %struct.AVIOContext*, %struct.AVIOContext** %pb40, align 8, !dbg !12054
  %call41 = call i32 @avio_r8(%struct.AVIOContext* %39), !dbg !12055
  store i32 %call41, i32* %data_length, align 4, !dbg !12056
  %40 = load i32, i32* %did, align 4, !dbg !12057
  %cmp42 = icmp ne i32 %40, 97, !dbg !12059
  br i1 %cmp42, label %if.then47, label %lor.lhs.false44, !dbg !12060

lor.lhs.false44:                                  ; preds = %if.end31
  %41 = load i32, i32* %sdid, align 4, !dbg !12061
  %cmp45 = icmp ne i32 %41, 1, !dbg !12063
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !12064

if.then47:                                        ; preds = %lor.lhs.false44, %if.end31
  %42 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12065
  %43 = bitcast %struct.AVFormatContext* %42 to i8*, !dbg !12065
  %44 = load i32, i32* %did, align 4, !dbg !12067
  %45 = load i32, i32* %sdid, align 4, !dbg !12068
  call void (i8*, i32, i8*, ...) @av_log(i8* %43, i32 24, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.138, i32 0, i32 0), i32 %44, i32 %45), !dbg !12069
  br label %for.inc, !dbg !12070

if.end48:                                         ; preds = %lor.lhs.false44
  %46 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12071
  %pb49 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %46, i32 0, i32 4, !dbg !12072
  %47 = load %struct.AVIOContext*, %struct.AVIOContext** %pb49, align 8, !dbg !12072
  %call50 = call i32 @avio_rb16(%struct.AVIOContext* %47), !dbg !12073
  store i32 %call50, i32* %cdp_identifier, align 4, !dbg !12074
  %48 = load i32, i32* %cdp_identifier, align 4, !dbg !12075
  %cmp51 = icmp ne i32 %48, 38505, !dbg !12077
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !12078

if.then53:                                        ; preds = %if.end48
  %49 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12079
  %50 = bitcast %struct.AVFormatContext* %49 to i8*, !dbg !12079
  %51 = load i32, i32* %cdp_identifier, align 4, !dbg !12081
  call void (i8*, i32, i8*, ...) @av_log(i8* %50, i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.139, i32 0, i32 0), i32 %51), !dbg !12082
  store i32 -1094995529, i32* %retval, align 4, !dbg !12083
  br label %return, !dbg !12083

if.end54:                                         ; preds = %if.end48
  %52 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12084
  %pb55 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %52, i32 0, i32 4, !dbg !12085
  %53 = load %struct.AVIOContext*, %struct.AVIOContext** %pb55, align 8, !dbg !12085
  %call56 = call i32 @avio_r8(%struct.AVIOContext* %53), !dbg !12086
  store i32 %call56, i32* %cdp_length, align 4, !dbg !12087
  %54 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12088
  %pb57 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %54, i32 0, i32 4, !dbg !12089
  %55 = load %struct.AVIOContext*, %struct.AVIOContext** %pb57, align 8, !dbg !12089
  %call58 = call i32 @avio_r8(%struct.AVIOContext* %55), !dbg !12090
  %56 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12091
  %pb59 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %56, i32 0, i32 4, !dbg !12092
  %57 = load %struct.AVIOContext*, %struct.AVIOContext** %pb59, align 8, !dbg !12092
  %call60 = call i32 @avio_r8(%struct.AVIOContext* %57), !dbg !12093
  %58 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12094
  %pb61 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %58, i32 0, i32 4, !dbg !12095
  %59 = load %struct.AVIOContext*, %struct.AVIOContext** %pb61, align 8, !dbg !12095
  %call62 = call i32 @avio_rb16(%struct.AVIOContext* %59), !dbg !12096
  %60 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12097
  %pb63 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %60, i32 0, i32 4, !dbg !12098
  %61 = load %struct.AVIOContext*, %struct.AVIOContext** %pb63, align 8, !dbg !12098
  %call64 = call i32 @avio_r8(%struct.AVIOContext* %61), !dbg !12099
  store i32 %call64, i32* %ccdata_id, align 4, !dbg !12100
  %62 = load i32, i32* %ccdata_id, align 4, !dbg !12101
  %cmp65 = icmp ne i32 %62, 114, !dbg !12103
  br i1 %cmp65, label %if.then67, label %if.end68, !dbg !12104

if.then67:                                        ; preds = %if.end54
  %63 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12105
  %64 = bitcast %struct.AVFormatContext* %63 to i8*, !dbg !12105
  %65 = load i32, i32* %ccdata_id, align 4, !dbg !12107
  call void (i8*, i32, i8*, ...) @av_log(i8* %64, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.140, i32 0, i32 0), i32 %65), !dbg !12108
  store i32 -1094995529, i32* %retval, align 4, !dbg !12109
  br label %return, !dbg !12109

if.end68:                                         ; preds = %if.end54
  %66 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12110
  %pb69 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %66, i32 0, i32 4, !dbg !12111
  %67 = load %struct.AVIOContext*, %struct.AVIOContext** %pb69, align 8, !dbg !12111
  %call70 = call i32 @avio_r8(%struct.AVIOContext* %67), !dbg !12112
  %and = and i32 %call70, 31, !dbg !12113
  store i32 %and, i32* %cc_count, align 4, !dbg !12114
  %68 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12115
  %pb71 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %68, i32 0, i32 4, !dbg !12116
  %69 = load %struct.AVIOContext*, %struct.AVIOContext** %pb71, align 8, !dbg !12116
  %70 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !12117
  %71 = load i32, i32* %cc_count, align 4, !dbg !12118
  %mul = mul nsw i32 %71, 3, !dbg !12119
  %call72 = call i32 @av_get_packet(%struct.AVIOContext* %69, %struct.AVPacket* %70, i32 %mul), !dbg !12120
  store i32 %call72, i32* %ret, align 4, !dbg !12121
  %72 = load i32, i32* %ret, align 4, !dbg !12122
  %cmp73 = icmp slt i32 %72, 0, !dbg !12124
  br i1 %cmp73, label %if.then75, label %if.end76, !dbg !12125

if.then75:                                        ; preds = %if.end68
  %73 = load i32, i32* %ret, align 4, !dbg !12126
  store i32 %73, i32* %retval, align 4, !dbg !12127
  br label %return, !dbg !12127

if.end76:                                         ; preds = %if.end68
  %74 = load i32, i32* %cdp_length, align 4, !dbg !12128
  %sub77 = sub nsw i32 %74, 9, !dbg !12130
  %sub78 = sub nsw i32 %sub77, 4, !dbg !12131
  %75 = load i32, i32* %cc_count, align 4, !dbg !12132
  %mul79 = mul nsw i32 %75, 3, !dbg !12133
  %cmp80 = icmp slt i32 %sub78, %mul79, !dbg !12134
  br i1 %cmp80, label %if.then82, label %if.end83, !dbg !12135

if.then82:                                        ; preds = %if.end76
  %76 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12136
  %77 = bitcast %struct.AVFormatContext* %76 to i8*, !dbg !12136
  %78 = load i32, i32* %cdp_length, align 4, !dbg !12138
  %79 = load i32, i32* %cc_count, align 4, !dbg !12139
  call void (i8*, i32, i8*, ...) @av_log(i8* %77, i32 16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.141, i32 0, i32 0), i32 %78, i32 %79), !dbg !12140
  store i32 -1094995529, i32* %retval, align 4, !dbg !12141
  br label %return, !dbg !12141

if.end83:                                         ; preds = %if.end76
  %80 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12142
  %pb84 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %80, i32 0, i32 4, !dbg !12143
  %81 = load %struct.AVIOContext*, %struct.AVIOContext** %pb84, align 8, !dbg !12143
  %82 = load i32, i32* %data_length, align 4, !dbg !12144
  %sub85 = sub nsw i32 %82, 9, !dbg !12145
  %sub86 = sub nsw i32 %sub85, 4, !dbg !12146
  %83 = load i32, i32* %cc_count, align 4, !dbg !12147
  %mul87 = mul nsw i32 %83, 3, !dbg !12148
  %sub88 = sub nsw i32 %sub86, %mul87, !dbg !12149
  %conv89 = sext i32 %sub88 to i64, !dbg !12144
  %call90 = call i64 @avio_skip(%struct.AVIOContext* %81, i64 %conv89), !dbg !12150
  %84 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12151
  %pb91 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %84, i32 0, i32 4, !dbg !12152
  %85 = load %struct.AVIOContext*, %struct.AVIOContext** %pb91, align 8, !dbg !12152
  %call92 = call i32 @avio_r8(%struct.AVIOContext* %85), !dbg !12153
  store i32 %call92, i32* %cdp_footer_id, align 4, !dbg !12154
  %86 = load i32, i32* %cdp_footer_id, align 4, !dbg !12155
  %cmp93 = icmp ne i32 %86, 116, !dbg !12157
  br i1 %cmp93, label %if.then95, label %if.end96, !dbg !12158

if.then95:                                        ; preds = %if.end83
  %87 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12159
  %88 = bitcast %struct.AVFormatContext* %87 to i8*, !dbg !12159
  %89 = load i32, i32* %cdp_footer_id, align 4, !dbg !12161
  call void (i8*, i32, i8*, ...) @av_log(i8* %88, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.142, i32 0, i32 0), i32 %89), !dbg !12162
  store i32 -1094995529, i32* %retval, align 4, !dbg !12163
  br label %return, !dbg !12163

if.end96:                                         ; preds = %if.end83
  %90 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12164
  %pb97 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %90, i32 0, i32 4, !dbg !12165
  %91 = load %struct.AVIOContext*, %struct.AVIOContext** %pb97, align 8, !dbg !12165
  %call98 = call i32 @avio_rb16(%struct.AVIOContext* %91), !dbg !12166
  %92 = load %struct.AVFormatContext*, %struct.AVFormatContext** %s.addr, align 8, !dbg !12167
  %pb99 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %92, i32 0, i32 4, !dbg !12168
  %93 = load %struct.AVIOContext*, %struct.AVIOContext** %pb99, align 8, !dbg !12168
  %call100 = call i32 @avio_r8(%struct.AVIOContext* %93), !dbg !12169
  br label %for.end, !dbg !12170

for.inc:                                          ; preds = %if.then47, %if.then26, %if.then17
  %94 = load i32, i32* %i, align 4, !dbg !12171
  %inc = add nsw i32 %94, 1, !dbg !12171
  store i32 %inc, i32* %i, align 4, !dbg !12171
  br label %for.cond, !dbg !12173, !llvm.loop !12174

for.end:                                          ; preds = %if.end96, %for.cond
  store i32 0, i32* %retval, align 4, !dbg !12176
  br label %return, !dbg !12176

return:                                           ; preds = %for.end, %if.then95, %if.then82, %if.then75, %if.then67, %if.then53, %if.then30, %if.then3
  %95 = load i32, i32* %retval, align 4, !dbg !12177
  ret i32 %95, !dbg !12177
}

declare i32 @av_get_packet(%struct.AVIOContext*, %struct.AVPacket*, i32) #1

; Function Attrs: nounwind uwtable
define internal i32 @mxf_set_pts(%struct.MXFContext* %mxf, %struct.AVStream* %st, %struct.AVPacket* %pkt) #0 !dbg !12178 {
entry:
  %retval = alloca i32, align 4
  %mxf.addr = alloca %struct.MXFContext*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %par = alloca %struct.AVCodecParameters*, align 8
  %track = alloca %struct.MXFTrack*, align 8
  %t = alloca %struct.MXFIndexTable*, align 8
  %ret = alloca i32, align 4
  store %struct.MXFContext* %mxf, %struct.MXFContext** %mxf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf.addr, metadata !12181, metadata !2511), !dbg !12182
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !12183, metadata !2511), !dbg !12184
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !12185, metadata !2511), !dbg !12186
  call void @llvm.dbg.declare(metadata %struct.AVCodecParameters** %par, metadata !12187, metadata !2511), !dbg !12188
  %0 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !12189
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %0, i32 0, i32 19, !dbg !12190
  %1 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !12190
  store %struct.AVCodecParameters* %1, %struct.AVCodecParameters** %par, align 8, !dbg !12188
  call void @llvm.dbg.declare(metadata %struct.MXFTrack** %track, metadata !12191, metadata !2511), !dbg !12192
  %2 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !12193
  %priv_data = getelementptr inbounds %struct.AVStream, %struct.AVStream* %2, i32 0, i32 3, !dbg !12194
  %3 = load i8*, i8** %priv_data, align 8, !dbg !12194
  %4 = bitcast i8* %3 to %struct.MXFTrack*, !dbg !12193
  store %struct.MXFTrack* %4, %struct.MXFTrack** %track, align 8, !dbg !12192
  %5 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !12195
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %5, i32 0, i32 0, !dbg !12197
  %6 = load i32, i32* %codec_type, align 8, !dbg !12197
  %cmp = icmp eq i32 %6, 0, !dbg !12198
  br i1 %cmp, label %if.then, label %if.else12, !dbg !12199

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.MXFIndexTable** %t, metadata !12200, metadata !2511), !dbg !12202
  %7 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !12203
  %8 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !12204
  %index_sid = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %8, i32 0, i32 11, !dbg !12205
  %9 = load i32, i32* %index_sid, align 8, !dbg !12205
  %call = call %struct.MXFIndexTable* @mxf_find_index_table(%struct.MXFContext* %7, i32 %9), !dbg !12206
  store %struct.MXFIndexTable* %call, %struct.MXFIndexTable** %t, align 8, !dbg !12202
  %10 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !12207
  %tobool = icmp ne %struct.MXFIndexTable* %10, null, !dbg !12207
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !12209

land.lhs.true:                                    ; preds = %if.then
  %11 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !12210
  %sample_count = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %11, i32 0, i32 9, !dbg !12212
  %12 = load i64, i64* %sample_count, align 8, !dbg !12212
  %13 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !12213
  %nb_ptses = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %13, i32 0, i32 2, !dbg !12214
  %14 = load i32, i32* %nb_ptses, align 8, !dbg !12214
  %conv = sext i32 %14 to i64, !dbg !12213
  %cmp1 = icmp ult i64 %12, %conv, !dbg !12215
  br i1 %cmp1, label %if.then3, label %if.else, !dbg !12216

if.then3:                                         ; preds = %land.lhs.true
  %15 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !12217
  %sample_count4 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %15, i32 0, i32 9, !dbg !12219
  %16 = load i64, i64* %sample_count4, align 8, !dbg !12219
  %17 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !12220
  %first_dts = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %17, i32 0, i32 3, !dbg !12221
  %18 = load i64, i64* %first_dts, align 8, !dbg !12221
  %add = add i64 %16, %18, !dbg !12222
  %19 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !12223
  %dts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %19, i32 0, i32 2, !dbg !12224
  store i64 %add, i64* %dts, align 8, !dbg !12225
  %20 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !12226
  %sample_count5 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %20, i32 0, i32 9, !dbg !12227
  %21 = load i64, i64* %sample_count5, align 8, !dbg !12227
  %22 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !12228
  %ptses = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %22, i32 0, i32 4, !dbg !12229
  %23 = load i64*, i64** %ptses, align 8, !dbg !12229
  %arrayidx = getelementptr inbounds i64, i64* %23, i64 %21, !dbg !12228
  %24 = load i64, i64* %arrayidx, align 8, !dbg !12228
  %25 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !12230
  %pts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %25, i32 0, i32 1, !dbg !12231
  store i64 %24, i64* %pts, align 8, !dbg !12232
  br label %if.end10, !dbg !12233

if.else:                                          ; preds = %land.lhs.true, %if.then
  %26 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !12234
  %intra_only = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %26, i32 0, i32 8, !dbg !12237
  %27 = load i32, i32* %intra_only, align 4, !dbg !12237
  %tobool6 = icmp ne i32 %27, 0, !dbg !12234
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !12234

if.then7:                                         ; preds = %if.else
  %28 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !12238
  %sample_count8 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %28, i32 0, i32 9, !dbg !12240
  %29 = load i64, i64* %sample_count8, align 8, !dbg !12240
  %30 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !12241
  %pts9 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %30, i32 0, i32 1, !dbg !12242
  store i64 %29, i64* %pts9, align 8, !dbg !12243
  br label %if.end, !dbg !12244

if.end:                                           ; preds = %if.then7, %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end, %if.then3
  %31 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !12245
  %sample_count11 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %31, i32 0, i32 9, !dbg !12246
  %32 = load i64, i64* %sample_count11, align 8, !dbg !12247
  %inc = add i64 %32, 1, !dbg !12247
  store i64 %inc, i64* %sample_count11, align 8, !dbg !12247
  br label %if.end32, !dbg !12248

if.else12:                                        ; preds = %entry
  %33 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !12249
  %codec_type13 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %33, i32 0, i32 0, !dbg !12252
  %34 = load i32, i32* %codec_type13, align 8, !dbg !12252
  %cmp14 = icmp eq i32 %34, 1, !dbg !12253
  br i1 %cmp14, label %if.then16, label %if.else22, !dbg !12249

if.then16:                                        ; preds = %if.else12
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12254, metadata !2511), !dbg !12256
  %35 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !12257
  %36 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par, align 8, !dbg !12258
  %37 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !12259
  %call17 = call i32 @mxf_set_audio_pts(%struct.MXFContext* %35, %struct.AVCodecParameters* %36, %struct.AVPacket* %37), !dbg !12260
  store i32 %call17, i32* %ret, align 4, !dbg !12256
  %38 = load i32, i32* %ret, align 4, !dbg !12261
  %cmp18 = icmp slt i32 %38, 0, !dbg !12263
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !12264

if.then20:                                        ; preds = %if.then16
  %39 = load i32, i32* %ret, align 4, !dbg !12265
  store i32 %39, i32* %retval, align 4, !dbg !12266
  br label %return, !dbg !12266

if.end21:                                         ; preds = %if.then16
  br label %if.end31, !dbg !12267

if.else22:                                        ; preds = %if.else12
  %40 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !12268
  %tobool23 = icmp ne %struct.MXFTrack* %40, null, !dbg !12268
  br i1 %tobool23, label %if.then24, label %if.end30, !dbg !12268

if.then24:                                        ; preds = %if.else22
  %41 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !12271
  %sample_count25 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %41, i32 0, i32 9, !dbg !12273
  %42 = load i64, i64* %sample_count25, align 8, !dbg !12273
  %43 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !12274
  %pts26 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %43, i32 0, i32 1, !dbg !12275
  store i64 %42, i64* %pts26, align 8, !dbg !12276
  %44 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !12277
  %dts27 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %44, i32 0, i32 2, !dbg !12278
  store i64 %42, i64* %dts27, align 8, !dbg !12279
  %45 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !12280
  %duration = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %45, i32 0, i32 9, !dbg !12281
  store i64 1, i64* %duration, align 8, !dbg !12282
  %46 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !12283
  %sample_count28 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %46, i32 0, i32 9, !dbg !12284
  %47 = load i64, i64* %sample_count28, align 8, !dbg !12285
  %inc29 = add i64 %47, 1, !dbg !12285
  store i64 %inc29, i64* %sample_count28, align 8, !dbg !12285
  br label %if.end30, !dbg !12286

if.end30:                                         ; preds = %if.then24, %if.else22
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.end21
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.end10
  store i32 0, i32* %retval, align 4, !dbg !12287
  br label %return, !dbg !12287

return:                                           ; preds = %if.end32, %if.then20
  %48 = load i32, i32* %retval, align 4, !dbg !12288
  ret i32 %48, !dbg !12288
}

declare %struct.AVAES* @av_aes_alloc() #1

declare i32 @av_aes_init(%struct.AVAES*, i8*, i32, i32) #1

declare void @av_aes_crypt(%struct.AVAES*, i8*, i8*, i32, i8*, i32) #1

declare void @av_shrink_packet(%struct.AVPacket*, i32) #1

; Function Attrs: nounwind uwtable
define internal i32 @mxf_edit_unit_absolute_offset(%struct.MXFContext* %mxf, %struct.MXFIndexTable* %index_table, i64 %edit_unit, i64 %edit_rate.coerce, i64* %edit_unit_out, i64* %offset_out, %struct.MXFPartition** %partition_out, i32 %nag) #0 !dbg !12289 {
entry:
  %retval = alloca i32, align 4
  %edit_rate = alloca %struct.AVRational, align 4
  %mxf.addr = alloca %struct.MXFContext*, align 8
  %index_table.addr = alloca %struct.MXFIndexTable*, align 8
  %edit_unit.addr = alloca i64, align 8
  %edit_unit_out.addr = alloca i64*, align 8
  %offset_out.addr = alloca i64*, align 8
  %partition_out.addr = alloca %struct.MXFPartition**, align 8
  %nag.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %offset_temp = alloca i64, align 8
  %s = alloca %struct.MXFIndexTableSegment*, align 8
  %index = alloca i64, align 8
  %0 = bitcast %struct.AVRational* %edit_rate to i64*
  store i64 %edit_rate.coerce, i64* %0, align 4
  store %struct.MXFContext* %mxf, %struct.MXFContext** %mxf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf.addr, metadata !12293, metadata !2511), !dbg !12294
  store %struct.MXFIndexTable* %index_table, %struct.MXFIndexTable** %index_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFIndexTable** %index_table.addr, metadata !12295, metadata !2511), !dbg !12296
  store i64 %edit_unit, i64* %edit_unit.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %edit_unit.addr, metadata !12297, metadata !2511), !dbg !12298
  call void @llvm.dbg.declare(metadata %struct.AVRational* %edit_rate, metadata !12299, metadata !2511), !dbg !12300
  store i64* %edit_unit_out, i64** %edit_unit_out.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %edit_unit_out.addr, metadata !12301, metadata !2511), !dbg !12302
  store i64* %offset_out, i64** %offset_out.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %offset_out.addr, metadata !12303, metadata !2511), !dbg !12304
  store %struct.MXFPartition** %partition_out, %struct.MXFPartition*** %partition_out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFPartition*** %partition_out.addr, metadata !12305, metadata !2511), !dbg !12306
  store i32 %nag, i32* %nag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nag.addr, metadata !12307, metadata !2511), !dbg !12308
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12309, metadata !2511), !dbg !12310
  call void @llvm.dbg.declare(metadata i64* %offset_temp, metadata !12311, metadata !2511), !dbg !12312
  store i64 0, i64* %offset_temp, align 8, !dbg !12312
  %1 = load i64, i64* %edit_unit.addr, align 8, !dbg !12313
  %2 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !12314
  %segments = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %2, i32 0, i32 6, !dbg !12315
  %3 = load %struct.MXFIndexTableSegment**, %struct.MXFIndexTableSegment*** %segments, align 8, !dbg !12315
  %arrayidx = getelementptr inbounds %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %3, i64 0, !dbg !12314
  %4 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %arrayidx, align 8, !dbg !12314
  %index_edit_rate = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %4, i32 0, i32 5, !dbg !12316
  %5 = bitcast %struct.AVRational* %index_edit_rate to i64*, !dbg !12317
  %6 = load i64, i64* %5, align 8, !dbg !12317
  %7 = bitcast %struct.AVRational* %edit_rate to i64*, !dbg !12317
  %8 = load i64, i64* %7, align 4, !dbg !12317
  %call = call i64 @av_rescale_q(i64 %1, i64 %6, i64 %8) #2, !dbg !12317
  store i64 %call, i64* %edit_unit.addr, align 8, !dbg !12318
  store i32 0, i32* %i, align 4, !dbg !12319
  br label %for.cond, !dbg !12321

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i32, i32* %i, align 4, !dbg !12322
  %10 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !12325
  %nb_segments = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %10, i32 0, i32 5, !dbg !12326
  %11 = load i32, i32* %nb_segments, align 8, !dbg !12326
  %cmp = icmp slt i32 %9, %11, !dbg !12327
  br i1 %cmp, label %for.body, label %for.end, !dbg !12328

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MXFIndexTableSegment** %s, metadata !12329, metadata !2511), !dbg !12331
  %12 = load i32, i32* %i, align 4, !dbg !12332
  %idxprom = sext i32 %12 to i64, !dbg !12333
  %13 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !12333
  %segments1 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %13, i32 0, i32 6, !dbg !12334
  %14 = load %struct.MXFIndexTableSegment**, %struct.MXFIndexTableSegment*** %segments1, align 8, !dbg !12334
  %arrayidx2 = getelementptr inbounds %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %14, i64 %idxprom, !dbg !12333
  %15 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %arrayidx2, align 8, !dbg !12333
  store %struct.MXFIndexTableSegment* %15, %struct.MXFIndexTableSegment** %s, align 8, !dbg !12331
  %16 = load i64, i64* %edit_unit.addr, align 8, !dbg !12335
  %17 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s, align 8, !dbg !12336
  %index_start_position = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %17, i32 0, i32 6, !dbg !12337
  %18 = load i64, i64* %index_start_position, align 8, !dbg !12337
  %cmp3 = icmp ugt i64 %16, %18, !dbg !12338
  br i1 %cmp3, label %cond.true, label %cond.false, !dbg !12339

cond.true:                                        ; preds = %for.body
  %19 = load i64, i64* %edit_unit.addr, align 8, !dbg !12340
  br label %cond.end, !dbg !12342

cond.false:                                       ; preds = %for.body
  %20 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s, align 8, !dbg !12343
  %index_start_position4 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %20, i32 0, i32 6, !dbg !12345
  %21 = load i64, i64* %index_start_position4, align 8, !dbg !12345
  br label %cond.end, !dbg !12346

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %19, %cond.true ], [ %21, %cond.false ], !dbg !12347
  store i64 %cond, i64* %edit_unit.addr, align 8, !dbg !12349
  %22 = load i64, i64* %edit_unit.addr, align 8, !dbg !12350
  %23 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s, align 8, !dbg !12352
  %index_start_position5 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %23, i32 0, i32 6, !dbg !12353
  %24 = load i64, i64* %index_start_position5, align 8, !dbg !12353
  %25 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s, align 8, !dbg !12354
  %index_duration = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %25, i32 0, i32 7, !dbg !12355
  %26 = load i64, i64* %index_duration, align 8, !dbg !12355
  %add = add i64 %24, %26, !dbg !12356
  %cmp6 = icmp ult i64 %22, %add, !dbg !12357
  br i1 %cmp6, label %if.then, label %if.else36, !dbg !12358

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i64* %index, metadata !12359, metadata !2511), !dbg !12361
  %27 = load i64, i64* %edit_unit.addr, align 8, !dbg !12362
  %28 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s, align 8, !dbg !12363
  %index_start_position7 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %28, i32 0, i32 6, !dbg !12364
  %29 = load i64, i64* %index_start_position7, align 8, !dbg !12364
  %sub = sub i64 %27, %29, !dbg !12365
  store i64 %sub, i64* %index, align 8, !dbg !12361
  %30 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s, align 8, !dbg !12366
  %edit_unit_byte_count = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %30, i32 0, i32 2, !dbg !12368
  %31 = load i32, i32* %edit_unit_byte_count, align 4, !dbg !12368
  %tobool = icmp ne i32 %31, 0, !dbg !12366
  br i1 %tobool, label %if.then8, label %if.else, !dbg !12369

if.then8:                                         ; preds = %if.then
  %32 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s, align 8, !dbg !12370
  %edit_unit_byte_count9 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %32, i32 0, i32 2, !dbg !12371
  %33 = load i32, i32* %edit_unit_byte_count9, align 4, !dbg !12371
  %conv = sext i32 %33 to i64, !dbg !12370
  %34 = load i64, i64* %index, align 8, !dbg !12372
  %mul = mul nsw i64 %conv, %34, !dbg !12373
  %35 = load i64, i64* %offset_temp, align 8, !dbg !12374
  %add10 = add nsw i64 %35, %mul, !dbg !12374
  store i64 %add10, i64* %offset_temp, align 8, !dbg !12374
  br label %if.end29, !dbg !12375

if.else:                                          ; preds = %if.then
  %36 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s, align 8, !dbg !12376
  %nb_index_entries = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %36, i32 0, i32 11, !dbg !12379
  %37 = load i32, i32* %nb_index_entries, align 8, !dbg !12379
  %conv11 = sext i32 %37 to i64, !dbg !12376
  %38 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s, align 8, !dbg !12380
  %index_duration12 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %38, i32 0, i32 7, !dbg !12381
  %39 = load i64, i64* %index_duration12, align 8, !dbg !12381
  %mul13 = mul i64 2, %39, !dbg !12382
  %add14 = add i64 %mul13, 1, !dbg !12383
  %cmp15 = icmp eq i64 %conv11, %add14, !dbg !12384
  br i1 %cmp15, label %if.then17, label %if.end, !dbg !12385

if.then17:                                        ; preds = %if.else
  %40 = load i64, i64* %index, align 8, !dbg !12386
  %mul18 = mul nsw i64 %40, 2, !dbg !12386
  store i64 %mul18, i64* %index, align 8, !dbg !12386
  br label %if.end, !dbg !12387

if.end:                                           ; preds = %if.then17, %if.else
  %41 = load i64, i64* %index, align 8, !dbg !12388
  %cmp19 = icmp slt i64 %41, 0, !dbg !12390
  br i1 %cmp19, label %if.then25, label %lor.lhs.false, !dbg !12391

lor.lhs.false:                                    ; preds = %if.end
  %42 = load i64, i64* %index, align 8, !dbg !12392
  %43 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s, align 8, !dbg !12394
  %nb_index_entries21 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %43, i32 0, i32 11, !dbg !12395
  %44 = load i32, i32* %nb_index_entries21, align 8, !dbg !12395
  %conv22 = sext i32 %44 to i64, !dbg !12394
  %cmp23 = icmp sge i64 %42, %conv22, !dbg !12396
  br i1 %cmp23, label %if.then25, label %if.end27, !dbg !12397

if.then25:                                        ; preds = %lor.lhs.false, %if.end
  %45 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !12398
  %fc = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %45, i32 0, i32 10, !dbg !12400
  %46 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc, align 8, !dbg !12400
  %47 = bitcast %struct.AVFormatContext* %46 to i8*, !dbg !12398
  %48 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !12401
  %index_sid = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %48, i32 0, i32 0, !dbg !12402
  %49 = load i32, i32* %index_sid, align 8, !dbg !12402
  %50 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s, align 8, !dbg !12403
  %index_start_position26 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %50, i32 0, i32 6, !dbg !12404
  %51 = load i64, i64* %index_start_position26, align 8, !dbg !12404
  call void (i8*, i32, i8*, ...) @av_log(i8* %47, i32 16, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.131, i32 0, i32 0), i32 %49, i64 %51), !dbg !12405
  store i32 -1094995529, i32* %retval, align 4, !dbg !12406
  br label %return, !dbg !12406

if.end27:                                         ; preds = %lor.lhs.false
  %52 = load i64, i64* %index, align 8, !dbg !12407
  %53 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s, align 8, !dbg !12408
  %stream_offset_entries = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %53, i32 0, i32 10, !dbg !12409
  %54 = load i64*, i64** %stream_offset_entries, align 8, !dbg !12409
  %arrayidx28 = getelementptr inbounds i64, i64* %54, i64 %52, !dbg !12408
  %55 = load i64, i64* %arrayidx28, align 8, !dbg !12408
  store i64 %55, i64* %offset_temp, align 8, !dbg !12410
  br label %if.end29

if.end29:                                         ; preds = %if.end27, %if.then8
  %56 = load i64*, i64** %edit_unit_out.addr, align 8, !dbg !12411
  %tobool30 = icmp ne i64* %56, null, !dbg !12411
  br i1 %tobool30, label %if.then31, label %if.end34, !dbg !12413

if.then31:                                        ; preds = %if.end29
  %57 = load i64, i64* %edit_unit.addr, align 8, !dbg !12414
  %58 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s, align 8, !dbg !12415
  %index_edit_rate32 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %58, i32 0, i32 5, !dbg !12416
  %59 = bitcast %struct.AVRational* %edit_rate to i64*, !dbg !12417
  %60 = load i64, i64* %59, align 4, !dbg !12417
  %61 = bitcast %struct.AVRational* %index_edit_rate32 to i64*, !dbg !12417
  %62 = load i64, i64* %61, align 8, !dbg !12417
  %call33 = call i64 @av_rescale_q(i64 %57, i64 %60, i64 %62) #2, !dbg !12417
  %63 = load i64*, i64** %edit_unit_out.addr, align 8, !dbg !12418
  store i64 %call33, i64* %63, align 8, !dbg !12419
  br label %if.end34, !dbg !12420

if.end34:                                         ; preds = %if.then31, %if.end29
  %64 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !12421
  %65 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !12422
  %body_sid = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %65, i32 0, i32 1, !dbg !12423
  %66 = load i32, i32* %body_sid, align 4, !dbg !12423
  %67 = load i64, i64* %offset_temp, align 8, !dbg !12424
  %68 = load i64*, i64** %offset_out.addr, align 8, !dbg !12425
  %69 = load %struct.MXFPartition**, %struct.MXFPartition*** %partition_out.addr, align 8, !dbg !12426
  %call35 = call i32 @mxf_absolute_bodysid_offset(%struct.MXFContext* %64, i32 %66, i64 %67, i64* %68, %struct.MXFPartition** %69), !dbg !12427
  store i32 %call35, i32* %retval, align 4, !dbg !12428
  br label %return, !dbg !12428

if.else36:                                        ; preds = %cond.end
  %70 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s, align 8, !dbg !12429
  %edit_unit_byte_count37 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %70, i32 0, i32 2, !dbg !12431
  %71 = load i32, i32* %edit_unit_byte_count37, align 4, !dbg !12431
  %conv38 = sext i32 %71 to i64, !dbg !12429
  %72 = load %struct.MXFIndexTableSegment*, %struct.MXFIndexTableSegment** %s, align 8, !dbg !12432
  %index_duration39 = getelementptr inbounds %struct.MXFIndexTableSegment, %struct.MXFIndexTableSegment* %72, i32 0, i32 7, !dbg !12433
  %73 = load i64, i64* %index_duration39, align 8, !dbg !12433
  %mul40 = mul i64 %conv38, %73, !dbg !12434
  %74 = load i64, i64* %offset_temp, align 8, !dbg !12435
  %add41 = add i64 %74, %mul40, !dbg !12435
  store i64 %add41, i64* %offset_temp, align 8, !dbg !12435
  br label %if.end42

if.end42:                                         ; preds = %if.else36
  br label %for.inc, !dbg !12436

for.inc:                                          ; preds = %if.end42
  %75 = load i32, i32* %i, align 4, !dbg !12437
  %inc = add nsw i32 %75, 1, !dbg !12437
  store i32 %inc, i32* %i, align 4, !dbg !12437
  br label %for.cond, !dbg !12439, !llvm.loop !12440

for.end:                                          ; preds = %for.cond
  %76 = load i32, i32* %nag.addr, align 4, !dbg !12442
  %tobool43 = icmp ne i32 %76, 0, !dbg !12442
  br i1 %tobool43, label %if.then44, label %if.end47, !dbg !12444

if.then44:                                        ; preds = %for.end
  %77 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !12445
  %fc45 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %77, i32 0, i32 10, !dbg !12446
  %78 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc45, align 8, !dbg !12446
  %79 = bitcast %struct.AVFormatContext* %78 to i8*, !dbg !12445
  %80 = load i64, i64* %edit_unit.addr, align 8, !dbg !12447
  %81 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %index_table.addr, align 8, !dbg !12448
  %index_sid46 = getelementptr inbounds %struct.MXFIndexTable, %struct.MXFIndexTable* %81, i32 0, i32 0, !dbg !12449
  %82 = load i32, i32* %index_sid46, align 8, !dbg !12449
  call void (i8*, i32, i8*, ...) @av_log(i8* %79, i32 16, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.132, i32 0, i32 0), i64 %80, i32 %82), !dbg !12450
  br label %if.end47, !dbg !12450

if.end47:                                         ; preds = %if.then44, %for.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !12451
  br label %return, !dbg !12451

return:                                           ; preds = %if.end47, %if.end34, %if.then25
  %83 = load i32, i32* %retval, align 4, !dbg !12452
  ret i32 %83, !dbg !12452
}

; Function Attrs: nounwind uwtable
define internal i64 @mxf_essence_container_end(%struct.MXFContext* %mxf, i32 %body_sid) #0 !dbg !12453 {
entry:
  %retval = alloca i64, align 8
  %mxf.addr = alloca %struct.MXFContext*, align 8
  %body_sid.addr = alloca i32, align 4
  %x = alloca i32, align 4
  %ret = alloca i64, align 8
  %p = alloca %struct.MXFPartition*, align 8
  store %struct.MXFContext* %mxf, %struct.MXFContext** %mxf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf.addr, metadata !12456, metadata !2511), !dbg !12457
  store i32 %body_sid, i32* %body_sid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %body_sid.addr, metadata !12458, metadata !2511), !dbg !12459
  call void @llvm.dbg.declare(metadata i32* %x, metadata !12460, metadata !2511), !dbg !12461
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !12462, metadata !2511), !dbg !12463
  store i64 0, i64* %ret, align 8, !dbg !12463
  store i32 0, i32* %x, align 4, !dbg !12464
  br label %for.cond, !dbg !12466

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %x, align 4, !dbg !12467
  %1 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !12470
  %partitions_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %1, i32 0, i32 2, !dbg !12471
  %2 = load i32, i32* %partitions_count, align 8, !dbg !12471
  %cmp = icmp ult i32 %0, %2, !dbg !12472
  br i1 %cmp, label %for.body, label %for.end, !dbg !12473

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MXFPartition** %p, metadata !12474, metadata !2511), !dbg !12476
  %3 = load i32, i32* %x, align 4, !dbg !12477
  %idxprom = sext i32 %3 to i64, !dbg !12478
  %4 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !12478
  %partitions = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %4, i32 0, i32 1, !dbg !12479
  %5 = load %struct.MXFPartition*, %struct.MXFPartition** %partitions, align 8, !dbg !12479
  %arrayidx = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %5, i64 %idxprom, !dbg !12478
  store %struct.MXFPartition* %arrayidx, %struct.MXFPartition** %p, align 8, !dbg !12476
  %6 = load %struct.MXFPartition*, %struct.MXFPartition** %p, align 8, !dbg !12480
  %body_sid1 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %6, i32 0, i32 5, !dbg !12482
  %7 = load i32, i32* %body_sid1, align 4, !dbg !12482
  %8 = load i32, i32* %body_sid.addr, align 4, !dbg !12483
  %cmp2 = icmp ne i32 %7, %8, !dbg !12484
  br i1 %cmp2, label %if.then, label %if.end, !dbg !12485

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !12486

if.end:                                           ; preds = %for.body
  %9 = load %struct.MXFPartition*, %struct.MXFPartition** %p, align 8, !dbg !12487
  %essence_length = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %9, i32 0, i32 8, !dbg !12489
  %10 = load i64, i64* %essence_length, align 8, !dbg !12489
  %tobool = icmp ne i64 %10, 0, !dbg !12487
  br i1 %tobool, label %if.end4, label %if.then3, !dbg !12490

if.then3:                                         ; preds = %if.end
  store i64 0, i64* %retval, align 8, !dbg !12491
  br label %return, !dbg !12491

if.end4:                                          ; preds = %if.end
  %11 = load %struct.MXFPartition*, %struct.MXFPartition** %p, align 8, !dbg !12492
  %essence_offset = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %11, i32 0, i32 7, !dbg !12493
  %12 = load i64, i64* %essence_offset, align 8, !dbg !12493
  %13 = load %struct.MXFPartition*, %struct.MXFPartition** %p, align 8, !dbg !12494
  %essence_length5 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %13, i32 0, i32 8, !dbg !12495
  %14 = load i64, i64* %essence_length5, align 8, !dbg !12495
  %add = add nsw i64 %12, %14, !dbg !12496
  store i64 %add, i64* %ret, align 8, !dbg !12497
  br label %for.inc, !dbg !12498

for.inc:                                          ; preds = %if.end4, %if.then
  %15 = load i32, i32* %x, align 4, !dbg !12499
  %inc = add nsw i32 %15, 1, !dbg !12499
  store i32 %inc, i32* %x, align 4, !dbg !12499
  br label %for.cond, !dbg !12501, !llvm.loop !12502

for.end:                                          ; preds = %for.cond
  %16 = load i64, i64* %ret, align 8, !dbg !12504
  store i64 %16, i64* %retval, align 8, !dbg !12505
  br label %return, !dbg !12505

return:                                           ; preds = %for.end, %if.then3
  %17 = load i64, i64* %retval, align 8, !dbg !12506
  ret i64 %17, !dbg !12506
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_get_next_track_edit_unit(%struct.MXFContext* %mxf, %struct.MXFTrack* %track, i64 %current_offset, i64* %edit_unit_out) #0 !dbg !12507 {
entry:
  %retval = alloca i32, align 4
  %mxf.addr = alloca %struct.MXFContext*, align 8
  %track.addr = alloca %struct.MXFTrack*, align 8
  %current_offset.addr = alloca i64, align 8
  %edit_unit_out.addr = alloca i64*, align 8
  %a = alloca i64, align 8
  %b = alloca i64, align 8
  %m = alloca i64, align 8
  %offset = alloca i64, align 8
  %t = alloca %struct.MXFIndexTable*, align 8
  store %struct.MXFContext* %mxf, %struct.MXFContext** %mxf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf.addr, metadata !12510, metadata !2511), !dbg !12511
  store %struct.MXFTrack* %track, %struct.MXFTrack** %track.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFTrack** %track.addr, metadata !12512, metadata !2511), !dbg !12513
  store i64 %current_offset, i64* %current_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %current_offset.addr, metadata !12514, metadata !2511), !dbg !12515
  store i64* %edit_unit_out, i64** %edit_unit_out.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %edit_unit_out.addr, metadata !12516, metadata !2511), !dbg !12517
  call void @llvm.dbg.declare(metadata i64* %a, metadata !12518, metadata !2511), !dbg !12519
  call void @llvm.dbg.declare(metadata i64* %b, metadata !12520, metadata !2511), !dbg !12521
  call void @llvm.dbg.declare(metadata i64* %m, metadata !12522, metadata !2511), !dbg !12523
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !12524, metadata !2511), !dbg !12525
  call void @llvm.dbg.declare(metadata %struct.MXFIndexTable** %t, metadata !12526, metadata !2511), !dbg !12527
  %0 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !12528
  %1 = load %struct.MXFTrack*, %struct.MXFTrack** %track.addr, align 8, !dbg !12529
  %index_sid = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %1, i32 0, i32 11, !dbg !12530
  %2 = load i32, i32* %index_sid, align 8, !dbg !12530
  %call = call %struct.MXFIndexTable* @mxf_find_index_table(%struct.MXFContext* %0, i32 %2), !dbg !12531
  store %struct.MXFIndexTable* %call, %struct.MXFIndexTable** %t, align 8, !dbg !12527
  %3 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !12532
  %tobool = icmp ne %struct.MXFIndexTable* %3, null, !dbg !12532
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !12534

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.MXFTrack*, %struct.MXFTrack** %track.addr, align 8, !dbg !12535
  %original_duration = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %4, i32 0, i32 10, !dbg !12537
  %5 = load i64, i64* %original_duration, align 8, !dbg !12537
  %cmp = icmp sle i64 %5, 0, !dbg !12538
  br i1 %cmp, label %if.then, label %if.end, !dbg !12539

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %retval, align 4, !dbg !12540
  br label %return, !dbg !12540

if.end:                                           ; preds = %lor.lhs.false
  store i64 -1, i64* %a, align 8, !dbg !12541
  %6 = load %struct.MXFTrack*, %struct.MXFTrack** %track.addr, align 8, !dbg !12542
  %original_duration1 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %6, i32 0, i32 10, !dbg !12543
  %7 = load i64, i64* %original_duration1, align 8, !dbg !12543
  store i64 %7, i64* %b, align 8, !dbg !12544
  br label %while.cond, !dbg !12545

while.cond:                                       ; preds = %if.end9, %if.end
  %8 = load i64, i64* %b, align 8, !dbg !12546
  %9 = load i64, i64* %a, align 8, !dbg !12548
  %sub = sub nsw i64 %8, %9, !dbg !12549
  %cmp2 = icmp sgt i64 %sub, 1, !dbg !12550
  br i1 %cmp2, label %while.body, label %while.end, !dbg !12551

while.body:                                       ; preds = %while.cond
  %10 = load i64, i64* %a, align 8, !dbg !12552
  %11 = load i64, i64* %b, align 8, !dbg !12554
  %add = add nsw i64 %10, %11, !dbg !12555
  %shr = ashr i64 %add, 1, !dbg !12556
  store i64 %shr, i64* %m, align 8, !dbg !12557
  %12 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !12558
  %13 = load %struct.MXFIndexTable*, %struct.MXFIndexTable** %t, align 8, !dbg !12560
  %14 = load i64, i64* %m, align 8, !dbg !12561
  %15 = load %struct.MXFTrack*, %struct.MXFTrack** %track.addr, align 8, !dbg !12562
  %edit_rate = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %15, i32 0, i32 7, !dbg !12563
  %16 = bitcast %struct.AVRational* %edit_rate to i64*, !dbg !12564
  %17 = load i64, i64* %16, align 4, !dbg !12564
  %call3 = call i32 @mxf_edit_unit_absolute_offset(%struct.MXFContext* %12, %struct.MXFIndexTable* %13, i64 %14, i64 %17, i64* null, i64* %offset, %struct.MXFPartition** null, i32 0), !dbg !12564
  %cmp4 = icmp slt i32 %call3, 0, !dbg !12565
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !12566

if.then5:                                         ; preds = %while.body
  store i32 -1, i32* %retval, align 4, !dbg !12567
  br label %return, !dbg !12567

if.end6:                                          ; preds = %while.body
  %18 = load i64, i64* %offset, align 8, !dbg !12568
  %19 = load i64, i64* %current_offset.addr, align 8, !dbg !12570
  %cmp7 = icmp slt i64 %18, %19, !dbg !12571
  br i1 %cmp7, label %if.then8, label %if.else, !dbg !12572

if.then8:                                         ; preds = %if.end6
  %20 = load i64, i64* %m, align 8, !dbg !12573
  store i64 %20, i64* %a, align 8, !dbg !12574
  br label %if.end9, !dbg !12575

if.else:                                          ; preds = %if.end6
  %21 = load i64, i64* %m, align 8, !dbg !12576
  store i64 %21, i64* %b, align 8, !dbg !12577
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then8
  br label %while.cond, !dbg !12578, !llvm.loop !12580

while.end:                                        ; preds = %while.cond
  %22 = load i64, i64* %b, align 8, !dbg !12581
  %23 = load i64*, i64** %edit_unit_out.addr, align 8, !dbg !12582
  store i64 %22, i64* %23, align 8, !dbg !12583
  store i32 0, i32* %retval, align 4, !dbg !12584
  br label %return, !dbg !12584

return:                                           ; preds = %while.end, %if.then5, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !12585
  ret i32 %24, !dbg !12585
}

; Function Attrs: nounwind uwtable
define internal i64 @mxf_compute_sample_count(%struct.MXFContext* %mxf, %struct.AVStream* %st, i64 %edit_unit) #0 !dbg !12586 {
entry:
  %retval.i42 = alloca %struct.AVRational, align 4
  %q.i43 = alloca %struct.AVRational, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %q.i43, metadata !3576, metadata !2511), !dbg !12589
  %r.i44 = alloca %struct.AVRational, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %r.i44, metadata !3583, metadata !2511), !dbg !12591
  %retval.i = alloca %struct.AVRational, align 4
  %q.i = alloca %struct.AVRational, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %q.i, metadata !3576, metadata !2511), !dbg !12592
  %r.i = alloca %struct.AVRational, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %r.i, metadata !3583, metadata !2511), !dbg !12594
  %retval = alloca i64, align 8
  %mxf.addr = alloca %struct.MXFContext*, align 8
  %st.addr = alloca %struct.AVStream*, align 8
  %edit_unit.addr = alloca i64, align 8
  %i = alloca i32, align 4
  %total = alloca i32, align 4
  %size = alloca i32, align 4
  %track = alloca %struct.MXFTrack*, align 8
  %time_base = alloca %struct.AVRational, align 4
  %sample_rate = alloca %struct.AVRational, align 4
  %spf = alloca %struct.MXFSamplesPerFrame*, align 8
  %sample_count = alloca i64, align 8
  %remainder = alloca i32, align 4
  store %struct.MXFContext* %mxf, %struct.MXFContext** %mxf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf.addr, metadata !12595, metadata !2511), !dbg !12596
  store %struct.AVStream* %st, %struct.AVStream** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st.addr, metadata !12597, metadata !2511), !dbg !12598
  store i64 %edit_unit, i64* %edit_unit.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %edit_unit.addr, metadata !12599, metadata !2511), !dbg !12600
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12601, metadata !2511), !dbg !12602
  call void @llvm.dbg.declare(metadata i32* %total, metadata !12603, metadata !2511), !dbg !12604
  store i32 0, i32* %total, align 4, !dbg !12604
  call void @llvm.dbg.declare(metadata i32* %size, metadata !12605, metadata !2511), !dbg !12606
  store i32 0, i32* %size, align 4, !dbg !12606
  call void @llvm.dbg.declare(metadata %struct.MXFTrack** %track, metadata !12607, metadata !2511), !dbg !12608
  %0 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !12609
  %priv_data = getelementptr inbounds %struct.AVStream, %struct.AVStream* %0, i32 0, i32 3, !dbg !12610
  %1 = load i8*, i8** %priv_data, align 8, !dbg !12610
  %2 = bitcast i8* %1 to %struct.MXFTrack*, !dbg !12609
  store %struct.MXFTrack* %2, %struct.MXFTrack** %track, align 8, !dbg !12608
  call void @llvm.dbg.declare(metadata %struct.AVRational* %time_base, metadata !12611, metadata !2511), !dbg !12612
  %3 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !12613
  %edit_rate = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %3, i32 0, i32 7, !dbg !12614
  %4 = bitcast %struct.AVRational* %edit_rate to i64*, !dbg !12615
  %5 = load i64, i64* %4, align 4, !dbg !12615
  %6 = bitcast %struct.AVRational* %q.i to i64*, !dbg !12615
  store i64 %5, i64* %6, align 4, !dbg !12615
  %num.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r.i, i32 0, i32 0, !dbg !12616
  %den.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q.i, i32 0, i32 1, !dbg !12617
  %7 = load i32, i32* %den.i, align 4, !dbg !12617
  store i32 %7, i32* %num.i, align 4, !dbg !12616
  %den1.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r.i, i32 0, i32 1, !dbg !12616
  %num2.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q.i, i32 0, i32 0, !dbg !12618
  %8 = load i32, i32* %num2.i, align 4, !dbg !12618
  store i32 %8, i32* %den1.i, align 4, !dbg !12616
  %9 = bitcast %struct.AVRational* %retval.i to i8*, !dbg !12619
  %10 = bitcast %struct.AVRational* %r.i to i8*, !dbg !12619
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 8, i32 4, i1 false) #8, !dbg !12619
  %11 = bitcast %struct.AVRational* %retval.i to i64*, !dbg !12620
  %12 = load i64, i64* %11, align 4, !dbg !12620
  %13 = bitcast %struct.AVRational* %time_base to i64*, !dbg !12615
  store i64 %12, i64* %13, align 4, !dbg !12615
  call void @llvm.dbg.declare(metadata %struct.AVRational* %sample_rate, metadata !12621, metadata !2511), !dbg !12622
  %14 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !12623
  %time_base1 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %14, i32 0, i32 4, !dbg !12624
  %15 = bitcast %struct.AVRational* %time_base1 to i64*, !dbg !12625
  %16 = load i64, i64* %15, align 8, !dbg !12625
  %17 = bitcast %struct.AVRational* %q.i43 to i64*, !dbg !12625
  store i64 %16, i64* %17, align 4, !dbg !12625
  %num.i45 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r.i44, i32 0, i32 0, !dbg !12626
  %den.i46 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q.i43, i32 0, i32 1, !dbg !12627
  %18 = load i32, i32* %den.i46, align 4, !dbg !12627
  store i32 %18, i32* %num.i45, align 4, !dbg !12626
  %den1.i47 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r.i44, i32 0, i32 1, !dbg !12626
  %num2.i48 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q.i43, i32 0, i32 0, !dbg !12628
  %19 = load i32, i32* %num2.i48, align 4, !dbg !12628
  store i32 %19, i32* %den1.i47, align 4, !dbg !12626
  %20 = bitcast %struct.AVRational* %retval.i42 to i8*, !dbg !12629
  %21 = bitcast %struct.AVRational* %r.i44 to i8*, !dbg !12629
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 4, i1 false) #8, !dbg !12629
  %22 = bitcast %struct.AVRational* %retval.i42 to i64*, !dbg !12630
  %23 = load i64, i64* %22, align 4, !dbg !12630
  %24 = bitcast %struct.AVRational* %sample_rate to i64*, !dbg !12625
  store i64 %23, i64* %24, align 4, !dbg !12625
  call void @llvm.dbg.declare(metadata %struct.MXFSamplesPerFrame** %spf, metadata !12631, metadata !2511), !dbg !12640
  store %struct.MXFSamplesPerFrame* null, %struct.MXFSamplesPerFrame** %spf, align 8, !dbg !12640
  call void @llvm.dbg.declare(metadata i64* %sample_count, metadata !12641, metadata !2511), !dbg !12642
  %25 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !12643
  %codecpar = getelementptr inbounds %struct.AVStream, %struct.AVStream* %25, i32 0, i32 19, !dbg !12645
  %26 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %codecpar, align 8, !dbg !12645
  %codec_type = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %26, i32 0, i32 0, !dbg !12646
  %27 = load i32, i32* %codec_type, align 8, !dbg !12646
  %cmp = icmp ne i32 %27, 1, !dbg !12647
  br i1 %cmp, label %if.then, label %if.end, !dbg !12648

if.then:                                          ; preds = %entry
  %28 = load i64, i64* %edit_unit.addr, align 8, !dbg !12649
  store i64 %28, i64* %retval, align 8, !dbg !12650
  br label %return, !dbg !12650

if.end:                                           ; preds = %entry
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_rate, i32 0, i32 0, !dbg !12651
  %29 = load i32, i32* %num, align 4, !dbg !12651
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_rate, i32 0, i32 1, !dbg !12653
  %30 = load i32, i32* %den, align 4, !dbg !12653
  %div = sdiv i32 %29, %30, !dbg !12654
  %cmp3 = icmp eq i32 %div, 48000, !dbg !12655
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !12656

if.then4:                                         ; preds = %if.end
  %31 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !12657
  %fc = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %31, i32 0, i32 10, !dbg !12658
  %32 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc, align 8, !dbg !12658
  %33 = bitcast %struct.AVRational* %time_base to i64*, !dbg !12659
  %34 = load i64, i64* %33, align 4, !dbg !12659
  %call5 = call %struct.MXFSamplesPerFrame* @ff_mxf_get_samples_per_frame(%struct.AVFormatContext* %32, i64 %34), !dbg !12659
  store %struct.MXFSamplesPerFrame* %call5, %struct.MXFSamplesPerFrame** %spf, align 8, !dbg !12660
  br label %if.end6, !dbg !12661

if.end6:                                          ; preds = %if.then4, %if.end
  %35 = load %struct.MXFSamplesPerFrame*, %struct.MXFSamplesPerFrame** %spf, align 8, !dbg !12662
  %tobool = icmp ne %struct.MXFSamplesPerFrame* %35, null, !dbg !12662
  br i1 %tobool, label %if.end23, label %if.then7, !dbg !12664

if.then7:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata i32* %remainder, metadata !12665, metadata !2511), !dbg !12667
  %num8 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_rate, i32 0, i32 0, !dbg !12668
  %36 = load i32, i32* %num8, align 4, !dbg !12668
  %num9 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base, i32 0, i32 0, !dbg !12669
  %37 = load i32, i32* %num9, align 4, !dbg !12669
  %mul = mul nsw i32 %36, %37, !dbg !12670
  %den10 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base, i32 0, i32 1, !dbg !12671
  %38 = load i32, i32* %den10, align 4, !dbg !12671
  %den11 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_rate, i32 0, i32 1, !dbg !12672
  %39 = load i32, i32* %den11, align 4, !dbg !12672
  %mul12 = mul nsw i32 %38, %39, !dbg !12673
  %rem = srem i32 %mul, %mul12, !dbg !12674
  store i32 %rem, i32* %remainder, align 4, !dbg !12667
  %40 = load i32, i32* %remainder, align 4, !dbg !12675
  %tobool13 = icmp ne i32 %40, 0, !dbg !12675
  br i1 %tobool13, label %if.then14, label %if.end20, !dbg !12677

if.then14:                                        ; preds = %if.then7
  %41 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !12678
  %fc15 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %41, i32 0, i32 10, !dbg !12679
  %42 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc15, align 8, !dbg !12679
  %43 = bitcast %struct.AVFormatContext* %42 to i8*, !dbg !12678
  %44 = load %struct.AVStream*, %struct.AVStream** %st.addr, align 8, !dbg !12680
  %index = getelementptr inbounds %struct.AVStream, %struct.AVStream* %44, i32 0, i32 0, !dbg !12681
  %45 = load i32, i32* %index, align 8, !dbg !12681
  %num16 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base, i32 0, i32 0, !dbg !12682
  %46 = load i32, i32* %num16, align 4, !dbg !12682
  %den17 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %time_base, i32 0, i32 1, !dbg !12683
  %47 = load i32, i32* %den17, align 4, !dbg !12683
  %num18 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_rate, i32 0, i32 0, !dbg !12684
  %48 = load i32, i32* %num18, align 4, !dbg !12684
  %den19 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_rate, i32 0, i32 1, !dbg !12685
  %49 = load i32, i32* %den19, align 4, !dbg !12685
  call void (i8*, i32, i8*, ...) @av_log(i8* %43, i32 24, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @.str.134, i32 0, i32 0), i32 %45, i32 %46, i32 %47, i32 %48, i32 %49), !dbg !12686
  br label %if.end20, !dbg !12686

if.end20:                                         ; preds = %if.then14, %if.then7
  %50 = load i64, i64* %edit_unit.addr, align 8, !dbg !12687
  %51 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !12688
  %edit_rate21 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %51, i32 0, i32 7, !dbg !12689
  %52 = bitcast %struct.AVRational* %sample_rate to i64*, !dbg !12690
  %53 = load i64, i64* %52, align 4, !dbg !12690
  %54 = bitcast %struct.AVRational* %edit_rate21 to i64*, !dbg !12690
  %55 = load i64, i64* %54, align 4, !dbg !12690
  %call22 = call i64 @av_rescale_q(i64 %50, i64 %53, i64 %55) #2, !dbg !12690
  store i64 %call22, i64* %retval, align 8, !dbg !12691
  br label %return, !dbg !12691

if.end23:                                         ; preds = %if.end6
  br label %while.cond, !dbg !12692

while.cond:                                       ; preds = %while.body, %if.end23
  %56 = load i32, i32* %size, align 4, !dbg !12693
  %idxprom = sext i32 %56 to i64, !dbg !12695
  %57 = load %struct.MXFSamplesPerFrame*, %struct.MXFSamplesPerFrame** %spf, align 8, !dbg !12695
  %samples_per_frame = getelementptr inbounds %struct.MXFSamplesPerFrame, %struct.MXFSamplesPerFrame* %57, i32 0, i32 1, !dbg !12696
  %arrayidx = getelementptr inbounds [6 x i32], [6 x i32]* %samples_per_frame, i64 0, i64 %idxprom, !dbg !12695
  %58 = load i32, i32* %arrayidx, align 4, !dbg !12695
  %tobool24 = icmp ne i32 %58, 0, !dbg !12697
  br i1 %tobool24, label %while.body, label %while.end, !dbg !12697

while.body:                                       ; preds = %while.cond
  %59 = load i32, i32* %size, align 4, !dbg !12698
  %idxprom25 = sext i32 %59 to i64, !dbg !12700
  %60 = load %struct.MXFSamplesPerFrame*, %struct.MXFSamplesPerFrame** %spf, align 8, !dbg !12700
  %samples_per_frame26 = getelementptr inbounds %struct.MXFSamplesPerFrame, %struct.MXFSamplesPerFrame* %60, i32 0, i32 1, !dbg !12701
  %arrayidx27 = getelementptr inbounds [6 x i32], [6 x i32]* %samples_per_frame26, i64 0, i64 %idxprom25, !dbg !12700
  %61 = load i32, i32* %arrayidx27, align 4, !dbg !12700
  %62 = load i32, i32* %total, align 4, !dbg !12702
  %add = add nsw i32 %62, %61, !dbg !12702
  store i32 %add, i32* %total, align 4, !dbg !12702
  %63 = load i32, i32* %size, align 4, !dbg !12703
  %inc = add nsw i32 %63, 1, !dbg !12703
  store i32 %inc, i32* %size, align 4, !dbg !12703
  br label %while.cond, !dbg !12704, !llvm.loop !12706

while.end:                                        ; preds = %while.cond
  %64 = load i64, i64* %edit_unit.addr, align 8, !dbg !12707
  %65 = load i32, i32* %size, align 4, !dbg !12708
  %conv = sext i32 %65 to i64, !dbg !12708
  %div28 = sdiv i64 %64, %conv, !dbg !12709
  %66 = load i32, i32* %total, align 4, !dbg !12710
  %conv29 = sext i32 %66 to i64, !dbg !12711
  %mul30 = mul i64 %div28, %conv29, !dbg !12712
  store i64 %mul30, i64* %sample_count, align 8, !dbg !12713
  store i32 0, i32* %i, align 4, !dbg !12714
  br label %for.cond, !dbg !12716

for.cond:                                         ; preds = %for.inc, %while.end
  %67 = load i32, i32* %i, align 4, !dbg !12717
  %conv31 = sext i32 %67 to i64, !dbg !12717
  %68 = load i64, i64* %edit_unit.addr, align 8, !dbg !12720
  %69 = load i32, i32* %size, align 4, !dbg !12721
  %conv32 = sext i32 %69 to i64, !dbg !12721
  %rem33 = srem i64 %68, %conv32, !dbg !12722
  %cmp34 = icmp slt i64 %conv31, %rem33, !dbg !12723
  br i1 %cmp34, label %for.body, label %for.end, !dbg !12724

for.body:                                         ; preds = %for.cond
  %70 = load i32, i32* %i, align 4, !dbg !12725
  %idxprom36 = sext i32 %70 to i64, !dbg !12727
  %71 = load %struct.MXFSamplesPerFrame*, %struct.MXFSamplesPerFrame** %spf, align 8, !dbg !12727
  %samples_per_frame37 = getelementptr inbounds %struct.MXFSamplesPerFrame, %struct.MXFSamplesPerFrame* %71, i32 0, i32 1, !dbg !12728
  %arrayidx38 = getelementptr inbounds [6 x i32], [6 x i32]* %samples_per_frame37, i64 0, i64 %idxprom36, !dbg !12727
  %72 = load i32, i32* %arrayidx38, align 4, !dbg !12727
  %conv39 = sext i32 %72 to i64, !dbg !12727
  %73 = load i64, i64* %sample_count, align 8, !dbg !12729
  %add40 = add nsw i64 %73, %conv39, !dbg !12729
  store i64 %add40, i64* %sample_count, align 8, !dbg !12729
  br label %for.inc, !dbg !12730

for.inc:                                          ; preds = %for.body
  %74 = load i32, i32* %i, align 4, !dbg !12731
  %inc41 = add nsw i32 %74, 1, !dbg !12731
  store i32 %inc41, i32* %i, align 4, !dbg !12731
  br label %for.cond, !dbg !12733, !llvm.loop !12734

for.end:                                          ; preds = %for.cond
  %75 = load i64, i64* %sample_count, align 8, !dbg !12736
  store i64 %75, i64* %retval, align 8, !dbg !12737
  br label %return, !dbg !12737

return:                                           ; preds = %for.end, %if.end20, %if.then
  %76 = load i64, i64* %retval, align 8, !dbg !12738
  ret i64 %76, !dbg !12738
}

; Function Attrs: nounwind uwtable
define internal i32 @mxf_absolute_bodysid_offset(%struct.MXFContext* %mxf, i32 %body_sid, i64 %offset, i64* %offset_out, %struct.MXFPartition** %partition_out) #0 !dbg !12739 {
entry:
  %retval = alloca i32, align 4
  %mxf.addr = alloca %struct.MXFContext*, align 8
  %body_sid.addr = alloca i32, align 4
  %offset.addr = alloca i64, align 8
  %offset_out.addr = alloca i64*, align 8
  %partition_out.addr = alloca %struct.MXFPartition**, align 8
  %last_p = alloca %struct.MXFPartition*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %m = alloca i32, align 4
  %m0 = alloca i32, align 4
  store %struct.MXFContext* %mxf, %struct.MXFContext** %mxf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf.addr, metadata !12742, metadata !2511), !dbg !12743
  store i32 %body_sid, i32* %body_sid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %body_sid.addr, metadata !12744, metadata !2511), !dbg !12745
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !12746, metadata !2511), !dbg !12747
  store i64* %offset_out, i64** %offset_out.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %offset_out.addr, metadata !12748, metadata !2511), !dbg !12749
  store %struct.MXFPartition** %partition_out, %struct.MXFPartition*** %partition_out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFPartition*** %partition_out.addr, metadata !12750, metadata !2511), !dbg !12751
  call void @llvm.dbg.declare(metadata %struct.MXFPartition** %last_p, metadata !12752, metadata !2511), !dbg !12753
  store %struct.MXFPartition* null, %struct.MXFPartition** %last_p, align 8, !dbg !12753
  call void @llvm.dbg.declare(metadata i32* %a, metadata !12754, metadata !2511), !dbg !12755
  call void @llvm.dbg.declare(metadata i32* %b, metadata !12756, metadata !2511), !dbg !12757
  call void @llvm.dbg.declare(metadata i32* %m, metadata !12758, metadata !2511), !dbg !12759
  call void @llvm.dbg.declare(metadata i32* %m0, metadata !12760, metadata !2511), !dbg !12761
  %0 = load i64, i64* %offset.addr, align 8, !dbg !12762
  %cmp = icmp slt i64 %0, 0, !dbg !12764
  br i1 %cmp, label %if.then, label %if.end, !dbg !12765

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !12766
  br label %return, !dbg !12766

if.end:                                           ; preds = %entry
  store i32 -1, i32* %a, align 4, !dbg !12767
  %1 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !12768
  %partitions_count = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %1, i32 0, i32 2, !dbg !12769
  %2 = load i32, i32* %partitions_count, align 8, !dbg !12769
  store i32 %2, i32* %b, align 4, !dbg !12770
  br label %while.cond, !dbg !12771

while.cond:                                       ; preds = %if.end13, %if.end
  %3 = load i32, i32* %b, align 4, !dbg !12772
  %4 = load i32, i32* %a, align 4, !dbg !12774
  %sub = sub nsw i32 %3, %4, !dbg !12775
  %cmp1 = icmp sgt i32 %sub, 1, !dbg !12776
  br i1 %cmp1, label %while.body, label %while.end14, !dbg !12777

while.body:                                       ; preds = %while.cond
  %5 = load i32, i32* %a, align 4, !dbg !12778
  %6 = load i32, i32* %b, align 4, !dbg !12780
  %add = add nsw i32 %5, %6, !dbg !12781
  %shr = ashr i32 %add, 1, !dbg !12782
  store i32 %shr, i32* %m, align 4, !dbg !12783
  store i32 %shr, i32* %m0, align 4, !dbg !12784
  br label %while.cond2, !dbg !12785

while.cond2:                                      ; preds = %while.body6, %while.body
  %7 = load i32, i32* %m, align 4, !dbg !12786
  %8 = load i32, i32* %b, align 4, !dbg !12788
  %cmp3 = icmp slt i32 %7, %8, !dbg !12789
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !12790

land.rhs:                                         ; preds = %while.cond2
  %9 = load i32, i32* %m, align 4, !dbg !12791
  %idxprom = sext i32 %9 to i64, !dbg !12793
  %10 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !12793
  %partitions = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %10, i32 0, i32 1, !dbg !12794
  %11 = load %struct.MXFPartition*, %struct.MXFPartition** %partitions, align 8, !dbg !12794
  %arrayidx = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %11, i64 %idxprom, !dbg !12793
  %body_sid4 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %arrayidx, i32 0, i32 5, !dbg !12795
  %12 = load i32, i32* %body_sid4, align 4, !dbg !12795
  %13 = load i32, i32* %body_sid.addr, align 4, !dbg !12796
  %cmp5 = icmp ne i32 %12, %13, !dbg !12797
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond2
  %14 = phi i1 [ false, %while.cond2 ], [ %cmp5, %land.rhs ]
  br i1 %14, label %while.body6, label %while.end, !dbg !12798

while.body6:                                      ; preds = %land.end
  %15 = load i32, i32* %m, align 4, !dbg !12800
  %inc = add nsw i32 %15, 1, !dbg !12800
  store i32 %inc, i32* %m, align 4, !dbg !12800
  br label %while.cond2, !dbg !12801, !llvm.loop !12803

while.end:                                        ; preds = %land.end
  %16 = load i32, i32* %m, align 4, !dbg !12804
  %17 = load i32, i32* %b, align 4, !dbg !12806
  %cmp7 = icmp slt i32 %16, %17, !dbg !12807
  br i1 %cmp7, label %land.lhs.true, label %if.else, !dbg !12808

land.lhs.true:                                    ; preds = %while.end
  %18 = load i32, i32* %m, align 4, !dbg !12809
  %idxprom8 = sext i32 %18 to i64, !dbg !12811
  %19 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !12811
  %partitions9 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %19, i32 0, i32 1, !dbg !12812
  %20 = load %struct.MXFPartition*, %struct.MXFPartition** %partitions9, align 8, !dbg !12812
  %arrayidx10 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %20, i64 %idxprom8, !dbg !12811
  %body_offset = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %arrayidx10, i32 0, i32 14, !dbg !12813
  %21 = load i64, i64* %body_offset, align 8, !dbg !12813
  %22 = load i64, i64* %offset.addr, align 8, !dbg !12814
  %cmp11 = icmp sle i64 %21, %22, !dbg !12815
  br i1 %cmp11, label %if.then12, label %if.else, !dbg !12816

if.then12:                                        ; preds = %land.lhs.true
  %23 = load i32, i32* %m, align 4, !dbg !12817
  store i32 %23, i32* %a, align 4, !dbg !12818
  br label %if.end13, !dbg !12819

if.else:                                          ; preds = %land.lhs.true, %while.end
  %24 = load i32, i32* %m0, align 4, !dbg !12820
  store i32 %24, i32* %b, align 4, !dbg !12821
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then12
  br label %while.cond, !dbg !12822, !llvm.loop !12824

while.end14:                                      ; preds = %while.cond
  %25 = load i32, i32* %a, align 4, !dbg !12825
  %cmp15 = icmp sge i32 %25, 0, !dbg !12827
  br i1 %cmp15, label %if.then16, label %if.end20, !dbg !12828

if.then16:                                        ; preds = %while.end14
  %26 = load i32, i32* %a, align 4, !dbg !12829
  %idxprom17 = sext i32 %26 to i64, !dbg !12830
  %27 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !12830
  %partitions18 = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %27, i32 0, i32 1, !dbg !12831
  %28 = load %struct.MXFPartition*, %struct.MXFPartition** %partitions18, align 8, !dbg !12831
  %arrayidx19 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %28, i64 %idxprom17, !dbg !12830
  store %struct.MXFPartition* %arrayidx19, %struct.MXFPartition** %last_p, align 8, !dbg !12832
  br label %if.end20, !dbg !12833

if.end20:                                         ; preds = %if.then16, %while.end14
  %29 = load %struct.MXFPartition*, %struct.MXFPartition** %last_p, align 8, !dbg !12834
  %tobool = icmp ne %struct.MXFPartition* %29, null, !dbg !12834
  br i1 %tobool, label %land.lhs.true21, label %if.end34, !dbg !12836

land.lhs.true21:                                  ; preds = %if.end20
  %30 = load %struct.MXFPartition*, %struct.MXFPartition** %last_p, align 8, !dbg !12837
  %essence_length = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %30, i32 0, i32 8, !dbg !12839
  %31 = load i64, i64* %essence_length, align 8, !dbg !12839
  %tobool22 = icmp ne i64 %31, 0, !dbg !12837
  br i1 %tobool22, label %lor.lhs.false, label %if.then27, !dbg !12840

lor.lhs.false:                                    ; preds = %land.lhs.true21
  %32 = load %struct.MXFPartition*, %struct.MXFPartition** %last_p, align 8, !dbg !12841
  %essence_length23 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %32, i32 0, i32 8, !dbg !12843
  %33 = load i64, i64* %essence_length23, align 8, !dbg !12843
  %34 = load i64, i64* %offset.addr, align 8, !dbg !12844
  %35 = load %struct.MXFPartition*, %struct.MXFPartition** %last_p, align 8, !dbg !12845
  %body_offset24 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %35, i32 0, i32 14, !dbg !12846
  %36 = load i64, i64* %body_offset24, align 8, !dbg !12846
  %sub25 = sub nsw i64 %34, %36, !dbg !12847
  %cmp26 = icmp sgt i64 %33, %sub25, !dbg !12848
  br i1 %cmp26, label %if.then27, label %if.end34, !dbg !12849

if.then27:                                        ; preds = %lor.lhs.false, %land.lhs.true21
  %37 = load %struct.MXFPartition*, %struct.MXFPartition** %last_p, align 8, !dbg !12850
  %essence_offset = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %37, i32 0, i32 7, !dbg !12852
  %38 = load i64, i64* %essence_offset, align 8, !dbg !12852
  %39 = load i64, i64* %offset.addr, align 8, !dbg !12853
  %40 = load %struct.MXFPartition*, %struct.MXFPartition** %last_p, align 8, !dbg !12854
  %body_offset28 = getelementptr inbounds %struct.MXFPartition, %struct.MXFPartition* %40, i32 0, i32 14, !dbg !12855
  %41 = load i64, i64* %body_offset28, align 8, !dbg !12855
  %sub29 = sub nsw i64 %39, %41, !dbg !12856
  %add30 = add nsw i64 %38, %sub29, !dbg !12857
  %42 = load i64*, i64** %offset_out.addr, align 8, !dbg !12858
  store i64 %add30, i64* %42, align 8, !dbg !12859
  %43 = load %struct.MXFPartition**, %struct.MXFPartition*** %partition_out.addr, align 8, !dbg !12860
  %tobool31 = icmp ne %struct.MXFPartition** %43, null, !dbg !12860
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !12862

if.then32:                                        ; preds = %if.then27
  %44 = load %struct.MXFPartition*, %struct.MXFPartition** %last_p, align 8, !dbg !12863
  %45 = load %struct.MXFPartition**, %struct.MXFPartition*** %partition_out.addr, align 8, !dbg !12864
  store %struct.MXFPartition* %44, %struct.MXFPartition** %45, align 8, !dbg !12865
  br label %if.end33, !dbg !12866

if.end33:                                         ; preds = %if.then32, %if.then27
  store i32 0, i32* %retval, align 4, !dbg !12867
  br label %return, !dbg !12867

if.end34:                                         ; preds = %lor.lhs.false, %if.end20
  %46 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !12868
  %fc = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %46, i32 0, i32 10, !dbg !12869
  %47 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc, align 8, !dbg !12869
  %48 = bitcast %struct.AVFormatContext* %47 to i8*, !dbg !12868
  %49 = load i64, i64* %offset.addr, align 8, !dbg !12870
  %50 = load i32, i32* %body_sid.addr, align 4, !dbg !12871
  call void (i8*, i32, i8*, ...) @av_log(i8* %48, i32 16, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.133, i32 0, i32 0), i64 %49, i32 %50), !dbg !12872
  store i32 -1094995529, i32* %retval, align 4, !dbg !12873
  br label %return, !dbg !12873

return:                                           ; preds = %if.end34, %if.end33, %if.then
  %51 = load i32, i32* %retval, align 4, !dbg !12874
  ret i32 %51, !dbg !12874
}

declare %struct.MXFSamplesPerFrame* @ff_mxf_get_samples_per_frame(%struct.AVFormatContext*, i64) #1

; Function Attrs: nounwind uwtable
define internal i32 @mxf_set_audio_pts(%struct.MXFContext* %mxf, %struct.AVCodecParameters* %par, %struct.AVPacket* %pkt) #0 !dbg !12875 {
entry:
  %retval.i = alloca %struct.AVRational, align 4
  %q.i = alloca %struct.AVRational, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %q.i, metadata !3576, metadata !2511), !dbg !12878
  %r.i = alloca %struct.AVRational, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %r.i, metadata !3583, metadata !2511), !dbg !12881
  %mxf.addr = alloca %struct.MXFContext*, align 8
  %par.addr = alloca %struct.AVCodecParameters*, align 8
  %pkt.addr = alloca %struct.AVPacket*, align 8
  %st = alloca %struct.AVStream*, align 8
  %track = alloca %struct.MXFTrack*, align 8
  %bits_per_sample = alloca i64, align 8
  %agg.tmp = alloca %struct.AVRational, align 4
  store %struct.MXFContext* %mxf, %struct.MXFContext** %mxf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MXFContext** %mxf.addr, metadata !12882, metadata !2511), !dbg !12883
  store %struct.AVCodecParameters* %par, %struct.AVCodecParameters** %par.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecParameters** %par.addr, metadata !12884, metadata !2511), !dbg !12885
  store %struct.AVPacket* %pkt, %struct.AVPacket** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %pkt.addr, metadata !12886, metadata !2511), !dbg !12887
  call void @llvm.dbg.declare(metadata %struct.AVStream** %st, metadata !12888, metadata !2511), !dbg !12889
  %0 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !12890
  %stream_index = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i32 0, i32 5, !dbg !12891
  %1 = load i32, i32* %stream_index, align 4, !dbg !12891
  %idxprom = sext i32 %1 to i64, !dbg !12892
  %2 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !12892
  %fc = getelementptr inbounds %struct.MXFContext, %struct.MXFContext* %2, i32 0, i32 10, !dbg !12893
  %3 = load %struct.AVFormatContext*, %struct.AVFormatContext** %fc, align 8, !dbg !12893
  %streams = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %3, i32 0, i32 7, !dbg !12894
  %4 = load %struct.AVStream**, %struct.AVStream*** %streams, align 8, !dbg !12894
  %arrayidx = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %4, i64 %idxprom, !dbg !12892
  %5 = load %struct.AVStream*, %struct.AVStream** %arrayidx, align 8, !dbg !12892
  store %struct.AVStream* %5, %struct.AVStream** %st, align 8, !dbg !12889
  call void @llvm.dbg.declare(metadata %struct.MXFTrack** %track, metadata !12895, metadata !2511), !dbg !12896
  %6 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !12897
  %priv_data = getelementptr inbounds %struct.AVStream, %struct.AVStream* %6, i32 0, i32 3, !dbg !12898
  %7 = load i8*, i8** %priv_data, align 8, !dbg !12898
  %8 = bitcast i8* %7 to %struct.MXFTrack*, !dbg !12897
  store %struct.MXFTrack* %8, %struct.MXFTrack** %track, align 8, !dbg !12896
  call void @llvm.dbg.declare(metadata i64* %bits_per_sample, metadata !12899, metadata !2511), !dbg !12900
  %9 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !12901
  %bits_per_coded_sample = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %9, i32 0, i32 7, !dbg !12902
  %10 = load i32, i32* %bits_per_coded_sample, align 8, !dbg !12902
  %conv = sext i32 %10 to i64, !dbg !12901
  store i64 %conv, i64* %bits_per_sample, align 8, !dbg !12900
  %11 = load i64, i64* %bits_per_sample, align 8, !dbg !12903
  %tobool = icmp ne i64 %11, 0, !dbg !12903
  br i1 %tobool, label %if.end, label %if.then, !dbg !12905

if.then:                                          ; preds = %entry
  %12 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !12906
  %codec_id = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %12, i32 0, i32 1, !dbg !12907
  %13 = load i32, i32* %codec_id, align 4, !dbg !12907
  %call = call i32 @av_get_bits_per_sample(i32 %13), !dbg !12908
  %conv1 = sext i32 %call to i64, !dbg !12908
  store i64 %conv1, i64* %bits_per_sample, align 8, !dbg !12909
  br label %if.end, !dbg !12910

if.end:                                           ; preds = %if.then, %entry
  %14 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !12911
  %sample_count = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %14, i32 0, i32 9, !dbg !12912
  %15 = load i64, i64* %sample_count, align 8, !dbg !12912
  %16 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !12913
  %pts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %16, i32 0, i32 1, !dbg !12914
  store i64 %15, i64* %pts, align 8, !dbg !12915
  %17 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !12916
  %channels = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %17, i32 0, i32 22, !dbg !12917
  %18 = load i32, i32* %channels, align 8, !dbg !12917
  %cmp = icmp sle i32 %18, 0, !dbg !12918
  br i1 %cmp, label %if.then10, label %lor.lhs.false, !dbg !12919

lor.lhs.false:                                    ; preds = %if.end
  %19 = load i64, i64* %bits_per_sample, align 8, !dbg !12920
  %cmp3 = icmp sle i64 %19, 0, !dbg !12922
  br i1 %cmp3, label %if.then10, label %lor.lhs.false5, !dbg !12923

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %20 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !12924
  %channels6 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %20, i32 0, i32 22, !dbg !12925
  %21 = load i32, i32* %channels6, align 8, !dbg !12925
  %conv7 = sext i32 %21 to i64, !dbg !12924
  %22 = load i64, i64* %bits_per_sample, align 8, !dbg !12926
  %mul = mul nsw i64 %conv7, %22, !dbg !12927
  %cmp8 = icmp slt i64 %mul, 8, !dbg !12928
  br i1 %cmp8, label %if.then10, label %if.else, !dbg !12929

if.then10:                                        ; preds = %lor.lhs.false5, %lor.lhs.false, %if.end
  %23 = load %struct.MXFContext*, %struct.MXFContext** %mxf.addr, align 8, !dbg !12931
  %24 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !12932
  %25 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !12933
  %sample_count11 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %25, i32 0, i32 9, !dbg !12934
  %26 = load i64, i64* %sample_count11, align 8, !dbg !12934
  %27 = load %struct.AVStream*, %struct.AVStream** %st, align 8, !dbg !12935
  %time_base = getelementptr inbounds %struct.AVStream, %struct.AVStream* %27, i32 0, i32 4, !dbg !12936
  %28 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !12937
  %edit_rate = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %28, i32 0, i32 7, !dbg !12938
  %29 = bitcast %struct.AVRational* %edit_rate to i64*, !dbg !12939
  %30 = load i64, i64* %29, align 4, !dbg !12939
  %31 = bitcast %struct.AVRational* %q.i to i64*, !dbg !12939
  store i64 %30, i64* %31, align 4, !dbg !12939
  %num.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r.i, i32 0, i32 0, !dbg !12940
  %den.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q.i, i32 0, i32 1, !dbg !12941
  %32 = load i32, i32* %den.i, align 4, !dbg !12941
  store i32 %32, i32* %num.i, align 4, !dbg !12940
  %den1.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %r.i, i32 0, i32 1, !dbg !12940
  %num2.i = getelementptr inbounds %struct.AVRational, %struct.AVRational* %q.i, i32 0, i32 0, !dbg !12942
  %33 = load i32, i32* %num2.i, align 4, !dbg !12942
  store i32 %33, i32* %den1.i, align 4, !dbg !12940
  %34 = bitcast %struct.AVRational* %retval.i to i8*, !dbg !12943
  %35 = bitcast %struct.AVRational* %r.i to i8*, !dbg !12943
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 8, i32 4, i1 false) #8, !dbg !12943
  %36 = bitcast %struct.AVRational* %retval.i to i64*, !dbg !12944
  %37 = load i64, i64* %36, align 4, !dbg !12944
  %38 = bitcast %struct.AVRational* %agg.tmp to i64*, !dbg !12939
  store i64 %37, i64* %38, align 4, !dbg !12939
  %39 = bitcast %struct.AVRational* %time_base to i64*, !dbg !12945
  %40 = load i64, i64* %39, align 8, !dbg !12945
  %41 = bitcast %struct.AVRational* %agg.tmp to i64*, !dbg !12945
  %42 = load i64, i64* %41, align 4, !dbg !12945
  %call13 = call i64 @av_rescale_q(i64 %26, i64 %40, i64 %42) #2, !dbg !12946
  %add = add nsw i64 %call13, 1, !dbg !12947
  %call14 = call i64 @mxf_compute_sample_count(%struct.MXFContext* %23, %struct.AVStream* %24, i64 %add), !dbg !12948
  %43 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !12950
  %sample_count15 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %43, i32 0, i32 9, !dbg !12951
  store i64 %call14, i64* %sample_count15, align 8, !dbg !12952
  br label %if.end23, !dbg !12950

if.else:                                          ; preds = %lor.lhs.false5
  %44 = load %struct.AVPacket*, %struct.AVPacket** %pkt.addr, align 8, !dbg !12953
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %44, i32 0, i32 4, !dbg !12954
  %45 = load i32, i32* %size, align 8, !dbg !12954
  %conv16 = sext i32 %45 to i64, !dbg !12953
  %46 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %par.addr, align 8, !dbg !12955
  %channels17 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %46, i32 0, i32 22, !dbg !12956
  %47 = load i32, i32* %channels17, align 8, !dbg !12956
  %conv18 = sext i32 %47 to i64, !dbg !12955
  %48 = load i64, i64* %bits_per_sample, align 8, !dbg !12957
  %mul19 = mul nsw i64 %conv18, %48, !dbg !12958
  %div = sdiv i64 %mul19, 8, !dbg !12959
  %div20 = sdiv i64 %conv16, %div, !dbg !12960
  %49 = load %struct.MXFTrack*, %struct.MXFTrack** %track, align 8, !dbg !12961
  %sample_count21 = getelementptr inbounds %struct.MXFTrack, %struct.MXFTrack* %49, i32 0, i32 9, !dbg !12962
  %50 = load i64, i64* %sample_count21, align 8, !dbg !12963
  %add22 = add i64 %50, %div20, !dbg !12963
  store i64 %add22, i64* %sample_count21, align 8, !dbg !12963
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then10
  ret i32 0, !dbg !12964
}

; Function Attrs: nounwind readnone
declare i64 @av_rescale(i64, i64, i64) #7

declare void @ff_update_cur_dts(%struct.AVFormatContext*, %struct.AVStream*, i64) #1

declare i32 @ff_index_search_timestamp(%struct.AVIndexEntry*, i32, i64, i32) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2506, !2507}
!llvm.ident = !{!2508}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !997, globals: !1193)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[inter]libavformat--mxfdec.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2 = !{!3, !463, !485, !506, !536, !547, !571, !578, !596, !620, !639, !649, !658, !667, !866, !883, !889, !897, !909, !918, !927, !933, !938, !944, !957, !980, !985, !991}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !4, line: 215, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462}
!6 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!7 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!8 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!9 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!10 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!11 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!12 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!13 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!14 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!15 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!16 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!17 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!18 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!19 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!20 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!21 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!22 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!23 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!24 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!25 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!26 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!27 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!28 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!29 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!30 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!31 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!32 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!33 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!34 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!35 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!36 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!37 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!38 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!39 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!40 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!41 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!42 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!43 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!44 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!45 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!46 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!47 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!48 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!49 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!50 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!51 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!52 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!53 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!54 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!55 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!56 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!57 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!58 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!59 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!60 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!61 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!62 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!63 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!64 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!65 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!66 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!67 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!68 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!69 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!70 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!71 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!72 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!73 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!74 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!75 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!76 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!77 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!78 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!79 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!80 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!81 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!82 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!83 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!84 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!85 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!86 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!87 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!88 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!89 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!90 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!91 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!93 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!94 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!95 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!96 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!97 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!98 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!99 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!100 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!101 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!102 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!103 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!104 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!105 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!106 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!107 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!108 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!109 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!110 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!111 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!112 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!113 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!114 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!115 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!116 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!117 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!118 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!119 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!120 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!121 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!122 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!123 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!124 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!125 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!126 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!127 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!128 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!129 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!130 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!131 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!132 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!133 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!134 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!135 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!136 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!137 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!138 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!139 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!140 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!141 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!142 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!143 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!144 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!145 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!146 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!147 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!148 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!149 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!150 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!151 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!152 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!153 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!154 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!155 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!156 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!157 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!158 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!159 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!160 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!161 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!162 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!163 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!164 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!165 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!166 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!167 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!168 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!169 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!170 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!171 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!172 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!173 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!174 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!175 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!176 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!177 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!178 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!179 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!180 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!181 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!182 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!183 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!184 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!185 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!186 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!187 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!188 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!189 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!190 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!191 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!192 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!193 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!194 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!195 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!196 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!197 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!198 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!199 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!200 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!201 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!202 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!203 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!204 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!205 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!206 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!207 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!208 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!209 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!210 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!211 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!212 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!213 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!214 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!215 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!216 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!217 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!218 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!219 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!220 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!221 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!222 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!223 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!224 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!225 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!226 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!227 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!228 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!229 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!230 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!231 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!232 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!233 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!234 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!235 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!236 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!237 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!238 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!239 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!240 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!241 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!242 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!243 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!244 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!245 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!246 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!247 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!248 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!249 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!250 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!251 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!252 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!254 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!255 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!256 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!257 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!258 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!259 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!260 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!261 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!262 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!263 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!264 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!265 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!266 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!268 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!269 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!270 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!271 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!272 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!273 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!279 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!280 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!281 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!282 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!283 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!284 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!285 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!286 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!287 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!288 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!289 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!290 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!291 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!292 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!293 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!295 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!296 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!297 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!298 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!299 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!300 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!301 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!302 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!303 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!304 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!305 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!306 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!307 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!308 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!309 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!320 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!321 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!322 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!323 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!325 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!326 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!327 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!328 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!329 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!330 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!331 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!332 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!333 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!334 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!335 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!336 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!337 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!338 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!339 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!340 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!341 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!342 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!343 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!344 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!345 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!346 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!347 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!348 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!349 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!350 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!351 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!352 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!353 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!354 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!355 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!356 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!357 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!358 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!359 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!360 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!361 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!362 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!363 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!364 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!365 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!366 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!367 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!368 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!369 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!370 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!371 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!372 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!373 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!374 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!375 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!376 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!377 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!378 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!379 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!380 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!381 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!382 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!383 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!384 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!385 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!386 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!387 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!388 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!389 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!390 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!391 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!392 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!393 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!394 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!395 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!396 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!397 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!398 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!399 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!400 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!401 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!402 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!403 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!404 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!405 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!406 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!407 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!408 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!409 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!410 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!411 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!412 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!413 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!414 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!415 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!416 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!417 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!418 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!419 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!420 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!421 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!422 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!423 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!424 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!425 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!426 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!427 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!428 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!429 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!430 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!431 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!432 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!433 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!434 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!435 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!436 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!437 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!438 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!439 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!440 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!441 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!442 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!443 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!444 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!445 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!446 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!447 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!448 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!449 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!450 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!451 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!452 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!453 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!454 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!455 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!456 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!457 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!458 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!459 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!460 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!461 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!462 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!463 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !464, line: 221, size: 32, align: 32, elements: !465)
!464 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!465 = !{!466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484}
!466 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!467 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!468 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!469 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!470 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!471 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!472 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!473 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!474 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!475 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!476 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!477 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!478 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!479 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!480 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!481 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!482 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!483 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!484 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!485 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !486, line: 29, size: 32, align: 32, elements: !487)
!486 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!487 = !{!488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505}
!488 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!489 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!490 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!491 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!492 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!493 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!494 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!495 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!496 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!497 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!498 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!499 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!500 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!501 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!502 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!503 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!504 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!505 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!506 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !4, line: 1175, size: 32, align: 32, elements: !507)
!507 = !{!508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535}
!508 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!509 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!510 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!511 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!512 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!513 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!514 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!515 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!516 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!517 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!518 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!519 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!520 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!521 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!522 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!523 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!524 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!525 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!526 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!527 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!528 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!529 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!530 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!531 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!532 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!533 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!534 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!535 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!536 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !537, line: 272, size: 32, align: 32, elements: !538)
!537 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!538 = !{!539, !540, !541, !542, !543, !544, !545, !546}
!539 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!540 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!541 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!542 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!543 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!544 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!545 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!546 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!547 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !548, line: 48, size: 32, align: 32, elements: !549)
!548 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!549 = !{!550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570}
!550 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!551 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!552 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!553 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!554 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!555 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!556 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!557 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!558 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!559 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!560 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!561 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!562 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!563 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!564 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!565 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!566 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!567 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!568 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!569 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!570 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!571 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !572, line: 516, size: 32, align: 32, elements: !573)
!572 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!573 = !{!574, !575, !576, !577}
!574 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!575 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!576 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!577 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!578 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !572, line: 440, size: 32, align: 32, elements: !579)
!579 = !{!580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595}
!580 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!581 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!582 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!583 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!584 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!585 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!586 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!587 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!588 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!589 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!590 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!591 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!592 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!593 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!594 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!595 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!596 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !572, line: 464, size: 32, align: 32, elements: !597)
!597 = !{!598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619}
!598 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!599 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!600 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!601 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!602 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!603 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!604 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!605 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!606 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!607 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!608 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!609 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!610 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!611 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!612 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!613 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!614 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!615 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!616 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!617 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!618 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!619 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!620 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !572, line: 493, size: 32, align: 32, elements: !621)
!621 = !{!622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638}
!622 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!623 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!624 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!625 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!626 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!627 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!628 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!629 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!630 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!631 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!632 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!633 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!634 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!635 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!636 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!637 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!638 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!639 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !572, line: 538, size: 32, align: 32, elements: !640)
!640 = !{!641, !642, !643, !644, !645, !646, !647, !648}
!641 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!642 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!643 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!644 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!645 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!646 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!647 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!648 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!649 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVIODataMarkerType", file: !650, line: 111, size: 32, align: 32, elements: !651)
!650 = !DIFile(filename: "libavformat/avio.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!651 = !{!652, !653, !654, !655, !656, !657}
!652 = !DIEnumerator(name: "AVIO_DATA_MARKER_HEADER", value: 0)
!653 = !DIEnumerator(name: "AVIO_DATA_MARKER_SYNC_POINT", value: 1)
!654 = !DIEnumerator(name: "AVIO_DATA_MARKER_BOUNDARY_POINT", value: 2)
!655 = !DIEnumerator(name: "AVIO_DATA_MARKER_UNKNOWN", value: 3)
!656 = !DIEnumerator(name: "AVIO_DATA_MARKER_TRAILER", value: 4)
!657 = !DIEnumerator(name: "AVIO_DATA_MARKER_FLUSH_POINT", value: 5)
!658 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !537, line: 199, size: 32, align: 32, elements: !659)
!659 = !{!660, !661, !662, !663, !664, !665, !666}
!660 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!661 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!662 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!663 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!664 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!665 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!666 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!667 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !572, line: 64, size: 32, align: 32, elements: !668)
!668 = !{!669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865}
!669 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!670 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!671 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!672 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!673 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!674 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!675 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!676 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!677 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!678 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!679 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!680 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!681 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!682 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!683 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!684 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!685 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!686 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!687 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!688 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!689 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!690 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!691 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!692 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!693 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!694 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!695 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!696 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!697 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!698 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!699 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!700 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!701 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!702 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!703 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!704 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!705 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!706 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!707 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!708 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!709 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!710 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!711 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!712 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!713 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!714 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!715 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!716 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!717 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!718 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!719 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!720 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!721 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!722 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!723 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!724 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!725 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!726 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!727 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!728 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!729 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!730 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!731 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!732 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!733 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!734 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!735 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!736 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!737 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!738 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!739 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!740 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!741 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!742 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!743 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!744 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!745 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!746 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!747 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!748 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!749 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!750 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!751 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!752 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!753 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!754 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!755 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!756 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!757 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!758 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!759 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!760 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!761 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!762 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!763 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!764 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!765 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!766 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!767 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!768 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!769 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!770 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!771 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!772 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!773 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!774 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!775 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!776 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!777 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!778 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!779 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!780 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!781 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!782 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!783 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!784 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!785 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!786 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!787 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!788 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!789 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!790 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!791 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!792 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!793 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!794 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!795 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!796 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!797 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!798 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!799 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!800 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!801 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!802 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!803 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!804 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!805 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!806 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!807 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!808 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!809 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!810 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!811 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!812 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!813 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!814 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!815 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!816 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!817 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!818 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!819 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!820 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!821 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!822 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!823 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!824 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!825 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!826 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!827 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!828 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!829 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!830 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!831 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!832 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!833 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!834 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!835 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!836 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!837 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!838 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!839 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!840 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!841 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!842 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!843 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!844 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!845 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!846 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!847 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!848 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!849 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!850 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!851 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!852 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!853 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!854 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!855 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!856 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!857 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!858 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!859 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!860 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!861 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!862 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!863 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!864 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!865 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!866 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !867, line: 58, size: 32, align: 32, elements: !868)
!867 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!868 = !{!869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882}
!869 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!870 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!871 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!872 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!873 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!874 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!875 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!876 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!877 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!878 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!879 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!880 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!881 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!882 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!883 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !4, line: 3865, size: 32, align: 32, elements: !884)
!884 = !{!885, !886, !887, !888}
!885 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!886 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!887 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!888 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!889 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !4, line: 1534, size: 32, align: 32, elements: !890)
!890 = !{!891, !892, !893, !894, !895, !896}
!891 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!892 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!893 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!894 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!895 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!896 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!897 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !4, line: 810, size: 32, align: 32, elements: !898)
!898 = !{!899, !900, !901, !902, !903, !904, !905, !906, !907, !908}
!899 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!900 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!901 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!902 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!903 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!904 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!905 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!906 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!907 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!908 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!909 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !4, line: 798, size: 32, align: 32, elements: !910)
!910 = !{!911, !912, !913, !914, !915, !916, !917}
!911 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!912 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!913 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!914 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!915 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!916 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!917 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!918 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVStreamParseType", file: !919, line: 782, size: 32, align: 32, elements: !920)
!919 = !DIFile(filename: "libavformat/avformat.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!920 = !{!921, !922, !923, !924, !925, !926}
!921 = !DIEnumerator(name: "AVSTREAM_PARSE_NONE", value: 0)
!922 = !DIEnumerator(name: "AVSTREAM_PARSE_FULL", value: 1)
!923 = !DIEnumerator(name: "AVSTREAM_PARSE_HEADERS", value: 2)
!924 = !DIEnumerator(name: "AVSTREAM_PARSE_TIMESTAMPS", value: 3)
!925 = !DIEnumerator(name: "AVSTREAM_PARSE_FULL_ONCE", value: 4)
!926 = !DIEnumerator(name: "AVSTREAM_PARSE_FULL_RAW", value: 5)
!927 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureStructure", file: !4, line: 5085, size: 32, align: 32, elements: !928)
!928 = !{!929, !930, !931, !932}
!929 = !DIEnumerator(name: "AV_PICTURE_STRUCTURE_UNKNOWN", value: 0)
!930 = !DIEnumerator(name: "AV_PICTURE_STRUCTURE_TOP_FIELD", value: 1)
!931 = !DIEnumerator(name: "AV_PICTURE_STRUCTURE_BOTTOM_FIELD", value: 2)
!932 = !DIEnumerator(name: "AV_PICTURE_STRUCTURE_FRAME", value: 3)
!933 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDurationEstimationMethod", file: !919, line: 1315, size: 32, align: 32, elements: !934)
!934 = !{!935, !936, !937}
!935 = !DIEnumerator(name: "AVFMT_DURATION_FROM_PTS", value: 0)
!936 = !DIEnumerator(name: "AVFMT_DURATION_FROM_STREAM", value: 1)
!937 = !DIEnumerator(name: "AVFMT_DURATION_FROM_BITRATE", value: 2)
!938 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !939, line: 62, size: 32, align: 32, elements: !940)
!939 = !DIFile(filename: "libavformat/mxfdec.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!940 = !{!941, !942, !943}
!941 = !DIEnumerator(name: "Header", value: 0)
!942 = !DIEnumerator(name: "BodyPartition", value: 1)
!943 = !DIEnumerator(name: "Footer", value: 2)
!944 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !939, line: 68, size: 32, align: 32, elements: !945)
!945 = !{!946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956}
!946 = !DIEnumerator(name: "OP1a", value: 1)
!947 = !DIEnumerator(name: "OP1b", value: 2)
!948 = !DIEnumerator(name: "OP1c", value: 3)
!949 = !DIEnumerator(name: "OP2a", value: 4)
!950 = !DIEnumerator(name: "OP2b", value: 5)
!951 = !DIEnumerator(name: "OP2c", value: 6)
!952 = !DIEnumerator(name: "OP3a", value: 7)
!953 = !DIEnumerator(name: "OP3b", value: 8)
!954 = !DIEnumerator(name: "OP3c", value: 9)
!955 = !DIEnumerator(name: "OPAtom", value: 10)
!956 = !DIEnumerator(name: "OPSONYOpt", value: 11)
!957 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "MXFMetadataSetType", file: !958, line: 30, size: 32, align: 32, elements: !959)
!958 = !DIFile(filename: "libavformat/mxf.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!959 = !{!960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979}
!960 = !DIEnumerator(name: "AnyType", value: 0)
!961 = !DIEnumerator(name: "MaterialPackage", value: 1)
!962 = !DIEnumerator(name: "SourcePackage", value: 2)
!963 = !DIEnumerator(name: "SourceClip", value: 3)
!964 = !DIEnumerator(name: "TimecodeComponent", value: 4)
!965 = !DIEnumerator(name: "PulldownComponent", value: 5)
!966 = !DIEnumerator(name: "Sequence", value: 6)
!967 = !DIEnumerator(name: "MultipleDescriptor", value: 7)
!968 = !DIEnumerator(name: "Descriptor", value: 8)
!969 = !DIEnumerator(name: "Track", value: 9)
!970 = !DIEnumerator(name: "CryptoContext", value: 10)
!971 = !DIEnumerator(name: "Preface", value: 11)
!972 = !DIEnumerator(name: "Identification", value: 12)
!973 = !DIEnumerator(name: "ContentStorage", value: 13)
!974 = !DIEnumerator(name: "SubDescriptor", value: 14)
!975 = !DIEnumerator(name: "IndexTableSegment", value: 15)
!976 = !DIEnumerator(name: "EssenceContainerData", value: 16)
!977 = !DIEnumerator(name: "EssenceGroup", value: 17)
!978 = !DIEnumerator(name: "TaggedValue", value: 18)
!979 = !DIEnumerator(name: "TapeDescriptor", value: 19)
!980 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !939, line: 82, size: 32, align: 32, elements: !981)
!981 = !{!982, !983, !984}
!982 = !DIEnumerator(name: "UnknownWrapped", value: 0)
!983 = !DIEnumerator(name: "FrameWrapped", value: 1)
!984 = !DIEnumerator(name: "ClipWrapped", value: 2)
!985 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !958, line: 68, size: 32, align: 32, elements: !986)
!986 = !{!987, !988, !989, !990}
!987 = !DIEnumerator(name: "NormalWrap", value: 0)
!988 = !DIEnumerator(name: "D10D11Wrap", value: 1)
!989 = !DIEnumerator(name: "RawAWrap", value: 2)
!990 = !DIEnumerator(name: "RawVWrap", value: 3)
!991 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVTimecodeFlag", file: !992, line: 35, size: 32, align: 32, elements: !993)
!992 = !DIFile(filename: "./libavutil/timecode.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!993 = !{!994, !995, !996}
!994 = !DIEnumerator(name: "AV_TIMECODE_FLAG_DROPFRAME", value: 1)
!995 = !DIEnumerator(name: "AV_TIMECODE_FLAG_24HOURSMAX", value: 2)
!996 = !DIEnumerator(name: "AV_TIMECODE_FLAG_ALLOWNEGATIVE", value: 4)
!997 = !{!998, !1007, !1014, !1006, !1015, !1017, !1020, !1021, !1063, !1074, !1083, !1100, !1108, !1133, !1154, !1171, !3, !667, !1178, !1185, !1125, !1192}
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64, align: 64)
!999 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1000)
!1000 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !1001, line: 221, size: 32, align: 8, elements: !1002)
!1001 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1002 = !{!1003}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1000, file: !1001, line: 221, baseType: !1004, size: 32, align: 32)
!1004 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !1005, line: 51, baseType: !1006)
!1005 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1006 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64, align: 64)
!1008 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1009)
!1009 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_16", file: !1001, line: 222, size: 16, align: 8, elements: !1010)
!1010 = !{!1011}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1009, file: !1001, line: 222, baseType: !1012, size: 16, align: 16)
!1012 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !1005, line: 49, baseType: !1013)
!1013 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1014 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!1015 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !1005, line: 40, baseType: !1016)
!1016 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64, align: 64)
!1018 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !1005, line: 48, baseType: !1019)
!1019 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64, align: 64)
!1022 = !DIDerivedType(tag: DW_TAG_typedef, name: "MXFDescriptor", file: !939, line: 210, baseType: !1023)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MXFDescriptor", file: !939, line: 182, size: 1408, align: 64, elements: !1024)
!1024 = !{!1025, !1030, !1031, !1032, !1033, !1034, !1041, !1042, !1043, !1044, !1045, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1058, !1059, !1060, !1061, !1062}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1023, file: !939, line: 183, baseType: !1026, size: 128, align: 8)
!1026 = !DIDerivedType(tag: DW_TAG_typedef, name: "UID", file: !958, line: 28, baseType: !1027)
!1027 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1018, size: 128, align: 8, elements: !1028)
!1028 = !{!1029}
!1029 = !DISubrange(count: 16)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1023, file: !939, line: 184, baseType: !957, size: 32, align: 32, offset: 128)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "essence_container_ul", scope: !1023, file: !939, line: 185, baseType: !1026, size: 128, align: 8, offset: 160)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "essence_codec_ul", scope: !1023, file: !939, line: 186, baseType: !1026, size: 128, align: 8, offset: 288)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ul", scope: !1023, file: !939, line: 187, baseType: !1026, size: 128, align: 8, offset: 416)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1023, file: !939, line: 188, baseType: !1035, size: 64, align: 32, offset: 544)
!1035 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !1036, line: 61, baseType: !1037)
!1036 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !1036, line: 58, size: 64, align: 32, elements: !1038)
!1038 = !{!1039, !1040}
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1037, file: !1036, line: 59, baseType: !1014, size: 32, align: 32)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !1037, file: !1036, line: 60, baseType: !1014, size: 32, align: 32, offset: 32)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "aspect_ratio", scope: !1023, file: !939, line: 189, baseType: !1035, size: 64, align: 32, offset: 608)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1023, file: !939, line: 190, baseType: !1014, size: 32, align: 32, offset: 672)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1023, file: !939, line: 191, baseType: !1014, size: 32, align: 32, offset: 704)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "frame_layout", scope: !1023, file: !939, line: 192, baseType: !1014, size: 32, align: 32, offset: 736)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "video_line_map", scope: !1023, file: !939, line: 193, baseType: !1046, size: 64, align: 32, offset: 768)
!1046 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1014, size: 64, align: 32, elements: !1047)
!1047 = !{!1048}
!1048 = !DISubrange(count: 2)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "field_dominance", scope: !1023, file: !939, line: 197, baseType: !1014, size: 32, align: 32, offset: 832)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1023, file: !939, line: 198, baseType: !1014, size: 32, align: 32, offset: 864)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_sample", scope: !1023, file: !939, line: 199, baseType: !1014, size: 32, align: 32, offset: 896)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1023, file: !939, line: 200, baseType: !1015, size: 64, align: 64, offset: 960)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "component_depth", scope: !1023, file: !939, line: 201, baseType: !1006, size: 32, align: 32, offset: 1024)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "horiz_subsampling", scope: !1023, file: !939, line: 202, baseType: !1006, size: 32, align: 32, offset: 1056)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "vert_subsampling", scope: !1023, file: !939, line: 203, baseType: !1006, size: 32, align: 32, offset: 1088)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "sub_descriptors_refs", scope: !1023, file: !939, line: 204, baseType: !1057, size: 64, align: 64, offset: 1152)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 64, align: 64)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "sub_descriptors_count", scope: !1023, file: !939, line: 205, baseType: !1014, size: 32, align: 32, offset: 1216)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "linked_track_id", scope: !1023, file: !939, line: 206, baseType: !1014, size: 32, align: 32, offset: 1248)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1023, file: !939, line: 207, baseType: !1017, size: 64, align: 64, offset: 1280)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1023, file: !939, line: 208, baseType: !1014, size: 32, align: 32, offset: 1344)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1023, file: !939, line: 209, baseType: !667, size: 32, align: 32, offset: 1376)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64, align: 64)
!1064 = !DIDerivedType(tag: DW_TAG_typedef, name: "MXFSequence", file: !939, line: 132, baseType: !1065)
!1065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MXFSequence", file: !939, line: 124, size: 576, align: 64, elements: !1066)
!1066 = !{!1067, !1068, !1069, !1070, !1071, !1072, !1073}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1065, file: !939, line: 125, baseType: !1026, size: 128, align: 8)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1065, file: !939, line: 126, baseType: !957, size: 32, align: 32, offset: 128)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "data_definition_ul", scope: !1065, file: !939, line: 127, baseType: !1026, size: 128, align: 8, offset: 160)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "structural_components_refs", scope: !1065, file: !939, line: 128, baseType: !1057, size: 64, align: 64, offset: 320)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "structural_components_count", scope: !1065, file: !939, line: 129, baseType: !1014, size: 32, align: 32, offset: 384)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1065, file: !939, line: 130, baseType: !1015, size: 64, align: 64, offset: 448)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "origin", scope: !1065, file: !939, line: 131, baseType: !1018, size: 8, align: 8, offset: 512)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64, align: 64)
!1075 = !DIDerivedType(tag: DW_TAG_typedef, name: "MXFEssenceGroup", file: !939, line: 155, baseType: !1076)
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !939, line: 149, size: 384, align: 64, elements: !1077)
!1077 = !{!1078, !1079, !1080, !1081, !1082}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1076, file: !939, line: 150, baseType: !1026, size: 128, align: 8)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1076, file: !939, line: 151, baseType: !957, size: 32, align: 32, offset: 128)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "structural_components_refs", scope: !1076, file: !939, line: 152, baseType: !1057, size: 64, align: 64, offset: 192)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "structural_components_count", scope: !1076, file: !939, line: 153, baseType: !1014, size: 32, align: 32, offset: 256)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1076, file: !939, line: 154, baseType: !1015, size: 64, align: 64, offset: 320)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 64, align: 64)
!1084 = !DIDerivedType(tag: DW_TAG_typedef, name: "MXFPackage", file: !939, line: 239, baseType: !1085)
!1085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MXFPackage", file: !939, line: 227, size: 960, align: 64, elements: !1086)
!1086 = !{!1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1098, !1099}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1085, file: !939, line: 228, baseType: !1026, size: 128, align: 8)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1085, file: !939, line: 229, baseType: !957, size: 32, align: 32, offset: 128)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "package_uid", scope: !1085, file: !939, line: 230, baseType: !1026, size: 128, align: 8, offset: 160)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "package_ul", scope: !1085, file: !939, line: 231, baseType: !1026, size: 128, align: 8, offset: 288)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "tracks_refs", scope: !1085, file: !939, line: 232, baseType: !1057, size: 64, align: 64, offset: 448)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "tracks_count", scope: !1085, file: !939, line: 233, baseType: !1014, size: 32, align: 32, offset: 512)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "descriptor", scope: !1085, file: !939, line: 234, baseType: !1021, size: 64, align: 64, offset: 576)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "descriptor_ref", scope: !1085, file: !939, line: 235, baseType: !1026, size: 128, align: 8, offset: 640)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1085, file: !939, line: 236, baseType: !1096, size: 64, align: 64, offset: 768)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64, align: 64)
!1097 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "comment_refs", scope: !1085, file: !939, line: 237, baseType: !1057, size: 64, align: 64, offset: 832)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "comment_count", scope: !1085, file: !939, line: 238, baseType: !1014, size: 32, align: 32, offset: 896)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64, align: 64)
!1101 = !DIDerivedType(tag: DW_TAG_typedef, name: "MXFTaggedValue", file: !939, line: 162, baseType: !1102)
!1102 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !939, line: 157, size: 320, align: 64, elements: !1103)
!1103 = !{!1104, !1105, !1106, !1107}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1102, file: !939, line: 158, baseType: !1026, size: 128, align: 8)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1102, file: !939, line: 159, baseType: !957, size: 32, align: 32, offset: 128)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1102, file: !939, line: 160, baseType: !1096, size: 64, align: 64, offset: 192)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1102, file: !939, line: 161, baseType: !1096, size: 64, align: 64, offset: 256)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 64, align: 64)
!1109 = !DIDerivedType(tag: DW_TAG_typedef, name: "MXFTrack", file: !939, line: 180, baseType: !1110)
!1110 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !939, line: 164, size: 896, align: 64, elements: !1111)
!1111 = !{!1112, !1113, !1114, !1115, !1116, !1117, !1118, !1122, !1123, !1124, !1127, !1128, !1129, !1130, !1132}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1110, file: !939, line: 165, baseType: !1026, size: 128, align: 8)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1110, file: !939, line: 166, baseType: !957, size: 32, align: 32, offset: 128)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !1110, file: !939, line: 167, baseType: !1063, size: 64, align: 64, offset: 192)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "sequence_ref", scope: !1110, file: !939, line: 168, baseType: !1026, size: 128, align: 8, offset: 256)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "track_id", scope: !1110, file: !939, line: 169, baseType: !1014, size: 32, align: 32, offset: 384)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1110, file: !939, line: 170, baseType: !1096, size: 64, align: 64, offset: 448)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "track_number", scope: !1110, file: !939, line: 171, baseType: !1119, size: 32, align: 8, offset: 512)
!1119 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1018, size: 32, align: 8, elements: !1120)
!1120 = !{!1121}
!1121 = !DISubrange(count: 4)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "edit_rate", scope: !1110, file: !939, line: 172, baseType: !1035, size: 64, align: 32, offset: 544)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "intra_only", scope: !1110, file: !939, line: 173, baseType: !1014, size: 32, align: 32, offset: 608)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "sample_count", scope: !1110, file: !939, line: 174, baseType: !1125, size: 64, align: 64, offset: 640)
!1125 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1005, line: 55, baseType: !1126)
!1126 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "original_duration", scope: !1110, file: !939, line: 175, baseType: !1015, size: 64, align: 64, offset: 704)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "index_sid", scope: !1110, file: !939, line: 176, baseType: !1014, size: 32, align: 32, offset: 768)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "body_sid", scope: !1110, file: !939, line: 177, baseType: !1014, size: 32, align: 32, offset: 800)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "wrapping", scope: !1110, file: !939, line: 178, baseType: !1131, size: 32, align: 32, offset: 832)
!1131 = !DIDerivedType(tag: DW_TAG_typedef, name: "MXFWrappingScheme", file: !939, line: 86, baseType: !980)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "edit_units_per_packet", scope: !1110, file: !939, line: 179, baseType: !1014, size: 32, align: 32, offset: 864)
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 64, align: 64)
!1134 = !DIDerivedType(tag: DW_TAG_typedef, name: "MXFIndexTableSegment", file: !939, line: 225, baseType: !1135)
!1135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MXFIndexTableSegment", file: !939, line: 212, size: 704, align: 64, elements: !1136)
!1136 = !{!1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1149, !1151, !1153}
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1135, file: !939, line: 213, baseType: !1026, size: 128, align: 8)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1135, file: !939, line: 214, baseType: !957, size: 32, align: 32, offset: 128)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "edit_unit_byte_count", scope: !1135, file: !939, line: 215, baseType: !1014, size: 32, align: 32, offset: 160)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "index_sid", scope: !1135, file: !939, line: 216, baseType: !1014, size: 32, align: 32, offset: 192)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "body_sid", scope: !1135, file: !939, line: 217, baseType: !1014, size: 32, align: 32, offset: 224)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "index_edit_rate", scope: !1135, file: !939, line: 218, baseType: !1035, size: 64, align: 32, offset: 256)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "index_start_position", scope: !1135, file: !939, line: 219, baseType: !1125, size: 64, align: 64, offset: 320)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "index_duration", scope: !1135, file: !939, line: 220, baseType: !1125, size: 64, align: 64, offset: 384)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_offset_entries", scope: !1135, file: !939, line: 221, baseType: !1146, size: 64, align: 64, offset: 448)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64, align: 64)
!1147 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !1005, line: 36, baseType: !1148)
!1148 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "flag_entries", scope: !1135, file: !939, line: 222, baseType: !1150, size: 64, align: 64, offset: 512)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64, align: 64)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "stream_offset_entries", scope: !1135, file: !939, line: 223, baseType: !1152, size: 64, align: 64, offset: 576)
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 64, align: 64)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "nb_index_entries", scope: !1135, file: !939, line: 224, baseType: !1014, size: 32, align: 32, offset: 640)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 64, align: 64)
!1155 = !DIDerivedType(tag: DW_TAG_typedef, name: "MXFTimecodeComponent", file: !939, line: 141, baseType: !1156)
!1156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MXFTrack", file: !939, line: 134, size: 448, align: 32, elements: !1157)
!1157 = !{!1158, !1159, !1160, !1161, !1162, !1163}
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1156, file: !939, line: 135, baseType: !1026, size: 128, align: 8)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1156, file: !939, line: 136, baseType: !957, size: 32, align: 32, offset: 128)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "drop_frame", scope: !1156, file: !939, line: 137, baseType: !1014, size: 32, align: 32, offset: 160)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1156, file: !939, line: 138, baseType: !1014, size: 32, align: 32, offset: 192)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "rate", scope: !1156, file: !939, line: 139, baseType: !1037, size: 64, align: 32, offset: 224)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1156, file: !939, line: 140, baseType: !1164, size: 160, align: 32, offset: 288)
!1164 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVTimecode", file: !992, line: 46, baseType: !1165)
!1165 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !992, line: 41, size: 160, align: 32, elements: !1166)
!1166 = !{!1167, !1168, !1169, !1170}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1165, file: !992, line: 42, baseType: !1014, size: 32, align: 32)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1165, file: !992, line: 43, baseType: !1004, size: 32, align: 32, offset: 32)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "rate", scope: !1165, file: !992, line: 44, baseType: !1035, size: 64, align: 32, offset: 64)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "fps", scope: !1165, file: !992, line: 45, baseType: !1006, size: 32, align: 32, offset: 128)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 64, align: 64)
!1172 = !DIDerivedType(tag: DW_TAG_typedef, name: "MXFCryptoContext", file: !939, line: 111, baseType: !1173)
!1173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MXFCryptoContext", file: !939, line: 107, size: 288, align: 32, elements: !1174)
!1174 = !{!1175, !1176, !1177}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1173, file: !939, line: 108, baseType: !1026, size: 128, align: 8)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1173, file: !939, line: 109, baseType: !957, size: 32, align: 32, offset: 128)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "source_container_ul", scope: !1173, file: !939, line: 110, baseType: !1026, size: 128, align: 8, offset: 160)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 64, align: 64)
!1179 = !DIDerivedType(tag: DW_TAG_typedef, name: "MXFPulldownComponent", file: !939, line: 147, baseType: !1180)
!1180 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !939, line: 143, size: 288, align: 32, elements: !1181)
!1181 = !{!1182, !1183, !1184}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1180, file: !939, line: 144, baseType: !1026, size: 128, align: 8)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1180, file: !939, line: 145, baseType: !957, size: 32, align: 32, offset: 128)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "input_segment_ref", scope: !1180, file: !939, line: 146, baseType: !1026, size: 128, align: 8, offset: 160)
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 64, align: 64)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 64, align: 64)
!1187 = !DIDerivedType(tag: DW_TAG_typedef, name: "MXFMetadataSet", file: !939, line: 253, baseType: !1188)
!1188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MXFMetadataSet", file: !939, line: 250, size: 160, align: 32, elements: !1189)
!1189 = !{!1190, !1191}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1188, file: !939, line: 251, baseType: !1026, size: 128, align: 8)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1188, file: !939, line: 252, baseType: !957, size: 32, align: 32, offset: 128)
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64, align: 64)
!1193 = !{!1194, !2414, !2415, !2419, !2423, !2425, !2427, !2428, !2432, !2433, !2434, !2438, !2439, !2456, !2457, !2459, !2460, !2461, !2462, !2463, !2464, !2477, !2481, !2483, !2487, !2489, !2491}
!1194 = distinct !DIGlobalVariable(name: "ff_mxf_demuxer", scope: !0, file: !939, line: 3728, type: !1195, isLocal: false, isDefinition: true, variable: %struct.AVInputFormat* @ff_mxf_demuxer)
!1195 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVInputFormat", file: !919, line: 777, baseType: !1196)
!1196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVInputFormat", file: !919, line: 633, size: 1344, align: 64, elements: !1197)
!1197 = !{!1198, !1201, !1202, !1203, !1204, !1214, !1287, !1288, !1290, !1291, !1292, !1305, !2395, !2396, !2397, !2401, !2405, !2406, !2407, !2411, !2412, !2413}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1196, file: !919, line: 638, baseType: !1199, size: 64, align: 64)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 64, align: 64)
!1200 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1097)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1196, file: !919, line: 645, baseType: !1199, size: 64, align: 64, offset: 64)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1196, file: !919, line: 652, baseType: !1014, size: 32, align: 32, offset: 128)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "extensions", scope: !1196, file: !919, line: 659, baseType: !1199, size: 64, align: 64, offset: 192)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1196, file: !919, line: 661, baseType: !1205, size: 64, align: 64, offset: 256)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 64, align: 64)
!1206 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1207)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64, align: 64)
!1208 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1209)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecTag", file: !1210, line: 44, size: 64, align: 32, elements: !1211)
!1210 = !DIFile(filename: "libavformat/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1211 = !{!1212, !1213}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1209, file: !1210, line: 45, baseType: !3, size: 32, align: 32)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !1209, file: !1210, line: 46, baseType: !1006, size: 32, align: 32, offset: 32)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1196, file: !919, line: 663, baseType: !1215, size: 64, align: 64, offset: 320)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 64, align: 64)
!1216 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1217)
!1217 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !486, line: 143, baseType: !1218)
!1218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !486, line: 67, size: 640, align: 64, elements: !1219)
!1219 = !{!1220, !1221, !1225, !1246, !1247, !1248, !1249, !1253, !1259, !1261, !1265}
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !1218, file: !486, line: 72, baseType: !1199, size: 64, align: 64)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !1218, file: !486, line: 78, baseType: !1222, size: 64, align: 64, offset: 64)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64, align: 64)
!1223 = !DISubroutineType(types: !1224)
!1224 = !{!1199, !1020}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !1218, file: !486, line: 85, baseType: !1226, size: 64, align: 64, offset: 128)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64, align: 64)
!1227 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1228)
!1228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !464, line: 246, size: 512, align: 64, elements: !1229)
!1229 = !{!1230, !1231, !1232, !1233, !1234, !1242, !1243, !1244, !1245}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1228, file: !464, line: 247, baseType: !1199, size: 64, align: 64)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !1228, file: !464, line: 253, baseType: !1199, size: 64, align: 64, offset: 64)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1228, file: !464, line: 259, baseType: !1014, size: 32, align: 32, offset: 128)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1228, file: !464, line: 260, baseType: !463, size: 32, align: 32, offset: 160)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !1228, file: !464, line: 271, baseType: !1235, size: 64, align: 64, offset: 192)
!1235 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1228, file: !464, line: 265, size: 64, align: 64, elements: !1236)
!1236 = !{!1237, !1238, !1240, !1241}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !1235, file: !464, line: 266, baseType: !1015, size: 64, align: 64)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !1235, file: !464, line: 267, baseType: !1239, size: 64, align: 64)
!1239 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1235, file: !464, line: 268, baseType: !1199, size: 64, align: 64)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1235, file: !464, line: 270, baseType: !1035, size: 64, align: 32)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1228, file: !464, line: 272, baseType: !1239, size: 64, align: 64, offset: 256)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1228, file: !464, line: 273, baseType: !1239, size: 64, align: 64, offset: 320)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1228, file: !464, line: 275, baseType: !1014, size: 32, align: 32, offset: 384)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1228, file: !464, line: 300, baseType: !1199, size: 64, align: 64, offset: 448)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1218, file: !486, line: 93, baseType: !1014, size: 32, align: 32, offset: 192)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !1218, file: !486, line: 99, baseType: !1014, size: 32, align: 32, offset: 224)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !1218, file: !486, line: 108, baseType: !1014, size: 32, align: 32, offset: 256)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !1218, file: !486, line: 113, baseType: !1250, size: 64, align: 64, offset: 320)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 64, align: 64)
!1251 = !DISubroutineType(types: !1252)
!1252 = !{!1020, !1020, !1020}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !1218, file: !486, line: 123, baseType: !1254, size: 64, align: 64, offset: 384)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 64, align: 64)
!1255 = !DISubroutineType(types: !1256)
!1256 = !{!1257, !1257}
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 64, align: 64)
!1258 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1218)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !1218, file: !486, line: 130, baseType: !1260, size: 32, align: 32, offset: 448)
!1260 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !486, line: 48, baseType: !485)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !1218, file: !486, line: 136, baseType: !1262, size: 64, align: 64, offset: 512)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 64, align: 64)
!1263 = !DISubroutineType(types: !1264)
!1264 = !{!1260, !1020}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !1218, file: !486, line: 142, baseType: !1266, size: 64, align: 64, offset: 576)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64, align: 64)
!1267 = !DISubroutineType(types: !1268)
!1268 = !{!1014, !1269, !1020, !1199, !1014}
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64, align: 64)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64, align: 64)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !464, line: 329, size: 128, align: 64, elements: !1272)
!1272 = !{!1273, !1285, !1286}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1271, file: !464, line: 360, baseType: !1274, size: 64, align: 64)
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1275, size: 64, align: 64)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 64, align: 64)
!1276 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOptionRange", file: !464, line: 324, baseType: !1277)
!1277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRange", file: !464, line: 306, size: 384, align: 64, elements: !1278)
!1278 = !{!1279, !1280, !1281, !1282, !1283, !1284}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1277, file: !464, line: 307, baseType: !1199, size: 64, align: 64)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !1277, file: !464, line: 313, baseType: !1239, size: 64, align: 64, offset: 64)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !1277, file: !464, line: 313, baseType: !1239, size: 64, align: 64, offset: 128)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "component_min", scope: !1277, file: !464, line: 318, baseType: !1239, size: 64, align: 64, offset: 192)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "component_max", scope: !1277, file: !464, line: 318, baseType: !1239, size: 64, align: 64, offset: 256)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "is_range", scope: !1277, file: !464, line: 323, baseType: !1014, size: 32, align: 32, offset: 320)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ranges", scope: !1271, file: !464, line: 364, baseType: !1014, size: 32, align: 32, offset: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !1271, file: !464, line: 368, baseType: !1014, size: 32, align: 32, offset: 96)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !1196, file: !919, line: 670, baseType: !1199, size: 64, align: 64, offset: 384)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1196, file: !919, line: 679, baseType: !1289, size: 64, align: 64, offset: 448)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 64, align: 64)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "raw_codec_id", scope: !1196, file: !919, line: 684, baseType: !1014, size: 32, align: 32, offset: 512)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1196, file: !919, line: 689, baseType: !1014, size: 32, align: 32, offset: 544)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "read_probe", scope: !1196, file: !919, line: 696, baseType: !1293, size: 64, align: 64, offset: 576)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 64, align: 64)
!1294 = !DISubroutineType(types: !1295)
!1295 = !{!1014, !1296}
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 64, align: 64)
!1297 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProbeData", file: !919, line: 453, baseType: !1298)
!1298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProbeData", file: !919, line: 448, size: 256, align: 64, elements: !1299)
!1299 = !{!1300, !1301, !1303, !1304}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !1298, file: !919, line: 449, baseType: !1199, size: 64, align: 64)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1298, file: !919, line: 450, baseType: !1302, size: 64, align: 64, offset: 64)
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 64, align: 64)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "buf_size", scope: !1298, file: !919, line: 451, baseType: !1014, size: 32, align: 32, offset: 128)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !1298, file: !919, line: 452, baseType: !1199, size: 64, align: 64, offset: 192)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "read_header", scope: !1196, file: !919, line: 703, baseType: !1306, size: 64, align: 64, offset: 640)
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 64, align: 64)
!1307 = !DISubroutineType(types: !1308)
!1308 = !{!1014, !1309}
!1309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 64, align: 64)
!1310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFormatContext", file: !919, line: 1337, size: 11968, align: 64, elements: !1311)
!1311 = !{!1312, !1313, !1314, !1499, !1500, !1565, !1566, !1567, !2252, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2306, !2307, !2308, !2309, !2310, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2361, !2362, !2365, !2366, !2367, !2368, !2369, !2370, !2372, !2373, !2374, !2375, !2383, !2384, !2388, !2392, !2393, !2394}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1310, file: !919, line: 1342, baseType: !1215, size: 64, align: 64)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "iformat", scope: !1310, file: !919, line: 1349, baseType: !1289, size: 64, align: 64, offset: 64)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "oformat", scope: !1310, file: !919, line: 1356, baseType: !1315, size: 64, align: 64, offset: 128)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64, align: 64)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOutputFormat", file: !919, line: 497, size: 1600, align: 64, elements: !1317)
!1317 = !{!1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1369, !1370, !1374, !1378, !1383, !1389, !1474, !1480, !1486, !1487, !1488, !1489, !1493}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1316, file: !919, line: 498, baseType: !1199, size: 64, align: 64)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1316, file: !919, line: 504, baseType: !1199, size: 64, align: 64, offset: 64)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !1316, file: !919, line: 505, baseType: !1199, size: 64, align: 64, offset: 128)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "extensions", scope: !1316, file: !919, line: 506, baseType: !1199, size: 64, align: 64, offset: 192)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1316, file: !919, line: 508, baseType: !3, size: 32, align: 32, offset: 256)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "video_codec", scope: !1316, file: !919, line: 509, baseType: !3, size: 32, align: 32, offset: 288)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_codec", scope: !1316, file: !919, line: 510, baseType: !3, size: 32, align: 32, offset: 320)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1316, file: !919, line: 517, baseType: !1014, size: 32, align: 32, offset: 352)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1316, file: !919, line: 523, baseType: !1205, size: 64, align: 64, offset: 384)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1316, file: !919, line: 526, baseType: !1215, size: 64, align: 64, offset: 448)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1316, file: !919, line: 535, baseType: !1315, size: 64, align: 64, offset: 512)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1316, file: !919, line: 539, baseType: !1014, size: 32, align: 32, offset: 576)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "write_header", scope: !1316, file: !919, line: 541, baseType: !1306, size: 64, align: 64, offset: 640)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "write_packet", scope: !1316, file: !919, line: 549, baseType: !1332, size: 64, align: 64, offset: 704)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64, align: 64)
!1333 = !DISubroutineType(types: !1334)
!1334 = !{!1014, !1309, !1335}
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 64, align: 64)
!1336 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !4, line: 1499, baseType: !1337)
!1337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !4, line: 1445, size: 704, align: 64, elements: !1338)
!1338 = !{!1339, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1365, !1366, !1367, !1368}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1337, file: !4, line: 1451, baseType: !1340, size: 64, align: 64)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 64, align: 64)
!1341 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1342, line: 94, baseType: !1343)
!1342 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1342, line: 81, size: 192, align: 64, elements: !1344)
!1344 = !{!1345, !1349, !1350}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1343, file: !1342, line: 82, baseType: !1346, size: 64, align: 64)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 64, align: 64)
!1347 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1342, line: 73, baseType: !1348)
!1348 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1342, line: 73, flags: DIFlagFwdDecl)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1343, file: !1342, line: 89, baseType: !1017, size: 64, align: 64, offset: 64)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1343, file: !1342, line: 93, baseType: !1014, size: 32, align: 32, offset: 128)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1337, file: !4, line: 1461, baseType: !1015, size: 64, align: 64, offset: 64)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1337, file: !4, line: 1467, baseType: !1015, size: 64, align: 64, offset: 128)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1337, file: !4, line: 1468, baseType: !1017, size: 64, align: 64, offset: 192)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1337, file: !4, line: 1469, baseType: !1014, size: 32, align: 32, offset: 256)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1337, file: !4, line: 1470, baseType: !1014, size: 32, align: 32, offset: 288)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1337, file: !4, line: 1474, baseType: !1014, size: 32, align: 32, offset: 320)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1337, file: !4, line: 1479, baseType: !1358, size: 64, align: 64, offset: 384)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 64, align: 64)
!1359 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !4, line: 1415, baseType: !1360)
!1360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !4, line: 1411, size: 128, align: 64, elements: !1361)
!1361 = !{!1362, !1363, !1364}
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1360, file: !4, line: 1412, baseType: !1017, size: 64, align: 64)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1360, file: !4, line: 1413, baseType: !1014, size: 32, align: 32, offset: 64)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1360, file: !4, line: 1414, baseType: !506, size: 32, align: 32, offset: 96)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1337, file: !4, line: 1480, baseType: !1014, size: 32, align: 32, offset: 448)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1337, file: !4, line: 1486, baseType: !1015, size: 64, align: 64, offset: 512)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1337, file: !4, line: 1488, baseType: !1015, size: 64, align: 64, offset: 576)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1337, file: !4, line: 1497, baseType: !1015, size: 64, align: 64, offset: 640)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "write_trailer", scope: !1316, file: !919, line: 550, baseType: !1306, size: 64, align: 64, offset: 768)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "interleave_packet", scope: !1316, file: !919, line: 554, baseType: !1371, size: 64, align: 64, offset: 832)
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 64, align: 64)
!1372 = !DISubroutineType(types: !1373)
!1373 = !{!1014, !1309, !1335, !1335, !1014}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "query_codec", scope: !1316, file: !919, line: 563, baseType: !1375, size: 64, align: 64, offset: 896)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 64, align: 64)
!1376 = !DISubroutineType(types: !1377)
!1377 = !{!1014, !3, !1014}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "get_output_timestamp", scope: !1316, file: !919, line: 565, baseType: !1379, size: 64, align: 64, offset: 960)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 64, align: 64)
!1380 = !DISubroutineType(types: !1381)
!1381 = !{null, !1309, !1014, !1382, !1382}
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64, align: 64)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "control_message", scope: !1316, file: !919, line: 570, baseType: !1384, size: 64, align: 64, offset: 1024)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 64, align: 64)
!1385 = !DISubroutineType(types: !1386)
!1386 = !{!1014, !1309, !1014, !1020, !1387}
!1387 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1388, line: 216, baseType: !1126)
!1388 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "write_uncoded_frame", scope: !1316, file: !919, line: 581, baseType: !1390, size: 64, align: 64, offset: 1088)
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 64, align: 64)
!1391 = !DISubroutineType(types: !1392)
!1392 = !{!1014, !1309, !1014, !1393, !1006}
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 64, align: 64)
!1394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1395, size: 64, align: 64)
!1395 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !548, line: 646, baseType: !1396)
!1396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !548, line: 268, size: 4288, align: 64, elements: !1397)
!1397 = !{!1398, !1402, !1404, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1431, !1433, !1434, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1396, file: !548, line: 282, baseType: !1399, size: 512, align: 64)
!1399 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 512, align: 64, elements: !1400)
!1400 = !{!1401}
!1401 = !DISubrange(count: 8)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1396, file: !548, line: 299, baseType: !1403, size: 256, align: 32, offset: 512)
!1403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1014, size: 256, align: 32, elements: !1400)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1396, file: !548, line: 315, baseType: !1405, size: 64, align: 64, offset: 768)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64, align: 64)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1396, file: !548, line: 326, baseType: !1014, size: 32, align: 32, offset: 832)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1396, file: !548, line: 326, baseType: !1014, size: 32, align: 32, offset: 864)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1396, file: !548, line: 334, baseType: !1014, size: 32, align: 32, offset: 896)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1396, file: !548, line: 341, baseType: !1014, size: 32, align: 32, offset: 928)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1396, file: !548, line: 346, baseType: !1014, size: 32, align: 32, offset: 960)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1396, file: !548, line: 351, baseType: !536, size: 32, align: 32, offset: 992)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1396, file: !548, line: 356, baseType: !1035, size: 64, align: 32, offset: 1024)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1396, file: !548, line: 361, baseType: !1015, size: 64, align: 64, offset: 1088)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1396, file: !548, line: 369, baseType: !1015, size: 64, align: 64, offset: 1152)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1396, file: !548, line: 377, baseType: !1015, size: 64, align: 64, offset: 1216)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1396, file: !548, line: 382, baseType: !1014, size: 32, align: 32, offset: 1280)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1396, file: !548, line: 386, baseType: !1014, size: 32, align: 32, offset: 1312)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1396, file: !548, line: 391, baseType: !1014, size: 32, align: 32, offset: 1344)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1396, file: !548, line: 396, baseType: !1020, size: 64, align: 64, offset: 1408)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1396, file: !548, line: 403, baseType: !1421, size: 512, align: 64, offset: 1472)
!1421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1125, size: 512, align: 64, elements: !1400)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1396, file: !548, line: 410, baseType: !1014, size: 32, align: 32, offset: 1984)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1396, file: !548, line: 415, baseType: !1014, size: 32, align: 32, offset: 2016)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1396, file: !548, line: 420, baseType: !1014, size: 32, align: 32, offset: 2048)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1396, file: !548, line: 425, baseType: !1014, size: 32, align: 32, offset: 2080)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1396, file: !548, line: 435, baseType: !1015, size: 64, align: 64, offset: 2112)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1396, file: !548, line: 440, baseType: !1014, size: 32, align: 32, offset: 2176)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1396, file: !548, line: 445, baseType: !1125, size: 64, align: 64, offset: 2240)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1396, file: !548, line: 459, baseType: !1430, size: 512, align: 64, offset: 2304)
!1430 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1340, size: 512, align: 64, elements: !1400)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1396, file: !548, line: 473, baseType: !1432, size: 64, align: 64, offset: 2816)
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 64, align: 64)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1396, file: !548, line: 477, baseType: !1014, size: 32, align: 32, offset: 2880)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1396, file: !548, line: 479, baseType: !1435, size: 64, align: 64, offset: 2944)
!1435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1436, size: 64, align: 64)
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 64, align: 64)
!1437 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !548, line: 207, baseType: !1438)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !548, line: 201, size: 320, align: 64, elements: !1439)
!1439 = !{!1440, !1441, !1442, !1443, !1448}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1438, file: !548, line: 202, baseType: !547, size: 32, align: 32)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1438, file: !548, line: 203, baseType: !1017, size: 64, align: 64, offset: 64)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1438, file: !548, line: 204, baseType: !1014, size: 32, align: 32, offset: 128)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1438, file: !548, line: 205, baseType: !1444, size: 64, align: 64, offset: 192)
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 64, align: 64)
!1445 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1446, line: 86, baseType: !1447)
!1446 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!1447 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1446, line: 86, flags: DIFlagFwdDecl)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1438, file: !548, line: 206, baseType: !1340, size: 64, align: 64, offset: 256)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1396, file: !548, line: 480, baseType: !1014, size: 32, align: 32, offset: 3008)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1396, file: !548, line: 505, baseType: !1014, size: 32, align: 32, offset: 3040)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1396, file: !548, line: 512, baseType: !571, size: 32, align: 32, offset: 3072)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1396, file: !548, line: 514, baseType: !578, size: 32, align: 32, offset: 3104)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1396, file: !548, line: 516, baseType: !596, size: 32, align: 32, offset: 3136)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1396, file: !548, line: 523, baseType: !620, size: 32, align: 32, offset: 3168)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1396, file: !548, line: 525, baseType: !639, size: 32, align: 32, offset: 3200)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1396, file: !548, line: 532, baseType: !1015, size: 64, align: 64, offset: 3264)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1396, file: !548, line: 539, baseType: !1015, size: 64, align: 64, offset: 3328)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1396, file: !548, line: 547, baseType: !1015, size: 64, align: 64, offset: 3392)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1396, file: !548, line: 554, baseType: !1444, size: 64, align: 64, offset: 3456)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1396, file: !548, line: 563, baseType: !1014, size: 32, align: 32, offset: 3520)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1396, file: !548, line: 572, baseType: !1014, size: 32, align: 32, offset: 3552)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1396, file: !548, line: 581, baseType: !1014, size: 32, align: 32, offset: 3584)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1396, file: !548, line: 588, baseType: !1146, size: 64, align: 64, offset: 3648)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1396, file: !548, line: 593, baseType: !1014, size: 32, align: 32, offset: 3712)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1396, file: !548, line: 596, baseType: !1014, size: 32, align: 32, offset: 3744)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1396, file: !548, line: 599, baseType: !1340, size: 64, align: 64, offset: 3776)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1396, file: !548, line: 605, baseType: !1340, size: 64, align: 64, offset: 3840)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1396, file: !548, line: 616, baseType: !1340, size: 64, align: 64, offset: 3904)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1396, file: !548, line: 626, baseType: !1387, size: 64, align: 64, offset: 3968)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1396, file: !548, line: 627, baseType: !1387, size: 64, align: 64, offset: 4032)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1396, file: !548, line: 628, baseType: !1387, size: 64, align: 64, offset: 4096)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1396, file: !548, line: 629, baseType: !1387, size: 64, align: 64, offset: 4160)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1396, file: !548, line: 645, baseType: !1340, size: 64, align: 64, offset: 4224)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "get_device_list", scope: !1316, file: !919, line: 587, baseType: !1475, size: 64, align: 64, offset: 1152)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64, align: 64)
!1476 = !DISubroutineType(types: !1477)
!1477 = !{!1014, !1309, !1478}
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64, align: 64)
!1479 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDeviceInfoList", file: !919, line: 328, flags: DIFlagFwdDecl)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "create_device_capabilities", scope: !1316, file: !919, line: 592, baseType: !1481, size: 64, align: 64, offset: 1216)
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 64, align: 64)
!1482 = !DISubroutineType(types: !1483)
!1483 = !{!1014, !1309, !1484}
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 64, align: 64)
!1485 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDeviceCapabilitiesQuery", file: !919, line: 329, flags: DIFlagFwdDecl)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "free_device_capabilities", scope: !1316, file: !919, line: 597, baseType: !1481, size: 64, align: 64, offset: 1280)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "data_codec", scope: !1316, file: !919, line: 598, baseType: !3, size: 32, align: 32, offset: 1344)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1316, file: !919, line: 608, baseType: !1306, size: 64, align: 64, offset: 1408)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "deinit", scope: !1316, file: !919, line: 617, baseType: !1490, size: 64, align: 64, offset: 1472)
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 64, align: 64)
!1491 = !DISubroutineType(types: !1492)
!1492 = !{null, !1309}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "check_bitstream", scope: !1316, file: !919, line: 623, baseType: !1494, size: 64, align: 64, offset: 1536)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64, align: 64)
!1495 = !DISubroutineType(types: !1496)
!1496 = !{!1014, !1309, !1497}
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 64, align: 64)
!1498 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1336)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1310, file: !919, line: 1365, baseType: !1020, size: 64, align: 64, offset: 192)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "pb", scope: !1310, file: !919, line: 1379, baseType: !1501, size: 64, align: 64, offset: 256)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 64, align: 64)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVIOContext", file: !650, line: 352, baseType: !1503)
!1503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVIOContext", file: !650, line: 161, size: 2112, align: 64, elements: !1504)
!1504 = !{!1505, !1506, !1507, !1508, !1509, !1510, !1511, !1515, !1516, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1532, !1533, !1537, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1555, !1556, !1557, !1558, !1562, !1563, !1564}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1503, file: !650, line: 174, baseType: !1215, size: 64, align: 64)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1503, file: !650, line: 226, baseType: !1302, size: 64, align: 64, offset: 64)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_size", scope: !1503, file: !650, line: 227, baseType: !1014, size: 32, align: 32, offset: 128)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr", scope: !1503, file: !650, line: 228, baseType: !1302, size: 64, align: 64, offset: 192)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "buf_end", scope: !1503, file: !650, line: 229, baseType: !1302, size: 64, align: 64, offset: 256)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1503, file: !650, line: 233, baseType: !1020, size: 64, align: 64, offset: 320)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "read_packet", scope: !1503, file: !650, line: 235, baseType: !1512, size: 64, align: 64, offset: 384)
!1512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 64, align: 64)
!1513 = !DISubroutineType(types: !1514)
!1514 = !{!1014, !1020, !1017, !1014}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "write_packet", scope: !1503, file: !650, line: 236, baseType: !1512, size: 64, align: 64, offset: 448)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "seek", scope: !1503, file: !650, line: 237, baseType: !1517, size: 64, align: 64, offset: 512)
!1517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1518, size: 64, align: 64)
!1518 = !DISubroutineType(types: !1519)
!1519 = !{!1015, !1020, !1015, !1014}
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1503, file: !650, line: 238, baseType: !1015, size: 64, align: 64, offset: 576)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "eof_reached", scope: !1503, file: !650, line: 239, baseType: !1014, size: 32, align: 32, offset: 640)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "write_flag", scope: !1503, file: !650, line: 240, baseType: !1014, size: 32, align: 32, offset: 672)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "max_packet_size", scope: !1503, file: !650, line: 241, baseType: !1014, size: 32, align: 32, offset: 704)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "checksum", scope: !1503, file: !650, line: 242, baseType: !1126, size: 64, align: 64, offset: 768)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "checksum_ptr", scope: !1503, file: !650, line: 243, baseType: !1302, size: 64, align: 64, offset: 832)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "update_checksum", scope: !1503, file: !650, line: 244, baseType: !1527, size: 64, align: 64, offset: 896)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 64, align: 64)
!1528 = !DISubroutineType(types: !1529)
!1529 = !{!1126, !1126, !1530, !1006}
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 64, align: 64)
!1531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1018)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1503, file: !650, line: 245, baseType: !1014, size: 32, align: 32, offset: 960)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "read_pause", scope: !1503, file: !650, line: 249, baseType: !1534, size: 64, align: 64, offset: 1024)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 64, align: 64)
!1535 = !DISubroutineType(types: !1536)
!1536 = !{!1014, !1020, !1014}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "read_seek", scope: !1503, file: !650, line: 255, baseType: !1538, size: 64, align: 64, offset: 1088)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 64, align: 64)
!1539 = !DISubroutineType(types: !1540)
!1540 = !{!1015, !1020, !1014, !1015, !1014}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "seekable", scope: !1503, file: !650, line: 260, baseType: !1014, size: 32, align: 32, offset: 1152)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "maxsize", scope: !1503, file: !650, line: 266, baseType: !1015, size: 64, align: 64, offset: 1216)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "direct", scope: !1503, file: !650, line: 273, baseType: !1014, size: 32, align: 32, offset: 1280)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_read", scope: !1503, file: !650, line: 279, baseType: !1015, size: 64, align: 64, offset: 1344)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "seek_count", scope: !1503, file: !650, line: 285, baseType: !1014, size: 32, align: 32, offset: 1408)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "writeout_count", scope: !1503, file: !650, line: 291, baseType: !1014, size: 32, align: 32, offset: 1440)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "orig_buffer_size", scope: !1503, file: !650, line: 298, baseType: !1014, size: 32, align: 32, offset: 1472)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "short_seek_threshold", scope: !1503, file: !650, line: 304, baseType: !1014, size: 32, align: 32, offset: 1504)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_whitelist", scope: !1503, file: !650, line: 309, baseType: !1199, size: 64, align: 64, offset: 1536)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_blacklist", scope: !1503, file: !650, line: 314, baseType: !1199, size: 64, align: 64, offset: 1600)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "write_data_type", scope: !1503, file: !650, line: 319, baseType: !1552, size: 64, align: 64, offset: 1664)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 64, align: 64)
!1553 = !DISubroutineType(types: !1554)
!1554 = !{!1014, !1020, !1017, !1014, !649, !1015}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_boundary_point", scope: !1503, file: !650, line: 326, baseType: !1014, size: 32, align: 32, offset: 1728)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "current_type", scope: !1503, file: !650, line: 331, baseType: !649, size: 32, align: 32, offset: 1760)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !1503, file: !650, line: 332, baseType: !1015, size: 64, align: 64, offset: 1792)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "short_seek_get", scope: !1503, file: !650, line: 338, baseType: !1559, size: 64, align: 64, offset: 1856)
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 64, align: 64)
!1560 = !DISubroutineType(types: !1561)
!1561 = !{!1014, !1020}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "written", scope: !1503, file: !650, line: 340, baseType: !1015, size: 64, align: 64, offset: 1920)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr_max", scope: !1503, file: !650, line: 346, baseType: !1302, size: 64, align: 64, offset: 1984)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "min_packet_size", scope: !1503, file: !650, line: 351, baseType: !1014, size: 32, align: 32, offset: 2048)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_flags", scope: !1310, file: !919, line: 1386, baseType: !1014, size: 32, align: 32, offset: 320)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "nb_streams", scope: !1310, file: !919, line: 1393, baseType: !1006, size: 32, align: 32, offset: 352)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "streams", scope: !1310, file: !919, line: 1405, baseType: !1568, size: 64, align: 64, offset: 384)
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 64, align: 64)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 64, align: 64)
!1570 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVStream", file: !919, line: 1223, baseType: !1571)
!1571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVStream", file: !919, line: 865, size: 6144, align: 64, elements: !1572)
!1572 = !{!1573, !1574, !1575, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2039, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2138, !2144, !2145, !2149, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2181, !2182, !2183, !2184, !2185, !2186}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1571, file: !919, line: 866, baseType: !1014, size: 32, align: 32)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1571, file: !919, line: 872, baseType: !1014, size: 32, align: 32, offset: 32)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1571, file: !919, line: 878, baseType: !1576, size: 64, align: 64, offset: 64)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 64, align: 64)
!1577 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !4, line: 3360, baseType: !1578)
!1578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !4, line: 1556, size: 8448, align: 64, elements: !1579)
!1579 = !{!1580, !1581, !1582, !1583, !1714, !1715, !1716, !1717, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1743, !1747, !1748, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1927, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1578, file: !4, line: 1561, baseType: !1215, size: 64, align: 64)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1578, file: !4, line: 1562, baseType: !1014, size: 32, align: 32, offset: 64)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1578, file: !4, line: 1564, baseType: !658, size: 32, align: 32, offset: 96)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1578, file: !4, line: 1565, baseType: !1584, size: 64, align: 64, offset: 128)
!1584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1585, size: 64, align: 64)
!1585 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1586)
!1586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !4, line: 3468, size: 1984, align: 64, elements: !1587)
!1587 = !{!1588, !1589, !1590, !1591, !1592, !1593, !1596, !1599, !1602, !1605, !1608, !1609, !1610, !1618, !1619, !1620, !1622, !1626, !1632, !1637, !1641, !1642, !1680, !1686, !1690, !1691, !1695, !1699, !1703, !1707, !1708, !1709}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1586, file: !4, line: 3475, baseType: !1199, size: 64, align: 64)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1586, file: !4, line: 3480, baseType: !1199, size: 64, align: 64, offset: 64)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1586, file: !4, line: 3481, baseType: !658, size: 32, align: 32, offset: 128)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1586, file: !4, line: 3482, baseType: !3, size: 32, align: 32, offset: 160)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1586, file: !4, line: 3487, baseType: !1014, size: 32, align: 32, offset: 192)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1586, file: !4, line: 3488, baseType: !1594, size: 64, align: 64, offset: 256)
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 64, align: 64)
!1595 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1035)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1586, file: !4, line: 3489, baseType: !1597, size: 64, align: 64, offset: 320)
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 64, align: 64)
!1598 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !667)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1586, file: !4, line: 3490, baseType: !1600, size: 64, align: 64, offset: 384)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 64, align: 64)
!1601 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1014)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1586, file: !4, line: 3491, baseType: !1603, size: 64, align: 64, offset: 448)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64, align: 64)
!1604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !866)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1586, file: !4, line: 3492, baseType: !1606, size: 64, align: 64, offset: 512)
!1606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1607, size: 64, align: 64)
!1607 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1125)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1586, file: !4, line: 3493, baseType: !1018, size: 8, align: 8, offset: 576)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1586, file: !4, line: 3494, baseType: !1215, size: 64, align: 64, offset: 640)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1586, file: !4, line: 3495, baseType: !1611, size: 64, align: 64, offset: 704)
!1611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 64, align: 64)
!1612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1613)
!1613 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !4, line: 3404, baseType: !1614)
!1614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !4, line: 3401, size: 128, align: 64, elements: !1615)
!1615 = !{!1616, !1617}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1614, file: !4, line: 3402, baseType: !1014, size: 32, align: 32)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1614, file: !4, line: 3403, baseType: !1199, size: 64, align: 64, offset: 64)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1586, file: !4, line: 3507, baseType: !1199, size: 64, align: 64, offset: 768)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1586, file: !4, line: 3516, baseType: !1014, size: 32, align: 32, offset: 832)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1586, file: !4, line: 3517, baseType: !1621, size: 64, align: 64, offset: 896)
!1621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1586, size: 64, align: 64)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1586, file: !4, line: 3527, baseType: !1623, size: 64, align: 64, offset: 960)
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 64, align: 64)
!1624 = !DISubroutineType(types: !1625)
!1625 = !{!1014, !1576}
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1586, file: !4, line: 3535, baseType: !1627, size: 64, align: 64, offset: 1024)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 64, align: 64)
!1628 = !DISubroutineType(types: !1629)
!1629 = !{!1014, !1576, !1630}
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 64, align: 64)
!1631 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1577)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1586, file: !4, line: 3541, baseType: !1633, size: 64, align: 64, offset: 1088)
!1633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1634, size: 64, align: 64)
!1634 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1635)
!1635 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !4, line: 3461, baseType: !1636)
!1636 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !4, line: 3461, flags: DIFlagFwdDecl)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1586, file: !4, line: 3549, baseType: !1638, size: 64, align: 64, offset: 1152)
!1638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1639, size: 64, align: 64)
!1639 = !DISubroutineType(types: !1640)
!1640 = !{null, !1621}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1586, file: !4, line: 3551, baseType: !1623, size: 64, align: 64, offset: 1216)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1586, file: !4, line: 3552, baseType: !1643, size: 64, align: 64, offset: 1280)
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1644, size: 64, align: 64)
!1644 = !DISubroutineType(types: !1645)
!1645 = !{!1014, !1576, !1017, !1014, !1646}
!1646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1647, size: 64, align: 64)
!1647 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1648)
!1648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !4, line: 3920, size: 256, align: 64, elements: !1649)
!1649 = !{!1650, !1651, !1652, !1653, !1654, !1679}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1648, file: !4, line: 3921, baseType: !1012, size: 16, align: 16)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1648, file: !4, line: 3922, baseType: !1004, size: 32, align: 32, offset: 32)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1648, file: !4, line: 3923, baseType: !1004, size: 32, align: 32, offset: 64)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1648, file: !4, line: 3924, baseType: !1006, size: 32, align: 32, offset: 96)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1648, file: !4, line: 3925, baseType: !1655, size: 64, align: 64, offset: 128)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 64, align: 64)
!1656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 64, align: 64)
!1657 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !4, line: 3918, baseType: !1658)
!1658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !4, line: 3885, size: 1600, align: 64, elements: !1659)
!1659 = !{!1660, !1661, !1662, !1663, !1664, !1665, !1671, !1673, !1675, !1676, !1677, !1678}
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1658, file: !4, line: 3886, baseType: !1014, size: 32, align: 32)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1658, file: !4, line: 3887, baseType: !1014, size: 32, align: 32, offset: 32)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1658, file: !4, line: 3888, baseType: !1014, size: 32, align: 32, offset: 64)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1658, file: !4, line: 3889, baseType: !1014, size: 32, align: 32, offset: 96)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1658, file: !4, line: 3890, baseType: !1014, size: 32, align: 32, offset: 128)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1658, file: !4, line: 3897, baseType: !1666, size: 768, align: 64, offset: 192)
!1666 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !4, line: 3858, baseType: !1667)
!1667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !4, line: 3853, size: 768, align: 64, elements: !1668)
!1668 = !{!1669, !1670}
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1667, file: !4, line: 3855, baseType: !1399, size: 512, align: 64)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1667, file: !4, line: 3857, baseType: !1403, size: 256, align: 32, offset: 512)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1658, file: !4, line: 3903, baseType: !1672, size: 256, align: 64, offset: 960)
!1672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 256, align: 64, elements: !1120)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1658, file: !4, line: 3904, baseType: !1674, size: 128, align: 32, offset: 1216)
!1674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1014, size: 128, align: 32, elements: !1120)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1658, file: !4, line: 3906, baseType: !883, size: 32, align: 32, offset: 1344)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1658, file: !4, line: 3908, baseType: !1096, size: 64, align: 64, offset: 1408)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1658, file: !4, line: 3915, baseType: !1096, size: 64, align: 64, offset: 1472)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1658, file: !4, line: 3917, baseType: !1014, size: 32, align: 32, offset: 1536)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1648, file: !4, line: 3926, baseType: !1015, size: 64, align: 64, offset: 192)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1586, file: !4, line: 3564, baseType: !1681, size: 64, align: 64, offset: 1344)
!1681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1682, size: 64, align: 64)
!1682 = !DISubroutineType(types: !1683)
!1683 = !{!1014, !1576, !1335, !1684, !1150}
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 64, align: 64)
!1685 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1395)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1586, file: !4, line: 3566, baseType: !1687, size: 64, align: 64, offset: 1408)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 64, align: 64)
!1688 = !DISubroutineType(types: !1689)
!1689 = !{!1014, !1576, !1020, !1150, !1335}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1586, file: !4, line: 3567, baseType: !1623, size: 64, align: 64, offset: 1472)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1586, file: !4, line: 3576, baseType: !1692, size: 64, align: 64, offset: 1536)
!1692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1693, size: 64, align: 64)
!1693 = !DISubroutineType(types: !1694)
!1694 = !{!1014, !1576, !1684}
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1586, file: !4, line: 3577, baseType: !1696, size: 64, align: 64, offset: 1600)
!1696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1697, size: 64, align: 64)
!1697 = !DISubroutineType(types: !1698)
!1698 = !{!1014, !1576, !1335}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1586, file: !4, line: 3584, baseType: !1700, size: 64, align: 64, offset: 1664)
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 64, align: 64)
!1701 = !DISubroutineType(types: !1702)
!1702 = !{!1014, !1576, !1394}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1586, file: !4, line: 3589, baseType: !1704, size: 64, align: 64, offset: 1728)
!1704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1705, size: 64, align: 64)
!1705 = !DISubroutineType(types: !1706)
!1706 = !{null, !1576}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1586, file: !4, line: 3594, baseType: !1014, size: 32, align: 32, offset: 1792)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1586, file: !4, line: 3600, baseType: !1199, size: 64, align: 64, offset: 1856)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1586, file: !4, line: 3609, baseType: !1710, size: 64, align: 64, offset: 1920)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 64, align: 64)
!1711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1712, size: 64, align: 64)
!1712 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1713)
!1713 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !4, line: 3609, flags: DIFlagFwdDecl)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1578, file: !4, line: 1566, baseType: !3, size: 32, align: 32, offset: 192)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1578, file: !4, line: 1581, baseType: !1006, size: 32, align: 32, offset: 224)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1578, file: !4, line: 1583, baseType: !1020, size: 64, align: 64, offset: 256)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1578, file: !4, line: 1591, baseType: !1718, size: 64, align: 64, offset: 320)
!1718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 64, align: 64)
!1719 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !4, line: 1532, flags: DIFlagFwdDecl)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1578, file: !4, line: 1598, baseType: !1020, size: 64, align: 64, offset: 384)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1578, file: !4, line: 1606, baseType: !1015, size: 64, align: 64, offset: 448)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1578, file: !4, line: 1614, baseType: !1014, size: 32, align: 32, offset: 512)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1578, file: !4, line: 1622, baseType: !1014, size: 32, align: 32, offset: 544)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1578, file: !4, line: 1628, baseType: !1014, size: 32, align: 32, offset: 576)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1578, file: !4, line: 1636, baseType: !1014, size: 32, align: 32, offset: 608)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1578, file: !4, line: 1643, baseType: !1014, size: 32, align: 32, offset: 640)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1578, file: !4, line: 1657, baseType: !1017, size: 64, align: 64, offset: 704)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1578, file: !4, line: 1658, baseType: !1014, size: 32, align: 32, offset: 768)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1578, file: !4, line: 1679, baseType: !1035, size: 64, align: 32, offset: 800)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1578, file: !4, line: 1688, baseType: !1014, size: 32, align: 32, offset: 864)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1578, file: !4, line: 1712, baseType: !1014, size: 32, align: 32, offset: 896)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1578, file: !4, line: 1729, baseType: !1014, size: 32, align: 32, offset: 928)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1578, file: !4, line: 1729, baseType: !1014, size: 32, align: 32, offset: 960)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1578, file: !4, line: 1744, baseType: !1014, size: 32, align: 32, offset: 992)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1578, file: !4, line: 1744, baseType: !1014, size: 32, align: 32, offset: 1024)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1578, file: !4, line: 1751, baseType: !1014, size: 32, align: 32, offset: 1056)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1578, file: !4, line: 1766, baseType: !667, size: 32, align: 32, offset: 1088)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1578, file: !4, line: 1791, baseType: !1739, size: 64, align: 64, offset: 1152)
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 64, align: 64)
!1740 = !DISubroutineType(types: !1741)
!1741 = !{null, !1742, !1684, !1150, !1014, !1014, !1014}
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 64, align: 64)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1578, file: !4, line: 1808, baseType: !1744, size: 64, align: 64, offset: 1216)
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 64, align: 64)
!1745 = !DISubroutineType(types: !1746)
!1746 = !{!667, !1742, !1597}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1578, file: !4, line: 1816, baseType: !1014, size: 32, align: 32, offset: 1280)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1578, file: !4, line: 1825, baseType: !1749, size: 32, align: 32, offset: 1312)
!1749 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1578, file: !4, line: 1830, baseType: !1014, size: 32, align: 32, offset: 1344)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1578, file: !4, line: 1838, baseType: !1749, size: 32, align: 32, offset: 1376)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1578, file: !4, line: 1846, baseType: !1014, size: 32, align: 32, offset: 1408)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1578, file: !4, line: 1851, baseType: !1014, size: 32, align: 32, offset: 1440)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1578, file: !4, line: 1861, baseType: !1749, size: 32, align: 32, offset: 1472)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1578, file: !4, line: 1868, baseType: !1749, size: 32, align: 32, offset: 1504)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1578, file: !4, line: 1875, baseType: !1749, size: 32, align: 32, offset: 1536)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1578, file: !4, line: 1882, baseType: !1749, size: 32, align: 32, offset: 1568)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1578, file: !4, line: 1889, baseType: !1749, size: 32, align: 32, offset: 1600)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1578, file: !4, line: 1896, baseType: !1749, size: 32, align: 32, offset: 1632)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1578, file: !4, line: 1903, baseType: !1749, size: 32, align: 32, offset: 1664)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1578, file: !4, line: 1910, baseType: !1014, size: 32, align: 32, offset: 1696)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1578, file: !4, line: 1915, baseType: !1014, size: 32, align: 32, offset: 1728)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1578, file: !4, line: 1926, baseType: !1150, size: 64, align: 64, offset: 1792)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1578, file: !4, line: 1935, baseType: !1035, size: 64, align: 32, offset: 1856)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1578, file: !4, line: 1942, baseType: !1014, size: 32, align: 32, offset: 1920)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1578, file: !4, line: 1948, baseType: !1014, size: 32, align: 32, offset: 1952)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1578, file: !4, line: 1954, baseType: !1014, size: 32, align: 32, offset: 1984)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1578, file: !4, line: 1960, baseType: !1014, size: 32, align: 32, offset: 2016)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1578, file: !4, line: 1984, baseType: !1014, size: 32, align: 32, offset: 2048)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1578, file: !4, line: 1991, baseType: !1014, size: 32, align: 32, offset: 2080)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1578, file: !4, line: 1996, baseType: !1014, size: 32, align: 32, offset: 2112)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1578, file: !4, line: 2004, baseType: !1014, size: 32, align: 32, offset: 2144)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1578, file: !4, line: 2011, baseType: !1014, size: 32, align: 32, offset: 2176)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1578, file: !4, line: 2018, baseType: !1014, size: 32, align: 32, offset: 2208)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1578, file: !4, line: 2027, baseType: !1014, size: 32, align: 32, offset: 2240)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1578, file: !4, line: 2034, baseType: !1014, size: 32, align: 32, offset: 2272)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1578, file: !4, line: 2044, baseType: !1014, size: 32, align: 32, offset: 2304)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1578, file: !4, line: 2054, baseType: !1779, size: 64, align: 64, offset: 2368)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64, align: 64)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1578, file: !4, line: 2061, baseType: !1779, size: 64, align: 64, offset: 2432)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1578, file: !4, line: 2066, baseType: !1014, size: 32, align: 32, offset: 2496)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1578, file: !4, line: 2070, baseType: !1014, size: 32, align: 32, offset: 2528)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1578, file: !4, line: 2078, baseType: !1014, size: 32, align: 32, offset: 2560)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1578, file: !4, line: 2085, baseType: !1014, size: 32, align: 32, offset: 2592)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1578, file: !4, line: 2092, baseType: !1014, size: 32, align: 32, offset: 2624)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1578, file: !4, line: 2099, baseType: !1014, size: 32, align: 32, offset: 2656)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1578, file: !4, line: 2106, baseType: !1014, size: 32, align: 32, offset: 2688)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1578, file: !4, line: 2113, baseType: !1014, size: 32, align: 32, offset: 2720)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1578, file: !4, line: 2120, baseType: !1014, size: 32, align: 32, offset: 2752)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1578, file: !4, line: 2125, baseType: !1014, size: 32, align: 32, offset: 2784)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1578, file: !4, line: 2133, baseType: !1014, size: 32, align: 32, offset: 2816)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1578, file: !4, line: 2140, baseType: !1014, size: 32, align: 32, offset: 2848)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1578, file: !4, line: 2145, baseType: !1014, size: 32, align: 32, offset: 2880)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1578, file: !4, line: 2153, baseType: !1014, size: 32, align: 32, offset: 2912)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1578, file: !4, line: 2158, baseType: !1014, size: 32, align: 32, offset: 2944)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1578, file: !4, line: 2166, baseType: !578, size: 32, align: 32, offset: 2976)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1578, file: !4, line: 2173, baseType: !596, size: 32, align: 32, offset: 3008)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1578, file: !4, line: 2180, baseType: !620, size: 32, align: 32, offset: 3040)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1578, file: !4, line: 2187, baseType: !571, size: 32, align: 32, offset: 3072)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1578, file: !4, line: 2194, baseType: !639, size: 32, align: 32, offset: 3104)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1578, file: !4, line: 2203, baseType: !1014, size: 32, align: 32, offset: 3136)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1578, file: !4, line: 2209, baseType: !889, size: 32, align: 32, offset: 3168)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1578, file: !4, line: 2212, baseType: !1014, size: 32, align: 32, offset: 3200)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1578, file: !4, line: 2213, baseType: !1014, size: 32, align: 32, offset: 3232)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1578, file: !4, line: 2220, baseType: !866, size: 32, align: 32, offset: 3264)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1578, file: !4, line: 2232, baseType: !1014, size: 32, align: 32, offset: 3296)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1578, file: !4, line: 2243, baseType: !1014, size: 32, align: 32, offset: 3328)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1578, file: !4, line: 2249, baseType: !1014, size: 32, align: 32, offset: 3360)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1578, file: !4, line: 2256, baseType: !1014, size: 32, align: 32, offset: 3392)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1578, file: !4, line: 2263, baseType: !1125, size: 64, align: 64, offset: 3456)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1578, file: !4, line: 2270, baseType: !1125, size: 64, align: 64, offset: 3520)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1578, file: !4, line: 2277, baseType: !897, size: 32, align: 32, offset: 3584)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1578, file: !4, line: 2285, baseType: !866, size: 32, align: 32, offset: 3616)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1578, file: !4, line: 2367, baseType: !1815, size: 64, align: 64, offset: 3648)
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1816, size: 64, align: 64)
!1816 = !DISubroutineType(types: !1817)
!1817 = !{!1014, !1742, !1394, !1014}
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1578, file: !4, line: 2383, baseType: !1014, size: 32, align: 32, offset: 3712)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1578, file: !4, line: 2386, baseType: !1749, size: 32, align: 32, offset: 3744)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1578, file: !4, line: 2387, baseType: !1749, size: 32, align: 32, offset: 3776)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1578, file: !4, line: 2394, baseType: !1014, size: 32, align: 32, offset: 3808)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1578, file: !4, line: 2401, baseType: !1014, size: 32, align: 32, offset: 3840)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1578, file: !4, line: 2408, baseType: !1014, size: 32, align: 32, offset: 3872)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1578, file: !4, line: 2415, baseType: !1014, size: 32, align: 32, offset: 3904)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1578, file: !4, line: 2422, baseType: !1014, size: 32, align: 32, offset: 3936)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1578, file: !4, line: 2423, baseType: !1827, size: 64, align: 64, offset: 3968)
!1827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1828, size: 64, align: 64)
!1828 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !4, line: 831, baseType: !1829)
!1829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !4, line: 826, size: 128, align: 32, elements: !1830)
!1830 = !{!1831, !1832, !1833, !1834}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1829, file: !4, line: 827, baseType: !1014, size: 32, align: 32)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1829, file: !4, line: 828, baseType: !1014, size: 32, align: 32, offset: 32)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1829, file: !4, line: 829, baseType: !1014, size: 32, align: 32, offset: 64)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1829, file: !4, line: 830, baseType: !1749, size: 32, align: 32, offset: 96)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1578, file: !4, line: 2430, baseType: !1015, size: 64, align: 64, offset: 4032)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1578, file: !4, line: 2437, baseType: !1015, size: 64, align: 64, offset: 4096)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1578, file: !4, line: 2444, baseType: !1749, size: 32, align: 32, offset: 4160)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1578, file: !4, line: 2451, baseType: !1749, size: 32, align: 32, offset: 4192)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1578, file: !4, line: 2458, baseType: !1014, size: 32, align: 32, offset: 4224)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1578, file: !4, line: 2469, baseType: !1014, size: 32, align: 32, offset: 4256)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1578, file: !4, line: 2475, baseType: !1014, size: 32, align: 32, offset: 4288)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1578, file: !4, line: 2481, baseType: !1014, size: 32, align: 32, offset: 4320)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1578, file: !4, line: 2485, baseType: !1014, size: 32, align: 32, offset: 4352)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1578, file: !4, line: 2489, baseType: !1014, size: 32, align: 32, offset: 4384)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1578, file: !4, line: 2493, baseType: !1014, size: 32, align: 32, offset: 4416)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1578, file: !4, line: 2501, baseType: !1014, size: 32, align: 32, offset: 4448)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1578, file: !4, line: 2506, baseType: !1014, size: 32, align: 32, offset: 4480)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1578, file: !4, line: 2510, baseType: !1014, size: 32, align: 32, offset: 4512)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1578, file: !4, line: 2514, baseType: !1015, size: 64, align: 64, offset: 4544)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1578, file: !4, line: 2528, baseType: !1851, size: 64, align: 64, offset: 4608)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64, align: 64)
!1852 = !DISubroutineType(types: !1853)
!1853 = !{null, !1742, !1020, !1014, !1014}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1578, file: !4, line: 2534, baseType: !1014, size: 32, align: 32, offset: 4672)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1578, file: !4, line: 2545, baseType: !1014, size: 32, align: 32, offset: 4704)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1578, file: !4, line: 2547, baseType: !1014, size: 32, align: 32, offset: 4736)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1578, file: !4, line: 2549, baseType: !1014, size: 32, align: 32, offset: 4768)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1578, file: !4, line: 2551, baseType: !1014, size: 32, align: 32, offset: 4800)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1578, file: !4, line: 2553, baseType: !1014, size: 32, align: 32, offset: 4832)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1578, file: !4, line: 2555, baseType: !1014, size: 32, align: 32, offset: 4864)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1578, file: !4, line: 2557, baseType: !1014, size: 32, align: 32, offset: 4896)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1578, file: !4, line: 2559, baseType: !1014, size: 32, align: 32, offset: 4928)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1578, file: !4, line: 2563, baseType: !1014, size: 32, align: 32, offset: 4960)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1578, file: !4, line: 2571, baseType: !1096, size: 64, align: 64, offset: 4992)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1578, file: !4, line: 2579, baseType: !1096, size: 64, align: 64, offset: 5056)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1578, file: !4, line: 2586, baseType: !1014, size: 32, align: 32, offset: 5120)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1578, file: !4, line: 2615, baseType: !1014, size: 32, align: 32, offset: 5152)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1578, file: !4, line: 2627, baseType: !1014, size: 32, align: 32, offset: 5184)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1578, file: !4, line: 2637, baseType: !1014, size: 32, align: 32, offset: 5216)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1578, file: !4, line: 2681, baseType: !1014, size: 32, align: 32, offset: 5248)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1578, file: !4, line: 2709, baseType: !1015, size: 64, align: 64, offset: 5312)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1578, file: !4, line: 2716, baseType: !1873, size: 64, align: 64, offset: 5376)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 64, align: 64)
!1874 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1875)
!1875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !4, line: 3636, size: 896, align: 64, elements: !1876)
!1876 = !{!1877, !1878, !1879, !1880, !1881, !1882, !1883, !1887, !1891, !1892, !1893, !1894, !1900, !1901, !1902, !1903, !1904}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1875, file: !4, line: 3642, baseType: !1199, size: 64, align: 64)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1875, file: !4, line: 3649, baseType: !658, size: 32, align: 32, offset: 64)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1875, file: !4, line: 3656, baseType: !3, size: 32, align: 32, offset: 96)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1875, file: !4, line: 3663, baseType: !667, size: 32, align: 32, offset: 128)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1875, file: !4, line: 3669, baseType: !1014, size: 32, align: 32, offset: 160)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1875, file: !4, line: 3682, baseType: !1700, size: 64, align: 64, offset: 192)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1875, file: !4, line: 3698, baseType: !1884, size: 64, align: 64, offset: 256)
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 64, align: 64)
!1885 = !DISubroutineType(types: !1886)
!1886 = !{!1014, !1576, !1530, !1004}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1875, file: !4, line: 3712, baseType: !1888, size: 64, align: 64, offset: 320)
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 64, align: 64)
!1889 = !DISubroutineType(types: !1890)
!1890 = !{!1014, !1576, !1014, !1530, !1004}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1875, file: !4, line: 3726, baseType: !1884, size: 64, align: 64, offset: 384)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1875, file: !4, line: 3737, baseType: !1623, size: 64, align: 64, offset: 448)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1875, file: !4, line: 3746, baseType: !1014, size: 32, align: 32, offset: 512)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1875, file: !4, line: 3757, baseType: !1895, size: 64, align: 64, offset: 576)
!1895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1896, size: 64, align: 64)
!1896 = !DISubroutineType(types: !1897)
!1897 = !{null, !1898}
!1898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 64, align: 64)
!1899 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !4, line: 3617, flags: DIFlagFwdDecl)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1875, file: !4, line: 3766, baseType: !1623, size: 64, align: 64, offset: 640)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1875, file: !4, line: 3774, baseType: !1623, size: 64, align: 64, offset: 704)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1875, file: !4, line: 3780, baseType: !1014, size: 32, align: 32, offset: 768)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1875, file: !4, line: 3785, baseType: !1014, size: 32, align: 32, offset: 800)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1875, file: !4, line: 3795, baseType: !1905, size: 64, align: 64, offset: 832)
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 64, align: 64)
!1906 = !DISubroutineType(types: !1907)
!1907 = !{!1014, !1576, !1340}
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1578, file: !4, line: 2728, baseType: !1020, size: 64, align: 64, offset: 5440)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1578, file: !4, line: 2735, baseType: !1421, size: 512, align: 64, offset: 5504)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1578, file: !4, line: 2742, baseType: !1014, size: 32, align: 32, offset: 6016)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1578, file: !4, line: 2755, baseType: !1014, size: 32, align: 32, offset: 6048)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1578, file: !4, line: 2776, baseType: !1014, size: 32, align: 32, offset: 6080)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1578, file: !4, line: 2783, baseType: !1014, size: 32, align: 32, offset: 6112)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1578, file: !4, line: 2791, baseType: !1014, size: 32, align: 32, offset: 6144)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1578, file: !4, line: 2802, baseType: !1394, size: 64, align: 64, offset: 6208)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1578, file: !4, line: 2811, baseType: !1014, size: 32, align: 32, offset: 6272)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1578, file: !4, line: 2821, baseType: !1014, size: 32, align: 32, offset: 6304)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1578, file: !4, line: 2830, baseType: !1014, size: 32, align: 32, offset: 6336)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1578, file: !4, line: 2840, baseType: !1014, size: 32, align: 32, offset: 6368)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1578, file: !4, line: 2851, baseType: !1921, size: 64, align: 64, offset: 6400)
!1921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 64, align: 64)
!1922 = !DISubroutineType(types: !1923)
!1923 = !{!1014, !1742, !1924, !1020, !1150, !1014, !1014}
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 64, align: 64)
!1925 = !DISubroutineType(types: !1926)
!1926 = !{!1014, !1742, !1020}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1578, file: !4, line: 2871, baseType: !1928, size: 64, align: 64, offset: 6464)
!1928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1929, size: 64, align: 64)
!1929 = !DISubroutineType(types: !1930)
!1930 = !{!1014, !1742, !1931, !1020, !1150, !1014}
!1931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 64, align: 64)
!1932 = !DISubroutineType(types: !1933)
!1933 = !{!1014, !1742, !1020, !1014, !1014}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1578, file: !4, line: 2878, baseType: !1014, size: 32, align: 32, offset: 6528)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1578, file: !4, line: 2885, baseType: !1014, size: 32, align: 32, offset: 6560)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1578, file: !4, line: 3005, baseType: !1014, size: 32, align: 32, offset: 6592)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1578, file: !4, line: 3013, baseType: !909, size: 32, align: 32, offset: 6624)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1578, file: !4, line: 3020, baseType: !909, size: 32, align: 32, offset: 6656)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1578, file: !4, line: 3027, baseType: !909, size: 32, align: 32, offset: 6688)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1578, file: !4, line: 3037, baseType: !1017, size: 64, align: 64, offset: 6720)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1578, file: !4, line: 3038, baseType: !1014, size: 32, align: 32, offset: 6784)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1578, file: !4, line: 3050, baseType: !1125, size: 64, align: 64, offset: 6848)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1578, file: !4, line: 3065, baseType: !1014, size: 32, align: 32, offset: 6912)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1578, file: !4, line: 3083, baseType: !1014, size: 32, align: 32, offset: 6944)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1578, file: !4, line: 3092, baseType: !1035, size: 64, align: 32, offset: 6976)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1578, file: !4, line: 3099, baseType: !667, size: 32, align: 32, offset: 7040)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1578, file: !4, line: 3106, baseType: !1035, size: 64, align: 32, offset: 7072)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1578, file: !4, line: 3113, baseType: !1949, size: 64, align: 64, offset: 7168)
!1949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1950, size: 64, align: 64)
!1950 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1951)
!1951 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !4, line: 740, baseType: !1952)
!1952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !4, line: 712, size: 384, align: 64, elements: !1953)
!1953 = !{!1954, !1955, !1956, !1957, !1958, !1959, !1962}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1952, file: !4, line: 713, baseType: !3, size: 32, align: 32)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1952, file: !4, line: 714, baseType: !658, size: 32, align: 32, offset: 32)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1952, file: !4, line: 720, baseType: !1199, size: 64, align: 64, offset: 64)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1952, file: !4, line: 724, baseType: !1199, size: 64, align: 64, offset: 128)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1952, file: !4, line: 728, baseType: !1014, size: 32, align: 32, offset: 192)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1952, file: !4, line: 734, baseType: !1960, size: 64, align: 64, offset: 256)
!1960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 64, align: 64)
!1961 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1199)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1952, file: !4, line: 739, baseType: !1963, size: 64, align: 64, offset: 320)
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 64, align: 64)
!1964 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1614)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1578, file: !4, line: 3129, baseType: !1015, size: 64, align: 64, offset: 7232)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1578, file: !4, line: 3130, baseType: !1015, size: 64, align: 64, offset: 7296)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1578, file: !4, line: 3131, baseType: !1015, size: 64, align: 64, offset: 7360)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1578, file: !4, line: 3132, baseType: !1015, size: 64, align: 64, offset: 7424)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1578, file: !4, line: 3139, baseType: !1096, size: 64, align: 64, offset: 7488)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1578, file: !4, line: 3147, baseType: !1014, size: 32, align: 32, offset: 7552)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1578, file: !4, line: 3165, baseType: !1014, size: 32, align: 32, offset: 7584)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1578, file: !4, line: 3172, baseType: !1014, size: 32, align: 32, offset: 7616)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1578, file: !4, line: 3180, baseType: !1014, size: 32, align: 32, offset: 7648)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1578, file: !4, line: 3191, baseType: !1779, size: 64, align: 64, offset: 7680)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1578, file: !4, line: 3199, baseType: !1017, size: 64, align: 64, offset: 7744)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1578, file: !4, line: 3207, baseType: !1096, size: 64, align: 64, offset: 7808)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1578, file: !4, line: 3214, baseType: !1006, size: 32, align: 32, offset: 7872)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1578, file: !4, line: 3224, baseType: !1358, size: 64, align: 64, offset: 7936)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1578, file: !4, line: 3225, baseType: !1014, size: 32, align: 32, offset: 8000)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1578, file: !4, line: 3249, baseType: !1340, size: 64, align: 64, offset: 8064)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1578, file: !4, line: 3256, baseType: !1014, size: 32, align: 32, offset: 8128)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1578, file: !4, line: 3271, baseType: !1014, size: 32, align: 32, offset: 8160)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1578, file: !4, line: 3279, baseType: !1015, size: 64, align: 64, offset: 8192)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1578, file: !4, line: 3301, baseType: !1340, size: 64, align: 64, offset: 8256)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1578, file: !4, line: 3310, baseType: !1014, size: 32, align: 32, offset: 8320)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1578, file: !4, line: 3337, baseType: !1014, size: 32, align: 32, offset: 8352)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1578, file: !4, line: 3351, baseType: !1014, size: 32, align: 32, offset: 8384)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1578, file: !4, line: 3359, baseType: !1014, size: 32, align: 32, offset: 8416)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1571, file: !919, line: 880, baseType: !1020, size: 64, align: 64, offset: 128)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1571, file: !919, line: 894, baseType: !1035, size: 64, align: 32, offset: 192)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1571, file: !919, line: 904, baseType: !1015, size: 64, align: 64, offset: 256)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1571, file: !919, line: 914, baseType: !1015, size: 64, align: 64, offset: 320)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "nb_frames", scope: !1571, file: !919, line: 916, baseType: !1015, size: 64, align: 64, offset: 384)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "disposition", scope: !1571, file: !919, line: 918, baseType: !1014, size: 32, align: 32, offset: 448)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "discard", scope: !1571, file: !919, line: 920, baseType: !909, size: 32, align: 32, offset: 480)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1571, file: !919, line: 927, baseType: !1035, size: 64, align: 32, offset: 512)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1571, file: !919, line: 929, baseType: !1444, size: 64, align: 64, offset: 576)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "avg_frame_rate", scope: !1571, file: !919, line: 938, baseType: !1035, size: 64, align: 32, offset: 640)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "attached_pic", scope: !1571, file: !919, line: 947, baseType: !1336, size: 704, align: 64, offset: 704)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1571, file: !919, line: 967, baseType: !1358, size: 64, align: 64, offset: 1408)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1571, file: !919, line: 971, baseType: !1014, size: 32, align: 32, offset: 1472)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !1571, file: !919, line: 978, baseType: !1014, size: 32, align: 32, offset: 1504)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "r_frame_rate", scope: !1571, file: !919, line: 989, baseType: !1035, size: 64, align: 32, offset: 1536)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "recommended_encoder_configuration", scope: !1571, file: !919, line: 1000, baseType: !1096, size: 64, align: 64, offset: 1600)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "codecpar", scope: !1571, file: !919, line: 1012, baseType: !2006, size: 64, align: 64, offset: 1664)
!2006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2007, size: 64, align: 64)
!2007 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !4, line: 4085, baseType: !2008)
!2008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !4, line: 3936, size: 1152, align: 64, elements: !2009)
!2009 = !{!2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !2008, file: !4, line: 3940, baseType: !658, size: 32, align: 32)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !2008, file: !4, line: 3944, baseType: !3, size: 32, align: 32, offset: 32)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !2008, file: !4, line: 3948, baseType: !1004, size: 32, align: 32, offset: 64)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !2008, file: !4, line: 3958, baseType: !1017, size: 64, align: 64, offset: 128)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !2008, file: !4, line: 3962, baseType: !1014, size: 32, align: 32, offset: 192)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !2008, file: !4, line: 3968, baseType: !1014, size: 32, align: 32, offset: 224)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !2008, file: !4, line: 3973, baseType: !1015, size: 64, align: 64, offset: 256)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !2008, file: !4, line: 3986, baseType: !1014, size: 32, align: 32, offset: 320)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !2008, file: !4, line: 3999, baseType: !1014, size: 32, align: 32, offset: 352)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !2008, file: !4, line: 4004, baseType: !1014, size: 32, align: 32, offset: 384)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2008, file: !4, line: 4005, baseType: !1014, size: 32, align: 32, offset: 416)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2008, file: !4, line: 4010, baseType: !1014, size: 32, align: 32, offset: 448)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2008, file: !4, line: 4011, baseType: !1014, size: 32, align: 32, offset: 480)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !2008, file: !4, line: 4020, baseType: !1035, size: 64, align: 32, offset: 512)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !2008, file: !4, line: 4025, baseType: !889, size: 32, align: 32, offset: 576)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !2008, file: !4, line: 4030, baseType: !571, size: 32, align: 32, offset: 608)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !2008, file: !4, line: 4031, baseType: !578, size: 32, align: 32, offset: 640)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !2008, file: !4, line: 4032, baseType: !596, size: 32, align: 32, offset: 672)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !2008, file: !4, line: 4033, baseType: !620, size: 32, align: 32, offset: 704)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !2008, file: !4, line: 4034, baseType: !639, size: 32, align: 32, offset: 736)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !2008, file: !4, line: 4039, baseType: !1014, size: 32, align: 32, offset: 768)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !2008, file: !4, line: 4046, baseType: !1125, size: 64, align: 64, offset: 832)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2008, file: !4, line: 4050, baseType: !1014, size: 32, align: 32, offset: 896)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !2008, file: !4, line: 4054, baseType: !1014, size: 32, align: 32, offset: 928)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !2008, file: !4, line: 4061, baseType: !1014, size: 32, align: 32, offset: 960)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !2008, file: !4, line: 4065, baseType: !1014, size: 32, align: 32, offset: 992)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !2008, file: !4, line: 4073, baseType: !1014, size: 32, align: 32, offset: 1024)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !2008, file: !4, line: 4080, baseType: !1014, size: 32, align: 32, offset: 1056)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !2008, file: !4, line: 4084, baseType: !1014, size: 32, align: 32, offset: 1088)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1571, file: !919, line: 1055, baseType: !2040, size: 64, align: 64, offset: 1728)
!2040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 64, align: 64)
!2041 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1571, file: !919, line: 1028, size: 832, align: 64, elements: !2042)
!2042 = !{!2043, !2044, !2045, !2046, !2047, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "last_dts", scope: !2041, file: !919, line: 1029, baseType: !1015, size: 64, align: 64)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "duration_gcd", scope: !2041, file: !919, line: 1030, baseType: !1015, size: 64, align: 64, offset: 64)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "duration_count", scope: !2041, file: !919, line: 1031, baseType: !1014, size: 32, align: 32, offset: 128)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "rfps_duration_sum", scope: !2041, file: !919, line: 1032, baseType: !1015, size: 64, align: 64, offset: 192)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "duration_error", scope: !2041, file: !919, line: 1033, baseType: !2048, size: 64, align: 64, offset: 256)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 64, align: 64)
!2049 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1239, size: 51072, align: 64, elements: !2050)
!2050 = !{!1048, !2051}
!2051 = !DISubrange(count: 399)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "codec_info_duration", scope: !2041, file: !919, line: 1034, baseType: !1015, size: 64, align: 64, offset: 320)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "codec_info_duration_fields", scope: !2041, file: !919, line: 1035, baseType: !1015, size: 64, align: 64, offset: 384)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "frame_delay_evidence", scope: !2041, file: !919, line: 1036, baseType: !1014, size: 32, align: 32, offset: 448)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "found_decoder", scope: !2041, file: !919, line: 1043, baseType: !1014, size: 32, align: 32, offset: 480)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "last_duration", scope: !2041, file: !919, line: 1045, baseType: !1015, size: 64, align: 64, offset: 512)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "fps_first_dts", scope: !2041, file: !919, line: 1050, baseType: !1015, size: 64, align: 64, offset: 576)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "fps_first_dts_idx", scope: !2041, file: !919, line: 1051, baseType: !1014, size: 32, align: 32, offset: 640)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "fps_last_dts", scope: !2041, file: !919, line: 1052, baseType: !1015, size: 64, align: 64, offset: 704)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "fps_last_dts_idx", scope: !2041, file: !919, line: 1053, baseType: !1014, size: 32, align: 32, offset: 768)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_bits", scope: !1571, file: !919, line: 1057, baseType: !1014, size: 32, align: 32, offset: 1792)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "first_dts", scope: !1571, file: !919, line: 1067, baseType: !1015, size: 64, align: 64, offset: 1856)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "cur_dts", scope: !1571, file: !919, line: 1068, baseType: !1015, size: 64, align: 64, offset: 1920)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "last_IP_pts", scope: !1571, file: !919, line: 1069, baseType: !1015, size: 64, align: 64, offset: 1984)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "last_IP_duration", scope: !1571, file: !919, line: 1070, baseType: !1014, size: 32, align: 32, offset: 2048)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "probe_packets", scope: !1571, file: !919, line: 1075, baseType: !1014, size: 32, align: 32, offset: 2080)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "codec_info_nb_frames", scope: !1571, file: !919, line: 1080, baseType: !1014, size: 32, align: 32, offset: 2112)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "need_parsing", scope: !1571, file: !919, line: 1083, baseType: !918, size: 32, align: 32, offset: 2144)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "parser", scope: !1571, file: !919, line: 1084, baseType: !2070, size: 64, align: 64, offset: 2176)
!2070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2071, size: 64, align: 64)
!2071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParserContext", file: !4, line: 5092, size: 2816, align: 64, elements: !2072)
!2072 = !{!2073, !2074, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137}
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !2071, file: !4, line: 5093, baseType: !1020, size: 64, align: 64)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "parser", scope: !2071, file: !4, line: 5094, baseType: !2075, size: 64, align: 64, offset: 64)
!2075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2076, size: 64, align: 64)
!2076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParser", file: !4, line: 5259, size: 512, align: 64, elements: !2077)
!2077 = !{!2078, !2082, !2083, !2089, !2094, !2098, !2102}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !2076, file: !4, line: 5260, baseType: !2079, size: 160, align: 32)
!2079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1014, size: 160, align: 32, elements: !2080)
!2080 = !{!2081}
!2081 = !DISubrange(count: 5)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !2076, file: !4, line: 5261, baseType: !1014, size: 32, align: 32, offset: 160)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "parser_init", scope: !2076, file: !4, line: 5262, baseType: !2084, size: 64, align: 64, offset: 192)
!2084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2085, size: 64, align: 64)
!2085 = !DISubroutineType(types: !2086)
!2086 = !{!1014, !2087}
!2087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2088, size: 64, align: 64)
!2088 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParserContext", file: !4, line: 5257, baseType: !2071)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "parser_parse", scope: !2076, file: !4, line: 5265, baseType: !2090, size: 64, align: 64, offset: 256)
!2090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2091, size: 64, align: 64)
!2091 = !DISubroutineType(types: !2092)
!2092 = !{!1014, !2087, !1576, !2093, !1150, !1530, !1014}
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 64, align: 64)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "parser_close", scope: !2076, file: !4, line: 5269, baseType: !2095, size: 64, align: 64, offset: 320)
!2095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2096, size: 64, align: 64)
!2096 = !DISubroutineType(types: !2097)
!2097 = !{null, !2087}
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !2076, file: !4, line: 5270, baseType: !2099, size: 64, align: 64, offset: 384)
!2099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2100, size: 64, align: 64)
!2100 = !DISubroutineType(types: !2101)
!2101 = !{!1014, !1576, !1530, !1014}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2076, file: !4, line: 5271, baseType: !2075, size: 64, align: 64, offset: 448)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !2071, file: !4, line: 5095, baseType: !1015, size: 64, align: 64, offset: 128)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "cur_offset", scope: !2071, file: !4, line: 5096, baseType: !1015, size: 64, align: 64, offset: 192)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "next_frame_offset", scope: !2071, file: !4, line: 5098, baseType: !1015, size: 64, align: 64, offset: 256)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !2071, file: !4, line: 5100, baseType: !1014, size: 32, align: 32, offset: 320)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !2071, file: !4, line: 5110, baseType: !1014, size: 32, align: 32, offset: 352)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !2071, file: !4, line: 5111, baseType: !1015, size: 64, align: 64, offset: 384)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !2071, file: !4, line: 5112, baseType: !1015, size: 64, align: 64, offset: 448)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "last_pts", scope: !2071, file: !4, line: 5115, baseType: !1015, size: 64, align: 64, offset: 512)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "last_dts", scope: !2071, file: !4, line: 5116, baseType: !1015, size: 64, align: 64, offset: 576)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "fetch_timestamp", scope: !2071, file: !4, line: 5117, baseType: !1014, size: 32, align: 32, offset: 640)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_start_index", scope: !2071, file: !4, line: 5120, baseType: !1014, size: 32, align: 32, offset: 672)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_offset", scope: !2071, file: !4, line: 5121, baseType: !2115, size: 256, align: 64, offset: 704)
!2115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 256, align: 64, elements: !1120)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_pts", scope: !2071, file: !4, line: 5122, baseType: !2115, size: 256, align: 64, offset: 960)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_dts", scope: !2071, file: !4, line: 5123, baseType: !2115, size: 256, align: 64, offset: 1216)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2071, file: !4, line: 5125, baseType: !1014, size: 32, align: 32, offset: 1472)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2071, file: !4, line: 5132, baseType: !1015, size: 64, align: 64, offset: 1536)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_end", scope: !2071, file: !4, line: 5133, baseType: !2115, size: 256, align: 64, offset: 1600)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !2071, file: !4, line: 5141, baseType: !1014, size: 32, align: 32, offset: 1856)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !2071, file: !4, line: 5148, baseType: !1015, size: 64, align: 64, offset: 1920)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "dts_sync_point", scope: !2071, file: !4, line: 5161, baseType: !1014, size: 32, align: 32, offset: 1984)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "dts_ref_dts_delta", scope: !2071, file: !4, line: 5176, baseType: !1014, size: 32, align: 32, offset: 2016)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "pts_dts_delta", scope: !2071, file: !4, line: 5190, baseType: !1014, size: 32, align: 32, offset: 2048)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "cur_frame_pos", scope: !2071, file: !4, line: 5197, baseType: !2115, size: 256, align: 64, offset: 2112)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2071, file: !4, line: 5202, baseType: !1015, size: 64, align: 64, offset: 2368)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "last_pos", scope: !2071, file: !4, line: 5207, baseType: !1015, size: 64, align: 64, offset: 2432)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !2071, file: !4, line: 5214, baseType: !1014, size: 32, align: 32, offset: 2496)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !2071, file: !4, line: 5216, baseType: !889, size: 32, align: 32, offset: 2528)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "picture_structure", scope: !2071, file: !4, line: 5226, baseType: !927, size: 32, align: 32, offset: 2560)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "output_picture_number", scope: !2071, file: !4, line: 5234, baseType: !1014, size: 32, align: 32, offset: 2592)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2071, file: !4, line: 5239, baseType: !1014, size: 32, align: 32, offset: 2624)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2071, file: !4, line: 5240, baseType: !1014, size: 32, align: 32, offset: 2656)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !2071, file: !4, line: 5245, baseType: !1014, size: 32, align: 32, offset: 2688)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !2071, file: !4, line: 5246, baseType: !1014, size: 32, align: 32, offset: 2720)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !2071, file: !4, line: 5256, baseType: !1014, size: 32, align: 32, offset: 2752)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "last_in_packet_buffer", scope: !1571, file: !919, line: 1089, baseType: !2139, size: 64, align: 64, offset: 2240)
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2140, size: 64, align: 64)
!2140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketList", file: !919, line: 2003, size: 768, align: 64, elements: !2141)
!2141 = !{!2142, !2143}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "pkt", scope: !2140, file: !919, line: 2004, baseType: !1336, size: 704, align: 64)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2140, file: !919, line: 2005, baseType: !2139, size: 64, align: 64, offset: 704)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "probe_data", scope: !1571, file: !919, line: 1090, baseType: !1297, size: 256, align: 64, offset: 2304)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "pts_buffer", scope: !1571, file: !919, line: 1092, baseType: !2146, size: 1088, align: 64, offset: 2560)
!2146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 1088, align: 64, elements: !2147)
!2147 = !{!2148}
!2148 = !DISubrange(count: 17)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "index_entries", scope: !1571, file: !919, line: 1094, baseType: !2150, size: 64, align: 64, offset: 3648)
!2150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 64, align: 64)
!2151 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVIndexEntry", file: !919, line: 808, baseType: !2152)
!2152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVIndexEntry", file: !919, line: 793, size: 192, align: 64, elements: !2153)
!2153 = !{!2154, !2155, !2156, !2157, !2158}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2152, file: !919, line: 794, baseType: !1015, size: 64, align: 64)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !2152, file: !919, line: 795, baseType: !1015, size: 64, align: 64, offset: 64)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2152, file: !919, line: 805, baseType: !1014, size: 2, align: 32, offset: 128, flags: DIFlagBitField, extraData: i64 128)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2152, file: !919, line: 806, baseType: !1014, size: 30, align: 32, offset: 130, flags: DIFlagBitField, extraData: i64 128)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "min_distance", scope: !2152, file: !919, line: 807, baseType: !1014, size: 32, align: 32, offset: 160)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "nb_index_entries", scope: !1571, file: !919, line: 1096, baseType: !1014, size: 32, align: 32, offset: 3712)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "index_entries_allocated_size", scope: !1571, file: !919, line: 1097, baseType: !1006, size: 32, align: 32, offset: 3744)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "stream_identifier", scope: !1571, file: !919, line: 1104, baseType: !1014, size: 32, align: 32, offset: 3776)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "program_num", scope: !1571, file: !919, line: 1109, baseType: !1014, size: 32, align: 32, offset: 3808)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "pmt_version", scope: !1571, file: !919, line: 1110, baseType: !1014, size: 32, align: 32, offset: 3840)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "pmt_stream_idx", scope: !1571, file: !919, line: 1111, baseType: !1014, size: 32, align: 32, offset: 3872)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "interleaver_chunk_size", scope: !1571, file: !919, line: 1113, baseType: !1015, size: 64, align: 64, offset: 3904)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "interleaver_chunk_duration", scope: !1571, file: !919, line: 1114, baseType: !1015, size: 64, align: 64, offset: 3968)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "request_probe", scope: !1571, file: !919, line: 1123, baseType: !1014, size: 32, align: 32, offset: 4032)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "skip_to_keyframe", scope: !1571, file: !919, line: 1128, baseType: !1014, size: 32, align: 32, offset: 4064)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1571, file: !919, line: 1133, baseType: !1014, size: 32, align: 32, offset: 4096)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "start_skip_samples", scope: !1571, file: !919, line: 1142, baseType: !1015, size: 64, align: 64, offset: 4160)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "first_discard_sample", scope: !1571, file: !919, line: 1150, baseType: !1015, size: 64, align: 64, offset: 4224)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "last_discard_sample", scope: !1571, file: !919, line: 1157, baseType: !1015, size: 64, align: 64, offset: 4288)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "nb_decoded_frames", scope: !1571, file: !919, line: 1163, baseType: !1014, size: 32, align: 32, offset: 4352)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "mux_ts_offset", scope: !1571, file: !919, line: 1169, baseType: !1015, size: 64, align: 64, offset: 4416)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_reference", scope: !1571, file: !919, line: 1174, baseType: !1015, size: 64, align: 64, offset: 4480)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_behavior", scope: !1571, file: !919, line: 1186, baseType: !1014, size: 32, align: 32, offset: 4544)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "update_initial_durations_done", scope: !1571, file: !919, line: 1191, baseType: !1014, size: 32, align: 32, offset: 4576)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "pts_reorder_error", scope: !1571, file: !919, line: 1196, baseType: !2146, size: 1088, align: 64, offset: 4608)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "pts_reorder_error_count", scope: !1571, file: !919, line: 1197, baseType: !2180, size: 136, align: 8, offset: 5696)
!2180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1018, size: 136, align: 8, elements: !2147)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "last_dts_for_order_check", scope: !1571, file: !919, line: 1202, baseType: !1015, size: 64, align: 64, offset: 5888)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "dts_ordered", scope: !1571, file: !919, line: 1203, baseType: !1018, size: 8, align: 8, offset: 5952)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "dts_misordered", scope: !1571, file: !919, line: 1204, baseType: !1018, size: 8, align: 8, offset: 5960)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "inject_global_side_data", scope: !1571, file: !919, line: 1209, baseType: !1014, size: 32, align: 32, offset: 5984)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "display_aspect_ratio", scope: !1571, file: !919, line: 1216, baseType: !1035, size: 64, align: 32, offset: 6016)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1571, file: !919, line: 1222, baseType: !2187, size: 64, align: 64, offset: 6080)
!2187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2188, size: 64, align: 64)
!2188 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVStreamInternal", file: !919, line: 840, baseType: !2189)
!2189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVStreamInternal", file: !1210, line: 149, size: 640, align: 64, elements: !2190)
!2190 = !{!2191, !2192, !2232, !2233, !2234, !2235, !2236, !2237, !2243, !2244}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "reorder", scope: !2189, file: !1210, line: 154, baseType: !1014, size: 32, align: 32)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "bsfcs", scope: !2189, file: !1210, line: 161, baseType: !2193, size: 64, align: 64, offset: 64)
!2193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2194, size: 64, align: 64)
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 64, align: 64)
!2195 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !4, line: 5794, baseType: !2196)
!2196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !4, line: 5747, size: 512, align: 64, elements: !2197)
!2197 = !{!2198, !2199, !2223, !2227, !2228, !2229, !2230, !2231}
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !2196, file: !4, line: 5751, baseType: !1215, size: 64, align: 64)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2196, file: !4, line: 5756, baseType: !2200, size: 64, align: 64, offset: 64)
!2200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2201, size: 64, align: 64)
!2201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2202)
!2202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !4, line: 5796, size: 512, align: 64, elements: !2203)
!2203 = !{!2204, !2205, !2208, !2209, !2210, !2214, !2218, !2222}
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2202, file: !4, line: 5797, baseType: !1199, size: 64, align: 64)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !2202, file: !4, line: 5804, baseType: !2206, size: 64, align: 64, offset: 64)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 64, align: 64)
!2207 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !2202, file: !4, line: 5815, baseType: !1215, size: 64, align: 64, offset: 128)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !2202, file: !4, line: 5825, baseType: !1014, size: 32, align: 32, offset: 192)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2202, file: !4, line: 5826, baseType: !2211, size: 64, align: 64, offset: 256)
!2211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2212, size: 64, align: 64)
!2212 = !DISubroutineType(types: !2213)
!2213 = !{!1014, !2194}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2202, file: !4, line: 5827, baseType: !2215, size: 64, align: 64, offset: 320)
!2215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2216, size: 64, align: 64)
!2216 = !DISubroutineType(types: !2217)
!2217 = !{!1014, !2194, !1335}
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !2202, file: !4, line: 5828, baseType: !2219, size: 64, align: 64, offset: 384)
!2219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2220, size: 64, align: 64)
!2220 = !DISubroutineType(types: !2221)
!2221 = !{null, !2194}
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2202, file: !4, line: 5829, baseType: !2219, size: 64, align: 64, offset: 448)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !2196, file: !4, line: 5762, baseType: !2224, size: 64, align: 64, offset: 128)
!2224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2225, size: 64, align: 64)
!2225 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !4, line: 5735, baseType: !2226)
!2226 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !4, line: 5735, flags: DIFlagFwdDecl)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !2196, file: !4, line: 5768, baseType: !1020, size: 64, align: 64, offset: 192)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !2196, file: !4, line: 5775, baseType: !2006, size: 64, align: 64, offset: 256)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !2196, file: !4, line: 5781, baseType: !2006, size: 64, align: 64, offset: 320)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !2196, file: !4, line: 5787, baseType: !1035, size: 64, align: 32, offset: 384)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !2196, file: !4, line: 5793, baseType: !1035, size: 64, align: 32, offset: 448)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfcs", scope: !2189, file: !1210, line: 162, baseType: !1014, size: 32, align: 32, offset: 128)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "bitstream_checked", scope: !2189, file: !1210, line: 167, baseType: !1014, size: 32, align: 32, offset: 160)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !2189, file: !1210, line: 172, baseType: !1576, size: 64, align: 64, offset: 192)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "avctx_inited", scope: !2189, file: !1210, line: 176, baseType: !1014, size: 32, align: 32, offset: 256)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "orig_codec_id", scope: !2189, file: !1210, line: 178, baseType: !3, size: 32, align: 32, offset: 288)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "extract_extradata", scope: !2189, file: !1210, line: 187, baseType: !2238, size: 192, align: 64, offset: 320)
!2238 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2189, file: !1210, line: 183, size: 192, align: 64, elements: !2239)
!2239 = !{!2240, !2241, !2242}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "bsf", scope: !2238, file: !1210, line: 184, baseType: !2194, size: 64, align: 64)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "pkt", scope: !2238, file: !1210, line: 185, baseType: !1335, size: 64, align: 64, offset: 64)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "inited", scope: !2238, file: !1210, line: 186, baseType: !1014, size: 32, align: 32, offset: 128)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "need_context_update", scope: !2189, file: !1210, line: 192, baseType: !1014, size: 32, align: 32, offset: 512)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "priv_pts", scope: !2189, file: !1210, line: 194, baseType: !2245, size: 64, align: 64, offset: 576)
!2245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2246, size: 64, align: 64)
!2246 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFFrac", file: !1210, line: 63, baseType: !2247)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFFrac", file: !1210, line: 61, size: 192, align: 64, elements: !2248)
!2248 = !{!2249, !2250, !2251}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2247, file: !1210, line: 62, baseType: !1015, size: 64, align: 64)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2247, file: !1210, line: 62, baseType: !1015, size: 64, align: 64, offset: 64)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !2247, file: !1210, line: 62, baseType: !1015, size: 64, align: 64, offset: 128)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !1310, file: !919, line: 1417, baseType: !2253, size: 8192, align: 8, offset: 448)
!2253 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1097, size: 8192, align: 8, elements: !2254)
!2254 = !{!2255}
!2255 = !DISubrange(count: 1024)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "url", scope: !1310, file: !919, line: 1433, baseType: !1096, size: 64, align: 64, offset: 8640)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1310, file: !919, line: 1442, baseType: !1015, size: 64, align: 64, offset: 8704)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1310, file: !919, line: 1452, baseType: !1015, size: 64, align: 64, offset: 8768)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1310, file: !919, line: 1459, baseType: !1015, size: 64, align: 64, offset: 8832)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "packet_size", scope: !1310, file: !919, line: 1461, baseType: !1006, size: 32, align: 32, offset: 8896)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "max_delay", scope: !1310, file: !919, line: 1462, baseType: !1014, size: 32, align: 32, offset: 8928)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1310, file: !919, line: 1468, baseType: !1014, size: 32, align: 32, offset: 8960)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "probesize", scope: !1310, file: !919, line: 1503, baseType: !1015, size: 64, align: 64, offset: 9024)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "max_analyze_duration", scope: !1310, file: !919, line: 1511, baseType: !1015, size: 64, align: 64, offset: 9088)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1310, file: !919, line: 1513, baseType: !1530, size: 64, align: 64, offset: 9152)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "keylen", scope: !1310, file: !919, line: 1514, baseType: !1014, size: 32, align: 32, offset: 9216)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "nb_programs", scope: !1310, file: !919, line: 1516, baseType: !1006, size: 32, align: 32, offset: 9248)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "programs", scope: !1310, file: !919, line: 1517, baseType: !2269, size: 64, align: 64, offset: 9280)
!2269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2270, size: 64, align: 64)
!2270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 64, align: 64)
!2271 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProgram", file: !919, line: 1284, baseType: !2272)
!2272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProgram", file: !919, line: 1259, size: 704, align: 64, elements: !2273)
!2273 = !{!2274, !2275, !2276, !2277, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2272, file: !919, line: 1260, baseType: !1014, size: 32, align: 32)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2272, file: !919, line: 1261, baseType: !1014, size: 32, align: 32, offset: 32)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "discard", scope: !2272, file: !919, line: 1262, baseType: !909, size: 32, align: 32, offset: 64)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !2272, file: !919, line: 1263, baseType: !2278, size: 64, align: 64, offset: 128)
!2278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64, align: 64)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "nb_stream_indexes", scope: !2272, file: !919, line: 1264, baseType: !1006, size: 32, align: 32, offset: 192)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !2272, file: !919, line: 1265, baseType: !1444, size: 64, align: 64, offset: 256)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "program_num", scope: !2272, file: !919, line: 1267, baseType: !1014, size: 32, align: 32, offset: 320)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "pmt_pid", scope: !2272, file: !919, line: 1268, baseType: !1014, size: 32, align: 32, offset: 352)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "pcr_pid", scope: !2272, file: !919, line: 1269, baseType: !1014, size: 32, align: 32, offset: 384)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "pmt_version", scope: !2272, file: !919, line: 1270, baseType: !1014, size: 32, align: 32, offset: 416)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !2272, file: !919, line: 1279, baseType: !1015, size: 64, align: 64, offset: 448)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "end_time", scope: !2272, file: !919, line: 1280, baseType: !1015, size: 64, align: 64, offset: 512)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_reference", scope: !2272, file: !919, line: 1282, baseType: !1015, size: 64, align: 64, offset: 576)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "pts_wrap_behavior", scope: !2272, file: !919, line: 1283, baseType: !1014, size: 32, align: 32, offset: 640)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "video_codec_id", scope: !1310, file: !919, line: 1523, baseType: !3, size: 32, align: 32, offset: 9344)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec_id", scope: !1310, file: !919, line: 1529, baseType: !3, size: 32, align: 32, offset: 9376)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_codec_id", scope: !1310, file: !919, line: 1535, baseType: !3, size: 32, align: 32, offset: 9408)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "max_index_size", scope: !1310, file: !919, line: 1547, baseType: !1006, size: 32, align: 32, offset: 9440)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "max_picture_buffer", scope: !1310, file: !919, line: 1553, baseType: !1006, size: 32, align: 32, offset: 9472)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "nb_chapters", scope: !1310, file: !919, line: 1566, baseType: !1006, size: 32, align: 32, offset: 9504)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "chapters", scope: !1310, file: !919, line: 1567, baseType: !2296, size: 64, align: 64, offset: 9536)
!2296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2297, size: 64, align: 64)
!2297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2298, size: 64, align: 64)
!2298 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVChapter", file: !919, line: 1299, baseType: !2299)
!2299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVChapter", file: !919, line: 1294, size: 320, align: 64, elements: !2300)
!2300 = !{!2301, !2302, !2303, !2304, !2305}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2299, file: !919, line: 1295, baseType: !1014, size: 32, align: 32)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !2299, file: !919, line: 1296, baseType: !1035, size: 64, align: 32, offset: 32)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2299, file: !919, line: 1297, baseType: !1015, size: 64, align: 64, offset: 128)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2299, file: !919, line: 1297, baseType: !1015, size: 64, align: 64, offset: 192)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !2299, file: !919, line: 1298, baseType: !1444, size: 64, align: 64, offset: 256)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1310, file: !919, line: 1577, baseType: !1444, size: 64, align: 64, offset: 9600)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_realtime", scope: !1310, file: !919, line: 1590, baseType: !1015, size: 64, align: 64, offset: 9664)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "fps_probe_size", scope: !1310, file: !919, line: 1597, baseType: !1014, size: 32, align: 32, offset: 9728)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "error_recognition", scope: !1310, file: !919, line: 1604, baseType: !1014, size: 32, align: 32, offset: 9760)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "interrupt_callback", scope: !1310, file: !919, line: 1615, baseType: !2311, size: 128, align: 64, offset: 9792)
!2311 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVIOInterruptCB", file: !650, line: 61, baseType: !2312)
!2312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVIOInterruptCB", file: !650, line: 58, size: 128, align: 64, elements: !2313)
!2313 = !{!2314, !2315}
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !2312, file: !650, line: 59, baseType: !1559, size: 64, align: 64)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !2312, file: !650, line: 60, baseType: !1020, size: 64, align: 64, offset: 64)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1310, file: !919, line: 1620, baseType: !1014, size: 32, align: 32, offset: 9920)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "max_interleave_delta", scope: !1310, file: !919, line: 1639, baseType: !1015, size: 64, align: 64, offset: 9984)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1310, file: !919, line: 1645, baseType: !1014, size: 32, align: 32, offset: 10048)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !1310, file: !919, line: 1652, baseType: !1014, size: 32, align: 32, offset: 10080)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "max_ts_probe", scope: !1310, file: !919, line: 1659, baseType: !1014, size: 32, align: 32, offset: 10112)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "avoid_negative_ts", scope: !1310, file: !919, line: 1668, baseType: !1014, size: 32, align: 32, offset: 10144)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "ts_id", scope: !1310, file: !919, line: 1677, baseType: !1014, size: 32, align: 32, offset: 10176)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "audio_preload", scope: !1310, file: !919, line: 1685, baseType: !1014, size: 32, align: 32, offset: 10208)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "max_chunk_duration", scope: !1310, file: !919, line: 1693, baseType: !1014, size: 32, align: 32, offset: 10240)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "max_chunk_size", scope: !1310, file: !919, line: 1701, baseType: !1014, size: 32, align: 32, offset: 10272)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "use_wallclock_as_timestamps", scope: !1310, file: !919, line: 1709, baseType: !1014, size: 32, align: 32, offset: 10304)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "avio_flags", scope: !1310, file: !919, line: 1716, baseType: !1014, size: 32, align: 32, offset: 10336)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "duration_estimation_method", scope: !1310, file: !919, line: 1724, baseType: !933, size: 32, align: 32, offset: 10368)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "skip_initial_bytes", scope: !1310, file: !919, line: 1731, baseType: !1015, size: 64, align: 64, offset: 10432)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "correct_ts_overflow", scope: !1310, file: !919, line: 1738, baseType: !1006, size: 32, align: 32, offset: 10496)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "seek2any", scope: !1310, file: !919, line: 1745, baseType: !1014, size: 32, align: 32, offset: 10528)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "flush_packets", scope: !1310, file: !919, line: 1752, baseType: !1014, size: 32, align: 32, offset: 10560)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "probe_score", scope: !1310, file: !919, line: 1761, baseType: !1014, size: 32, align: 32, offset: 10592)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "format_probesize", scope: !1310, file: !919, line: 1768, baseType: !1014, size: 32, align: 32, offset: 10624)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1310, file: !919, line: 1776, baseType: !1096, size: 64, align: 64, offset: 10688)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "format_whitelist", scope: !1310, file: !919, line: 1784, baseType: !1096, size: 64, align: 64, offset: 10752)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1310, file: !919, line: 1790, baseType: !2338, size: 64, align: 64, offset: 10816)
!2338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2339, size: 64, align: 64)
!2339 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFormatInternal", file: !919, line: 1321, baseType: !2340)
!2340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFormatInternal", file: !1210, line: 66, size: 1088, align: 64, elements: !2341)
!2341 = !{!2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360}
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "nb_interleaved_streams", scope: !2340, file: !1210, line: 71, baseType: !1014, size: 32, align: 32)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "packet_buffer", scope: !2340, file: !1210, line: 78, baseType: !2139, size: 64, align: 64, offset: 64)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "packet_buffer_end", scope: !2340, file: !1210, line: 79, baseType: !2139, size: 64, align: 64, offset: 128)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "data_offset", scope: !2340, file: !1210, line: 82, baseType: !1015, size: 64, align: 64, offset: 192)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "raw_packet_buffer", scope: !2340, file: !1210, line: 90, baseType: !2139, size: 64, align: 64, offset: 256)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "raw_packet_buffer_end", scope: !2340, file: !1210, line: 91, baseType: !2139, size: 64, align: 64, offset: 320)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "parse_queue", scope: !2340, file: !1210, line: 95, baseType: !2139, size: 64, align: 64, offset: 384)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "parse_queue_end", scope: !2340, file: !1210, line: 96, baseType: !2139, size: 64, align: 64, offset: 448)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "raw_packet_buffer_remaining_size", scope: !2340, file: !1210, line: 101, baseType: !1014, size: 32, align: 32, offset: 512)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2340, file: !1210, line: 108, baseType: !1015, size: 64, align: 64, offset: 576)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "offset_timebase", scope: !2340, file: !1210, line: 113, baseType: !1035, size: 64, align: 32, offset: 640)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "missing_ts_warning", scope: !2340, file: !1210, line: 116, baseType: !1014, size: 32, align: 32, offset: 704)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "inject_global_side_data", scope: !2340, file: !1210, line: 119, baseType: !1014, size: 32, align: 32, offset: 736)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "avoid_negative_ts_use_pts", scope: !2340, file: !1210, line: 121, baseType: !1014, size: 32, align: 32, offset: 768)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "shortest_end", scope: !2340, file: !1210, line: 126, baseType: !1015, size: 64, align: 64, offset: 832)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2340, file: !1210, line: 131, baseType: !1014, size: 32, align: 32, offset: 896)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "streams_initialized", scope: !2340, file: !1210, line: 136, baseType: !1014, size: 32, align: 32, offset: 928)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "id3v2_meta", scope: !2340, file: !1210, line: 141, baseType: !1444, size: 64, align: 64, offset: 960)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "prefer_codec_framerate", scope: !2340, file: !1210, line: 146, baseType: !1014, size: 32, align: 32, offset: 1024)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "io_repositioned", scope: !1310, file: !919, line: 1798, baseType: !1014, size: 32, align: 32, offset: 10880)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "video_codec", scope: !1310, file: !919, line: 1806, baseType: !2363, size: 64, align: 64, offset: 10944)
!2363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2364, size: 64, align: 64)
!2364 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !4, line: 3610, baseType: !1586)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1310, file: !919, line: 1814, baseType: !2363, size: 64, align: 64, offset: 11008)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_codec", scope: !1310, file: !919, line: 1822, baseType: !2363, size: 64, align: 64, offset: 11072)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "data_codec", scope: !1310, file: !919, line: 1830, baseType: !2363, size: 64, align: 64, offset: 11136)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_header_padding", scope: !1310, file: !919, line: 1837, baseType: !1014, size: 32, align: 32, offset: 11200)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1310, file: !919, line: 1843, baseType: !1020, size: 64, align: 64, offset: 11264)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "control_message_cb", scope: !1310, file: !919, line: 1848, baseType: !2371, size: 64, align: 64, offset: 11328)
!2371 = !DIDerivedType(tag: DW_TAG_typedef, name: "av_format_control_message", file: !919, line: 1305, baseType: !1384)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "output_ts_offset", scope: !1310, file: !919, line: 1854, baseType: !1015, size: 64, align: 64, offset: 11392)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1310, file: !919, line: 1862, baseType: !1017, size: 64, align: 64, offset: 11456)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "data_codec_id", scope: !1310, file: !919, line: 1868, baseType: !3, size: 32, align: 32, offset: 11520)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "open_cb", scope: !1310, file: !919, line: 1889, baseType: !2376, size: 64, align: 64, offset: 11584)
!2376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 64, align: 64)
!2377 = !DISubroutineType(types: !2378)
!2378 = !{!1014, !1309, !2379, !1199, !1014, !2380, !2382}
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 64, align: 64)
!2380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 64, align: 64)
!2381 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2311)
!2382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 64, align: 64)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_whitelist", scope: !1310, file: !919, line: 1897, baseType: !1096, size: 64, align: 64, offset: 11648)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "io_open", scope: !1310, file: !919, line: 1919, baseType: !2385, size: 64, align: 64, offset: 11712)
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2386, size: 64, align: 64)
!2386 = !DISubroutineType(types: !2387)
!2387 = !{!1014, !1309, !2379, !1199, !1014, !2382}
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "io_close", scope: !1310, file: !919, line: 1925, baseType: !2389, size: 64, align: 64, offset: 11776)
!2389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2390, size: 64, align: 64)
!2390 = !DISubroutineType(types: !2391)
!2391 = !{null, !1309, !1501}
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_blacklist", scope: !1310, file: !919, line: 1932, baseType: !1096, size: 64, align: 64, offset: 11840)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "max_streams", scope: !1310, file: !919, line: 1939, baseType: !1014, size: 32, align: 32, offset: 11904)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "skip_estimate_duration_from_pts", scope: !1310, file: !919, line: 1946, baseType: !1014, size: 32, align: 32, offset: 11936)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "read_packet", scope: !1196, file: !919, line: 714, baseType: !1332, size: 64, align: 64, offset: 704)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "read_close", scope: !1196, file: !919, line: 720, baseType: !1306, size: 64, align: 64, offset: 768)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "read_seek", scope: !1196, file: !919, line: 730, baseType: !2398, size: 64, align: 64, offset: 832)
!2398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2399, size: 64, align: 64)
!2399 = !DISubroutineType(types: !2400)
!2400 = !{!1014, !1309, !1014, !1015, !1014}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "read_timestamp", scope: !1196, file: !919, line: 737, baseType: !2402, size: 64, align: 64, offset: 896)
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 64, align: 64)
!2403 = !DISubroutineType(types: !2404)
!2404 = !{!1015, !1309, !1014, !1382, !1015}
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "read_play", scope: !1196, file: !919, line: 744, baseType: !1306, size: 64, align: 64, offset: 960)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "read_pause", scope: !1196, file: !919, line: 750, baseType: !1306, size: 64, align: 64, offset: 1024)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "read_seek2", scope: !1196, file: !919, line: 758, baseType: !2408, size: 64, align: 64, offset: 1088)
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2409, size: 64, align: 64)
!2409 = !DISubroutineType(types: !2410)
!2410 = !{!1014, !1309, !1014, !1015, !1015, !1015, !1014}
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "get_device_list", scope: !1196, file: !919, line: 764, baseType: !1475, size: 64, align: 64, offset: 1152)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "create_device_capabilities", scope: !1196, file: !919, line: 770, baseType: !1481, size: 64, align: 64, offset: 1216)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "free_device_capabilities", scope: !1196, file: !919, line: 776, baseType: !1481, size: 64, align: 64, offset: 1280)
!2414 = distinct !DIGlobalVariable(name: "demuxer_class", scope: !0, file: !939, line: 3720, type: !1216, isLocal: true, isDefinition: true, variable: %struct.AVClass* @demuxer_class)
!2415 = distinct !DIGlobalVariable(name: "options", scope: !0, file: !939, line: 3713, type: !2416, isLocal: true, isDefinition: true, variable: [2 x %struct.AVOption]* @options)
!2416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2417, size: 1024, align: 64, elements: !1047)
!2417 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2418)
!2418 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOption", file: !464, line: 301, baseType: !1228)
!2419 = distinct !DIGlobalVariable(name: "mxf_header_partition_pack_key", scope: !0, file: !939, line: 308, type: !2420, isLocal: true, isDefinition: true, variable: [14 x i8]* @mxf_header_partition_pack_key)
!2420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1531, size: 112, align: 8, elements: !2421)
!2421 = !{!2422}
!2422 = !DISubrange(count: 14)
!2423 = distinct !DIGlobalVariable(name: "mxf_random_index_pack_key", scope: !0, file: !939, line: 319, type: !2424, isLocal: true, isDefinition: true, variable: [16 x i8]* @mxf_random_index_pack_key)
!2424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1531, size: 128, align: 8, elements: !1028)
!2425 = distinct !DIGlobalVariable(name: "mxf_klv_key", scope: !0, file: !939, line: 314, type: !2426, isLocal: true, isDefinition: true, variable: [4 x i8]* @mxf_klv_key)
!2426 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1531, size: 32, align: 8, elements: !1120)
!2427 = distinct !DIGlobalVariable(name: "mxf_encrypted_triplet_key", scope: !0, file: !939, line: 317, type: !2424, isLocal: true, isDefinition: true, variable: [16 x i8]* @mxf_encrypted_triplet_key)
!2428 = distinct !DIGlobalVariable(name: "mxf_essence_element_key", scope: !0, file: !939, line: 309, type: !2429, isLocal: true, isDefinition: true, variable: [12 x i8]* @mxf_essence_element_key)
!2429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1531, size: 96, align: 8, elements: !2430)
!2430 = !{!2431}
!2431 = !DISubrange(count: 12)
!2432 = distinct !DIGlobalVariable(name: "mxf_canopus_essence_element_key", scope: !0, file: !939, line: 311, type: !2429, isLocal: true, isDefinition: true, variable: [12 x i8]* @mxf_canopus_essence_element_key)
!2433 = distinct !DIGlobalVariable(name: "mxf_avid_essence_element_key", scope: !0, file: !939, line: 310, type: !2429, isLocal: true, isDefinition: true, variable: [12 x i8]* @mxf_avid_essence_element_key)
!2434 = distinct !DIGlobalVariable(name: "mxf_system_item_key_cp", scope: !0, file: !939, line: 312, type: !2435, isLocal: true, isDefinition: true, variable: [13 x i8]* @mxf_system_item_key_cp)
!2435 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1531, size: 104, align: 8, elements: !2436)
!2436 = !{!2437}
!2437 = !DISubrange(count: 13)
!2438 = distinct !DIGlobalVariable(name: "mxf_system_item_key_gc", scope: !0, file: !939, line: 313, type: !2435, isLocal: true, isDefinition: true, variable: [13 x i8]* @mxf_system_item_key_gc)
!2439 = distinct !DIGlobalVariable(name: "mxf_metadata_read_table", scope: !0, file: !939, line: 2648, type: !2440, isLocal: true, isDefinition: true, variable: [39 x %struct.MXFMetadataReadTableEntry]* @mxf_metadata_read_table)
!2440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2441, size: 9984, align: 64, elements: !2454)
!2441 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2442)
!2442 = !DIDerivedType(tag: DW_TAG_typedef, name: "MXFMetadataReadTableEntry", file: !939, line: 303, baseType: !2443)
!2443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MXFMetadataReadTableEntry", file: !939, line: 298, size: 256, align: 64, elements: !2444)
!2444 = !{!2445, !2447, !2452, !2453}
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2443, file: !939, line: 299, baseType: !2446, size: 128, align: 8)
!2446 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1026)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2443, file: !939, line: 300, baseType: !2448, size: 64, align: 64, offset: 128)
!2448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2449, size: 64, align: 64)
!2449 = !DIDerivedType(tag: DW_TAG_typedef, name: "MXFMetadataReadFunc", file: !939, line: 296, baseType: !2450)
!2450 = !DISubroutineType(types: !2451)
!2451 = !{!1014, !1020, !1501, !1014, !1014, !1017, !1015}
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size", scope: !2443, file: !939, line: 301, baseType: !1014, size: 32, align: 32, offset: 192)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2443, file: !939, line: 302, baseType: !957, size: 32, align: 32, offset: 224)
!2454 = !{!2455}
!2455 = !DISubrange(count: 39)
!2456 = distinct !DIGlobalVariable(name: "mxf_avid_project_name", scope: !0, file: !939, line: 321, type: !2424, isLocal: true, isDefinition: true, variable: [16 x i8]* @mxf_avid_project_name)
!2457 = distinct !DIGlobalVariable(name: "mxf_indirect_value_utf16le", scope: !0, file: !939, line: 323, type: !2458, isLocal: true, isDefinition: true, variable: [17 x i8]* @mxf_indirect_value_utf16le)
!2458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1531, size: 136, align: 8, elements: !2147)
!2459 = distinct !DIGlobalVariable(name: "mxf_indirect_value_utf16be", scope: !0, file: !939, line: 324, type: !2458, isLocal: true, isDefinition: true, variable: [17 x i8]* @mxf_indirect_value_utf16be)
!2460 = distinct !DIGlobalVariable(name: "mxf_sony_mpeg4_extradata", scope: !0, file: !939, line: 320, type: !2424, isLocal: true, isDefinition: true, variable: [16 x i8]* @mxf_sony_mpeg4_extradata)
!2461 = distinct !DIGlobalVariable(name: "mxf_jp2k_rsiz", scope: !0, file: !939, line: 322, type: !2424, isLocal: true, isDefinition: true, variable: [16 x i8]* @mxf_jp2k_rsiz)
!2462 = distinct !DIGlobalVariable(name: "mxf_crypto_source_container_ul", scope: !0, file: !939, line: 316, type: !2424, isLocal: true, isDefinition: true, variable: [16 x i8]* @mxf_crypto_source_container_ul)
!2463 = distinct !DIGlobalVariable(name: "mxf_encrypted_essence_container", scope: !0, file: !939, line: 318, type: !2424, isLocal: true, isDefinition: true, variable: [16 x i8]* @mxf_encrypted_essence_container)
!2464 = distinct !DIGlobalVariable(name: "mxf_intra_only_essence_container_uls", scope: !0, file: !939, line: 1336, type: !2465, isLocal: true, isDefinition: true, variable: [2 x %struct.MXFCodecUL]* @mxf_intra_only_essence_container_uls)
!2465 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2466, size: 640, align: 64, elements: !1047)
!2466 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2467)
!2467 = !DIDerivedType(tag: DW_TAG_typedef, name: "MXFCodecUL", file: !958, line: 82, baseType: !2468)
!2468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MXFCodecUL", file: !958, line: 75, size: 320, align: 64, elements: !2469)
!2469 = !{!2470, !2471, !2472, !2473, !2474, !2475}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2468, file: !958, line: 76, baseType: !1026, size: 128, align: 8)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "matching_len", scope: !2468, file: !958, line: 77, baseType: !1006, size: 32, align: 32, offset: 128)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2468, file: !958, line: 78, baseType: !1014, size: 32, align: 32, offset: 160)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !2468, file: !958, line: 79, baseType: !1199, size: 64, align: 64, offset: 192)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "wrapping_indicator_pos", scope: !2468, file: !958, line: 80, baseType: !1006, size: 32, align: 32, offset: 256)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "wrapping_indicator_type", scope: !2468, file: !958, line: 81, baseType: !2476, size: 32, align: 32, offset: 288)
!2476 = !DIDerivedType(tag: DW_TAG_typedef, name: "MXFWrappingIndicatorType", file: !958, line: 73, baseType: !985)
!2477 = distinct !DIGlobalVariable(name: "mxf_intra_only_picture_essence_coding_uls", scope: !0, file: !939, line: 1342, type: !2478, isLocal: true, isDefinition: true, variable: [3 x %struct.MXFCodecUL]* @mxf_intra_only_picture_essence_coding_uls)
!2478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2466, size: 960, align: 64, elements: !2479)
!2479 = !{!2480}
!2480 = !DISubrange(count: 3)
!2481 = distinct !DIGlobalVariable(name: "mxf_picture_essence_container_uls", scope: !0, file: !939, line: 1315, type: !2482, isLocal: true, isDefinition: true, variable: [16 x %struct.MXFCodecUL]* @mxf_picture_essence_container_uls)
!2482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2466, size: 5120, align: 64, elements: !1028)
!2483 = distinct !DIGlobalVariable(name: "mxf_sound_essence_container_uls", scope: !0, file: !939, line: 1357, type: !2484, isLocal: true, isDefinition: true, variable: [6 x %struct.MXFCodecUL]* @mxf_sound_essence_container_uls)
!2484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2466, size: 1920, align: 64, elements: !2485)
!2485 = !{!2486}
!2486 = !DISubrange(count: 6)
!2487 = distinct !DIGlobalVariable(name: "mxf_data_essence_container_uls", scope: !0, file: !939, line: 1367, type: !2488, isLocal: true, isDefinition: true, variable: [4 x %struct.MXFCodecUL]* @mxf_data_essence_container_uls)
!2488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2466, size: 1280, align: 64, elements: !1120)
!2489 = distinct !DIGlobalVariable(name: "mxf_intra_only_picture_coded_width", scope: !0, file: !939, line: 1349, type: !2490, isLocal: true, isDefinition: true, variable: [5 x %struct.MXFCodecUL]* @mxf_intra_only_picture_coded_width)
!2490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2466, size: 1600, align: 64, elements: !2080)
!2491 = distinct !DIGlobalVariable(name: "checkv", scope: !2492, file: !939, line: 561, type: !2424, isLocal: true, isDefinition: true, variable: [16 x i8]* @mxf_decrypt_triplet.checkv)
!2492 = distinct !DISubprogram(name: "mxf_decrypt_triplet", scope: !939, file: !939, line: 559, type: !2493, isLocal: true, isDefinition: true, scopeLine: 560, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!2493 = !DISubroutineType(types: !2494)
!2494 = !{!1014, !2495, !1335, !2497}
!2495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2496, size: 64, align: 64)
!2496 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFormatContext", file: !919, line: 1947, baseType: !1310)
!2497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2498, size: 64, align: 64)
!2498 = !DIDerivedType(tag: DW_TAG_typedef, name: "KLVPacket", file: !958, line: 66, baseType: !2499)
!2499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "KLVPacket", file: !958, line: 61, size: 320, align: 64, elements: !2500)
!2500 = !{!2501, !2502, !2503, !2504}
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2499, file: !958, line: 62, baseType: !1026, size: 128, align: 8)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2499, file: !958, line: 63, baseType: !1015, size: 64, align: 64, offset: 128)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2499, file: !958, line: 64, baseType: !1125, size: 64, align: 64, offset: 192)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "next_klv", scope: !2499, file: !958, line: 65, baseType: !1015, size: 64, align: 64, offset: 256)
!2505 = !{}
!2506 = !{i32 2, !"Dwarf Version", i32 4}
!2507 = !{i32 2, !"Debug Info Version", i32 3}
!2508 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!2509 = distinct !DISubprogram(name: "mxf_probe", scope: !939, file: !939, line: 3576, type: !1294, isLocal: true, isDefinition: true, scopeLine: 3576, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!2510 = !DILocalVariable(name: "p", arg: 1, scope: !2509, file: !939, line: 3576, type: !1296)
!2511 = !DIExpression()
!2512 = !DILocation(line: 3576, column: 35, scope: !2509)
!2513 = !DILocalVariable(name: "bufp", scope: !2509, file: !939, line: 3577, type: !1530)
!2514 = !DILocation(line: 3577, column: 20, scope: !2509)
!2515 = !DILocation(line: 3577, column: 27, scope: !2509)
!2516 = !DILocation(line: 3577, column: 30, scope: !2509)
!2517 = !DILocalVariable(name: "end", scope: !2509, file: !939, line: 3578, type: !1530)
!2518 = !DILocation(line: 3578, column: 20, scope: !2509)
!2519 = !DILocation(line: 3578, column: 26, scope: !2509)
!2520 = !DILocation(line: 3578, column: 29, scope: !2509)
!2521 = !DILocation(line: 3578, column: 35, scope: !2509)
!2522 = !DILocation(line: 3578, column: 38, scope: !2509)
!2523 = !DILocation(line: 3578, column: 33, scope: !2509)
!2524 = !DILocation(line: 3580, column: 9, scope: !2525)
!2525 = distinct !DILexicalBlock(scope: !2509, file: !939, line: 3580, column: 9)
!2526 = !DILocation(line: 3580, column: 12, scope: !2525)
!2527 = !DILocation(line: 3580, column: 21, scope: !2525)
!2528 = !DILocation(line: 3580, column: 9, scope: !2509)
!2529 = !DILocation(line: 3581, column: 9, scope: !2525)
!2530 = !DILocation(line: 3584, column: 9, scope: !2509)
!2531 = !DILocation(line: 3586, column: 5, scope: !2509)
!2532 = !DILocation(line: 3586, column: 12, scope: !2533)
!2533 = !DILexicalBlockFile(scope: !2534, file: !939, discriminator: 1)
!2534 = distinct !DILexicalBlock(scope: !2535, file: !939, line: 3586, column: 5)
!2535 = distinct !DILexicalBlock(scope: !2509, file: !939, line: 3586, column: 5)
!2536 = !DILocation(line: 3586, column: 19, scope: !2533)
!2537 = !DILocation(line: 3586, column: 17, scope: !2533)
!2538 = !DILocation(line: 3586, column: 5, scope: !2533)
!2539 = !DILocation(line: 3587, column: 16, scope: !2540)
!2540 = distinct !DILexicalBlock(scope: !2541, file: !939, line: 3587, column: 13)
!2541 = distinct !DILexicalBlock(scope: !2534, file: !939, line: 3586, column: 25)
!2542 = !DILocation(line: 3587, column: 25, scope: !2540)
!2543 = !DILocation(line: 3587, column: 30, scope: !2540)
!2544 = !DILocation(line: 3587, column: 13, scope: !2541)
!2545 = !DILocation(line: 3588, column: 49, scope: !2546)
!2546 = distinct !DILexicalBlock(scope: !2547, file: !939, line: 3588, column: 17)
!2547 = distinct !DILexicalBlock(scope: !2540, file: !939, line: 3587, column: 38)
!2548 = !DILocation(line: 3588, column: 57, scope: !2546)
!2549 = !DILocation(line: 3588, column: 128, scope: !2546)
!2550 = !DILocation(line: 3588, column: 60, scope: !2546)
!2551 = !DILocation(line: 3588, column: 131, scope: !2546)
!2552 = !DILocation(line: 3589, column: 49, scope: !2546)
!2553 = !DILocation(line: 3589, column: 53, scope: !2546)
!2554 = !DILocation(line: 3589, column: 60, scope: !2546)
!2555 = !DILocation(line: 3589, column: 134, scope: !2546)
!2556 = !DILocation(line: 3589, column: 63, scope: !2546)
!2557 = !DILocation(line: 3589, column: 137, scope: !2546)
!2558 = !DILocation(line: 3590, column: 49, scope: !2546)
!2559 = !DILocation(line: 3590, column: 53, scope: !2546)
!2560 = !DILocation(line: 3590, column: 60, scope: !2546)
!2561 = !DILocation(line: 3590, column: 134, scope: !2546)
!2562 = !DILocation(line: 3590, column: 63, scope: !2546)
!2563 = !DILocation(line: 3590, column: 137, scope: !2546)
!2564 = !DILocation(line: 3591, column: 49, scope: !2546)
!2565 = !DILocation(line: 3591, column: 53, scope: !2546)
!2566 = !DILocation(line: 3591, column: 60, scope: !2546)
!2567 = !DILocation(line: 3591, column: 17, scope: !2546)
!2568 = !DILocation(line: 3591, column: 134, scope: !2546)
!2569 = !DILocation(line: 3591, column: 66, scope: !2546)
!2570 = !DILocation(line: 3591, column: 63, scope: !2546)
!2571 = !DILocation(line: 3588, column: 17, scope: !2572)
!2572 = !DILexicalBlockFile(scope: !2547, file: !939, discriminator: 1)
!2573 = !DILocation(line: 3592, column: 17, scope: !2546)
!2574 = !DILocation(line: 3593, column: 18, scope: !2547)
!2575 = !DILocation(line: 3594, column: 9, scope: !2547)
!2576 = !DILocation(line: 3595, column: 18, scope: !2540)
!2577 = !DILocation(line: 3586, column: 5, scope: !2578)
!2578 = !DILexicalBlockFile(scope: !2534, file: !939, discriminator: 2)
!2579 = distinct !{!2579, !2531}
!2580 = !DILocation(line: 3598, column: 5, scope: !2509)
!2581 = !DILocation(line: 3599, column: 1, scope: !2509)
!2582 = distinct !DISubprogram(name: "mxf_read_header", scope: !939, file: !939, line: 3135, type: !2583, isLocal: true, isDefinition: true, scopeLine: 3136, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!2583 = !DISubroutineType(types: !2584)
!2584 = !{!1014, !2495}
!2585 = !DILocalVariable(name: "s", arg: 1, scope: !2586, file: !650, line: 557, type: !1501)
!2586 = distinct !DISubprogram(name: "avio_tell", scope: !650, file: !650, line: 557, type: !2587, isLocal: true, isDefinition: true, scopeLine: 558, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!2587 = !DISubroutineType(types: !2588)
!2588 = !{!1015, !1501}
!2589 = !DILocation(line: 557, column: 77, scope: !2586, inlinedAt: !2590)
!2590 = distinct !DILocation(line: 3150, column: 19, scope: !2582)
!2591 = !DILocalVariable(name: "s", arg: 1, scope: !2582, file: !939, line: 3135, type: !2495)
!2592 = !DILocation(line: 3135, column: 45, scope: !2582)
!2593 = !DILocalVariable(name: "mxf", scope: !2582, file: !939, line: 3137, type: !2594)
!2594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2595, size: 64, align: 64)
!2595 = !DIDerivedType(tag: DW_TAG_typedef, name: "MXFContext", file: !939, line: 293, baseType: !2596)
!2596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MXFContext", file: !939, line: 268, size: 1664, align: 64, elements: !2597)
!2597 = !{!2598, !2599, !2622, !2623, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2661}
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !2596, file: !939, line: 269, baseType: !1215, size: 64, align: 64)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "partitions", scope: !2596, file: !939, line: 270, baseType: !2600, size: 64, align: 64, offset: 64)
!2600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2601, size: 64, align: 64)
!2601 = !DIDerivedType(tag: DW_TAG_typedef, name: "MXFPartition", file: !939, line: 105, baseType: !2602)
!2602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MXFPartition", file: !939, line: 88, size: 1152, align: 64, elements: !2603)
!2603 = !{!2604, !2605, !2606, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2616, !2617, !2618, !2619, !2620, !2621}
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "closed", scope: !2602, file: !939, line: 89, baseType: !1014, size: 32, align: 32)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !2602, file: !939, line: 90, baseType: !1014, size: 32, align: 32, offset: 32)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2602, file: !939, line: 91, baseType: !2607, size: 32, align: 32, offset: 64)
!2607 = !DIDerivedType(tag: DW_TAG_typedef, name: "MXFPartitionType", file: !939, line: 66, baseType: !938)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "previous_partition", scope: !2602, file: !939, line: 92, baseType: !1125, size: 64, align: 64, offset: 128)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "index_sid", scope: !2602, file: !939, line: 93, baseType: !1014, size: 32, align: 32, offset: 192)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "body_sid", scope: !2602, file: !939, line: 94, baseType: !1014, size: 32, align: 32, offset: 224)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "this_partition", scope: !2602, file: !939, line: 95, baseType: !1015, size: 64, align: 64, offset: 256)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "essence_offset", scope: !2602, file: !939, line: 96, baseType: !1015, size: 64, align: 64, offset: 320)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "essence_length", scope: !2602, file: !939, line: 97, baseType: !1015, size: 64, align: 64, offset: 384)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "kag_size", scope: !2602, file: !939, line: 98, baseType: !2615, size: 32, align: 32, offset: 448)
!2615 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !1005, line: 38, baseType: !1014)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "header_byte_count", scope: !2602, file: !939, line: 99, baseType: !1015, size: 64, align: 64, offset: 512)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "index_byte_count", scope: !2602, file: !939, line: 100, baseType: !1015, size: 64, align: 64, offset: 576)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "pack_length", scope: !2602, file: !939, line: 101, baseType: !1014, size: 32, align: 32, offset: 640)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "pack_ofs", scope: !2602, file: !939, line: 102, baseType: !1015, size: 64, align: 64, offset: 704)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "body_offset", scope: !2602, file: !939, line: 103, baseType: !1015, size: 64, align: 64, offset: 768)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "first_essence_klv", scope: !2602, file: !939, line: 104, baseType: !2498, size: 320, align: 64, offset: 832)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "partitions_count", scope: !2596, file: !939, line: 271, baseType: !1006, size: 32, align: 32, offset: 128)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !2596, file: !939, line: 272, baseType: !2624, size: 32, align: 32, offset: 160)
!2624 = !DIDerivedType(tag: DW_TAG_typedef, name: "MXFOP", file: !939, line: 80, baseType: !944)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "packages_refs", scope: !2596, file: !939, line: 273, baseType: !1057, size: 64, align: 64, offset: 192)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "packages_count", scope: !2596, file: !939, line: 274, baseType: !1014, size: 32, align: 32, offset: 256)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "essence_container_data_refs", scope: !2596, file: !939, line: 275, baseType: !1057, size: 64, align: 64, offset: 320)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "essence_container_data_count", scope: !2596, file: !939, line: 276, baseType: !1014, size: 32, align: 32, offset: 384)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_sets", scope: !2596, file: !939, line: 277, baseType: !1185, size: 64, align: 64, offset: 448)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_sets_count", scope: !2596, file: !939, line: 278, baseType: !1014, size: 32, align: 32, offset: 512)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "fc", scope: !2596, file: !939, line: 279, baseType: !2495, size: 64, align: 64, offset: 576)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "aesc", scope: !2596, file: !939, line: 280, baseType: !2633, size: 64, align: 64, offset: 640)
!2633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2634, size: 64, align: 64)
!2634 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVAES", file: !2635, line: 37, flags: DIFlagFwdDecl)
!2635 = !DIFile(filename: "./libavutil/aes.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "local_tags", scope: !2596, file: !939, line: 281, baseType: !1017, size: 64, align: 64, offset: 704)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "local_tags_count", scope: !2596, file: !939, line: 282, baseType: !1014, size: 32, align: 32, offset: 768)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "footer_partition", scope: !2596, file: !939, line: 283, baseType: !1125, size: 64, align: 64, offset: 832)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "current_klv_data", scope: !2596, file: !939, line: 284, baseType: !2498, size: 320, align: 64, offset: 896)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "run_in", scope: !2596, file: !939, line: 285, baseType: !1014, size: 32, align: 32, offset: 1216)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "current_partition", scope: !2596, file: !939, line: 286, baseType: !2600, size: 64, align: 64, offset: 1280)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "parsing_backward", scope: !2596, file: !939, line: 287, baseType: !1014, size: 32, align: 32, offset: 1344)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "last_forward_tell", scope: !2596, file: !939, line: 288, baseType: !1015, size: 64, align: 64, offset: 1408)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "last_forward_partition", scope: !2596, file: !939, line: 289, baseType: !1014, size: 32, align: 32, offset: 1472)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "nb_index_tables", scope: !2596, file: !939, line: 290, baseType: !1014, size: 32, align: 32, offset: 1504)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "index_tables", scope: !2596, file: !939, line: 291, baseType: !2647, size: 64, align: 64, offset: 1536)
!2647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2648, size: 64, align: 64)
!2648 = !DIDerivedType(tag: DW_TAG_typedef, name: "MXFIndexTable", file: !939, line: 266, baseType: !2649)
!2649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MXFIndexTable", file: !939, line: 256, size: 512, align: 64, elements: !2650)
!2650 = !{!2651, !2652, !2653, !2654, !2655, !2656, !2657, !2659, !2660}
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "index_sid", scope: !2649, file: !939, line: 257, baseType: !1014, size: 32, align: 32)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "body_sid", scope: !2649, file: !939, line: 258, baseType: !1014, size: 32, align: 32, offset: 32)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ptses", scope: !2649, file: !939, line: 259, baseType: !1014, size: 32, align: 32, offset: 64)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "first_dts", scope: !2649, file: !939, line: 260, baseType: !1015, size: 64, align: 64, offset: 128)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "ptses", scope: !2649, file: !939, line: 261, baseType: !1382, size: 64, align: 64, offset: 192)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "nb_segments", scope: !2649, file: !939, line: 262, baseType: !1014, size: 32, align: 32, offset: 256)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !2649, file: !939, line: 263, baseType: !2658, size: 64, align: 64, offset: 320)
!2658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 64, align: 64)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "fake_index", scope: !2649, file: !939, line: 264, baseType: !2150, size: 64, align: 64, offset: 384)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "offsets", scope: !2649, file: !939, line: 265, baseType: !1146, size: 64, align: 64, offset: 448)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "eia608_extract", scope: !2596, file: !939, line: 292, baseType: !1014, size: 32, align: 32, offset: 1600)
!2662 = !DILocation(line: 3137, column: 17, scope: !2582)
!2663 = !DILocation(line: 3137, column: 23, scope: !2582)
!2664 = !DILocation(line: 3137, column: 26, scope: !2582)
!2665 = !DILocalVariable(name: "klv", scope: !2582, file: !939, line: 3138, type: !2498)
!2666 = !DILocation(line: 3138, column: 15, scope: !2582)
!2667 = !DILocalVariable(name: "essence_offset", scope: !2582, file: !939, line: 3139, type: !1015)
!2668 = !DILocation(line: 3139, column: 13, scope: !2582)
!2669 = !DILocalVariable(name: "ret", scope: !2582, file: !939, line: 3140, type: !1014)
!2670 = !DILocation(line: 3140, column: 9, scope: !2582)
!2671 = !DILocation(line: 3142, column: 5, scope: !2582)
!2672 = !DILocation(line: 3142, column: 10, scope: !2582)
!2673 = !DILocation(line: 3142, column: 28, scope: !2582)
!2674 = !DILocation(line: 3144, column: 24, scope: !2675)
!2675 = distinct !DILexicalBlock(scope: !2582, file: !939, line: 3144, column: 9)
!2676 = !DILocation(line: 3144, column: 27, scope: !2675)
!2677 = !DILocation(line: 3144, column: 10, scope: !2675)
!2678 = !DILocation(line: 3144, column: 9, scope: !2582)
!2679 = !DILocation(line: 3145, column: 16, scope: !2680)
!2680 = distinct !DILexicalBlock(scope: !2675, file: !939, line: 3144, column: 67)
!2681 = !DILocation(line: 3145, column: 9, scope: !2680)
!2682 = !DILocation(line: 3146, column: 9, scope: !2680)
!2683 = !DILocation(line: 3148, column: 15, scope: !2582)
!2684 = !DILocation(line: 3148, column: 18, scope: !2582)
!2685 = !DILocation(line: 3148, column: 5, scope: !2582)
!2686 = !DILocation(line: 3149, column: 15, scope: !2582)
!2687 = !DILocation(line: 3149, column: 5, scope: !2582)
!2688 = !DILocation(line: 3149, column: 10, scope: !2582)
!2689 = !DILocation(line: 3149, column: 13, scope: !2582)
!2690 = !DILocation(line: 3150, column: 29, scope: !2582)
!2691 = !DILocation(line: 3150, column: 32, scope: !2582)
!2692 = !DILocation(line: 3150, column: 19, scope: !2582)
!2693 = !DILocation(line: 559, column: 22, scope: !2586, inlinedAt: !2590)
!2694 = !DILocation(line: 559, column: 12, scope: !2586, inlinedAt: !2590)
!2695 = !DILocation(line: 3150, column: 5, scope: !2582)
!2696 = !DILocation(line: 3150, column: 10, scope: !2582)
!2697 = !DILocation(line: 3150, column: 17, scope: !2582)
!2698 = !DILocation(line: 3152, column: 32, scope: !2582)
!2699 = !DILocation(line: 3152, column: 5, scope: !2582)
!2700 = !DILocation(line: 3154, column: 5, scope: !2582)
!2701 = !DILocation(line: 3154, column: 23, scope: !2702)
!2702 = !DILexicalBlockFile(scope: !2582, file: !939, discriminator: 1)
!2703 = !DILocation(line: 3154, column: 26, scope: !2702)
!2704 = !DILocation(line: 3154, column: 13, scope: !2702)
!2705 = !DILocation(line: 3154, column: 12, scope: !2702)
!2706 = !DILocation(line: 3154, column: 5, scope: !2702)
!2707 = !DILocalVariable(name: "metadata", scope: !2708, file: !939, line: 3155, type: !2709)
!2708 = distinct !DILexicalBlock(scope: !2582, file: !939, line: 3154, column: 31)
!2709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2441, size: 64, align: 64)
!2710 = !DILocation(line: 3155, column: 42, scope: !2708)
!2711 = !DILocation(line: 3157, column: 35, scope: !2712)
!2712 = distinct !DILexicalBlock(scope: !2708, file: !939, line: 3157, column: 13)
!2713 = !DILocation(line: 3157, column: 38, scope: !2712)
!2714 = !DILocation(line: 3157, column: 13, scope: !2712)
!2715 = !DILocation(line: 3157, column: 42, scope: !2712)
!2716 = !DILocation(line: 3157, column: 13, scope: !2708)
!2717 = !DILocation(line: 3159, column: 50, scope: !2718)
!2718 = distinct !DILexicalBlock(scope: !2719, file: !939, line: 3159, column: 16)
!2719 = distinct !DILexicalBlock(scope: !2712, file: !939, line: 3157, column: 47)
!2720 = !DILocation(line: 3159, column: 16, scope: !2718)
!2721 = !DILocation(line: 3159, column: 55, scope: !2718)
!2722 = !DILocation(line: 3159, column: 16, scope: !2719)
!2723 = !DILocation(line: 3160, column: 17, scope: !2718)
!2724 = !DILocation(line: 3162, column: 17, scope: !2718)
!2725 = distinct !{!2725, !2700}
!2726 = !DILocation(line: 3165, column: 9, scope: !2708)
!2727 = distinct !{!2727, !2726}
!2728 = !DILocation(line: 3165, column: 411, scope: !2729)
!2729 = !DILexicalBlockFile(scope: !2730, file: !939, discriminator: 1)
!2730 = distinct !DILexicalBlock(scope: !2708, file: !939, line: 3165, column: 12)
!2731 = !DILocation(line: 3166, column: 16, scope: !2708)
!2732 = !DILocation(line: 3166, column: 74, scope: !2708)
!2733 = !DILocation(line: 3166, column: 86, scope: !2708)
!2734 = !DILocation(line: 3166, column: 9, scope: !2708)
!2735 = !DILocation(line: 3167, column: 26, scope: !2736)
!2736 = distinct !DILexicalBlock(scope: !2708, file: !939, line: 3167, column: 13)
!2737 = !DILocation(line: 3167, column: 22, scope: !2736)
!2738 = !DILocation(line: 3167, column: 15, scope: !2736)
!2739 = !DILocation(line: 3167, column: 94, scope: !2736)
!2740 = !DILocation(line: 3168, column: 26, scope: !2736)
!2741 = !DILocation(line: 3168, column: 22, scope: !2736)
!2742 = !DILocation(line: 3168, column: 15, scope: !2736)
!2743 = !DILocation(line: 3168, column: 90, scope: !2736)
!2744 = !DILocation(line: 3169, column: 26, scope: !2736)
!2745 = !DILocation(line: 3169, column: 22, scope: !2736)
!2746 = !DILocation(line: 3169, column: 15, scope: !2736)
!2747 = !DILocation(line: 3169, column: 106, scope: !2736)
!2748 = !DILocation(line: 3170, column: 26, scope: !2736)
!2749 = !DILocation(line: 3170, column: 22, scope: !2736)
!2750 = !DILocation(line: 3170, column: 15, scope: !2736)
!2751 = !DILocation(line: 3170, column: 100, scope: !2736)
!2752 = !DILocation(line: 3171, column: 26, scope: !2736)
!2753 = !DILocation(line: 3171, column: 22, scope: !2736)
!2754 = !DILocation(line: 3171, column: 15, scope: !2736)
!2755 = !DILocation(line: 3171, column: 88, scope: !2736)
!2756 = !DILocation(line: 3172, column: 26, scope: !2736)
!2757 = !DILocation(line: 3172, column: 22, scope: !2736)
!2758 = !DILocation(line: 3172, column: 15, scope: !2736)
!2759 = !DILocation(line: 3167, column: 13, scope: !2760)
!2760 = !DILexicalBlockFile(scope: !2708, file: !939, discriminator: 1)
!2761 = !DILocation(line: 3174, column: 18, scope: !2762)
!2762 = distinct !DILexicalBlock(scope: !2763, file: !939, line: 3174, column: 17)
!2763 = distinct !DILexicalBlock(scope: !2736, file: !939, line: 3172, column: 89)
!2764 = !DILocation(line: 3174, column: 23, scope: !2762)
!2765 = !DILocation(line: 3174, column: 17, scope: !2763)
!2766 = !DILocation(line: 3175, column: 24, scope: !2767)
!2767 = distinct !DILexicalBlock(scope: !2762, file: !939, line: 3174, column: 42)
!2768 = !DILocation(line: 3175, column: 29, scope: !2767)
!2769 = !DILocation(line: 3175, column: 17, scope: !2767)
!2770 = !DILocation(line: 3176, column: 17, scope: !2767)
!2771 = !DILocation(line: 3179, column: 18, scope: !2772)
!2772 = distinct !DILexicalBlock(scope: !2763, file: !939, line: 3179, column: 17)
!2773 = !DILocation(line: 3179, column: 23, scope: !2772)
!2774 = !DILocation(line: 3179, column: 42, scope: !2772)
!2775 = !DILocation(line: 3179, column: 60, scope: !2772)
!2776 = !DILocation(line: 3179, column: 17, scope: !2763)
!2777 = !DILocation(line: 3180, column: 17, scope: !2772)
!2778 = !DILocation(line: 3180, column: 22, scope: !2772)
!2779 = !DILocation(line: 3180, column: 41, scope: !2772)
!2780 = !DILocation(line: 3180, column: 61, scope: !2772)
!2781 = !DILocation(line: 3182, column: 18, scope: !2782)
!2782 = distinct !DILexicalBlock(scope: !2763, file: !939, line: 3182, column: 17)
!2783 = !DILocation(line: 3182, column: 17, scope: !2763)
!2784 = !DILocation(line: 3183, column: 38, scope: !2782)
!2785 = !DILocation(line: 3183, column: 32, scope: !2782)
!2786 = !DILocation(line: 3183, column: 17, scope: !2782)
!2787 = !DILocation(line: 3186, column: 42, scope: !2788)
!2788 = distinct !DILexicalBlock(scope: !2763, file: !939, line: 3186, column: 17)
!2789 = !DILocation(line: 3186, column: 17, scope: !2788)
!2790 = !DILocation(line: 3186, column: 47, scope: !2788)
!2791 = !DILocation(line: 3186, column: 17, scope: !2763)
!2792 = !DILocation(line: 3187, column: 17, scope: !2788)
!2793 = !DILocation(line: 3188, column: 13, scope: !2763)
!2794 = !DILocation(line: 3189, column: 50, scope: !2795)
!2795 = distinct !DILexicalBlock(scope: !2736, file: !939, line: 3189, column: 20)
!2796 = !DILocation(line: 3189, column: 46, scope: !2795)
!2797 = !DILocation(line: 3189, column: 20, scope: !2795)
!2798 = !DILocation(line: 3189, column: 55, scope: !2795)
!2799 = !DILocation(line: 3189, column: 58, scope: !2800)
!2800 = !DILexicalBlockFile(scope: !2795, file: !939, discriminator: 1)
!2801 = !DILocation(line: 3189, column: 63, scope: !2800)
!2802 = !DILocation(line: 3189, column: 20, scope: !2800)
!2803 = !DILocation(line: 3191, column: 50, scope: !2804)
!2804 = distinct !DILexicalBlock(scope: !2805, file: !939, line: 3191, column: 16)
!2805 = distinct !DILexicalBlock(scope: !2795, file: !939, line: 3189, column: 82)
!2806 = !DILocation(line: 3191, column: 16, scope: !2804)
!2807 = !DILocation(line: 3191, column: 55, scope: !2804)
!2808 = !DILocation(line: 3191, column: 16, scope: !2805)
!2809 = !DILocation(line: 3192, column: 17, scope: !2804)
!2810 = !DILocation(line: 3193, column: 22, scope: !2811)
!2811 = distinct !DILexicalBlock(scope: !2804, file: !939, line: 3193, column: 22)
!2812 = !DILocation(line: 3193, column: 27, scope: !2811)
!2813 = !DILocation(line: 3193, column: 22, scope: !2804)
!2814 = !DILocation(line: 3194, column: 17, scope: !2811)
!2815 = !DILocation(line: 3196, column: 9, scope: !2805)
!2816 = !DILocation(line: 3198, column: 23, scope: !2817)
!2817 = distinct !DILexicalBlock(scope: !2708, file: !939, line: 3198, column: 9)
!2818 = !DILocation(line: 3198, column: 14, scope: !2817)
!2819 = !DILocation(line: 3198, column: 50, scope: !2820)
!2820 = !DILexicalBlockFile(scope: !2821, file: !939, discriminator: 1)
!2821 = distinct !DILexicalBlock(scope: !2817, file: !939, line: 3198, column: 9)
!2822 = !DILocation(line: 3198, column: 60, scope: !2820)
!2823 = !DILocation(line: 3198, column: 9, scope: !2820)
!2824 = !DILocation(line: 3199, column: 30, scope: !2825)
!2825 = distinct !DILexicalBlock(scope: !2826, file: !939, line: 3199, column: 17)
!2826 = distinct !DILexicalBlock(scope: !2821, file: !939, line: 3198, column: 78)
!2827 = !DILocation(line: 3199, column: 26, scope: !2825)
!2828 = !DILocation(line: 3199, column: 35, scope: !2825)
!2829 = !DILocation(line: 3199, column: 45, scope: !2825)
!2830 = !DILocation(line: 3199, column: 19, scope: !2825)
!2831 = !DILocation(line: 3199, column: 17, scope: !2826)
!2832 = !DILocation(line: 3200, column: 42, scope: !2833)
!2833 = distinct !DILexicalBlock(scope: !2834, file: !939, line: 3200, column: 21)
!2834 = distinct !DILexicalBlock(scope: !2825, file: !939, line: 3199, column: 75)
!2835 = !DILocation(line: 3200, column: 52, scope: !2833)
!2836 = !DILocation(line: 3200, column: 62, scope: !2833)
!2837 = !DILocation(line: 3200, column: 68, scope: !2833)
!2838 = !DILocation(line: 3200, column: 78, scope: !2833)
!2839 = !DILocation(line: 3200, column: 88, scope: !2833)
!2840 = !DILocation(line: 3200, column: 98, scope: !2833)
!2841 = !DILocation(line: 3200, column: 28, scope: !2833)
!2842 = !DILocation(line: 3200, column: 26, scope: !2833)
!2843 = !DILocation(line: 3200, column: 105, scope: !2833)
!2844 = !DILocation(line: 3200, column: 21, scope: !2834)
!2845 = !DILocation(line: 3201, column: 21, scope: !2833)
!2846 = !DILocation(line: 3202, column: 17, scope: !2834)
!2847 = !DILocation(line: 3204, column: 9, scope: !2826)
!2848 = !DILocation(line: 3198, column: 74, scope: !2849)
!2849 = !DILexicalBlockFile(scope: !2821, file: !939, discriminator: 2)
!2850 = !DILocation(line: 3198, column: 9, scope: !2849)
!2851 = distinct !{!2851, !2852}
!2852 = !DILocation(line: 3198, column: 9, scope: !2708)
!2853 = !DILocation(line: 3205, column: 14, scope: !2854)
!2854 = distinct !DILexicalBlock(scope: !2708, file: !939, line: 3205, column: 13)
!2855 = !DILocation(line: 3205, column: 24, scope: !2854)
!2856 = !DILocation(line: 3205, column: 13, scope: !2708)
!2857 = !DILocation(line: 3206, column: 20, scope: !2858)
!2858 = distinct !DILexicalBlock(scope: !2854, file: !939, line: 3205, column: 30)
!2859 = !DILocation(line: 3207, column: 34, scope: !2858)
!2860 = !DILocation(line: 3207, column: 29, scope: !2858)
!2861 = !DILocation(line: 3207, column: 48, scope: !2858)
!2862 = !DILocation(line: 3207, column: 43, scope: !2858)
!2863 = !DILocation(line: 3207, column: 62, scope: !2858)
!2864 = !DILocation(line: 3207, column: 57, scope: !2858)
!2865 = !DILocation(line: 3207, column: 76, scope: !2858)
!2866 = !DILocation(line: 3207, column: 71, scope: !2858)
!2867 = !DILocation(line: 3207, column: 90, scope: !2858)
!2868 = !DILocation(line: 3207, column: 85, scope: !2858)
!2869 = !DILocation(line: 3207, column: 104, scope: !2858)
!2870 = !DILocation(line: 3207, column: 99, scope: !2858)
!2871 = !DILocation(line: 3207, column: 118, scope: !2858)
!2872 = !DILocation(line: 3207, column: 113, scope: !2858)
!2873 = !DILocation(line: 3207, column: 132, scope: !2858)
!2874 = !DILocation(line: 3207, column: 127, scope: !2858)
!2875 = !DILocation(line: 3207, column: 146, scope: !2858)
!2876 = !DILocation(line: 3207, column: 141, scope: !2858)
!2877 = !DILocation(line: 3207, column: 160, scope: !2858)
!2878 = !DILocation(line: 3207, column: 155, scope: !2858)
!2879 = !DILocation(line: 3207, column: 174, scope: !2858)
!2880 = !DILocation(line: 3207, column: 169, scope: !2858)
!2881 = !DILocation(line: 3207, column: 189, scope: !2858)
!2882 = !DILocation(line: 3207, column: 184, scope: !2858)
!2883 = !DILocation(line: 3207, column: 204, scope: !2858)
!2884 = !DILocation(line: 3207, column: 199, scope: !2858)
!2885 = !DILocation(line: 3207, column: 219, scope: !2858)
!2886 = !DILocation(line: 3207, column: 214, scope: !2858)
!2887 = !DILocation(line: 3207, column: 234, scope: !2858)
!2888 = !DILocation(line: 3207, column: 229, scope: !2858)
!2889 = !DILocation(line: 3207, column: 249, scope: !2858)
!2890 = !DILocation(line: 3207, column: 244, scope: !2858)
!2891 = !DILocation(line: 3206, column: 13, scope: !2858)
!2892 = !DILocation(line: 3208, column: 23, scope: !2858)
!2893 = !DILocation(line: 3208, column: 26, scope: !2858)
!2894 = !DILocation(line: 3208, column: 34, scope: !2858)
!2895 = !DILocation(line: 3208, column: 13, scope: !2858)
!2896 = !DILocation(line: 3209, column: 9, scope: !2858)
!2897 = !DILocation(line: 3154, column: 5, scope: !2898)
!2898 = !DILexicalBlockFile(scope: !2582, file: !939, discriminator: 2)
!2899 = !DILocation(line: 3212, column: 10, scope: !2900)
!2900 = distinct !DILexicalBlock(scope: !2582, file: !939, line: 3212, column: 9)
!2901 = !DILocation(line: 3212, column: 9, scope: !2582)
!2902 = !DILocation(line: 3213, column: 16, scope: !2903)
!2903 = distinct !DILexicalBlock(scope: !2900, file: !939, line: 3212, column: 26)
!2904 = !DILocation(line: 3213, column: 9, scope: !2903)
!2905 = !DILocation(line: 3214, column: 13, scope: !2903)
!2906 = !DILocation(line: 3215, column: 9, scope: !2903)
!2907 = !DILocation(line: 3217, column: 15, scope: !2582)
!2908 = !DILocation(line: 3217, column: 18, scope: !2582)
!2909 = !DILocation(line: 3217, column: 22, scope: !2582)
!2910 = !DILocation(line: 3217, column: 5, scope: !2582)
!2911 = !DILocation(line: 3221, column: 46, scope: !2912)
!2912 = distinct !DILexicalBlock(scope: !2582, file: !939, line: 3221, column: 9)
!2913 = !DILocation(line: 3221, column: 16, scope: !2912)
!2914 = !DILocation(line: 3221, column: 14, scope: !2912)
!2915 = !DILocation(line: 3221, column: 52, scope: !2912)
!2916 = !DILocation(line: 3221, column: 9, scope: !2582)
!2917 = !DILocation(line: 3222, column: 9, scope: !2912)
!2918 = !DILocalVariable(name: "i", scope: !2919, file: !939, line: 3224, type: !1014)
!2919 = distinct !DILexicalBlock(scope: !2582, file: !939, line: 3224, column: 5)
!2920 = !DILocation(line: 3224, column: 14, scope: !2919)
!2921 = !DILocation(line: 3224, column: 10, scope: !2919)
!2922 = !DILocation(line: 3224, column: 21, scope: !2923)
!2923 = !DILexicalBlockFile(scope: !2924, file: !939, discriminator: 1)
!2924 = distinct !DILexicalBlock(scope: !2919, file: !939, line: 3224, column: 5)
!2925 = !DILocation(line: 3224, column: 25, scope: !2923)
!2926 = !DILocation(line: 3224, column: 28, scope: !2923)
!2927 = !DILocation(line: 3224, column: 23, scope: !2923)
!2928 = !DILocation(line: 3224, column: 5, scope: !2923)
!2929 = !DILocation(line: 3225, column: 42, scope: !2924)
!2930 = !DILocation(line: 3225, column: 58, scope: !2924)
!2931 = !DILocation(line: 3225, column: 47, scope: !2924)
!2932 = !DILocation(line: 3225, column: 50, scope: !2924)
!2933 = !DILocation(line: 3225, column: 9, scope: !2924)
!2934 = !DILocation(line: 3224, column: 41, scope: !2935)
!2935 = !DILexicalBlockFile(scope: !2924, file: !939, discriminator: 2)
!2936 = !DILocation(line: 3224, column: 5, scope: !2935)
!2937 = distinct !{!2937, !2938}
!2938 = !DILocation(line: 3224, column: 5, scope: !2582)
!2939 = !DILocation(line: 3227, column: 41, scope: !2940)
!2940 = distinct !DILexicalBlock(scope: !2582, file: !939, line: 3227, column: 9)
!2941 = !DILocation(line: 3227, column: 16, scope: !2940)
!2942 = !DILocation(line: 3227, column: 14, scope: !2940)
!2943 = !DILocation(line: 3227, column: 47, scope: !2940)
!2944 = !DILocation(line: 3227, column: 9, scope: !2582)
!2945 = !DILocation(line: 3228, column: 9, scope: !2940)
!2946 = !DILocation(line: 3230, column: 9, scope: !2947)
!2947 = distinct !DILexicalBlock(scope: !2582, file: !939, line: 3230, column: 9)
!2948 = !DILocation(line: 3230, column: 14, scope: !2947)
!2949 = !DILocation(line: 3230, column: 30, scope: !2947)
!2950 = !DILocation(line: 3230, column: 9, scope: !2582)
!2951 = !DILocation(line: 3232, column: 16, scope: !2952)
!2952 = distinct !DILexicalBlock(scope: !2947, file: !939, line: 3230, column: 35)
!2953 = !DILocation(line: 3232, column: 21, scope: !2952)
!2954 = !DILocation(line: 3233, column: 16, scope: !2952)
!2955 = !DILocation(line: 3233, column: 21, scope: !2952)
!2956 = !DILocation(line: 3233, column: 38, scope: !2952)
!2957 = !DILocation(line: 3233, column: 43, scope: !2952)
!2958 = !DILocation(line: 3233, column: 59, scope: !2952)
!2959 = !DILocation(line: 3232, column: 9, scope: !2952)
!2960 = !DILocation(line: 3234, column: 5, scope: !2952)
!2961 = !DILocation(line: 3234, column: 16, scope: !2962)
!2962 = !DILexicalBlockFile(scope: !2963, file: !939, discriminator: 1)
!2963 = distinct !DILexicalBlock(scope: !2947, file: !939, line: 3234, column: 16)
!2964 = !DILocation(line: 3234, column: 21, scope: !2962)
!2965 = !DILocation(line: 3234, column: 37, scope: !2962)
!2966 = !DILocation(line: 3234, column: 42, scope: !2962)
!2967 = !DILocation(line: 3234, column: 45, scope: !2968)
!2968 = !DILexicalBlockFile(scope: !2963, file: !939, discriminator: 2)
!2969 = !DILocation(line: 3234, column: 50, scope: !2968)
!2970 = !DILocation(line: 3234, column: 53, scope: !2968)
!2971 = !DILocation(line: 3234, column: 63, scope: !2968)
!2972 = !DILocation(line: 3234, column: 67, scope: !2973)
!2973 = !DILexicalBlockFile(scope: !2963, file: !939, discriminator: 3)
!2974 = !DILocation(line: 3234, column: 70, scope: !2973)
!2975 = !DILocation(line: 3234, column: 88, scope: !2973)
!2976 = !DILocation(line: 3234, column: 16, scope: !2973)
!2977 = !DILocation(line: 3235, column: 16, scope: !2978)
!2978 = distinct !DILexicalBlock(scope: !2963, file: !939, line: 3234, column: 99)
!2979 = !DILocation(line: 3235, column: 21, scope: !2978)
!2980 = !DILocation(line: 3235, column: 9, scope: !2978)
!2981 = !DILocation(line: 3236, column: 13, scope: !2978)
!2982 = !DILocation(line: 3237, column: 9, scope: !2978)
!2983 = !DILocation(line: 3240, column: 36, scope: !2582)
!2984 = !DILocation(line: 3240, column: 5, scope: !2582)
!2985 = !DILocalVariable(name: "i", scope: !2986, file: !939, line: 3242, type: !1014)
!2986 = distinct !DILexicalBlock(scope: !2582, file: !939, line: 3242, column: 5)
!2987 = !DILocation(line: 3242, column: 14, scope: !2986)
!2988 = !DILocation(line: 3242, column: 10, scope: !2986)
!2989 = !DILocation(line: 3242, column: 21, scope: !2990)
!2990 = !DILexicalBlockFile(scope: !2991, file: !939, discriminator: 1)
!2991 = distinct !DILexicalBlock(scope: !2986, file: !939, line: 3242, column: 5)
!2992 = !DILocation(line: 3242, column: 25, scope: !2990)
!2993 = !DILocation(line: 3242, column: 28, scope: !2990)
!2994 = !DILocation(line: 3242, column: 23, scope: !2990)
!2995 = !DILocation(line: 3242, column: 5, scope: !2990)
!2996 = !DILocation(line: 3243, column: 43, scope: !2991)
!2997 = !DILocation(line: 3243, column: 59, scope: !2991)
!2998 = !DILocation(line: 3243, column: 48, scope: !2991)
!2999 = !DILocation(line: 3243, column: 51, scope: !2991)
!3000 = !DILocation(line: 3243, column: 9, scope: !2991)
!3001 = !DILocation(line: 3242, column: 41, scope: !3002)
!3002 = !DILexicalBlockFile(scope: !2991, file: !939, discriminator: 2)
!3003 = !DILocation(line: 3242, column: 5, scope: !3002)
!3004 = distinct !{!3004, !3005}
!3005 = !DILocation(line: 3242, column: 5, scope: !2582)
!3006 = !DILocation(line: 3245, column: 5, scope: !2582)
!3007 = !DILocation(line: 3247, column: 20, scope: !2582)
!3008 = !DILocation(line: 3247, column: 5, scope: !2582)
!3009 = !DILocation(line: 3249, column: 12, scope: !2582)
!3010 = !DILocation(line: 3249, column: 5, scope: !2582)
!3011 = !DILocation(line: 3250, column: 1, scope: !2582)
!3012 = distinct !DISubprogram(name: "mxf_read_packet", scope: !939, file: !939, line: 3417, type: !3013, isLocal: true, isDefinition: true, scopeLine: 3418, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!3013 = !DISubroutineType(types: !3014)
!3014 = !{!1014, !2495, !1335}
!3015 = !DILocalVariable(name: "x", arg: 1, scope: !3016, file: !3017, line: 66, type: !1004)
!3016 = distinct !DISubprogram(name: "av_bswap32", scope: !3017, file: !3017, line: 66, type: !3018, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!3017 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!3018 = !DISubroutineType(types: !3019)
!3019 = !{!1004, !1004}
!3020 = !DILocation(line: 66, column: 98, scope: !3016, inlinedAt: !3021)
!3021 = distinct !DILocation(line: 3460, column: 24, scope: !3022)
!3022 = distinct !DILexicalBlock(scope: !3023, file: !939, line: 3457, column: 28)
!3023 = distinct !DILexicalBlock(scope: !3024, file: !939, line: 3457, column: 17)
!3024 = distinct !DILexicalBlock(scope: !3025, file: !939, line: 3450, column: 101)
!3025 = distinct !DILexicalBlock(scope: !3026, file: !939, line: 3448, column: 13)
!3026 = distinct !DILexicalBlock(scope: !3012, file: !939, line: 3423, column: 15)
!3027 = !DILocation(line: 557, column: 77, scope: !2586, inlinedAt: !3028)
!3028 = distinct !DILocation(line: 3425, column: 23, scope: !3026)
!3029 = !DILocalVariable(name: "s", arg: 1, scope: !3012, file: !939, line: 3417, type: !2495)
!3030 = !DILocation(line: 3417, column: 45, scope: !3012)
!3031 = !DILocalVariable(name: "pkt", arg: 2, scope: !3012, file: !939, line: 3417, type: !1335)
!3032 = !DILocation(line: 3417, column: 58, scope: !3012)
!3033 = !DILocalVariable(name: "klv", scope: !3012, file: !939, line: 3419, type: !2498)
!3034 = !DILocation(line: 3419, column: 15, scope: !3012)
!3035 = !DILocalVariable(name: "mxf", scope: !3012, file: !939, line: 3420, type: !2594)
!3036 = !DILocation(line: 3420, column: 17, scope: !3012)
!3037 = !DILocation(line: 3420, column: 23, scope: !3012)
!3038 = !DILocation(line: 3420, column: 26, scope: !3012)
!3039 = !DILocalVariable(name: "ret", scope: !3012, file: !939, line: 3421, type: !1014)
!3040 = !DILocation(line: 3421, column: 9, scope: !3012)
!3041 = !DILocation(line: 3423, column: 5, scope: !3012)
!3042 = !DILocalVariable(name: "max_data_size", scope: !3026, file: !939, line: 3424, type: !1015)
!3043 = !DILocation(line: 3424, column: 17, scope: !3026)
!3044 = !DILocalVariable(name: "pos", scope: !3026, file: !939, line: 3425, type: !1015)
!3045 = !DILocation(line: 3425, column: 17, scope: !3026)
!3046 = !DILocation(line: 3425, column: 33, scope: !3026)
!3047 = !DILocation(line: 3425, column: 36, scope: !3026)
!3048 = !DILocation(line: 3425, column: 23, scope: !3026)
!3049 = !DILocation(line: 559, column: 22, scope: !2586, inlinedAt: !3028)
!3050 = !DILocation(line: 559, column: 12, scope: !2586, inlinedAt: !3028)
!3051 = !DILocation(line: 3427, column: 13, scope: !3052)
!3052 = distinct !DILexicalBlock(scope: !3026, file: !939, line: 3427, column: 13)
!3053 = !DILocation(line: 3427, column: 19, scope: !3052)
!3054 = !DILocation(line: 3427, column: 24, scope: !3052)
!3055 = !DILocation(line: 3427, column: 41, scope: !3052)
!3056 = !DILocation(line: 3427, column: 52, scope: !3052)
!3057 = !DILocation(line: 3427, column: 57, scope: !3052)
!3058 = !DILocation(line: 3427, column: 74, scope: !3052)
!3059 = !DILocation(line: 3427, column: 50, scope: !3052)
!3060 = !DILocation(line: 3427, column: 17, scope: !3052)
!3061 = !DILocation(line: 3427, column: 81, scope: !3052)
!3062 = !DILocation(line: 3427, column: 84, scope: !3063)
!3063 = !DILexicalBlockFile(scope: !3052, file: !939, discriminator: 1)
!3064 = !DILocation(line: 3427, column: 91, scope: !3063)
!3065 = !DILocation(line: 3427, column: 96, scope: !3063)
!3066 = !DILocation(line: 3427, column: 113, scope: !3063)
!3067 = !DILocation(line: 3427, column: 88, scope: !3063)
!3068 = !DILocation(line: 3427, column: 13, scope: !3063)
!3069 = !DILocation(line: 3428, column: 13, scope: !3070)
!3070 = distinct !DILexicalBlock(scope: !3052, file: !939, line: 3427, column: 123)
!3071 = !DILocation(line: 3428, column: 18, scope: !3070)
!3072 = !DILocation(line: 3428, column: 37, scope: !3070)
!3073 = !DILocation(line: 3428, column: 48, scope: !3070)
!3074 = !DILocation(line: 3428, column: 49, scope: !3070)
!3075 = !DILocation(line: 3428, column: 37, scope: !3076)
!3076 = !DILexicalBlockFile(scope: !3070, file: !939, discriminator: 1)
!3077 = !DILocation(line: 3429, column: 41, scope: !3070)
!3078 = !DILocation(line: 3429, column: 44, scope: !3070)
!3079 = !DILocation(line: 3429, column: 19, scope: !3070)
!3080 = !DILocation(line: 3429, column: 17, scope: !3070)
!3081 = !DILocation(line: 3430, column: 17, scope: !3082)
!3082 = distinct !DILexicalBlock(scope: !3070, file: !939, line: 3430, column: 17)
!3083 = !DILocation(line: 3430, column: 21, scope: !3082)
!3084 = !DILocation(line: 3430, column: 17, scope: !3070)
!3085 = !DILocation(line: 3431, column: 17, scope: !3082)
!3086 = !DILocation(line: 3432, column: 33, scope: !3070)
!3087 = !DILocation(line: 3432, column: 27, scope: !3070)
!3088 = !DILocation(line: 3433, column: 23, scope: !3070)
!3089 = !DILocation(line: 3433, column: 38, scope: !3070)
!3090 = !DILocation(line: 3433, column: 32, scope: !3070)
!3091 = !DILocation(line: 3433, column: 17, scope: !3070)
!3092 = !DILocation(line: 3434, column: 13, scope: !3070)
!3093 = distinct !{!3093, !3092}
!3094 = !DILocation(line: 3434, column: 415, scope: !3095)
!3095 = !DILexicalBlockFile(scope: !3096, file: !939, discriminator: 1)
!3096 = distinct !DILexicalBlock(scope: !3070, file: !939, line: 3434, column: 16)
!3097 = !DILocation(line: 3435, column: 20, scope: !3070)
!3098 = !DILocation(line: 3435, column: 78, scope: !3070)
!3099 = !DILocation(line: 3435, column: 90, scope: !3070)
!3100 = !DILocation(line: 3435, column: 13, scope: !3070)
!3101 = !DILocation(line: 3436, column: 30, scope: !3102)
!3102 = distinct !DILexicalBlock(scope: !3070, file: !939, line: 3436, column: 17)
!3103 = !DILocation(line: 3436, column: 26, scope: !3102)
!3104 = !DILocation(line: 3436, column: 19, scope: !3102)
!3105 = !DILocation(line: 3436, column: 17, scope: !3070)
!3106 = !DILocation(line: 3437, column: 43, scope: !3107)
!3107 = distinct !DILexicalBlock(scope: !3102, file: !939, line: 3436, column: 99)
!3108 = !DILocation(line: 3437, column: 46, scope: !3107)
!3109 = !DILocation(line: 3437, column: 23, scope: !3107)
!3110 = !DILocation(line: 3437, column: 21, scope: !3107)
!3111 = !DILocation(line: 3438, column: 21, scope: !3112)
!3112 = distinct !DILexicalBlock(scope: !3107, file: !939, line: 3438, column: 21)
!3113 = !DILocation(line: 3438, column: 25, scope: !3112)
!3114 = !DILocation(line: 3438, column: 21, scope: !3107)
!3115 = !DILocation(line: 3439, column: 28, scope: !3116)
!3116 = distinct !DILexicalBlock(scope: !3112, file: !939, line: 3438, column: 30)
!3117 = !DILocation(line: 3439, column: 21, scope: !3116)
!3118 = !DILocation(line: 3440, column: 28, scope: !3116)
!3119 = !DILocation(line: 3440, column: 21, scope: !3116)
!3120 = !DILocation(line: 3442, column: 17, scope: !3107)
!3121 = !DILocation(line: 3444, column: 9, scope: !3070)
!3122 = !DILocation(line: 3445, column: 19, scope: !3123)
!3123 = distinct !DILexicalBlock(scope: !3052, file: !939, line: 3444, column: 16)
!3124 = !DILocation(line: 3445, column: 24, scope: !3123)
!3125 = !DILocation(line: 3446, column: 33, scope: !3123)
!3126 = !DILocation(line: 3446, column: 44, scope: !3123)
!3127 = !DILocation(line: 3446, column: 42, scope: !3123)
!3128 = !DILocation(line: 3446, column: 27, scope: !3123)
!3129 = !DILocation(line: 3448, column: 26, scope: !3025)
!3130 = !DILocation(line: 3448, column: 22, scope: !3025)
!3131 = !DILocation(line: 3448, column: 15, scope: !3025)
!3132 = !DILocation(line: 3448, column: 90, scope: !3025)
!3133 = !DILocation(line: 3449, column: 26, scope: !3025)
!3134 = !DILocation(line: 3449, column: 22, scope: !3025)
!3135 = !DILocation(line: 3449, column: 15, scope: !3025)
!3136 = !DILocation(line: 3449, column: 106, scope: !3025)
!3137 = !DILocation(line: 3450, column: 26, scope: !3025)
!3138 = !DILocation(line: 3450, column: 22, scope: !3025)
!3139 = !DILocation(line: 3450, column: 15, scope: !3025)
!3140 = !DILocation(line: 3448, column: 13, scope: !3141)
!3141 = !DILexicalBlockFile(scope: !3026, file: !939, discriminator: 1)
!3142 = !DILocalVariable(name: "body_sid", scope: !3024, file: !939, line: 3451, type: !1014)
!3143 = !DILocation(line: 3451, column: 17, scope: !3024)
!3144 = !DILocation(line: 3451, column: 52, scope: !3024)
!3145 = !DILocation(line: 3451, column: 61, scope: !3024)
!3146 = !DILocation(line: 3451, column: 28, scope: !3024)
!3147 = !DILocalVariable(name: "index", scope: !3024, file: !939, line: 3452, type: !1014)
!3148 = !DILocation(line: 3452, column: 17, scope: !3024)
!3149 = !DILocation(line: 3452, column: 46, scope: !3024)
!3150 = !DILocation(line: 3452, column: 55, scope: !3024)
!3151 = !DILocation(line: 3452, column: 25, scope: !3024)
!3152 = !DILocalVariable(name: "next_ofs", scope: !3024, file: !939, line: 3453, type: !1015)
!3153 = !DILocation(line: 3453, column: 21, scope: !3024)
!3154 = !DILocalVariable(name: "st", scope: !3024, file: !939, line: 3454, type: !1569)
!3155 = !DILocation(line: 3454, column: 23, scope: !3024)
!3156 = !DILocalVariable(name: "track", scope: !3024, file: !939, line: 3455, type: !1108)
!3157 = !DILocation(line: 3455, column: 23, scope: !3024)
!3158 = !DILocation(line: 3457, column: 17, scope: !3023)
!3159 = !DILocation(line: 3457, column: 23, scope: !3023)
!3160 = !DILocation(line: 3457, column: 17, scope: !3024)
!3161 = !DILocation(line: 3458, column: 24, scope: !3022)
!3162 = !DILocation(line: 3460, column: 71, scope: !3022)
!3163 = !DILocation(line: 3460, column: 67, scope: !3022)
!3164 = !DILocation(line: 3460, column: 75, scope: !3022)
!3165 = !DILocation(line: 3460, column: 83, scope: !3022)
!3166 = !DILocation(line: 3460, column: 24, scope: !3022)
!3167 = !DILocation(line: 68, column: 16, scope: !3016, inlinedAt: !3021)
!3168 = !DILocation(line: 68, column: 19, scope: !3016, inlinedAt: !3021)
!3169 = !DILocation(line: 68, column: 24, scope: !3016, inlinedAt: !3021)
!3170 = !DILocation(line: 68, column: 38, scope: !3016, inlinedAt: !3021)
!3171 = !DILocation(line: 68, column: 41, scope: !3016, inlinedAt: !3021)
!3172 = !DILocation(line: 68, column: 46, scope: !3016, inlinedAt: !3021)
!3173 = !DILocation(line: 68, column: 34, scope: !3016, inlinedAt: !3021)
!3174 = !DILocation(line: 68, column: 57, scope: !3016, inlinedAt: !3021)
!3175 = !DILocation(line: 68, column: 69, scope: !3016, inlinedAt: !3021)
!3176 = !DILocation(line: 68, column: 72, scope: !3016, inlinedAt: !3021)
!3177 = !DILocation(line: 68, column: 79, scope: !3016, inlinedAt: !3021)
!3178 = !DILocation(line: 68, column: 84, scope: !3016, inlinedAt: !3021)
!3179 = !DILocation(line: 68, column: 99, scope: !3016, inlinedAt: !3021)
!3180 = !DILocation(line: 68, column: 102, scope: !3016, inlinedAt: !3021)
!3181 = !DILocation(line: 68, column: 109, scope: !3016, inlinedAt: !3021)
!3182 = !DILocation(line: 68, column: 114, scope: !3016, inlinedAt: !3021)
!3183 = !DILocation(line: 68, column: 94, scope: !3016, inlinedAt: !3021)
!3184 = !DILocation(line: 68, column: 63, scope: !3016, inlinedAt: !3021)
!3185 = !DILocation(line: 3458, column: 17, scope: !3022)
!3186 = !DILocation(line: 3461, column: 17, scope: !3022)
!3187 = !DILocation(line: 3464, column: 29, scope: !3024)
!3188 = !DILocation(line: 3464, column: 18, scope: !3024)
!3189 = !DILocation(line: 3464, column: 21, scope: !3024)
!3190 = !DILocation(line: 3464, column: 16, scope: !3024)
!3191 = !DILocation(line: 3465, column: 21, scope: !3024)
!3192 = !DILocation(line: 3465, column: 25, scope: !3024)
!3193 = !DILocation(line: 3465, column: 19, scope: !3024)
!3194 = !DILocation(line: 3467, column: 28, scope: !3195)
!3195 = distinct !DILexicalBlock(scope: !3024, file: !939, line: 3467, column: 17)
!3196 = !DILocation(line: 3467, column: 17, scope: !3195)
!3197 = !DILocation(line: 3467, column: 20, scope: !3195)
!3198 = !DILocation(line: 3467, column: 36, scope: !3195)
!3199 = !DILocation(line: 3467, column: 44, scope: !3195)
!3200 = !DILocation(line: 3467, column: 17, scope: !3024)
!3201 = !DILocation(line: 3468, column: 17, scope: !3195)
!3202 = !DILocation(line: 3470, column: 50, scope: !3024)
!3203 = !DILocation(line: 3470, column: 55, scope: !3024)
!3204 = !DILocation(line: 3470, column: 59, scope: !3024)
!3205 = !DILocation(line: 3470, column: 24, scope: !3024)
!3206 = !DILocation(line: 3470, column: 22, scope: !3024)
!3207 = !DILocation(line: 3472, column: 17, scope: !3208)
!3208 = distinct !DILexicalBlock(scope: !3024, file: !939, line: 3472, column: 17)
!3209 = !DILocation(line: 3472, column: 24, scope: !3208)
!3210 = !DILocation(line: 3472, column: 33, scope: !3208)
!3211 = !DILocation(line: 3472, column: 17, scope: !3024)
!3212 = !DILocalVariable(name: "size", scope: !3213, file: !939, line: 3473, type: !1015)
!3213 = distinct !DILexicalBlock(scope: !3208, file: !939, line: 3472, column: 50)
!3214 = !DILocation(line: 3473, column: 25, scope: !3213)
!3215 = !DILocation(line: 3475, column: 21, scope: !3216)
!3216 = distinct !DILexicalBlock(scope: !3213, file: !939, line: 3475, column: 21)
!3217 = !DILocation(line: 3475, column: 30, scope: !3216)
!3218 = !DILocation(line: 3475, column: 21, scope: !3213)
!3219 = !DILocation(line: 3477, column: 29, scope: !3220)
!3220 = distinct !DILexicalBlock(scope: !3221, file: !939, line: 3477, column: 25)
!3221 = distinct !DILexicalBlock(scope: !3216, file: !939, line: 3475, column: 36)
!3222 = !DILocation(line: 3477, column: 44, scope: !3220)
!3223 = !DILocation(line: 3477, column: 38, scope: !3220)
!3224 = !DILocation(line: 3477, column: 54, scope: !3220)
!3225 = !DILocation(line: 3477, column: 51, scope: !3220)
!3226 = !DILocation(line: 3477, column: 58, scope: !3220)
!3227 = !DILocation(line: 3477, column: 61, scope: !3228)
!3228 = !DILexicalBlockFile(scope: !3220, file: !939, discriminator: 1)
!3229 = !DILocation(line: 3477, column: 75, scope: !3228)
!3230 = !DILocation(line: 3477, column: 25, scope: !3228)
!3231 = !DILocation(line: 3478, column: 25, scope: !3232)
!3232 = distinct !DILexicalBlock(scope: !3220, file: !939, line: 3477, column: 89)
!3233 = !DILocation(line: 3478, column: 29, scope: !3232)
!3234 = !DILocation(line: 3478, column: 42, scope: !3232)
!3235 = !DILocation(line: 3479, column: 47, scope: !3232)
!3236 = !DILocation(line: 3479, column: 25, scope: !3232)
!3237 = !DILocation(line: 3480, column: 21, scope: !3232)
!3238 = !DILocation(line: 3481, column: 30, scope: !3221)
!3239 = !DILocation(line: 3481, column: 45, scope: !3221)
!3240 = !DILocation(line: 3481, column: 29, scope: !3221)
!3241 = !DILocation(line: 3481, column: 29, scope: !3242)
!3242 = !DILexicalBlockFile(scope: !3221, file: !939, discriminator: 1)
!3243 = !DILocation(line: 3481, column: 78, scope: !3244)
!3244 = !DILexicalBlockFile(scope: !3221, file: !939, discriminator: 2)
!3245 = !DILocation(line: 3481, column: 29, scope: !3244)
!3246 = !DILocation(line: 3481, column: 29, scope: !3247)
!3247 = !DILexicalBlockFile(scope: !3221, file: !939, discriminator: 3)
!3248 = !DILocation(line: 3481, column: 26, scope: !3247)
!3249 = !DILocation(line: 3482, column: 17, scope: !3221)
!3250 = !DILocation(line: 3483, column: 33, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !3252, file: !939, line: 3483, column: 25)
!3252 = distinct !DILexicalBlock(scope: !3216, file: !939, line: 3482, column: 24)
!3253 = !DILocation(line: 3483, column: 44, scope: !3251)
!3254 = !DILocation(line: 3483, column: 42, scope: !3251)
!3255 = !DILocation(line: 3483, column: 31, scope: !3251)
!3256 = !DILocation(line: 3483, column: 49, scope: !3251)
!3257 = !DILocation(line: 3483, column: 25, scope: !3252)
!3258 = !DILocation(line: 3484, column: 32, scope: !3259)
!3259 = distinct !DILexicalBlock(scope: !3251, file: !939, line: 3483, column: 55)
!3260 = !DILocation(line: 3484, column: 73, scope: !3259)
!3261 = !DILocation(line: 3484, column: 25, scope: !3259)
!3262 = !DILocation(line: 3485, column: 29, scope: !3259)
!3263 = !DILocation(line: 3486, column: 25, scope: !3259)
!3264 = !DILocation(line: 3489, column: 25, scope: !3265)
!3265 = distinct !DILexicalBlock(scope: !3252, file: !939, line: 3489, column: 25)
!3266 = !DILocation(line: 3489, column: 32, scope: !3265)
!3267 = !DILocation(line: 3489, column: 30, scope: !3265)
!3268 = !DILocation(line: 3489, column: 25, scope: !3252)
!3269 = !DILocation(line: 3490, column: 32, scope: !3265)
!3270 = !DILocation(line: 3490, column: 30, scope: !3265)
!3271 = !DILocation(line: 3490, column: 25, scope: !3265)
!3272 = !DILocation(line: 3493, column: 17, scope: !3213)
!3273 = !DILocation(line: 3493, column: 22, scope: !3213)
!3274 = !DILocation(line: 3493, column: 41, scope: !3213)
!3275 = !DILocation(line: 3494, column: 30, scope: !3213)
!3276 = !DILocation(line: 3494, column: 21, scope: !3213)
!3277 = !DILocation(line: 3494, column: 28, scope: !3213)
!3278 = !DILocation(line: 3495, column: 30, scope: !3213)
!3279 = !DILocation(line: 3495, column: 21, scope: !3213)
!3280 = !DILocation(line: 3495, column: 28, scope: !3213)
!3281 = !DILocation(line: 3496, column: 36, scope: !3213)
!3282 = !DILocation(line: 3496, column: 49, scope: !3213)
!3283 = !DILocation(line: 3496, column: 43, scope: !3213)
!3284 = !DILocation(line: 3496, column: 21, scope: !3213)
!3285 = !DILocation(line: 3496, column: 30, scope: !3213)
!3286 = !DILocation(line: 3497, column: 13, scope: !3213)
!3287 = !DILocation(line: 3500, column: 21, scope: !3288)
!3288 = distinct !DILexicalBlock(scope: !3024, file: !939, line: 3500, column: 17)
!3289 = !DILocation(line: 3500, column: 17, scope: !3288)
!3290 = !DILocation(line: 3500, column: 29, scope: !3288)
!3291 = !DILocation(line: 3500, column: 37, scope: !3288)
!3292 = !DILocation(line: 3500, column: 44, scope: !3293)
!3293 = !DILexicalBlockFile(scope: !3288, file: !939, discriminator: 1)
!3294 = !DILocation(line: 3500, column: 40, scope: !3293)
!3295 = !DILocation(line: 3500, column: 52, scope: !3293)
!3296 = !DILocation(line: 3500, column: 60, scope: !3293)
!3297 = !DILocation(line: 3500, column: 67, scope: !3298)
!3298 = !DILexicalBlockFile(scope: !3288, file: !939, discriminator: 2)
!3299 = !DILocation(line: 3500, column: 63, scope: !3298)
!3300 = !DILocation(line: 3500, column: 75, scope: !3298)
!3301 = !DILocation(line: 3500, column: 17, scope: !3298)
!3302 = !DILocation(line: 3501, column: 47, scope: !3303)
!3303 = distinct !DILexicalBlock(scope: !3288, file: !939, line: 3500, column: 84)
!3304 = !DILocation(line: 3501, column: 50, scope: !3303)
!3305 = !DILocation(line: 3501, column: 65, scope: !3303)
!3306 = !DILocation(line: 3501, column: 54, scope: !3303)
!3307 = !DILocation(line: 3501, column: 57, scope: !3303)
!3308 = !DILocation(line: 3502, column: 47, scope: !3303)
!3309 = !DILocation(line: 3502, column: 56, scope: !3303)
!3310 = !DILocation(line: 3501, column: 23, scope: !3303)
!3311 = !DILocation(line: 3501, column: 21, scope: !3303)
!3312 = !DILocation(line: 3503, column: 21, scope: !3313)
!3313 = distinct !DILexicalBlock(scope: !3303, file: !939, line: 3503, column: 21)
!3314 = !DILocation(line: 3503, column: 25, scope: !3313)
!3315 = !DILocation(line: 3503, column: 21, scope: !3303)
!3316 = !DILocation(line: 3504, column: 28, scope: !3317)
!3317 = distinct !DILexicalBlock(scope: !3313, file: !939, line: 3503, column: 30)
!3318 = !DILocation(line: 3504, column: 21, scope: !3317)
!3319 = !DILocation(line: 3505, column: 21, scope: !3317)
!3320 = !DILocation(line: 3505, column: 26, scope: !3317)
!3321 = !DILocation(line: 3505, column: 45, scope: !3317)
!3322 = !DILocation(line: 3505, column: 56, scope: !3317)
!3323 = !DILocation(line: 3505, column: 57, scope: !3317)
!3324 = !DILocation(line: 3505, column: 45, scope: !3325)
!3325 = !DILexicalBlockFile(scope: !3317, file: !939, discriminator: 1)
!3326 = !DILocation(line: 3506, column: 28, scope: !3317)
!3327 = !DILocation(line: 3506, column: 21, scope: !3317)
!3328 = !DILocation(line: 3508, column: 13, scope: !3303)
!3329 = !DILocation(line: 3508, column: 24, scope: !3330)
!3330 = !DILexicalBlockFile(scope: !3331, file: !939, discriminator: 1)
!3331 = distinct !DILexicalBlock(scope: !3288, file: !939, line: 3508, column: 24)
!3332 = !DILocation(line: 3508, column: 29, scope: !3330)
!3333 = !DILocation(line: 3508, column: 44, scope: !3330)
!3334 = !DILocation(line: 3509, column: 35, scope: !3331)
!3335 = !DILocation(line: 3509, column: 24, scope: !3331)
!3336 = !DILocation(line: 3509, column: 27, scope: !3331)
!3337 = !DILocation(line: 3509, column: 43, scope: !3331)
!3338 = !DILocation(line: 3509, column: 53, scope: !3331)
!3339 = !DILocation(line: 3509, column: 62, scope: !3331)
!3340 = !DILocation(line: 3508, column: 24, scope: !3298)
!3341 = !DILocation(line: 3510, column: 45, scope: !3342)
!3342 = distinct !DILexicalBlock(scope: !3331, file: !939, line: 3509, column: 86)
!3343 = !DILocation(line: 3510, column: 59, scope: !3342)
!3344 = !DILocation(line: 3510, column: 48, scope: !3342)
!3345 = !DILocation(line: 3510, column: 51, scope: !3342)
!3346 = !DILocation(line: 3510, column: 67, scope: !3342)
!3347 = !DILocation(line: 3510, column: 76, scope: !3342)
!3348 = !DILocation(line: 3510, column: 23, scope: !3342)
!3349 = !DILocation(line: 3510, column: 21, scope: !3342)
!3350 = !DILocation(line: 3511, column: 21, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3342, file: !939, line: 3511, column: 21)
!3352 = !DILocation(line: 3511, column: 25, scope: !3351)
!3353 = !DILocation(line: 3511, column: 21, scope: !3342)
!3354 = !DILocation(line: 3512, column: 21, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3351, file: !939, line: 3511, column: 30)
!3356 = !DILocation(line: 3512, column: 26, scope: !3355)
!3357 = !DILocation(line: 3512, column: 45, scope: !3355)
!3358 = !DILocation(line: 3512, column: 56, scope: !3355)
!3359 = !DILocation(line: 3512, column: 57, scope: !3355)
!3360 = !DILocation(line: 3512, column: 45, scope: !3361)
!3361 = !DILexicalBlockFile(scope: !3355, file: !939, discriminator: 1)
!3362 = !DILocation(line: 3513, column: 28, scope: !3355)
!3363 = !DILocation(line: 3513, column: 21, scope: !3355)
!3364 = !DILocation(line: 3515, column: 13, scope: !3342)
!3365 = !DILocation(line: 3516, column: 37, scope: !3366)
!3366 = distinct !DILexicalBlock(scope: !3331, file: !939, line: 3515, column: 20)
!3367 = !DILocation(line: 3516, column: 40, scope: !3366)
!3368 = !DILocation(line: 3516, column: 44, scope: !3366)
!3369 = !DILocation(line: 3516, column: 53, scope: !3366)
!3370 = !DILocation(line: 3516, column: 49, scope: !3366)
!3371 = !DILocation(line: 3516, column: 23, scope: !3366)
!3372 = !DILocation(line: 3516, column: 21, scope: !3366)
!3373 = !DILocation(line: 3517, column: 21, scope: !3374)
!3374 = distinct !DILexicalBlock(scope: !3366, file: !939, line: 3517, column: 21)
!3375 = !DILocation(line: 3517, column: 25, scope: !3374)
!3376 = !DILocation(line: 3517, column: 21, scope: !3366)
!3377 = !DILocation(line: 3518, column: 21, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !3374, file: !939, line: 3517, column: 30)
!3379 = !DILocation(line: 3518, column: 26, scope: !3378)
!3380 = !DILocation(line: 3518, column: 45, scope: !3378)
!3381 = !DILocation(line: 3518, column: 56, scope: !3378)
!3382 = !DILocation(line: 3518, column: 57, scope: !3378)
!3383 = !DILocation(line: 3518, column: 45, scope: !3384)
!3384 = !DILexicalBlockFile(scope: !3378, file: !939, discriminator: 1)
!3385 = !DILocation(line: 3519, column: 28, scope: !3378)
!3386 = !DILocation(line: 3519, column: 21, scope: !3378)
!3387 = !DILocation(line: 3522, column: 33, scope: !3024)
!3388 = !DILocation(line: 3522, column: 13, scope: !3024)
!3389 = !DILocation(line: 3522, column: 18, scope: !3024)
!3390 = !DILocation(line: 3522, column: 31, scope: !3024)
!3391 = !DILocation(line: 3523, column: 28, scope: !3024)
!3392 = !DILocation(line: 3523, column: 13, scope: !3024)
!3393 = !DILocation(line: 3523, column: 18, scope: !3024)
!3394 = !DILocation(line: 3523, column: 22, scope: !3024)
!3395 = !DILocation(line: 3525, column: 31, scope: !3024)
!3396 = !DILocation(line: 3525, column: 36, scope: !3024)
!3397 = !DILocation(line: 3525, column: 40, scope: !3024)
!3398 = !DILocation(line: 3525, column: 19, scope: !3024)
!3399 = !DILocation(line: 3525, column: 17, scope: !3024)
!3400 = !DILocation(line: 3526, column: 17, scope: !3401)
!3401 = distinct !DILexicalBlock(scope: !3024, file: !939, line: 3526, column: 17)
!3402 = !DILocation(line: 3526, column: 21, scope: !3401)
!3403 = !DILocation(line: 3526, column: 17, scope: !3024)
!3404 = !DILocation(line: 3527, column: 17, scope: !3405)
!3405 = distinct !DILexicalBlock(scope: !3401, file: !939, line: 3526, column: 26)
!3406 = !DILocation(line: 3527, column: 22, scope: !3405)
!3407 = !DILocation(line: 3527, column: 41, scope: !3405)
!3408 = !DILocation(line: 3527, column: 52, scope: !3405)
!3409 = !DILocation(line: 3527, column: 53, scope: !3405)
!3410 = !DILocation(line: 3527, column: 41, scope: !3411)
!3411 = !DILexicalBlockFile(scope: !3405, file: !939, discriminator: 1)
!3412 = !DILocation(line: 3528, column: 24, scope: !3405)
!3413 = !DILocation(line: 3528, column: 17, scope: !3405)
!3414 = !DILocation(line: 3532, column: 23, scope: !3024)
!3415 = !DILocation(line: 3532, column: 26, scope: !3024)
!3416 = !DILocation(line: 3532, column: 34, scope: !3024)
!3417 = !DILocation(line: 3532, column: 13, scope: !3024)
!3418 = !DILocation(line: 3534, column: 13, scope: !3024)
!3419 = !DILocation(line: 3535, column: 16, scope: !3025)
!3420 = !DILocation(line: 3537, column: 23, scope: !3421)
!3421 = distinct !DILexicalBlock(scope: !3025, file: !939, line: 3535, column: 16)
!3422 = !DILocation(line: 3537, column: 26, scope: !3421)
!3423 = !DILocation(line: 3537, column: 30, scope: !3421)
!3424 = !DILocation(line: 3537, column: 13, scope: !3421)
!3425 = !DILocation(line: 3538, column: 13, scope: !3421)
!3426 = !DILocation(line: 3538, column: 18, scope: !3421)
!3427 = !DILocation(line: 3538, column: 37, scope: !3421)
!3428 = !DILocation(line: 3538, column: 48, scope: !3421)
!3429 = !DILocation(line: 3538, column: 49, scope: !3421)
!3430 = !DILocation(line: 3538, column: 37, scope: !3431)
!3431 = !DILexicalBlockFile(scope: !3421, file: !939, discriminator: 1)
!3432 = !DILocation(line: 3423, column: 5, scope: !3433)
!3433 = !DILexicalBlockFile(scope: !3012, file: !939, discriminator: 1)
!3434 = distinct !{!3434, !3041}
!3435 = !DILocation(line: 3541, column: 22, scope: !3012)
!3436 = !DILocation(line: 3541, column: 25, scope: !3012)
!3437 = !DILocation(line: 3541, column: 12, scope: !3012)
!3438 = !DILocation(line: 3541, column: 12, scope: !3433)
!3439 = !DILocation(line: 3541, column: 106, scope: !3440)
!3440 = !DILexicalBlockFile(scope: !3012, file: !939, discriminator: 2)
!3441 = !DILocation(line: 3541, column: 12, scope: !3440)
!3442 = !DILocation(line: 3541, column: 12, scope: !3443)
!3443 = !DILexicalBlockFile(scope: !3012, file: !939, discriminator: 3)
!3444 = !DILocation(line: 3541, column: 5, scope: !3443)
!3445 = !DILocation(line: 3542, column: 1, scope: !3012)
!3446 = distinct !DISubprogram(name: "mxf_read_close", scope: !939, file: !939, line: 3544, type: !2583, isLocal: true, isDefinition: true, scopeLine: 3545, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!3447 = !DILocalVariable(name: "s", arg: 1, scope: !3446, file: !939, line: 3544, type: !2495)
!3448 = !DILocation(line: 3544, column: 44, scope: !3446)
!3449 = !DILocalVariable(name: "mxf", scope: !3446, file: !939, line: 3546, type: !2594)
!3450 = !DILocation(line: 3546, column: 17, scope: !3446)
!3451 = !DILocation(line: 3546, column: 23, scope: !3446)
!3452 = !DILocation(line: 3546, column: 26, scope: !3446)
!3453 = !DILocalVariable(name: "i", scope: !3446, file: !939, line: 3547, type: !1014)
!3454 = !DILocation(line: 3547, column: 9, scope: !3446)
!3455 = !DILocation(line: 3549, column: 15, scope: !3446)
!3456 = !DILocation(line: 3549, column: 20, scope: !3446)
!3457 = !DILocation(line: 3549, column: 14, scope: !3446)
!3458 = !DILocation(line: 3549, column: 5, scope: !3446)
!3459 = !DILocation(line: 3550, column: 15, scope: !3446)
!3460 = !DILocation(line: 3550, column: 20, scope: !3446)
!3461 = !DILocation(line: 3550, column: 14, scope: !3446)
!3462 = !DILocation(line: 3550, column: 5, scope: !3446)
!3463 = !DILocation(line: 3552, column: 12, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3446, file: !939, line: 3552, column: 5)
!3465 = !DILocation(line: 3552, column: 10, scope: !3464)
!3466 = !DILocation(line: 3552, column: 17, scope: !3467)
!3467 = !DILexicalBlockFile(scope: !3468, file: !939, discriminator: 1)
!3468 = distinct !DILexicalBlock(scope: !3464, file: !939, line: 3552, column: 5)
!3469 = !DILocation(line: 3552, column: 21, scope: !3467)
!3470 = !DILocation(line: 3552, column: 24, scope: !3467)
!3471 = !DILocation(line: 3552, column: 19, scope: !3467)
!3472 = !DILocation(line: 3552, column: 5, scope: !3467)
!3473 = !DILocation(line: 3553, column: 20, scope: !3468)
!3474 = !DILocation(line: 3553, column: 9, scope: !3468)
!3475 = !DILocation(line: 3553, column: 12, scope: !3468)
!3476 = !DILocation(line: 3553, column: 24, scope: !3468)
!3477 = !DILocation(line: 3553, column: 34, scope: !3468)
!3478 = !DILocation(line: 3552, column: 37, scope: !3479)
!3479 = !DILexicalBlockFile(scope: !3468, file: !939, discriminator: 2)
!3480 = !DILocation(line: 3552, column: 5, scope: !3479)
!3481 = distinct !{!3481, !3482}
!3482 = !DILocation(line: 3552, column: 5, scope: !3446)
!3483 = !DILocation(line: 3555, column: 12, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3446, file: !939, line: 3555, column: 5)
!3485 = !DILocation(line: 3555, column: 10, scope: !3484)
!3486 = !DILocation(line: 3555, column: 17, scope: !3487)
!3487 = !DILexicalBlockFile(scope: !3488, file: !939, discriminator: 1)
!3488 = distinct !DILexicalBlock(scope: !3484, file: !939, line: 3555, column: 5)
!3489 = !DILocation(line: 3555, column: 21, scope: !3487)
!3490 = !DILocation(line: 3555, column: 26, scope: !3487)
!3491 = !DILocation(line: 3555, column: 19, scope: !3487)
!3492 = !DILocation(line: 3555, column: 5, scope: !3487)
!3493 = !DILocation(line: 3556, column: 30, scope: !3494)
!3494 = distinct !DILexicalBlock(scope: !3488, file: !939, line: 3555, column: 52)
!3495 = !DILocation(line: 3556, column: 35, scope: !3494)
!3496 = !DILocation(line: 3556, column: 51, scope: !3494)
!3497 = !DILocation(line: 3556, column: 49, scope: !3494)
!3498 = !DILocation(line: 3556, column: 9, scope: !3494)
!3499 = !DILocation(line: 3557, column: 5, scope: !3494)
!3500 = !DILocation(line: 3555, column: 48, scope: !3501)
!3501 = !DILexicalBlockFile(scope: !3488, file: !939, discriminator: 2)
!3502 = !DILocation(line: 3555, column: 5, scope: !3501)
!3503 = distinct !{!3503, !3504}
!3504 = !DILocation(line: 3555, column: 5, scope: !3446)
!3505 = !DILocation(line: 3558, column: 15, scope: !3446)
!3506 = !DILocation(line: 3558, column: 20, scope: !3446)
!3507 = !DILocation(line: 3558, column: 14, scope: !3446)
!3508 = !DILocation(line: 3558, column: 5, scope: !3446)
!3509 = !DILocation(line: 3559, column: 15, scope: !3446)
!3510 = !DILocation(line: 3559, column: 20, scope: !3446)
!3511 = !DILocation(line: 3559, column: 14, scope: !3446)
!3512 = !DILocation(line: 3559, column: 5, scope: !3446)
!3513 = !DILocation(line: 3560, column: 15, scope: !3446)
!3514 = !DILocation(line: 3560, column: 20, scope: !3446)
!3515 = !DILocation(line: 3560, column: 14, scope: !3446)
!3516 = !DILocation(line: 3560, column: 5, scope: !3446)
!3517 = !DILocation(line: 3561, column: 15, scope: !3446)
!3518 = !DILocation(line: 3561, column: 20, scope: !3446)
!3519 = !DILocation(line: 3561, column: 14, scope: !3446)
!3520 = !DILocation(line: 3561, column: 5, scope: !3446)
!3521 = !DILocation(line: 3563, column: 9, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3446, file: !939, line: 3563, column: 9)
!3523 = !DILocation(line: 3563, column: 14, scope: !3522)
!3524 = !DILocation(line: 3563, column: 9, scope: !3446)
!3525 = !DILocation(line: 3564, column: 16, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !3527, file: !939, line: 3564, column: 9)
!3527 = distinct !DILexicalBlock(scope: !3522, file: !939, line: 3563, column: 28)
!3528 = !DILocation(line: 3564, column: 14, scope: !3526)
!3529 = !DILocation(line: 3564, column: 21, scope: !3530)
!3530 = !DILexicalBlockFile(scope: !3531, file: !939, discriminator: 1)
!3531 = distinct !DILexicalBlock(scope: !3526, file: !939, line: 3564, column: 9)
!3532 = !DILocation(line: 3564, column: 25, scope: !3530)
!3533 = !DILocation(line: 3564, column: 30, scope: !3530)
!3534 = !DILocation(line: 3564, column: 23, scope: !3530)
!3535 = !DILocation(line: 3564, column: 9, scope: !3530)
!3536 = !DILocation(line: 3565, column: 41, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3531, file: !939, line: 3564, column: 52)
!3538 = !DILocation(line: 3565, column: 23, scope: !3537)
!3539 = !DILocation(line: 3565, column: 28, scope: !3537)
!3540 = !DILocation(line: 3565, column: 44, scope: !3537)
!3541 = !DILocation(line: 3565, column: 22, scope: !3537)
!3542 = !DILocation(line: 3565, column: 13, scope: !3537)
!3543 = !DILocation(line: 3566, column: 41, scope: !3537)
!3544 = !DILocation(line: 3566, column: 23, scope: !3537)
!3545 = !DILocation(line: 3566, column: 28, scope: !3537)
!3546 = !DILocation(line: 3566, column: 44, scope: !3537)
!3547 = !DILocation(line: 3566, column: 22, scope: !3537)
!3548 = !DILocation(line: 3566, column: 13, scope: !3537)
!3549 = !DILocation(line: 3567, column: 41, scope: !3537)
!3550 = !DILocation(line: 3567, column: 23, scope: !3537)
!3551 = !DILocation(line: 3567, column: 28, scope: !3537)
!3552 = !DILocation(line: 3567, column: 44, scope: !3537)
!3553 = !DILocation(line: 3567, column: 22, scope: !3537)
!3554 = !DILocation(line: 3567, column: 13, scope: !3537)
!3555 = !DILocation(line: 3568, column: 41, scope: !3537)
!3556 = !DILocation(line: 3568, column: 23, scope: !3537)
!3557 = !DILocation(line: 3568, column: 28, scope: !3537)
!3558 = !DILocation(line: 3568, column: 44, scope: !3537)
!3559 = !DILocation(line: 3568, column: 22, scope: !3537)
!3560 = !DILocation(line: 3568, column: 13, scope: !3537)
!3561 = !DILocation(line: 3569, column: 9, scope: !3537)
!3562 = !DILocation(line: 3564, column: 48, scope: !3563)
!3563 = !DILexicalBlockFile(scope: !3531, file: !939, discriminator: 2)
!3564 = !DILocation(line: 3564, column: 9, scope: !3563)
!3565 = distinct !{!3565, !3566}
!3566 = !DILocation(line: 3564, column: 9, scope: !3527)
!3567 = !DILocation(line: 3570, column: 5, scope: !3527)
!3568 = !DILocation(line: 3571, column: 15, scope: !3446)
!3569 = !DILocation(line: 3571, column: 20, scope: !3446)
!3570 = !DILocation(line: 3571, column: 14, scope: !3446)
!3571 = !DILocation(line: 3571, column: 5, scope: !3446)
!3572 = !DILocation(line: 3573, column: 5, scope: !3446)
!3573 = distinct !DISubprogram(name: "mxf_read_seek", scope: !939, file: !939, line: 3603, type: !3574, isLocal: true, isDefinition: true, scopeLine: 3604, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!3574 = !DISubroutineType(types: !3575)
!3575 = !{!1014, !2495, !1014, !1015, !1014}
!3576 = !DILocalVariable(name: "q", arg: 1, scope: !3577, file: !1036, line: 159, type: !1035)
!3577 = distinct !DISubprogram(name: "av_inv_q", scope: !1036, file: !1036, line: 159, type: !3578, isLocal: true, isDefinition: true, scopeLine: 160, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!3578 = !DISubroutineType(types: !3579)
!3579 = !{!1035, !1035}
!3580 = !DILocation(line: 159, column: 77, scope: !3577, inlinedAt: !3581)
!3581 = distinct !DILocation(line: 3619, column: 36, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !3573, file: !939, line: 3617, column: 9)
!3583 = !DILocalVariable(name: "r", scope: !3577, file: !1036, line: 161, type: !1035)
!3584 = !DILocation(line: 161, column: 16, scope: !3577, inlinedAt: !3581)
!3585 = !DILocalVariable(name: "s", arg: 1, scope: !3573, file: !939, line: 3603, type: !2495)
!3586 = !DILocation(line: 3603, column: 43, scope: !3573)
!3587 = !DILocalVariable(name: "stream_index", arg: 2, scope: !3573, file: !939, line: 3603, type: !1014)
!3588 = !DILocation(line: 3603, column: 50, scope: !3573)
!3589 = !DILocalVariable(name: "sample_time", arg: 3, scope: !3573, file: !939, line: 3603, type: !1015)
!3590 = !DILocation(line: 3603, column: 72, scope: !3573)
!3591 = !DILocalVariable(name: "flags", arg: 4, scope: !3573, file: !939, line: 3603, type: !1014)
!3592 = !DILocation(line: 3603, column: 89, scope: !3573)
!3593 = !DILocalVariable(name: "st", scope: !3573, file: !939, line: 3605, type: !1569)
!3594 = !DILocation(line: 3605, column: 15, scope: !3573)
!3595 = !DILocation(line: 3605, column: 31, scope: !3573)
!3596 = !DILocation(line: 3605, column: 20, scope: !3573)
!3597 = !DILocation(line: 3605, column: 23, scope: !3573)
!3598 = !DILocalVariable(name: "seconds", scope: !3573, file: !939, line: 3606, type: !1015)
!3599 = !DILocation(line: 3606, column: 13, scope: !3573)
!3600 = !DILocalVariable(name: "mxf", scope: !3573, file: !939, line: 3607, type: !2594)
!3601 = !DILocation(line: 3607, column: 17, scope: !3573)
!3602 = !DILocation(line: 3607, column: 23, scope: !3573)
!3603 = !DILocation(line: 3607, column: 26, scope: !3573)
!3604 = !DILocalVariable(name: "seekpos", scope: !3573, file: !939, line: 3608, type: !1015)
!3605 = !DILocation(line: 3608, column: 13, scope: !3573)
!3606 = !DILocalVariable(name: "i", scope: !3573, file: !939, line: 3609, type: !1014)
!3607 = !DILocation(line: 3609, column: 9, scope: !3573)
!3608 = !DILocalVariable(name: "ret", scope: !3573, file: !939, line: 3609, type: !1014)
!3609 = !DILocation(line: 3609, column: 12, scope: !3573)
!3610 = !DILocalVariable(name: "t", scope: !3573, file: !939, line: 3610, type: !2647)
!3611 = !DILocation(line: 3610, column: 20, scope: !3573)
!3612 = !DILocalVariable(name: "source_track", scope: !3573, file: !939, line: 3611, type: !1108)
!3613 = !DILocation(line: 3611, column: 15, scope: !3573)
!3614 = !DILocation(line: 3611, column: 30, scope: !3573)
!3615 = !DILocation(line: 3611, column: 34, scope: !3573)
!3616 = !DILocation(line: 3613, column: 10, scope: !3617)
!3617 = distinct !DILexicalBlock(scope: !3573, file: !939, line: 3613, column: 9)
!3618 = !DILocation(line: 3613, column: 9, scope: !3573)
!3619 = !DILocation(line: 3614, column: 9, scope: !3617)
!3620 = !DILocation(line: 3617, column: 9, scope: !3582)
!3621 = !DILocation(line: 3617, column: 13, scope: !3582)
!3622 = !DILocation(line: 3617, column: 23, scope: !3582)
!3623 = !DILocation(line: 3617, column: 34, scope: !3582)
!3624 = !DILocation(line: 3617, column: 9, scope: !3573)
!3625 = !DILocation(line: 3618, column: 36, scope: !3582)
!3626 = !DILocation(line: 3618, column: 49, scope: !3582)
!3627 = !DILocation(line: 3618, column: 53, scope: !3582)
!3628 = !DILocation(line: 3619, column: 45, scope: !3582)
!3629 = !DILocation(line: 3619, column: 59, scope: !3582)
!3630 = !DILocation(line: 3619, column: 36, scope: !3582)
!3631 = !DILocation(line: 161, column: 20, scope: !3577, inlinedAt: !3581)
!3632 = !DILocation(line: 161, column: 24, scope: !3577, inlinedAt: !3581)
!3633 = !DILocation(line: 161, column: 31, scope: !3577, inlinedAt: !3581)
!3634 = !DILocation(line: 162, column: 12, scope: !3577, inlinedAt: !3581)
!3635 = !DILocation(line: 162, column: 5, scope: !3577, inlinedAt: !3581)
!3636 = !DILocation(line: 3618, column: 23, scope: !3582)
!3637 = !DILocation(line: 3618, column: 21, scope: !3582)
!3638 = !DILocation(line: 3618, column: 9, scope: !3582)
!3639 = !DILocation(line: 3621, column: 9, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3573, file: !939, line: 3621, column: 9)
!3641 = !DILocation(line: 3621, column: 14, scope: !3640)
!3642 = !DILocation(line: 3621, column: 30, scope: !3640)
!3643 = !DILocation(line: 3621, column: 9, scope: !3573)
!3644 = !DILocation(line: 3622, column: 14, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3646, file: !939, line: 3622, column: 13)
!3646 = distinct !DILexicalBlock(scope: !3640, file: !939, line: 3621, column: 36)
!3647 = !DILocation(line: 3622, column: 17, scope: !3645)
!3648 = !DILocation(line: 3622, column: 13, scope: !3646)
!3649 = !DILocation(line: 3623, column: 13, scope: !3645)
!3650 = !DILocation(line: 3624, column: 13, scope: !3651)
!3651 = distinct !DILexicalBlock(scope: !3646, file: !939, line: 3624, column: 13)
!3652 = !DILocation(line: 3624, column: 25, scope: !3651)
!3653 = !DILocation(line: 3624, column: 13, scope: !3646)
!3654 = !DILocation(line: 3625, column: 25, scope: !3651)
!3655 = !DILocation(line: 3625, column: 13, scope: !3651)
!3656 = !DILocation(line: 3626, column: 30, scope: !3646)
!3657 = !DILocation(line: 3626, column: 43, scope: !3646)
!3658 = !DILocation(line: 3626, column: 47, scope: !3646)
!3659 = !DILocation(line: 3626, column: 57, scope: !3646)
!3660 = !DILocation(line: 3626, column: 62, scope: !3646)
!3661 = !DILocation(line: 3626, column: 66, scope: !3646)
!3662 = !DILocation(line: 3626, column: 76, scope: !3646)
!3663 = !DILocation(line: 3626, column: 19, scope: !3646)
!3664 = !DILocation(line: 3626, column: 17, scope: !3646)
!3665 = !DILocation(line: 3628, column: 29, scope: !3646)
!3666 = !DILocation(line: 3628, column: 32, scope: !3646)
!3667 = !DILocation(line: 3628, column: 37, scope: !3646)
!3668 = !DILocation(line: 3628, column: 40, scope: !3646)
!3669 = !DILocation(line: 3628, column: 51, scope: !3646)
!3670 = !DILocation(line: 3628, column: 49, scope: !3646)
!3671 = !DILocation(line: 3628, column: 60, scope: !3646)
!3672 = !DILocation(line: 3628, column: 19, scope: !3646)
!3673 = !DILocation(line: 3628, column: 17, scope: !3646)
!3674 = !DILocation(line: 3629, column: 13, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !3646, file: !939, line: 3629, column: 13)
!3676 = !DILocation(line: 3629, column: 21, scope: !3675)
!3677 = !DILocation(line: 3629, column: 13, scope: !3646)
!3678 = !DILocation(line: 3630, column: 20, scope: !3675)
!3679 = !DILocation(line: 3630, column: 13, scope: !3675)
!3680 = !DILocation(line: 3632, column: 27, scope: !3646)
!3681 = !DILocation(line: 3632, column: 30, scope: !3646)
!3682 = !DILocation(line: 3632, column: 34, scope: !3646)
!3683 = !DILocation(line: 3632, column: 9, scope: !3646)
!3684 = !DILocation(line: 3633, column: 9, scope: !3646)
!3685 = !DILocation(line: 3633, column: 14, scope: !3646)
!3686 = !DILocation(line: 3633, column: 33, scope: !3646)
!3687 = !DILocation(line: 3633, column: 44, scope: !3646)
!3688 = !DILocation(line: 3633, column: 45, scope: !3646)
!3689 = !DILocation(line: 3633, column: 33, scope: !3690)
!3690 = !DILexicalBlockFile(scope: !3646, file: !939, discriminator: 1)
!3691 = !DILocation(line: 3634, column: 5, scope: !3646)
!3692 = !DILocalVariable(name: "partition", scope: !3693, file: !939, line: 3635, type: !2600)
!3693 = distinct !DILexicalBlock(scope: !3640, file: !939, line: 3634, column: 12)
!3694 = !DILocation(line: 3635, column: 23, scope: !3693)
!3695 = !DILocation(line: 3637, column: 14, scope: !3693)
!3696 = !DILocation(line: 3637, column: 19, scope: !3693)
!3697 = !DILocation(line: 3637, column: 11, scope: !3693)
!3698 = !DILocation(line: 3638, column: 13, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3693, file: !939, line: 3638, column: 13)
!3700 = !DILocation(line: 3638, column: 16, scope: !3699)
!3701 = !DILocation(line: 3638, column: 29, scope: !3699)
!3702 = !DILocation(line: 3638, column: 43, scope: !3699)
!3703 = !DILocation(line: 3638, column: 26, scope: !3699)
!3704 = !DILocation(line: 3638, column: 13, scope: !3693)
!3705 = !DILocation(line: 3640, column: 20, scope: !3706)
!3706 = distinct !DILexicalBlock(scope: !3707, file: !939, line: 3640, column: 13)
!3707 = distinct !DILexicalBlock(scope: !3699, file: !939, line: 3638, column: 54)
!3708 = !DILocation(line: 3640, column: 18, scope: !3706)
!3709 = !DILocation(line: 3640, column: 25, scope: !3710)
!3710 = !DILexicalBlockFile(scope: !3711, file: !939, discriminator: 1)
!3711 = distinct !DILexicalBlock(scope: !3706, file: !939, line: 3640, column: 13)
!3712 = !DILocation(line: 3640, column: 29, scope: !3710)
!3713 = !DILocation(line: 3640, column: 32, scope: !3710)
!3714 = !DILocation(line: 3640, column: 27, scope: !3710)
!3715 = !DILocation(line: 3640, column: 13, scope: !3710)
!3716 = !DILocalVariable(name: "new_source_track", scope: !3717, file: !939, line: 3641, type: !1108)
!3717 = distinct !DILexicalBlock(scope: !3711, file: !939, line: 3640, column: 49)
!3718 = !DILocation(line: 3641, column: 27, scope: !3717)
!3719 = !DILocation(line: 3641, column: 57, scope: !3717)
!3720 = !DILocation(line: 3641, column: 46, scope: !3717)
!3721 = !DILocation(line: 3641, column: 49, scope: !3717)
!3722 = !DILocation(line: 3641, column: 61, scope: !3717)
!3723 = !DILocation(line: 3642, column: 21, scope: !3724)
!3724 = distinct !DILexicalBlock(scope: !3717, file: !939, line: 3642, column: 21)
!3725 = !DILocation(line: 3642, column: 38, scope: !3724)
!3726 = !DILocation(line: 3642, column: 41, scope: !3727)
!3727 = !DILexicalBlockFile(scope: !3724, file: !939, discriminator: 1)
!3728 = !DILocation(line: 3642, column: 59, scope: !3727)
!3729 = !DILocation(line: 3642, column: 72, scope: !3727)
!3730 = !DILocation(line: 3642, column: 75, scope: !3727)
!3731 = !DILocation(line: 3642, column: 69, scope: !3727)
!3732 = !DILocation(line: 3642, column: 21, scope: !3727)
!3733 = !DILocation(line: 3643, column: 48, scope: !3734)
!3734 = distinct !DILexicalBlock(scope: !3724, file: !939, line: 3642, column: 86)
!3735 = !DILocation(line: 3643, column: 61, scope: !3734)
!3736 = !DILocation(line: 3643, column: 79, scope: !3734)
!3737 = !DILocation(line: 3643, column: 90, scope: !3734)
!3738 = !DILocation(line: 3643, column: 104, scope: !3734)
!3739 = !DILocation(line: 3643, column: 35, scope: !3734)
!3740 = !DILocation(line: 3643, column: 33, scope: !3734)
!3741 = !DILocation(line: 3644, column: 36, scope: !3734)
!3742 = !DILocation(line: 3644, column: 34, scope: !3734)
!3743 = !DILocation(line: 3645, column: 37, scope: !3734)
!3744 = !DILocation(line: 3645, column: 26, scope: !3734)
!3745 = !DILocation(line: 3645, column: 29, scope: !3734)
!3746 = !DILocation(line: 3645, column: 24, scope: !3734)
!3747 = !DILocation(line: 3646, column: 21, scope: !3734)
!3748 = !DILocation(line: 3648, column: 13, scope: !3717)
!3749 = !DILocation(line: 3640, column: 45, scope: !3750)
!3750 = !DILexicalBlockFile(scope: !3711, file: !939, discriminator: 2)
!3751 = !DILocation(line: 3640, column: 13, scope: !3750)
!3752 = distinct !{!3752, !3753}
!3753 = !DILocation(line: 3640, column: 13, scope: !3707)
!3754 = !DILocation(line: 3649, column: 17, scope: !3755)
!3755 = distinct !DILexicalBlock(scope: !3707, file: !939, line: 3649, column: 17)
!3756 = !DILocation(line: 3649, column: 22, scope: !3755)
!3757 = !DILocation(line: 3649, column: 25, scope: !3755)
!3758 = !DILocation(line: 3649, column: 19, scope: !3755)
!3759 = !DILocation(line: 3649, column: 17, scope: !3707)
!3760 = !DILocation(line: 3650, column: 17, scope: !3755)
!3761 = !DILocation(line: 3651, column: 9, scope: !3707)
!3762 = !DILocation(line: 3655, column: 25, scope: !3693)
!3763 = !DILocation(line: 3655, column: 38, scope: !3693)
!3764 = !DILocation(line: 3655, column: 24, scope: !3693)
!3765 = !DILocation(line: 3655, column: 47, scope: !3766)
!3766 = !DILexicalBlockFile(scope: !3693, file: !939, discriminator: 1)
!3767 = !DILocation(line: 3655, column: 24, scope: !3766)
!3768 = !DILocation(line: 3655, column: 24, scope: !3769)
!3769 = !DILexicalBlockFile(scope: !3693, file: !939, discriminator: 2)
!3770 = !DILocation(line: 3655, column: 24, scope: !3771)
!3771 = !DILexicalBlockFile(scope: !3693, file: !939, discriminator: 3)
!3772 = !DILocation(line: 3655, column: 21, scope: !3771)
!3773 = !DILocation(line: 3657, column: 13, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3693, file: !939, line: 3657, column: 13)
!3775 = !DILocation(line: 3657, column: 16, scope: !3774)
!3776 = !DILocation(line: 3657, column: 13, scope: !3693)
!3777 = !DILocation(line: 3661, column: 19, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3779, file: !939, line: 3661, column: 17)
!3779 = distinct !DILexicalBlock(scope: !3774, file: !939, line: 3657, column: 28)
!3780 = !DILocation(line: 3661, column: 25, scope: !3778)
!3781 = !DILocation(line: 3661, column: 30, scope: !3778)
!3782 = !DILocation(line: 3662, column: 18, scope: !3778)
!3783 = !DILocation(line: 3662, column: 24, scope: !3778)
!3784 = !DILocation(line: 3662, column: 29, scope: !3778)
!3785 = !DILocation(line: 3663, column: 17, scope: !3778)
!3786 = !DILocation(line: 3663, column: 20, scope: !3778)
!3787 = !DILocation(line: 3663, column: 29, scope: !3778)
!3788 = !DILocation(line: 3663, column: 64, scope: !3778)
!3789 = !DILocation(line: 3664, column: 17, scope: !3778)
!3790 = !DILocation(line: 3664, column: 31, scope: !3778)
!3791 = !DILocation(line: 3664, column: 34, scope: !3778)
!3792 = !DILocation(line: 3664, column: 29, scope: !3778)
!3793 = !DILocation(line: 3664, column: 43, scope: !3778)
!3794 = !DILocation(line: 3665, column: 32, scope: !3778)
!3795 = !DILocation(line: 3665, column: 35, scope: !3778)
!3796 = !DILocation(line: 3665, column: 18, scope: !3778)
!3797 = !DILocation(line: 3665, column: 21, scope: !3778)
!3798 = !DILocation(line: 3665, column: 45, scope: !3778)
!3799 = !DILocation(line: 3665, column: 51, scope: !3778)
!3800 = !DILocation(line: 3661, column: 17, scope: !3801)
!3801 = !DILexicalBlockFile(scope: !3779, file: !939, discriminator: 1)
!3802 = !DILocation(line: 3666, column: 31, scope: !3778)
!3803 = !DILocation(line: 3666, column: 34, scope: !3778)
!3804 = !DILocation(line: 3666, column: 29, scope: !3778)
!3805 = !DILocation(line: 3666, column: 17, scope: !3778)
!3806 = !DILocation(line: 3669, column: 58, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !3779, file: !939, line: 3669, column: 17)
!3808 = !DILocation(line: 3669, column: 61, scope: !3807)
!3809 = !DILocation(line: 3669, column: 73, scope: !3807)
!3810 = !DILocation(line: 3669, column: 76, scope: !3807)
!3811 = !DILocation(line: 3669, column: 86, scope: !3807)
!3812 = !DILocation(line: 3669, column: 99, scope: !3807)
!3813 = !DILocation(line: 3669, column: 32, scope: !3807)
!3814 = !DILocation(line: 3669, column: 30, scope: !3807)
!3815 = !DILocation(line: 3669, column: 107, scope: !3807)
!3816 = !DILocation(line: 3669, column: 17, scope: !3779)
!3817 = !DILocation(line: 3670, column: 24, scope: !3807)
!3818 = !DILocation(line: 3670, column: 17, scope: !3807)
!3819 = !DILocation(line: 3672, column: 39, scope: !3779)
!3820 = !DILocation(line: 3672, column: 28, scope: !3779)
!3821 = !DILocation(line: 3672, column: 31, scope: !3779)
!3822 = !DILocation(line: 3672, column: 25, scope: !3779)
!3823 = !DILocation(line: 3673, column: 9, scope: !3779)
!3824 = !DILocation(line: 3676, column: 29, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !3774, file: !939, line: 3673, column: 16)
!3826 = !DILocation(line: 3676, column: 45, scope: !3825)
!3827 = !DILocation(line: 3676, column: 59, scope: !3825)
!3828 = !DILocation(line: 3676, column: 77, scope: !3825)
!3829 = !DILocation(line: 3676, column: 42, scope: !3825)
!3830 = !DILocation(line: 3676, column: 28, scope: !3825)
!3831 = !DILocation(line: 3676, column: 85, scope: !3832)
!3832 = !DILexicalBlockFile(scope: !3825, file: !939, discriminator: 1)
!3833 = !DILocation(line: 3676, column: 99, scope: !3832)
!3834 = !DILocation(line: 3676, column: 117, scope: !3832)
!3835 = !DILocation(line: 3676, column: 28, scope: !3832)
!3836 = !DILocation(line: 3676, column: 125, scope: !3837)
!3837 = !DILexicalBlockFile(scope: !3825, file: !939, discriminator: 2)
!3838 = !DILocation(line: 3676, column: 28, scope: !3837)
!3839 = !DILocation(line: 3676, column: 28, scope: !3840)
!3840 = !DILexicalBlockFile(scope: !3825, file: !939, discriminator: 3)
!3841 = !DILocation(line: 3676, column: 25, scope: !3840)
!3842 = !DILocation(line: 3679, column: 13, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3693, file: !939, line: 3679, column: 13)
!3844 = !DILocation(line: 3679, column: 27, scope: !3843)
!3845 = !DILocation(line: 3679, column: 36, scope: !3843)
!3846 = !DILocation(line: 3679, column: 13, scope: !3693)
!3847 = !DILocation(line: 3680, column: 20, scope: !3843)
!3848 = !DILocation(line: 3680, column: 25, scope: !3843)
!3849 = !DILocation(line: 3680, column: 13, scope: !3843)
!3850 = !DILocation(line: 3682, column: 50, scope: !3851)
!3851 = distinct !DILexicalBlock(scope: !3693, file: !939, line: 3682, column: 13)
!3852 = !DILocation(line: 3682, column: 55, scope: !3851)
!3853 = !DILocation(line: 3682, column: 58, scope: !3851)
!3854 = !DILocation(line: 3682, column: 71, scope: !3851)
!3855 = !DILocation(line: 3682, column: 85, scope: !3851)
!3856 = !DILocation(line: 3682, column: 20, scope: !3851)
!3857 = !DILocation(line: 3682, column: 18, scope: !3851)
!3858 = !DILocation(line: 3682, column: 136, scope: !3851)
!3859 = !DILocation(line: 3682, column: 13, scope: !3693)
!3860 = !DILocation(line: 3683, column: 20, scope: !3851)
!3861 = !DILocation(line: 3683, column: 13, scope: !3851)
!3862 = !DILocation(line: 3685, column: 27, scope: !3693)
!3863 = !DILocation(line: 3685, column: 30, scope: !3693)
!3864 = !DILocation(line: 3685, column: 34, scope: !3693)
!3865 = !DILocation(line: 3685, column: 9, scope: !3693)
!3866 = !DILocation(line: 3686, column: 13, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3693, file: !939, line: 3686, column: 13)
!3868 = !DILocation(line: 3686, column: 27, scope: !3867)
!3869 = !DILocation(line: 3686, column: 36, scope: !3867)
!3870 = !DILocation(line: 3686, column: 13, scope: !3693)
!3871 = !DILocalVariable(name: "klv", scope: !3872, file: !939, line: 3687, type: !2498)
!3872 = distinct !DILexicalBlock(scope: !3867, file: !939, line: 3686, column: 52)
!3873 = !DILocation(line: 3687, column: 23, scope: !3872)
!3874 = !DILocation(line: 3687, column: 29, scope: !3872)
!3875 = !DILocation(line: 3687, column: 40, scope: !3872)
!3876 = !DILocation(line: 3688, column: 17, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !3872, file: !939, line: 3688, column: 17)
!3878 = !DILocation(line: 3688, column: 31, scope: !3877)
!3879 = !DILocation(line: 3688, column: 46, scope: !3877)
!3880 = !DILocation(line: 3688, column: 40, scope: !3877)
!3881 = !DILocation(line: 3688, column: 25, scope: !3877)
!3882 = !DILocation(line: 3688, column: 53, scope: !3877)
!3883 = !DILocation(line: 3688, column: 56, scope: !3884)
!3884 = !DILexicalBlockFile(scope: !3877, file: !939, discriminator: 1)
!3885 = !DILocation(line: 3688, column: 71, scope: !3884)
!3886 = !DILocation(line: 3688, column: 64, scope: !3884)
!3887 = !DILocation(line: 3688, column: 17, scope: !3884)
!3888 = !DILocation(line: 3689, column: 24, scope: !3889)
!3889 = distinct !DILexicalBlock(scope: !3877, file: !939, line: 3688, column: 81)
!3890 = !DILocation(line: 3689, column: 29, scope: !3889)
!3891 = !DILocation(line: 3689, column: 17, scope: !3889)
!3892 = !DILocation(line: 3690, column: 17, scope: !3889)
!3893 = !DILocation(line: 3692, column: 13, scope: !3872)
!3894 = !DILocation(line: 3692, column: 18, scope: !3872)
!3895 = !DILocation(line: 3692, column: 37, scope: !3872)
!3896 = !DILocation(line: 3693, column: 9, scope: !3872)
!3897 = !DILocation(line: 3694, column: 13, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3867, file: !939, line: 3693, column: 16)
!3899 = !DILocation(line: 3694, column: 18, scope: !3898)
!3900 = !DILocation(line: 3694, column: 37, scope: !3898)
!3901 = !DILocation(line: 3694, column: 48, scope: !3898)
!3902 = !DILocation(line: 3694, column: 49, scope: !3898)
!3903 = !DILocation(line: 3694, column: 37, scope: !3904)
!3904 = !DILexicalBlockFile(scope: !3898, file: !939, discriminator: 1)
!3905 = !DILocation(line: 3696, column: 19, scope: !3693)
!3906 = !DILocation(line: 3696, column: 22, scope: !3693)
!3907 = !DILocation(line: 3696, column: 26, scope: !3693)
!3908 = !DILocation(line: 3696, column: 9, scope: !3693)
!3909 = !DILocation(line: 3700, column: 12, scope: !3910)
!3910 = distinct !DILexicalBlock(scope: !3573, file: !939, line: 3700, column: 5)
!3911 = !DILocation(line: 3700, column: 10, scope: !3910)
!3912 = !DILocation(line: 3700, column: 17, scope: !3913)
!3913 = !DILexicalBlockFile(scope: !3914, file: !939, discriminator: 1)
!3914 = distinct !DILexicalBlock(scope: !3910, file: !939, line: 3700, column: 5)
!3915 = !DILocation(line: 3700, column: 21, scope: !3913)
!3916 = !DILocation(line: 3700, column: 24, scope: !3913)
!3917 = !DILocation(line: 3700, column: 19, scope: !3913)
!3918 = !DILocation(line: 3700, column: 5, scope: !3913)
!3919 = !DILocalVariable(name: "cur_st", scope: !3920, file: !939, line: 3701, type: !1569)
!3920 = distinct !DILexicalBlock(scope: !3914, file: !939, line: 3700, column: 41)
!3921 = !DILocation(line: 3701, column: 19, scope: !3920)
!3922 = !DILocation(line: 3701, column: 39, scope: !3920)
!3923 = !DILocation(line: 3701, column: 28, scope: !3920)
!3924 = !DILocation(line: 3701, column: 31, scope: !3920)
!3925 = !DILocalVariable(name: "cur_track", scope: !3920, file: !939, line: 3702, type: !1108)
!3926 = !DILocation(line: 3702, column: 19, scope: !3920)
!3927 = !DILocation(line: 3702, column: 31, scope: !3920)
!3928 = !DILocation(line: 3702, column: 39, scope: !3920)
!3929 = !DILocation(line: 3703, column: 13, scope: !3930)
!3930 = distinct !DILexicalBlock(scope: !3920, file: !939, line: 3703, column: 13)
!3931 = !DILocation(line: 3703, column: 13, scope: !3920)
!3932 = !DILocalVariable(name: "track_edit_unit", scope: !3933, file: !939, line: 3704, type: !1015)
!3933 = distinct !DILexicalBlock(scope: !3930, file: !939, line: 3703, column: 24)
!3934 = !DILocation(line: 3704, column: 21, scope: !3933)
!3935 = !DILocation(line: 3704, column: 39, scope: !3933)
!3936 = !DILocation(line: 3705, column: 17, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !3933, file: !939, line: 3705, column: 17)
!3938 = !DILocation(line: 3705, column: 23, scope: !3937)
!3939 = !DILocation(line: 3705, column: 20, scope: !3937)
!3940 = !DILocation(line: 3705, column: 17, scope: !3933)
!3941 = !DILocation(line: 3706, column: 46, scope: !3937)
!3942 = !DILocation(line: 3706, column: 51, scope: !3937)
!3943 = !DILocation(line: 3706, column: 62, scope: !3937)
!3944 = !DILocation(line: 3706, column: 17, scope: !3937)
!3945 = !DILocation(line: 3707, column: 64, scope: !3933)
!3946 = !DILocation(line: 3707, column: 69, scope: !3933)
!3947 = !DILocation(line: 3707, column: 77, scope: !3933)
!3948 = !DILocation(line: 3707, column: 39, scope: !3933)
!3949 = !DILocation(line: 3707, column: 13, scope: !3933)
!3950 = !DILocation(line: 3707, column: 24, scope: !3933)
!3951 = !DILocation(line: 3707, column: 37, scope: !3933)
!3952 = !DILocation(line: 3708, column: 9, scope: !3933)
!3953 = !DILocation(line: 3709, column: 5, scope: !3920)
!3954 = !DILocation(line: 3700, column: 37, scope: !3955)
!3955 = !DILexicalBlockFile(scope: !3914, file: !939, discriminator: 2)
!3956 = !DILocation(line: 3700, column: 5, scope: !3955)
!3957 = distinct !{!3957, !3958}
!3958 = !DILocation(line: 3700, column: 5, scope: !3573)
!3959 = !DILocation(line: 3710, column: 5, scope: !3573)
!3960 = !DILocation(line: 3711, column: 1, scope: !3573)
!3961 = distinct !DISubprogram(name: "mxf_read_sync", scope: !939, file: !939, line: 386, type: !3962, isLocal: true, isDefinition: true, scopeLine: 387, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!3962 = !DISubroutineType(types: !3963)
!3963 = !{!1014, !1501, !1530, !1006}
!3964 = !DILocalVariable(name: "pb", arg: 1, scope: !3961, file: !939, line: 386, type: !1501)
!3965 = !DILocation(line: 386, column: 39, scope: !3961)
!3966 = !DILocalVariable(name: "key", arg: 2, scope: !3961, file: !939, line: 386, type: !1530)
!3967 = !DILocation(line: 386, column: 58, scope: !3961)
!3968 = !DILocalVariable(name: "size", arg: 3, scope: !3961, file: !939, line: 386, type: !1006)
!3969 = !DILocation(line: 386, column: 72, scope: !3961)
!3970 = !DILocalVariable(name: "i", scope: !3961, file: !939, line: 388, type: !1014)
!3971 = !DILocation(line: 388, column: 9, scope: !3961)
!3972 = !DILocalVariable(name: "b", scope: !3961, file: !939, line: 388, type: !1014)
!3973 = !DILocation(line: 388, column: 12, scope: !3961)
!3974 = !DILocation(line: 389, column: 12, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3961, file: !939, line: 389, column: 5)
!3976 = !DILocation(line: 389, column: 10, scope: !3975)
!3977 = !DILocation(line: 389, column: 17, scope: !3978)
!3978 = !DILexicalBlockFile(scope: !3979, file: !939, discriminator: 1)
!3979 = distinct !DILexicalBlock(scope: !3975, file: !939, line: 389, column: 5)
!3980 = !DILocation(line: 389, column: 21, scope: !3978)
!3981 = !DILocation(line: 389, column: 19, scope: !3978)
!3982 = !DILocation(line: 389, column: 26, scope: !3978)
!3983 = !DILocation(line: 389, column: 40, scope: !3984)
!3984 = !DILexicalBlockFile(scope: !3979, file: !939, discriminator: 2)
!3985 = !DILocation(line: 389, column: 30, scope: !3984)
!3986 = !DILocation(line: 389, column: 29, scope: !3984)
!3987 = !DILocation(line: 389, column: 5, scope: !3988)
!3988 = !DILexicalBlockFile(scope: !3975, file: !939, discriminator: 3)
!3989 = !DILocation(line: 390, column: 21, scope: !3990)
!3990 = distinct !DILexicalBlock(scope: !3979, file: !939, line: 389, column: 50)
!3991 = !DILocation(line: 390, column: 13, scope: !3990)
!3992 = !DILocation(line: 390, column: 11, scope: !3990)
!3993 = !DILocation(line: 391, column: 13, scope: !3994)
!3994 = distinct !DILexicalBlock(scope: !3990, file: !939, line: 391, column: 13)
!3995 = !DILocation(line: 391, column: 18, scope: !3994)
!3996 = !DILocation(line: 391, column: 15, scope: !3994)
!3997 = !DILocation(line: 391, column: 13, scope: !3990)
!3998 = !DILocation(line: 392, column: 15, scope: !3994)
!3999 = !DILocation(line: 392, column: 13, scope: !3994)
!4000 = !DILocation(line: 393, column: 18, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !3994, file: !939, line: 393, column: 18)
!4002 = !DILocation(line: 393, column: 27, scope: !4001)
!4003 = !DILocation(line: 393, column: 23, scope: !4001)
!4004 = !DILocation(line: 393, column: 20, scope: !4001)
!4005 = !DILocation(line: 393, column: 18, scope: !3994)
!4006 = !DILocation(line: 394, column: 15, scope: !4001)
!4007 = !DILocation(line: 394, column: 13, scope: !4001)
!4008 = !DILocation(line: 395, column: 5, scope: !3990)
!4009 = !DILocation(line: 389, column: 46, scope: !4010)
!4010 = !DILexicalBlockFile(scope: !3979, file: !939, discriminator: 4)
!4011 = !DILocation(line: 389, column: 5, scope: !4010)
!4012 = distinct !{!4012, !4013}
!4013 = !DILocation(line: 389, column: 5, scope: !3961)
!4014 = !DILocation(line: 396, column: 12, scope: !3961)
!4015 = !DILocation(line: 396, column: 17, scope: !3961)
!4016 = !DILocation(line: 396, column: 14, scope: !3961)
!4017 = !DILocation(line: 396, column: 5, scope: !3961)
!4018 = distinct !DISubprogram(name: "mxf_read_random_index_pack", scope: !939, file: !939, line: 3084, type: !4019, isLocal: true, isDefinition: true, scopeLine: 3085, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!4019 = !DISubroutineType(types: !4020)
!4020 = !{null, !2495}
!4021 = !DILocalVariable(name: "s", arg: 1, scope: !4018, file: !939, line: 3084, type: !2495)
!4022 = !DILocation(line: 3084, column: 57, scope: !4018)
!4023 = !DILocalVariable(name: "mxf", scope: !4018, file: !939, line: 3086, type: !2594)
!4024 = !DILocation(line: 3086, column: 17, scope: !4018)
!4025 = !DILocation(line: 3086, column: 23, scope: !4018)
!4026 = !DILocation(line: 3086, column: 26, scope: !4018)
!4027 = !DILocalVariable(name: "length", scope: !4018, file: !939, line: 3087, type: !1004)
!4028 = !DILocation(line: 3087, column: 14, scope: !4018)
!4029 = !DILocalVariable(name: "file_size", scope: !4018, file: !939, line: 3088, type: !1015)
!4030 = !DILocation(line: 3088, column: 13, scope: !4018)
!4031 = !DILocalVariable(name: "max_rip_length", scope: !4018, file: !939, line: 3088, type: !1015)
!4032 = !DILocation(line: 3088, column: 24, scope: !4018)
!4033 = !DILocalVariable(name: "min_rip_length", scope: !4018, file: !939, line: 3088, type: !1015)
!4034 = !DILocation(line: 3088, column: 40, scope: !4018)
!4035 = !DILocalVariable(name: "klv", scope: !4018, file: !939, line: 3089, type: !2498)
!4036 = !DILocation(line: 3089, column: 15, scope: !4018)
!4037 = !DILocation(line: 3091, column: 11, scope: !4038)
!4038 = distinct !DILexicalBlock(scope: !4018, file: !939, line: 3091, column: 9)
!4039 = !DILocation(line: 3091, column: 14, scope: !4038)
!4040 = !DILocation(line: 3091, column: 18, scope: !4038)
!4041 = !DILocation(line: 3091, column: 27, scope: !4038)
!4042 = !DILocation(line: 3091, column: 9, scope: !4018)
!4043 = !DILocation(line: 3092, column: 9, scope: !4038)
!4044 = !DILocation(line: 3094, column: 27, scope: !4018)
!4045 = !DILocation(line: 3094, column: 30, scope: !4018)
!4046 = !DILocation(line: 3094, column: 17, scope: !4018)
!4047 = !DILocation(line: 3094, column: 15, scope: !4018)
!4048 = !DILocation(line: 3104, column: 24, scope: !4018)
!4049 = !DILocation(line: 3104, column: 36, scope: !4018)
!4050 = !DILocation(line: 3104, column: 41, scope: !4018)
!4051 = !DILocation(line: 3104, column: 34, scope: !4018)
!4052 = !DILocation(line: 3104, column: 49, scope: !4018)
!4053 = !DILocation(line: 3104, column: 56, scope: !4018)
!4054 = !DILocation(line: 3104, column: 61, scope: !4018)
!4055 = !DILocation(line: 3104, column: 20, scope: !4018)
!4056 = !DILocation(line: 3105, column: 24, scope: !4018)
!4057 = !DILocation(line: 3105, column: 40, scope: !4018)
!4058 = !DILocation(line: 3105, column: 23, scope: !4018)
!4059 = !DILocation(line: 3105, column: 23, scope: !4060)
!4060 = !DILexicalBlockFile(scope: !4018, file: !939, discriminator: 1)
!4061 = !DILocation(line: 3105, column: 73, scope: !4062)
!4062 = !DILexicalBlockFile(scope: !4018, file: !939, discriminator: 2)
!4063 = !DILocation(line: 3105, column: 23, scope: !4062)
!4064 = !DILocation(line: 3105, column: 23, scope: !4065)
!4065 = !DILexicalBlockFile(scope: !4018, file: !939, discriminator: 3)
!4066 = !DILocation(line: 3105, column: 20, scope: !4065)
!4067 = !DILocation(line: 3108, column: 20, scope: !4018)
!4068 = !DILocation(line: 3111, column: 15, scope: !4018)
!4069 = !DILocation(line: 3111, column: 18, scope: !4018)
!4070 = !DILocation(line: 3111, column: 22, scope: !4018)
!4071 = !DILocation(line: 3111, column: 32, scope: !4018)
!4072 = !DILocation(line: 3111, column: 5, scope: !4018)
!4073 = !DILocation(line: 3112, column: 24, scope: !4018)
!4074 = !DILocation(line: 3112, column: 27, scope: !4018)
!4075 = !DILocation(line: 3112, column: 14, scope: !4018)
!4076 = !DILocation(line: 3112, column: 12, scope: !4018)
!4077 = !DILocation(line: 3114, column: 9, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !4018, file: !939, line: 3114, column: 9)
!4079 = !DILocation(line: 3114, column: 18, scope: !4078)
!4080 = !DILocation(line: 3114, column: 16, scope: !4078)
!4081 = !DILocation(line: 3114, column: 33, scope: !4078)
!4082 = !DILocation(line: 3114, column: 36, scope: !4083)
!4083 = !DILexicalBlockFile(scope: !4078, file: !939, discriminator: 1)
!4084 = !DILocation(line: 3114, column: 45, scope: !4083)
!4085 = !DILocation(line: 3114, column: 43, scope: !4083)
!4086 = !DILocation(line: 3114, column: 9, scope: !4083)
!4087 = !DILocation(line: 3115, column: 9, scope: !4078)
!4088 = !DILocation(line: 3116, column: 15, scope: !4018)
!4089 = !DILocation(line: 3116, column: 18, scope: !4018)
!4090 = !DILocation(line: 3116, column: 22, scope: !4018)
!4091 = !DILocation(line: 3116, column: 34, scope: !4018)
!4092 = !DILocation(line: 3116, column: 32, scope: !4018)
!4093 = !DILocation(line: 3116, column: 5, scope: !4018)
!4094 = !DILocation(line: 3117, column: 31, scope: !4095)
!4095 = distinct !DILexicalBlock(scope: !4018, file: !939, line: 3117, column: 9)
!4096 = !DILocation(line: 3117, column: 34, scope: !4095)
!4097 = !DILocation(line: 3117, column: 9, scope: !4095)
!4098 = !DILocation(line: 3117, column: 38, scope: !4095)
!4099 = !DILocation(line: 3117, column: 42, scope: !4095)
!4100 = !DILocation(line: 3118, column: 23, scope: !4095)
!4101 = !DILocation(line: 3118, column: 19, scope: !4095)
!4102 = !DILocation(line: 3118, column: 12, scope: !4095)
!4103 = !DILocation(line: 3118, column: 91, scope: !4095)
!4104 = !DILocation(line: 3119, column: 13, scope: !4095)
!4105 = !DILocation(line: 3119, column: 23, scope: !4095)
!4106 = !DILocation(line: 3119, column: 30, scope: !4095)
!4107 = !DILocation(line: 3119, column: 20, scope: !4095)
!4108 = !DILocation(line: 3117, column: 9, scope: !4060)
!4109 = !DILocation(line: 3120, column: 9, scope: !4095)
!4110 = !DILocation(line: 3122, column: 15, scope: !4018)
!4111 = !DILocation(line: 3122, column: 18, scope: !4018)
!4112 = !DILocation(line: 3122, column: 26, scope: !4018)
!4113 = !DILocation(line: 3122, column: 33, scope: !4018)
!4114 = !DILocation(line: 3122, column: 5, scope: !4018)
!4115 = !DILocation(line: 3123, column: 39, scope: !4018)
!4116 = !DILocation(line: 3123, column: 42, scope: !4018)
!4117 = !DILocation(line: 3123, column: 29, scope: !4018)
!4118 = !DILocation(line: 3123, column: 5, scope: !4018)
!4119 = !DILocation(line: 3123, column: 10, scope: !4018)
!4120 = !DILocation(line: 3123, column: 27, scope: !4018)
!4121 = !DILocation(line: 3126, column: 9, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !4018, file: !939, line: 3126, column: 9)
!4123 = !DILocation(line: 3126, column: 14, scope: !4122)
!4124 = !DILocation(line: 3126, column: 23, scope: !4122)
!4125 = !DILocation(line: 3126, column: 28, scope: !4122)
!4126 = !DILocation(line: 3126, column: 21, scope: !4122)
!4127 = !DILocation(line: 3126, column: 48, scope: !4122)
!4128 = !DILocation(line: 3126, column: 45, scope: !4122)
!4129 = !DILocation(line: 3126, column: 9, scope: !4018)
!4130 = !DILocation(line: 3127, column: 16, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !4122, file: !939, line: 3126, column: 59)
!4132 = !DILocation(line: 3127, column: 9, scope: !4131)
!4133 = !DILocation(line: 3128, column: 9, scope: !4131)
!4134 = !DILocation(line: 3128, column: 14, scope: !4131)
!4135 = !DILocation(line: 3128, column: 31, scope: !4131)
!4136 = !DILocation(line: 3129, column: 5, scope: !4131)
!4137 = !DILocation(line: 3126, column: 48, scope: !4138)
!4138 = !DILexicalBlockFile(scope: !4122, file: !939, discriminator: 1)
!4139 = !DILocation(line: 3132, column: 15, scope: !4018)
!4140 = !DILocation(line: 3132, column: 18, scope: !4018)
!4141 = !DILocation(line: 3132, column: 22, scope: !4018)
!4142 = !DILocation(line: 3132, column: 27, scope: !4018)
!4143 = !DILocation(line: 3132, column: 5, scope: !4018)
!4144 = !DILocation(line: 3133, column: 1, scope: !4018)
!4145 = !DILocation(line: 3133, column: 1, scope: !4060)
!4146 = distinct !DISubprogram(name: "klv_read_packet", scope: !939, file: !939, line: 399, type: !4147, isLocal: true, isDefinition: true, scopeLine: 400, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!4147 = !DISubroutineType(types: !4148)
!4148 = !{!1014, !2497, !1501}
!4149 = !DILocation(line: 557, column: 77, scope: !2586, inlinedAt: !4150)
!4150 = distinct !DILocation(line: 411, column: 11, scope: !4146)
!4151 = !DILocation(line: 557, column: 77, scope: !2586, inlinedAt: !4152)
!4152 = distinct !DILocation(line: 404, column: 19, scope: !4146)
!4153 = !DILocalVariable(name: "klv", arg: 1, scope: !4146, file: !939, line: 399, type: !2497)
!4154 = !DILocation(line: 399, column: 39, scope: !4146)
!4155 = !DILocalVariable(name: "pb", arg: 2, scope: !4146, file: !939, line: 399, type: !1501)
!4156 = !DILocation(line: 399, column: 57, scope: !4146)
!4157 = !DILocalVariable(name: "length", scope: !4146, file: !939, line: 401, type: !1015)
!4158 = !DILocation(line: 401, column: 13, scope: !4146)
!4159 = !DILocalVariable(name: "pos", scope: !4146, file: !939, line: 401, type: !1015)
!4160 = !DILocation(line: 401, column: 21, scope: !4146)
!4161 = !DILocation(line: 402, column: 24, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4146, file: !939, line: 402, column: 9)
!4163 = !DILocation(line: 402, column: 10, scope: !4162)
!4164 = !DILocation(line: 402, column: 9, scope: !4146)
!4165 = !DILocation(line: 403, column: 9, scope: !4162)
!4166 = !DILocation(line: 404, column: 29, scope: !4146)
!4167 = !DILocation(line: 404, column: 19, scope: !4146)
!4168 = !DILocation(line: 559, column: 22, scope: !2586, inlinedAt: !4152)
!4169 = !DILocation(line: 559, column: 12, scope: !2586, inlinedAt: !4152)
!4170 = !DILocation(line: 404, column: 33, scope: !4146)
!4171 = !DILocation(line: 404, column: 5, scope: !4146)
!4172 = !DILocation(line: 404, column: 10, scope: !4146)
!4173 = !DILocation(line: 404, column: 17, scope: !4146)
!4174 = !DILocation(line: 405, column: 12, scope: !4146)
!4175 = !DILocation(line: 405, column: 17, scope: !4146)
!4176 = !DILocation(line: 405, column: 5, scope: !4146)
!4177 = !DILocation(line: 406, column: 15, scope: !4146)
!4178 = !DILocation(line: 406, column: 19, scope: !4146)
!4179 = !DILocation(line: 406, column: 24, scope: !4146)
!4180 = !DILocation(line: 406, column: 28, scope: !4146)
!4181 = !DILocation(line: 406, column: 5, scope: !4146)
!4182 = !DILocation(line: 407, column: 36, scope: !4146)
!4183 = !DILocation(line: 407, column: 14, scope: !4146)
!4184 = !DILocation(line: 407, column: 12, scope: !4146)
!4185 = !DILocation(line: 408, column: 9, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4146, file: !939, line: 408, column: 9)
!4187 = !DILocation(line: 408, column: 16, scope: !4186)
!4188 = !DILocation(line: 408, column: 9, scope: !4146)
!4189 = !DILocation(line: 409, column: 16, scope: !4186)
!4190 = !DILocation(line: 409, column: 9, scope: !4186)
!4191 = !DILocation(line: 410, column: 19, scope: !4146)
!4192 = !DILocation(line: 410, column: 5, scope: !4146)
!4193 = !DILocation(line: 410, column: 10, scope: !4146)
!4194 = !DILocation(line: 410, column: 17, scope: !4146)
!4195 = !DILocation(line: 411, column: 21, scope: !4146)
!4196 = !DILocation(line: 411, column: 11, scope: !4146)
!4197 = !DILocation(line: 559, column: 22, scope: !2586, inlinedAt: !4150)
!4198 = !DILocation(line: 559, column: 12, scope: !2586, inlinedAt: !4150)
!4199 = !DILocation(line: 411, column: 9, scope: !4146)
!4200 = !DILocation(line: 412, column: 9, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !4146, file: !939, line: 412, column: 9)
!4202 = !DILocation(line: 412, column: 26, scope: !4201)
!4203 = !DILocation(line: 412, column: 24, scope: !4201)
!4204 = !DILocation(line: 412, column: 13, scope: !4201)
!4205 = !DILocation(line: 412, column: 9, scope: !4146)
!4206 = !DILocation(line: 413, column: 9, scope: !4201)
!4207 = !DILocation(line: 414, column: 21, scope: !4146)
!4208 = !DILocation(line: 414, column: 27, scope: !4146)
!4209 = !DILocation(line: 414, column: 25, scope: !4146)
!4210 = !DILocation(line: 414, column: 5, scope: !4146)
!4211 = !DILocation(line: 414, column: 10, scope: !4146)
!4212 = !DILocation(line: 414, column: 19, scope: !4146)
!4213 = !DILocation(line: 415, column: 5, scope: !4146)
!4214 = !DILocation(line: 416, column: 1, scope: !4146)
!4215 = distinct !DISubprogram(name: "mxf_parse_handle_partition_or_eof", scope: !939, file: !939, line: 2906, type: !4216, isLocal: true, isDefinition: true, scopeLine: 2907, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!4216 = !DISubroutineType(types: !4217)
!4217 = !{!1014, !2594}
!4218 = !DILocalVariable(name: "mxf", arg: 1, scope: !4215, file: !939, line: 2906, type: !2594)
!4219 = !DILocation(line: 2906, column: 58, scope: !4215)
!4220 = !DILocation(line: 2908, column: 12, scope: !4215)
!4221 = !DILocation(line: 2908, column: 17, scope: !4215)
!4222 = !DILocation(line: 2908, column: 67, scope: !4223)
!4223 = !DILexicalBlockFile(scope: !4215, file: !939, discriminator: 1)
!4224 = !DILocation(line: 2908, column: 36, scope: !4223)
!4225 = !DILocation(line: 2908, column: 12, scope: !4223)
!4226 = !DILocation(line: 2908, column: 12, scope: !4227)
!4227 = !DILexicalBlockFile(scope: !4215, file: !939, discriminator: 2)
!4228 = !DILocation(line: 2908, column: 12, scope: !4229)
!4229 = !DILexicalBlockFile(scope: !4215, file: !939, discriminator: 3)
!4230 = !DILocation(line: 2908, column: 5, scope: !4229)
!4231 = distinct !DISubprogram(name: "mxf_parse_handle_essence", scope: !939, file: !939, line: 2863, type: !4216, isLocal: true, isDefinition: true, scopeLine: 2864, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!4232 = !DILocation(line: 557, column: 77, scope: !2586, inlinedAt: !4233)
!4233 = distinct !DILocation(line: 2879, column: 34, scope: !4234)
!4234 = distinct !DILexicalBlock(scope: !4235, file: !939, line: 2870, column: 12)
!4235 = distinct !DILexicalBlock(scope: !4231, file: !939, line: 2868, column: 9)
!4236 = !DILocalVariable(name: "mxf", arg: 1, scope: !4231, file: !939, line: 2863, type: !2594)
!4237 = !DILocation(line: 2863, column: 49, scope: !4231)
!4238 = !DILocalVariable(name: "pb", scope: !4231, file: !939, line: 2865, type: !1501)
!4239 = !DILocation(line: 2865, column: 18, scope: !4231)
!4240 = !DILocation(line: 2865, column: 23, scope: !4231)
!4241 = !DILocation(line: 2865, column: 28, scope: !4231)
!4242 = !DILocation(line: 2865, column: 32, scope: !4231)
!4243 = !DILocalVariable(name: "ret", scope: !4231, file: !939, line: 2866, type: !1015)
!4244 = !DILocation(line: 2866, column: 13, scope: !4231)
!4245 = !DILocation(line: 2868, column: 9, scope: !4235)
!4246 = !DILocation(line: 2868, column: 14, scope: !4235)
!4247 = !DILocation(line: 2868, column: 9, scope: !4231)
!4248 = !DILocation(line: 2869, column: 47, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !4235, file: !939, line: 2868, column: 32)
!4250 = !DILocation(line: 2869, column: 16, scope: !4249)
!4251 = !DILocation(line: 2869, column: 9, scope: !4249)
!4252 = !DILocation(line: 2871, column: 14, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4234, file: !939, line: 2871, column: 13)
!4254 = !DILocation(line: 2871, column: 19, scope: !4253)
!4255 = !DILocation(line: 2871, column: 13, scope: !4234)
!4256 = !DILocation(line: 2872, column: 20, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !4253, file: !939, line: 2871, column: 37)
!4258 = !DILocation(line: 2872, column: 25, scope: !4257)
!4259 = !DILocation(line: 2872, column: 13, scope: !4257)
!4260 = !DILocation(line: 2873, column: 13, scope: !4257)
!4261 = !DILocation(line: 2876, column: 16, scope: !4234)
!4262 = !DILocation(line: 2876, column: 21, scope: !4234)
!4263 = !DILocation(line: 2876, column: 9, scope: !4234)
!4264 = !DILocation(line: 2879, column: 44, scope: !4234)
!4265 = !DILocation(line: 2879, column: 34, scope: !4234)
!4266 = !DILocation(line: 559, column: 22, scope: !2586, inlinedAt: !4233)
!4267 = !DILocation(line: 559, column: 12, scope: !2586, inlinedAt: !4233)
!4268 = !DILocation(line: 2879, column: 9, scope: !4234)
!4269 = !DILocation(line: 2879, column: 14, scope: !4234)
!4270 = !DILocation(line: 2879, column: 32, scope: !4234)
!4271 = !DILocation(line: 2881, column: 15, scope: !4272)
!4272 = distinct !DILexicalBlock(scope: !4234, file: !939, line: 2881, column: 13)
!4273 = !DILocation(line: 2881, column: 19, scope: !4272)
!4274 = !DILocation(line: 2881, column: 28, scope: !4272)
!4275 = !DILocation(line: 2881, column: 13, scope: !4234)
!4276 = !DILocation(line: 2882, column: 20, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4272, file: !939, line: 2881, column: 41)
!4278 = !DILocation(line: 2882, column: 25, scope: !4277)
!4279 = !DILocation(line: 2882, column: 13, scope: !4277)
!4280 = !DILocation(line: 2883, column: 13, scope: !4277)
!4281 = !DILocation(line: 2887, column: 30, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4234, file: !939, line: 2887, column: 13)
!4283 = !DILocation(line: 2887, column: 34, scope: !4282)
!4284 = !DILocation(line: 2887, column: 39, scope: !4282)
!4285 = !DILocation(line: 2887, column: 48, scope: !4282)
!4286 = !DILocation(line: 2887, column: 53, scope: !4282)
!4287 = !DILocation(line: 2887, column: 46, scope: !4282)
!4288 = !DILocation(line: 2887, column: 20, scope: !4282)
!4289 = !DILocation(line: 2887, column: 18, scope: !4282)
!4290 = !DILocation(line: 2887, column: 81, scope: !4282)
!4291 = !DILocation(line: 2887, column: 13, scope: !4234)
!4292 = !DILocation(line: 2888, column: 20, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !4282, file: !939, line: 2887, column: 86)
!4294 = !DILocation(line: 2888, column: 25, scope: !4293)
!4295 = !DILocation(line: 2891, column: 20, scope: !4293)
!4296 = !DILocation(line: 2891, column: 25, scope: !4293)
!4297 = !DILocation(line: 2891, column: 34, scope: !4293)
!4298 = !DILocation(line: 2891, column: 39, scope: !4293)
!4299 = !DILocation(line: 2891, column: 32, scope: !4293)
!4300 = !DILocation(line: 2891, column: 57, scope: !4293)
!4301 = !DILocation(line: 2888, column: 13, scope: !4293)
!4302 = !DILocation(line: 2892, column: 20, scope: !4293)
!4303 = !DILocation(line: 2892, column: 13, scope: !4293)
!4304 = !DILocation(line: 2895, column: 9, scope: !4234)
!4305 = !DILocation(line: 2895, column: 14, scope: !4234)
!4306 = !DILocation(line: 2895, column: 32, scope: !4234)
!4307 = !DILocation(line: 2896, column: 9, scope: !4234)
!4308 = !DILocation(line: 2896, column: 14, scope: !4234)
!4309 = !DILocation(line: 2896, column: 31, scope: !4234)
!4310 = !DILocation(line: 2899, column: 5, scope: !4231)
!4311 = !DILocation(line: 2900, column: 1, scope: !4231)
!4312 = distinct !DISubprogram(name: "mxf_is_partition_pack_key", scope: !939, file: !939, line: 2770, type: !4313, isLocal: true, isDefinition: true, scopeLine: 2771, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!4313 = !DISubroutineType(types: !4314)
!4314 = !{!1014, !1017}
!4315 = !DILocalVariable(name: "key", arg: 1, scope: !4312, file: !939, line: 2770, type: !1017)
!4316 = !DILocation(line: 2770, column: 42, scope: !4312)
!4317 = !DILocation(line: 2773, column: 20, scope: !4312)
!4318 = !DILocation(line: 2773, column: 13, scope: !4312)
!4319 = !DILocation(line: 2773, column: 60, scope: !4312)
!4320 = !DILocation(line: 2774, column: 13, scope: !4312)
!4321 = !DILocation(line: 2774, column: 21, scope: !4312)
!4322 = !DILocation(line: 2774, column: 26, scope: !4312)
!4323 = !DILocation(line: 2774, column: 29, scope: !4324)
!4324 = !DILexicalBlockFile(scope: !4312, file: !939, discriminator: 1)
!4325 = !DILocation(line: 2774, column: 37, scope: !4324)
!4326 = !DILocation(line: 2774, column: 26, scope: !4327)
!4327 = !DILexicalBlockFile(scope: !4312, file: !939, discriminator: 2)
!4328 = !DILocation(line: 2773, column: 5, scope: !4324)
!4329 = distinct !DISubprogram(name: "mxf_parse_klv", scope: !939, file: !939, line: 2781, type: !4330, isLocal: true, isDefinition: true, scopeLine: 2783, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!4330 = !DISubroutineType(types: !4331)
!4331 = !{!1014, !2594, !2498, !2448, !1014, !957}
!4332 = !DILocation(line: 557, column: 77, scope: !2586, inlinedAt: !4333)
!4333 = distinct !DILocation(line: 2793, column: 13, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !4335, file: !939, line: 2793, column: 13)
!4335 = distinct !DILexicalBlock(scope: !4336, file: !939, line: 2788, column: 12)
!4336 = distinct !DILexicalBlock(scope: !4329, file: !939, line: 2786, column: 9)
!4337 = !DILocation(line: 557, column: 77, scope: !2586, inlinedAt: !4338)
!4338 = distinct !DILocation(line: 2789, column: 25, scope: !4335)
!4339 = !DILocalVariable(name: "mxf", arg: 1, scope: !4329, file: !939, line: 2781, type: !2594)
!4340 = !DILocation(line: 2781, column: 38, scope: !4329)
!4341 = !DILocalVariable(name: "klv", arg: 2, scope: !4329, file: !939, line: 2781, type: !2498)
!4342 = !DILocation(line: 2781, column: 53, scope: !4329)
!4343 = !DILocalVariable(name: "read", arg: 3, scope: !4329, file: !939, line: 2781, type: !2448)
!4344 = !DILocation(line: 2781, column: 79, scope: !4329)
!4345 = !DILocalVariable(name: "ctx_size", arg: 4, scope: !4329, file: !939, line: 2782, type: !1014)
!4346 = !DILocation(line: 2782, column: 42, scope: !4329)
!4347 = !DILocalVariable(name: "type", arg: 5, scope: !4329, file: !939, line: 2782, type: !957)
!4348 = !DILocation(line: 2782, column: 76, scope: !4329)
!4349 = !DILocalVariable(name: "s", scope: !4329, file: !939, line: 2784, type: !2495)
!4350 = !DILocation(line: 2784, column: 22, scope: !4329)
!4351 = !DILocation(line: 2784, column: 26, scope: !4329)
!4352 = !DILocation(line: 2784, column: 31, scope: !4329)
!4353 = !DILocalVariable(name: "res", scope: !4329, file: !939, line: 2785, type: !1014)
!4354 = !DILocation(line: 2785, column: 9, scope: !4329)
!4355 = !DILocation(line: 2786, column: 13, scope: !4336)
!4356 = !DILocation(line: 2786, column: 9, scope: !4336)
!4357 = !DILocation(line: 2786, column: 20, scope: !4336)
!4358 = !DILocation(line: 2786, column: 9, scope: !4329)
!4359 = !DILocation(line: 2787, column: 35, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4336, file: !939, line: 2786, column: 29)
!4361 = !DILocation(line: 2787, column: 46, scope: !4360)
!4362 = !DILocation(line: 2787, column: 52, scope: !4360)
!4363 = !DILocation(line: 2787, column: 62, scope: !4360)
!4364 = !DILocation(line: 2787, column: 15, scope: !4360)
!4365 = !DILocation(line: 2787, column: 13, scope: !4360)
!4366 = !DILocation(line: 2788, column: 5, scope: !4360)
!4367 = !DILocalVariable(name: "next", scope: !4335, file: !939, line: 2789, type: !1125)
!4368 = !DILocation(line: 2789, column: 18, scope: !4335)
!4369 = !DILocation(line: 2789, column: 35, scope: !4335)
!4370 = !DILocation(line: 2789, column: 38, scope: !4335)
!4371 = !DILocation(line: 2789, column: 25, scope: !4335)
!4372 = !DILocation(line: 559, column: 22, scope: !2586, inlinedAt: !4338)
!4373 = !DILocation(line: 559, column: 12, scope: !2586, inlinedAt: !4338)
!4374 = !DILocation(line: 2789, column: 48, scope: !4335)
!4375 = !DILocation(line: 2789, column: 42, scope: !4335)
!4376 = !DILocation(line: 2790, column: 15, scope: !4335)
!4377 = !DILocation(line: 2790, column: 20, scope: !4335)
!4378 = !DILocation(line: 2790, column: 25, scope: !4335)
!4379 = !DILocation(line: 2790, column: 28, scope: !4335)
!4380 = !DILocation(line: 2790, column: 39, scope: !4335)
!4381 = !DILocation(line: 2790, column: 35, scope: !4335)
!4382 = !DILocation(line: 2790, column: 51, scope: !4335)
!4383 = !DILocation(line: 2790, column: 47, scope: !4335)
!4384 = !DILocation(line: 2790, column: 60, scope: !4335)
!4385 = !DILocation(line: 2790, column: 13, scope: !4335)
!4386 = !DILocation(line: 2793, column: 23, scope: !4334)
!4387 = !DILocation(line: 2793, column: 26, scope: !4334)
!4388 = !DILocation(line: 2793, column: 13, scope: !4334)
!4389 = !DILocation(line: 559, column: 22, scope: !2586, inlinedAt: !4333)
!4390 = !DILocation(line: 559, column: 12, scope: !2586, inlinedAt: !4333)
!4391 = !DILocation(line: 2793, column: 32, scope: !4334)
!4392 = !DILocation(line: 2793, column: 30, scope: !4334)
!4393 = !DILocation(line: 2793, column: 13, scope: !4335)
!4394 = !DILocation(line: 2794, column: 20, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !4334, file: !939, line: 2793, column: 38)
!4396 = !DILocation(line: 2795, column: 24, scope: !4395)
!4397 = !DILocation(line: 2794, column: 13, scope: !4395)
!4398 = !DILocation(line: 2796, column: 13, scope: !4395)
!4399 = !DILocation(line: 2799, column: 19, scope: !4335)
!4400 = !DILocation(line: 2799, column: 22, scope: !4335)
!4401 = !DILocation(line: 2799, column: 26, scope: !4335)
!4402 = !DILocation(line: 2799, column: 9, scope: !4335)
!4403 = !DILocation(line: 2801, column: 9, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4329, file: !939, line: 2801, column: 9)
!4405 = !DILocation(line: 2801, column: 13, scope: !4404)
!4406 = !DILocation(line: 2801, column: 9, scope: !4329)
!4407 = !DILocation(line: 2802, column: 16, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !4404, file: !939, line: 2801, column: 18)
!4409 = !DILocation(line: 2802, column: 9, scope: !4408)
!4410 = !DILocation(line: 2803, column: 16, scope: !4408)
!4411 = !DILocation(line: 2803, column: 9, scope: !4408)
!4412 = !DILocation(line: 2805, column: 5, scope: !4329)
!4413 = !DILocation(line: 2806, column: 1, scope: !4329)
!4414 = distinct !DISubprogram(name: "mxf_parse_structural_metadata", scope: !939, file: !939, line: 2142, type: !4216, isLocal: true, isDefinition: true, scopeLine: 2143, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!4415 = !DILocation(line: 159, column: 77, scope: !3577, inlinedAt: !4416)
!4416 = distinct !DILocation(line: 2498, column: 45, scope: !4417)
!4417 = distinct !DILexicalBlock(scope: !4418, file: !939, line: 2496, column: 17)
!4418 = distinct !DILexicalBlock(scope: !4419, file: !939, line: 2477, column: 68)
!4419 = distinct !DILexicalBlock(scope: !4420, file: !939, line: 2477, column: 20)
!4420 = distinct !DILexicalBlock(scope: !4421, file: !939, line: 2367, column: 13)
!4421 = distinct !DILexicalBlock(scope: !4422, file: !939, line: 2163, column: 58)
!4422 = distinct !DILexicalBlock(scope: !4423, file: !939, line: 2163, column: 5)
!4423 = distinct !DILexicalBlock(scope: !4414, file: !939, line: 2163, column: 5)
!4424 = !DILocation(line: 161, column: 16, scope: !3577, inlinedAt: !4416)
!4425 = !DILocalVariable(name: "mxf", arg: 1, scope: !4414, file: !939, line: 2142, type: !2594)
!4426 = !DILocation(line: 2142, column: 54, scope: !4414)
!4427 = !DILocalVariable(name: "material_package", scope: !4414, file: !939, line: 2144, type: !1083)
!4428 = !DILocation(line: 2144, column: 17, scope: !4414)
!4429 = !DILocalVariable(name: "i", scope: !4414, file: !939, line: 2145, type: !1014)
!4430 = !DILocation(line: 2145, column: 9, scope: !4414)
!4431 = !DILocalVariable(name: "j", scope: !4414, file: !939, line: 2145, type: !1014)
!4432 = !DILocation(line: 2145, column: 12, scope: !4414)
!4433 = !DILocalVariable(name: "k", scope: !4414, file: !939, line: 2145, type: !1014)
!4434 = !DILocation(line: 2145, column: 15, scope: !4414)
!4435 = !DILocalVariable(name: "ret", scope: !4414, file: !939, line: 2145, type: !1014)
!4436 = !DILocation(line: 2145, column: 18, scope: !4414)
!4437 = !DILocation(line: 2147, column: 12, scope: !4414)
!4438 = !DILocation(line: 2147, column: 17, scope: !4414)
!4439 = !DILocation(line: 2147, column: 53, scope: !4414)
!4440 = !DILocation(line: 2147, column: 58, scope: !4414)
!4441 = !DILocation(line: 2147, column: 5, scope: !4414)
!4442 = !DILocation(line: 2149, column: 12, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4414, file: !939, line: 2149, column: 5)
!4444 = !DILocation(line: 2149, column: 10, scope: !4443)
!4445 = !DILocation(line: 2149, column: 17, scope: !4446)
!4446 = !DILexicalBlockFile(scope: !4447, file: !939, discriminator: 1)
!4447 = distinct !DILexicalBlock(scope: !4443, file: !939, line: 2149, column: 5)
!4448 = !DILocation(line: 2149, column: 21, scope: !4446)
!4449 = !DILocation(line: 2149, column: 26, scope: !4446)
!4450 = !DILocation(line: 2149, column: 19, scope: !4446)
!4451 = !DILocation(line: 2149, column: 5, scope: !4446)
!4452 = !DILocation(line: 2150, column: 51, scope: !4453)
!4453 = distinct !DILexicalBlock(scope: !4447, file: !939, line: 2149, column: 47)
!4454 = !DILocation(line: 2150, column: 76, scope: !4453)
!4455 = !DILocation(line: 2150, column: 57, scope: !4453)
!4456 = !DILocation(line: 2150, column: 62, scope: !4453)
!4457 = !DILocation(line: 2150, column: 28, scope: !4453)
!4458 = !DILocation(line: 2150, column: 26, scope: !4453)
!4459 = !DILocation(line: 2151, column: 13, scope: !4460)
!4460 = distinct !DILexicalBlock(scope: !4453, file: !939, line: 2151, column: 13)
!4461 = !DILocation(line: 2151, column: 13, scope: !4453)
!4462 = !DILocation(line: 2151, column: 31, scope: !4463)
!4463 = !DILexicalBlockFile(scope: !4460, file: !939, discriminator: 1)
!4464 = !DILocation(line: 2152, column: 5, scope: !4453)
!4465 = !DILocation(line: 2149, column: 43, scope: !4466)
!4466 = !DILexicalBlockFile(scope: !4447, file: !939, discriminator: 2)
!4467 = !DILocation(line: 2149, column: 5, scope: !4466)
!4468 = distinct !{!4468, !4469}
!4469 = !DILocation(line: 2149, column: 5, scope: !4414)
!4470 = !DILocation(line: 2153, column: 10, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4414, file: !939, line: 2153, column: 9)
!4472 = !DILocation(line: 2153, column: 9, scope: !4414)
!4473 = !DILocation(line: 2154, column: 16, scope: !4474)
!4474 = distinct !DILexicalBlock(scope: !4471, file: !939, line: 2153, column: 28)
!4475 = !DILocation(line: 2154, column: 21, scope: !4474)
!4476 = !DILocation(line: 2154, column: 9, scope: !4474)
!4477 = !DILocation(line: 2155, column: 9, scope: !4474)
!4478 = !DILocation(line: 2158, column: 28, scope: !4414)
!4479 = !DILocation(line: 2158, column: 33, scope: !4414)
!4480 = !DILocation(line: 2158, column: 37, scope: !4414)
!4481 = !DILocation(line: 2158, column: 72, scope: !4414)
!4482 = !DILocation(line: 2158, column: 5, scope: !4414)
!4483 = !DILocation(line: 2159, column: 9, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !4414, file: !939, line: 2159, column: 9)
!4485 = !DILocation(line: 2159, column: 27, scope: !4484)
!4486 = !DILocation(line: 2159, column: 32, scope: !4484)
!4487 = !DILocation(line: 2159, column: 35, scope: !4488)
!4488 = !DILexicalBlockFile(scope: !4484, file: !939, discriminator: 1)
!4489 = !DILocation(line: 2159, column: 53, scope: !4488)
!4490 = !DILocation(line: 2159, column: 9, scope: !4488)
!4491 = !DILocation(line: 2160, column: 22, scope: !4484)
!4492 = !DILocation(line: 2160, column: 27, scope: !4484)
!4493 = !DILocation(line: 2160, column: 31, scope: !4484)
!4494 = !DILocation(line: 2160, column: 66, scope: !4484)
!4495 = !DILocation(line: 2160, column: 84, scope: !4484)
!4496 = !DILocation(line: 2160, column: 9, scope: !4484)
!4497 = !DILocation(line: 2161, column: 32, scope: !4414)
!4498 = !DILocation(line: 2161, column: 38, scope: !4414)
!4499 = !DILocation(line: 2161, column: 43, scope: !4414)
!4500 = !DILocation(line: 2161, column: 47, scope: !4414)
!4501 = !DILocation(line: 2161, column: 57, scope: !4414)
!4502 = !DILocation(line: 2161, column: 5, scope: !4414)
!4503 = !DILocation(line: 2163, column: 12, scope: !4423)
!4504 = !DILocation(line: 2163, column: 10, scope: !4423)
!4505 = !DILocation(line: 2163, column: 17, scope: !4506)
!4506 = !DILexicalBlockFile(scope: !4422, file: !939, discriminator: 1)
!4507 = !DILocation(line: 2163, column: 21, scope: !4506)
!4508 = !DILocation(line: 2163, column: 39, scope: !4506)
!4509 = !DILocation(line: 2163, column: 19, scope: !4506)
!4510 = !DILocation(line: 2163, column: 5, scope: !4506)
!4511 = !DILocalVariable(name: "source_package", scope: !4421, file: !939, line: 2164, type: !1083)
!4512 = !DILocation(line: 2164, column: 21, scope: !4421)
!4513 = !DILocalVariable(name: "material_track", scope: !4421, file: !939, line: 2165, type: !1108)
!4514 = !DILocation(line: 2165, column: 19, scope: !4421)
!4515 = !DILocalVariable(name: "source_track", scope: !4421, file: !939, line: 2166, type: !1108)
!4516 = !DILocation(line: 2166, column: 19, scope: !4421)
!4517 = !DILocalVariable(name: "temp_track", scope: !4421, file: !939, line: 2167, type: !1108)
!4518 = !DILocation(line: 2167, column: 19, scope: !4421)
!4519 = !DILocalVariable(name: "descriptor", scope: !4421, file: !939, line: 2168, type: !1021)
!4520 = !DILocation(line: 2168, column: 24, scope: !4421)
!4521 = !DILocalVariable(name: "component", scope: !4421, file: !939, line: 2169, type: !4522)
!4522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4523, size: 64, align: 64)
!4523 = !DIDerivedType(tag: DW_TAG_typedef, name: "MXFStructuralComponent", file: !939, line: 122, baseType: !4524)
!4524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MXFStructuralComponent", file: !939, line: 113, size: 768, align: 64, elements: !4525)
!4525 = !{!4526, !4527, !4528, !4529, !4530, !4531, !4532, !4533}
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4524, file: !939, line: 114, baseType: !1026, size: 128, align: 8)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4524, file: !939, line: 115, baseType: !957, size: 32, align: 32, offset: 128)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "source_package_ul", scope: !4524, file: !939, line: 116, baseType: !1026, size: 128, align: 8, offset: 160)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "source_package_uid", scope: !4524, file: !939, line: 117, baseType: !1026, size: 128, align: 8, offset: 288)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "data_definition_ul", scope: !4524, file: !939, line: 118, baseType: !1026, size: 128, align: 8, offset: 416)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !4524, file: !939, line: 119, baseType: !1015, size: 64, align: 64, offset: 576)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "start_position", scope: !4524, file: !939, line: 120, baseType: !1015, size: 64, align: 64, offset: 640)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "source_track_id", scope: !4524, file: !939, line: 121, baseType: !1014, size: 32, align: 32, offset: 704)
!4534 = !DILocation(line: 2169, column: 33, scope: !4421)
!4535 = !DILocalVariable(name: "mxf_tc", scope: !4421, file: !939, line: 2170, type: !1154)
!4536 = !DILocation(line: 2170, column: 31, scope: !4421)
!4537 = !DILocalVariable(name: "essence_container_ul", scope: !4421, file: !939, line: 2171, type: !1057)
!4538 = !DILocation(line: 2171, column: 14, scope: !4421)
!4539 = !DILocalVariable(name: "codec_ul", scope: !4421, file: !939, line: 2172, type: !4540)
!4540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2466, size: 64, align: 64)
!4541 = !DILocation(line: 2172, column: 27, scope: !4421)
!4542 = !DILocalVariable(name: "container_ul", scope: !4421, file: !939, line: 2173, type: !4540)
!4543 = !DILocation(line: 2173, column: 27, scope: !4421)
!4544 = !DILocalVariable(name: "pix_fmt_ul", scope: !4421, file: !939, line: 2174, type: !4540)
!4545 = !DILocation(line: 2174, column: 27, scope: !4421)
!4546 = !DILocalVariable(name: "st", scope: !4421, file: !939, line: 2175, type: !1569)
!4547 = !DILocation(line: 2175, column: 19, scope: !4421)
!4548 = !DILocalVariable(name: "tc", scope: !4421, file: !939, line: 2176, type: !1164)
!4549 = !DILocation(line: 2176, column: 20, scope: !4421)
!4550 = !DILocalVariable(name: "flags", scope: !4421, file: !939, line: 2177, type: !1014)
!4551 = !DILocation(line: 2177, column: 13, scope: !4421)
!4552 = !DILocation(line: 2179, column: 55, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4421, file: !939, line: 2179, column: 13)
!4554 = !DILocation(line: 2179, column: 91, scope: !4553)
!4555 = !DILocation(line: 2179, column: 61, scope: !4553)
!4556 = !DILocation(line: 2179, column: 79, scope: !4553)
!4557 = !DILocation(line: 2179, column: 32, scope: !4553)
!4558 = !DILocation(line: 2179, column: 30, scope: !4553)
!4559 = !DILocation(line: 2179, column: 13, scope: !4421)
!4560 = !DILocation(line: 2180, column: 20, scope: !4561)
!4561 = distinct !DILexicalBlock(scope: !4553, file: !939, line: 2179, column: 104)
!4562 = !DILocation(line: 2180, column: 25, scope: !4561)
!4563 = !DILocation(line: 2180, column: 13, scope: !4561)
!4564 = !DILocation(line: 2181, column: 13, scope: !4561)
!4565 = !DILocation(line: 2184, column: 49, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4421, file: !939, line: 2184, column: 13)
!4567 = !DILocation(line: 2184, column: 55, scope: !4566)
!4568 = !DILocation(line: 2184, column: 71, scope: !4566)
!4569 = !DILocation(line: 2184, column: 26, scope: !4566)
!4570 = !DILocation(line: 2184, column: 24, scope: !4566)
!4571 = !DILocation(line: 2184, column: 13, scope: !4421)
!4572 = !DILocation(line: 2185, column: 45, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !4566, file: !939, line: 2184, column: 106)
!4574 = !DILocation(line: 2185, column: 22, scope: !4573)
!4575 = !DILocation(line: 2185, column: 20, scope: !4573)
!4576 = !DILocation(line: 2186, column: 21, scope: !4573)
!4577 = !DILocation(line: 2186, column: 29, scope: !4573)
!4578 = !DILocation(line: 2186, column: 40, scope: !4573)
!4579 = !DILocation(line: 2186, column: 19, scope: !4573)
!4580 = !DILocation(line: 2187, column: 39, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4573, file: !939, line: 2187, column: 17)
!4582 = !DILocation(line: 2187, column: 47, scope: !4581)
!4583 = !DILocation(line: 2187, column: 53, scope: !4581)
!4584 = !DILocation(line: 2187, column: 60, scope: !4581)
!4585 = !DILocation(line: 2187, column: 68, scope: !4581)
!4586 = !DILocation(line: 2187, column: 81, scope: !4581)
!4587 = !DILocation(line: 2187, column: 86, scope: !4581)
!4588 = !DILocation(line: 2187, column: 17, scope: !4581)
!4589 = !DILocation(line: 2187, column: 90, scope: !4581)
!4590 = !DILocation(line: 2187, column: 17, scope: !4573)
!4591 = !DILocation(line: 2188, column: 44, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4581, file: !939, line: 2187, column: 96)
!4593 = !DILocation(line: 2188, column: 49, scope: !4592)
!4594 = !DILocation(line: 2188, column: 53, scope: !4592)
!4595 = !DILocation(line: 2188, column: 17, scope: !4592)
!4596 = !DILocation(line: 2189, column: 13, scope: !4592)
!4597 = !DILocation(line: 2190, column: 9, scope: !4573)
!4598 = !DILocation(line: 2192, column: 65, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4421, file: !939, line: 2192, column: 13)
!4600 = !DILocation(line: 2192, column: 71, scope: !4599)
!4601 = !DILocation(line: 2192, column: 87, scope: !4599)
!4602 = !DILocation(line: 2192, column: 42, scope: !4599)
!4603 = !DILocation(line: 2192, column: 15, scope: !4599)
!4604 = !DILocation(line: 2192, column: 31, scope: !4599)
!4605 = !DILocation(line: 2192, column: 40, scope: !4599)
!4606 = !DILocation(line: 2192, column: 13, scope: !4421)
!4607 = !DILocation(line: 2193, column: 20, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4599, file: !939, line: 2192, column: 113)
!4609 = !DILocation(line: 2193, column: 25, scope: !4608)
!4610 = !DILocation(line: 2193, column: 13, scope: !4608)
!4611 = !DILocation(line: 2194, column: 13, scope: !4608)
!4612 = !DILocation(line: 2197, column: 16, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4421, file: !939, line: 2197, column: 9)
!4614 = !DILocation(line: 2197, column: 14, scope: !4613)
!4615 = !DILocation(line: 2197, column: 21, scope: !4616)
!4616 = !DILexicalBlockFile(scope: !4617, file: !939, discriminator: 1)
!4617 = distinct !DILexicalBlock(scope: !4613, file: !939, line: 2197, column: 9)
!4618 = !DILocation(line: 2197, column: 25, scope: !4616)
!4619 = !DILocation(line: 2197, column: 41, scope: !4616)
!4620 = !DILocation(line: 2197, column: 51, scope: !4616)
!4621 = !DILocation(line: 2197, column: 23, scope: !4616)
!4622 = !DILocation(line: 2197, column: 9, scope: !4616)
!4623 = !DILocation(line: 2198, column: 48, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !4617, file: !939, line: 2197, column: 85)
!4625 = !DILocation(line: 2198, column: 107, scope: !4624)
!4626 = !DILocation(line: 2198, column: 54, scope: !4624)
!4627 = !DILocation(line: 2198, column: 70, scope: !4624)
!4628 = !DILocation(line: 2198, column: 80, scope: !4624)
!4629 = !DILocation(line: 2198, column: 25, scope: !4624)
!4630 = !DILocation(line: 2198, column: 23, scope: !4624)
!4631 = !DILocation(line: 2199, column: 18, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4624, file: !939, line: 2199, column: 17)
!4633 = !DILocation(line: 2199, column: 17, scope: !4624)
!4634 = !DILocation(line: 2200, column: 17, scope: !4632)
!4635 = !DILocation(line: 2202, column: 45, scope: !4624)
!4636 = !DILocation(line: 2202, column: 22, scope: !4624)
!4637 = !DILocation(line: 2202, column: 20, scope: !4624)
!4638 = !DILocation(line: 2203, column: 21, scope: !4624)
!4639 = !DILocation(line: 2203, column: 29, scope: !4624)
!4640 = !DILocation(line: 2203, column: 40, scope: !4624)
!4641 = !DILocation(line: 2203, column: 19, scope: !4624)
!4642 = !DILocation(line: 2204, column: 39, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4624, file: !939, line: 2204, column: 17)
!4644 = !DILocation(line: 2204, column: 47, scope: !4643)
!4645 = !DILocation(line: 2204, column: 53, scope: !4643)
!4646 = !DILocation(line: 2204, column: 60, scope: !4643)
!4647 = !DILocation(line: 2204, column: 68, scope: !4643)
!4648 = !DILocation(line: 2204, column: 81, scope: !4643)
!4649 = !DILocation(line: 2204, column: 86, scope: !4643)
!4650 = !DILocation(line: 2204, column: 17, scope: !4643)
!4651 = !DILocation(line: 2204, column: 90, scope: !4643)
!4652 = !DILocation(line: 2204, column: 17, scope: !4624)
!4653 = !DILocation(line: 2205, column: 44, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4643, file: !939, line: 2204, column: 96)
!4655 = !DILocation(line: 2205, column: 49, scope: !4654)
!4656 = !DILocation(line: 2205, column: 53, scope: !4654)
!4657 = !DILocation(line: 2205, column: 17, scope: !4654)
!4658 = !DILocation(line: 2206, column: 17, scope: !4654)
!4659 = !DILocation(line: 2208, column: 9, scope: !4624)
!4660 = !DILocation(line: 2197, column: 81, scope: !4661)
!4661 = !DILexicalBlockFile(scope: !4617, file: !939, discriminator: 2)
!4662 = !DILocation(line: 2197, column: 9, scope: !4661)
!4663 = distinct !{!4663, !4664}
!4664 = !DILocation(line: 2197, column: 9, scope: !4421)
!4665 = !DILocation(line: 2211, column: 12, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4421, file: !939, line: 2211, column: 12)
!4667 = !DILocation(line: 2211, column: 28, scope: !4666)
!4668 = !DILocation(line: 2211, column: 38, scope: !4666)
!4669 = !DILocation(line: 2211, column: 66, scope: !4666)
!4670 = !DILocation(line: 2211, column: 12, scope: !4421)
!4671 = !DILocation(line: 2212, column: 20, scope: !4666)
!4672 = !DILocation(line: 2212, column: 25, scope: !4666)
!4673 = !DILocation(line: 2213, column: 24, scope: !4666)
!4674 = !DILocation(line: 2213, column: 40, scope: !4666)
!4675 = !DILocation(line: 2213, column: 50, scope: !4666)
!4676 = !DILocation(line: 2213, column: 66, scope: !4666)
!4677 = !DILocation(line: 2213, column: 76, scope: !4666)
!4678 = !DILocation(line: 2212, column: 13, scope: !4666)
!4679 = !DILocation(line: 2215, column: 16, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4421, file: !939, line: 2215, column: 9)
!4681 = !DILocation(line: 2215, column: 14, scope: !4680)
!4682 = !DILocation(line: 2215, column: 21, scope: !4683)
!4683 = !DILexicalBlockFile(scope: !4684, file: !939, discriminator: 1)
!4684 = distinct !DILexicalBlock(scope: !4680, file: !939, line: 2215, column: 9)
!4685 = !DILocation(line: 2215, column: 25, scope: !4683)
!4686 = !DILocation(line: 2215, column: 41, scope: !4683)
!4687 = !DILocation(line: 2215, column: 51, scope: !4683)
!4688 = !DILocation(line: 2215, column: 23, scope: !4683)
!4689 = !DILocation(line: 2215, column: 9, scope: !4683)
!4690 = !DILocation(line: 2216, column: 48, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4684, file: !939, line: 2215, column: 85)
!4692 = !DILocation(line: 2216, column: 107, scope: !4691)
!4693 = !DILocation(line: 2216, column: 54, scope: !4691)
!4694 = !DILocation(line: 2216, column: 70, scope: !4691)
!4695 = !DILocation(line: 2216, column: 80, scope: !4691)
!4696 = !DILocation(line: 2216, column: 25, scope: !4691)
!4697 = !DILocation(line: 2216, column: 23, scope: !4691)
!4698 = !DILocation(line: 2217, column: 18, scope: !4699)
!4699 = distinct !DILexicalBlock(scope: !4691, file: !939, line: 2217, column: 17)
!4700 = !DILocation(line: 2217, column: 17, scope: !4691)
!4701 = !DILocation(line: 2218, column: 17, scope: !4699)
!4702 = !DILocation(line: 2220, column: 57, scope: !4691)
!4703 = !DILocation(line: 2220, column: 62, scope: !4691)
!4704 = !DILocation(line: 2220, column: 73, scope: !4691)
!4705 = !DILocation(line: 2220, column: 92, scope: !4691)
!4706 = !DILocation(line: 2220, column: 103, scope: !4691)
!4707 = !DILocation(line: 2220, column: 30, scope: !4691)
!4708 = !DILocation(line: 2220, column: 28, scope: !4691)
!4709 = !DILocation(line: 2221, column: 18, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4691, file: !939, line: 2221, column: 17)
!4711 = !DILocation(line: 2221, column: 17, scope: !4691)
!4712 = !DILocation(line: 2222, column: 24, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4710, file: !939, line: 2221, column: 34)
!4714 = !DILocation(line: 2222, column: 29, scope: !4713)
!4715 = !DILocation(line: 2222, column: 99, scope: !4713)
!4716 = !DILocation(line: 2222, column: 115, scope: !4713)
!4717 = !DILocation(line: 2222, column: 17, scope: !4713)
!4718 = !DILocation(line: 2223, column: 17, scope: !4713)
!4719 = !DILocation(line: 2225, column: 20, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4691, file: !939, line: 2225, column: 13)
!4721 = !DILocation(line: 2225, column: 18, scope: !4720)
!4722 = !DILocation(line: 2225, column: 25, scope: !4723)
!4723 = !DILexicalBlockFile(scope: !4724, file: !939, discriminator: 1)
!4724 = distinct !DILexicalBlock(scope: !4720, file: !939, line: 2225, column: 13)
!4725 = !DILocation(line: 2225, column: 29, scope: !4723)
!4726 = !DILocation(line: 2225, column: 45, scope: !4723)
!4727 = !DILocation(line: 2225, column: 27, scope: !4723)
!4728 = !DILocation(line: 2225, column: 13, scope: !4723)
!4729 = !DILocation(line: 2226, column: 59, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4731, file: !939, line: 2226, column: 21)
!4731 = distinct !DILexicalBlock(scope: !4724, file: !939, line: 2225, column: 64)
!4732 = !DILocation(line: 2226, column: 93, scope: !4730)
!4733 = !DILocation(line: 2226, column: 65, scope: !4730)
!4734 = !DILocation(line: 2226, column: 81, scope: !4730)
!4735 = !DILocation(line: 2226, column: 36, scope: !4730)
!4736 = !DILocation(line: 2226, column: 34, scope: !4730)
!4737 = !DILocation(line: 2226, column: 21, scope: !4731)
!4738 = !DILocation(line: 2227, column: 28, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4730, file: !939, line: 2226, column: 106)
!4740 = !DILocation(line: 2227, column: 33, scope: !4739)
!4741 = !DILocation(line: 2227, column: 21, scope: !4739)
!4742 = !DILocation(line: 2228, column: 25, scope: !4739)
!4743 = !DILocation(line: 2229, column: 21, scope: !4739)
!4744 = !DILocation(line: 2231, column: 21, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4731, file: !939, line: 2231, column: 21)
!4746 = !DILocation(line: 2231, column: 33, scope: !4745)
!4747 = !DILocation(line: 2231, column: 45, scope: !4745)
!4748 = !DILocation(line: 2231, column: 56, scope: !4745)
!4749 = !DILocation(line: 2231, column: 42, scope: !4745)
!4750 = !DILocation(line: 2231, column: 21, scope: !4731)
!4751 = !DILocation(line: 2232, column: 36, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4745, file: !939, line: 2231, column: 73)
!4753 = !DILocation(line: 2232, column: 34, scope: !4752)
!4754 = !DILocation(line: 2233, column: 21, scope: !4752)
!4755 = !DILocation(line: 2235, column: 13, scope: !4731)
!4756 = !DILocation(line: 2225, column: 60, scope: !4757)
!4757 = !DILexicalBlockFile(scope: !4724, file: !939, discriminator: 2)
!4758 = !DILocation(line: 2225, column: 13, scope: !4757)
!4759 = distinct !{!4759, !4760}
!4760 = !DILocation(line: 2225, column: 13, scope: !4691)
!4761 = !DILocation(line: 2236, column: 18, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4691, file: !939, line: 2236, column: 17)
!4763 = !DILocation(line: 2236, column: 17, scope: !4691)
!4764 = !DILocation(line: 2237, column: 24, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4762, file: !939, line: 2236, column: 32)
!4766 = !DILocation(line: 2237, column: 29, scope: !4765)
!4767 = !DILocation(line: 2237, column: 97, scope: !4765)
!4768 = !DILocation(line: 2237, column: 113, scope: !4765)
!4769 = !DILocation(line: 2237, column: 17, scope: !4765)
!4770 = !DILocation(line: 2238, column: 17, scope: !4765)
!4771 = !DILocation(line: 2241, column: 20, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4691, file: !939, line: 2241, column: 13)
!4773 = !DILocation(line: 2241, column: 18, scope: !4772)
!4774 = !DILocation(line: 2241, column: 25, scope: !4775)
!4775 = !DILexicalBlockFile(scope: !4776, file: !939, discriminator: 1)
!4776 = distinct !DILexicalBlock(scope: !4772, file: !939, line: 2241, column: 13)
!4777 = !DILocation(line: 2241, column: 29, scope: !4775)
!4778 = !DILocation(line: 2241, column: 34, scope: !4775)
!4779 = !DILocation(line: 2241, column: 27, scope: !4775)
!4780 = !DILocation(line: 2241, column: 13, scope: !4775)
!4781 = !DILocalVariable(name: "essence_data", scope: !4782, file: !939, line: 2242, type: !4783)
!4782 = distinct !DILexicalBlock(scope: !4776, file: !939, line: 2241, column: 69)
!4783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4784, size: 64, align: 64)
!4784 = !DIDerivedType(tag: DW_TAG_typedef, name: "MXFEssenceContainerData", file: !939, line: 248, baseType: !4785)
!4785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MXFEssenceContainerData", file: !939, line: 241, size: 480, align: 32, elements: !4786)
!4786 = !{!4787, !4788, !4789, !4790, !4791, !4792}
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4785, file: !939, line: 242, baseType: !1026, size: 128, align: 8)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4785, file: !939, line: 243, baseType: !957, size: 32, align: 32, offset: 128)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "package_uid", scope: !4785, file: !939, line: 244, baseType: !1026, size: 128, align: 8, offset: 160)
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "package_ul", scope: !4785, file: !939, line: 245, baseType: !1026, size: 128, align: 8, offset: 288)
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "index_sid", scope: !4785, file: !939, line: 246, baseType: !1014, size: 32, align: 32, offset: 416)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "body_sid", scope: !4785, file: !939, line: 247, baseType: !1014, size: 32, align: 32, offset: 448)
!4793 = !DILocation(line: 2242, column: 42, scope: !4782)
!4794 = !DILocation(line: 2244, column: 61, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4782, file: !939, line: 2244, column: 21)
!4796 = !DILocation(line: 2244, column: 100, scope: !4795)
!4797 = !DILocation(line: 2244, column: 67, scope: !4795)
!4798 = !DILocation(line: 2244, column: 72, scope: !4795)
!4799 = !DILocation(line: 2244, column: 38, scope: !4795)
!4800 = !DILocation(line: 2244, column: 36, scope: !4795)
!4801 = !DILocation(line: 2244, column: 21, scope: !4782)
!4802 = !DILocation(line: 2245, column: 28, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4795, file: !939, line: 2244, column: 128)
!4804 = !DILocation(line: 2245, column: 33, scope: !4803)
!4805 = !DILocation(line: 2245, column: 21, scope: !4803)
!4806 = !DILocation(line: 2246, column: 21, scope: !4803)
!4807 = !DILocation(line: 2248, column: 29, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4782, file: !939, line: 2248, column: 21)
!4809 = !DILocation(line: 2248, column: 40, scope: !4808)
!4810 = !DILocation(line: 2248, column: 59, scope: !4808)
!4811 = !DILocation(line: 2248, column: 73, scope: !4808)
!4812 = !DILocation(line: 2248, column: 22, scope: !4808)
!4813 = !DILocation(line: 2248, column: 98, scope: !4808)
!4814 = !DILocation(line: 2248, column: 109, scope: !4815)
!4815 = !DILexicalBlockFile(scope: !4808, file: !939, discriminator: 1)
!4816 = !DILocation(line: 2248, column: 120, scope: !4815)
!4817 = !DILocation(line: 2248, column: 140, scope: !4815)
!4818 = !DILocation(line: 2248, column: 154, scope: !4815)
!4819 = !DILocation(line: 2248, column: 102, scope: !4815)
!4820 = !DILocation(line: 2248, column: 21, scope: !4815)
!4821 = !DILocation(line: 2249, column: 46, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !4808, file: !939, line: 2248, column: 181)
!4823 = !DILocation(line: 2249, column: 60, scope: !4822)
!4824 = !DILocation(line: 2249, column: 21, scope: !4822)
!4825 = !DILocation(line: 2249, column: 35, scope: !4822)
!4826 = !DILocation(line: 2249, column: 44, scope: !4822)
!4827 = !DILocation(line: 2250, column: 47, scope: !4822)
!4828 = !DILocation(line: 2250, column: 61, scope: !4822)
!4829 = !DILocation(line: 2250, column: 21, scope: !4822)
!4830 = !DILocation(line: 2250, column: 35, scope: !4822)
!4831 = !DILocation(line: 2250, column: 45, scope: !4822)
!4832 = !DILocation(line: 2251, column: 21, scope: !4822)
!4833 = !DILocation(line: 2253, column: 13, scope: !4782)
!4834 = !DILocation(line: 2241, column: 65, scope: !4835)
!4835 = !DILexicalBlockFile(scope: !4776, file: !939, discriminator: 2)
!4836 = !DILocation(line: 2241, column: 13, scope: !4835)
!4837 = distinct !{!4837, !4838}
!4838 = !DILocation(line: 2241, column: 13, scope: !4691)
!4839 = !DILocation(line: 2255, column: 16, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4691, file: !939, line: 2255, column: 16)
!4841 = !DILocation(line: 2255, column: 29, scope: !4840)
!4842 = !DILocation(line: 2255, column: 32, scope: !4843)
!4843 = !DILexicalBlockFile(scope: !4840, file: !939, discriminator: 1)
!4844 = !DILocation(line: 2255, column: 16, scope: !4843)
!4845 = !DILocation(line: 2256, column: 17, scope: !4840)
!4846 = !DILocation(line: 2257, column: 9, scope: !4691)
!4847 = !DILocation(line: 2215, column: 81, scope: !4848)
!4848 = !DILexicalBlockFile(scope: !4684, file: !939, discriminator: 2)
!4849 = !DILocation(line: 2215, column: 9, scope: !4848)
!4850 = distinct !{!4850, !4851}
!4851 = !DILocation(line: 2215, column: 9, scope: !4421)
!4852 = !DILocation(line: 2258, column: 14, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4421, file: !939, line: 2258, column: 13)
!4854 = !DILocation(line: 2258, column: 27, scope: !4853)
!4855 = !DILocation(line: 2258, column: 31, scope: !4856)
!4856 = !DILexicalBlockFile(scope: !4853, file: !939, discriminator: 1)
!4857 = !DILocation(line: 2258, column: 41, scope: !4856)
!4858 = !DILocation(line: 2258, column: 45, scope: !4859)
!4859 = !DILexicalBlockFile(scope: !4853, file: !939, discriminator: 2)
!4860 = !DILocation(line: 2258, column: 13, scope: !4859)
!4861 = !DILocation(line: 2259, column: 47, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4863, file: !939, line: 2259, column: 16)
!4863 = distinct !DILexicalBlock(scope: !4853, file: !939, line: 2258, column: 61)
!4864 = !DILocation(line: 2259, column: 52, scope: !4862)
!4865 = !DILocation(line: 2259, column: 23, scope: !4862)
!4866 = !DILocation(line: 2259, column: 21, scope: !4862)
!4867 = !DILocation(line: 2259, column: 16, scope: !4863)
!4868 = !DILocation(line: 2260, column: 17, scope: !4862)
!4869 = !DILocation(line: 2261, column: 13, scope: !4863)
!4870 = !DILocation(line: 2264, column: 63, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4421, file: !939, line: 2264, column: 13)
!4872 = !DILocation(line: 2264, column: 69, scope: !4871)
!4873 = !DILocation(line: 2264, column: 83, scope: !4871)
!4874 = !DILocation(line: 2264, column: 40, scope: !4871)
!4875 = !DILocation(line: 2264, column: 15, scope: !4871)
!4876 = !DILocation(line: 2264, column: 29, scope: !4871)
!4877 = !DILocation(line: 2264, column: 38, scope: !4871)
!4878 = !DILocation(line: 2264, column: 13, scope: !4421)
!4879 = !DILocation(line: 2265, column: 20, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4871, file: !939, line: 2264, column: 109)
!4881 = !DILocation(line: 2265, column: 25, scope: !4880)
!4882 = !DILocation(line: 2265, column: 13, scope: !4880)
!4883 = !DILocation(line: 2266, column: 17, scope: !4880)
!4884 = !DILocation(line: 2267, column: 13, scope: !4880)
!4885 = !DILocation(line: 2272, column: 20, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4421, file: !939, line: 2272, column: 13)
!4887 = !DILocation(line: 2272, column: 36, scope: !4886)
!4888 = !DILocation(line: 2272, column: 46, scope: !4886)
!4889 = !DILocation(line: 2272, column: 66, scope: !4886)
!4890 = !DILocation(line: 2272, column: 80, scope: !4886)
!4891 = !DILocation(line: 2272, column: 90, scope: !4886)
!4892 = !DILocation(line: 2272, column: 13, scope: !4886)
!4893 = !DILocation(line: 2272, column: 13, scope: !4421)
!4894 = !DILocation(line: 2273, column: 20, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4886, file: !939, line: 2272, column: 115)
!4896 = !DILocation(line: 2273, column: 25, scope: !4895)
!4897 = !DILocation(line: 2273, column: 81, scope: !4895)
!4898 = !DILocation(line: 2273, column: 97, scope: !4895)
!4899 = !DILocation(line: 2273, column: 13, scope: !4895)
!4900 = !DILocation(line: 2274, column: 13, scope: !4895)
!4901 = !DILocation(line: 2277, column: 34, scope: !4421)
!4902 = !DILocation(line: 2277, column: 39, scope: !4421)
!4903 = !DILocation(line: 2277, column: 14, scope: !4421)
!4904 = !DILocation(line: 2277, column: 12, scope: !4421)
!4905 = !DILocation(line: 2278, column: 14, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4421, file: !939, line: 2278, column: 13)
!4907 = !DILocation(line: 2278, column: 13, scope: !4421)
!4908 = !DILocation(line: 2279, column: 20, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4906, file: !939, line: 2278, column: 18)
!4910 = !DILocation(line: 2279, column: 25, scope: !4909)
!4911 = !DILocation(line: 2279, column: 13, scope: !4909)
!4912 = !DILocation(line: 2280, column: 17, scope: !4909)
!4913 = !DILocation(line: 2281, column: 13, scope: !4909)
!4914 = !DILocation(line: 2283, column: 18, scope: !4421)
!4915 = !DILocation(line: 2283, column: 34, scope: !4421)
!4916 = !DILocation(line: 2283, column: 9, scope: !4421)
!4917 = !DILocation(line: 2283, column: 13, scope: !4421)
!4918 = !DILocation(line: 2283, column: 16, scope: !4421)
!4919 = !DILocation(line: 2284, column: 25, scope: !4421)
!4920 = !DILocation(line: 2284, column: 9, scope: !4421)
!4921 = !DILocation(line: 2284, column: 13, scope: !4421)
!4922 = !DILocation(line: 2284, column: 23, scope: !4421)
!4923 = !DILocation(line: 2286, column: 61, scope: !4421)
!4924 = !DILocation(line: 2286, column: 67, scope: !4421)
!4925 = !DILocation(line: 2286, column: 83, scope: !4421)
!4926 = !DILocation(line: 2286, column: 38, scope: !4421)
!4927 = !DILocation(line: 2286, column: 9, scope: !4421)
!4928 = !DILocation(line: 2286, column: 25, scope: !4421)
!4929 = !DILocation(line: 2286, column: 36, scope: !4421)
!4930 = !DILocation(line: 2287, column: 50, scope: !4421)
!4931 = !DILocation(line: 2287, column: 55, scope: !4421)
!4932 = !DILocation(line: 2287, column: 71, scope: !4421)
!4933 = !DILocation(line: 2287, column: 83, scope: !4421)
!4934 = !DILocation(line: 2287, column: 97, scope: !4421)
!4935 = !DILocation(line: 2287, column: 22, scope: !4421)
!4936 = !DILocation(line: 2287, column: 20, scope: !4421)
!4937 = !DILocation(line: 2291, column: 13, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4421, file: !939, line: 2291, column: 13)
!4939 = !DILocation(line: 2291, column: 24, scope: !4938)
!4940 = !DILocation(line: 2291, column: 27, scope: !4941)
!4941 = !DILexicalBlockFile(scope: !4938, file: !939, discriminator: 1)
!4942 = !DILocation(line: 2291, column: 39, scope: !4941)
!4943 = !DILocation(line: 2291, column: 48, scope: !4941)
!4944 = !DILocation(line: 2291, column: 13, scope: !4941)
!4945 = !DILocation(line: 2292, column: 64, scope: !4938)
!4946 = !DILocation(line: 2292, column: 76, scope: !4938)
!4947 = !DILocation(line: 2292, column: 89, scope: !4938)
!4948 = !DILocation(line: 2292, column: 100, scope: !4938)
!4949 = !DILocation(line: 2292, column: 86, scope: !4938)
!4950 = !DILocation(line: 2292, column: 63, scope: !4938)
!4951 = !DILocation(line: 2292, column: 113, scope: !4941)
!4952 = !DILocation(line: 2292, column: 124, scope: !4941)
!4953 = !DILocation(line: 2292, column: 63, scope: !4941)
!4954 = !DILocation(line: 2292, column: 137, scope: !4955)
!4955 = !DILexicalBlockFile(scope: !4938, file: !939, discriminator: 2)
!4956 = !DILocation(line: 2292, column: 149, scope: !4955)
!4957 = !DILocation(line: 2292, column: 63, scope: !4955)
!4958 = !DILocation(line: 2292, column: 63, scope: !4959)
!4959 = !DILexicalBlockFile(scope: !4938, file: !939, discriminator: 3)
!4960 = !DILocation(line: 2292, column: 47, scope: !4959)
!4961 = !DILocation(line: 2292, column: 51, scope: !4959)
!4962 = !DILocation(line: 2292, column: 60, scope: !4959)
!4963 = !DILocation(line: 2292, column: 13, scope: !4959)
!4964 = !DILocation(line: 2292, column: 27, scope: !4959)
!4965 = !DILocation(line: 2292, column: 45, scope: !4959)
!4966 = !DILocation(line: 2294, column: 62, scope: !4938)
!4967 = !DILocation(line: 2294, column: 73, scope: !4938)
!4968 = !DILocation(line: 2294, column: 47, scope: !4938)
!4969 = !DILocation(line: 2294, column: 51, scope: !4938)
!4970 = !DILocation(line: 2294, column: 60, scope: !4938)
!4971 = !DILocation(line: 2294, column: 13, scope: !4938)
!4972 = !DILocation(line: 2294, column: 27, scope: !4938)
!4973 = !DILocation(line: 2294, column: 45, scope: !4938)
!4974 = !DILocation(line: 2296, column: 13, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4421, file: !939, line: 2296, column: 13)
!4976 = !DILocation(line: 2296, column: 17, scope: !4975)
!4977 = !DILocation(line: 2296, column: 26, scope: !4975)
!4978 = !DILocation(line: 2296, column: 13, scope: !4421)
!4979 = !DILocation(line: 2297, column: 13, scope: !4975)
!4980 = !DILocation(line: 2297, column: 17, scope: !4975)
!4981 = !DILocation(line: 2297, column: 26, scope: !4975)
!4982 = !DILocation(line: 2298, column: 26, scope: !4421)
!4983 = !DILocation(line: 2298, column: 37, scope: !4421)
!4984 = !DILocation(line: 2298, column: 9, scope: !4421)
!4985 = !DILocation(line: 2298, column: 13, scope: !4421)
!4986 = !DILocation(line: 2298, column: 24, scope: !4421)
!4987 = !DILocation(line: 2299, column: 13, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4421, file: !939, line: 2299, column: 13)
!4989 = !DILocation(line: 2299, column: 29, scope: !4988)
!4990 = !DILocation(line: 2299, column: 39, scope: !4988)
!4991 = !DILocation(line: 2299, column: 43, scope: !4988)
!4992 = !DILocation(line: 2299, column: 48, scope: !4988)
!4993 = !DILocation(line: 2300, column: 13, scope: !4988)
!4994 = !DILocation(line: 2300, column: 29, scope: !4988)
!4995 = !DILocation(line: 2300, column: 39, scope: !4988)
!4996 = !DILocation(line: 2300, column: 43, scope: !4988)
!4997 = !DILocation(line: 2299, column: 13, scope: !4998)
!4998 = !DILexicalBlockFile(scope: !4421, file: !939, discriminator: 1)
!4999 = !DILocation(line: 2301, column: 20, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4988, file: !939, line: 2300, column: 49)
!5001 = !DILocation(line: 2301, column: 25, scope: !5000)
!5002 = !DILocation(line: 2304, column: 20, scope: !5000)
!5003 = !DILocation(line: 2304, column: 36, scope: !5000)
!5004 = !DILocation(line: 2304, column: 46, scope: !5000)
!5005 = !DILocation(line: 2305, column: 20, scope: !5000)
!5006 = !DILocation(line: 2305, column: 36, scope: !5000)
!5007 = !DILocation(line: 2305, column: 46, scope: !5000)
!5008 = !DILocation(line: 2305, column: 51, scope: !5000)
!5009 = !DILocation(line: 2305, column: 55, scope: !5000)
!5010 = !DILocation(line: 2301, column: 13, scope: !5000)
!5011 = !DILocation(line: 2306, column: 13, scope: !5000)
!5012 = !DILocation(line: 2306, column: 29, scope: !5000)
!5013 = !DILocation(line: 2306, column: 53, scope: !5000)
!5014 = !DILocation(line: 2306, column: 41, scope: !5000)
!5015 = !DILocation(line: 2307, column: 9, scope: !5000)
!5016 = !DILocation(line: 2308, column: 29, scope: !4421)
!5017 = !DILocation(line: 2308, column: 37, scope: !4421)
!5018 = !DILocation(line: 2308, column: 53, scope: !4421)
!5019 = !DILocation(line: 2308, column: 63, scope: !4421)
!5020 = !DILocation(line: 2308, column: 68, scope: !4421)
!5021 = !DILocation(line: 2308, column: 84, scope: !4421)
!5022 = !DILocation(line: 2308, column: 94, scope: !4421)
!5023 = !DILocation(line: 2308, column: 9, scope: !4421)
!5024 = !DILocation(line: 2312, column: 9, scope: !4421)
!5025 = !DILocation(line: 2312, column: 23, scope: !4421)
!5026 = !DILocation(line: 2312, column: 35, scope: !4421)
!5027 = !DILocation(line: 2312, column: 51, scope: !4421)
!5028 = !DILocation(line: 2314, column: 9, scope: !4421)
!5029 = distinct !{!5029, !5028}
!5030 = !DILocation(line: 2314, column: 986, scope: !5031)
!5031 = !DILexicalBlockFile(scope: !5032, file: !939, discriminator: 1)
!5032 = distinct !DILexicalBlock(scope: !4421, file: !939, line: 2314, column: 12)
!5033 = !DILocation(line: 2315, column: 66, scope: !4421)
!5034 = !DILocation(line: 2315, column: 80, scope: !4421)
!5035 = !DILocation(line: 2315, column: 90, scope: !4421)
!5036 = !DILocation(line: 2315, column: 20, scope: !4421)
!5037 = !DILocation(line: 2315, column: 18, scope: !4421)
!5038 = !DILocation(line: 2316, column: 36, scope: !4421)
!5039 = !DILocation(line: 2316, column: 46, scope: !4421)
!5040 = !DILocation(line: 2316, column: 9, scope: !4421)
!5041 = !DILocation(line: 2316, column: 13, scope: !4421)
!5042 = !DILocation(line: 2316, column: 23, scope: !4421)
!5043 = !DILocation(line: 2316, column: 34, scope: !4421)
!5044 = !DILocation(line: 2318, column: 14, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !4421, file: !939, line: 2318, column: 13)
!5046 = !DILocation(line: 2318, column: 13, scope: !4421)
!5047 = !DILocation(line: 2319, column: 20, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5045, file: !939, line: 2318, column: 26)
!5049 = !DILocation(line: 2319, column: 25, scope: !5048)
!5050 = !DILocation(line: 2319, column: 86, scope: !5048)
!5051 = !DILocation(line: 2319, column: 100, scope: !5048)
!5052 = !DILocation(line: 2319, column: 110, scope: !5048)
!5053 = !DILocation(line: 2319, column: 114, scope: !5048)
!5054 = !DILocation(line: 2319, column: 13, scope: !5048)
!5055 = !DILocation(line: 2320, column: 13, scope: !5048)
!5056 = !DILocation(line: 2322, column: 9, scope: !4421)
!5057 = distinct !{!5057, !5056}
!5058 = !DILocation(line: 2322, column: 762, scope: !5059)
!5059 = !DILexicalBlockFile(scope: !5060, file: !939, discriminator: 1)
!5060 = distinct !DILexicalBlock(scope: !4421, file: !939, line: 2322, column: 12)
!5061 = !DILocation(line: 2323, column: 9, scope: !4421)
!5062 = distinct !{!5062, !5061}
!5063 = !DILocation(line: 2323, column: 826, scope: !5064)
!5064 = !DILexicalBlockFile(scope: !5065, file: !939, discriminator: 1)
!5065 = distinct !DILexicalBlock(scope: !4421, file: !939, line: 2323, column: 12)
!5066 = !DILocation(line: 2324, column: 33, scope: !4421)
!5067 = !DILocation(line: 2324, column: 45, scope: !4421)
!5068 = !DILocation(line: 2324, column: 30, scope: !4421)
!5069 = !DILocation(line: 2325, column: 35, scope: !4421)
!5070 = !DILocation(line: 2325, column: 40, scope: !4421)
!5071 = !DILocation(line: 2325, column: 43, scope: !4421)
!5072 = !DILocation(line: 2325, column: 34, scope: !4421)
!5073 = !DILocation(line: 2325, column: 34, scope: !4998)
!5074 = !DILocation(line: 2325, column: 92, scope: !5075)
!5075 = !DILexicalBlockFile(scope: !4421, file: !939, discriminator: 2)
!5076 = !DILocation(line: 2325, column: 70, scope: !5075)
!5077 = !DILocation(line: 2325, column: 34, scope: !5075)
!5078 = !DILocation(line: 2325, column: 34, scope: !5079)
!5079 = !DILexicalBlockFile(scope: !4421, file: !939, discriminator: 3)
!5080 = !DILocation(line: 2325, column: 9, scope: !5079)
!5081 = !DILocation(line: 2325, column: 23, scope: !5079)
!5082 = !DILocation(line: 2325, column: 32, scope: !5079)
!5083 = !DILocation(line: 2326, column: 13, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !4421, file: !939, line: 2326, column: 13)
!5085 = !DILocation(line: 2326, column: 27, scope: !5084)
!5086 = !DILocation(line: 2326, column: 36, scope: !5084)
!5087 = !DILocation(line: 2326, column: 13, scope: !4421)
!5088 = !DILocation(line: 2327, column: 20, scope: !5084)
!5089 = !DILocation(line: 2327, column: 25, scope: !5084)
!5090 = !DILocation(line: 2327, column: 71, scope: !5084)
!5091 = !DILocation(line: 2327, column: 75, scope: !5084)
!5092 = !DILocation(line: 2327, column: 13, scope: !5084)
!5093 = !DILocation(line: 2330, column: 22, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !4421, file: !939, line: 2330, column: 13)
!5095 = !DILocation(line: 2330, column: 15, scope: !5094)
!5096 = !DILocation(line: 2330, column: 13, scope: !4421)
!5097 = !DILocation(line: 2331, column: 20, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5094, file: !939, line: 2330, column: 120)
!5099 = !DILocation(line: 2331, column: 25, scope: !5098)
!5100 = !DILocation(line: 2331, column: 13, scope: !5098)
!5101 = !DILocation(line: 2332, column: 20, scope: !5102)
!5102 = distinct !DILexicalBlock(scope: !5098, file: !939, line: 2332, column: 13)
!5103 = !DILocation(line: 2332, column: 18, scope: !5102)
!5104 = !DILocation(line: 2332, column: 25, scope: !5105)
!5105 = !DILexicalBlockFile(scope: !5106, file: !939, discriminator: 1)
!5106 = distinct !DILexicalBlock(scope: !5102, file: !939, line: 2332, column: 13)
!5107 = !DILocation(line: 2332, column: 29, scope: !5105)
!5108 = !DILocation(line: 2332, column: 34, scope: !5105)
!5109 = !DILocation(line: 2332, column: 27, scope: !5105)
!5110 = !DILocation(line: 2332, column: 13, scope: !5105)
!5111 = !DILocalVariable(name: "metadata", scope: !5112, file: !939, line: 2333, type: !1186)
!5112 = distinct !DILexicalBlock(scope: !5106, file: !939, line: 2332, column: 60)
!5113 = !DILocation(line: 2333, column: 33, scope: !5112)
!5114 = !DILocation(line: 2333, column: 63, scope: !5112)
!5115 = !DILocation(line: 2333, column: 44, scope: !5112)
!5116 = !DILocation(line: 2333, column: 49, scope: !5112)
!5117 = !DILocation(line: 2334, column: 21, scope: !5118)
!5118 = distinct !DILexicalBlock(scope: !5112, file: !939, line: 2334, column: 21)
!5119 = !DILocation(line: 2334, column: 31, scope: !5118)
!5120 = !DILocation(line: 2334, column: 36, scope: !5118)
!5121 = !DILocation(line: 2334, column: 21, scope: !5112)
!5122 = !DILocation(line: 2335, column: 66, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5118, file: !939, line: 2334, column: 54)
!5124 = !DILocation(line: 2335, column: 77, scope: !5123)
!5125 = !DILocation(line: 2335, column: 42, scope: !5123)
!5126 = !DILocation(line: 2336, column: 21, scope: !5123)
!5127 = !DILocation(line: 2338, column: 13, scope: !5112)
!5128 = !DILocation(line: 2332, column: 56, scope: !5129)
!5129 = !DILexicalBlockFile(scope: !5106, file: !939, discriminator: 2)
!5130 = !DILocation(line: 2332, column: 13, scope: !5129)
!5131 = distinct !{!5131, !5132}
!5132 = !DILocation(line: 2332, column: 13, scope: !5098)
!5133 = !DILocation(line: 2339, column: 9, scope: !5098)
!5134 = !DILocation(line: 2342, column: 56, scope: !4421)
!5135 = !DILocation(line: 2342, column: 68, scope: !4421)
!5136 = !DILocation(line: 2342, column: 20, scope: !4421)
!5137 = !DILocation(line: 2342, column: 18, scope: !4421)
!5138 = !DILocation(line: 2343, column: 50, scope: !4421)
!5139 = !DILocation(line: 2343, column: 60, scope: !4421)
!5140 = !DILocation(line: 2343, column: 9, scope: !4421)
!5141 = !DILocation(line: 2343, column: 13, scope: !4421)
!5142 = !DILocation(line: 2343, column: 23, scope: !4421)
!5143 = !DILocation(line: 2343, column: 32, scope: !4421)
!5144 = !DILocation(line: 2344, column: 13, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !4421, file: !939, line: 2344, column: 13)
!5146 = !DILocation(line: 2344, column: 17, scope: !5145)
!5147 = !DILocation(line: 2344, column: 27, scope: !5145)
!5148 = !DILocation(line: 2344, column: 36, scope: !5145)
!5149 = !DILocation(line: 2344, column: 13, scope: !4421)
!5150 = !DILocation(line: 2345, column: 60, scope: !5151)
!5151 = distinct !DILexicalBlock(scope: !5145, file: !939, line: 2344, column: 57)
!5152 = !DILocation(line: 2345, column: 72, scope: !5151)
!5153 = !DILocation(line: 2345, column: 24, scope: !5151)
!5154 = !DILocation(line: 2345, column: 22, scope: !5151)
!5155 = !DILocation(line: 2346, column: 54, scope: !5151)
!5156 = !DILocation(line: 2346, column: 64, scope: !5151)
!5157 = !DILocation(line: 2346, column: 13, scope: !5151)
!5158 = !DILocation(line: 2346, column: 17, scope: !5151)
!5159 = !DILocation(line: 2346, column: 27, scope: !5151)
!5160 = !DILocation(line: 2346, column: 36, scope: !5151)
!5161 = !DILocation(line: 2347, column: 9, scope: !5151)
!5162 = !DILocation(line: 2349, column: 16, scope: !4421)
!5163 = !DILocation(line: 2349, column: 21, scope: !4421)
!5164 = !DILocation(line: 2350, column: 33, scope: !4421)
!5165 = !DILocation(line: 2350, column: 37, scope: !4421)
!5166 = !DILocation(line: 2350, column: 47, scope: !4421)
!5167 = !DILocation(line: 2350, column: 16, scope: !4421)
!5168 = !DILocation(line: 2349, column: 9, scope: !4421)
!5169 = !DILocation(line: 2351, column: 16, scope: !5170)
!5170 = distinct !DILexicalBlock(scope: !4421, file: !939, line: 2351, column: 9)
!5171 = !DILocation(line: 2351, column: 14, scope: !5170)
!5172 = !DILocation(line: 2351, column: 21, scope: !5173)
!5173 = !DILexicalBlockFile(scope: !5174, file: !939, discriminator: 1)
!5174 = distinct !DILexicalBlock(scope: !5170, file: !939, line: 2351, column: 9)
!5175 = !DILocation(line: 2351, column: 23, scope: !5173)
!5176 = !DILocation(line: 2351, column: 9, scope: !5173)
!5177 = !DILocation(line: 2352, column: 20, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !5174, file: !939, line: 2351, column: 34)
!5179 = !DILocation(line: 2352, column: 25, scope: !5178)
!5180 = !DILocation(line: 2353, column: 49, scope: !5178)
!5181 = !DILocation(line: 2353, column: 20, scope: !5178)
!5182 = !DILocation(line: 2353, column: 32, scope: !5178)
!5183 = !DILocation(line: 2352, column: 13, scope: !5178)
!5184 = !DILocation(line: 2354, column: 19, scope: !5185)
!5185 = distinct !DILexicalBlock(scope: !5178, file: !939, line: 2354, column: 17)
!5186 = !DILocation(line: 2354, column: 20, scope: !5185)
!5187 = !DILocation(line: 2354, column: 23, scope: !5185)
!5188 = !DILocation(line: 2354, column: 29, scope: !5185)
!5189 = !DILocation(line: 2354, column: 32, scope: !5190)
!5190 = !DILexicalBlockFile(scope: !5185, file: !939, discriminator: 1)
!5191 = !DILocation(line: 2354, column: 34, scope: !5190)
!5192 = !DILocation(line: 2354, column: 17, scope: !5190)
!5193 = !DILocation(line: 2355, column: 24, scope: !5185)
!5194 = !DILocation(line: 2355, column: 29, scope: !5185)
!5195 = !DILocation(line: 2355, column: 17, scope: !5185)
!5196 = !DILocation(line: 2356, column: 9, scope: !5178)
!5197 = !DILocation(line: 2351, column: 30, scope: !5198)
!5198 = !DILexicalBlockFile(scope: !5174, file: !939, discriminator: 2)
!5199 = !DILocation(line: 2351, column: 9, scope: !5198)
!5200 = distinct !{!5200, !5201}
!5201 = !DILocation(line: 2351, column: 9, scope: !4421)
!5202 = !DILocation(line: 2357, column: 16, scope: !4421)
!5203 = !DILocation(line: 2357, column: 21, scope: !4421)
!5204 = !DILocation(line: 2357, column: 9, scope: !4421)
!5205 = !DILocation(line: 2359, column: 32, scope: !4421)
!5206 = !DILocation(line: 2359, column: 36, scope: !4421)
!5207 = !DILocation(line: 2359, column: 67, scope: !4421)
!5208 = !DILocation(line: 2359, column: 9, scope: !4421)
!5209 = !DILocation(line: 2360, column: 13, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !4421, file: !939, line: 2360, column: 13)
!5211 = !DILocation(line: 2360, column: 29, scope: !5210)
!5212 = !DILocation(line: 2360, column: 34, scope: !5210)
!5213 = !DILocation(line: 2360, column: 37, scope: !5214)
!5214 = !DILexicalBlockFile(scope: !5210, file: !939, discriminator: 1)
!5215 = !DILocation(line: 2360, column: 53, scope: !5214)
!5216 = !DILocation(line: 2360, column: 13, scope: !5214)
!5217 = !DILocation(line: 2361, column: 26, scope: !5210)
!5218 = !DILocation(line: 2361, column: 30, scope: !5210)
!5219 = !DILocation(line: 2361, column: 61, scope: !5210)
!5220 = !DILocation(line: 2361, column: 77, scope: !5210)
!5221 = !DILocation(line: 2361, column: 13, scope: !5210)
!5222 = !DILocation(line: 2362, column: 13, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !4421, file: !939, line: 2362, column: 13)
!5224 = !DILocation(line: 2362, column: 29, scope: !5223)
!5225 = !DILocation(line: 2362, column: 34, scope: !5223)
!5226 = !DILocation(line: 2362, column: 37, scope: !5227)
!5227 = !DILexicalBlockFile(scope: !5223, file: !939, discriminator: 1)
!5228 = !DILocation(line: 2362, column: 53, scope: !5227)
!5229 = !DILocation(line: 2362, column: 13, scope: !5227)
!5230 = !DILocation(line: 2363, column: 26, scope: !5223)
!5231 = !DILocation(line: 2363, column: 30, scope: !5223)
!5232 = !DILocation(line: 2363, column: 54, scope: !5223)
!5233 = !DILocation(line: 2363, column: 70, scope: !5223)
!5234 = !DILocation(line: 2363, column: 13, scope: !5223)
!5235 = !DILocation(line: 2365, column: 43, scope: !4421)
!5236 = !DILocation(line: 2365, column: 48, scope: !4421)
!5237 = !DILocation(line: 2365, column: 62, scope: !4421)
!5238 = !DILocation(line: 2365, column: 9, scope: !4421)
!5239 = !DILocation(line: 2367, column: 13, scope: !4420)
!5240 = !DILocation(line: 2367, column: 17, scope: !4420)
!5241 = !DILocation(line: 2367, column: 27, scope: !4420)
!5242 = !DILocation(line: 2367, column: 38, scope: !4420)
!5243 = !DILocation(line: 2367, column: 13, scope: !4421)
!5244 = !DILocation(line: 2368, column: 58, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !4420, file: !939, line: 2367, column: 61)
!5246 = !DILocation(line: 2368, column: 40, scope: !5245)
!5247 = !DILocation(line: 2368, column: 13, scope: !5245)
!5248 = !DILocation(line: 2368, column: 27, scope: !5245)
!5249 = !DILocation(line: 2368, column: 38, scope: !5245)
!5250 = !DILocation(line: 2369, column: 80, scope: !5245)
!5251 = !DILocation(line: 2369, column: 28, scope: !5245)
!5252 = !DILocation(line: 2369, column: 26, scope: !5245)
!5253 = !DILocation(line: 2370, column: 17, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !5245, file: !939, line: 2370, column: 17)
!5255 = !DILocation(line: 2370, column: 21, scope: !5254)
!5256 = !DILocation(line: 2370, column: 31, scope: !5254)
!5257 = !DILocation(line: 2370, column: 40, scope: !5254)
!5258 = !DILocation(line: 2370, column: 17, scope: !5245)
!5259 = !DILocation(line: 2371, column: 42, scope: !5254)
!5260 = !DILocation(line: 2371, column: 56, scope: !5254)
!5261 = !DILocation(line: 2371, column: 17, scope: !5254)
!5262 = !DILocation(line: 2371, column: 21, scope: !5254)
!5263 = !DILocation(line: 2371, column: 31, scope: !5254)
!5264 = !DILocation(line: 2371, column: 40, scope: !5254)
!5265 = !DILocation(line: 2372, column: 35, scope: !5245)
!5266 = !DILocation(line: 2372, column: 47, scope: !5245)
!5267 = !DILocation(line: 2372, column: 13, scope: !5245)
!5268 = !DILocation(line: 2372, column: 17, scope: !5245)
!5269 = !DILocation(line: 2372, column: 27, scope: !5245)
!5270 = !DILocation(line: 2372, column: 33, scope: !5245)
!5271 = !DILocation(line: 2373, column: 36, scope: !5245)
!5272 = !DILocation(line: 2373, column: 48, scope: !5245)
!5273 = !DILocation(line: 2373, column: 13, scope: !5245)
!5274 = !DILocation(line: 2373, column: 17, scope: !5245)
!5275 = !DILocation(line: 2373, column: 27, scope: !5245)
!5276 = !DILocation(line: 2373, column: 34, scope: !5245)
!5277 = !DILocation(line: 2374, column: 21, scope: !5245)
!5278 = !DILocation(line: 2374, column: 33, scope: !5245)
!5279 = !DILocation(line: 2374, column: 13, scope: !5245)
!5280 = !DILocation(line: 2376, column: 21, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5245, file: !939, line: 2374, column: 47)
!5282 = !DILocation(line: 2376, column: 25, scope: !5281)
!5283 = !DILocation(line: 2376, column: 35, scope: !5281)
!5284 = !DILocation(line: 2376, column: 47, scope: !5281)
!5285 = !DILocation(line: 2377, column: 21, scope: !5281)
!5286 = !DILocation(line: 2380, column: 28, scope: !5281)
!5287 = !DILocation(line: 2380, column: 33, scope: !5281)
!5288 = !DILocation(line: 2380, column: 21, scope: !5281)
!5289 = !DILocation(line: 2381, column: 21, scope: !5281)
!5290 = !DILocation(line: 2385, column: 21, scope: !5281)
!5291 = !DILocation(line: 2387, column: 21, scope: !5281)
!5292 = !DILocation(line: 2387, column: 25, scope: !5281)
!5293 = !DILocation(line: 2387, column: 35, scope: !5281)
!5294 = !DILocation(line: 2387, column: 47, scope: !5281)
!5295 = !DILocation(line: 2389, column: 28, scope: !5281)
!5296 = !DILocation(line: 2389, column: 33, scope: !5281)
!5297 = !DILocation(line: 2390, column: 28, scope: !5281)
!5298 = !DILocation(line: 2390, column: 40, scope: !5281)
!5299 = !DILocation(line: 2390, column: 59, scope: !5281)
!5300 = !DILocation(line: 2390, column: 71, scope: !5281)
!5301 = !DILocation(line: 2391, column: 28, scope: !5281)
!5302 = !DILocation(line: 2391, column: 40, scope: !5281)
!5303 = !DILocation(line: 2389, column: 21, scope: !5281)
!5304 = !DILocation(line: 2392, column: 26, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5281, file: !939, line: 2392, column: 25)
!5306 = !DILocation(line: 2392, column: 38, scope: !5305)
!5307 = !DILocation(line: 2392, column: 56, scope: !5305)
!5308 = !DILocation(line: 2392, column: 61, scope: !5305)
!5309 = !DILocation(line: 2392, column: 65, scope: !5310)
!5310 = !DILexicalBlockFile(scope: !5305, file: !939, discriminator: 1)
!5311 = !DILocation(line: 2392, column: 77, scope: !5310)
!5312 = !DILocation(line: 2392, column: 95, scope: !5310)
!5313 = !DILocation(line: 2392, column: 25, scope: !5310)
!5314 = !DILocation(line: 2399, column: 30, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5316, file: !939, line: 2399, column: 29)
!5316 = distinct !DILexicalBlock(scope: !5305, file: !939, line: 2392, column: 101)
!5317 = !DILocation(line: 2399, column: 42, scope: !5315)
!5318 = !DILocation(line: 2399, column: 62, scope: !5315)
!5319 = !DILocation(line: 2399, column: 74, scope: !5315)
!5320 = !DILocation(line: 2399, column: 60, scope: !5315)
!5321 = !DILocation(line: 2399, column: 93, scope: !5315)
!5322 = !DILocation(line: 2399, column: 29, scope: !5316)
!5323 = !DILocation(line: 2400, column: 37, scope: !5324)
!5324 = distinct !DILexicalBlock(scope: !5315, file: !939, line: 2399, column: 98)
!5325 = !DILocation(line: 2400, column: 49, scope: !5324)
!5326 = !DILocation(line: 2400, column: 29, scope: !5324)
!5327 = !DILocation(line: 2403, column: 37, scope: !5328)
!5328 = distinct !DILexicalBlock(scope: !5324, file: !939, line: 2400, column: 66)
!5329 = !DILocation(line: 2403, column: 41, scope: !5328)
!5330 = !DILocation(line: 2403, column: 51, scope: !5328)
!5331 = !DILocation(line: 2403, column: 63, scope: !5328)
!5332 = !DILocation(line: 2404, column: 37, scope: !5328)
!5333 = !DILocation(line: 2406, column: 37, scope: !5328)
!5334 = !DILocation(line: 2406, column: 41, scope: !5328)
!5335 = !DILocation(line: 2406, column: 51, scope: !5328)
!5336 = !DILocation(line: 2406, column: 63, scope: !5328)
!5337 = !DILocation(line: 2407, column: 37, scope: !5328)
!5338 = !DILocation(line: 2409, column: 59, scope: !5328)
!5339 = !DILocation(line: 2409, column: 64, scope: !5328)
!5340 = !DILocation(line: 2411, column: 59, scope: !5328)
!5341 = !DILocation(line: 2411, column: 71, scope: !5328)
!5342 = !DILocation(line: 2409, column: 37, scope: !5328)
!5343 = !DILocation(line: 2412, column: 29, scope: !5328)
!5344 = !DILocation(line: 2413, column: 25, scope: !5324)
!5345 = !DILocation(line: 2414, column: 37, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5315, file: !939, line: 2413, column: 32)
!5347 = !DILocation(line: 2414, column: 49, scope: !5346)
!5348 = !DILocation(line: 2414, column: 29, scope: !5346)
!5349 = !DILocation(line: 2417, column: 37, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5346, file: !939, line: 2414, column: 66)
!5351 = !DILocation(line: 2417, column: 41, scope: !5350)
!5352 = !DILocation(line: 2417, column: 51, scope: !5350)
!5353 = !DILocation(line: 2417, column: 63, scope: !5350)
!5354 = !DILocation(line: 2418, column: 37, scope: !5350)
!5355 = !DILocation(line: 2420, column: 37, scope: !5350)
!5356 = !DILocation(line: 2420, column: 41, scope: !5350)
!5357 = !DILocation(line: 2420, column: 51, scope: !5350)
!5358 = !DILocation(line: 2420, column: 63, scope: !5350)
!5359 = !DILocation(line: 2421, column: 37, scope: !5350)
!5360 = !DILocation(line: 2423, column: 59, scope: !5350)
!5361 = !DILocation(line: 2423, column: 64, scope: !5350)
!5362 = !DILocation(line: 2425, column: 59, scope: !5350)
!5363 = !DILocation(line: 2425, column: 71, scope: !5350)
!5364 = !DILocation(line: 2423, column: 37, scope: !5350)
!5365 = !DILocation(line: 2426, column: 29, scope: !5350)
!5366 = !DILocation(line: 2428, column: 21, scope: !5316)
!5367 = !DILocation(line: 2430, column: 21, scope: !5281)
!5368 = !DILocation(line: 2430, column: 25, scope: !5281)
!5369 = !DILocation(line: 2430, column: 35, scope: !5281)
!5370 = !DILocation(line: 2430, column: 42, scope: !5281)
!5371 = !DILocation(line: 2431, column: 21, scope: !5281)
!5372 = !DILocation(line: 2433, column: 28, scope: !5281)
!5373 = !DILocation(line: 2433, column: 33, scope: !5281)
!5374 = !DILocation(line: 2433, column: 76, scope: !5281)
!5375 = !DILocation(line: 2433, column: 88, scope: !5281)
!5376 = !DILocation(line: 2433, column: 21, scope: !5281)
!5377 = !DILocation(line: 2434, column: 13, scope: !5281)
!5378 = !DILocation(line: 2436, column: 17, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !5245, file: !939, line: 2436, column: 17)
!5380 = !DILocation(line: 2436, column: 21, scope: !5379)
!5381 = !DILocation(line: 2436, column: 31, scope: !5379)
!5382 = !DILocation(line: 2436, column: 40, scope: !5379)
!5383 = !DILocation(line: 2436, column: 17, scope: !5245)
!5384 = !DILocation(line: 2437, column: 25, scope: !5385)
!5385 = distinct !DILexicalBlock(scope: !5379, file: !939, line: 2436, column: 63)
!5386 = !DILocation(line: 2437, column: 37, scope: !5385)
!5387 = !DILocation(line: 2437, column: 17, scope: !5385)
!5388 = !DILocation(line: 2438, column: 25, scope: !5389)
!5389 = distinct !DILexicalBlock(scope: !5385, file: !939, line: 2437, column: 59)
!5390 = !DILocation(line: 2438, column: 29, scope: !5389)
!5391 = !DILocation(line: 2438, column: 39, scope: !5389)
!5392 = !DILocation(line: 2438, column: 49, scope: !5389)
!5393 = !DILocation(line: 2438, column: 117, scope: !5389)
!5394 = !DILocation(line: 2439, column: 25, scope: !5389)
!5395 = !DILocation(line: 2439, column: 29, scope: !5389)
!5396 = !DILocation(line: 2439, column: 39, scope: !5389)
!5397 = !DILocation(line: 2439, column: 49, scope: !5389)
!5398 = !DILocation(line: 2439, column: 117, scope: !5389)
!5399 = !DILocation(line: 2440, column: 25, scope: !5389)
!5400 = !DILocation(line: 2440, column: 29, scope: !5389)
!5401 = !DILocation(line: 2440, column: 39, scope: !5389)
!5402 = !DILocation(line: 2440, column: 49, scope: !5389)
!5403 = !DILocation(line: 2440, column: 117, scope: !5389)
!5404 = !DILocation(line: 2441, column: 25, scope: !5389)
!5405 = !DILocation(line: 2441, column: 29, scope: !5389)
!5406 = !DILocation(line: 2441, column: 39, scope: !5389)
!5407 = !DILocation(line: 2441, column: 49, scope: !5389)
!5408 = !DILocation(line: 2441, column: 117, scope: !5389)
!5409 = !DILocation(line: 2442, column: 25, scope: !5389)
!5410 = !DILocation(line: 2442, column: 29, scope: !5389)
!5411 = !DILocation(line: 2442, column: 39, scope: !5389)
!5412 = !DILocation(line: 2442, column: 49, scope: !5389)
!5413 = !DILocation(line: 2442, column: 117, scope: !5389)
!5414 = !DILocation(line: 2443, column: 25, scope: !5389)
!5415 = !DILocation(line: 2443, column: 29, scope: !5389)
!5416 = !DILocation(line: 2443, column: 39, scope: !5389)
!5417 = !DILocation(line: 2443, column: 49, scope: !5389)
!5418 = !DILocation(line: 2443, column: 117, scope: !5389)
!5419 = !DILocation(line: 2445, column: 13, scope: !5385)
!5420 = !DILocation(line: 2447, column: 17, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5245, file: !939, line: 2447, column: 17)
!5422 = !DILocation(line: 2447, column: 21, scope: !5421)
!5423 = !DILocation(line: 2447, column: 31, scope: !5421)
!5424 = !DILocation(line: 2447, column: 40, scope: !5421)
!5425 = !DILocation(line: 2447, column: 17, scope: !5245)
!5426 = !DILocation(line: 2448, column: 40, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !5421, file: !939, line: 2447, column: 65)
!5428 = !DILocation(line: 2448, column: 52, scope: !5427)
!5429 = !DILocation(line: 2448, column: 17, scope: !5427)
!5430 = !DILocation(line: 2448, column: 21, scope: !5427)
!5431 = !DILocation(line: 2448, column: 31, scope: !5427)
!5432 = !DILocation(line: 2448, column: 38, scope: !5427)
!5433 = !DILocation(line: 2449, column: 21, scope: !5434)
!5434 = distinct !DILexicalBlock(scope: !5427, file: !939, line: 2449, column: 21)
!5435 = !DILocation(line: 2449, column: 25, scope: !5434)
!5436 = !DILocation(line: 2449, column: 35, scope: !5434)
!5437 = !DILocation(line: 2449, column: 42, scope: !5434)
!5438 = !DILocation(line: 2449, column: 21, scope: !5427)
!5439 = !DILocation(line: 2451, column: 52, scope: !5440)
!5440 = distinct !DILexicalBlock(scope: !5434, file: !939, line: 2449, column: 62)
!5441 = !DILocation(line: 2451, column: 64, scope: !5440)
!5442 = !DILocation(line: 2450, column: 34, scope: !5440)
!5443 = !DILocation(line: 2450, column: 32, scope: !5440)
!5444 = !DILocation(line: 2452, column: 64, scope: !5440)
!5445 = !DILocation(line: 2452, column: 76, scope: !5440)
!5446 = !DILocation(line: 2452, column: 21, scope: !5440)
!5447 = !DILocation(line: 2452, column: 25, scope: !5440)
!5448 = !DILocation(line: 2452, column: 35, scope: !5440)
!5449 = !DILocation(line: 2452, column: 42, scope: !5440)
!5450 = !DILocation(line: 2453, column: 25, scope: !5451)
!5451 = distinct !DILexicalBlock(scope: !5440, file: !939, line: 2453, column: 25)
!5452 = !DILocation(line: 2453, column: 29, scope: !5451)
!5453 = !DILocation(line: 2453, column: 39, scope: !5451)
!5454 = !DILocation(line: 2453, column: 45, scope: !5451)
!5455 = !DILocation(line: 2453, column: 25, scope: !5440)
!5456 = !DILocation(line: 2455, column: 69, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5451, file: !939, line: 2453, column: 65)
!5458 = !DILocation(line: 2455, column: 81, scope: !5457)
!5459 = !DILocation(line: 2454, column: 51, scope: !5457)
!5460 = !DILocation(line: 2455, column: 100, scope: !5457)
!5461 = !DILocation(line: 2454, column: 25, scope: !5457)
!5462 = !DILocation(line: 2454, column: 29, scope: !5457)
!5463 = !DILocation(line: 2454, column: 39, scope: !5457)
!5464 = !DILocation(line: 2454, column: 49, scope: !5457)
!5465 = !DILocation(line: 2456, column: 30, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !5457, file: !939, line: 2456, column: 29)
!5467 = !DILocation(line: 2456, column: 34, scope: !5466)
!5468 = !DILocation(line: 2456, column: 44, scope: !5466)
!5469 = !DILocation(line: 2456, column: 29, scope: !5457)
!5470 = !DILocation(line: 2459, column: 33, scope: !5471)
!5471 = distinct !DILexicalBlock(scope: !5472, file: !939, line: 2459, column: 33)
!5472 = distinct !DILexicalBlock(scope: !5466, file: !939, line: 2456, column: 55)
!5473 = !DILocation(line: 2459, column: 45, scope: !5471)
!5474 = !DILocation(line: 2459, column: 63, scope: !5471)
!5475 = !DILocation(line: 2459, column: 68, scope: !5471)
!5476 = !DILocation(line: 2460, column: 33, scope: !5471)
!5477 = !DILocation(line: 2460, column: 45, scope: !5471)
!5478 = !DILocation(line: 2460, column: 62, scope: !5471)
!5479 = !DILocation(line: 2460, column: 67, scope: !5471)
!5480 = !DILocation(line: 2461, column: 33, scope: !5471)
!5481 = !DILocation(line: 2461, column: 45, scope: !5471)
!5482 = !DILocation(line: 2461, column: 61, scope: !5471)
!5483 = !DILocation(line: 2459, column: 33, scope: !5484)
!5484 = !DILexicalBlockFile(scope: !5472, file: !939, discriminator: 1)
!5485 = !DILocation(line: 2462, column: 33, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5471, file: !939, line: 2461, column: 67)
!5487 = !DILocation(line: 2462, column: 37, scope: !5486)
!5488 = !DILocation(line: 2462, column: 47, scope: !5486)
!5489 = !DILocation(line: 2462, column: 54, scope: !5486)
!5490 = !DILocation(line: 2463, column: 29, scope: !5486)
!5491 = !DILocation(line: 2464, column: 25, scope: !5472)
!5492 = !DILocation(line: 2465, column: 21, scope: !5457)
!5493 = !DILocation(line: 2466, column: 17, scope: !5440)
!5494 = !DILocation(line: 2467, column: 13, scope: !5427)
!5495 = !DILocation(line: 2468, column: 13, scope: !5245)
!5496 = !DILocation(line: 2468, column: 17, scope: !5245)
!5497 = !DILocation(line: 2468, column: 30, scope: !5245)
!5498 = !DILocation(line: 2469, column: 17, scope: !5499)
!5499 = distinct !DILexicalBlock(scope: !5245, file: !939, line: 2469, column: 17)
!5500 = !DILocation(line: 2469, column: 33, scope: !5499)
!5501 = !DILocation(line: 2469, column: 43, scope: !5499)
!5502 = !DILocation(line: 2469, column: 17, scope: !5245)
!5503 = !DILocation(line: 2470, column: 34, scope: !5504)
!5504 = distinct !DILexicalBlock(scope: !5499, file: !939, line: 2469, column: 51)
!5505 = !DILocation(line: 2470, column: 38, scope: !5504)
!5506 = !DILocation(line: 2470, column: 73, scope: !5504)
!5507 = !DILocation(line: 2470, column: 89, scope: !5504)
!5508 = !DILocation(line: 2470, column: 99, scope: !5504)
!5509 = !DILocation(line: 2470, column: 17, scope: !5504)
!5510 = !DILocation(line: 2471, column: 13, scope: !5504)
!5511 = !DILocation(line: 2472, column: 17, scope: !5512)
!5512 = distinct !DILexicalBlock(scope: !5245, file: !939, line: 2472, column: 17)
!5513 = !DILocation(line: 2472, column: 31, scope: !5512)
!5514 = !DILocation(line: 2472, column: 41, scope: !5512)
!5515 = !DILocation(line: 2472, column: 17, scope: !5245)
!5516 = !DILocation(line: 2473, column: 34, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !5512, file: !939, line: 2472, column: 49)
!5518 = !DILocation(line: 2473, column: 38, scope: !5517)
!5519 = !DILocation(line: 2473, column: 71, scope: !5517)
!5520 = !DILocation(line: 2473, column: 85, scope: !5517)
!5521 = !DILocation(line: 2473, column: 95, scope: !5517)
!5522 = !DILocation(line: 2473, column: 17, scope: !5517)
!5523 = !DILocation(line: 2474, column: 13, scope: !5517)
!5524 = !DILocation(line: 2475, column: 17, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5245, file: !939, line: 2475, column: 17)
!5526 = !DILocation(line: 2475, column: 29, scope: !5525)
!5527 = !DILocation(line: 2475, column: 42, scope: !5525)
!5528 = !DILocation(line: 2475, column: 46, scope: !5525)
!5529 = !DILocation(line: 2475, column: 49, scope: !5530)
!5530 = !DILexicalBlockFile(scope: !5525, file: !939, discriminator: 1)
!5531 = !DILocation(line: 2475, column: 61, scope: !5530)
!5532 = !DILocation(line: 2475, column: 74, scope: !5530)
!5533 = !DILocation(line: 2475, column: 17, scope: !5530)
!5534 = !DILocation(line: 2476, column: 17, scope: !5525)
!5535 = !DILocation(line: 2476, column: 21, scope: !5525)
!5536 = !DILocation(line: 2476, column: 44, scope: !5525)
!5537 = !DILocation(line: 2476, column: 56, scope: !5525)
!5538 = !DILocation(line: 2477, column: 9, scope: !5245)
!5539 = !DILocation(line: 2477, column: 20, scope: !5540)
!5540 = !DILexicalBlockFile(scope: !4419, file: !939, discriminator: 1)
!5541 = !DILocation(line: 2477, column: 24, scope: !5540)
!5542 = !DILocation(line: 2477, column: 34, scope: !5540)
!5543 = !DILocation(line: 2477, column: 45, scope: !5540)
!5544 = !DILocation(line: 2478, column: 78, scope: !4418)
!5545 = !DILocation(line: 2478, column: 28, scope: !4418)
!5546 = !DILocation(line: 2478, column: 26, scope: !4418)
!5547 = !DILocation(line: 2480, column: 17, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !4418, file: !939, line: 2480, column: 17)
!5549 = !DILocation(line: 2480, column: 21, scope: !5548)
!5550 = !DILocation(line: 2480, column: 31, scope: !5548)
!5551 = !DILocation(line: 2480, column: 40, scope: !5548)
!5552 = !DILocation(line: 2480, column: 60, scope: !5548)
!5553 = !DILocation(line: 2480, column: 64, scope: !5554)
!5554 = !DILexicalBlockFile(scope: !5548, file: !939, discriminator: 1)
!5555 = !DILocation(line: 2480, column: 68, scope: !5554)
!5556 = !DILocation(line: 2480, column: 78, scope: !5554)
!5557 = !DILocation(line: 2480, column: 87, scope: !5554)
!5558 = !DILocation(line: 2480, column: 111, scope: !5554)
!5559 = !DILocation(line: 2480, column: 130, scope: !5560)
!5560 = !DILexicalBlockFile(scope: !5548, file: !939, discriminator: 2)
!5561 = !DILocation(line: 2480, column: 144, scope: !5560)
!5562 = !DILocation(line: 2480, column: 147, scope: !5560)
!5563 = !DILocation(line: 2480, column: 17, scope: !5560)
!5564 = !DILocation(line: 2481, column: 58, scope: !5548)
!5565 = !DILocation(line: 2481, column: 72, scope: !5548)
!5566 = !DILocation(line: 2481, column: 17, scope: !5548)
!5567 = !DILocation(line: 2481, column: 21, scope: !5548)
!5568 = !DILocation(line: 2481, column: 31, scope: !5548)
!5569 = !DILocation(line: 2481, column: 40, scope: !5548)
!5570 = !DILocation(line: 2482, column: 38, scope: !4418)
!5571 = !DILocation(line: 2482, column: 50, scope: !4418)
!5572 = !DILocation(line: 2482, column: 13, scope: !4418)
!5573 = !DILocation(line: 2482, column: 17, scope: !4418)
!5574 = !DILocation(line: 2482, column: 27, scope: !4418)
!5575 = !DILocation(line: 2482, column: 36, scope: !4418)
!5576 = !DILocation(line: 2484, column: 17, scope: !5577)
!5577 = distinct !DILexicalBlock(scope: !4418, file: !939, line: 2484, column: 17)
!5578 = !DILocation(line: 2484, column: 29, scope: !5577)
!5579 = !DILocation(line: 2484, column: 41, scope: !5577)
!5580 = !DILocation(line: 2484, column: 45, scope: !5577)
!5581 = !DILocation(line: 2484, column: 17, scope: !4418)
!5582 = !DILocation(line: 2485, column: 45, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5577, file: !939, line: 2484, column: 50)
!5584 = !DILocation(line: 2485, column: 57, scope: !5583)
!5585 = !DILocation(line: 2485, column: 69, scope: !5583)
!5586 = !DILocation(line: 2485, column: 75, scope: !5583)
!5587 = !DILocation(line: 2485, column: 87, scope: !5583)
!5588 = !DILocation(line: 2485, column: 99, scope: !5583)
!5589 = !DILocation(line: 2485, column: 73, scope: !5583)
!5590 = !DILocation(line: 2485, column: 17, scope: !5583)
!5591 = !DILocation(line: 2485, column: 21, scope: !5583)
!5592 = !DILocation(line: 2485, column: 31, scope: !5583)
!5593 = !DILocation(line: 2485, column: 43, scope: !5583)
!5594 = !DILocation(line: 2486, column: 37, scope: !5583)
!5595 = !DILocation(line: 2486, column: 45, scope: !5583)
!5596 = !DILocation(line: 2486, column: 57, scope: !5583)
!5597 = !DILocation(line: 2486, column: 69, scope: !5583)
!5598 = !DILocation(line: 2486, column: 74, scope: !5583)
!5599 = !DILocation(line: 2486, column: 86, scope: !5583)
!5600 = !DILocation(line: 2486, column: 98, scope: !5583)
!5601 = !DILocation(line: 2486, column: 17, scope: !5583)
!5602 = !DILocation(line: 2487, column: 13, scope: !5583)
!5603 = !DILocation(line: 2488, column: 24, scope: !5604)
!5604 = distinct !DILexicalBlock(scope: !5577, file: !939, line: 2487, column: 20)
!5605 = !DILocation(line: 2488, column: 29, scope: !5604)
!5606 = !DILocation(line: 2490, column: 24, scope: !5604)
!5607 = !DILocation(line: 2490, column: 36, scope: !5604)
!5608 = !DILocation(line: 2490, column: 48, scope: !5604)
!5609 = !DILocation(line: 2490, column: 53, scope: !5604)
!5610 = !DILocation(line: 2490, column: 65, scope: !5604)
!5611 = !DILocation(line: 2490, column: 77, scope: !5604)
!5612 = !DILocation(line: 2491, column: 24, scope: !5604)
!5613 = !DILocation(line: 2491, column: 28, scope: !5604)
!5614 = !DILocation(line: 2488, column: 17, scope: !5604)
!5615 = !DILocation(line: 2492, column: 37, scope: !5604)
!5616 = !DILocation(line: 2492, column: 17, scope: !5604)
!5617 = !DILocation(line: 2496, column: 17, scope: !4417)
!5618 = !DILocation(line: 2496, column: 21, scope: !4417)
!5619 = !DILocation(line: 2496, column: 30, scope: !4417)
!5620 = !DILocation(line: 2496, column: 17, scope: !4418)
!5621 = !DILocation(line: 2497, column: 45, scope: !4417)
!5622 = !DILocation(line: 2497, column: 49, scope: !4417)
!5623 = !DILocation(line: 2498, column: 54, scope: !4417)
!5624 = !DILocation(line: 2498, column: 70, scope: !4417)
!5625 = !DILocation(line: 2498, column: 45, scope: !4417)
!5626 = !DILocation(line: 161, column: 20, scope: !3577, inlinedAt: !4416)
!5627 = !DILocation(line: 161, column: 24, scope: !3577, inlinedAt: !4416)
!5628 = !DILocation(line: 161, column: 31, scope: !3577, inlinedAt: !4416)
!5629 = !DILocation(line: 162, column: 12, scope: !3577, inlinedAt: !4416)
!5630 = !DILocation(line: 162, column: 5, scope: !3577, inlinedAt: !4416)
!5631 = !DILocation(line: 2499, column: 45, scope: !4417)
!5632 = !DILocation(line: 2499, column: 49, scope: !4417)
!5633 = !DILocation(line: 2497, column: 32, scope: !4417)
!5634 = !DILocation(line: 2497, column: 17, scope: !4417)
!5635 = !DILocation(line: 2497, column: 21, scope: !4417)
!5636 = !DILocation(line: 2497, column: 30, scope: !4417)
!5637 = !DILocation(line: 2502, column: 17, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !4418, file: !939, line: 2502, column: 17)
!5639 = !DILocation(line: 2502, column: 21, scope: !5638)
!5640 = !DILocation(line: 2502, column: 31, scope: !5638)
!5641 = !DILocation(line: 2502, column: 40, scope: !5638)
!5642 = !DILocation(line: 2502, column: 17, scope: !4418)
!5643 = !DILocation(line: 2503, column: 21, scope: !5644)
!5644 = distinct !DILexicalBlock(scope: !5645, file: !939, line: 2503, column: 21)
!5645 = distinct !DILexicalBlock(scope: !5638, file: !939, line: 2502, column: 66)
!5646 = !DILocation(line: 2503, column: 33, scope: !5644)
!5647 = !DILocation(line: 2503, column: 49, scope: !5644)
!5648 = !DILocation(line: 2503, column: 54, scope: !5644)
!5649 = !DILocation(line: 2503, column: 57, scope: !5650)
!5650 = !DILexicalBlockFile(scope: !5644, file: !939, discriminator: 1)
!5651 = !DILocation(line: 2503, column: 69, scope: !5650)
!5652 = !DILocation(line: 2503, column: 85, scope: !5650)
!5653 = !DILocation(line: 2503, column: 21, scope: !5650)
!5654 = !DILocation(line: 2504, column: 21, scope: !5644)
!5655 = !DILocation(line: 2504, column: 25, scope: !5644)
!5656 = !DILocation(line: 2504, column: 35, scope: !5644)
!5657 = !DILocation(line: 2504, column: 44, scope: !5644)
!5658 = !DILocation(line: 2505, column: 26, scope: !5659)
!5659 = distinct !DILexicalBlock(scope: !5644, file: !939, line: 2505, column: 26)
!5660 = !DILocation(line: 2505, column: 38, scope: !5659)
!5661 = !DILocation(line: 2505, column: 54, scope: !5659)
!5662 = !DILocation(line: 2505, column: 26, scope: !5644)
!5663 = !DILocation(line: 2506, column: 21, scope: !5659)
!5664 = !DILocation(line: 2506, column: 25, scope: !5659)
!5665 = !DILocation(line: 2506, column: 35, scope: !5659)
!5666 = !DILocation(line: 2506, column: 44, scope: !5659)
!5667 = !DILocation(line: 2507, column: 13, scope: !5645)
!5668 = !DILocation(line: 2507, column: 24, scope: !5669)
!5669 = !DILexicalBlockFile(scope: !5670, file: !939, discriminator: 1)
!5670 = distinct !DILexicalBlock(scope: !5638, file: !939, line: 2507, column: 24)
!5671 = !DILocation(line: 2507, column: 28, scope: !5669)
!5672 = !DILocation(line: 2507, column: 38, scope: !5669)
!5673 = !DILocation(line: 2507, column: 47, scope: !5669)
!5674 = !DILocation(line: 2508, column: 21, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5676, file: !939, line: 2508, column: 21)
!5676 = distinct !DILexicalBlock(scope: !5670, file: !939, line: 2507, column: 73)
!5677 = !DILocation(line: 2508, column: 33, scope: !5675)
!5678 = !DILocation(line: 2508, column: 49, scope: !5675)
!5679 = !DILocation(line: 2508, column: 54, scope: !5675)
!5680 = !DILocation(line: 2508, column: 57, scope: !5681)
!5681 = !DILexicalBlockFile(scope: !5675, file: !939, discriminator: 1)
!5682 = !DILocation(line: 2508, column: 69, scope: !5681)
!5683 = !DILocation(line: 2508, column: 85, scope: !5681)
!5684 = !DILocation(line: 2508, column: 21, scope: !5681)
!5685 = !DILocation(line: 2509, column: 21, scope: !5675)
!5686 = !DILocation(line: 2509, column: 25, scope: !5675)
!5687 = !DILocation(line: 2509, column: 35, scope: !5675)
!5688 = !DILocation(line: 2509, column: 44, scope: !5675)
!5689 = !DILocation(line: 2510, column: 26, scope: !5690)
!5690 = distinct !DILexicalBlock(scope: !5675, file: !939, line: 2510, column: 26)
!5691 = !DILocation(line: 2510, column: 38, scope: !5690)
!5692 = !DILocation(line: 2510, column: 54, scope: !5690)
!5693 = !DILocation(line: 2510, column: 26, scope: !5675)
!5694 = !DILocation(line: 2511, column: 21, scope: !5690)
!5695 = !DILocation(line: 2511, column: 25, scope: !5690)
!5696 = !DILocation(line: 2511, column: 35, scope: !5690)
!5697 = !DILocation(line: 2511, column: 44, scope: !5690)
!5698 = !DILocation(line: 2512, column: 13, scope: !5676)
!5699 = !DILocation(line: 2512, column: 24, scope: !5700)
!5700 = !DILexicalBlockFile(scope: !5701, file: !939, discriminator: 1)
!5701 = distinct !DILexicalBlock(scope: !5670, file: !939, line: 2512, column: 24)
!5702 = !DILocation(line: 2512, column: 28, scope: !5700)
!5703 = !DILocation(line: 2512, column: 38, scope: !5700)
!5704 = !DILocation(line: 2512, column: 47, scope: !5700)
!5705 = !DILocation(line: 2513, column: 17, scope: !5706)
!5706 = distinct !DILexicalBlock(scope: !5701, file: !939, line: 2512, column: 67)
!5707 = !DILocation(line: 2513, column: 21, scope: !5706)
!5708 = !DILocation(line: 2513, column: 34, scope: !5706)
!5709 = !DILocation(line: 2514, column: 13, scope: !5706)
!5710 = !DILocation(line: 2515, column: 74, scope: !4418)
!5711 = !DILocation(line: 2515, column: 78, scope: !4418)
!5712 = !DILocation(line: 2515, column: 88, scope: !4418)
!5713 = !DILocation(line: 2515, column: 51, scope: !4418)
!5714 = !DILocation(line: 2515, column: 13, scope: !4418)
!5715 = !DILocation(line: 2515, column: 17, scope: !4418)
!5716 = !DILocation(line: 2515, column: 27, scope: !4418)
!5717 = !DILocation(line: 2515, column: 49, scope: !4418)
!5718 = !DILocation(line: 2516, column: 9, scope: !4418)
!5719 = !DILocation(line: 2516, column: 20, scope: !5720)
!5720 = !DILexicalBlockFile(scope: !5721, file: !939, discriminator: 1)
!5721 = distinct !DILexicalBlock(scope: !4419, file: !939, line: 2516, column: 20)
!5722 = !DILocation(line: 2516, column: 24, scope: !5720)
!5723 = !DILocation(line: 2516, column: 34, scope: !5720)
!5724 = !DILocation(line: 2516, column: 45, scope: !5720)
!5725 = !DILocalVariable(name: "type", scope: !5726, file: !939, line: 2517, type: !658)
!5726 = distinct !DILexicalBlock(scope: !5721, file: !939, line: 2516, column: 67)
!5727 = !DILocation(line: 2517, column: 30, scope: !5726)
!5728 = !DILocation(line: 2518, column: 77, scope: !5726)
!5729 = !DILocation(line: 2518, column: 28, scope: !5726)
!5730 = !DILocation(line: 2518, column: 26, scope: !5726)
!5731 = !DILocation(line: 2519, column: 17, scope: !5732)
!5732 = distinct !DILexicalBlock(scope: !5726, file: !939, line: 2519, column: 17)
!5733 = !DILocation(line: 2519, column: 21, scope: !5732)
!5734 = !DILocation(line: 2519, column: 31, scope: !5732)
!5735 = !DILocation(line: 2519, column: 40, scope: !5732)
!5736 = !DILocation(line: 2519, column: 17, scope: !5726)
!5737 = !DILocation(line: 2520, column: 42, scope: !5732)
!5738 = !DILocation(line: 2520, column: 56, scope: !5732)
!5739 = !DILocation(line: 2520, column: 17, scope: !5732)
!5740 = !DILocation(line: 2520, column: 21, scope: !5732)
!5741 = !DILocation(line: 2520, column: 31, scope: !5732)
!5742 = !DILocation(line: 2520, column: 40, scope: !5732)
!5743 = !DILocation(line: 2521, column: 37, scope: !5726)
!5744 = !DILocation(line: 2521, column: 41, scope: !5726)
!5745 = !DILocation(line: 2521, column: 51, scope: !5726)
!5746 = !DILocation(line: 2521, column: 20, scope: !5726)
!5747 = !DILocation(line: 2521, column: 18, scope: !5726)
!5748 = !DILocation(line: 2522, column: 17, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !5726, file: !939, line: 2522, column: 17)
!5750 = !DILocation(line: 2522, column: 22, scope: !5749)
!5751 = !DILocation(line: 2522, column: 17, scope: !5726)
!5752 = !DILocation(line: 2523, column: 44, scope: !5749)
!5753 = !DILocation(line: 2523, column: 17, scope: !5749)
!5754 = !DILocation(line: 2523, column: 21, scope: !5749)
!5755 = !DILocation(line: 2523, column: 31, scope: !5749)
!5756 = !DILocation(line: 2523, column: 42, scope: !5749)
!5757 = !DILocation(line: 2524, column: 17, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !5726, file: !939, line: 2524, column: 17)
!5759 = !DILocation(line: 2524, column: 31, scope: !5758)
!5760 = !DILocation(line: 2524, column: 17, scope: !5726)
!5761 = !DILocation(line: 2525, column: 30, scope: !5758)
!5762 = !DILocation(line: 2525, column: 34, scope: !5758)
!5763 = !DILocation(line: 2525, column: 57, scope: !5758)
!5764 = !DILocation(line: 2525, column: 71, scope: !5758)
!5765 = !DILocation(line: 2525, column: 17, scope: !5758)
!5766 = !DILocation(line: 2526, column: 17, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5726, file: !939, line: 2526, column: 17)
!5768 = !DILocation(line: 2526, column: 22, scope: !5767)
!5769 = !DILocation(line: 2526, column: 37, scope: !5767)
!5770 = !DILocation(line: 2527, column: 25, scope: !5767)
!5771 = !DILocation(line: 2527, column: 39, scope: !5767)
!5772 = !DILocation(line: 2527, column: 18, scope: !5767)
!5773 = !DILocation(line: 2526, column: 17, scope: !5774)
!5774 = !DILexicalBlockFile(scope: !5726, file: !939, discriminator: 1)
!5775 = !DILocation(line: 2528, column: 17, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !5767, file: !939, line: 2527, column: 69)
!5777 = !DILocation(line: 2528, column: 21, scope: !5776)
!5778 = !DILocation(line: 2528, column: 31, scope: !5776)
!5779 = !DILocation(line: 2528, column: 42, scope: !5776)
!5780 = !DILocation(line: 2529, column: 17, scope: !5776)
!5781 = !DILocation(line: 2529, column: 21, scope: !5776)
!5782 = !DILocation(line: 2529, column: 31, scope: !5776)
!5783 = !DILocation(line: 2529, column: 40, scope: !5776)
!5784 = !DILocation(line: 2530, column: 13, scope: !5776)
!5785 = !DILocation(line: 2531, column: 9, scope: !5726)
!5786 = !DILocation(line: 2532, column: 13, scope: !5787)
!5787 = distinct !DILexicalBlock(scope: !4421, file: !939, line: 2532, column: 13)
!5788 = !DILocation(line: 2532, column: 25, scope: !5787)
!5789 = !DILocation(line: 2532, column: 13, scope: !4421)
!5790 = !DILocation(line: 2533, column: 37, scope: !5791)
!5791 = distinct !DILexicalBlock(scope: !5792, file: !939, line: 2533, column: 17)
!5792 = distinct !DILexicalBlock(scope: !5787, file: !939, line: 2532, column: 36)
!5793 = !DILocation(line: 2533, column: 41, scope: !5791)
!5794 = !DILocation(line: 2533, column: 51, scope: !5791)
!5795 = !DILocation(line: 2533, column: 63, scope: !5791)
!5796 = !DILocation(line: 2533, column: 18, scope: !5791)
!5797 = !DILocation(line: 2533, column: 17, scope: !5792)
!5798 = !DILocation(line: 2534, column: 24, scope: !5799)
!5799 = distinct !DILexicalBlock(scope: !5791, file: !939, line: 2533, column: 80)
!5800 = !DILocation(line: 2534, column: 28, scope: !5799)
!5801 = !DILocation(line: 2534, column: 38, scope: !5799)
!5802 = !DILocation(line: 2534, column: 49, scope: !5799)
!5803 = !DILocation(line: 2534, column: 61, scope: !5799)
!5804 = !DILocation(line: 2534, column: 72, scope: !5799)
!5805 = !DILocation(line: 2534, column: 84, scope: !5799)
!5806 = !DILocation(line: 2534, column: 17, scope: !5799)
!5807 = !DILocation(line: 2535, column: 13, scope: !5799)
!5808 = !DILocation(line: 2536, column: 9, scope: !5792)
!5809 = !DILocation(line: 2536, column: 20, scope: !5810)
!5810 = !DILexicalBlockFile(scope: !5811, file: !939, discriminator: 1)
!5811 = distinct !DILexicalBlock(scope: !5787, file: !939, line: 2536, column: 20)
!5812 = !DILocation(line: 2536, column: 24, scope: !5810)
!5813 = !DILocation(line: 2536, column: 34, scope: !5810)
!5814 = !DILocation(line: 2536, column: 43, scope: !5810)
!5815 = !DILocalVariable(name: "coded_width", scope: !5816, file: !939, line: 2537, type: !1014)
!5816 = distinct !DILexicalBlock(scope: !5811, file: !939, line: 2536, column: 64)
!5817 = !DILocation(line: 2537, column: 17, scope: !5816)
!5818 = !DILocation(line: 2538, column: 49, scope: !5816)
!5819 = !DILocation(line: 2538, column: 61, scope: !5816)
!5820 = !DILocation(line: 2537, column: 31, scope: !5816)
!5821 = !DILocation(line: 2538, column: 80, scope: !5816)
!5822 = !DILocation(line: 2539, column: 17, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5816, file: !939, line: 2539, column: 17)
!5824 = !DILocation(line: 2539, column: 17, scope: !5816)
!5825 = !DILocation(line: 2540, column: 39, scope: !5823)
!5826 = !DILocation(line: 2540, column: 17, scope: !5823)
!5827 = !DILocation(line: 2540, column: 21, scope: !5823)
!5828 = !DILocation(line: 2540, column: 31, scope: !5823)
!5829 = !DILocation(line: 2540, column: 37, scope: !5823)
!5830 = !DILocation(line: 2541, column: 46, scope: !5816)
!5831 = !DILocation(line: 2541, column: 19, scope: !5816)
!5832 = !DILocation(line: 2541, column: 17, scope: !5816)
!5833 = !DILocation(line: 2542, column: 17, scope: !5834)
!5834 = distinct !DILexicalBlock(scope: !5816, file: !939, line: 2542, column: 17)
!5835 = !DILocation(line: 2542, column: 21, scope: !5834)
!5836 = !DILocation(line: 2542, column: 17, scope: !5816)
!5837 = !DILocation(line: 2543, column: 24, scope: !5834)
!5838 = !DILocation(line: 2543, column: 17, scope: !5834)
!5839 = !DILocation(line: 2544, column: 9, scope: !5816)
!5840 = !DILocation(line: 2545, column: 13, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !4421, file: !939, line: 2545, column: 13)
!5842 = !DILocation(line: 2545, column: 17, scope: !5841)
!5843 = !DILocation(line: 2545, column: 27, scope: !5841)
!5844 = !DILocation(line: 2545, column: 38, scope: !5841)
!5845 = !DILocation(line: 2545, column: 59, scope: !5841)
!5846 = !DILocation(line: 2545, column: 62, scope: !5847)
!5847 = !DILexicalBlockFile(scope: !5841, file: !939, discriminator: 1)
!5848 = !DILocation(line: 2545, column: 76, scope: !5847)
!5849 = !DILocation(line: 2545, column: 85, scope: !5847)
!5850 = !DILocation(line: 2545, column: 13, scope: !5847)
!5851 = !DILocation(line: 2547, column: 13, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5841, file: !939, line: 2545, column: 102)
!5853 = !DILocation(line: 2547, column: 17, scope: !5852)
!5854 = !DILocation(line: 2547, column: 30, scope: !5852)
!5855 = !DILocation(line: 2548, column: 9, scope: !5852)
!5856 = !DILocation(line: 2549, column: 5, scope: !4421)
!5857 = !DILocation(line: 2163, column: 54, scope: !5858)
!5858 = !DILexicalBlockFile(scope: !4422, file: !939, discriminator: 2)
!5859 = !DILocation(line: 2163, column: 5, scope: !5858)
!5860 = distinct !{!5860, !5861}
!5861 = !DILocation(line: 2163, column: 5, scope: !4414)
!5862 = !DILocation(line: 2551, column: 9, scope: !4414)
!5863 = !DILocation(line: 2551, column: 5, scope: !4414)
!5864 = !DILocation(line: 2553, column: 12, scope: !4414)
!5865 = !DILocation(line: 2553, column: 5, scope: !4414)
!5866 = !DILocation(line: 2554, column: 1, scope: !4414)
!5867 = distinct !DISubprogram(name: "mxf_handle_missing_index_segment", scope: !939, file: !939, line: 3014, type: !5868, isLocal: true, isDefinition: true, scopeLine: 3015, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!5868 = !DISubroutineType(types: !5869)
!5869 = !{!1014, !2594, !1569}
!5870 = !DILocation(line: 159, column: 77, scope: !3577, inlinedAt: !5871)
!5871 = distinct !DILocation(line: 3078, column: 32, scope: !5867)
!5872 = !DILocation(line: 161, column: 16, scope: !3577, inlinedAt: !5871)
!5873 = !DILocalVariable(name: "mxf", arg: 1, scope: !5867, file: !939, line: 3014, type: !2594)
!5874 = !DILocation(line: 3014, column: 57, scope: !5867)
!5875 = !DILocalVariable(name: "st", arg: 2, scope: !5867, file: !939, line: 3014, type: !1569)
!5876 = !DILocation(line: 3014, column: 72, scope: !5867)
!5877 = !DILocalVariable(name: "track", scope: !5867, file: !939, line: 3016, type: !1108)
!5878 = !DILocation(line: 3016, column: 15, scope: !5867)
!5879 = !DILocation(line: 3016, column: 23, scope: !5867)
!5880 = !DILocation(line: 3016, column: 27, scope: !5867)
!5881 = !DILocalVariable(name: "segment", scope: !5867, file: !939, line: 3017, type: !1133)
!5882 = !DILocation(line: 3017, column: 27, scope: !5867)
!5883 = !DILocalVariable(name: "p", scope: !5867, file: !939, line: 3018, type: !2600)
!5884 = !DILocation(line: 3018, column: 19, scope: !5867)
!5885 = !DILocalVariable(name: "essence_partition_count", scope: !5867, file: !939, line: 3019, type: !1014)
!5886 = !DILocation(line: 3019, column: 9, scope: !5867)
!5887 = !DILocalVariable(name: "edit_unit_byte_count", scope: !5867, file: !939, line: 3020, type: !1014)
!5888 = !DILocation(line: 3020, column: 9, scope: !5867)
!5889 = !DILocalVariable(name: "i", scope: !5867, file: !939, line: 3021, type: !1014)
!5890 = !DILocation(line: 3021, column: 9, scope: !5867)
!5891 = !DILocalVariable(name: "ret", scope: !5867, file: !939, line: 3021, type: !1014)
!5892 = !DILocation(line: 3021, column: 12, scope: !5867)
!5893 = !DILocation(line: 3023, column: 10, scope: !5894)
!5894 = distinct !DILexicalBlock(scope: !5867, file: !939, line: 3023, column: 9)
!5895 = !DILocation(line: 3023, column: 16, scope: !5894)
!5896 = !DILocation(line: 3023, column: 19, scope: !5897)
!5897 = !DILexicalBlockFile(scope: !5894, file: !939, discriminator: 1)
!5898 = !DILocation(line: 3023, column: 26, scope: !5897)
!5899 = !DILocation(line: 3023, column: 35, scope: !5897)
!5900 = !DILocation(line: 3023, column: 9, scope: !5897)
!5901 = !DILocation(line: 3024, column: 9, scope: !5894)
!5902 = !DILocation(line: 3027, column: 12, scope: !5903)
!5903 = distinct !DILexicalBlock(scope: !5867, file: !939, line: 3027, column: 5)
!5904 = !DILocation(line: 3027, column: 10, scope: !5903)
!5905 = !DILocation(line: 3027, column: 17, scope: !5906)
!5906 = !DILexicalBlockFile(scope: !5907, file: !939, discriminator: 1)
!5907 = distinct !DILexicalBlock(scope: !5903, file: !939, line: 3027, column: 5)
!5908 = !DILocation(line: 3027, column: 21, scope: !5906)
!5909 = !DILocation(line: 3027, column: 26, scope: !5906)
!5910 = !DILocation(line: 3027, column: 19, scope: !5906)
!5911 = !DILocation(line: 3027, column: 5, scope: !5906)
!5912 = !DILocation(line: 3028, column: 32, scope: !5913)
!5913 = distinct !DILexicalBlock(scope: !5914, file: !939, line: 3028, column: 13)
!5914 = distinct !DILexicalBlock(scope: !5907, file: !939, line: 3027, column: 52)
!5915 = !DILocation(line: 3028, column: 13, scope: !5913)
!5916 = !DILocation(line: 3028, column: 18, scope: !5913)
!5917 = !DILocation(line: 3028, column: 36, scope: !5913)
!5918 = !DILocation(line: 3028, column: 41, scope: !5913)
!5919 = !DILocation(line: 3028, column: 13, scope: !5914)
!5920 = !DILocalVariable(name: "s", scope: !5921, file: !939, line: 3029, type: !1133)
!5921 = distinct !DILexicalBlock(scope: !5913, file: !939, line: 3028, column: 63)
!5922 = !DILocation(line: 3029, column: 35, scope: !5921)
!5923 = !DILocation(line: 3029, column: 81, scope: !5921)
!5924 = !DILocation(line: 3029, column: 62, scope: !5921)
!5925 = !DILocation(line: 3029, column: 67, scope: !5921)
!5926 = !DILocation(line: 3029, column: 39, scope: !5921)
!5927 = !DILocation(line: 3030, column: 17, scope: !5928)
!5928 = distinct !DILexicalBlock(scope: !5921, file: !939, line: 3030, column: 17)
!5929 = !DILocation(line: 3030, column: 20, scope: !5928)
!5930 = !DILocation(line: 3030, column: 32, scope: !5928)
!5931 = !DILocation(line: 3030, column: 39, scope: !5928)
!5932 = !DILocation(line: 3030, column: 29, scope: !5928)
!5933 = !DILocation(line: 3030, column: 17, scope: !5921)
!5934 = !DILocation(line: 3031, column: 17, scope: !5928)
!5935 = !DILocation(line: 3032, column: 9, scope: !5921)
!5936 = !DILocation(line: 3033, column: 5, scope: !5914)
!5937 = !DILocation(line: 3027, column: 48, scope: !5938)
!5938 = !DILexicalBlockFile(scope: !5907, file: !939, discriminator: 2)
!5939 = !DILocation(line: 3027, column: 5, scope: !5938)
!5940 = distinct !{!5940, !5941}
!5941 = !DILocation(line: 3027, column: 5, scope: !5867)
!5942 = !DILocation(line: 3036, column: 12, scope: !5943)
!5943 = distinct !DILexicalBlock(scope: !5867, file: !939, line: 3036, column: 5)
!5944 = !DILocation(line: 3036, column: 10, scope: !5943)
!5945 = !DILocation(line: 3036, column: 17, scope: !5946)
!5946 = !DILexicalBlockFile(scope: !5947, file: !939, discriminator: 1)
!5947 = distinct !DILexicalBlock(scope: !5943, file: !939, line: 3036, column: 5)
!5948 = !DILocation(line: 3036, column: 21, scope: !5946)
!5949 = !DILocation(line: 3036, column: 26, scope: !5946)
!5950 = !DILocation(line: 3036, column: 19, scope: !5946)
!5951 = !DILocation(line: 3036, column: 5, scope: !5946)
!5952 = !DILocation(line: 3038, column: 29, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5954, file: !939, line: 3038, column: 13)
!5954 = distinct !DILexicalBlock(scope: !5947, file: !939, line: 3036, column: 49)
!5955 = !DILocation(line: 3038, column: 13, scope: !5953)
!5956 = !DILocation(line: 3038, column: 18, scope: !5953)
!5957 = !DILocation(line: 3038, column: 32, scope: !5953)
!5958 = !DILocation(line: 3038, column: 44, scope: !5953)
!5959 = !DILocation(line: 3038, column: 51, scope: !5953)
!5960 = !DILocation(line: 3038, column: 41, scope: !5953)
!5961 = !DILocation(line: 3038, column: 13, scope: !5954)
!5962 = !DILocation(line: 3039, column: 13, scope: !5953)
!5963 = !DILocation(line: 3041, column: 30, scope: !5954)
!5964 = !DILocation(line: 3041, column: 14, scope: !5954)
!5965 = !DILocation(line: 3041, column: 19, scope: !5954)
!5966 = !DILocation(line: 3041, column: 11, scope: !5954)
!5967 = !DILocation(line: 3042, column: 32, scope: !5954)
!5968 = !DILocation(line: 3043, column: 5, scope: !5954)
!5969 = !DILocation(line: 3036, column: 45, scope: !5970)
!5970 = !DILexicalBlockFile(scope: !5947, file: !939, discriminator: 2)
!5971 = !DILocation(line: 3036, column: 5, scope: !5970)
!5972 = distinct !{!5972, !5973}
!5973 = !DILocation(line: 3036, column: 5, scope: !5867)
!5974 = !DILocation(line: 3046, column: 9, scope: !5975)
!5975 = distinct !DILexicalBlock(scope: !5867, file: !939, line: 3046, column: 9)
!5976 = !DILocation(line: 3046, column: 33, scope: !5975)
!5977 = !DILocation(line: 3046, column: 9, scope: !5867)
!5978 = !DILocation(line: 3047, column: 9, scope: !5975)
!5979 = !DILocation(line: 3049, column: 9, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5867, file: !939, line: 3049, column: 9)
!5981 = !DILocation(line: 3049, column: 13, scope: !5980)
!5982 = !DILocation(line: 3049, column: 23, scope: !5980)
!5983 = !DILocation(line: 3049, column: 34, scope: !5980)
!5984 = !DILocation(line: 3049, column: 56, scope: !5980)
!5985 = !DILocation(line: 3049, column: 66, scope: !5986)
!5986 = !DILexicalBlockFile(scope: !5980, file: !939, discriminator: 1)
!5987 = !DILocation(line: 3049, column: 70, scope: !5986)
!5988 = !DILocation(line: 3049, column: 80, scope: !5986)
!5989 = !DILocation(line: 3049, column: 59, scope: !5986)
!5990 = !DILocation(line: 3049, column: 9, scope: !5986)
!5991 = !DILocation(line: 3050, column: 56, scope: !5992)
!5992 = distinct !DILexicalBlock(scope: !5980, file: !939, line: 3049, column: 91)
!5993 = !DILocation(line: 3050, column: 60, scope: !5992)
!5994 = !DILocation(line: 3050, column: 70, scope: !5992)
!5995 = !DILocation(line: 3050, column: 33, scope: !5992)
!5996 = !DILocation(line: 3050, column: 82, scope: !5992)
!5997 = !DILocation(line: 3050, column: 86, scope: !5992)
!5998 = !DILocation(line: 3050, column: 96, scope: !5992)
!5999 = !DILocation(line: 3050, column: 80, scope: !5992)
!6000 = !DILocation(line: 3050, column: 106, scope: !5992)
!6001 = !DILocation(line: 3050, column: 30, scope: !5992)
!6002 = !DILocation(line: 3051, column: 5, scope: !5992)
!6003 = !DILocation(line: 3051, column: 16, scope: !6004)
!6004 = !DILexicalBlockFile(scope: !6005, file: !939, discriminator: 1)
!6005 = distinct !DILexicalBlock(scope: !5980, file: !939, line: 3051, column: 16)
!6006 = !DILocation(line: 3051, column: 20, scope: !6004)
!6007 = !DILocation(line: 3051, column: 29, scope: !6004)
!6008 = !DILocation(line: 3051, column: 33, scope: !6004)
!6009 = !DILocation(line: 3051, column: 36, scope: !6010)
!6010 = !DILexicalBlockFile(scope: !6005, file: !939, discriminator: 2)
!6011 = !DILocation(line: 3051, column: 39, scope: !6010)
!6012 = !DILocation(line: 3051, column: 57, scope: !6010)
!6013 = !DILocation(line: 3051, column: 64, scope: !6010)
!6014 = !DILocation(line: 3051, column: 68, scope: !6010)
!6015 = !DILocation(line: 3051, column: 71, scope: !6016)
!6016 = !DILexicalBlockFile(scope: !6005, file: !939, discriminator: 3)
!6017 = !DILocation(line: 3051, column: 74, scope: !6016)
!6018 = !DILocation(line: 3051, column: 92, scope: !6016)
!6019 = !DILocation(line: 3051, column: 101, scope: !6016)
!6020 = !DILocation(line: 3051, column: 105, scope: !6016)
!6021 = !DILocation(line: 3051, column: 99, scope: !6016)
!6022 = !DILocation(line: 3051, column: 114, scope: !6016)
!6023 = !DILocation(line: 3051, column: 16, scope: !6016)
!6024 = !DILocation(line: 3052, column: 32, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6005, file: !939, line: 3051, column: 120)
!6026 = !DILocation(line: 3052, column: 35, scope: !6025)
!6027 = !DILocation(line: 3052, column: 53, scope: !6025)
!6028 = !DILocation(line: 3052, column: 62, scope: !6025)
!6029 = !DILocation(line: 3052, column: 66, scope: !6025)
!6030 = !DILocation(line: 3052, column: 60, scope: !6025)
!6031 = !DILocation(line: 3052, column: 30, scope: !6025)
!6032 = !DILocation(line: 3053, column: 5, scope: !6025)
!6033 = !DILocation(line: 3055, column: 9, scope: !6034)
!6034 = distinct !DILexicalBlock(scope: !5867, file: !939, line: 3055, column: 9)
!6035 = !DILocation(line: 3055, column: 30, scope: !6034)
!6036 = !DILocation(line: 3055, column: 9, scope: !5867)
!6037 = !DILocation(line: 3056, column: 9, scope: !6034)
!6038 = !DILocation(line: 3058, column: 12, scope: !5867)
!6039 = !DILocation(line: 3058, column: 17, scope: !5867)
!6040 = !DILocation(line: 3058, column: 89, scope: !5867)
!6041 = !DILocation(line: 3058, column: 93, scope: !5867)
!6042 = !DILocation(line: 3058, column: 100, scope: !5867)
!6043 = !DILocation(line: 3058, column: 5, scope: !5867)
!6044 = !DILocation(line: 3060, column: 21, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !5867, file: !939, line: 3060, column: 9)
!6046 = !DILocation(line: 3060, column: 19, scope: !6045)
!6047 = !DILocation(line: 3060, column: 9, scope: !5867)
!6048 = !DILocation(line: 3061, column: 9, scope: !6045)
!6049 = !DILocation(line: 3063, column: 37, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !5867, file: !939, line: 3063, column: 9)
!6051 = !DILocation(line: 3063, column: 42, scope: !6050)
!6052 = !DILocation(line: 3063, column: 16, scope: !6050)
!6053 = !DILocation(line: 3063, column: 14, scope: !6050)
!6054 = !DILocation(line: 3063, column: 9, scope: !5867)
!6055 = !DILocation(line: 3064, column: 30, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !6050, file: !939, line: 3063, column: 53)
!6057 = !DILocation(line: 3064, column: 9, scope: !6056)
!6058 = !DILocation(line: 3065, column: 16, scope: !6056)
!6059 = !DILocation(line: 3065, column: 9, scope: !6056)
!6060 = !DILocation(line: 3070, column: 10, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !5867, file: !939, line: 3070, column: 9)
!6062 = !DILocation(line: 3070, column: 17, scope: !6061)
!6063 = !DILocation(line: 3070, column: 9, scope: !5867)
!6064 = !DILocation(line: 3071, column: 28, scope: !6061)
!6065 = !DILocation(line: 3071, column: 35, scope: !6061)
!6066 = !DILocation(line: 3071, column: 9, scope: !6061)
!6067 = !DILocation(line: 3071, column: 16, scope: !6061)
!6068 = !DILocation(line: 3071, column: 26, scope: !6061)
!6069 = !DILocation(line: 3073, column: 5, scope: !5867)
!6070 = !DILocation(line: 3073, column: 14, scope: !5867)
!6071 = !DILocation(line: 3073, column: 19, scope: !5867)
!6072 = !DILocation(line: 3075, column: 37, scope: !5867)
!6073 = !DILocation(line: 3075, column: 5, scope: !5867)
!6074 = !DILocation(line: 3075, column: 14, scope: !5867)
!6075 = !DILocation(line: 3075, column: 35, scope: !5867)
!6076 = !DILocation(line: 3076, column: 5, scope: !5867)
!6077 = !DILocation(line: 3076, column: 14, scope: !5867)
!6078 = !DILocation(line: 3076, column: 35, scope: !5867)
!6079 = !DILocation(line: 3077, column: 31, scope: !5867)
!6080 = !DILocation(line: 3077, column: 35, scope: !5867)
!6081 = !DILocation(line: 3077, column: 5, scope: !5867)
!6082 = !DILocation(line: 3077, column: 14, scope: !5867)
!6083 = !DILocation(line: 3077, column: 29, scope: !5867)
!6084 = !DILocation(line: 3078, column: 5, scope: !5867)
!6085 = !DILocation(line: 3078, column: 14, scope: !5867)
!6086 = !DILocation(line: 3078, column: 41, scope: !5867)
!6087 = !DILocation(line: 3078, column: 45, scope: !5867)
!6088 = !DILocation(line: 3078, column: 32, scope: !5867)
!6089 = !DILocation(line: 161, column: 20, scope: !3577, inlinedAt: !5871)
!6090 = !DILocation(line: 161, column: 24, scope: !3577, inlinedAt: !5871)
!6091 = !DILocation(line: 161, column: 31, scope: !3577, inlinedAt: !5871)
!6092 = !DILocation(line: 162, column: 12, scope: !3577, inlinedAt: !5871)
!6093 = !DILocation(line: 162, column: 5, scope: !3577, inlinedAt: !5871)
!6094 = !DILocation(line: 3078, column: 32, scope: !6095)
!6095 = !DILexicalBlockFile(scope: !5867, file: !939, discriminator: 1)
!6096 = !DILocation(line: 3079, column: 26, scope: !5867)
!6097 = !DILocation(line: 3079, column: 33, scope: !5867)
!6098 = !DILocation(line: 3079, column: 5, scope: !5867)
!6099 = !DILocation(line: 3079, column: 14, scope: !5867)
!6100 = !DILocation(line: 3079, column: 24, scope: !5867)
!6101 = !DILocation(line: 3080, column: 25, scope: !5867)
!6102 = !DILocation(line: 3080, column: 28, scope: !5867)
!6103 = !DILocation(line: 3080, column: 5, scope: !5867)
!6104 = !DILocation(line: 3080, column: 14, scope: !5867)
!6105 = !DILocation(line: 3080, column: 23, scope: !5867)
!6106 = !DILocation(line: 3081, column: 5, scope: !5867)
!6107 = !DILocation(line: 3082, column: 1, scope: !5867)
!6108 = distinct !DISubprogram(name: "mxf_compute_index_tables", scope: !939, file: !939, line: 1729, type: !4216, isLocal: true, isDefinition: true, scopeLine: 1730, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!6109 = !DILocalVariable(name: "mxf", arg: 1, scope: !6108, file: !939, line: 1729, type: !2594)
!6110 = !DILocation(line: 1729, column: 49, scope: !6108)
!6111 = !DILocalVariable(name: "i", scope: !6108, file: !939, line: 1731, type: !1014)
!6112 = !DILocation(line: 1731, column: 9, scope: !6108)
!6113 = !DILocalVariable(name: "j", scope: !6108, file: !939, line: 1731, type: !1014)
!6114 = !DILocation(line: 1731, column: 12, scope: !6108)
!6115 = !DILocalVariable(name: "k", scope: !6108, file: !939, line: 1731, type: !1014)
!6116 = !DILocation(line: 1731, column: 15, scope: !6108)
!6117 = !DILocalVariable(name: "ret", scope: !6108, file: !939, line: 1731, type: !1014)
!6118 = !DILocation(line: 1731, column: 18, scope: !6108)
!6119 = !DILocalVariable(name: "nb_sorted_segments", scope: !6108, file: !939, line: 1731, type: !1014)
!6120 = !DILocation(line: 1731, column: 23, scope: !6108)
!6121 = !DILocalVariable(name: "sorted_segments", scope: !6108, file: !939, line: 1732, type: !2658)
!6122 = !DILocation(line: 1732, column: 28, scope: !6108)
!6123 = !DILocation(line: 1734, column: 46, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6108, file: !939, line: 1734, column: 9)
!6125 = !DILocation(line: 1734, column: 16, scope: !6124)
!6126 = !DILocation(line: 1734, column: 14, scope: !6124)
!6127 = !DILocation(line: 1734, column: 91, scope: !6124)
!6128 = !DILocation(line: 1735, column: 9, scope: !6124)
!6129 = !DILocation(line: 1735, column: 28, scope: !6124)
!6130 = !DILocation(line: 1734, column: 9, scope: !6131)
!6131 = !DILexicalBlockFile(scope: !6108, file: !939, discriminator: 1)
!6132 = !DILocation(line: 1736, column: 16, scope: !6133)
!6133 = distinct !DILexicalBlock(scope: !6124, file: !939, line: 1735, column: 34)
!6134 = !DILocation(line: 1736, column: 21, scope: !6133)
!6135 = !DILocation(line: 1736, column: 9, scope: !6133)
!6136 = !DILocation(line: 1737, column: 9, scope: !6133)
!6137 = !DILocation(line: 1741, column: 12, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6108, file: !939, line: 1741, column: 5)
!6139 = !DILocation(line: 1741, column: 10, scope: !6138)
!6140 = !DILocation(line: 1741, column: 17, scope: !6141)
!6141 = !DILexicalBlockFile(scope: !6142, file: !939, discriminator: 1)
!6142 = distinct !DILexicalBlock(scope: !6138, file: !939, line: 1741, column: 5)
!6143 = !DILocation(line: 1741, column: 21, scope: !6141)
!6144 = !DILocation(line: 1741, column: 19, scope: !6141)
!6145 = !DILocation(line: 1741, column: 5, scope: !6141)
!6146 = !DILocation(line: 1742, column: 13, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !6148, file: !939, line: 1742, column: 13)
!6148 = distinct !DILexicalBlock(scope: !6142, file: !939, line: 1741, column: 46)
!6149 = !DILocation(line: 1742, column: 15, scope: !6147)
!6150 = !DILocation(line: 1742, column: 20, scope: !6147)
!6151 = !DILocation(line: 1742, column: 39, scope: !6152)
!6152 = !DILexicalBlockFile(scope: !6147, file: !939, discriminator: 1)
!6153 = !DILocation(line: 1742, column: 40, scope: !6152)
!6154 = !DILocation(line: 1742, column: 23, scope: !6152)
!6155 = !DILocation(line: 1742, column: 45, scope: !6152)
!6156 = !DILocation(line: 1742, column: 74, scope: !6152)
!6157 = !DILocation(line: 1742, column: 58, scope: !6152)
!6158 = !DILocation(line: 1742, column: 78, scope: !6152)
!6159 = !DILocation(line: 1742, column: 55, scope: !6152)
!6160 = !DILocation(line: 1742, column: 13, scope: !6152)
!6161 = !DILocation(line: 1743, column: 13, scope: !6147)
!6162 = !DILocation(line: 1743, column: 18, scope: !6147)
!6163 = !DILocation(line: 1743, column: 33, scope: !6147)
!6164 = !DILocation(line: 1744, column: 34, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6147, file: !939, line: 1744, column: 18)
!6166 = !DILocation(line: 1744, column: 35, scope: !6165)
!6167 = !DILocation(line: 1744, column: 18, scope: !6165)
!6168 = !DILocation(line: 1744, column: 40, scope: !6165)
!6169 = !DILocation(line: 1744, column: 68, scope: !6165)
!6170 = !DILocation(line: 1744, column: 52, scope: !6165)
!6171 = !DILocation(line: 1744, column: 72, scope: !6165)
!6172 = !DILocation(line: 1744, column: 49, scope: !6165)
!6173 = !DILocation(line: 1744, column: 18, scope: !6147)
!6174 = !DILocation(line: 1745, column: 20, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !6165, file: !939, line: 1744, column: 82)
!6176 = !DILocation(line: 1745, column: 25, scope: !6175)
!6177 = !DILocation(line: 1745, column: 13, scope: !6175)
!6178 = !DILocation(line: 1746, column: 17, scope: !6175)
!6179 = !DILocation(line: 1747, column: 13, scope: !6175)
!6180 = !DILocation(line: 1749, column: 5, scope: !6148)
!6181 = !DILocation(line: 1741, column: 42, scope: !6182)
!6182 = !DILexicalBlockFile(scope: !6142, file: !939, discriminator: 2)
!6183 = !DILocation(line: 1741, column: 5, scope: !6182)
!6184 = distinct !{!6184, !6185}
!6185 = !DILocation(line: 1741, column: 5, scope: !6108)
!6186 = !DILocation(line: 1751, column: 42, scope: !6108)
!6187 = !DILocation(line: 1751, column: 47, scope: !6108)
!6188 = !DILocation(line: 1751, column: 25, scope: !6108)
!6189 = !DILocation(line: 1751, column: 5, scope: !6108)
!6190 = !DILocation(line: 1751, column: 10, scope: !6108)
!6191 = !DILocation(line: 1751, column: 23, scope: !6108)
!6192 = !DILocation(line: 1753, column: 10, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !6108, file: !939, line: 1753, column: 9)
!6194 = !DILocation(line: 1753, column: 15, scope: !6193)
!6195 = !DILocation(line: 1753, column: 9, scope: !6108)
!6196 = !DILocation(line: 1754, column: 16, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !6193, file: !939, line: 1753, column: 29)
!6198 = !DILocation(line: 1754, column: 21, scope: !6197)
!6199 = !DILocation(line: 1754, column: 9, scope: !6197)
!6200 = !DILocation(line: 1755, column: 13, scope: !6197)
!6201 = !DILocation(line: 1756, column: 9, scope: !6197)
!6202 = !DILocation(line: 1760, column: 16, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !6108, file: !939, line: 1760, column: 5)
!6204 = !DILocation(line: 1760, column: 12, scope: !6203)
!6205 = !DILocation(line: 1760, column: 10, scope: !6203)
!6206 = !DILocation(line: 1760, column: 21, scope: !6207)
!6207 = !DILexicalBlockFile(scope: !6208, file: !939, discriminator: 1)
!6208 = distinct !DILexicalBlock(scope: !6203, file: !939, line: 1760, column: 5)
!6209 = !DILocation(line: 1760, column: 25, scope: !6207)
!6210 = !DILocation(line: 1760, column: 23, scope: !6207)
!6211 = !DILocation(line: 1760, column: 5, scope: !6207)
!6212 = !DILocation(line: 1761, column: 13, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6214, file: !939, line: 1761, column: 13)
!6214 = distinct !DILexicalBlock(scope: !6208, file: !939, line: 1760, column: 50)
!6215 = !DILocation(line: 1761, column: 15, scope: !6213)
!6216 = !DILocation(line: 1761, column: 20, scope: !6213)
!6217 = !DILocation(line: 1761, column: 39, scope: !6218)
!6218 = !DILexicalBlockFile(scope: !6213, file: !939, discriminator: 1)
!6219 = !DILocation(line: 1761, column: 40, scope: !6218)
!6220 = !DILocation(line: 1761, column: 23, scope: !6218)
!6221 = !DILocation(line: 1761, column: 45, scope: !6218)
!6222 = !DILocation(line: 1761, column: 74, scope: !6218)
!6223 = !DILocation(line: 1761, column: 58, scope: !6218)
!6224 = !DILocation(line: 1761, column: 78, scope: !6218)
!6225 = !DILocation(line: 1761, column: 55, scope: !6218)
!6226 = !DILocation(line: 1761, column: 13, scope: !6218)
!6227 = !DILocation(line: 1763, column: 14, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6213, file: !939, line: 1761, column: 89)
!6229 = !DILocation(line: 1764, column: 9, scope: !6228)
!6230 = !DILocation(line: 1766, column: 27, scope: !6214)
!6231 = !DILocation(line: 1766, column: 9, scope: !6214)
!6232 = !DILocation(line: 1766, column: 14, scope: !6214)
!6233 = !DILocation(line: 1766, column: 30, scope: !6214)
!6234 = !DILocation(line: 1766, column: 41, scope: !6214)
!6235 = !DILocation(line: 1767, column: 5, scope: !6214)
!6236 = !DILocation(line: 1760, column: 46, scope: !6237)
!6237 = !DILexicalBlockFile(scope: !6208, file: !939, discriminator: 2)
!6238 = !DILocation(line: 1760, column: 5, scope: !6237)
!6239 = distinct !{!6239, !6240}
!6240 = !DILocation(line: 1760, column: 5, scope: !6108)
!6241 = !DILocation(line: 1769, column: 16, scope: !6242)
!6242 = distinct !DILexicalBlock(scope: !6108, file: !939, line: 1769, column: 5)
!6243 = !DILocation(line: 1769, column: 12, scope: !6242)
!6244 = !DILocation(line: 1769, column: 10, scope: !6242)
!6245 = !DILocation(line: 1769, column: 21, scope: !6246)
!6246 = !DILexicalBlockFile(scope: !6247, file: !939, discriminator: 1)
!6247 = distinct !DILexicalBlock(scope: !6242, file: !939, line: 1769, column: 5)
!6248 = !DILocation(line: 1769, column: 25, scope: !6246)
!6249 = !DILocation(line: 1769, column: 30, scope: !6246)
!6250 = !DILocation(line: 1769, column: 23, scope: !6246)
!6251 = !DILocation(line: 1769, column: 5, scope: !6246)
!6252 = !DILocalVariable(name: "t", scope: !6253, file: !939, line: 1770, type: !2647)
!6253 = distinct !DILexicalBlock(scope: !6247, file: !939, line: 1769, column: 88)
!6254 = !DILocation(line: 1770, column: 24, scope: !6253)
!6255 = !DILocation(line: 1770, column: 47, scope: !6253)
!6256 = !DILocation(line: 1770, column: 29, scope: !6253)
!6257 = !DILocation(line: 1770, column: 34, scope: !6253)
!6258 = !DILocalVariable(name: "mxf_track", scope: !6253, file: !939, line: 1771, type: !1108)
!6259 = !DILocation(line: 1771, column: 19, scope: !6253)
!6260 = !DILocation(line: 1773, column: 40, scope: !6253)
!6261 = !DILocation(line: 1773, column: 43, scope: !6253)
!6262 = !DILocation(line: 1773, column: 23, scope: !6253)
!6263 = !DILocation(line: 1773, column: 9, scope: !6253)
!6264 = !DILocation(line: 1773, column: 12, scope: !6253)
!6265 = !DILocation(line: 1773, column: 21, scope: !6253)
!6266 = !DILocation(line: 1776, column: 14, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6253, file: !939, line: 1776, column: 13)
!6268 = !DILocation(line: 1776, column: 17, scope: !6267)
!6269 = !DILocation(line: 1776, column: 13, scope: !6253)
!6270 = !DILocation(line: 1777, column: 20, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6267, file: !939, line: 1776, column: 27)
!6272 = !DILocation(line: 1777, column: 25, scope: !6271)
!6273 = !DILocation(line: 1777, column: 13, scope: !6271)
!6274 = !DILocation(line: 1779, column: 17, scope: !6271)
!6275 = !DILocation(line: 1780, column: 13, scope: !6271)
!6276 = !DILocation(line: 1783, column: 29, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !6253, file: !939, line: 1783, column: 13)
!6278 = !DILocation(line: 1783, column: 13, scope: !6277)
!6279 = !DILocation(line: 1783, column: 33, scope: !6277)
!6280 = !DILocation(line: 1783, column: 13, scope: !6253)
!6281 = !DILocation(line: 1784, column: 20, scope: !6277)
!6282 = !DILocation(line: 1784, column: 25, scope: !6277)
!6283 = !DILocation(line: 1785, column: 36, scope: !6277)
!6284 = !DILocation(line: 1785, column: 20, scope: !6277)
!6285 = !DILocation(line: 1785, column: 40, scope: !6277)
!6286 = !DILocation(line: 1785, column: 67, scope: !6277)
!6287 = !DILocation(line: 1785, column: 51, scope: !6277)
!6288 = !DILocation(line: 1785, column: 71, scope: !6277)
!6289 = !DILocation(line: 1784, column: 13, scope: !6277)
!6290 = !DILocation(line: 1787, column: 16, scope: !6253)
!6291 = !DILocation(line: 1787, column: 19, scope: !6253)
!6292 = !DILocation(line: 1787, column: 9, scope: !6253)
!6293 = !DILocation(line: 1787, column: 46, scope: !6253)
!6294 = !DILocation(line: 1787, column: 30, scope: !6253)
!6295 = !DILocation(line: 1787, column: 50, scope: !6253)
!6296 = !DILocation(line: 1787, column: 53, scope: !6253)
!6297 = !DILocation(line: 1787, column: 65, scope: !6253)
!6298 = !DILocation(line: 1788, column: 40, scope: !6253)
!6299 = !DILocation(line: 1788, column: 24, scope: !6253)
!6300 = !DILocation(line: 1788, column: 44, scope: !6253)
!6301 = !DILocation(line: 1788, column: 9, scope: !6253)
!6302 = !DILocation(line: 1788, column: 12, scope: !6253)
!6303 = !DILocation(line: 1788, column: 22, scope: !6253)
!6304 = !DILocation(line: 1789, column: 39, scope: !6253)
!6305 = !DILocation(line: 1789, column: 23, scope: !6253)
!6306 = !DILocation(line: 1789, column: 43, scope: !6253)
!6307 = !DILocation(line: 1789, column: 9, scope: !6253)
!6308 = !DILocation(line: 1789, column: 12, scope: !6253)
!6309 = !DILocation(line: 1789, column: 21, scope: !6253)
!6310 = !DILocation(line: 1791, column: 49, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6253, file: !939, line: 1791, column: 13)
!6312 = !DILocation(line: 1791, column: 54, scope: !6311)
!6313 = !DILocation(line: 1791, column: 20, scope: !6311)
!6314 = !DILocation(line: 1791, column: 18, scope: !6311)
!6315 = !DILocation(line: 1791, column: 58, scope: !6311)
!6316 = !DILocation(line: 1791, column: 13, scope: !6253)
!6317 = !DILocation(line: 1792, column: 13, scope: !6311)
!6318 = !DILocation(line: 1794, column: 16, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6253, file: !939, line: 1794, column: 9)
!6320 = !DILocation(line: 1794, column: 14, scope: !6319)
!6321 = !DILocation(line: 1794, column: 21, scope: !6322)
!6322 = !DILexicalBlockFile(scope: !6323, file: !939, discriminator: 1)
!6323 = distinct !DILexicalBlock(scope: !6319, file: !939, line: 1794, column: 9)
!6324 = !DILocation(line: 1794, column: 25, scope: !6322)
!6325 = !DILocation(line: 1794, column: 30, scope: !6322)
!6326 = !DILocation(line: 1794, column: 34, scope: !6322)
!6327 = !DILocation(line: 1794, column: 23, scope: !6322)
!6328 = !DILocation(line: 1794, column: 9, scope: !6322)
!6329 = !DILocalVariable(name: "track", scope: !6330, file: !939, line: 1795, type: !1108)
!6330 = distinct !DILexicalBlock(scope: !6323, file: !939, line: 1794, column: 51)
!6331 = !DILocation(line: 1795, column: 23, scope: !6330)
!6332 = !DILocation(line: 1795, column: 48, scope: !6330)
!6333 = !DILocation(line: 1795, column: 31, scope: !6330)
!6334 = !DILocation(line: 1795, column: 36, scope: !6330)
!6335 = !DILocation(line: 1795, column: 40, scope: !6330)
!6336 = !DILocation(line: 1795, column: 52, scope: !6330)
!6337 = !DILocation(line: 1796, column: 17, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6330, file: !939, line: 1796, column: 17)
!6339 = !DILocation(line: 1796, column: 23, scope: !6338)
!6340 = !DILocation(line: 1796, column: 26, scope: !6341)
!6341 = !DILexicalBlockFile(scope: !6338, file: !939, discriminator: 1)
!6342 = !DILocation(line: 1796, column: 33, scope: !6341)
!6343 = !DILocation(line: 1796, column: 46, scope: !6341)
!6344 = !DILocation(line: 1796, column: 49, scope: !6341)
!6345 = !DILocation(line: 1796, column: 43, scope: !6341)
!6346 = !DILocation(line: 1796, column: 17, scope: !6341)
!6347 = !DILocation(line: 1797, column: 29, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6338, file: !939, line: 1796, column: 60)
!6349 = !DILocation(line: 1797, column: 27, scope: !6348)
!6350 = !DILocation(line: 1798, column: 17, scope: !6348)
!6351 = !DILocation(line: 1800, column: 9, scope: !6330)
!6352 = !DILocation(line: 1794, column: 47, scope: !6353)
!6353 = !DILexicalBlockFile(scope: !6323, file: !939, discriminator: 2)
!6354 = !DILocation(line: 1794, column: 9, scope: !6353)
!6355 = distinct !{!6355, !6356}
!6356 = !DILocation(line: 1794, column: 9, scope: !6253)
!6357 = !DILocation(line: 1803, column: 16, scope: !6358)
!6358 = distinct !DILexicalBlock(scope: !6253, file: !939, line: 1803, column: 9)
!6359 = !DILocation(line: 1803, column: 14, scope: !6358)
!6360 = !DILocation(line: 1803, column: 21, scope: !6361)
!6361 = !DILexicalBlockFile(scope: !6362, file: !939, discriminator: 1)
!6362 = distinct !DILexicalBlock(scope: !6358, file: !939, line: 1803, column: 9)
!6363 = !DILocation(line: 1803, column: 25, scope: !6361)
!6364 = !DILocation(line: 1803, column: 28, scope: !6361)
!6365 = !DILocation(line: 1803, column: 23, scope: !6361)
!6366 = !DILocation(line: 1803, column: 9, scope: !6361)
!6367 = !DILocation(line: 1804, column: 30, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6369, file: !939, line: 1804, column: 17)
!6369 = distinct !DILexicalBlock(scope: !6362, file: !939, line: 1803, column: 46)
!6370 = !DILocation(line: 1804, column: 18, scope: !6368)
!6371 = !DILocation(line: 1804, column: 21, scope: !6368)
!6372 = !DILocation(line: 1804, column: 34, scope: !6368)
!6373 = !DILocation(line: 1804, column: 50, scope: !6368)
!6374 = !DILocation(line: 1804, column: 54, scope: !6368)
!6375 = !DILocation(line: 1804, column: 70, scope: !6376)
!6376 = !DILexicalBlockFile(scope: !6368, file: !939, discriminator: 1)
!6377 = !DILocation(line: 1804, column: 58, scope: !6376)
!6378 = !DILocation(line: 1804, column: 61, scope: !6376)
!6379 = !DILocation(line: 1804, column: 74, scope: !6376)
!6380 = !DILocation(line: 1804, column: 90, scope: !6376)
!6381 = !DILocation(line: 1804, column: 17, scope: !6376)
!6382 = !DILocation(line: 1805, column: 24, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6368, file: !939, line: 1804, column: 95)
!6384 = !DILocation(line: 1805, column: 29, scope: !6383)
!6385 = !DILocation(line: 1806, column: 24, scope: !6383)
!6386 = !DILocation(line: 1806, column: 27, scope: !6383)
!6387 = !DILocation(line: 1806, column: 38, scope: !6383)
!6388 = !DILocation(line: 1805, column: 17, scope: !6383)
!6389 = !DILocation(line: 1807, column: 21, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !6383, file: !939, line: 1807, column: 21)
!6391 = !DILocation(line: 1807, column: 21, scope: !6383)
!6392 = !DILocation(line: 1808, column: 33, scope: !6390)
!6393 = !DILocation(line: 1808, column: 21, scope: !6390)
!6394 = !DILocation(line: 1808, column: 24, scope: !6390)
!6395 = !DILocation(line: 1808, column: 37, scope: !6390)
!6396 = !DILocation(line: 1808, column: 55, scope: !6390)
!6397 = !DILocation(line: 1808, column: 66, scope: !6390)
!6398 = !DILocation(line: 1809, column: 13, scope: !6383)
!6399 = !DILocation(line: 1811, column: 29, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !6369, file: !939, line: 1811, column: 17)
!6401 = !DILocation(line: 1811, column: 17, scope: !6400)
!6402 = !DILocation(line: 1811, column: 20, scope: !6400)
!6403 = !DILocation(line: 1811, column: 33, scope: !6400)
!6404 = !DILocation(line: 1811, column: 17, scope: !6369)
!6405 = !DILocation(line: 1812, column: 17, scope: !6400)
!6406 = !DILocation(line: 1814, column: 17, scope: !6407)
!6407 = distinct !DILexicalBlock(scope: !6369, file: !939, line: 1814, column: 17)
!6408 = !DILocation(line: 1814, column: 20, scope: !6407)
!6409 = !DILocation(line: 1814, column: 32, scope: !6407)
!6410 = !DILocation(line: 1814, column: 17, scope: !6369)
!6411 = !DILocation(line: 1815, column: 24, scope: !6407)
!6412 = !DILocation(line: 1815, column: 29, scope: !6407)
!6413 = !DILocation(line: 1816, column: 24, scope: !6407)
!6414 = !DILocation(line: 1816, column: 27, scope: !6407)
!6415 = !DILocation(line: 1816, column: 38, scope: !6407)
!6416 = !DILocation(line: 1815, column: 17, scope: !6407)
!6417 = !DILocation(line: 1818, column: 18, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6369, file: !939, line: 1818, column: 17)
!6419 = !DILocation(line: 1818, column: 17, scope: !6369)
!6420 = !DILocation(line: 1819, column: 24, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6418, file: !939, line: 1818, column: 29)
!6422 = !DILocation(line: 1819, column: 29, scope: !6421)
!6423 = !DILocation(line: 1819, column: 17, scope: !6421)
!6424 = !DILocation(line: 1820, column: 17, scope: !6421)
!6425 = !DILocation(line: 1826, column: 46, scope: !6369)
!6426 = !DILocation(line: 1826, column: 57, scope: !6369)
!6427 = !DILocation(line: 1826, column: 25, scope: !6369)
!6428 = !DILocation(line: 1826, column: 13, scope: !6369)
!6429 = !DILocation(line: 1826, column: 16, scope: !6369)
!6430 = !DILocation(line: 1826, column: 29, scope: !6369)
!6431 = !DILocation(line: 1826, column: 44, scope: !6369)
!6432 = !DILocation(line: 1827, column: 13, scope: !6369)
!6433 = !DILocation(line: 1803, column: 42, scope: !6434)
!6434 = !DILexicalBlockFile(scope: !6362, file: !939, discriminator: 2)
!6435 = !DILocation(line: 1803, column: 9, scope: !6434)
!6436 = distinct !{!6436, !6437}
!6437 = !DILocation(line: 1803, column: 9, scope: !6253)
!6438 = !DILocation(line: 1829, column: 5, scope: !6253)
!6439 = !DILocation(line: 1769, column: 71, scope: !6440)
!6440 = !DILexicalBlockFile(scope: !6247, file: !939, discriminator: 2)
!6441 = !DILocation(line: 1769, column: 52, scope: !6440)
!6442 = !DILocation(line: 1769, column: 57, scope: !6440)
!6443 = !DILocation(line: 1769, column: 75, scope: !6440)
!6444 = !DILocation(line: 1769, column: 49, scope: !6440)
!6445 = !DILocation(line: 1769, column: 5, scope: !6440)
!6446 = distinct !{!6446, !6447}
!6447 = !DILocation(line: 1769, column: 5, scope: !6108)
!6448 = !DILocation(line: 1831, column: 9, scope: !6108)
!6449 = !DILocation(line: 1831, column: 5, scope: !6108)
!6450 = !DILocation(line: 1833, column: 13, scope: !6108)
!6451 = !DILocation(line: 1833, column: 5, scope: !6108)
!6452 = !DILocation(line: 1834, column: 12, scope: !6108)
!6453 = !DILocation(line: 1834, column: 5, scope: !6108)
!6454 = !DILocation(line: 1835, column: 1, scope: !6108)
!6455 = distinct !DISubprogram(name: "mxf_compute_essence_containers", scope: !939, file: !939, line: 2924, type: !4019, isLocal: true, isDefinition: true, scopeLine: 2925, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!6456 = !DILocalVariable(name: "s", arg: 1, scope: !6455, file: !939, line: 2924, type: !2495)
!6457 = !DILocation(line: 2924, column: 61, scope: !6455)
!6458 = !DILocalVariable(name: "mxf", scope: !6455, file: !939, line: 2926, type: !2594)
!6459 = !DILocation(line: 2926, column: 17, scope: !6455)
!6460 = !DILocation(line: 2926, column: 23, scope: !6455)
!6461 = !DILocation(line: 2926, column: 26, scope: !6455)
!6462 = !DILocalVariable(name: "x", scope: !6455, file: !939, line: 2927, type: !1014)
!6463 = !DILocation(line: 2927, column: 9, scope: !6455)
!6464 = !DILocation(line: 2929, column: 12, scope: !6465)
!6465 = distinct !DILexicalBlock(scope: !6455, file: !939, line: 2929, column: 5)
!6466 = !DILocation(line: 2929, column: 10, scope: !6465)
!6467 = !DILocation(line: 2929, column: 17, scope: !6468)
!6468 = !DILexicalBlockFile(scope: !6469, file: !939, discriminator: 1)
!6469 = distinct !DILexicalBlock(scope: !6465, file: !939, line: 2929, column: 5)
!6470 = !DILocation(line: 2929, column: 21, scope: !6468)
!6471 = !DILocation(line: 2929, column: 26, scope: !6468)
!6472 = !DILocation(line: 2929, column: 19, scope: !6468)
!6473 = !DILocation(line: 2929, column: 5, scope: !6468)
!6474 = !DILocalVariable(name: "p", scope: !6475, file: !939, line: 2930, type: !2600)
!6475 = distinct !DILexicalBlock(scope: !6469, file: !939, line: 2929, column: 49)
!6476 = !DILocation(line: 2930, column: 23, scope: !6475)
!6477 = !DILocation(line: 2930, column: 44, scope: !6475)
!6478 = !DILocation(line: 2930, column: 28, scope: !6475)
!6479 = !DILocation(line: 2930, column: 33, scope: !6475)
!6480 = !DILocalVariable(name: "wrapping", scope: !6475, file: !939, line: 2931, type: !1131)
!6481 = !DILocation(line: 2931, column: 27, scope: !6475)
!6482 = !DILocation(line: 2933, column: 14, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6475, file: !939, line: 2933, column: 13)
!6484 = !DILocation(line: 2933, column: 17, scope: !6483)
!6485 = !DILocation(line: 2933, column: 13, scope: !6475)
!6486 = !DILocation(line: 2934, column: 13, scope: !6483)
!6487 = !DILocation(line: 2940, column: 21, scope: !6475)
!6488 = !DILocation(line: 2940, column: 26, scope: !6475)
!6489 = !DILocation(line: 2940, column: 29, scope: !6475)
!6490 = !DILocation(line: 2940, column: 20, scope: !6475)
!6491 = !DILocation(line: 2940, column: 20, scope: !6492)
!6492 = !DILexicalBlockFile(scope: !6475, file: !939, discriminator: 1)
!6493 = !DILocation(line: 2940, column: 85, scope: !6494)
!6494 = !DILexicalBlockFile(scope: !6475, file: !939, discriminator: 2)
!6495 = !DILocation(line: 2940, column: 88, scope: !6494)
!6496 = !DILocation(line: 2940, column: 91, scope: !6494)
!6497 = !DILocation(line: 2940, column: 56, scope: !6494)
!6498 = !DILocation(line: 2940, column: 20, scope: !6494)
!6499 = !DILocation(line: 2940, column: 20, scope: !6500)
!6500 = !DILexicalBlockFile(scope: !6475, file: !939, discriminator: 3)
!6501 = !DILocation(line: 2940, column: 18, scope: !6500)
!6502 = !DILocation(line: 2942, column: 13, scope: !6503)
!6503 = distinct !DILexicalBlock(scope: !6475, file: !939, line: 2942, column: 13)
!6504 = !DILocation(line: 2942, column: 22, scope: !6503)
!6505 = !DILocation(line: 2942, column: 13, scope: !6475)
!6506 = !DILocation(line: 2943, column: 33, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6503, file: !939, line: 2942, column: 38)
!6508 = !DILocation(line: 2943, column: 36, scope: !6507)
!6509 = !DILocation(line: 2943, column: 54, scope: !6507)
!6510 = !DILocation(line: 2943, column: 65, scope: !6507)
!6511 = !DILocation(line: 2943, column: 68, scope: !6507)
!6512 = !DILocation(line: 2943, column: 86, scope: !6507)
!6513 = !DILocation(line: 2943, column: 63, scope: !6507)
!6514 = !DILocation(line: 2943, column: 13, scope: !6507)
!6515 = !DILocation(line: 2943, column: 16, scope: !6507)
!6516 = !DILocation(line: 2943, column: 31, scope: !6507)
!6517 = !DILocation(line: 2944, column: 33, scope: !6507)
!6518 = !DILocation(line: 2944, column: 36, scope: !6507)
!6519 = !DILocation(line: 2944, column: 54, scope: !6507)
!6520 = !DILocation(line: 2944, column: 13, scope: !6507)
!6521 = !DILocation(line: 2944, column: 16, scope: !6507)
!6522 = !DILocation(line: 2944, column: 31, scope: !6507)
!6523 = !DILocation(line: 2945, column: 9, scope: !6507)
!6524 = !DILocation(line: 2946, column: 33, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6503, file: !939, line: 2945, column: 16)
!6526 = !DILocation(line: 2946, column: 36, scope: !6525)
!6527 = !DILocation(line: 2946, column: 54, scope: !6525)
!6528 = !DILocation(line: 2946, column: 13, scope: !6525)
!6529 = !DILocation(line: 2946, column: 16, scope: !6525)
!6530 = !DILocation(line: 2946, column: 31, scope: !6525)
!6531 = !DILocation(line: 2949, column: 17, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6525, file: !939, line: 2949, column: 17)
!6533 = !DILocation(line: 2949, column: 21, scope: !6532)
!6534 = !DILocation(line: 2949, column: 26, scope: !6532)
!6535 = !DILocation(line: 2949, column: 43, scope: !6532)
!6536 = !DILocation(line: 2949, column: 19, scope: !6532)
!6537 = !DILocation(line: 2949, column: 17, scope: !6525)
!6538 = !DILocation(line: 2950, column: 53, scope: !6532)
!6539 = !DILocation(line: 2950, column: 54, scope: !6532)
!6540 = !DILocation(line: 2950, column: 37, scope: !6532)
!6541 = !DILocation(line: 2950, column: 42, scope: !6532)
!6542 = !DILocation(line: 2950, column: 58, scope: !6532)
!6543 = !DILocation(line: 2950, column: 75, scope: !6532)
!6544 = !DILocation(line: 2950, column: 78, scope: !6532)
!6545 = !DILocation(line: 2950, column: 73, scope: !6532)
!6546 = !DILocation(line: 2950, column: 17, scope: !6532)
!6547 = !DILocation(line: 2950, column: 20, scope: !6532)
!6548 = !DILocation(line: 2950, column: 35, scope: !6532)
!6549 = !DILocation(line: 2952, column: 17, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6525, file: !939, line: 2952, column: 17)
!6551 = !DILocation(line: 2952, column: 20, scope: !6550)
!6552 = !DILocation(line: 2952, column: 35, scope: !6550)
!6553 = !DILocation(line: 2952, column: 17, scope: !6525)
!6554 = !DILocation(line: 2954, column: 17, scope: !6555)
!6555 = distinct !DILexicalBlock(scope: !6550, file: !939, line: 2952, column: 40)
!6556 = !DILocation(line: 2954, column: 20, scope: !6555)
!6557 = !DILocation(line: 2954, column: 35, scope: !6555)
!6558 = !DILocation(line: 2955, column: 24, scope: !6555)
!6559 = !DILocation(line: 2955, column: 29, scope: !6555)
!6560 = !DILocation(line: 2957, column: 24, scope: !6555)
!6561 = !DILocation(line: 2957, column: 25, scope: !6555)
!6562 = !DILocation(line: 2957, column: 45, scope: !6555)
!6563 = !DILocation(line: 2957, column: 46, scope: !6555)
!6564 = !DILocation(line: 2957, column: 29, scope: !6555)
!6565 = !DILocation(line: 2957, column: 34, scope: !6555)
!6566 = !DILocation(line: 2957, column: 50, scope: !6555)
!6567 = !DILocation(line: 2955, column: 17, scope: !6555)
!6568 = !DILocation(line: 2958, column: 13, scope: !6555)
!6569 = !DILocation(line: 2960, column: 5, scope: !6475)
!6570 = !DILocation(line: 2929, column: 45, scope: !6571)
!6571 = !DILexicalBlockFile(scope: !6469, file: !939, discriminator: 2)
!6572 = !DILocation(line: 2929, column: 5, scope: !6571)
!6573 = distinct !{!6573, !6574}
!6574 = !DILocation(line: 2929, column: 5, scope: !6455)
!6575 = !DILocation(line: 2961, column: 1, scope: !6455)
!6576 = distinct !DISubprogram(name: "mxf_compute_edit_units_per_packet", scope: !939, file: !939, line: 2983, type: !6577, isLocal: true, isDefinition: true, scopeLine: 2984, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!6577 = !DISubroutineType(types: !6578)
!6578 = !{null, !2594, !1569}
!6579 = !DILocalVariable(name: "mxf", arg: 1, scope: !6576, file: !939, line: 2983, type: !2594)
!6580 = !DILocation(line: 2983, column: 59, scope: !6576)
!6581 = !DILocalVariable(name: "st", arg: 2, scope: !6576, file: !939, line: 2983, type: !1569)
!6582 = !DILocation(line: 2983, column: 74, scope: !6576)
!6583 = !DILocalVariable(name: "track", scope: !6576, file: !939, line: 2985, type: !1108)
!6584 = !DILocation(line: 2985, column: 15, scope: !6576)
!6585 = !DILocation(line: 2985, column: 23, scope: !6576)
!6586 = !DILocation(line: 2985, column: 27, scope: !6576)
!6587 = !DILocalVariable(name: "t", scope: !6576, file: !939, line: 2986, type: !2647)
!6588 = !DILocation(line: 2986, column: 20, scope: !6576)
!6589 = !DILocation(line: 2988, column: 10, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6576, file: !939, line: 2988, column: 9)
!6591 = !DILocation(line: 2988, column: 9, scope: !6576)
!6592 = !DILocation(line: 2989, column: 9, scope: !6590)
!6593 = !DILocation(line: 2990, column: 5, scope: !6576)
!6594 = !DILocation(line: 2990, column: 12, scope: !6576)
!6595 = !DILocation(line: 2990, column: 34, scope: !6576)
!6596 = !DILocation(line: 2991, column: 9, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6576, file: !939, line: 2991, column: 9)
!6598 = !DILocation(line: 2991, column: 16, scope: !6597)
!6599 = !DILocation(line: 2991, column: 25, scope: !6597)
!6600 = !DILocation(line: 2991, column: 9, scope: !6576)
!6601 = !DILocation(line: 2992, column: 9, scope: !6597)
!6602 = !DILocation(line: 2994, column: 30, scope: !6576)
!6603 = !DILocation(line: 2994, column: 35, scope: !6576)
!6604 = !DILocation(line: 2994, column: 42, scope: !6576)
!6605 = !DILocation(line: 2994, column: 9, scope: !6576)
!6606 = !DILocation(line: 2994, column: 7, scope: !6576)
!6607 = !DILocation(line: 2997, column: 9, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6576, file: !939, line: 2997, column: 9)
!6609 = !DILocation(line: 2997, column: 13, scope: !6608)
!6610 = !DILocation(line: 2997, column: 23, scope: !6608)
!6611 = !DILocation(line: 2997, column: 34, scope: !6608)
!6612 = !DILocation(line: 2997, column: 56, scope: !6608)
!6613 = !DILocation(line: 2998, column: 17, scope: !6608)
!6614 = !DILocation(line: 2998, column: 21, scope: !6608)
!6615 = !DILocation(line: 2998, column: 31, scope: !6608)
!6616 = !DILocation(line: 2998, column: 10, scope: !6608)
!6617 = !DILocation(line: 2998, column: 41, scope: !6608)
!6618 = !DILocation(line: 2999, column: 10, scope: !6608)
!6619 = !DILocation(line: 2999, column: 12, scope: !6608)
!6620 = !DILocation(line: 3000, column: 9, scope: !6608)
!6621 = !DILocation(line: 3000, column: 12, scope: !6608)
!6622 = !DILocation(line: 3000, column: 24, scope: !6608)
!6623 = !DILocation(line: 3000, column: 29, scope: !6608)
!6624 = !DILocation(line: 3001, column: 9, scope: !6608)
!6625 = !DILocation(line: 3001, column: 12, scope: !6608)
!6626 = !DILocation(line: 3001, column: 25, scope: !6608)
!6627 = !DILocation(line: 3001, column: 46, scope: !6608)
!6628 = !DILocation(line: 2997, column: 9, scope: !6629)
!6629 = !DILexicalBlockFile(scope: !6576, file: !939, discriminator: 1)
!6630 = !DILocation(line: 3002, column: 9, scope: !6608)
!6631 = !DILocation(line: 3008, column: 44, scope: !6576)
!6632 = !DILocation(line: 3008, column: 51, scope: !6576)
!6633 = !DILocation(line: 3008, column: 61, scope: !6576)
!6634 = !DILocation(line: 3008, column: 67, scope: !6576)
!6635 = !DILocation(line: 3008, column: 74, scope: !6576)
!6636 = !DILocation(line: 3008, column: 84, scope: !6576)
!6637 = !DILocation(line: 3008, column: 65, scope: !6576)
!6638 = !DILocation(line: 3008, column: 88, scope: !6576)
!6639 = !DILocation(line: 3008, column: 41, scope: !6576)
!6640 = !DILocation(line: 3008, column: 37, scope: !6576)
!6641 = !DILocation(line: 3008, column: 37, scope: !6629)
!6642 = !DILocation(line: 3008, column: 103, scope: !6643)
!6643 = !DILexicalBlockFile(scope: !6576, file: !939, discriminator: 2)
!6644 = !DILocation(line: 3008, column: 110, scope: !6643)
!6645 = !DILocation(line: 3008, column: 120, scope: !6643)
!6646 = !DILocation(line: 3008, column: 126, scope: !6643)
!6647 = !DILocation(line: 3008, column: 133, scope: !6643)
!6648 = !DILocation(line: 3008, column: 143, scope: !6643)
!6649 = !DILocation(line: 3008, column: 124, scope: !6643)
!6650 = !DILocation(line: 3008, column: 147, scope: !6643)
!6651 = !DILocation(line: 3008, column: 37, scope: !6643)
!6652 = !DILocation(line: 3008, column: 37, scope: !6653)
!6653 = !DILexicalBlockFile(scope: !6576, file: !939, discriminator: 3)
!6654 = !DILocation(line: 3008, column: 5, scope: !6653)
!6655 = !DILocation(line: 3008, column: 12, scope: !6653)
!6656 = !DILocation(line: 3008, column: 34, scope: !6653)
!6657 = !DILocation(line: 3009, column: 1, scope: !6576)
!6658 = !DILocation(line: 3009, column: 1, scope: !6629)
!6659 = distinct !DISubprogram(name: "klv_decode_ber_length", scope: !939, file: !939, line: 369, type: !2587, isLocal: true, isDefinition: true, scopeLine: 370, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!6660 = !DILocalVariable(name: "pb", arg: 1, scope: !6659, file: !939, line: 369, type: !1501)
!6661 = !DILocation(line: 369, column: 51, scope: !6659)
!6662 = !DILocalVariable(name: "size", scope: !6659, file: !939, line: 371, type: !1125)
!6663 = !DILocation(line: 371, column: 14, scope: !6659)
!6664 = !DILocation(line: 371, column: 29, scope: !6659)
!6665 = !DILocation(line: 371, column: 21, scope: !6659)
!6666 = !DILocation(line: 372, column: 9, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6659, file: !939, line: 372, column: 9)
!6668 = !DILocation(line: 372, column: 14, scope: !6667)
!6669 = !DILocation(line: 372, column: 9, scope: !6659)
!6670 = !DILocalVariable(name: "bytes_num", scope: !6671, file: !939, line: 373, type: !1014)
!6671 = distinct !DILexicalBlock(scope: !6667, file: !939, line: 372, column: 22)
!6672 = !DILocation(line: 373, column: 13, scope: !6671)
!6673 = !DILocation(line: 373, column: 25, scope: !6671)
!6674 = !DILocation(line: 373, column: 30, scope: !6671)
!6675 = !DILocation(line: 375, column: 13, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6671, file: !939, line: 375, column: 13)
!6677 = !DILocation(line: 375, column: 23, scope: !6676)
!6678 = !DILocation(line: 375, column: 13, scope: !6671)
!6679 = !DILocation(line: 376, column: 13, scope: !6676)
!6680 = !DILocation(line: 377, column: 14, scope: !6671)
!6681 = !DILocation(line: 378, column: 9, scope: !6671)
!6682 = !DILocation(line: 378, column: 25, scope: !6683)
!6683 = !DILexicalBlockFile(scope: !6671, file: !939, discriminator: 1)
!6684 = !DILocation(line: 378, column: 9, scope: !6683)
!6685 = !DILocation(line: 379, column: 20, scope: !6671)
!6686 = !DILocation(line: 379, column: 25, scope: !6671)
!6687 = !DILocation(line: 379, column: 40, scope: !6671)
!6688 = !DILocation(line: 379, column: 32, scope: !6671)
!6689 = !DILocation(line: 379, column: 30, scope: !6671)
!6690 = !DILocation(line: 379, column: 18, scope: !6671)
!6691 = !DILocation(line: 378, column: 9, scope: !6692)
!6692 = !DILexicalBlockFile(scope: !6671, file: !939, discriminator: 2)
!6693 = distinct !{!6693, !6681}
!6694 = !DILocation(line: 380, column: 5, scope: !6671)
!6695 = !DILocation(line: 381, column: 9, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !6659, file: !939, line: 381, column: 9)
!6697 = !DILocation(line: 381, column: 14, scope: !6696)
!6698 = !DILocation(line: 381, column: 9, scope: !6659)
!6699 = !DILocation(line: 382, column: 9, scope: !6696)
!6700 = !DILocation(line: 383, column: 12, scope: !6659)
!6701 = !DILocation(line: 383, column: 5, scope: !6659)
!6702 = !DILocation(line: 384, column: 1, scope: !6659)
!6703 = distinct !DISubprogram(name: "mxf_seek_to_previous_partition", scope: !939, file: !939, line: 2812, type: !4216, isLocal: true, isDefinition: true, scopeLine: 2813, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!6704 = !DILocalVariable(name: "mxf", arg: 1, scope: !6703, file: !939, line: 2812, type: !2594)
!6705 = !DILocation(line: 2812, column: 55, scope: !6703)
!6706 = !DILocalVariable(name: "pb", scope: !6703, file: !939, line: 2814, type: !1501)
!6707 = !DILocation(line: 2814, column: 18, scope: !6703)
!6708 = !DILocation(line: 2814, column: 23, scope: !6703)
!6709 = !DILocation(line: 2814, column: 28, scope: !6703)
!6710 = !DILocation(line: 2814, column: 32, scope: !6703)
!6711 = !DILocalVariable(name: "klv", scope: !6703, file: !939, line: 2815, type: !2498)
!6712 = !DILocation(line: 2815, column: 15, scope: !6703)
!6713 = !DILocalVariable(name: "current_partition_ofs", scope: !6703, file: !939, line: 2816, type: !1015)
!6714 = !DILocation(line: 2816, column: 13, scope: !6703)
!6715 = !DILocalVariable(name: "ret", scope: !6703, file: !939, line: 2817, type: !1014)
!6716 = !DILocation(line: 2817, column: 9, scope: !6703)
!6717 = !DILocation(line: 2819, column: 10, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !6703, file: !939, line: 2819, column: 9)
!6719 = !DILocation(line: 2819, column: 15, scope: !6718)
!6720 = !DILocation(line: 2819, column: 33, scope: !6718)
!6721 = !DILocation(line: 2820, column: 9, scope: !6718)
!6722 = !DILocation(line: 2820, column: 14, scope: !6718)
!6723 = !DILocation(line: 2820, column: 23, scope: !6718)
!6724 = !DILocation(line: 2820, column: 28, scope: !6718)
!6725 = !DILocation(line: 2820, column: 47, scope: !6718)
!6726 = !DILocation(line: 2820, column: 21, scope: !6718)
!6727 = !DILocation(line: 2820, column: 69, scope: !6718)
!6728 = !DILocation(line: 2820, column: 74, scope: !6718)
!6729 = !DILocation(line: 2820, column: 66, scope: !6718)
!6730 = !DILocation(line: 2819, column: 9, scope: !6731)
!6731 = !DILexicalBlockFile(scope: !6703, file: !939, discriminator: 1)
!6732 = !DILocation(line: 2821, column: 9, scope: !6718)
!6733 = !DILocation(line: 2824, column: 29, scope: !6703)
!6734 = !DILocation(line: 2824, column: 34, scope: !6703)
!6735 = !DILocation(line: 2824, column: 53, scope: !6703)
!6736 = !DILocation(line: 2824, column: 27, scope: !6703)
!6737 = !DILocation(line: 2825, column: 15, scope: !6703)
!6738 = !DILocation(line: 2825, column: 19, scope: !6703)
!6739 = !DILocation(line: 2825, column: 24, scope: !6703)
!6740 = !DILocation(line: 2825, column: 33, scope: !6703)
!6741 = !DILocation(line: 2825, column: 38, scope: !6703)
!6742 = !DILocation(line: 2825, column: 57, scope: !6703)
!6743 = !DILocation(line: 2825, column: 31, scope: !6703)
!6744 = !DILocation(line: 2825, column: 5, scope: !6703)
!6745 = !DILocation(line: 2826, column: 5, scope: !6703)
!6746 = !DILocation(line: 2826, column: 10, scope: !6703)
!6747 = !DILocation(line: 2826, column: 28, scope: !6703)
!6748 = !DILocation(line: 2828, column: 12, scope: !6703)
!6749 = !DILocation(line: 2828, column: 17, scope: !6703)
!6750 = !DILocation(line: 2828, column: 5, scope: !6703)
!6751 = !DILocation(line: 2833, column: 38, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6703, file: !939, line: 2833, column: 9)
!6753 = !DILocation(line: 2833, column: 16, scope: !6752)
!6754 = !DILocation(line: 2833, column: 14, scope: !6752)
!6755 = !DILocation(line: 2833, column: 43, scope: !6752)
!6756 = !DILocation(line: 2833, column: 9, scope: !6703)
!6757 = !DILocation(line: 2834, column: 16, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6752, file: !939, line: 2833, column: 48)
!6759 = !DILocation(line: 2834, column: 21, scope: !6758)
!6760 = !DILocation(line: 2834, column: 9, scope: !6758)
!6761 = !DILocation(line: 2835, column: 16, scope: !6758)
!6762 = !DILocation(line: 2835, column: 9, scope: !6758)
!6763 = !DILocation(line: 2838, column: 40, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !6703, file: !939, line: 2838, column: 9)
!6765 = !DILocation(line: 2838, column: 36, scope: !6764)
!6766 = !DILocation(line: 2838, column: 10, scope: !6764)
!6767 = !DILocation(line: 2838, column: 9, scope: !6703)
!6768 = !DILocation(line: 2839, column: 16, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6764, file: !939, line: 2838, column: 46)
!6770 = !DILocation(line: 2839, column: 21, scope: !6769)
!6771 = !DILocation(line: 2839, column: 101, scope: !6769)
!6772 = !DILocation(line: 2839, column: 9, scope: !6769)
!6773 = !DILocation(line: 2840, column: 9, scope: !6769)
!6774 = !DILocation(line: 2847, column: 13, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6703, file: !939, line: 2847, column: 9)
!6776 = !DILocation(line: 2847, column: 23, scope: !6775)
!6777 = !DILocation(line: 2847, column: 20, scope: !6775)
!6778 = !DILocation(line: 2847, column: 9, scope: !6703)
!6779 = !DILocation(line: 2848, column: 16, scope: !6780)
!6780 = distinct !DILexicalBlock(scope: !6775, file: !939, line: 2847, column: 46)
!6781 = !DILocation(line: 2848, column: 21, scope: !6780)
!6782 = !DILocation(line: 2849, column: 56, scope: !6780)
!6783 = !DILocation(line: 2848, column: 9, scope: !6780)
!6784 = !DILocation(line: 2850, column: 9, scope: !6780)
!6785 = !DILocation(line: 2853, column: 30, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6703, file: !939, line: 2853, column: 9)
!6787 = !DILocation(line: 2853, column: 16, scope: !6786)
!6788 = !DILocation(line: 2853, column: 14, scope: !6786)
!6789 = !DILocation(line: 2853, column: 72, scope: !6786)
!6790 = !DILocation(line: 2853, column: 9, scope: !6703)
!6791 = !DILocation(line: 2854, column: 16, scope: !6786)
!6792 = !DILocation(line: 2854, column: 9, scope: !6786)
!6793 = !DILocation(line: 2856, column: 5, scope: !6703)
!6794 = !DILocation(line: 2857, column: 1, scope: !6703)
!6795 = distinct !DISubprogram(name: "mxf_read_partition_pack", scope: !939, file: !939, line: 654, type: !2450, isLocal: true, isDefinition: true, scopeLine: 655, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!6796 = !DILocation(line: 557, column: 77, scope: !2586, inlinedAt: !6797)
!6797 = distinct !DILocation(line: 684, column: 30, scope: !6795)
!6798 = !DILocalVariable(name: "arg", arg: 1, scope: !6795, file: !939, line: 654, type: !1020)
!6799 = !DILocation(line: 654, column: 42, scope: !6795)
!6800 = !DILocalVariable(name: "pb", arg: 2, scope: !6795, file: !939, line: 654, type: !1501)
!6801 = !DILocation(line: 654, column: 60, scope: !6795)
!6802 = !DILocalVariable(name: "tag", arg: 3, scope: !6795, file: !939, line: 654, type: !1014)
!6803 = !DILocation(line: 654, column: 68, scope: !6795)
!6804 = !DILocalVariable(name: "size", arg: 4, scope: !6795, file: !939, line: 654, type: !1014)
!6805 = !DILocation(line: 654, column: 77, scope: !6795)
!6806 = !DILocalVariable(name: "uid", arg: 5, scope: !6795, file: !939, line: 654, type: !1017)
!6807 = !DILocation(line: 654, column: 87, scope: !6795)
!6808 = !DILocalVariable(name: "klv_offset", arg: 6, scope: !6795, file: !939, line: 654, type: !1015)
!6809 = !DILocation(line: 654, column: 100, scope: !6795)
!6810 = !DILocalVariable(name: "mxf", scope: !6795, file: !939, line: 656, type: !2594)
!6811 = !DILocation(line: 656, column: 17, scope: !6795)
!6812 = !DILocation(line: 656, column: 23, scope: !6795)
!6813 = !DILocalVariable(name: "partition", scope: !6795, file: !939, line: 657, type: !2600)
!6814 = !DILocation(line: 657, column: 19, scope: !6795)
!6815 = !DILocalVariable(name: "tmp_part", scope: !6795, file: !939, line: 657, type: !2600)
!6816 = !DILocation(line: 657, column: 31, scope: !6795)
!6817 = !DILocalVariable(name: "op", scope: !6795, file: !939, line: 658, type: !1026)
!6818 = !DILocation(line: 658, column: 9, scope: !6795)
!6819 = !DILocalVariable(name: "footer_partition", scope: !6795, file: !939, line: 659, type: !1125)
!6820 = !DILocation(line: 659, column: 14, scope: !6795)
!6821 = !DILocalVariable(name: "nb_essence_containers", scope: !6795, file: !939, line: 660, type: !1004)
!6822 = !DILocation(line: 660, column: 14, scope: !6795)
!6823 = !DILocation(line: 662, column: 9, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6795, file: !939, line: 662, column: 9)
!6825 = !DILocation(line: 662, column: 14, scope: !6824)
!6826 = !DILocation(line: 662, column: 31, scope: !6824)
!6827 = !DILocation(line: 662, column: 9, scope: !6795)
!6828 = !DILocation(line: 663, column: 9, scope: !6824)
!6829 = !DILocation(line: 665, column: 33, scope: !6795)
!6830 = !DILocation(line: 665, column: 38, scope: !6795)
!6831 = !DILocation(line: 665, column: 50, scope: !6795)
!6832 = !DILocation(line: 665, column: 55, scope: !6795)
!6833 = !DILocation(line: 665, column: 72, scope: !6795)
!6834 = !DILocation(line: 665, column: 16, scope: !6795)
!6835 = !DILocation(line: 665, column: 14, scope: !6795)
!6836 = !DILocation(line: 666, column: 10, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6795, file: !939, line: 666, column: 9)
!6838 = !DILocation(line: 666, column: 9, scope: !6795)
!6839 = !DILocation(line: 667, column: 9, scope: !6837)
!6840 = !DILocation(line: 668, column: 23, scope: !6795)
!6841 = !DILocation(line: 668, column: 5, scope: !6795)
!6842 = !DILocation(line: 668, column: 10, scope: !6795)
!6843 = !DILocation(line: 668, column: 21, scope: !6795)
!6844 = !DILocation(line: 670, column: 9, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !6795, file: !939, line: 670, column: 9)
!6846 = !DILocation(line: 670, column: 14, scope: !6845)
!6847 = !DILocation(line: 670, column: 9, scope: !6795)
!6848 = !DILocation(line: 673, column: 34, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6845, file: !939, line: 670, column: 32)
!6850 = !DILocation(line: 673, column: 39, scope: !6849)
!6851 = !DILocation(line: 673, column: 61, scope: !6849)
!6852 = !DILocation(line: 673, column: 18, scope: !6849)
!6853 = !DILocation(line: 673, column: 23, scope: !6849)
!6854 = !DILocation(line: 673, column: 9, scope: !6849)
!6855 = !DILocation(line: 674, column: 34, scope: !6849)
!6856 = !DILocation(line: 674, column: 39, scope: !6849)
!6857 = !DILocation(line: 674, column: 18, scope: !6849)
!6858 = !DILocation(line: 674, column: 23, scope: !6849)
!6859 = !DILocation(line: 675, column: 18, scope: !6849)
!6860 = !DILocation(line: 675, column: 23, scope: !6849)
!6861 = !DILocation(line: 675, column: 42, scope: !6849)
!6862 = !DILocation(line: 675, column: 47, scope: !6849)
!6863 = !DILocation(line: 675, column: 40, scope: !6849)
!6864 = !DILocation(line: 675, column: 17, scope: !6849)
!6865 = !DILocation(line: 675, column: 70, scope: !6849)
!6866 = !DILocation(line: 676, column: 63, scope: !6849)
!6867 = !DILocation(line: 676, column: 68, scope: !6849)
!6868 = !DILocation(line: 676, column: 47, scope: !6849)
!6869 = !DILocation(line: 676, column: 52, scope: !6849)
!6870 = !DILocation(line: 676, column: 21, scope: !6849)
!6871 = !DILocation(line: 676, column: 26, scope: !6849)
!6872 = !DILocation(line: 676, column: 44, scope: !6849)
!6873 = !DILocation(line: 676, column: 19, scope: !6849)
!6874 = !DILocation(line: 677, column: 5, scope: !6849)
!6875 = !DILocation(line: 678, column: 9, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6845, file: !939, line: 677, column: 12)
!6877 = !DILocation(line: 678, column: 14, scope: !6876)
!6878 = !DILocation(line: 678, column: 36, scope: !6876)
!6879 = !DILocation(line: 679, column: 63, scope: !6876)
!6880 = !DILocation(line: 679, column: 68, scope: !6876)
!6881 = !DILocation(line: 679, column: 47, scope: !6876)
!6882 = !DILocation(line: 679, column: 52, scope: !6876)
!6883 = !DILocation(line: 679, column: 21, scope: !6876)
!6884 = !DILocation(line: 679, column: 26, scope: !6876)
!6885 = !DILocation(line: 679, column: 44, scope: !6876)
!6886 = !DILocation(line: 679, column: 19, scope: !6876)
!6887 = !DILocation(line: 682, column: 12, scope: !6795)
!6888 = !DILocation(line: 682, column: 5, scope: !6795)
!6889 = !DILocation(line: 683, column: 5, scope: !6795)
!6890 = !DILocation(line: 683, column: 10, scope: !6795)
!6891 = !DILocation(line: 683, column: 26, scope: !6795)
!6892 = !DILocation(line: 684, column: 40, scope: !6795)
!6893 = !DILocation(line: 684, column: 30, scope: !6795)
!6894 = !DILocation(line: 559, column: 22, scope: !2586, inlinedAt: !6797)
!6895 = !DILocation(line: 559, column: 12, scope: !2586, inlinedAt: !6797)
!6896 = !DILocation(line: 684, column: 46, scope: !6795)
!6897 = !DILocation(line: 684, column: 44, scope: !6795)
!6898 = !DILocation(line: 684, column: 59, scope: !6795)
!6899 = !DILocation(line: 684, column: 57, scope: !6795)
!6900 = !DILocation(line: 684, column: 5, scope: !6795)
!6901 = !DILocation(line: 684, column: 16, scope: !6795)
!6902 = !DILocation(line: 684, column: 28, scope: !6795)
!6903 = !DILocation(line: 685, column: 27, scope: !6795)
!6904 = !DILocation(line: 685, column: 5, scope: !6795)
!6905 = !DILocation(line: 685, column: 16, scope: !6795)
!6906 = !DILocation(line: 685, column: 25, scope: !6795)
!6907 = !DILocation(line: 687, column: 12, scope: !6795)
!6908 = !DILocation(line: 687, column: 5, scope: !6795)
!6909 = !DILocation(line: 689, column: 9, scope: !6910)
!6910 = distinct !DILexicalBlock(scope: !6795, file: !939, line: 687, column: 21)
!6911 = !DILocation(line: 689, column: 20, scope: !6910)
!6912 = !DILocation(line: 689, column: 25, scope: !6910)
!6913 = !DILocation(line: 690, column: 9, scope: !6910)
!6914 = !DILocation(line: 692, column: 9, scope: !6910)
!6915 = !DILocation(line: 692, column: 20, scope: !6910)
!6916 = !DILocation(line: 692, column: 25, scope: !6910)
!6917 = !DILocation(line: 693, column: 9, scope: !6910)
!6918 = !DILocation(line: 695, column: 9, scope: !6910)
!6919 = !DILocation(line: 695, column: 20, scope: !6910)
!6920 = !DILocation(line: 695, column: 25, scope: !6910)
!6921 = !DILocation(line: 696, column: 9, scope: !6910)
!6922 = !DILocation(line: 698, column: 16, scope: !6910)
!6923 = !DILocation(line: 698, column: 21, scope: !6910)
!6924 = !DILocation(line: 698, column: 60, scope: !6910)
!6925 = !DILocation(line: 698, column: 9, scope: !6910)
!6926 = !DILocation(line: 699, column: 9, scope: !6910)
!6927 = !DILocation(line: 703, column: 25, scope: !6795)
!6928 = !DILocation(line: 703, column: 36, scope: !6795)
!6929 = !DILocation(line: 703, column: 41, scope: !6795)
!6930 = !DILocation(line: 703, column: 51, scope: !6795)
!6931 = !DILocation(line: 703, column: 56, scope: !6932)
!6932 = !DILexicalBlockFile(scope: !6795, file: !939, discriminator: 1)
!6933 = !DILocation(line: 703, column: 64, scope: !6932)
!6934 = !DILocation(line: 703, column: 54, scope: !6932)
!6935 = !DILocation(line: 703, column: 51, scope: !6932)
!6936 = !DILocation(line: 703, column: 51, scope: !6937)
!6937 = !DILexicalBlockFile(scope: !6795, file: !939, discriminator: 2)
!6938 = !DILocation(line: 703, column: 5, scope: !6937)
!6939 = !DILocation(line: 703, column: 16, scope: !6937)
!6940 = !DILocation(line: 703, column: 23, scope: !6937)
!6941 = !DILocation(line: 704, column: 27, scope: !6795)
!6942 = !DILocation(line: 704, column: 35, scope: !6795)
!6943 = !DILocation(line: 704, column: 5, scope: !6795)
!6944 = !DILocation(line: 704, column: 16, scope: !6795)
!6945 = !DILocation(line: 704, column: 25, scope: !6795)
!6946 = !DILocation(line: 705, column: 15, scope: !6795)
!6947 = !DILocation(line: 705, column: 5, scope: !6795)
!6948 = !DILocation(line: 706, column: 37, scope: !6795)
!6949 = !DILocation(line: 706, column: 27, scope: !6795)
!6950 = !DILocation(line: 706, column: 5, scope: !6795)
!6951 = !DILocation(line: 706, column: 16, scope: !6795)
!6952 = !DILocation(line: 706, column: 25, scope: !6795)
!6953 = !DILocation(line: 707, column: 43, scope: !6795)
!6954 = !DILocation(line: 707, column: 33, scope: !6795)
!6955 = !DILocation(line: 707, column: 5, scope: !6795)
!6956 = !DILocation(line: 707, column: 16, scope: !6795)
!6957 = !DILocation(line: 707, column: 31, scope: !6795)
!6958 = !DILocation(line: 708, column: 47, scope: !6795)
!6959 = !DILocation(line: 708, column: 37, scope: !6795)
!6960 = !DILocation(line: 708, column: 5, scope: !6795)
!6961 = !DILocation(line: 708, column: 16, scope: !6795)
!6962 = !DILocation(line: 708, column: 35, scope: !6795)
!6963 = !DILocation(line: 709, column: 34, scope: !6795)
!6964 = !DILocation(line: 709, column: 24, scope: !6795)
!6965 = !DILocation(line: 709, column: 22, scope: !6795)
!6966 = !DILocation(line: 710, column: 46, scope: !6795)
!6967 = !DILocation(line: 710, column: 36, scope: !6795)
!6968 = !DILocation(line: 710, column: 5, scope: !6795)
!6969 = !DILocation(line: 710, column: 16, scope: !6795)
!6970 = !DILocation(line: 710, column: 34, scope: !6795)
!6971 = !DILocation(line: 711, column: 45, scope: !6795)
!6972 = !DILocation(line: 711, column: 35, scope: !6795)
!6973 = !DILocation(line: 711, column: 5, scope: !6795)
!6974 = !DILocation(line: 711, column: 16, scope: !6795)
!6975 = !DILocation(line: 711, column: 33, scope: !6795)
!6976 = !DILocation(line: 712, column: 38, scope: !6795)
!6977 = !DILocation(line: 712, column: 28, scope: !6795)
!6978 = !DILocation(line: 712, column: 5, scope: !6795)
!6979 = !DILocation(line: 712, column: 16, scope: !6795)
!6980 = !DILocation(line: 712, column: 26, scope: !6795)
!6981 = !DILocation(line: 713, column: 40, scope: !6795)
!6982 = !DILocation(line: 713, column: 30, scope: !6795)
!6983 = !DILocation(line: 713, column: 5, scope: !6795)
!6984 = !DILocation(line: 713, column: 16, scope: !6795)
!6985 = !DILocation(line: 713, column: 28, scope: !6795)
!6986 = !DILocation(line: 714, column: 37, scope: !6795)
!6987 = !DILocation(line: 714, column: 27, scope: !6795)
!6988 = !DILocation(line: 714, column: 5, scope: !6795)
!6989 = !DILocation(line: 714, column: 16, scope: !6795)
!6990 = !DILocation(line: 714, column: 25, scope: !6795)
!6991 = !DILocation(line: 715, column: 19, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6795, file: !939, line: 715, column: 9)
!6993 = !DILocation(line: 715, column: 23, scope: !6992)
!6994 = !DILocation(line: 715, column: 9, scope: !6992)
!6995 = !DILocation(line: 715, column: 40, scope: !6992)
!6996 = !DILocation(line: 715, column: 9, scope: !6795)
!6997 = !DILocation(line: 716, column: 16, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6992, file: !939, line: 715, column: 56)
!6999 = !DILocation(line: 716, column: 21, scope: !6998)
!7000 = !DILocation(line: 716, column: 9, scope: !6998)
!7001 = !DILocation(line: 717, column: 9, scope: !6998)
!7002 = !DILocation(line: 719, column: 39, scope: !6795)
!7003 = !DILocation(line: 719, column: 29, scope: !6795)
!7004 = !DILocation(line: 719, column: 27, scope: !6795)
!7005 = !DILocation(line: 721, column: 9, scope: !7006)
!7006 = distinct !DILexicalBlock(scope: !6795, file: !939, line: 721, column: 9)
!7007 = !DILocation(line: 721, column: 20, scope: !7006)
!7008 = !DILocation(line: 721, column: 35, scope: !7006)
!7009 = !DILocation(line: 722, column: 9, scope: !7006)
!7010 = !DILocation(line: 722, column: 20, scope: !7006)
!7011 = !DILocation(line: 722, column: 42, scope: !7006)
!7012 = !DILocation(line: 722, column: 53, scope: !7006)
!7013 = !DILocation(line: 722, column: 39, scope: !7006)
!7014 = !DILocation(line: 721, column: 9, scope: !6932)
!7015 = !DILocation(line: 723, column: 16, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !7006, file: !939, line: 722, column: 69)
!7017 = !DILocation(line: 723, column: 21, scope: !7016)
!7018 = !DILocation(line: 725, column: 16, scope: !7016)
!7019 = !DILocation(line: 725, column: 27, scope: !7016)
!7020 = !DILocation(line: 723, column: 9, scope: !7016)
!7021 = !DILocation(line: 727, column: 14, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !7016, file: !939, line: 727, column: 13)
!7023 = !DILocation(line: 727, column: 19, scope: !7022)
!7024 = !DILocation(line: 727, column: 36, scope: !7022)
!7025 = !DILocation(line: 727, column: 39, scope: !7026)
!7026 = !DILexicalBlockFile(scope: !7022, file: !939, discriminator: 1)
!7027 = !DILocation(line: 727, column: 44, scope: !7026)
!7028 = !DILocation(line: 727, column: 67, scope: !7026)
!7029 = !DILocation(line: 727, column: 13, scope: !7026)
!7030 = !DILocalVariable(name: "prev", scope: !7031, file: !939, line: 728, type: !2600)
!7031 = distinct !DILexicalBlock(scope: !7022, file: !939, line: 727, column: 72)
!7032 = !DILocation(line: 728, column: 27, scope: !7031)
!7033 = !DILocation(line: 729, column: 17, scope: !7031)
!7034 = !DILocation(line: 729, column: 22, scope: !7031)
!7035 = !DILocation(line: 729, column: 35, scope: !7031)
!7036 = !DILocation(line: 729, column: 40, scope: !7031)
!7037 = !DILocation(line: 729, column: 33, scope: !7031)
!7038 = !DILocation(line: 729, column: 63, scope: !7031)
!7039 = !DILocation(line: 730, column: 45, scope: !7031)
!7040 = !DILocation(line: 730, column: 51, scope: !7031)
!7041 = !DILocation(line: 730, column: 13, scope: !7031)
!7042 = !DILocation(line: 730, column: 24, scope: !7031)
!7043 = !DILocation(line: 730, column: 43, scope: !7031)
!7044 = !DILocation(line: 731, column: 9, scope: !7031)
!7045 = !DILocation(line: 734, column: 13, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !7016, file: !939, line: 734, column: 13)
!7047 = !DILocation(line: 734, column: 24, scope: !7046)
!7048 = !DILocation(line: 734, column: 46, scope: !7046)
!7049 = !DILocation(line: 734, column: 57, scope: !7046)
!7050 = !DILocation(line: 734, column: 43, scope: !7046)
!7051 = !DILocation(line: 734, column: 13, scope: !7016)
!7052 = !DILocation(line: 735, column: 13, scope: !7046)
!7053 = !DILocation(line: 735, column: 24, scope: !7046)
!7054 = !DILocation(line: 735, column: 43, scope: !7046)
!7055 = !DILocation(line: 736, column: 16, scope: !7016)
!7056 = !DILocation(line: 736, column: 21, scope: !7016)
!7057 = !DILocation(line: 738, column: 16, scope: !7016)
!7058 = !DILocation(line: 738, column: 27, scope: !7016)
!7059 = !DILocation(line: 736, column: 9, scope: !7016)
!7060 = !DILocation(line: 739, column: 5, scope: !7016)
!7061 = !DILocation(line: 742, column: 9, scope: !7062)
!7062 = distinct !DILexicalBlock(scope: !6795, file: !939, line: 742, column: 9)
!7063 = !DILocation(line: 742, column: 9, scope: !6795)
!7064 = !DILocation(line: 743, column: 13, scope: !7065)
!7065 = distinct !DILexicalBlock(scope: !7066, file: !939, line: 743, column: 13)
!7066 = distinct !DILexicalBlock(scope: !7062, file: !939, line: 742, column: 27)
!7067 = !DILocation(line: 743, column: 18, scope: !7065)
!7068 = !DILocation(line: 743, column: 35, scope: !7065)
!7069 = !DILocation(line: 743, column: 38, scope: !7070)
!7070 = !DILexicalBlockFile(scope: !7065, file: !939, discriminator: 1)
!7071 = !DILocation(line: 743, column: 43, scope: !7070)
!7072 = !DILocation(line: 743, column: 63, scope: !7070)
!7073 = !DILocation(line: 743, column: 60, scope: !7070)
!7074 = !DILocation(line: 743, column: 13, scope: !7070)
!7075 = !DILocation(line: 744, column: 20, scope: !7076)
!7076 = distinct !DILexicalBlock(scope: !7065, file: !939, line: 743, column: 81)
!7077 = !DILocation(line: 744, column: 25, scope: !7076)
!7078 = !DILocation(line: 746, column: 20, scope: !7076)
!7079 = !DILocation(line: 746, column: 25, scope: !7076)
!7080 = !DILocation(line: 746, column: 43, scope: !7076)
!7081 = !DILocation(line: 744, column: 13, scope: !7076)
!7082 = !DILocation(line: 747, column: 9, scope: !7076)
!7083 = !DILocation(line: 748, column: 37, scope: !7084)
!7084 = distinct !DILexicalBlock(scope: !7065, file: !939, line: 747, column: 16)
!7085 = !DILocation(line: 748, column: 13, scope: !7084)
!7086 = !DILocation(line: 748, column: 18, scope: !7084)
!7087 = !DILocation(line: 748, column: 35, scope: !7084)
!7088 = !DILocation(line: 750, column: 5, scope: !7066)
!7089 = !DILocation(line: 752, column: 12, scope: !6795)
!7090 = !DILocation(line: 752, column: 17, scope: !6795)
!7091 = !DILocation(line: 756, column: 13, scope: !6795)
!7092 = !DILocation(line: 756, column: 24, scope: !6795)
!7093 = !DILocation(line: 757, column: 13, scope: !6795)
!7094 = !DILocation(line: 757, column: 24, scope: !6795)
!7095 = !DILocation(line: 757, column: 44, scope: !6795)
!7096 = !DILocation(line: 758, column: 13, scope: !6795)
!7097 = !DILocation(line: 758, column: 24, scope: !6795)
!7098 = !DILocation(line: 758, column: 35, scope: !6795)
!7099 = !DILocation(line: 758, column: 46, scope: !6795)
!7100 = !DILocation(line: 752, column: 5, scope: !6795)
!7101 = !DILocation(line: 762, column: 9, scope: !7102)
!7102 = distinct !DILexicalBlock(scope: !6795, file: !939, line: 762, column: 9)
!7103 = !DILocation(line: 762, column: 20, scope: !7102)
!7104 = !DILocation(line: 762, column: 39, scope: !7102)
!7105 = !DILocation(line: 763, column: 9, scope: !7102)
!7106 = !DILocation(line: 763, column: 14, scope: !7102)
!7107 = !DILocation(line: 763, column: 23, scope: !7102)
!7108 = !DILocation(line: 763, column: 34, scope: !7102)
!7109 = !DILocation(line: 763, column: 21, scope: !7102)
!7110 = !DILocation(line: 763, column: 56, scope: !7102)
!7111 = !DILocation(line: 763, column: 53, scope: !7102)
!7112 = !DILocation(line: 762, column: 9, scope: !6932)
!7113 = !DILocation(line: 764, column: 16, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !7102, file: !939, line: 763, column: 68)
!7115 = !DILocation(line: 764, column: 21, scope: !7114)
!7116 = !DILocation(line: 764, column: 9, scope: !7114)
!7117 = !DILocation(line: 766, column: 9, scope: !7114)
!7118 = !DILocation(line: 769, column: 9, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !6795, file: !939, line: 769, column: 9)
!7120 = !DILocation(line: 769, column: 16, scope: !7119)
!7121 = !DILocation(line: 769, column: 21, scope: !7119)
!7122 = !DILocation(line: 769, column: 24, scope: !7123)
!7123 = !DILexicalBlockFile(scope: !7119, file: !939, discriminator: 1)
!7124 = !DILocation(line: 769, column: 31, scope: !7123)
!7125 = !DILocation(line: 769, column: 9, scope: !7123)
!7126 = !DILocation(line: 769, column: 37, scope: !7127)
!7127 = !DILexicalBlockFile(scope: !7119, file: !939, discriminator: 2)
!7128 = !DILocation(line: 769, column: 42, scope: !7127)
!7129 = !DILocation(line: 769, column: 45, scope: !7127)
!7130 = !DILocation(line: 770, column: 14, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7119, file: !939, line: 770, column: 14)
!7132 = !DILocation(line: 770, column: 21, scope: !7131)
!7133 = !DILocation(line: 770, column: 26, scope: !7131)
!7134 = !DILocation(line: 770, column: 29, scope: !7135)
!7135 = !DILexicalBlockFile(scope: !7131, file: !939, discriminator: 1)
!7136 = !DILocation(line: 770, column: 36, scope: !7135)
!7137 = !DILocation(line: 770, column: 14, scope: !7135)
!7138 = !DILocation(line: 770, column: 42, scope: !7139)
!7139 = !DILexicalBlockFile(scope: !7131, file: !939, discriminator: 2)
!7140 = !DILocation(line: 770, column: 47, scope: !7139)
!7141 = !DILocation(line: 770, column: 50, scope: !7139)
!7142 = !DILocation(line: 771, column: 14, scope: !7143)
!7143 = distinct !DILexicalBlock(scope: !7131, file: !939, line: 771, column: 14)
!7144 = !DILocation(line: 771, column: 21, scope: !7143)
!7145 = !DILocation(line: 771, column: 26, scope: !7143)
!7146 = !DILocation(line: 771, column: 29, scope: !7147)
!7147 = !DILexicalBlockFile(scope: !7143, file: !939, discriminator: 1)
!7148 = !DILocation(line: 771, column: 36, scope: !7147)
!7149 = !DILocation(line: 771, column: 14, scope: !7147)
!7150 = !DILocation(line: 771, column: 42, scope: !7151)
!7151 = !DILexicalBlockFile(scope: !7143, file: !939, discriminator: 2)
!7152 = !DILocation(line: 771, column: 47, scope: !7151)
!7153 = !DILocation(line: 771, column: 50, scope: !7151)
!7154 = !DILocation(line: 772, column: 14, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7143, file: !939, line: 772, column: 14)
!7156 = !DILocation(line: 772, column: 21, scope: !7155)
!7157 = !DILocation(line: 772, column: 26, scope: !7155)
!7158 = !DILocation(line: 772, column: 29, scope: !7159)
!7159 = !DILexicalBlockFile(scope: !7155, file: !939, discriminator: 1)
!7160 = !DILocation(line: 772, column: 36, scope: !7159)
!7161 = !DILocation(line: 772, column: 14, scope: !7159)
!7162 = !DILocation(line: 772, column: 42, scope: !7163)
!7163 = !DILexicalBlockFile(scope: !7155, file: !939, discriminator: 2)
!7164 = !DILocation(line: 772, column: 47, scope: !7163)
!7165 = !DILocation(line: 772, column: 50, scope: !7163)
!7166 = !DILocation(line: 773, column: 14, scope: !7167)
!7167 = distinct !DILexicalBlock(scope: !7155, file: !939, line: 773, column: 14)
!7168 = !DILocation(line: 773, column: 21, scope: !7167)
!7169 = !DILocation(line: 773, column: 26, scope: !7167)
!7170 = !DILocation(line: 773, column: 29, scope: !7171)
!7171 = !DILexicalBlockFile(scope: !7167, file: !939, discriminator: 1)
!7172 = !DILocation(line: 773, column: 36, scope: !7171)
!7173 = !DILocation(line: 773, column: 14, scope: !7171)
!7174 = !DILocation(line: 773, column: 42, scope: !7175)
!7175 = !DILexicalBlockFile(scope: !7167, file: !939, discriminator: 2)
!7176 = !DILocation(line: 773, column: 47, scope: !7175)
!7177 = !DILocation(line: 773, column: 50, scope: !7175)
!7178 = !DILocation(line: 774, column: 14, scope: !7179)
!7179 = distinct !DILexicalBlock(scope: !7167, file: !939, line: 774, column: 14)
!7180 = !DILocation(line: 774, column: 21, scope: !7179)
!7181 = !DILocation(line: 774, column: 26, scope: !7179)
!7182 = !DILocation(line: 774, column: 29, scope: !7183)
!7183 = !DILexicalBlockFile(scope: !7179, file: !939, discriminator: 1)
!7184 = !DILocation(line: 774, column: 36, scope: !7183)
!7185 = !DILocation(line: 774, column: 14, scope: !7183)
!7186 = !DILocation(line: 774, column: 42, scope: !7187)
!7187 = !DILexicalBlockFile(scope: !7179, file: !939, discriminator: 2)
!7188 = !DILocation(line: 774, column: 47, scope: !7187)
!7189 = !DILocation(line: 774, column: 50, scope: !7187)
!7190 = !DILocation(line: 775, column: 14, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !7179, file: !939, line: 775, column: 14)
!7192 = !DILocation(line: 775, column: 21, scope: !7191)
!7193 = !DILocation(line: 775, column: 26, scope: !7191)
!7194 = !DILocation(line: 775, column: 29, scope: !7195)
!7195 = !DILexicalBlockFile(scope: !7191, file: !939, discriminator: 1)
!7196 = !DILocation(line: 775, column: 36, scope: !7195)
!7197 = !DILocation(line: 775, column: 14, scope: !7195)
!7198 = !DILocation(line: 775, column: 42, scope: !7199)
!7199 = !DILexicalBlockFile(scope: !7191, file: !939, discriminator: 2)
!7200 = !DILocation(line: 775, column: 47, scope: !7199)
!7201 = !DILocation(line: 775, column: 50, scope: !7199)
!7202 = !DILocation(line: 776, column: 14, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !7191, file: !939, line: 776, column: 14)
!7204 = !DILocation(line: 776, column: 21, scope: !7203)
!7205 = !DILocation(line: 776, column: 26, scope: !7203)
!7206 = !DILocation(line: 776, column: 29, scope: !7207)
!7207 = !DILexicalBlockFile(scope: !7203, file: !939, discriminator: 1)
!7208 = !DILocation(line: 776, column: 36, scope: !7207)
!7209 = !DILocation(line: 776, column: 14, scope: !7207)
!7210 = !DILocation(line: 776, column: 42, scope: !7211)
!7211 = !DILexicalBlockFile(scope: !7203, file: !939, discriminator: 2)
!7212 = !DILocation(line: 776, column: 47, scope: !7211)
!7213 = !DILocation(line: 776, column: 50, scope: !7211)
!7214 = !DILocation(line: 777, column: 14, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !7203, file: !939, line: 777, column: 14)
!7216 = !DILocation(line: 777, column: 21, scope: !7215)
!7217 = !DILocation(line: 777, column: 26, scope: !7215)
!7218 = !DILocation(line: 777, column: 29, scope: !7219)
!7219 = !DILexicalBlockFile(scope: !7215, file: !939, discriminator: 1)
!7220 = !DILocation(line: 777, column: 36, scope: !7219)
!7221 = !DILocation(line: 777, column: 14, scope: !7219)
!7222 = !DILocation(line: 777, column: 42, scope: !7223)
!7223 = !DILexicalBlockFile(scope: !7215, file: !939, discriminator: 2)
!7224 = !DILocation(line: 777, column: 47, scope: !7223)
!7225 = !DILocation(line: 777, column: 50, scope: !7223)
!7226 = !DILocation(line: 778, column: 14, scope: !7227)
!7227 = distinct !DILexicalBlock(scope: !7215, file: !939, line: 778, column: 14)
!7228 = !DILocation(line: 778, column: 21, scope: !7227)
!7229 = !DILocation(line: 778, column: 26, scope: !7227)
!7230 = !DILocation(line: 778, column: 29, scope: !7231)
!7231 = !DILexicalBlockFile(scope: !7227, file: !939, discriminator: 1)
!7232 = !DILocation(line: 778, column: 36, scope: !7231)
!7233 = !DILocation(line: 778, column: 14, scope: !7231)
!7234 = !DILocation(line: 778, column: 42, scope: !7235)
!7235 = !DILexicalBlockFile(scope: !7227, file: !939, discriminator: 2)
!7236 = !DILocation(line: 778, column: 47, scope: !7235)
!7237 = !DILocation(line: 778, column: 50, scope: !7235)
!7238 = !DILocation(line: 779, column: 14, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7227, file: !939, line: 779, column: 14)
!7240 = !DILocation(line: 779, column: 21, scope: !7239)
!7241 = !DILocation(line: 779, column: 14, scope: !7227)
!7242 = !DILocation(line: 784, column: 13, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7244, file: !939, line: 784, column: 13)
!7244 = distinct !DILexicalBlock(scope: !7239, file: !939, line: 779, column: 30)
!7245 = !DILocation(line: 784, column: 35, scope: !7243)
!7246 = !DILocation(line: 784, column: 13, scope: !7244)
!7247 = !DILocalVariable(name: "op", scope: !7248, file: !939, line: 785, type: !2624)
!7248 = distinct !DILexicalBlock(scope: !7243, file: !939, line: 784, column: 41)
!7249 = !DILocation(line: 785, column: 19, scope: !7248)
!7250 = !DILocation(line: 785, column: 24, scope: !7248)
!7251 = !DILocation(line: 788, column: 18, scope: !7252)
!7252 = distinct !DILexicalBlock(scope: !7248, file: !939, line: 788, column: 17)
!7253 = !DILocation(line: 788, column: 23, scope: !7252)
!7254 = !DILocation(line: 788, column: 17, scope: !7248)
!7255 = !DILocation(line: 789, column: 24, scope: !7252)
!7256 = !DILocation(line: 789, column: 29, scope: !7252)
!7257 = !DILocation(line: 791, column: 24, scope: !7252)
!7258 = !DILocation(line: 792, column: 24, scope: !7252)
!7259 = !DILocation(line: 792, column: 27, scope: !7252)
!7260 = !DILocation(line: 789, column: 17, scope: !7252)
!7261 = !DILocation(line: 794, column: 23, scope: !7248)
!7262 = !DILocation(line: 794, column: 13, scope: !7248)
!7263 = !DILocation(line: 794, column: 18, scope: !7248)
!7264 = !DILocation(line: 794, column: 21, scope: !7248)
!7265 = !DILocation(line: 795, column: 9, scope: !7248)
!7266 = !DILocation(line: 796, column: 13, scope: !7243)
!7267 = !DILocation(line: 796, column: 18, scope: !7243)
!7268 = !DILocation(line: 796, column: 21, scope: !7243)
!7269 = !DILocation(line: 797, column: 5, scope: !7244)
!7270 = !DILocation(line: 798, column: 16, scope: !7271)
!7271 = distinct !DILexicalBlock(scope: !7239, file: !939, line: 797, column: 12)
!7272 = !DILocation(line: 798, column: 21, scope: !7271)
!7273 = !DILocation(line: 798, column: 91, scope: !7271)
!7274 = !DILocation(line: 798, column: 99, scope: !7271)
!7275 = !DILocation(line: 798, column: 9, scope: !7271)
!7276 = !DILocation(line: 799, column: 9, scope: !7271)
!7277 = !DILocation(line: 799, column: 14, scope: !7271)
!7278 = !DILocation(line: 799, column: 17, scope: !7271)
!7279 = !DILocation(line: 802, column: 9, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !6795, file: !939, line: 802, column: 9)
!7281 = !DILocation(line: 802, column: 20, scope: !7280)
!7282 = !DILocation(line: 802, column: 29, scope: !7280)
!7283 = !DILocation(line: 802, column: 34, scope: !7280)
!7284 = !DILocation(line: 802, column: 37, scope: !7285)
!7285 = !DILexicalBlockFile(scope: !7280, file: !939, discriminator: 1)
!7286 = !DILocation(line: 802, column: 48, scope: !7285)
!7287 = !DILocation(line: 802, column: 57, scope: !7285)
!7288 = !DILocation(line: 802, column: 9, scope: !7285)
!7289 = !DILocation(line: 803, column: 16, scope: !7290)
!7290 = distinct !DILexicalBlock(scope: !7280, file: !939, line: 802, column: 70)
!7291 = !DILocation(line: 803, column: 21, scope: !7290)
!7292 = !DILocation(line: 804, column: 16, scope: !7290)
!7293 = !DILocation(line: 804, column: 27, scope: !7290)
!7294 = !DILocation(line: 803, column: 9, scope: !7290)
!7295 = !DILocation(line: 806, column: 13, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7290, file: !939, line: 806, column: 13)
!7297 = !DILocation(line: 806, column: 18, scope: !7296)
!7298 = !DILocation(line: 806, column: 21, scope: !7296)
!7299 = !DILocation(line: 806, column: 13, scope: !7290)
!7300 = !DILocation(line: 807, column: 13, scope: !7296)
!7301 = !DILocation(line: 807, column: 24, scope: !7296)
!7302 = !DILocation(line: 807, column: 33, scope: !7296)
!7303 = !DILocation(line: 809, column: 13, scope: !7296)
!7304 = !DILocation(line: 809, column: 24, scope: !7296)
!7305 = !DILocation(line: 809, column: 33, scope: !7296)
!7306 = !DILocation(line: 811, column: 16, scope: !7290)
!7307 = !DILocation(line: 811, column: 21, scope: !7290)
!7308 = !DILocation(line: 811, column: 55, scope: !7290)
!7309 = !DILocation(line: 811, column: 66, scope: !7290)
!7310 = !DILocation(line: 811, column: 9, scope: !7290)
!7311 = !DILocation(line: 812, column: 5, scope: !7290)
!7312 = !DILocation(line: 814, column: 5, scope: !6795)
!7313 = !DILocation(line: 815, column: 1, scope: !6795)
!7314 = distinct !DISubprogram(name: "mxf_read_primer_pack", scope: !939, file: !939, line: 628, type: !2450, isLocal: true, isDefinition: true, scopeLine: 629, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!7315 = !DILocalVariable(name: "arg", arg: 1, scope: !7314, file: !939, line: 628, type: !1020)
!7316 = !DILocation(line: 628, column: 39, scope: !7314)
!7317 = !DILocalVariable(name: "pb", arg: 2, scope: !7314, file: !939, line: 628, type: !1501)
!7318 = !DILocation(line: 628, column: 57, scope: !7314)
!7319 = !DILocalVariable(name: "tag", arg: 3, scope: !7314, file: !939, line: 628, type: !1014)
!7320 = !DILocation(line: 628, column: 65, scope: !7314)
!7321 = !DILocalVariable(name: "size", arg: 4, scope: !7314, file: !939, line: 628, type: !1014)
!7322 = !DILocation(line: 628, column: 74, scope: !7314)
!7323 = !DILocalVariable(name: "uid", arg: 5, scope: !7314, file: !939, line: 628, type: !1017)
!7324 = !DILocation(line: 628, column: 84, scope: !7314)
!7325 = !DILocalVariable(name: "klv_offset", arg: 6, scope: !7314, file: !939, line: 628, type: !1015)
!7326 = !DILocation(line: 628, column: 97, scope: !7314)
!7327 = !DILocalVariable(name: "mxf", scope: !7314, file: !939, line: 630, type: !2594)
!7328 = !DILocation(line: 630, column: 17, scope: !7314)
!7329 = !DILocation(line: 630, column: 23, scope: !7314)
!7330 = !DILocalVariable(name: "item_num", scope: !7314, file: !939, line: 631, type: !1014)
!7331 = !DILocation(line: 631, column: 9, scope: !7314)
!7332 = !DILocation(line: 631, column: 30, scope: !7314)
!7333 = !DILocation(line: 631, column: 20, scope: !7314)
!7334 = !DILocalVariable(name: "item_len", scope: !7314, file: !939, line: 632, type: !1014)
!7335 = !DILocation(line: 632, column: 9, scope: !7314)
!7336 = !DILocation(line: 632, column: 30, scope: !7314)
!7337 = !DILocation(line: 632, column: 20, scope: !7314)
!7338 = !DILocation(line: 634, column: 9, scope: !7339)
!7339 = distinct !DILexicalBlock(scope: !7314, file: !939, line: 634, column: 9)
!7340 = !DILocation(line: 634, column: 18, scope: !7339)
!7341 = !DILocation(line: 634, column: 9, scope: !7314)
!7342 = !DILocation(line: 635, column: 31, scope: !7343)
!7343 = distinct !DILexicalBlock(scope: !7339, file: !939, line: 634, column: 25)
!7344 = !DILocation(line: 635, column: 65, scope: !7343)
!7345 = !DILocation(line: 635, column: 9, scope: !7343)
!7346 = !DILocation(line: 636, column: 9, scope: !7343)
!7347 = !DILocation(line: 638, column: 9, scope: !7348)
!7348 = distinct !DILexicalBlock(scope: !7314, file: !939, line: 638, column: 9)
!7349 = !DILocation(line: 638, column: 18, scope: !7348)
!7350 = !DILocation(line: 638, column: 26, scope: !7348)
!7351 = !DILocation(line: 638, column: 29, scope: !7352)
!7352 = !DILexicalBlockFile(scope: !7348, file: !939, discriminator: 1)
!7353 = !DILocation(line: 638, column: 38, scope: !7352)
!7354 = !DILocation(line: 638, column: 9, scope: !7352)
!7355 = !DILocation(line: 639, column: 16, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7348, file: !939, line: 638, column: 43)
!7357 = !DILocation(line: 639, column: 21, scope: !7356)
!7358 = !DILocation(line: 639, column: 59, scope: !7356)
!7359 = !DILocation(line: 639, column: 9, scope: !7356)
!7360 = !DILocation(line: 640, column: 9, scope: !7356)
!7361 = !DILocation(line: 642, column: 9, scope: !7362)
!7362 = distinct !DILexicalBlock(scope: !7314, file: !939, line: 642, column: 9)
!7363 = !DILocation(line: 642, column: 14, scope: !7362)
!7364 = !DILocation(line: 642, column: 9, scope: !7314)
!7365 = !DILocation(line: 643, column: 16, scope: !7362)
!7366 = !DILocation(line: 643, column: 21, scope: !7362)
!7367 = !DILocation(line: 643, column: 9, scope: !7362)
!7368 = !DILocation(line: 644, column: 13, scope: !7314)
!7369 = !DILocation(line: 644, column: 18, scope: !7314)
!7370 = !DILocation(line: 644, column: 5, scope: !7314)
!7371 = !DILocation(line: 645, column: 5, scope: !7314)
!7372 = !DILocation(line: 645, column: 10, scope: !7314)
!7373 = !DILocation(line: 645, column: 27, scope: !7314)
!7374 = !DILocation(line: 646, column: 33, scope: !7314)
!7375 = !DILocation(line: 646, column: 43, scope: !7314)
!7376 = !DILocation(line: 646, column: 23, scope: !7314)
!7377 = !DILocation(line: 646, column: 5, scope: !7314)
!7378 = !DILocation(line: 646, column: 10, scope: !7314)
!7379 = !DILocation(line: 646, column: 21, scope: !7314)
!7380 = !DILocation(line: 647, column: 10, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7314, file: !939, line: 647, column: 9)
!7382 = !DILocation(line: 647, column: 15, scope: !7381)
!7383 = !DILocation(line: 647, column: 9, scope: !7314)
!7384 = !DILocation(line: 648, column: 9, scope: !7381)
!7385 = !DILocation(line: 649, column: 29, scope: !7314)
!7386 = !DILocation(line: 649, column: 5, scope: !7314)
!7387 = !DILocation(line: 649, column: 10, scope: !7314)
!7388 = !DILocation(line: 649, column: 27, scope: !7314)
!7389 = !DILocation(line: 650, column: 15, scope: !7314)
!7390 = !DILocation(line: 650, column: 19, scope: !7314)
!7391 = !DILocation(line: 650, column: 24, scope: !7314)
!7392 = !DILocation(line: 650, column: 36, scope: !7314)
!7393 = !DILocation(line: 650, column: 45, scope: !7314)
!7394 = !DILocation(line: 650, column: 44, scope: !7314)
!7395 = !DILocation(line: 650, column: 5, scope: !7314)
!7396 = !DILocation(line: 651, column: 5, scope: !7314)
!7397 = !DILocation(line: 652, column: 1, scope: !7314)
!7398 = distinct !DISubprogram(name: "mxf_read_preface_metadata", scope: !939, file: !939, line: 2635, type: !2450, isLocal: true, isDefinition: true, scopeLine: 2636, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!7399 = !DILocalVariable(name: "arg", arg: 1, scope: !7398, file: !939, line: 2635, type: !1020)
!7400 = !DILocation(line: 2635, column: 44, scope: !7398)
!7401 = !DILocalVariable(name: "pb", arg: 2, scope: !7398, file: !939, line: 2635, type: !1501)
!7402 = !DILocation(line: 2635, column: 62, scope: !7398)
!7403 = !DILocalVariable(name: "tag", arg: 3, scope: !7398, file: !939, line: 2635, type: !1014)
!7404 = !DILocation(line: 2635, column: 70, scope: !7398)
!7405 = !DILocalVariable(name: "size", arg: 4, scope: !7398, file: !939, line: 2635, type: !1014)
!7406 = !DILocation(line: 2635, column: 79, scope: !7398)
!7407 = !DILocalVariable(name: "uid", arg: 5, scope: !7398, file: !939, line: 2635, type: !1017)
!7408 = !DILocation(line: 2635, column: 89, scope: !7398)
!7409 = !DILocalVariable(name: "klv_offset", arg: 6, scope: !7398, file: !939, line: 2635, type: !1015)
!7410 = !DILocation(line: 2635, column: 102, scope: !7398)
!7411 = !DILocalVariable(name: "mxf", scope: !7398, file: !939, line: 2637, type: !2594)
!7412 = !DILocation(line: 2637, column: 17, scope: !7398)
!7413 = !DILocation(line: 2637, column: 23, scope: !7398)
!7414 = !DILocalVariable(name: "s", scope: !7398, file: !939, line: 2638, type: !2495)
!7415 = !DILocation(line: 2638, column: 22, scope: !7398)
!7416 = !DILocation(line: 2638, column: 26, scope: !7398)
!7417 = !DILocation(line: 2638, column: 31, scope: !7398)
!7418 = !DILocalVariable(name: "ret", scope: !7398, file: !939, line: 2639, type: !1014)
!7419 = !DILocation(line: 2639, column: 9, scope: !7398)
!7420 = !DILocalVariable(name: "str", scope: !7398, file: !939, line: 2640, type: !1096)
!7421 = !DILocation(line: 2640, column: 11, scope: !7398)
!7422 = !DILocation(line: 2642, column: 9, scope: !7423)
!7423 = distinct !DILexicalBlock(scope: !7398, file: !939, line: 2642, column: 9)
!7424 = !DILocation(line: 2642, column: 13, scope: !7423)
!7425 = !DILocation(line: 2642, column: 23, scope: !7423)
!7426 = !DILocation(line: 2642, column: 36, scope: !7427)
!7427 = !DILexicalBlockFile(scope: !7423, file: !939, discriminator: 1)
!7428 = !DILocation(line: 2642, column: 29, scope: !7427)
!7429 = !DILocation(line: 2642, column: 9, scope: !7427)
!7430 = !DILocation(line: 2643, column: 9, scope: !7431)
!7431 = distinct !DILexicalBlock(scope: !7423, file: !939, line: 2642, column: 98)
!7432 = distinct !{!7432, !7430}
!7433 = !DILocation(line: 2643, column: 49, scope: !7434)
!7434 = !DILexicalBlockFile(scope: !7435, file: !939, discriminator: 1)
!7435 = distinct !DILexicalBlock(scope: !7436, file: !939, line: 2643, column: 18)
!7436 = distinct !DILexicalBlock(scope: !7431, file: !939, line: 2643, column: 12)
!7437 = !DILocation(line: 2643, column: 53, scope: !7434)
!7438 = !DILocation(line: 2643, column: 25, scope: !7434)
!7439 = !DILocation(line: 2643, column: 23, scope: !7434)
!7440 = !DILocation(line: 2643, column: 66, scope: !7434)
!7441 = !DILocation(line: 2643, column: 18, scope: !7434)
!7442 = !DILocation(line: 2643, column: 78, scope: !7443)
!7443 = !DILexicalBlockFile(scope: !7435, file: !939, discriminator: 2)
!7444 = !DILocation(line: 2643, column: 71, scope: !7443)
!7445 = !DILocation(line: 2643, column: 96, scope: !7446)
!7446 = !DILexicalBlockFile(scope: !7436, file: !939, discriminator: 3)
!7447 = !DILocation(line: 2643, column: 99, scope: !7446)
!7448 = !DILocation(line: 2643, column: 125, scope: !7446)
!7449 = !DILocation(line: 2643, column: 83, scope: !7446)
!7450 = !DILocation(line: 2643, column: 134, scope: !7446)
!7451 = !DILocation(line: 2644, column: 5, scope: !7431)
!7452 = !DILocation(line: 2645, column: 5, scope: !7398)
!7453 = !DILocation(line: 2646, column: 1, scope: !7398)
!7454 = distinct !DISubprogram(name: "mxf_read_identification_metadata", scope: !939, file: !939, line: 2598, type: !2450, isLocal: true, isDefinition: true, scopeLine: 2599, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!7455 = !DILocalVariable(name: "arg", arg: 1, scope: !7454, file: !939, line: 2598, type: !1020)
!7456 = !DILocation(line: 2598, column: 51, scope: !7454)
!7457 = !DILocalVariable(name: "pb", arg: 2, scope: !7454, file: !939, line: 2598, type: !1501)
!7458 = !DILocation(line: 2598, column: 69, scope: !7454)
!7459 = !DILocalVariable(name: "tag", arg: 3, scope: !7454, file: !939, line: 2598, type: !1014)
!7460 = !DILocation(line: 2598, column: 77, scope: !7454)
!7461 = !DILocalVariable(name: "size", arg: 4, scope: !7454, file: !939, line: 2598, type: !1014)
!7462 = !DILocation(line: 2598, column: 86, scope: !7454)
!7463 = !DILocalVariable(name: "_uid", arg: 5, scope: !7454, file: !939, line: 2598, type: !1017)
!7464 = !DILocation(line: 2598, column: 96, scope: !7454)
!7465 = !DILocalVariable(name: "klv_offset", arg: 6, scope: !7454, file: !939, line: 2598, type: !1015)
!7466 = !DILocation(line: 2598, column: 110, scope: !7454)
!7467 = !DILocalVariable(name: "mxf", scope: !7454, file: !939, line: 2600, type: !2594)
!7468 = !DILocation(line: 2600, column: 17, scope: !7454)
!7469 = !DILocation(line: 2600, column: 23, scope: !7454)
!7470 = !DILocalVariable(name: "s", scope: !7454, file: !939, line: 2601, type: !2495)
!7471 = !DILocation(line: 2601, column: 22, scope: !7454)
!7472 = !DILocation(line: 2601, column: 26, scope: !7454)
!7473 = !DILocation(line: 2601, column: 31, scope: !7454)
!7474 = !DILocalVariable(name: "ret", scope: !7454, file: !939, line: 2602, type: !1014)
!7475 = !DILocation(line: 2602, column: 9, scope: !7454)
!7476 = !DILocalVariable(name: "uid", scope: !7454, file: !939, line: 2603, type: !1026)
!7477 = !DILocation(line: 2603, column: 9, scope: !7454)
!7478 = !DILocalVariable(name: "str", scope: !7454, file: !939, line: 2604, type: !1096)
!7479 = !DILocation(line: 2604, column: 11, scope: !7454)
!7480 = !DILocalVariable(name: "ts", scope: !7454, file: !939, line: 2605, type: !1125)
!7481 = !DILocation(line: 2605, column: 14, scope: !7454)
!7482 = !DILocation(line: 2606, column: 13, scope: !7454)
!7483 = !DILocation(line: 2606, column: 5, scope: !7454)
!7484 = !DILocation(line: 2608, column: 9, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7454, file: !939, line: 2606, column: 18)
!7486 = distinct !{!7486, !7484}
!7487 = !DILocation(line: 2608, column: 49, scope: !7488)
!7488 = !DILexicalBlockFile(scope: !7489, file: !939, discriminator: 1)
!7489 = distinct !DILexicalBlock(scope: !7490, file: !939, line: 2608, column: 18)
!7490 = distinct !DILexicalBlock(scope: !7485, file: !939, line: 2608, column: 12)
!7491 = !DILocation(line: 2608, column: 53, scope: !7488)
!7492 = !DILocation(line: 2608, column: 25, scope: !7488)
!7493 = !DILocation(line: 2608, column: 23, scope: !7488)
!7494 = !DILocation(line: 2608, column: 66, scope: !7488)
!7495 = !DILocation(line: 2608, column: 18, scope: !7488)
!7496 = !DILocation(line: 2608, column: 78, scope: !7497)
!7497 = !DILexicalBlockFile(scope: !7489, file: !939, discriminator: 2)
!7498 = !DILocation(line: 2608, column: 71, scope: !7497)
!7499 = !DILocation(line: 2608, column: 96, scope: !7500)
!7500 = !DILexicalBlockFile(scope: !7490, file: !939, discriminator: 3)
!7501 = !DILocation(line: 2608, column: 99, scope: !7500)
!7502 = !DILocation(line: 2608, column: 125, scope: !7500)
!7503 = !DILocation(line: 2608, column: 83, scope: !7500)
!7504 = !DILocation(line: 2608, column: 134, scope: !7500)
!7505 = !DILocation(line: 2609, column: 9, scope: !7485)
!7506 = !DILocation(line: 2611, column: 9, scope: !7485)
!7507 = distinct !{!7507, !7506}
!7508 = !DILocation(line: 2611, column: 49, scope: !7509)
!7509 = !DILexicalBlockFile(scope: !7510, file: !939, discriminator: 1)
!7510 = distinct !DILexicalBlock(scope: !7511, file: !939, line: 2611, column: 18)
!7511 = distinct !DILexicalBlock(scope: !7485, file: !939, line: 2611, column: 12)
!7512 = !DILocation(line: 2611, column: 53, scope: !7509)
!7513 = !DILocation(line: 2611, column: 25, scope: !7509)
!7514 = !DILocation(line: 2611, column: 23, scope: !7509)
!7515 = !DILocation(line: 2611, column: 66, scope: !7509)
!7516 = !DILocation(line: 2611, column: 18, scope: !7509)
!7517 = !DILocation(line: 2611, column: 78, scope: !7518)
!7518 = !DILexicalBlockFile(scope: !7510, file: !939, discriminator: 2)
!7519 = !DILocation(line: 2611, column: 71, scope: !7518)
!7520 = !DILocation(line: 2611, column: 96, scope: !7521)
!7521 = !DILexicalBlockFile(scope: !7511, file: !939, discriminator: 3)
!7522 = !DILocation(line: 2611, column: 99, scope: !7521)
!7523 = !DILocation(line: 2611, column: 125, scope: !7521)
!7524 = !DILocation(line: 2611, column: 83, scope: !7521)
!7525 = !DILocation(line: 2611, column: 134, scope: !7521)
!7526 = !DILocation(line: 2612, column: 9, scope: !7485)
!7527 = !DILocation(line: 2614, column: 9, scope: !7485)
!7528 = distinct !{!7528, !7527}
!7529 = !DILocation(line: 2614, column: 49, scope: !7530)
!7530 = !DILexicalBlockFile(scope: !7531, file: !939, discriminator: 1)
!7531 = distinct !DILexicalBlock(scope: !7532, file: !939, line: 2614, column: 18)
!7532 = distinct !DILexicalBlock(scope: !7485, file: !939, line: 2614, column: 12)
!7533 = !DILocation(line: 2614, column: 53, scope: !7530)
!7534 = !DILocation(line: 2614, column: 25, scope: !7530)
!7535 = !DILocation(line: 2614, column: 23, scope: !7530)
!7536 = !DILocation(line: 2614, column: 66, scope: !7530)
!7537 = !DILocation(line: 2614, column: 18, scope: !7530)
!7538 = !DILocation(line: 2614, column: 78, scope: !7539)
!7539 = !DILexicalBlockFile(scope: !7531, file: !939, discriminator: 2)
!7540 = !DILocation(line: 2614, column: 71, scope: !7539)
!7541 = !DILocation(line: 2614, column: 96, scope: !7542)
!7542 = !DILexicalBlockFile(scope: !7532, file: !939, discriminator: 3)
!7543 = !DILocation(line: 2614, column: 99, scope: !7542)
!7544 = !DILocation(line: 2614, column: 128, scope: !7542)
!7545 = !DILocation(line: 2614, column: 83, scope: !7542)
!7546 = !DILocation(line: 2614, column: 137, scope: !7542)
!7547 = !DILocation(line: 2615, column: 9, scope: !7485)
!7548 = !DILocation(line: 2617, column: 9, scope: !7485)
!7549 = distinct !{!7549, !7548}
!7550 = !DILocation(line: 2617, column: 24, scope: !7551)
!7551 = !DILexicalBlockFile(scope: !7552, file: !939, discriminator: 1)
!7552 = distinct !DILexicalBlock(scope: !7485, file: !939, line: 2617, column: 12)
!7553 = !DILocation(line: 2617, column: 28, scope: !7551)
!7554 = !DILocation(line: 2617, column: 14, scope: !7551)
!7555 = !DILocation(line: 2617, column: 64, scope: !7551)
!7556 = !DILocation(line: 2617, column: 49, scope: !7557)
!7557 = !DILexicalBlockFile(scope: !7551, file: !939, discriminator: 4)
!7558 = !DILocation(line: 2617, column: 47, scope: !7551)
!7559 = !DILocation(line: 2617, column: 76, scope: !7551)
!7560 = !DILocation(line: 2617, column: 42, scope: !7551)
!7561 = !DILocation(line: 2617, column: 88, scope: !7562)
!7562 = !DILexicalBlockFile(scope: !7563, file: !939, discriminator: 2)
!7563 = distinct !DILexicalBlock(scope: !7552, file: !939, line: 2617, column: 42)
!7564 = !DILocation(line: 2617, column: 81, scope: !7562)
!7565 = !DILocation(line: 2617, column: 106, scope: !7566)
!7566 = !DILexicalBlockFile(scope: !7552, file: !939, discriminator: 3)
!7567 = !DILocation(line: 2617, column: 109, scope: !7566)
!7568 = !DILocation(line: 2617, column: 134, scope: !7566)
!7569 = !DILocation(line: 2617, column: 93, scope: !7566)
!7570 = !DILocation(line: 2617, column: 143, scope: !7566)
!7571 = !DILocation(line: 2618, column: 9, scope: !7485)
!7572 = !DILocation(line: 2620, column: 9, scope: !7485)
!7573 = distinct !{!7573, !7572}
!7574 = !DILocation(line: 2620, column: 29, scope: !7575)
!7575 = !DILexicalBlockFile(scope: !7576, file: !939, discriminator: 1)
!7576 = distinct !DILexicalBlock(scope: !7485, file: !939, line: 2620, column: 12)
!7577 = !DILocation(line: 2620, column: 19, scope: !7575)
!7578 = !DILocation(line: 2620, column: 17, scope: !7575)
!7579 = !DILocation(line: 2620, column: 38, scope: !7575)
!7580 = !DILocation(line: 2620, column: 41, scope: !7575)
!7581 = !DILocation(line: 2620, column: 78, scope: !7582)
!7582 = !DILexicalBlockFile(scope: !7583, file: !939, discriminator: 2)
!7583 = distinct !DILexicalBlock(scope: !7576, file: !939, line: 2620, column: 38)
!7584 = !DILocation(line: 2620, column: 81, scope: !7582)
!7585 = !DILocation(line: 2620, column: 135, scope: !7582)
!7586 = !DILocation(line: 2620, column: 112, scope: !7582)
!7587 = !DILocation(line: 2620, column: 51, scope: !7588)
!7588 = !DILexicalBlockFile(scope: !7582, file: !939, discriminator: 5)
!7589 = !DILocation(line: 2620, column: 49, scope: !7582)
!7590 = !DILocation(line: 2620, column: 141, scope: !7582)
!7591 = !DILocation(line: 2620, column: 38, scope: !7582)
!7592 = !DILocation(line: 2620, column: 153, scope: !7593)
!7593 = !DILexicalBlockFile(scope: !7583, file: !939, discriminator: 3)
!7594 = !DILocation(line: 2620, column: 146, scope: !7593)
!7595 = !DILocation(line: 2620, column: 158, scope: !7596)
!7596 = !DILexicalBlockFile(scope: !7576, file: !939, discriminator: 4)
!7597 = !DILocation(line: 2621, column: 9, scope: !7485)
!7598 = !DILocation(line: 2623, column: 9, scope: !7485)
!7599 = distinct !{!7599, !7598}
!7600 = !DILocation(line: 2623, column: 49, scope: !7601)
!7601 = !DILexicalBlockFile(scope: !7602, file: !939, discriminator: 1)
!7602 = distinct !DILexicalBlock(scope: !7603, file: !939, line: 2623, column: 18)
!7603 = distinct !DILexicalBlock(scope: !7485, file: !939, line: 2623, column: 12)
!7604 = !DILocation(line: 2623, column: 53, scope: !7601)
!7605 = !DILocation(line: 2623, column: 25, scope: !7601)
!7606 = !DILocation(line: 2623, column: 23, scope: !7601)
!7607 = !DILocation(line: 2623, column: 66, scope: !7601)
!7608 = !DILocation(line: 2623, column: 18, scope: !7601)
!7609 = !DILocation(line: 2623, column: 78, scope: !7610)
!7610 = !DILexicalBlockFile(scope: !7602, file: !939, discriminator: 2)
!7611 = !DILocation(line: 2623, column: 71, scope: !7610)
!7612 = !DILocation(line: 2623, column: 96, scope: !7613)
!7613 = !DILexicalBlockFile(scope: !7603, file: !939, discriminator: 3)
!7614 = !DILocation(line: 2623, column: 99, scope: !7613)
!7615 = !DILocation(line: 2623, column: 133, scope: !7613)
!7616 = !DILocation(line: 2623, column: 83, scope: !7613)
!7617 = !DILocation(line: 2623, column: 142, scope: !7613)
!7618 = !DILocation(line: 2624, column: 9, scope: !7485)
!7619 = !DILocation(line: 2626, column: 9, scope: !7485)
!7620 = distinct !{!7620, !7619}
!7621 = !DILocation(line: 2626, column: 24, scope: !7622)
!7622 = !DILexicalBlockFile(scope: !7623, file: !939, discriminator: 1)
!7623 = distinct !DILexicalBlock(scope: !7485, file: !939, line: 2626, column: 12)
!7624 = !DILocation(line: 2626, column: 28, scope: !7622)
!7625 = !DILocation(line: 2626, column: 14, scope: !7622)
!7626 = !DILocation(line: 2626, column: 64, scope: !7622)
!7627 = !DILocation(line: 2626, column: 49, scope: !7628)
!7628 = !DILexicalBlockFile(scope: !7622, file: !939, discriminator: 4)
!7629 = !DILocation(line: 2626, column: 47, scope: !7622)
!7630 = !DILocation(line: 2626, column: 76, scope: !7622)
!7631 = !DILocation(line: 2626, column: 42, scope: !7622)
!7632 = !DILocation(line: 2626, column: 88, scope: !7633)
!7633 = !DILexicalBlockFile(scope: !7634, file: !939, discriminator: 2)
!7634 = distinct !DILexicalBlock(scope: !7623, file: !939, line: 2626, column: 42)
!7635 = !DILocation(line: 2626, column: 81, scope: !7633)
!7636 = !DILocation(line: 2626, column: 106, scope: !7637)
!7637 = !DILexicalBlockFile(scope: !7623, file: !939, discriminator: 3)
!7638 = !DILocation(line: 2626, column: 109, scope: !7637)
!7639 = !DILocation(line: 2626, column: 137, scope: !7637)
!7640 = !DILocation(line: 2626, column: 93, scope: !7637)
!7641 = !DILocation(line: 2626, column: 146, scope: !7637)
!7642 = !DILocation(line: 2627, column: 9, scope: !7485)
!7643 = !DILocation(line: 2629, column: 9, scope: !7485)
!7644 = distinct !{!7644, !7643}
!7645 = !DILocation(line: 2629, column: 24, scope: !7646)
!7646 = !DILexicalBlockFile(scope: !7647, file: !939, discriminator: 1)
!7647 = distinct !DILexicalBlock(scope: !7485, file: !939, line: 2629, column: 12)
!7648 = !DILocation(line: 2629, column: 28, scope: !7646)
!7649 = !DILocation(line: 2629, column: 14, scope: !7646)
!7650 = !DILocation(line: 2629, column: 64, scope: !7646)
!7651 = !DILocation(line: 2629, column: 49, scope: !7652)
!7652 = !DILexicalBlockFile(scope: !7646, file: !939, discriminator: 4)
!7653 = !DILocation(line: 2629, column: 47, scope: !7646)
!7654 = !DILocation(line: 2629, column: 76, scope: !7646)
!7655 = !DILocation(line: 2629, column: 42, scope: !7646)
!7656 = !DILocation(line: 2629, column: 88, scope: !7657)
!7657 = !DILexicalBlockFile(scope: !7658, file: !939, discriminator: 2)
!7658 = distinct !DILexicalBlock(scope: !7647, file: !939, line: 2629, column: 42)
!7659 = !DILocation(line: 2629, column: 81, scope: !7657)
!7660 = !DILocation(line: 2629, column: 106, scope: !7661)
!7661 = !DILexicalBlockFile(scope: !7647, file: !939, discriminator: 3)
!7662 = !DILocation(line: 2629, column: 109, scope: !7661)
!7663 = !DILocation(line: 2629, column: 126, scope: !7661)
!7664 = !DILocation(line: 2629, column: 93, scope: !7661)
!7665 = !DILocation(line: 2629, column: 135, scope: !7661)
!7666 = !DILocation(line: 2630, column: 9, scope: !7485)
!7667 = !DILocation(line: 2632, column: 5, scope: !7454)
!7668 = !DILocation(line: 2633, column: 1, scope: !7454)
!7669 = distinct !DISubprogram(name: "mxf_read_content_storage", scope: !939, file: !939, line: 888, type: !2450, isLocal: true, isDefinition: true, scopeLine: 889, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!7670 = !DILocalVariable(name: "arg", arg: 1, scope: !7669, file: !939, line: 888, type: !1020)
!7671 = !DILocation(line: 888, column: 43, scope: !7669)
!7672 = !DILocalVariable(name: "pb", arg: 2, scope: !7669, file: !939, line: 888, type: !1501)
!7673 = !DILocation(line: 888, column: 61, scope: !7669)
!7674 = !DILocalVariable(name: "tag", arg: 3, scope: !7669, file: !939, line: 888, type: !1014)
!7675 = !DILocation(line: 888, column: 69, scope: !7669)
!7676 = !DILocalVariable(name: "size", arg: 4, scope: !7669, file: !939, line: 888, type: !1014)
!7677 = !DILocation(line: 888, column: 78, scope: !7669)
!7678 = !DILocalVariable(name: "uid", arg: 5, scope: !7669, file: !939, line: 888, type: !1017)
!7679 = !DILocation(line: 888, column: 88, scope: !7669)
!7680 = !DILocalVariable(name: "klv_offset", arg: 6, scope: !7669, file: !939, line: 888, type: !1015)
!7681 = !DILocation(line: 888, column: 101, scope: !7669)
!7682 = !DILocalVariable(name: "mxf", scope: !7669, file: !939, line: 890, type: !2594)
!7683 = !DILocation(line: 890, column: 17, scope: !7669)
!7684 = !DILocation(line: 890, column: 23, scope: !7669)
!7685 = !DILocation(line: 891, column: 13, scope: !7669)
!7686 = !DILocation(line: 891, column: 5, scope: !7669)
!7687 = !DILocation(line: 893, column: 13, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7689, file: !939, line: 893, column: 13)
!7689 = distinct !DILexicalBlock(scope: !7669, file: !939, line: 891, column: 18)
!7690 = !DILocation(line: 893, column: 18, scope: !7688)
!7691 = !DILocation(line: 893, column: 13, scope: !7689)
!7692 = !DILocation(line: 894, column: 20, scope: !7688)
!7693 = !DILocation(line: 894, column: 25, scope: !7688)
!7694 = !DILocation(line: 894, column: 13, scope: !7688)
!7695 = !DILocation(line: 895, column: 17, scope: !7689)
!7696 = !DILocation(line: 895, column: 22, scope: !7689)
!7697 = !DILocation(line: 895, column: 9, scope: !7689)
!7698 = !DILocation(line: 896, column: 42, scope: !7689)
!7699 = !DILocation(line: 896, column: 47, scope: !7689)
!7700 = !DILocation(line: 896, column: 52, scope: !7689)
!7701 = !DILocation(line: 896, column: 68, scope: !7689)
!7702 = !DILocation(line: 896, column: 73, scope: !7689)
!7703 = !DILocation(line: 896, column: 16, scope: !7689)
!7704 = !DILocation(line: 896, column: 9, scope: !7689)
!7705 = !DILocation(line: 898, column: 17, scope: !7689)
!7706 = !DILocation(line: 898, column: 22, scope: !7689)
!7707 = !DILocation(line: 898, column: 9, scope: !7689)
!7708 = !DILocation(line: 899, column: 42, scope: !7689)
!7709 = !DILocation(line: 899, column: 47, scope: !7689)
!7710 = !DILocation(line: 899, column: 52, scope: !7689)
!7711 = !DILocation(line: 899, column: 82, scope: !7689)
!7712 = !DILocation(line: 899, column: 87, scope: !7689)
!7713 = !DILocation(line: 899, column: 16, scope: !7689)
!7714 = !DILocation(line: 899, column: 9, scope: !7689)
!7715 = !DILocation(line: 901, column: 5, scope: !7669)
!7716 = !DILocation(line: 902, column: 1, scope: !7669)
!7717 = distinct !DISubprogram(name: "mxf_read_package", scope: !939, file: !939, line: 1012, type: !2450, isLocal: true, isDefinition: true, scopeLine: 1013, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!7718 = !DILocalVariable(name: "arg", arg: 1, scope: !7717, file: !939, line: 1012, type: !1020)
!7719 = !DILocation(line: 1012, column: 35, scope: !7717)
!7720 = !DILocalVariable(name: "pb", arg: 2, scope: !7717, file: !939, line: 1012, type: !1501)
!7721 = !DILocation(line: 1012, column: 53, scope: !7717)
!7722 = !DILocalVariable(name: "tag", arg: 3, scope: !7717, file: !939, line: 1012, type: !1014)
!7723 = !DILocation(line: 1012, column: 61, scope: !7717)
!7724 = !DILocalVariable(name: "size", arg: 4, scope: !7717, file: !939, line: 1012, type: !1014)
!7725 = !DILocation(line: 1012, column: 70, scope: !7717)
!7726 = !DILocalVariable(name: "uid", arg: 5, scope: !7717, file: !939, line: 1012, type: !1017)
!7727 = !DILocation(line: 1012, column: 80, scope: !7717)
!7728 = !DILocalVariable(name: "klv_offset", arg: 6, scope: !7717, file: !939, line: 1012, type: !1015)
!7729 = !DILocation(line: 1012, column: 93, scope: !7717)
!7730 = !DILocalVariable(name: "package", scope: !7717, file: !939, line: 1014, type: !1083)
!7731 = !DILocation(line: 1014, column: 17, scope: !7717)
!7732 = !DILocation(line: 1014, column: 27, scope: !7717)
!7733 = !DILocation(line: 1015, column: 12, scope: !7717)
!7734 = !DILocation(line: 1015, column: 5, scope: !7717)
!7735 = !DILocation(line: 1017, column: 42, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7717, file: !939, line: 1015, column: 17)
!7737 = !DILocation(line: 1017, column: 47, scope: !7736)
!7738 = !DILocation(line: 1017, column: 56, scope: !7736)
!7739 = !DILocation(line: 1018, column: 47, scope: !7736)
!7740 = !DILocation(line: 1018, column: 56, scope: !7736)
!7741 = !DILocation(line: 1017, column: 16, scope: !7736)
!7742 = !DILocation(line: 1017, column: 9, scope: !7736)
!7743 = !DILocation(line: 1021, column: 19, scope: !7736)
!7744 = !DILocation(line: 1021, column: 23, scope: !7736)
!7745 = !DILocation(line: 1021, column: 32, scope: !7736)
!7746 = !DILocation(line: 1021, column: 9, scope: !7736)
!7747 = !DILocation(line: 1022, column: 19, scope: !7736)
!7748 = !DILocation(line: 1022, column: 23, scope: !7736)
!7749 = !DILocation(line: 1022, column: 32, scope: !7736)
!7750 = !DILocation(line: 1022, column: 9, scope: !7736)
!7751 = !DILocation(line: 1023, column: 9, scope: !7736)
!7752 = !DILocation(line: 1025, column: 19, scope: !7736)
!7753 = !DILocation(line: 1025, column: 23, scope: !7736)
!7754 = !DILocation(line: 1025, column: 32, scope: !7736)
!7755 = !DILocation(line: 1025, column: 9, scope: !7736)
!7756 = !DILocation(line: 1026, column: 9, scope: !7736)
!7757 = !DILocation(line: 1028, column: 40, scope: !7736)
!7758 = !DILocation(line: 1028, column: 44, scope: !7736)
!7759 = !DILocation(line: 1028, column: 51, scope: !7736)
!7760 = !DILocation(line: 1028, column: 60, scope: !7736)
!7761 = !DILocation(line: 1028, column: 16, scope: !7736)
!7762 = !DILocation(line: 1028, column: 9, scope: !7736)
!7763 = !DILocation(line: 1030, column: 42, scope: !7736)
!7764 = !DILocation(line: 1030, column: 47, scope: !7736)
!7765 = !DILocation(line: 1030, column: 56, scope: !7736)
!7766 = !DILocation(line: 1031, column: 47, scope: !7736)
!7767 = !DILocation(line: 1031, column: 56, scope: !7736)
!7768 = !DILocation(line: 1030, column: 16, scope: !7736)
!7769 = !DILocation(line: 1030, column: 9, scope: !7736)
!7770 = !DILocation(line: 1033, column: 5, scope: !7717)
!7771 = !DILocation(line: 1034, column: 1, scope: !7717)
!7772 = distinct !DISubprogram(name: "mxf_read_sequence", scope: !939, file: !939, line: 978, type: !2450, isLocal: true, isDefinition: true, scopeLine: 979, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!7773 = !DILocalVariable(name: "arg", arg: 1, scope: !7772, file: !939, line: 978, type: !1020)
!7774 = !DILocation(line: 978, column: 36, scope: !7772)
!7775 = !DILocalVariable(name: "pb", arg: 2, scope: !7772, file: !939, line: 978, type: !1501)
!7776 = !DILocation(line: 978, column: 54, scope: !7772)
!7777 = !DILocalVariable(name: "tag", arg: 3, scope: !7772, file: !939, line: 978, type: !1014)
!7778 = !DILocation(line: 978, column: 62, scope: !7772)
!7779 = !DILocalVariable(name: "size", arg: 4, scope: !7772, file: !939, line: 978, type: !1014)
!7780 = !DILocation(line: 978, column: 71, scope: !7772)
!7781 = !DILocalVariable(name: "uid", arg: 5, scope: !7772, file: !939, line: 978, type: !1017)
!7782 = !DILocation(line: 978, column: 81, scope: !7772)
!7783 = !DILocalVariable(name: "klv_offset", arg: 6, scope: !7772, file: !939, line: 978, type: !1015)
!7784 = !DILocation(line: 978, column: 94, scope: !7772)
!7785 = !DILocalVariable(name: "sequence", scope: !7772, file: !939, line: 980, type: !1063)
!7786 = !DILocation(line: 980, column: 18, scope: !7772)
!7787 = !DILocation(line: 980, column: 29, scope: !7772)
!7788 = !DILocation(line: 981, column: 12, scope: !7772)
!7789 = !DILocation(line: 981, column: 5, scope: !7772)
!7790 = !DILocation(line: 983, column: 40, scope: !7791)
!7791 = distinct !DILexicalBlock(scope: !7772, file: !939, line: 981, column: 17)
!7792 = !DILocation(line: 983, column: 30, scope: !7791)
!7793 = !DILocation(line: 983, column: 9, scope: !7791)
!7794 = !DILocation(line: 983, column: 19, scope: !7791)
!7795 = !DILocation(line: 983, column: 28, scope: !7791)
!7796 = !DILocation(line: 984, column: 9, scope: !7791)
!7797 = !DILocation(line: 986, column: 19, scope: !7791)
!7798 = !DILocation(line: 986, column: 23, scope: !7791)
!7799 = !DILocation(line: 986, column: 33, scope: !7791)
!7800 = !DILocation(line: 986, column: 9, scope: !7791)
!7801 = !DILocation(line: 987, column: 9, scope: !7791)
!7802 = !DILocation(line: 989, column: 36, scope: !7791)
!7803 = !DILocation(line: 989, column: 28, scope: !7791)
!7804 = !DILocation(line: 989, column: 9, scope: !7791)
!7805 = !DILocation(line: 989, column: 19, scope: !7791)
!7806 = !DILocation(line: 989, column: 26, scope: !7791)
!7807 = !DILocation(line: 990, column: 9, scope: !7791)
!7808 = !DILocation(line: 992, column: 42, scope: !7791)
!7809 = !DILocation(line: 992, column: 47, scope: !7791)
!7810 = !DILocation(line: 992, column: 57, scope: !7791)
!7811 = !DILocation(line: 993, column: 47, scope: !7791)
!7812 = !DILocation(line: 993, column: 57, scope: !7791)
!7813 = !DILocation(line: 992, column: 16, scope: !7791)
!7814 = !DILocation(line: 992, column: 9, scope: !7791)
!7815 = !DILocation(line: 995, column: 5, scope: !7772)
!7816 = !DILocation(line: 996, column: 1, scope: !7772)
!7817 = distinct !DISubprogram(name: "mxf_read_essence_group", scope: !939, file: !939, line: 998, type: !2450, isLocal: true, isDefinition: true, scopeLine: 999, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!7818 = !DILocalVariable(name: "arg", arg: 1, scope: !7817, file: !939, line: 998, type: !1020)
!7819 = !DILocation(line: 998, column: 41, scope: !7817)
!7820 = !DILocalVariable(name: "pb", arg: 2, scope: !7817, file: !939, line: 998, type: !1501)
!7821 = !DILocation(line: 998, column: 59, scope: !7817)
!7822 = !DILocalVariable(name: "tag", arg: 3, scope: !7817, file: !939, line: 998, type: !1014)
!7823 = !DILocation(line: 998, column: 67, scope: !7817)
!7824 = !DILocalVariable(name: "size", arg: 4, scope: !7817, file: !939, line: 998, type: !1014)
!7825 = !DILocation(line: 998, column: 76, scope: !7817)
!7826 = !DILocalVariable(name: "uid", arg: 5, scope: !7817, file: !939, line: 998, type: !1017)
!7827 = !DILocation(line: 998, column: 86, scope: !7817)
!7828 = !DILocalVariable(name: "klv_offset", arg: 6, scope: !7817, file: !939, line: 998, type: !1015)
!7829 = !DILocation(line: 998, column: 99, scope: !7817)
!7830 = !DILocalVariable(name: "essence_group", scope: !7817, file: !939, line: 1000, type: !1074)
!7831 = !DILocation(line: 1000, column: 22, scope: !7817)
!7832 = !DILocation(line: 1000, column: 38, scope: !7817)
!7833 = !DILocation(line: 1001, column: 13, scope: !7817)
!7834 = !DILocation(line: 1001, column: 5, scope: !7817)
!7835 = !DILocation(line: 1003, column: 45, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7817, file: !939, line: 1001, column: 18)
!7837 = !DILocation(line: 1003, column: 35, scope: !7836)
!7838 = !DILocation(line: 1003, column: 9, scope: !7836)
!7839 = !DILocation(line: 1003, column: 24, scope: !7836)
!7840 = !DILocation(line: 1003, column: 33, scope: !7836)
!7841 = !DILocation(line: 1004, column: 9, scope: !7836)
!7842 = !DILocation(line: 1006, column: 42, scope: !7836)
!7843 = !DILocation(line: 1006, column: 47, scope: !7836)
!7844 = !DILocation(line: 1006, column: 62, scope: !7836)
!7845 = !DILocation(line: 1007, column: 47, scope: !7836)
!7846 = !DILocation(line: 1007, column: 62, scope: !7836)
!7847 = !DILocation(line: 1006, column: 16, scope: !7836)
!7848 = !DILocation(line: 1006, column: 9, scope: !7836)
!7849 = !DILocation(line: 1009, column: 5, scope: !7817)
!7850 = !DILocation(line: 1010, column: 1, scope: !7817)
!7851 = distinct !DISubprogram(name: "mxf_read_source_clip", scope: !939, file: !939, line: 904, type: !2450, isLocal: true, isDefinition: true, scopeLine: 905, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!7852 = !DILocalVariable(name: "arg", arg: 1, scope: !7851, file: !939, line: 904, type: !1020)
!7853 = !DILocation(line: 904, column: 39, scope: !7851)
!7854 = !DILocalVariable(name: "pb", arg: 2, scope: !7851, file: !939, line: 904, type: !1501)
!7855 = !DILocation(line: 904, column: 57, scope: !7851)
!7856 = !DILocalVariable(name: "tag", arg: 3, scope: !7851, file: !939, line: 904, type: !1014)
!7857 = !DILocation(line: 904, column: 65, scope: !7851)
!7858 = !DILocalVariable(name: "size", arg: 4, scope: !7851, file: !939, line: 904, type: !1014)
!7859 = !DILocation(line: 904, column: 74, scope: !7851)
!7860 = !DILocalVariable(name: "uid", arg: 5, scope: !7851, file: !939, line: 904, type: !1017)
!7861 = !DILocation(line: 904, column: 84, scope: !7851)
!7862 = !DILocalVariable(name: "klv_offset", arg: 6, scope: !7851, file: !939, line: 904, type: !1015)
!7863 = !DILocation(line: 904, column: 97, scope: !7851)
!7864 = !DILocalVariable(name: "source_clip", scope: !7851, file: !939, line: 906, type: !4522)
!7865 = !DILocation(line: 906, column: 29, scope: !7851)
!7866 = !DILocation(line: 906, column: 43, scope: !7851)
!7867 = !DILocation(line: 907, column: 12, scope: !7851)
!7868 = !DILocation(line: 907, column: 5, scope: !7851)
!7869 = !DILocation(line: 909, column: 43, scope: !7870)
!7870 = distinct !DILexicalBlock(scope: !7851, file: !939, line: 907, column: 17)
!7871 = !DILocation(line: 909, column: 33, scope: !7870)
!7872 = !DILocation(line: 909, column: 9, scope: !7870)
!7873 = !DILocation(line: 909, column: 22, scope: !7870)
!7874 = !DILocation(line: 909, column: 31, scope: !7870)
!7875 = !DILocation(line: 910, column: 9, scope: !7870)
!7876 = !DILocation(line: 912, column: 49, scope: !7870)
!7877 = !DILocation(line: 912, column: 39, scope: !7870)
!7878 = !DILocation(line: 912, column: 9, scope: !7870)
!7879 = !DILocation(line: 912, column: 22, scope: !7870)
!7880 = !DILocation(line: 912, column: 37, scope: !7870)
!7881 = !DILocation(line: 913, column: 9, scope: !7870)
!7882 = !DILocation(line: 916, column: 19, scope: !7870)
!7883 = !DILocation(line: 916, column: 23, scope: !7870)
!7884 = !DILocation(line: 916, column: 36, scope: !7870)
!7885 = !DILocation(line: 916, column: 9, scope: !7870)
!7886 = !DILocation(line: 917, column: 19, scope: !7870)
!7887 = !DILocation(line: 917, column: 23, scope: !7870)
!7888 = !DILocation(line: 917, column: 36, scope: !7870)
!7889 = !DILocation(line: 917, column: 9, scope: !7870)
!7890 = !DILocation(line: 918, column: 9, scope: !7870)
!7891 = !DILocation(line: 920, column: 50, scope: !7870)
!7892 = !DILocation(line: 920, column: 40, scope: !7870)
!7893 = !DILocation(line: 920, column: 9, scope: !7870)
!7894 = !DILocation(line: 920, column: 22, scope: !7870)
!7895 = !DILocation(line: 920, column: 38, scope: !7870)
!7896 = !DILocation(line: 921, column: 9, scope: !7870)
!7897 = !DILocation(line: 923, column: 5, scope: !7851)
!7898 = distinct !DISubprogram(name: "mxf_read_tagged_value", scope: !939, file: !939, line: 1264, type: !2450, isLocal: true, isDefinition: true, scopeLine: 1265, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!7899 = !DILocalVariable(name: "arg", arg: 1, scope: !7898, file: !939, line: 1264, type: !1020)
!7900 = !DILocation(line: 1264, column: 40, scope: !7898)
!7901 = !DILocalVariable(name: "pb", arg: 2, scope: !7898, file: !939, line: 1264, type: !1501)
!7902 = !DILocation(line: 1264, column: 58, scope: !7898)
!7903 = !DILocalVariable(name: "tag", arg: 3, scope: !7898, file: !939, line: 1264, type: !1014)
!7904 = !DILocation(line: 1264, column: 66, scope: !7898)
!7905 = !DILocalVariable(name: "size", arg: 4, scope: !7898, file: !939, line: 1264, type: !1014)
!7906 = !DILocation(line: 1264, column: 75, scope: !7898)
!7907 = !DILocalVariable(name: "uid", arg: 5, scope: !7898, file: !939, line: 1264, type: !1017)
!7908 = !DILocation(line: 1264, column: 85, scope: !7898)
!7909 = !DILocalVariable(name: "klv_offset", arg: 6, scope: !7898, file: !939, line: 1264, type: !1015)
!7910 = !DILocation(line: 1264, column: 98, scope: !7898)
!7911 = !DILocalVariable(name: "tagged_value", scope: !7898, file: !939, line: 1266, type: !1100)
!7912 = !DILocation(line: 1266, column: 21, scope: !7898)
!7913 = !DILocation(line: 1266, column: 36, scope: !7898)
!7914 = !DILocation(line: 1267, column: 13, scope: !7898)
!7915 = !DILocation(line: 1267, column: 5, scope: !7898)
!7916 = !DILocation(line: 1269, column: 40, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !7898, file: !939, line: 1267, column: 17)
!7918 = !DILocation(line: 1269, column: 44, scope: !7917)
!7919 = !DILocation(line: 1269, column: 51, scope: !7917)
!7920 = !DILocation(line: 1269, column: 65, scope: !7917)
!7921 = !DILocation(line: 1269, column: 16, scope: !7917)
!7922 = !DILocation(line: 1269, column: 9, scope: !7917)
!7923 = !DILocation(line: 1271, column: 40, scope: !7917)
!7924 = !DILocation(line: 1271, column: 54, scope: !7917)
!7925 = !DILocation(line: 1271, column: 58, scope: !7917)
!7926 = !DILocation(line: 1271, column: 16, scope: !7917)
!7927 = !DILocation(line: 1271, column: 9, scope: !7917)
!7928 = !DILocation(line: 1273, column: 5, scope: !7898)
!7929 = !DILocation(line: 1274, column: 1, scope: !7898)
!7930 = distinct !DISubprogram(name: "mxf_read_generic_descriptor", scope: !939, file: !939, line: 1142, type: !2450, isLocal: true, isDefinition: true, scopeLine: 1143, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!7931 = !DILocalVariable(name: "arg", arg: 1, scope: !7930, file: !939, line: 1142, type: !1020)
!7932 = !DILocation(line: 1142, column: 46, scope: !7930)
!7933 = !DILocalVariable(name: "pb", arg: 2, scope: !7930, file: !939, line: 1142, type: !1501)
!7934 = !DILocation(line: 1142, column: 64, scope: !7930)
!7935 = !DILocalVariable(name: "tag", arg: 3, scope: !7930, file: !939, line: 1142, type: !1014)
!7936 = !DILocation(line: 1142, column: 72, scope: !7930)
!7937 = !DILocalVariable(name: "size", arg: 4, scope: !7930, file: !939, line: 1142, type: !1014)
!7938 = !DILocation(line: 1142, column: 81, scope: !7930)
!7939 = !DILocalVariable(name: "uid", arg: 5, scope: !7930, file: !939, line: 1142, type: !1017)
!7940 = !DILocation(line: 1142, column: 91, scope: !7930)
!7941 = !DILocalVariable(name: "klv_offset", arg: 6, scope: !7930, file: !939, line: 1142, type: !1015)
!7942 = !DILocation(line: 1142, column: 104, scope: !7930)
!7943 = !DILocalVariable(name: "descriptor", scope: !7930, file: !939, line: 1144, type: !1021)
!7944 = !DILocation(line: 1144, column: 20, scope: !7930)
!7945 = !DILocation(line: 1144, column: 33, scope: !7930)
!7946 = !DILocalVariable(name: "entry_count", scope: !7930, file: !939, line: 1145, type: !1014)
!7947 = !DILocation(line: 1145, column: 9, scope: !7930)
!7948 = !DILocalVariable(name: "entry_size", scope: !7930, file: !939, line: 1145, type: !1014)
!7949 = !DILocation(line: 1145, column: 22, scope: !7930)
!7950 = !DILocation(line: 1147, column: 12, scope: !7930)
!7951 = !DILocation(line: 1147, column: 5, scope: !7930)
!7952 = !DILocation(line: 1149, column: 42, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7930, file: !939, line: 1147, column: 17)
!7954 = !DILocation(line: 1149, column: 47, scope: !7953)
!7955 = !DILocation(line: 1149, column: 59, scope: !7953)
!7956 = !DILocation(line: 1150, column: 47, scope: !7953)
!7957 = !DILocation(line: 1150, column: 59, scope: !7953)
!7958 = !DILocation(line: 1149, column: 16, scope: !7953)
!7959 = !DILocation(line: 1149, column: 9, scope: !7953)
!7960 = !DILocation(line: 1152, column: 42, scope: !7953)
!7961 = !DILocation(line: 1152, column: 32, scope: !7953)
!7962 = !DILocation(line: 1152, column: 9, scope: !7953)
!7963 = !DILocation(line: 1152, column: 21, scope: !7953)
!7964 = !DILocation(line: 1152, column: 30, scope: !7953)
!7965 = !DILocation(line: 1153, column: 9, scope: !7953)
!7966 = !DILocation(line: 1155, column: 19, scope: !7953)
!7967 = !DILocation(line: 1155, column: 23, scope: !7953)
!7968 = !DILocation(line: 1155, column: 35, scope: !7953)
!7969 = !DILocation(line: 1155, column: 9, scope: !7953)
!7970 = !DILocation(line: 1156, column: 9, scope: !7953)
!7971 = !DILocation(line: 1158, column: 19, scope: !7953)
!7972 = !DILocation(line: 1158, column: 23, scope: !7953)
!7973 = !DILocation(line: 1158, column: 35, scope: !7953)
!7974 = !DILocation(line: 1158, column: 9, scope: !7953)
!7975 = !DILocation(line: 1159, column: 9, scope: !7953)
!7976 = !DILocation(line: 1161, column: 49, scope: !7953)
!7977 = !DILocation(line: 1161, column: 39, scope: !7953)
!7978 = !DILocation(line: 1161, column: 9, scope: !7953)
!7979 = !DILocation(line: 1161, column: 21, scope: !7953)
!7980 = !DILocation(line: 1161, column: 37, scope: !7953)
!7981 = !DILocation(line: 1162, column: 9, scope: !7953)
!7982 = !DILocation(line: 1164, column: 19, scope: !7953)
!7983 = !DILocation(line: 1164, column: 23, scope: !7953)
!7984 = !DILocation(line: 1164, column: 35, scope: !7953)
!7985 = !DILocation(line: 1164, column: 9, scope: !7953)
!7986 = !DILocation(line: 1165, column: 9, scope: !7953)
!7987 = !DILocation(line: 1167, column: 39, scope: !7953)
!7988 = !DILocation(line: 1167, column: 29, scope: !7953)
!7989 = !DILocation(line: 1167, column: 9, scope: !7953)
!7990 = !DILocation(line: 1167, column: 21, scope: !7953)
!7991 = !DILocation(line: 1167, column: 27, scope: !7953)
!7992 = !DILocation(line: 1168, column: 9, scope: !7953)
!7993 = !DILocation(line: 1170, column: 40, scope: !7953)
!7994 = !DILocation(line: 1170, column: 30, scope: !7953)
!7995 = !DILocation(line: 1170, column: 9, scope: !7953)
!7996 = !DILocation(line: 1170, column: 21, scope: !7953)
!7997 = !DILocation(line: 1170, column: 28, scope: !7953)
!7998 = !DILocation(line: 1171, column: 9, scope: !7953)
!7999 = !DILocation(line: 1173, column: 44, scope: !7953)
!8000 = !DILocation(line: 1173, column: 36, scope: !7953)
!8001 = !DILocation(line: 1173, column: 9, scope: !7953)
!8002 = !DILocation(line: 1173, column: 21, scope: !7953)
!8003 = !DILocation(line: 1173, column: 34, scope: !7953)
!8004 = !DILocation(line: 1174, column: 9, scope: !7953)
!8005 = !DILocation(line: 1176, column: 33, scope: !7953)
!8006 = !DILocation(line: 1176, column: 23, scope: !7953)
!8007 = !DILocation(line: 1176, column: 21, scope: !7953)
!8008 = !DILocation(line: 1177, column: 32, scope: !7953)
!8009 = !DILocation(line: 1177, column: 22, scope: !7953)
!8010 = !DILocation(line: 1177, column: 20, scope: !7953)
!8011 = !DILocation(line: 1178, column: 13, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !7953, file: !939, line: 1178, column: 13)
!8013 = !DILocation(line: 1178, column: 24, scope: !8012)
!8014 = !DILocation(line: 1178, column: 13, scope: !7953)
!8015 = !DILocation(line: 1179, column: 17, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !8017, file: !939, line: 1179, column: 17)
!8017 = distinct !DILexicalBlock(scope: !8012, file: !939, line: 1178, column: 30)
!8018 = !DILocation(line: 1179, column: 29, scope: !8016)
!8019 = !DILocation(line: 1179, column: 17, scope: !8017)
!8020 = !DILocation(line: 1180, column: 59, scope: !8016)
!8021 = !DILocation(line: 1180, column: 49, scope: !8016)
!8022 = !DILocation(line: 1180, column: 17, scope: !8016)
!8023 = !DILocation(line: 1180, column: 29, scope: !8016)
!8024 = !DILocation(line: 1180, column: 47, scope: !8016)
!8025 = !DILocation(line: 1182, column: 17, scope: !8016)
!8026 = !DILocation(line: 1182, column: 29, scope: !8016)
!8027 = !DILocation(line: 1182, column: 47, scope: !8016)
!8028 = !DILocation(line: 1183, column: 17, scope: !8029)
!8029 = distinct !DILexicalBlock(scope: !8017, file: !939, line: 1183, column: 17)
!8030 = !DILocation(line: 1183, column: 29, scope: !8029)
!8031 = !DILocation(line: 1183, column: 17, scope: !8017)
!8032 = !DILocation(line: 1184, column: 59, scope: !8029)
!8033 = !DILocation(line: 1184, column: 49, scope: !8029)
!8034 = !DILocation(line: 1184, column: 17, scope: !8029)
!8035 = !DILocation(line: 1184, column: 29, scope: !8029)
!8036 = !DILocation(line: 1184, column: 47, scope: !8029)
!8037 = !DILocation(line: 1186, column: 17, scope: !8029)
!8038 = !DILocation(line: 1186, column: 29, scope: !8029)
!8039 = !DILocation(line: 1186, column: 47, scope: !8029)
!8040 = !DILocation(line: 1187, column: 9, scope: !8017)
!8041 = !DILocation(line: 1188, column: 87, scope: !8012)
!8042 = !DILocation(line: 1188, column: 13, scope: !8012)
!8043 = !DILocation(line: 1189, column: 9, scope: !7953)
!8044 = !DILocation(line: 1191, column: 50, scope: !7953)
!8045 = !DILocation(line: 1191, column: 40, scope: !7953)
!8046 = !DILocation(line: 1191, column: 9, scope: !7953)
!8047 = !DILocation(line: 1191, column: 21, scope: !7953)
!8048 = !DILocation(line: 1191, column: 34, scope: !7953)
!8049 = !DILocation(line: 1191, column: 38, scope: !7953)
!8050 = !DILocation(line: 1192, column: 50, scope: !7953)
!8051 = !DILocation(line: 1192, column: 40, scope: !7953)
!8052 = !DILocation(line: 1192, column: 9, scope: !7953)
!8053 = !DILocation(line: 1192, column: 21, scope: !7953)
!8054 = !DILocation(line: 1192, column: 34, scope: !7953)
!8055 = !DILocation(line: 1192, column: 38, scope: !7953)
!8056 = !DILocation(line: 1193, column: 9, scope: !7953)
!8057 = !DILocation(line: 1195, column: 47, scope: !7953)
!8058 = !DILocation(line: 1195, column: 39, scope: !7953)
!8059 = !DILocation(line: 1195, column: 9, scope: !7953)
!8060 = !DILocation(line: 1195, column: 21, scope: !7953)
!8061 = !DILocation(line: 1195, column: 37, scope: !7953)
!8062 = !DILocation(line: 1196, column: 9, scope: !7953)
!8063 = !DILocation(line: 1198, column: 49, scope: !7953)
!8064 = !DILocation(line: 1198, column: 39, scope: !7953)
!8065 = !DILocation(line: 1198, column: 9, scope: !7953)
!8066 = !DILocation(line: 1198, column: 21, scope: !7953)
!8067 = !DILocation(line: 1198, column: 37, scope: !7953)
!8068 = !DILocation(line: 1199, column: 9, scope: !7953)
!8069 = !DILocation(line: 1201, column: 51, scope: !7953)
!8070 = !DILocation(line: 1201, column: 41, scope: !7953)
!8071 = !DILocation(line: 1201, column: 9, scope: !7953)
!8072 = !DILocation(line: 1201, column: 21, scope: !7953)
!8073 = !DILocation(line: 1201, column: 39, scope: !7953)
!8074 = !DILocation(line: 1202, column: 9, scope: !7953)
!8075 = !DILocation(line: 1204, column: 50, scope: !7953)
!8076 = !DILocation(line: 1204, column: 40, scope: !7953)
!8077 = !DILocation(line: 1204, column: 9, scope: !7953)
!8078 = !DILocation(line: 1204, column: 21, scope: !7953)
!8079 = !DILocation(line: 1204, column: 38, scope: !7953)
!8080 = !DILocation(line: 1205, column: 9, scope: !7953)
!8081 = !DILocation(line: 1207, column: 49, scope: !7953)
!8082 = !DILocation(line: 1207, column: 39, scope: !7953)
!8083 = !DILocation(line: 1207, column: 9, scope: !7953)
!8084 = !DILocation(line: 1207, column: 21, scope: !7953)
!8085 = !DILocation(line: 1207, column: 33, scope: !7953)
!8086 = !DILocation(line: 1207, column: 37, scope: !7953)
!8087 = !DILocation(line: 1208, column: 49, scope: !7953)
!8088 = !DILocation(line: 1208, column: 39, scope: !7953)
!8089 = !DILocation(line: 1208, column: 9, scope: !7953)
!8090 = !DILocation(line: 1208, column: 21, scope: !7953)
!8091 = !DILocation(line: 1208, column: 33, scope: !7953)
!8092 = !DILocation(line: 1208, column: 37, scope: !7953)
!8093 = !DILocation(line: 1209, column: 9, scope: !7953)
!8094 = !DILocation(line: 1211, column: 19, scope: !7953)
!8095 = !DILocation(line: 1211, column: 23, scope: !7953)
!8096 = !DILocation(line: 1211, column: 35, scope: !7953)
!8097 = !DILocation(line: 1211, column: 9, scope: !7953)
!8098 = !DILocation(line: 1212, column: 9, scope: !7953)
!8099 = !DILocation(line: 1214, column: 42, scope: !7953)
!8100 = !DILocation(line: 1214, column: 32, scope: !7953)
!8101 = !DILocation(line: 1214, column: 9, scope: !7953)
!8102 = !DILocation(line: 1214, column: 21, scope: !7953)
!8103 = !DILocation(line: 1214, column: 30, scope: !7953)
!8104 = !DILocation(line: 1215, column: 9, scope: !7953)
!8105 = !DILocation(line: 1217, column: 49, scope: !7953)
!8106 = !DILocation(line: 1217, column: 39, scope: !7953)
!8107 = !DILocation(line: 1217, column: 9, scope: !7953)
!8108 = !DILocation(line: 1217, column: 21, scope: !7953)
!8109 = !DILocation(line: 1217, column: 37, scope: !7953)
!8110 = !DILocation(line: 1218, column: 9, scope: !7953)
!8111 = !DILocation(line: 1220, column: 31, scope: !7953)
!8112 = !DILocation(line: 1220, column: 35, scope: !7953)
!8113 = !DILocation(line: 1220, column: 9, scope: !7953)
!8114 = !DILocation(line: 1221, column: 9, scope: !7953)
!8115 = !DILocation(line: 1224, column: 22, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !7953, file: !939, line: 1224, column: 13)
!8117 = !DILocation(line: 1224, column: 15, scope: !8116)
!8118 = !DILocation(line: 1224, column: 13, scope: !7953)
!8119 = !DILocation(line: 1225, column: 17, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !8121, file: !939, line: 1225, column: 17)
!8121 = distinct !DILexicalBlock(scope: !8116, file: !939, line: 1224, column: 89)
!8122 = !DILocation(line: 1225, column: 29, scope: !8120)
!8123 = !DILocation(line: 1225, column: 17, scope: !8121)
!8124 = !DILocation(line: 1226, column: 17, scope: !8120)
!8125 = !DILocation(line: 1227, column: 21, scope: !8121)
!8126 = !DILocation(line: 1227, column: 33, scope: !8121)
!8127 = !DILocation(line: 1227, column: 13, scope: !8121)
!8128 = !DILocation(line: 1228, column: 13, scope: !8121)
!8129 = !DILocation(line: 1228, column: 25, scope: !8121)
!8130 = !DILocation(line: 1228, column: 40, scope: !8121)
!8131 = !DILocation(line: 1229, column: 47, scope: !8121)
!8132 = !DILocation(line: 1229, column: 37, scope: !8121)
!8133 = !DILocation(line: 1229, column: 13, scope: !8121)
!8134 = !DILocation(line: 1229, column: 25, scope: !8121)
!8135 = !DILocation(line: 1229, column: 35, scope: !8121)
!8136 = !DILocation(line: 1230, column: 18, scope: !8137)
!8137 = distinct !DILexicalBlock(scope: !8121, file: !939, line: 1230, column: 17)
!8138 = !DILocation(line: 1230, column: 30, scope: !8137)
!8139 = !DILocation(line: 1230, column: 17, scope: !8121)
!8140 = !DILocation(line: 1231, column: 17, scope: !8137)
!8141 = !DILocation(line: 1232, column: 42, scope: !8121)
!8142 = !DILocation(line: 1232, column: 13, scope: !8121)
!8143 = !DILocation(line: 1232, column: 25, scope: !8121)
!8144 = !DILocation(line: 1232, column: 40, scope: !8121)
!8145 = !DILocation(line: 1233, column: 23, scope: !8121)
!8146 = !DILocation(line: 1233, column: 27, scope: !8121)
!8147 = !DILocation(line: 1233, column: 39, scope: !8121)
!8148 = !DILocation(line: 1233, column: 50, scope: !8121)
!8149 = !DILocation(line: 1233, column: 13, scope: !8121)
!8150 = !DILocation(line: 1234, column: 9, scope: !8121)
!8151 = !DILocation(line: 1235, column: 22, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !7953, file: !939, line: 1235, column: 13)
!8153 = !DILocation(line: 1235, column: 15, scope: !8152)
!8154 = !DILocation(line: 1235, column: 13, scope: !7953)
!8155 = !DILocalVariable(name: "rsiz", scope: !8156, file: !939, line: 1236, type: !1004)
!8156 = distinct !DILexicalBlock(scope: !8152, file: !939, line: 1235, column: 67)
!8157 = !DILocation(line: 1236, column: 22, scope: !8156)
!8158 = !DILocation(line: 1236, column: 39, scope: !8156)
!8159 = !DILocation(line: 1236, column: 29, scope: !8156)
!8160 = !DILocation(line: 1237, column: 17, scope: !8161)
!8161 = distinct !DILexicalBlock(scope: !8156, file: !939, line: 1237, column: 17)
!8162 = !DILocation(line: 1237, column: 22, scope: !8161)
!8163 = !DILocation(line: 1237, column: 27, scope: !8161)
!8164 = !DILocation(line: 1238, column: 17, scope: !8161)
!8165 = !DILocation(line: 1238, column: 22, scope: !8161)
!8166 = !DILocation(line: 1237, column: 17, scope: !8167)
!8167 = !DILexicalBlockFile(scope: !8156, file: !939, discriminator: 1)
!8168 = !DILocation(line: 1239, column: 17, scope: !8161)
!8169 = !DILocation(line: 1239, column: 29, scope: !8161)
!8170 = !DILocation(line: 1239, column: 37, scope: !8161)
!8171 = !DILocation(line: 1240, column: 9, scope: !8156)
!8172 = !DILocation(line: 1241, column: 9, scope: !7953)
!8173 = !DILocation(line: 1243, column: 5, scope: !7930)
!8174 = !DILocation(line: 1244, column: 1, scope: !7930)
!8175 = distinct !DISubprogram(name: "mxf_read_track", scope: !939, file: !939, line: 954, type: !2450, isLocal: true, isDefinition: true, scopeLine: 955, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!8176 = !DILocalVariable(name: "arg", arg: 1, scope: !8175, file: !939, line: 954, type: !1020)
!8177 = !DILocation(line: 954, column: 33, scope: !8175)
!8178 = !DILocalVariable(name: "pb", arg: 2, scope: !8175, file: !939, line: 954, type: !1501)
!8179 = !DILocation(line: 954, column: 51, scope: !8175)
!8180 = !DILocalVariable(name: "tag", arg: 3, scope: !8175, file: !939, line: 954, type: !1014)
!8181 = !DILocation(line: 954, column: 59, scope: !8175)
!8182 = !DILocalVariable(name: "size", arg: 4, scope: !8175, file: !939, line: 954, type: !1014)
!8183 = !DILocation(line: 954, column: 68, scope: !8175)
!8184 = !DILocalVariable(name: "uid", arg: 5, scope: !8175, file: !939, line: 954, type: !1017)
!8185 = !DILocation(line: 954, column: 78, scope: !8175)
!8186 = !DILocalVariable(name: "klv_offset", arg: 6, scope: !8175, file: !939, line: 954, type: !1015)
!8187 = !DILocation(line: 954, column: 91, scope: !8175)
!8188 = !DILocalVariable(name: "track", scope: !8175, file: !939, line: 956, type: !1108)
!8189 = !DILocation(line: 956, column: 15, scope: !8175)
!8190 = !DILocation(line: 956, column: 23, scope: !8175)
!8191 = !DILocation(line: 957, column: 12, scope: !8175)
!8192 = !DILocation(line: 957, column: 5, scope: !8175)
!8193 = !DILocation(line: 959, column: 37, scope: !8194)
!8194 = distinct !DILexicalBlock(scope: !8175, file: !939, line: 957, column: 17)
!8195 = !DILocation(line: 959, column: 27, scope: !8194)
!8196 = !DILocation(line: 959, column: 9, scope: !8194)
!8197 = !DILocation(line: 959, column: 16, scope: !8194)
!8198 = !DILocation(line: 959, column: 25, scope: !8194)
!8199 = !DILocation(line: 960, column: 9, scope: !8194)
!8200 = !DILocation(line: 962, column: 19, scope: !8194)
!8201 = !DILocation(line: 962, column: 23, scope: !8194)
!8202 = !DILocation(line: 962, column: 30, scope: !8194)
!8203 = !DILocation(line: 962, column: 9, scope: !8194)
!8204 = !DILocation(line: 963, column: 9, scope: !8194)
!8205 = !DILocation(line: 965, column: 33, scope: !8194)
!8206 = !DILocation(line: 965, column: 37, scope: !8194)
!8207 = !DILocation(line: 965, column: 44, scope: !8194)
!8208 = !DILocation(line: 965, column: 51, scope: !8194)
!8209 = !DILocation(line: 965, column: 9, scope: !8194)
!8210 = !DILocation(line: 966, column: 9, scope: !8194)
!8211 = !DILocation(line: 968, column: 42, scope: !8194)
!8212 = !DILocation(line: 968, column: 32, scope: !8194)
!8213 = !DILocation(line: 968, column: 9, scope: !8194)
!8214 = !DILocation(line: 968, column: 16, scope: !8194)
!8215 = !DILocation(line: 968, column: 26, scope: !8194)
!8216 = !DILocation(line: 968, column: 30, scope: !8194)
!8217 = !DILocation(line: 969, column: 42, scope: !8194)
!8218 = !DILocation(line: 969, column: 32, scope: !8194)
!8219 = !DILocation(line: 969, column: 9, scope: !8194)
!8220 = !DILocation(line: 969, column: 16, scope: !8194)
!8221 = !DILocation(line: 969, column: 26, scope: !8194)
!8222 = !DILocation(line: 969, column: 30, scope: !8194)
!8223 = !DILocation(line: 970, column: 9, scope: !8194)
!8224 = !DILocation(line: 972, column: 19, scope: !8194)
!8225 = !DILocation(line: 972, column: 23, scope: !8194)
!8226 = !DILocation(line: 972, column: 30, scope: !8194)
!8227 = !DILocation(line: 972, column: 9, scope: !8194)
!8228 = !DILocation(line: 973, column: 9, scope: !8194)
!8229 = !DILocation(line: 975, column: 5, scope: !8175)
!8230 = distinct !DISubprogram(name: "mxf_read_timecode_component", scope: !939, file: !939, line: 926, type: !2450, isLocal: true, isDefinition: true, scopeLine: 927, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!8231 = !DILocalVariable(name: "arg", arg: 1, scope: !8230, file: !939, line: 926, type: !1020)
!8232 = !DILocation(line: 926, column: 46, scope: !8230)
!8233 = !DILocalVariable(name: "pb", arg: 2, scope: !8230, file: !939, line: 926, type: !1501)
!8234 = !DILocation(line: 926, column: 64, scope: !8230)
!8235 = !DILocalVariable(name: "tag", arg: 3, scope: !8230, file: !939, line: 926, type: !1014)
!8236 = !DILocation(line: 926, column: 72, scope: !8230)
!8237 = !DILocalVariable(name: "size", arg: 4, scope: !8230, file: !939, line: 926, type: !1014)
!8238 = !DILocation(line: 926, column: 81, scope: !8230)
!8239 = !DILocalVariable(name: "uid", arg: 5, scope: !8230, file: !939, line: 926, type: !1017)
!8240 = !DILocation(line: 926, column: 91, scope: !8230)
!8241 = !DILocalVariable(name: "klv_offset", arg: 6, scope: !8230, file: !939, line: 926, type: !1015)
!8242 = !DILocation(line: 926, column: 104, scope: !8230)
!8243 = !DILocalVariable(name: "mxf_timecode", scope: !8230, file: !939, line: 928, type: !1154)
!8244 = !DILocation(line: 928, column: 27, scope: !8230)
!8245 = !DILocation(line: 928, column: 42, scope: !8230)
!8246 = !DILocation(line: 929, column: 12, scope: !8230)
!8247 = !DILocation(line: 929, column: 5, scope: !8230)
!8248 = !DILocation(line: 931, column: 47, scope: !8249)
!8249 = distinct !DILexicalBlock(scope: !8230, file: !939, line: 929, column: 17)
!8250 = !DILocation(line: 931, column: 37, scope: !8249)
!8251 = !DILocation(line: 931, column: 9, scope: !8249)
!8252 = !DILocation(line: 931, column: 23, scope: !8249)
!8253 = !DILocation(line: 931, column: 35, scope: !8249)
!8254 = !DILocation(line: 932, column: 9, scope: !8249)
!8255 = !DILocation(line: 934, column: 9, scope: !8249)
!8256 = !DILocation(line: 934, column: 23, scope: !8249)
!8257 = !DILocation(line: 934, column: 42, scope: !8249)
!8258 = !DILocation(line: 934, column: 53, scope: !8249)
!8259 = !DILocation(line: 934, column: 43, scope: !8249)
!8260 = !DILocation(line: 934, column: 30, scope: !8249)
!8261 = !DILocation(line: 934, column: 30, scope: !8262)
!8262 = !DILexicalBlockFile(scope: !8249, file: !939, discriminator: 1)
!8263 = !DILocation(line: 935, column: 9, scope: !8249)
!8264 = !DILocation(line: 937, column: 44, scope: !8249)
!8265 = !DILocation(line: 937, column: 36, scope: !8249)
!8266 = !DILocation(line: 937, column: 9, scope: !8249)
!8267 = !DILocation(line: 937, column: 23, scope: !8249)
!8268 = !DILocation(line: 937, column: 34, scope: !8249)
!8269 = !DILocation(line: 938, column: 9, scope: !8249)
!8270 = !DILocation(line: 940, column: 5, scope: !8230)
!8271 = distinct !DISubprogram(name: "mxf_read_pulldown_component", scope: !939, file: !939, line: 943, type: !2450, isLocal: true, isDefinition: true, scopeLine: 944, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!8272 = !DILocalVariable(name: "arg", arg: 1, scope: !8271, file: !939, line: 943, type: !1020)
!8273 = !DILocation(line: 943, column: 46, scope: !8271)
!8274 = !DILocalVariable(name: "pb", arg: 2, scope: !8271, file: !939, line: 943, type: !1501)
!8275 = !DILocation(line: 943, column: 64, scope: !8271)
!8276 = !DILocalVariable(name: "tag", arg: 3, scope: !8271, file: !939, line: 943, type: !1014)
!8277 = !DILocation(line: 943, column: 72, scope: !8271)
!8278 = !DILocalVariable(name: "size", arg: 4, scope: !8271, file: !939, line: 943, type: !1014)
!8279 = !DILocation(line: 943, column: 81, scope: !8271)
!8280 = !DILocalVariable(name: "uid", arg: 5, scope: !8271, file: !939, line: 943, type: !1017)
!8281 = !DILocation(line: 943, column: 91, scope: !8271)
!8282 = !DILocalVariable(name: "klv_offset", arg: 6, scope: !8271, file: !939, line: 943, type: !1015)
!8283 = !DILocation(line: 943, column: 104, scope: !8271)
!8284 = !DILocalVariable(name: "mxf_pulldown", scope: !8271, file: !939, line: 945, type: !1178)
!8285 = !DILocation(line: 945, column: 27, scope: !8271)
!8286 = !DILocation(line: 945, column: 42, scope: !8271)
!8287 = !DILocation(line: 946, column: 12, scope: !8271)
!8288 = !DILocation(line: 946, column: 5, scope: !8271)
!8289 = !DILocation(line: 948, column: 19, scope: !8290)
!8290 = distinct !DILexicalBlock(scope: !8271, file: !939, line: 946, column: 17)
!8291 = !DILocation(line: 948, column: 23, scope: !8290)
!8292 = !DILocation(line: 948, column: 37, scope: !8290)
!8293 = !DILocation(line: 948, column: 9, scope: !8290)
!8294 = !DILocation(line: 949, column: 9, scope: !8290)
!8295 = !DILocation(line: 951, column: 5, scope: !8271)
!8296 = distinct !DISubprogram(name: "mxf_read_cryptographic_context", scope: !939, file: !939, line: 830, type: !2450, isLocal: true, isDefinition: true, scopeLine: 831, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!8297 = !DILocalVariable(name: "arg", arg: 1, scope: !8296, file: !939, line: 830, type: !1020)
!8298 = !DILocation(line: 830, column: 49, scope: !8296)
!8299 = !DILocalVariable(name: "pb", arg: 2, scope: !8296, file: !939, line: 830, type: !1501)
!8300 = !DILocation(line: 830, column: 67, scope: !8296)
!8301 = !DILocalVariable(name: "tag", arg: 3, scope: !8296, file: !939, line: 830, type: !1014)
!8302 = !DILocation(line: 830, column: 75, scope: !8296)
!8303 = !DILocalVariable(name: "size", arg: 4, scope: !8296, file: !939, line: 830, type: !1014)
!8304 = !DILocation(line: 830, column: 84, scope: !8296)
!8305 = !DILocalVariable(name: "uid", arg: 5, scope: !8296, file: !939, line: 830, type: !1017)
!8306 = !DILocation(line: 830, column: 94, scope: !8296)
!8307 = !DILocalVariable(name: "klv_offset", arg: 6, scope: !8296, file: !939, line: 830, type: !1015)
!8308 = !DILocation(line: 830, column: 107, scope: !8296)
!8309 = !DILocalVariable(name: "cryptocontext", scope: !8296, file: !939, line: 832, type: !1171)
!8310 = !DILocation(line: 832, column: 23, scope: !8296)
!8311 = !DILocation(line: 832, column: 39, scope: !8296)
!8312 = !DILocation(line: 833, column: 9, scope: !8313)
!8313 = distinct !DILexicalBlock(scope: !8296, file: !939, line: 833, column: 9)
!8314 = !DILocation(line: 833, column: 14, scope: !8313)
!8315 = !DILocation(line: 833, column: 9, scope: !8296)
!8316 = !DILocation(line: 834, column: 9, scope: !8313)
!8317 = !DILocation(line: 835, column: 18, scope: !8318)
!8318 = distinct !DILexicalBlock(scope: !8296, file: !939, line: 835, column: 9)
!8319 = !DILocation(line: 835, column: 11, scope: !8318)
!8320 = !DILocation(line: 835, column: 9, scope: !8296)
!8321 = !DILocation(line: 836, column: 19, scope: !8318)
!8322 = !DILocation(line: 836, column: 23, scope: !8318)
!8323 = !DILocation(line: 836, column: 38, scope: !8318)
!8324 = !DILocation(line: 836, column: 9, scope: !8318)
!8325 = !DILocation(line: 837, column: 5, scope: !8296)
!8326 = !DILocation(line: 838, column: 1, scope: !8296)
!8327 = distinct !DISubprogram(name: "mxf_read_index_table_segment", scope: !939, file: !939, line: 1085, type: !2450, isLocal: true, isDefinition: true, scopeLine: 1086, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!8328 = !DILocalVariable(name: "arg", arg: 1, scope: !8327, file: !939, line: 1085, type: !1020)
!8329 = !DILocation(line: 1085, column: 47, scope: !8327)
!8330 = !DILocalVariable(name: "pb", arg: 2, scope: !8327, file: !939, line: 1085, type: !1501)
!8331 = !DILocation(line: 1085, column: 65, scope: !8327)
!8332 = !DILocalVariable(name: "tag", arg: 3, scope: !8327, file: !939, line: 1085, type: !1014)
!8333 = !DILocation(line: 1085, column: 73, scope: !8327)
!8334 = !DILocalVariable(name: "size", arg: 4, scope: !8327, file: !939, line: 1085, type: !1014)
!8335 = !DILocation(line: 1085, column: 82, scope: !8327)
!8336 = !DILocalVariable(name: "uid", arg: 5, scope: !8327, file: !939, line: 1085, type: !1017)
!8337 = !DILocation(line: 1085, column: 92, scope: !8327)
!8338 = !DILocalVariable(name: "klv_offset", arg: 6, scope: !8327, file: !939, line: 1085, type: !1015)
!8339 = !DILocation(line: 1085, column: 105, scope: !8327)
!8340 = !DILocalVariable(name: "segment", scope: !8327, file: !939, line: 1087, type: !1133)
!8341 = !DILocation(line: 1087, column: 27, scope: !8327)
!8342 = !DILocation(line: 1087, column: 37, scope: !8327)
!8343 = !DILocation(line: 1088, column: 12, scope: !8327)
!8344 = !DILocation(line: 1088, column: 5, scope: !8327)
!8345 = !DILocation(line: 1090, column: 51, scope: !8346)
!8346 = distinct !DILexicalBlock(scope: !8327, file: !939, line: 1088, column: 17)
!8347 = !DILocation(line: 1090, column: 41, scope: !8346)
!8348 = !DILocation(line: 1090, column: 9, scope: !8346)
!8349 = !DILocation(line: 1090, column: 18, scope: !8346)
!8350 = !DILocation(line: 1090, column: 39, scope: !8346)
!8351 = !DILocation(line: 1091, column: 51, scope: !8346)
!8352 = !DILocation(line: 1091, column: 60, scope: !8346)
!8353 = !DILocation(line: 1091, column: 9, scope: !8346)
!8354 = !DILocation(line: 1092, column: 9, scope: !8346)
!8355 = !DILocation(line: 1094, column: 40, scope: !8346)
!8356 = !DILocation(line: 1094, column: 30, scope: !8346)
!8357 = !DILocation(line: 1094, column: 9, scope: !8346)
!8358 = !DILocation(line: 1094, column: 18, scope: !8346)
!8359 = !DILocation(line: 1094, column: 28, scope: !8346)
!8360 = !DILocation(line: 1095, column: 42, scope: !8346)
!8361 = !DILocation(line: 1095, column: 51, scope: !8346)
!8362 = !DILocation(line: 1095, column: 9, scope: !8346)
!8363 = !DILocation(line: 1096, column: 9, scope: !8346)
!8364 = !DILocation(line: 1098, column: 39, scope: !8346)
!8365 = !DILocation(line: 1098, column: 29, scope: !8346)
!8366 = !DILocation(line: 1098, column: 9, scope: !8346)
!8367 = !DILocation(line: 1098, column: 18, scope: !8346)
!8368 = !DILocation(line: 1098, column: 27, scope: !8346)
!8369 = !DILocation(line: 1099, column: 41, scope: !8346)
!8370 = !DILocation(line: 1099, column: 50, scope: !8346)
!8371 = !DILocation(line: 1099, column: 9, scope: !8346)
!8372 = !DILocation(line: 1100, column: 9, scope: !8346)
!8373 = !DILocation(line: 1102, column: 9, scope: !8346)
!8374 = !DILocation(line: 1103, column: 43, scope: !8346)
!8375 = !DILocation(line: 1103, column: 47, scope: !8346)
!8376 = !DILocation(line: 1103, column: 16, scope: !8346)
!8377 = !DILocation(line: 1103, column: 9, scope: !8346)
!8378 = !DILocation(line: 1105, column: 50, scope: !8346)
!8379 = !DILocation(line: 1105, column: 40, scope: !8346)
!8380 = !DILocation(line: 1105, column: 9, scope: !8346)
!8381 = !DILocation(line: 1105, column: 18, scope: !8346)
!8382 = !DILocation(line: 1105, column: 34, scope: !8346)
!8383 = !DILocation(line: 1105, column: 38, scope: !8346)
!8384 = !DILocation(line: 1106, column: 50, scope: !8346)
!8385 = !DILocation(line: 1106, column: 40, scope: !8346)
!8386 = !DILocation(line: 1106, column: 9, scope: !8346)
!8387 = !DILocation(line: 1106, column: 18, scope: !8346)
!8388 = !DILocation(line: 1106, column: 34, scope: !8346)
!8389 = !DILocation(line: 1106, column: 38, scope: !8346)
!8390 = !DILocation(line: 1107, column: 50, scope: !8346)
!8391 = !DILocation(line: 1107, column: 59, scope: !8346)
!8392 = !DILocation(line: 1107, column: 75, scope: !8346)
!8393 = !DILocation(line: 1108, column: 17, scope: !8346)
!8394 = !DILocation(line: 1108, column: 26, scope: !8346)
!8395 = !DILocation(line: 1108, column: 42, scope: !8346)
!8396 = !DILocation(line: 1107, column: 9, scope: !8346)
!8397 = !DILocation(line: 1109, column: 9, scope: !8346)
!8398 = !DILocation(line: 1111, column: 51, scope: !8346)
!8399 = !DILocation(line: 1111, column: 41, scope: !8346)
!8400 = !DILocation(line: 1111, column: 9, scope: !8346)
!8401 = !DILocation(line: 1111, column: 18, scope: !8346)
!8402 = !DILocation(line: 1111, column: 39, scope: !8346)
!8403 = !DILocation(line: 1112, column: 69, scope: !8346)
!8404 = !DILocation(line: 1112, column: 78, scope: !8346)
!8405 = !DILocation(line: 1112, column: 9, scope: !8346)
!8406 = !DILocation(line: 1113, column: 9, scope: !8346)
!8407 = !DILocation(line: 1115, column: 45, scope: !8346)
!8408 = !DILocation(line: 1115, column: 35, scope: !8346)
!8409 = !DILocation(line: 1115, column: 9, scope: !8346)
!8410 = !DILocation(line: 1115, column: 18, scope: !8346)
!8411 = !DILocation(line: 1115, column: 33, scope: !8346)
!8412 = !DILocation(line: 1116, column: 64, scope: !8346)
!8413 = !DILocation(line: 1116, column: 73, scope: !8346)
!8414 = !DILocation(line: 1116, column: 9, scope: !8346)
!8415 = !DILocation(line: 1117, column: 9, scope: !8346)
!8416 = !DILocation(line: 1119, column: 5, scope: !8327)
!8417 = !DILocation(line: 1120, column: 1, scope: !8327)
!8418 = distinct !DISubprogram(name: "mxf_read_essence_container_data", scope: !939, file: !939, line: 1036, type: !2450, isLocal: true, isDefinition: true, scopeLine: 1037, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!8419 = !DILocalVariable(name: "arg", arg: 1, scope: !8418, file: !939, line: 1036, type: !1020)
!8420 = !DILocation(line: 1036, column: 50, scope: !8418)
!8421 = !DILocalVariable(name: "pb", arg: 2, scope: !8418, file: !939, line: 1036, type: !1501)
!8422 = !DILocation(line: 1036, column: 68, scope: !8418)
!8423 = !DILocalVariable(name: "tag", arg: 3, scope: !8418, file: !939, line: 1036, type: !1014)
!8424 = !DILocation(line: 1036, column: 76, scope: !8418)
!8425 = !DILocalVariable(name: "size", arg: 4, scope: !8418, file: !939, line: 1036, type: !1014)
!8426 = !DILocation(line: 1036, column: 85, scope: !8418)
!8427 = !DILocalVariable(name: "uid", arg: 5, scope: !8418, file: !939, line: 1036, type: !1017)
!8428 = !DILocation(line: 1036, column: 95, scope: !8418)
!8429 = !DILocalVariable(name: "klv_offset", arg: 6, scope: !8418, file: !939, line: 1036, type: !1015)
!8430 = !DILocation(line: 1036, column: 108, scope: !8418)
!8431 = !DILocalVariable(name: "essence_data", scope: !8418, file: !939, line: 1038, type: !4783)
!8432 = !DILocation(line: 1038, column: 30, scope: !8418)
!8433 = !DILocation(line: 1038, column: 45, scope: !8418)
!8434 = !DILocation(line: 1039, column: 12, scope: !8418)
!8435 = !DILocation(line: 1039, column: 5, scope: !8418)
!8436 = !DILocation(line: 1042, column: 23, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8418, file: !939, line: 1039, column: 17)
!8438 = !DILocation(line: 1042, column: 27, scope: !8437)
!8439 = !DILocation(line: 1042, column: 41, scope: !8437)
!8440 = !DILocation(line: 1042, column: 13, scope: !8437)
!8441 = !DILocation(line: 1043, column: 23, scope: !8437)
!8442 = !DILocation(line: 1043, column: 27, scope: !8437)
!8443 = !DILocation(line: 1043, column: 41, scope: !8437)
!8444 = !DILocation(line: 1043, column: 13, scope: !8437)
!8445 = !DILocation(line: 1044, column: 13, scope: !8437)
!8446 = !DILocation(line: 1046, column: 49, scope: !8437)
!8447 = !DILocation(line: 1046, column: 39, scope: !8437)
!8448 = !DILocation(line: 1046, column: 13, scope: !8437)
!8449 = !DILocation(line: 1046, column: 27, scope: !8437)
!8450 = !DILocation(line: 1046, column: 37, scope: !8437)
!8451 = !DILocation(line: 1047, column: 13, scope: !8437)
!8452 = !DILocation(line: 1049, column: 48, scope: !8437)
!8453 = !DILocation(line: 1049, column: 38, scope: !8437)
!8454 = !DILocation(line: 1049, column: 13, scope: !8437)
!8455 = !DILocation(line: 1049, column: 27, scope: !8437)
!8456 = !DILocation(line: 1049, column: 36, scope: !8437)
!8457 = !DILocation(line: 1050, column: 13, scope: !8437)
!8458 = !DILocation(line: 1052, column: 5, scope: !8418)
!8459 = distinct !DISubprogram(name: "mxf_read_utf16be_string", scope: !939, file: !939, line: 884, type: !8460, isLocal: true, isDefinition: true, scopeLine: 884, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!8460 = !DISubroutineType(types: !8461)
!8461 = !{!1014, !1501, !1014, !8462}
!8462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64, align: 64)
!8463 = !DILocalVariable(name: "pb", arg: 1, scope: !8459, file: !939, line: 884, type: !1501)
!8464 = !DILocation(line: 884, column: 49, scope: !8459)
!8465 = !DILocalVariable(name: "size", arg: 2, scope: !8459, file: !939, line: 884, type: !1014)
!8466 = !DILocation(line: 884, column: 57, scope: !8459)
!8467 = !DILocalVariable(name: "str", arg: 3, scope: !8459, file: !939, line: 884, type: !8462)
!8468 = !DILocation(line: 884, column: 70, scope: !8459)
!8469 = !DILocation(line: 884, column: 106, scope: !8459)
!8470 = !DILocation(line: 884, column: 110, scope: !8459)
!8471 = !DILocation(line: 884, column: 116, scope: !8459)
!8472 = !DILocation(line: 884, column: 84, scope: !8459)
!8473 = !DILocation(line: 884, column: 77, scope: !8459)
!8474 = distinct !DISubprogram(name: "mxf_read_utf16_string", scope: !939, file: !939, line: 853, type: !8475, isLocal: true, isDefinition: true, scopeLine: 854, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!8475 = !DISubroutineType(types: !8476)
!8476 = !{!1014, !1501, !1014, !8462, !1014}
!8477 = !DILocalVariable(name: "pb", arg: 1, scope: !8474, file: !939, line: 853, type: !1501)
!8478 = !DILocation(line: 853, column: 54, scope: !8474)
!8479 = !DILocalVariable(name: "size", arg: 2, scope: !8474, file: !939, line: 853, type: !1014)
!8480 = !DILocation(line: 853, column: 62, scope: !8474)
!8481 = !DILocalVariable(name: "str", arg: 3, scope: !8474, file: !939, line: 853, type: !8462)
!8482 = !DILocation(line: 853, column: 75, scope: !8474)
!8483 = !DILocalVariable(name: "be", arg: 4, scope: !8474, file: !939, line: 853, type: !1014)
!8484 = !DILocation(line: 853, column: 84, scope: !8474)
!8485 = !DILocalVariable(name: "ret", scope: !8474, file: !939, line: 855, type: !1014)
!8486 = !DILocation(line: 855, column: 9, scope: !8474)
!8487 = !DILocalVariable(name: "buf_size", scope: !8474, file: !939, line: 856, type: !1387)
!8488 = !DILocation(line: 856, column: 12, scope: !8474)
!8489 = !DILocation(line: 858, column: 9, scope: !8490)
!8490 = distinct !DILexicalBlock(scope: !8474, file: !939, line: 858, column: 9)
!8491 = !DILocation(line: 858, column: 14, scope: !8490)
!8492 = !DILocation(line: 858, column: 18, scope: !8490)
!8493 = !DILocation(line: 858, column: 21, scope: !8494)
!8494 = !DILexicalBlockFile(scope: !8490, file: !939, discriminator: 1)
!8495 = !DILocation(line: 858, column: 26, scope: !8494)
!8496 = !DILocation(line: 858, column: 9, scope: !8494)
!8497 = !DILocation(line: 859, column: 9, scope: !8490)
!8498 = !DILocation(line: 861, column: 16, scope: !8474)
!8499 = !DILocation(line: 861, column: 23, scope: !8474)
!8500 = !DILocation(line: 861, column: 28, scope: !8474)
!8501 = !DILocation(line: 861, column: 21, scope: !8474)
!8502 = !DILocation(line: 861, column: 32, scope: !8474)
!8503 = !DILocation(line: 861, column: 14, scope: !8474)
!8504 = !DILocation(line: 862, column: 22, scope: !8474)
!8505 = !DILocation(line: 862, column: 12, scope: !8474)
!8506 = !DILocation(line: 862, column: 6, scope: !8474)
!8507 = !DILocation(line: 862, column: 10, scope: !8474)
!8508 = !DILocation(line: 863, column: 11, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8474, file: !939, line: 863, column: 9)
!8510 = !DILocation(line: 863, column: 10, scope: !8509)
!8511 = !DILocation(line: 863, column: 9, scope: !8474)
!8512 = !DILocation(line: 864, column: 9, scope: !8509)
!8513 = !DILocation(line: 866, column: 9, scope: !8514)
!8514 = distinct !DILexicalBlock(scope: !8474, file: !939, line: 866, column: 9)
!8515 = !DILocation(line: 866, column: 9, scope: !8474)
!8516 = !DILocation(line: 867, column: 32, scope: !8514)
!8517 = !DILocation(line: 867, column: 36, scope: !8514)
!8518 = !DILocation(line: 867, column: 43, scope: !8514)
!8519 = !DILocation(line: 867, column: 42, scope: !8514)
!8520 = !DILocation(line: 867, column: 48, scope: !8514)
!8521 = !DILocation(line: 867, column: 15, scope: !8514)
!8522 = !DILocation(line: 867, column: 13, scope: !8514)
!8523 = !DILocation(line: 867, column: 9, scope: !8514)
!8524 = !DILocation(line: 869, column: 32, scope: !8514)
!8525 = !DILocation(line: 869, column: 36, scope: !8514)
!8526 = !DILocation(line: 869, column: 43, scope: !8514)
!8527 = !DILocation(line: 869, column: 42, scope: !8514)
!8528 = !DILocation(line: 869, column: 48, scope: !8514)
!8529 = !DILocation(line: 869, column: 15, scope: !8514)
!8530 = !DILocation(line: 869, column: 13, scope: !8514)
!8531 = !DILocation(line: 871, column: 9, scope: !8532)
!8532 = distinct !DILexicalBlock(scope: !8474, file: !939, line: 871, column: 9)
!8533 = !DILocation(line: 871, column: 13, scope: !8532)
!8534 = !DILocation(line: 871, column: 9, scope: !8474)
!8535 = !DILocation(line: 872, column: 18, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !8532, file: !939, line: 871, column: 18)
!8537 = !DILocation(line: 872, column: 9, scope: !8536)
!8538 = !DILocation(line: 873, column: 16, scope: !8536)
!8539 = !DILocation(line: 873, column: 9, scope: !8536)
!8540 = !DILocation(line: 876, column: 12, scope: !8474)
!8541 = !DILocation(line: 876, column: 5, scope: !8474)
!8542 = !DILocation(line: 877, column: 1, scope: !8474)
!8543 = distinct !DISubprogram(name: "mxf_uid_to_str", scope: !939, file: !939, line: 1845, type: !8544, isLocal: true, isDefinition: true, scopeLine: 1846, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!8544 = !DISubroutineType(types: !8545)
!8545 = !{!1014, !1017, !8462}
!8546 = !DILocalVariable(name: "uid", arg: 1, scope: !8543, file: !939, line: 1845, type: !1017)
!8547 = !DILocation(line: 1845, column: 31, scope: !8543)
!8548 = !DILocalVariable(name: "str", arg: 2, scope: !8543, file: !939, line: 1845, type: !8462)
!8549 = !DILocation(line: 1845, column: 43, scope: !8543)
!8550 = !DILocalVariable(name: "i", scope: !8543, file: !939, line: 1847, type: !1014)
!8551 = !DILocation(line: 1847, column: 9, scope: !8543)
!8552 = !DILocalVariable(name: "p", scope: !8543, file: !939, line: 1848, type: !1096)
!8553 = !DILocation(line: 1848, column: 11, scope: !8543)
!8554 = !DILocation(line: 1849, column: 16, scope: !8543)
!8555 = !DILocation(line: 1849, column: 10, scope: !8543)
!8556 = !DILocation(line: 1849, column: 14, scope: !8543)
!8557 = !DILocation(line: 1849, column: 7, scope: !8543)
!8558 = !DILocation(line: 1850, column: 10, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !8543, file: !939, line: 1850, column: 9)
!8560 = !DILocation(line: 1850, column: 9, scope: !8543)
!8561 = !DILocation(line: 1851, column: 9, scope: !8559)
!8562 = !DILocation(line: 1852, column: 12, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !8543, file: !939, line: 1852, column: 5)
!8564 = !DILocation(line: 1852, column: 10, scope: !8563)
!8565 = !DILocation(line: 1852, column: 17, scope: !8566)
!8566 = !DILexicalBlockFile(scope: !8567, file: !939, discriminator: 1)
!8567 = distinct !DILexicalBlock(scope: !8563, file: !939, line: 1852, column: 5)
!8568 = !DILocation(line: 1852, column: 19, scope: !8566)
!8569 = !DILocation(line: 1852, column: 5, scope: !8566)
!8570 = !DILocation(line: 1853, column: 18, scope: !8571)
!8571 = distinct !DILexicalBlock(scope: !8567, file: !939, line: 1852, column: 39)
!8572 = !DILocation(line: 1853, column: 40, scope: !8571)
!8573 = !DILocation(line: 1853, column: 36, scope: !8571)
!8574 = !DILocation(line: 1853, column: 9, scope: !8571)
!8575 = !DILocation(line: 1854, column: 11, scope: !8571)
!8576 = !DILocation(line: 1855, column: 13, scope: !8577)
!8577 = distinct !DILexicalBlock(scope: !8571, file: !939, line: 1855, column: 13)
!8578 = !DILocation(line: 1855, column: 15, scope: !8577)
!8579 = !DILocation(line: 1855, column: 20, scope: !8577)
!8580 = !DILocation(line: 1855, column: 23, scope: !8581)
!8581 = !DILexicalBlockFile(scope: !8577, file: !939, discriminator: 1)
!8582 = !DILocation(line: 1855, column: 25, scope: !8581)
!8583 = !DILocation(line: 1855, column: 30, scope: !8581)
!8584 = !DILocation(line: 1855, column: 33, scope: !8585)
!8585 = !DILexicalBlockFile(scope: !8577, file: !939, discriminator: 2)
!8586 = !DILocation(line: 1855, column: 35, scope: !8585)
!8587 = !DILocation(line: 1855, column: 40, scope: !8585)
!8588 = !DILocation(line: 1855, column: 43, scope: !8589)
!8589 = !DILexicalBlockFile(scope: !8577, file: !939, discriminator: 3)
!8590 = !DILocation(line: 1855, column: 45, scope: !8589)
!8591 = !DILocation(line: 1855, column: 13, scope: !8589)
!8592 = !DILocation(line: 1856, column: 22, scope: !8593)
!8593 = distinct !DILexicalBlock(scope: !8577, file: !939, line: 1855, column: 51)
!8594 = !DILocation(line: 1856, column: 13, scope: !8593)
!8595 = !DILocation(line: 1857, column: 14, scope: !8593)
!8596 = !DILocation(line: 1858, column: 9, scope: !8593)
!8597 = !DILocation(line: 1859, column: 5, scope: !8571)
!8598 = !DILocation(line: 1852, column: 35, scope: !8599)
!8599 = !DILexicalBlockFile(scope: !8567, file: !939, discriminator: 2)
!8600 = !DILocation(line: 1852, column: 5, scope: !8599)
!8601 = distinct !{!8601, !8602}
!8602 = !DILocation(line: 1852, column: 5, scope: !8543)
!8603 = !DILocation(line: 1860, column: 5, scope: !8543)
!8604 = !DILocation(line: 1861, column: 1, scope: !8543)
!8605 = distinct !DISubprogram(name: "mxf_timestamp_to_int64", scope: !939, file: !939, line: 2556, type: !8606, isLocal: true, isDefinition: true, scopeLine: 2557, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!8606 = !DISubroutineType(types: !8607)
!8607 = !{!1015, !1125}
!8608 = !DILocalVariable(name: "a", arg: 1, scope: !8609, file: !8610, line: 127, type: !1014)
!8609 = distinct !DISubprogram(name: "av_clip_c", scope: !8610, file: !8610, line: 127, type: !8611, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!8610 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!8611 = !DISubroutineType(types: !8612)
!8612 = !{!1014, !1014, !1014, !1014}
!8613 = !DILocation(line: 127, column: 87, scope: !8609, inlinedAt: !8614)
!8614 = distinct !DILocation(line: 2570, column: 20, scope: !8605)
!8615 = !DILocalVariable(name: "amin", arg: 2, scope: !8609, file: !8610, line: 127, type: !1014)
!8616 = !DILocation(line: 127, column: 94, scope: !8609, inlinedAt: !8614)
!8617 = !DILocalVariable(name: "amax", arg: 3, scope: !8609, file: !8610, line: 127, type: !1014)
!8618 = !DILocation(line: 127, column: 104, scope: !8609, inlinedAt: !8614)
!8619 = !DILocation(line: 127, column: 87, scope: !8609, inlinedAt: !8620)
!8620 = distinct !DILocation(line: 2571, column: 20, scope: !8605)
!8621 = !DILocation(line: 127, column: 94, scope: !8609, inlinedAt: !8620)
!8622 = !DILocation(line: 127, column: 104, scope: !8609, inlinedAt: !8620)
!8623 = !DILocation(line: 127, column: 87, scope: !8609, inlinedAt: !8624)
!8624 = distinct !DILocation(line: 2572, column: 19, scope: !8605)
!8625 = !DILocation(line: 127, column: 94, scope: !8609, inlinedAt: !8624)
!8626 = !DILocation(line: 127, column: 104, scope: !8609, inlinedAt: !8624)
!8627 = !DILocation(line: 127, column: 87, scope: !8609, inlinedAt: !8628)
!8628 = distinct !DILocation(line: 2573, column: 19, scope: !8605)
!8629 = !DILocation(line: 127, column: 94, scope: !8609, inlinedAt: !8628)
!8630 = !DILocation(line: 127, column: 104, scope: !8609, inlinedAt: !8628)
!8631 = !DILocation(line: 127, column: 87, scope: !8609, inlinedAt: !8632)
!8632 = distinct !DILocation(line: 2574, column: 13, scope: !8605)
!8633 = !DILocation(line: 127, column: 94, scope: !8609, inlinedAt: !8632)
!8634 = !DILocation(line: 127, column: 104, scope: !8609, inlinedAt: !8632)
!8635 = !DILocation(line: 127, column: 87, scope: !8609, inlinedAt: !8636)
!8636 = distinct !DILocation(line: 2569, column: 19, scope: !8605)
!8637 = !DILocation(line: 127, column: 94, scope: !8609, inlinedAt: !8636)
!8638 = !DILocation(line: 127, column: 104, scope: !8609, inlinedAt: !8636)
!8639 = !DILocalVariable(name: "timestamp", arg: 1, scope: !8605, file: !939, line: 2556, type: !1125)
!8640 = !DILocation(line: 2556, column: 48, scope: !8605)
!8641 = !DILocalVariable(name: "time", scope: !8605, file: !939, line: 2558, type: !8642)
!8642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !8643, line: 133, size: 448, align: 64, elements: !8644)
!8643 = !DIFile(filename: "/usr/include/time.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!8644 = !{!8645, !8646, !8647, !8648, !8649, !8650, !8651, !8652, !8653, !8654, !8655}
!8645 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !8642, file: !8643, line: 135, baseType: !1014, size: 32, align: 32)
!8646 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !8642, file: !8643, line: 136, baseType: !1014, size: 32, align: 32, offset: 32)
!8647 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !8642, file: !8643, line: 137, baseType: !1014, size: 32, align: 32, offset: 64)
!8648 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !8642, file: !8643, line: 138, baseType: !1014, size: 32, align: 32, offset: 96)
!8649 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !8642, file: !8643, line: 139, baseType: !1014, size: 32, align: 32, offset: 128)
!8650 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !8642, file: !8643, line: 140, baseType: !1014, size: 32, align: 32, offset: 160)
!8651 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !8642, file: !8643, line: 141, baseType: !1014, size: 32, align: 32, offset: 192)
!8652 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !8642, file: !8643, line: 142, baseType: !1014, size: 32, align: 32, offset: 224)
!8653 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !8642, file: !8643, line: 143, baseType: !1014, size: 32, align: 32, offset: 256)
!8654 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_gmtoff", scope: !8642, file: !8643, line: 149, baseType: !1016, size: 64, align: 64, offset: 320)
!8655 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_zone", scope: !8642, file: !8643, line: 150, baseType: !1199, size: 64, align: 64, offset: 384)
!8656 = !DILocation(line: 2558, column: 15, scope: !8605)
!8657 = !DILocalVariable(name: "msecs", scope: !8605, file: !939, line: 2559, type: !1014)
!8658 = !DILocation(line: 2559, column: 9, scope: !8605)
!8659 = !DILocation(line: 2560, column: 21, scope: !8605)
!8660 = !DILocation(line: 2560, column: 31, scope: !8605)
!8661 = !DILocation(line: 2560, column: 38, scope: !8605)
!8662 = !DILocation(line: 2560, column: 20, scope: !8605)
!8663 = !DILocation(line: 2560, column: 10, scope: !8605)
!8664 = !DILocation(line: 2560, column: 18, scope: !8605)
!8665 = !DILocation(line: 2561, column: 20, scope: !8605)
!8666 = !DILocation(line: 2561, column: 30, scope: !8605)
!8667 = !DILocation(line: 2561, column: 36, scope: !8605)
!8668 = !DILocation(line: 2561, column: 44, scope: !8605)
!8669 = !DILocation(line: 2561, column: 19, scope: !8605)
!8670 = !DILocation(line: 2561, column: 10, scope: !8605)
!8671 = !DILocation(line: 2561, column: 17, scope: !8605)
!8672 = !DILocation(line: 2562, column: 21, scope: !8605)
!8673 = !DILocation(line: 2562, column: 31, scope: !8605)
!8674 = !DILocation(line: 2562, column: 37, scope: !8605)
!8675 = !DILocation(line: 2562, column: 20, scope: !8605)
!8676 = !DILocation(line: 2562, column: 10, scope: !8605)
!8677 = !DILocation(line: 2562, column: 18, scope: !8605)
!8678 = !DILocation(line: 2563, column: 21, scope: !8605)
!8679 = !DILocation(line: 2563, column: 31, scope: !8605)
!8680 = !DILocation(line: 2563, column: 37, scope: !8605)
!8681 = !DILocation(line: 2563, column: 20, scope: !8605)
!8682 = !DILocation(line: 2563, column: 10, scope: !8605)
!8683 = !DILocation(line: 2563, column: 18, scope: !8605)
!8684 = !DILocation(line: 2564, column: 20, scope: !8605)
!8685 = !DILocation(line: 2564, column: 30, scope: !8605)
!8686 = !DILocation(line: 2564, column: 36, scope: !8605)
!8687 = !DILocation(line: 2564, column: 19, scope: !8605)
!8688 = !DILocation(line: 2564, column: 10, scope: !8605)
!8689 = !DILocation(line: 2564, column: 17, scope: !8605)
!8690 = !DILocation(line: 2565, column: 20, scope: !8605)
!8691 = !DILocation(line: 2565, column: 30, scope: !8605)
!8692 = !DILocation(line: 2565, column: 35, scope: !8605)
!8693 = !DILocation(line: 2565, column: 19, scope: !8605)
!8694 = !DILocation(line: 2565, column: 10, scope: !8605)
!8695 = !DILocation(line: 2565, column: 17, scope: !8605)
!8696 = !DILocation(line: 2566, column: 14, scope: !8605)
!8697 = !DILocation(line: 2566, column: 24, scope: !8605)
!8698 = !DILocation(line: 2566, column: 32, scope: !8605)
!8699 = !DILocation(line: 2566, column: 13, scope: !8605)
!8700 = !DILocation(line: 2566, column: 11, scope: !8605)
!8701 = !DILocation(line: 2569, column: 34, scope: !8605)
!8702 = !DILocation(line: 2569, column: 19, scope: !8605)
!8703 = !DILocation(line: 132, column: 9, scope: !8704, inlinedAt: !8636)
!8704 = distinct !DILexicalBlock(scope: !8609, file: !8610, line: 132, column: 9)
!8705 = !DILocation(line: 132, column: 13, scope: !8704, inlinedAt: !8636)
!8706 = !DILocation(line: 132, column: 11, scope: !8704, inlinedAt: !8636)
!8707 = !DILocation(line: 132, column: 9, scope: !8609, inlinedAt: !8636)
!8708 = !DILocation(line: 132, column: 26, scope: !8709, inlinedAt: !8636)
!8709 = !DILexicalBlockFile(scope: !8704, file: !8610, discriminator: 1)
!8710 = !DILocation(line: 132, column: 19, scope: !8709, inlinedAt: !8636)
!8711 = !DILocation(line: 133, column: 14, scope: !8712, inlinedAt: !8636)
!8712 = distinct !DILexicalBlock(scope: !8704, file: !8610, line: 133, column: 14)
!8713 = !DILocation(line: 133, column: 18, scope: !8712, inlinedAt: !8636)
!8714 = !DILocation(line: 133, column: 16, scope: !8712, inlinedAt: !8636)
!8715 = !DILocation(line: 133, column: 14, scope: !8704, inlinedAt: !8636)
!8716 = !DILocation(line: 133, column: 31, scope: !8717, inlinedAt: !8636)
!8717 = !DILexicalBlockFile(scope: !8712, file: !8610, discriminator: 1)
!8718 = !DILocation(line: 133, column: 24, scope: !8717, inlinedAt: !8636)
!8719 = !DILocation(line: 134, column: 17, scope: !8712, inlinedAt: !8636)
!8720 = !DILocation(line: 134, column: 10, scope: !8712, inlinedAt: !8636)
!8721 = !DILocation(line: 135, column: 1, scope: !8609, inlinedAt: !8636)
!8722 = !DILocation(line: 2569, column: 10, scope: !8605)
!8723 = !DILocation(line: 2569, column: 17, scope: !8605)
!8724 = !DILocation(line: 2570, column: 35, scope: !8605)
!8725 = !DILocation(line: 2570, column: 20, scope: !8605)
!8726 = !DILocation(line: 132, column: 9, scope: !8704, inlinedAt: !8614)
!8727 = !DILocation(line: 132, column: 13, scope: !8704, inlinedAt: !8614)
!8728 = !DILocation(line: 132, column: 11, scope: !8704, inlinedAt: !8614)
!8729 = !DILocation(line: 132, column: 9, scope: !8609, inlinedAt: !8614)
!8730 = !DILocation(line: 132, column: 26, scope: !8709, inlinedAt: !8614)
!8731 = !DILocation(line: 132, column: 19, scope: !8709, inlinedAt: !8614)
!8732 = !DILocation(line: 133, column: 14, scope: !8712, inlinedAt: !8614)
!8733 = !DILocation(line: 133, column: 18, scope: !8712, inlinedAt: !8614)
!8734 = !DILocation(line: 133, column: 16, scope: !8712, inlinedAt: !8614)
!8735 = !DILocation(line: 133, column: 14, scope: !8704, inlinedAt: !8614)
!8736 = !DILocation(line: 133, column: 31, scope: !8717, inlinedAt: !8614)
!8737 = !DILocation(line: 133, column: 24, scope: !8717, inlinedAt: !8614)
!8738 = !DILocation(line: 134, column: 17, scope: !8712, inlinedAt: !8614)
!8739 = !DILocation(line: 134, column: 10, scope: !8712, inlinedAt: !8614)
!8740 = !DILocation(line: 135, column: 1, scope: !8609, inlinedAt: !8614)
!8741 = !DILocation(line: 2570, column: 10, scope: !8605)
!8742 = !DILocation(line: 2570, column: 18, scope: !8605)
!8743 = !DILocation(line: 2571, column: 35, scope: !8605)
!8744 = !DILocation(line: 2571, column: 20, scope: !8605)
!8745 = !DILocation(line: 132, column: 9, scope: !8704, inlinedAt: !8620)
!8746 = !DILocation(line: 132, column: 13, scope: !8704, inlinedAt: !8620)
!8747 = !DILocation(line: 132, column: 11, scope: !8704, inlinedAt: !8620)
!8748 = !DILocation(line: 132, column: 9, scope: !8609, inlinedAt: !8620)
!8749 = !DILocation(line: 132, column: 26, scope: !8709, inlinedAt: !8620)
!8750 = !DILocation(line: 132, column: 19, scope: !8709, inlinedAt: !8620)
!8751 = !DILocation(line: 133, column: 14, scope: !8712, inlinedAt: !8620)
!8752 = !DILocation(line: 133, column: 18, scope: !8712, inlinedAt: !8620)
!8753 = !DILocation(line: 133, column: 16, scope: !8712, inlinedAt: !8620)
!8754 = !DILocation(line: 133, column: 14, scope: !8704, inlinedAt: !8620)
!8755 = !DILocation(line: 133, column: 31, scope: !8717, inlinedAt: !8620)
!8756 = !DILocation(line: 133, column: 24, scope: !8717, inlinedAt: !8620)
!8757 = !DILocation(line: 134, column: 17, scope: !8712, inlinedAt: !8620)
!8758 = !DILocation(line: 134, column: 10, scope: !8712, inlinedAt: !8620)
!8759 = !DILocation(line: 135, column: 1, scope: !8609, inlinedAt: !8620)
!8760 = !DILocation(line: 2571, column: 10, scope: !8605)
!8761 = !DILocation(line: 2571, column: 18, scope: !8605)
!8762 = !DILocation(line: 2572, column: 34, scope: !8605)
!8763 = !DILocation(line: 2572, column: 19, scope: !8605)
!8764 = !DILocation(line: 132, column: 9, scope: !8704, inlinedAt: !8624)
!8765 = !DILocation(line: 132, column: 13, scope: !8704, inlinedAt: !8624)
!8766 = !DILocation(line: 132, column: 11, scope: !8704, inlinedAt: !8624)
!8767 = !DILocation(line: 132, column: 9, scope: !8609, inlinedAt: !8624)
!8768 = !DILocation(line: 132, column: 26, scope: !8709, inlinedAt: !8624)
!8769 = !DILocation(line: 132, column: 19, scope: !8709, inlinedAt: !8624)
!8770 = !DILocation(line: 133, column: 14, scope: !8712, inlinedAt: !8624)
!8771 = !DILocation(line: 133, column: 18, scope: !8712, inlinedAt: !8624)
!8772 = !DILocation(line: 133, column: 16, scope: !8712, inlinedAt: !8624)
!8773 = !DILocation(line: 133, column: 14, scope: !8704, inlinedAt: !8624)
!8774 = !DILocation(line: 133, column: 31, scope: !8717, inlinedAt: !8624)
!8775 = !DILocation(line: 133, column: 24, scope: !8717, inlinedAt: !8624)
!8776 = !DILocation(line: 134, column: 17, scope: !8712, inlinedAt: !8624)
!8777 = !DILocation(line: 134, column: 10, scope: !8712, inlinedAt: !8624)
!8778 = !DILocation(line: 135, column: 1, scope: !8609, inlinedAt: !8624)
!8779 = !DILocation(line: 2572, column: 10, scope: !8605)
!8780 = !DILocation(line: 2572, column: 17, scope: !8605)
!8781 = !DILocation(line: 2573, column: 34, scope: !8605)
!8782 = !DILocation(line: 2573, column: 19, scope: !8605)
!8783 = !DILocation(line: 132, column: 9, scope: !8704, inlinedAt: !8628)
!8784 = !DILocation(line: 132, column: 13, scope: !8704, inlinedAt: !8628)
!8785 = !DILocation(line: 132, column: 11, scope: !8704, inlinedAt: !8628)
!8786 = !DILocation(line: 132, column: 9, scope: !8609, inlinedAt: !8628)
!8787 = !DILocation(line: 132, column: 26, scope: !8709, inlinedAt: !8628)
!8788 = !DILocation(line: 132, column: 19, scope: !8709, inlinedAt: !8628)
!8789 = !DILocation(line: 133, column: 14, scope: !8712, inlinedAt: !8628)
!8790 = !DILocation(line: 133, column: 18, scope: !8712, inlinedAt: !8628)
!8791 = !DILocation(line: 133, column: 16, scope: !8712, inlinedAt: !8628)
!8792 = !DILocation(line: 133, column: 14, scope: !8704, inlinedAt: !8628)
!8793 = !DILocation(line: 133, column: 31, scope: !8717, inlinedAt: !8628)
!8794 = !DILocation(line: 133, column: 24, scope: !8717, inlinedAt: !8628)
!8795 = !DILocation(line: 134, column: 17, scope: !8712, inlinedAt: !8628)
!8796 = !DILocation(line: 134, column: 10, scope: !8712, inlinedAt: !8628)
!8797 = !DILocation(line: 135, column: 1, scope: !8609, inlinedAt: !8628)
!8798 = !DILocation(line: 2573, column: 10, scope: !8605)
!8799 = !DILocation(line: 2573, column: 17, scope: !8605)
!8800 = !DILocation(line: 2574, column: 23, scope: !8605)
!8801 = !DILocation(line: 2574, column: 13, scope: !8605)
!8802 = !DILocation(line: 132, column: 9, scope: !8704, inlinedAt: !8632)
!8803 = !DILocation(line: 132, column: 13, scope: !8704, inlinedAt: !8632)
!8804 = !DILocation(line: 132, column: 11, scope: !8704, inlinedAt: !8632)
!8805 = !DILocation(line: 132, column: 9, scope: !8609, inlinedAt: !8632)
!8806 = !DILocation(line: 132, column: 26, scope: !8709, inlinedAt: !8632)
!8807 = !DILocation(line: 132, column: 19, scope: !8709, inlinedAt: !8632)
!8808 = !DILocation(line: 133, column: 14, scope: !8712, inlinedAt: !8632)
!8809 = !DILocation(line: 133, column: 18, scope: !8712, inlinedAt: !8632)
!8810 = !DILocation(line: 133, column: 16, scope: !8712, inlinedAt: !8632)
!8811 = !DILocation(line: 133, column: 14, scope: !8704, inlinedAt: !8632)
!8812 = !DILocation(line: 133, column: 31, scope: !8717, inlinedAt: !8632)
!8813 = !DILocation(line: 133, column: 24, scope: !8717, inlinedAt: !8632)
!8814 = !DILocation(line: 134, column: 17, scope: !8712, inlinedAt: !8632)
!8815 = !DILocation(line: 134, column: 10, scope: !8712, inlinedAt: !8632)
!8816 = !DILocation(line: 135, column: 1, scope: !8609, inlinedAt: !8632)
!8817 = !DILocation(line: 2574, column: 11, scope: !8605)
!8818 = !DILocation(line: 2576, column: 21, scope: !8605)
!8819 = !DILocation(line: 2576, column: 38, scope: !8605)
!8820 = !DILocation(line: 2576, column: 50, scope: !8605)
!8821 = !DILocation(line: 2576, column: 56, scope: !8605)
!8822 = !DILocation(line: 2576, column: 48, scope: !8605)
!8823 = !DILocation(line: 2576, column: 5, scope: !8605)
!8824 = distinct !DISubprogram(name: "mxf_read_strong_ref_array", scope: !939, file: !939, line: 840, type: !8825, isLocal: true, isDefinition: true, scopeLine: 841, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!8825 = !DISubroutineType(types: !8826)
!8826 = !{!1014, !1501, !8827, !1150}
!8827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 64, align: 64)
!8828 = !DILocalVariable(name: "pb", arg: 1, scope: !8824, file: !939, line: 840, type: !1501)
!8829 = !DILocation(line: 840, column: 51, scope: !8824)
!8830 = !DILocalVariable(name: "refs", arg: 2, scope: !8824, file: !939, line: 840, type: !8827)
!8831 = !DILocation(line: 840, column: 61, scope: !8824)
!8832 = !DILocalVariable(name: "count", arg: 3, scope: !8824, file: !939, line: 840, type: !1150)
!8833 = !DILocation(line: 840, column: 72, scope: !8824)
!8834 = !DILocation(line: 842, column: 24, scope: !8824)
!8835 = !DILocation(line: 842, column: 14, scope: !8824)
!8836 = !DILocation(line: 842, column: 6, scope: !8824)
!8837 = !DILocation(line: 842, column: 12, scope: !8824)
!8838 = !DILocation(line: 843, column: 24, scope: !8824)
!8839 = !DILocation(line: 843, column: 23, scope: !8824)
!8840 = !DILocation(line: 843, column: 13, scope: !8824)
!8841 = !DILocation(line: 843, column: 6, scope: !8824)
!8842 = !DILocation(line: 843, column: 11, scope: !8824)
!8843 = !DILocation(line: 844, column: 11, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8824, file: !939, line: 844, column: 9)
!8845 = !DILocation(line: 844, column: 10, scope: !8844)
!8846 = !DILocation(line: 844, column: 9, scope: !8824)
!8847 = !DILocation(line: 845, column: 10, scope: !8848)
!8848 = distinct !DILexicalBlock(scope: !8844, file: !939, line: 844, column: 17)
!8849 = !DILocation(line: 845, column: 16, scope: !8848)
!8850 = !DILocation(line: 846, column: 9, scope: !8848)
!8851 = !DILocation(line: 848, column: 15, scope: !8824)
!8852 = !DILocation(line: 848, column: 5, scope: !8824)
!8853 = !DILocation(line: 849, column: 15, scope: !8824)
!8854 = !DILocation(line: 849, column: 31, scope: !8824)
!8855 = !DILocation(line: 849, column: 30, scope: !8824)
!8856 = !DILocation(line: 849, column: 19, scope: !8824)
!8857 = !DILocation(line: 849, column: 38, scope: !8824)
!8858 = !DILocation(line: 849, column: 37, scope: !8824)
!8859 = !DILocation(line: 849, column: 44, scope: !8824)
!8860 = !DILocation(line: 849, column: 5, scope: !8824)
!8861 = !DILocation(line: 850, column: 5, scope: !8824)
!8862 = !DILocation(line: 851, column: 1, scope: !8824)
!8863 = distinct !DISubprogram(name: "mxf_read_indirect_value", scope: !939, file: !939, line: 1246, type: !8864, isLocal: true, isDefinition: true, scopeLine: 1247, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!8864 = !DISubroutineType(types: !8865)
!8865 = !{!1014, !1020, !1501, !1014}
!8866 = !DILocalVariable(name: "arg", arg: 1, scope: !8863, file: !939, line: 1246, type: !1020)
!8867 = !DILocation(line: 1246, column: 42, scope: !8863)
!8868 = !DILocalVariable(name: "pb", arg: 2, scope: !8863, file: !939, line: 1246, type: !1501)
!8869 = !DILocation(line: 1246, column: 60, scope: !8863)
!8870 = !DILocalVariable(name: "size", arg: 3, scope: !8863, file: !939, line: 1246, type: !1014)
!8871 = !DILocation(line: 1246, column: 68, scope: !8863)
!8872 = !DILocalVariable(name: "tagged_value", scope: !8863, file: !939, line: 1248, type: !1100)
!8873 = !DILocation(line: 1248, column: 21, scope: !8863)
!8874 = !DILocation(line: 1248, column: 36, scope: !8863)
!8875 = !DILocalVariable(name: "key", scope: !8863, file: !939, line: 1249, type: !2180)
!8876 = !DILocation(line: 1249, column: 13, scope: !8863)
!8877 = !DILocation(line: 1251, column: 9, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !8863, file: !939, line: 1251, column: 9)
!8879 = !DILocation(line: 1251, column: 14, scope: !8878)
!8880 = !DILocation(line: 1251, column: 9, scope: !8863)
!8881 = !DILocation(line: 1252, column: 9, scope: !8878)
!8882 = !DILocation(line: 1254, column: 15, scope: !8863)
!8883 = !DILocation(line: 1254, column: 19, scope: !8863)
!8884 = !DILocation(line: 1254, column: 5, scope: !8863)
!8885 = !DILocation(line: 1256, column: 16, scope: !8886)
!8886 = distinct !DILexicalBlock(scope: !8863, file: !939, line: 1256, column: 9)
!8887 = !DILocation(line: 1256, column: 9, scope: !8886)
!8888 = !DILocation(line: 1256, column: 53, scope: !8886)
!8889 = !DILocation(line: 1256, column: 9, scope: !8863)
!8890 = !DILocation(line: 1257, column: 40, scope: !8891)
!8891 = distinct !DILexicalBlock(scope: !8886, file: !939, line: 1256, column: 59)
!8892 = !DILocation(line: 1257, column: 44, scope: !8891)
!8893 = !DILocation(line: 1257, column: 49, scope: !8891)
!8894 = !DILocation(line: 1257, column: 56, scope: !8891)
!8895 = !DILocation(line: 1257, column: 70, scope: !8891)
!8896 = !DILocation(line: 1257, column: 16, scope: !8891)
!8897 = !DILocation(line: 1257, column: 9, scope: !8891)
!8898 = !DILocation(line: 1258, column: 23, scope: !8899)
!8899 = distinct !DILexicalBlock(scope: !8886, file: !939, line: 1258, column: 16)
!8900 = !DILocation(line: 1258, column: 16, scope: !8899)
!8901 = !DILocation(line: 1258, column: 60, scope: !8899)
!8902 = !DILocation(line: 1258, column: 16, scope: !8886)
!8903 = !DILocation(line: 1259, column: 40, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8899, file: !939, line: 1258, column: 66)
!8905 = !DILocation(line: 1259, column: 44, scope: !8904)
!8906 = !DILocation(line: 1259, column: 49, scope: !8904)
!8907 = !DILocation(line: 1259, column: 56, scope: !8904)
!8908 = !DILocation(line: 1259, column: 70, scope: !8904)
!8909 = !DILocation(line: 1259, column: 16, scope: !8904)
!8910 = !DILocation(line: 1259, column: 9, scope: !8904)
!8911 = !DILocation(line: 1261, column: 5, scope: !8863)
!8912 = !DILocation(line: 1262, column: 1, scope: !8863)
!8913 = distinct !DISubprogram(name: "mxf_read_utf16le_string", scope: !939, file: !939, line: 885, type: !8460, isLocal: true, isDefinition: true, scopeLine: 885, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!8914 = !DILocalVariable(name: "pb", arg: 1, scope: !8913, file: !939, line: 885, type: !1501)
!8915 = !DILocation(line: 885, column: 49, scope: !8913)
!8916 = !DILocalVariable(name: "size", arg: 2, scope: !8913, file: !939, line: 885, type: !1014)
!8917 = !DILocation(line: 885, column: 57, scope: !8913)
!8918 = !DILocalVariable(name: "str", arg: 3, scope: !8913, file: !939, line: 885, type: !8462)
!8919 = !DILocation(line: 885, column: 70, scope: !8913)
!8920 = !DILocation(line: 885, column: 106, scope: !8913)
!8921 = !DILocation(line: 885, column: 110, scope: !8913)
!8922 = !DILocation(line: 885, column: 116, scope: !8913)
!8923 = !DILocation(line: 885, column: 84, scope: !8913)
!8924 = !DILocation(line: 885, column: 77, scope: !8913)
!8925 = distinct !DISubprogram(name: "mxf_read_pixel_layout", scope: !939, file: !939, line: 1122, type: !8926, isLocal: true, isDefinition: true, scopeLine: 1123, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!8926 = !DISubroutineType(types: !8927)
!8927 = !{null, !1501, !1021}
!8928 = !DILocalVariable(name: "pb", arg: 1, scope: !8925, file: !939, line: 1122, type: !1501)
!8929 = !DILocation(line: 1122, column: 48, scope: !8925)
!8930 = !DILocalVariable(name: "descriptor", arg: 2, scope: !8925, file: !939, line: 1122, type: !1021)
!8931 = !DILocation(line: 1122, column: 67, scope: !8925)
!8932 = !DILocalVariable(name: "code", scope: !8925, file: !939, line: 1124, type: !1014)
!8933 = !DILocation(line: 1124, column: 9, scope: !8925)
!8934 = !DILocalVariable(name: "value", scope: !8925, file: !939, line: 1124, type: !1014)
!8935 = !DILocation(line: 1124, column: 15, scope: !8925)
!8936 = !DILocalVariable(name: "ofs", scope: !8925, file: !939, line: 1124, type: !1014)
!8937 = !DILocation(line: 1124, column: 22, scope: !8925)
!8938 = !DILocalVariable(name: "layout", scope: !8925, file: !939, line: 1125, type: !8939)
!8939 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1097, size: 128, align: 8, elements: !1028)
!8940 = !DILocation(line: 1125, column: 10, scope: !8925)
!8941 = !DILocation(line: 1127, column: 5, scope: !8925)
!8942 = distinct !{!8942, !8941}
!8943 = !DILocation(line: 1128, column: 24, scope: !8944)
!8944 = distinct !DILexicalBlock(scope: !8925, file: !939, line: 1127, column: 8)
!8945 = !DILocation(line: 1128, column: 16, scope: !8944)
!8946 = !DILocation(line: 1128, column: 14, scope: !8944)
!8947 = !DILocation(line: 1129, column: 25, scope: !8944)
!8948 = !DILocation(line: 1129, column: 17, scope: !8944)
!8949 = !DILocation(line: 1129, column: 15, scope: !8944)
!8950 = !DILocation(line: 1130, column: 53, scope: !8944)
!8951 = !DILocation(line: 1130, column: 9, scope: !8944)
!8952 = !DILocation(line: 1132, column: 13, scope: !8953)
!8953 = distinct !DILexicalBlock(scope: !8944, file: !939, line: 1132, column: 13)
!8954 = !DILocation(line: 1132, column: 17, scope: !8953)
!8955 = !DILocation(line: 1132, column: 13, scope: !8944)
!8956 = !DILocation(line: 1133, column: 29, scope: !8957)
!8957 = distinct !DILexicalBlock(scope: !8953, file: !939, line: 1132, column: 24)
!8958 = !DILocation(line: 1133, column: 23, scope: !8957)
!8959 = !DILocation(line: 1133, column: 13, scope: !8957)
!8960 = !DILocation(line: 1133, column: 27, scope: !8957)
!8961 = !DILocation(line: 1134, column: 29, scope: !8957)
!8962 = !DILocation(line: 1134, column: 23, scope: !8957)
!8963 = !DILocation(line: 1134, column: 13, scope: !8957)
!8964 = !DILocation(line: 1134, column: 27, scope: !8957)
!8965 = !DILocation(line: 1135, column: 9, scope: !8957)
!8966 = !DILocation(line: 1136, column: 13, scope: !8953)
!8967 = !DILocation(line: 1137, column: 5, scope: !8944)
!8968 = !DILocation(line: 1137, column: 14, scope: !8969)
!8969 = !DILexicalBlockFile(scope: !8925, file: !939, discriminator: 1)
!8970 = !DILocation(line: 1137, column: 19, scope: !8969)
!8971 = !DILocation(line: 1137, column: 5, scope: !8969)
!8972 = !DILocation(line: 1139, column: 32, scope: !8925)
!8973 = !DILocation(line: 1139, column: 41, scope: !8925)
!8974 = !DILocation(line: 1139, column: 53, scope: !8925)
!8975 = !DILocation(line: 1139, column: 5, scope: !8925)
!8976 = !DILocation(line: 1140, column: 1, scope: !8925)
!8977 = distinct !DISubprogram(name: "mxf_read_index_entry_array", scope: !939, file: !939, line: 1055, type: !8978, isLocal: true, isDefinition: true, scopeLine: 1056, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!8978 = !DISubroutineType(types: !8979)
!8979 = !{!1014, !1501, !1133}
!8980 = !DILocalVariable(name: "pb", arg: 1, scope: !8977, file: !939, line: 1055, type: !1501)
!8981 = !DILocation(line: 1055, column: 52, scope: !8977)
!8982 = !DILocalVariable(name: "segment", arg: 2, scope: !8977, file: !939, line: 1055, type: !1133)
!8983 = !DILocation(line: 1055, column: 78, scope: !8977)
!8984 = !DILocalVariable(name: "i", scope: !8977, file: !939, line: 1057, type: !1014)
!8985 = !DILocation(line: 1057, column: 9, scope: !8977)
!8986 = !DILocalVariable(name: "length", scope: !8977, file: !939, line: 1057, type: !1014)
!8987 = !DILocation(line: 1057, column: 12, scope: !8977)
!8988 = !DILocation(line: 1059, column: 43, scope: !8977)
!8989 = !DILocation(line: 1059, column: 33, scope: !8977)
!8990 = !DILocation(line: 1059, column: 5, scope: !8977)
!8991 = !DILocation(line: 1059, column: 14, scope: !8977)
!8992 = !DILocation(line: 1059, column: 31, scope: !8977)
!8993 = !DILocation(line: 1061, column: 24, scope: !8977)
!8994 = !DILocation(line: 1061, column: 14, scope: !8977)
!8995 = !DILocation(line: 1061, column: 12, scope: !8977)
!8996 = !DILocation(line: 1062, column: 8, scope: !8997)
!8997 = distinct !DILexicalBlock(scope: !8977, file: !939, line: 1062, column: 8)
!8998 = !DILocation(line: 1062, column: 17, scope: !8997)
!8999 = !DILocation(line: 1062, column: 34, scope: !8997)
!9000 = !DILocation(line: 1062, column: 37, scope: !9001)
!9001 = !DILexicalBlockFile(scope: !8997, file: !939, discriminator: 1)
!9002 = !DILocation(line: 1062, column: 44, scope: !9001)
!9003 = !DILocation(line: 1062, column: 8, scope: !9001)
!9004 = !DILocation(line: 1063, column: 9, scope: !8997)
!9005 = !DILocation(line: 1065, column: 54, scope: !9006)
!9006 = distinct !DILexicalBlock(scope: !8977, file: !939, line: 1065, column: 9)
!9007 = !DILocation(line: 1065, column: 63, scope: !9006)
!9008 = !DILocation(line: 1065, column: 44, scope: !9006)
!9009 = !DILocation(line: 1065, column: 11, scope: !9006)
!9010 = !DILocation(line: 1065, column: 20, scope: !9006)
!9011 = !DILocation(line: 1065, column: 43, scope: !9006)
!9012 = !DILocation(line: 1065, column: 125, scope: !9006)
!9013 = !DILocation(line: 1066, column: 45, scope: !9006)
!9014 = !DILocation(line: 1066, column: 54, scope: !9006)
!9015 = !DILocation(line: 1066, column: 35, scope: !9006)
!9016 = !DILocation(line: 1066, column: 11, scope: !9006)
!9017 = !DILocation(line: 1066, column: 20, scope: !9006)
!9018 = !DILocation(line: 1066, column: 33, scope: !9006)
!9019 = !DILocation(line: 1066, column: 105, scope: !9006)
!9020 = !DILocation(line: 1067, column: 54, scope: !9006)
!9021 = !DILocation(line: 1067, column: 63, scope: !9006)
!9022 = !DILocation(line: 1067, column: 44, scope: !9006)
!9023 = !DILocation(line: 1067, column: 11, scope: !9006)
!9024 = !DILocation(line: 1067, column: 20, scope: !9006)
!9025 = !DILocation(line: 1067, column: 42, scope: !9006)
!9026 = !DILocation(line: 1065, column: 9, scope: !9027)
!9027 = !DILexicalBlockFile(scope: !8977, file: !939, discriminator: 1)
!9028 = !DILocation(line: 1068, column: 19, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !9006, file: !939, line: 1067, column: 124)
!9030 = !DILocation(line: 1068, column: 28, scope: !9029)
!9031 = !DILocation(line: 1068, column: 18, scope: !9029)
!9032 = !DILocation(line: 1068, column: 9, scope: !9029)
!9033 = !DILocation(line: 1069, column: 19, scope: !9029)
!9034 = !DILocation(line: 1069, column: 28, scope: !9029)
!9035 = !DILocation(line: 1069, column: 18, scope: !9029)
!9036 = !DILocation(line: 1069, column: 9, scope: !9029)
!9037 = !DILocation(line: 1070, column: 9, scope: !9029)
!9038 = !DILocation(line: 1073, column: 12, scope: !9039)
!9039 = distinct !DILexicalBlock(scope: !8977, file: !939, line: 1073, column: 5)
!9040 = !DILocation(line: 1073, column: 10, scope: !9039)
!9041 = !DILocation(line: 1073, column: 17, scope: !9042)
!9042 = !DILexicalBlockFile(scope: !9043, file: !939, discriminator: 1)
!9043 = distinct !DILexicalBlock(scope: !9039, file: !939, line: 1073, column: 5)
!9044 = !DILocation(line: 1073, column: 21, scope: !9042)
!9045 = !DILocation(line: 1073, column: 30, scope: !9042)
!9046 = !DILocation(line: 1073, column: 19, scope: !9042)
!9047 = !DILocation(line: 1073, column: 5, scope: !9042)
!9048 = !DILocation(line: 1074, column: 22, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9050, file: !939, line: 1074, column: 12)
!9050 = distinct !DILexicalBlock(scope: !9043, file: !939, line: 1073, column: 53)
!9051 = !DILocation(line: 1074, column: 12, scope: !9049)
!9052 = !DILocation(line: 1074, column: 12, scope: !9050)
!9053 = !DILocation(line: 1075, column: 13, scope: !9049)
!9054 = !DILocation(line: 1076, column: 55, scope: !9050)
!9055 = !DILocation(line: 1076, column: 47, scope: !9050)
!9056 = !DILocation(line: 1076, column: 42, scope: !9050)
!9057 = !DILocation(line: 1076, column: 9, scope: !9050)
!9058 = !DILocation(line: 1076, column: 18, scope: !9050)
!9059 = !DILocation(line: 1076, column: 45, scope: !9050)
!9060 = !DILocation(line: 1077, column: 17, scope: !9050)
!9061 = !DILocation(line: 1077, column: 9, scope: !9050)
!9062 = !DILocation(line: 1078, column: 44, scope: !9050)
!9063 = !DILocation(line: 1078, column: 36, scope: !9050)
!9064 = !DILocation(line: 1078, column: 31, scope: !9050)
!9065 = !DILocation(line: 1078, column: 9, scope: !9050)
!9066 = !DILocation(line: 1078, column: 18, scope: !9050)
!9067 = !DILocation(line: 1078, column: 34, scope: !9050)
!9068 = !DILocation(line: 1079, column: 55, scope: !9050)
!9069 = !DILocation(line: 1079, column: 45, scope: !9050)
!9070 = !DILocation(line: 1079, column: 40, scope: !9050)
!9071 = !DILocation(line: 1079, column: 9, scope: !9050)
!9072 = !DILocation(line: 1079, column: 18, scope: !9050)
!9073 = !DILocation(line: 1079, column: 43, scope: !9050)
!9074 = !DILocation(line: 1080, column: 19, scope: !9050)
!9075 = !DILocation(line: 1080, column: 23, scope: !9050)
!9076 = !DILocation(line: 1080, column: 30, scope: !9050)
!9077 = !DILocation(line: 1080, column: 9, scope: !9050)
!9078 = !DILocation(line: 1081, column: 5, scope: !9050)
!9079 = !DILocation(line: 1073, column: 49, scope: !9080)
!9080 = !DILexicalBlockFile(scope: !9043, file: !939, discriminator: 2)
!9081 = !DILocation(line: 1073, column: 5, scope: !9080)
!9082 = distinct !{!9082, !9083}
!9083 = !DILocation(line: 1073, column: 5, scope: !8977)
!9084 = !DILocation(line: 1082, column: 5, scope: !8977)
!9085 = !DILocation(line: 1083, column: 1, scope: !8977)
!9086 = distinct !DISubprogram(name: "mxf_read_local_tags", scope: !939, file: !939, line: 2704, type: !9087, isLocal: true, isDefinition: true, scopeLine: 2705, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!9087 = !DISubroutineType(types: !9088)
!9088 = !{!1014, !2594, !2497, !2448, !1014, !957}
!9089 = !DILocation(line: 557, column: 77, scope: !2586, inlinedAt: !9090)
!9090 = distinct !DILocation(line: 2756, column: 20, scope: !9091)
!9091 = distinct !DILexicalBlock(scope: !9092, file: !939, line: 2756, column: 20)
!9092 = distinct !DILexicalBlock(scope: !9093, file: !939, line: 2746, column: 13)
!9093 = distinct !DILexicalBlock(scope: !9086, file: !939, line: 2713, column: 59)
!9094 = !DILocation(line: 557, column: 77, scope: !2586, inlinedAt: !9095)
!9095 = distinct !DILocation(line: 2746, column: 13, scope: !9092)
!9096 = !DILocalVariable(name: "x", arg: 1, scope: !9097, file: !3017, line: 58, type: !1012)
!9097 = distinct !DISubprogram(name: "av_bswap16", scope: !3017, file: !3017, line: 58, type: !9098, isLocal: true, isDefinition: true, scopeLine: 59, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!9098 = !DISubroutineType(types: !9099)
!9099 = !{!1012, !1012}
!9100 = !DILocation(line: 58, column: 98, scope: !9097, inlinedAt: !9101)
!9101 = distinct !DILocation(line: 2728, column: 33, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !9103, file: !939, line: 2727, column: 57)
!9103 = distinct !DILexicalBlock(scope: !9104, file: !939, line: 2727, column: 13)
!9104 = distinct !DILexicalBlock(scope: !9105, file: !939, line: 2727, column: 13)
!9105 = distinct !DILexicalBlock(scope: !9106, file: !939, line: 2725, column: 27)
!9106 = distinct !DILexicalBlock(scope: !9093, file: !939, line: 2725, column: 13)
!9107 = !DILocation(line: 557, column: 77, scope: !2586, inlinedAt: !9108)
!9108 = distinct !DILocation(line: 2717, column: 25, scope: !9093)
!9109 = !DILocation(line: 557, column: 77, scope: !2586, inlinedAt: !9110)
!9110 = distinct !DILocation(line: 2713, column: 12, scope: !9111)
!9111 = !DILexicalBlockFile(scope: !9086, file: !939, discriminator: 1)
!9112 = !DILocation(line: 557, column: 77, scope: !2586, inlinedAt: !9113)
!9113 = distinct !DILocation(line: 2708, column: 24, scope: !9086)
!9114 = !DILocalVariable(name: "mxf", arg: 1, scope: !9086, file: !939, line: 2704, type: !2594)
!9115 = !DILocation(line: 2704, column: 44, scope: !9086)
!9116 = !DILocalVariable(name: "klv", arg: 2, scope: !9086, file: !939, line: 2704, type: !2497)
!9117 = !DILocation(line: 2704, column: 60, scope: !9086)
!9118 = !DILocalVariable(name: "read_child", arg: 3, scope: !9086, file: !939, line: 2704, type: !2448)
!9119 = !DILocation(line: 2704, column: 86, scope: !9086)
!9120 = !DILocalVariable(name: "ctx_size", arg: 4, scope: !9086, file: !939, line: 2704, type: !1014)
!9121 = !DILocation(line: 2704, column: 102, scope: !9086)
!9122 = !DILocalVariable(name: "type", arg: 5, scope: !9086, file: !939, line: 2704, type: !957)
!9123 = !DILocation(line: 2704, column: 136, scope: !9086)
!9124 = !DILocalVariable(name: "pb", scope: !9086, file: !939, line: 2706, type: !1501)
!9125 = !DILocation(line: 2706, column: 18, scope: !9086)
!9126 = !DILocation(line: 2706, column: 23, scope: !9086)
!9127 = !DILocation(line: 2706, column: 28, scope: !9086)
!9128 = !DILocation(line: 2706, column: 32, scope: !9086)
!9129 = !DILocalVariable(name: "ctx", scope: !9086, file: !939, line: 2707, type: !1186)
!9130 = !DILocation(line: 2707, column: 21, scope: !9086)
!9131 = !DILocation(line: 2707, column: 27, scope: !9086)
!9132 = !DILocation(line: 2707, column: 49, scope: !9111)
!9133 = !DILocation(line: 2707, column: 38, scope: !9111)
!9134 = !DILocation(line: 2707, column: 27, scope: !9111)
!9135 = !DILocation(line: 2707, column: 61, scope: !9136)
!9136 = !DILexicalBlockFile(scope: !9086, file: !939, discriminator: 2)
!9137 = !DILocation(line: 2707, column: 27, scope: !9136)
!9138 = !DILocation(line: 2707, column: 27, scope: !9139)
!9139 = !DILexicalBlockFile(scope: !9086, file: !939, discriminator: 3)
!9140 = !DILocation(line: 2707, column: 21, scope: !9139)
!9141 = !DILocalVariable(name: "klv_end", scope: !9086, file: !939, line: 2708, type: !1125)
!9142 = !DILocation(line: 2708, column: 14, scope: !9086)
!9143 = !DILocation(line: 2708, column: 34, scope: !9086)
!9144 = !DILocation(line: 2708, column: 24, scope: !9086)
!9145 = !DILocation(line: 559, column: 22, scope: !2586, inlinedAt: !9113)
!9146 = !DILocation(line: 559, column: 12, scope: !2586, inlinedAt: !9113)
!9147 = !DILocation(line: 2708, column: 40, scope: !9086)
!9148 = !DILocation(line: 2708, column: 45, scope: !9086)
!9149 = !DILocation(line: 2708, column: 38, scope: !9086)
!9150 = !DILocation(line: 2710, column: 10, scope: !9151)
!9151 = distinct !DILexicalBlock(scope: !9086, file: !939, line: 2710, column: 9)
!9152 = !DILocation(line: 2710, column: 9, scope: !9086)
!9153 = !DILocation(line: 2711, column: 9, scope: !9151)
!9154 = !DILocation(line: 2712, column: 26, scope: !9086)
!9155 = !DILocation(line: 2712, column: 31, scope: !9086)
!9156 = !DILocation(line: 2712, column: 5, scope: !9086)
!9157 = !DILocation(line: 2713, column: 5, scope: !9086)
!9158 = !DILocation(line: 2713, column: 22, scope: !9111)
!9159 = !DILocation(line: 2713, column: 12, scope: !9111)
!9160 = !DILocation(line: 559, column: 22, scope: !2586, inlinedAt: !9110)
!9161 = !DILocation(line: 559, column: 12, scope: !2586, inlinedAt: !9110)
!9162 = !DILocation(line: 2713, column: 26, scope: !9111)
!9163 = !DILocation(line: 2713, column: 32, scope: !9111)
!9164 = !DILocation(line: 2713, column: 30, scope: !9111)
!9165 = !DILocation(line: 2713, column: 40, scope: !9111)
!9166 = !DILocation(line: 2713, column: 54, scope: !9136)
!9167 = !DILocation(line: 2713, column: 44, scope: !9136)
!9168 = !DILocation(line: 2713, column: 43, scope: !9136)
!9169 = !DILocation(line: 2713, column: 5, scope: !9139)
!9170 = !DILocalVariable(name: "ret", scope: !9093, file: !939, line: 2714, type: !1014)
!9171 = !DILocation(line: 2714, column: 13, scope: !9093)
!9172 = !DILocalVariable(name: "tag", scope: !9093, file: !939, line: 2715, type: !1014)
!9173 = !DILocation(line: 2715, column: 13, scope: !9093)
!9174 = !DILocation(line: 2715, column: 29, scope: !9093)
!9175 = !DILocation(line: 2715, column: 19, scope: !9093)
!9176 = !DILocalVariable(name: "size", scope: !9093, file: !939, line: 2716, type: !1014)
!9177 = !DILocation(line: 2716, column: 13, scope: !9093)
!9178 = !DILocation(line: 2716, column: 30, scope: !9093)
!9179 = !DILocation(line: 2716, column: 20, scope: !9093)
!9180 = !DILocalVariable(name: "next", scope: !9093, file: !939, line: 2717, type: !1125)
!9181 = !DILocation(line: 2717, column: 18, scope: !9093)
!9182 = !DILocation(line: 2717, column: 35, scope: !9093)
!9183 = !DILocation(line: 2717, column: 25, scope: !9093)
!9184 = !DILocation(line: 559, column: 22, scope: !2586, inlinedAt: !9108)
!9185 = !DILocation(line: 559, column: 12, scope: !2586, inlinedAt: !9108)
!9186 = !DILocation(line: 2717, column: 41, scope: !9093)
!9187 = !DILocation(line: 2717, column: 39, scope: !9093)
!9188 = !DILocalVariable(name: "uid", scope: !9093, file: !939, line: 2718, type: !1026)
!9189 = !DILocation(line: 2718, column: 13, scope: !9093)
!9190 = !DILocation(line: 2720, column: 16, scope: !9093)
!9191 = !DILocation(line: 2720, column: 21, scope: !9093)
!9192 = !DILocation(line: 2720, column: 58, scope: !9093)
!9193 = !DILocation(line: 2720, column: 63, scope: !9093)
!9194 = !DILocation(line: 2720, column: 9, scope: !9093)
!9195 = !DILocation(line: 2721, column: 14, scope: !9196)
!9196 = distinct !DILexicalBlock(scope: !9093, file: !939, line: 2721, column: 13)
!9197 = !DILocation(line: 2721, column: 13, scope: !9093)
!9198 = !DILocation(line: 2722, column: 20, scope: !9199)
!9199 = distinct !DILexicalBlock(scope: !9196, file: !939, line: 2721, column: 20)
!9200 = !DILocation(line: 2722, column: 25, scope: !9199)
!9201 = !DILocation(line: 2722, column: 66, scope: !9199)
!9202 = !DILocation(line: 2722, column: 13, scope: !9199)
!9203 = !DILocation(line: 2723, column: 13, scope: !9199)
!9204 = distinct !{!9204, !9157}
!9205 = !DILocation(line: 2725, column: 13, scope: !9106)
!9206 = !DILocation(line: 2725, column: 17, scope: !9106)
!9207 = !DILocation(line: 2725, column: 13, scope: !9093)
!9208 = !DILocalVariable(name: "i", scope: !9105, file: !939, line: 2726, type: !1014)
!9209 = !DILocation(line: 2726, column: 17, scope: !9105)
!9210 = !DILocation(line: 2727, column: 20, scope: !9104)
!9211 = !DILocation(line: 2727, column: 18, scope: !9104)
!9212 = !DILocation(line: 2727, column: 25, scope: !9213)
!9213 = !DILexicalBlockFile(scope: !9103, file: !939, discriminator: 1)
!9214 = !DILocation(line: 2727, column: 29, scope: !9213)
!9215 = !DILocation(line: 2727, column: 34, scope: !9213)
!9216 = !DILocation(line: 2727, column: 27, scope: !9213)
!9217 = !DILocation(line: 2727, column: 13, scope: !9213)
!9218 = !DILocalVariable(name: "local_tag", scope: !9102, file: !939, line: 2728, type: !1014)
!9219 = !DILocation(line: 2728, column: 21, scope: !9102)
!9220 = !DILocation(line: 2728, column: 76, scope: !9102)
!9221 = !DILocation(line: 2728, column: 81, scope: !9102)
!9222 = !DILocation(line: 2728, column: 92, scope: !9102)
!9223 = !DILocation(line: 2728, column: 93, scope: !9102)
!9224 = !DILocation(line: 2728, column: 91, scope: !9102)
!9225 = !DILocation(line: 2728, column: 100, scope: !9102)
!9226 = !DILocation(line: 2728, column: 33, scope: !9102)
!9227 = !DILocation(line: 60, column: 9, scope: !9097, inlinedAt: !9101)
!9228 = !DILocation(line: 60, column: 10, scope: !9097, inlinedAt: !9101)
!9229 = !DILocation(line: 60, column: 18, scope: !9097, inlinedAt: !9101)
!9230 = !DILocation(line: 60, column: 19, scope: !9097, inlinedAt: !9101)
!9231 = !DILocation(line: 60, column: 15, scope: !9097, inlinedAt: !9101)
!9232 = !DILocation(line: 60, column: 8, scope: !9097, inlinedAt: !9101)
!9233 = !DILocation(line: 60, column: 6, scope: !9097, inlinedAt: !9101)
!9234 = !DILocation(line: 61, column: 12, scope: !9097, inlinedAt: !9101)
!9235 = !DILocation(line: 2729, column: 21, scope: !9236)
!9236 = distinct !DILexicalBlock(scope: !9102, file: !939, line: 2729, column: 21)
!9237 = !DILocation(line: 2729, column: 34, scope: !9236)
!9238 = !DILocation(line: 2729, column: 31, scope: !9236)
!9239 = !DILocation(line: 2729, column: 21, scope: !9102)
!9240 = !DILocation(line: 2730, column: 21, scope: !9241)
!9241 = distinct !DILexicalBlock(scope: !9236, file: !939, line: 2729, column: 39)
!9242 = !DILocation(line: 2730, column: 33, scope: !9241)
!9243 = !DILocation(line: 2730, column: 38, scope: !9241)
!9244 = !DILocation(line: 2730, column: 49, scope: !9241)
!9245 = !DILocation(line: 2730, column: 50, scope: !9241)
!9246 = !DILocation(line: 2730, column: 48, scope: !9241)
!9247 = !DILocation(line: 2730, column: 53, scope: !9241)
!9248 = !DILocation(line: 2731, column: 28, scope: !9241)
!9249 = !DILocation(line: 2731, column: 33, scope: !9241)
!9250 = !DILocation(line: 2731, column: 62, scope: !9241)
!9251 = !DILocation(line: 2731, column: 21, scope: !9241)
!9252 = !DILocation(line: 2732, column: 21, scope: !9241)
!9253 = distinct !{!9253, !9252}
!9254 = !DILocation(line: 2732, column: 357, scope: !9255)
!9255 = !DILexicalBlockFile(scope: !9256, file: !939, discriminator: 1)
!9256 = distinct !DILexicalBlock(scope: !9241, file: !939, line: 2732, column: 24)
!9257 = !DILocation(line: 2733, column: 17, scope: !9241)
!9258 = !DILocation(line: 2734, column: 13, scope: !9102)
!9259 = !DILocation(line: 2727, column: 53, scope: !9260)
!9260 = !DILexicalBlockFile(scope: !9103, file: !939, discriminator: 2)
!9261 = !DILocation(line: 2727, column: 13, scope: !9260)
!9262 = distinct !{!9262, !9263}
!9263 = !DILocation(line: 2727, column: 13, scope: !9105)
!9264 = !DILocation(line: 2735, column: 9, scope: !9105)
!9265 = !DILocation(line: 2736, column: 13, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9093, file: !939, line: 2736, column: 13)
!9267 = !DILocation(line: 2736, column: 22, scope: !9266)
!9268 = !DILocation(line: 2736, column: 25, scope: !9269)
!9269 = !DILexicalBlockFile(scope: !9266, file: !939, discriminator: 1)
!9270 = !DILocation(line: 2736, column: 29, scope: !9269)
!9271 = !DILocation(line: 2736, column: 13, scope: !9269)
!9272 = !DILocation(line: 2737, column: 23, scope: !9273)
!9273 = distinct !DILexicalBlock(scope: !9266, file: !939, line: 2736, column: 40)
!9274 = !DILocation(line: 2737, column: 27, scope: !9273)
!9275 = !DILocation(line: 2737, column: 32, scope: !9273)
!9276 = !DILocation(line: 2737, column: 13, scope: !9273)
!9277 = !DILocation(line: 2738, column: 9, scope: !9273)
!9278 = !DILocation(line: 2738, column: 27, scope: !9279)
!9279 = !DILexicalBlockFile(scope: !9280, file: !939, discriminator: 1)
!9280 = distinct !DILexicalBlock(scope: !9266, file: !939, line: 2738, column: 20)
!9281 = !DILocation(line: 2738, column: 38, scope: !9279)
!9282 = !DILocation(line: 2738, column: 43, scope: !9279)
!9283 = !DILocation(line: 2738, column: 47, scope: !9279)
!9284 = !DILocation(line: 2738, column: 52, scope: !9279)
!9285 = !DILocation(line: 2738, column: 58, scope: !9279)
!9286 = !DILocation(line: 2738, column: 25, scope: !9279)
!9287 = !DILocation(line: 2738, column: 68, scope: !9279)
!9288 = !DILocation(line: 2738, column: 20, scope: !9279)
!9289 = !DILocation(line: 2739, column: 17, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !9291, file: !939, line: 2739, column: 17)
!9291 = distinct !DILexicalBlock(scope: !9280, file: !939, line: 2738, column: 73)
!9292 = !DILocation(line: 2739, column: 17, scope: !9291)
!9293 = !DILocation(line: 2740, column: 17, scope: !9290)
!9294 = !DILocation(line: 2741, column: 20, scope: !9291)
!9295 = !DILocation(line: 2741, column: 13, scope: !9291)
!9296 = !DILocation(line: 2746, column: 23, scope: !9092)
!9297 = !DILocation(line: 2746, column: 13, scope: !9092)
!9298 = !DILocation(line: 559, column: 22, scope: !2586, inlinedAt: !9095)
!9299 = !DILocation(line: 559, column: 12, scope: !2586, inlinedAt: !9095)
!9300 = !DILocation(line: 2746, column: 29, scope: !9092)
!9301 = !DILocation(line: 2746, column: 27, scope: !9092)
!9302 = !DILocation(line: 2746, column: 13, scope: !9093)
!9303 = !DILocation(line: 2747, column: 17, scope: !9304)
!9304 = distinct !DILexicalBlock(scope: !9305, file: !939, line: 2747, column: 17)
!9305 = distinct !DILexicalBlock(scope: !9092, file: !939, line: 2746, column: 38)
!9306 = !DILocation(line: 2747, column: 17, scope: !9305)
!9307 = !DILocation(line: 2748, column: 29, scope: !9308)
!9308 = distinct !DILexicalBlock(scope: !9304, file: !939, line: 2747, column: 27)
!9309 = !DILocation(line: 2748, column: 17, scope: !9308)
!9310 = !DILocation(line: 2748, column: 22, scope: !9308)
!9311 = !DILocation(line: 2748, column: 27, scope: !9308)
!9312 = !DILocation(line: 2749, column: 17, scope: !9308)
!9313 = !DILocation(line: 2750, column: 13, scope: !9308)
!9314 = !DILocation(line: 2752, column: 20, scope: !9305)
!9315 = !DILocation(line: 2752, column: 25, scope: !9305)
!9316 = !DILocation(line: 2754, column: 20, scope: !9305)
!9317 = !DILocation(line: 2754, column: 25, scope: !9305)
!9318 = !DILocation(line: 2754, column: 30, scope: !9305)
!9319 = !DILocation(line: 2752, column: 13, scope: !9305)
!9320 = !DILocation(line: 2755, column: 13, scope: !9305)
!9321 = !DILocation(line: 2756, column: 30, scope: !9091)
!9322 = !DILocation(line: 2756, column: 20, scope: !9091)
!9323 = !DILocation(line: 559, column: 22, scope: !2586, inlinedAt: !9090)
!9324 = !DILocation(line: 559, column: 12, scope: !2586, inlinedAt: !9090)
!9325 = !DILocation(line: 2756, column: 37, scope: !9091)
!9326 = !DILocation(line: 2756, column: 34, scope: !9091)
!9327 = !DILocation(line: 2756, column: 20, scope: !9092)
!9328 = !DILocation(line: 2757, column: 23, scope: !9091)
!9329 = !DILocation(line: 2757, column: 27, scope: !9091)
!9330 = !DILocation(line: 2757, column: 13, scope: !9091)
!9331 = !DILocation(line: 2713, column: 5, scope: !9332)
!9332 = !DILexicalBlockFile(scope: !9086, file: !939, discriminator: 4)
!9333 = !DILocation(line: 2759, column: 9, scope: !9334)
!9334 = distinct !DILexicalBlock(scope: !9086, file: !939, line: 2759, column: 9)
!9335 = !DILocation(line: 2759, column: 9, scope: !9086)
!9336 = !DILocation(line: 2759, column: 31, scope: !9337)
!9337 = !DILexicalBlockFile(scope: !9334, file: !939, discriminator: 1)
!9338 = !DILocation(line: 2759, column: 19, scope: !9337)
!9339 = !DILocation(line: 2759, column: 24, scope: !9337)
!9340 = !DILocation(line: 2759, column: 29, scope: !9337)
!9341 = !DILocation(line: 2760, column: 12, scope: !9086)
!9342 = !DILocation(line: 2760, column: 44, scope: !9111)
!9343 = !DILocation(line: 2760, column: 49, scope: !9111)
!9344 = !DILocation(line: 2760, column: 23, scope: !9111)
!9345 = !DILocation(line: 2760, column: 12, scope: !9111)
!9346 = !DILocation(line: 2760, column: 12, scope: !9136)
!9347 = !DILocation(line: 2760, column: 12, scope: !9139)
!9348 = !DILocation(line: 2760, column: 5, scope: !9139)
!9349 = !DILocation(line: 2761, column: 1, scope: !9086)
!9350 = distinct !DISubprogram(name: "mxf_metadataset_init", scope: !939, file: !939, line: 2690, type: !9351, isLocal: true, isDefinition: true, scopeLine: 2691, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!9351 = !DISubroutineType(types: !9352)
!9352 = !{!1014, !1186, !957}
!9353 = !DILocalVariable(name: "ctx", arg: 1, scope: !9350, file: !939, line: 2690, type: !1186)
!9354 = !DILocation(line: 2690, column: 49, scope: !9350)
!9355 = !DILocalVariable(name: "type", arg: 2, scope: !9350, file: !939, line: 2690, type: !957)
!9356 = !DILocation(line: 2690, column: 78, scope: !9350)
!9357 = !DILocation(line: 2692, column: 13, scope: !9350)
!9358 = !DILocation(line: 2692, column: 5, scope: !9350)
!9359 = !DILocation(line: 2695, column: 26, scope: !9360)
!9360 = distinct !DILexicalBlock(scope: !9350, file: !939, line: 2692, column: 18)
!9361 = !DILocation(line: 2695, column: 32, scope: !9360)
!9362 = !DILocation(line: 2695, column: 40, scope: !9360)
!9363 = !DILocation(line: 2696, column: 26, scope: !9360)
!9364 = !DILocation(line: 2696, column: 32, scope: !9360)
!9365 = !DILocation(line: 2696, column: 41, scope: !9360)
!9366 = !DILocation(line: 2697, column: 9, scope: !9360)
!9367 = !DILocation(line: 2699, column: 9, scope: !9360)
!9368 = !DILocation(line: 2701, column: 5, scope: !9350)
!9369 = distinct !DISubprogram(name: "mxf_free_metadataset", scope: !939, file: !939, line: 328, type: !9370, isLocal: true, isDefinition: true, scopeLine: 329, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!9370 = !DISubroutineType(types: !9371)
!9371 = !{null, !1185, !1014}
!9372 = !DILocalVariable(name: "ctx", arg: 1, scope: !9369, file: !939, line: 328, type: !1185)
!9373 = !DILocation(line: 328, column: 51, scope: !9369)
!9374 = !DILocalVariable(name: "freectx", arg: 2, scope: !9369, file: !939, line: 328, type: !1014)
!9375 = !DILocation(line: 328, column: 60, scope: !9369)
!9376 = !DILocalVariable(name: "seg", scope: !9369, file: !939, line: 330, type: !1133)
!9377 = !DILocation(line: 330, column: 27, scope: !9369)
!9378 = !DILocation(line: 331, column: 15, scope: !9369)
!9379 = !DILocation(line: 331, column: 14, scope: !9369)
!9380 = !DILocation(line: 331, column: 21, scope: !9369)
!9381 = !DILocation(line: 331, column: 5, scope: !9369)
!9382 = !DILocation(line: 333, column: 38, scope: !9383)
!9383 = distinct !DILexicalBlock(scope: !9369, file: !939, line: 331, column: 27)
!9384 = !DILocation(line: 333, column: 37, scope: !9383)
!9385 = !DILocation(line: 333, column: 44, scope: !9383)
!9386 = !DILocation(line: 333, column: 18, scope: !9383)
!9387 = !DILocation(line: 333, column: 9, scope: !9383)
!9388 = !DILocation(line: 334, column: 9, scope: !9383)
!9389 = !DILocation(line: 336, column: 38, scope: !9383)
!9390 = !DILocation(line: 336, column: 37, scope: !9383)
!9391 = !DILocation(line: 336, column: 44, scope: !9383)
!9392 = !DILocation(line: 336, column: 18, scope: !9383)
!9393 = !DILocation(line: 336, column: 9, scope: !9383)
!9394 = !DILocation(line: 337, column: 9, scope: !9383)
!9395 = !DILocation(line: 339, column: 36, scope: !9383)
!9396 = !DILocation(line: 339, column: 35, scope: !9383)
!9397 = !DILocation(line: 339, column: 42, scope: !9383)
!9398 = !DILocation(line: 339, column: 18, scope: !9383)
!9399 = !DILocation(line: 339, column: 9, scope: !9383)
!9400 = !DILocation(line: 340, column: 9, scope: !9383)
!9401 = !DILocation(line: 342, column: 40, scope: !9383)
!9402 = !DILocation(line: 342, column: 39, scope: !9383)
!9403 = !DILocation(line: 342, column: 46, scope: !9383)
!9404 = !DILocation(line: 342, column: 18, scope: !9383)
!9405 = !DILocation(line: 342, column: 9, scope: !9383)
!9406 = !DILocation(line: 343, column: 9, scope: !9383)
!9407 = !DILocation(line: 346, column: 35, scope: !9383)
!9408 = !DILocation(line: 346, column: 34, scope: !9383)
!9409 = !DILocation(line: 346, column: 41, scope: !9383)
!9410 = !DILocation(line: 346, column: 18, scope: !9383)
!9411 = !DILocation(line: 346, column: 9, scope: !9383)
!9412 = !DILocation(line: 347, column: 35, scope: !9383)
!9413 = !DILocation(line: 347, column: 34, scope: !9383)
!9414 = !DILocation(line: 347, column: 41, scope: !9383)
!9415 = !DILocation(line: 347, column: 18, scope: !9383)
!9416 = !DILocation(line: 347, column: 9, scope: !9383)
!9417 = !DILocation(line: 348, column: 35, scope: !9383)
!9418 = !DILocation(line: 348, column: 34, scope: !9383)
!9419 = !DILocation(line: 348, column: 41, scope: !9383)
!9420 = !DILocation(line: 348, column: 18, scope: !9383)
!9421 = !DILocation(line: 348, column: 9, scope: !9383)
!9422 = !DILocation(line: 349, column: 9, scope: !9383)
!9423 = !DILocation(line: 351, column: 39, scope: !9383)
!9424 = !DILocation(line: 351, column: 38, scope: !9383)
!9425 = !DILocation(line: 351, column: 45, scope: !9383)
!9426 = !DILocation(line: 351, column: 18, scope: !9383)
!9427 = !DILocation(line: 351, column: 9, scope: !9383)
!9428 = !DILocation(line: 352, column: 39, scope: !9383)
!9429 = !DILocation(line: 352, column: 38, scope: !9383)
!9430 = !DILocation(line: 352, column: 45, scope: !9383)
!9431 = !DILocation(line: 352, column: 18, scope: !9383)
!9432 = !DILocation(line: 352, column: 9, scope: !9383)
!9433 = !DILocation(line: 353, column: 9, scope: !9383)
!9434 = !DILocation(line: 355, column: 33, scope: !9383)
!9435 = !DILocation(line: 355, column: 32, scope: !9383)
!9436 = !DILocation(line: 355, column: 39, scope: !9383)
!9437 = !DILocation(line: 355, column: 18, scope: !9383)
!9438 = !DILocation(line: 355, column: 9, scope: !9383)
!9439 = !DILocation(line: 356, column: 9, scope: !9383)
!9440 = !DILocation(line: 358, column: 40, scope: !9383)
!9441 = !DILocation(line: 358, column: 39, scope: !9383)
!9442 = !DILocation(line: 358, column: 15, scope: !9383)
!9443 = !DILocation(line: 358, column: 13, scope: !9383)
!9444 = !DILocation(line: 359, column: 19, scope: !9383)
!9445 = !DILocation(line: 359, column: 24, scope: !9383)
!9446 = !DILocation(line: 359, column: 18, scope: !9383)
!9447 = !DILocation(line: 359, column: 9, scope: !9383)
!9448 = !DILocation(line: 360, column: 19, scope: !9383)
!9449 = !DILocation(line: 360, column: 24, scope: !9383)
!9450 = !DILocation(line: 360, column: 18, scope: !9383)
!9451 = !DILocation(line: 360, column: 9, scope: !9383)
!9452 = !DILocation(line: 361, column: 19, scope: !9383)
!9453 = !DILocation(line: 361, column: 24, scope: !9383)
!9454 = !DILocation(line: 361, column: 18, scope: !9383)
!9455 = !DILocation(line: 361, column: 9, scope: !9383)
!9456 = !DILocation(line: 363, column: 9, scope: !9383)
!9457 = !DILocation(line: 365, column: 9, scope: !9458)
!9458 = distinct !DILexicalBlock(scope: !9369, file: !939, line: 365, column: 9)
!9459 = !DILocation(line: 365, column: 9, scope: !9369)
!9460 = !DILocation(line: 366, column: 14, scope: !9458)
!9461 = !DILocation(line: 366, column: 5, scope: !9458)
!9462 = !DILocation(line: 367, column: 1, scope: !9369)
!9463 = distinct !DISubprogram(name: "mxf_add_metadata_set", scope: !939, file: !939, line: 817, type: !9464, isLocal: true, isDefinition: true, scopeLine: 818, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!9464 = !DISubroutineType(types: !9465)
!9465 = !{!1014, !2594, !1020}
!9466 = !DILocalVariable(name: "mxf", arg: 1, scope: !9463, file: !939, line: 817, type: !2594)
!9467 = !DILocation(line: 817, column: 45, scope: !9463)
!9468 = !DILocalVariable(name: "metadata_set", arg: 2, scope: !9463, file: !939, line: 817, type: !1020)
!9469 = !DILocation(line: 817, column: 56, scope: !9463)
!9470 = !DILocalVariable(name: "tmp", scope: !9463, file: !939, line: 819, type: !1185)
!9471 = !DILocation(line: 819, column: 22, scope: !9463)
!9472 = !DILocation(line: 821, column: 28, scope: !9463)
!9473 = !DILocation(line: 821, column: 33, scope: !9463)
!9474 = !DILocation(line: 821, column: 48, scope: !9463)
!9475 = !DILocation(line: 821, column: 53, scope: !9463)
!9476 = !DILocation(line: 821, column: 73, scope: !9463)
!9477 = !DILocation(line: 821, column: 11, scope: !9463)
!9478 = !DILocation(line: 821, column: 9, scope: !9463)
!9479 = !DILocation(line: 822, column: 10, scope: !9480)
!9480 = distinct !DILexicalBlock(scope: !9463, file: !939, line: 822, column: 9)
!9481 = !DILocation(line: 822, column: 9, scope: !9463)
!9482 = !DILocation(line: 823, column: 9, scope: !9480)
!9483 = !DILocation(line: 824, column: 26, scope: !9463)
!9484 = !DILocation(line: 824, column: 5, scope: !9463)
!9485 = !DILocation(line: 824, column: 10, scope: !9463)
!9486 = !DILocation(line: 824, column: 24, scope: !9463)
!9487 = !DILocation(line: 825, column: 52, scope: !9463)
!9488 = !DILocation(line: 825, column: 24, scope: !9463)
!9489 = !DILocation(line: 825, column: 29, scope: !9463)
!9490 = !DILocation(line: 825, column: 5, scope: !9463)
!9491 = !DILocation(line: 825, column: 10, scope: !9463)
!9492 = !DILocation(line: 825, column: 50, scope: !9463)
!9493 = !DILocation(line: 826, column: 5, scope: !9463)
!9494 = !DILocation(line: 826, column: 10, scope: !9463)
!9495 = !DILocation(line: 826, column: 29, scope: !9463)
!9496 = !DILocation(line: 827, column: 5, scope: !9463)
!9497 = !DILocation(line: 828, column: 1, scope: !9463)
!9498 = distinct !DISubprogram(name: "mxf_resolve_strong_ref", scope: !939, file: !939, line: 1300, type: !9499, isLocal: true, isDefinition: true, scopeLine: 1301, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!9499 = !DISubroutineType(types: !9500)
!9500 = !{!1020, !2594, !1057, !957}
!9501 = !DILocalVariable(name: "mxf", arg: 1, scope: !9498, file: !939, line: 1300, type: !2594)
!9502 = !DILocation(line: 1300, column: 49, scope: !9498)
!9503 = !DILocalVariable(name: "strong_ref", arg: 2, scope: !9498, file: !939, line: 1300, type: !1057)
!9504 = !DILocation(line: 1300, column: 59, scope: !9498)
!9505 = !DILocalVariable(name: "type", arg: 3, scope: !9498, file: !939, line: 1300, type: !957)
!9506 = !DILocation(line: 1300, column: 95, scope: !9498)
!9507 = !DILocalVariable(name: "i", scope: !9498, file: !939, line: 1302, type: !1014)
!9508 = !DILocation(line: 1302, column: 9, scope: !9498)
!9509 = !DILocation(line: 1304, column: 10, scope: !9510)
!9510 = distinct !DILexicalBlock(scope: !9498, file: !939, line: 1304, column: 9)
!9511 = !DILocation(line: 1304, column: 9, scope: !9498)
!9512 = !DILocation(line: 1305, column: 9, scope: !9510)
!9513 = !DILocation(line: 1306, column: 12, scope: !9514)
!9514 = distinct !DILexicalBlock(scope: !9498, file: !939, line: 1306, column: 5)
!9515 = !DILocation(line: 1306, column: 10, scope: !9514)
!9516 = !DILocation(line: 1306, column: 17, scope: !9517)
!9517 = !DILexicalBlockFile(scope: !9518, file: !939, discriminator: 1)
!9518 = distinct !DILexicalBlock(scope: !9514, file: !939, line: 1306, column: 5)
!9519 = !DILocation(line: 1306, column: 21, scope: !9517)
!9520 = !DILocation(line: 1306, column: 26, scope: !9517)
!9521 = !DILocation(line: 1306, column: 19, scope: !9517)
!9522 = !DILocation(line: 1306, column: 5, scope: !9517)
!9523 = !DILocation(line: 1307, column: 22, scope: !9524)
!9524 = distinct !DILexicalBlock(scope: !9525, file: !939, line: 1307, column: 13)
!9525 = distinct !DILexicalBlock(scope: !9518, file: !939, line: 1306, column: 52)
!9526 = !DILocation(line: 1307, column: 21, scope: !9524)
!9527 = !DILocation(line: 1307, column: 53, scope: !9524)
!9528 = !DILocation(line: 1307, column: 34, scope: !9524)
!9529 = !DILocation(line: 1307, column: 39, scope: !9524)
!9530 = !DILocation(line: 1307, column: 57, scope: !9524)
!9531 = !DILocation(line: 1307, column: 14, scope: !9524)
!9532 = !DILocation(line: 1307, column: 66, scope: !9524)
!9533 = !DILocation(line: 1308, column: 14, scope: !9524)
!9534 = !DILocation(line: 1308, column: 19, scope: !9524)
!9535 = !DILocation(line: 1308, column: 30, scope: !9524)
!9536 = !DILocation(line: 1308, column: 52, scope: !9537)
!9537 = !DILexicalBlockFile(scope: !9524, file: !939, discriminator: 1)
!9538 = !DILocation(line: 1308, column: 33, scope: !9537)
!9539 = !DILocation(line: 1308, column: 38, scope: !9537)
!9540 = !DILocation(line: 1308, column: 56, scope: !9537)
!9541 = !DILocation(line: 1308, column: 64, scope: !9537)
!9542 = !DILocation(line: 1308, column: 61, scope: !9537)
!9543 = !DILocation(line: 1307, column: 13, scope: !9544)
!9544 = !DILexicalBlockFile(scope: !9525, file: !939, discriminator: 1)
!9545 = !DILocation(line: 1309, column: 39, scope: !9546)
!9546 = distinct !DILexicalBlock(scope: !9524, file: !939, line: 1308, column: 71)
!9547 = !DILocation(line: 1309, column: 20, scope: !9546)
!9548 = !DILocation(line: 1309, column: 25, scope: !9546)
!9549 = !DILocation(line: 1309, column: 13, scope: !9546)
!9550 = !DILocation(line: 1311, column: 5, scope: !9525)
!9551 = !DILocation(line: 1306, column: 48, scope: !9552)
!9552 = !DILexicalBlockFile(scope: !9518, file: !939, discriminator: 2)
!9553 = !DILocation(line: 1306, column: 5, scope: !9552)
!9554 = distinct !{!9554, !9555}
!9555 = !DILocation(line: 1306, column: 5, scope: !9498)
!9556 = !DILocation(line: 1312, column: 5, scope: !9498)
!9557 = !DILocation(line: 1313, column: 1, scope: !9498)
!9558 = distinct !DISubprogram(name: "mxf_add_umid_metadata", scope: !939, file: !939, line: 1884, type: !9559, isLocal: true, isDefinition: true, scopeLine: 1885, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!9559 = !DISubroutineType(types: !9560)
!9560 = !{!1014, !2382, !1199, !1083}
!9561 = !DILocalVariable(name: "pm", arg: 1, scope: !9558, file: !939, line: 1884, type: !2382)
!9562 = !DILocation(line: 1884, column: 49, scope: !9558)
!9563 = !DILocalVariable(name: "key", arg: 2, scope: !9558, file: !939, line: 1884, type: !1199)
!9564 = !DILocation(line: 1884, column: 65, scope: !9558)
!9565 = !DILocalVariable(name: "package", arg: 3, scope: !9558, file: !939, line: 1884, type: !1083)
!9566 = !DILocation(line: 1884, column: 82, scope: !9558)
!9567 = !DILocalVariable(name: "str", scope: !9558, file: !939, line: 1886, type: !1096)
!9568 = !DILocation(line: 1886, column: 11, scope: !9558)
!9569 = !DILocalVariable(name: "ret", scope: !9558, file: !939, line: 1887, type: !1014)
!9570 = !DILocation(line: 1887, column: 9, scope: !9558)
!9571 = !DILocation(line: 1888, column: 10, scope: !9572)
!9572 = distinct !DILexicalBlock(scope: !9558, file: !939, line: 1888, column: 9)
!9573 = !DILocation(line: 1888, column: 9, scope: !9558)
!9574 = !DILocation(line: 1889, column: 9, scope: !9572)
!9575 = !DILocation(line: 1890, column: 32, scope: !9576)
!9576 = distinct !DILexicalBlock(scope: !9558, file: !939, line: 1890, column: 9)
!9577 = !DILocation(line: 1890, column: 41, scope: !9576)
!9578 = !DILocation(line: 1890, column: 53, scope: !9576)
!9579 = !DILocation(line: 1890, column: 62, scope: !9576)
!9580 = !DILocation(line: 1890, column: 16, scope: !9576)
!9581 = !DILocation(line: 1890, column: 14, scope: !9576)
!9582 = !DILocation(line: 1890, column: 82, scope: !9576)
!9583 = !DILocation(line: 1890, column: 9, scope: !9558)
!9584 = !DILocation(line: 1891, column: 16, scope: !9576)
!9585 = !DILocation(line: 1891, column: 9, scope: !9576)
!9586 = !DILocation(line: 1892, column: 17, scope: !9558)
!9587 = !DILocation(line: 1892, column: 21, scope: !9558)
!9588 = !DILocation(line: 1892, column: 26, scope: !9558)
!9589 = !DILocation(line: 1892, column: 5, scope: !9558)
!9590 = !DILocation(line: 1893, column: 5, scope: !9558)
!9591 = !DILocation(line: 1894, column: 1, scope: !9558)
!9592 = distinct !DISubprogram(name: "mxf_parse_package_comments", scope: !939, file: !939, line: 2012, type: !9593, isLocal: true, isDefinition: true, scopeLine: 2013, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!9593 = !DISubroutineType(types: !9594)
!9594 = !{!1014, !2594, !2382, !1083}
!9595 = !DILocalVariable(name: "mxf", arg: 1, scope: !9592, file: !939, line: 2012, type: !2594)
!9596 = !DILocation(line: 2012, column: 51, scope: !9592)
!9597 = !DILocalVariable(name: "pm", arg: 2, scope: !9592, file: !939, line: 2012, type: !2382)
!9598 = !DILocation(line: 2012, column: 71, scope: !9592)
!9599 = !DILocalVariable(name: "package", arg: 3, scope: !9592, file: !939, line: 2012, type: !1083)
!9600 = !DILocation(line: 2012, column: 87, scope: !9592)
!9601 = !DILocalVariable(name: "tag", scope: !9592, file: !939, line: 2014, type: !1100)
!9602 = !DILocation(line: 2014, column: 21, scope: !9592)
!9603 = !DILocalVariable(name: "size", scope: !9592, file: !939, line: 2015, type: !1014)
!9604 = !DILocation(line: 2015, column: 9, scope: !9592)
!9605 = !DILocalVariable(name: "i", scope: !9592, file: !939, line: 2015, type: !1014)
!9606 = !DILocation(line: 2015, column: 15, scope: !9592)
!9607 = !DILocalVariable(name: "key", scope: !9592, file: !939, line: 2016, type: !1096)
!9608 = !DILocation(line: 2016, column: 11, scope: !9592)
!9609 = !DILocation(line: 2018, column: 12, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9592, file: !939, line: 2018, column: 5)
!9611 = !DILocation(line: 2018, column: 10, scope: !9610)
!9612 = !DILocation(line: 2018, column: 17, scope: !9613)
!9613 = !DILexicalBlockFile(scope: !9614, file: !939, discriminator: 1)
!9614 = distinct !DILexicalBlock(scope: !9610, file: !939, line: 2018, column: 5)
!9615 = !DILocation(line: 2018, column: 21, scope: !9613)
!9616 = !DILocation(line: 2018, column: 30, scope: !9613)
!9617 = !DILocation(line: 2018, column: 19, scope: !9613)
!9618 = !DILocation(line: 2018, column: 5, scope: !9613)
!9619 = !DILocation(line: 2019, column: 38, scope: !9620)
!9620 = distinct !DILexicalBlock(scope: !9614, file: !939, line: 2018, column: 50)
!9621 = !DILocation(line: 2019, column: 66, scope: !9620)
!9622 = !DILocation(line: 2019, column: 44, scope: !9620)
!9623 = !DILocation(line: 2019, column: 53, scope: !9620)
!9624 = !DILocation(line: 2019, column: 15, scope: !9620)
!9625 = !DILocation(line: 2019, column: 13, scope: !9620)
!9626 = !DILocation(line: 2020, column: 14, scope: !9627)
!9627 = distinct !DILexicalBlock(scope: !9620, file: !939, line: 2020, column: 13)
!9628 = !DILocation(line: 2020, column: 18, scope: !9627)
!9629 = !DILocation(line: 2020, column: 22, scope: !9630)
!9630 = !DILexicalBlockFile(scope: !9627, file: !939, discriminator: 1)
!9631 = !DILocation(line: 2020, column: 27, scope: !9630)
!9632 = !DILocation(line: 2020, column: 32, scope: !9630)
!9633 = !DILocation(line: 2020, column: 36, scope: !9634)
!9634 = !DILexicalBlockFile(scope: !9627, file: !939, discriminator: 2)
!9635 = !DILocation(line: 2020, column: 41, scope: !9634)
!9636 = !DILocation(line: 2020, column: 13, scope: !9634)
!9637 = !DILocation(line: 2021, column: 13, scope: !9627)
!9638 = !DILocation(line: 2023, column: 23, scope: !9620)
!9639 = !DILocation(line: 2023, column: 28, scope: !9620)
!9640 = !DILocation(line: 2023, column: 16, scope: !9620)
!9641 = !DILocation(line: 2023, column: 34, scope: !9620)
!9642 = !DILocation(line: 2023, column: 38, scope: !9620)
!9643 = !DILocation(line: 2023, column: 14, scope: !9620)
!9644 = !DILocation(line: 2024, column: 26, scope: !9620)
!9645 = !DILocation(line: 2024, column: 15, scope: !9620)
!9646 = !DILocation(line: 2024, column: 13, scope: !9620)
!9647 = !DILocation(line: 2025, column: 14, scope: !9648)
!9648 = distinct !DILexicalBlock(scope: !9620, file: !939, line: 2025, column: 13)
!9649 = !DILocation(line: 2025, column: 13, scope: !9620)
!9650 = !DILocation(line: 2026, column: 13, scope: !9648)
!9651 = !DILocation(line: 2028, column: 18, scope: !9620)
!9652 = !DILocation(line: 2028, column: 23, scope: !9620)
!9653 = !DILocation(line: 2028, column: 43, scope: !9620)
!9654 = !DILocation(line: 2028, column: 48, scope: !9620)
!9655 = !DILocation(line: 2028, column: 9, scope: !9620)
!9656 = !DILocation(line: 2029, column: 21, scope: !9620)
!9657 = !DILocation(line: 2029, column: 25, scope: !9620)
!9658 = !DILocation(line: 2029, column: 30, scope: !9620)
!9659 = !DILocation(line: 2029, column: 35, scope: !9620)
!9660 = !DILocation(line: 2029, column: 9, scope: !9620)
!9661 = !DILocation(line: 2030, column: 5, scope: !9620)
!9662 = !DILocation(line: 2018, column: 46, scope: !9663)
!9663 = !DILexicalBlockFile(scope: !9614, file: !939, discriminator: 2)
!9664 = !DILocation(line: 2018, column: 5, scope: !9663)
!9665 = distinct !{!9665, !9666}
!9666 = !DILocation(line: 2018, column: 5, scope: !9592)
!9667 = !DILocation(line: 2031, column: 5, scope: !9592)
!9668 = !DILocation(line: 2032, column: 1, scope: !9592)
!9669 = distinct !DISubprogram(name: "mxf_add_timecode_metadata", scope: !939, file: !939, line: 1896, type: !9670, isLocal: true, isDefinition: true, scopeLine: 1897, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!9670 = !DISubroutineType(types: !9671)
!9671 = !{!1014, !2382, !1199, !9672}
!9672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 64, align: 64)
!9673 = !DILocalVariable(name: "pm", arg: 1, scope: !9669, file: !939, line: 1896, type: !2382)
!9674 = !DILocation(line: 1896, column: 53, scope: !9669)
!9675 = !DILocalVariable(name: "key", arg: 2, scope: !9669, file: !939, line: 1896, type: !1199)
!9676 = !DILocation(line: 1896, column: 69, scope: !9669)
!9677 = !DILocalVariable(name: "tc", arg: 3, scope: !9669, file: !939, line: 1896, type: !9672)
!9678 = !DILocation(line: 1896, column: 86, scope: !9669)
!9679 = !DILocalVariable(name: "buf", scope: !9669, file: !939, line: 1898, type: !9680)
!9680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1097, size: 184, align: 8, elements: !9681)
!9681 = !{!9682}
!9682 = !DISubrange(count: 23)
!9683 = !DILocation(line: 1898, column: 10, scope: !9669)
!9684 = !DILocation(line: 1899, column: 17, scope: !9669)
!9685 = !DILocation(line: 1899, column: 21, scope: !9669)
!9686 = !DILocation(line: 1899, column: 50, scope: !9669)
!9687 = !DILocation(line: 1899, column: 54, scope: !9669)
!9688 = !DILocation(line: 1899, column: 26, scope: !9669)
!9689 = !DILocation(line: 1899, column: 5, scope: !9690)
!9690 = !DILexicalBlockFile(scope: !9669, file: !939, discriminator: 1)
!9691 = !DILocation(line: 1901, column: 5, scope: !9669)
!9692 = distinct !DISubprogram(name: "mxf_resolve_sourceclip", scope: !939, file: !939, line: 1994, type: !9693, isLocal: true, isDefinition: true, scopeLine: 1995, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!9693 = !DISubroutineType(types: !9694)
!9694 = !{!4522, !2594, !1057}
!9695 = !DILocalVariable(name: "mxf", arg: 1, scope: !9692, file: !939, line: 1994, type: !2594)
!9696 = !DILocation(line: 1994, column: 67, scope: !9692)
!9697 = !DILocalVariable(name: "strong_ref", arg: 2, scope: !9692, file: !939, line: 1994, type: !1057)
!9698 = !DILocation(line: 1994, column: 77, scope: !9692)
!9699 = !DILocalVariable(name: "component", scope: !9692, file: !939, line: 1996, type: !4522)
!9700 = !DILocation(line: 1996, column: 29, scope: !9692)
!9701 = !DILocation(line: 1998, column: 40, scope: !9692)
!9702 = !DILocation(line: 1998, column: 45, scope: !9692)
!9703 = !DILocation(line: 1998, column: 17, scope: !9692)
!9704 = !DILocation(line: 1998, column: 15, scope: !9692)
!9705 = !DILocation(line: 1999, column: 10, scope: !9706)
!9706 = distinct !DILexicalBlock(scope: !9692, file: !939, line: 1999, column: 9)
!9707 = !DILocation(line: 1999, column: 9, scope: !9692)
!9708 = !DILocation(line: 2000, column: 9, scope: !9706)
!9709 = !DILocation(line: 2001, column: 13, scope: !9692)
!9710 = !DILocation(line: 2001, column: 24, scope: !9692)
!9711 = !DILocation(line: 2001, column: 5, scope: !9692)
!9712 = !DILocation(line: 2003, column: 20, scope: !9713)
!9713 = distinct !DILexicalBlock(scope: !9692, file: !939, line: 2001, column: 30)
!9714 = !DILocation(line: 2003, column: 13, scope: !9713)
!9715 = !DILocation(line: 2005, column: 53, scope: !9713)
!9716 = !DILocation(line: 2005, column: 77, scope: !9713)
!9717 = !DILocation(line: 2005, column: 58, scope: !9713)
!9718 = !DILocation(line: 2005, column: 20, scope: !9713)
!9719 = !DILocation(line: 2005, column: 13, scope: !9713)
!9720 = !DILocation(line: 2007, column: 13, scope: !9713)
!9721 = !DILocation(line: 2009, column: 5, scope: !9692)
!9722 = !DILocation(line: 2010, column: 1, scope: !9692)
!9723 = distinct !DISubprogram(name: "mxf_resolve_source_package", scope: !939, file: !939, line: 1925, type: !9724, isLocal: true, isDefinition: true, scopeLine: 1926, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!9724 = !DISubroutineType(types: !9725)
!9725 = !{!1083, !2594, !1017, !1017}
!9726 = !DILocalVariable(name: "mxf", arg: 1, scope: !9723, file: !939, line: 1925, type: !2594)
!9727 = !DILocation(line: 1925, column: 59, scope: !9723)
!9728 = !DILocalVariable(name: "package_ul", arg: 2, scope: !9723, file: !939, line: 1925, type: !1017)
!9729 = !DILocation(line: 1925, column: 68, scope: !9723)
!9730 = !DILocalVariable(name: "package_uid", arg: 3, scope: !9723, file: !939, line: 1925, type: !1017)
!9731 = !DILocation(line: 1925, column: 84, scope: !9723)
!9732 = !DILocalVariable(name: "package", scope: !9723, file: !939, line: 1927, type: !1083)
!9733 = !DILocation(line: 1927, column: 17, scope: !9723)
!9734 = !DILocalVariable(name: "i", scope: !9723, file: !939, line: 1928, type: !1014)
!9735 = !DILocation(line: 1928, column: 9, scope: !9723)
!9736 = !DILocation(line: 1930, column: 12, scope: !9737)
!9737 = distinct !DILexicalBlock(scope: !9723, file: !939, line: 1930, column: 5)
!9738 = !DILocation(line: 1930, column: 10, scope: !9737)
!9739 = !DILocation(line: 1930, column: 17, scope: !9740)
!9740 = !DILexicalBlockFile(scope: !9741, file: !939, discriminator: 1)
!9741 = distinct !DILexicalBlock(scope: !9737, file: !939, line: 1930, column: 5)
!9742 = !DILocation(line: 1930, column: 21, scope: !9740)
!9743 = !DILocation(line: 1930, column: 26, scope: !9740)
!9744 = !DILocation(line: 1930, column: 19, scope: !9740)
!9745 = !DILocation(line: 1930, column: 5, scope: !9740)
!9746 = !DILocation(line: 1931, column: 42, scope: !9747)
!9747 = distinct !DILexicalBlock(scope: !9741, file: !939, line: 1930, column: 47)
!9748 = !DILocation(line: 1931, column: 67, scope: !9747)
!9749 = !DILocation(line: 1931, column: 48, scope: !9747)
!9750 = !DILocation(line: 1931, column: 53, scope: !9747)
!9751 = !DILocation(line: 1931, column: 19, scope: !9747)
!9752 = !DILocation(line: 1931, column: 17, scope: !9747)
!9753 = !DILocation(line: 1932, column: 14, scope: !9754)
!9754 = distinct !DILexicalBlock(scope: !9747, file: !939, line: 1932, column: 13)
!9755 = !DILocation(line: 1932, column: 13, scope: !9747)
!9756 = !DILocation(line: 1933, column: 13, scope: !9754)
!9757 = !DILocation(line: 1935, column: 21, scope: !9758)
!9758 = distinct !DILexicalBlock(scope: !9747, file: !939, line: 1935, column: 13)
!9759 = !DILocation(line: 1935, column: 30, scope: !9758)
!9760 = !DILocation(line: 1935, column: 42, scope: !9758)
!9761 = !DILocation(line: 1935, column: 14, scope: !9758)
!9762 = !DILocation(line: 1935, column: 58, scope: !9758)
!9763 = !DILocation(line: 1935, column: 69, scope: !9764)
!9764 = !DILexicalBlockFile(scope: !9758, file: !939, discriminator: 1)
!9765 = !DILocation(line: 1935, column: 78, scope: !9764)
!9766 = !DILocation(line: 1935, column: 91, scope: !9764)
!9767 = !DILocation(line: 1935, column: 62, scope: !9764)
!9768 = !DILocation(line: 1935, column: 13, scope: !9764)
!9769 = !DILocation(line: 1936, column: 20, scope: !9758)
!9770 = !DILocation(line: 1936, column: 13, scope: !9758)
!9771 = !DILocation(line: 1937, column: 5, scope: !9747)
!9772 = !DILocation(line: 1930, column: 43, scope: !9773)
!9773 = !DILexicalBlockFile(scope: !9741, file: !939, discriminator: 2)
!9774 = !DILocation(line: 1930, column: 5, scope: !9773)
!9775 = distinct !{!9775, !9776}
!9776 = !DILocation(line: 1930, column: 5, scope: !9723)
!9777 = !DILocation(line: 1938, column: 5, scope: !9723)
!9778 = !DILocation(line: 1939, column: 1, scope: !9723)
!9779 = distinct !DISubprogram(name: "mxf_add_metadata_stream", scope: !939, file: !939, line: 2104, type: !9780, isLocal: true, isDefinition: true, scopeLine: 2105, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!9780 = !DISubroutineType(types: !9781)
!9781 = !{!1014, !2594, !1108}
!9782 = !DILocalVariable(name: "mxf", arg: 1, scope: !9779, file: !939, line: 2104, type: !2594)
!9783 = !DILocation(line: 2104, column: 48, scope: !9779)
!9784 = !DILocalVariable(name: "track", arg: 2, scope: !9779, file: !939, line: 2104, type: !1108)
!9785 = !DILocation(line: 2104, column: 63, scope: !9779)
!9786 = !DILocalVariable(name: "component", scope: !9779, file: !939, line: 2106, type: !4522)
!9787 = !DILocation(line: 2106, column: 29, scope: !9779)
!9788 = !DILocalVariable(name: "codec_ul", scope: !9779, file: !939, line: 2107, type: !4540)
!9789 = !DILocation(line: 2107, column: 23, scope: !9779)
!9790 = !DILocalVariable(name: "tmp_package", scope: !9779, file: !939, line: 2108, type: !1084)
!9791 = !DILocation(line: 2108, column: 16, scope: !9779)
!9792 = !DILocalVariable(name: "st", scope: !9779, file: !939, line: 2109, type: !1569)
!9793 = !DILocation(line: 2109, column: 15, scope: !9779)
!9794 = !DILocalVariable(name: "j", scope: !9779, file: !939, line: 2110, type: !1014)
!9795 = !DILocation(line: 2110, column: 9, scope: !9779)
!9796 = !DILocation(line: 2112, column: 12, scope: !9797)
!9797 = distinct !DILexicalBlock(scope: !9779, file: !939, line: 2112, column: 5)
!9798 = !DILocation(line: 2112, column: 10, scope: !9797)
!9799 = !DILocation(line: 2112, column: 17, scope: !9800)
!9800 = !DILexicalBlockFile(scope: !9801, file: !939, discriminator: 1)
!9801 = distinct !DILexicalBlock(scope: !9797, file: !939, line: 2112, column: 5)
!9802 = !DILocation(line: 2112, column: 21, scope: !9800)
!9803 = !DILocation(line: 2112, column: 28, scope: !9800)
!9804 = !DILocation(line: 2112, column: 38, scope: !9800)
!9805 = !DILocation(line: 2112, column: 19, scope: !9800)
!9806 = !DILocation(line: 2112, column: 5, scope: !9800)
!9807 = !DILocation(line: 2113, column: 44, scope: !9808)
!9808 = distinct !DILexicalBlock(scope: !9801, file: !939, line: 2112, column: 72)
!9809 = !DILocation(line: 2113, column: 94, scope: !9808)
!9810 = !DILocation(line: 2113, column: 50, scope: !9808)
!9811 = !DILocation(line: 2113, column: 57, scope: !9808)
!9812 = !DILocation(line: 2113, column: 67, scope: !9808)
!9813 = !DILocation(line: 2113, column: 21, scope: !9808)
!9814 = !DILocation(line: 2113, column: 19, scope: !9808)
!9815 = !DILocation(line: 2114, column: 14, scope: !9816)
!9816 = distinct !DILexicalBlock(scope: !9808, file: !939, line: 2114, column: 13)
!9817 = !DILocation(line: 2114, column: 13, scope: !9808)
!9818 = !DILocation(line: 2115, column: 13, scope: !9816)
!9819 = !DILocation(line: 2116, column: 9, scope: !9808)
!9820 = !DILocation(line: 2112, column: 68, scope: !9821)
!9821 = !DILexicalBlockFile(scope: !9801, file: !939, discriminator: 2)
!9822 = !DILocation(line: 2112, column: 5, scope: !9821)
!9823 = distinct !{!9823, !9824}
!9824 = !DILocation(line: 2112, column: 5, scope: !9779)
!9825 = !DILocation(line: 2118, column: 10, scope: !9826)
!9826 = distinct !DILexicalBlock(scope: !9779, file: !939, line: 2118, column: 9)
!9827 = !DILocation(line: 2118, column: 9, scope: !9779)
!9828 = !DILocation(line: 2119, column: 9, scope: !9826)
!9829 = !DILocation(line: 2121, column: 30, scope: !9779)
!9830 = !DILocation(line: 2121, column: 35, scope: !9779)
!9831 = !DILocation(line: 2121, column: 10, scope: !9779)
!9832 = !DILocation(line: 2121, column: 8, scope: !9779)
!9833 = !DILocation(line: 2122, column: 10, scope: !9834)
!9834 = distinct !DILexicalBlock(scope: !9779, file: !939, line: 2122, column: 9)
!9835 = !DILocation(line: 2122, column: 9, scope: !9779)
!9836 = !DILocation(line: 2123, column: 16, scope: !9837)
!9837 = distinct !DILexicalBlock(scope: !9834, file: !939, line: 2122, column: 14)
!9838 = !DILocation(line: 2123, column: 21, scope: !9837)
!9839 = !DILocation(line: 2123, column: 9, scope: !9837)
!9840 = !DILocation(line: 2124, column: 9, scope: !9837)
!9841 = !DILocation(line: 2127, column: 5, scope: !9779)
!9842 = !DILocation(line: 2127, column: 9, scope: !9779)
!9843 = !DILocation(line: 2127, column: 19, scope: !9779)
!9844 = !DILocation(line: 2127, column: 30, scope: !9779)
!9845 = !DILocation(line: 2128, column: 5, scope: !9779)
!9846 = !DILocation(line: 2128, column: 9, scope: !9779)
!9847 = !DILocation(line: 2128, column: 19, scope: !9779)
!9848 = !DILocation(line: 2128, column: 28, scope: !9779)
!9849 = !DILocation(line: 2129, column: 14, scope: !9779)
!9850 = !DILocation(line: 2129, column: 21, scope: !9779)
!9851 = !DILocation(line: 2129, column: 5, scope: !9779)
!9852 = !DILocation(line: 2129, column: 9, scope: !9779)
!9853 = !DILocation(line: 2129, column: 12, scope: !9779)
!9854 = !DILocation(line: 2131, column: 25, scope: !9779)
!9855 = !DILocation(line: 2131, column: 5, scope: !9779)
!9856 = !DILocation(line: 2131, column: 37, scope: !9779)
!9857 = !DILocation(line: 2131, column: 48, scope: !9779)
!9858 = !DILocation(line: 2132, column: 25, scope: !9779)
!9859 = !DILocation(line: 2132, column: 5, scope: !9779)
!9860 = !DILocation(line: 2132, column: 38, scope: !9779)
!9861 = !DILocation(line: 2132, column: 49, scope: !9779)
!9862 = !DILocation(line: 2133, column: 28, scope: !9779)
!9863 = !DILocation(line: 2133, column: 32, scope: !9779)
!9864 = !DILocation(line: 2133, column: 5, scope: !9779)
!9865 = !DILocation(line: 2134, column: 9, scope: !9866)
!9866 = distinct !DILexicalBlock(scope: !9779, file: !939, line: 2134, column: 9)
!9867 = !DILocation(line: 2134, column: 16, scope: !9866)
!9868 = !DILocation(line: 2134, column: 21, scope: !9866)
!9869 = !DILocation(line: 2134, column: 24, scope: !9870)
!9870 = !DILexicalBlockFile(scope: !9866, file: !939, discriminator: 1)
!9871 = !DILocation(line: 2134, column: 31, scope: !9870)
!9872 = !DILocation(line: 2134, column: 9, scope: !9870)
!9873 = !DILocation(line: 2135, column: 22, scope: !9866)
!9874 = !DILocation(line: 2135, column: 26, scope: !9866)
!9875 = !DILocation(line: 2135, column: 50, scope: !9866)
!9876 = !DILocation(line: 2135, column: 57, scope: !9866)
!9877 = !DILocation(line: 2135, column: 9, scope: !9866)
!9878 = !DILocation(line: 2137, column: 62, scope: !9779)
!9879 = !DILocation(line: 2137, column: 69, scope: !9779)
!9880 = !DILocation(line: 2137, column: 79, scope: !9779)
!9881 = !DILocation(line: 2137, column: 16, scope: !9779)
!9882 = !DILocation(line: 2137, column: 14, scope: !9779)
!9883 = !DILocation(line: 2138, column: 18, scope: !9779)
!9884 = !DILocation(line: 2138, column: 22, scope: !9779)
!9885 = !DILocation(line: 2138, column: 70, scope: !9779)
!9886 = !DILocation(line: 2138, column: 80, scope: !9779)
!9887 = !DILocation(line: 2138, column: 45, scope: !9779)
!9888 = !DILocation(line: 2138, column: 5, scope: !9889)
!9889 = !DILexicalBlockFile(scope: !9779, file: !939, discriminator: 1)
!9890 = !DILocation(line: 2139, column: 5, scope: !9779)
!9891 = !DILocation(line: 2140, column: 1, scope: !9779)
!9892 = distinct !DISubprogram(name: "mxf_resolve_multidescriptor", scope: !939, file: !939, line: 1941, type: !9893, isLocal: true, isDefinition: true, scopeLine: 1942, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!9893 = !DISubroutineType(types: !9894)
!9894 = !{!1021, !2594, !1021, !1014}
!9895 = !DILocalVariable(name: "mxf", arg: 1, scope: !9892, file: !939, line: 1941, type: !2594)
!9896 = !DILocation(line: 1941, column: 63, scope: !9892)
!9897 = !DILocalVariable(name: "descriptor", arg: 2, scope: !9892, file: !939, line: 1941, type: !1021)
!9898 = !DILocation(line: 1941, column: 83, scope: !9892)
!9899 = !DILocalVariable(name: "track_id", arg: 3, scope: !9892, file: !939, line: 1941, type: !1014)
!9900 = !DILocation(line: 1941, column: 99, scope: !9892)
!9901 = !DILocalVariable(name: "sub_descriptor", scope: !9892, file: !939, line: 1943, type: !1021)
!9902 = !DILocation(line: 1943, column: 20, scope: !9892)
!9903 = !DILocalVariable(name: "i", scope: !9892, file: !939, line: 1944, type: !1014)
!9904 = !DILocation(line: 1944, column: 9, scope: !9892)
!9905 = !DILocation(line: 1946, column: 10, scope: !9906)
!9906 = distinct !DILexicalBlock(scope: !9892, file: !939, line: 1946, column: 9)
!9907 = !DILocation(line: 1946, column: 9, scope: !9892)
!9908 = !DILocation(line: 1947, column: 9, scope: !9906)
!9909 = !DILocation(line: 1949, column: 9, scope: !9910)
!9910 = distinct !DILexicalBlock(scope: !9892, file: !939, line: 1949, column: 9)
!9911 = !DILocation(line: 1949, column: 21, scope: !9910)
!9912 = !DILocation(line: 1949, column: 26, scope: !9910)
!9913 = !DILocation(line: 1949, column: 9, scope: !9892)
!9914 = !DILocation(line: 1950, column: 16, scope: !9915)
!9915 = distinct !DILexicalBlock(scope: !9916, file: !939, line: 1950, column: 9)
!9916 = distinct !DILexicalBlock(scope: !9910, file: !939, line: 1949, column: 49)
!9917 = !DILocation(line: 1950, column: 14, scope: !9915)
!9918 = !DILocation(line: 1950, column: 21, scope: !9919)
!9919 = !DILexicalBlockFile(scope: !9920, file: !939, discriminator: 1)
!9920 = distinct !DILexicalBlock(scope: !9915, file: !939, line: 1950, column: 9)
!9921 = !DILocation(line: 1950, column: 25, scope: !9919)
!9922 = !DILocation(line: 1950, column: 37, scope: !9919)
!9923 = !DILocation(line: 1950, column: 23, scope: !9919)
!9924 = !DILocation(line: 1950, column: 9, scope: !9919)
!9925 = !DILocation(line: 1951, column: 53, scope: !9926)
!9926 = distinct !DILexicalBlock(scope: !9920, file: !939, line: 1950, column: 65)
!9927 = !DILocation(line: 1951, column: 92, scope: !9926)
!9928 = !DILocation(line: 1951, column: 59, scope: !9926)
!9929 = !DILocation(line: 1951, column: 71, scope: !9926)
!9930 = !DILocation(line: 1951, column: 30, scope: !9926)
!9931 = !DILocation(line: 1951, column: 28, scope: !9926)
!9932 = !DILocation(line: 1953, column: 18, scope: !9933)
!9933 = distinct !DILexicalBlock(scope: !9926, file: !939, line: 1953, column: 17)
!9934 = !DILocation(line: 1953, column: 17, scope: !9926)
!9935 = !DILocation(line: 1954, column: 24, scope: !9936)
!9936 = distinct !DILexicalBlock(scope: !9933, file: !939, line: 1953, column: 34)
!9937 = !DILocation(line: 1954, column: 29, scope: !9936)
!9938 = !DILocation(line: 1954, column: 17, scope: !9936)
!9939 = !DILocation(line: 1955, column: 17, scope: !9936)
!9940 = !DILocation(line: 1957, column: 17, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !9926, file: !939, line: 1957, column: 17)
!9942 = !DILocation(line: 1957, column: 33, scope: !9941)
!9943 = !DILocation(line: 1957, column: 52, scope: !9941)
!9944 = !DILocation(line: 1957, column: 49, scope: !9941)
!9945 = !DILocation(line: 1957, column: 17, scope: !9926)
!9946 = !DILocation(line: 1958, column: 24, scope: !9947)
!9947 = distinct !DILexicalBlock(scope: !9941, file: !939, line: 1957, column: 62)
!9948 = !DILocation(line: 1958, column: 17, scope: !9947)
!9949 = !DILocation(line: 1960, column: 9, scope: !9926)
!9950 = !DILocation(line: 1950, column: 61, scope: !9951)
!9951 = !DILexicalBlockFile(scope: !9920, file: !939, discriminator: 2)
!9952 = !DILocation(line: 1950, column: 9, scope: !9951)
!9953 = distinct !{!9953, !9954}
!9954 = !DILocation(line: 1950, column: 9, scope: !9916)
!9955 = !DILocation(line: 1961, column: 5, scope: !9916)
!9956 = !DILocation(line: 1961, column: 16, scope: !9957)
!9957 = !DILexicalBlockFile(scope: !9958, file: !939, discriminator: 1)
!9958 = distinct !DILexicalBlock(scope: !9910, file: !939, line: 1961, column: 16)
!9959 = !DILocation(line: 1961, column: 28, scope: !9957)
!9960 = !DILocation(line: 1961, column: 33, scope: !9957)
!9961 = !DILocation(line: 1962, column: 16, scope: !9958)
!9962 = !DILocation(line: 1962, column: 9, scope: !9958)
!9963 = !DILocation(line: 1964, column: 5, scope: !9892)
!9964 = !DILocation(line: 1965, column: 1, scope: !9892)
!9965 = distinct !DISubprogram(name: "mxf_get_codec_ul", scope: !939, file: !939, line: 1290, type: !9966, isLocal: true, isDefinition: true, scopeLine: 1291, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!9966 = !DISubroutineType(types: !9967)
!9967 = !{!4540, !4540, !1057}
!9968 = !DILocalVariable(name: "uls", arg: 1, scope: !9965, file: !939, line: 1290, type: !4540)
!9969 = !DILocation(line: 1290, column: 61, scope: !9965)
!9970 = !DILocalVariable(name: "uid", arg: 2, scope: !9965, file: !939, line: 1290, type: !1057)
!9971 = !DILocation(line: 1290, column: 71, scope: !9965)
!9972 = !DILocation(line: 1292, column: 5, scope: !9965)
!9973 = !DILocation(line: 1292, column: 12, scope: !9974)
!9974 = !DILexicalBlockFile(scope: !9965, file: !939, discriminator: 1)
!9975 = !DILocation(line: 1292, column: 17, scope: !9974)
!9976 = !DILocation(line: 1292, column: 5, scope: !9974)
!9977 = !DILocation(line: 1293, column: 26, scope: !9978)
!9978 = distinct !DILexicalBlock(scope: !9979, file: !939, line: 1293, column: 12)
!9979 = distinct !DILexicalBlock(scope: !9965, file: !939, line: 1292, column: 25)
!9980 = !DILocation(line: 1293, column: 31, scope: !9978)
!9981 = !DILocation(line: 1293, column: 37, scope: !9978)
!9982 = !DILocation(line: 1293, column: 36, scope: !9978)
!9983 = !DILocation(line: 1293, column: 42, scope: !9978)
!9984 = !DILocation(line: 1293, column: 47, scope: !9978)
!9985 = !DILocation(line: 1293, column: 12, scope: !9978)
!9986 = !DILocation(line: 1293, column: 12, scope: !9979)
!9987 = !DILocation(line: 1294, column: 13, scope: !9978)
!9988 = !DILocation(line: 1295, column: 12, scope: !9979)
!9989 = !DILocation(line: 1292, column: 5, scope: !9990)
!9990 = !DILexicalBlockFile(scope: !9965, file: !939, discriminator: 2)
!9991 = distinct !{!9991, !9972}
!9992 = !DILocation(line: 1297, column: 12, scope: !9965)
!9993 = !DILocation(line: 1297, column: 5, scope: !9965)
!9994 = distinct !DISubprogram(name: "mxf_get_wrapping_kind", scope: !939, file: !939, line: 1374, type: !9995, isLocal: true, isDefinition: true, scopeLine: 1375, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!9995 = !DISubroutineType(types: !9996)
!9996 = !{!1131, !1057}
!9997 = !DILocalVariable(name: "essence_container_ul", arg: 1, scope: !9994, file: !939, line: 1374, type: !1057)
!9998 = !DILocation(line: 1374, column: 53, scope: !9994)
!9999 = !DILocalVariable(name: "val", scope: !9994, file: !939, line: 1376, type: !1014)
!10000 = !DILocation(line: 1376, column: 9, scope: !9994)
!10001 = !DILocalVariable(name: "codec_ul", scope: !9994, file: !939, line: 1377, type: !4540)
!10002 = !DILocation(line: 1377, column: 23, scope: !9994)
!10003 = !DILocation(line: 1379, column: 68, scope: !9994)
!10004 = !DILocation(line: 1379, column: 16, scope: !9994)
!10005 = !DILocation(line: 1379, column: 14, scope: !9994)
!10006 = !DILocation(line: 1380, column: 10, scope: !10007)
!10007 = distinct !DILexicalBlock(scope: !9994, file: !939, line: 1380, column: 9)
!10008 = !DILocation(line: 1380, column: 20, scope: !10007)
!10009 = !DILocation(line: 1380, column: 9, scope: !9994)
!10010 = !DILocation(line: 1381, column: 70, scope: !10007)
!10011 = !DILocation(line: 1381, column: 20, scope: !10007)
!10012 = !DILocation(line: 1381, column: 18, scope: !10007)
!10013 = !DILocation(line: 1381, column: 9, scope: !10007)
!10014 = !DILocation(line: 1382, column: 10, scope: !10015)
!10015 = distinct !DILexicalBlock(scope: !9994, file: !939, line: 1382, column: 9)
!10016 = !DILocation(line: 1382, column: 20, scope: !10015)
!10017 = !DILocation(line: 1382, column: 9, scope: !9994)
!10018 = !DILocation(line: 1383, column: 69, scope: !10015)
!10019 = !DILocation(line: 1383, column: 20, scope: !10015)
!10020 = !DILocation(line: 1383, column: 18, scope: !10015)
!10021 = !DILocation(line: 1383, column: 9, scope: !10015)
!10022 = !DILocation(line: 1384, column: 10, scope: !10023)
!10023 = distinct !DILexicalBlock(scope: !9994, file: !939, line: 1384, column: 9)
!10024 = !DILocation(line: 1384, column: 20, scope: !10023)
!10025 = !DILocation(line: 1384, column: 27, scope: !10023)
!10026 = !DILocation(line: 1384, column: 31, scope: !10027)
!10027 = !DILexicalBlockFile(scope: !10023, file: !939, discriminator: 1)
!10028 = !DILocation(line: 1384, column: 41, scope: !10027)
!10029 = !DILocation(line: 1384, column: 9, scope: !10027)
!10030 = !DILocation(line: 1385, column: 9, scope: !10023)
!10031 = !DILocation(line: 1387, column: 35, scope: !9994)
!10032 = !DILocation(line: 1387, column: 45, scope: !9994)
!10033 = !DILocation(line: 1387, column: 11, scope: !9994)
!10034 = !DILocation(line: 1387, column: 13, scope: !9994)
!10035 = !DILocation(line: 1387, column: 9, scope: !9994)
!10036 = !DILocation(line: 1388, column: 13, scope: !9994)
!10037 = !DILocation(line: 1388, column: 23, scope: !9994)
!10038 = !DILocation(line: 1388, column: 5, scope: !9994)
!10039 = !DILocation(line: 1390, column: 19, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !9994, file: !939, line: 1388, column: 48)
!10041 = !DILocation(line: 1390, column: 23, scope: !10040)
!10042 = !DILocation(line: 1390, column: 17, scope: !10040)
!10043 = !DILocation(line: 1391, column: 13, scope: !10040)
!10044 = !DILocation(line: 1393, column: 17, scope: !10045)
!10045 = distinct !DILexicalBlock(scope: !10040, file: !939, line: 1393, column: 17)
!10046 = !DILocation(line: 1393, column: 21, scope: !10045)
!10047 = !DILocation(line: 1393, column: 29, scope: !10045)
!10048 = !DILocation(line: 1393, column: 32, scope: !10049)
!10049 = !DILexicalBlockFile(scope: !10045, file: !939, discriminator: 1)
!10050 = !DILocation(line: 1393, column: 36, scope: !10049)
!10051 = !DILocation(line: 1393, column: 17, scope: !10049)
!10052 = !DILocation(line: 1394, column: 21, scope: !10045)
!10053 = !DILocation(line: 1394, column: 17, scope: !10045)
!10054 = !DILocation(line: 1395, column: 13, scope: !10040)
!10055 = !DILocation(line: 1397, column: 17, scope: !10056)
!10056 = distinct !DILexicalBlock(scope: !10040, file: !939, line: 1397, column: 17)
!10057 = !DILocation(line: 1397, column: 21, scope: !10056)
!10058 = !DILocation(line: 1397, column: 17, scope: !10040)
!10059 = !DILocation(line: 1398, column: 21, scope: !10056)
!10060 = !DILocation(line: 1398, column: 17, scope: !10056)
!10061 = !DILocation(line: 1399, column: 13, scope: !10040)
!10062 = !DILocation(line: 1401, column: 9, scope: !10063)
!10063 = distinct !DILexicalBlock(scope: !9994, file: !939, line: 1401, column: 9)
!10064 = !DILocation(line: 1401, column: 13, scope: !10063)
!10065 = !DILocation(line: 1401, column: 9, scope: !9994)
!10066 = !DILocation(line: 1402, column: 9, scope: !10063)
!10067 = !DILocation(line: 1403, column: 9, scope: !10068)
!10068 = distinct !DILexicalBlock(scope: !9994, file: !939, line: 1403, column: 9)
!10069 = !DILocation(line: 1403, column: 13, scope: !10068)
!10070 = !DILocation(line: 1403, column: 9, scope: !9994)
!10071 = !DILocation(line: 1404, column: 9, scope: !10068)
!10072 = !DILocation(line: 1405, column: 5, scope: !9994)
!10073 = !DILocation(line: 1406, column: 1, scope: !9994)
!10074 = distinct !DISubprogram(name: "mxf_parse_physical_source_package", scope: !939, file: !939, line: 2034, type: !10075, isLocal: true, isDefinition: true, scopeLine: 2035, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!10075 = !DISubroutineType(types: !10076)
!10076 = !{!1014, !2594, !1108, !1569}
!10077 = !DILocalVariable(name: "mxf", arg: 1, scope: !10074, file: !939, line: 2034, type: !2594)
!10078 = !DILocation(line: 2034, column: 58, scope: !10074)
!10079 = !DILocalVariable(name: "source_track", arg: 2, scope: !10074, file: !939, line: 2034, type: !1108)
!10080 = !DILocation(line: 2034, column: 73, scope: !10074)
!10081 = !DILocalVariable(name: "st", arg: 3, scope: !10074, file: !939, line: 2034, type: !1569)
!10082 = !DILocation(line: 2034, column: 97, scope: !10074)
!10083 = !DILocalVariable(name: "physical_package", scope: !10074, file: !939, line: 2036, type: !1083)
!10084 = !DILocation(line: 2036, column: 17, scope: !10074)
!10085 = !DILocalVariable(name: "physical_track", scope: !10074, file: !939, line: 2037, type: !1108)
!10086 = !DILocation(line: 2037, column: 15, scope: !10074)
!10087 = !DILocalVariable(name: "sourceclip", scope: !10074, file: !939, line: 2038, type: !4522)
!10088 = !DILocation(line: 2038, column: 29, scope: !10074)
!10089 = !DILocalVariable(name: "mxf_tc", scope: !10074, file: !939, line: 2039, type: !1154)
!10090 = !DILocation(line: 2039, column: 27, scope: !10074)
!10091 = !DILocalVariable(name: "i", scope: !10074, file: !939, line: 2040, type: !1014)
!10092 = !DILocation(line: 2040, column: 9, scope: !10074)
!10093 = !DILocalVariable(name: "j", scope: !10074, file: !939, line: 2040, type: !1014)
!10094 = !DILocation(line: 2040, column: 12, scope: !10074)
!10095 = !DILocalVariable(name: "k", scope: !10074, file: !939, line: 2040, type: !1014)
!10096 = !DILocation(line: 2040, column: 15, scope: !10074)
!10097 = !DILocalVariable(name: "tc", scope: !10074, file: !939, line: 2041, type: !1164)
!10098 = !DILocation(line: 2041, column: 16, scope: !10074)
!10099 = !DILocalVariable(name: "flags", scope: !10074, file: !939, line: 2042, type: !1014)
!10100 = !DILocation(line: 2042, column: 9, scope: !10074)
!10101 = !DILocalVariable(name: "start_position", scope: !10074, file: !939, line: 2043, type: !1015)
!10102 = !DILocation(line: 2043, column: 13, scope: !10074)
!10103 = !DILocation(line: 2045, column: 12, scope: !10104)
!10104 = distinct !DILexicalBlock(scope: !10074, file: !939, line: 2045, column: 5)
!10105 = !DILocation(line: 2045, column: 10, scope: !10104)
!10106 = !DILocation(line: 2045, column: 17, scope: !10107)
!10107 = !DILexicalBlockFile(scope: !10108, file: !939, discriminator: 1)
!10108 = distinct !DILexicalBlock(scope: !10104, file: !939, line: 2045, column: 5)
!10109 = !DILocation(line: 2045, column: 21, scope: !10107)
!10110 = !DILocation(line: 2045, column: 35, scope: !10107)
!10111 = !DILocation(line: 2045, column: 45, scope: !10107)
!10112 = !DILocation(line: 2045, column: 19, scope: !10107)
!10113 = !DILocation(line: 2045, column: 5, scope: !10107)
!10114 = !DILocation(line: 2046, column: 45, scope: !10115)
!10115 = distinct !DILexicalBlock(scope: !10108, file: !939, line: 2045, column: 79)
!10116 = !DILocation(line: 2046, column: 102, scope: !10115)
!10117 = !DILocation(line: 2046, column: 51, scope: !10115)
!10118 = !DILocation(line: 2046, column: 65, scope: !10115)
!10119 = !DILocation(line: 2046, column: 75, scope: !10115)
!10120 = !DILocation(line: 2046, column: 22, scope: !10115)
!10121 = !DILocation(line: 2046, column: 20, scope: !10115)
!10122 = !DILocation(line: 2047, column: 14, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10115, file: !939, line: 2047, column: 13)
!10124 = !DILocation(line: 2047, column: 13, scope: !10115)
!10125 = !DILocation(line: 2048, column: 13, scope: !10123)
!10126 = !DILocation(line: 2050, column: 61, scope: !10127)
!10127 = distinct !DILexicalBlock(scope: !10115, file: !939, line: 2050, column: 13)
!10128 = !DILocation(line: 2050, column: 66, scope: !10127)
!10129 = !DILocation(line: 2050, column: 78, scope: !10127)
!10130 = !DILocation(line: 2050, column: 97, scope: !10127)
!10131 = !DILocation(line: 2050, column: 109, scope: !10127)
!10132 = !DILocation(line: 2050, column: 34, scope: !10127)
!10133 = !DILocation(line: 2050, column: 32, scope: !10127)
!10134 = !DILocation(line: 2050, column: 13, scope: !10115)
!10135 = !DILocation(line: 2051, column: 13, scope: !10127)
!10136 = !DILocation(line: 2053, column: 32, scope: !10115)
!10137 = !DILocation(line: 2053, column: 36, scope: !10115)
!10138 = !DILocation(line: 2053, column: 59, scope: !10115)
!10139 = !DILocation(line: 2053, column: 9, scope: !10115)
!10140 = !DILocation(line: 2056, column: 13, scope: !10141)
!10141 = distinct !DILexicalBlock(scope: !10115, file: !939, line: 2056, column: 13)
!10142 = !DILocation(line: 2056, column: 31, scope: !10141)
!10143 = !DILocation(line: 2056, column: 36, scope: !10141)
!10144 = !DILocation(line: 2056, column: 39, scope: !10145)
!10145 = !DILexicalBlockFile(scope: !10141, file: !939, discriminator: 1)
!10146 = !DILocation(line: 2056, column: 57, scope: !10145)
!10147 = !DILocation(line: 2056, column: 13, scope: !10145)
!10148 = !DILocation(line: 2057, column: 26, scope: !10141)
!10149 = !DILocation(line: 2057, column: 30, scope: !10141)
!10150 = !DILocation(line: 2057, column: 53, scope: !10141)
!10151 = !DILocation(line: 2057, column: 71, scope: !10141)
!10152 = !DILocation(line: 2057, column: 13, scope: !10141)
!10153 = !DILocation(line: 2062, column: 16, scope: !10154)
!10154 = distinct !DILexicalBlock(scope: !10115, file: !939, line: 2062, column: 9)
!10155 = !DILocation(line: 2062, column: 14, scope: !10154)
!10156 = !DILocation(line: 2062, column: 21, scope: !10157)
!10157 = !DILexicalBlockFile(scope: !10158, file: !939, discriminator: 1)
!10158 = distinct !DILexicalBlock(scope: !10154, file: !939, line: 2062, column: 9)
!10159 = !DILocation(line: 2062, column: 25, scope: !10157)
!10160 = !DILocation(line: 2062, column: 43, scope: !10157)
!10161 = !DILocation(line: 2062, column: 23, scope: !10157)
!10162 = !DILocation(line: 2062, column: 9, scope: !10157)
!10163 = !DILocation(line: 2063, column: 59, scope: !10164)
!10164 = distinct !DILexicalBlock(scope: !10165, file: !939, line: 2063, column: 17)
!10165 = distinct !DILexicalBlock(scope: !10158, file: !939, line: 2062, column: 62)
!10166 = !DILocation(line: 2063, column: 95, scope: !10164)
!10167 = !DILocation(line: 2063, column: 65, scope: !10164)
!10168 = !DILocation(line: 2063, column: 83, scope: !10164)
!10169 = !DILocation(line: 2063, column: 36, scope: !10164)
!10170 = !DILocation(line: 2063, column: 34, scope: !10164)
!10171 = !DILocation(line: 2063, column: 17, scope: !10165)
!10172 = !DILocation(line: 2064, column: 24, scope: !10173)
!10173 = distinct !DILexicalBlock(scope: !10164, file: !939, line: 2063, column: 108)
!10174 = !DILocation(line: 2064, column: 29, scope: !10173)
!10175 = !DILocation(line: 2064, column: 17, scope: !10173)
!10176 = !DILocation(line: 2065, column: 17, scope: !10173)
!10177 = !DILocation(line: 2068, column: 69, scope: !10178)
!10178 = distinct !DILexicalBlock(scope: !10165, file: !939, line: 2068, column: 17)
!10179 = !DILocation(line: 2068, column: 75, scope: !10178)
!10180 = !DILocation(line: 2068, column: 91, scope: !10178)
!10181 = !DILocation(line: 2068, column: 46, scope: !10178)
!10182 = !DILocation(line: 2068, column: 19, scope: !10178)
!10183 = !DILocation(line: 2068, column: 35, scope: !10178)
!10184 = !DILocation(line: 2068, column: 44, scope: !10178)
!10185 = !DILocation(line: 2068, column: 17, scope: !10165)
!10186 = !DILocation(line: 2069, column: 24, scope: !10187)
!10187 = distinct !DILexicalBlock(scope: !10178, file: !939, line: 2068, column: 117)
!10188 = !DILocation(line: 2069, column: 29, scope: !10187)
!10189 = !DILocation(line: 2069, column: 17, scope: !10187)
!10190 = !DILocation(line: 2070, column: 17, scope: !10187)
!10191 = !DILocation(line: 2073, column: 17, scope: !10192)
!10192 = distinct !DILexicalBlock(scope: !10165, file: !939, line: 2073, column: 17)
!10193 = !DILocation(line: 2073, column: 33, scope: !10192)
!10194 = !DILocation(line: 2073, column: 43, scope: !10192)
!10195 = !DILocation(line: 2073, column: 47, scope: !10192)
!10196 = !DILocation(line: 2073, column: 52, scope: !10192)
!10197 = !DILocation(line: 2074, column: 17, scope: !10192)
!10198 = !DILocation(line: 2074, column: 33, scope: !10192)
!10199 = !DILocation(line: 2074, column: 43, scope: !10192)
!10200 = !DILocation(line: 2074, column: 47, scope: !10192)
!10201 = !DILocation(line: 2073, column: 17, scope: !10202)
!10202 = !DILexicalBlockFile(scope: !10165, file: !939, discriminator: 1)
!10203 = !DILocation(line: 2075, column: 24, scope: !10204)
!10204 = distinct !DILexicalBlock(scope: !10192, file: !939, line: 2074, column: 53)
!10205 = !DILocation(line: 2075, column: 29, scope: !10204)
!10206 = !DILocation(line: 2078, column: 24, scope: !10204)
!10207 = !DILocation(line: 2078, column: 40, scope: !10204)
!10208 = !DILocation(line: 2078, column: 50, scope: !10204)
!10209 = !DILocation(line: 2079, column: 24, scope: !10204)
!10210 = !DILocation(line: 2079, column: 40, scope: !10204)
!10211 = !DILocation(line: 2079, column: 50, scope: !10204)
!10212 = !DILocation(line: 2079, column: 55, scope: !10204)
!10213 = !DILocation(line: 2075, column: 17, scope: !10204)
!10214 = !DILocation(line: 2080, column: 17, scope: !10204)
!10215 = !DILocation(line: 2080, column: 33, scope: !10204)
!10216 = !DILocation(line: 2080, column: 57, scope: !10204)
!10217 = !DILocation(line: 2080, column: 45, scope: !10204)
!10218 = !DILocation(line: 2081, column: 13, scope: !10204)
!10219 = !DILocation(line: 2083, column: 20, scope: !10220)
!10220 = distinct !DILexicalBlock(scope: !10165, file: !939, line: 2083, column: 13)
!10221 = !DILocation(line: 2083, column: 18, scope: !10220)
!10222 = !DILocation(line: 2083, column: 25, scope: !10223)
!10223 = !DILexicalBlockFile(scope: !10224, file: !939, discriminator: 1)
!10224 = distinct !DILexicalBlock(scope: !10220, file: !939, line: 2083, column: 13)
!10225 = !DILocation(line: 2083, column: 29, scope: !10223)
!10226 = !DILocation(line: 2083, column: 45, scope: !10223)
!10227 = !DILocation(line: 2083, column: 55, scope: !10223)
!10228 = !DILocation(line: 2083, column: 27, scope: !10223)
!10229 = !DILocation(line: 2083, column: 13, scope: !10223)
!10230 = !DILocation(line: 2084, column: 63, scope: !10231)
!10231 = distinct !DILexicalBlock(scope: !10232, file: !939, line: 2084, column: 21)
!10232 = distinct !DILexicalBlock(scope: !10224, file: !939, line: 2083, column: 89)
!10233 = !DILocation(line: 2084, column: 122, scope: !10231)
!10234 = !DILocation(line: 2084, column: 69, scope: !10231)
!10235 = !DILocation(line: 2084, column: 85, scope: !10231)
!10236 = !DILocation(line: 2084, column: 95, scope: !10231)
!10237 = !DILocation(line: 2084, column: 32, scope: !10231)
!10238 = !DILocation(line: 2084, column: 30, scope: !10231)
!10239 = !DILocation(line: 2084, column: 21, scope: !10232)
!10240 = !DILocation(line: 2085, column: 21, scope: !10231)
!10241 = !DILocation(line: 2087, column: 25, scope: !10232)
!10242 = !DILocation(line: 2087, column: 33, scope: !10232)
!10243 = !DILocation(line: 2087, column: 44, scope: !10232)
!10244 = !DILocation(line: 2087, column: 23, scope: !10232)
!10245 = !DILocation(line: 2089, column: 47, scope: !10232)
!10246 = !DILocation(line: 2089, column: 59, scope: !10232)
!10247 = !DILocation(line: 2090, column: 47, scope: !10232)
!10248 = !DILocation(line: 2090, column: 63, scope: !10232)
!10249 = !DILocation(line: 2091, column: 47, scope: !10232)
!10250 = !DILocation(line: 2091, column: 61, scope: !10232)
!10251 = !DILocation(line: 2089, column: 34, scope: !10232)
!10252 = !DILocation(line: 2089, column: 32, scope: !10232)
!10253 = !DILocation(line: 2093, column: 43, scope: !10254)
!10254 = distinct !DILexicalBlock(scope: !10232, file: !939, line: 2093, column: 21)
!10255 = !DILocation(line: 2093, column: 51, scope: !10254)
!10256 = !DILocation(line: 2093, column: 57, scope: !10254)
!10257 = !DILocation(line: 2093, column: 64, scope: !10254)
!10258 = !DILocation(line: 2093, column: 81, scope: !10254)
!10259 = !DILocation(line: 2093, column: 89, scope: !10254)
!10260 = !DILocation(line: 2093, column: 79, scope: !10254)
!10261 = !DILocation(line: 2093, column: 102, scope: !10254)
!10262 = !DILocation(line: 2093, column: 107, scope: !10254)
!10263 = !DILocation(line: 2093, column: 21, scope: !10254)
!10264 = !DILocation(line: 2093, column: 111, scope: !10254)
!10265 = !DILocation(line: 2093, column: 21, scope: !10232)
!10266 = !DILocation(line: 2094, column: 48, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10254, file: !939, line: 2093, column: 117)
!10268 = !DILocation(line: 2094, column: 52, scope: !10267)
!10269 = !DILocation(line: 2094, column: 21, scope: !10267)
!10270 = !DILocation(line: 2095, column: 21, scope: !10267)
!10271 = !DILocation(line: 2097, column: 13, scope: !10232)
!10272 = !DILocation(line: 2083, column: 85, scope: !10273)
!10273 = !DILexicalBlockFile(scope: !10224, file: !939, discriminator: 2)
!10274 = !DILocation(line: 2083, column: 13, scope: !10273)
!10275 = distinct !{!10275, !10276}
!10276 = !DILocation(line: 2083, column: 13, scope: !10165)
!10277 = !DILocation(line: 2098, column: 9, scope: !10165)
!10278 = !DILocation(line: 2062, column: 58, scope: !10279)
!10279 = !DILexicalBlockFile(scope: !10158, file: !939, discriminator: 2)
!10280 = !DILocation(line: 2062, column: 9, scope: !10279)
!10281 = distinct !{!10281, !10282}
!10282 = !DILocation(line: 2062, column: 9, scope: !10115)
!10283 = !DILocation(line: 2099, column: 5, scope: !10115)
!10284 = !DILocation(line: 2045, column: 75, scope: !10285)
!10285 = !DILexicalBlockFile(scope: !10108, file: !939, discriminator: 2)
!10286 = !DILocation(line: 2045, column: 5, scope: !10285)
!10287 = distinct !{!10287, !10288}
!10288 = !DILocation(line: 2045, column: 5, scope: !10074)
!10289 = !DILocation(line: 2101, column: 5, scope: !10074)
!10290 = !DILocation(line: 2102, column: 1, scope: !10074)
!10291 = distinct !DISubprogram(name: "mxf_is_intra_only", scope: !939, file: !939, line: 1837, type: !10292, isLocal: true, isDefinition: true, scopeLine: 1838, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!10292 = !DISubroutineType(types: !10293)
!10293 = !{!1014, !1021}
!10294 = !DILocalVariable(name: "descriptor", arg: 1, scope: !10291, file: !939, line: 1837, type: !1021)
!10295 = !DILocation(line: 1837, column: 45, scope: !10291)
!10296 = !DILocation(line: 1840, column: 30, scope: !10291)
!10297 = !DILocation(line: 1840, column: 42, scope: !10291)
!10298 = !DILocation(line: 1839, column: 12, scope: !10291)
!10299 = !DILocation(line: 1840, column: 65, scope: !10291)
!10300 = !DILocation(line: 1840, column: 68, scope: !10291)
!10301 = !DILocation(line: 1840, column: 88, scope: !10291)
!10302 = !DILocation(line: 1842, column: 30, scope: !10291)
!10303 = !DILocation(line: 1842, column: 42, scope: !10291)
!10304 = !DILocation(line: 1841, column: 12, scope: !10291)
!10305 = !DILocation(line: 1842, column: 61, scope: !10291)
!10306 = !DILocation(line: 1842, column: 64, scope: !10291)
!10307 = !DILocation(line: 1840, column: 88, scope: !10308)
!10308 = !DILexicalBlockFile(scope: !10291, file: !939, discriminator: 1)
!10309 = !DILocation(line: 1840, column: 88, scope: !10310)
!10310 = !DILexicalBlockFile(scope: !10291, file: !939, discriminator: 2)
!10311 = !DILocation(line: 1839, column: 5, scope: !10308)
!10312 = distinct !DISubprogram(name: "mxf_umid_to_str", scope: !939, file: !939, line: 1863, type: !10313, isLocal: true, isDefinition: true, scopeLine: 1864, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!10313 = !DISubroutineType(types: !10314)
!10314 = !{!1014, !1017, !1017, !8462}
!10315 = !DILocalVariable(name: "ul", arg: 1, scope: !10312, file: !939, line: 1863, type: !1017)
!10316 = !DILocation(line: 1863, column: 32, scope: !10312)
!10317 = !DILocalVariable(name: "uid", arg: 2, scope: !10312, file: !939, line: 1863, type: !1017)
!10318 = !DILocation(line: 1863, column: 40, scope: !10312)
!10319 = !DILocalVariable(name: "str", arg: 3, scope: !10312, file: !939, line: 1863, type: !8462)
!10320 = !DILocation(line: 1863, column: 52, scope: !10312)
!10321 = !DILocalVariable(name: "i", scope: !10312, file: !939, line: 1865, type: !1014)
!10322 = !DILocation(line: 1865, column: 9, scope: !10312)
!10323 = !DILocalVariable(name: "p", scope: !10312, file: !939, line: 1866, type: !1096)
!10324 = !DILocation(line: 1866, column: 11, scope: !10312)
!10325 = !DILocation(line: 1867, column: 16, scope: !10312)
!10326 = !DILocation(line: 1867, column: 10, scope: !10312)
!10327 = !DILocation(line: 1867, column: 14, scope: !10312)
!10328 = !DILocation(line: 1867, column: 7, scope: !10312)
!10329 = !DILocation(line: 1868, column: 10, scope: !10330)
!10330 = distinct !DILexicalBlock(scope: !10312, file: !939, line: 1868, column: 9)
!10331 = !DILocation(line: 1868, column: 9, scope: !10312)
!10332 = !DILocation(line: 1869, column: 9, scope: !10330)
!10333 = !DILocation(line: 1870, column: 14, scope: !10312)
!10334 = !DILocation(line: 1870, column: 5, scope: !10312)
!10335 = !DILocation(line: 1871, column: 7, scope: !10312)
!10336 = !DILocation(line: 1872, column: 12, scope: !10337)
!10337 = distinct !DILexicalBlock(scope: !10312, file: !939, line: 1872, column: 5)
!10338 = !DILocation(line: 1872, column: 10, scope: !10337)
!10339 = !DILocation(line: 1872, column: 17, scope: !10340)
!10340 = !DILexicalBlockFile(scope: !10341, file: !939, discriminator: 1)
!10341 = distinct !DILexicalBlock(scope: !10337, file: !939, line: 1872, column: 5)
!10342 = !DILocation(line: 1872, column: 19, scope: !10340)
!10343 = !DILocation(line: 1872, column: 5, scope: !10340)
!10344 = !DILocation(line: 1873, column: 18, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10341, file: !939, line: 1872, column: 39)
!10346 = !DILocation(line: 1873, column: 39, scope: !10345)
!10347 = !DILocation(line: 1873, column: 36, scope: !10345)
!10348 = !DILocation(line: 1873, column: 9, scope: !10345)
!10349 = !DILocation(line: 1874, column: 11, scope: !10345)
!10350 = !DILocation(line: 1876, column: 5, scope: !10345)
!10351 = !DILocation(line: 1872, column: 35, scope: !10352)
!10352 = !DILexicalBlockFile(scope: !10341, file: !939, discriminator: 2)
!10353 = !DILocation(line: 1872, column: 5, scope: !10352)
!10354 = distinct !{!10354, !10355}
!10355 = !DILocation(line: 1872, column: 5, scope: !10312)
!10356 = !DILocation(line: 1877, column: 12, scope: !10357)
!10357 = distinct !DILexicalBlock(scope: !10312, file: !939, line: 1877, column: 5)
!10358 = !DILocation(line: 1877, column: 10, scope: !10357)
!10359 = !DILocation(line: 1877, column: 17, scope: !10360)
!10360 = !DILexicalBlockFile(scope: !10361, file: !939, discriminator: 1)
!10361 = distinct !DILexicalBlock(scope: !10357, file: !939, line: 1877, column: 5)
!10362 = !DILocation(line: 1877, column: 19, scope: !10360)
!10363 = !DILocation(line: 1877, column: 5, scope: !10360)
!10364 = !DILocation(line: 1878, column: 18, scope: !10365)
!10365 = distinct !DILexicalBlock(scope: !10361, file: !939, line: 1877, column: 39)
!10366 = !DILocation(line: 1878, column: 40, scope: !10365)
!10367 = !DILocation(line: 1878, column: 36, scope: !10365)
!10368 = !DILocation(line: 1878, column: 9, scope: !10365)
!10369 = !DILocation(line: 1879, column: 11, scope: !10365)
!10370 = !DILocation(line: 1880, column: 5, scope: !10365)
!10371 = !DILocation(line: 1877, column: 35, scope: !10372)
!10372 = !DILexicalBlockFile(scope: !10361, file: !939, discriminator: 2)
!10373 = !DILocation(line: 1877, column: 5, scope: !10372)
!10374 = distinct !{!10374, !10375}
!10375 = !DILocation(line: 1877, column: 5, scope: !10312)
!10376 = !DILocation(line: 1881, column: 5, scope: !10312)
!10377 = !DILocation(line: 1882, column: 1, scope: !10312)
!10378 = distinct !DISubprogram(name: "mxf_resolve_essence_group_choice", scope: !939, file: !939, line: 1967, type: !10379, isLocal: true, isDefinition: true, scopeLine: 1968, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!10379 = !DISubroutineType(types: !10380)
!10380 = !{!4522, !2594, !1074}
!10381 = !DILocalVariable(name: "mxf", arg: 1, scope: !10378, file: !939, line: 1967, type: !2594)
!10382 = !DILocation(line: 1967, column: 77, scope: !10378)
!10383 = !DILocalVariable(name: "essence_group", arg: 2, scope: !10378, file: !939, line: 1967, type: !1074)
!10384 = !DILocation(line: 1967, column: 99, scope: !10378)
!10385 = !DILocalVariable(name: "component", scope: !10378, file: !939, line: 1969, type: !4522)
!10386 = !DILocation(line: 1969, column: 29, scope: !10378)
!10387 = !DILocalVariable(name: "package", scope: !10378, file: !939, line: 1970, type: !1083)
!10388 = !DILocation(line: 1970, column: 17, scope: !10378)
!10389 = !DILocalVariable(name: "descriptor", scope: !10378, file: !939, line: 1971, type: !1021)
!10390 = !DILocation(line: 1971, column: 20, scope: !10378)
!10391 = !DILocalVariable(name: "i", scope: !10378, file: !939, line: 1972, type: !1014)
!10392 = !DILocation(line: 1972, column: 9, scope: !10378)
!10393 = !DILocation(line: 1974, column: 10, scope: !10394)
!10394 = distinct !DILexicalBlock(scope: !10378, file: !939, line: 1974, column: 9)
!10395 = !DILocation(line: 1974, column: 24, scope: !10394)
!10396 = !DILocation(line: 1974, column: 28, scope: !10397)
!10397 = !DILexicalBlockFile(scope: !10394, file: !939, discriminator: 1)
!10398 = !DILocation(line: 1974, column: 43, scope: !10397)
!10399 = !DILocation(line: 1974, column: 9, scope: !10397)
!10400 = !DILocation(line: 1975, column: 9, scope: !10394)
!10401 = !DILocation(line: 1979, column: 12, scope: !10402)
!10402 = distinct !DILexicalBlock(scope: !10378, file: !939, line: 1979, column: 5)
!10403 = !DILocation(line: 1979, column: 10, scope: !10402)
!10404 = !DILocation(line: 1979, column: 16, scope: !10405)
!10405 = !DILexicalBlockFile(scope: !10406, file: !939, discriminator: 1)
!10406 = distinct !DILexicalBlock(scope: !10402, file: !939, line: 1979, column: 5)
!10407 = !DILocation(line: 1979, column: 20, scope: !10405)
!10408 = !DILocation(line: 1979, column: 35, scope: !10405)
!10409 = !DILocation(line: 1979, column: 18, scope: !10405)
!10410 = !DILocation(line: 1979, column: 5, scope: !10405)
!10411 = !DILocation(line: 1980, column: 44, scope: !10412)
!10412 = distinct !DILexicalBlock(scope: !10406, file: !939, line: 1979, column: 68)
!10413 = !DILocation(line: 1980, column: 92, scope: !10412)
!10414 = !DILocation(line: 1980, column: 50, scope: !10412)
!10415 = !DILocation(line: 1980, column: 65, scope: !10412)
!10416 = !DILocation(line: 1980, column: 21, scope: !10412)
!10417 = !DILocation(line: 1980, column: 19, scope: !10412)
!10418 = !DILocation(line: 1981, column: 14, scope: !10419)
!10419 = distinct !DILexicalBlock(scope: !10412, file: !939, line: 1981, column: 13)
!10420 = !DILocation(line: 1981, column: 13, scope: !10412)
!10421 = !DILocation(line: 1982, column: 13, scope: !10419)
!10422 = !DILocation(line: 1984, column: 52, scope: !10423)
!10423 = distinct !DILexicalBlock(scope: !10412, file: !939, line: 1984, column: 13)
!10424 = !DILocation(line: 1984, column: 57, scope: !10423)
!10425 = !DILocation(line: 1984, column: 68, scope: !10423)
!10426 = !DILocation(line: 1984, column: 87, scope: !10423)
!10427 = !DILocation(line: 1984, column: 98, scope: !10423)
!10428 = !DILocation(line: 1984, column: 25, scope: !10423)
!10429 = !DILocation(line: 1984, column: 23, scope: !10423)
!10430 = !DILocation(line: 1984, column: 13, scope: !10412)
!10431 = !DILocation(line: 1985, column: 13, scope: !10423)
!10432 = !DILocation(line: 1987, column: 45, scope: !10412)
!10433 = !DILocation(line: 1987, column: 51, scope: !10412)
!10434 = !DILocation(line: 1987, column: 60, scope: !10412)
!10435 = !DILocation(line: 1987, column: 22, scope: !10412)
!10436 = !DILocation(line: 1987, column: 20, scope: !10412)
!10437 = !DILocation(line: 1988, column: 13, scope: !10438)
!10438 = distinct !DILexicalBlock(scope: !10412, file: !939, line: 1988, column: 13)
!10439 = !DILocation(line: 1988, column: 13, scope: !10412)
!10440 = !DILocation(line: 1989, column: 20, scope: !10438)
!10441 = !DILocation(line: 1989, column: 13, scope: !10438)
!10442 = !DILocation(line: 1990, column: 5, scope: !10412)
!10443 = !DILocation(line: 1979, column: 65, scope: !10444)
!10444 = !DILexicalBlockFile(scope: !10406, file: !939, discriminator: 2)
!10445 = !DILocation(line: 1979, column: 5, scope: !10444)
!10446 = distinct !{!10446, !10447}
!10447 = !DILocation(line: 1979, column: 5, scope: !10378)
!10448 = !DILocation(line: 1991, column: 5, scope: !10378)
!10449 = !DILocation(line: 1992, column: 1, scope: !10378)
!10450 = distinct !DISubprogram(name: "mxf_match_uid", scope: !939, file: !939, line: 1280, type: !10451, isLocal: true, isDefinition: true, scopeLine: 1281, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!10451 = !DISubroutineType(types: !10452)
!10452 = !{!1014, !1530, !1530, !1014}
!10453 = !DILocalVariable(name: "key", arg: 1, scope: !10450, file: !939, line: 1280, type: !1530)
!10454 = !DILocation(line: 1280, column: 36, scope: !10450)
!10455 = !DILocalVariable(name: "uid", arg: 2, scope: !10450, file: !939, line: 1280, type: !1530)
!10456 = !DILocation(line: 1280, column: 51, scope: !10450)
!10457 = !DILocalVariable(name: "len", arg: 3, scope: !10450, file: !939, line: 1280, type: !1014)
!10458 = !DILocation(line: 1280, column: 60, scope: !10450)
!10459 = !DILocalVariable(name: "i", scope: !10450, file: !939, line: 1282, type: !1014)
!10460 = !DILocation(line: 1282, column: 9, scope: !10450)
!10461 = !DILocation(line: 1283, column: 12, scope: !10462)
!10462 = distinct !DILexicalBlock(scope: !10450, file: !939, line: 1283, column: 5)
!10463 = !DILocation(line: 1283, column: 10, scope: !10462)
!10464 = !DILocation(line: 1283, column: 17, scope: !10465)
!10465 = !DILexicalBlockFile(scope: !10466, file: !939, discriminator: 1)
!10466 = distinct !DILexicalBlock(scope: !10462, file: !939, line: 1283, column: 5)
!10467 = !DILocation(line: 1283, column: 21, scope: !10465)
!10468 = !DILocation(line: 1283, column: 19, scope: !10465)
!10469 = !DILocation(line: 1283, column: 5, scope: !10465)
!10470 = !DILocation(line: 1284, column: 13, scope: !10471)
!10471 = distinct !DILexicalBlock(scope: !10472, file: !939, line: 1284, column: 13)
!10472 = distinct !DILexicalBlock(scope: !10466, file: !939, line: 1283, column: 31)
!10473 = !DILocation(line: 1284, column: 15, scope: !10471)
!10474 = !DILocation(line: 1284, column: 20, scope: !10471)
!10475 = !DILocation(line: 1284, column: 27, scope: !10476)
!10476 = !DILexicalBlockFile(scope: !10471, file: !939, discriminator: 1)
!10477 = !DILocation(line: 1284, column: 23, scope: !10476)
!10478 = !DILocation(line: 1284, column: 37, scope: !10476)
!10479 = !DILocation(line: 1284, column: 33, scope: !10476)
!10480 = !DILocation(line: 1284, column: 30, scope: !10476)
!10481 = !DILocation(line: 1284, column: 13, scope: !10476)
!10482 = !DILocation(line: 1285, column: 13, scope: !10471)
!10483 = !DILocation(line: 1286, column: 5, scope: !10472)
!10484 = !DILocation(line: 1283, column: 27, scope: !10485)
!10485 = !DILexicalBlockFile(scope: !10466, file: !939, discriminator: 2)
!10486 = !DILocation(line: 1283, column: 5, scope: !10485)
!10487 = distinct !{!10487, !10488}
!10488 = !DILocation(line: 1283, column: 5, scope: !10450)
!10489 = !DILocation(line: 1287, column: 5, scope: !10450)
!10490 = !DILocation(line: 1288, column: 1, scope: !10450)
!10491 = distinct !DISubprogram(name: "mxf_resolve_timecode_component", scope: !939, file: !939, line: 1904, type: !10492, isLocal: true, isDefinition: true, scopeLine: 1905, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!10492 = !DISubroutineType(types: !10493)
!10493 = !{!1154, !2594, !1057}
!10494 = !DILocalVariable(name: "mxf", arg: 1, scope: !10491, file: !939, line: 1904, type: !2594)
!10495 = !DILocation(line: 1904, column: 73, scope: !10491)
!10496 = !DILocalVariable(name: "strong_ref", arg: 2, scope: !10491, file: !939, line: 1904, type: !1057)
!10497 = !DILocation(line: 1904, column: 83, scope: !10491)
!10498 = !DILocalVariable(name: "component", scope: !10491, file: !939, line: 1906, type: !4522)
!10499 = !DILocation(line: 1906, column: 29, scope: !10491)
!10500 = !DILocalVariable(name: "pulldown", scope: !10491, file: !939, line: 1907, type: !1178)
!10501 = !DILocation(line: 1907, column: 27, scope: !10491)
!10502 = !DILocation(line: 1909, column: 40, scope: !10491)
!10503 = !DILocation(line: 1909, column: 45, scope: !10491)
!10504 = !DILocation(line: 1909, column: 17, scope: !10491)
!10505 = !DILocation(line: 1909, column: 15, scope: !10491)
!10506 = !DILocation(line: 1910, column: 10, scope: !10507)
!10507 = distinct !DILexicalBlock(scope: !10491, file: !939, line: 1910, column: 9)
!10508 = !DILocation(line: 1910, column: 9, scope: !10491)
!10509 = !DILocation(line: 1911, column: 9, scope: !10507)
!10510 = !DILocation(line: 1913, column: 13, scope: !10491)
!10511 = !DILocation(line: 1913, column: 24, scope: !10491)
!10512 = !DILocation(line: 1913, column: 5, scope: !10491)
!10513 = !DILocation(line: 1915, column: 39, scope: !10514)
!10514 = distinct !DILexicalBlock(scope: !10491, file: !939, line: 1913, column: 30)
!10515 = !DILocation(line: 1915, column: 16, scope: !10514)
!10516 = !DILocation(line: 1915, column: 9, scope: !10514)
!10517 = !DILocation(line: 1917, column: 43, scope: !10514)
!10518 = !DILocation(line: 1917, column: 20, scope: !10514)
!10519 = !DILocation(line: 1917, column: 18, scope: !10514)
!10520 = !DILocation(line: 1918, column: 39, scope: !10514)
!10521 = !DILocation(line: 1918, column: 45, scope: !10514)
!10522 = !DILocation(line: 1918, column: 55, scope: !10514)
!10523 = !DILocation(line: 1918, column: 16, scope: !10514)
!10524 = !DILocation(line: 1918, column: 9, scope: !10514)
!10525 = !DILocation(line: 1920, column: 9, scope: !10514)
!10526 = !DILocation(line: 1922, column: 5, scope: !10491)
!10527 = !DILocation(line: 1923, column: 1, scope: !10491)
!10528 = distinct !DISubprogram(name: "is_pcm", scope: !939, file: !939, line: 2963, type: !10529, isLocal: true, isDefinition: true, scopeLine: 2964, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!10529 = !DISubroutineType(types: !10530)
!10530 = !{!1014, !3}
!10531 = !DILocalVariable(name: "codec_id", arg: 1, scope: !10528, file: !939, line: 2963, type: !3)
!10532 = !DILocation(line: 2963, column: 34, scope: !10528)
!10533 = !DILocation(line: 2966, column: 12, scope: !10528)
!10534 = !DILocation(line: 2966, column: 21, scope: !10528)
!10535 = !DILocation(line: 2966, column: 46, scope: !10528)
!10536 = !DILocation(line: 2966, column: 49, scope: !10537)
!10537 = !DILexicalBlockFile(scope: !10528, file: !939, discriminator: 1)
!10538 = !DILocation(line: 2966, column: 58, scope: !10537)
!10539 = !DILocation(line: 2966, column: 46, scope: !10540)
!10540 = !DILexicalBlockFile(scope: !10528, file: !939, discriminator: 2)
!10541 = !DILocation(line: 2966, column: 5, scope: !10540)
!10542 = distinct !DISubprogram(name: "mxf_get_sorted_table_segments", scope: !939, file: !939, line: 1408, type: !10543, isLocal: true, isDefinition: true, scopeLine: 1409, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!10543 = !DISubroutineType(types: !10544)
!10544 = !{!1014, !2594, !1150, !10545}
!10545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2658, size: 64, align: 64)
!10546 = !DILocalVariable(name: "mxf", arg: 1, scope: !10542, file: !939, line: 1408, type: !2594)
!10547 = !DILocation(line: 1408, column: 54, scope: !10542)
!10548 = !DILocalVariable(name: "nb_sorted_segments", arg: 2, scope: !10542, file: !939, line: 1408, type: !1150)
!10549 = !DILocation(line: 1408, column: 64, scope: !10542)
!10550 = !DILocalVariable(name: "sorted_segments", arg: 3, scope: !10542, file: !939, line: 1408, type: !10545)
!10551 = !DILocation(line: 1408, column: 108, scope: !10542)
!10552 = !DILocalVariable(name: "i", scope: !10542, file: !939, line: 1410, type: !1014)
!10553 = !DILocation(line: 1410, column: 9, scope: !10542)
!10554 = !DILocalVariable(name: "j", scope: !10542, file: !939, line: 1410, type: !1014)
!10555 = !DILocation(line: 1410, column: 12, scope: !10542)
!10556 = !DILocalVariable(name: "nb_segments", scope: !10542, file: !939, line: 1410, type: !1014)
!10557 = !DILocation(line: 1410, column: 15, scope: !10542)
!10558 = !DILocalVariable(name: "unsorted_segments", scope: !10542, file: !939, line: 1411, type: !2658)
!10559 = !DILocation(line: 1411, column: 28, scope: !10542)
!10560 = !DILocalVariable(name: "last_body_sid", scope: !10542, file: !939, line: 1412, type: !1014)
!10561 = !DILocation(line: 1412, column: 9, scope: !10542)
!10562 = !DILocalVariable(name: "last_index_sid", scope: !10542, file: !939, line: 1412, type: !1014)
!10563 = !DILocation(line: 1412, column: 29, scope: !10542)
!10564 = !DILocalVariable(name: "last_index_start", scope: !10542, file: !939, line: 1412, type: !1014)
!10565 = !DILocation(line: 1412, column: 50, scope: !10542)
!10566 = !DILocation(line: 1415, column: 12, scope: !10567)
!10567 = distinct !DILexicalBlock(scope: !10542, file: !939, line: 1415, column: 5)
!10568 = !DILocation(line: 1415, column: 10, scope: !10567)
!10569 = !DILocation(line: 1415, column: 17, scope: !10570)
!10570 = !DILexicalBlockFile(scope: !10571, file: !939, discriminator: 1)
!10571 = distinct !DILexicalBlock(scope: !10567, file: !939, line: 1415, column: 5)
!10572 = !DILocation(line: 1415, column: 21, scope: !10570)
!10573 = !DILocation(line: 1415, column: 26, scope: !10570)
!10574 = !DILocation(line: 1415, column: 19, scope: !10570)
!10575 = !DILocation(line: 1415, column: 5, scope: !10570)
!10576 = !DILocation(line: 1416, column: 32, scope: !10577)
!10577 = distinct !DILexicalBlock(scope: !10571, file: !939, line: 1416, column: 13)
!10578 = !DILocation(line: 1416, column: 13, scope: !10577)
!10579 = !DILocation(line: 1416, column: 18, scope: !10577)
!10580 = !DILocation(line: 1416, column: 36, scope: !10577)
!10581 = !DILocation(line: 1416, column: 41, scope: !10577)
!10582 = !DILocation(line: 1416, column: 13, scope: !10571)
!10583 = !DILocation(line: 1417, column: 24, scope: !10577)
!10584 = !DILocation(line: 1417, column: 13, scope: !10577)
!10585 = !DILocation(line: 1416, column: 44, scope: !10586)
!10586 = !DILexicalBlockFile(scope: !10577, file: !939, discriminator: 1)
!10587 = !DILocation(line: 1415, column: 48, scope: !10588)
!10588 = !DILexicalBlockFile(scope: !10571, file: !939, discriminator: 2)
!10589 = !DILocation(line: 1415, column: 5, scope: !10588)
!10590 = distinct !{!10590, !10591}
!10591 = !DILocation(line: 1415, column: 5, scope: !10542)
!10592 = !DILocation(line: 1419, column: 10, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10542, file: !939, line: 1419, column: 9)
!10594 = !DILocation(line: 1419, column: 9, scope: !10542)
!10595 = !DILocation(line: 1420, column: 9, scope: !10593)
!10596 = !DILocation(line: 1422, column: 41, scope: !10597)
!10597 = distinct !DILexicalBlock(scope: !10542, file: !939, line: 1422, column: 9)
!10598 = !DILocation(line: 1422, column: 31, scope: !10597)
!10599 = !DILocation(line: 1422, column: 29, scope: !10597)
!10600 = !DILocation(line: 1422, column: 83, scope: !10597)
!10601 = !DILocation(line: 1423, column: 40, scope: !10597)
!10602 = !DILocation(line: 1423, column: 30, scope: !10597)
!10603 = !DILocation(line: 1423, column: 12, scope: !10597)
!10604 = !DILocation(line: 1423, column: 28, scope: !10597)
!10605 = !DILocation(line: 1422, column: 9, scope: !10606)
!10606 = !DILexicalBlockFile(scope: !10542, file: !939, discriminator: 1)
!10607 = !DILocation(line: 1424, column: 18, scope: !10608)
!10608 = distinct !DILexicalBlock(scope: !10597, file: !939, line: 1423, column: 82)
!10609 = !DILocation(line: 1424, column: 9, scope: !10608)
!10610 = !DILocation(line: 1425, column: 17, scope: !10608)
!10611 = !DILocation(line: 1425, column: 9, scope: !10608)
!10612 = !DILocation(line: 1426, column: 9, scope: !10608)
!10613 = !DILocation(line: 1429, column: 26, scope: !10614)
!10614 = distinct !DILexicalBlock(scope: !10542, file: !939, line: 1429, column: 5)
!10615 = !DILocation(line: 1429, column: 12, scope: !10614)
!10616 = !DILocation(line: 1429, column: 10, scope: !10614)
!10617 = !DILocation(line: 1429, column: 31, scope: !10618)
!10618 = !DILexicalBlockFile(scope: !10619, file: !939, discriminator: 1)
!10619 = distinct !DILexicalBlock(scope: !10614, file: !939, line: 1429, column: 5)
!10620 = !DILocation(line: 1429, column: 35, scope: !10618)
!10621 = !DILocation(line: 1429, column: 40, scope: !10618)
!10622 = !DILocation(line: 1429, column: 33, scope: !10618)
!10623 = !DILocation(line: 1429, column: 5, scope: !10618)
!10624 = !DILocation(line: 1430, column: 32, scope: !10625)
!10625 = distinct !DILexicalBlock(scope: !10626, file: !939, line: 1430, column: 13)
!10626 = distinct !DILexicalBlock(scope: !10619, file: !939, line: 1429, column: 66)
!10627 = !DILocation(line: 1430, column: 13, scope: !10625)
!10628 = !DILocation(line: 1430, column: 18, scope: !10625)
!10629 = !DILocation(line: 1430, column: 36, scope: !10625)
!10630 = !DILocation(line: 1430, column: 41, scope: !10625)
!10631 = !DILocation(line: 1430, column: 13, scope: !10626)
!10632 = !DILocalVariable(name: "s", scope: !10633, file: !939, line: 1431, type: !1133)
!10633 = distinct !DILexicalBlock(scope: !10625, file: !939, line: 1430, column: 63)
!10634 = !DILocation(line: 1431, column: 35, scope: !10633)
!10635 = !DILocation(line: 1431, column: 81, scope: !10633)
!10636 = !DILocation(line: 1431, column: 62, scope: !10633)
!10637 = !DILocation(line: 1431, column: 67, scope: !10633)
!10638 = !DILocation(line: 1431, column: 39, scope: !10633)
!10639 = !DILocation(line: 1432, column: 17, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !10633, file: !939, line: 1432, column: 17)
!10641 = !DILocation(line: 1432, column: 20, scope: !10640)
!10642 = !DILocation(line: 1432, column: 41, scope: !10640)
!10643 = !DILocation(line: 1432, column: 44, scope: !10644)
!10644 = !DILexicalBlockFile(scope: !10640, file: !939, discriminator: 1)
!10645 = !DILocation(line: 1432, column: 47, scope: !10644)
!10646 = !DILocation(line: 1432, column: 17, scope: !10644)
!10647 = !DILocation(line: 1433, column: 52, scope: !10640)
!10648 = !DILocation(line: 1433, column: 46, scope: !10640)
!10649 = !DILocation(line: 1433, column: 17, scope: !10640)
!10650 = !DILocation(line: 1433, column: 50, scope: !10640)
!10651 = !DILocation(line: 1435, column: 24, scope: !10640)
!10652 = !DILocation(line: 1435, column: 29, scope: !10640)
!10653 = !DILocation(line: 1436, column: 24, scope: !10640)
!10654 = !DILocation(line: 1436, column: 27, scope: !10640)
!10655 = !DILocation(line: 1436, column: 38, scope: !10640)
!10656 = !DILocation(line: 1436, column: 41, scope: !10640)
!10657 = !DILocation(line: 1435, column: 17, scope: !10640)
!10658 = !DILocation(line: 1437, column: 9, scope: !10633)
!10659 = !DILocation(line: 1438, column: 5, scope: !10626)
!10660 = !DILocation(line: 1429, column: 62, scope: !10661)
!10661 = !DILexicalBlockFile(scope: !10619, file: !939, discriminator: 2)
!10662 = !DILocation(line: 1429, column: 5, scope: !10661)
!10663 = distinct !{!10663, !10664}
!10664 = !DILocation(line: 1429, column: 5, scope: !10542)
!10665 = !DILocation(line: 1440, column: 10, scope: !10666)
!10666 = distinct !DILexicalBlock(scope: !10542, file: !939, line: 1440, column: 9)
!10667 = !DILocation(line: 1440, column: 9, scope: !10542)
!10668 = !DILocation(line: 1441, column: 18, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10666, file: !939, line: 1440, column: 23)
!10670 = !DILocation(line: 1441, column: 9, scope: !10669)
!10671 = !DILocation(line: 1442, column: 17, scope: !10669)
!10672 = !DILocation(line: 1442, column: 9, scope: !10669)
!10673 = !DILocation(line: 1443, column: 9, scope: !10669)
!10674 = !DILocation(line: 1446, column: 6, scope: !10542)
!10675 = !DILocation(line: 1446, column: 25, scope: !10542)
!10676 = !DILocation(line: 1449, column: 12, scope: !10677)
!10677 = distinct !DILexicalBlock(scope: !10542, file: !939, line: 1449, column: 5)
!10678 = !DILocation(line: 1449, column: 10, scope: !10677)
!10679 = !DILocation(line: 1449, column: 17, scope: !10680)
!10680 = !DILexicalBlockFile(scope: !10681, file: !939, discriminator: 1)
!10681 = distinct !DILexicalBlock(scope: !10677, file: !939, line: 1449, column: 5)
!10682 = !DILocation(line: 1449, column: 21, scope: !10680)
!10683 = !DILocation(line: 1449, column: 19, scope: !10680)
!10684 = !DILocation(line: 1449, column: 5, scope: !10680)
!10685 = !DILocalVariable(name: "best", scope: !10686, file: !939, line: 1450, type: !1014)
!10686 = distinct !DILexicalBlock(scope: !10681, file: !939, line: 1449, column: 39)
!10687 = !DILocation(line: 1450, column: 13, scope: !10686)
!10688 = !DILocalVariable(name: "best_body_sid", scope: !10686, file: !939, line: 1450, type: !1014)
!10689 = !DILocation(line: 1450, column: 24, scope: !10686)
!10690 = !DILocalVariable(name: "best_index_sid", scope: !10686, file: !939, line: 1450, type: !1014)
!10691 = !DILocation(line: 1450, column: 44, scope: !10686)
!10692 = !DILocalVariable(name: "best_index_start", scope: !10686, file: !939, line: 1450, type: !1014)
!10693 = !DILocation(line: 1450, column: 65, scope: !10686)
!10694 = !DILocalVariable(name: "best_index_duration", scope: !10686, file: !939, line: 1451, type: !1125)
!10695 = !DILocation(line: 1451, column: 18, scope: !10686)
!10696 = !DILocation(line: 1453, column: 16, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10686, file: !939, line: 1453, column: 9)
!10698 = !DILocation(line: 1453, column: 14, scope: !10697)
!10699 = !DILocation(line: 1453, column: 21, scope: !10700)
!10700 = !DILexicalBlockFile(scope: !10701, file: !939, discriminator: 1)
!10701 = distinct !DILexicalBlock(scope: !10697, file: !939, line: 1453, column: 9)
!10702 = !DILocation(line: 1453, column: 25, scope: !10700)
!10703 = !DILocation(line: 1453, column: 23, scope: !10700)
!10704 = !DILocation(line: 1453, column: 9, scope: !10700)
!10705 = !DILocalVariable(name: "s", scope: !10706, file: !939, line: 1454, type: !1133)
!10706 = distinct !DILexicalBlock(scope: !10701, file: !939, line: 1453, column: 43)
!10707 = !DILocation(line: 1454, column: 35, scope: !10706)
!10708 = !DILocation(line: 1454, column: 57, scope: !10706)
!10709 = !DILocation(line: 1454, column: 39, scope: !10706)
!10710 = !DILocation(line: 1460, column: 18, scope: !10711)
!10711 = distinct !DILexicalBlock(scope: !10706, file: !939, line: 1460, column: 17)
!10712 = !DILocation(line: 1460, column: 20, scope: !10711)
!10713 = !DILocation(line: 1460, column: 25, scope: !10711)
!10714 = !DILocation(line: 1461, column: 18, scope: !10711)
!10715 = !DILocation(line: 1461, column: 21, scope: !10711)
!10716 = !DILocation(line: 1461, column: 32, scope: !10711)
!10717 = !DILocation(line: 1461, column: 30, scope: !10711)
!10718 = !DILocation(line: 1461, column: 46, scope: !10711)
!10719 = !DILocation(line: 1462, column: 18, scope: !10711)
!10720 = !DILocation(line: 1462, column: 21, scope: !10711)
!10721 = !DILocation(line: 1462, column: 33, scope: !10711)
!10722 = !DILocation(line: 1462, column: 30, scope: !10711)
!10723 = !DILocation(line: 1462, column: 47, scope: !10711)
!10724 = !DILocation(line: 1462, column: 50, scope: !10725)
!10725 = !DILexicalBlockFile(scope: !10711, file: !939, discriminator: 1)
!10726 = !DILocation(line: 1462, column: 53, scope: !10725)
!10727 = !DILocation(line: 1462, column: 65, scope: !10725)
!10728 = !DILocation(line: 1462, column: 63, scope: !10725)
!10729 = !DILocation(line: 1462, column: 80, scope: !10725)
!10730 = !DILocation(line: 1463, column: 18, scope: !10711)
!10731 = !DILocation(line: 1463, column: 21, scope: !10711)
!10732 = !DILocation(line: 1463, column: 33, scope: !10711)
!10733 = !DILocation(line: 1463, column: 30, scope: !10711)
!10734 = !DILocation(line: 1463, column: 47, scope: !10711)
!10735 = !DILocation(line: 1463, column: 50, scope: !10725)
!10736 = !DILocation(line: 1463, column: 53, scope: !10725)
!10737 = !DILocation(line: 1463, column: 66, scope: !10725)
!10738 = !DILocation(line: 1463, column: 63, scope: !10725)
!10739 = !DILocation(line: 1463, column: 81, scope: !10725)
!10740 = !DILocation(line: 1463, column: 84, scope: !10741)
!10741 = !DILexicalBlockFile(scope: !10711, file: !939, discriminator: 2)
!10742 = !DILocation(line: 1463, column: 87, scope: !10741)
!10743 = !DILocation(line: 1463, column: 110, scope: !10741)
!10744 = !DILocation(line: 1463, column: 108, scope: !10741)
!10745 = !DILocation(line: 1463, column: 128, scope: !10741)
!10746 = !DILocation(line: 1464, column: 18, scope: !10711)
!10747 = !DILocation(line: 1464, column: 23, scope: !10711)
!10748 = !DILocation(line: 1464, column: 29, scope: !10711)
!10749 = !DILocation(line: 1465, column: 18, scope: !10711)
!10750 = !DILocation(line: 1465, column: 21, scope: !10711)
!10751 = !DILocation(line: 1465, column: 32, scope: !10711)
!10752 = !DILocation(line: 1465, column: 30, scope: !10711)
!10753 = !DILocation(line: 1465, column: 46, scope: !10711)
!10754 = !DILocation(line: 1466, column: 18, scope: !10711)
!10755 = !DILocation(line: 1466, column: 21, scope: !10711)
!10756 = !DILocation(line: 1466, column: 33, scope: !10711)
!10757 = !DILocation(line: 1466, column: 30, scope: !10711)
!10758 = !DILocation(line: 1466, column: 47, scope: !10711)
!10759 = !DILocation(line: 1466, column: 50, scope: !10725)
!10760 = !DILocation(line: 1466, column: 53, scope: !10725)
!10761 = !DILocation(line: 1466, column: 65, scope: !10725)
!10762 = !DILocation(line: 1466, column: 63, scope: !10725)
!10763 = !DILocation(line: 1466, column: 80, scope: !10725)
!10764 = !DILocation(line: 1467, column: 18, scope: !10711)
!10765 = !DILocation(line: 1467, column: 21, scope: !10711)
!10766 = !DILocation(line: 1467, column: 33, scope: !10711)
!10767 = !DILocation(line: 1467, column: 30, scope: !10711)
!10768 = !DILocation(line: 1467, column: 47, scope: !10711)
!10769 = !DILocation(line: 1467, column: 50, scope: !10725)
!10770 = !DILocation(line: 1467, column: 53, scope: !10725)
!10771 = !DILocation(line: 1467, column: 66, scope: !10725)
!10772 = !DILocation(line: 1467, column: 63, scope: !10725)
!10773 = !DILocation(line: 1467, column: 81, scope: !10725)
!10774 = !DILocation(line: 1467, column: 84, scope: !10741)
!10775 = !DILocation(line: 1467, column: 87, scope: !10741)
!10776 = !DILocation(line: 1467, column: 110, scope: !10741)
!10777 = !DILocation(line: 1467, column: 108, scope: !10741)
!10778 = !DILocation(line: 1467, column: 127, scope: !10741)
!10779 = !DILocation(line: 1468, column: 18, scope: !10711)
!10780 = !DILocation(line: 1468, column: 21, scope: !10711)
!10781 = !DILocation(line: 1468, column: 33, scope: !10711)
!10782 = !DILocation(line: 1468, column: 30, scope: !10711)
!10783 = !DILocation(line: 1468, column: 47, scope: !10711)
!10784 = !DILocation(line: 1468, column: 50, scope: !10725)
!10785 = !DILocation(line: 1468, column: 53, scope: !10725)
!10786 = !DILocation(line: 1468, column: 66, scope: !10725)
!10787 = !DILocation(line: 1468, column: 63, scope: !10725)
!10788 = !DILocation(line: 1468, column: 81, scope: !10725)
!10789 = !DILocation(line: 1468, column: 84, scope: !10741)
!10790 = !DILocation(line: 1468, column: 87, scope: !10741)
!10791 = !DILocation(line: 1468, column: 111, scope: !10741)
!10792 = !DILocation(line: 1468, column: 108, scope: !10741)
!10793 = !DILocation(line: 1468, column: 128, scope: !10741)
!10794 = !DILocation(line: 1468, column: 131, scope: !10795)
!10795 = !DILexicalBlockFile(scope: !10711, file: !939, discriminator: 3)
!10796 = !DILocation(line: 1468, column: 134, scope: !10795)
!10797 = !DILocation(line: 1468, column: 151, scope: !10795)
!10798 = !DILocation(line: 1468, column: 149, scope: !10795)
!10799 = !DILocation(line: 1460, column: 17, scope: !10800)
!10800 = !DILexicalBlockFile(scope: !10706, file: !939, discriminator: 1)
!10801 = !DILocation(line: 1469, column: 24, scope: !10802)
!10802 = distinct !DILexicalBlock(scope: !10711, file: !939, line: 1468, column: 173)
!10803 = !DILocation(line: 1469, column: 22, scope: !10802)
!10804 = !DILocation(line: 1470, column: 33, scope: !10802)
!10805 = !DILocation(line: 1470, column: 36, scope: !10802)
!10806 = !DILocation(line: 1470, column: 31, scope: !10802)
!10807 = !DILocation(line: 1471, column: 34, scope: !10802)
!10808 = !DILocation(line: 1471, column: 37, scope: !10802)
!10809 = !DILocation(line: 1471, column: 32, scope: !10802)
!10810 = !DILocation(line: 1472, column: 36, scope: !10802)
!10811 = !DILocation(line: 1472, column: 39, scope: !10802)
!10812 = !DILocation(line: 1472, column: 34, scope: !10802)
!10813 = !DILocation(line: 1473, column: 39, scope: !10802)
!10814 = !DILocation(line: 1473, column: 42, scope: !10802)
!10815 = !DILocation(line: 1473, column: 37, scope: !10802)
!10816 = !DILocation(line: 1474, column: 13, scope: !10802)
!10817 = !DILocation(line: 1475, column: 9, scope: !10706)
!10818 = !DILocation(line: 1453, column: 39, scope: !10819)
!10819 = !DILexicalBlockFile(scope: !10701, file: !939, discriminator: 2)
!10820 = !DILocation(line: 1453, column: 9, scope: !10819)
!10821 = distinct !{!10821, !10822}
!10822 = !DILocation(line: 1453, column: 9, scope: !10686)
!10823 = !DILocation(line: 1478, column: 13, scope: !10824)
!10824 = distinct !DILexicalBlock(scope: !10686, file: !939, line: 1478, column: 13)
!10825 = !DILocation(line: 1478, column: 18, scope: !10824)
!10826 = !DILocation(line: 1478, column: 13, scope: !10686)
!10827 = !DILocation(line: 1479, column: 13, scope: !10824)
!10828 = !DILocation(line: 1481, column: 73, scope: !10686)
!10829 = !DILocation(line: 1481, column: 55, scope: !10686)
!10830 = !DILocation(line: 1481, column: 30, scope: !10686)
!10831 = !DILocation(line: 1481, column: 49, scope: !10686)
!10832 = !DILocation(line: 1481, column: 9, scope: !10686)
!10833 = !DILocation(line: 1481, column: 11, scope: !10686)
!10834 = !DILocation(line: 1481, column: 10, scope: !10686)
!10835 = !DILocation(line: 1481, column: 53, scope: !10686)
!10836 = !DILocation(line: 1482, column: 25, scope: !10686)
!10837 = !DILocation(line: 1482, column: 23, scope: !10686)
!10838 = !DILocation(line: 1483, column: 26, scope: !10686)
!10839 = !DILocation(line: 1483, column: 24, scope: !10686)
!10840 = !DILocation(line: 1484, column: 28, scope: !10686)
!10841 = !DILocation(line: 1484, column: 26, scope: !10686)
!10842 = !DILocation(line: 1485, column: 5, scope: !10686)
!10843 = !DILocation(line: 1449, column: 35, scope: !10844)
!10844 = !DILexicalBlockFile(scope: !10681, file: !939, discriminator: 2)
!10845 = !DILocation(line: 1449, column: 5, scope: !10844)
!10846 = distinct !{!10846, !10847}
!10847 = !DILocation(line: 1449, column: 5, scope: !10542)
!10848 = !DILocation(line: 1487, column: 13, scope: !10542)
!10849 = !DILocation(line: 1487, column: 5, scope: !10542)
!10850 = !DILocation(line: 1489, column: 5, scope: !10542)
!10851 = !DILocation(line: 1490, column: 1, scope: !10542)
!10852 = distinct !DISubprogram(name: "mxf_compute_ptses_fake_index", scope: !939, file: !939, line: 1605, type: !10853, isLocal: true, isDefinition: true, scopeLine: 1606, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!10853 = !DISubroutineType(types: !10854)
!10854 = !{!1014, !2594, !2647}
!10855 = !DILocalVariable(name: "mxf", arg: 1, scope: !10852, file: !939, line: 1605, type: !2594)
!10856 = !DILocation(line: 1605, column: 53, scope: !10852)
!10857 = !DILocalVariable(name: "index_table", arg: 2, scope: !10852, file: !939, line: 1605, type: !2647)
!10858 = !DILocation(line: 1605, column: 73, scope: !10852)
!10859 = !DILocalVariable(name: "i", scope: !10852, file: !939, line: 1607, type: !1014)
!10860 = !DILocation(line: 1607, column: 9, scope: !10852)
!10861 = !DILocalVariable(name: "j", scope: !10852, file: !939, line: 1607, type: !1014)
!10862 = !DILocation(line: 1607, column: 12, scope: !10852)
!10863 = !DILocalVariable(name: "x", scope: !10852, file: !939, line: 1607, type: !1014)
!10864 = !DILocation(line: 1607, column: 15, scope: !10852)
!10865 = !DILocalVariable(name: "max_temporal_offset", scope: !10852, file: !939, line: 1608, type: !1147)
!10866 = !DILocation(line: 1608, column: 12, scope: !10852)
!10867 = !DILocalVariable(name: "flags", scope: !10852, file: !939, line: 1609, type: !1017)
!10868 = !DILocation(line: 1609, column: 14, scope: !10852)
!10869 = !DILocation(line: 1612, column: 12, scope: !10870)
!10870 = distinct !DILexicalBlock(scope: !10852, file: !939, line: 1612, column: 5)
!10871 = !DILocation(line: 1612, column: 10, scope: !10870)
!10872 = !DILocation(line: 1612, column: 17, scope: !10873)
!10873 = !DILexicalBlockFile(scope: !10874, file: !939, discriminator: 1)
!10874 = distinct !DILexicalBlock(scope: !10870, file: !939, line: 1612, column: 5)
!10875 = !DILocation(line: 1612, column: 21, scope: !10873)
!10876 = !DILocation(line: 1612, column: 34, scope: !10873)
!10877 = !DILocation(line: 1612, column: 19, scope: !10873)
!10878 = !DILocation(line: 1612, column: 5, scope: !10873)
!10879 = !DILocalVariable(name: "s", scope: !10880, file: !939, line: 1613, type: !1133)
!10880 = distinct !DILexicalBlock(scope: !10874, file: !939, line: 1612, column: 52)
!10881 = !DILocation(line: 1613, column: 31, scope: !10880)
!10882 = !DILocation(line: 1613, column: 57, scope: !10880)
!10883 = !DILocation(line: 1613, column: 35, scope: !10880)
!10884 = !DILocation(line: 1613, column: 48, scope: !10880)
!10885 = !DILocation(line: 1615, column: 14, scope: !10886)
!10886 = distinct !DILexicalBlock(scope: !10880, file: !939, line: 1615, column: 13)
!10887 = !DILocation(line: 1615, column: 17, scope: !10886)
!10888 = !DILocation(line: 1615, column: 13, scope: !10880)
!10889 = !DILocation(line: 1616, column: 13, scope: !10890)
!10890 = distinct !DILexicalBlock(scope: !10886, file: !939, line: 1615, column: 35)
!10891 = !DILocation(line: 1616, column: 26, scope: !10890)
!10892 = !DILocation(line: 1616, column: 35, scope: !10890)
!10893 = !DILocation(line: 1617, column: 13, scope: !10890)
!10894 = !DILocation(line: 1620, column: 13, scope: !10895)
!10895 = distinct !DILexicalBlock(scope: !10880, file: !939, line: 1620, column: 13)
!10896 = !DILocation(line: 1620, column: 16, scope: !10895)
!10897 = !DILocation(line: 1620, column: 46, scope: !10895)
!10898 = !DILocation(line: 1620, column: 59, scope: !10895)
!10899 = !DILocation(line: 1620, column: 44, scope: !10895)
!10900 = !DILocation(line: 1620, column: 33, scope: !10895)
!10901 = !DILocation(line: 1620, column: 31, scope: !10895)
!10902 = !DILocation(line: 1620, column: 13, scope: !10880)
!10903 = !DILocation(line: 1621, column: 13, scope: !10904)
!10904 = distinct !DILexicalBlock(scope: !10895, file: !939, line: 1620, column: 69)
!10905 = !DILocation(line: 1621, column: 26, scope: !10904)
!10906 = !DILocation(line: 1621, column: 35, scope: !10904)
!10907 = !DILocation(line: 1622, column: 20, scope: !10904)
!10908 = !DILocation(line: 1622, column: 25, scope: !10904)
!10909 = !DILocation(line: 1622, column: 82, scope: !10904)
!10910 = !DILocation(line: 1622, column: 85, scope: !10904)
!10911 = !DILocation(line: 1622, column: 13, scope: !10904)
!10912 = !DILocation(line: 1623, column: 13, scope: !10904)
!10913 = !DILocation(line: 1626, column: 34, scope: !10880)
!10914 = !DILocation(line: 1626, column: 37, scope: !10880)
!10915 = !DILocation(line: 1626, column: 9, scope: !10880)
!10916 = !DILocation(line: 1626, column: 22, scope: !10880)
!10917 = !DILocation(line: 1626, column: 31, scope: !10880)
!10918 = !DILocation(line: 1627, column: 5, scope: !10880)
!10919 = !DILocation(line: 1612, column: 48, scope: !10920)
!10920 = !DILexicalBlockFile(scope: !10874, file: !939, discriminator: 2)
!10921 = !DILocation(line: 1612, column: 5, scope: !10920)
!10922 = distinct !{!10922, !10923}
!10923 = !DILocation(line: 1612, column: 5, scope: !10852)
!10924 = !DILocation(line: 1630, column: 9, scope: !10925)
!10925 = distinct !DILexicalBlock(scope: !10852, file: !939, line: 1630, column: 9)
!10926 = !DILocation(line: 1630, column: 22, scope: !10925)
!10927 = !DILocation(line: 1630, column: 31, scope: !10925)
!10928 = !DILocation(line: 1630, column: 9, scope: !10852)
!10929 = !DILocation(line: 1631, column: 9, scope: !10925)
!10930 = !DILocation(line: 1633, column: 42, scope: !10931)
!10931 = distinct !DILexicalBlock(scope: !10852, file: !939, line: 1633, column: 9)
!10932 = !DILocation(line: 1633, column: 55, scope: !10931)
!10933 = !DILocation(line: 1633, column: 32, scope: !10931)
!10934 = !DILocation(line: 1633, column: 11, scope: !10931)
!10935 = !DILocation(line: 1633, column: 24, scope: !10931)
!10936 = !DILocation(line: 1633, column: 30, scope: !10931)
!10937 = !DILocation(line: 1633, column: 83, scope: !10931)
!10938 = !DILocation(line: 1634, column: 47, scope: !10931)
!10939 = !DILocation(line: 1634, column: 60, scope: !10931)
!10940 = !DILocation(line: 1634, column: 37, scope: !10931)
!10941 = !DILocation(line: 1634, column: 11, scope: !10931)
!10942 = !DILocation(line: 1634, column: 24, scope: !10931)
!10943 = !DILocation(line: 1634, column: 35, scope: !10931)
!10944 = !DILocation(line: 1634, column: 93, scope: !10931)
!10945 = !DILocation(line: 1635, column: 44, scope: !10931)
!10946 = !DILocation(line: 1635, column: 57, scope: !10931)
!10947 = !DILocation(line: 1635, column: 34, scope: !10931)
!10948 = !DILocation(line: 1635, column: 11, scope: !10931)
!10949 = !DILocation(line: 1635, column: 24, scope: !10931)
!10950 = !DILocation(line: 1635, column: 32, scope: !10931)
!10951 = !DILocation(line: 1635, column: 84, scope: !10931)
!10952 = !DILocation(line: 1636, column: 29, scope: !10931)
!10953 = !DILocation(line: 1636, column: 42, scope: !10931)
!10954 = !DILocation(line: 1636, column: 19, scope: !10931)
!10955 = !DILocation(line: 1636, column: 17, scope: !10931)
!10956 = !DILocation(line: 1633, column: 9, scope: !10957)
!10957 = !DILexicalBlockFile(scope: !10852, file: !939, discriminator: 1)
!10958 = !DILocation(line: 1637, column: 19, scope: !10959)
!10959 = distinct !DILexicalBlock(scope: !10931, file: !939, line: 1636, column: 71)
!10960 = !DILocation(line: 1637, column: 32, scope: !10959)
!10961 = !DILocation(line: 1637, column: 18, scope: !10959)
!10962 = !DILocation(line: 1637, column: 9, scope: !10959)
!10963 = !DILocation(line: 1638, column: 19, scope: !10959)
!10964 = !DILocation(line: 1638, column: 32, scope: !10959)
!10965 = !DILocation(line: 1638, column: 18, scope: !10959)
!10966 = !DILocation(line: 1638, column: 9, scope: !10959)
!10967 = !DILocation(line: 1639, column: 19, scope: !10959)
!10968 = !DILocation(line: 1639, column: 32, scope: !10959)
!10969 = !DILocation(line: 1639, column: 18, scope: !10959)
!10970 = !DILocation(line: 1639, column: 9, scope: !10959)
!10971 = !DILocation(line: 1640, column: 9, scope: !10959)
!10972 = !DILocation(line: 1645, column: 12, scope: !10973)
!10973 = distinct !DILexicalBlock(scope: !10852, file: !939, line: 1645, column: 5)
!10974 = !DILocation(line: 1645, column: 10, scope: !10973)
!10975 = !DILocation(line: 1645, column: 17, scope: !10976)
!10976 = !DILexicalBlockFile(scope: !10977, file: !939, discriminator: 1)
!10977 = distinct !DILexicalBlock(scope: !10973, file: !939, line: 1645, column: 5)
!10978 = !DILocation(line: 1645, column: 21, scope: !10976)
!10979 = !DILocation(line: 1645, column: 34, scope: !10976)
!10980 = !DILocation(line: 1645, column: 19, scope: !10976)
!10981 = !DILocation(line: 1645, column: 5, scope: !10976)
!10982 = !DILocation(line: 1646, column: 28, scope: !10977)
!10983 = !DILocation(line: 1646, column: 9, scope: !10977)
!10984 = !DILocation(line: 1646, column: 22, scope: !10977)
!10985 = !DILocation(line: 1646, column: 31, scope: !10977)
!10986 = !DILocation(line: 1645, column: 45, scope: !10987)
!10987 = !DILexicalBlockFile(scope: !10977, file: !939, discriminator: 2)
!10988 = !DILocation(line: 1645, column: 5, scope: !10987)
!10989 = distinct !{!10989, !10990}
!10990 = !DILocation(line: 1645, column: 5, scope: !10852)
!10991 = !DILocation(line: 1675, column: 16, scope: !10992)
!10992 = distinct !DILexicalBlock(scope: !10852, file: !939, line: 1675, column: 5)
!10993 = !DILocation(line: 1675, column: 12, scope: !10992)
!10994 = !DILocation(line: 1675, column: 10, scope: !10992)
!10995 = !DILocation(line: 1675, column: 21, scope: !10996)
!10996 = !DILexicalBlockFile(scope: !10997, file: !939, discriminator: 1)
!10997 = distinct !DILexicalBlock(scope: !10992, file: !939, line: 1675, column: 5)
!10998 = !DILocation(line: 1675, column: 25, scope: !10996)
!10999 = !DILocation(line: 1675, column: 38, scope: !10996)
!11000 = !DILocation(line: 1675, column: 23, scope: !10996)
!11001 = !DILocation(line: 1675, column: 5, scope: !10996)
!11002 = !DILocalVariable(name: "s", scope: !11003, file: !939, line: 1676, type: !1133)
!11003 = distinct !DILexicalBlock(scope: !10997, file: !939, line: 1675, column: 56)
!11004 = !DILocation(line: 1676, column: 31, scope: !11003)
!11005 = !DILocation(line: 1676, column: 57, scope: !11003)
!11006 = !DILocation(line: 1676, column: 35, scope: !11003)
!11007 = !DILocation(line: 1676, column: 48, scope: !11003)
!11008 = !DILocalVariable(name: "index_delta", scope: !11003, file: !939, line: 1677, type: !1014)
!11009 = !DILocation(line: 1677, column: 13, scope: !11003)
!11010 = !DILocalVariable(name: "n", scope: !11003, file: !939, line: 1678, type: !1014)
!11011 = !DILocation(line: 1678, column: 13, scope: !11003)
!11012 = !DILocation(line: 1678, column: 17, scope: !11003)
!11013 = !DILocation(line: 1678, column: 20, scope: !11003)
!11014 = !DILocation(line: 1680, column: 13, scope: !11015)
!11015 = distinct !DILexicalBlock(scope: !11003, file: !939, line: 1680, column: 13)
!11016 = !DILocation(line: 1680, column: 16, scope: !11015)
!11017 = !DILocation(line: 1680, column: 40, scope: !11015)
!11018 = !DILocation(line: 1680, column: 43, scope: !11015)
!11019 = !DILocation(line: 1680, column: 38, scope: !11015)
!11020 = !DILocation(line: 1680, column: 58, scope: !11015)
!11021 = !DILocation(line: 1680, column: 33, scope: !11015)
!11022 = !DILocation(line: 1680, column: 13, scope: !11003)
!11023 = !DILocation(line: 1681, column: 25, scope: !11024)
!11024 = distinct !DILexicalBlock(scope: !11015, file: !939, line: 1680, column: 63)
!11025 = !DILocation(line: 1683, column: 14, scope: !11024)
!11026 = !DILocation(line: 1684, column: 9, scope: !11024)
!11027 = !DILocation(line: 1686, column: 16, scope: !11028)
!11028 = distinct !DILexicalBlock(scope: !11003, file: !939, line: 1686, column: 9)
!11029 = !DILocation(line: 1686, column: 14, scope: !11028)
!11030 = !DILocation(line: 1686, column: 21, scope: !11031)
!11031 = !DILexicalBlockFile(scope: !11032, file: !939, discriminator: 1)
!11032 = distinct !DILexicalBlock(scope: !11028, file: !939, line: 1686, column: 9)
!11033 = !DILocation(line: 1686, column: 25, scope: !11031)
!11034 = !DILocation(line: 1686, column: 23, scope: !11031)
!11035 = !DILocation(line: 1686, column: 9, scope: !11031)
!11036 = !DILocalVariable(name: "offset", scope: !11037, file: !939, line: 1687, type: !1014)
!11037 = distinct !DILexicalBlock(scope: !11032, file: !939, line: 1686, column: 51)
!11038 = !DILocation(line: 1687, column: 17, scope: !11037)
!11039 = !DILocation(line: 1687, column: 53, scope: !11037)
!11040 = !DILocation(line: 1687, column: 26, scope: !11037)
!11041 = !DILocation(line: 1687, column: 29, scope: !11037)
!11042 = !DILocation(line: 1687, column: 58, scope: !11037)
!11043 = !DILocation(line: 1687, column: 56, scope: !11037)
!11044 = !DILocalVariable(name: "index", scope: !11037, file: !939, line: 1688, type: !1014)
!11045 = !DILocation(line: 1688, column: 17, scope: !11037)
!11046 = !DILocation(line: 1688, column: 25, scope: !11037)
!11047 = !DILocation(line: 1688, column: 29, scope: !11037)
!11048 = !DILocation(line: 1688, column: 27, scope: !11037)
!11049 = !DILocation(line: 1690, column: 17, scope: !11050)
!11050 = distinct !DILexicalBlock(scope: !11037, file: !939, line: 1690, column: 17)
!11051 = !DILocation(line: 1690, column: 22, scope: !11050)
!11052 = !DILocation(line: 1690, column: 35, scope: !11050)
!11053 = !DILocation(line: 1690, column: 19, scope: !11050)
!11054 = !DILocation(line: 1690, column: 17, scope: !11037)
!11055 = !DILocation(line: 1691, column: 24, scope: !11056)
!11056 = distinct !DILexicalBlock(scope: !11050, file: !939, line: 1690, column: 45)
!11057 = !DILocation(line: 1691, column: 29, scope: !11056)
!11058 = !DILocation(line: 1693, column: 24, scope: !11056)
!11059 = !DILocation(line: 1693, column: 27, scope: !11056)
!11060 = !DILocation(line: 1693, column: 45, scope: !11056)
!11061 = !DILocation(line: 1693, column: 48, scope: !11056)
!11062 = !DILocation(line: 1691, column: 17, scope: !11056)
!11063 = !DILocation(line: 1694, column: 17, scope: !11056)
!11064 = !DILocation(line: 1697, column: 42, scope: !11037)
!11065 = !DILocation(line: 1697, column: 26, scope: !11037)
!11066 = !DILocation(line: 1697, column: 29, scope: !11037)
!11067 = !DILocation(line: 1697, column: 45, scope: !11037)
!11068 = !DILocation(line: 1697, column: 24, scope: !11037)
!11069 = !DILocation(line: 1697, column: 19, scope: !11037)
!11070 = !DILocation(line: 1697, column: 13, scope: !11037)
!11071 = !DILocation(line: 1697, column: 22, scope: !11037)
!11072 = !DILocation(line: 1699, column: 17, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !11037, file: !939, line: 1699, column: 17)
!11074 = !DILocation(line: 1699, column: 23, scope: !11073)
!11075 = !DILocation(line: 1699, column: 27, scope: !11073)
!11076 = !DILocation(line: 1699, column: 30, scope: !11077)
!11077 = !DILexicalBlockFile(scope: !11073, file: !939, discriminator: 1)
!11078 = !DILocation(line: 1699, column: 39, scope: !11077)
!11079 = !DILocation(line: 1699, column: 52, scope: !11077)
!11080 = !DILocation(line: 1699, column: 36, scope: !11077)
!11081 = !DILocation(line: 1699, column: 17, scope: !11077)
!11082 = !DILocation(line: 1700, column: 24, scope: !11083)
!11083 = distinct !DILexicalBlock(scope: !11073, file: !939, line: 1699, column: 62)
!11084 = !DILocation(line: 1700, column: 29, scope: !11083)
!11085 = !DILocation(line: 1702, column: 24, scope: !11083)
!11086 = !DILocation(line: 1702, column: 27, scope: !11083)
!11087 = !DILocation(line: 1702, column: 35, scope: !11083)
!11088 = !DILocation(line: 1700, column: 17, scope: !11083)
!11089 = !DILocation(line: 1703, column: 17, scope: !11083)
!11090 = !DILocation(line: 1706, column: 39, scope: !11037)
!11091 = !DILocation(line: 1706, column: 34, scope: !11037)
!11092 = !DILocation(line: 1706, column: 13, scope: !11037)
!11093 = !DILocation(line: 1706, column: 26, scope: !11037)
!11094 = !DILocation(line: 1706, column: 37, scope: !11037)
!11095 = !DILocation(line: 1707, column: 41, scope: !11037)
!11096 = !DILocation(line: 1707, column: 32, scope: !11037)
!11097 = !DILocation(line: 1707, column: 13, scope: !11037)
!11098 = !DILocation(line: 1707, column: 26, scope: !11037)
!11099 = !DILocation(line: 1707, column: 39, scope: !11037)
!11100 = !DILocation(line: 1708, column: 37, scope: !11037)
!11101 = !DILocation(line: 1708, column: 36, scope: !11037)
!11102 = !DILocation(line: 1708, column: 61, scope: !11037)
!11103 = !DILocation(line: 1708, column: 58, scope: !11037)
!11104 = !DILocation(line: 1708, column: 72, scope: !11105)
!11105 = !DILexicalBlockFile(scope: !11037, file: !939, discriminator: 1)
!11106 = !DILocation(line: 1708, column: 71, scope: !11105)
!11107 = !DILocation(line: 1708, column: 36, scope: !11105)
!11108 = !DILocation(line: 1708, column: 96, scope: !11109)
!11109 = !DILexicalBlockFile(scope: !11037, file: !939, discriminator: 2)
!11110 = !DILocation(line: 1708, column: 36, scope: !11109)
!11111 = !DILocation(line: 1708, column: 36, scope: !11112)
!11112 = !DILexicalBlockFile(scope: !11037, file: !939, discriminator: 3)
!11113 = !DILocation(line: 1708, column: 35, scope: !11112)
!11114 = !DILocation(line: 1708, column: 33, scope: !11112)
!11115 = !DILocation(line: 1709, column: 9, scope: !11037)
!11116 = !DILocation(line: 1686, column: 33, scope: !11117)
!11117 = !DILexicalBlockFile(scope: !11032, file: !939, discriminator: 2)
!11118 = !DILocation(line: 1686, column: 30, scope: !11117)
!11119 = !DILocation(line: 1686, column: 47, scope: !11117)
!11120 = !DILocation(line: 1686, column: 9, scope: !11117)
!11121 = distinct !{!11121, !11122}
!11122 = !DILocation(line: 1686, column: 9, scope: !11003)
!11123 = !DILocation(line: 1710, column: 5, scope: !11003)
!11124 = !DILocation(line: 1675, column: 52, scope: !11125)
!11125 = !DILexicalBlockFile(scope: !10997, file: !939, discriminator: 2)
!11126 = !DILocation(line: 1675, column: 5, scope: !11125)
!11127 = distinct !{!11127, !11128}
!11128 = !DILocation(line: 1675, column: 5, scope: !10852)
!11129 = !DILocation(line: 1713, column: 12, scope: !11130)
!11130 = distinct !DILexicalBlock(scope: !10852, file: !939, line: 1713, column: 5)
!11131 = !DILocation(line: 1713, column: 10, scope: !11130)
!11132 = !DILocation(line: 1713, column: 17, scope: !11133)
!11133 = !DILexicalBlockFile(scope: !11134, file: !939, discriminator: 1)
!11134 = distinct !DILexicalBlock(scope: !11130, file: !939, line: 1713, column: 5)
!11135 = !DILocation(line: 1713, column: 21, scope: !11133)
!11136 = !DILocation(line: 1713, column: 34, scope: !11133)
!11137 = !DILocation(line: 1713, column: 19, scope: !11133)
!11138 = !DILocation(line: 1713, column: 5, scope: !11133)
!11139 = !DILocation(line: 1714, column: 48, scope: !11140)
!11140 = distinct !DILexicalBlock(scope: !11134, file: !939, line: 1713, column: 49)
!11141 = !DILocation(line: 1714, column: 33, scope: !11140)
!11142 = !DILocation(line: 1714, column: 9, scope: !11140)
!11143 = !DILocation(line: 1714, column: 22, scope: !11140)
!11144 = !DILocation(line: 1714, column: 36, scope: !11140)
!11145 = !DILocation(line: 1714, column: 46, scope: !11140)
!11146 = !DILocation(line: 1715, column: 32, scope: !11147)
!11147 = distinct !DILexicalBlock(scope: !11140, file: !939, line: 1715, column: 13)
!11148 = !DILocation(line: 1715, column: 13, scope: !11147)
!11149 = !DILocation(line: 1715, column: 26, scope: !11147)
!11150 = !DILocation(line: 1715, column: 35, scope: !11147)
!11151 = !DILocation(line: 1715, column: 13, scope: !11140)
!11152 = !DILocation(line: 1716, column: 74, scope: !11147)
!11153 = !DILocation(line: 1716, column: 68, scope: !11147)
!11154 = !DILocation(line: 1716, column: 56, scope: !11147)
!11155 = !DILocation(line: 1716, column: 37, scope: !11147)
!11156 = !DILocation(line: 1716, column: 50, scope: !11147)
!11157 = !DILocation(line: 1716, column: 13, scope: !11147)
!11158 = !DILocation(line: 1716, column: 26, scope: !11147)
!11159 = !DILocation(line: 1716, column: 60, scope: !11147)
!11160 = !DILocation(line: 1716, column: 66, scope: !11147)
!11161 = !DILocation(line: 1717, column: 5, scope: !11140)
!11162 = !DILocation(line: 1713, column: 45, scope: !11163)
!11163 = !DILexicalBlockFile(scope: !11134, file: !939, discriminator: 2)
!11164 = !DILocation(line: 1713, column: 5, scope: !11163)
!11165 = distinct !{!11165, !11166}
!11166 = !DILocation(line: 1713, column: 5, scope: !10852)
!11167 = !DILocation(line: 1718, column: 14, scope: !10852)
!11168 = !DILocation(line: 1718, column: 5, scope: !10852)
!11169 = !DILocation(line: 1720, column: 31, scope: !10852)
!11170 = !DILocation(line: 1720, column: 30, scope: !10852)
!11171 = !DILocation(line: 1720, column: 5, scope: !10852)
!11172 = !DILocation(line: 1720, column: 18, scope: !10852)
!11173 = !DILocation(line: 1720, column: 28, scope: !10852)
!11174 = !DILocation(line: 1722, column: 5, scope: !10852)
!11175 = !DILocation(line: 1723, column: 1, scope: !10852)
!11176 = distinct !DISubprogram(name: "mxf_get_wrapping_by_body_sid", scope: !939, file: !939, line: 2911, type: !11177, isLocal: true, isDefinition: true, scopeLine: 2912, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!11177 = !DISubroutineType(types: !11178)
!11178 = !{!1131, !2495, !1014}
!11179 = !DILocalVariable(name: "s", arg: 1, scope: !11176, file: !939, line: 2911, type: !2495)
!11180 = !DILocation(line: 2911, column: 72, scope: !11176)
!11181 = !DILocalVariable(name: "body_sid", arg: 2, scope: !11176, file: !939, line: 2911, type: !1014)
!11182 = !DILocation(line: 2911, column: 79, scope: !11176)
!11183 = !DILocalVariable(name: "i", scope: !11184, file: !939, line: 2913, type: !1014)
!11184 = distinct !DILexicalBlock(scope: !11176, file: !939, line: 2913, column: 5)
!11185 = !DILocation(line: 2913, column: 14, scope: !11184)
!11186 = !DILocation(line: 2913, column: 10, scope: !11184)
!11187 = !DILocation(line: 2913, column: 21, scope: !11188)
!11188 = !DILexicalBlockFile(scope: !11189, file: !939, discriminator: 1)
!11189 = distinct !DILexicalBlock(scope: !11184, file: !939, line: 2913, column: 5)
!11190 = !DILocation(line: 2913, column: 25, scope: !11188)
!11191 = !DILocation(line: 2913, column: 28, scope: !11188)
!11192 = !DILocation(line: 2913, column: 23, scope: !11188)
!11193 = !DILocation(line: 2913, column: 5, scope: !11188)
!11194 = !DILocalVariable(name: "track", scope: !11195, file: !939, line: 2914, type: !1108)
!11195 = distinct !DILexicalBlock(scope: !11189, file: !939, line: 2913, column: 45)
!11196 = !DILocation(line: 2914, column: 19, scope: !11195)
!11197 = !DILocation(line: 2914, column: 38, scope: !11195)
!11198 = !DILocation(line: 2914, column: 27, scope: !11195)
!11199 = !DILocation(line: 2914, column: 30, scope: !11195)
!11200 = !DILocation(line: 2914, column: 42, scope: !11195)
!11201 = !DILocation(line: 2915, column: 13, scope: !11202)
!11202 = distinct !DILexicalBlock(scope: !11195, file: !939, line: 2915, column: 13)
!11203 = !DILocation(line: 2915, column: 19, scope: !11202)
!11204 = !DILocation(line: 2915, column: 22, scope: !11205)
!11205 = !DILexicalBlockFile(scope: !11202, file: !939, discriminator: 1)
!11206 = !DILocation(line: 2915, column: 29, scope: !11205)
!11207 = !DILocation(line: 2915, column: 41, scope: !11205)
!11208 = !DILocation(line: 2915, column: 38, scope: !11205)
!11209 = !DILocation(line: 2915, column: 50, scope: !11205)
!11210 = !DILocation(line: 2915, column: 53, scope: !11211)
!11211 = !DILexicalBlockFile(scope: !11202, file: !939, discriminator: 2)
!11212 = !DILocation(line: 2915, column: 60, scope: !11211)
!11213 = !DILocation(line: 2915, column: 69, scope: !11211)
!11214 = !DILocation(line: 2915, column: 13, scope: !11211)
!11215 = !DILocation(line: 2916, column: 20, scope: !11202)
!11216 = !DILocation(line: 2916, column: 27, scope: !11202)
!11217 = !DILocation(line: 2916, column: 13, scope: !11202)
!11218 = !DILocation(line: 2917, column: 5, scope: !11195)
!11219 = !DILocation(line: 2913, column: 41, scope: !11220)
!11220 = !DILexicalBlockFile(scope: !11189, file: !939, discriminator: 2)
!11221 = !DILocation(line: 2913, column: 5, scope: !11220)
!11222 = distinct !{!11222, !11223}
!11223 = !DILocation(line: 2913, column: 5, scope: !11176)
!11224 = !DILocation(line: 2918, column: 5, scope: !11176)
!11225 = !DILocation(line: 2919, column: 1, scope: !11176)
!11226 = distinct !DISubprogram(name: "mxf_find_index_table", scope: !939, file: !939, line: 2969, type: !11227, isLocal: true, isDefinition: true, scopeLine: 2970, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!11227 = !DISubroutineType(types: !11228)
!11228 = !{!2647, !2594, !1014}
!11229 = !DILocalVariable(name: "mxf", arg: 1, scope: !11226, file: !939, line: 2969, type: !2594)
!11230 = !DILocation(line: 2969, column: 56, scope: !11226)
!11231 = !DILocalVariable(name: "index_sid", arg: 2, scope: !11226, file: !939, line: 2969, type: !1014)
!11232 = !DILocation(line: 2969, column: 65, scope: !11226)
!11233 = !DILocalVariable(name: "i", scope: !11226, file: !939, line: 2971, type: !1014)
!11234 = !DILocation(line: 2971, column: 9, scope: !11226)
!11235 = !DILocation(line: 2972, column: 12, scope: !11236)
!11236 = distinct !DILexicalBlock(scope: !11226, file: !939, line: 2972, column: 5)
!11237 = !DILocation(line: 2972, column: 10, scope: !11236)
!11238 = !DILocation(line: 2972, column: 17, scope: !11239)
!11239 = !DILexicalBlockFile(scope: !11240, file: !939, discriminator: 1)
!11240 = distinct !DILexicalBlock(scope: !11236, file: !939, line: 2972, column: 5)
!11241 = !DILocation(line: 2972, column: 21, scope: !11239)
!11242 = !DILocation(line: 2972, column: 26, scope: !11239)
!11243 = !DILocation(line: 2972, column: 19, scope: !11239)
!11244 = !DILocation(line: 2972, column: 5, scope: !11239)
!11245 = !DILocation(line: 2973, column: 31, scope: !11246)
!11246 = distinct !DILexicalBlock(scope: !11240, file: !939, line: 2973, column: 13)
!11247 = !DILocation(line: 2973, column: 13, scope: !11246)
!11248 = !DILocation(line: 2973, column: 18, scope: !11246)
!11249 = !DILocation(line: 2973, column: 34, scope: !11246)
!11250 = !DILocation(line: 2973, column: 47, scope: !11246)
!11251 = !DILocation(line: 2973, column: 44, scope: !11246)
!11252 = !DILocation(line: 2973, column: 13, scope: !11240)
!11253 = !DILocation(line: 2974, column: 39, scope: !11246)
!11254 = !DILocation(line: 2974, column: 21, scope: !11246)
!11255 = !DILocation(line: 2974, column: 26, scope: !11246)
!11256 = !DILocation(line: 2974, column: 13, scope: !11246)
!11257 = !DILocation(line: 2973, column: 47, scope: !11258)
!11258 = !DILexicalBlockFile(scope: !11246, file: !939, discriminator: 1)
!11259 = !DILocation(line: 2972, column: 44, scope: !11260)
!11260 = !DILexicalBlockFile(scope: !11240, file: !939, discriminator: 2)
!11261 = !DILocation(line: 2972, column: 5, scope: !11260)
!11262 = distinct !{!11262, !11263}
!11263 = !DILocation(line: 2972, column: 5, scope: !11226)
!11264 = !DILocation(line: 2975, column: 5, scope: !11226)
!11265 = !DILocation(line: 2976, column: 1, scope: !11226)
!11266 = !DILocation(line: 557, column: 77, scope: !2586, inlinedAt: !11267)
!11267 = distinct !DILocation(line: 624, column: 25, scope: !2492)
!11268 = !DILocation(line: 557, column: 77, scope: !2586, inlinedAt: !11269)
!11269 = distinct !DILocation(line: 564, column: 19, scope: !2492)
!11270 = !DILocalVariable(name: "s", arg: 1, scope: !2492, file: !939, line: 559, type: !2495)
!11271 = !DILocation(line: 559, column: 49, scope: !2492)
!11272 = !DILocalVariable(name: "pkt", arg: 2, scope: !2492, file: !939, line: 559, type: !1335)
!11273 = !DILocation(line: 559, column: 62, scope: !2492)
!11274 = !DILocalVariable(name: "klv", arg: 3, scope: !2492, file: !939, line: 559, type: !2497)
!11275 = !DILocation(line: 559, column: 78, scope: !2492)
!11276 = !DILocalVariable(name: "mxf", scope: !2492, file: !939, line: 562, type: !2594)
!11277 = !DILocation(line: 562, column: 17, scope: !2492)
!11278 = !DILocation(line: 562, column: 23, scope: !2492)
!11279 = !DILocation(line: 562, column: 26, scope: !2492)
!11280 = !DILocalVariable(name: "pb", scope: !2492, file: !939, line: 563, type: !1501)
!11281 = !DILocation(line: 563, column: 18, scope: !2492)
!11282 = !DILocation(line: 563, column: 23, scope: !2492)
!11283 = !DILocation(line: 563, column: 26, scope: !2492)
!11284 = !DILocalVariable(name: "end", scope: !2492, file: !939, line: 564, type: !1015)
!11285 = !DILocation(line: 564, column: 13, scope: !2492)
!11286 = !DILocation(line: 564, column: 29, scope: !2492)
!11287 = !DILocation(line: 564, column: 19, scope: !2492)
!11288 = !DILocation(line: 559, column: 22, scope: !2586, inlinedAt: !11269)
!11289 = !DILocation(line: 559, column: 12, scope: !2586, inlinedAt: !11269)
!11290 = !DILocation(line: 564, column: 35, scope: !2492)
!11291 = !DILocation(line: 564, column: 40, scope: !2492)
!11292 = !DILocation(line: 564, column: 33, scope: !2492)
!11293 = !DILocalVariable(name: "size", scope: !2492, file: !939, line: 565, type: !1015)
!11294 = !DILocation(line: 565, column: 13, scope: !2492)
!11295 = !DILocalVariable(name: "orig_size", scope: !2492, file: !939, line: 566, type: !1125)
!11296 = !DILocation(line: 566, column: 14, scope: !2492)
!11297 = !DILocalVariable(name: "plaintext_size", scope: !2492, file: !939, line: 567, type: !1125)
!11298 = !DILocation(line: 567, column: 14, scope: !2492)
!11299 = !DILocalVariable(name: "ivec", scope: !2492, file: !939, line: 568, type: !1027)
!11300 = !DILocation(line: 568, column: 13, scope: !2492)
!11301 = !DILocalVariable(name: "tmpbuf", scope: !2492, file: !939, line: 569, type: !1027)
!11302 = !DILocation(line: 569, column: 13, scope: !2492)
!11303 = !DILocalVariable(name: "index", scope: !2492, file: !939, line: 570, type: !1014)
!11304 = !DILocation(line: 570, column: 9, scope: !2492)
!11305 = !DILocalVariable(name: "body_sid", scope: !2492, file: !939, line: 571, type: !1014)
!11306 = !DILocation(line: 571, column: 9, scope: !2492)
!11307 = !DILocation(line: 573, column: 10, scope: !11308)
!11308 = distinct !DILexicalBlock(scope: !2492, file: !939, line: 573, column: 9)
!11309 = !DILocation(line: 573, column: 15, scope: !11308)
!11310 = !DILocation(line: 573, column: 20, scope: !11308)
!11311 = !DILocation(line: 573, column: 23, scope: !11312)
!11312 = !DILexicalBlockFile(scope: !11308, file: !939, discriminator: 1)
!11313 = !DILocation(line: 573, column: 26, scope: !11312)
!11314 = !DILocation(line: 573, column: 30, scope: !11312)
!11315 = !DILocation(line: 573, column: 33, scope: !11316)
!11316 = !DILexicalBlockFile(scope: !11308, file: !939, discriminator: 2)
!11317 = !DILocation(line: 573, column: 36, scope: !11316)
!11318 = !DILocation(line: 573, column: 43, scope: !11316)
!11319 = !DILocation(line: 573, column: 9, scope: !11316)
!11320 = !DILocation(line: 574, column: 21, scope: !11321)
!11321 = distinct !DILexicalBlock(scope: !11308, file: !939, line: 573, column: 50)
!11322 = !DILocation(line: 574, column: 9, scope: !11321)
!11323 = !DILocation(line: 574, column: 14, scope: !11321)
!11324 = !DILocation(line: 574, column: 19, scope: !11321)
!11325 = !DILocation(line: 575, column: 14, scope: !11326)
!11326 = distinct !DILexicalBlock(scope: !11321, file: !939, line: 575, column: 13)
!11327 = !DILocation(line: 575, column: 19, scope: !11326)
!11328 = !DILocation(line: 575, column: 13, scope: !11321)
!11329 = !DILocation(line: 576, column: 13, scope: !11326)
!11330 = !DILocation(line: 577, column: 21, scope: !11321)
!11331 = !DILocation(line: 577, column: 26, scope: !11321)
!11332 = !DILocation(line: 577, column: 32, scope: !11321)
!11333 = !DILocation(line: 577, column: 35, scope: !11321)
!11334 = !DILocation(line: 577, column: 9, scope: !11321)
!11335 = !DILocation(line: 578, column: 5, scope: !11321)
!11336 = !DILocation(line: 580, column: 34, scope: !2492)
!11337 = !DILocation(line: 580, column: 12, scope: !2492)
!11338 = !DILocation(line: 580, column: 10, scope: !2492)
!11339 = !DILocation(line: 581, column: 9, scope: !11340)
!11340 = distinct !DILexicalBlock(scope: !2492, file: !939, line: 581, column: 9)
!11341 = !DILocation(line: 581, column: 14, scope: !11340)
!11342 = !DILocation(line: 581, column: 9, scope: !2492)
!11343 = !DILocation(line: 582, column: 16, scope: !11340)
!11344 = !DILocation(line: 582, column: 9, scope: !11340)
!11345 = !DILocation(line: 583, column: 15, scope: !2492)
!11346 = !DILocation(line: 583, column: 19, scope: !2492)
!11347 = !DILocation(line: 583, column: 5, scope: !2492)
!11348 = !DILocation(line: 585, column: 27, scope: !2492)
!11349 = !DILocation(line: 585, column: 5, scope: !2492)
!11350 = !DILocation(line: 586, column: 32, scope: !2492)
!11351 = !DILocation(line: 586, column: 22, scope: !2492)
!11352 = !DILocation(line: 586, column: 20, scope: !2492)
!11353 = !DILocation(line: 588, column: 27, scope: !2492)
!11354 = !DILocation(line: 588, column: 5, scope: !2492)
!11355 = !DILocation(line: 589, column: 15, scope: !2492)
!11356 = !DILocation(line: 589, column: 19, scope: !2492)
!11357 = !DILocation(line: 589, column: 24, scope: !2492)
!11358 = !DILocation(line: 589, column: 5, scope: !2492)
!11359 = !DILocation(line: 590, column: 19, scope: !11360)
!11360 = distinct !DILexicalBlock(scope: !2492, file: !939, line: 590, column: 9)
!11361 = !DILocation(line: 590, column: 12, scope: !11360)
!11362 = !DILocation(line: 590, column: 9, scope: !2492)
!11363 = !DILocation(line: 591, column: 9, scope: !11360)
!11364 = !DILocation(line: 593, column: 40, scope: !2492)
!11365 = !DILocation(line: 593, column: 45, scope: !2492)
!11366 = !DILocation(line: 593, column: 50, scope: !2492)
!11367 = !DILocation(line: 593, column: 16, scope: !2492)
!11368 = !DILocation(line: 593, column: 14, scope: !2492)
!11369 = !DILocation(line: 594, column: 34, scope: !2492)
!11370 = !DILocation(line: 594, column: 37, scope: !2492)
!11371 = !DILocation(line: 594, column: 42, scope: !2492)
!11372 = !DILocation(line: 594, column: 13, scope: !2492)
!11373 = !DILocation(line: 594, column: 11, scope: !2492)
!11374 = !DILocation(line: 595, column: 9, scope: !11375)
!11375 = distinct !DILexicalBlock(scope: !2492, file: !939, line: 595, column: 9)
!11376 = !DILocation(line: 595, column: 15, scope: !11375)
!11377 = !DILocation(line: 595, column: 9, scope: !2492)
!11378 = !DILocation(line: 596, column: 9, scope: !11375)
!11379 = !DILocation(line: 598, column: 27, scope: !2492)
!11380 = !DILocation(line: 598, column: 5, scope: !2492)
!11381 = !DILocation(line: 599, column: 27, scope: !2492)
!11382 = !DILocation(line: 599, column: 17, scope: !2492)
!11383 = !DILocation(line: 599, column: 15, scope: !2492)
!11384 = !DILocation(line: 600, column: 9, scope: !11385)
!11385 = distinct !DILexicalBlock(scope: !2492, file: !939, line: 600, column: 9)
!11386 = !DILocation(line: 600, column: 21, scope: !11385)
!11387 = !DILocation(line: 600, column: 19, scope: !11385)
!11388 = !DILocation(line: 600, column: 9, scope: !2492)
!11389 = !DILocation(line: 601, column: 9, scope: !11385)
!11390 = !DILocation(line: 603, column: 34, scope: !2492)
!11391 = !DILocation(line: 603, column: 12, scope: !2492)
!11392 = !DILocation(line: 603, column: 10, scope: !2492)
!11393 = !DILocation(line: 604, column: 9, scope: !11394)
!11394 = distinct !DILexicalBlock(scope: !2492, file: !939, line: 604, column: 9)
!11395 = !DILocation(line: 604, column: 14, scope: !11394)
!11396 = !DILocation(line: 604, column: 19, scope: !11394)
!11397 = !DILocation(line: 604, column: 22, scope: !11398)
!11398 = !DILexicalBlockFile(scope: !11394, file: !939, discriminator: 1)
!11399 = !DILocation(line: 604, column: 27, scope: !11398)
!11400 = !DILocation(line: 604, column: 34, scope: !11398)
!11401 = !DILocation(line: 604, column: 32, scope: !11398)
!11402 = !DILocation(line: 604, column: 9, scope: !11398)
!11403 = !DILocation(line: 605, column: 9, scope: !11394)
!11404 = !DILocation(line: 606, column: 15, scope: !2492)
!11405 = !DILocation(line: 606, column: 19, scope: !2492)
!11406 = !DILocation(line: 606, column: 5, scope: !2492)
!11407 = !DILocation(line: 607, column: 15, scope: !2492)
!11408 = !DILocation(line: 607, column: 19, scope: !2492)
!11409 = !DILocation(line: 607, column: 5, scope: !2492)
!11410 = !DILocation(line: 608, column: 9, scope: !11411)
!11411 = distinct !DILexicalBlock(scope: !2492, file: !939, line: 608, column: 9)
!11412 = !DILocation(line: 608, column: 14, scope: !11411)
!11413 = !DILocation(line: 608, column: 9, scope: !2492)
!11414 = !DILocation(line: 609, column: 22, scope: !11411)
!11415 = !DILocation(line: 609, column: 27, scope: !11411)
!11416 = !DILocation(line: 609, column: 33, scope: !11411)
!11417 = !DILocation(line: 609, column: 41, scope: !11411)
!11418 = !DILocation(line: 609, column: 52, scope: !11411)
!11419 = !DILocation(line: 609, column: 9, scope: !11411)
!11420 = !DILocation(line: 610, column: 16, scope: !11421)
!11421 = distinct !DILexicalBlock(scope: !2492, file: !939, line: 610, column: 9)
!11422 = !DILocation(line: 610, column: 9, scope: !11421)
!11423 = !DILocation(line: 610, column: 9, scope: !2492)
!11424 = !DILocation(line: 611, column: 16, scope: !11421)
!11425 = !DILocation(line: 611, column: 9, scope: !11421)
!11426 = !DILocation(line: 612, column: 10, scope: !2492)
!11427 = !DILocation(line: 613, column: 26, scope: !2492)
!11428 = !DILocation(line: 613, column: 30, scope: !2492)
!11429 = !DILocation(line: 613, column: 35, scope: !2492)
!11430 = !DILocation(line: 613, column: 12, scope: !2492)
!11431 = !DILocation(line: 613, column: 10, scope: !2492)
!11432 = !DILocation(line: 614, column: 9, scope: !11433)
!11433 = distinct !DILexicalBlock(scope: !2492, file: !939, line: 614, column: 9)
!11434 = !DILocation(line: 614, column: 14, scope: !11433)
!11435 = !DILocation(line: 614, column: 9, scope: !2492)
!11436 = !DILocation(line: 615, column: 16, scope: !11433)
!11437 = !DILocation(line: 615, column: 9, scope: !11433)
!11438 = !DILocation(line: 616, column: 14, scope: !11439)
!11439 = distinct !DILexicalBlock(scope: !11433, file: !939, line: 616, column: 14)
!11440 = !DILocation(line: 616, column: 21, scope: !11439)
!11441 = !DILocation(line: 616, column: 19, scope: !11439)
!11442 = !DILocation(line: 616, column: 14, scope: !11433)
!11443 = !DILocation(line: 617, column: 9, scope: !11439)
!11444 = !DILocation(line: 618, column: 13, scope: !2492)
!11445 = !DILocation(line: 618, column: 10, scope: !2492)
!11446 = !DILocation(line: 619, column: 9, scope: !11447)
!11447 = distinct !DILexicalBlock(scope: !2492, file: !939, line: 619, column: 9)
!11448 = !DILocation(line: 619, column: 14, scope: !11447)
!11449 = !DILocation(line: 619, column: 9, scope: !2492)
!11450 = !DILocation(line: 620, column: 22, scope: !11447)
!11451 = !DILocation(line: 620, column: 27, scope: !11447)
!11452 = !DILocation(line: 620, column: 44, scope: !11447)
!11453 = !DILocation(line: 620, column: 34, scope: !11447)
!11454 = !DILocation(line: 620, column: 39, scope: !11447)
!11455 = !DILocation(line: 621, column: 33, scope: !11447)
!11456 = !DILocation(line: 621, column: 23, scope: !11447)
!11457 = !DILocation(line: 621, column: 28, scope: !11447)
!11458 = !DILocation(line: 621, column: 50, scope: !11447)
!11459 = !DILocation(line: 621, column: 55, scope: !11447)
!11460 = !DILocation(line: 621, column: 61, scope: !11447)
!11461 = !DILocation(line: 620, column: 9, scope: !11447)
!11462 = !DILocation(line: 622, column: 22, scope: !2492)
!11463 = !DILocation(line: 622, column: 27, scope: !2492)
!11464 = !DILocation(line: 622, column: 5, scope: !2492)
!11465 = !DILocation(line: 623, column: 25, scope: !2492)
!11466 = !DILocation(line: 623, column: 5, scope: !2492)
!11467 = !DILocation(line: 623, column: 10, scope: !2492)
!11468 = !DILocation(line: 623, column: 23, scope: !2492)
!11469 = !DILocation(line: 624, column: 15, scope: !2492)
!11470 = !DILocation(line: 624, column: 19, scope: !2492)
!11471 = !DILocation(line: 624, column: 35, scope: !2492)
!11472 = !DILocation(line: 624, column: 25, scope: !2492)
!11473 = !DILocation(line: 559, column: 22, scope: !2586, inlinedAt: !11267)
!11474 = !DILocation(line: 559, column: 12, scope: !2586, inlinedAt: !11267)
!11475 = !DILocation(line: 624, column: 23, scope: !2492)
!11476 = !DILocation(line: 624, column: 5, scope: !11477)
!11477 = !DILexicalBlockFile(scope: !2492, file: !939, discriminator: 1)
!11478 = !DILocation(line: 625, column: 5, scope: !2492)
!11479 = !DILocation(line: 626, column: 1, scope: !2492)
!11480 = distinct !DISubprogram(name: "find_body_sid_by_offset", scope: !939, file: !939, line: 432, type: !11481, isLocal: true, isDefinition: true, scopeLine: 433, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!11481 = !DISubroutineType(types: !11482)
!11482 = !{!1014, !2594, !1015}
!11483 = !DILocalVariable(name: "mxf", arg: 1, scope: !11480, file: !939, line: 432, type: !2594)
!11484 = !DILocation(line: 432, column: 48, scope: !11480)
!11485 = !DILocalVariable(name: "offset", arg: 2, scope: !11480, file: !939, line: 432, type: !1015)
!11486 = !DILocation(line: 432, column: 61, scope: !11480)
!11487 = !DILocalVariable(name: "a", scope: !11480, file: !939, line: 435, type: !1014)
!11488 = !DILocation(line: 435, column: 9, scope: !11480)
!11489 = !DILocalVariable(name: "b", scope: !11480, file: !939, line: 435, type: !1014)
!11490 = !DILocation(line: 435, column: 12, scope: !11480)
!11491 = !DILocalVariable(name: "m", scope: !11480, file: !939, line: 435, type: !1014)
!11492 = !DILocation(line: 435, column: 15, scope: !11480)
!11493 = !DILocalVariable(name: "this_partition", scope: !11480, file: !939, line: 436, type: !1015)
!11494 = !DILocation(line: 436, column: 13, scope: !11480)
!11495 = !DILocation(line: 438, column: 7, scope: !11480)
!11496 = !DILocation(line: 439, column: 9, scope: !11480)
!11497 = !DILocation(line: 439, column: 14, scope: !11480)
!11498 = !DILocation(line: 439, column: 7, scope: !11480)
!11499 = !DILocation(line: 441, column: 5, scope: !11480)
!11500 = !DILocation(line: 441, column: 12, scope: !11501)
!11501 = !DILexicalBlockFile(scope: !11480, file: !939, discriminator: 1)
!11502 = !DILocation(line: 441, column: 16, scope: !11501)
!11503 = !DILocation(line: 441, column: 14, scope: !11501)
!11504 = !DILocation(line: 441, column: 18, scope: !11501)
!11505 = !DILocation(line: 441, column: 5, scope: !11501)
!11506 = !DILocation(line: 442, column: 14, scope: !11507)
!11507 = distinct !DILexicalBlock(scope: !11480, file: !939, line: 441, column: 23)
!11508 = !DILocation(line: 442, column: 18, scope: !11507)
!11509 = !DILocation(line: 442, column: 16, scope: !11507)
!11510 = !DILocation(line: 442, column: 21, scope: !11507)
!11511 = !DILocation(line: 442, column: 11, scope: !11507)
!11512 = !DILocation(line: 443, column: 42, scope: !11507)
!11513 = !DILocation(line: 443, column: 26, scope: !11507)
!11514 = !DILocation(line: 443, column: 31, scope: !11507)
!11515 = !DILocation(line: 443, column: 45, scope: !11507)
!11516 = !DILocation(line: 443, column: 24, scope: !11507)
!11517 = !DILocation(line: 444, column: 13, scope: !11518)
!11518 = distinct !DILexicalBlock(scope: !11507, file: !939, line: 444, column: 13)
!11519 = !DILocation(line: 444, column: 31, scope: !11518)
!11520 = !DILocation(line: 444, column: 28, scope: !11518)
!11521 = !DILocation(line: 444, column: 13, scope: !11507)
!11522 = !DILocation(line: 445, column: 17, scope: !11518)
!11523 = !DILocation(line: 445, column: 15, scope: !11518)
!11524 = !DILocation(line: 445, column: 13, scope: !11518)
!11525 = !DILocation(line: 447, column: 17, scope: !11518)
!11526 = !DILocation(line: 447, column: 15, scope: !11518)
!11527 = !DILocation(line: 441, column: 5, scope: !11528)
!11528 = !DILexicalBlockFile(scope: !11480, file: !939, discriminator: 2)
!11529 = distinct !{!11529, !11499}
!11530 = !DILocation(line: 450, column: 9, scope: !11531)
!11531 = distinct !DILexicalBlock(scope: !11480, file: !939, line: 450, column: 9)
!11532 = !DILocation(line: 450, column: 11, scope: !11531)
!11533 = !DILocation(line: 450, column: 9, scope: !11480)
!11534 = !DILocation(line: 451, column: 9, scope: !11531)
!11535 = !DILocation(line: 452, column: 28, scope: !11480)
!11536 = !DILocation(line: 452, column: 12, scope: !11480)
!11537 = !DILocation(line: 452, column: 17, scope: !11480)
!11538 = !DILocation(line: 452, column: 31, scope: !11480)
!11539 = !DILocation(line: 452, column: 5, scope: !11480)
!11540 = !DILocation(line: 453, column: 1, scope: !11480)
!11541 = distinct !DISubprogram(name: "mxf_get_stream_index", scope: !939, file: !939, line: 418, type: !11542, isLocal: true, isDefinition: true, scopeLine: 419, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!11542 = !DISubroutineType(types: !11543)
!11543 = !{!1014, !2495, !2497, !1014}
!11544 = !DILocalVariable(name: "s", arg: 1, scope: !11541, file: !939, line: 418, type: !2495)
!11545 = !DILocation(line: 418, column: 50, scope: !11541)
!11546 = !DILocalVariable(name: "klv", arg: 2, scope: !11541, file: !939, line: 418, type: !2497)
!11547 = !DILocation(line: 418, column: 64, scope: !11541)
!11548 = !DILocalVariable(name: "body_sid", arg: 3, scope: !11541, file: !939, line: 418, type: !1014)
!11549 = !DILocation(line: 418, column: 73, scope: !11541)
!11550 = !DILocalVariable(name: "i", scope: !11541, file: !939, line: 420, type: !1014)
!11551 = !DILocation(line: 420, column: 9, scope: !11541)
!11552 = !DILocation(line: 422, column: 12, scope: !11553)
!11553 = distinct !DILexicalBlock(scope: !11541, file: !939, line: 422, column: 5)
!11554 = !DILocation(line: 422, column: 10, scope: !11553)
!11555 = !DILocation(line: 422, column: 17, scope: !11556)
!11556 = !DILexicalBlockFile(scope: !11557, file: !939, discriminator: 1)
!11557 = distinct !DILexicalBlock(scope: !11553, file: !939, line: 422, column: 5)
!11558 = !DILocation(line: 422, column: 21, scope: !11556)
!11559 = !DILocation(line: 422, column: 24, scope: !11556)
!11560 = !DILocation(line: 422, column: 19, scope: !11556)
!11561 = !DILocation(line: 422, column: 5, scope: !11556)
!11562 = !DILocalVariable(name: "track", scope: !11563, file: !939, line: 423, type: !1108)
!11563 = distinct !DILexicalBlock(scope: !11557, file: !939, line: 422, column: 41)
!11564 = !DILocation(line: 423, column: 19, scope: !11563)
!11565 = !DILocation(line: 423, column: 38, scope: !11563)
!11566 = !DILocation(line: 423, column: 27, scope: !11563)
!11567 = !DILocation(line: 423, column: 30, scope: !11563)
!11568 = !DILocation(line: 423, column: 42, scope: !11563)
!11569 = !DILocation(line: 425, column: 13, scope: !11570)
!11570 = distinct !DILexicalBlock(scope: !11563, file: !939, line: 425, column: 13)
!11571 = !DILocation(line: 425, column: 19, scope: !11570)
!11572 = !DILocation(line: 425, column: 24, scope: !11573)
!11573 = !DILexicalBlockFile(scope: !11570, file: !939, discriminator: 1)
!11574 = !DILocation(line: 425, column: 33, scope: !11573)
!11575 = !DILocation(line: 425, column: 37, scope: !11576)
!11576 = !DILexicalBlockFile(scope: !11570, file: !939, discriminator: 2)
!11577 = !DILocation(line: 425, column: 44, scope: !11576)
!11578 = !DILocation(line: 425, column: 53, scope: !11576)
!11579 = !DILocation(line: 425, column: 56, scope: !11580)
!11580 = !DILexicalBlockFile(scope: !11570, file: !939, discriminator: 3)
!11581 = !DILocation(line: 425, column: 63, scope: !11580)
!11582 = !DILocation(line: 425, column: 75, scope: !11580)
!11583 = !DILocation(line: 425, column: 72, scope: !11580)
!11584 = !DILocation(line: 425, column: 85, scope: !11580)
!11585 = !DILocation(line: 425, column: 96, scope: !11586)
!11586 = !DILexicalBlockFile(scope: !11570, file: !939, discriminator: 4)
!11587 = !DILocation(line: 425, column: 101, scope: !11586)
!11588 = !DILocation(line: 425, column: 105, scope: !11586)
!11589 = !DILocation(line: 425, column: 140, scope: !11586)
!11590 = !DILocation(line: 425, column: 147, scope: !11586)
!11591 = !DILocation(line: 425, column: 89, scope: !11586)
!11592 = !DILocation(line: 425, column: 13, scope: !11586)
!11593 = !DILocation(line: 426, column: 20, scope: !11570)
!11594 = !DILocation(line: 426, column: 13, scope: !11570)
!11595 = !DILocation(line: 427, column: 5, scope: !11563)
!11596 = !DILocation(line: 422, column: 37, scope: !11597)
!11597 = !DILexicalBlockFile(scope: !11557, file: !939, discriminator: 2)
!11598 = !DILocation(line: 422, column: 5, scope: !11597)
!11599 = distinct !{!11599, !11600}
!11600 = !DILocation(line: 422, column: 5, scope: !11541)
!11601 = !DILocation(line: 429, column: 12, scope: !11541)
!11602 = !DILocation(line: 429, column: 15, scope: !11541)
!11603 = !DILocation(line: 429, column: 26, scope: !11541)
!11604 = !DILocation(line: 429, column: 31, scope: !11541)
!11605 = !DILocation(line: 429, column: 34, scope: !11606)
!11606 = !DILexicalBlockFile(scope: !11541, file: !939, discriminator: 1)
!11607 = !DILocation(line: 429, column: 37, scope: !11606)
!11608 = !DILocation(line: 429, column: 49, scope: !11606)
!11609 = !DILocation(line: 429, column: 31, scope: !11606)
!11610 = !DILocation(line: 429, column: 12, scope: !11611)
!11611 = !DILexicalBlockFile(scope: !11541, file: !939, discriminator: 2)
!11612 = !DILocation(line: 429, column: 5, scope: !11611)
!11613 = !DILocation(line: 430, column: 1, scope: !11541)
!11614 = distinct !DISubprogram(name: "mxf_set_current_edit_unit", scope: !939, file: !939, line: 3327, type: !11615, isLocal: true, isDefinition: true, scopeLine: 3328, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!11615 = !DISubroutineType(types: !11616)
!11616 = !{!1015, !2594, !1569, !1015, !1014}
!11617 = !DILocation(line: 159, column: 77, scope: !3577, inlinedAt: !11618)
!11618 = distinct !DILocation(line: 3331, column: 74, scope: !11614)
!11619 = !DILocation(line: 161, column: 16, scope: !3577, inlinedAt: !11618)
!11620 = !DILocalVariable(name: "mxf", arg: 1, scope: !11614, file: !939, line: 3327, type: !2594)
!11621 = !DILocation(line: 3327, column: 54, scope: !11614)
!11622 = !DILocalVariable(name: "st", arg: 2, scope: !11614, file: !939, line: 3327, type: !1569)
!11623 = !DILocation(line: 3327, column: 69, scope: !11614)
!11624 = !DILocalVariable(name: "current_offset", arg: 3, scope: !11614, file: !939, line: 3327, type: !1015)
!11625 = !DILocation(line: 3327, column: 81, scope: !11614)
!11626 = !DILocalVariable(name: "resync", arg: 4, scope: !11614, file: !939, line: 3327, type: !1014)
!11627 = !DILocation(line: 3327, column: 101, scope: !11614)
!11628 = !DILocalVariable(name: "next_ofs", scope: !11614, file: !939, line: 3329, type: !1015)
!11629 = !DILocation(line: 3329, column: 13, scope: !11614)
!11630 = !DILocalVariable(name: "track", scope: !11614, file: !939, line: 3330, type: !1108)
!11631 = !DILocation(line: 3330, column: 15, scope: !11614)
!11632 = !DILocation(line: 3330, column: 23, scope: !11614)
!11633 = !DILocation(line: 3330, column: 27, scope: !11614)
!11634 = !DILocalVariable(name: "edit_unit", scope: !11614, file: !939, line: 3331, type: !1015)
!11635 = !DILocation(line: 3331, column: 13, scope: !11614)
!11636 = !DILocation(line: 3331, column: 38, scope: !11614)
!11637 = !DILocation(line: 3331, column: 45, scope: !11614)
!11638 = !DILocation(line: 3331, column: 59, scope: !11614)
!11639 = !DILocation(line: 3331, column: 63, scope: !11614)
!11640 = !DILocation(line: 3331, column: 83, scope: !11614)
!11641 = !DILocation(line: 3331, column: 90, scope: !11614)
!11642 = !DILocation(line: 3331, column: 74, scope: !11614)
!11643 = !DILocation(line: 161, column: 20, scope: !3577, inlinedAt: !11618)
!11644 = !DILocation(line: 161, column: 24, scope: !3577, inlinedAt: !11618)
!11645 = !DILocation(line: 161, column: 31, scope: !3577, inlinedAt: !11618)
!11646 = !DILocation(line: 162, column: 12, scope: !3577, inlinedAt: !11618)
!11647 = !DILocation(line: 162, column: 5, scope: !3577, inlinedAt: !11618)
!11648 = !DILocation(line: 3331, column: 25, scope: !11614)
!11649 = !DILocation(line: 3331, column: 25, scope: !11650)
!11650 = !DILexicalBlockFile(scope: !11614, file: !939, discriminator: 1)
!11651 = !DILocalVariable(name: "new_edit_unit", scope: !11614, file: !939, line: 3332, type: !1015)
!11652 = !DILocation(line: 3332, column: 13, scope: !11614)
!11653 = !DILocalVariable(name: "t", scope: !11614, file: !939, line: 3333, type: !2647)
!11654 = !DILocation(line: 3333, column: 20, scope: !11614)
!11655 = !DILocation(line: 3333, column: 45, scope: !11614)
!11656 = !DILocation(line: 3333, column: 50, scope: !11614)
!11657 = !DILocation(line: 3333, column: 57, scope: !11614)
!11658 = !DILocation(line: 3333, column: 24, scope: !11614)
!11659 = !DILocation(line: 3335, column: 10, scope: !11660)
!11660 = distinct !DILexicalBlock(scope: !11614, file: !939, line: 3335, column: 9)
!11661 = !DILocation(line: 3335, column: 12, scope: !11660)
!11662 = !DILocation(line: 3335, column: 15, scope: !11663)
!11663 = !DILexicalBlockFile(scope: !11660, file: !939, discriminator: 1)
!11664 = !DILocation(line: 3335, column: 22, scope: !11663)
!11665 = !DILocation(line: 3335, column: 31, scope: !11663)
!11666 = !DILocation(line: 3335, column: 9, scope: !11663)
!11667 = !DILocation(line: 3336, column: 9, scope: !11660)
!11668 = !DILocation(line: 3338, column: 39, scope: !11669)
!11669 = distinct !DILexicalBlock(scope: !11614, file: !939, line: 3338, column: 9)
!11670 = !DILocation(line: 3338, column: 44, scope: !11669)
!11671 = !DILocation(line: 3338, column: 47, scope: !11669)
!11672 = !DILocation(line: 3338, column: 59, scope: !11669)
!11673 = !DILocation(line: 3338, column: 66, scope: !11669)
!11674 = !DILocation(line: 3338, column: 57, scope: !11669)
!11675 = !DILocation(line: 3338, column: 89, scope: !11669)
!11676 = !DILocation(line: 3338, column: 96, scope: !11669)
!11677 = !DILocation(line: 3338, column: 9, scope: !11669)
!11678 = !DILocation(line: 3338, column: 132, scope: !11669)
!11679 = !DILocation(line: 3338, column: 136, scope: !11669)
!11680 = !DILocation(line: 3339, column: 47, scope: !11669)
!11681 = !DILocation(line: 3339, column: 52, scope: !11669)
!11682 = !DILocation(line: 3339, column: 55, scope: !11669)
!11683 = !DILocation(line: 3339, column: 21, scope: !11669)
!11684 = !DILocation(line: 3339, column: 19, scope: !11669)
!11685 = !DILocation(line: 3339, column: 66, scope: !11669)
!11686 = !DILocation(line: 3338, column: 9, scope: !11650)
!11687 = !DILocation(line: 3340, column: 16, scope: !11688)
!11688 = distinct !DILexicalBlock(scope: !11669, file: !939, line: 3339, column: 72)
!11689 = !DILocation(line: 3340, column: 21, scope: !11688)
!11690 = !DILocation(line: 3340, column: 9, scope: !11688)
!11691 = !DILocation(line: 3341, column: 9, scope: !11688)
!11692 = !DILocation(line: 3345, column: 9, scope: !11693)
!11693 = distinct !DILexicalBlock(scope: !11614, file: !939, line: 3345, column: 9)
!11694 = !DILocation(line: 3345, column: 20, scope: !11693)
!11695 = !DILocation(line: 3345, column: 18, scope: !11693)
!11696 = !DILocation(line: 3345, column: 9, scope: !11614)
!11697 = !DILocation(line: 3346, column: 16, scope: !11693)
!11698 = !DILocation(line: 3346, column: 9, scope: !11693)
!11699 = !DILocation(line: 3348, column: 10, scope: !11700)
!11700 = distinct !DILexicalBlock(scope: !11614, file: !939, line: 3348, column: 9)
!11701 = !DILocation(line: 3348, column: 9, scope: !11614)
!11702 = !DILocation(line: 3349, column: 16, scope: !11703)
!11703 = distinct !DILexicalBlock(scope: !11700, file: !939, line: 3348, column: 18)
!11704 = !DILocation(line: 3349, column: 21, scope: !11703)
!11705 = !DILocation(line: 3349, column: 94, scope: !11703)
!11706 = !DILocation(line: 3349, column: 98, scope: !11703)
!11707 = !DILocation(line: 3349, column: 9, scope: !11703)
!11708 = !DILocation(line: 3350, column: 9, scope: !11703)
!11709 = !DILocation(line: 3353, column: 38, scope: !11710)
!11710 = distinct !DILexicalBlock(scope: !11614, file: !939, line: 3353, column: 9)
!11711 = !DILocation(line: 3353, column: 43, scope: !11710)
!11712 = !DILocation(line: 3353, column: 50, scope: !11710)
!11713 = !DILocation(line: 3353, column: 65, scope: !11710)
!11714 = !DILocation(line: 3353, column: 9, scope: !11710)
!11715 = !DILocation(line: 3353, column: 86, scope: !11710)
!11716 = !DILocation(line: 3353, column: 90, scope: !11710)
!11717 = !DILocation(line: 3353, column: 93, scope: !11718)
!11718 = !DILexicalBlockFile(scope: !11710, file: !939, discriminator: 1)
!11719 = !DILocation(line: 3353, column: 107, scope: !11718)
!11720 = !DILocation(line: 3353, column: 9, scope: !11718)
!11721 = !DILocation(line: 3354, column: 16, scope: !11722)
!11722 = distinct !DILexicalBlock(scope: !11710, file: !939, line: 3353, column: 113)
!11723 = !DILocation(line: 3354, column: 21, scope: !11722)
!11724 = !DILocation(line: 3354, column: 83, scope: !11722)
!11725 = !DILocation(line: 3354, column: 87, scope: !11722)
!11726 = !DILocation(line: 3354, column: 9, scope: !11722)
!11727 = !DILocation(line: 3355, column: 9, scope: !11722)
!11728 = !DILocation(line: 3358, column: 18, scope: !11614)
!11729 = !DILocation(line: 3359, column: 52, scope: !11614)
!11730 = !DILocation(line: 3359, column: 57, scope: !11614)
!11731 = !DILocation(line: 3359, column: 61, scope: !11614)
!11732 = !DILocation(line: 3359, column: 27, scope: !11614)
!11733 = !DILocation(line: 3359, column: 5, scope: !11614)
!11734 = !DILocation(line: 3359, column: 12, scope: !11614)
!11735 = !DILocation(line: 3359, column: 25, scope: !11614)
!11736 = !DILocation(line: 3360, column: 12, scope: !11614)
!11737 = !DILocation(line: 3360, column: 17, scope: !11614)
!11738 = !DILocation(line: 3360, column: 111, scope: !11614)
!11739 = !DILocation(line: 3360, column: 115, scope: !11614)
!11740 = !DILocation(line: 3360, column: 122, scope: !11614)
!11741 = !DILocation(line: 3360, column: 133, scope: !11614)
!11742 = !DILocation(line: 3360, column: 5, scope: !11614)
!11743 = !DILocation(line: 3362, column: 38, scope: !11614)
!11744 = !DILocation(line: 3362, column: 43, scope: !11614)
!11745 = !DILocation(line: 3362, column: 47, scope: !11614)
!11746 = !DILocation(line: 3362, column: 12, scope: !11614)
!11747 = !DILocation(line: 3362, column: 5, scope: !11614)
!11748 = !DILocation(line: 3363, column: 1, scope: !11614)
!11749 = distinct !DISubprogram(name: "mxf_get_d10_aes3_packet", scope: !939, file: !939, line: 531, type: !11750, isLocal: true, isDefinition: true, scopeLine: 532, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!11750 = !DISubroutineType(types: !11751)
!11751 = !{!1014, !1501, !1569, !1335, !1015}
!11752 = !DILocalVariable(name: "b", arg: 1, scope: !11753, file: !11754, line: 89, type: !1405)
!11753 = distinct !DISubprogram(name: "bytestream_put_le24", scope: !11754, file: !11754, line: 89, type: !11755, isLocal: true, isDefinition: true, scopeLine: 89, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!11754 = !DIFile(filename: "./libavcodec/bytestream.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs")
!11755 = !DISubroutineType(types: !11756)
!11756 = !{null, !1405, !11757}
!11757 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1006)
!11758 = !DILocation(line: 89, column: 312, scope: !11753, inlinedAt: !11759)
!11759 = distinct !DILocation(line: 549, column: 17, scope: !11760)
!11760 = distinct !DILexicalBlock(scope: !11761, file: !939, line: 548, column: 17)
!11761 = distinct !DILexicalBlock(scope: !11762, file: !939, line: 546, column: 54)
!11762 = distinct !DILexicalBlock(scope: !11763, file: !939, line: 546, column: 9)
!11763 = distinct !DILexicalBlock(scope: !11764, file: !939, line: 546, column: 9)
!11764 = distinct !DILexicalBlock(scope: !11765, file: !939, line: 545, column: 63)
!11765 = distinct !DILexicalBlock(scope: !11766, file: !939, line: 545, column: 5)
!11766 = distinct !DILexicalBlock(scope: !11749, file: !939, line: 545, column: 5)
!11767 = !DILocalVariable(name: "value", arg: 2, scope: !11753, file: !11754, line: 89, type: !11757)
!11768 = !DILocation(line: 89, column: 334, scope: !11753, inlinedAt: !11759)
!11769 = !DILocalVariable(name: "b", arg: 1, scope: !11770, file: !11754, line: 90, type: !1405)
!11770 = distinct !DISubprogram(name: "bytestream_put_le16", scope: !11754, file: !11754, line: 90, type: !11755, isLocal: true, isDefinition: true, scopeLine: 90, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!11771 = !DILocation(line: 90, column: 246, scope: !11770, inlinedAt: !11772)
!11772 = distinct !DILocation(line: 551, column: 17, scope: !11760)
!11773 = !DILocalVariable(name: "value", arg: 2, scope: !11770, file: !11754, line: 90, type: !11757)
!11774 = !DILocation(line: 90, column: 268, scope: !11770, inlinedAt: !11772)
!11775 = !DILocalVariable(name: "b", arg: 1, scope: !11776, file: !11754, line: 88, type: !2093)
!11776 = distinct !DISubprogram(name: "bytestream_get_le32", scope: !11754, file: !11754, line: 88, type: !11777, isLocal: true, isDefinition: true, scopeLine: 88, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!11777 = !DISubroutineType(types: !11778)
!11778 = !{!1006, !2093}
!11779 = !DILocation(line: 88, column: 95, scope: !11776, inlinedAt: !11780)
!11780 = distinct !DILocation(line: 547, column: 31, scope: !11761)
!11781 = !DILocalVariable(name: "pb", arg: 1, scope: !11749, file: !939, line: 531, type: !1501)
!11782 = !DILocation(line: 531, column: 49, scope: !11749)
!11783 = !DILocalVariable(name: "st", arg: 2, scope: !11749, file: !939, line: 531, type: !1569)
!11784 = !DILocation(line: 531, column: 63, scope: !11749)
!11785 = !DILocalVariable(name: "pkt", arg: 3, scope: !11749, file: !939, line: 531, type: !1335)
!11786 = !DILocation(line: 531, column: 77, scope: !11749)
!11787 = !DILocalVariable(name: "length", arg: 4, scope: !11749, file: !939, line: 531, type: !1015)
!11788 = !DILocation(line: 531, column: 90, scope: !11749)
!11789 = !DILocalVariable(name: "buf_ptr", scope: !11749, file: !939, line: 533, type: !1530)
!11790 = !DILocation(line: 533, column: 20, scope: !11749)
!11791 = !DILocalVariable(name: "end_ptr", scope: !11749, file: !939, line: 533, type: !1530)
!11792 = !DILocation(line: 533, column: 30, scope: !11749)
!11793 = !DILocalVariable(name: "data_ptr", scope: !11749, file: !939, line: 534, type: !1017)
!11794 = !DILocation(line: 534, column: 14, scope: !11749)
!11795 = !DILocalVariable(name: "i", scope: !11749, file: !939, line: 535, type: !1014)
!11796 = !DILocation(line: 535, column: 9, scope: !11749)
!11797 = !DILocation(line: 537, column: 9, scope: !11798)
!11798 = distinct !DILexicalBlock(scope: !11749, file: !939, line: 537, column: 9)
!11799 = !DILocation(line: 537, column: 16, scope: !11798)
!11800 = !DILocation(line: 537, column: 9, scope: !11749)
!11801 = !DILocation(line: 538, column: 9, scope: !11798)
!11802 = !DILocation(line: 539, column: 28, scope: !11749)
!11803 = !DILocation(line: 539, column: 32, scope: !11749)
!11804 = !DILocation(line: 539, column: 37, scope: !11749)
!11805 = !DILocation(line: 539, column: 14, scope: !11749)
!11806 = !DILocation(line: 539, column: 12, scope: !11749)
!11807 = !DILocation(line: 540, column: 9, scope: !11808)
!11808 = distinct !DILexicalBlock(scope: !11749, file: !939, line: 540, column: 9)
!11809 = !DILocation(line: 540, column: 16, scope: !11808)
!11810 = !DILocation(line: 540, column: 9, scope: !11749)
!11811 = !DILocation(line: 541, column: 16, scope: !11808)
!11812 = !DILocation(line: 541, column: 9, scope: !11808)
!11813 = !DILocation(line: 542, column: 16, scope: !11749)
!11814 = !DILocation(line: 542, column: 21, scope: !11749)
!11815 = !DILocation(line: 542, column: 14, scope: !11749)
!11816 = !DILocation(line: 543, column: 15, scope: !11749)
!11817 = !DILocation(line: 543, column: 20, scope: !11749)
!11818 = !DILocation(line: 543, column: 27, scope: !11749)
!11819 = !DILocation(line: 543, column: 25, scope: !11749)
!11820 = !DILocation(line: 543, column: 13, scope: !11749)
!11821 = !DILocation(line: 544, column: 15, scope: !11749)
!11822 = !DILocation(line: 544, column: 20, scope: !11749)
!11823 = !DILocation(line: 544, column: 25, scope: !11749)
!11824 = !DILocation(line: 544, column: 13, scope: !11749)
!11825 = !DILocation(line: 545, column: 5, scope: !11749)
!11826 = !DILocation(line: 545, column: 12, scope: !11827)
!11827 = !DILexicalBlockFile(scope: !11765, file: !939, discriminator: 1)
!11828 = !DILocation(line: 545, column: 22, scope: !11827)
!11829 = !DILocation(line: 545, column: 20, scope: !11827)
!11830 = !DILocation(line: 545, column: 33, scope: !11827)
!11831 = !DILocation(line: 545, column: 37, scope: !11827)
!11832 = !DILocation(line: 545, column: 47, scope: !11827)
!11833 = !DILocation(line: 545, column: 56, scope: !11827)
!11834 = !DILocation(line: 545, column: 30, scope: !11827)
!11835 = !DILocation(line: 545, column: 5, scope: !11827)
!11836 = !DILocation(line: 546, column: 16, scope: !11763)
!11837 = !DILocation(line: 546, column: 14, scope: !11763)
!11838 = !DILocation(line: 546, column: 21, scope: !11839)
!11839 = !DILexicalBlockFile(scope: !11762, file: !939, discriminator: 1)
!11840 = !DILocation(line: 546, column: 25, scope: !11839)
!11841 = !DILocation(line: 546, column: 29, scope: !11839)
!11842 = !DILocation(line: 546, column: 39, scope: !11839)
!11843 = !DILocation(line: 546, column: 23, scope: !11839)
!11844 = !DILocation(line: 546, column: 9, scope: !11839)
!11845 = !DILocalVariable(name: "sample", scope: !11761, file: !939, line: 547, type: !1004)
!11846 = !DILocation(line: 547, column: 22, scope: !11761)
!11847 = !DILocation(line: 547, column: 31, scope: !11761)
!11848 = !DILocation(line: 88, column: 102, scope: !11776, inlinedAt: !11780)
!11849 = !DILocation(line: 88, column: 105, scope: !11776, inlinedAt: !11780)
!11850 = !DILocation(line: 88, column: 151, scope: !11776, inlinedAt: !11780)
!11851 = !DILocation(line: 88, column: 150, scope: !11776, inlinedAt: !11780)
!11852 = !DILocation(line: 88, column: 153, scope: !11776, inlinedAt: !11780)
!11853 = !DILocation(line: 88, column: 160, scope: !11776, inlinedAt: !11780)
!11854 = !DILocation(line: 548, column: 17, scope: !11760)
!11855 = !DILocation(line: 548, column: 21, scope: !11760)
!11856 = !DILocation(line: 548, column: 31, scope: !11760)
!11857 = !DILocation(line: 548, column: 53, scope: !11760)
!11858 = !DILocation(line: 548, column: 17, scope: !11761)
!11859 = !DILocation(line: 549, column: 49, scope: !11760)
!11860 = !DILocation(line: 549, column: 56, scope: !11760)
!11861 = !DILocation(line: 549, column: 62, scope: !11760)
!11862 = !DILocation(line: 549, column: 17, scope: !11760)
!11863 = !DILocation(line: 89, column: 371, scope: !11864, inlinedAt: !11759)
!11864 = !DILexicalBlockFile(scope: !11865, file: !11754, discriminator: 1)
!11865 = distinct !DILexicalBlock(scope: !11753, file: !11754, line: 89, column: 346)
!11866 = !DILocation(line: 89, column: 370, scope: !11864, inlinedAt: !11759)
!11867 = !DILocation(line: 89, column: 361, scope: !11864, inlinedAt: !11759)
!11868 = !DILocation(line: 89, column: 360, scope: !11864, inlinedAt: !11759)
!11869 = !DILocation(line: 89, column: 368, scope: !11864, inlinedAt: !11759)
!11870 = !DILocation(line: 89, column: 402, scope: !11864, inlinedAt: !11759)
!11871 = !DILocation(line: 89, column: 408, scope: !11864, inlinedAt: !11759)
!11872 = !DILocation(line: 89, column: 401, scope: !11864, inlinedAt: !11759)
!11873 = !DILocation(line: 89, column: 392, scope: !11864, inlinedAt: !11759)
!11874 = !DILocation(line: 89, column: 391, scope: !11864, inlinedAt: !11759)
!11875 = !DILocation(line: 89, column: 379, scope: !11864, inlinedAt: !11759)
!11876 = !DILocation(line: 89, column: 399, scope: !11864, inlinedAt: !11759)
!11877 = !DILocation(line: 89, column: 436, scope: !11864, inlinedAt: !11759)
!11878 = !DILocation(line: 89, column: 442, scope: !11864, inlinedAt: !11759)
!11879 = !DILocation(line: 89, column: 435, scope: !11864, inlinedAt: !11759)
!11880 = !DILocation(line: 89, column: 426, scope: !11864, inlinedAt: !11759)
!11881 = !DILocation(line: 89, column: 425, scope: !11864, inlinedAt: !11759)
!11882 = !DILocation(line: 89, column: 413, scope: !11864, inlinedAt: !11759)
!11883 = !DILocation(line: 89, column: 433, scope: !11864, inlinedAt: !11759)
!11884 = !DILocation(line: 89, column: 462, scope: !11885, inlinedAt: !11759)
!11885 = !DILexicalBlockFile(scope: !11753, file: !11754, discriminator: 2)
!11886 = !DILocation(line: 89, column: 465, scope: !11885, inlinedAt: !11759)
!11887 = !DILocation(line: 551, column: 49, scope: !11760)
!11888 = !DILocation(line: 551, column: 56, scope: !11760)
!11889 = !DILocation(line: 551, column: 63, scope: !11760)
!11890 = !DILocation(line: 551, column: 17, scope: !11760)
!11891 = !DILocation(line: 90, column: 316, scope: !11770, inlinedAt: !11772)
!11892 = !DILocation(line: 90, column: 315, scope: !11770, inlinedAt: !11772)
!11893 = !DILocation(line: 90, column: 305, scope: !11770, inlinedAt: !11772)
!11894 = !DILocation(line: 90, column: 304, scope: !11770, inlinedAt: !11772)
!11895 = !DILocation(line: 90, column: 310, scope: !11770, inlinedAt: !11772)
!11896 = !DILocation(line: 90, column: 313, scope: !11770, inlinedAt: !11772)
!11897 = !DILocation(line: 90, column: 327, scope: !11770, inlinedAt: !11772)
!11898 = !DILocation(line: 90, column: 330, scope: !11770, inlinedAt: !11772)
!11899 = !DILocation(line: 552, column: 9, scope: !11761)
!11900 = !DILocation(line: 546, column: 50, scope: !11901)
!11901 = !DILexicalBlockFile(scope: !11762, file: !939, discriminator: 2)
!11902 = !DILocation(line: 546, column: 9, scope: !11901)
!11903 = distinct !{!11903, !11904}
!11904 = !DILocation(line: 546, column: 9, scope: !11764)
!11905 = !DILocation(line: 553, column: 25, scope: !11764)
!11906 = !DILocation(line: 553, column: 29, scope: !11764)
!11907 = !DILocation(line: 553, column: 39, scope: !11764)
!11908 = !DILocation(line: 553, column: 47, scope: !11764)
!11909 = !DILocation(line: 553, column: 23, scope: !11764)
!11910 = !DILocation(line: 553, column: 17, scope: !11764)
!11911 = !DILocation(line: 545, column: 5, scope: !11912)
!11912 = !DILexicalBlockFile(scope: !11765, file: !939, discriminator: 2)
!11913 = distinct !{!11913, !11825}
!11914 = !DILocation(line: 555, column: 22, scope: !11749)
!11915 = !DILocation(line: 555, column: 27, scope: !11749)
!11916 = !DILocation(line: 555, column: 38, scope: !11749)
!11917 = !DILocation(line: 555, column: 43, scope: !11749)
!11918 = !DILocation(line: 555, column: 36, scope: !11749)
!11919 = !DILocation(line: 555, column: 5, scope: !11749)
!11920 = !DILocation(line: 556, column: 5, scope: !11749)
!11921 = !DILocation(line: 557, column: 1, scope: !11749)
!11922 = distinct !DISubprogram(name: "mxf_get_eia608_packet", scope: !939, file: !939, line: 455, type: !11923, isLocal: true, isDefinition: true, scopeLine: 456, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!11923 = !DISubroutineType(types: !11924)
!11924 = !{!1014, !2495, !1569, !1335, !1015}
!11925 = !DILocalVariable(name: "s", arg: 1, scope: !11922, file: !939, line: 455, type: !2495)
!11926 = !DILocation(line: 455, column: 51, scope: !11922)
!11927 = !DILocalVariable(name: "st", arg: 2, scope: !11922, file: !939, line: 455, type: !1569)
!11928 = !DILocation(line: 455, column: 64, scope: !11922)
!11929 = !DILocalVariable(name: "pkt", arg: 3, scope: !11922, file: !939, line: 455, type: !1335)
!11930 = !DILocation(line: 455, column: 78, scope: !11922)
!11931 = !DILocalVariable(name: "length", arg: 4, scope: !11922, file: !939, line: 455, type: !1015)
!11932 = !DILocation(line: 455, column: 91, scope: !11922)
!11933 = !DILocalVariable(name: "count", scope: !11922, file: !939, line: 457, type: !1014)
!11934 = !DILocation(line: 457, column: 9, scope: !11922)
!11935 = !DILocation(line: 457, column: 27, scope: !11922)
!11936 = !DILocation(line: 457, column: 30, scope: !11922)
!11937 = !DILocation(line: 457, column: 17, scope: !11922)
!11938 = !DILocalVariable(name: "cdp_identifier", scope: !11922, file: !939, line: 458, type: !1014)
!11939 = !DILocation(line: 458, column: 9, scope: !11922)
!11940 = !DILocalVariable(name: "cdp_length", scope: !11922, file: !939, line: 458, type: !1014)
!11941 = !DILocation(line: 458, column: 25, scope: !11922)
!11942 = !DILocalVariable(name: "cdp_footer_id", scope: !11922, file: !939, line: 458, type: !1014)
!11943 = !DILocation(line: 458, column: 37, scope: !11922)
!11944 = !DILocalVariable(name: "ccdata_id", scope: !11922, file: !939, line: 458, type: !1014)
!11945 = !DILocation(line: 458, column: 52, scope: !11922)
!11946 = !DILocalVariable(name: "cc_count", scope: !11922, file: !939, line: 458, type: !1014)
!11947 = !DILocation(line: 458, column: 63, scope: !11922)
!11948 = !DILocalVariable(name: "line_num", scope: !11922, file: !939, line: 459, type: !1014)
!11949 = !DILocation(line: 459, column: 9, scope: !11922)
!11950 = !DILocalVariable(name: "sample_coding", scope: !11922, file: !939, line: 459, type: !1014)
!11951 = !DILocation(line: 459, column: 19, scope: !11922)
!11952 = !DILocalVariable(name: "sample_count", scope: !11922, file: !939, line: 459, type: !1014)
!11953 = !DILocation(line: 459, column: 34, scope: !11922)
!11954 = !DILocalVariable(name: "did", scope: !11922, file: !939, line: 460, type: !1014)
!11955 = !DILocation(line: 460, column: 9, scope: !11922)
!11956 = !DILocalVariable(name: "sdid", scope: !11922, file: !939, line: 460, type: !1014)
!11957 = !DILocation(line: 460, column: 14, scope: !11922)
!11958 = !DILocalVariable(name: "data_length", scope: !11922, file: !939, line: 460, type: !1014)
!11959 = !DILocation(line: 460, column: 20, scope: !11922)
!11960 = !DILocalVariable(name: "i", scope: !11922, file: !939, line: 461, type: !1014)
!11961 = !DILocation(line: 461, column: 9, scope: !11922)
!11962 = !DILocalVariable(name: "ret", scope: !11922, file: !939, line: 461, type: !1014)
!11963 = !DILocation(line: 461, column: 12, scope: !11922)
!11964 = !DILocation(line: 463, column: 9, scope: !11965)
!11965 = distinct !DILexicalBlock(scope: !11922, file: !939, line: 463, column: 9)
!11966 = !DILocation(line: 463, column: 15, scope: !11965)
!11967 = !DILocation(line: 463, column: 9, scope: !11922)
!11968 = !DILocation(line: 464, column: 16, scope: !11965)
!11969 = !DILocation(line: 464, column: 81, scope: !11965)
!11970 = !DILocation(line: 464, column: 9, scope: !11965)
!11971 = !DILocation(line: 466, column: 12, scope: !11972)
!11972 = distinct !DILexicalBlock(scope: !11922, file: !939, line: 466, column: 5)
!11973 = !DILocation(line: 466, column: 10, scope: !11972)
!11974 = !DILocation(line: 466, column: 17, scope: !11975)
!11975 = !DILexicalBlockFile(scope: !11976, file: !939, discriminator: 1)
!11976 = distinct !DILexicalBlock(scope: !11972, file: !939, line: 466, column: 5)
!11977 = !DILocation(line: 466, column: 21, scope: !11975)
!11978 = !DILocation(line: 466, column: 19, scope: !11975)
!11979 = !DILocation(line: 466, column: 5, scope: !11975)
!11980 = !DILocation(line: 467, column: 13, scope: !11981)
!11981 = distinct !DILexicalBlock(scope: !11982, file: !939, line: 467, column: 13)
!11982 = distinct !DILexicalBlock(scope: !11976, file: !939, line: 466, column: 33)
!11983 = !DILocation(line: 467, column: 20, scope: !11981)
!11984 = !DILocation(line: 467, column: 13, scope: !11982)
!11985 = !DILocation(line: 468, column: 20, scope: !11986)
!11986 = distinct !DILexicalBlock(scope: !11981, file: !939, line: 467, column: 25)
!11987 = !DILocation(line: 468, column: 78, scope: !11986)
!11988 = !DILocation(line: 468, column: 13, scope: !11986)
!11989 = !DILocation(line: 469, column: 13, scope: !11986)
!11990 = !DILocation(line: 471, column: 30, scope: !11982)
!11991 = !DILocation(line: 471, column: 33, scope: !11982)
!11992 = !DILocation(line: 471, column: 20, scope: !11982)
!11993 = !DILocation(line: 471, column: 18, scope: !11982)
!11994 = !DILocation(line: 472, column: 17, scope: !11982)
!11995 = !DILocation(line: 472, column: 20, scope: !11982)
!11996 = !DILocation(line: 472, column: 9, scope: !11982)
!11997 = !DILocation(line: 473, column: 33, scope: !11982)
!11998 = !DILocation(line: 473, column: 36, scope: !11982)
!11999 = !DILocation(line: 473, column: 25, scope: !11982)
!12000 = !DILocation(line: 473, column: 23, scope: !11982)
!12001 = !DILocation(line: 474, column: 34, scope: !11982)
!12002 = !DILocation(line: 474, column: 37, scope: !11982)
!12003 = !DILocation(line: 474, column: 24, scope: !11982)
!12004 = !DILocation(line: 474, column: 22, scope: !11982)
!12005 = !DILocation(line: 475, column: 27, scope: !11982)
!12006 = !DILocation(line: 475, column: 25, scope: !11982)
!12007 = !DILocation(line: 475, column: 19, scope: !11982)
!12008 = !DILocation(line: 475, column: 16, scope: !11982)
!12009 = !DILocation(line: 476, column: 13, scope: !12010)
!12010 = distinct !DILexicalBlock(scope: !11982, file: !939, line: 476, column: 13)
!12011 = !DILocation(line: 476, column: 22, scope: !12010)
!12012 = !DILocation(line: 476, column: 27, scope: !12010)
!12013 = !DILocation(line: 476, column: 30, scope: !12014)
!12014 = !DILexicalBlockFile(scope: !12010, file: !939, discriminator: 1)
!12015 = !DILocation(line: 476, column: 39, scope: !12014)
!12016 = !DILocation(line: 476, column: 13, scope: !12014)
!12017 = !DILocation(line: 477, column: 13, scope: !12010)
!12018 = !DILocation(line: 478, column: 13, scope: !12019)
!12019 = distinct !DILexicalBlock(scope: !11982, file: !939, line: 478, column: 13)
!12020 = !DILocation(line: 478, column: 27, scope: !12019)
!12021 = !DILocation(line: 478, column: 32, scope: !12019)
!12022 = !DILocation(line: 478, column: 35, scope: !12023)
!12023 = !DILexicalBlockFile(scope: !12019, file: !939, discriminator: 1)
!12024 = !DILocation(line: 478, column: 49, scope: !12023)
!12025 = !DILocation(line: 478, column: 54, scope: !12023)
!12026 = !DILocation(line: 478, column: 57, scope: !12027)
!12027 = !DILexicalBlockFile(scope: !12019, file: !939, discriminator: 2)
!12028 = !DILocation(line: 478, column: 71, scope: !12027)
!12029 = !DILocation(line: 478, column: 13, scope: !12027)
!12030 = !DILocation(line: 479, column: 20, scope: !12031)
!12031 = distinct !DILexicalBlock(scope: !12019, file: !939, line: 478, column: 77)
!12032 = !DILocation(line: 479, column: 13, scope: !12031)
!12033 = !DILocation(line: 480, column: 13, scope: !12031)
!12034 = !DILocation(line: 482, column: 13, scope: !12035)
!12035 = distinct !DILexicalBlock(scope: !11982, file: !939, line: 482, column: 13)
!12036 = !DILocation(line: 482, column: 20, scope: !12035)
!12037 = !DILocation(line: 482, column: 13, scope: !11982)
!12038 = !DILocation(line: 483, column: 13, scope: !12035)
!12039 = !DILocation(line: 485, column: 19, scope: !11982)
!12040 = !DILocation(line: 485, column: 22, scope: !11982)
!12041 = !DILocation(line: 485, column: 9, scope: !11982)
!12042 = !DILocation(line: 486, column: 19, scope: !11982)
!12043 = !DILocation(line: 486, column: 22, scope: !11982)
!12044 = !DILocation(line: 486, column: 9, scope: !11982)
!12045 = !DILocation(line: 487, column: 23, scope: !11982)
!12046 = !DILocation(line: 487, column: 26, scope: !11982)
!12047 = !DILocation(line: 487, column: 15, scope: !11982)
!12048 = !DILocation(line: 487, column: 13, scope: !11982)
!12049 = !DILocation(line: 488, column: 24, scope: !11982)
!12050 = !DILocation(line: 488, column: 27, scope: !11982)
!12051 = !DILocation(line: 488, column: 16, scope: !11982)
!12052 = !DILocation(line: 488, column: 14, scope: !11982)
!12053 = !DILocation(line: 489, column: 31, scope: !11982)
!12054 = !DILocation(line: 489, column: 34, scope: !11982)
!12055 = !DILocation(line: 489, column: 23, scope: !11982)
!12056 = !DILocation(line: 489, column: 21, scope: !11982)
!12057 = !DILocation(line: 490, column: 13, scope: !12058)
!12058 = distinct !DILexicalBlock(scope: !11982, file: !939, line: 490, column: 13)
!12059 = !DILocation(line: 490, column: 17, scope: !12058)
!12060 = !DILocation(line: 490, column: 25, scope: !12058)
!12061 = !DILocation(line: 490, column: 28, scope: !12062)
!12062 = !DILexicalBlockFile(scope: !12058, file: !939, discriminator: 1)
!12063 = !DILocation(line: 490, column: 33, scope: !12062)
!12064 = !DILocation(line: 490, column: 13, scope: !12062)
!12065 = !DILocation(line: 491, column: 20, scope: !12066)
!12066 = distinct !DILexicalBlock(scope: !12058, file: !939, line: 490, column: 39)
!12067 = !DILocation(line: 491, column: 63, scope: !12066)
!12068 = !DILocation(line: 491, column: 68, scope: !12066)
!12069 = !DILocation(line: 491, column: 13, scope: !12066)
!12070 = !DILocation(line: 492, column: 13, scope: !12066)
!12071 = !DILocation(line: 494, column: 36, scope: !11982)
!12072 = !DILocation(line: 494, column: 39, scope: !11982)
!12073 = !DILocation(line: 494, column: 26, scope: !11982)
!12074 = !DILocation(line: 494, column: 24, scope: !11982)
!12075 = !DILocation(line: 495, column: 13, scope: !12076)
!12076 = distinct !DILexicalBlock(scope: !11982, file: !939, line: 495, column: 13)
!12077 = !DILocation(line: 495, column: 28, scope: !12076)
!12078 = !DILocation(line: 495, column: 13, scope: !11982)
!12079 = !DILocation(line: 496, column: 20, scope: !12080)
!12080 = distinct !DILexicalBlock(scope: !12076, file: !939, line: 495, column: 39)
!12081 = !DILocation(line: 496, column: 56, scope: !12080)
!12082 = !DILocation(line: 496, column: 13, scope: !12080)
!12083 = !DILocation(line: 497, column: 13, scope: !12080)
!12084 = !DILocation(line: 499, column: 30, scope: !11982)
!12085 = !DILocation(line: 499, column: 33, scope: !11982)
!12086 = !DILocation(line: 499, column: 22, scope: !11982)
!12087 = !DILocation(line: 499, column: 20, scope: !11982)
!12088 = !DILocation(line: 500, column: 17, scope: !11982)
!12089 = !DILocation(line: 500, column: 20, scope: !11982)
!12090 = !DILocation(line: 500, column: 9, scope: !11982)
!12091 = !DILocation(line: 501, column: 17, scope: !11982)
!12092 = !DILocation(line: 501, column: 20, scope: !11982)
!12093 = !DILocation(line: 501, column: 9, scope: !11982)
!12094 = !DILocation(line: 502, column: 19, scope: !11982)
!12095 = !DILocation(line: 502, column: 22, scope: !11982)
!12096 = !DILocation(line: 502, column: 9, scope: !11982)
!12097 = !DILocation(line: 503, column: 29, scope: !11982)
!12098 = !DILocation(line: 503, column: 32, scope: !11982)
!12099 = !DILocation(line: 503, column: 21, scope: !11982)
!12100 = !DILocation(line: 503, column: 19, scope: !11982)
!12101 = !DILocation(line: 504, column: 13, scope: !12102)
!12102 = distinct !DILexicalBlock(scope: !11982, file: !939, line: 504, column: 13)
!12103 = !DILocation(line: 504, column: 23, scope: !12102)
!12104 = !DILocation(line: 504, column: 13, scope: !11982)
!12105 = !DILocation(line: 505, column: 20, scope: !12106)
!12106 = distinct !DILexicalBlock(scope: !12102, file: !939, line: 504, column: 32)
!12107 = !DILocation(line: 505, column: 58, scope: !12106)
!12108 = !DILocation(line: 505, column: 13, scope: !12106)
!12109 = !DILocation(line: 506, column: 13, scope: !12106)
!12110 = !DILocation(line: 508, column: 28, scope: !11982)
!12111 = !DILocation(line: 508, column: 31, scope: !11982)
!12112 = !DILocation(line: 508, column: 20, scope: !11982)
!12113 = !DILocation(line: 508, column: 35, scope: !11982)
!12114 = !DILocation(line: 508, column: 18, scope: !11982)
!12115 = !DILocation(line: 509, column: 29, scope: !11982)
!12116 = !DILocation(line: 509, column: 32, scope: !11982)
!12117 = !DILocation(line: 509, column: 36, scope: !11982)
!12118 = !DILocation(line: 509, column: 41, scope: !11982)
!12119 = !DILocation(line: 509, column: 50, scope: !11982)
!12120 = !DILocation(line: 509, column: 15, scope: !11982)
!12121 = !DILocation(line: 509, column: 13, scope: !11982)
!12122 = !DILocation(line: 510, column: 13, scope: !12123)
!12123 = distinct !DILexicalBlock(scope: !11982, file: !939, line: 510, column: 13)
!12124 = !DILocation(line: 510, column: 17, scope: !12123)
!12125 = !DILocation(line: 510, column: 13, scope: !11982)
!12126 = !DILocation(line: 511, column: 20, scope: !12123)
!12127 = !DILocation(line: 511, column: 13, scope: !12123)
!12128 = !DILocation(line: 512, column: 13, scope: !12129)
!12129 = distinct !DILexicalBlock(scope: !11982, file: !939, line: 512, column: 13)
!12130 = !DILocation(line: 512, column: 24, scope: !12129)
!12131 = !DILocation(line: 512, column: 28, scope: !12129)
!12132 = !DILocation(line: 512, column: 34, scope: !12129)
!12133 = !DILocation(line: 512, column: 43, scope: !12129)
!12134 = !DILocation(line: 512, column: 32, scope: !12129)
!12135 = !DILocation(line: 512, column: 13, scope: !11982)
!12136 = !DILocation(line: 513, column: 20, scope: !12137)
!12137 = distinct !DILexicalBlock(scope: !12129, file: !939, line: 512, column: 48)
!12138 = !DILocation(line: 513, column: 62, scope: !12137)
!12139 = !DILocation(line: 513, column: 74, scope: !12137)
!12140 = !DILocation(line: 513, column: 13, scope: !12137)
!12141 = !DILocation(line: 514, column: 13, scope: !12137)
!12142 = !DILocation(line: 516, column: 19, scope: !11982)
!12143 = !DILocation(line: 516, column: 22, scope: !11982)
!12144 = !DILocation(line: 516, column: 26, scope: !11982)
!12145 = !DILocation(line: 516, column: 38, scope: !11982)
!12146 = !DILocation(line: 516, column: 42, scope: !11982)
!12147 = !DILocation(line: 516, column: 48, scope: !11982)
!12148 = !DILocation(line: 516, column: 57, scope: !11982)
!12149 = !DILocation(line: 516, column: 46, scope: !11982)
!12150 = !DILocation(line: 516, column: 9, scope: !11982)
!12151 = !DILocation(line: 517, column: 33, scope: !11982)
!12152 = !DILocation(line: 517, column: 36, scope: !11982)
!12153 = !DILocation(line: 517, column: 25, scope: !11982)
!12154 = !DILocation(line: 517, column: 23, scope: !11982)
!12155 = !DILocation(line: 518, column: 13, scope: !12156)
!12156 = distinct !DILexicalBlock(scope: !11982, file: !939, line: 518, column: 13)
!12157 = !DILocation(line: 518, column: 27, scope: !12156)
!12158 = !DILocation(line: 518, column: 13, scope: !11982)
!12159 = !DILocation(line: 519, column: 20, scope: !12160)
!12160 = distinct !DILexicalBlock(scope: !12156, file: !939, line: 518, column: 36)
!12161 = !DILocation(line: 519, column: 60, scope: !12160)
!12162 = !DILocation(line: 519, column: 13, scope: !12160)
!12163 = !DILocation(line: 520, column: 13, scope: !12160)
!12164 = !DILocation(line: 522, column: 19, scope: !11982)
!12165 = !DILocation(line: 522, column: 22, scope: !11982)
!12166 = !DILocation(line: 522, column: 9, scope: !11982)
!12167 = !DILocation(line: 523, column: 17, scope: !11982)
!12168 = !DILocation(line: 523, column: 20, scope: !11982)
!12169 = !DILocation(line: 523, column: 9, scope: !11982)
!12170 = !DILocation(line: 524, column: 9, scope: !11982)
!12171 = !DILocation(line: 466, column: 29, scope: !12172)
!12172 = !DILexicalBlockFile(scope: !11976, file: !939, discriminator: 2)
!12173 = !DILocation(line: 466, column: 5, scope: !12172)
!12174 = distinct !{!12174, !12175}
!12175 = !DILocation(line: 466, column: 5, scope: !11922)
!12176 = !DILocation(line: 527, column: 5, scope: !11922)
!12177 = !DILocation(line: 528, column: 1, scope: !11922)
!12178 = distinct !DISubprogram(name: "mxf_set_pts", scope: !939, file: !939, line: 3387, type: !12179, isLocal: true, isDefinition: true, scopeLine: 3388, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!12179 = !DISubroutineType(types: !12180)
!12180 = !{!1014, !2594, !1569, !1335}
!12181 = !DILocalVariable(name: "mxf", arg: 1, scope: !12178, file: !939, line: 3387, type: !2594)
!12182 = !DILocation(line: 3387, column: 36, scope: !12178)
!12183 = !DILocalVariable(name: "st", arg: 2, scope: !12178, file: !939, line: 3387, type: !1569)
!12184 = !DILocation(line: 3387, column: 51, scope: !12178)
!12185 = !DILocalVariable(name: "pkt", arg: 3, scope: !12178, file: !939, line: 3387, type: !1335)
!12186 = !DILocation(line: 3387, column: 65, scope: !12178)
!12187 = !DILocalVariable(name: "par", scope: !12178, file: !939, line: 3389, type: !2006)
!12188 = !DILocation(line: 3389, column: 24, scope: !12178)
!12189 = !DILocation(line: 3389, column: 30, scope: !12178)
!12190 = !DILocation(line: 3389, column: 34, scope: !12178)
!12191 = !DILocalVariable(name: "track", scope: !12178, file: !939, line: 3390, type: !1108)
!12192 = !DILocation(line: 3390, column: 15, scope: !12178)
!12193 = !DILocation(line: 3390, column: 23, scope: !12178)
!12194 = !DILocation(line: 3390, column: 27, scope: !12178)
!12195 = !DILocation(line: 3392, column: 9, scope: !12196)
!12196 = distinct !DILexicalBlock(scope: !12178, file: !939, line: 3392, column: 9)
!12197 = !DILocation(line: 3392, column: 14, scope: !12196)
!12198 = !DILocation(line: 3392, column: 25, scope: !12196)
!12199 = !DILocation(line: 3392, column: 9, scope: !12178)
!12200 = !DILocalVariable(name: "t", scope: !12201, file: !939, line: 3394, type: !2647)
!12201 = distinct !DILexicalBlock(scope: !12196, file: !939, line: 3392, column: 48)
!12202 = !DILocation(line: 3394, column: 24, scope: !12201)
!12203 = !DILocation(line: 3394, column: 49, scope: !12201)
!12204 = !DILocation(line: 3394, column: 54, scope: !12201)
!12205 = !DILocation(line: 3394, column: 61, scope: !12201)
!12206 = !DILocation(line: 3394, column: 28, scope: !12201)
!12207 = !DILocation(line: 3396, column: 13, scope: !12208)
!12208 = distinct !DILexicalBlock(scope: !12201, file: !939, line: 3396, column: 13)
!12209 = !DILocation(line: 3396, column: 15, scope: !12208)
!12210 = !DILocation(line: 3396, column: 18, scope: !12211)
!12211 = !DILexicalBlockFile(scope: !12208, file: !939, discriminator: 1)
!12212 = !DILocation(line: 3396, column: 25, scope: !12211)
!12213 = !DILocation(line: 3396, column: 40, scope: !12211)
!12214 = !DILocation(line: 3396, column: 43, scope: !12211)
!12215 = !DILocation(line: 3396, column: 38, scope: !12211)
!12216 = !DILocation(line: 3396, column: 13, scope: !12211)
!12217 = !DILocation(line: 3397, column: 24, scope: !12218)
!12218 = distinct !DILexicalBlock(scope: !12208, file: !939, line: 3396, column: 53)
!12219 = !DILocation(line: 3397, column: 31, scope: !12218)
!12220 = !DILocation(line: 3397, column: 46, scope: !12218)
!12221 = !DILocation(line: 3397, column: 49, scope: !12218)
!12222 = !DILocation(line: 3397, column: 44, scope: !12218)
!12223 = !DILocation(line: 3397, column: 13, scope: !12218)
!12224 = !DILocation(line: 3397, column: 18, scope: !12218)
!12225 = !DILocation(line: 3397, column: 22, scope: !12218)
!12226 = !DILocation(line: 3398, column: 33, scope: !12218)
!12227 = !DILocation(line: 3398, column: 40, scope: !12218)
!12228 = !DILocation(line: 3398, column: 24, scope: !12218)
!12229 = !DILocation(line: 3398, column: 27, scope: !12218)
!12230 = !DILocation(line: 3398, column: 13, scope: !12218)
!12231 = !DILocation(line: 3398, column: 18, scope: !12218)
!12232 = !DILocation(line: 3398, column: 22, scope: !12218)
!12233 = !DILocation(line: 3399, column: 9, scope: !12218)
!12234 = !DILocation(line: 3399, column: 20, scope: !12235)
!12235 = !DILexicalBlockFile(scope: !12236, file: !939, discriminator: 1)
!12236 = distinct !DILexicalBlock(scope: !12208, file: !939, line: 3399, column: 20)
!12237 = !DILocation(line: 3399, column: 27, scope: !12235)
!12238 = !DILocation(line: 3402, column: 24, scope: !12239)
!12239 = distinct !DILexicalBlock(scope: !12236, file: !939, line: 3399, column: 39)
!12240 = !DILocation(line: 3402, column: 31, scope: !12239)
!12241 = !DILocation(line: 3402, column: 13, scope: !12239)
!12242 = !DILocation(line: 3402, column: 18, scope: !12239)
!12243 = !DILocation(line: 3402, column: 22, scope: !12239)
!12244 = !DILocation(line: 3403, column: 9, scope: !12239)
!12245 = !DILocation(line: 3404, column: 9, scope: !12201)
!12246 = !DILocation(line: 3404, column: 16, scope: !12201)
!12247 = !DILocation(line: 3404, column: 28, scope: !12201)
!12248 = !DILocation(line: 3405, column: 5, scope: !12201)
!12249 = !DILocation(line: 3405, column: 16, scope: !12250)
!12250 = !DILexicalBlockFile(scope: !12251, file: !939, discriminator: 1)
!12251 = distinct !DILexicalBlock(scope: !12196, file: !939, line: 3405, column: 16)
!12252 = !DILocation(line: 3405, column: 21, scope: !12250)
!12253 = !DILocation(line: 3405, column: 32, scope: !12250)
!12254 = !DILocalVariable(name: "ret", scope: !12255, file: !939, line: 3406, type: !1014)
!12255 = distinct !DILexicalBlock(scope: !12251, file: !939, line: 3405, column: 55)
!12256 = !DILocation(line: 3406, column: 13, scope: !12255)
!12257 = !DILocation(line: 3406, column: 37, scope: !12255)
!12258 = !DILocation(line: 3406, column: 42, scope: !12255)
!12259 = !DILocation(line: 3406, column: 47, scope: !12255)
!12260 = !DILocation(line: 3406, column: 19, scope: !12255)
!12261 = !DILocation(line: 3407, column: 13, scope: !12262)
!12262 = distinct !DILexicalBlock(scope: !12255, file: !939, line: 3407, column: 13)
!12263 = !DILocation(line: 3407, column: 17, scope: !12262)
!12264 = !DILocation(line: 3407, column: 13, scope: !12255)
!12265 = !DILocation(line: 3408, column: 20, scope: !12262)
!12266 = !DILocation(line: 3408, column: 13, scope: !12262)
!12267 = !DILocation(line: 3409, column: 5, scope: !12255)
!12268 = !DILocation(line: 3409, column: 16, scope: !12269)
!12269 = !DILexicalBlockFile(scope: !12270, file: !939, discriminator: 1)
!12270 = distinct !DILexicalBlock(scope: !12251, file: !939, line: 3409, column: 16)
!12271 = !DILocation(line: 3410, column: 31, scope: !12272)
!12272 = distinct !DILexicalBlock(scope: !12270, file: !939, line: 3409, column: 23)
!12273 = !DILocation(line: 3410, column: 38, scope: !12272)
!12274 = !DILocation(line: 3410, column: 20, scope: !12272)
!12275 = !DILocation(line: 3410, column: 25, scope: !12272)
!12276 = !DILocation(line: 3410, column: 29, scope: !12272)
!12277 = !DILocation(line: 3410, column: 9, scope: !12272)
!12278 = !DILocation(line: 3410, column: 14, scope: !12272)
!12279 = !DILocation(line: 3410, column: 18, scope: !12272)
!12280 = !DILocation(line: 3411, column: 9, scope: !12272)
!12281 = !DILocation(line: 3411, column: 14, scope: !12272)
!12282 = !DILocation(line: 3411, column: 23, scope: !12272)
!12283 = !DILocation(line: 3412, column: 9, scope: !12272)
!12284 = !DILocation(line: 3412, column: 16, scope: !12272)
!12285 = !DILocation(line: 3412, column: 28, scope: !12272)
!12286 = !DILocation(line: 3413, column: 5, scope: !12272)
!12287 = !DILocation(line: 3414, column: 5, scope: !12178)
!12288 = !DILocation(line: 3415, column: 1, scope: !12178)
!12289 = distinct !DISubprogram(name: "mxf_edit_unit_absolute_offset", scope: !939, file: !939, line: 1559, type: !12290, isLocal: true, isDefinition: true, scopeLine: 1560, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!12290 = !DISubroutineType(types: !12291)
!12291 = !{!1014, !2594, !2647, !1015, !1035, !1382, !1382, !12292, !1014}
!12292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2600, size: 64, align: 64)
!12293 = !DILocalVariable(name: "mxf", arg: 1, scope: !12289, file: !939, line: 1559, type: !2594)
!12294 = !DILocation(line: 1559, column: 54, scope: !12289)
!12295 = !DILocalVariable(name: "index_table", arg: 2, scope: !12289, file: !939, line: 1559, type: !2647)
!12296 = !DILocation(line: 1559, column: 74, scope: !12289)
!12297 = !DILocalVariable(name: "edit_unit", arg: 3, scope: !12289, file: !939, line: 1559, type: !1015)
!12298 = !DILocation(line: 1559, column: 95, scope: !12289)
!12299 = !DILocalVariable(name: "edit_rate", arg: 4, scope: !12289, file: !939, line: 1559, type: !1035)
!12300 = !DILocation(line: 1559, column: 117, scope: !12289)
!12301 = !DILocalVariable(name: "edit_unit_out", arg: 5, scope: !12289, file: !939, line: 1559, type: !1382)
!12302 = !DILocation(line: 1559, column: 137, scope: !12289)
!12303 = !DILocalVariable(name: "offset_out", arg: 6, scope: !12289, file: !939, line: 1559, type: !1382)
!12304 = !DILocation(line: 1559, column: 161, scope: !12289)
!12305 = !DILocalVariable(name: "partition_out", arg: 7, scope: !12289, file: !939, line: 1559, type: !12292)
!12306 = !DILocation(line: 1559, column: 188, scope: !12289)
!12307 = !DILocalVariable(name: "nag", arg: 8, scope: !12289, file: !939, line: 1559, type: !1014)
!12308 = !DILocation(line: 1559, column: 207, scope: !12289)
!12309 = !DILocalVariable(name: "i", scope: !12289, file: !939, line: 1561, type: !1014)
!12310 = !DILocation(line: 1561, column: 9, scope: !12289)
!12311 = !DILocalVariable(name: "offset_temp", scope: !12289, file: !939, line: 1562, type: !1015)
!12312 = !DILocation(line: 1562, column: 13, scope: !12289)
!12313 = !DILocation(line: 1564, column: 30, scope: !12289)
!12314 = !DILocation(line: 1564, column: 41, scope: !12289)
!12315 = !DILocation(line: 1564, column: 54, scope: !12289)
!12316 = !DILocation(line: 1564, column: 67, scope: !12289)
!12317 = !DILocation(line: 1564, column: 17, scope: !12289)
!12318 = !DILocation(line: 1564, column: 15, scope: !12289)
!12319 = !DILocation(line: 1566, column: 12, scope: !12320)
!12320 = distinct !DILexicalBlock(scope: !12289, file: !939, line: 1566, column: 5)
!12321 = !DILocation(line: 1566, column: 10, scope: !12320)
!12322 = !DILocation(line: 1566, column: 17, scope: !12323)
!12323 = !DILexicalBlockFile(scope: !12324, file: !939, discriminator: 1)
!12324 = distinct !DILexicalBlock(scope: !12320, file: !939, line: 1566, column: 5)
!12325 = !DILocation(line: 1566, column: 21, scope: !12323)
!12326 = !DILocation(line: 1566, column: 34, scope: !12323)
!12327 = !DILocation(line: 1566, column: 19, scope: !12323)
!12328 = !DILocation(line: 1566, column: 5, scope: !12323)
!12329 = !DILocalVariable(name: "s", scope: !12330, file: !939, line: 1567, type: !1133)
!12330 = distinct !DILexicalBlock(scope: !12324, file: !939, line: 1566, column: 52)
!12331 = !DILocation(line: 1567, column: 31, scope: !12330)
!12332 = !DILocation(line: 1567, column: 57, scope: !12330)
!12333 = !DILocation(line: 1567, column: 35, scope: !12330)
!12334 = !DILocation(line: 1567, column: 48, scope: !12330)
!12335 = !DILocation(line: 1569, column: 23, scope: !12330)
!12336 = !DILocation(line: 1569, column: 37, scope: !12330)
!12337 = !DILocation(line: 1569, column: 40, scope: !12330)
!12338 = !DILocation(line: 1569, column: 34, scope: !12330)
!12339 = !DILocation(line: 1569, column: 22, scope: !12330)
!12340 = !DILocation(line: 1569, column: 65, scope: !12341)
!12341 = !DILexicalBlockFile(scope: !12330, file: !939, discriminator: 1)
!12342 = !DILocation(line: 1569, column: 22, scope: !12341)
!12343 = !DILocation(line: 1569, column: 79, scope: !12344)
!12344 = !DILexicalBlockFile(scope: !12330, file: !939, discriminator: 2)
!12345 = !DILocation(line: 1569, column: 82, scope: !12344)
!12346 = !DILocation(line: 1569, column: 22, scope: !12344)
!12347 = !DILocation(line: 1569, column: 22, scope: !12348)
!12348 = !DILexicalBlockFile(scope: !12330, file: !939, discriminator: 3)
!12349 = !DILocation(line: 1569, column: 19, scope: !12348)
!12350 = !DILocation(line: 1571, column: 13, scope: !12351)
!12351 = distinct !DILexicalBlock(scope: !12330, file: !939, line: 1571, column: 13)
!12352 = !DILocation(line: 1571, column: 25, scope: !12351)
!12353 = !DILocation(line: 1571, column: 28, scope: !12351)
!12354 = !DILocation(line: 1571, column: 51, scope: !12351)
!12355 = !DILocation(line: 1571, column: 54, scope: !12351)
!12356 = !DILocation(line: 1571, column: 49, scope: !12351)
!12357 = !DILocation(line: 1571, column: 23, scope: !12351)
!12358 = !DILocation(line: 1571, column: 13, scope: !12330)
!12359 = !DILocalVariable(name: "index", scope: !12360, file: !939, line: 1572, type: !1015)
!12360 = distinct !DILexicalBlock(scope: !12351, file: !939, line: 1571, column: 70)
!12361 = !DILocation(line: 1572, column: 21, scope: !12360)
!12362 = !DILocation(line: 1572, column: 29, scope: !12360)
!12363 = !DILocation(line: 1572, column: 41, scope: !12360)
!12364 = !DILocation(line: 1572, column: 44, scope: !12360)
!12365 = !DILocation(line: 1572, column: 39, scope: !12360)
!12366 = !DILocation(line: 1574, column: 17, scope: !12367)
!12367 = distinct !DILexicalBlock(scope: !12360, file: !939, line: 1574, column: 17)
!12368 = !DILocation(line: 1574, column: 20, scope: !12367)
!12369 = !DILocation(line: 1574, column: 17, scope: !12360)
!12370 = !DILocation(line: 1575, column: 32, scope: !12367)
!12371 = !DILocation(line: 1575, column: 35, scope: !12367)
!12372 = !DILocation(line: 1575, column: 58, scope: !12367)
!12373 = !DILocation(line: 1575, column: 56, scope: !12367)
!12374 = !DILocation(line: 1575, column: 29, scope: !12367)
!12375 = !DILocation(line: 1575, column: 17, scope: !12367)
!12376 = !DILocation(line: 1577, column: 21, scope: !12377)
!12377 = distinct !DILexicalBlock(scope: !12378, file: !939, line: 1577, column: 21)
!12378 = distinct !DILexicalBlock(scope: !12367, file: !939, line: 1576, column: 18)
!12379 = !DILocation(line: 1577, column: 24, scope: !12377)
!12380 = !DILocation(line: 1577, column: 48, scope: !12377)
!12381 = !DILocation(line: 1577, column: 51, scope: !12377)
!12382 = !DILocation(line: 1577, column: 46, scope: !12377)
!12383 = !DILocation(line: 1577, column: 66, scope: !12377)
!12384 = !DILocation(line: 1577, column: 41, scope: !12377)
!12385 = !DILocation(line: 1577, column: 21, scope: !12378)
!12386 = !DILocation(line: 1578, column: 27, scope: !12377)
!12387 = !DILocation(line: 1578, column: 21, scope: !12377)
!12388 = !DILocation(line: 1580, column: 21, scope: !12389)
!12389 = distinct !DILexicalBlock(scope: !12378, file: !939, line: 1580, column: 21)
!12390 = !DILocation(line: 1580, column: 27, scope: !12389)
!12391 = !DILocation(line: 1580, column: 31, scope: !12389)
!12392 = !DILocation(line: 1580, column: 34, scope: !12393)
!12393 = !DILexicalBlockFile(scope: !12389, file: !939, discriminator: 1)
!12394 = !DILocation(line: 1580, column: 43, scope: !12393)
!12395 = !DILocation(line: 1580, column: 46, scope: !12393)
!12396 = !DILocation(line: 1580, column: 40, scope: !12393)
!12397 = !DILocation(line: 1580, column: 21, scope: !12393)
!12398 = !DILocation(line: 1581, column: 28, scope: !12399)
!12399 = distinct !DILexicalBlock(scope: !12389, file: !939, line: 1580, column: 64)
!12400 = !DILocation(line: 1581, column: 33, scope: !12399)
!12401 = !DILocation(line: 1582, column: 28, scope: !12399)
!12402 = !DILocation(line: 1582, column: 41, scope: !12399)
!12403 = !DILocation(line: 1582, column: 52, scope: !12399)
!12404 = !DILocation(line: 1582, column: 55, scope: !12399)
!12405 = !DILocation(line: 1581, column: 21, scope: !12399)
!12406 = !DILocation(line: 1583, column: 21, scope: !12399)
!12407 = !DILocation(line: 1586, column: 56, scope: !12378)
!12408 = !DILocation(line: 1586, column: 31, scope: !12378)
!12409 = !DILocation(line: 1586, column: 34, scope: !12378)
!12410 = !DILocation(line: 1586, column: 29, scope: !12378)
!12411 = !DILocation(line: 1589, column: 17, scope: !12412)
!12412 = distinct !DILexicalBlock(scope: !12360, file: !939, line: 1589, column: 17)
!12413 = !DILocation(line: 1589, column: 17, scope: !12360)
!12414 = !DILocation(line: 1590, column: 47, scope: !12412)
!12415 = !DILocation(line: 1590, column: 69, scope: !12412)
!12416 = !DILocation(line: 1590, column: 72, scope: !12412)
!12417 = !DILocation(line: 1590, column: 34, scope: !12412)
!12418 = !DILocation(line: 1590, column: 18, scope: !12412)
!12419 = !DILocation(line: 1590, column: 32, scope: !12412)
!12420 = !DILocation(line: 1590, column: 17, scope: !12412)
!12421 = !DILocation(line: 1592, column: 48, scope: !12360)
!12422 = !DILocation(line: 1592, column: 53, scope: !12360)
!12423 = !DILocation(line: 1592, column: 66, scope: !12360)
!12424 = !DILocation(line: 1592, column: 76, scope: !12360)
!12425 = !DILocation(line: 1592, column: 89, scope: !12360)
!12426 = !DILocation(line: 1592, column: 101, scope: !12360)
!12427 = !DILocation(line: 1592, column: 20, scope: !12360)
!12428 = !DILocation(line: 1592, column: 13, scope: !12360)
!12429 = !DILocation(line: 1595, column: 28, scope: !12430)
!12430 = distinct !DILexicalBlock(scope: !12351, file: !939, line: 1593, column: 16)
!12431 = !DILocation(line: 1595, column: 31, scope: !12430)
!12432 = !DILocation(line: 1595, column: 54, scope: !12430)
!12433 = !DILocation(line: 1595, column: 57, scope: !12430)
!12434 = !DILocation(line: 1595, column: 52, scope: !12430)
!12435 = !DILocation(line: 1595, column: 25, scope: !12430)
!12436 = !DILocation(line: 1597, column: 5, scope: !12330)
!12437 = !DILocation(line: 1566, column: 48, scope: !12438)
!12438 = !DILexicalBlockFile(scope: !12324, file: !939, discriminator: 2)
!12439 = !DILocation(line: 1566, column: 5, scope: !12438)
!12440 = distinct !{!12440, !12441}
!12441 = !DILocation(line: 1566, column: 5, scope: !12289)
!12442 = !DILocation(line: 1599, column: 9, scope: !12443)
!12443 = distinct !DILexicalBlock(scope: !12289, file: !939, line: 1599, column: 9)
!12444 = !DILocation(line: 1599, column: 9, scope: !12289)
!12445 = !DILocation(line: 1600, column: 16, scope: !12443)
!12446 = !DILocation(line: 1600, column: 21, scope: !12443)
!12447 = !DILocation(line: 1600, column: 104, scope: !12443)
!12448 = !DILocation(line: 1600, column: 115, scope: !12443)
!12449 = !DILocation(line: 1600, column: 128, scope: !12443)
!12450 = !DILocation(line: 1600, column: 9, scope: !12443)
!12451 = !DILocation(line: 1602, column: 5, scope: !12289)
!12452 = !DILocation(line: 1603, column: 1, scope: !12289)
!12453 = distinct !DISubprogram(name: "mxf_essence_container_end", scope: !939, file: !939, line: 1538, type: !12454, isLocal: true, isDefinition: true, scopeLine: 1539, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!12454 = !DISubroutineType(types: !12455)
!12455 = !{!1015, !2594, !1014}
!12456 = !DILocalVariable(name: "mxf", arg: 1, scope: !12453, file: !939, line: 1538, type: !2594)
!12457 = !DILocation(line: 1538, column: 54, scope: !12453)
!12458 = !DILocalVariable(name: "body_sid", arg: 2, scope: !12453, file: !939, line: 1538, type: !1014)
!12459 = !DILocation(line: 1538, column: 63, scope: !12453)
!12460 = !DILocalVariable(name: "x", scope: !12453, file: !939, line: 1540, type: !1014)
!12461 = !DILocation(line: 1540, column: 9, scope: !12453)
!12462 = !DILocalVariable(name: "ret", scope: !12453, file: !939, line: 1541, type: !1015)
!12463 = !DILocation(line: 1541, column: 13, scope: !12453)
!12464 = !DILocation(line: 1543, column: 12, scope: !12465)
!12465 = distinct !DILexicalBlock(scope: !12453, file: !939, line: 1543, column: 5)
!12466 = !DILocation(line: 1543, column: 10, scope: !12465)
!12467 = !DILocation(line: 1543, column: 17, scope: !12468)
!12468 = !DILexicalBlockFile(scope: !12469, file: !939, discriminator: 1)
!12469 = distinct !DILexicalBlock(scope: !12465, file: !939, line: 1543, column: 5)
!12470 = !DILocation(line: 1543, column: 21, scope: !12468)
!12471 = !DILocation(line: 1543, column: 26, scope: !12468)
!12472 = !DILocation(line: 1543, column: 19, scope: !12468)
!12473 = !DILocation(line: 1543, column: 5, scope: !12468)
!12474 = !DILocalVariable(name: "p", scope: !12475, file: !939, line: 1544, type: !2600)
!12475 = distinct !DILexicalBlock(scope: !12469, file: !939, line: 1543, column: 49)
!12476 = !DILocation(line: 1544, column: 23, scope: !12475)
!12477 = !DILocation(line: 1544, column: 44, scope: !12475)
!12478 = !DILocation(line: 1544, column: 28, scope: !12475)
!12479 = !DILocation(line: 1544, column: 33, scope: !12475)
!12480 = !DILocation(line: 1546, column: 13, scope: !12481)
!12481 = distinct !DILexicalBlock(scope: !12475, file: !939, line: 1546, column: 13)
!12482 = !DILocation(line: 1546, column: 16, scope: !12481)
!12483 = !DILocation(line: 1546, column: 28, scope: !12481)
!12484 = !DILocation(line: 1546, column: 25, scope: !12481)
!12485 = !DILocation(line: 1546, column: 13, scope: !12475)
!12486 = !DILocation(line: 1547, column: 13, scope: !12481)
!12487 = !DILocation(line: 1549, column: 14, scope: !12488)
!12488 = distinct !DILexicalBlock(scope: !12475, file: !939, line: 1549, column: 13)
!12489 = !DILocation(line: 1549, column: 17, scope: !12488)
!12490 = !DILocation(line: 1549, column: 13, scope: !12475)
!12491 = !DILocation(line: 1550, column: 13, scope: !12488)
!12492 = !DILocation(line: 1552, column: 15, scope: !12475)
!12493 = !DILocation(line: 1552, column: 18, scope: !12475)
!12494 = !DILocation(line: 1552, column: 35, scope: !12475)
!12495 = !DILocation(line: 1552, column: 38, scope: !12475)
!12496 = !DILocation(line: 1552, column: 33, scope: !12475)
!12497 = !DILocation(line: 1552, column: 13, scope: !12475)
!12498 = !DILocation(line: 1553, column: 5, scope: !12475)
!12499 = !DILocation(line: 1543, column: 45, scope: !12500)
!12500 = !DILexicalBlockFile(scope: !12469, file: !939, discriminator: 2)
!12501 = !DILocation(line: 1543, column: 5, scope: !12500)
!12502 = distinct !{!12502, !12503}
!12503 = !DILocation(line: 1543, column: 5, scope: !12453)
!12504 = !DILocation(line: 1555, column: 12, scope: !12453)
!12505 = !DILocation(line: 1555, column: 5, scope: !12453)
!12506 = !DILocation(line: 1556, column: 1, scope: !12453)
!12507 = distinct !DISubprogram(name: "mxf_get_next_track_edit_unit", scope: !939, file: !939, line: 3253, type: !12508, isLocal: true, isDefinition: true, scopeLine: 3254, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!12508 = !DISubroutineType(types: !12509)
!12509 = !{!1014, !2594, !1108, !1015, !1382}
!12510 = !DILocalVariable(name: "mxf", arg: 1, scope: !12507, file: !939, line: 3253, type: !2594)
!12511 = !DILocation(line: 3253, column: 53, scope: !12507)
!12512 = !DILocalVariable(name: "track", arg: 2, scope: !12507, file: !939, line: 3253, type: !1108)
!12513 = !DILocation(line: 3253, column: 68, scope: !12507)
!12514 = !DILocalVariable(name: "current_offset", arg: 3, scope: !12507, file: !939, line: 3253, type: !1015)
!12515 = !DILocation(line: 3253, column: 83, scope: !12507)
!12516 = !DILocalVariable(name: "edit_unit_out", arg: 4, scope: !12507, file: !939, line: 3253, type: !1382)
!12517 = !DILocation(line: 3253, column: 108, scope: !12507)
!12518 = !DILocalVariable(name: "a", scope: !12507, file: !939, line: 3255, type: !1015)
!12519 = !DILocation(line: 3255, column: 13, scope: !12507)
!12520 = !DILocalVariable(name: "b", scope: !12507, file: !939, line: 3255, type: !1015)
!12521 = !DILocation(line: 3255, column: 16, scope: !12507)
!12522 = !DILocalVariable(name: "m", scope: !12507, file: !939, line: 3255, type: !1015)
!12523 = !DILocation(line: 3255, column: 19, scope: !12507)
!12524 = !DILocalVariable(name: "offset", scope: !12507, file: !939, line: 3255, type: !1015)
!12525 = !DILocation(line: 3255, column: 22, scope: !12507)
!12526 = !DILocalVariable(name: "t", scope: !12507, file: !939, line: 3256, type: !2647)
!12527 = !DILocation(line: 3256, column: 20, scope: !12507)
!12528 = !DILocation(line: 3256, column: 45, scope: !12507)
!12529 = !DILocation(line: 3256, column: 50, scope: !12507)
!12530 = !DILocation(line: 3256, column: 57, scope: !12507)
!12531 = !DILocation(line: 3256, column: 24, scope: !12507)
!12532 = !DILocation(line: 3258, column: 10, scope: !12533)
!12533 = distinct !DILexicalBlock(scope: !12507, file: !939, line: 3258, column: 9)
!12534 = !DILocation(line: 3258, column: 12, scope: !12533)
!12535 = !DILocation(line: 3258, column: 15, scope: !12536)
!12536 = !DILexicalBlockFile(scope: !12533, file: !939, discriminator: 1)
!12537 = !DILocation(line: 3258, column: 22, scope: !12536)
!12538 = !DILocation(line: 3258, column: 40, scope: !12536)
!12539 = !DILocation(line: 3258, column: 9, scope: !12536)
!12540 = !DILocation(line: 3259, column: 9, scope: !12533)
!12541 = !DILocation(line: 3261, column: 7, scope: !12507)
!12542 = !DILocation(line: 3262, column: 9, scope: !12507)
!12543 = !DILocation(line: 3262, column: 16, scope: !12507)
!12544 = !DILocation(line: 3262, column: 7, scope: !12507)
!12545 = !DILocation(line: 3264, column: 5, scope: !12507)
!12546 = !DILocation(line: 3264, column: 12, scope: !12547)
!12547 = !DILexicalBlockFile(scope: !12507, file: !939, discriminator: 1)
!12548 = !DILocation(line: 3264, column: 16, scope: !12547)
!12549 = !DILocation(line: 3264, column: 14, scope: !12547)
!12550 = !DILocation(line: 3264, column: 18, scope: !12547)
!12551 = !DILocation(line: 3264, column: 5, scope: !12547)
!12552 = !DILocation(line: 3265, column: 14, scope: !12553)
!12553 = distinct !DILexicalBlock(scope: !12507, file: !939, line: 3264, column: 23)
!12554 = !DILocation(line: 3265, column: 18, scope: !12553)
!12555 = !DILocation(line: 3265, column: 16, scope: !12553)
!12556 = !DILocation(line: 3265, column: 21, scope: !12553)
!12557 = !DILocation(line: 3265, column: 11, scope: !12553)
!12558 = !DILocation(line: 3266, column: 43, scope: !12559)
!12559 = distinct !DILexicalBlock(scope: !12553, file: !939, line: 3266, column: 13)
!12560 = !DILocation(line: 3266, column: 48, scope: !12559)
!12561 = !DILocation(line: 3266, column: 51, scope: !12559)
!12562 = !DILocation(line: 3266, column: 54, scope: !12559)
!12563 = !DILocation(line: 3266, column: 61, scope: !12559)
!12564 = !DILocation(line: 3266, column: 13, scope: !12559)
!12565 = !DILocation(line: 3266, column: 95, scope: !12559)
!12566 = !DILocation(line: 3266, column: 13, scope: !12553)
!12567 = !DILocation(line: 3267, column: 13, scope: !12559)
!12568 = !DILocation(line: 3268, column: 13, scope: !12569)
!12569 = distinct !DILexicalBlock(scope: !12553, file: !939, line: 3268, column: 13)
!12570 = !DILocation(line: 3268, column: 22, scope: !12569)
!12571 = !DILocation(line: 3268, column: 20, scope: !12569)
!12572 = !DILocation(line: 3268, column: 13, scope: !12553)
!12573 = !DILocation(line: 3269, column: 17, scope: !12569)
!12574 = !DILocation(line: 3269, column: 15, scope: !12569)
!12575 = !DILocation(line: 3269, column: 13, scope: !12569)
!12576 = !DILocation(line: 3271, column: 17, scope: !12569)
!12577 = !DILocation(line: 3271, column: 15, scope: !12569)
!12578 = !DILocation(line: 3264, column: 5, scope: !12579)
!12579 = !DILexicalBlockFile(scope: !12507, file: !939, discriminator: 2)
!12580 = distinct !{!12580, !12545}
!12581 = !DILocation(line: 3274, column: 22, scope: !12507)
!12582 = !DILocation(line: 3274, column: 6, scope: !12507)
!12583 = !DILocation(line: 3274, column: 20, scope: !12507)
!12584 = !DILocation(line: 3276, column: 5, scope: !12507)
!12585 = !DILocation(line: 3277, column: 1, scope: !12507)
!12586 = distinct !DISubprogram(name: "mxf_compute_sample_count", scope: !939, file: !939, line: 3279, type: !12587, isLocal: true, isDefinition: true, scopeLine: 3281, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!12587 = !DISubroutineType(types: !12588)
!12588 = !{!1015, !2594, !1569, !1015}
!12589 = !DILocation(line: 159, column: 77, scope: !3577, inlinedAt: !12590)
!12590 = distinct !DILocation(line: 3285, column: 30, scope: !12586)
!12591 = !DILocation(line: 161, column: 16, scope: !3577, inlinedAt: !12590)
!12592 = !DILocation(line: 159, column: 77, scope: !3577, inlinedAt: !12593)
!12593 = distinct !DILocation(line: 3284, column: 28, scope: !12586)
!12594 = !DILocation(line: 161, column: 16, scope: !3577, inlinedAt: !12593)
!12595 = !DILocalVariable(name: "mxf", arg: 1, scope: !12586, file: !939, line: 3279, type: !2594)
!12596 = !DILocation(line: 3279, column: 53, scope: !12586)
!12597 = !DILocalVariable(name: "st", arg: 2, scope: !12586, file: !939, line: 3279, type: !1569)
!12598 = !DILocation(line: 3279, column: 68, scope: !12586)
!12599 = !DILocalVariable(name: "edit_unit", arg: 3, scope: !12586, file: !939, line: 3280, type: !1015)
!12600 = !DILocation(line: 3280, column: 49, scope: !12586)
!12601 = !DILocalVariable(name: "i", scope: !12586, file: !939, line: 3282, type: !1014)
!12602 = !DILocation(line: 3282, column: 9, scope: !12586)
!12603 = !DILocalVariable(name: "total", scope: !12586, file: !939, line: 3282, type: !1014)
!12604 = !DILocation(line: 3282, column: 12, scope: !12586)
!12605 = !DILocalVariable(name: "size", scope: !12586, file: !939, line: 3282, type: !1014)
!12606 = !DILocation(line: 3282, column: 23, scope: !12586)
!12607 = !DILocalVariable(name: "track", scope: !12586, file: !939, line: 3283, type: !1108)
!12608 = !DILocation(line: 3283, column: 15, scope: !12586)
!12609 = !DILocation(line: 3283, column: 23, scope: !12586)
!12610 = !DILocation(line: 3283, column: 27, scope: !12586)
!12611 = !DILocalVariable(name: "time_base", scope: !12586, file: !939, line: 3284, type: !1035)
!12612 = !DILocation(line: 3284, column: 16, scope: !12586)
!12613 = !DILocation(line: 3284, column: 37, scope: !12586)
!12614 = !DILocation(line: 3284, column: 44, scope: !12586)
!12615 = !DILocation(line: 3284, column: 28, scope: !12586)
!12616 = !DILocation(line: 161, column: 20, scope: !3577, inlinedAt: !12593)
!12617 = !DILocation(line: 161, column: 24, scope: !3577, inlinedAt: !12593)
!12618 = !DILocation(line: 161, column: 31, scope: !3577, inlinedAt: !12593)
!12619 = !DILocation(line: 162, column: 12, scope: !3577, inlinedAt: !12593)
!12620 = !DILocation(line: 162, column: 5, scope: !3577, inlinedAt: !12593)
!12621 = !DILocalVariable(name: "sample_rate", scope: !12586, file: !939, line: 3285, type: !1035)
!12622 = !DILocation(line: 3285, column: 16, scope: !12586)
!12623 = !DILocation(line: 3285, column: 39, scope: !12586)
!12624 = !DILocation(line: 3285, column: 43, scope: !12586)
!12625 = !DILocation(line: 3285, column: 30, scope: !12586)
!12626 = !DILocation(line: 161, column: 20, scope: !3577, inlinedAt: !12590)
!12627 = !DILocation(line: 161, column: 24, scope: !3577, inlinedAt: !12590)
!12628 = !DILocation(line: 161, column: 31, scope: !3577, inlinedAt: !12590)
!12629 = !DILocation(line: 162, column: 12, scope: !3577, inlinedAt: !12590)
!12630 = !DILocation(line: 162, column: 5, scope: !3577, inlinedAt: !12590)
!12631 = !DILocalVariable(name: "spf", scope: !12586, file: !939, line: 3286, type: !12632)
!12632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12633, size: 64, align: 64)
!12633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12634)
!12634 = !DIDerivedType(tag: DW_TAG_typedef, name: "MXFSamplesPerFrame", file: !958, line: 87, baseType: !12635)
!12635 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !958, line: 84, size: 256, align: 32, elements: !12636)
!12636 = !{!12637, !12638}
!12637 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !12635, file: !958, line: 85, baseType: !1037, size: 64, align: 32)
!12638 = !DIDerivedType(tag: DW_TAG_member, name: "samples_per_frame", scope: !12635, file: !958, line: 86, baseType: !12639, size: 192, align: 32, offset: 64)
!12639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1014, size: 192, align: 32, elements: !2485)
!12640 = !DILocation(line: 3286, column: 31, scope: !12586)
!12641 = !DILocalVariable(name: "sample_count", scope: !12586, file: !939, line: 3287, type: !1015)
!12642 = !DILocation(line: 3287, column: 13, scope: !12586)
!12643 = !DILocation(line: 3290, column: 9, scope: !12644)
!12644 = distinct !DILexicalBlock(scope: !12586, file: !939, line: 3290, column: 9)
!12645 = !DILocation(line: 3290, column: 13, scope: !12644)
!12646 = !DILocation(line: 3290, column: 23, scope: !12644)
!12647 = !DILocation(line: 3290, column: 34, scope: !12644)
!12648 = !DILocation(line: 3290, column: 9, scope: !12586)
!12649 = !DILocation(line: 3291, column: 16, scope: !12644)
!12650 = !DILocation(line: 3291, column: 9, scope: !12644)
!12651 = !DILocation(line: 3293, column: 22, scope: !12652)
!12652 = distinct !DILexicalBlock(scope: !12586, file: !939, line: 3293, column: 9)
!12653 = !DILocation(line: 3293, column: 40, scope: !12652)
!12654 = !DILocation(line: 3293, column: 26, scope: !12652)
!12655 = !DILocation(line: 3293, column: 45, scope: !12652)
!12656 = !DILocation(line: 3293, column: 9, scope: !12586)
!12657 = !DILocation(line: 3294, column: 44, scope: !12652)
!12658 = !DILocation(line: 3294, column: 49, scope: !12652)
!12659 = !DILocation(line: 3294, column: 15, scope: !12652)
!12660 = !DILocation(line: 3294, column: 13, scope: !12652)
!12661 = !DILocation(line: 3294, column: 9, scope: !12652)
!12662 = !DILocation(line: 3295, column: 10, scope: !12663)
!12663 = distinct !DILexicalBlock(scope: !12586, file: !939, line: 3295, column: 9)
!12664 = !DILocation(line: 3295, column: 9, scope: !12586)
!12665 = !DILocalVariable(name: "remainder", scope: !12666, file: !939, line: 3296, type: !1014)
!12666 = distinct !DILexicalBlock(scope: !12663, file: !939, line: 3295, column: 15)
!12667 = !DILocation(line: 3296, column: 13, scope: !12666)
!12668 = !DILocation(line: 3296, column: 38, scope: !12666)
!12669 = !DILocation(line: 3296, column: 54, scope: !12666)
!12670 = !DILocation(line: 3296, column: 42, scope: !12666)
!12671 = !DILocation(line: 3297, column: 36, scope: !12666)
!12672 = !DILocation(line: 3297, column: 54, scope: !12666)
!12673 = !DILocation(line: 3297, column: 40, scope: !12666)
!12674 = !DILocation(line: 3296, column: 59, scope: !12666)
!12675 = !DILocation(line: 3298, column: 13, scope: !12676)
!12676 = distinct !DILexicalBlock(scope: !12666, file: !939, line: 3298, column: 13)
!12677 = !DILocation(line: 3298, column: 13, scope: !12666)
!12678 = !DILocation(line: 3299, column: 20, scope: !12676)
!12679 = !DILocation(line: 3299, column: 25, scope: !12676)
!12680 = !DILocation(line: 3302, column: 20, scope: !12676)
!12681 = !DILocation(line: 3302, column: 24, scope: !12676)
!12682 = !DILocation(line: 3302, column: 41, scope: !12676)
!12683 = !DILocation(line: 3302, column: 56, scope: !12676)
!12684 = !DILocation(line: 3303, column: 32, scope: !12676)
!12685 = !DILocation(line: 3303, column: 49, scope: !12676)
!12686 = !DILocation(line: 3299, column: 13, scope: !12676)
!12687 = !DILocation(line: 3304, column: 29, scope: !12666)
!12688 = !DILocation(line: 3304, column: 53, scope: !12666)
!12689 = !DILocation(line: 3304, column: 60, scope: !12666)
!12690 = !DILocation(line: 3304, column: 16, scope: !12666)
!12691 = !DILocation(line: 3304, column: 9, scope: !12666)
!12692 = !DILocation(line: 3307, column: 5, scope: !12586)
!12693 = !DILocation(line: 3307, column: 35, scope: !12694)
!12694 = !DILexicalBlockFile(scope: !12586, file: !939, discriminator: 1)
!12695 = !DILocation(line: 3307, column: 12, scope: !12694)
!12696 = !DILocation(line: 3307, column: 17, scope: !12694)
!12697 = !DILocation(line: 3307, column: 5, scope: !12694)
!12698 = !DILocation(line: 3308, column: 41, scope: !12699)
!12699 = distinct !DILexicalBlock(scope: !12586, file: !939, line: 3307, column: 42)
!12700 = !DILocation(line: 3308, column: 18, scope: !12699)
!12701 = !DILocation(line: 3308, column: 23, scope: !12699)
!12702 = !DILocation(line: 3308, column: 15, scope: !12699)
!12703 = !DILocation(line: 3309, column: 13, scope: !12699)
!12704 = !DILocation(line: 3307, column: 5, scope: !12705)
!12705 = !DILexicalBlockFile(scope: !12586, file: !939, discriminator: 2)
!12706 = distinct !{!12706, !12692}
!12707 = !DILocation(line: 3314, column: 21, scope: !12586)
!12708 = !DILocation(line: 3314, column: 33, scope: !12586)
!12709 = !DILocation(line: 3314, column: 31, scope: !12586)
!12710 = !DILocation(line: 3314, column: 51, scope: !12586)
!12711 = !DILocation(line: 3314, column: 41, scope: !12586)
!12712 = !DILocation(line: 3314, column: 39, scope: !12586)
!12713 = !DILocation(line: 3314, column: 18, scope: !12586)
!12714 = !DILocation(line: 3315, column: 12, scope: !12715)
!12715 = distinct !DILexicalBlock(scope: !12586, file: !939, line: 3315, column: 5)
!12716 = !DILocation(line: 3315, column: 10, scope: !12715)
!12717 = !DILocation(line: 3315, column: 17, scope: !12718)
!12718 = !DILexicalBlockFile(scope: !12719, file: !939, discriminator: 1)
!12719 = distinct !DILexicalBlock(scope: !12715, file: !939, line: 3315, column: 5)
!12720 = !DILocation(line: 3315, column: 21, scope: !12718)
!12721 = !DILocation(line: 3315, column: 33, scope: !12718)
!12722 = !DILocation(line: 3315, column: 31, scope: !12718)
!12723 = !DILocation(line: 3315, column: 19, scope: !12718)
!12724 = !DILocation(line: 3315, column: 5, scope: !12718)
!12725 = !DILocation(line: 3316, column: 48, scope: !12726)
!12726 = distinct !DILexicalBlock(scope: !12719, file: !939, line: 3315, column: 44)
!12727 = !DILocation(line: 3316, column: 25, scope: !12726)
!12728 = !DILocation(line: 3316, column: 30, scope: !12726)
!12729 = !DILocation(line: 3316, column: 22, scope: !12726)
!12730 = !DILocation(line: 3317, column: 5, scope: !12726)
!12731 = !DILocation(line: 3315, column: 40, scope: !12732)
!12732 = !DILexicalBlockFile(scope: !12719, file: !939, discriminator: 2)
!12733 = !DILocation(line: 3315, column: 5, scope: !12732)
!12734 = distinct !{!12734, !12735}
!12735 = !DILocation(line: 3315, column: 5, scope: !12586)
!12736 = !DILocation(line: 3319, column: 12, scope: !12586)
!12737 = !DILocation(line: 3319, column: 5, scope: !12586)
!12738 = !DILocation(line: 3320, column: 1, scope: !12586)
!12739 = distinct !DISubprogram(name: "mxf_absolute_bodysid_offset", scope: !939, file: !939, line: 1495, type: !12740, isLocal: true, isDefinition: true, scopeLine: 1496, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!12740 = !DISubroutineType(types: !12741)
!12741 = !{!1014, !2594, !1014, !1015, !1382, !12292}
!12742 = !DILocalVariable(name: "mxf", arg: 1, scope: !12739, file: !939, line: 1495, type: !2594)
!12743 = !DILocation(line: 1495, column: 52, scope: !12739)
!12744 = !DILocalVariable(name: "body_sid", arg: 2, scope: !12739, file: !939, line: 1495, type: !1014)
!12745 = !DILocation(line: 1495, column: 61, scope: !12739)
!12746 = !DILocalVariable(name: "offset", arg: 3, scope: !12739, file: !939, line: 1495, type: !1015)
!12747 = !DILocation(line: 1495, column: 79, scope: !12739)
!12748 = !DILocalVariable(name: "offset_out", arg: 4, scope: !12739, file: !939, line: 1495, type: !1382)
!12749 = !DILocation(line: 1495, column: 96, scope: !12739)
!12750 = !DILocalVariable(name: "partition_out", arg: 5, scope: !12739, file: !939, line: 1495, type: !12292)
!12751 = !DILocation(line: 1495, column: 123, scope: !12739)
!12752 = !DILocalVariable(name: "last_p", scope: !12739, file: !939, line: 1497, type: !2600)
!12753 = !DILocation(line: 1497, column: 19, scope: !12739)
!12754 = !DILocalVariable(name: "a", scope: !12739, file: !939, line: 1498, type: !1014)
!12755 = !DILocation(line: 1498, column: 9, scope: !12739)
!12756 = !DILocalVariable(name: "b", scope: !12739, file: !939, line: 1498, type: !1014)
!12757 = !DILocation(line: 1498, column: 12, scope: !12739)
!12758 = !DILocalVariable(name: "m", scope: !12739, file: !939, line: 1498, type: !1014)
!12759 = !DILocation(line: 1498, column: 15, scope: !12739)
!12760 = !DILocalVariable(name: "m0", scope: !12739, file: !939, line: 1498, type: !1014)
!12761 = !DILocation(line: 1498, column: 18, scope: !12739)
!12762 = !DILocation(line: 1500, column: 9, scope: !12763)
!12763 = distinct !DILexicalBlock(scope: !12739, file: !939, line: 1500, column: 9)
!12764 = !DILocation(line: 1500, column: 16, scope: !12763)
!12765 = !DILocation(line: 1500, column: 9, scope: !12739)
!12766 = !DILocation(line: 1501, column: 9, scope: !12763)
!12767 = !DILocation(line: 1503, column: 7, scope: !12739)
!12768 = !DILocation(line: 1504, column: 9, scope: !12739)
!12769 = !DILocation(line: 1504, column: 14, scope: !12739)
!12770 = !DILocation(line: 1504, column: 7, scope: !12739)
!12771 = !DILocation(line: 1506, column: 5, scope: !12739)
!12772 = !DILocation(line: 1506, column: 12, scope: !12773)
!12773 = !DILexicalBlockFile(scope: !12739, file: !939, discriminator: 1)
!12774 = !DILocation(line: 1506, column: 16, scope: !12773)
!12775 = !DILocation(line: 1506, column: 14, scope: !12773)
!12776 = !DILocation(line: 1506, column: 18, scope: !12773)
!12777 = !DILocation(line: 1506, column: 5, scope: !12773)
!12778 = !DILocation(line: 1507, column: 19, scope: !12779)
!12779 = distinct !DILexicalBlock(scope: !12739, file: !939, line: 1506, column: 23)
!12780 = !DILocation(line: 1507, column: 23, scope: !12779)
!12781 = !DILocation(line: 1507, column: 21, scope: !12779)
!12782 = !DILocation(line: 1507, column: 26, scope: !12779)
!12783 = !DILocation(line: 1507, column: 16, scope: !12779)
!12784 = !DILocation(line: 1507, column: 12, scope: !12779)
!12785 = !DILocation(line: 1509, column: 9, scope: !12779)
!12786 = !DILocation(line: 1509, column: 16, scope: !12787)
!12787 = !DILexicalBlockFile(scope: !12779, file: !939, discriminator: 1)
!12788 = !DILocation(line: 1509, column: 20, scope: !12787)
!12789 = !DILocation(line: 1509, column: 18, scope: !12787)
!12790 = !DILocation(line: 1509, column: 22, scope: !12787)
!12791 = !DILocation(line: 1509, column: 41, scope: !12792)
!12792 = !DILexicalBlockFile(scope: !12779, file: !939, discriminator: 2)
!12793 = !DILocation(line: 1509, column: 25, scope: !12792)
!12794 = !DILocation(line: 1509, column: 30, scope: !12792)
!12795 = !DILocation(line: 1509, column: 44, scope: !12792)
!12796 = !DILocation(line: 1509, column: 56, scope: !12792)
!12797 = !DILocation(line: 1509, column: 53, scope: !12792)
!12798 = !DILocation(line: 1509, column: 9, scope: !12799)
!12799 = !DILexicalBlockFile(scope: !12779, file: !939, discriminator: 3)
!12800 = !DILocation(line: 1510, column: 14, scope: !12779)
!12801 = !DILocation(line: 1509, column: 9, scope: !12802)
!12802 = !DILexicalBlockFile(scope: !12779, file: !939, discriminator: 4)
!12803 = distinct !{!12803, !12785}
!12804 = !DILocation(line: 1512, column: 13, scope: !12805)
!12805 = distinct !DILexicalBlock(scope: !12779, file: !939, line: 1512, column: 13)
!12806 = !DILocation(line: 1512, column: 17, scope: !12805)
!12807 = !DILocation(line: 1512, column: 15, scope: !12805)
!12808 = !DILocation(line: 1512, column: 19, scope: !12805)
!12809 = !DILocation(line: 1512, column: 38, scope: !12810)
!12810 = !DILexicalBlockFile(scope: !12805, file: !939, discriminator: 1)
!12811 = !DILocation(line: 1512, column: 22, scope: !12810)
!12812 = !DILocation(line: 1512, column: 27, scope: !12810)
!12813 = !DILocation(line: 1512, column: 41, scope: !12810)
!12814 = !DILocation(line: 1512, column: 56, scope: !12810)
!12815 = !DILocation(line: 1512, column: 53, scope: !12810)
!12816 = !DILocation(line: 1512, column: 13, scope: !12810)
!12817 = !DILocation(line: 1513, column: 17, scope: !12805)
!12818 = !DILocation(line: 1513, column: 15, scope: !12805)
!12819 = !DILocation(line: 1513, column: 13, scope: !12805)
!12820 = !DILocation(line: 1515, column: 17, scope: !12805)
!12821 = !DILocation(line: 1515, column: 15, scope: !12805)
!12822 = !DILocation(line: 1506, column: 5, scope: !12823)
!12823 = !DILexicalBlockFile(scope: !12739, file: !939, discriminator: 2)
!12824 = distinct !{!12824, !12771}
!12825 = !DILocation(line: 1518, column: 9, scope: !12826)
!12826 = distinct !DILexicalBlock(scope: !12739, file: !939, line: 1518, column: 9)
!12827 = !DILocation(line: 1518, column: 11, scope: !12826)
!12828 = !DILocation(line: 1518, column: 9, scope: !12739)
!12829 = !DILocation(line: 1519, column: 35, scope: !12826)
!12830 = !DILocation(line: 1519, column: 19, scope: !12826)
!12831 = !DILocation(line: 1519, column: 24, scope: !12826)
!12832 = !DILocation(line: 1519, column: 16, scope: !12826)
!12833 = !DILocation(line: 1519, column: 9, scope: !12826)
!12834 = !DILocation(line: 1521, column: 9, scope: !12835)
!12835 = distinct !DILexicalBlock(scope: !12739, file: !939, line: 1521, column: 9)
!12836 = !DILocation(line: 1521, column: 16, scope: !12835)
!12837 = !DILocation(line: 1521, column: 21, scope: !12838)
!12838 = !DILexicalBlockFile(scope: !12835, file: !939, discriminator: 1)
!12839 = !DILocation(line: 1521, column: 29, scope: !12838)
!12840 = !DILocation(line: 1521, column: 44, scope: !12838)
!12841 = !DILocation(line: 1521, column: 47, scope: !12842)
!12842 = !DILexicalBlockFile(scope: !12835, file: !939, discriminator: 2)
!12843 = !DILocation(line: 1521, column: 55, scope: !12842)
!12844 = !DILocation(line: 1521, column: 73, scope: !12842)
!12845 = !DILocation(line: 1521, column: 82, scope: !12842)
!12846 = !DILocation(line: 1521, column: 90, scope: !12842)
!12847 = !DILocation(line: 1521, column: 80, scope: !12842)
!12848 = !DILocation(line: 1521, column: 70, scope: !12842)
!12849 = !DILocation(line: 1521, column: 9, scope: !12842)
!12850 = !DILocation(line: 1522, column: 23, scope: !12851)
!12851 = distinct !DILexicalBlock(scope: !12835, file: !939, line: 1521, column: 105)
!12852 = !DILocation(line: 1522, column: 31, scope: !12851)
!12853 = !DILocation(line: 1522, column: 49, scope: !12851)
!12854 = !DILocation(line: 1522, column: 58, scope: !12851)
!12855 = !DILocation(line: 1522, column: 66, scope: !12851)
!12856 = !DILocation(line: 1522, column: 56, scope: !12851)
!12857 = !DILocation(line: 1522, column: 46, scope: !12851)
!12858 = !DILocation(line: 1522, column: 10, scope: !12851)
!12859 = !DILocation(line: 1522, column: 21, scope: !12851)
!12860 = !DILocation(line: 1523, column: 13, scope: !12861)
!12861 = distinct !DILexicalBlock(scope: !12851, file: !939, line: 1523, column: 13)
!12862 = !DILocation(line: 1523, column: 13, scope: !12851)
!12863 = !DILocation(line: 1524, column: 30, scope: !12861)
!12864 = !DILocation(line: 1524, column: 14, scope: !12861)
!12865 = !DILocation(line: 1524, column: 28, scope: !12861)
!12866 = !DILocation(line: 1524, column: 13, scope: !12861)
!12867 = !DILocation(line: 1525, column: 9, scope: !12851)
!12868 = !DILocation(line: 1528, column: 12, scope: !12739)
!12869 = !DILocation(line: 1528, column: 17, scope: !12739)
!12870 = !DILocation(line: 1530, column: 12, scope: !12739)
!12871 = !DILocation(line: 1530, column: 20, scope: !12739)
!12872 = !DILocation(line: 1528, column: 5, scope: !12739)
!12873 = !DILocation(line: 1532, column: 5, scope: !12739)
!12874 = !DILocation(line: 1533, column: 1, scope: !12739)
!12875 = distinct !DISubprogram(name: "mxf_set_audio_pts", scope: !939, file: !939, line: 3365, type: !12876, isLocal: true, isDefinition: true, scopeLine: 3367, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2505)
!12876 = !DISubroutineType(types: !12877)
!12877 = !{!1014, !2594, !2006, !1335}
!12878 = !DILocation(line: 159, column: 77, scope: !3577, inlinedAt: !12879)
!12879 = distinct !DILocation(line: 3380, column: 114, scope: !12880)
!12880 = distinct !DILexicalBlock(scope: !12875, file: !939, line: 3377, column: 10)
!12881 = !DILocation(line: 161, column: 16, scope: !3577, inlinedAt: !12879)
!12882 = !DILocalVariable(name: "mxf", arg: 1, scope: !12875, file: !939, line: 3365, type: !2594)
!12883 = !DILocation(line: 3365, column: 42, scope: !12875)
!12884 = !DILocalVariable(name: "par", arg: 2, scope: !12875, file: !939, line: 3365, type: !2006)
!12885 = !DILocation(line: 3365, column: 66, scope: !12875)
!12886 = !DILocalVariable(name: "pkt", arg: 3, scope: !12875, file: !939, line: 3366, type: !1335)
!12887 = !DILocation(line: 3366, column: 40, scope: !12875)
!12888 = !DILocalVariable(name: "st", scope: !12875, file: !939, line: 3368, type: !1569)
!12889 = !DILocation(line: 3368, column: 15, scope: !12875)
!12890 = !DILocation(line: 3368, column: 37, scope: !12875)
!12891 = !DILocation(line: 3368, column: 42, scope: !12875)
!12892 = !DILocation(line: 3368, column: 20, scope: !12875)
!12893 = !DILocation(line: 3368, column: 25, scope: !12875)
!12894 = !DILocation(line: 3368, column: 29, scope: !12875)
!12895 = !DILocalVariable(name: "track", scope: !12875, file: !939, line: 3369, type: !1108)
!12896 = !DILocation(line: 3369, column: 15, scope: !12875)
!12897 = !DILocation(line: 3369, column: 23, scope: !12875)
!12898 = !DILocation(line: 3369, column: 27, scope: !12875)
!12899 = !DILocalVariable(name: "bits_per_sample", scope: !12875, file: !939, line: 3370, type: !1015)
!12900 = !DILocation(line: 3370, column: 13, scope: !12875)
!12901 = !DILocation(line: 3370, column: 31, scope: !12875)
!12902 = !DILocation(line: 3370, column: 36, scope: !12875)
!12903 = !DILocation(line: 3372, column: 10, scope: !12904)
!12904 = distinct !DILexicalBlock(scope: !12875, file: !939, line: 3372, column: 9)
!12905 = !DILocation(line: 3372, column: 9, scope: !12875)
!12906 = !DILocation(line: 3373, column: 50, scope: !12904)
!12907 = !DILocation(line: 3373, column: 55, scope: !12904)
!12908 = !DILocation(line: 3373, column: 27, scope: !12904)
!12909 = !DILocation(line: 3373, column: 25, scope: !12904)
!12910 = !DILocation(line: 3373, column: 9, scope: !12904)
!12911 = !DILocation(line: 3375, column: 16, scope: !12875)
!12912 = !DILocation(line: 3375, column: 23, scope: !12875)
!12913 = !DILocation(line: 3375, column: 5, scope: !12875)
!12914 = !DILocation(line: 3375, column: 10, scope: !12875)
!12915 = !DILocation(line: 3375, column: 14, scope: !12875)
!12916 = !DILocation(line: 3377, column: 10, scope: !12880)
!12917 = !DILocation(line: 3377, column: 15, scope: !12880)
!12918 = !DILocation(line: 3377, column: 24, scope: !12880)
!12919 = !DILocation(line: 3378, column: 9, scope: !12880)
!12920 = !DILocation(line: 3378, column: 12, scope: !12921)
!12921 = !DILexicalBlockFile(scope: !12880, file: !939, discriminator: 1)
!12922 = !DILocation(line: 3378, column: 28, scope: !12921)
!12923 = !DILocation(line: 3379, column: 9, scope: !12880)
!12924 = !DILocation(line: 3379, column: 12, scope: !12921)
!12925 = !DILocation(line: 3379, column: 17, scope: !12921)
!12926 = !DILocation(line: 3379, column: 37, scope: !12921)
!12927 = !DILocation(line: 3379, column: 26, scope: !12921)
!12928 = !DILocation(line: 3379, column: 53, scope: !12921)
!12929 = !DILocation(line: 3377, column: 10, scope: !12930)
!12930 = !DILexicalBlockFile(scope: !12875, file: !939, discriminator: 1)
!12931 = !DILocation(line: 3380, column: 56, scope: !12880)
!12932 = !DILocation(line: 3380, column: 61, scope: !12880)
!12933 = !DILocation(line: 3380, column: 78, scope: !12880)
!12934 = !DILocation(line: 3380, column: 85, scope: !12880)
!12935 = !DILocation(line: 3380, column: 99, scope: !12880)
!12936 = !DILocation(line: 3380, column: 103, scope: !12880)
!12937 = !DILocation(line: 3380, column: 123, scope: !12880)
!12938 = !DILocation(line: 3380, column: 130, scope: !12880)
!12939 = !DILocation(line: 3380, column: 114, scope: !12880)
!12940 = !DILocation(line: 161, column: 20, scope: !3577, inlinedAt: !12879)
!12941 = !DILocation(line: 161, column: 24, scope: !3577, inlinedAt: !12879)
!12942 = !DILocation(line: 161, column: 31, scope: !3577, inlinedAt: !12879)
!12943 = !DILocation(line: 162, column: 12, scope: !3577, inlinedAt: !12879)
!12944 = !DILocation(line: 162, column: 5, scope: !3577, inlinedAt: !12879)
!12945 = !DILocation(line: 3380, column: 65, scope: !12880)
!12946 = !DILocation(line: 3380, column: 65, scope: !12921)
!12947 = !DILocation(line: 3380, column: 142, scope: !12880)
!12948 = !DILocation(line: 3380, column: 31, scope: !12949)
!12949 = !DILexicalBlockFile(scope: !12880, file: !939, discriminator: 2)
!12950 = !DILocation(line: 3380, column: 9, scope: !12880)
!12951 = !DILocation(line: 3380, column: 16, scope: !12880)
!12952 = !DILocation(line: 3380, column: 29, scope: !12880)
!12953 = !DILocation(line: 3382, column: 32, scope: !12880)
!12954 = !DILocation(line: 3382, column: 37, scope: !12880)
!12955 = !DILocation(line: 3382, column: 45, scope: !12880)
!12956 = !DILocation(line: 3382, column: 50, scope: !12880)
!12957 = !DILocation(line: 3382, column: 70, scope: !12880)
!12958 = !DILocation(line: 3382, column: 59, scope: !12880)
!12959 = !DILocation(line: 3382, column: 86, scope: !12880)
!12960 = !DILocation(line: 3382, column: 42, scope: !12880)
!12961 = !DILocation(line: 3382, column: 9, scope: !12880)
!12962 = !DILocation(line: 3382, column: 16, scope: !12880)
!12963 = !DILocation(line: 3382, column: 29, scope: !12880)
!12964 = !DILocation(line: 3384, column: 5, scope: !12875)
